SVTM     TITLE 'ISTINCF3 - INIT(SELF) REQUEST PROCESSOR                *
                        '
ISTINCF3 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTINCF3  75.136'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*CF3NCSPL=CF3R1;                                                   0551
         LR    CF3NCSPL,CF3R1                                      0551
*  DO;                                                             0552
*/***  CRRMAINT  PROCNM(ISTINCF3)COMP(VY)FUNC(SUB)RPHADD((NCSPLRPH))  *
**/                                                                0553
*                                                                  0553
*/* ATBUILD (ISTRPH,ISTCRA,ISTPFCRR,ISTVYCRR)  */                  0553
*  RFY ISTLCCW ;                                                   0553
*  RFY ISTLCPB ;                                                   0554
*  RFY ISTZSAVE;                                                   0555
*  RFY ISTPFCRR;                                                   0556
*  RFY ISTCFCRR;                                                   0557
*  RFY ISTZCRR ;                                                   0558
*  RFY ISTASCRR;                                                   0559
*  RFY ISTAPCRR;                                                   0560
*  RFY ISTCRA  ;                                                   0561
*  RFY ISTCNSTA;                                                   0562
*  RFY ISTVYCRR;                                                   0563
*/* END OF ATBUILD */                                              0564
*  /*** SET ENTERED BIT FOR THIS PROCEDURE ***/                    0564
*NCSPLRPH->RPHCRR->CRACRR->NINCF3 = '1'B;                          0564
         L     @11,NCSPLRPH(,CF3NCSPL)                             0564
         L     @11,RPHCRR(,@11)                                    0564
         L     @11,CRACRR(,@11)                                    0564
         OI    NINCF3(@11),B'01000000'                             0564
*  /*** CLEAR AND SET CURRENT PROCEDURE BIT ***/                   0565
*NCSPLRPH->RPHCRR->CRACRR->VYCCRT = '0'B;                          0565
         XC    VYCCRT+1(11,@11),VYCCRT+1(@11)                      0565
         MVI   VYCCRT(@11),B'00000000'                             0565
*NCSPLRPH->RPHCRR->CRACRR->CINCF3 = '1'B;                          0566
         OI    CINCF3(@11),B'01000000'                             0566
*  END;                                                            0567
*GEN REFS(CF3WKA) (USING @DATD,CF3WKA);                            0568
         USING @DATD,CF3WKA
*/********************************************************************/
*/*                                                                  */
*/*          DO HOUSEKEEPING FOR LINKAGE AND WORK AREA               */
*/*                                                                  */
*/********************************************************************/
*  /*SEGMENT(CF3HKEP)REQUEST*/DO;GOTO CF3HKEP;CF3HKEP#:END;        0569
         B     CF3HKEP                                             0570
CF3HKEP# DS    0H                                                  0572
*CF3RDTP=NCSPLRPT;                                                 0572
         L     @11,NCSPLRPT(,CF3NCSPL)                             0572
         ST    @11,CF3RDTP                                         0572
*RFY CF3R1 UNRSTD;                                                 0573
*/********************************************************************/
*/*                                                                  */
*/*                FORMAT RPL FOR INTERPRET REQUEST                  */
*/*                                                                  */
*/********************************************************************/
*CF3RU=ADDR(NCSRUITS);                                             0574
         L     @07,NCSPLFSB(,CF3NCSPL)                             0574
         LA    @07,NCSRUITS(,@07)                                  0574
         ST    @07,CF3RU                                           0574
*IF MGLCMPAT = CF3ON×                   /* LOGON COMPATIBILITY       */
*   CF3RDTP->RCPINTA = CF30             /* OR NO INT TABLE   @D32CKLB*/
* THEN;                                                    /*@D32CKLB*/
         L     @07,NCSMGLPT(,CF3NCSPL)                             0575
         TM    MGLCMPAT(@07),B'01000000'                           0575
         BO    @RT00575                                            0575
         L     @11,RCPINTA(,@11)                                   0575
         LTR   @11,@11                                             0575
         BZ    @RT00575                                            0575
*ELSE DO;                                                  /*@D32CKLB*/
*  /*SEGMENT(CF3BRPL)REQUEST*/DO;GOTO CF3BRPL;CF3BRPL#:END;        0578
         B     CF3BRPL                                             0579
CF3BRPL# DS    0H                                                  0581
*RFY (CF3R1,CF3R2) RSTD;                                           0581
*CF3R2=CF3RPL;                                                     0582
         LR    CF3R2,CF3RPL                                        0582
*CF3R1=NCSPLRPH;                                                   0583
         L     CF3R1,NCSPLRPH(,CF3NCSPL)                           0583
*/********************************************************************/
*/*                                                                  */
*/*             TPQUE INTERPRET REQUEST                              */
*/*             TPWAIT FOR INTERPRET TO COMPLETE                     */
*/*                                                                  */
*/********************************************************************/
*RFY (ISTRPRE,ISTRCC) BASED(CF3RDTP);                              0584
*/*  TPQUE (CF3R2,FMCDEBA->ACDSSPAB) NORM */                       0585
*                                                                  0585
*  DO;                                                             0585
*  RFY (GPR00P,GPR01P,GPR04P,GPR05P,GPR15P) RSTD;                  0586
*  GEN REFS(GPR01P) SETS(RPHWORK)                                  0587
*        (STM GPR02P,GPR08P,RPHWORK(GPR01P));                      0587
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*  GPR00P=0;                                                       0588
         SLR   GPR00P,GPR00P                                       0588
*  GPR15P=ADDR(FMCDEBA->ACDSSPAB); /*HOLD PAB PTR*/                0589
         L     @11,NCSUFMCB(,CF3NCSPL)                             0589
         L     GPR15P,FMCDEBA(,@11)                                0589
         LA    GPR15P,ACDSSPAB(,GPR15P)                            0589
*  GPR04P=CF3R2; /*WORK ELE PTR*/                                  0590
         LR    GPR04P,CF3R2                                        0590
*  GPR05P=GPR15P; /*PASS PAB PTR*/                                 0591
         LR    GPR05P,GPR15P                                       0591
*  CALL ATCLCPTR->ATCAP37->ISTAPC37;                               0592
         L     @11,ATCLCPTR                                        0592
         L     @15,ATCAP37(,@11)                                   0592
         BALR  @14,@15                                             0592
*  GEN(NOPR  0)NOSETS NOREFS;                                      0593
         NOPR  0
*  RFY (GPR00P,GPR01P,GPR04P,GPR05P,GPR15P) UNRSTD;                0594
*  END; /**** END OF TPQUE GENERATION ****/                        0595
*CF3R1=NCSPLRPH;                                                   0596
         L     CF3R1,NCSPLRPH(,CF3NCSPL)                           0596
*/*  TPWAIT   */                                                   0597
* DO; /* BEGIN TPWAIT GENERATION*/                                 0597
* RFY (GPR01P,GPR14P,GPR15P) RSTD;                                 0598
* RFY (GPR00P) RSTD;                                               0599
* GEN (STM   GPR00P,GPR15P,RPHWORK(GPR01P))                        0600
* REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);                        0600
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
* RFY (GPR00P) UNRSTD;                                             0601
* GPR15P=ADDR(LHAA0019);                                           0602
         LA    GPR15P,LHAA0019                                     0602
* GPR14P=0;                                                        0603
         SLR   GPR14P,GPR14P                                       0603
* GPR15P=GPR15P & '00FFFFFF'X;                                     0604
         N     GPR15P,@CF04131                                     0604
* GPR15P=GPR15P × RPHWT1;                                          0605
         O     GPR15P,@CF02040                                     0605
* CS (GPR14P,GPR15P,GPR01P->RPHRESMA);                             0606
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0606
* BC (7,LHAB0019);                                                 0607
*                                                                  0607
         BC    7,LHAB0019                                          0607
*/* TPEXIT  NONE */                                                0608
* DO;                                                              0608
*   RESPECIFY GPR15P RSTD;                                         0609
*                                                                  0609
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)  */                         0610
*/* END OF ATBUILD */                                              0610
*                                                                  0610
* DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                    0610
*   GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                    0611
         L     GPR15P,ATCLCPTR                                     0611
* END; /*LISATCVT*/                                                0612
*   RESPECIFY GPR00F RSTD;                                         0613
*   GPR00F=0;     /*SET PARAMETER REGISTER TO 0*/                  0614
         SLR   GPR00F,GPR00F                                       0614
*   GPR15P=GPR15P->ATCAP31;                                        0615
         L     GPR15P,ATCAP31(,GPR15P)                             0615
*   DCL FMZL0024 BASED(GPR15P) LABEL VALUERANGE(*);                0616
*   CALL FMZL0024;                                                 0617
         BALR  @14,@15                                             0617
*   RESPECIFY (GPR00F,GPR15P) UNRSTD;                              0618
* END; /***** END OF TPEXIT  *****/                                0619
*LHAB0019:;                                                        0620
LHAB0019 DS    0H                                                  0621
* GPR01P->RPHRESMA = 0;                                            0621
         SLR   @11,@11                                             0621
         ST    @11,RPHRESMA(,GPR01P)                               0621
* RFY (GPR00P) RSTD;                                               0622
*LHAA0019:;                                                        0623
LHAA0019 DS    0H                                                  0624
* GEN (LM    GPR00P,GPR15P,RPHWORK(GPR01P))                        0624
* REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);                        0624
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
* RFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;                        0625
* END; /*****END OF TPWAIT *****/                                  0626
*RFY (CF3R1,CF3R2) UNRSTD;                                         0627
*       CF3NXTAV=CF3RPL;                                           0628
         L     @11,NCSPLWKA(,CF3NCSPL)                             0628
         ST    CF3RPL,CF3NXTAV(,@11)                               0628
*END;                                   /*                   @D32CKLB*/
*       CALL INCF3SB1;              /* CONTINUE              @D32CKLB*/
@RT00575 BAL   @14,INCF3SB1                                        0630
*  /*******************************************************************
*  /*                                                                 *
*  /*   CHECK SUCCESSFUL LOGON                                        *
*  /*                                                                 *
*  /*******************************************************************
*  IF CF3SUCC=CF3ON                 /* SUCCESS                        *
*    THEN;                                                         0631
         TM    CF3SUCC,B'10000000'                                 0631
         BO    @RT00631                                            0631
*    ELSE  /*SEGMENT(CF3FAIL)REQUEST*/DO;GOTO CF3FAIL;CF3FAIL#:END;/* E
*SE FAILURE          @D32CKLB*/                                    0633
         B     CF3FAIL                                             0634
CF3FAIL# DS    0H                                                  0636
*  NCSPLWKA->CF3NXTAV=CF3WKA;                                      0636
@RT00631 L     @11,NCSPLWKA(,CF3NCSPL)                             0636
         ST    CF3WKA,CF3NXTAV(,@11)                               0636
*  CF3R13=CF3R13->CF3BKPTR;                                        0637
         L     CF3R13,CF3BKPTR(,CF3R13)                            0637
*  RETURN;                                                         0638
@EL00001 DS    0H                                                  0638
@EF00001 DS    0H                                                  0638
@ER00001 LM    @14,@12,12(@13)                                     0638
         BR    @14                                                 0638
*/********************************************************************/
*/*                      END OF MAINLINE                             */
*/********************************************************************/
*  /*SEGMENT(CF3HKEP)START*/DO;GOTO CF3HKEP@;CF3HKEP:END;          0639
CF3HKEP  DS    0H                                                  0642
*/********************************************************************/
*/*   HOUSEKEEPING                                                   */
*/*   INPUT: R13 HAS THE ADDR OF THE NEXT AVAILABLE SAVE AREA WHICH  */
*/*           IS AT THE END OF THE NCSPL WORK AREA AND IS ALLOCATED  */
*/*           FROM BOTTOM TO TOP                                     */
*/*          CF3NXTAV HAS THE ADDR OF THE NEXT AVAILABLE WORK SPACE  */
*/*           WHICH IS AT THE TOP OF THE NCSPL WORK AREA AND IS      */
*/*           ALLOCATED TOP TO BOTTOM                                */
*/*                                                                  */
*/*  OUTPUT: R13 HAS UPDATED ADDR OF NEXT AVAILABLE SAVE AREA        */
*/*          CF3NXTAV HAS UPDATED ADDR OF NEXT AVAILABLE WORK SPACE  */
*/*                                                                  */
*/********************************************************************/
*/********************************************************************/
*/*   SAVE AREA -                                                    */
*/*     DO STANDARD LINKAGE USING NEXT AVAILABLE SAVE AREA           */
*/*     UPDATE NEXT AVAILABLE SAVE AREA ACCORDING TO NCSPL WORK AREA */
*/*      ALLOCATION RULES                                            */
*/********************************************************************/
*RFY CF3R2 RSTD;                                                   0642
*CF3R2=CF3R13;                                                     0643
         LR    CF3R2,CF3R13                                        0643
*CF3R13=CF3R13-LENGTH(CF3SVMAP);                                   0644
         SL    CF3R13,@CF01429                                     0644
*CF3R2->CF3FWPTR=CF3R13;                                           0645
         ST    CF3R13,CF3FWPTR(,CF3R2)                             0645
*CF3R13->CF3BKPTR=CF3R2;                                           0646
         ST    CF3R2,CF3BKPTR(,CF3R13)                             0646
*RFY CF3R2 UNRSTD;                                                 0647
*CF3R13->CF3FWPTR=CF30;                                            0648
         SLR   @11,@11                                             0648
         ST    @11,CF3FWPTR(,CF3R13)                               0648
*/********************************************************************/
*/*   WORK SPACE                                                     */
*/*     SET BASE FOR WORK SPACE FROM NEXT AVAILABLE POINTER WHICH IS */
*/*      THE FIRST WORD OF THE NCSPL WORK AREA                       */
*/*     CLEAR WORK SPACE                                             */
*/*     ESTABLISH BASE FOR DYNAMIC AREA (FOLLOWS CF3 WORK SPACE)     */
*/*     UPDATE 'NEXT AVAILABLE POINTER' IN THE NCSPL WORK AREA TO    */
*/*      TO POINT TO THE AVAILABLE SPACE FOLLOWING THE ISTINCF3 WORK */
*/*      SPACE                                                       */
*/********************************************************************/
*CF3WKA=NCSPLWKA->CF3NXTAV;                                        0649
         L     @07,NCSPLWKA(,CF3NCSPL)                             0649
         L     CF3WKA,CF3NXTAV(,@07)                               0649
*CF3WKMPO=CF3WKMPO&&CF3WKMPO;                                      0650
         XC    CF3WKMPO(72),CF3WKMPO                               0650
*CF3NXTAV=CF3WKA+@SIZDATD;                                         0651
         LR    @11,CF3WKA                                          0651
         AL    @11,@SIZDATD                                        0651
         ST    @11,CF3NXTAV(,@07)                                  0651
*CF3NXTAV=((CF3NXTAV+CF37)/CF38)*CF38;                             0652
         LR    @02,@11                                             0652
         AL    @02,@CF00176                                        0652
         SRDA  @02,32                                              0652
         D     @02,@CF00039                                        0652
         SLA   @03,3                                               0652
         ST    @03,CF3NXTAV(,@07)                                  0652
*  /*SEGMENT(CF3HKEP)FINISH*/DO;GOTO CF3HKEP#;CF3HKEP@:END;        0653
         B     CF3HKEP#                                            0654
CF3HKEP@ DS    0H                                                  0656
*  /*SEGMENT(CF3BRPL)START*/DO;GOTO CF3BRPL@;CF3BRPL:END;          0656
         B     CF3BRPL@                                            0657
CF3BRPL  DS    0H                                                  0659
*/********************************************************************/
*/* CLEAR SPACE FOR RPL                                              */
*/* INITIALIZE FIELDS FOR INTERPRET REQUEST                          */
*/*                                                                  */
*/********************************************************************/
*  CF3RPL=CF3NXTAV;                    /* GET RPL OUT OF WORK AREA   */
         L     @11,NCSPLWKA(,CF3NCSPL)                             0659
         L     @07,CF3NXTAV(,@11)                                  0659
         LR    CF3RPL,@07                                          0659
*  CF3NXTAV=CF3NXTAV+LENGTH(ISTRPL);   /* UPDATE NEXT AVAILABLE      */
         AL    @07,@CF05417                                        0660
         ST    @07,CF3NXTAV(,@11)                                  0660
*  ISTRPL=ISTRPL&&ISTRPL;              /* CLEAR RPL SPACE    @XM00130*/
         XC    ISTRPL(112,CF3RPL),ISTRPL(CF3RPL)                   0661
*  RPLID='00'X;                         /* CB ID   -                  *
         MVI   RPLID(CF3RPL),X'00'                                 0662
*  RPLLEN2=LENGTH(ISTRPL);             /* CB LENGTH          @XM00130*/
         MVI   RPLLEN2(CF3RPL),X'70'                               0663
*  RPLARG=NCSPLCID;                    /* CID                        */
         L     @11,NCSPLCID(,CF3NCSPL)                             0664
         ST    @11,RPLARG(,CF3RPL)                                 0664
*  RPLAREA=ADDR(REQNAME);              /* ADDR OF RESOURCE 2 FIELD   */
         L     @11,CF3RU                                           0665
         LA    @07,REQNAME(,@11)                                   0665
         ST    @07,RPLAREA(,CF3RPL)                                0665
*                                      /* TO BE INTERPRETED          */
*  RPLREQ='1B'X;                       /* REQUEST ID                 */
         MVI   RPLREQ(CF3RPL),X'1B'                                0666
*  RPLNIB=CF3OFF;                      /* INDICATE THAT INTERPRET    */
         NI    RPLNIB(CF3RPL),B'11111011'                          0667
*                                      /* SHOULD USE CID             */
*  RPLAAREA=ADDR(CF3RPLX);             /* OUTPUT ADDR                */
         LA    @07,CF3RPLX                                         0668
         ST    @07,RPLAAREA(,CF3RPL)                               0668
*  RPLECB=NCSPLRPH;                    /* OWN RPH TO BE POSTED       */
         L     @07,NCSPLRPH(,CF3NCSPL)                             0669
         ST    @07,RPLECB(,CF3RPL)                                 0669
*  RPLTPOST=CF3ON;                     /* POST                       */
         OI    RPLTPOST(CF3RPL),B'00001000'                        0670
*  RPLAARLN=CF38;                      /* LENGTH OF RPLAREA          */
         MVC   RPLAARLN(4,CF3RPL),@CF00039                         0671
*  RPLRLEN=REQLEN2;                    /* LEN OF RESOURCE 2          */
         SLR   @07,@07                                             0672
         IC    @07,REQLEN2(,@11)                                   0672
         ST    @07,RPLRLEN(,CF3RPL)                                0672
*  /*SEGMENT(CF3BRPL)FINISH*/DO;GOTO CF3BRPL#;CF3BRPL@:END;        0673
         B     CF3BRPL#                                            0674
*/********************************************************************/
*/*     INCF3SB1: VERIFY APPL ENTRY                                  */
*/*      INPUT: CF3RPLX HAS 8 CHAR APPLICATION NAME          @D32CKLB*/
*/*             OR IS ALL 0 IF INTERPRET NOT DONE            @D32CKLB*/
*/*             BY ISTINCF3 (WAS DONE EARLIER BY             @D32CKLB*/
*/*             COMPATIBLE LOGON PROCESSING) OR              @D32CKLB*/
*/*             IF INTERPRET FAILED                          @D32CKLB*/
*/*                                                                  */
*/********************************************************************/
* INCF3SB1: PROC OPTIONS (NOSAVE,NOSAVEAREA);                      0676
         B     @PB00002                                            0676
INCF3SB1 DS    0H                                                  0677
* CF3SAV1=CF3R14;                                                  0677
         ST    CF3R14,CF3SAV1                                      0677
* RFY CF3R15 RSTD;                                         /*@D32CKLB*/
* IF CF3RPLX = CF3NONAM                 /* APPL NAME 0       @D32CKLB*/
*    &(REQLEN2>CF38 × REQLEN2=CF30)     /* APPLID LENGTH BAD @D32CKLB*/
*                                       /* FOR SRT FIND      @D32CKLB*/
*   THEN CF3R15 = CF34;                 /* CAUSE FAILURE     @D32CKLB*/
         CLC   CF3RPLX(8),@CB04101                                 0679
         BNE   @RF00679                                            0679
         L     @11,CF3RU                                           0679
         CLI   REQLEN2(@11),8                                      0679
         BH    @RT00679                                            0679
         CLI   REQLEN2(@11),0                                      0679
         BNE   @RF00679                                            0679
@RT00679 DS    0H                                                  0680
         LA    CF3R15,4                                            0680
* ELSE DO;                              /* ELSE CONTINUE     @D32CKLB*/
         B     @RC00679                                            0681
@RF00679 DS    0H                                                  0682
* IF CF3RPLX =  CF3NONAM                /*                   @D32CKLB*/
*  THEN CF3RPLX = REQNAME(1:REQLEN2);   /* APPLID FROM RU    @D32CKLB*/
         CLC   CF3RPLX(8),@CB04101                                 0682
         BNE   @RF00682                                            0682
         MVI   CF3RPLX+1,C' '                                      0683
         MVC   CF3RPLX+2(6),CF3RPLX+1                              0683
         L     @11,CF3RU                                           0683
         SLR   @07,@07                                             0683
         IC    @07,REQLEN2(,@11)                                   0683
         BCTR  @07,0                                               0683
         EX    @07,@SM05425                                        0683
* ELSE;                                                    /*@D32CKLB*/
@RF00682 DS    0H                                                  0685
* CALL CF3VOC;                         /* GET VOCLOCK SHARED         */
         BAL   @14,CF3VOC                                          0685
* RFY CF3R0 RSTD;                                          /*@D32CKLB*/
* CALL CF3SRT;                         /* DO SRT FIND                */
         BAL   @14,CF3SRT                                          0687
* RFY ISTRPRE BASED(CF3RDTP);                                      0688
* IF CF3R15 = CF30                                                 0689
*   THEN DO;                            /*                   @D32CKLB*/
         LTR   CF3R15,CF3R15                                       0689
         BNZ   @RF00689                                            0689
*    IF CF3R0 -> RPRENTRY = RPRENTAP    /* IF APPLIC RDTE    @D32CKLB*/
*      THEN CF3RDTP = CF3R0;            /* SAVE @RDTE        @D32CKLB*/
         LR    @11,CF3R0                                           0691
         CLI   RPRENTRY(@11),X'55'                                 0691
         BNE   @RF00691                                            0691
         ST    CF3R0,CF3RDTP                                       0692
*      ELSE CF3R15 = CF38;              /* ELSE CAUSE ERROR  @D32CKLB*/
         B     @RC00691                                            0693
@RF00691 LA    CF3R15,8                                            0693
*   END;                                /*                   @D32CKLB*/
*   ELSE DO;                            /*                   @D32CKLB*/
         B     @RC00689                                            0695
@RF00689 DS    0H                                                  0696
*        CF3MSGID = MSG695;             /* APPLIC UNKNOWN    @D32CKLB*/
         MVC   CF3MSGID(4),@CC04082                                0696
*        CF3R15 = CF38;                 /* CAUSE ERROR       @D32CKLB*/
         LA    CF3R15,8                                            0697
*        END;                           /*                   @D32CKLB*/
* END;                                  /*                   @D32CKLB*/
@RC00689 DS    0H                                                  0700
*     RFY CF3R0 UNRSTD;                                    /*@D32CKLB*/
@RC00679 DS    0H                                                  0701
* IF CF3R15 = CF30                      /* CONTINUE?         @D32CKLB*/
*   THEN DO;                            /*                   @D32CKLB*/
         LTR   CF3R15,CF3R15                                       0701
         BNZ   @RF00701                                            0701
*     IF RPRACT = CF3OFF               /* CHECK IF APPL IS INACTIVE */
*       THEN                                                       0703
         L     @11,CF3RDTP                                         0703
         TM    RPRACT(@11),B'10000000'                             0703
         BNZ   @RF00703                                            0703
*         DO;                                                      0704
*         CF3MSGID = MSG696;            /* APPLIC INACTIVE   @D32CKLB*/
         MVC   CF3MSGID(4),@CC04084                                0705
*         CALL CF3UVOC;                                            0706
         BAL   @14,CF3UVOC                                         0706
*         MGLREQ=CF3OFF;               /* INDICATE RESPONSE     */ 0707
         L     @11,NCSMGLPT(,CF3NCSPL)                             0707
         NI    MGLREQ(@11),B'01111111'                             0707
*         MGLSENSE=CF30;               /* INDICATE POSITIVE FME      */
         SLR   @07,@07                                             0708
         STH   @07,MGLSENSE(,@11)                                  0708
*         MGLMSGAD=ADDR(CF3MID0);                                  0709
         LA    @07,CF3MID0                                         0709
         ST    @07,MGLMSGAD(,@11)                                  0709
*         CALL CF3CS1;                                             0710
         BAL   @14,CF3CS1                                          0710
*         MGLREQ=CF3ON;                /* INDICATE REQUEST     */  0711
         L     @11,NCSMGLPT(,CF3NCSPL)                             0711
         OI    MGLREQ(@11),B'10000000'                             0711
*         MGLRUPTR=ADDR(CF3RRUA);      /* NS PROC ERROR              */
         LA    @07,CF3RRUA                                         0712
         ST    @07,MGLRUPTR(,@11)                                  0712
*         CALL CF3NSPE;                                            0713
         BAL   @14,CF3NSPE                                         0713
*         MGLMSGAD=ADDR(CF3MID7);                                  0714
         L     @11,NCSMGLPT(,CF3NCSPL)                             0714
         LA    @07,CF3MID7                                         0714
         ST    @07,MGLMSGAD(,@11)                                  0714
*         CALL CF3CS1;                                             0715
         BAL   @14,CF3CS1                                          0715
*         END;                                                     0716
*/********************************************************************/
*/*                                                                  */
*/*     APPLICATION IS ACTIVE                                        */
*/*                                                                  */
*/********************************************************************/
*       ELSE                         /* PROCESS ACTIVE APPL        */
*            /*SEGMENT(CF3SB2)REQUEST*/DO;GOTO CF3SB2;CF3SB2#:END; 0717
         B     @RC00703                                            0717
@RF00703 DS    0H                                                  0718
         B     CF3SB2                                              0718
*     END;                                                         0720
*/********************************************************************/
*/*                                                                  */
*/*     SRTFIND FAILED OR RDT WAS NOT AN APPLICATION                 */
*/*                                                                  */
*/********************************************************************/
*   ELSE DO;                                                       0721
         B     @RC00701                                            0721
@RF00701 DS    0H                                                  0722
*        IF CF3R15 = CF38               /* SRT FIND FAIL?    @D32CKLB*/
*          THEN CALL CF3UVOC;           /* UNLOCK VOCLOCK    @D32CKLB*/
         C     CF3R15,@CF00039                                     0722
         BNE   @RF00722                                            0722
         BAL   @14,CF3UVOC                                         0723
*        ELSE;                                             /*@D32CKLB*/
@RF00722 DS    0H                                                  0725
*        MGLREQ=CF3OFF;                /*INDICATE RESPONSE           */
         L     @11,NCSMGLPT(,CF3NCSPL)                             0725
         NI    MGLREQ(@11),B'01111111'                             0725
*        MGLNS1=SRURRE;                /* REQUEST REJECTED           */
         MVI   MGLNS1(@11),X'08'                                   0726
*        MGLNS2=SRULUU;                /* LU UNKNOWN                 */
         MVI   MGLNS2(@11),X'06'                                   0727
*        MGLMSGAD=ADDR(CF3MID4);                                   0728
         LA    @07,CF3MID4                                         0728
         ST    @07,MGLMSGAD(,@11)                                  0728
*        MGLVDATA=ADDR(CF3APP);                                    0729
         LA    @07,CF3APP                                          0729
         ST    @07,MGLVDATA(,@11)                                  0729
*        CALL CF3CS1;                  /* CALL  STATUS ROUTER        */
         BAL   @14,CF3CS1                                          0730
*        END;                                                      0731
* CF3R14=CF3SAV1;                                                  0732
@RC00701 L     CF3R14,CF3SAV1                                      0732
* RETURN;                                                          0733
@EL00002 DS    0H                                                  0733
@EF00002 DS    0H                                                  0733
@ER00002 BR    @14                                                 0733
*  /*SEGMENT(CF3SB2)START*/DO;GOTO CF3SB2@;CF3SB2:END;             0734
CF3SB2   DS    0H                                                  0737
*/********************************************************************/
*/*                                                                  */
*/* CF3SB2:                                                          */
*/*   GET STORAGE FOR SESSION PARMS (CONSTANT) AND USER DATA (RU)    */
*/*                                                                  */
*/*        INPUT:  CF3NCSPL HAS ADDR OF NCSPL                        */
*/*                NCSPLFSB HAS ADDR OF RU BUFFER (LEN + RU)         */
*/*                CF3RDTP HAS ADDR OF APPL RDT                      */
*/*        OUTPUT:                                                   */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*/********************************************************************/
*/*      CHECK USER DATA LENGTH                                      */
*/*      IF USER DATA  SPECIFIED IS GREATER THAN REMAINING RU        */
*/*      REJECT REQUEST                                              */
*/********************************************************************/
*  RFY CF3R15 RSTD;                                                0737
*   /*SEGMENT(CF3DATC)REQUEST*/DO;GOTO CF3DATC;CF3DATC#:END;       0738
         B     CF3DATC                                             0739
CF3DATC# DS    0H                                                  0741
*  IF CF3R15 ^= CF30                                               0741
*  THEN;                                                           0741
         LTR   CF3R15,CF3R15                                       0741
         BNZ   @RT00741                                            0741
*  ELSE DO;                                                        0743
* CF3RLEN = LENGTH(ISTLGPFX) - LENGTH(ISTBFHDR) + REQULEN ;        0744
         LA    CF3RLEN,40                                          0744
         SLR   @07,@07                                             0744
         IC    @07,REQULEN(,CF3BFR)                                0744
         ALR   CF3RLEN,@07                                         0744
*    CF3R1=NCSPLRPH;                                               0745
         L     CF3R1,NCSPLRPH(,CF3NCSPL)                           0745
*/********************************************************************/
*/*      GET STORAGE FOR SESSION PARAMETERS                          */
*/*                AND USER DATA                                     */
*/********************************************************************/
*       /*REQSTORE PGBUF(CF3RLEN)HSIZE(0)CLEAR(NO)SAVE(YES)*/      0746
*        DO;                                                       0746
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)  */                         0747
*/* END OF ATBUILD */                                              0747
*                                                                  0747
*       RFY (GPR02P,GPR03P,GPR04P,GPR15P) RSTD;                    0747
*                                                                  0747
*       RFY (GPR01P,GPR13P) RSTD;                                  0748
*          GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);      0749
*                                                                  0749
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*       RFY (GPR01P,GPR13P) UNRSTD;                                0750
*                                                                  0750
*       DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */              0751
*         GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/              0752
         L     GPR15P,ATCLCPTR                                     0752
*       END; /*LISATCVT*/                                          0753
*                                                                  0753
*       RFY ISTBPENT;                                              0754
*       RFY ISTBPDTY;                                              0755
*          GPR02P=GPR15P->ATCBPDA->BPDPGPCB;                       0756
         L     @07,ATCBPDA(,GPR15P)                                0756
         L     GPR02P,BPDPGPCB(,@07)                               0756
*          DCL 1 FMZA0042 FIXED(31) STATIC LOCAL,                  0757
*              2 *        FIXED(8) INIT(8),                        0757
*              2 *        PTR(24) INIT(0);                         0757
*          GPR03F=(0 & '0000FFFF'X) × FMZA0042;                    0758
         L     GPR03F,FMZA0042                                     0758
*          GPR04F=CF3RLEN;                                         0759
         LR    GPR04F,CF3RLEN                                      0759
*          GPR15P=GPR15P->ATCSMRQ;                                 0760
         L     GPR15P,ATCSMRQ(,GPR15P)                             0760
*          DCL FMZL0042 BASED(GPR15P) LABEL VALUERANGE(*);         0761
*          CALL FMZL0042;                                          0762
*                                                                  0762
         BALR  @14,@15                                             0762
*       RFY (GPR13P) RSTD;                                         0763
*          GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);      0764
*                                                                  0764
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*       RFY (GPR13P) UNRSTD;                                       0765
*                                                                  0765
*       RFY (GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;                  0766
*       END ;                                                      0767
*          /********* END OF REQSTORE EXPANSION **********/  /* NO QUEU
*                   */                                             0768
*    CF3BUFF = RPHSRPRM;                                           0768
         L     @07,NCSPLRPH(,CF3NCSPL)                             0768
         L     @07,RPHSRPRM(,@07)                                  0768
         ST    @07,CF3BUFF                                         0768
*    IF CF3R15^= CF30                                              0769
*      THEN                            /* ERROR CONDITION            */
         LTR   CF3R15,CF3R15                                       0769
         BZ    @RF00769                                            0769
*        DO;                                                       0770
*        CALL CF3UVOC;                                             0771
         BAL   @14,CF3UVOC                                         0771
*        IF CF3R15 = CF34                                          0772
*          THEN CALL CF3RELST;                                     0772
         C     CF3R15,@CF00037                                     0772
         BNE   @RF00772                                            0772
         BAL   @14,CF3RELST                                        0773
*          ELSE;                                                   0774
@RF00772 DS    0H                                                  0775
*/********************************************************************/
*/*                                                                  */
*/*    REJECT LU REQUEST - INSUFFICIENT STORAGE                      */
*/*                                                                  */
*/********************************************************************/
*        MGLREQ=CF3OFF;                /* INDICATE RESPONSE          */
         L     @11,NCSMGLPT(,CF3NCSPL)                             0775
         NI    MGLREQ(@11),B'01111111'                             0775
*        MGLNS1=SRURRE;                /* REQUEST REJECT             */
         MVI   MGLNS1(@11),X'08'                                   0776
*        MGLNS2=SRUISR;                /* INSUF. SYS. RESOURCE       */
         MVI   MGLNS2(@11),X'12'                                   0777
*        MGLMSGAD=ADDR(CF3MID8);                                   0778
         LA    @07,CF3MID8                                         0778
         ST    @07,MGLMSGAD(,@11)                                  0778
*        CALL CF3CS1;                                              0779
         BAL   @14,CF3CS1                                          0779
*        END;                                                      0780
*/********************************************************************/
*/*                                                                  */
*/*      REQUEST FOR STORAGE SUCCESSFUL                              */
*/*                                                                  */
*/********************************************************************/
*      ELSE                                                        0781
*        DO;                                                       0781
         B     @RC00769                                            0781
@RF00769 DS    0H                                                  0782
*        CALL CF3RDT;                  /* GET RDT LOCK               */
         BAL   @14,CF3RDT                                          0782
*        CALL CF3CSH;                  /* SEARCH LOGON MODE TABLE    */
         BAL   @14,CF3CSH                                          0783
*        IF CF3R15 = CF30                                          0784
*/********************************************************************/
*/*                                                                  */
*/*      LOGON MODE TABLE FOUND                                      */
*/*                                                                  */
*/********************************************************************/
*          THEN                                                    0784
         LTR   CF3R15,CF3R15                                       0784
         BNZ   @RF00784                                            0784
*            DO;                                                   0785
*            CALL CF3URDT;             /* UNLOCK RDT LOCK            */
         BAL   @14,CF3URDT                                         0786
*            CALL CF3UVOC;             /* UNLOCK VOC LOCK            */
         BAL   @14,CF3UVOC                                         0787
*            MGLREQ=CF3OFF;            /* INDICATE RESPONSE          */
         L     @07,NCSMGLPT(,CF3NCSPL)                             0788
         NI    MGLREQ(@07),B'01111111'                             0788
*            MGLSENSE=CF30;            /* POSITIVE FME               */
         SLR   @00,@00                                             0789
         STH   @00,MGLSENSE(,@07)                                  0789
*            MGLMSGAD=ADDR(CF3MID0);                               0790
         LA    @00,CF3MID0                                         0790
         ST    @00,MGLMSGAD(,@07)                                  0790
*            MGLVDATA=ADDR(CF3LOGN);                               0791
         LA    @00,CF3LOGN                                         0791
         ST    @00,MGLVDATA(,@07)                                  0791
*            CALL CF3CS1;                                          0792
         BAL   @14,CF3CS1                                          0792
*            CALL INCF3SB3;            /* CONTINUE PROCESSING        */
         BAL   @14,INCF3SB3                                        0793
*            END;                                                  0794
*/********************************************************************/
*/*                                                                  */
*/*   LOGON MODE TABLE NOT FOUND                                     */
*/*                                                                  */
*/********************************************************************/
*          ELSE                                                    0795
*            DO;                                                   0795
         B     @RC00784                                            0795
@RF00784 DS    0H                                                  0796
*            CALL CF3URDT;                                         0796
         BAL   @14,CF3URDT                                         0796
*            CALL CF3UVOC;                                         0797
         BAL   @14,CF3UVOC                                         0797
*            MGLREQ=CF3OFF;           /* INDICATE RESPONSE */      0798
         L     @11,NCSMGLPT(,CF3NCSPL)                             0798
         NI    MGLREQ(@11),B'01111111'                             0798
*            MGLNS1=SRURRE;                                        0799
         MVI   MGLNS1(@11),X'08'                                   0799
*            MGLNS2=SRUSSNPE;                                      0800
         MVI   MGLNS2(@11),X'21'                                   0800
*            MGLMSGAD=ADDR(CF3MID4);                               0801
         LA    @07,CF3MID4                                         0801
         ST    @07,MGLMSGAD(,@11)                                  0801
*            MGLVDATA=ADDR(CF3LOGM);                               0802
         LA    @07,CF3LOGM                                         0802
         ST    @07,MGLVDATA(,@11)                                  0802
*            CALL CF3CS1;                                          0803
         BAL   @14,CF3CS1                                          0803
*            END;                                                  0804
*          IF CF3SUCC=CF3ON                                        0805
*            THEN;                                                 0805
@RC00784 TM    CF3SUCC,B'10000000'                                 0805
         BO    @RT00805                                            0805
*            ELSE CALL CF3RELST;                                   0807
         BAL   @14,CF3RELST                                        0807
*        END;                                                      0808
@RT00805 DS    0H                                                  0809
*    END;                                                          0809
@RC00769 DS    0H                                                  0810
*/*********************************************************************
*/*   USER DATA TEST                                                  *
*/*                                                                   *
*/*********************************************************************
*/********************************************************************/
*/*                                                                  */
*/*      IF USER DATA IS SPECIFIED IS GREATER THAN REMAINING RU      */
*/*      REJECT REQUEST                                              */
*/********************************************************************/
*  /*SEGMENT(CF3DATC)START*/DO;GOTO CF3DATC@;CF3DATC:END;          0810
@RT00741 DS    0H                                                  0811
         B     CF3DATC@                                            0811
CF3DATC  DS    0H                                                  0813
*CF3BFR=ADDR(REQNAME)+REQLEN2;     /* @REQUESTER ID FIELD    @XM00140*/
         L     @07,CF3RU                                           0813
         LA    CF3BFR,REQNAME(,@07)                                0813
         SLR   @00,@00                                             0813
         IC    @00,REQLEN2(,@07)                                   0813
         ALR   CF3BFR,@00                                          0813
*CF3BFR=CF3BFR+CF3BFR->REQIDLEN+1; /* @PASSWORD FIELD        @XM00140*/
         LA    @07,1                                               0814
         LR    @00,CF3BFR                                          0814
         SLR   @09,@09                                             0814
         IC    @09,REQIDLEN(,CF3BFR)                               0814
         ALR   @00,@09                                             0814
         ALR   @00,@07                                             0814
         LR    CF3BFR,@00                                          0814
*CF3BFR=CF3BFR+CF3BFR->REQPASSL+1; /* @USER DATA FIELD       @XM00140*/
         LR    @00,CF3BFR                                          0815
         SLR   @09,@09                                             0815
         IC    @09,REQPASSL(,CF3BFR)                               0815
         ALR   @00,@09                                             0815
         ALR   @00,@07                                             0815
         LR    CF3BFR,@00                                          0815
*IF CF3BFR + REQULEN > NCSRULEN + ADDR(NCSRUITS) - CF31            0816
*  THEN                                                            0816
         LR    @07,CF3BFR                                          0816
         SLR   @00,@00                                             0816
         IC    @00,REQULEN(,CF3BFR)                                0816
         ALR   @07,@00                                             0816
         L     @09,NCSPLFSB(,CF3NCSPL)                             0816
         LA    @00,NCSRUITS(,@09)                                  0816
         AH    @00,NCSRULEN(,@09)                                  0816
         BCTR  @00,0                                               0816
         CR    @07,@00                                             0816
         BNH   @RF00816                                            0816
*    DO;                               /* REJECT THIS LU REQUEST     */
*    CALL CF3UVOC;                                                 0818
         BAL   @14,CF3UVOC                                         0818
*    MGLREQ=CF3OFF;                    /* INDICATE RESPONSE          */
         L     @07,NCSMGLPT(,CF3NCSPL)                             0819
         NI    MGLREQ(@07),B'01111111'                             0819
*    MGLNS1=SRUFIE;                    /* FUNCTN INTERPENT ERROR     */
         MVI   MGLNS1(@07),X'10'                                   0820
*    MGLNS2=SRUHFE;                    /* HORTZ FORMAT ERROR         */
         MVI   MGLNS2(@07),X'05'                                   0821
*    MGLMSGAD=ADDR(CF3MID1);                                       0822
         LA    @00,CF3MID1                                         0822
         ST    @00,MGLMSGAD(,@07)                                  0822
*    MGLVDATA=CF30;                                                0823
         SLR   @00,@00                                             0823
         ST    @00,MGLVDATA(,@07)                                  0823
*    CALL  CF3CS1;                     /* CALL STATUS ROUTER         */
         BAL   @14,CF3CS1                                          0824
*    CF3R15=CF34;                      /* ERROR RETURN    */       0825
         LA    CF3R15,4                                            0825
*    END;                                                          0826
*  ELSE CF3R15=CF30;                                               0827
         B     @RC00816                                            0827
@RF00816 SLR   CF3R15,CF3R15                                       0827
*  /*SEGMENT(CF3DATC)FINISH*/DO;GOTO CF3DATC#;CF3DATC@:END;        0828
@RC00816 DS    0H                                                  0829
         B     CF3DATC#                                            0829
CF3DATC@ DS    0H                                                  0831
* /*SEGMENT(CF3SB2)FINISH*/DO;GOTO CF3SB2#;CF3SB2@:END;            0831
         B     CF3SB2#                                             0832
* END INCF3SB1;                                                    0834
         B     @EL00002                                            0834
*/********************************************************************/
*/*              VOCLOCK SHARED                                      */
*/********************************************************************/
* CF3VOC: PROC OPTIONS (NOSAVE,NOSAVEAREA);                        0835
CF3VOC   DS    0H                                                  0836
* CF3SAV2=CF3R14;                                                  0836
         ST    CF3R14,CF3SAV2                                      0836
* CF3R1=NCSPLRPH;                                                  0837
*                                                                  0837
         L     CF3R1,NCSPLRPH(,CF3NCSPL)                           0837
*/*** START -TPLOCK (VOCLOCK)- ***/                                0838
*   DO;                                                            0838
*   RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;          0839
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*        GPR15P = ATCAP35;              /*ADDRESS OF LOCK ROUTINE*/
         L     @07,NCSPLCVT(,CF3NCSPL)                             0841
         L     GPR15P,ATCAP35(,@07)                                0841
*        GPR02P = ADDR(ATCVOCLK);       /*SET PARAM - LOCKWORD PTR*/
         LA    GPR02P,ATCVOCLK(,@07)                               0842
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0843
         L     GPR04P,RPHCRR(,GPR01P)                              0843
*        GPR00P = CRALMS02;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,2                                            0844
*        GPR03P = ADDR(GPR04P->CRAL2PTR);                          0845
         LA    GPR03P,CRAL2PTR(,GPR04P)                            0845
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*        DCL FMZL0065 BASED(GPR15P) LABEL VALUERANGE(*);           0846
*        CALL FMZL0065;                                            0847
         BALR  @14,@15                                             0847
*        GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0848
*                                                                  0848
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*   RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;        0849
*        END;                                                      0850
*/*** END -TPLOCK (VOCLOCK)- ***/                                  0851
* CF3R14=CF3SAV2;                                                  0851
         L     CF3R14,CF3SAV2                                      0851
* END CF3VOC;                                                      0852
@EL00003 DS    0H                                                  0852
@EF00003 DS    0H                                                  0852
@ER00003 BR    @14                                                 0852
*/********************************************************************/
*/*              UNLOCK THE VOCLOCK                                  */
*/********************************************************************/
* CF3UVOC: PROC OPTIONS (NOSAVE,NOSAVEAREA);                       0853
CF3UVOC  DS    0H                                                  0854
* CF3SAV3=CF3R14;                                                  0854
         ST    CF3R14,CF3SAV3                                      0854
* CF3R1=NCSPLRPH;                                                  0855
*                                                                  0855
         L     CF3R1,NCSPLRPH(,CF3NCSPL)                           0855
*/*** START -TPUNLOCK (VOCLOCK)- ***/                              0856
*   DO;                                                            0856
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)  */                             0857
*/* END OF ATBUILD */                                              0857
*                                                                  0857
*   RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;          0857
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*        GPR02P = ADDR(ATCVOCLK);       /*SET PARAM - LOCKWORD PTR*/
         L     GPR02P,NCSPLCVT(,CF3NCSPL)                          0859
         LA    GPR02P,ATCVOCLK(,GPR02P)                            0859
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0860
         L     GPR04P,RPHCRR(,GPR01P)                              0860
*        GPR00P = CRALMS02;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,2                                            0861
*        GPR03P = ADDR(GPR04P->CRAL2PTR);                          0862
         LA    GPR03P,CRAL2PTR(,GPR04P)                            0862
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*                                                                  0863
*   DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                  0863
*     GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                  0864
         L     GPR15P,ATCLCPTR                                     0864
*   END; /*LISATCVT*/                                              0865
*        GPR15P=GPR15P->ATCAP33;                                   0866
         L     GPR15P,ATCAP33(,GPR15P)                             0866
*        DCL FMZL0070 BASED(GPR15P) LABEL VALUERANGE(*);           0867
*        CALL FMZL0070;                                            0868
         BALR  @14,@15                                             0868
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0869
*                                                                  0869
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*   RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;        0870
*        END;                                                      0871
*/*** END -TPUNLOCK (VOCLOCK)- ***/                                0872
* CF3R14=CF3SAV3;                                                  0872
         L     CF3R14,CF3SAV3                                      0872
* END CF3UVOC;                                                     0873
@EL00004 DS    0H                                                  0873
@EF00004 DS    0H                                                  0873
@ER00004 BR    @14                                                 0873
*/********************************************************************/
*/*           GET THE RDT LOCK EXCLUSIVE                             */
*/********************************************************************/
* CF3RDT: PROC OPTIONS (NOSAVE,NOSAVEAREA);                        0874
CF3RDT   DS    0H                                                  0875
* CF3SAV3=CF3R14;                                                  0875
         ST    CF3R14,CF3SAV3                                      0875
* CF3R1=NCSPLRPH;                                                  0876
*                                                                  0876
         L     CF3R1,NCSPLRPH(,CF3NCSPL)                           0876
*/*** START -TPLOCK (RDTLOCK)TYPE(XCLSIVE)- ***/                   0877
*  DO;                                                             0877
*  RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;           0878
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*        GPR15P = ATCAP36;              /*ADDRESS OF LOCK ROUTINE*/
         L     @07,NCSPLCVT(,CF3NCSPL)                             0880
         L     GPR15P,ATCAP36(,@07)                                0880
*        GPR02P = ADDR(ATCRDTLK);       /*SET PARAM - LOCKWORD PTR*/
         LA    GPR02P,ATCRDTLK(,@07)                               0881
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0882
         L     GPR04P,RPHCRR(,GPR01P)                              0882
*        GPR00P = CRALMS03;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,4                                            0883
*        GPR03P = ADDR(GPR04P->CRAL3PTR);                          0884
         LA    GPR03P,CRAL3PTR(,GPR04P)                            0884
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*        DCL FMZL0080 BASED(GPR15P) LABEL VALUERANGE(*);           0885
*        CALL FMZL0080;                                            0886
         BALR  @14,@15                                             0886
*        GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0887
*                                                                  0887
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*  RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;         0888
*        END;                                                      0889
*/*** END -TPLOCK (RDTLOCK)TYPE(XCLSIVE)- ***/                     0890
* CF3R14=CF3SAV3;                                                  0890
         L     CF3R14,CF3SAV3                                      0890
* END CF3RDT;                                                      0891
@EL00005 DS    0H                                                  0891
@EF00005 DS    0H                                                  0891
@ER00005 BR    @14                                                 0891
*/********************************************************************/
*/*           RELEASE THE RDT LOCK                                   */
*/********************************************************************/
* CF3URDT: PROC OPTIONS (NOSAVE,NOSAVEAREA);                       0892
CF3URDT  DS    0H                                                  0893
* RFY ISTATCVT BASED(NCSPLCVT);                                    0893
* CF3SAV3=CF3R14;                                                  0894
         ST    CF3R14,CF3SAV3                                      0894
* CF3R1=NCSPLRPH;                                                  0895
*                                                                  0895
         L     CF3R1,NCSPLRPH(,CF3NCSPL)                           0895
*/*** START -TPUNLOCK (RDTLOCK)- ***/                              0896
*   DO;                                                            0896
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)  */                             0897
*/* END OF ATBUILD */                                              0897
*                                                                  0897
*   RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) RSTD;          0897
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*        GPR02P = ADDR(ATCRDTLK);       /*SET PARAM - LOCKWORD PTR*/
         L     GPR02P,NCSPLCVT(,CF3NCSPL)                          0899
         LA    GPR02P,ATCRDTLK(,GPR02P)                            0899
*        GPR04P = GPR01P->RPHCRR;       /*SET PARAM - ISTCRA PTR*/ 0900
         L     GPR04P,RPHCRR(,GPR01P)                              0900
*        GPR00P = CRALMS03;             /*SET PARAM - LOCK LEVEL FLAG*/
         LA    GPR00P,4                                            0901
*        GPR03P = ADDR(GPR04P->CRAL3PTR);                          0902
         LA    GPR03P,CRAL3PTR(,GPR04P)                            0902
*                                       /*SET PARAM - LOCK LEVEL PTR*/
*                                                                  0903
*   DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                  0903
*     GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                  0904
         L     GPR15P,ATCLCPTR                                     0904
*   END; /*LISATCVT*/                                              0905
*        GPR15P=GPR15P->ATCAP33;                                   0906
         L     GPR15P,ATCAP33(,GPR15P)                             0906
*        DCL FMZL0085 BASED(GPR15P) LABEL VALUERANGE(*);           0907
*        CALL FMZL0085;                                            0908
         BALR  @14,@15                                             0908
*        GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,GPR01P
*GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P,GPR10P,GPR11P,
*PR12P,GPR13P,GPR14P,GPR15P);                                      0909
*                                                                  0909
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*   RFY (GPR00P,GPR01P,GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;        0910
*        END;                                                      0911
*/*** END -TPUNLOCK (RDTLOCK)- ***/                                0912
* CF3R14=CF3SAV3;                                                  0912
         L     CF3R14,CF3SAV3                                      0912
* END CF3URDT;                                                     0913
@EL00006 DS    0H                                                  0913
@EF00006 DS    0H                                                  0913
@ER00006 BR    @14                                                 0913
*/********************************************************************/
*/*                                                                  */
*/*   INTERFACE TO ISTINCS1 - STATUS ROUTER                          */
*/*         FOR LEN 3 MSG                                            */
*/*                                                                  */
*/********************************************************************/
*CF3CS1: PROC OPTIONS(NOSAVE,NOSAVEAREA);                          0914
CF3CS1   DS    0H                                                  0915
*CF3SAV4=CF3R14;                                                   0915
         ST    CF3R14,CF3SAV4                                      0915
*CF3R1 = CF3NCSPL;                                                 0916
         LR    CF3R1,CF3NCSPL                                      0916
*CALL ISTINCS1;                                                    0917
         L     @15,@CV03958                                        0917
         BALR  @14,@15                                             0917
*  DO;                                                             0918
*/***  CRRMAINT  PROCNM(ISTINCF3)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
**/                                                                0919
*  /*** CLEAR AND SET CURRENT PROCEDURE BIT ***/                   0919
*NCSPLRPH->RPHCRR->CRACRR->VYCCRT = '0'B;                          0919
         L     @07,NCSPLRPH(,CF3NCSPL)                             0919
         L     @07,RPHCRR(,@07)                                    0919
         L     @07,CRACRR(,@07)                                    0919
         XC    VYCCRT+1(11,@07),VYCCRT+1(@07)                      0919
         MVI   VYCCRT(@07),B'00000000'                             0919
*NCSPLRPH->RPHCRR->CRACRR->CINCF3 = '1'B;                          0920
         OI    CINCF3(@07),B'01000000'                             0920
*  END;                                                            0921
*CF3R14=CF3SAV4;                                                   0922
         L     CF3R14,CF3SAV4                                      0922
*END CF3CS1;                                                       0923
@EL00007 DS    0H                                                  0923
@EF00007 DS    0H                                                  0923
@ER00007 BR    @14                                                 0923
*/********************************************************************/
*/*                                                                  */
*/*   INTERFACE TO RELSTORE                                          */
*/*                                                                  */
*/********************************************************************/
*CF3RELST: PROC OPTIONS(NOSAVE,NOSAVEAREA);                        0924
CF3RELST DS    0H                                                  0925
*CF3SAV5=CF3R14;                                                   0925
         ST    CF3R14,CF3SAV5                                      0925
*CF3R1=NCSPLRPH;                                                   0926
         L     CF3R1,NCSPLRPH(,CF3NCSPL)                           0926
*  /*RELSTORE BUFADDR(CF3BUFF)CLEAR(NO)SAVE(YES)*/                 0927
*   DO;                                                            0927
*/* ATBUILD (ISTATCVT,ISTRPH)  */                                  0928
*/* END OF ATBUILD */                                              0928
*  RFY (GPR02P,GPR03P,GPR04P,GPR15P) RSTD;                         0928
*         RFY (GPR01P,GPR13P) RSTD;                                0929
*         GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);       0930
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY GPR13P UNRSTD;                                       0931
*         GPR04P=CF3BUFF;                                          0932
         L     GPR04P,CF3BUFF                                      0932
*         DCL 1 FMZA0096 FIXED(31) STATIC LOCAL,                   0933
*             2 * FIXED(8) INIT(64),                               0933
*             2 * PTR(24) INIT(0);                                 0933
*         GPR03F = FMZA0096;                                       0934
*                                                                  0934
         L     GPR03F,FMZA0096                                     0934
*  DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */                   0935
*    GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/                   0936
         L     GPR15P,ATCLCPTR                                     0936
*  END; /*LISATCVT*/                                               0937
*         GPR02P = GPR15P->ATCBPDA;                                0938
         L     GPR02P,ATCBPDA(,GPR15P)                             0938
*         GPR15P=GPR15P->ATCSMRS;                                  0939
         L     GPR15P,ATCSMRS(,GPR15P)                             0939
*         DCL FMZL0096 BASED(GPR15P) LABEL VALUERANGE(*);          0940
*         CALL FMZL0096;                                           0941
         BALR  @14,@15                                             0941
*         RFY GPR13P RSTD;                                         0942
*         GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);       0943
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*         RFY (GPR01P,GPR13P) UNRSTD;                              0944
*  RFY (GPR02P,GPR03P,GPR04P,GPR15P) UNRSTD;                       0945
*  END ;/**********END OF RELSTORE EXPANSION**********/            0946
*CF3R14=CF3SAV5;                                                   0947
         L     CF3R14,CF3SAV5                                      0947
*END CF3RELST;                                                     0948
@EL00008 DS    0H                                                  0948
@EF00008 DS    0H                                                  0948
@ER00008 BR    @14                                                 0948
*/*********************************************************************
*/*                                                                   *
*/*   INCF3SB3 - INVOKE CONNECTION SERVICES TO DO LOGON               *
*/*                                                                   *
*/*      INPUT: CF3RPLX HAS ADDR OF APPL RDT                          *
*/*                                                                   *
*/*      OUTPUT: CF3SUCC ON×OFF                                       *
*/*                                                                   *
*/*********************************************************************
*INCF3SB3: PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);                 0949
INCF3SB3 DS    0H                                                  0950
*/*********************************************************************
*/*                                                                   *
*/*  GET VOC + RDT LOCKS AND DO SRTFIND FOR APPLICATION               *
*/*                                                                   *
*/*********************************************************************
*CF3SAV8=CF3R14;                                                   0950
         ST    CF3R14,CF3SAV8                                      0950
*CALL CF3VOC;                          /* GET VOC LOCK SHARED         *
         BAL   @14,CF3VOC                                          0951
*CALL CF3RDT;                          /* GET RDT LOCK EXCLUSIVE      *
*                                                                  0952
         BAL   @14,CF3RDT                                          0952
*CALL CF3SRT;                          /* DO SRTFIND                  *
         BAL   @14,CF3SRT                                          0953
*RFY (CF3R0,CF3R1) RSTD;                                           0954
*                                                                  0954
*IF CF3R15 = CF30                                                  0955
*  & CF3R0 -> RPRENTRY = RPRENTAP                                  0955
*   THEN                                                           0955
         LTR   CF3R15,CF3R15                                       0955
         BNZ   @RF00955                                            0955
         LR    @07,CF3R0                                           0955
         CLI   RPRENTRY(@07),X'55'                                 0955
         BNE   @RF00955                                            0955
*     DO;                                                          0956
*/*********************************************************************
*/*  MOVE USER DATA FROM RU TO BUFFER FOR CONNECTION SERVICES         *
*/*********************************************************************
*      CF3RDTP=CF3R0;                                              0957
         ST    CF3R0,CF3RDTP                                       0957
*       /*SEGMENT(CF3MOV)REQUEST*/DO;GOTO CF3MOV;CF3MOV#:END;      0958
         B     CF3MOV                                              0959
CF3MOV#  DS    0H                                                  0961
* /* MOVE IN USER DATA*/                                           0961
*                                                                  0961
*/* BUILD CSP & CSL FOR LOGON IN WORK AREA AND CALL CONN. SERVICES    *
*                                                                  0961
*RFY ISTCSP BASED(CF3CSP);                                         0961
*RFY ISTCSL BASED(CF3CSL);                                         0962
* CF3CSP = CF3NXTAV;                   /* PLACE TO BUILD CSP          *
         L     @11,NCSPLWKA(,CF3NCSPL)                             0963
         L     @07,CF3NXTAV(,@11)                                  0963
         LR    CF3CSP,@07                                          0963
* CF3CSL=CF3NXTAV+LENGTH(ISTCSP);                                  0964
         LA    CF3CSL,40                                           0964
         ALR   CF3CSL,@07                                          0964
* CF3NXTAV=CF3NXTAV + LENGTH(ISTCSP) + LENGTH(ISTCSL) + CF34;      0965
         AL    @07,@CF05420                                        0965
         ST    @07,CF3NXTAV(,@11)                                  0965
* ISTCSP = ISTCSP && ISTCSP;                                       0966
         XC    ISTCSP(40,CF3CSP),ISTCSP(CF3CSP)                    0966
* ISTCSL = ISTCSL && ISTCSL;                                       0967
         XC    ISTCSL(12,CF3CSL),ISTCSL(CF3CSL)                    0967
* RPHCSPA = CF3CSP;                                                0968
         L     @11,NCSPLRPH(,CF3NCSPL)                             0968
         ST    CF3CSP,RPHCSPA(,@11)                                0968
* CSPIDX = CSPILGN;                    /* LOGON RTN SVCS REQ          *
         MVC   CSPIDX(2,CF3CSP),@CH00037                           0969
* CSPDEST = CF3RDTP;                   /* ADDR OF APPL RDT            *
         L     @04,CF3RDTP                                         0970
         ST    @04,CSPDEST(,CF3CSP)                                0970
* CSPRSC2F = CF3ON;                    /* IND. RES2                   *
         OI    CSPRSC2F(CF3CSP),B'00000010'                        0971
* CSPRSC2B = CF3RPLX;                  /* 8 CHAR RESOURCE 2           *
         MVC   CSPRSC2B(8,CF3CSP),CF3RPLX                          0972
* CSPNO = CF31;                        /* IND. 1 ENTRY                *
*                                                                  0973
         MVC   CSPNO(2,CF3CSP),@CH00048                            0973
* CSPRSCE = CF3CSL;                    /* CSL - LIST POINTER          *
         ST    CF3CSL,CSPRSCE(,CF3CSP)                             0974
* CSLRDTE=NCSPLRPT;                                                0975
         L     @03,NCSPLRPT(,CF3NCSPL)                             0975
         ST    @03,CSLRDTE(,CF3CSL)                                0975
* CSLDATA=CF3BUFF;                                                 0976
         L     @03,CF3BUFF                                         0976
         ST    @03,CSLDATA(,CF3CSL)                                0976
* CF3CSL = CF3CSL+ LENGTH(ISTCSL);                                 0977
         AL    CF3CSL,@CF00032                                     0977
* CF3DEST = CF3RDTP;                                               0978
         ST    @04,CF3DEST(,CF3CSL)                                0978
*/*********************************************************************
*/*  INTEFACE TO CONNECTION SERVICES                                  *
*/*********************************************************************
*  RFY CF3R13 RSTD;                                                0979
*  CF3SAV6=CF3R13;                                                 0980
         ST    CF3R13,CF3SAV6                                      0980
*  CF3R13 = CF3NXTAV;                                              0981
         LR    CF3R13,@07                                          0981
*  CF3R13->CF3BKPTR = CF3SAV6;                                     0982
         L     @07,CF3SAV6                                         0982
         ST    @07,CF3BKPTR(,CF3R13)                               0982
*  CF3R1=NCSPLRPH;                                                 0983
         LR    CF3R1,@11                                           0983
*  CALL ATCCSMR;                                           /*@XM00130*/
*                                                                  0984
         L     @11,NCSPLCVT(,CF3NCSPL)                             0984
         L     @15,ATCCSMR(,@11)                                   0984
         BALR  @14,@15                                             0984
*    DO;                                                           0985
*/***  CRRMAINT  PROCNM(ISTINCF3)FUNC(RET)COMP(VY)RPHADD((NCSPLRPH))  *
**/                                                                0986
*    /*** CLEAR AND SET CURRENT PROCEDURE BIT ***/                 0986
*NCSPLRPH->RPHCRR->CRACRR->VYCCRT = '0'B;                          0986
         L     @11,NCSPLRPH(,CF3NCSPL)                             0986
         L     @11,RPHCRR(,@11)                                    0986
         L     @11,CRACRR(,@11)                                    0986
         XC    VYCCRT+1(11,@11),VYCCRT+1(@11)                      0986
         MVI   VYCCRT(@11),B'00000000'                             0986
*NCSPLRPH->RPHCRR->CRACRR->CINCF3 = '1'B;                          0987
         OI    CINCF3(@11),B'01000000'                             0987
*    END;                                                          0988
*  CF3R13=CF3SAV6;                                                 0989
         L     CF3R13,CF3SAV6                                      0989
*  RFY CF3R13 UNRSTD;                                              0990
*  CALL CF3URDT;                                                   0991
         BAL   @14,CF3URDT                                         0991
*  CALL CF3UVOC;                                                   0992
         BAL   @14,CF3UVOC                                         0992
*  IF CSPCC = CF30                     /* OK ?                        *
*    THEN DO;                                                      0993
         LH    @11,CSPCC(,CF3CSP)                                  0993
         LTR   @11,@11                                             0993
         BNZ   @RF00993                                            0993
*         FMCCMDR = CF3ON;                                         0995
         L     @11,NCSUFMCB(,CF3NCSPL)                             0995
         OI    FMCCMDR(@11),B'10000000'                            0995
*         FMCTSLHA = CF3OFF;            /* RESET TERMINATE SELF LAST */
         NI    FMCTSLHA(@11),B'11110111'                           0996
*                                       /* IN SSCP-LU FMCB   @D32CKLB*/
*         CF3SUCC = CF3ON;                                         0997
         OI    CF3SUCC,B'10000000'                                 0997
*         END;                                                     0998
*    ELSE;                                                         0999
@RF00993 DS    0H                                                  1000
*   CF3NXTAV=CF3NXTAV - (LENGTH(ISTCSP) + LENGTH(ISTCSL) + CF34);  1000
         L     @11,NCSPLWKA(,CF3NCSPL)                             1000
         L     @07,CF3NXTAV(,@11)                                  1000
         SL    @07,@CF05420                                        1000
         ST    @07,CF3NXTAV(,@11)                                  1000
*   END;                                                           1001
*/*********************************************************************
*/*                                                                   *
*/*   SRTFIND  FAILED                                                 *
*/*                                                                   *
*/*********************************************************************
*   ELSE                                                           1002
*     DO;                                                          1002
         B     @RC00955                                            1002
@RF00955 DS    0H                                                  1003
*     CALL CF3URDT;                                                1003
         BAL   @14,CF3URDT                                         1003
*     CALL CF3UVOC;                                                1004
         BAL   @14,CF3UVOC                                         1004
*     END;                                                         1005
*/*********************************************************************
*/*                                                                   *
*/*   IF NOT SUCCESSFUL SEND NETWORK PROCEDURE ERROR                  *
*/*                                                                   *
*/*********************************************************************
*   IF CF3SUCC = CF3ON                                             1006
*     THEN;                                                        1006
@RC00955 TM    CF3SUCC,B'10000000'                                 1006
         BO    @RT01006                                            1006
*     ELSE                                                         1008
*       DO;                                                        1008
*       MGLREQ=CF3ON;                  /* IND. REQUEST                *
         L     @11,NCSMGLPT(,CF3NCSPL)                             1009
         OI    MGLREQ(@11),B'10000000'                             1009
*       MGLRUPTR=ADDR(CF3RRUA);        /* NS PROC ERROR               *
         LA    @07,CF3RRUA                                         1010
         ST    @07,MGLRUPTR(,@11)                                  1010
*       CALL CF3NSPE;                                              1011
         BAL   @14,CF3NSPE                                         1011
*       MGLMSGAD = ADDR(CF3MID7);      /* MSG 7 - SESSION BI  FAILED */
         L     @11,NCSMGLPT(,CF3NCSPL)                             1012
         LA    @07,CF3MID7                                         1012
         ST    @07,MGLMSGAD(,@11)                                  1012
*       CALL CF3CS1;                                               1013
         BAL   @14,CF3CS1                                          1013
*       END;                                                       1014
* CF3R14=CF3SAV8;                                                  1015
@RT01006 L     CF3R14,CF3SAV8                                      1015
* RETURN;                                                          1016
@EL00009 DS    0H                                                  1016
@EF00009 DS    0H                                                  1016
@ER00009 BR    @14                                                 1016
*/*********************************************************************
*/*   MOVE USER DATA                                                  *
*/*   INPUT:                                                          *
*/*   CF3BUFF HAS ADDR OF REQSTOR BUFFER                              *
*/*   CF3RLEN HAS LENGTH OF REQSTOR BUFFER                            *
*/*   REQUDAT CONTAINS THE USER DATA                                  *
*/*   REQULEN HAS LENGTH OF USER DATA                                 *
*/*********************************************************************
* /*SEGMENT(CF3MOV)START*/DO;GOTO CF3MOV@;CF3MOV:END;              1017
CF3MOV   DS    0H                                                  1020
*RFY (CF3R2,CF3R3,CF3R4,CF3R5)  RSTD;                              1020
*LGPDTLEN=REQULEN + LENGTH(ISTBIND);                       /*@DM13691*/
         L     @07,CF3BUFF                                         1021
         SLR   @09,@09                                             1021
         IC    @09,REQULEN(,CF3BFR)                                1021
         LA    @08,36                                              1021
         ALR   @08,@09                                             1021
         STH   @08,LGPDTLEN(,@07)                                  1021
*LGPUSECT=CF31;                     /* ONE USER        */          1022
         MVC   LGPUSECT(2,@07),@CH00048                            1022
*IF REQULEN ^= CF30                                                1023
*  THEN                                                            1023
         CLI   REQULEN(CF3BFR),0                                   1023
         BE    @RF01023                                            1023
*    DO;                                                           1024
*    BINUSEL = REQULEN;                                            1025
         STC   @09,BINUSEL+12(,@07)                                1025
*    CF3UPTR = ADDR(REQUDAT);      /* SOURCE ADDRESS         @DM13338*/
         LA    CF3UPTR,REQUDAT(,CF3BFR)                            1026
*    CF3CPYL = REQULEN;            /* SOURCE LENGTH          @DM13338*/
         LR    CF3CPYL,@09                                         1027
*    CF3CHN=CF3BUFF;                                               1028
         LR    CF3CHN,@07                                          1028
*    CF3BUFA=ADDR(LGPLOGNP);       /* TARGET FIELD           @DM13338*/
         LA    CF3BUFA,LGPLOGNP(,@07)                              1029
*    CF3BUFL=BFHSIZE-LENGTH(ISTLGPFX)+LENGTH(ISTBFHDR);    /*@DM13338*/
         L     CF3BUFL,@CF05421                                    1030
         AH    CF3BUFL,BFHSIZE(,CF3CHN)                            1030
*                                  /* TARGET LENGTH          @DM13338*/
*    MVCL (CF3BUFA,CF3UPTR);                               /*@DM13338*/
*                                                                  1031
         MVCL  CF3BUFA,CF3UPTR                                     1031
*    DO WHILE CF3CPYL > CF30;                              /*@DM13338*/
         B     @DE01032                                            1032
@DL01032 DS    0H                                                  1033
*      CF3CHN=CF3CHN->BFHNXCHN;    /* NEXT TARGET BUFFER     @DM13338*/
         L     CF3CHN,BFHNXCHN(,CF3CHN)                            1033
*      CF3BUFA=ADDR(CF3CHN->BFHDATA); /* NEXT TARGET FIELD   @DM13338*/
         LA    CF3BUFA,BFHDATA(,CF3CHN)                            1034
*      CF3BUFL=CF3CHN->BFHSIZE;    /* NEXT TARGET LENGTH     @DM13338*/
         LH    CF3BUFL,BFHSIZE(,CF3CHN)                            1035
*      MVCL (CF3BUFA,CF3UPTR);                             /*@DM13338*/
         MVCL  CF3BUFA,CF3UPTR                                     1036
*    END;                          /* DO WHILE */                  1037
@DE01032 LTR   CF3CPYL,CF3CPYL                                     1037
         BP    @DL01032                                            1037
*    END;                                                  /*@DM13338*/
*                                                                  1038
*  ELSE BINUSEL = BINUSERD;                                        1039
         B     @RC01023                                            1039
@RF01023 L     @11,CF3BUFF                                         1039
         MVI   BINUSEL+12(@11),X'00'                               1039
*RFY (CF3R2,CF3R3,CF3R4,CF3R5)  UNRSTD;                            1040
@RC01023 DS    0H                                                  1041
* /*SEGMENT(CF3MOV)FINISH*/DO;GOTO CF3MOV#;CF3MOV@:END;            1041
         B     CF3MOV#                                             1042
* END INCF3SB3;                                                    1044
         B     @EL00009                                            1044
@PB00009 DS    0H                                                  1045
*/********************************************************************/
*/*                                                          @D32CKLB*/
*/* INITIATE SELF PROCESSING HAS FAILED.                     @D32CKLB*/
*/* IF CF3MSGID HAS BEEN SET, THEN ISSUE THE INDICATED       @D32CKLB*/
*/* MESSAGE TO THE OPERATOR.                                 @D32CKLB*/
*/* INVOKE 'CALL TERMINATION' PROCESSING TO COUNT SESSIONS   @D32CKLB*/
*/* FOR THE PU AND TO DETERMINE IF THE PU SHOULD BE RESET.   @D32CKLB*/
*/*                                                          @D32CKLB*/
*/********************************************************************/
* /*SEGMENT(CF3FAIL)START*/DO;GOTO CF3FAIL@;CF3FAIL:END;           1045
         B     CF3FAIL@                                            1046
CF3FAIL  DS    0H                                                  1048
*                  /*@D32CKLB*/                                    1048
*IF CF3MSGID ^= CF3NOMSG                /* MSG ID SET UP     @D32CKLB*/
*  THEN DO;                             /* THEN ISSUE MSG    @D32CKLB*/
         CLC   CF3MSGID(4),@CB04104                                1048
         BE    @RF01048                                            1048
*    CF3LUID = NCSPLRPT->RPRNAME;       /* LU NAME           @D32CKLB*/
*                                                                  1050
         L     @11,NCSPLRPT(,CF3NCSPL)                             1050
         MVC   CF3LUID(8),RPRNAME(@11)                             1050
*/*TPMSG MSGID((ADDR(CF3MSGID)))MSG((ADDR(CF3MSG)))PLAREA((CF3NXTAV))OP
*IONS(NCSPLSID)*/                                                  1051
*                                                                  1051
*      DO;                                                         1051
*        DCL REG1117  REG(1)  PTR;                                 1052
*        RFY (REG1117) RSTD;                                       1053
*                                                                  1053
*      RFY (EMCR13) RSTD;                                          1054
*        DCL 1 * BASED(REG1117),                                   1055
*            2 CMZID117 PTR(31),                                   1055
*            2 *,                                                  1055
*              3 CMZRL117 PTR(8),                                  1055
*              3 CMZRA117 PTR(24) BDY(BYTE),                       1055
*            2 CMZEA117 PTR(31),                                   1055
*            2 CMZVP117 PTR(31);                                   1055
*                                                                  1055
*/*XREGSET  PID('PLAREA')PPARM((CF3NXTAV))RREG(,REG1117)*/         1056
*      DO;                                                         1056
*        REG1117=CF3NXTAV;               /*SET RREG SYMBOL TO VALUE*/
         L     @11,NCSPLWKA(,CF3NCSPL)                             1057
         L     REG1117,CF3NXTAV(,@11)                              1057
*                                        /*OF PPARM OPERAND        */
*      END;  /* XREGSET */                                         1058
*        CMZID117 = 0;                                             1059
         SLR   @11,@11                                             1059
         ST    @11,CMZID117(,REG1117)                              1059
*        CMZRL117 = 0;                                             1060
         MVI   CMZRL117(REG1117),X'00'                             1060
*        CMZRA117 = 0;                                             1061
         STCM  @11,7,CMZRA117(REG1117)                             1061
*        CMZEA117 = 0;                                             1062
         ST    @11,CMZEA117(,REG1117)                              1062
*        CMZVP117 = 0;                                             1063
         ST    @11,CMZVP117(,REG1117)                              1063
*        CMZID117=ADDR(CF3MSGID);                                  1064
         LA    @11,CF3MSGID                                        1064
         ST    @11,CMZID117(,REG1117)                              1064
*        CMZVP117 = ADDR(CF3MSG);                                  1065
         LA    @11,CF3MSG                                          1065
         ST    @11,CMZVP117(,REG1117)                              1065
*        DCL CMZSA117 (18) PTR(31) BASED(EMCR13);                  1066
*        CMZSA117(5) = ADDR(NCSPLSID);                             1067
*                                                                  1067
         LA    @11,NCSPLSID(,CF3NCSPL)                             1067
         ST    @11,CMZSA117+16(,EMCR13)                            1067
*        DCL REG15117 REG(15) PTR;                                 1068
*        RFY REG15117 RSTD;                                        1069
*                                                                  1069
*      DO; /* LISATCVT CVTBASE(PAGEABLE,(REG15117)) */             1070
*        REG15117 = ATCLCPTR; /*SET UP ATCVT POINTER*/             1071
         L     REG15117,ATCLCPTR                                   1071
*      END; /*LISATCVT*/                                           1072
*        DCL CMTA117 BASED(REG15117) ENTRY VALUERANGE(*);          1073
*        REG15117 = REG15117->ATCMSGP;                             1074
         L     REG15117,ATCMSGP(,REG15117)                         1074
*        CALL CMTA117;                                             1075
         BALR  @14,@15                                             1075
*        RESPECIFY (REG1117,REG15117)  UNRESTRICTED;               1076
*                                                                  1076
*      RFY (EMCR13) UNRSTD;                                        1077
*      END;         /*@D32CKLB*/                                   1078
*  END;                                                    /*@D32CKLB*/
*  ELSE;                                                   /*@D32CKLB*/
@RF01048 DS    0H                                                  1081
*CF3LURDT = NCSPLRPT;                   /* SAVE @LU RDTE     @D32CKLB*/
         L     CF3LURDT,NCSPLRPT(,CF3NCSPL)                        1081
*NCSPLRPT = CF3LURDT->RPRNSNEA;         /* @PU RDTE          @D32CKLB*/
         L     @11,RPRNSNEA(,CF3LURDT)                             1082
         ST    @11,NCSPLRPT(,CF3NCSPL)                             1082
*NCSPLEBN = CF3ON;                      /* ENTRY FROM BNN    @D32CKLB*/
         OI    NCSPLEBN(CF3NCSPL),B'00100000'                      1083
*CF3R1 = CF3NCSPL;                      /* PASS NCSPL IN R1  @D32CKLB*/
         LR    CF3R1,CF3NCSPL                                      1084
*CALL ISTINCY5;                         /* CALL TERMINATION  @D32CKLB*/
         L     @15,@CV03960                                        1085
         BALR  @14,@15                                             1085
* DO;                                                              1086
*/***  CRRMAINT  PROCNM(ISTINCF3)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
**/                                                                1087
* /*** CLEAR AND SET CURRENT PROCEDURE BIT ***/                    1087
*NCSPLRPH->RPHCRR->CRACRR->VYCCRT = '0'B;                          1087
         L     @11,NCSPLRPH(,CF3NCSPL)                             1087
         L     @11,RPHCRR(,@11)                                    1087
         L     @11,CRACRR(,@11)                                    1087
         XC    VYCCRT+1(11,@11),VYCCRT+1(@11)                      1087
         MVI   VYCCRT(@11),B'00000000'                             1087
*NCSPLRPH->RPHCRR->CRACRR->CINCF3 = '1'B;                          1088
         OI    CINCF3(@11),B'01000000'                             1088
* END;                                                             1089
*NCSPLRPT = CF3LURDT;                   /* RESTORE @LU RDTE  @D32CKLB*/
         ST    CF3LURDT,NCSPLRPT(,CF3NCSPL)                        1090
* /*SEGMENT(CF3FAIL)FINISH*/DO;GOTO CF3FAIL#;CF3FAIL@:END;         1091
         B     CF3FAIL#                                            1092
*                   /*@D32CKLB*/                                   1094
*/*********************************************************************
*/*   SRTFIND INTERFACE                                               *
*/*********************************************************************
*CF3SRT: PROC OPTIONS(NOSAVE,NOSAVEAREA);                          1094
         B     @PB00010                                            1094
CF3SRT   DS    0H                                                  1095
*CF3SAV10=CF3R14;                                                  1095
         ST    CF3R14,CF3SAV10                                     1095
*RFY (CF3R0,CF3R2,CF3R15) RSTD;                                    1096
* CF3R0 = ADDR(CF3RPLX) × CF3HION;     /* R0 = NAMEPTR HI BIT ON     */
         LA    CF3R0,CF3RPLX                                       1097
         O     CF3R0,@CF02016                                      1097
* CF3R1 = CF3R1 & CF3HIOFF;            /* R1 HI ORDER BIT OFF        */
         N     CF3R1,@CF02014                                      1098
* CF3R2 = CF30;                        /* R2 = 0                     */
         SLR   CF3R2,CF3R2                                         1099
* CALL   ATCSRTDF;                                                 1100
         L     @07,NCSPLCVT(,CF3NCSPL)                             1100
         L     @15,ATCSRTDF(,@07)                                  1100
         BALR  @14,@15                                             1100
*RFY (CF3R0,CF3R2,CF3R15) UNRSTD;                                  1101
*CF3R14=CF3SAV10;                                                  1102
         L     CF3R14,CF3SAV10                                     1102
*END CF3SRT;                                                       1103
@EL00010 DS    0H                                                  1103
@EF00010 DS    0H                                                  1103
@ER00010 BR    @14                                                 1103
*/*********************************************************************
*/*   ISTINCSH INTERFACE                                              *
*/*                                                                   *
*/*********************************************************************
*CF3CSH: PROC OPTIONS(NOSAVE,NOSAVEAREA);                          1104
CF3CSH   DS    0H                                                  1105
*RFY ISTFNDSP BASED(CF3R1);                                        1105
*CF3SAV7=CF3R14;                                                   1106
         ST    CF3R14,CF3SAV7                                      1106
*CF3R1=CF3NXTAV;                                                   1107
         L     @15,NCSPLWKA(,CF3NCSPL)                             1107
         L     CF3R1,CF3NXTAV(,@15)                                1107
*FNDLU=NCSPLRPT;                                                   1108
         L     @15,NCSPLRPT(,CF3NCSPL)                             1108
         ST    @15,FNDLU(,CF3R1)                                   1108
*FNDAREA=ADDR(LGPSESSP);                                           1109
         L     @15,CF3BUFF                                         1109
         LA    @15,LGPSESSP(,@15)                                  1109
         ST    @15,FNDAREA(,CF3R1)                                 1109
*FNDMODE=ADDR(REQMODE);                                            1110
         L     @15,CF3RU                                           1110
         LA    @15,REQMODE(,@15)                                   1110
         ST    @15,FNDMODE(,CF3R1)                                 1110
*CALL ATCSRTAB;                                                    1111
         L     @07,NCSPLCVT(,CF3NCSPL)                             1111
         L     @15,ATCSRTAB(,@07)                                  1111
         BALR  @14,@15                                             1111
*RFY (CF3R1) UNRSTD;                                               1112
*CF3R14=CF3SAV7;                                                   1113
         L     CF3R14,CF3SAV7                                      1113
*END CF3CSH;                                                       1114
@EL00011 DS    0H                                                  1114
@EF00011 DS    0H                                                  1114
@ER00011 BR    @14                                                 1114
*/*********************************************************************
*/*   BUILD NSPE RU                                                   *
*/*                                                                   *
*/*********************************************************************
*CF3NSPE: PROC OPTIONS(NOSAVE,NOSAVEAREA);                         1115
CF3NSPE  DS    0H                                                  1116
*RFY ISTNSRU BASED(ADDR(CF3RRU));                                  1116
*CF3RRL=LENGTH(CF3RRU);                                            1117
         MVI   CF3RRL,X'06'                                        1117
*NSRUID=NSRUNS;                                                    1118
         LA    @15,CF3RRU                                          1118
         MVI   NSRUID(@15),X'01'                                   1118
*NSRUSUB=NSRUDSS;                                                  1119
         MVI   NSRUSUB(@15),X'06'                                  1119
*NSRURCD=NSRUNSPE;                                                 1120
         MVI   NSRURCD(@15),X'04'                                  1120
*NSRUDATA(CF31:CF33)=CF3X20;                                       1121
         MVC   NSRUDATA(3,@15),@CB04092                            1121
*END CF3NSPE;                                                      1122
*                                                                  1122
@EL00012 DS    0H                                                  1122
@EF00012 DS    0H                                                  1122
@ER00012 BR    @14                                                 1122
@PB00012 DS    0H                                                  1123
*/* TPEPILOG   */                                                  1123
* GEN (PRINT OFF);                                                 1123
*                                                                  1123
         PRINT OFF
*/* LOGICAL CHANNEL COMMAND WORD                                      *
*/* ADD A DECLARE                                      003 10/18/74   *
*DCL  1  ISTLCCW BDY(WORD) BASED,                                  1124
*        2  LCCWOP    CHAR(1),         /* OPERATION CODE -CONTROL     *
*           3  LCCWSI BIT(1),          /* SESS INIT / START DIALOG FLG*
*           3  LCCWSD BIT(1),          /* SESS DISCON/END DIALOG FLG  *
*           3  LCCWRWOP BIT(6),        /* READ/WRITE OPERATION CODE   *
*              4  * BIT(1),            /* RESERVED                    *
*              4  LCCWSOP BIT(1),      /* SPECIAL OPERATION LIKE   1124
*                                         ERASE OR READ CONT          *
*              4  LCCWCTL BIT(4),      /* CONTROL TYPE                *
*                 5  LCCWMODE BIT(2),  /* MODE TYPE                   *
*                 5  LCCWTYPE BIT(2),  /* OPERATION TYPE              *
*        2  LCCWFLAG  CHAR(1),         /* FLAG BYTE                   *
*           3  LCCWCD BIT(1),          /* CHAIN DATA                  *
*           3  LCCWCC BIT(1),          /* CHAIN COMMAND               *
*           3  LCCWCKPT BIT(1),        /* SUPPRESS 3705 CHECK POINT
*                                         RECORD                      *
*           3  LCCWNTVC BIT(1),        /* DO NOT PERFORM VALCHEK      *
*           3  LCCWIDAT BIT(1),        /* LCCWDATA CONTAINS DATA      *
*           3  LCCWLSI BIT(1),         /* LCCW SYNCH INDICATOR        *
*              4  LCCWPER BIT(1),      /* POST=RESP                   *
*           3  LCCWRFI BIT(1),         /* REQUEST FEEDBACK INDICATOR  *
*           3  LCCWACI BIT(1),         /* ADDITION COMMAND INDICATOR  *
*        2  LCCWCNT FIXED(16),         /* DATA COUNT                  *
*        2  LCCWDATA PTR(31);          /* DATA ADDRESS OR IMMED. DATA *
*/* LOGICAL COMMAND CODES */                                       1125
*DCL  LXDQ     BIT(8) CONSTANT('3B'X), /* RESET DEVICE QUEUE          *
*     LXEC     BIT(8) CONSTANT('4B'X), /* RESET AT END OF COMMAND     *
*     LXO      BIT(8) CONSTANT('5B'X), /* RESET ORDERLY               *
*     LCCWPRGE BIT(8) CONSTANT('6B'X), /* PURGE                       *
*     LWH      BIT(8) CONSTANT('0F'X), /* WRITE HEADER INDI. 1ST BLOCK*
*     LWRVI    BIT(8) CONSTANT('1F'X), /* WRITE RVI                   *
*     LWNA     BIT(8) CONSTANT('2F'X), /* WRITE NEGATIVE ACK          *
*     LWAA     BIT(8) CONSTANT('3F'X), /* WRITE ALTERNATE ACK         *
*     LWPLG    BIT(8) CONSTANT('5F'X), /* WRITE ACK LEADING GRAPHICS  *
*     LWNLG    BIT(8) CONSTANT('6F'X), /* WRITE NACK LEADING GRAPHICS *
*     LSMDE    BIT(8) CONSTANT('4F'X), /* SET MODE                    *
*     LIFBM    BIT(8) CONSTANT('7F'X), /* INDIC 1ST BLOCK OF MESSAGE  *
*     LTEST    BIT(8) CONSTANT('FE'X), /* TEST LCCW                   *
*     LPRMPT   BIT(8) CONSTANT('13'X), /* PREEMPT LCCW                *
*     LRSTR    BIT(8) CONSTANT('43'X), /* RESTORE LCCW                *
*     LEXEC    BIT(8) CONSTANT('FF'X), /* SPECIAL CONTROL OPERATION   *
*     LREAD    BIT(2) CONSTANT('10'B),  /* READ TYPE LCCW             *
*     LWRITE   BIT(2) CONSTANT('01'B),  /* WRITE TYPE LCCW            *
*     LCNTRL   BIT(2) CONSTANT('11'B),  /* CONTROL TYPE LCCW          *
*     LRESET   BIT(4) CONSTANT('1011'B),/* RESET COMMANDS             *
*     LTIC     BIT(8) CONSTANT('08'X),  /* LOGICAL TIC                *
*     LWR      BIT(6) CONSTANT('000001'B),  /* WRITE CONVERSATIONAL   *
*     LWB      BIT(6) CONSTANT('000101'B),  /* WRITE BLOCK            *
*     LWM      BIT(6) CONSTANT('001001'B),  /* WRITE MESSAGE          *
*     LWT      BIT(6) CONSTANT('001101'B),  /* WRITE TRANSMISSION     *
*     LEWM     BIT(6) CONSTANT('011001'B),  /* ERASE/WRITE MESSAGE    *
*     LEWT     BIT(6) CONSTANT('011101'B),  /* ERASE/WRITE TRNSMSSN   *
*     LEAU     BIT(6) CONSTANT('010001'B),  /* ERASE ALL UNPROTECTED  *
*     LRB      BIT(6) CONSTANT('000110'B),  /* READ BLOCK             *
*     LRM      BIT(6) CONSTANT('001010'B),  /* READ MESSAGE           *
*     LRT      BIT(6) CONSTANT('001110'B),  /* READ TRANSMISSION      *
*     LRMOD    BIT(6) CONSTANT('010010'B),  /* READ MODIFIED          *
*     LRBUF    BIT(6) CONSTANT('010110'B),  /* READ BUFFER            *
*     LRCONT   BIT(6) CONSTANT('011010'B),  /* READ CONTINUOUS        *
*     LRPEP    BIT(6) CONSTANT('011110'B),  /* READ PERPETUAL         *
*     LCPYM    BIT(6) CONSTANT('101001'B),  /* COPY MESSAGE           *
*     LCPYT    BIT(6) CONSTANT('101101'B),  /* COPY TRANSMISSION      *
*     LD       BIT(8) CONSTANT('23'X),  /* DISCONNECT                 *
*     LDEC     BIT(8) CONSTANT('33'X),  /* DISCONNECT WITH END OF CALL*
*     LEOC     BIT(8) CONSTANT('53'X),  /* END OF CALL COMMAND        *
*     LXEL     BIT(8) CONSTANT('0B'X),  /* RESET ERROR LOCK           *
*     LXC      BIT(8) CONSTANT('1B'X),  /* RESET CONDITIONAL          *
*     LXI      BIT(8) CONSTANT('2B'X),  /* RESET IMMEDIATE            *
*     LC       BIT(8) CONSTANT('03'X),  /* CONTACT                    *
*     LWPA     BIT(8) CONSTANT('FD'X); /* WRITE POSITIVE ACK          *
*DCL  LMT      BIT(2) CONSTANT('11'B), /* TRANSMISSION MODE           *
*     LMS      BIT(2) CONSTANT('00'B), /* SPECIAL MODE LIKE CONV, EAU *
*     LMB      BIT(2) CONSTANT('01'B), /* BLOCK MODE                  *
*     LMM      BIT(2) CONSTANT('10'B); /* MSG OR CONTINUOUS MODE      *
*/* FOLLOWING EQUATES FOR  - PORT SOLICITOR (DIAL)                    *
*/* PORT SOLICITOR COMMAND CODES                                      *
*DCL PSOL    BIT(8) CONSTANT('FE'X), /* SPECIAL PORT SOLICITOR     1127
*                                       COMMAND                       *
*    STCTL    BIT(8) CONSTANT('01'X), /* START CONTROL                *
*    RESTCTL  BIT(8) CONSTANT('02'X), /* RESET & CONTROL - REDRIVE    *
*    STIPUT   BIT(8) CONSTANT('03'X); /* START INPUT                  *
*/*   FOLLOWING EQUATES FOR SDLC SUPPORT                              *
*DCL  LCCHOLD  BIT(8) CONSTANT('01'X),  /* HOLD                       *
*     LCCRHOLD BIT(8) CONSTANT('02'X),  /* RELEASE HOLD               *
*     LSEND    BIT(8) CONSTANT ('F1'X), /* SEND                       *
*     LCLEAR   BIT(8) CONSTANT ('F2'X), /* CLEAR                      *
*     LCRUD    BIT(8) CONSTANT ('F3'X), /* CLEAR, UNBIND              *
*     LCRUDNFY BIT(8) CONSTANT ('F4'X), /* CLEAR, UNBIND, NOTIFY      *
*     LNFY     BIT(8) CONSTANT ('F5'X), /* NOTIFY                     *
*     LRELCB   BIT(8) CONSTANT ('F6'X), /* RELEASE CB                 *
*     LRESTSR  BIT(8) CONSTANT ('F7'X), /* RESETSR                    *
*     LCLRNFY  BIT(8) CONSTANT('F8'X),  /* CLEAR/NOTIFY               *
*     LCHPUR   BIT(8) CONSTANT('F9'X);  /* PURGE                      *
*DCL  LCCWSIZE FIXED(8) CONSTANT(8);    /* LCCW SIZE                  *
*DCL  LRDS     BIT(8) CONSTANT('FF'X);  /* RECORD DEV STATS COMMAND   *
*DCL  LQUIS    BIT(8) CONSTANT('FE'X);  /* QUIESCE COMMAND            *
*/*              LOGICAL CHANNEL PROGRAM BLOCK                       */
*/*                                                                  */
*/*  REVISIONS                                         006 03/24/75  */
*/*                                                                  */
*DCL  1  ISTLCPB BDY(WORD) BASED(LCPBPTR),                         1132
*        2 LCPTYPE CHAR(1),            /* TYPE CODE                  */
*        2 LCPLNGTH  PTR(8),           /* LENGTH IN BYTES            */
*        2 LCPREQTG CHAR(2),           /* LCPB REQ. TAG FIELD        */
*          3 LCPFLAGS BIT(8),          /* FLAG BYTE                  */
*            4 LCPZRT00 BIT(1),        /* LOGICAL ERROR FLAG         */
*            4 LCPZRT01 BIT(1),        /* CONTROL BLOCK ERROR        */
*            4 LCPZF001 BIT(1),        /* LCP START PROCESS FLAG     */
*              5 LCPZRT02 BIT(1),      /* I/O INITIATION DISABLED    */
*                6 LCPZRTL2 BIT(1),    /* END OF SCHEDULABLE BLOCK   */
*            4 LCPZF002 BIT(1),        /* LCP IN PROCESSING FLAG     */
*              5 LCPZRT03 BIT(1),      /* GO LOOK AT FMCB LINE STATE */
*                                      /* FIELD (REQ. TAG OVERLAY)   */
*                6 LCPZRTL3 BIT(1),    /* WRITE/READ REQUEST         */
*            4 LCPZF003 BIT(1),        /* LCP PROCESSING COMPLETE FLAG*
*              5 LCPZRT04 BIT(1),      /* STPR SET IN BDU FLAG       */
*                                      /* (REQ. TAG OVERLAY)         */
*                6 LCPZRTL4 BIT(1),    /* FEEDBACK REQUESTED         */
*            4 LCPZF004 BIT(1),        /* SINGLE LCCW/LCP FLAG       */
*              5 LCPZRT05 BIT(1),      /* FEEDBACK TO BE ROUTED TO   */
*                                      /* ICNCB FMCB (REQ. TAG       */
*                                      /* OVERLAY)                   */
*                6 LCPZRTL5 BIT(1),    /* DECREMENT SCHED COUNT ON DEQ*
*            4 LCPZRT06 BIT(1),        /* CRITICAL TEXT BLOCK        */
*                                      /* FLAG (REQ. TAG OVERLAY)    */
*              5 LCPZRTL6 BIT(1),      /* WRITE REQUEST              */
*            4 LCPZRT07 BIT(1),        /* BUFFER TRACE ACTIVE        */
*                                      /* FLAG (REQ. TAG OVERLAY)    */
*              5 LCPZRTL7 BIT(1),      /* SCHEDULING FLAG            */
*          3 LCPMNRCD CHAR(1),         /* LCP MINOR REJECTION CODE   */
*            4 LCPZRT08 BIT(1),        /* I/O TRACE ACTIVE FLAG      */
*                                      /* (REQ. TAG OVERLAY)         */
*              5 LCPZRTL8 BIT(1),      /* DEVICE END NOTIFICATION    */
*            4 LCPZRT09 BIT(1),        /* DIALOGUE SCHED DISABLED    */
*              5 LCPZRTL9 BIT(1),      /* CRITICAL TEXT FLAG         */
*            4 LCPZRT0A BIT(1),        /* SIMULATED CONTACT FLAG     */
*            4 LCPZRT0B BIT(1),        /* SIMULATED DISCONNECT FLAG  */
*        2 LCPCHAIN PTR(31),           /* APS CHAIN                  */
*          3 LCPCHAI1 PTR(8),                                      1132
*            4 LCPCHNG BIT(1),         /* GATE BIT                   */
*          3 LCPCHAI2 PTR(24),         /* ADDRESS FIELD              */
*        2 LCPRUCNT PTR(8),            /* NUMBER OF RU FOR THIS LCPB */
*          3 LCPZMIRC CHAR(1),         /* MINOR RETURN CODE          */
*        2 LCPFLAG2 CHAR(1),           /* SECOND FLAG BYTE           */
*          3 LCPPRFLG BIT(1),          /* PACING REQUIRED            */
*          3 LCPASYN  BIT(1),          /* ASYNCHRONOUS LCPB          */
*          3 LCPRSTRT BIT(1),          /* RESTART LCPB               */
*          3 LCPTLBPI BIT(1),          /* TPIOS BLOCK LCCW           */
*            4 LCPZRIMM BIT(1),        /* RESET IMMED REQUIRED ON ERR*/
*          3 LCPFID0  BIT(1),          /* FID0 TH INDICATOR FOR RECORD*
*            4 LCPEXRES BIT(1),        /* EXCEP. RESPONSE SPEC. 3270R*/
*          3 LCPDSTAT BIT(1),          /* DIALOGUE STATE BIT, 3270R  */
*                                      /* 0=REQ. REJECT,1=STATE ERROR*/
*          3 LCPFREE  BIT(1),          /* DEALLOCATE LCPB 3270R      */
*          3 LCPATOP  BIT(1),          /* ATOP LCPB  3270R           */
*        2 LCPSEQ   FIXED(16),         /* OUTBOUND SEQUENCE NUMBER   */
*          3 LCPRRCCT PTR(8),          /* COUNT OF RESPONSES RECEIVED*/
*          3 LCPRRCNT PTR(8),          /* COUNT OF RESPONSES REQUESTED*
*        2 LCPLCCW1 PTR(31),           /* ADDR FIRST LCCW FOR FID1   */
*        2 LCPCID CHAR(4) BDY(WORD),   /* COMMUNICATION ID           */
*          3 LCPSAF BIT(16),           /* SOURCE IDENTIFICATION      */
*          3 LCPDAF BIT(16),           /* DESTINATION IDENTIFICATION */
*        2 LCPNXLCW PTR(31),           /* ADDR NEXT LCCW             */
*        2 LCPFDBA PTR(31),            /* BTU ADDRESS                */
*          3 LCPFDB1 PTR(8),                                       1132
*          3 LCPFDB2 PTR(24),          /* ADDRESS FIELD              */
*        2 LCPTLBAD PTR(31),           /* ADDRESS OF TLB             */
*        2 LCPFOSN  BIT(16),           /* SEQUENCE NUMBER FIRST RU   */
*        2 LCPFSNCH FIXED(15),         /* 1ST SEQ NUMBER IN RU CHAIN */
*        2 LCPSTYPE FIXED(8),          /* LCPB SUB-TYPE X'FF' = RESET,*
*                                      /* X'00' = NON-RESET          */
*        2 LCPFLG1 CHAR(1),            /* FLAGS                      */
*          3 LCPRESET BIT(1),          /* A TPQUE WITH RESET QUEUED  */
*                                      /* THIS ELEMENT               */
*          3 LCPINTER BIT(1),          /* INTERNAL LCPB              */
*          3 LCPDIRPT BIT(1),          /* NOT SEND W/POST=SCHED=0    */
*          3 LCPREDRV BIT(1),          /* LCPB IS FOR REDRIVE        */
*          3 LCPSTLB  BIT(1),          /* TLB NOT TO BE FREED        */
*          3 LCPTRANS BIT(1),          /* DATA INCLUDES CONTROL CHARS*/
*          3 LCPRSV78 BIT(2),          /* RESERVED                   */
*        2 LCPLCCWC BIT(8),            /* COUNT OF LCCWS             */
*        2 LCPRSV77 CHAR(1),           /* RESERVED                   */
*        2 LCPFLCCW PTR(31),           /* ADDR OF FIRST LCCW         */
*          3 LCPUBFSB PTR(31),         /* UNBIND FSB ADDRESS         */
*        2 LCPCLREP PTR(31),           /* PTR TO CLEAR LCPB IN UCB   */
*/*  NOTE:  THE FOLLOWING FIELD - LCPLCCW MUST BE THE LAST FIELD     */
*/*         IN THIS CONTROL BLOCK.  THE CONTROL BLOCK ISTDCLCP HAS   */
*/*         FIELDS IN IT WHICH MUST BE CONTIGUOUS WITH LCPLCCW       */
*        2 LCPLCCW  CHAR(LENGTH(ISTLCCW)) BDY(WORD), /* FIRST LCCW   */
*          3 LCPRSTQH PTR(31),         /* RESET LCPB QUEUE HEADER    */
*          3 LCPPABA  PTR(31),         /* PAB POINTER                */
*            4 LCPRPHA  PTR(31),       /* RPH POINTER                */
*              5 LCPFTYPE BIT(1);      /* FEEDBACK TYPE              */
*/*     CONSTANTS FOR LCPTYPE                                         *
*DCL  LCRPHFT  BIT(1) CONSTANT('1'B);                              1133
*DCL  LCPABFT  BIT(1) CONSTANT('0'B);                              1134
*DCL LCPBFIRM BIT(8) CONSTANT('10'X);  /* LU FAILED, CLSDST, SCHED LOST
*                                         TERM, OPNDST MAY BE TRIED   *
*DCL LCPBTERM BIT(8) CONSTANT('11'X);  /* TERM RECEIVED,CLSDST,    1136
*                                         SCHED LOST TERM             *
*/*                                                                   *
*                                                                  1137
*DCL 1 LCPZTIE BDY(WORD) DEFINED(LCPCID), /* TOLTEP INTERFACE      1137
*                                         ELEMENT OVERLAY            */
*       2  LCPZFMCA PTR(31),           /* ACTIVE FMCB ADDRESS        */
*       2  LCPZSNA PTR(31),            /* SYMBOLIC NAME ADDRESS      */
*       2  LCPZSNAM CHAR(8) BDY(WORD), /* SYMBOLIC NAME              */
*          3  LCPZTRV1 PTR(31),        /* RESERVED FOR RESTORE LCP   */
*          3  LCPZTRV4 PTR(31);        /* RESERVED FOR RESTORE LCP   */
*DCL LCTYPE BIT(8) CONSTANT('04'X);                                1138
*DCL PLCPTYPE BIT(8) CONSTANT('28'X);  /* PURGE LCPB TYPE ID         */
*DCL LCPCLACB BIT(8) CONSTANT('04'X);  /* LCPB FROM CLOSE ACB        */
*DCL LSRSTYPE BIT(8) CONSTANT('FF'X);  /* RESET SUBTYPE              */
*DCL LCPETYPE BIT(8) CONSTANT('40'X);  /* EXTENDED LCPB TYPE ID      */
*/*                                                                  */
*/*  MINOR RETURN CODES                                              */
*/*                                                                  */
*DCL LCMCRSTR BIT(8) CONSTANT('F7'X),  /* MINOR RC FOR RESETSR       */
*    LCPMNEW  BIT(8) CONSTANT('02'X),  /* EARLY WARNING,             */
*                                      /* RECOVERY IN PROGRESS       */
*    LCPMNPF  BIT(8) CONSTANT('03'X),  /* PERM. I/O FAILURE          */
*    LCPMNAS  BIT(8) CONSTANT('04'X),  /* AUTO NETWORK SHUTDOWN      */
*    LCPMNCL  BIT(8) CONSTANT('06'X),  /* CLOSE/CLSDST OCCURED       */
*    LCPMNVD  BIT(8) CONSTANT('07'X),  /* VARY DEACTIVATE            */
*    LCPMNTF  BIT(8) CONSTANT('10'X),  /* TEMP RECORD DEVICE FAILURE */
*    LCPMNSF  BIT(8) CONSTANT('01'X),  /* TEMP BASIC FAILURE /       */
*    LCPMNTS  BIT(8) CONSTANT('11'X),  /* TERMINATE SELF             */
*    LCPMNAP  BIT(8) CONSTANT('0A'X),  /* APPL. ISSUED CLEAR         */
*    LCPMNPR  BIT(8) CONSTANT('0B'X),  /* PREEMPT                    */
*    LCPMNRE  BIT(8) CONSTANT('0C'X);  /* RESTORE                    */
*/* VS1, VS2 TPIOS SAVEAREA FORMAT */                              1144
*DCL  1  ISTZSAVE BDY(WORD) BASED,                                 1144
*        2   ZSAZSVBC PTR(31),         /* SAVEAREA BACK CHAIN        */
*            3   ZSAZSVMS CHAR(1),     /* MODULE TRACE CODE          */
*                4 ZSAZACTV BIT(1),    /* ACTIVE SAVE AREA FLAG      */
*        2   ZSAZSVFC PTR(31),         /* SAVEAREA FORWARD CHAIN     */
*        2   ZSAZSVRR PTR(31),         /* RETURN REGISTER            */
*        2   ZSAZSVVR (6) PTR(31),    /* VARIABLE REGS (7-12) SVEAREA*/
*        2   ZSAZTRAC CHAR(4);        /* EBCDIC NAME OF OWNER        */
*/*                                                                1145
*THE FOLLOWING EQUATES SHOULD READ ''FIXED(8) CONSTANT(LENGTH(X))'',
*WHERE X IS THE NAME OF THE VARIABLE CONTROL BLOCK OR FIELD OF WHICH
*LENGTH IS THE VALUE BEING EQUATED, SHOULD THE PLS COMPILER BE     1145
*BE ABLE TO TAKE IT.                                               1145
*                                                                    */
*DCL ZSAZSVVA FIXED(8) CONSTANT(8);  /* DISPLACEMENT TO VARIABLE REGS*/
*DCL ZSAZSVSZ FIXED(8) CONSTANT(40); /* LENGTH OF ISTZSAVE           */
*/* PREFIX FOR CRR                                                   */
*/*                                                                  */
*/* RELEASE 1 - JUNE 28, 1973                                        */
*/*                                                                  */
*DCL 1 ISTPFCRR BASED BDY(WORD),        /* PREFIX FOR CRR            */
*     2  PFCCRR   CHAR(4),              /* CRR HEADER                */
*        3  PFCCRRID CHAR(1),           /* CRR ID FIELD              */
*           4  CRRID CHAR(1),           /* BASIC CTL LAYER DEFINITION*/
*        3  PFCRSV10 CHAR(1),           /* RESERVED FOR ALIGNMENT    */
*        3  PFCCRRLN CHAR(2),           /* CRR LENGTH                */
*           4  CRRLEN CHAR(2),          /* BASIC CTL LAYER DEF       */
*     2  PFCHDR CHAR(8) BDY(WORD),      /* SAVE AREA FOR OLD CRR FRR */
*        3  PFCCRRO  PTR(31),           /* PTR TO OLD CRR            */
*           4  CRRCHAIN PTR(31),        /* BASIC CTL LAYER DEFINITION
*                                          FOR OLD CRR PTR           */
*        3  PFCFRRO  PTR(31),           /* PTR TO OLD FRR            */
*           4  CRRFRR   PTR(31),        /* BASIC CTL LAYER         1147
*                                          DEFINITION OF OLD FRR PTR */
*     2  PFCFTA BIT(8),                 /* ID OF LAST FUNCTION TRACED*/
*     2  PFCRSV01 CHAR(3);              /* ALIGNMENT                 */
*DCL PFIDPIE BIT(8) CONSTANT('80'X);    /* DOS/VS TPIOS              */
*DCL PFIDORE BIT(8) CONSTANT('81'X);    /* DOS/VS BMS                */
*DCL PFIDAPE BIT(8) CONSTANT('82'X);    /* DOS/VS PSS                */
*DCL PFCIDPSV BIT(8) CONSTANT('38'X); /* COMPONENT ID              1151
*                                          PSS - VS1 AND 2           */
*DCL PFCIDTPV BIT(8) CONSTANT('3C'X); /* COMPONENT ID              1152
*                                          TPIOS VS1 AND 2           */
*DCL PFCIDSME BIT(8) CONSTANT('3D'X); /* COMPONENT ID              1153
*                                          STORAGE MANAGEMENT DOS    */
*DCL PFCIDOC BIT(8) CONSTANT('31'X);    /* COMPONENT ID OPEN/CLOSE   */
*DCL PFCIDPS BIT(8) CONSTANT('32'X);    /* PORT SOLICITOR            */
*DCL PFCIDCS BIT(8) CONSTANT('34'X);    /* CLUSTER SOLICITOR         */
*DCL PFCIDIT BIT(8) CONSTANT('35'X);    /* INIT/TERM                 */
*DCL PFCIDVY BIT(8) CONSTANT('36'X);    /* VARY                      */
*DCL PFCIDNS  BIT(8) CONSTANT('37'X);   /* NET. STAT.SRV.            */
*DCL PFCIDTPE BIT(8) CONSTANT('38'X);   /* COMPONENT ID            1160
*                                          TPIOS - DOS               */
*DCL PFCIDCL BIT(8) CONSTANT('39'X);    /* COMPONENT ID            1161
*                                          CONTROL LAYER             */
*DCL PFCIDPSE BIT(8) CONSTANT('3A'X);   /* COMPONENT ID            1162
*                                          PSS - DOS                 */
*DCL PFCIDSMV BIT(8) CONSTANT('3F'X);   /* COMPONENT ID            1163
*                                          STORAGE MANAGEMENT        */
*DCL PFCIDTIO BIT(8) CONSTANT('40'X);   /* COMPONENT ID TIIO       1164
*                                          PROCESSING (VS2)          */
*DCL PFCIDRS  BIT(8) CONSTANT('41'X);   /* ID FOR REMOTE SOLICITOR   */
*/* CRR FOR COMMAND FACILITIES                                      */
*DCL  1  ISTCFCRR BDY(WORD) BASED, /* CRR FOR COMMAND FACILITIES    */
*        2 CFCAUDIT,               /* AUDIT TRAIL FOR CMD FACILITIES*/
*          3 CFCNTRD  CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES ENTERED            */
*            4 NCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 ENTERED   */
*            4 NCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 ENTERED   */
*            4 NCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 ENTERED   */
*            4 NCFCRP   BIT(1),    /* IND MODULE ISTCFCRP ENTERED   */
*            4 NCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 ENTERED   */
*            4 NCFRSVD  BIT(3),    /* RESERVED                      */
*          3 CFCCRT   CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES RUNNING            */
*            4 CCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 RUNNING   */
*            4 CCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 RUNNING   */
*            4 CCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 RUNNING   */
*            4 CCFCRP   BIT(1),    /* IND MODULE ISTCFCRP RUNNING   */
*            4 CCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 RUNNING   */
*            4 CCFRSVD1 BIT(3);    /* RESERVED                      */
*/* COMPONENT RECOVERY RECORD FOR TPIOS */                         1167
*/*  DELTA                                             006 02/10/75  */
*DCL                                                               1167
*1  ISTZCRR BDY(WORD) BASED,     /* CONTROL WORD                     */
*   2  ZCRCRR CHAR(4),           /* CONTROL WORD                     */
*      3  ZCRID CHAR(1),         /* CONTROL BLOCK ID                 */
*      3  ZCRLEN CHAR(2),        /* LENGTH OF ZCR                    */
*      3  ZCRFLAG CHAR(1),       /* FLAGS                            */
*   2  ZCRCHAIN PTR(31),         /* POINTER TO PREVIOUS ZCR          */
*   2  ZCRFRRA PTR(31),          /* PTR TO FRR                       */
*   2  ZCRFLGS1 CHAR(1),         /* FLGS USED BY REQUEST COMPLETION  */
*      3  ZCREXSW BIT(1),        /* EXIT SWITCH                      */
*      3  ZCRQUESW BIT(1),       /* QUEUE SWITCH                     */
*      3  ZCRDEQSW BIT(1),       /* DEQUEUE SWITCH                   */
*      3  ZCRWAIT BIT(1),        /* WAIT Q ANALYSIS COMPLETE         */
*      3  ZCRNRMEX BIT(1),       /* NORMAL EXIT TO BE TAKEN          */
*      3  ZCRENDLP BIT(1),       /* END OF LOOP SWITCH               */
*      3  ZCRUNSOL BIT(1),       /* UNSOLICITED DATA                 */
*      3  ZCRFEXIT BIT(1),       /* FORCE EXIT SWITCH                */
*   2  ZCRFLGS2 CHAR(1),         /* FLAGS USED WITHIN TPIOS          */
*      3  ZCRLOCAL BIT(1),       /* LOCAL SUPPORT                    */
*      3  ZCRSHEDI BIT(1),       /* IMMEDIATE SCHEDULE               */
*      3  ZCRFMSED BIT(1),       /* FMCB SEARCH ENDED                */
*      3  ZCROB    BIT(1),       /* OUTBOUND PROC IN PROGRESS        */
*      3  ZCRIF0E1 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E2 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E3 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*   2  ZCRSWFLD CHAR(1),         /* SWITCHES FOR TPIOS OUTBOUND      */
*      3  ZCRENDSH BIT(1),       /* EXIT FROM REMOTE DEV SCHEDULER   */
*         4  ZCRSLCP BIT(1),     /* SCHEDULE LCPB                    */
*      3  ZCREXTYP BIT(1),       /* TPEXIT TYPE                      */
*      3  ZCRENDPR BIT(1),       /* EXIT FROM INNER PROCESS          */
*      3  ZCRNDLCP BIT(1),       /* EXIT FROM LCPB PROCESSING        */
*         4  ZCROB1 BIT(1),      /* REMOTE DEV SCHED 1ST TIME SWITCH */
*      3  ZCRENDX BIT(1),        /* EXIT FROM LCCW/BTU XLATION       */
*      3  ZCRENDXL BIT(1),       /* EXIT FROM LCCW PROC              */
*      3  ZCRENDAN BIT(1),       /* EXIT FROM LCPB ANALYSIS          */
*      3  ZCRRESET BIT(1),                                         1167
*         4  ZCRCNLXL BIT(1),    /* CANCEL FURTHER XLATE             */
*   2  ZCRFLGS3 CHAR(1),         /* FLAGS FOR OUTBOUND PROCESSING    */
*      3  ZCRTIC BIT(1),         /* SELECT NOT TO BE SENT            */
*      3  ZCRTPCON BIT(1),       /* TPIOS CONTACT SENT               */
*      3  ZCRTPDIS BIT(1),       /* TPIOS DISCONNECT TO BE SENT      */
*      3  ZCRDISC  BIT(1),       /* DISCONNECT IN PROCESS            */
*      3  ZCREDRIV BIT(1),       /* DO DERIVE                        */
*      3  ZCRNOFRE BIT(1),       /* NO FREEING OF SIO QUEUE          */
*      3  ZCRWRPTR BIT(1),       /* WRITE TO PRINTER REQUEST         */
*      3  ZCRINLCP BIT(1),       /* ERROR OCCURED DURING OUTBND PROC */
*   2  ZCRGENSW CHAR(1),         /* GENERAL SWITCHES                 */
*      3  ZCRTSW1  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRTSW2  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRRT06  BIT(1),       /* CRITICAL TEXT OPTION             */
*      3  ZCRLCSYN BIT(1),       /* LCCW SYNC SPECIFIED              */
*      3  ZCREXRES BIT(1),       /* EXCEPTION RESPONSE SPECIFIED     */
*      3  ZCRCLRBD BIT(1),       /* FLAG INDICATING BIND WAS CLEARED */
*      3  ZCRBRIS  BIT(1),       /* BRACKET REJECTED DUE TO IN BRAC. */
*      3  ZCRF1RES BIT(1),       /* FID1 RESPONSE TO BE GENERATED    */
*   2  ZCRPFLGS CHAR(1),         /* UTILITIES PROC OPTION FLAGS      */
*      3  ZCRQAHED BIT(1),      /* QXFR RTN TO USE INSERT OPT'N ON TPQ*
*      3  *        BIT(7),      /* RESERVED                          */
*   2  ZCRIBPR CHAR(1),          /* INBOUND PROCESSING FLAGS         */
*         3  ZCRNOBUF BIT(1),    /* FSB WITH NO BUFFER               */
*         3  ZCRERR   BIT(1),    /* ERROR INDICATOR                  */
*         3  ZCRRELK  BIT(1),    /* RESET ERROR LOCK FUNCTION REQ.   */
*         3  ZCRLCPFR BIT(1),    /* FLAG IND. DEALLOCATE ATOP LCPB   */
*         3  ZCRLCPFD BIT(1),    /* FLAG IND. LCPB FOUND ON WAITQ    */
*         3  ZCR3270  BIT(1),    /* 3270 DEVICE                      */
*         3  ZCR3270R BIT(1),    /* 3270 DEVICE IN RECORD MODE       */
*         3  *        BIT(1),    /* RESERVED                         */
*   2  ZCRSCPSW CHAR(1),         /* SESSION CONTROL FLAGS            */
*         3  ZCRTPEX BIT(1),     /* TP EXIT                          */
*         3  ZCRTPINV BIT(1),    /* INVOKE TPIOS                     */
*         3  ZCRRJLCP BIT(1),    /* LCPB REJECTED                    */
*         3  ZCRLREQ BIT(1),     /* REQUEST                          */
*         3  ZCRPRCMP BIT(1),    /* PROCESSING COMPLETE              */
*         3  ZCRFSBWE BIT(1),    /* FSB IS WORK ELEMENT              */
*         3  ZCRSKIPT BIT(1),    /* SKIP TRACE FLAG                  */
*         3  *       BIT(1),     /* RESERVED                         */
*   2  ZCRCRLCP PTR(31),         /* CURRENT LCPB PTR                 */
*   2  ZCRPARMS BDY(WORD),       /* PARAMETERS PASSED TO UTILITIES */
*      3  ZCRFBPTR PTR(31),      /* PTR TO FROM BUFFER               */
*         4  ZCRCBPTR PTR(31),   /* PTR TO CURRENT BUFFER            */
*      3  ZCRTBPTR PTR(31),      /* PTR TO TO-OR-TRANSLATE BUFFER    */
*      3  ZCRMLNG FIXED(15),     /* LENGTH TO MOVE                   */
*      3  ZCRDFRDA FIXED(15),    /* OFFSET FROM DATA ADDR IN FROM BUF*/
*         4  ZCRDTODA FIXED(15), /* OFFSET FROM DATA ADDR XLATE BUF  */
*      3  ZCRPCOD1 CHAR(1),      /* CODE BYTE FOR ALLOC/DISALLOC     */
*         4  ZCRPPG BIT(1),      /* GET PAGEABLE BUFF                */
*         4  ZCRPLNG BIT(1),     /* LENGTH OF BUFFER SPECIFIED       */
*         4  ZCRPFSB BIT(1),     /* GET FSB                          */
*         4  ZCRPLSBF BIT(1),    /* GET LSCB AND BUFFER              */
*            5 ZCRPLSBQ BIT(1),  /* PURGE LSCB QUEUE                 */
*         4  ZCRPLSCB BIT(1),    /* GET OR RELEASE LSCB              */
*         4  ZCRPBUF BIT(1),     /* GET OR RELEASE BUFFER            */
*         4  ZCRPCFTX BIT(1),    /* CONFIDENTIAL TEXT                */
*         4  ZCRPRES BIT(1),     /* RESERVED                         */
*      3  ZCRPCOD2 CHAR(1),      /* CODE BYTE FOR MOVE               */
*         4  ZCRPPG2 BIT(1),     /* GET PAGEABLE BUFFER              */
*         4  ZCRPFHDR BIT(1),    /* FROM BUFFER FDB TO BE USED       */
*         4  ZCRPMFGF BIT(1),    /* MOVE STARTS WIHT 1ST BUFF IN BLOCK*
*         4  ZCRPRES2 BIT(5),    /* RESERVED                         */
*      3  ZCRPCHAR CHAR(1),      /* TRANSLATE & TEST SEARCH CHARACTER*/
*      3  ZCRPSW   CHAR(1),      /* SWITCH FIELD                     */
*   2  ZCRCCWA PTR(31),          /* PTR TO CURRENT CCW (CCW 1 OR 2)  */
*   2  ZCRBFPTR PTR(31),         /* SAVE 1ST BUFF PTR IN TO-BUFF CHN
*                                   OR LAST BUFFER IN CHANNEL PGM    */
*   2  ZCRZLB PTR(31),           /* PTR TO CURR BUFF IN CHANNEL PGM  */
*   2  ZCRPVZB PTR(31),          /* PTR TO PREVIOUS BUFF IN CHAN PGM */
*   2  ZCRSVRTN BDY(WORD),       /* REG 14 SAVE AREAS                */
*      3  ZCRSVF1 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF2 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF3 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF4 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF5 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF6 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF7 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF8 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF9 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF10 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF11 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF12 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF13 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF14 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF15 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF16 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF17 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF18 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF19 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF20 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF21 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF22 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF23 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF24 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF25 PTR(31),      /* SAVE REQUIRED REGISTER           */
*   2  ZCRWKARA BDY(WORD),       /* TEMPORARY REG SAVE AREA          */
*      3  ZCRSVWK1 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK2 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK3 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK4 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK5 PTR(31),      /* SAVE REQUIRED REG                */
*   2  ZCRFSBSV PTR(31),         /* FSB CHAIN PTR SAVEAREA           */
*   2  ZCRFBPRC BIT(1),          /* FSB PROCESS SW                   */
*   2  ZCRMOREL BIT(1),          /* MORE ELEMENTS SW                 */
*   2  ZCRSCANQ BIT(1),          /* SCAN QUEUE SW                    */
*   2  ZCRNXTEL BIT(1),          /* NEXT ELEMENT SW                  */
*   2  ZCRXSCHD BIT(1),          /* EXIT SCHEDULE SW                 */
*   2  ZCRLSTFB BIT(1),          /* INBOUND PROC LAST FSB FOR ELEM SW*/
*   2  ZCRTOPQ  BIT(1),          /* QUEUE ELEMENT TO TOP SW          */
*   2  ZCRAWQSW BIT(1),          /* CHECK AWAITQ FOR MORE WORK =1    */
*                                /* CHECK WAITQ =0                   */
*   2  ZCRRCDSV CHAR(1),         /* RETURN CODE SAVEAREA             */
*   2  ZCRPRMTC CHAR(1),         /* PREEMPT COMPLETION PARAMETER BYTE*/
*   2  ZCROPCDE CHAR(1),         /* OP CODE TO BE TRANSFORMED         *
*   2  ZCRR2SV PTR(31),          /* ISTZBFDI REG 2 SAVE EREA         */
*   2  ZCRR13SV PTR(31),         /* ISTSBFDI REG 13 SAVE EREA        */
*   2  ZCRCIDSV BDY(WORD),       /* ISTZBFDI CID SAVE AREA           */
*      3  ZCRSAFSV CHAR(2),      /* ISTZBFDI SAF SAVE AREA           */
*      3  ZCRDAFSV CHAR(2),      /* ISTZBFDI DAF SAVE AREA           */
*   2  ZCRSAVEZ (6) BDY(WORD) CHAR(LENGTH(ISTZSAVE)),              1167
*                                /* SAVE/TRACE AREAS FOR TPIOS MODS  */
*   2  ZCRREMIC PTR(31),        /* POINTER TO REMOTE RN ICNCB        */
*   2  ZCRAUDIT CHAR(36),        /* TPIOS AUDIT TRAIL AREA           */
*      3  ZCRTID CHAR(1),        /* THREAD I.D.                      */
*      3  ZCRTNAME CHAR(4),      /* LAST 4 CHARS OF THREAD NAME      */
*      3  ZCRENTER BIT(248),     /* BIT ARRAY FOR MODULES ENTERED    */
*         4  ZCREAC1A BIT(1),    /* ISTZAC1A ENTERED                 */
*         4  ZCREAC0A BIT(1),    /* ISTZAC0A ENTERED                 */
*         4  ZCREAC0B BIT(1),    /* ISTZAC0B ENTERED                 */
*         4  ZCREAC1B BIT(1),    /* ISTZAC1B ENTERED                 */
*         4  ZCREBCAA BIT(1),    /* ISTZBCAA ENTERED                 */
*         4  ZCREBCAB BIT(1),    /* ISTZBCAB ENTERED                 */
*         4  ZCREBCAE BIT(1),    /* ISTZBCAE ENTERED                 */
*         4  ZCREBCAG BIT(1),    /* ISTZBCAG ENTERED                 */
*         4  ZCREBCAI BIT(1),    /* ISTZBCAI ENTERED                 */
*         4  ZCREBCAM BIT(1),    /* ISTZBCAM ENTERED                 */
*         4  ZCREBCBA BIT(1),    /* ISTZBCBA ENTERED                 */
*         4  ZCREBCBB BIT(1),    /* ISTZBCBB ENTERED                 */
*         4  ZCREBCBI BIT(1),    /* ISTZBCBI ENTERED                 */
*         4  ZCREBCCB BIT(1),    /* ISTZBCCB ENTERED                 */
*         4  ZCREBCDI BIT(1),    /* ISTZBCDI ENTERED                 */
*         4  ZCREBCEB BIT(1),    /* ISTZBCEB ENTERED                 */
*         4  ZCREBCFA BIT(1),    /* ISTZBCFA ENTERED                 */
*         4  ZCREBCFB BIT(1),    /* ISTZBCFB ENTERED                 */
*         4  ZCREBCGA BIT(1),    /* ISTZBCGA ENTERED                 */
*         4  ZCREBCGB BIT(1),    /* ISTZBCGB ENTERED                 */
*         4  ZCREBCHA BIT(1),    /* ISTZBCHA ENTERED                 */
*         4  ZCREBCHB BIT(1),    /* ISTZBCHB ENTERED                 */
*         4  ZCREBCIA BIT(1),    /* ISTZBCIA ENTERED                 */
*         4  ZCREBCIB BIT(1),    /* ISTZBCIB ENTERED                 */
*         4  ZCREBCID BIT(1),    /* ISTZBCID ENTERED                 */
*         4  ZCREBCJA BIT(1),    /* ISTZBCJA ENTERED                 */
*         4  ZCREBCJB BIT(1),    /* ISTZBCJB ENTERED                 */
*         4  ZCREBCKA BIT(1),    /* ISTZBCKA ENTERED                 */
*         4  ZCREBCKB BIT(1),    /* ISTZBCKB ENTERED                 */
*         4  ZCREBCLA BIT(1),    /* ISTZBCLA ENTERED                 */
*         4  ZCREBCLB BIT(1),    /* ISTZBCLB ENTERED                 */
*         4  ZCREBCMB BIT(1),    /* ISTZBCMB ENTERED                 */
*         4  ZCREBCND BIT(1),    /* ISTZBCND ENTERED                 */
*         4  ZCREBCNE BIT(1),    /* ISTZBCNE ENTERED                 */
*         4  ZCREBCOB BIT(1),    /* ISTZBCOB ENTERED                 */
*         4  ZCREBCPB BIT(1),    /* ISTZBCPB ENTERED                 */
*         4  ZCREBCQB BIT(1),    /* ISTZBCQB ENTERED                 */
*         4  ZCREBCRA BIT(1),    /* ISTZBCRA ENTERED                 */
*         4  ZCREBCRB BIT(1),    /* ISTZBCRB ENTERED                 */
*         4  ZCREBCSC BIT(1),    /* ISTZBCSC ENTERED                 */
*         4  ZCREBCXA BIT(1),    /* ISTZBCXA ENTERED                 */
*         4  ZCREBCX0 BIT(1),    /* ISTZBCX0 ENTERED                 */
*         4  ZCREBCY0 BIT(1),    /* ISTZBCY0 ENTERED                 */
*         4  ZCREBCZ0 BIT(1),    /* ISTZBCZ0 ENTERED                 */
*         4  ZCREBC0A BIT(1),    /* ISTZBC0A ENTERED                 */
*         4  ZCREBC0B BIT(1),    /* ISTZBC0B ENTERED                 */
*         4  ZCRECC0A BIT(1),    /* ISTZCC0A ENTERED                 */
*         4  ZCRECC0B BIT(1),    /* ISTZCC0B ENTERED                 */
*         4  ZCRECC1A BIT(1),    /* ISTZCC1A ENTERED                 */
*         4  ZCRECC1B BIT(1),    /* ISTZCC1B ENTERED                 */
*         4  ZCRECC2B BIT(1),    /* ISTZCC2B ENTERED                 */
*         4  ZCREDCA0 BIT(1),    /* ISTZDCA0 ENTERED                 */
*         4  ZCREDCB0 BIT(1),    /* ISTZDCB0 ENTERED                 */
*         4  ZCREDCC0 BIT(1),    /* ISTZDCC0 ENTERED                 */
*         4  ZCREDCD0 BIT(1),    /* ISTZDCD0 ENTERED                 */
*         4  ZCREDCE0 BIT(1),    /* ISTZDCE0 ENTERED                 */
*         4  ZCREDCF0 BIT(1),    /* ISTZDCF0 ENTERED                 */
*         4  ZCREDCH0 BIT(1),    /* ISTZDCH0 ENTERED                 */
*         4  ZCREDCI0 BIT(1),    /* ISTZDCI0 ENTERED                 */
*         4  ZCREDCJ0 BIT(1),    /* ISTZDCJ0 ENTERED                 */
*         4  ZCREDCKA BIT(1),    /* ISTZDCKA ENTERED                 */
*         4  ZCREDCKB BIT(1),    /* ISTZDCKB ENTERED                 */
*         4  ZCREDCL0 BIT(1),    /* ISTZDCL0 ENTERED                 */
*         4  ZCREDCMB BIT(1),    /* ISTZDCMB ENTERED                 */
*         4  ZCREECBA BIT(1),    /* ISTZECBA ENTERED                 */
*         4  ZCREECBB BIT(1),    /* ISTZECBB ENTERED                 */
*         4  ZCREECCA BIT(1),    /* ISTZECCA ENTERED                 */
*         4  ZCREECCB BIT(1),    /* ISTZECCB ENTERED                 */
*         4  ZCREECDA BIT(1),    /* ISTZECDA ENTERED                 */
*         4  ZCREECEA BIT(1),    /* ISTZECEA ENTERED                 */
*         4  ZCREECTA BIT(1),    /* ISTZECTA ENTERED                 */
*         4  ZCREFCEA BIT(1),    /* ISTZFCEA ENTERED                 */
*         4  ZCREFCEB BIT(1),    /* ISTZFCEB ENTERED                 */
*         4  ZCREGCAB BIT(1),    /* ISTZGCAB ENTERED                 */
*         4  ZCREGCBB BIT(1),    /* ISTZGCBB ENTERED                 */
*         4  *        BIT(1),    /* NOT USED                         */
*         4  ZCREGCDB BIT(1),    /* ISTZGCDB ENTERED                 */
*         4  ZCREGCEB BIT(1),    /* ISTZGCEB ENTERED                 */
*         4  ZCREGCLA BIT(1),    /* ISTZGCLA ENTERED                 */
*         4  ZCREGC0A BIT(1),    /* ISTZGC0A ENTERED                 */
*         4  ZCREGC0B BIT(1),    /* ISTZGC0B ENTERED                 */
*         4  ZCREHCAN BIT(1),    /* ISTZHCAN ENTERED                 */
*         4  ZCREICAA BIT(1),    /* ISTZICAA ENTERED                 */
*         4  ZCREICAB BIT(1),    /* ISTZICAB ENTERED                 */
*         4  ZCREICBB BIT(1),    /* ISTZICBB ENTERED                 */
*         4  ZCREICBI BIT(1),    /* ISTZICBI ENTERED                 */
*         4  ZCREICCB BIT(1),    /* ISTZICCB ENTERED                 */
*         4  ZCREICCI BIT(1),    /* ISTZICCI ENTERED                 */
*         4  ZCREICDB BIT(1),    /* ISTZICDB ENTERED                 */
*         4  ZCREICEB BIT(1),    /* ISTZICEB ENTERED                 */
*         4  ZCREICGB BIT(1),    /* ISTZICGB ENTERED                 */
*         4  ZCREICHB BIT(1),    /* ISTZICHB ENTERED                 */
*         4  ZCREICIB BIT(1),    /* ISTZICIB ENTERED                 */
*         4  ZCREICID BIT(1),    /* ISTZICID ENTERED                 */
*         4  ZCREICJB BIT(1),    /* ISTZICJB ENTERED                 */
*         4  ZCREICKB BIT(1),    /* ISTZICKB ENTERED                 */
*         4  ZCREICKE BIT(1),    /* ISTZICKE ENTERED                 */
*         4  ZCREICKG BIT(1),    /* ISTZICKG ENTERED                 */
*         4  ZCREICLB BIT(1),    /* ISTZICLB ENTERED                 */
*         4  ZCREICMB BIT(1),    /* ISTZICMB ENTERED                 */
*         4  ZCREICNA BIT(1),    /* ISTZICNA ENTERED                 */
*         4  ZCREICNB BIT(1),    /* ISTZICNB ENTERED                 */
*         4  ZCREICOA BIT(1),    /* ISTZICOA ENTERED                 */
*         4  ZCREICOB BIT(1),    /* ISTZICOB ENTERED                 */
*         4  ZCREICQA BIT(1),    /* ISTZICQA ENTERED                 */
*         4  ZCREICQB BIT(1),    /* ISTZICQB ENTERED                 */
*         4  ZCREICRB BIT(1),    /* ISTZICRB ENTERED                 */
*         4  ZCREICSB BIT(1),    /* ISTZICSB ENTERED                 */
*         4  ZCREICSC BIT(1),    /* ISTZICSC ENTERED                 */
*         4  ZCREICTB BIT(1),    /* ISTZICTB ENTERED                 */
*         4  ZCREICUB BIT(1),    /* ISTZICUB ENTERED                 */
*         4  ZCREICVB BIT(1),    /* ISTZICVB ENTERED                 */
*         4  ZCREICWB BIT(1),    /* ISTZICWB ENTERED                 */
*         4  ZCREICX0 BIT(1),    /* ISTZICX0 ENTERED                 */
*         4  ZCREIC0B BIT(1),    /* ISTZIC0B ENTERED                 */
*         4  ZCREIC1B BIT(1),    /* ISTZIC1B ENTERED                 */
*         4  ZCREJCAB BIT(1),    /* ISTZJCAB ENTERED                 */
*         4  ZCREJCBB BIT(1),    /* ISTZJCBB ENTERED                 */
*         4  ZCREJCCB BIT(1),    /* ISTZJCCB ENTERED                 */
*         4  ZCREJCDB BIT(1),    /* ISTZJCDB ENTERED                 */
*         4  ZCREJC0B BIT(1),    /* ISTZJC0B ENTERED                 */
*         4  ZCREKCBB BIT(1),    /* ISTZKCBB ENTERED                 */
*         4  ZCREKCBN BIT(1),    /* ISTZKCBN ENTERED                 */
*         4  ZCREKCCN BIT(1),    /* ISTZKCCN ENTERED                 */
*         4  ZCREDCWR BIT(1),    /* ISTZDCWR ENTERED                 */
*         4  ZCREDCWB BIT(1),    /* ISTZDCWB ENTERED                 */
*         4  ZCREDCXR BIT(1),    /* ISTZDCXR ENTERED                 */
*         4  ZCREBCBR BIT(1),    /* ISTZBCBR ENTERED                 */
*         4  ZCREBCDR BIT(1),    /* ISTZBCDR ENTERED                 */
*         4  ZCREBCAR BIT(1),    /* ISTZBCAR ENTERED                 */
*         4  ZCRECCBI BIT(1),    /* ISTZCCBI ENTERED                 */
*         4  ZCRECCAI BIT(1),    /* ISTZCCAI ENTERED                 */
*         4  ZCRECCCI BIT(1),    /* ISTZCCCI ENTERED                 */
*         4  ZCREAC1R BIT(1),    /* ISTZAC1R ENTERED                 */
*         4  ZCREBCSB BIT(1),    /* ISTZBCSB ENTERED                 */
*         4  ZCREDCPR BIT(1),    /* ISTZDCPR ENTERED                 */
*         4  ZCREDCQR BIT(1),    /* ISTZDCQR ENTERED                 */
*         4  ZCREBCAL BIT(1),    /* ISTZBCAL ENTERED                 */
*         4  ZCREBC0L BIT(1),    /* ISTZBC0L ENTERED                 */
*         4  ZCREBCNB BIT(1),    /* ISTZBCNB ENTERED                 */
*         4  ZCREICOE BIT(1),    /* ISTZICOE ENTERED                 */
*         4  ZCREDCNB BIT(1),    /* ISTZDCNB ENTERED                 */
*         4  ZCREKCCB BIT(1),    /* ISTZKCCB ENTERED                 */
*         4  ZCRECFY0 BIT(1),    /* ISTZCFY0 ENTERED                 */
*         4  ZCREDCK0 BIT(1),    /* ISTZDFK0 ENTERED                 */
*         4  ZCREICSG BIT(1),    /* ISTZICSG ENTERED                 */
*         4  ZCREBCIF BIT(1),    /* ISTZBCIF ENTERED                 */
*         4  ZCREDCMF BIT(1),    /* ISTZDCMF ENTERED                 */
*         4  ZCRELCAB BIT(1),    /* ISTZLCAB ENTERED                 */
*         4  ZCREAC2B BIT(1),    /* ISTZAC2B ENTERED                 */
*         4  ZCREIC2B BIT(1),    /* ISTZIC2B ENTERED                 */
*         4  ZCRRSV97 BIT(97),   /* RESERVED                         */
*   2  ZCRCMNRC CHAR(1),                /* PURGE MWOR RETURN CODE    */
*   2  ZCRWORDA CHAR(3),                /* RESERVED FOR LATER USE    */
*   2  ZCRLCPB  CHAR(LENGTH(ISTLCPB)),  /* 3270 S/R LCPB             */
*      3 ZCRRHRU,                       /* SAVEAREA FOR RH AND RU    */
*        4 ZCRRH    CHAR(3),            /* RH                        */
*        4 ZCRRU    CHAR(*);            /* RU                        */
*DCL ZCTYPE BIT(8) CONSTANT('00'X);   /* ZCR TYPE                   */
*DCL ZCLNG FIXED(15) CONSTANT(172);   /* ZCRR LENGTH                */
*DCL ZCRSAVNO BIT(8) CONSTANT('06'X); /* NUMBER OF SAVEAREAS IN ZCRR */
*DCL ZCRLSVNO BIT(8) CONSTANT('04'X); /* NUMBER OF SAVE AREAS IN   1171
*                                         LOCAL SUPPORT              */
*/* *** EQUATES FOR ZCRRCDSV *** */                                1172
*                                                                  1172
*DCL ZCRMRFSB BIT(8) CONSTANT('0C'X);  /* REQUEST COMPLETION MOVE FSB
*                                         TO PROCESS                 */
*DCL ZCRSRCHQ BIT(8) CONSTANT('10'X);  /* REQUEST COMPLETION SEARCH
*                                         REQUEST QUEUE              */
*DCL ZCREXIT  BIT(8) CONSTANT('14'X);  /* REQUEST COMPLETION EXIT    */
*DCL ZCRSFSB  BIT(8) CONSTANT('18'X);  /* REQUEST COMPLETION SINGLE
*                                         FSB                        */
*DCL ZCRDLFSB BIT(8) CONSTANT('1C'X);  /* REQUEST COMPLETION DUAL FSB *
*DCL ZCRNOSCH BIT (8) CONSTANT('20'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NONE                 */
*DCL ZCRNRSCH BIT (8) CONSTANT('24'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NORM                 */
*DCL ZCRLGERR FIXED(8) CONSTANT(8);    /* LOGICAL ERROR              */
*DCL ZCPLSCB BIT(8) CONSTANT('08'X);   /* GET A RELEASE LSCB         */
*DCL ZCPBUF  BIT(8) CONSTANT('04'X);   /* GET A RELEASE BUFFER       */
*DCL ZCRTAC0A FIXED(8) CONSTANT(01);   /* LOCAL DEVICE SCHEDULER(OUT)*/
*DCL ZCRTAC0B FIXED(8) CONSTANT(02);   /* REMOTE DEVICE SCHEDLER(OUT)*/
*DCL ZCRTCC1A FIXED(8) CONSTANT(03);   /* LOCAL DIALOG SCHEDLER(IN)  */
*DCL ZCRTCC1B FIXED(8) CONSTANT(04);   /* REMOTE DIALOG SCHEDLER(IN) */
*DCL ZCRTDCE0 FIXED(8) CONSTANT(05);   /* NCP SLOWDOWN RECOVERY      */
*DCL ZCRTDCKA FIXED(8) CONSTANT(06);   /* LOCAL GENERAL FUNCTIONS    */
*DCL ZCRTDCKB FIXED(8) CONSTANT(07);   /* REMOTE GENERAL FUNCTIONS   */
*DCL ZCRTFCEB FIXED(8) CONSTANT(08);   /* REMOTE READ BUFFER ALLOC.  */
*DCL ZCRTGCLA FIXED(8) CONSTANT(09);   /* LCAL CTL & TEST FEEDBACK(IN)*
*DCL ZCRTGC0A FIXED(8) CONSTANT(10);   /* LOCAL REQ. COMPLETION(IN)  */
*DCL ZCRTGC0B FIXED(8) CONSTANT(11);   /* REMOTE REQ. COMPLETION(IN) */
*DCL ZCRTICWB FIXED(8) CONSTANT(12);   /* RESET CLEANUP (PHASE 5)    */
*DCL ZCRTIC0B FIXED(8) CONSTANT(13);   /* REMOTE REQ COMPLTION CTL(IN)*
*DCL ZCRTAC1B FIXED(8) CONSTANT(14);   /* ISTZAC1B THREAD ID         */
*DCL ZCRTIC1B FIXED(8) CONSTANT(15);   /* ISTZIC1B THREAD ID         */
*DCL ZCRTCCBI FIXED(8) CONSTANT(16);   /* ISTZCCBI THREAD ID         */
*DCL ZCRTAC1R FIXED(8) CONSTANT(17);   /* ISTZAC1R THREAD ID         */
*DCL ZCRTAC1A FIXED(8) CONSTANT(18);   /* ISTZAC1A THREAD ID         */
*DCL ZCRTLCAB FIXED(8) CONSTANT(19);   /* ISTZLCAB THREAD ID         */
*/* COMPONENT RECOVERY                                               */
*/*                                                                  */
*DCL 1 ISTASCRR BDY(WORD) BASED,        /* CRR FOR SMS               */
*     2  ASCPFCRR CHAR(LENGTH(ISTPFCRR)),                          1201
*     2  ASCFLAGS CHAR(7),              /* FLAGS                     */
*        3  ASCFLG1 CHAR(2),            /* MODULE TRACE FLAGS        */
*           4  ASCFBA BIT(1),           /* ALLOCATION IN PATH        */
*           4  ASCFBD BIT(1),           /* DE-ALLOCATION IN PATH     */
*           4  ASCFSR BIT(1),           /* FSR IN PATH               */
*           4  ASCPASTR BIT(13),        /* RESERVED PATH FLAGS       */
*        3  ASCFLG2 CHAR(2),            /* MODULE IN CONTROL FLAGS   */
*           4  ASCFBAIC BIT(1),         /* ALLOCATION IN CONTROL     */
*           4  ASCFBDIC BIT(1),         /* DE-ALLOCATION IN CONTROL  */
*           4  ASCFSRIC BIT(1),         /* FSR IN CONTROL            */
*           4  ASCICR BIT(13),          /* RESERVED IN CONTROL FLAGS */
*        3  ASCFLG3 CHAR(3),            /* AUDIT FLAGS               */
*           4  ASCFSRGT BIT(1),         /* FSR DOING GET PROCESSING  */
*           4  ASCFBDAL BIT(1),         /* FBD DOING ALLOCATION      */
*           4  ASCKEYF BIT(1),          /* KEY HAS BEEN ALTERED      */
*           4  ASCLLKF BIT(1),          /* LOCAL LOCK HELD           */
*           4  ASCFBDUD BIT(1),         /* FBD USING USER DATA       */
*           4  ASCAUDIT BIT(19),        /* RESERVED AUDIT BITS       */
*     2  ASCKEY CHAR(1),                /* ORIGINAL KEY              */
*     2  ASCETRYA PTR(31),              /* RETRY ADRS FOR CONTINUE 1201
*                                          OPTION                    */
*     2  ASCUSRGS CHAR(16),             /* SAVE AREA FOR USER REGS 1201
*                                          14 - 1                    */
*        3  ASCUSR14 CHAR(4),           /* REGISTER 14               */
*        3  ASCUSR15 CHAR(4),           /* REGISTER 15               */
*        3  ASCUSR00 CHAR(4),           /* REGISTER 0                */
*        3  ASCUSR01 CHAR(4),           /* REGISTER 1                */
*     2  ASCPSREG CHAR(16);             /* SAVE AREA FOR PSS       1201
*                                          REGS 1 - 4                */
*/*  INITIAL LEVEL                                      001 04/09/75 */
*DCL 1 ISTAPCRR BDY(WORD) BASED,                                   1202
*     2 APCHDRSV CHAR(LENGTH(ISTPFCRR)),  /* HEADER                  */
*     2  APCATFLG CHAR(2),              /* AUDIT TRACE FLAGS         */
*        3  APC51E BIT(1),              /* ISTAPC51 WAS ENTERED      */
*        3  APC52E BIT(1),              /* ISTAPC52  '     '         */
*        3  APC53E BIT(1),              /* ISTAPC53                  */
*        3  APC54E BIT(1),                                         1202
*        3  APC56E BIT(1),                                         1202
*        3  APC57E BIT(1),                                         1202
*        3  APC58E BIT(1),                                         1202
*        3  APC31E BIT(1),                                         1202
*        3 * BIT(8),                    /* RESERVED                  */
*     2  APCRFLG CHAR(2),               /* AUDIT TRACE FLAGS         */
*        3  APC51R BIT(1),              /* ISTAPCR1 IS RUNNING       */
*        3  APC52R BIT(1),              /* ISTAPC52 IS RUNNING       */
*        3  APC53R BIT(1),                                         1202
*        3  APC54R BIT(1),                                         1202
*        3  APC56R BIT(1),                                         1202
*        3  APC57R BIT(1),                                         1202
*        3  APC58R BIT(1),                                         1202
*        3  APC31R BIT(1),                                         1202
*        3  *      BIT(8),              /* RESERVED                  */
*     2  APCPSTA PTR(31),               /* PST@                      */
*     2  APCTCBA PTR(31),               /* TCB@                      */
*     2  APCRTRN PTR(31),               /*@ TO BR14 TO RTN TO SYSTEM */
*     2  APCPABSV PTR(31),              /*SAVED PAB@ TO REDISPATCH   */
*     2  APCQWFO PTR(31),               /* Q@ IN PST WORK AREA ON    */
*     2  APCFRRPM PTR(31),              /* WORKAREA@ RTN'D FROM SETFR*/
*     2  APCSAVE CHAR(72),                                         1202
*        3  APCESTAL CHAR(72),          /* ESTAE PARAMETER LIST AREA */
*     2  APCCOMF CHAR(4) BDY(HWORD),    /* FLAGS USED BY ALL PSS RTN */
*        3  APCCOMF1 CHAR(2),                                      1202
*           4  APCSSTSK BIT(1),         /* IRB TYPE WORK             */
*           4  APCUETSK BIT(1),         /* USER EXIT RUNNING UNDER IRB*
*           4  APCSMCR BIT(1),          /* SMA CRA BEING USED        */
*           4  APCIRB1 BIT(1),          /* IRB1 BEING USED           */
*           4  APCIRB2 BIT(1),          /* IRB2 BEING USED           */
*           4  APCRELR BIT(1),          /*CALL ISTAPC58 TO RLEASE CRA*/
*           4  APCEXIT BIT(1),          /* TELLS ISTAPC58 TO EXIT SYS*/
*           4  APCZLBER BIT(1),         /* ERR WHILE RUNNING ZLFAB PAB*
*           4  * BIT(8),                /* RESERVED                  */
*        3  APCRETCD FIXED(15),         /* RTN CODE FOR R15 FOR SYS  */
*     2  APCSAV1 PTR(31),               /* 1ST SAVE WORD             */
*     2  APCSAV2 PTR(31),               /* 2ND SAVE WORD             */
*     2  APCSWTWD CHAR(4),              /* SWITCH AREA FOR PSS RTN   */
*     2  APC31FLG CHAR(1),              /* ISTAPC31 FLAGS            */
*        3  APCTPXIT BIT(1),            /* TPEXIT IN PROGRESS        */
*        3  APCRESCH BIT(1),            /*PAB TPEXIT OCCURED  RESCHED*/
*        3  APCSORT BIT(1),       /* PAB SORTED TO PROPER PST/MPST   */
*        3  *       BIT(5),       /* RESERVED                        */
*     2  APC52FLG CHAR(1),        /* ISTAPC52 FLAGS                  */
*        3  APCCKRQ BIT(1),       /* CHECK RDY Q FOR WORK            */
*        3  APCSMSR BIT(1),       /* RETURNING SMS RPH               */
*        3  APCQENQ BIT(1),       /* ENQUEUEING PAB'S ON PST Q'S     */
*        3  APCRDQ BIT(1),        /* DEQUEING PAB'S FROM PST RDY Q   */
*        3  APCNWF BIT(1),        /* NO WORK FOUND                   */
*        3  APCWKF   BIT(1),      /* WORK FOUND                      */
*        3    *      BIT(2),      /* RESERVED                        */
*     2  APC53FLG CHAR(1),        /* ISTAPC53 FLAGS                  */
*        3  APCPR153 BIT(1),      /* USED PREALLOCATED CRA           */
*     2  APC54FLG CHAR(1),        /* ISTAPC54 FLAGS                  */
*        3  APCRLST BIT(1),       /* SMS BEING CALLED TO RELEASE UECB*/
*        3  * BIT(7),             /* RESERVED                        */
*     2  APC57FLG CHAR(1),        /* ISTAPC57 FLAGS                  */
*        3  APCRECRA BIT(1),      /* RELEASE CRA BEING DONE          */
*        3  APCNREL BIT(1),       /* DID NOT RELEASE CRA             */
*        3  *   BIT(6),           /* RESERVED                        */
*     2  * CHAR(15);              /* RESERVED                        */
*/*               COMPONENT RECOVERY AREA                            */
*/*  REVISIONS                                         005 04/09/75  */
*DCL 1  ISTCRA BASED BDY(DWORD),        /* COMPONENT RECOVERY AREA   */
*     2  CRABASIC BDY(WORD),            /* CRA WITHOUT PROCESS CRR   */
*      3 CRAHDR CHAR(8) BDY(WORD),      /* CRA HEADER                */
*        4  CRACRR PTR(31),             /* PTR TO ACTIVE CRR         */
*        4  CRAFRR PTR(31),             /* PTR TO ACTIVE FRR         */
*      3 CRALKACT BIT(32),              /* LOCK LEVEL AND          1203
*                                          OWNERSHIP FLAGS           */
*        4  CRALEV32 BIT(1),            /* 1 = LEVEL 32 LOCK HELD    */
*        4  CRALEV31 BIT(1),            /* 1 = LEVEL 31 LOCK HELD    */
*        4  CRALEV30 BIT(1),            /* 1 = LEVEL 30 LOCK HELD    */
*        4  CRALEV29 BIT(1),            /* 1 = LEVEL 29 LOCK HELD    */
*        4  CRALEV28 BIT(1),            /* 1 = LEVEL 28 LOCK HELD    */
*        4  CRALEV27 BIT(1),            /* 1 = LEVEL 27 LOCK HELD    */
*        4  CRALEV26 BIT(1),            /* 1 = LEVEL 26 LOCK HELD    */
*        4  CRALEV25 BIT(1),            /* 1 = LEVEL 25 LOCK HELD    */
*        4  CRALEV24 BIT(1),            /* 1 = LEVEL 24 LOCK HELD    */
*        4  CRALEV23 BIT(1),            /* 1 = LEVEL 23 LOCK HELD    */
*        4  CRALEV22 BIT(1),            /* 1 = LEVEL 22 LOCK HELD    */
*        4  CRALEV21 BIT(1),            /* 1 = LEVEL 21 LOCK HELD    */
*        4  CRALEV20 BIT(1),            /* 1 = LEVEL 20 LOCK HELD    */
*        4  CRALEV19 BIT(1),            /* 1 = LEVEL 19 LOCK HELD    */
*        4  CRALEV18 BIT(1),            /* 1 = LEVEL 18 LOCK HELD    */
*        4  CRALEV17 BIT(1),            /* 1 = LEVEL 17 LOCK HELD    */
*        4  CRALEV16 BIT(1),            /* 1 = LEVEL 16 LOCK HELD    */
*        4  CRALEV15 BIT(1),            /* 1 = LEVEL 15 LOCK HELD    */
*        4  CRALEV14 BIT(1),            /* 1 = LEVEL 14 LOCK HELD    */
*        4  CRALEV13 BIT(1),            /* 1 = LEVEL 13 LOCK HELD    */
*        4  CRALEV12 BIT(1),            /* 1 = LEVEL 12 LOCK HELD    */
*        4  CRALEV11 BIT(1),            /* 1 = LEVEL 11 LOCK HELD    */
*        4  CRALEV10 BIT(1),            /* 1 = LEVEL 10 LOCK HELD    */
*        4  CRALEV09 BIT(1),            /* 1 = LEVEL 9 LOCK HELD     */
*        4  CRALEV08 BIT(1),            /* 1 = LEVEL 8 LOCK HELD     */
*        4  CRALEV07 BIT(1),            /* 1 = LEVEL 7 LOCK HELD     */
*        4  CRALEV06 BIT(1),            /* 1 = LEVEL 6 LOCK HELD     */
*        4  CRALEV05 BIT(1),            /* 1 = LEVEL 5 LOCK HELD     */
*        4  CRALEV04 BIT(1),            /* 1 = LEVEL 4 LOCK HELD     */
*        4  CRALEV03 BIT(1),            /* 1 = LEVEL 3 LOCK HELD     */
*        4  CRALEV02 BIT(1),            /* 1 = LEVEL 2 LOCK HELD     */
*        4  CRALEV01 BIT(1),            /* 1 = LEVEL 1 LOCK HELD     */
*      3 CRAL1PTR PTR(31),              /* PTR TO LEVEL 1 LOCK       */
*      3 CRAL2PTR PTR(31),              /* PTR TO LEVEL 2 LOCK       */
*      3 CRAL3PTR PTR(31),              /* PTR TO LEVEL 3 LOCK       */
*      3 CRAL4PTR PTR(31),              /* PTR TO LEVEL 4 LOCK       */
*      3 CRAL5PTR PTR(31),              /* PTR TO LEVEL 5 LOCK       */
*      3 CRAL6PTR PTR(31),              /* PTR TO LEVEL 6 LOCK       */
*      3 CRAL7PTR PTR(31),              /* PTR TO LEVEL 7 LOCK       */
*      3 CRAL8PTR PTR(31),              /* PTR TO LEVEL 8 LOCK       */
*      3 CRAL9PTR PTR(31),              /* PTR TO LEVEL 9 LOCK       */
*      3 CRALAPTR PTR(31),              /* RESERVED                  */
*/*                                                                  */
*/*   VS1/VS2 EXTENSION                                              */
*/*                                                                  */
*     2  CRARPH CHAR(LENGTH(ISTRPH)),   /* RPH ASSOCIATED WITH     1203
*                                          THIS CRH                  */
*     2  CRAPSS CHAR(LENGTH(ISTAPCRR)), /* PSS CRR                   */
*     2  CRAPROCR CHAR(LENGTH(ISTZCRR)) BDY(DWORD), /* PROCESS CRR   */
*     2  CRASVC CHAR(72) BDY(WORD),     /* SERVICE RTN CRA           */
*        3  CRAASCRR CHAR(LENGTH(ISTASCRR)), /* CRR FOR SMS          */
*        3  CRAHSIZ  PTR(31),           /* HEADER SIZE QUED SMS REQ  */
*        3  CRAMASK  PTR(31),           /* PREFIX MASK QUED SMS REQ  */
*        3  CRABUFA  FIXED(31),         /* BUFF QUE FOR FBQ ALLOCATION*
*           4 CRABFTBA BIT(1),          /* NO BUFFERS ALLOCATED YET   *
*     2  CRARSV01 PTR(31),              /* RESERVED                  */
*     2  CRARSV02 PTR(31),              /* RESERVED                  */
*     2  CRACHAIN PTR(31);              /* CHAIN FIELD USED TO QUEUE
*                                          CRA TO PREALLOCATE QUEUE
*                                          WHEN NOT IN USE           */
*DCL CRALMS32 BIT(32) CONSTANT('80000000'X); /* 32ND LEVEL LOCK MASK */
*DCL CRALMS31 BIT(32) CONSTANT('40000000'X); /* 31ST LEVEL LOCK MASK */
*DCL CRALMS30 BIT(32) CONSTANT('20000000'X); /* 30TH LEVEL LOCK MASK */
*DCL CRALMS29 BIT(32) CONSTANT('10000000'X); /* 29TH LEVEL LOCK MASK */
*DCL CRALMS28 BIT(32) CONSTANT('08000000'X); /* 28TH LEVEL LOCK MASK */
*DCL CRALMS27 BIT(32) CONSTANT('04000000'X); /* 27TH LEVEL LOCK MASK */
*DCL CRALMS26 BIT(32) CONSTANT('02000000'X); /* 26TH LEVEL LOCK MASK */
*DCL CRALMS25 BIT(32) CONSTANT('01000000'X); /* 25TH LEVEL LOCK MASK */
*DCL CRALMS24 BIT(32) CONSTANT('00800000'X); /* 24TH LEVEL LOCK MASK */
*DCL CRALMS23 BIT(32) CONSTANT('00400000'X); /* 23RD LEVEL LOCK MASK */
*DCL CRALMS22 BIT(32) CONSTANT('00200000'X); /* 22ND LEVEL LOCK MASK */
*DCL CRALMS21 BIT(32) CONSTANT('00100000'X); /* 21ST LEVEL LOCK MASK */
*DCL CRALMS20 BIT(32) CONSTANT('00080000'X); /* 20TH LEVEL LOCK MASK */
*DCL CRALMS19 BIT(32) CONSTANT('00040000'X); /* 19TH LEVEL LOCK MASK */
*DCL CRALMS18 BIT(32) CONSTANT('00020000'X); /* 18TH LEVEL LOCK MASK */
*DCL CRALMS17 BIT(32) CONSTANT('00010000'X); /* 17TH LEVEL LOCK MASK */
*DCL CRALMS16 BIT(32) CONSTANT('00008000'X); /* 16TH LEVEL LOCK MASK */
*DCL CRALMS15 BIT(32) CONSTANT('00004000'X); /* 15TH LEVEL LOCK MASK */
*DCL CRALMS14 BIT(32) CONSTANT('00002000'X); /* 14TH LEVEL LOCK MASK */
*DCL CRALMS13 BIT(32) CONSTANT('00001000'X); /* 13TH LEVEL LOCK MASK */
*DCL CRALMS12 BIT(32) CONSTANT('00000800'X); /* 12TH LEVEL LOCK MASK */
*DCL CRALMS11 BIT(32) CONSTANT('00000400'X); /* 11TH LEVEL LOCK MASK */
*DCL CRALMS10 BIT(32) CONSTANT('00000200'X); /* 10TH LEVEL LOCK MASK */
*DCL CRALMS09 BIT(32) CONSTANT('00000100'X); /* 9TH LEVEL LOCK MASK  */
*DCL CRALMS08 BIT(32) CONSTANT('00000080'X); /* 8TH LEVEL LOCK MASK  */
*DCL CRALMS07 BIT(32) CONSTANT('00000040'X); /* 7TH LEVEL LOCK MASK  */
*DCL CRALMS06 BIT(32) CONSTANT('00000020'X); /* 6TH LEVEL LOCK MASK  */
*DCL CRALMS05 BIT(32) CONSTANT('00000010'X); /* 5TH LEVEL LOCK MASK  */
*DCL CRALMS04 BIT(32) CONSTANT('00000008'X); /* 4TH LEVEL LOCK MASK  */
*DCL CRALMS03 BIT(32) CONSTANT('00000004'X); /* 3RD LEVEL LOCK MASK  */
*DCL CRALMS02 BIT(32) CONSTANT('00000002'X); /* 2ND LEVEL LOCK MASK  */
*DCL CRALMS01 BIT(32) CONSTANT('00000001'X); /* 1ST LEVEL LOCK MASK  */
*DCL CRACRA   CHAR(4) CONSTANT('CRA ');      /* CHARACTER C.B. ID    */
* /*  CONNECTION SERVICES COMPONENT RECOVERY RECORD                  */
* /* COMPLETED DCR SOLUTIONS                                         */
* /* 1H0540 APRIL 28, 1973 MB                                        */
*/* ZTR4417 JUNE 20, 73 DNM */                                     1237
* DCL 1 ISTCNSTA BDY(WORD) BASED,       /* CONNECTION SERVICES     1237
*                                          COMPONENT RECOVERY RECORD */
*     2  CNSTPFX CHAR(LENGTH(ISTPFCRR)), /* STANDARD PREFIX        1237
*                                          FOR CRR                   */
*     2  CNSTFLDA CHAR(3),              /* TRACE FIELD A - HISTORY   */
*        3  CNSMRINA BIT(1),            /* MASTER ENTERED            */
*        3  CNSAUTHA BIT(1),            /* ABOUT TO CALL AUTHORI-  1237
*                                          SATION EXIT       ZTR4417 */
*        3  CNSAQINA BIT(1),            /* ACQUIRE ENTERED           */
*        3  CNSXREQA BIT(1),            /* ACQUIRE SATISFIED         */
*        3  CNSQREQA BIT(1),            /* ACQUIRE QUEUED            */
*        3  CNSRLINA BIT(1),            /* RELEASE ENTERED           */
*        3  CNSDORLA BIT(1),            /* DOREL REALLOCATION      1237
*                                          ENTERED                   */
*        3  CNSTRRLA BIT(1),            /* RELEASE OF ACTIVE       1237
*                                          CONNECTION                */
*        3  CNSRQRLA BIT(1),            /* RELEASE QUEUED REQUEST    */
*        3  CNSPSINA BIT(1),            /* PASS ENTERED              */
*        3  CNSACINA BIT(1),            /* ACCEPT ENTERED            */
*        3  CNSLGINA BIT(1),            /* LOGON ENTERED             */
*        3  CNSGBINA BIT(1),            /* PREEMPT ENTERED           */
*        3  CNSCLINA BIT(1),            /* CANCEL ENTERED            */
*        3  CNSCLAQA BIT(1),            /* CANCEL ACQUIRES           */
*        3  CNSTCONA BIT(1),            /* TCONNECT                  */
*        3  CNSACONA BIT(1),            /* ACONNECT                  */
*        3  CNSQUEUA BIT(1),            /* QUEUE                     */
*        3  CNSSEARA BIT(1),            /* SEARCH Q                  */
*        3  CNSGETSA BIT(1),            /* CONNECTION SERVICES     1237
*                                          GETSTORE                  */
*        3  CNSFREEA BIT(1),            /* CONNECTION SERVICES     1237
*                                          FREESTORE                 */
*        3  CNSACCTA BIT(1),            /* ABOUT TO CALL           1237
*                                          ACCOUNTING EXIT           */
*        3  CNSLOG0A BIT(1),            /* LOGON 0                   */
*        3  CNSRSV01 BIT(1),            /* RESERVED                  */
*     2  CNSTFLDB CHAR(3),              /* TRACE FIELD B -         1237
*                                          CURRENT ACTIVITY          */
*        3  CNSMRINB BIT(1),                                       1237
*        3  CNSAUTHB BIT(1),                                       1237
*        3  CNSAQINB BIT(1),                                       1237
*        3  CNSXREQB BIT(1),                                       1237
*        3  CNSQREQB BIT(1),                                       1237
*        3  CNSRLINB BIT(1),                                       1237
*        3  CNSDORLB BIT(1),                                       1237
*        3  CNSTRRLB BIT(1),                                       1237
*        3  CNSRQRLB BIT(1),                                       1237
*        3  CNSPSINB BIT(1),                                       1237
*        3  CNSACINB BIT(1),                                       1237
*        3  CNSLGINB BIT(1),                                       1237
*        3  CNSGBINB BIT(1),                                       1237
*        3  CNSCLINB BIT(1),                                       1237
*        3  CNSCLAQB BIT(1),                                       1237
*        3  CNSTCONB BIT(1),                                       1237
*        3  CNSACONB BIT(1),                                       1237
*        3  CNSQUEUB BIT(1),                                       1237
*        3  CNSSEARB BIT(1),                                       1237
*        3  CNSGETSB BIT(1),                                       1237
*        3  CNSFREEB BIT(1),                                       1237
*        3  CNSACCTB BIT(1),                                       1237
*        3  CNSLOG0B BIT(1),                                       1237
*        3  CNSRSV05 BIT(1);                                       1237
*/*    CRR FOR VARY                                                  */
*/*  REVISIONS                                         009 03/24/75  */
*/*                                                                  */
* DCL 1 ISTVYCRR BDY(WORD) BASED,       /* CRR FOR SSCP              */
*     2  VYCCNS   CHAR(LENGTH(ISTCNSTA)), /* RESERVE SPACE FOR     1238
*                                          CONN. SVCS. AUDIT         */
*     2  VYCAUDIT,                      /* AUDIT TRAIL FOR SSCP      */
*        3  VYCNTRD CHAR(12),           /* LIST OF MODULES IN SSCP   */
*                                       /* 1 = ENTERED               */
*           4  NINCCL BIT(1),           /* MODULE = ISTINCCL         */
*           4  NINCIO BIT(1),           /* MODULE = ISTINCIO         */
*           4  NINCDL BIT(1),           /* MODULE = ISTINCDL         */
*           4  NINCMY BIT(1),           /* MODULE = ISTINCMY         */
*           4  NINCMD BIT(1),           /* MODULE = ISTINCMD         */
*           4  NINCVI BIT(1),           /* MODULE = ISTINCVI         */
*           4  NINCVA BIT(1),           /* MODULE = ISTINCVA         */
*           4  NINCLF BIT(1),           /* MODULE = ISTINCLF         */
*           4  NINCR1 BIT(1),           /* MODULE = ISTINCR1         */
*           4  NINCSM BIT(1),           /* MODULE = ISTINCSM         */
*           4  NINCFS BIT(1),           /* MODULE = ISTINCFS         */
*           4  NINCVX BIT(1),           /* MODULE = ISTINCVX         */
*           4  NINCVP BIT(1),           /* MODULE = ISTINCVP         */
*           4  NINCVS BIT(1),           /* MODULE = ISTINCVS         */
*           4  NINCVN BIT(1),           /* MODULE = ISTINCVO         */
*           4  NINCMS BIT(1),           /* MODULE = ISTINCMS         */
*           4  NINCR2 BIT(1),           /* MODULE = ISTINCR2         */
*           4  NINCIP BIT(1),           /* MODULE = ISTINCIP         */
*           4  NINCD1 BIT(1),           /* MODULE = ISTINCD1         */
*           4  NINCD2 BIT(1),           /* MODULE = ISTINCD2         */
*           4  NINCD3 BIT(1),           /* MODULE = ISTINCD3         */
*           4  NINCD4 BIT(1),           /* MODULE = ISTINCD4         */
*           4  NINCD5 BIT(1),           /* MODULE = ISTINCD5         */
*           4  NINCD6 BIT(1),           /* MODULE = ISTINCD6         */
*           4  NINCD7 BIT(1),           /* MODULE = ISTINCD7         */
*           4  NINCD8 BIT(1),           /* MODULE = ISTINCD8         */
*           4  NINCD9 BIT(1),           /* MODULE = ISTINCD9         */
*           4  NINCE0 BIT(1),           /* MODULE = ISTINCE0         */
*           4  NINCE2 BIT(1),           /* MODULE = ISTINCE2         */
*           4  NINCE3 BIT(1),           /* MODULE = ISTINCE3         */
*           4  NINCE4 BIT(1),           /* MODULE = ISTINCE4         */
*           4  NINCFM BIT(1),           /* MODULE = ISTINCFM         */
*           4  NINCF1 BIT(1),           /* MODULE = ISTINCF1         */
*           4  NINCF3 BIT(1),           /* MODULE = ISTINCF3         */
*           4  NINCF4 BIT(1),           /* MODULE = ISTINCF4         */
*           4  NINCL0 BIT(1),           /* MODULE = ISTINCL0         */
*           4  NINCL1 BIT(1),           /* MODULE = ISTINCL1         */
*           4  NINCL2 BIT(1),           /* MODULE = ISTINCL2         */
*           4  NINCL3 BIT(1),           /* MODULE = ISTINCL3         */
*           4  NINCL4 BIT(1),           /* MODULE = ISTINCL4         */
*           4  NINCL5 BIT(1),           /* MODULE = ISTINCL5         */
*           4  NINCL6 BIT(1),           /* MODULE = ISTINCL6         */
*           4  NINCL7 BIT(1),           /* MODULE = ISTINCL7         */
*           4  NINCL8 BIT(1),           /* MODULE = ISTINCL8         */
*           4  NINCS1 BIT(1),           /* MODULE = ISTINCS1         */
*           4  NINCUM BIT(1),           /* MODULE = ISTINCUM         */
*           4  NINCU0 BIT(1),           /* MODULE = ISTINCU0          *
*           4  NINCU1 BIT(1),           /* MODULE = ISTINCU1         */
*           4  NINCU2 BIT(1),           /* MODULE = ISTINCU2         */
*           4  NINCU3 BIT(1),           /* MODULE = ISTINCU3         */
*           4  NINCU4 BIT(1),           /* MODULE = ISTINCU4         */
*           4  NINCU5 BIT(1),           /* MODULE = ISTINCU5         */
*           4  NINCU6 BIT(1),           /* MODULE = ISTINCU6         */
*           4  NINCU7 BIT(1),           /* MODULE = ISTINCU7         */
*           4  NINCU8 BIT(1),           /* MODULE = ISTINCU8         */
*           4  NINCV2 BIT(1),           /* MODULE = ISTINCV2         */
*           4  NINCV3 BIT(1),           /* MODULE = ISTINCV3         */
*           4  NINCV4 BIT(1),           /* MODULE = ISTINCV4         */
*           4  NINCV5 BIT(1),           /* MODULE = ISTINCV5         */
*           4  NINCV6 BIT(1),           /* MODULE = ISTINCV6         */
*           4  NINCV7 BIT(1),           /* MODULE = ISTINCV7         */
*           4  NINCV8 BIT(1),           /* MODULE = ISTINCV8         */
*           4  NINCV9 BIT(1),           /* MODULE = ISTINCV9         */
*           4  NINCW0 BIT(1),           /* MODULE = ISTINCW0         */
*           4  NINCW2 BIT(1),           /* MODULE = ISTINCW2         */
*           4  NINCW4 BIT(1),           /* MODULE = ISTINCW4         */
*           4  NINCW5 BIT(1),           /* MODULE = ISTINCW5         */
*           4  NINCW6 BIT(1),           /* MODULE = ISTINCW6         */
*           4  NINCW7 BIT(1),           /* MODULE = ISTINCW7         */
*           4  NINCW8 BIT(1),           /* MODULE = ISTINCW8         */
*           4  NINCW9 BIT(1),           /* MODULE = ISTINCW9         */
*           4  NINCX0 BIT(1),           /* MODULE = ISTINCX0         */
*           4  NINCX1 BIT(1),           /* MODULE = ISTINCX1         */
*           4  NINCX2 BIT(1),           /* MODULE = ISTINCX2         */
*           4  NINCX3 BIT(1),           /* MODULE = ISTINCX3         */
*           4  NINCX6 BIT(1),           /* MODULE = ISTINCX6         */
*           4  NINCX7 BIT(1),           /* MODULE = ISTINCX7         */
*           4  NINCX8 BIT(1),           /* MODULE = ISTINCX8         */
*           4  NINCX9 BIT(1),           /* MODULE = ISTINCX9         */
*           4  NINCUA BIT(1),           /* MODULE = ISTINCUA         */
*           4  NINCUB BIT(1),           /* MODULE = ISTINCUB         */
*           4  NINCUQ BIT(1),           /* MODULE = ISTINCUQ         */
*           4  NINCE1 BIT(1),           /* MODULE = ISTINCE1         */
*           4  NINCE5 BIT(1),           /* MODULE = ISTINCE5         */
*           4  NINCE6 BIT(1),           /* MODULE = ISTINCE6         */
*           4  NINCE7 BIT(1),           /* MODULE = ISTINCE7         */
*           4  NINCE8 BIT(1),           /* MODULE = ISTINCE8         */
*           4  NINCR3 BIT(1),           /* MODULE = ISTINCR3         */
*           4  NINCR5 BIT(1),           /* MODULE = ISTINCR5         */
*           4  NINCVO BIT(1),           /* MODULE = ISTINCVO         */
*           4  NINCE9 BIT(1),           /* MODULE = ISTINCE9         */
*           4  NINCFE BIT(1),           /* MODULE = ISTINCFE         */
*           4  VYCRSV01 BIT(4),         /* RESERVED                  */
*        3  VYCCRT CHAR(12),            /* LIST OF SSCP MODULES      */
*                                       /* 2 =  RUNNING              */
*           4  CINCCL BIT(1),           /* MODULE = ISTINCCL         */
*           4  CINCIO BIT(1),           /* MODULE = ISTINCIO         */
*           4  CINCDL BIT(1),           /* MODULE = ISTINCDL         */
*           4  CINCMY BIT(1),           /* MODULE = ISTINCMY         */
*           4  CINCMD BIT(1),           /* MODULE = ISTINCMD         */
*           4  CINCVI BIT(1),           /* MODULE = ISTINCVI         */
*           4  CINCVA BIT(1),           /* MODULE = ISTINCVA         */
*           4  CINCLF BIT(1),           /* MODULE = ISTINCLF         */
*           4  CINCR1 BIT(1),           /* MODULE = ISTINCR1         */
*           4  CINCSM BIT(1),           /* MODULE = ISTINCSM         */
*           4  CINCFS BIT(1),           /* MODULE = ISTINCFS         */
*           4  CINCVX BIT(1),           /* MODULE = ISTINCVX         */
*           4  CINCVP BIT(1),           /* MODULE = ISTINCVP         */
*           4  CINCVS BIT(1),           /* MODULE = ISTINCVS         */
*           4  CINCVN BIT(1),           /* MODULE = ISTINCVO         */
*           4  CINCMS BIT(1),           /* MODULE = ISTINCMS         */
*           4  CINCR2 BIT(1),           /* MODULE = ISTINCR2         */
*           4  CINCIP BIT(1),           /* MODULE = ISTINCIP         */
*           4  CINCD1 BIT(1),           /* MODULE = ISTINCD1         */
*           4  CINCD2 BIT(1),           /* MODULE = ISTINCD2         */
*           4  CINCD3 BIT(1),           /* MODULE = ISTINCD3         */
*           4  CINCD4 BIT(1),           /* MODULE = ISTINCD4         */
*           4  CINCD5 BIT(1),           /* MODULE = ISTINCD5         */
*           4  CINCD6 BIT(1),           /* MODULE = ISTINCD6         */
*           4  CINCD7 BIT(1),           /* MODULE = ISTINCD7         */
*           4  CINCD8 BIT(1),           /* MODULE = ISTINCD8         */
*           4  CINCD9 BIT(1),           /* MODULE = ISTINCD9         */
*           4  CINCE0 BIT(1),           /* MODULE = ISTINCE0         */
*           4  CINCE2 BIT(1),           /* MODULE = ISTINCE2         */
*           4  CINCE3 BIT(1),           /* MODULE = ISTINCE3         */
*           4  CINCE4 BIT(1),           /* MODULE = ISTINCE4         */
*           4  CINCFM BIT(1),           /* MODULE = ISTINCFM         */
*           4  CINCF1 BIT(1),           /* MODULE = ISTINCF1         */
*           4  CINCF3 BIT(1),           /* MODULE = ISTINCF3         */
*           4  CINCF4 BIT(1),           /* MODULE = ISTINCF4         */
*           4  CINCL0 BIT(1),           /* MODULE = ISTINCL0         */
*           4  CINCL1 BIT(1),           /* MODULE = ISTINCL1         */
*           4  CINCL2 BIT(1),           /* MODULE = ISTINCL2         */
*           4  CINCL3 BIT(1),           /* MODULE = ISTINCL3         */
*           4  CINCL4 BIT(1),           /* MODULE = ISTINCL4         */
*           4  CINCL5 BIT(1),           /* MODULE = ISTINCL5         */
*           4  CINCL6 BIT(1),           /* MODULE = ISTINCL6         */
*           4  CINCL7 BIT(1),           /* MODULE = ISTINCL7         */
*           4  CINCL8 BIT(1),           /* MODULE = ISTINCL8         */
*           4  CINCS1 BIT(1),           /* MODULE = ISTINCS1         */
*           4  CINCUM BIT(1),           /* MODULE = ISTINCUM         */
*           4  CINCU0 BIT(1),           /* MODULE = ISTINCU0          *
*           4  CINCU1 BIT(1),           /* MODULE = ISTINCU1         */
*           4  CINCU2 BIT(1),           /* MODULE = ISTINCU2         */
*           4  CINCU3 BIT(1),           /* MODULE = ISTINCU3         */
*           4  CINCU4 BIT(1),           /* MODULE = ISTINCU4         */
*           4  CINCU5 BIT(1),           /* MODULE = ISTINCU5         */
*           4  CINCU6 BIT(1),           /* MODULE = ISTINCU6         */
*           4  CINCU7 BIT(1),           /* MODULE = ISTINCU7         */
*           4  CINCU8 BIT(1),           /* MODULE = ISTINCU8         */
*           4  CINCV2 BIT(1),           /* MODULE = ISTINCV2         */
*           4  CINCV3 BIT(1),           /* MODULE = ISTINCV3         */
*           4  CINCV4 BIT(1),           /* MODULE = ISTINCV4         */
*           4  CINCV5 BIT(1),           /* MODULE = ISTINCV5         */
*           4  CINCV6 BIT(1),           /* MODULE = ISTINCV6         */
*           4  CINCV7 BIT(1),           /* MODULE = ISTINCV7         */
*           4  CINCV8 BIT(1),           /* MODULE = ISTINCV8         */
*           4  CINCV9 BIT(1),           /* MODULE = ISTINCV9         */
*           4  CINCW0 BIT(1),           /* MODULE = ISTINCW0         */
*           4  CINCW2 BIT(1),           /* MODULE = ISTINCW2         */
*           4  CINCW4 BIT(1),           /* MODULE = ISTINCW4         */
*           4  CINCW5 BIT(1),           /* MODULE = ISTINCW5         */
*           4  CINCW6 BIT(1),           /* MODULE = ISTINCW6         */
*           4  CINCW7 BIT(1),           /* MODULE = ISTINCW7         */
*           4  CINCW8 BIT(1),           /* MODULE = ISTINCW8         */
*           4  CINCW9 BIT(1),           /* MODULE = ISTINCW9         */
*           4  CINCX0 BIT(1),           /* MODULE = ISTINCX0         */
*           4  CINCX1 BIT(1),           /* MODULE = ISTINCX1         */
*           4  CINCX2 BIT(1),           /* MODULE = ISTINCX2         */
*           4  CINCX3 BIT(1),           /* MODULE = ISTINCX3         */
*           4  CINCX6 BIT(1),           /* MODULE = ISTINCX6         */
*           4  CINCX7 BIT(1),           /* MODULE = ISTINCX7         */
*           4  CINCX8 BIT(1),           /* MODULE = ISTINCX8         */
*           4  CINCX9 BIT(1),           /* MODULE = ISTINCX9         */
*           4  CINCUA BIT(1),           /* MODULE = ISTINCUA         */
*           4  CINCUB BIT(1),           /* MODULE = ISTINCUB         */
*           4  CINCUQ BIT(1),           /* MODULE = ISTINCUQ         */
*           4  CINCE1 BIT(1),           /* MODULE = ISTINCE1         */
*           4  CINCE5 BIT(1),           /* MODULE = ISTINCE5         */
*           4  CINCE6 BIT(1),           /* MODULE = ISTINCE6         */
*           4  CINCE7 BIT(1),           /* MODULE = ISTINCE7         */
*           4  CINCE8 BIT(1),           /* MODULE = ISTINCE8         */
*           4  CINCR3 BIT(1),           /* MODULE = ISTINCR3         */
*           4  CINCR5 BIT(1),           /* MODULE = ISTINCR5         */
*           4  CINCVO BIT(1),           /* MODULE = ISTINCVO         */
*           4  CINCE9 BIT(1),           /* MODULE = ISTINCE9         */
*           4  CINCFE BIT(1),           /* MODULE = ISTINCFE         */
*           4  VYCRSV03 BIT(4),         /* RESERVED                  */
*     2  VYCRRSAV CHAR(72),             /* SAVE AREA USED BY ISTINCIP*/
*                                       /* TO CALL ISTINCW3          */
*     2  VYCRRCW3 CHAR(8),              /* PARAM LIST USED BY        */
*                                       /* ISTINCIP TO CALL ISTINCW3 */
*     2  VYCRSV04 CHAR(2),              /* RESERVED                  */
*     2  VYCRSV02 PTR(31);              /* RESERVED                  */
*DCL TIDINCDL BIT(8) CONSTANT('00'X);   /* THREAD ID FOR ISTINCDL    */
*DCL TIDINCMY BIT(8) CONSTANT('01'X);   /* THREAD ID FOR ISTINCMY    */
*DCL TIDINCCL BIT(8) CONSTANT('02'X);   /* THREAD ID FOR ISTINCCL    */
*DCL TIDINCFE BIT(8) CONSTANT('04'X);   /* THREAD ID FOR ISTINCFE    */
*/* ***** POOL ENTRY  ***** */                                     1243
*/*  INITIAL LEVEL                                     001 12/20/74  */
*DCL   1  ISTBPENT BDY(DWORD) BASED(BPEPTR),                       1243
*         2  BPEPID   CHAR(4),         /* POOL ID                    */
*         2  BPEFLAGS BIT(16),         /* POOL FLAGS ZUP0589 @Z40GKDS*/
*            3  BPEFM    BIT(1),       /* POOL FORMAT                */
*            3  BPEDISP  BIT(1),       /* SHARED OR PRIVATE          */
*            3  BPEFIXED BIT(1),       /* FIXED OR PAGEABLE          */
*            3  BPENFCHP BIT(1),       /* NON-FETCH PROTECTION       */
*            3  BPEAL48  BIT(1),       /* 4,8 ALIGNEMENT OF BUFFERS  */
*            3  BPECBID  BIT(1),       /* CBID POOL                  */
*            3  BPENWS   BIT(1),       /* NON-WORKING SET POOL       */
*            3  BPERSV01 BIT(1),       /* RESERVED   ZUP0589 @Z40GKDS*/
*            3  BPEUSRF  BIT(1),       /* USER REQUIRES FIXED BUF    */
*            3  BPERSV02 BIT(7),       /* RESERVED   ZUP0589 @Z40GKDS*/
*         2  BPEBFSIZ FIXED(15),       /* BUFFER SIZE IN BYTES       */
*         2  BPEBPCB  PTR(31),         /* ADDRESS OF BPCB            */
*         2  BPERSV03 CHAR(4);         /* RESERVED                   */
*/* ***** POOL DIRECTORY  ***** */                                 1244
*/*  REVISIONS                                         002 03/20/75  */
*DCL   1  ISTBPDTY BDY(DWORD) BASED(BPDPTR),                       1244
*         2  BPDHDR CHAR(144) BDY(WORD),/* DIRECTORY HEADER          */
*            3  BPDBPENT FIXED(15),    /* CURRENT NUMBER OF ENTRIES  */
*            3  BPDBPMAX FIXED(15),    /* MAXIMUN NUMBER OF ENTRIES  */
*            3  BPDCHBNO FIXED(15),    /* NO. BUFFERS FOR CHPGM      */
*            3  BPDCHBSZ FIXED(15),    /* BUFFER SIZE FOR CH PGM     */
*            3  BPDCHPCB PTR(31),      /* BPCB ADDR FOR CHPGM        */
*            3  BPDPGPCB PTR(31),      /* BPCB ADDR FOR PGBUF        */
*            3  BPDADRS1 PTR(31),      /* BEGINNIG ADDR FOR POOLS    */
*            3  BPDADRS2 PTR(31),      /* END ADDR FOR POOLS         */
*            3  BPDFEXT  PTR(31),      /* ADDR OF 1ST FREE EXTENT    */
*            3  BPDSMPCB PTR(31),      /* SMS WE BPCB ADDRESS        */
*            3  BPDFBPE  PTR(31),      /* FIRST POOL ENTRY           */
*            3  BPDATCVT PTR(31),      /* PTR BACK TO ATCVT          */
*            3  BPDFLAG  FIXED(32),    /* FLAGS FIELD                */
*               4 BPDGTR   BIT(1),     /* GTRACE REQUESTED           */
*               4 BPDRSV01 BIT(31),    /* RESERVED                   */
*            3  BPDREQCT FIXED(15),    /* COUNT OF REQSTORES         */
*            3  BPDREQMX FIXED(15),    /* GTRACE REQ INTRVAL         */
*            3  BPDPARM  CHAR(8) BDY(WORD),/* GTRACE PARM            */
*               4 BPDTRLEN FIXED(15),  /* GTRACE DATA LENGTH         */
*               4 *        CHAR(1),    /* RESERVED                   */
*               4 BPDTRID  CHAR(1),    /* GTRACE FORMAT ID           */
*               4 BPDTRADR PTR(31),    /* GTRACE DATA ADDR           */
*            3  BPDTRACE (11) CHAR(8) BDY(WORD),/* GTRACE DATA       */
*               4 BPDMUSE  FIXED(15),  /* MAX BUFFERS IN USE         */
*               4 BPDMQUE  FIXED(15),  /* MAX REQUESTS QUEUED        */
*               4 BPDAVNO  FIXED(15),  /* AVAIL NUMBER OF BUFFRS     */
*               4 *        CHAR(2),    /* RESERVED                   */
*         2  BPDENTRY (12)CHAR(LENGTH(ISTBPENT)), /* BEGIN POOL ENTRY*/
*         2  BPDCBID  CHAR(*);         /* CBID TABLE SECTION         */
*                                                                  1245
* DECLARE                                                          1245
*   EMCR0 PTR REG(0),                                              1245
*   EMCR1 PTR REG(1),                                              1245
*   EMCR2 PTR REG(2),                                              1245
*   EMCR3 PTR REG(3),                                              1245
*   EMCR4 PTR REG(4),                                              1245
*   EMCR5 PTR REG(5),                                              1245
*   EMCR6 PTR REG(6),                                              1245
*   EMCR7 PTR REG(7),                                              1245
*   EMCR8 PTR REG(8),                                              1245
*   EMCR9 PTR REG(9),                                              1245
*   EMCR10 PTR REG(10),                                            1245
*   EMCR11 PTR REG(11),                                            1245
*   EMCR12 PTR REG(12),                                            1245
*   EMCR13 PTR REG(13),                                            1245
*   EMCR14 PTR REG(14),                                            1245
*   EMCR15 PTR REG(15);                                            1245
* DCL ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*); /*RESET ROUTINE*/    1246
* DCL ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*); /*TPQUE ROUTINE*/    1247
* GEN (PRINT ON);                                                  1248
         PRINT ON
*/* END OF TPEPILOG */                                             1249
*END ISTINCF3                                                      1249
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IFGRPL  )                                        *
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                        *
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEZIOB  )                                        *
*;                                                                 1249
         B     @EL00001                                            1249
@DATA    DS    0H
@CH00048 DC    H'1'
@SM05425 MVC   CF3RPLX(0),REQNAME(@11)
@DATD    DSECT
         DS    0F
ISTINCF3 CSECT
         DS    0F
@CF00037 DC    F'4'
@CH00037 EQU   @CF00037+2
@CF00176 DC    F'7'
@CF00039 DC    F'8'
@CF00032 DC    F'12'
@CF05420 DC    F'56'
@CF01429 DC    F'72'
@CF05417 DC    F'112'
@CF05421 DC    F'-40'
@CF02014 DC    XL4'7FFFFFFF'
@CF02016 DC    XL4'80000000'
@CF02040 DC    XL4'08000000'
@CF04131 DC    XL4'00FFFFFF'
@DATD    DSECT
         DS    0D
CVTPTR   DS    A
IOBPRPTR DS    A
IOBSTPTR DS    A
FMCBPTR  DS    A
BFHDRPTR DS    A
CF3RDTP  DS    A
CF3RU    DS    A
CF3BUFF  DS    A
LCPBPTR  DS    A
BPEPTR   DS    A
BPDPTR   DS    A
CF3WKMAP DS    CL72
         ORG   CF3WKMAP
CF3SAV1  DS    AL4
CF3SAV2  DS    AL4
CF3SAV3  DS    AL4
CF3SAV4  DS    AL4
CF3SAV5  DS    AL4
CF3SAV6  DS    AL4
CF3SAV7  DS    AL4
CF3SAV8  DS    AL4
CF3SAV9  DS    AL4
CF3SAV10 DS    AL4
CF3SAV11 DS    AL4
CF3MSG   DS    CL16
         ORG   CF3MSG
CF3LUID  DS    CL8
CF3RPLX  DS    CL8
         ORG   CF3WKMAP+60
CF3MSGID DS    CL4
CF3RRUA  DS    CL7
         ORG   CF3RRUA
CF3RRL   DS    CL1
CF3RRU   DS    CL6
         ORG   CF3WKMAP+71
CF3FLAG  DS    CL1
         ORG   CF3FLAG
CF3SUCC  DS    BL1
CF3FIRST EQU   CF3FLAG+0
         ORG   CF3WKMAP+72
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTINCF3 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV03958 DC    V(ISTINCS1)
@CV03960 DC    V(ISTINCY5)
@CV03959 DC    V(ISTINCVI)
         DS    0D
FMZA0042 DS    FL4
         ORG   FMZA0042
@NM00075 DC    AL1(8)
@NM00076 DC    AL3(0)
         ORG   FMZA0042+4
FMZA0096 DS    FL4
         ORG   FMZA0096
@NM00077 DC    AL1(64)
@NM00078 DC    AL3(0)
         ORG   FMZA0096+4
@CC04082 DC    C'695I'
@CC04084 DC    C'696I'
@CB04101 DC    X'0000000000000000'
@CB04104 EQU   @CB04101
@CB04092 DC    X'200000'
         DS    CL1
CF3PATCH DS    CL33
         ORG   CF3PATCH
@NM00064 DC    11CL3'CF3'
         ORG   CF3PATCH+33
CF3MID0  DS    CL4
         ORG   CF3MID0
@NM00067 DC    AL1(3)
CF3MD0   DC    CL3'000'
         ORG   CF3MID0+4
CF3MID1  DS    CL4
         ORG   CF3MID1
@NM00068 DC    AL1(3)
CF3MD1   DC    CL3'001'
         ORG   CF3MID1+4
CF3MID4  DS    CL4
         ORG   CF3MID4
@NM00069 DC    AL1(3)
CF3MD4   DC    CL3'004'
         ORG   CF3MID4+4
CF3MID7  DS    CL4
         ORG   CF3MID7
@NM00070 DC    AL1(3)
CF3MD7   DC    CL3'007'
         ORG   CF3MID7+4
CF3MID8  DS    CL4
         ORG   CF3MID8
@NM00071 DC    AL1(3)
CF3MD8   DC    CL3'008'
         ORG   CF3MID8+4
CF3APP   DS    CL7
         ORG   CF3APP
@NM00072 DC    AL1(6)
CF3APPC  DC    CL6'APPLID'
         ORG   CF3APP+7
CF3LOGM  DS    CL8
         ORG   CF3LOGM
@NM00073 DC    AL1(7)
CF3LMC   DC    CL7'LOGMODE'
         ORG   CF3LOGM+8
CF3LOGN  DS    CL6
         ORG   CF3LOGN
@NM00074 DC    AL1(5)
CF3LNC   DC    CL5'LOGON'
         ORG   CF3LOGN+6
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CF3LURDT EQU   @02
CF3CHN   EQU   @11
CF3RLEN  EQU   @05
CF3CSL   EQU   @02
CF3CSP   EQU   @05
CF3RPL   EQU   @03
CF3BFR   EQU   @11
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR15P   EQU   @15
RPHPTR   EQU   @01
CF3R0    EQU   @00
CF3R1    EQU   @01
CF3R2    EQU   @02
CF3BUFA  EQU   @02
CF3R3    EQU   @03
CF3BUFL  EQU   @03
CF3R4    EQU   @04
CF3UPTR  EQU   @04
CF3R5    EQU   @05
CF3CPYL  EQU   @05
CF3R13   EQU   @13
CF3R14   EQU   @14
CF3R15   EQU   @15
CF3WKA   EQU   @10
CF3NCSPL EQU   @06
REG1117  EQU   @01
EMCR13   EQU   @13
REG15117 EQU   @15
EMCR0    EQU   @00
EMCR1    EQU   @01
EMCR10   EQU   @10
EMCR11   EQU   @11
EMCR12   EQU   @12
EMCR14   EQU   @14
EMCR15   EQU   @15
EMCR2    EQU   @02
EMCR3    EQU   @03
EMCR4    EQU   @04
EMCR5    EQU   @05
EMCR6    EQU   @06
EMCR7    EQU   @07
EMCR8    EQU   @08
EMCR9    EQU   @09
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR15F   EQU   @15
ATCLCPTR EQU   1032
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLID    EQU   RPLIDWD
RPLREQ   EQU   RPLIDWD+2
RPLLEN   EQU   RPLIDWD+3
RPLLEN2  EQU   RPLLEN
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLAREA  EQU   RPLCOMN+32
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLRLEN  EQU   RPLCOMN+48
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLNIB   EQU   RPLEXTD1
RPLVTEXT EQU   IFGRPL+76
RPLAAREA EQU   RPLVTEXT
RPLAARLN EQU   RPLVTEXT+4
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
ISTRPL   EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IOBPREFX EQU   0
IOBCFLG1 EQU   IOBPREFX
IOBSTDRD EQU   0
IOBFLAG1 EQU   IOBSTDRD
IOBCYCCK EQU   IOBFLAG1
IOBRSTRT EQU   IOBFLAG1
IOBFLAG2 EQU   IOBSTDRD+1
IOBPURGE EQU   IOBFLAG2
IOBRDHA0 EQU   IOBFLAG2
IOBSENS0 EQU   IOBSTDRD+2
IOBS0B7  EQU   IOBSENS0
IOBSENS1 EQU   IOBSTDRD+3
IOBECBPT EQU   IOBSTDRD+4
IOBFLAG3 EQU   IOBSTDRD+8
IOBFL3   EQU   IOBFLAG3
IOBCNC   EQU   IOBFL3
IOBICL   EQU   IOBFL3
IOBCSW   EQU   IOBSTDRD+9
IOBIOCSW EQU   IOBCSW
IOBSTBYT EQU   IOBIOCSW+3
IOBUSTAT EQU   IOBSTBYT
IOBCSTAT EQU   IOBSTBYT+1
IOBSTART EQU   IOBSTDRD+16
IOBDCBPT EQU   IOBSTDRD+20
IOBFLAG4 EQU   IOBDCBPT
IOBRESTR EQU   IOBSTDRD+24
IOBINCAM EQU   IOBSTDRD+28
IOBBTAMF EQU   IOBINCAM
ISTPOHD  EQU   0
POHSTAT  EQU   ISTPOHD+1
ISTPFX   EQU   0
PFXID    EQU   ISTPFX
ISTNCSPL EQU   0
@NM00029 EQU   ISTNCSPL
NCSPFX   EQU   @NM00029
NCSPLVBF EQU   ISTNCSPL+18
NCSPLVFL EQU   ISTNCSPL+20
NCSPLVF1 EQU   ISTNCSPL+21
NCSPLRPT EQU   ISTNCSPL+52
NCSPLCMD EQU   ISTNCSPL+60
NCSCMDA  EQU   NCSPLCMD
NCSCRFLG EQU   ISTNCSPL+67
NCSPLRAD EQU   ISTNCSPL+144
NCSIOCID EQU   ISTNCSPL+148
NCSPLCID EQU   NCSIOCID
NCSPLWKA EQU   ISTNCSPL+152
NCSPLCVT EQU   ISTNCSPL+156
NCSPLRPH EQU   ISTNCSPL+160
NCSPLFSB EQU   ISTNCSPL+168
NCSPLFL1 EQU   ISTNCSPL+176
NCSPLEBN EQU   NCSPLFL1
NCSPLFL2 EQU   ISTNCSPL+177
NCSPLFL3 EQU   ISTNCSPL+178
NCSPLFL4 EQU   ISTNCSPL+179
NCSPLFL5 EQU   ISTNCSPL+181
NCSPLAPP EQU   ISTNCSPL+216
NCSSENSE EQU   ISTNCSPL+244
NCSMGLPT EQU   ISTNCSPL+252
NCSUFMCB EQU   ISTNCSPL+256
NCSCRMSK EQU   ISTNCSPL+268
NCSCHKPT EQU   NCSCRMSK
NCSCRMOD EQU   NCSCRMSK+2
NCSPLSID EQU   ISTNCSPL+271
NCSPLSTA EQU   NCSPLSID
NCSPLPHD EQU   NCSPLSID+1
NCSAPP   EQU   0
NCSAPBUE EQU   NCSAPP+88
NCSUSSRU EQU   0
NCSRULEN EQU   NCSUSSRU
NCSRUITS EQU   NCSUSSRU+2
ISTCSP   EQU   0
CSPIDX   EQU   ISTCSP
CSPOPT   EQU   ISTCSP+2
CSPOPT1  EQU   CSPOPT
CSPOPT2  EQU   CSPOPT+1
CSPRSC2F EQU   CSPOPT2
CSPDEST  EQU   ISTCSP+8
CSPRSCE  EQU   ISTCSP+12
CSPCC    EQU   ISTCSP+20
CSPNO    EQU   ISTCSP+22
CSPRSC2B EQU   ISTCSP+32
ISTCSL   EQU   0
CSLRDEF  EQU   ISTCSL
CSLRDTE  EQU   CSLRDEF
CSLNDEF  EQU   ISTCSL+4
CSLNIB   EQU   CSLNDEF
CSLDDEF  EQU   ISTCSL+8
CSLDATA  EQU   CSLDDEF
ISTBIND  EQU   0
BINFMTY  EQU   ISTBIND
BINPRIP  EQU   ISTBIND+3
BINSECP  EQU   ISTBIND+4
BINCMNP  EQU   ISTBIND+5
BINCMNP2 EQU   ISTBIND+6
BINUSEL  EQU   ISTBIND+35
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00037 EQU   LOKCHNG+2
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTACDEB EQU   0
ACDVTPRX EQU   ISTACDEB
ACDDBPFX EQU   ISTACDEB+16
ACDTBLOF EQU   ACDDBPFX+6
ACDBASIC EQU   ISTACDEB+24
ACDTCBAD EQU   ACDBASIC
ACDNMSUB EQU   ACDTCBAD
ACDDEBAD EQU   ACDBASIC+4
ACDUSRPG EQU   ACDBASIC+16
ACDACBAD EQU   ACDBASIC+24
ACDAPPAD EQU   ACDBASIC+28
ACDVTAM  EQU   ISTACDEB+56
ACDSSPAB EQU   ACDVTAM+48
ACDSSFLG EQU   ACDVTAM+80
ACDAPDAT EQU   ACDVTAM+83
ISTRPH   EQU   0
RPHFLAGS EQU   ISTRPH+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   ISTRPH+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTRH    EQU   0
RHFLAGS  EQU   ISTRH
RH1      EQU   RHFLAGS
RH2      EQU   RHFLAGS+1
RHRETRY  EQU   RH2
RHRSVD1  EQU   RH2
RH3      EQU   RHFLAGS+2
ISTSRU   EQU   0
SRUTYPE  EQU   ISTSRU+1
SRULDID  EQU   ISTSRU+2
SRUSPSN  EQU   SRULDID
ISTNSRU  EQU   0
NSRUID   EQU   ISTNSRU
NSRUSUB  EQU   ISTNSRU+1
NSRURCD  EQU   ISTNSRU+2
NSRUDATA EQU   ISTNSRU+3
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCSTAT  EQU   ISTFMCB+28
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMDR  EQU   FMCCMDFL
FMCDEBA  EQU   ISTFMCB+32
FMCCMPS1 EQU   ISTFMCB+36
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCTSLHA EQU   FMCRRESP
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF006 EQU   FMCZFLAG
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTRPRE  EQU   0
RPRNAME  EQU   ISTRPRE
RPRCOMID EQU   ISTRPRE+8
RPRENTRY EQU   ISTRPRE+20
RPRFLAGA EQU   ISTRPRE+21
RPRACT   EQU   RPRFLAGA
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRNSNEA EQU   ISTRPRE+36
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
RCPINTA  EQU   RCPLGNIN+16
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCCRFLG EQU   ISTRCC+108
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTFNDSP EQU   0
FNDLU    EQU   ISTFNDSP
FNDAREA  EQU   ISTFNDSP+4
FNDMODE  EQU   ISTFNDSP+8
ISTDYPAB EQU   0
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSMRQ  EQU   ATCCOM+180
ATCSMRS  EQU   ATCCOM+188
ATCSRTDF EQU   ATCCOM+208
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCMSGP  EQU   ISTATCVT+344
ATCHPGM  EQU   ISTATCVT+384
ATCAP33  EQU   ISTATCVT+444
ATCAP35  EQU   ISTATCVT+448
ATCAP36  EQU   ISTATCVT+452
ATCVOCLK EQU   ISTATCVT+468
ATCRDTLK EQU   ISTATCVT+472
ATCVLCNT EQU   ISTATCVT+772
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSRTAB EQU   ISTATCVT+820
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTMGL   EQU   0
MGLUSSFL EQU   ISTMGL+3
MGLREQ   EQU   MGLUSSFL
MGLCMPAT EQU   MGLUSSFL
MGLRUPTR EQU   ISTMGL+4
MGLSENSE EQU   MGLRUPTR+2
MGLNS1   EQU   MGLSENSE
MGLNS2   EQU   MGLSENSE+1
MGLMSGAD EQU   ISTMGL+8
MGLVDATA EQU   ISTMGL+12
MGLUSSMG EQU   0
MGLUSSTX EQU   0
MGLRUFLD EQU   0
ISTBFHDR EQU   0
BFHNXCHN EQU   ISTBFHDR
BFHSIZE  EQU   ISTBFHDR+4
BFHDATA  EQU   ISTBFHDR+8
ISTLGPFX EQU   0
LGPDTLEN EQU   ISTLGPFX+8
LGPUSECT EQU   ISTLGPFX+10
LGPSESSP EQU   ISTLGPFX+12
LGPLOGNP EQU   ISTLGPFX+48
CF3WKSPA EQU   0
CF3SVMAP EQU   0
CF3BKPTR EQU   CF3SVMAP+4
CF3FWPTR EQU   CF3SVMAP+8
CF3NXTAV EQU   0
CF3DEST  EQU   0
REQRU    EQU   0
REQMODE  EQU   REQRU+4
REQLEN2  EQU   REQRU+13
REQNAME  EQU   REQRU+14
REQIDF   EQU   0
REQIDLEN EQU   REQIDF
REQPASSF EQU   0
REQPASSL EQU   REQPASSF
REQUDATA EQU   0
REQULEN  EQU   REQUDATA
REQUDAT  EQU   REQUDATA+1
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRAL2PTR EQU   CRABASIC+16
CRAL3PTR EQU   CRABASIC+20
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTCNSTA EQU   0
CNSTFLDA EQU   ISTCNSTA+16
CNSTFLDB EQU   ISTCNSTA+19
ISTVYCRR EQU   0
VYCAUDIT EQU   ISTVYCRR+22
VYCNTRD  EQU   VYCAUDIT
NINCF3   EQU   VYCNTRD+4
VYCCRT   EQU   VYCAUDIT+12
CINCF3   EQU   VYCCRT+4
ISTAPC37 EQU   0
FMZL0024 EQU   0
ISTBPENT EQU   0
BPEFLAGS EQU   ISTBPENT+4
ISTBPDTY EQU   0
BPDHDR   EQU   ISTBPDTY
BPDPGPCB EQU   BPDHDR+12
BPDFLAG  EQU   BPDHDR+40
BPDPARM  EQU   BPDHDR+48
BPDTRACE EQU   BPDHDR+56
FMZL0042 EQU   0
FMZL0065 EQU   0
FMZL0070 EQU   0
FMZL0080 EQU   0
FMZL0085 EQU   0
FMZL0096 EQU   0
@NM00079 EQU   0
CMZID117 EQU   @NM00079
@NM00080 EQU   @NM00079+4
CMZRL117 EQU   @NM00080
CMZRA117 EQU   @NM00080+1
CMZEA117 EQU   @NM00079+8
CMZVP117 EQU   @NM00079+12
CMZSA117 EQU   0
CMTA117  EQU   0
FNDLOGMD EQU   0
ISTAPC34 EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOBORG01 EQU   IOBPREFX+8
IOBNIOBA EQU   IOBORG01
IOBNFLG1 EQU   IOBNIOBA
IOBORG02 EQU   IOBPREFX+8
IOBDQADA EQU   IOBORG02
IOBDEQIN EQU   IOBDQADA
IOBORG03 EQU   IOBPREFX+12
IOBORG04 EQU   IOBINCAM
IOBORG12 EQU   IOBINCAM
IOBFL4   EQU   IOBORG12
IOBEXTEN EQU   IOBSTDRD+32
IOBSEEK  EQU   IOBEXTEN
IOBBB    EQU   IOBSEEK+1
IOBCC    EQU   IOBSEEK+3
IOBHH    EQU   IOBSEEK+5
IOBORG05 EQU   IOBEXTEN
IOBORG06 EQU   IOBEXTEN
IOBNXTPT EQU   IOBORG06+4
IOBSTATA EQU   IOBNXTPT
IOBORG07 EQU   IOBEXTEN+8
W1IEXTEN EQU   IOBORG07
IOBORG08 EQU   IOBEXTEN+8
IOBINDCT EQU   IOBORG08+4
IOBUNSQR EQU   IOBORG08+5
IOBFCHAD EQU   IOBORG08+8
IOBORG09 EQU   IOBEXTEN+8
IOBDPLAD EQU   IOBORG09+4
IOBDTYPE EQU   IOBORG09+8
IOBDTYP2 EQU   IOBORG09+9
IOBDSTAT EQU   IOBORG09+10
IOBSTAT1 EQU   IOBDSTAT
IOBORG10 EQU   IOBEXTEN+8
IOBSEEK2 EQU   IOBORG10
IOBORG11 EQU   IOBEXTEN
IOBERCT  EQU   IOBORG11
IOBUCBXV EQU   IOBERCT
IOBNAME  EQU   IOBORG11+4
IOBORG13 EQU   IOBEXTEN
IOBSKADR EQU   IOBORG13
SRUSENSE EQU   ISTSRU
SRURMS   EQU   ISTSRU
SRUZIB   EQU   ISTSRU
SRUNETS  EQU   SRUZIB
ISTUNBRU EQU   SRUTYPE
CF3WKMPO EQU   CF3WKMAP
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
UNBTYPE  EQU   ISTUNBRU
SRUNAF   EQU   SRUZIB+3
SRUNSREQ EQU   SRUNETS+2
SRUNSUBC EQU   SRUNETS+1
SRUNSCAT EQU   SRUNETS
SRUREQRE EQU   SRURMS+2
SRUPFX2  EQU   SRURMS+1
SRUPFX1  EQU   SRURMS
SRUSENS2 EQU   SRUSENSE+2
SRUSNS2  EQU   SRUSENSE+1
SRUSNS1  EQU   SRUSENSE
IOBSKSS  EQU   IOBSKADR+3
IOBSK0   EQU   IOBSKADR+2
IOBSKTT  EQU   IOBSKADR+1
IOBSKRV  EQU   IOBSKADR
IOBCSWSV EQU   IOBORG11+17
IOBSENSV EQU   IOBORG11+16
IOBRCD   EQU   IOBORG11+12
IOBMDREC EQU   IOBORG11+8
IOBNAMEA EQU   IOBNAME+1
IOBNAMSZ EQU   IOBNAME
IOBERCTA EQU   IOBERCT+1
IOBRTYPE EQU   IOBUCBXV
IOBRDCHP EQU   IOBORG10+20
IOBNEXTA EQU   IOBORG10+16
IOBREADA EQU   IOBORG10+12
IOBBUFC  EQU   IOBORG10+8
IOBSK2R  EQU   IOBSEEK2+7
IOBSK2HH EQU   IOBSEEK2+5
IOBSK2CC EQU   IOBSEEK2+3
IOBSK2BB EQU   IOBSEEK2+1
IOBSK2M  EQU   IOBSEEK2
IOBCHNPR EQU   IOBORG09+40
IOBDNCRF EQU   IOBORG09+32
IOBRSV35 EQU   IOBORG09+24
IOBDQPTR EQU   IOBORG09+20
IOBRSV34 EQU   IOBORG09+18
IOBDBYTN EQU   IOBORG09+16
IOBDCPND EQU   IOBORG09+12
IOBSTAT2 EQU   IOBDSTAT+1
IOBSIORT EQU   IOBSTAT1
IOBADDVU EQU   IOBSTAT1
IOBBUFF  EQU   IOBSTAT1
IOBENQUE EQU   IOBSTAT1
IOBPASS2 EQU   IOBSTAT1
IOBSYNCH EQU   IOBSTAT1
IOBNEWVL EQU   IOBSTAT1
IOBABNRM EQU   IOBSTAT1
IOBRELEX EQU   IOBDTYP2
IOBADDTY EQU   IOBDTYP2
IOBTYPE  EQU   IOBDTYP2
IOBRQUST EQU   IOBDTYP2
IOBSUFFX EQU   IOBDTYP2
IOBSBLKL EQU   IOBDTYP2
IOBSKEY  EQU   IOBDTYP2
IOBRELBL EQU   IOBDTYPE
IOBRDEXC EQU   IOBDTYPE
IOBDYNBF EQU   IOBDTYPE
IOBACTAD EQU   IOBDTYPE
IOBFDBCK EQU   IOBDTYPE
IOBEXTSC EQU   IOBDTYPE
IOBOVFLO EQU   IOBDTYPE
IOBVERFY EQU   IOBDTYPE
IOBDPLB  EQU   IOBDPLAD+1
IOBDAYLI EQU   IOBDPLAD
IOBDIOBS EQU   IOBORG09+2
IOBDBYTR EQU   IOBORG09
IOBBCHAD EQU   IOBORG08+12
IOBFCHNB EQU   IOBFCHAD+1
IOBCOUNT EQU   IOBFCHAD
IOBASYN  EQU   IOBORG08+7
IOBAPP   EQU   IOBORG08+6
IOBRSV32 EQU   IOBUNSQR
IOBRSV31 EQU   IOBUNSQR
IOBRSV30 EQU   IOBUNSQR
IOBKNRWR EQU   IOBUNSQR
IOBKNWR  EQU   IOBUNSQR
IOBNTAV2 EQU   IOBUNSQR
IOBNTAV1 EQU   IOBUNSQR
IOBCPBSY EQU   IOBUNSQR
IOBCHNNL EQU   IOBINDCT
IOBRSV29 EQU   IOBINDCT
IOBRSV28 EQU   IOBINDCT
IOBRSV27 EQU   IOBINDCT
IOBKEYAD EQU   IOBINDCT
IOBOVPTR EQU   IOBINDCT
IOBUNSCH EQU   IOBINDCT
IOBDEQCP EQU   IOBINDCT
IOBCCWAD EQU   IOBORG08
W1OEXTEN EQU   W1IEXTEN
IOBCCW   EQU   IOBORG06+8
IOBNXTPB EQU   IOBNXTPT+1
IOBRSV26 EQU   IOBSTATA
IOBRSV25 EQU   IOBSTATA
IOBRSV24 EQU   IOBSTATA
IOBRSV23 EQU   IOBSTATA
IOBRSV22 EQU   IOBSTATA
IOBRSV21 EQU   IOBSTATA
IOBRSV20 EQU   IOBSTATA
IOBAVLFL EQU   IOBSTATA
IOBRSV37 EQU   IOBORG06+1
IOBUCBXG EQU   IOBORG06
IOBCPA   EQU   IOBORG05+32
IOBERINF EQU   IOBORG05+16
IOBERCCW EQU   IOBORG05+8
IOBSNDPT EQU   IOBORG05+7
IOBRCVPT EQU   IOBORG05+6
IOBWORK  EQU   IOBORG05+1
IOBUCBX  EQU   IOBORG05
IOBR     EQU   IOBSEEK+7
IOBHH2   EQU   IOBHH+1
IOBHH1   EQU   IOBHH
IOBCC2   EQU   IOBCC+1
IOBCC1   EQU   IOBCC
IOBBB2   EQU   IOBBB+1
IOBBB1   EQU   IOBBB
IOBM     EQU   IOBSEEK
IOBRSV46 EQU   IOBFL4
IOBRSV47 EQU   IOBFL4
IOBENT   EQU   IOBFL4
IOBEQP   EQU   IOBFL4
IOBBUS   EQU   IOBFL4
IOBDCK   EQU   IOBFL4
IOBREJ   EQU   IOBFL4
IOBOVR   EQU   IOBFL4
IOBCRILC EQU   IOBORG04+1
IOBCRDCC EQU   IOBORG04
IOBGQECB EQU   IOBORG03
IOBSWAP  EQU   IOBORG02+4
IOBDQADB EQU   IOBDQADA+1
IOBRSV13 EQU   IOBDEQIN
IOBRSV12 EQU   IOBDEQIN
IOBRSV11 EQU   IOBDEQIN
IOBRSV10 EQU   IOBDEQIN
IOBRSV09 EQU   IOBDEQIN
IOBRSV08 EQU   IOBDEQIN
IOBRSV07 EQU   IOBDEQIN
IOBDEQ   EQU   IOBDEQIN
IOBNECB  EQU   IOBORG01+4
IOBNIOBB EQU   IOBNIOBA+1
IOBFIRST EQU   IOBNFLG1
IOBUPERR EQU   IOBNFLG1
IOBSPAN  EQU   IOBNFLG1
IOBBKSPC EQU   IOBNFLG1
IOBUPDAT EQU   IOBNFLG1
IOBREAD  EQU   IOBNFLG1
IOBWRITE EQU   IOBNFLG1
IOBPRTOV EQU   IOBNFLG1
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTRV612 EQU   CVTS01+664
CVTRV611 EQU   CVTS01+660
CVTEVERM EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTRV519 EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
BPDCBID  EQU   ISTBPDTY+336
BPDENTRY EQU   ISTBPDTY+144
@NM00095 EQU   BPDTRACE+6
BPDAVNO  EQU   BPDTRACE+4
BPDMQUE  EQU   BPDTRACE+2
BPDMUSE  EQU   BPDTRACE
BPDTRADR EQU   BPDPARM+4
BPDTRID  EQU   BPDPARM+3
@NM00094 EQU   BPDPARM+2
BPDTRLEN EQU   BPDPARM
BPDREQMX EQU   BPDHDR+46
BPDREQCT EQU   BPDHDR+44
BPDRSV01 EQU   BPDFLAG
BPDGTR   EQU   BPDFLAG
BPDATCVT EQU   BPDHDR+36
BPDFBPE  EQU   BPDHDR+32
BPDSMPCB EQU   BPDHDR+28
BPDFEXT  EQU   BPDHDR+24
BPDADRS2 EQU   BPDHDR+20
BPDADRS1 EQU   BPDHDR+16
BPDCHPCB EQU   BPDHDR+8
BPDCHBSZ EQU   BPDHDR+6
BPDCHBNO EQU   BPDHDR+4
BPDBPMAX EQU   BPDHDR+2
BPDBPENT EQU   BPDHDR
BPERSV03 EQU   ISTBPENT+12
BPEBPCB  EQU   ISTBPENT+8
BPEBFSIZ EQU   ISTBPENT+6
BPERSV02 EQU   BPEFLAGS+1
BPEUSRF  EQU   BPEFLAGS+1
BPERSV01 EQU   BPEFLAGS
BPENWS   EQU   BPEFLAGS
BPECBID  EQU   BPEFLAGS
BPEAL48  EQU   BPEFLAGS
BPENFCHP EQU   BPEFLAGS
BPEFIXED EQU   BPEFLAGS
BPEDISP  EQU   BPEFLAGS
BPEFM    EQU   BPEFLAGS
BPEPID   EQU   ISTBPENT
VYCRSV02 EQU   ISTVYCRR+128
VYCRSV04 EQU   ISTVYCRR+126
VYCRRCW3 EQU   ISTVYCRR+118
VYCRRSAV EQU   ISTVYCRR+46
VYCRSV03 EQU   VYCCRT+11
CINCFE   EQU   VYCCRT+11
CINCE9   EQU   VYCCRT+11
CINCVO   EQU   VYCCRT+11
CINCR5   EQU   VYCCRT+11
CINCR3   EQU   VYCCRT+10
CINCE8   EQU   VYCCRT+10
CINCE7   EQU   VYCCRT+10
CINCE6   EQU   VYCCRT+10
CINCE5   EQU   VYCCRT+10
CINCE1   EQU   VYCCRT+10
CINCUQ   EQU   VYCCRT+10
CINCUB   EQU   VYCCRT+10
CINCUA   EQU   VYCCRT+9
CINCX9   EQU   VYCCRT+9
CINCX8   EQU   VYCCRT+9
CINCX7   EQU   VYCCRT+9
CINCX6   EQU   VYCCRT+9
CINCX3   EQU   VYCCRT+9
CINCX2   EQU   VYCCRT+9
CINCX1   EQU   VYCCRT+9
CINCX0   EQU   VYCCRT+8
CINCW9   EQU   VYCCRT+8
CINCW8   EQU   VYCCRT+8
CINCW7   EQU   VYCCRT+8
CINCW6   EQU   VYCCRT+8
CINCW5   EQU   VYCCRT+8
CINCW4   EQU   VYCCRT+8
CINCW2   EQU   VYCCRT+8
CINCW0   EQU   VYCCRT+7
CINCV9   EQU   VYCCRT+7
CINCV8   EQU   VYCCRT+7
CINCV7   EQU   VYCCRT+7
CINCV6   EQU   VYCCRT+7
CINCV5   EQU   VYCCRT+7
CINCV4   EQU   VYCCRT+7
CINCV3   EQU   VYCCRT+7
CINCV2   EQU   VYCCRT+6
CINCU8   EQU   VYCCRT+6
CINCU7   EQU   VYCCRT+6
CINCU6   EQU   VYCCRT+6
CINCU5   EQU   VYCCRT+6
CINCU4   EQU   VYCCRT+6
CINCU3   EQU   VYCCRT+6
CINCU2   EQU   VYCCRT+6
CINCU1   EQU   VYCCRT+5
CINCU0   EQU   VYCCRT+5
CINCUM   EQU   VYCCRT+5
CINCS1   EQU   VYCCRT+5
CINCL8   EQU   VYCCRT+5
CINCL7   EQU   VYCCRT+5
CINCL6   EQU   VYCCRT+5
CINCL5   EQU   VYCCRT+5
CINCL4   EQU   VYCCRT+4
CINCL3   EQU   VYCCRT+4
CINCL2   EQU   VYCCRT+4
CINCL1   EQU   VYCCRT+4
CINCL0   EQU   VYCCRT+4
CINCF4   EQU   VYCCRT+4
CINCF1   EQU   VYCCRT+4
CINCFM   EQU   VYCCRT+3
CINCE4   EQU   VYCCRT+3
CINCE3   EQU   VYCCRT+3
CINCE2   EQU   VYCCRT+3
CINCE0   EQU   VYCCRT+3
CINCD9   EQU   VYCCRT+3
CINCD8   EQU   VYCCRT+3
CINCD7   EQU   VYCCRT+3
CINCD6   EQU   VYCCRT+2
CINCD5   EQU   VYCCRT+2
CINCD4   EQU   VYCCRT+2
CINCD3   EQU   VYCCRT+2
CINCD2   EQU   VYCCRT+2
CINCD1   EQU   VYCCRT+2
CINCIP   EQU   VYCCRT+2
CINCR2   EQU   VYCCRT+2
CINCMS   EQU   VYCCRT+1
CINCVN   EQU   VYCCRT+1
CINCVS   EQU   VYCCRT+1
CINCVP   EQU   VYCCRT+1
CINCVX   EQU   VYCCRT+1
CINCFS   EQU   VYCCRT+1
CINCSM   EQU   VYCCRT+1
CINCR1   EQU   VYCCRT+1
CINCLF   EQU   VYCCRT
CINCVA   EQU   VYCCRT
CINCVI   EQU   VYCCRT
CINCMD   EQU   VYCCRT
CINCMY   EQU   VYCCRT
CINCDL   EQU   VYCCRT
CINCIO   EQU   VYCCRT
CINCCL   EQU   VYCCRT
VYCRSV01 EQU   VYCNTRD+11
NINCFE   EQU   VYCNTRD+11
NINCE9   EQU   VYCNTRD+11
NINCVO   EQU   VYCNTRD+11
NINCR5   EQU   VYCNTRD+11
NINCR3   EQU   VYCNTRD+10
NINCE8   EQU   VYCNTRD+10
NINCE7   EQU   VYCNTRD+10
NINCE6   EQU   VYCNTRD+10
NINCE5   EQU   VYCNTRD+10
NINCE1   EQU   VYCNTRD+10
NINCUQ   EQU   VYCNTRD+10
NINCUB   EQU   VYCNTRD+10
NINCUA   EQU   VYCNTRD+9
NINCX9   EQU   VYCNTRD+9
NINCX8   EQU   VYCNTRD+9
NINCX7   EQU   VYCNTRD+9
NINCX6   EQU   VYCNTRD+9
NINCX3   EQU   VYCNTRD+9
NINCX2   EQU   VYCNTRD+9
NINCX1   EQU   VYCNTRD+9
NINCX0   EQU   VYCNTRD+8
NINCW9   EQU   VYCNTRD+8
NINCW8   EQU   VYCNTRD+8
NINCW7   EQU   VYCNTRD+8
NINCW6   EQU   VYCNTRD+8
NINCW5   EQU   VYCNTRD+8
NINCW4   EQU   VYCNTRD+8
NINCW2   EQU   VYCNTRD+8
NINCW0   EQU   VYCNTRD+7
NINCV9   EQU   VYCNTRD+7
NINCV8   EQU   VYCNTRD+7
NINCV7   EQU   VYCNTRD+7
NINCV6   EQU   VYCNTRD+7
NINCV5   EQU   VYCNTRD+7
NINCV4   EQU   VYCNTRD+7
NINCV3   EQU   VYCNTRD+7
NINCV2   EQU   VYCNTRD+6
NINCU8   EQU   VYCNTRD+6
NINCU7   EQU   VYCNTRD+6
NINCU6   EQU   VYCNTRD+6
NINCU5   EQU   VYCNTRD+6
NINCU4   EQU   VYCNTRD+6
NINCU3   EQU   VYCNTRD+6
NINCU2   EQU   VYCNTRD+6
NINCU1   EQU   VYCNTRD+5
NINCU0   EQU   VYCNTRD+5
NINCUM   EQU   VYCNTRD+5
NINCS1   EQU   VYCNTRD+5
NINCL8   EQU   VYCNTRD+5
NINCL7   EQU   VYCNTRD+5
NINCL6   EQU   VYCNTRD+5
NINCL5   EQU   VYCNTRD+5
NINCL4   EQU   VYCNTRD+4
NINCL3   EQU   VYCNTRD+4
NINCL2   EQU   VYCNTRD+4
NINCL1   EQU   VYCNTRD+4
NINCL0   EQU   VYCNTRD+4
NINCF4   EQU   VYCNTRD+4
NINCF1   EQU   VYCNTRD+4
NINCFM   EQU   VYCNTRD+3
NINCE4   EQU   VYCNTRD+3
NINCE3   EQU   VYCNTRD+3
NINCE2   EQU   VYCNTRD+3
NINCE0   EQU   VYCNTRD+3
NINCD9   EQU   VYCNTRD+3
NINCD8   EQU   VYCNTRD+3
NINCD7   EQU   VYCNTRD+3
NINCD6   EQU   VYCNTRD+2
NINCD5   EQU   VYCNTRD+2
NINCD4   EQU   VYCNTRD+2
NINCD3   EQU   VYCNTRD+2
NINCD2   EQU   VYCNTRD+2
NINCD1   EQU   VYCNTRD+2
NINCIP   EQU   VYCNTRD+2
NINCR2   EQU   VYCNTRD+2
NINCMS   EQU   VYCNTRD+1
NINCVN   EQU   VYCNTRD+1
NINCVS   EQU   VYCNTRD+1
NINCVP   EQU   VYCNTRD+1
NINCVX   EQU   VYCNTRD+1
NINCFS   EQU   VYCNTRD+1
NINCSM   EQU   VYCNTRD+1
NINCR1   EQU   VYCNTRD+1
NINCLF   EQU   VYCNTRD
NINCVA   EQU   VYCNTRD
NINCVI   EQU   VYCNTRD
NINCMD   EQU   VYCNTRD
NINCMY   EQU   VYCNTRD
NINCDL   EQU   VYCNTRD
NINCIO   EQU   VYCNTRD
NINCCL   EQU   VYCNTRD
VYCCNS   EQU   ISTVYCRR
CNSRSV05 EQU   CNSTFLDB+2
CNSLOG0B EQU   CNSTFLDB+2
CNSACCTB EQU   CNSTFLDB+2
CNSFREEB EQU   CNSTFLDB+2
CNSGETSB EQU   CNSTFLDB+2
CNSSEARB EQU   CNSTFLDB+2
CNSQUEUB EQU   CNSTFLDB+2
CNSACONB EQU   CNSTFLDB+2
CNSTCONB EQU   CNSTFLDB+1
CNSCLAQB EQU   CNSTFLDB+1
CNSCLINB EQU   CNSTFLDB+1
CNSGBINB EQU   CNSTFLDB+1
CNSLGINB EQU   CNSTFLDB+1
CNSACINB EQU   CNSTFLDB+1
CNSPSINB EQU   CNSTFLDB+1
CNSRQRLB EQU   CNSTFLDB+1
CNSTRRLB EQU   CNSTFLDB
CNSDORLB EQU   CNSTFLDB
CNSRLINB EQU   CNSTFLDB
CNSQREQB EQU   CNSTFLDB
CNSXREQB EQU   CNSTFLDB
CNSAQINB EQU   CNSTFLDB
CNSAUTHB EQU   CNSTFLDB
CNSMRINB EQU   CNSTFLDB
CNSRSV01 EQU   CNSTFLDA+2
CNSLOG0A EQU   CNSTFLDA+2
CNSACCTA EQU   CNSTFLDA+2
CNSFREEA EQU   CNSTFLDA+2
CNSGETSA EQU   CNSTFLDA+2
CNSSEARA EQU   CNSTFLDA+2
CNSQUEUA EQU   CNSTFLDA+2
CNSACONA EQU   CNSTFLDA+2
CNSTCONA EQU   CNSTFLDA+1
CNSCLAQA EQU   CNSTFLDA+1
CNSCLINA EQU   CNSTFLDA+1
CNSGBINA EQU   CNSTFLDA+1
CNSLGINA EQU   CNSTFLDA+1
CNSACINA EQU   CNSTFLDA+1
CNSPSINA EQU   CNSTFLDA+1
CNSRQRLA EQU   CNSTFLDA+1
CNSTRRLA EQU   CNSTFLDA
CNSDORLA EQU   CNSTFLDA
CNSRLINA EQU   CNSTFLDA
CNSQREQA EQU   CNSTFLDA
CNSXREQA EQU   CNSTFLDA
CNSAQINA EQU   CNSTFLDA
CNSAUTHA EQU   CNSTFLDA
CNSMRINA EQU   CNSTFLDA
CNSTPFX  EQU   ISTCNSTA
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00093 EQU   ISTAPCRR+137
@NM00092 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00091 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00090 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00089 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00088 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00087 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00086 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00085 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00084 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00083 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00082 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00081 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
REQPASS  EQU   REQPASSF+1
REQID    EQU   REQIDF+1
@NM00066 EQU   REQRU+12
@NM00065 EQU   REQRU
@NM00063 EQU   CF3SVMAP+12
@NM00062 EQU   CF3SVMAP
CF3WKADD EQU   CF3WKSPA+8
CF3WKLEN EQU   CF3WKSPA+4
CF3WKNXT EQU   CF3WKSPA
LGPBFHDR EQU   ISTLGPFX
BFHUSED  EQU   ISTBFHDR+6
MGLRU    EQU   MGLRUFLD+1
MGLRUL   EQU   MGLRUFLD
MGLVDTXT EQU   MGLUSSTX+1
MGLTXTL  EQU   MGLUSSTX
MGLMSGID EQU   MGLUSSMG+1
MGLMSGL  EQU   MGLUSSMG
MGLORGRU EQU   ISTMGL+16
MGLSEQNO EQU   MGLRUPTR
@NM00061 EQU   MGLUSSFL
MGLRH    EQU   ISTMGL
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00060 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPT18 EQU   ATCAOSM+300
ATCRPT17 EQU   ATCAOSM+296
ATCRPT16 EQU   ATCAOSM+292
ATCRPT15 EQU   ATCAOSM+288
ATCRPT14 EQU   ATCAOSM+284
ATCRPT13 EQU   ATCAOSM+280
ATCRPT12 EQU   ATCAOSM+276
ATCRPT11 EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
ATCRSVBB EQU   ISTATCVT+908
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
@NM00059 EQU   ISTATCVT+818
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ISTATCVT+788
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCRSV99 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00058 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00057 EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00056 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTCTNM  EQU   ISTRPT+120
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00055 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00054 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRSV22 EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPRSV09 EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00053 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00052 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00051 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
@NM00050 EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSWDAF EQU   ISTRPRE+58
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRLIVE  EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRPELEN EQU   ISTRPRE+18
RPRELEN  EQU   ISTRPRE+16
RPRRLOCK EQU   ISTRPRE+12
RPRDAF   EQU   RPRCOMID+2
RPRSAF   EQU   RPRCOMID
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00049 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00048 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00047 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00046 EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB3  EQU   ISTFMCB+96
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCPROCD EQU   ISTFMCB+48
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
@NM00045 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
@NM00044 EQU   ISTFMCB+30
@NM00043 EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDNCBA EQU   ISTFMCB+16
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCSAF   EQU   ISTFMCB+2
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PRORSV11 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
SRURSV01 EQU   SRULDID+4
SRUPSSN  EQU   SRULDID+2
SRUDFCLV EQU   SRUSPSN
@NM00042 EQU   SRUTYPE
SRUPSAC  EQU   SRUTYPE
SRUSPAC  EQU   SRUTYPE
SRUQSREQ EQU   ISTSRU
RHRSVD5  EQU   RH3
RHRSVD4  EQU   RH3
RHLOG    EQU   RH3
RHRSVD3  EQU   RH3
RHRCDIR  EQU   RH3
RHCDIR   EQU   RH3
RHEB     EQU   RH3
RHBB     EQU   RH3
RHPACE   EQU   RH2
RHRSVD2  EQU   RH2
RHINOP   EQU   RHRSVD1
RHBUSY   EQU   RHRETRY
RHEXCEPT EQU   RH2
RHRRN    EQU   RH2
RHPE     EQU   RH2
RHFME    EQU   RH2
RHCHAIN  EQU   RH1
RHSENSE  EQU   RH1
RHFORMAT EQU   RH1
RHDIRI   EQU   RH1
RHSCI    EQU   RH1
RHTYPE   EQU   RH1
RHQS     EQU   RH1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00041 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00040 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00039 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   ISTRPH+1
RPHTYPE  EQU   ISTRPH
ACDREFQ  EQU   ISTACDEB+204
ACDASFQ  EQU   ISTACDEB+200
ACDSOP   EQU   ISTACDEB+184
ACDSIP   EQU   ISTACDEB+168
ACDRSV24 EQU   ACDVTAM+108
ACDRSV23 EQU   ACDVTAM+104
ACDRSV22 EQU   ACDVTAM+100
ACDOCWAD EQU   ACDVTAM+96
ACDRSV10 EQU   ACDVTAM+92
ACDAPDDT EQU   ACDAPDAT+1
ACDAPDLN EQU   ACDAPDAT
ACDRSV07 EQU   ACDVTAM+82
ACDRSV06 EQU   ACDVTAM+81
ACDRSV09 EQU   ACDSSFLG
ACDAICLS EQU   ACDSSFLG
ACDABEND EQU   ACDSSFLG
ACDCACB  EQU   ACDSSFLG
ACDRSV21 EQU   ACDVTAM+64
ACDNEPAB EQU   ACDVTAM+32
ACDRSV20 EQU   ACDVTAM+20
ACDRARQ  EQU   ACDVTAM+16
ACDRAFQ  EQU   ACDVTAM+12
ACDFMCB  EQU   ACDVTAM+8
ACDRDTE  EQU   ACDVTAM+4
ACDLOCK  EQU   ACDVTAM
ACDAPP   EQU   ACDAPPAD+1
ACDEXSCL EQU   ACDAPPAD
ACDACB   EQU   ACDACBAD+1
ACDDEBID EQU   ACDACBAD
ACDPROTG EQU   ACDACBAD
ACDECBAD EQU   ACDBASIC+20
ACDUSRPB EQU   ACDUSRPG+1
ACDNMEXT EQU   ACDUSRPG
ACDPRLEN EQU   ACDBASIC+15
ACDFLGS1 EQU   ACDBASIC+14
ACDQSCNT EQU   ACDBASIC+13
ACDOPATB EQU   ACDBASIC+12
ACDIRBAD EQU   ACDBASIC+8
ACDDEB   EQU   ACDDEBAD+1
ACDAMLNG EQU   ACDDEBAD
ACDTCB   EQU   ACDTCBAD+1
ACDOPNAD EQU   ACDNMSUB
ACDRSV03 EQU   ACDTBLOF+1
ACDRSV02 EQU   ACDTBLOF
ACDAMTYP EQU   ACDDBPFX+5
ACDLENG  EQU   ACDDBPFX+4
ACDDEBX  EQU   ACDDBPFX
ACDRSV08 EQU   ACDVTPRX+12
ACDTSKID EQU   ACDVTPRX+8
ACDCHN   EQU   ACDVTPRX+4
ACDSAF   EQU   ACDVTPRX+2
ACDLNGTH EQU   ACDVTPRX+1
ACDTYPE  EQU   ACDVTPRX
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
LOKXCL   EQU   @NM00037
LOKPRY   EQU   @NM00037
@NM00038 EQU   @NM00037
@NM00036 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
BINUSE   EQU   ISTBIND+36
BINPRIM  EQU   ISTBIND+27
BINPRIML EQU   ISTBIND+26
BINPRSVC EQU   ISTBIND+7
BINCONR  EQU   BINCMNP2
BINRCHN  EQU   BINCMNP2
BINMDIBK EQU   BINCMNP2
BINBKFS  EQU   BINCMNP2
BINRCVR  EQU   BINCMNP2
BINFMTRM EQU   BINCMNP2
BINRSV04 EQU   BINCMNP
BINALT   EQU   BINCMNP
BINBKTR  EQU   BINCMNP
BINBRAK  EQU   BINCMNP
BINFMHD  EQU   BINCMNP
BINRSV03 EQU   BINCMNP
BINSSEB  EQU   BINSECP
BINSCMP  EQU   BINSECP
BINRSV02 EQU   BINSECP
BINSCHNR EQU   BINSECP
BINSMCH  EQU   BINSECP
BINSCHN  EQU   BINSECP
BINPSEB  EQU   BINPRIP
BINPCMP  EQU   BINPRIP
BINRSV01 EQU   BINPRIP
BINPCHNR EQU   BINPRIP
BINPMCH  EQU   BINPRIP
BINPCHN  EQU   BINPRIP
BINTS    EQU   ISTBIND+2
BINFM    EQU   ISTBIND+1
BINTYPE  EQU   BINFMTY
BINFMT   EQU   BINFMTY
CSLDATAF EQU   CSLDATA
CSLNIBF  EQU   CSLNIB
CSLRDTEF EQU   CSLRDTE
CSPTRDTE EQU   ISTCSP+28
CSPRLRPH EQU   ISTCSP+24
CSPDATA  EQU   ISTCSP+16
CSPSRC   EQU   ISTCSP+4
@NM00035 EQU   CSPOPT2
CSPWASQD EQU   CSPOPT2
CSPACQS  EQU   CSPOPT2
CSPACES  EQU   CSPOPT2
CSPNOREL EQU   CSPOPT2
CSPCOREQ EQU   CSPOPT2
CSPSTAP  EQU   CSPOPT2
@NM00034 EQU   CSPOPT1
CSPANY   EQU   CSPOPT1
CSPACT   EQU   CSPOPT1
CSPSESS  EQU   CSPOPT1
CSPPND   EQU   CSPOPT1
CSPLOGI  EQU   CSPOPT1
CSPQ     EQU   CSPOPT1
CSPRSC   EQU   CSPOPT1
NCSAPPAB EQU   NCSAPP+608
NCSAPDAT EQU   NCSAPBUE+8
NCSAPRU  EQU   NCSAPBUE+3
NCSRSV04 EQU   NCSAPBUE
NCSAPEND EQU   NCSAPP+84
NCSAPTXT EQU   NCSAPP+76
NCSAPECB EQU   NCSAPP+72
NCSAPSA  EQU   NCSAPP
NCSPLPDB EQU   NCSPLSID+5
NCSPLNID EQU   NCSPLPHD
NCSRSVD4 EQU   NCSPLSTA
NCSPLPO  EQU   NCSPLSTA
NCSRSVD2 EQU   NCSCRMOD
NCSPTMOD EQU   NCSCRMOD
NCSAIMOD EQU   NCSCRMOD
NCSRSVD1 EQU   NCSCHKPT+1
NCSPTUSE EQU   NCSCHKPT+1
NCSRNME  EQU   NCSCHKPT+1
NCSCUA   EQU   NCSCHKPT+1
NCSANSMD EQU   NCSCHKPT+1
NCSLGMOD EQU   NCSCHKPT
NCSLGAPL EQU   NCSCHKPT
NCSDTRLM EQU   NCSCHKPT
NCSESLM  EQU   NCSCHKPT
NCSNRPL  EQU   NCSCHKPT
NCSPOLD  EQU   NCSCHKPT
NCSPACTV EQU   NCSCHKPT
NCSACTV  EQU   NCSCHKPT
NCSCRDTE EQU   ISTNCSPL+264
NCSPLRTY EQU   ISTNCSPL+263
NCSPLRH  EQU   ISTNCSPL+260
NCSCPWPT EQU   ISTNCSPL+248
NCSSENS2 EQU   NCSSENSE+2
NCSSNS2  EQU   NCSSENSE+1
NCSSNS1  EQU   NCSSENSE
NCSPLNSN EQU   ISTNCSPL+240
NCSPLMID EQU   ISTNCSPL+232
NCSPLPID EQU   ISTNCSPL+231
NCSPLGID EQU   ISTNCSPL+230
NCSPLSQN EQU   ISTNCSPL+228
NCSRNAME EQU   ISTNCSPL+220
NCSPLRUI EQU   ISTNCSPL+212
NCSPLRUO EQU   ISTNCSPL+208
NCSPLRRP EQU   ISTNCSPL+204
NCSPLWEL EQU   ISTNCSPL+200
NCSPLSPL EQU   ISTNCSPL+196
NCSPLP3  EQU   ISTNCSPL+192
NCSPLP2  EQU   ISTNCSPL+188
NCSPLP1  EQU   ISTNCSPL+184
NCSPLOLN EQU   ISTNCSPL+182
@NM00033 EQU   NCSPLFL5
NCSSDLK  EQU   NCSPLFL5
NCSSCPPS EQU   NCSPLFL5
NCSDLRSN EQU   ISTNCSPL+180
NCSPL2AP EQU   NCSPLFL4
NCSDSPN  EQU   NCSPLFL4
NCSDSPI  EQU   NCSPLFL4
NCSDSPA  EQU   NCSPLFL4
NCSDSPE  EQU   NCSPLFL4
NCSPLVID EQU   NCSPLFL4
NCSPLRSO EQU   NCSPLFL4
NCSDLNID EQU   NCSPLFL4
NCSEND   EQU   NCSPLFL3
NCSFINAL EQU   NCSPLFL3
NCSANS   EQU   NCSPLFL3
NCSPID   EQU   NCSPLFL3
NCSGID   EQU   NCSPLFL3
NCSPLANS EQU   NCSPLFL3
NCSEPP   EQU   NCSPLFL3
NCSPLMOM EQU   NCSPLFL3
NCSPLVIT EQU   NCSPLFL2
NCSPLVIS EQU   NCSPLFL2
NCSREMPO EQU   NCSPLFL2
NCSPLDS  EQU   NCSPLFL2
NCSOUFMC EQU   NCSPLFL2
NCSPLRIO EQU   NCSPLFL2
NCSPLRSF EQU   NCSPLFL2
NCSPLVDP EQU   NCSPLFL2
NCSPLPOS EQU   NCSPLFL1
NCSPL2CN EQU   NCSPLFL1
NCSPLAPU EQU   NCSPLFL1
NCSPLNON EQU   NCSPLFL1
NCSPLREQ EQU   NCSPLFL1
NCSPLSOM EQU   NCSPLFL1
NCSPL2IN EQU   NCSPLFL1
NCSPLRCR EQU   ISTNCSPL+172
NCSPLECB EQU   ISTNCSPL+164
NCSPLDAF EQU   NCSPLCID+2
NCSPLSAF EQU   NCSPLCID
NCSPLRCD EQU   NCSPLRAD+1
NCSLSCMD EQU   NCSPLRAD
NCSPLWRF EQU   ISTNCSPL+72
NCSPLWRE EQU   ISTNCSPL+68
NCSSTCMD EQU   NCSCRFLG
NCSUSRNF EQU   NCSCRFLG
NCSOPRQU EQU   NCSCRFLG
NCSCRDSE EQU   NCSCRFLG
NCSFMERP EQU   NCSCRFLG
NCSFMCLD EQU   NCSCRFLG
NCSPLCLD EQU   NCSCRFLG
NCSPLWRM EQU   NCSCRFLG
NCSPLUAD EQU   ISTNCSPL+64
NCSMSGSP EQU   ISTNCSPL+63
NCSNCPEP EQU   ISTNCSPL+62
NCSCMDB  EQU   NCSPLCMD+1
@NM00032 EQU   NCSCMDA
NCSPLUFM EQU   NCSCMDA
NCSPLFLO EQU   NCSCMDA
NCSPLSYN EQU   NCSCMDA
NCSPLCTL EQU   NCSCMDA
NCSPLSYS EQU   NCSCMDA
NCSPLLPT EQU   ISTNCSPL+56
NCSCRPID EQU   ISTNCSPL+51
NCSCRCMD EQU   ISTNCSPL+50
NCSDLID  EQU   ISTNCSPL+44
NCSPLLID EQU   ISTNCSPL+36
NCSPLRID EQU   ISTNCSPL+28
NCSRRNPT EQU   ISTNCSPL+24
NCSIORC  EQU   ISTNCSPL+23
NCSPRMRC EQU   ISTNCSPL+22
NCSOVFMC EQU   NCSPLVF1
NCSRSV02 EQU   NCSPLVFL
NCSDACLK EQU   NCSPLVFL
NCSABCON EQU   NCSPLVFL
NCSDCONT EQU   NCSPLVFL
NCSVSTAT EQU   NCSPLVFL
NCSVDEL  EQU   NCSPLVFL
NCSVNCSA EQU   NCSPLVFL
NCSVBF16 EQU   NCSPLVBF+1
NCSVBF15 EQU   NCSPLVBF+1
NCSVBF14 EQU   NCSPLVBF+1
NCSVBF13 EQU   NCSPLVBF+1
NCSVBF12 EQU   NCSPLVBF+1
NCSVBF11 EQU   NCSPLVBF+1
NCSVBF10 EQU   NCSPLVBF+1
NCSVBF09 EQU   NCSPLVBF+1
NCSVBF08 EQU   NCSPLVBF
NCSVBF07 EQU   NCSPLVBF
NCSVBF06 EQU   NCSPLVBF
NCSVBF05 EQU   NCSPLVBF
NCSVBF04 EQU   NCSPLVBF
NCSVBF03 EQU   NCSPLVBF
NCSVBF02 EQU   NCSPLVBF
NCSVBF01 EQU   NCSPLVBF
NCSPLVCD EQU   ISTNCSPL+17
@NM00031 EQU   ISTNCSPL+16
NCSCRWKA EQU   NCSPFX+12
@NM00030 EQU   NCSPFX
PFXBCK   EQU   ISTPFX+12
PFXFWD   EQU   ISTPFX+8
PFXLNG   EQU   ISTPFX+5
PFXPRTY  EQU   ISTPFX+4
PFXCBID  EQU   PFXID
POHID    EQU   ISTPOHD+2
POHGEN   EQU   POHSTAT
POHRREQ  EQU   POHSTAT
POHRSVD2 EQU   POHSTAT
POHCNTRL EQU   POHSTAT
POHLBL   EQU   POHSTAT
POHDATA  EQU   POHSTAT
POHEND   EQU   POHSTAT
POHRSVD1 EQU   ISTPOHD
IOBERRCT EQU   IOBSTDRD+30
IOBRSV19 EQU   IOBINCAM+1
IOBOLTST EQU   IOBBTAMF
IOBRFTMG EQU   IOBBTAMF
IOBRSV17 EQU   IOBBTAMF
IOBRSV16 EQU   IOBBTAMF
IOBRSV15 EQU   IOBBTAMF
IOBRSV14 EQU   IOBBTAMF
IOBINUSE EQU   IOBBTAMF
IOBPRMER EQU   IOBBTAMF
IOBRSTRB EQU   IOBRESTR+1
IOBREPOS EQU   IOBRESTR
IOBDCBPB EQU   IOBDCBPT+1
IOBRSV44 EQU   IOBFLAG4
IOBJES3I EQU   IOBFLAG4
IOBRSV42 EQU   IOBFLAG4
IOBRSV41 EQU   IOBFLAG4
IOBRSV40 EQU   IOBFLAG4
IOBPMERR EQU   IOBFLAG4
IOBCC3WE EQU   IOBFLAG4
IOBGDPOL EQU   IOBFLAG4
IOBSTRTB EQU   IOBSTART+1
IOBSIOCC EQU   IOBSTART
IOBCSB7  EQU   IOBCSTAT
IOBCSB6  EQU   IOBCSTAT
IOBCSB5  EQU   IOBCSTAT
IOBCSB4  EQU   IOBCSTAT
IOBCSB3  EQU   IOBCSTAT
IOBCSB2  EQU   IOBCSTAT
IOBCSB1  EQU   IOBCSTAT
IOBCSB0  EQU   IOBCSTAT
IOBUSB7  EQU   IOBUSTAT
IOBUSB6  EQU   IOBUSTAT
IOBUSB5  EQU   IOBUSTAT
IOBUSB4  EQU   IOBUSTAT
IOBUSB3  EQU   IOBUSTAT
IOBUSB2  EQU   IOBUSTAT
IOBUSB1  EQU   IOBUSTAT
IOBUSB0  EQU   IOBUSTAT
IOBCMDA  EQU   IOBIOCSW
IOBLOG   EQU   IOBFL3
IOBJAM   EQU   IOBICL
IOBMSG   EQU   IOBFL3
IOBSDR   EQU   IOBCNC
IOBACU   EQU   IOBFL3
IOBCDC   EQU   IOBFL3
IOBICC   EQU   IOBFL3
IOBCCC   EQU   IOBFL3
IOBECBPB EQU   IOBECBPT+1
IOBECBCC EQU   IOBECBPT
IOBS1B7  EQU   IOBSENS1
IOBS1B6  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B0  EQU   IOBSENS1
IOBSNSC9 EQU   IOBS0B7
IOBS0B6  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B0  EQU   IOBSENS0
IOBPNCH  EQU   IOBFLAG2
IOBSTATO EQU   IOBFLAG2
IOBSKUPD EQU   IOBFLAG2
IOBALTTR EQU   IOBFLAG2
IOBRRT2  EQU   IOBRDHA0
IOBRRT3  EQU   IOBPURGE
IOBSENSE EQU   IOBFLAG2
IOBHALT  EQU   IOBFLAG2
IOBSPSVC EQU   IOBRSTRT
IOBUNREL EQU   IOBFLAG1
IOBIOERR EQU   IOBFLAG1
IOBFCREX EQU   IOBCYCCK
IOBRPSTN EQU   IOBFLAG1
IOBERRTN EQU   IOBFLAG1
IOBCMDCH EQU   IOBFLAG1
IOBDATCH EQU   IOBFLAG1
IOBCNOPA EQU   IOBPREFX+12
IOBCICB  EQU   IOBPREFX+8
IOBCECB  EQU   IOBPREFX+4
IOBCONOP EQU   IOBPREFX+3
IOBCINOP EQU   IOBPREFX+2
IOBRSV05 EQU   IOBPREFX+1
IOBPCI   EQU   IOBCFLG1
IOBRSTCH EQU   IOBCFLG1
IOBABAPP EQU   IOBCFLG1
IOBPTST  EQU   IOBCFLG1
IOBRSV04 EQU   IOBCFLG1
IOBRSV03 EQU   IOBCFLG1
IOBRSV02 EQU   IOBCFLG1
IOBRSV01 EQU   IOBCFLG1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00028 EQU   CVTFIX+248
@NM00027 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
RPLSEQNO EQU   RPLOF60+6
@NM00026 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00025 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00024 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00023 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00022 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00021 EQU   RPLRESP
@NM00020 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00019 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00018 EQU   RPLVTFL1
@NM00017 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00016 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00015 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00014 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00013 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00012 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00011 EQU   RPLOPT12
@NM00010 EQU   RPLOPT12
@NM00009 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00008 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00007 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
@NM00006 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00005 EQU   RPLRBAR+3
@NM00004 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00003 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00002 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00001 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLSTYP  EQU   RPLIDWD+1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00691 EQU   @RC00689
@RC00703 EQU   @RC00701
CF3SB2#  EQU   @RC00701
CF3SB2@  EQU   @EL00002
@PB00008 EQU   @PB00009
CF3MOV@  EQU   @EL00009
@PB00011 EQU   @PB00012
@PB00007 EQU   @PB00008
@PB00010 EQU   @PB00011
@PB00006 EQU   @PB00007
CF3FAIL@ EQU   @PB00010
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
CF3BRPL@ EQU   @PB00002
@ENDDATA EQU   *
         END   ISTINCF3,(C'PLS0315',0603,75136)
