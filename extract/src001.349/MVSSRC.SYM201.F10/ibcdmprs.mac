  PRINT OFF
  REPRO

  REPRO

  REPRO
0≈Û
  REPRO
Ü 0‰7ç}
  REPRO

  REPRO
’ 1ß˚’ 0 ˚
  PRINT ON
         TITLE 'DUMP/RESTORE - IBCDMPRS'
ENTER    START 0
         ORG   ENTER
ORG0000  EQU   *
* /* START OF SPECIFICATIONS***
*01* PROCESSOR = ASSEM;
**** END OF SPECIFICATIONS ***/
*
* ALL LOADER CARD HAS BEEN REPLACED                            @ZA27807
*A082044-082106                                                @ZA01729
* CHG 2ND DATA-BUFF ADDR AND REMOVE ZA01729 APAR CODE.         @ZM42062
*A 37024,93656,434220,482616                                   @Z30RSPC
*D429820,429840,450640-450692                                  @ZA00912
*C516500                                                       @ZA01650
*A489420-489440                                                @ZA01678
*C 269298,482560,509160,510740,519969                          @Z30RSPC
*D 0006,483048                                                 @Z30RSPC
*A424902                                                       @ZA01224
*A059350-059500,520210-520220,520596,520646                    @ZA01662
*C424902,413920,413940                                         @ZA01662
*  256100-263450 WAS MOVED AND NOW HAVE SEQ NBRS 520666-521383 @ZA01662
*  059400-063200 NOW HAVE SEQ NUMBERS 520250-520595            @ZA01662
*D230120,230220,243520-243585,243609,284100,284200,289720      @ZA00912
*D429820,429840,450640-450692                                  @ZA00912
*C516500                                                       @ZA01650
*D516600                                                       @ZA01650
*A424902                                                       @ZA01224
*C424800                                                       @ZA01224
*A445820-445840                                 SA69583=YA04834=XA04181
*          RELEASE 21 DELETIONS/CHANGES
*                                                                M0159
*
*D243520,540,544,564,585,609,284100,200                        @OZ00912
*
*A307720                                                       @ZA01223
*C404900                                                       @ZA01223
*AO68520-068560,082000-082040,083600-083660,207300-207350      @ZA01216
*A205420,205450,207400                                         @ZA01216
*C082050,083670,207360                                         @ZA01216
*          RELEASE 20 DELETIONS/CHANGES
* A37519  THIS APAR HAS BEEN FIXED UNDER S20201.                 A37519
* 384000,384200                                                  A36316
* 001300,078600,793200-804000,838800                             M0989
* 001300,014600,031400,064200-064800,065800,066400,067000,071200,S20201
* 075200,078600,087600,088200,102800,107200,108600,118800,119400,S20201
* 133000-133200,133600-133800,134200,134800-135000,135400,136000,S20201
* 136600-136800,152948-152952,152956-152960,152964,170600,171200,S20201
* 199200,199800,205800,207000,214600,214800,215000,215200,215400,S20201
*215600,215800,216000,216200,216400,216800,240000,240600,246600, S20201
* 247200-247800,248200,248600,249000,249400,249800,250200,257400,S20201
* 257600,277200,277400,278600-298200,307600,307800,308800,309000,S20201
* 312600-330000,338400,338600,384600,433400,460800,483400-489800,S20201
* 491000-497800,628600,728400,775000,836200,838609-838978,858400,S20201
* 889000-890400,917400-932400,014800                             S20201
* 430600                                                          M5715
*                                                                M5581
* 461000,462500                                                   M6370
*
*          RELEASE 19 DELETIONS/CHANGES
* 122400-122600,125600,142000                                    A22281
* 078600,397800,398400,531400,546900-547200                      A27583
* 534400                                                         A23097
*                                                                A26319
* 947800,950400                                                  A30065
*                                                                A23657
*A235920-235980,236520-236540                                  @ZA07404
*C236000,236500                                                @ZA07404
*A082060-082124                                                @ZA07318
*A378400                                                       @ZA11924
*A082044,082048,238520,23952-239580,256500                     @ZA13754
*A280044-280056,407520                                         @ZA13799
*C280020,280040,280060                                         @ZA13799
*A397008-397016                                                @ZA13769
*C397020                                                       @ZA13769
*C094020                                                       @ZA16482
*C413920,413940                                                @ZA18374
*C082050,082060                                                @ZA18381
*C454700                                                       @ZA24202
*                                                                     *
*STATUS - CHANGE LEVEL 7.92 -- RELEASE VS2/R3  -- 77/06/09
*                                                                     *
*FUNCTION/OPERATION- DUMPING AND RESTORING THE DATA ON DIRECT ACCESS  *
*   VOLUMES.                                                          *
*                                                                     *
*   DUMP- DUMPING(COPYING) DATA FROM A DIRECT ACCESS VOLUME TO 2311   *
*   DISK STORAGE OR MAGNETIC TAPE, IN A FORMAT RECOGNIZABLE TO THE    *
*   RESTORE PORTION OF THE PROGRAM. A DUMP MAY BE EITHER PARTIAL (A   *
*   SET OF CONTIGUOUS TRACKS IS DUMPED) OR ENTIRE (THE ENTIRE VOLUME  *
*   IS DUMPED). THE FORMAT OF THE OUTPUT IS DESCRIBED UNDER THE HEAD- *
*   ING -OUTPUT-.                                                     *
*                                                                     *
*   RESTORE- RESTORING(RECOPYING) DATA WHICH HAS BEEN DUMPED BY THIS  *
*   PROGRAM. DATA IS RESTORED ONLY TO A VOLUME RESIDING ON THE SAME   *
*   DEVICE TYPE FROM WHICH IT WAS DUMPED.                             *
*                                                                     *
*ENTRY POINTS- CONTROL IS GIVEN TO LOCATION -START- BY THE ABSOLUTE   *
*   LOADER, WHICH CONSTITUTES THE FIRST PART OF THE PROGRAM. CONTROL  *
*   CARDS ARE READ AND ANALYSED TO DETERMINE IF DUMP OR RESTORE IS    *
*   TO BE EXECUTED.                                                   *
*   BOTH DUMP AND RESTORE ARE ENTERED AT LOCATION -START1-. AFTER     *
*   SOME INITIALIZATION PROCEDURES, A SWITCH, NAMED -SEQSW-, IS       *
*   TESTED TO DETERMINE WHICH FUNCTION (EITHER DUMP OR RESTORE)       *
*   SHOULD BE GIVEN CONTROL.                                          *
*                                                                     *
*INPUT- DUMP- CONTROL STATEMENTS, DIRECT ACCESS DEVICE DATA.          *
*       RESTORE- CONTROL STATEMENTS, TAPE PRODUCED BY DUMP.           *
*                                                                     *
*OUTPUT- DUMP- THE DATA READ FROM THE SPECIFIED TRACKS ON THE SPEC-   *
*   IFIED DIRECT ACCESS VOLUME IS WRITTEN EITHER ON A 2311 DISK       *
*   OR ON MAGNETIC TAPE. IF THE OUTPUT DEVICE IS TAPE, THE FOLLOWING  *
*   RECORDS ARE WRITTEN.                                              *
*                                                                     *
*   LIMITS RECORD. THIS IS WRITTEN AS THE FIRST RECORD (FOLLOWING     *
*   ANY LABELS) ON EACH VOLUME OF TAPE. THIS RECORD CONTAINS THE      *
*   ADDRESSES OF THE FIRST TRACK DUMPED, ONE GREATER THAN THE LAST    *
*   TRACK DUMPED,THE FIRST TRACK ON THIS VOLUME OF TAPE, AND A FULL   *
*   RESTORE SWITCH.                                                   *
*                                                                     *
*   CONTROL RECORD. THIS RECORD IS WRITTEN FOR EACH TRACK DUMPED AND  *
*   IMMEDIATELY PRECEDES THE DUMPED DATA FROM THE TRACK. THE CONTROL  *
*   RECORD CONTAINS CHANNEL PROGRAM CCWS WHICH ARE USED BY A SUB-     *
*   SEQUENT RESTORE TO WRITE ONE TRACK.                               *
*                                                                     *
*   TRACK IMAGE. THIS RECORD CONTAINS THE DATA DUMPED FROM THE TRACK  *
*   AND IS WRITTEN AS ONE MAXIMUM LENGTH PHYSICAL RECORD. A TRACK     *
*   IMAGE IS NEVER SPLIT BETWEEN TAPE VOLUMES.                        *
*                                                                     *
*   TRAILER LABEL. THIS RECORD IS WRITTEN AT THE END OF EACH TAPE     *
*   VOLUME, IMMEDIATELY FOLLOWING A TAPE MARK. THIS LABEL INDICATES   *
*   WHETHER ANOTHER FROM VOLUME IS TO BE MOUNTED DURING RESTORE.      *
*                                                                     *
*   FOR A 2311 TO 2311 DUMP, DATA IS COPIED RECORD FOR RECORD AND     *
*   TRACK FOR TRACK.                                                  *
*                                                                     *
*   FOR A NON-2311 TO 2311 DUMP, THE SAME RECORDS ARE WRITTEN AS FOR  *
*   TAPE AND ARE AT THE FOLLOWING LOCATIONS.                          *
*   THE LIMITS RECORD IS WRITTEN AS RECORD ONE OF TRACK ONE FOR EACH  *
*   2311 VOLUME NEEDED.                                               *
*   THE FIRST CONTROL RECORD IS WRITTEN AS RECORD ONE OF TRACK TWO;   *
*   SUBSEQUENT CONTROL RECORDS ARE EACH WRITTEN AS RECORD ONE OF THE  *
*   FIRST TRACK FOLLOWING THE IMAGE OF THE LAST TRACK DUMPED.         *
*   THE TRACK IMAGE IS WRITTEN IN MAXIMUM LENGTH PHYSICAL RECORDS     *
*   ON AS MANY 2311 TRACKS AS ARE NECESSARY.                          *
*   THE TRAILER LABEL IS WRITTEN AS RECORD ONE ON THE LAST AVAILABLE  *
*   TRACK ON EACH 2311 DISK PACK USED.                                *
*                                                                     *
*   NOTE- 2314 AND 3330 MAY BE SUBSTITUTED FOR 2311 IN THE ABOVE      *
*   DESCRIPTION. THESE DEVICES ARE HANDLED IN THE SAME MANNER AS      *
*   THE 2311.                                                         *
*                                                                     *
*   THE OUTPUT OF THE RESTORE FUNCTION IS A DIRECT ACCESS DEVICE      *
*   FORMATTED IDENTICALLY TO THE DIRECT ACCESS DEVICE THAT HAD BEEN   *
*   PREVIOUSLY DUMPED.                                                *
*                                                                     *
*EXITS-NORMAL- SUCCESSFUL COMPLETION OF DUMP OR RESTORE RESULTS IN    *
*   A WAIT PSW WITH E'S IN THE ADDRESS FIELD FOR DISPLAY IN THE       *
*   CONSOLE LIGHTS. AN END OF JOB MESSAGE IS ALSO GIVEN ON THE        *
*   MESSAGE DEVICE.                                                   *
*                                                                     *
*EXITS-ERROR- A WAIT PSW IS LOADED WITH E'S IN THE ADDRESS FIELD      *
*   FOR DISPLAY IN THE CONSOLE LIGHTS. ERROR STOPS, WHENEVER          *
*   POSSIBLE, ARE PRECEDED BY A MESSAGE WHICH DEFINES THE ERROR.      *
*   THE MESSAGE IS GIVEN ON THE MESSAGE DEVICE OR OPERATORS CONSOLE.  *
*   MACHINE CHECK INTERRUPTS RESULT IN THE LOADING OF A PSW IN THE    *
*   WAIT STATE WITH E2 IN THE ADDRESS FIELD FOR DISPLAY IN THE        *
*   CONSOLE LIGHTS. CONSTANTS ARE SET FOR THE RUNNING OF THE SEREP    *
*   PROGRAM AFTER DUMP/RESTORE HALTS ON MACHINE CHECK OR I/O DEVICE   *
*   MALFUNCTION.                                                      *
*                                                                     *
*EXTERNAL ROUTINES- DUMP/RESTORE REQUIRES SOME INFORMATION FROM THE   *
*   OPERATOR AS TO THE LOCATION OF THE TYPEWRITER CONSOLE (IF ANY),   *
*   AND THE INPUT SOURCE FOR THE CONTROL STATEMENTS. ON INITIAL       *
*   LOADING OF DUMP AND RESTORE, THE PROGRAM HALTS IN A WAIT STATE    *
*   WITH F'S DISPLAYED IN THE CONSOLE LIGHTS. IF A CONSOLE TYPE-      *
*   WRITER IS AVAILABLE, THE OPERATOR DEPRESSES THE REQUEST KEY AND   *
*   THIS IDENTIFIES THE LOCATION OF THE TYPEWRITER TO DUMP OR RESTORE *
*   AND A MESSAGE IS GIVEN ASKING THE OPERATOR TO DEFINE THE INPUT    *
*   DEVICE FOR THE CONTROL STATEMENTS. THE OPERATOR THEN TYPES IN     *
*   LOWER OR UPPER CASE FOR EXAMPLE-                                  *
*        INPUT=1402 00C                                               *
*   WHICH TELLS DUMP/RESTORE TO GO TO A 1402 READER ON CUU 00C FOR    *
*   CONTROL CARDS.                                                    *
*   IF A CONSOLE TYPEWRITER IS NOT AVAILABLE, THE OPERATOR ENTERS     *
*   INTO HEX LOCATIONS 0110 AND 0111, ONE OF THE FOLLOWING CODES-     *
*        XCUU   WHERE X=0 FOR A 2540 READER, 1 FOR A 1402/1442        *
*   READER, AND 2 FOR A 2400 NINE TRACK TAPE. CUU IS THE CHANNEL/     *
*   UNIT ADDRESS OF THE INPUT DEVICE.                                 *
*                                                                     *
*TABLES/WORK AREAS-                                                   *
*   -OPRTAB- A LIST OF VALID COMMAND WORDS USED ON CONTROL CARDS.     *
*   -KEYTAB- A LIST OF VALID KEY WORDS USED ON CONTROL CARDS.         *
*   -SYINTAB-A LIST OF VALID INPUT DEVICES FOR CONTROL CARDS.         *
*   -DEVTAB- A LIST OF VALID DEVICES HANDLED BY DUMP/RESTORE.         *
*   -DEVCTRL-A LIST OF CONSTANTS FOR SPECIFIC DEVICE TYPES.           *
*   -CONVTAB-A TABLE USED TO CONVERT CONSOLE INPUT TO UPPER CASE.     *
*   -IOTAB-  A TABLE USED TO CONVERT HEX TO EBCDIC GRAPHIC.           *
*   -CTBUFFER- A BUFFER CONTAINING THE COUNT FIELDS THAT ARE READ     *
*   IN FROM THE DIRECT ACCESS DEVICE BEING DUMPED.                    *
*   -DTABUFF- A BUFFER CONTAINING THE DATA FIELDS THAT ARE READ       *
*   IN FROM THE DIRECT ACCESS DEVICE BEING DUMPED.                    *
*                                                                     *
*ATTRIBUTES- PRIVILEGED, DISABLED, NON-RELOCATEABLE, NON-REUSABLE.    *
*   CHARACTER DEPENDENT TABLE AT -CONVTAB-.                           *
*                                                                     *
         SPACE 3
***********************************************************************
*                                                                     *
*  WARNING-  THE FOLLOWING LOCATIONS MUST BE CONSTANT FROM            *
*            LEVEL TO LEVEL FOR COMPATIBILITY.                        *
*                                                                     *
*   1)   CLEARV3                                                      *
*   2)   CLEAR                                                        *
*   3)   FILEMASK                                                     *
*   4)   BBCCHH                                                       *
*   5)   DATALENG                                                     *
*   6)   DTABUFF                                                      *
*   7)   CTBUFFER                                                     *
*NOTE THAT 'START1A' IS ALSO 'ORGED' AT LOCATION 2000.'
***********************************************************************
*
*
*1766,383000,413600-413800,420400-420600                           7849
*1766,001000,074800,618200-619800,626400                           8327
*1766                                                              5981
*1766,067200,074800,001000,125800-126000,125460                    7674
*1766621000
*3304124600                                                        2711
*3304125000                                                        2711
*NOTE CHANGE IN SEQUENCE NUMBERS BETWEEN RELEASE 17  AND RELEASE 18
*3304528400,528600,530400,531040,531200,546000,546800-547000,7596003479
*3304531000,535200,757200-757400,774600                            2324
         EJECT
         USING IPLPSW,BASE0,BASE10,12,13
      SPACE 1
IPLPSW   DC    X'0004'                  IPLPSW
       DS     2X                       DO NOT OVERLAY IPLED DEVICE 5274
       DC     A(START)                 INITIAL ECS ENTRY POINT
         SPACE 1
*   COMMON STORAGE AREAS USED BY ALL SECTIONS
         SPACE 2
ORG0000X EQU   *                                                   5274
         ORG   ENTER+272                                           5274
ORG0100  EQU   *                                                   5274
INPUTDEV DC    X'BAD0'              DEFINE INPUT TYPE OR CONSOLE
ORG0100X EQU   *                                                   5274
         ORG   ENTER+384                                           5274
ORG0200  EQU   *                                                   5274
SAVEPSW  DC    1D'0'                                               6379
         SPACE 2
ORG0200X EQU   *                                                   5274
         ORG   ENTER+408                                           5274
ORG0300  EQU   *                                                   5274
         SPACE 2
*   GENERAL PURPOSE REGISTER SAVE AREAS
         SPACE 2
REGSV1   DC    2F'0'                   SCAN REG SAVE AREA
         SPACE 2
         SPACE 2
REGSV2   DC    16F'0'                  USED BY DATA INPUT ROUTINE
         SPACE 2
REGSV4   DC    16F'0'                  USED BY MESSAGE OUTPUT ROUTINE
         SPACE 2
REGSV5   DC    16F'0'                  USED BY I/O INTERRUPT ROUTINE.
         SPACE 2
REGSV6   DC    16F'0'                  USED BY WRITE TO OPERATOR
         SPACE 2
REGSV7   DC    16F'0'                  USED BY ERROR MSG PRINT
         SPACE 2
ERRSAV1  DC    16F'0'                  USED IN CASE OF I/O ERRORS.
         SPACE 2
REGSIO   DC    16F'0'                  USED DURING I/O ROUTINE.
         EJECT
*                       **********************************************
*                       *            UNIT CONTROL BLOCK              *
*                       **********************************************
*                       *                                            *
*                       *    BYTE                FUNCTION            *
*                       *   00              UNIT REFERENCE NUMBER    *
*                       *   01              I/O STARTED              *
*                       *   02-03           CHANNEL AND UNIT NUMBER  *
*                       *   04              CAW PROTECT              *
*                       *   05-07           CAW (IN ERROR)           *
*                       *   08-15           INTERRUPT PSW            *
*                       *   16-23           INTERRUPT CSW            *
*                       *   24-29           SENSE INFORMATION        *
*                       *   30-31           CAW (CURRENT)            *
*                       **********************************************
         SPACE 1
UCBTO    DC    8X'00000000'            TO DEVICE UCB
         SPACE 1
UCBFRM   DC    8X'00000000'            FROM DEVICE UCB
         SPACE 1
UCBSYI   DC    8X'00000000'            SYSTEM INPUT UCB
         SPACE 1
UCBSYO   DC    8X'00000000'            SYSTEM OUTPUT UCB
         SPACE 1
UCBOPR   DC    8X'00000000'            OPERATOR OUTPUT UCB
     EJECT
*   PSW AREAS
         SPACE 2
SVPSW  DS      1D                      USED BY INTERRUPT SUPERVISORS
         SPACE 1
COWAIT   DC    X'00060000'             TERMINATE WAIT STATE.
         DC    X'0000EEEE'
         SPACE 1
COWAIT1  DC    X'01060000'             OPERATOR INTERVENTION WAIT.
         DC    X'00006666'
         SPACE 1
WAITNO1  DC    X'FF060000'             WAIT PSW FOR OPR SYSIN INSERT
         DC    X'0000FFFF'
         SPACE 1
WAITNO2  DC    X'FF060000'             WAIT PSW FOR CNTRL UNIT END.
         DC    A(STARTIO1)
         SPACE 1
CONTINUE DC    X'01040000'             CONSOLE INTRPT RETURN PSW
         DC    A(CKINPUT)
         SPACE 1
IOWAIT   DC    X'01060000'             I/O WAIT AND RETRY PSW
         DC    X'00001111'
        SPACE
*
*    COMMON CONSTANTS
*
       DS      0F
SYSBAS   DC    X'00001000'         ****TEMPORARY
SYSBASE  DC    X'00002000'              BASE VALUE
BUFRBAS  DC    X'00003000'              BASE REGISTER FOR BUFFERS MSG.
ZERO     DC    XL8'00'                 DOUBLE WORD CONTAING ZEROS.
ERRORMSG DC    A(ERRMSG)               ADDRESS OF ERROR MESSAGE TABLE.
HUNIT    DC    A(UNITBUF+1)            POINTER TO CONVERTED UNIT ADDRES
ADUCBOPR DC    A(UCBOPR)               ADDRESS OF LAST CONTROL BLOCK.
SAVELK9  DC    F'0'                    LINK REGISTER SAVE FOR STARTIO.
SAVELK9A DC    F'0'                    LINK REG SAVE AREA FOR STARTIO
SAVELK2  DC    F'0'                    LINK REG SAVE AREA FOR ERRORS
DATE     DC    C'77/11/03'             DATE OF LAST CHANGE YY/MM/DD
APARNO   DC    C'OZ27807'              AND APAR NUMBER
         EJECT
*    SYSTEM REGISTER DESIGNATIONS
*
SCANADR  EQU   1                       SCAN ADR POINTER
LENGTH   EQU   2                       SCAN LENGTH REGISTER
BASE0    EQU   0                       BASE REGESTER ZERO
ERREG1   EQU   1
ERREG3   EQU   3
CCWREG   EQU   3
ERREG4   EQU   4
CSR1     EQU   1
CSR2  EQU     2
UCBREG   EQU   2                       POINTER TO UCB
CSR3  EQU     3
CSR4  EQU     4
WORK4    EQU   4
CSR5  EQU     5
GR1   EQU     1
GR2   EQU     2
GR3   EQU     3
GR4   EQU     4
REG1     EQU   1
GR5      EQU   5
GR9      EQU   9
GR6   EQU     6
GR7   EQU     7
GR8   EQU     8
GR15  EQU     15
LINK1    EQU   1                       LINKAGE REGESTER 1
BASE10   EQU   10                      SYSTEM BASE REG
BASE12   EQU   12
ERRLNK   EQU   9                                           *
LINK5    EQU   5
LINK9    EQU   9                       LINK REQISTER
LINK14   EQU   14
LINK15   EQU   15
REGD     EQU   4
REGE     EQU   5
REGF     EQU   6
REGG     EQU   7
         EJECT
*        ***************************************************
*        *   EQUATES FOR  STANDARDS                        *
*        ***************************************************
T1402    EQU   X'18'                    1402 DEVICE CODE         S20201
T1442    EQU   X'19'                    1442 DEVICE CODE         S20201
T2400    EQU   X'08'                    2400 DEVICE CODE         S20201
T1052    EQU   X'17'                    1052 DEVICE CODE         S20201
ZERR     EQU   0                        LENGTH OF ZERO           S20201
DISP0    EQU   0                        DISPLACEMENT OF ZERO   @ZA06537
ONE04    EQU   104                      MESSAGE LENGTH           S20201
T1403    EQU   X'1A'                    1403 DEVICE CODE         S20201
T1443    EQU   X'1B'                    1443 DEVICE CODE         S20201
T3800    EQU   X'1C'                   3800 DEVICE CODE.       @X50ADTT
L1       EQU   1                        LENGTH OF ONE            S20201
T2305    EQU   X'06'                    2305 DEVICE CODE         S20201
MODBIT   EQU   X'00'                    MODEL BYTE               S20201
ON       EQU   X'FF'                    0N SWITCH                S20201
FOX9     EQU   X'F9'                    VALID CHAR CHECK         S20201
ONE      EQU   X'F1'                    CHARACTER 1              S20201
TWO      EQU   X'F2'                    CHARACTER 2              S20201
ORONE    EQU   X'01'                    BINARY ONE               S20201
ONETWO   EQU   12                       MVC COUNT                S20201
TDASD    EQU   X'0D'                    MAX DIRECT ACCESS CODE   S20201
L20      EQU   20                       LENGTH OF 20             S20201
L21      EQU   21                       LENGTH OF 21             S20201
L22      EQU   22                       LENGTH OF 22             S20201
SKBIT    EQU   X'30'                    SKIP BIT ON              S20201
TEN      EQU   X'10'                    ENVIR. DATA BIT FOR 3330 S20201
TWOSIX   EQU   26                       LENGTH OF 26             S20201
EIGHTY   EQU   X'80'                    BUFLOG FULL SENSE BYTE   S20201
L15      EQU   15                       LENGTH OF 15             S20201
L14      EQU   14                       LENGTH OF 14             S20201
L3       EQU   3                        LENGTH OF 3              S20201
L4       EQU   4                        LENGTH OF 4              S20201
L5       EQU   5                        LENGTH OF 5              S20201
L17      EQU   17                       LENGTH OF 17             S20201
L18      EQU   18                       LENGTH OF 18             S20201
L2       EQU   2                        LENGTH OF 2              S20201
L6       EQU   6                        LENGTH OF 6              S20201
L24      EQU   24                       LENGTH OF 24             S20201
L12      EQU   12                       LENGTH OF 12             S20201
L7       EQU   7                        LENGTH OF 7              S20201
L16      EQU   16                       LENGTH OF 16
L13      EQU   13                       LENGTH OF 13             S20201
L8       EQU   8                        LENGTH OF 8              S20201
L32      EQU   32                        LENGTH OF 32             M3390
L79      EQU   79                        LENGTH OF 79            S20201
L80      EQU   80                       LENGTH OF 80             S20201
CHNGCYL  EQU   X'01'                    SET NEW SEEK ADDRESS     S20201
CYLHI    EQU   X'40'                    IS CYLINDER HI BIT ON    S20201
CNTFLD   EQU   X'10'                    COUNT CCW                S20201
T23A5    EQU   X'06'                    2305-1                   S20201
T23C5    EQU   X'07'                    2305-2                   S20201
T3330    EQU   X'09'                    3330 DEVICE CODE         S20201
T333C    EQU   X'0D'                    3330-C MODEL C DEV CODE XL03145
T3350    EQU   X'0B'                   3350 DEVICE CODE        @Z30RSAG
T3340    EQU   X'0A'                    3340 INDEX              XL03130
CMDTIC   EQU   X'08'                    TIC COMMAND CODE         S20201
DCHAIN   EQU   X'80'                    DATA CHAIN BIT           S20201
SLI      EQU   X'20'                    SLI BIT CHECK            S20201
SKIP     EQU   X'10'                    SKIP BIT CHECK           S20201
N59      EQU   59                      LENGTH CONSTANT         @X50ADTT
N70      EQU   70                      LENGTH CONSTANT         @X50ADTT
DMPSW    EQU   X'04'                    DUMP FUNCTION SWITCH    XL03145
D25      EQU   25                       DISPLACEMENT OF 25      XL03145
H02      EQU   X'02'                    WRITE INHIBIT SW        XL03145
         EJECT
*        ***************************************************
*        *  REGISTER EQUATES FOR ERROR CORRECTION FUNCTION *
*        ***************************************************
ECFREG1  EQU   1                        CCW ADDRESS PTR          S20201
ECFREG2  EQU   15                       ECC DATA POINTER          M3390
ECFREG3  EQU   14                       CCW POINTER              S20201
ECFREG4  EQU   4                        LOOP REGISTER            S20201
ECFREG5  EQU   5                        DISPLACEMENT PTR         S20201
ECFREG6  EQU   6                        DATA CHAIN REG           S20201
     EJECT
START    LM    0,15,REGSV2             CLEAR GENERAL REGISTERS
         L     BASE10,SYSBAS           ESTABLISH BASE REG
         LM    12,13,SYSBASE           ESTABLISH OTHER BASE REGISTERS
         MVC   88(40),SETUPPSW         ESTABLISH DUMP/RESTORE PSWS.
         MVI   50,X'FF'                 SET SEREP FLAGS IN OLD MC PSW
         MVI   REQSW,X'00'             TURN OFF REQUEST SWITCH     7674
         LPSW  WAITNO1                 WAIT FOR SYSIN DEVICE DEFINITION
*
*    SETUP SYSIN DEVICE FROM CONSOLE INPUT
*
CKINPUT  TM    INPUTDEV,X'F0'          INPUT VIA READER 1402/2540/3505
         BC    8,IN1402                YES - PERFORM 1402 SETUP
         MVZ   CHCKAREA(1),INPUTDEV    SETUP DEVICE TYPE CHECK
         CLI   CHCKAREA,X'10'          IS SYSIN DEVICE A 1442
         BC    8,IN1442                YES
         CLI   CHCKAREA,X'20'          IS SYSIN DEVICE A 2400
         BC    8,IN2400                YES
         CLI   CHCKAREA,X'30'          IS SYSIN DEVICE A 1052
         BC    8,IN1052                YES
         CLI   INPUTDEV,X'BA'          WAS INTERRUPT KEY DEPRESSED.
         BC    8,START                 YES--GO TO START UNTIL REQUEST.
         B     INPUTERR                ILLEGAL INPUT DEVICE
*
IN1402   MVI   UCBSYI,T1402             SETUP SYSIN UCB FOR 1402 S20201
INADR    EQU   *                                                 S20201
         MVC   UCBSYI+2(2),INPUTDEV    ENTER SYSIN C/U IN SYSIN UCB
         NI    UCBSYI+2,X'07'          CLEAR DEVICE TYPE INDICATOR
         B     CLRSCAN
*
IN1442   MVI   UCBSYI,T1442             SETUP SYSIN UCB FOR 1442 S20201
         B     INADR                   ENTER SYSIN C/U IN UCBSYI
*
IN2400   MVI   UCBSYI,T2400             SETUP SYSIN UCB FOR 2400 S20201
         B     INADR
*
IN1052   MVI   UCBSYI,T1052             SETUP SYSIN UCB FOR 1052 S20201
         B     INADR
*
*    INPUT PARAMETER ERROR DISPLAY ROUTINE
*
INPUTERR MVC   WAITNO1+6(2),INPUTDEV   SET INTERFACE ADR FOR DISPLAY
         MVZ   WAITNO1+6(1),CON80      INSERT CODE 8 IN FIRST HALF BYTE
*                                      INDICATES INPUT PARAMETER ERROR
         LPSW  WAITNO1                 SET WAIT CODE IN COLSOLE LIGHTS
*
         DS    0F
CON80    DC    X'80'
ENABLE   DC    X'FF'                   SSM ENABLE
         DS    0H                                                  4332
         EJECT
*        SETUP SYSIN DEVICE FROM TYPEWRITER INPUT
         SPACE 2
ATTN     TM    REQSW,X'FF'             IS THIS FIRST ATTN INTERUPT 7674
         MVI   REQSW,X'FF'             TURN ON REQUEST SWITCH      7674
         BO    WAITREQ                 NOT FIRST. RETURN.          7674
ATTN1    SSM   ENABLE                  SET SYSTEM MASK ENABLE      7674
         MVI   UCBOPR,T1052             UCBOPR DEVICE TYPE       S20201
         MVC   UCBOPR+2(2),58          INSERT C/U IN UCBOPR
         LA    GR1,47                  LENGTH OF MESSAGE IN BYTES
         LA    CSR2,OPRMSG             MESSAGE PRINT WORD TO OPERATOR
         BAL   LINK15,OPPRNT           CALL W T O ROUTINE
         SPACE 1
         LA    UCBREG,UCBOPR           GET TYPE WRITER UCB
         LA    CCWREG,TYPREAD          GET READ CCW FOR TYPEWRITER
         BAL   LINK9,STARTIO           ISSUE SIO
         SPACE 1
         OC    SYIBUF+11(3),UPPRCASE   CONVERT TO UPPER CASE       6379
         SPACE 1
MSGANL   MVC   SYIMDL(4),SYIBUF+6      INSERT SYSIN MODEL NUMBER
         MVC   SYIDEV(3),SYIBUF+11     INSERT SYSIN DEVICE ADR
         LA    CSR2,SYIMDL             CHECK SYSIN MODEL ENTRY
         LA    CSR3,SYINTAB            TABLE LIMITS START ADR AND
         LA    CSR5,MODTAB-5           END ADR RESPECTIVELY
         BAL   LINK9,DEVLUP
         SPACE 1
         MVC   UCBSYI(1),0(CSR3)       SET SYSIN DEVICE TYPE CODE
         CLI   UCBSYI,T2400             IS SYSIN TAPE            S20201
         BNE   MSGANL1                    NO, SKIP MODE SET
         MVI   SYICCW,X'93'               YES, MOVE MODE SET IN
MSGANL1  LA    CSR2,SYIDEV              CHECK SYSIN DEVICE ADR
         BAL   LINK9,INTFCECK          CHECK INTERFACE ADR
         SPACE 1
         B     INPUTERR                ERROR ON SYSIN DEF ENTRY
         SPACE 1
         STH   CSR1,UCBSYI+2           INSERT SYSIN C/U IN UCB
         B     CLRSCAN
         SPACE 2
         DS    0D
TYPREAD  DC    X'0A'                   TYPEWRITER READ CCW
         DC    AL3(SYIBUF)
         DC    X'2000000E'
         SPACE 2
OPRMSG   DC    CL29'IBC105A DEFINE INPUT DEVICE. '                 6379
         DC    CL18'DUMP/RESTORE 7.92 ' CONSOLE MESSAGE
         EJECT
UPPRCASE DC    XL3'404040'                                         6379
SYIBUF   DC    28X'00'                 SAVE AREA FOR SEREP INFO.
*                                      INPUT DEVICE DEFINITION AREA.
SEREPSAV EQU   SYIBUF
     EJECT
         SPACE 3
*                       **********************************************
*                       *          DATA INPUT ROUTINE                 *
*                       **********************************************
         SPACE 3
*    GR2 CONTINS THE INPUT BUFFER ADDRESS
         SPACE 2
SYSIN  STM     0,15,REGSV2             SAVE REGISTERS
         ST    GR2,SYICCW1              SET DATA ADDRESS IN CCW
         MVI   SYICCW1,X'02'            SET READ COMMAND
       LM      GR2,GR3,INPUTR          SET START IO PARAMETERS
         BAL   LINK9,STARTIO           LINK TO START I/O
         SPACE 1
         LM    0,15,REGSV2             RESTORE REGISTER
         BR    LINK15                  RETURN TO CALLER
         SPACE 2
*    CONSTANTS AND STORAGE AREAS FOR SYSTEM INPUT
         SPACE 2
       DS      0D
INPUTR   DC    A(UCBSYI)               POINTER TO SYSIN UCB
         DC    A(SYICCW)               CONTAINS CCW LIST FOR SYSIN
               SPACE 1
SYICCW   CCW   3,SYICCW,X'40',1
SYICCW1  DC    F'0'
       DC      X'20000050'
         EJECT
*                       **********************************************
*                       *          MESSAGE OUTPUT ROUTINE             *
*                       **********************************************
         SPACE 2
SYSOUT STM     0,15,REGSV4             SAVE REGISTERS
         CLI   UCBSYO,X'00'            IS OUTPUT DEVICE DEFINED
         BC    7,SYSOUT1               YES - USE DEFINED OUTPUT DEVICE
         CLI   UCBOPR,X'00'            NO - IS WTO DEVICE DEFINED
         BC    7,OPPRNT                YES-IS DEFINED.
         LPSW  COWAIT                  NO--SET WAIT.
         SPACE 1
SYSOUT1  ST    GR2,SYOCCW              STORE MSG ADR IN CCW
         CLI   UCBSYO,T2400             IS SYSOUT TAPE           S20201
         BC    8,SYOTAPE               YES - ADJUST CCW LIST FOR TAPE
         SPACE 1
         CLI   UCBSYO,T1052             IS SYSOUT TYPEWRITER     S20201
         BC    8,SYOTYPE               YES - ADJUST CCW LIST FOR TYPE
       MVI     SYOCCW,X'11'            ASSUME DOUBLE SPACE
         B     SYSREF
         SPACE 1
SYOTAPE  MVI   SYOCCW,X'01'            SET TAPE WRITE OPR IN SYOCCW
         LA    UCBREG,UCBSYO            ADDRESS OF SYSOUT UCB
         LA    CCWREG,SYOTCCW           POINTER TO CCW LIST
         B     SYSREF1
         SPACE 1
SYOTYPE  MVI   SYOCCW,X'09'            SET TYPE WRITE CMD IN SYPCCW
         ST    CSR1,SYOCCW+4           INSERT COUNT IN CCW
         MVI   SYOCCW+4,X'20'          SET CCW FLAG BYTE
         SPACE 1
SYSREF   LM    GR2,GR3,OUTPUTR         GET UCB AND CCW LIST ADR
SYSREF1  BAL   LINK9,STARTIO           ISSUE START I/O SEQUENCE.
         LM    0,15,REGSV4             RESTORE REGISTERS
         BR    LINK15                  RETURN TO CALLER
SYO3800  EQU   *                                               @X50ADTT
         LA    RLINK1,QUIT             GET TERM ADDR.          @X50ADTT
PRE3800  EQU   *                       ALT ENTRY.              @X50ADTT
         CLI   UCBSYO,T3800            IS WRITER A 3800?       @X50ADTT
         BCR   7,RLINK1                NO, SKIP 3800 CODE.     @X50ADTT
         STM   GR0,GR15,REGSV4         SAVE REGISTERS.         @X50ADTT
         LA    GR2,UCBSYO              GET UCB ADDRESS.        @X50ADTT
         LA    GR3,INITCCW             GET INITIALIZE CCW.     @X50ADTT
         BAL   LINK9,STARTIO           ISSUE INIT PRINT.       @X50ADTT
         LM    GR0,GR15,REGSV4         RESTORE REGISTERS.      @X50ADTT
         BR    RLINK1                  END 3800 CODE.          @X50ADTT
QUIT     EQU   *                                               @X50ADTT
         LPSW  COWAIT                  TERMINATE UTILITY.      @X50ADTT
         SPACE 2
*    CONTAINS AND STORAGE AREAS FOR SYSOUT
         SPACE 1
OUTPUTR  DC    A(UCBSYO)               POINTER TO SYSOUT UCB
         DC    A(SYOCCW)               ADR OF SYSOUT CCW LIST
         SPACE 1
SYOTCCW  CCW   X'BB',ZERO,X'40',1       MODE SET ODD PARITY TRANSLATOR
*                                         ON BYTE CONVERTER OFF
SYOCCW DC      A(0)                    SYSOUT CCW
       DC      X'20000080'             131 CHARACTERS
     EJECT
*                       **********************************************
*                       *          WRITE TO OPERATOR ROUTINE          *
*                       **********************************************
*
*      GR1 CONTAINS NUMBER OF CHARACTER TO WRITE
*      GR2 CONTAINS STARTING ADDRESS OF MESSAGE
*
         SPACE 1
*    SET UP CCW
         SPACE 1
OPPRNT STM     0,15,REGSV6             SAVE REGISTERS
       ST      GR1,OPRCCW+4            STORE COUNT
       ST      GR2,OPRCCW              STORE ADDRESS
       MVI     OPRCCW,X'09'            WRITE COMMAND
       MVI     OPRCCW+4,X'20'          SET SILI BIT
       LM      GR2,GR3,SYSOPR          SPIOCS PARAMETERS
         CLC   UCBSYO+2(2),UCBOPR+2    IS SYSOUT UCB = OPER UCB
         BNE   OPPRN1                  NO--CONTINUE
         LA    GR2,UCBSYO              YES--POINT TO SYSOUT UCB
         SPACE 1
*    PRINT MESSAGE
         SPACE 1
OPPRN1   BAL   LINK9,STARTIO           ISSUE SIO TO W T O
         LM    0,15,REGSV6             RESTORE REGISTERS
         BR    LINK15                  RETURN TO CALLER
         SPACE 1
*    CONSTANTS AND STORAGE AREA FOR OPPRNT
*
       DS      0D
SYSOPR   DC    A(UCBOPR)               POINTER TO TYPEWRITER UCB
       DC      A(OPRCCW)
OPRCCW DS      1D                      OPPRNT CCW
*
     EJECT
*                       ***********************************************
*                       *        I/O ERROR MESSAGE FORMAT ROUTINE     *
*                       ***********************************************
*
IOPRNT   STM   0,15,REGSV7             SAVE REGISTERS
         L     7,ERMSGBAS              LOAD NEW BASE           @ZA01662
         USING ERRMSGIO,7                                      @ZA01662
         B     ERRMSGIO                BRANCH TO MSG RTN       @ZA01662
ERMSGBAS DC    A(ERRMSGIO)                                     @ZA01662
*
*                       ***********************************************
*                       *          WRITE A LINE TO MSG OUTPUT         *
*                       ***********************************************
*
PRNT     STM   0,15,REGSV7             SAVE REGISTERS
         LA    GR2,PRWD                132 BYTE WORD TO BE PRINTED
         BAL   GR15,CHKMSG              CHECK FOR VALID MSG      S20201
       BAL     GR15,SYSOUT             PRINT ONE LINE
         MVI   PRWD,C' '               CLEAR PRINT AREA TO BLANKS
         MVC   PRWD+1(131),PRWD
         LM    0,15,REGSV7             RESTORE REGS
         BR    LINK9                   RETURN TO CALLING ROUTINE
         SPACE 1
       DS      0D
PRWD     DC    132C' '                  MESSAGE PRINT BUFFER
     EJECT
*                       ***********************************************
*                       *         INPUT/OUTPUT CONTROL ROUTINE        *
*                       *                                             *
*                       *  REG 2 POINTS TO UCB, REG 3 TO CCW LIST    *
*                       ***********************************************
*
STARTIO1 SSM   DISABLE                 MASK OFF INTERRUPTS         6379
         STM   0,15,REGSIO             SAVE THE REGISTERS          6379
STARTIOX L     BASE10,SYSBAS           ESTABLISH BASE REGISTER
         LH    CSR4,2(UCBREG)          ENTER C/U INTO CSR4
         STH   CSR3,30(UCBREG)         SAVE THE CAW.
         ST    CSR3,72                 SET CCW ADDRESS IN CAW.
         TIO   0(CSR4)                 CHECK STATUS.
         TM    68,X'50'                IS THE CONTROL UNIT BUSY.
         MVI   68,X'00'                CLEAR STATUS.
         BC    1,WAITA2                YES--WAIT UNTIL AVAIL   @ZM42062
         SPACE 1
SIO      LA    CSR2,0(0,UCBREG)        LOAD CURRENT UCB DEV ADDR A50281
         LA    GR8,UCBFRM              LOAD UCB ADDR - FROM DEV  A50281
         CR    GR8,CSR2                COMPARE REGISTERS         A50281
         BNE   NOFAIL                  NO - NOT THE FROM DEVICE  A50281
         CLI   40(RCAW),X'1D'          IS CCW COMMAND A WRITE    A50281
         BE    INVLDADR                YES TRAP IT - ISSUE ERROR A50281
         SPACE 1
NOFAIL   SIO   0(CSR4)                 ISSUE I/O COMMAND.
         BC    8,IORTRN1               I/O STARTED//RETURN TO PROCESS.
         BC    2,WAITA2                CHANNEL//SUBCHANNEL BUSY.
         BC    1,SIOERR                UNIT NOT AVAILABLE//TERMINATE.
         B     TIO3
         SPACE 1
IORTRN1  MVI   1(UCBREG),X'FF'         INDICATE IO STARTED.
         TM    ERRETRY,X'FF'           ARE WE PROCESSING AN ERROR.
         BC    1,TIO                   YES-GO CHECK STATUS OF DEVICE.
         LM    0,15,REGSIO             RESTORE THE REGISTERS.
         SSM   ENABLE                  NO,ALLOW INTERRUPTS
         BR    LINK9                   RETURN TO CALLING ROUTINE.
         SPACE 1
WAITA2   L     CSR4,REGSIO+16          RESTORE REGISTER 4
         LPSW  WAITNO2
         SPACE 1
DISABLE  DC    X'01'                   I/O DISABLED.
ERRETRY  DC    X'00'
R0SWITCH DC    X'00'                   HA-R0 ONLY SWITCH.
UESW     DC    X'00'                                           @ZA01216
ETT      EQU   1                       UE ENCOUNTERED          @ZA01216
TVAE     EQU   2                       RETRY IN PROCESS        @ZA01216
RETRYDEV DS    F                       ADDRESS OF UCB USING      A22281
*                                      DIRECT RETURN             A22281
         SPACE 1
IOTAB  DC      C'0123456789ABCDEF'
         SPACE 1
IOCONV   DC    18H'0'
     EJECT
*                       **********************************************
*                       *     ALL I/O INTERRUPTS ENTER HERE          *
*                       **********************************************
         SPACE 1
*    CHECK FOR I/O ERROR
         SPACE 1
CKCSW    STM   0,15,REGSV5             SAVE THE REGISTERS.
         MVC   RESIDCNT(2),70           SAVE RESIDUAL CNT        S20201
         TM    68,X'80'                THIS AN ATTENTION INTERRUPT.
         BC    1,ATTN                  YES-SETUP TO HONOR REQUEST.
         LA    GR2,UCBTO               ADDRESS OF FIRST UCB.
TESTERR  CLI   1(GR2),X'FF'            WAS I/O STARTED.           2711
         BNE   TRYNXT                  NO, TRY NEXT UCB.          2711
         CLC   58(2,0),2(GR2)          WAS INTRPT FOR THIS DEVICE.2711
         BE    FOUND                   YES- HAVE FOUND THE DEVICE.
TRYNXT   LA    GR2,32(GR2)             ADDR OF NEXT CONTROL BLOCK.2711
         CL    GR2,ADUCBOPR            ARE THERE MORE CONTROL BLOCKS.
         BNH   TESTERR                 RETURN TO FIND CORRECT DEVICE.
         CLI   REQSW,X'00'             HAS INPUT DEV BEEN ASSIGNED.7674
         BE    START                   NO. WAIT FOR INPUT DEVICE.  4332
         SPACE 1
WAITA3   MVI   57,X'04'                INSURE WAIT STATE IS CLEAR. 7674
WAITREQ  LM    0,15,REGSV5             RESTORE THE REGISTERS.      7674
         LPSW  56                      CONTINUE PROCESSING.
FOUND    TM    ACTXIISW,X'10'          DIRECT RETURN BIT ON      A22281
         BC    1,DIRCTRTN              YES, CHECK FOR I/O        A22281
*                                         COMPLETE               A22281
CHKERR   TM    68,X'03'                NO,UNIT CHECK OR EXCP     A22281
         BC    5,IOERR                    YES
         TM    69,X'FF'                ANY ERROR BITS ON
         BC    5,IOERR                    YES
         TM    68,X'04'                WAS THIS DEVICE END.
         BC    8,WAITA3                NO--RETURN.
         MVC   16(8,UCBREG),64         SAVE THE CSW.
IORTRN   NI    1(UCBREG),X'00'         YES--POST COMPLETE.
         B     WAITA3                  RETURN TO PROCESS.
DIRCTRTN C     UCBREG,RETRYDEV         INTERRUPT FROM DEV        A22281
*                                         AWAITING               A22281
*                                         DIRECT RETURN          A22281
         BNE   CHKERR                  NO, TREAT AS NORMAL       A22281
*                                         INTERRUPT              A22281
         TM    68,X'87'                YES, TEST ALL             A22281
*                                         POSSIBILITIES          A22281
         BC    5,IORTRN                   INDICATING I/O IS      A22281
         TM    69,X'FF'                   COMPLETE, IF           A22281
         BC    5,IORTRN                   COMPLETE RETURN        A22281
         TIO   0(UCBREG)               WAIT FOR I/O              A22281
         B     DIRCTRTN                   TO COMPLETE            A22281
IOERR    MVC   8(16,UCBREG),56         SAVE I/O PSW AND CSW IN UCB
         MVC   24(6,UCBREG),CLEAR      CLEAR SENSE FIELD OF UCB.
         L     BASE10,SYSBAS           ESTABLISH BASE REGISTER AGAIN
         TM    68,X'02'                IS THIS A UNIT CHECK.
         BC    8,SAVEINT               NO-CHECK DEV INTERRUPT
         LA    CSR4,SENCCW             SENSE CCW ADDRESS.
         ST    CSR4,72                 SET UP THE CAW.
         LH    CSR4,2(UCBREG)          CHANNEL//UNIT ADDRESS.
SENCHK   SIO   0(CSR4)                 ISSUE SENSE COMMAND.
         BC    3,SIOERR                UNIT NOT OPERATIONAL.
         BC    8,IOTIO                 SENSE OK//AWAIT COMPLETION.
CKSTAT   TM    68,X'02'                WAS THERE AN ERROR ON SENSE.
         BC    1,EQUIPCHK              YES--GIVE MESSAGE//TERMINATE.
         B     SENCHK                  REPEAT SENSE UNTIL ACCEPTED.
IOTIO    TIO   0(CSR4)                 TEST STATUS OF DEVICE.
         BC    2,IOTIO                 BUSY--TRY AGAIN.
         MVC   24(6,UCBREG),IOSESV     MOVE SENSE BYTES TO UCB.
*    CHECK DEVICE TYPE INTERRUPTING
               SPACE 2
TYPECHK  TM    ERRETRY,X'FF'           IS THE ERROR RETRY SWITCH ON.
         BC    1,ERBYPASS              DO NOT SAVE ANYTHING
         MVI   ERRETRY,X'FF'           TURN ON ERROR RETRY SWITCH.
SAVEINT  TM    DSKEOFSW,X'FF'          IS DISK EOF SWITCH ON       5434
         BC    1,ERBYPASS              YES--DO NOT SAVE ANYTHING   5434
         MVC   SAVEPSW(8),56           RETURN PSW AFTER ERROR OK.  5434
         MVC   6(2,UCBREG),30(UCBREG)  SAVE ORIGINAL CAW.
         MVC   ERRSAV1(64),REGSV5      SAVE INTERRUPT REGISTERS.
         SPACE 1
ERBYPASS CLI   ZERR(UCBREG),T2400       2400 INTERRUPT           S20201
         BE    ERR300                   2400 ERROR ROUTINE       S20201
         SPACE 1
         CLI   ZERR(UCBREG),TDASD       DASD INTERRUPT           S20201
         BNH   ERR100                   BR TO DA ERROR ROUTINE   S20201
      SPACE 1
         CLI   ZERR(UCBREG),T1052       1052 INTERRUPT           S20201
         BC    8,ERR500
      SPACE 1
         CLI   ZERR(UCBREG),T1402       1402 INTERRUPT           S20201
         BE    ERR200                   1402 ERROR ROUTINE       S20201
      SPACE 1
         CLI   ZERR(UCBREG),T1442       1442 INTERRUPT           S20201
         BC    8,ERR200
      SPACE 1
         CLI   ZERR(UCBREG),T1403       1403 INTERRUPT           S20201
         BC    8,ERR400
      SPACE 1
         CLI   ZERR(UCBREG),T1443       1443 INTERRUPT           S20201
         BE    ERR400                   1403 ERROR ROUTINE       S20201
         CLI   ZERR(UCBREG),T3800      3800 INTERRUPT?         @X50ADTT
         BE    ERR400                  1403 ERROR ROUTINE.     @X50ADTT
      SPACE 1
         B     SIOERR                  NO DEVICE TYPE IN TABLE.
         SPACE 1
STARTIO  SSM   DISABLE                 MASK OFF INTERRUPTS         6379
         TM    ERRETRY,X'FF'           IS THE ERROR RETRY SWITCH ON6379
         BC    1,ERRLINK               YES, STORE IN ERROR LINK SLOT
         ST    LINK9,SAVELK9           NO, SAVE THE LINK REGISTER
         B     STARTIN                 GO TO START I/O
ERRLINK  ST    LINK9,SAVELK9A          SAVE THE ERROR LINK REGISTER
         ST    UCBREG,RETRYDEV         SAVE ADDR OF UCB          A22281
*                                      EXPECTING                 A22281
*                                      DIRECT RETURN             A22281
STARTIN  BAL   LINK9,STARTIO1          GO TO START THE I/O.
         SPACE
TESTIO   CLI   1(UCBREG),X'FF'         IS THE OPERATION COMPLETE.
         BE    TESTIO                  NO//AWAIT COMPLETION
         SPACE
TESTIORT TM    ERRETRY,X'FF'           IS THE ERROR RETRY SWITCH ON
         BC    1,ERRLOAD               YES,GET ERROR LINK REGISTER
         L     LINK9,SAVELK9           RESTORE THE LINK REGISTER
         BR    LINK9                   RETURN
         SPACE
ERRLOAD  L     LINK9,SAVELK9A          RESTORE THE ERROR LINK REGISTER
         BR    LINK9                   RETURN
         SPACE
TIO      TIO   0(CSR4)                 CHECK STATUS OF DEVICE.
         BC    2,TIO                   CHANNEL OR SUB-CHANNEL BUSY.
         TM    ACTXIISW,X'10'          IS THE DIRECT RETURN BIT ON.
         BC    1,TIO6                  YES, TEST FOR I/O         A22281
*                                         COMPLETE               A22281
         SPACE
TIO3     EQU   *                                               @ZA01216
         TM    UESW,X'03'              SPEC RETRY SWITCH ON    @ZA01216
         BNO   TIO33                                           @ZA01216
         OI    68,ETT                  YES-FAKE TAPE INDICATE  @ZA01216
TIO33    EQU   *                                               @ZA01216
         C     UCBREG,INPUTR           FROM OR TO DEVICE UCB   @ZA13754
         BNL   TIO38                   NO-IGNORE RETRY REQUEST @ZA13754
         CLI   ZERR(UCBREG),X'08'      PROCESSING TAPE ?       @ZA18381
         BE    TIO38                   YES--DO NOT RETRY       @ZA18381
         TM    68,X'10'                BUSY ?                  @ZA07318
         BO    SIO                     YES--RETRY              @ZA07318
TIO38    EQU   *                                               @ZA07318
         TM    68,X'03'                UC OR UE                @ZA01216
         BC    5,TIO2                  YES-GO PROCESS.
         TM    69,X'FF'                ADDITIONAL ERROR FLAGS.
         BC    5,TIO2                  YES-GO PROCESS.
         TM    68,X'04'                DEVICE END
         BC    8,TIO1                  NO-CHECK OTHER POSSIBILITIES.
         SPACE
TIO4     MVI   1(UCBREG),X'00'         YES--POST COMPLETE.
         LM    0,15,REGSIO             RESTORE THE REGISTERS.
         B     TESTIORT                TAKE NORMAL RETURN.
         SPACE
TIO1     TM    68,X'30'                CONTROL UNIT END.
         BC    5,SIO                   YES--REISSUE THE SIO.
         TM    68,X'08'                CHANNEL END
         BC    1,TIO                   LOOP ON TIO.
         SPACE
TIO2     EQU   *                                               @ZA01216
         TM    UESW,ETT                UE AND UC               @ZA01216
         BNO   TIO22                   NO                      @ZA01216
         CLI   ZERR(CSR3),X'17'        ERG OPERATION           @ZA01216
         BNE   TIO22                   NO                      @ZA01216
         TM    68,X'01'                EOF                     @ZA01216
         BO    TIO4                    YES                     @ZA01216
TIO22    EQU   *                                               @ZA01216
         MVC   REGSV5(64),REGSIO       INSURE PROPER REGS SAV  @ZA01216
*        WHEN I/O ERROR IS HANDLED BY TIO THE LINK ADDRESS       A23657
*        MUST BE SAVED IN THE I/O PSW BECAUSE UPON               A23657
*        RECOVERING FROM THE ERROR THE PROGRAM RETURNS BY        A23657
*        LOADING THE I/O OLD PSW                                 A23657
         TM    ERRETRY,X'FF'           IS ERROR RETRY ON         A23657
         BC    1,TIO5                  YES                       A23657
         MVC   62(2,0),SAVELK9+2       NO, SAVE LNK ADR          A23657
         B     IOERR                   GO HANDLE I/O ERROR       A23657
TIO5     MVC   62(2,0),SAVELK9A+2      SAVE ADR IN I/O PSW       A23657
         B     IOERR                   GO PROCESS ERROR.
TIO6     EQU   *                                                 A22281
         TM    68,X'87'                TEST ALL BITS             A22281
         BC    5,TIO4                     WHICH WOULD            A22281
         TM    69,X'FF'                   INDICATE I/O           A22281
         BC    5,TIO4                     IS COMPLETE            A22281
         TIO   0(CSR4)                 WAIT FOR I/O TO END       A22281
         B     TIO6                    RETEST STATUS BYTES       A22281
     EJECT
CONTAB   DS    0D                      CTL STATM CONDENSED INFO
SYOMDL   DC    XL4'0'
SYODEV   DC    XL4'0'
SYIMDL   DC    XL4'0'
SYIDEV   DC    XL4'0'
FMODEL   DC    XL8'0'                   FROM MODEL              XL03145
FMDEV    DC    XL4'0'
TOMDL    DC    XL8'0'                   TO MODEL                XL03145
TODEV    DC    XL4'0'
MMOD     DC    XL4'0'                   MODEL BYTE               S20201
RESIDCNT DC    H'0'                     RESIDUAL COUNT AREA      S20201
         EJECT
*   THIS ROUTINE CHECKS TO SEE IF THE LAST RESTORE WENT TO         4332
*     A PROPER COMPLETION. IF NOT THE ALTERNATE TRACK INFORMATION  4332
*     WILL BE CORRECTED.                                           4332
         SPACE 2                                                   4332
GR0      EQU   0                                                   4332
         SPACE 1                                                   4332
ALTCKRTN STM   GR15,GR0,ALTWORK        SAVE TWO REGS.              4332
         MVC   ALTWORK+8(4),CCHH       SAVE CCHH FIELD.            4332
         L     GR15,ALTDATA            SET UP GR15 FOR CNGCYLT RTN.4332
         LH    GR0,ALTDATA+4           NUMBER OF ALTERNATES LEFT.  4332
ALTLOOP  BCTR  GR0,0                   DECREMENT BY ONE.           4332
         ST    GR15,CCHH               SET UP CCHH FOR CNGCYLT RTN.4332
         CL    GR15,CCHHALT            COMPARE STATUS OF FORMAT 4. 4332
         BH    ALTRTRN                 A.O.K.                      4332
         BE    ALTENDUP                THE PREVIOUS RESTORE FAILED.4332
         BAL   RLINK1,CNGCYLT          ADD ONE TRACK.              4332
         B     ALTLOOP                 LOOP UNTIL EQUAL.           4332
         SPACE 1                                                   4332
ALTENDUP BAL   RLINK1,CNGCYLT          ADD ONE TRACK.              4332
         ST    GR15,ALTDATA            UPDATE NEXT ALAILABLE ALT.  4332
         STH   GR0,ALTDATA+4           UPDATE NO. OF AVAILABLE TKS.4332
ALTRTRN  LM    GR15,GR0,ALTWORK        RESTORE TWO REGS.           4332
         MVC   CCHH(4),ALTWORK+8       RESTORE CCHH.               4332
         B     CONTINU                 RETURN.                     4332
         SPACE 1
*             CONTROL DATA
         DS    0D
         SPACE 1
MASKOPCD DC    X'00FFFFFF'             MASK OFF CCW PO CODE
         SPACE 1
MSKFLGON DC    X'60000000'              SET CHAIN C AND SILI BITS ON
         SPACE 1
F1       DC    F'1'
STC2321  DC    X'0000FB00'
SCC2321  DC    X'00F60000'
         SPACE 1
ZERO1    EQU   MSKFLGON+2              HALFWORD OF ZEROS
         SPACE 1
ADTALENG DC    A(DTALENG)
         SPACE 1
MSKFLGOF DC    X'0000FFFF'             SAVE COUNT FIELD
         SPACE 1
MOVECHAR MVC   0(1,RWRKREG6),0(RWRKREG5)
         SPACE 1
         DS    0F
         SPACE 1
TOTLTRK  DC    X'00C70001'       2311  TOTAL NUMBER OF USABLE TRACKS
CYLINCR1 DC    X'0000FFF7'       2311  CHANGE CYL-TO DEV. TRANS DASD
TRECCNT  DC    X'0D30'           2311  MAX NO OF BYTES - 2 RECORDS
BUMPCYL  DC    X'0009'                  2311 MAX TRACKS MINUS ONE.
* CONTROL FOR 2314
         DC    X'00C7000E'              2314 TOT. NO OF TRKS     S20201
         DC    X'0000FFED'              2314 CHANGE CYLINDER     S20201
         DC    H'7100'                  2314 MAX BYTES 2/RCDS    S20201
         DC    X'0013'                  2314 MAX TRKS-1          S20201
* CONTROL FOR 3330
         DC    X'01930012'              3330 TOT. NO OF TRKS     S20201
         DC    X'0000FFEE'              3330 CHANGE CYLINDER     S20201
         DC    X'3304'                  3330 MAX BYTES 2/RCDS    S20201
         DC    X'0012'                  3330 MAX TRKS MINUS 1    S20201
* CONTROL FOR 3330-C
         DC    X'03270012'            3330-C TOT NO. USABLE TRK XL03145
         DC    X'0000FFEE'            3330-C CHANGE CYLINDER    XL03145
         DC    X'3304'                3330-C MAX BYTES 2/RCDS   XL03145
         DC    X'0012'                3330-C MAX TRKS MINUS 1   XL03145
* CONTROL FOR 3350                                             @Z30RSAG
         DC    X'022A001D'             3350 TOTAL USABLE TRKS  @Z30RSAG
         DC    X'0000FFE3'             3350 CHANGE CYLINDER    @Z30RSAG
         DC    X'4A7B'                 3350 MAX BYTES 2/RCDS   @Z30RSPC
         DC    X'001D'                 3350 MAX TRKS - 1       @Z30RSAG
         SPACE 1
CORE     DC    4X'00'               USED IN COMPUTING SIZE OF DATA.4332
FIVE12   DC    H'512'
         SPACE 1
ALT      DC    C'IBC111I ALTERNATE '                           @ZA16482
         EJECT
ORG0300X EQU   *
         ORG   ENTER+2968
ORG0400  EQU   *
CLEARV3  DC    XL8'00'                 POINTED TO BY ERASE CCW VERS. 3.
MORSENSE CLI   ZERR(UCBREG),T2400       IS DEVICE A TAPE         S20201
         BE    GETREST                  YES- GET MORE SENSE      M1828
         CLI   ZERR(UCBREG),TDASD       IS DEVICE DIRECT ACCESS  S20201
         BH    PRINTIT                  NO - NO MORE SENSE INFO  S20201
         MVC   PRWD96(L8),IOCONV24      MOVE SEEK ADDRESS        S20201
GETREST  UNPK  IOCONV8(L13),IOSESV6(L7) GET SENSE BYTES 6-11     M1828
         MVC   PRWD52(L12),IOCONV8      MOVE SENSE BYTES 6-11    S20201
         UNPK  IOCONV8(L13),IOSESV12(L7) GET SENSE BYTES 12-17   S20201
         MVC   PRWD66(L12),IOCONV8      MOVE SENSE BYTES 12-17   S20201
         BAL   LINK9,PRINTIT1           GET MORE SENSE BYTES     S20201
PRINTIT  BR    GR15                     RETURN TO PRINT MSG      S20201
         SPACE 1
AWAIT    DC    AL3(FIXEX)
ALTWORK  DS    3F                      (1) GR15, (2) GR0, (3) CCHH.4332
ALTDATA  DS    3H                      ALTDATA MUST BE ON WD.BNDRY.4332
DEVSIZE  DS    1H                      SAVE TO-DEVICE SIZE      XL03145
EXTINT1  LPSW  24                      RETURN TO INTRPT POINT      5274
         SPACE 1
ORG0400X EQU   *
         ORG   ENTER+3056
ORG0500  EQU   *
CLEAR    DC    XL8'00'                 POSITION DEPENDENT FOR VERSION 4
PRINTIT1 UNPK  IOCONV8(L13),IOSESV18(L7) GET SENSE BYTES 18-23   S20201
         MVC   PRWD80(L12),IOCONV8      MOVE SENSE BYTES 18-23   S20201
         XC    IOSESV(L24),IOSESV       BLANK OUT SENSE AREA     S20201
         BR    LINK9                    BR TO RETURN TO CALLER   S20201
CHKMSG   SR    GR3,GR3                  ZERO OUT WORK REG        S20201
         LA    GR2,PRWD                 GET MSG START ADDR       S20201
         LR    GR8,CSR1                 SAVE MESSAGE LENGTH     SA58009
CHKMSG1  CLI   0(GR2),FOX9              CHECK FOR VALID CHAR     S20201
         BNH   NXTBYTE                  VALID, BYPASS CORRECTION S20201
         IC    GR3,0(GR2)               GET BAD CHARACTER        S20201
         BCTR  GR3,0                    DECREMENT BY ONE         S20201
         N     GR3,NCHAR                MAKE INTO VALID CHAR     S20201
         STC   GR3,0(GR2)               STORE VALID CHAR         S20201
NXTBYTE  LA    GR2,1(GR2)               GET NEXT BYTE            S20201
         BCT   CSR1,CHKMSG1             REPEAT LOOP              S20201
         LR    CSR1,GR8                 RESET MSG ADDRESS       SA58009
         LA    GR2,PRWD                 GET MESSAGE ADDR         S20201
         BR    GR15                     RETURN TO CALLER         S20201
IBC2     DC    C'IBC2'                  MESSAGE HEADER           S20201
DSKEOFSW DC    X'00'
TSWITCH  DC    X'00'                    ON IF TAPE IN OR OUTPUT  S20201
         DS    0F                                                S20201
NCHAR    DC    X'FFFFFFC7'              CHANGE TO PRINTABLE      S20201
IOSESV   DC    24X'00'                  SENSE BYTES READ IN AREA S20201
SENCCW   CCW   X'04',IOSESV,X'20',24    SENSE COMMAND            S20201
SAVLGTH  DS    1F                      SCAN LENGTH REG SAVE AREA
MODSAV   DS    10F                     1ST HALF OF MESSAGE SAVE AREA.
*   THE FOLLOWING 40 BYTES ALSO USED FOR MESSAGE SAVE AREA.
SETUPPSW DC    X'01040000'             NEW EXTERNAL INTERRUPT PSW.
         DC    A(EXTINT)
         SPACE 1
         DC    X'01040000'             NEW SUPERVISOR CALL PSW.
         DC    A(SVCINT)
         SPACE 1
         DC    X'01040000'             NEW PROGRAM INTERRUPT PSW.
         DC    A(PGMINT)
         SPACE 1
         DC    X'00020000'             MACHINE CHECK PSW.
         DC    X'000000E2'
         SPACE 1
         DC    X'01040000'             NEW I/O PSW.
         DC    A(CKCSW)
CVBCOM   DS    1D                      CVB WORK AREA.
R0DATA   DC    1D'0'
SWITCHRD DS    29F                     CARD READ IN AREA.
BGNADR   DC    F'0'
ENDADR   DC    F'0'
ENDADRX  DC    3H'0'
SARG   DS      1D                      SEARCH ARGUMENT
VOLLBL1  DC    6C' '
VOLLABEL DC    42C' '                  TODEV VOL LABELS SAVE
SIXX     DC    F'6'
SEQSW    DC    X'00'                   CTL STM SEQUENCE INDICATOR SW
JOBSW    DC    X'FF'                   JOB STM PRINT INDICATOR
ENDSW    DC    X'00'                   VDRL END ADDRESS SWITCH
CHANSAV  DC    X'00'                   CHANNEL NUMBER SAVE AREA
NORCDSW  DC    X'00'                   USED BY LABEL CHECK RTN.
ACTXIISW DC    X'00'
NON2311  DC    X'00'                   UNLIKE DASD SWITCH
DOSBIT   DC    X'00'                   INCOMPLETE DUMP - DADSM  XL03145
DOSCHECK DC    X'00'                   SECOND PASS SWITCH       XL03145
FULLDPSW DC    X'00'
MODESW   DC    X'00'                   SET TO '0F' IF MODE GIVEN
MODESET  DC    H'00'                   USER MODE SETTING
CHCKAREA DC    X'00'                   DEVICE CHECK SAVE AREA.
EOJSW    DC    X'00'                   USED TO INDICATE EMD OF JOB.
EORSW    DC    X'00'                   USED TO INDICATE END OF REEL5274
REQSW    DC    X'00'                   1ST TIME SWITCH FOR REQUEST 7674
         SPACE 2
IOSESV18 EQU   IOSESV+18                SENSE BYTE AREA +18      S20201
PRWD66   EQU   PRWD+66                  OUTPUT AREA +66          S20201
IOSESV12 EQU   IOSESV+12                SENSE BYTE AREA +12      S20201
PRWD52   EQU   PRWD+52                  OUTPUT AREA +52          S20201
IOSESV6  EQU   IOSESV+6                 SENSE BYTE AREA          S20201
IOCONV8  EQU   IOCONV+8                 ADDR OF UNPK AREA+8      S20201
IOCONV24 EQU   IOCONV+24                ADDR OF UNPK AREA+24     S20201
PRWD96   EQU   PRWD+96                  OUTPUT AREA +96          S20201
PRWD80   EQU   PRWD+80                  OUTPUT AREA +80          S20201
     EJECT
*    *********************************************************
*    * COMMON I/O STATUS & SENSE BIT ERROR INTERPRET ROUTINE *
*    *********************************************************
               SPACE 3
NEXTBIT  LA    ERRLNK,2(ERRLNK)        ADDR. OF NEXT STATUS/SENSE BIT.
               SPACE 1
ERRTEST  SR    ERREG1,ERREG1           ZERO REGISTER---NORMAL ENTRY---
         IC    ERREG1,0(ERRLNK)        GET SENSE OR STATUS CODE BIT
         TM    0(ERRLNK),STATMASK      IS STATUS BYTES TO BE TESTED ?
         BC    1,STATTEST              YES--GO TO STATUS TEST ROUTINE.
         LH    ERREG4,24(UCBREG)       NO--GET 2 SENSE BYTES FROM UCB.
               SPACE 1
SHIFTBIT LNR   ERREG1,ERREG1           COMPLMT CODE BIT/GET SHIFT FACTR
         LA    ERREG3,1                INITIATE REG TO 1
         SLA   ERREG3,15(ERREG1)       SHIFT TO FIND POSITION OF BIT
         BC    1,ERREND                END OF TEST
         NR    ERREG3,ERREG4           TEST IF CODE BIT IS ON
         BC    8,NEXTBIT               NO, GET THE NEXT BIT
               SPACE 1
ERREND   SR    ERREG1,ERREG1           ZERO REGISTER
         IC    ERREG1,1(ERRLNK)        GET DISPLACEMENT
         BC    15,0(ERREG1,ERRLNK)     BRANCH TO PROPER ROUTINE
               SPACE 1
STATTEST LH    ERREG4,20(UCBREG)       GET 2 STATUS BYTES FROM UCB.
         N     ERREG1,STATZERO         ZERO STATUS CODE BIT
         BC    15,SHIFTBIT             BR-CHECK STATUS BITS
               SPACE 3
         DS    0F
STATZERO DC    X'0000000F'
STATMASK EQU   X'10'                   '10' INDICATES A STATUS BYTE
               EJECT
*       ************************************************************
*      *  FOLLOWING ROUTINES ARE USED BY ALL DASD DEVICES*
*       ************************************************************
               SPACE 2
*    DASD TEST CHANNEL STATUS BYTES ROUTINE.
               SPACE 2
ERR100   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTROL CHECK
         DC    AL1(ERR101-ERR100-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR102-ERR100-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR103-ERR100-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR104-ERR100-10)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR130A-ERR100-12)
         DC    X'1F'                   CHAINING CHECK
         DC    AL1(ERR105-ERR100-14)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR106-ERR100-16)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR107-ERR100-18)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR108-ERR100-20)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR109-ERR100-22)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR110-ERR100-24)
               SPACE 2
*    2302,2303,2311,2314 TEST CHANNEL SENSE BYTES ROUTINE.
               SPACE 2
ERR130A  CLI   ZERR(UCBREG),T3340      3340 DEVICE INTERUPT     AS13696
         BE    ERR130                    YES - SERVICE IT       AS13696
         CLI   ZERR(UCBREG),X'05'        2301  INTERRUPT
         BE    ERR730                    YES - SERVICE IT
         BH    ERRB00                   BRANCH TO 3330 AND       S20201
*                                        2305 SENSE ROUTINES
         CLI   0(UCBREG),X'00'          2321
         BE    ERR900
ERR130   BAL   ERRLNK,ERRTEST           LINK TO STATUS/SENSE BYTE
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR131-ERR130-4)
         DC    X'0C'                   NO RECORD FOUND
         DC    AL1(ERR132-ERR130-6)
         DC    X'07'                   SEEK CHECK
         DC    AL1(ERR139-ERR130-8)
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR133-ERR130-10)
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR134-ERR130-12)
         DC    X'04'                   DATA CHECK
         DC    AL1(ERR135-ERR130-14)
         DC    X'05'                   OVERRUN
         DC    AL1(ERR137-ERR130-16)
         DC    X'00'                    COMMAND REJECT
         DC    AL1(ERR138-ERR130-18)
         DC    X'0E'                    MISSING ADDRESS MARKER
         DC    AL1(ERR145-ERR130-20)
         DC    X'06'                   TRACK CONDITION CHECK
         DC    AL1(ERR140-ERR130-22)
         DC    X'09'                   TRACK OVERRUN
         DC    AL1(ERR141-ERR130-24)
         DC    X'0A'                   END OF CYLINDER
         DC    AL1(ERR142-ERR130-26)
         DC    X'0D'                   FILE PROTECT
         DC    AL1(ERR143-ERR130-28)
         DC    X'0F'                   DASD OVERFLOW INCOMPLETE
         DC    AL1(ERR144-ERR130-30)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR146-ERR130-32)
               SPACE 2
*    EXITS TO 2302,2303,2311,2314 ERROR RECOVERY ROUTINES.
               SPACE 2
ERR101   BC    15,CHANERR              GO TO CHANNEL CONTROL CHECK RTN.
               SPACE 1
ERR102   BC    15,INFCERR              GO TO INTERFACE CONTROL CHECK
               SPACE 1
ERR103   BC    15,CHDATA               GO TO CHANNEL DATA CHECK ROUTINE
               SPACE 1
ERR104   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE.
               SPACE 1
ERR105   BAL   LINK15,SIXTRY           RETRY ERROR CCW LIST 6 TIMES.
         BC    15,CHAINCHK             SOLID ERROR-GO TO CHAINCHK RTN.
               SPACE 1
ERR106   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
               SPACE 1
ERR107   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
               SPACE 1
ERR108   BC    15,DISKEOF              RETURN TO DISK EOF ROUTINE.
               SPACE 1
ERR109   TM    WLRECSW,X'01'           2311 - 2302  RESTORE
         BC    14,WLRERR               NO--EXIT TO WRONG LENGTH RECORD.
         B     INDEXRTN                2302 WRONG LENGTH RECORD//RETURN
               SPACE 1
ERR110   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
     SPACE 1
ERR131   BAL   LINK15,TENTRY           RETRY ERROR CCW UP TO 10 TIMES.
         BC    15,EQUIPCHK        SOLID ERROR-GO TO EQUIPCHK ROUTINE
               SPACE 1
ERR132   TM    25(UCBREG),X'02'        MISSING ADDRESS MARKER
         BO    ERR132A                  YES-DO TWO SEEK
         BAL   LINK15,CYLNCHK           NO-CHECK IF AT RIGHT CYLINDER
         BAL   LINK1,TENSEEK           RESEEK/RETRY CCW LIST TEN TIMES
         B     NORECFND                SOLID ERROR
ERR132A  BAL   LINK1,TWOSEEK           RETRY TWICE
         BC    15,NORECFND             SOLID ERROR-GO TO NORECFND RTN.
      SPACE 1
ERR133   BAL   LINK15,INTVREQ          LINK TO INTERVENTION REQ. ROUTIN
         MVC   READYDEV(27),DISKMSG    INSERT DISKMSG//CLEAR CUU FIELD.
         MVC   READYDEV+20(3),IOCONV+1 SET DEVICE ADDR. IN OPR MESSAGE.
         B     DEVWAIT                 GO TO DEVICE WAIT ROUTINE.
               SPACE 1
ERR134   BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,BUSOUT               SOLID ERROR-GO TO BUSOUT RTN.
               SPACE 1
ERR135   BAL   LINK15,SIXTTRY
         BC    15,DATACHK              SOLID ERROR-GO TO DATACHK RTN.
               SPACE 1
ERR137   BAL   LINK15,SIXTRY           RETRY ERROR CCW SIX TIMES
         BC    15,OVRRUN               SOLID ERROR-GO TO OVERRUN RTN.
               SPACE 1
ERR138   TM    25(UCBREG),X'02'         IS WRITE INHIBIT ON
         BO    INHIBIT                  YES, BR TO TERMINATE
         TM    25(UCBREG),X'04'         DID FILE PROTECT OCCUR
         BC    1,INDEXRTN              YES--GO TO INDEX RETURN ROUTINE.
         BC    14,COMREJ               NO--GO TO COMMAND REJECT RTN.
ERR138A  TM    25(UCBREG),X'04'        DID FILE PROTECT OCCUR ALSO 6601
         BC    1,INDEXRTN              YES,GO TO INDEX RETRN RTNE  6601
         BC    14,ENDOFCYL             GO TO END OF CYL ROUTINE    6601
     SPACE 1
ERR139   BAL   LINK1,TENSEEK           RESEEK/RETRY CCW LIST TEN TIMES
         BC    15,SEEKCHK              GO TO SEEK CHECK ROUTINE.
               SPACE 1
ERR140   BC    15,INDEXRTN              TRACK CONDITION CHECK; RETURN
               SPACE 1
ERR141   BC    15,TROVRRUN             GO TO TRACK OVERRUN ROUTINE
               SPACE 1
ERR142   BC    15,ENDOFCYL             GO TO END OF CYLINDER ROUTINE
               SPACE 1
ERR143   BC    15,INDEXRTN              FILE PROTECT; RETURN
         SPACE 1
ERR144   BC    15,INDEXRTN              OVERFLOW INCOMPLETE; RETURN
         SPACE 1
ERR145   BAL   LINK15,TENTRY           RETRY ERROR CCW TEN TIMES.
         B     MISSMARK                MISSING ADDRESS MARKER ROUTINE.
         SPACE 1
ERR146   BC    15,ENDTEST              GO TO END OF TEST ROUTINE.
               EJECT
*       ********************************************
*      *  FOLLOWING ROUTINES USED BY 1442 AND 1402  *
*       ********************************************
               SPACE 2
*   1442 AND 1402 TEST CHANNEL STATUS BYTES ROUTINE.
      SPACE 1
ERR200   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTORL CHECK
         DC    AL1(ERR201-ERR200-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR202-ERR200-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR203-ERR200-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR204-ERR200-10)
         DC    X'11'                   SHOULD NOT OCCUR
         DC    AL1(ERR204-ERR200-12)
         DC    X'12'                   SHOULD NOT OCCUR
         DC    AL1(ERR204-ERR200-14)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR230-ERR200-16)
         DC    X'1F'                   CHAINING CHECK
         DC    AL1(ERR205-ERR200-18)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR206-ERR200-20)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR207-ERR200-22)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR208-ERR200-24)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR209-ERR200-26)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR210-ERR200-28)
      SPACE 1
*    1402 AND 1442 TEST CHANNEL SENSE BYTES
      SPACE 1
ERR230   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'06'                   SHOULD NOT OCCUR
         DC    AL1(ERR231-ERR230-4)
         DC    X'07'                   SHOULD NOT OCCUR
         DC    AL1(ERR231A-ERR230-6)    SHOULD NOT OCCUR         S20201
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR232-ERR230-8)
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR233-ERR230-10)
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR234-ERR230-12)
         DC    X'04'                   DATA CHECK
         DC    AL1(ERR235-ERR230-14)
         DC    X'05'                   OVERRUN
         DC    AL1(ERR236-ERR230-16)
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR237-ERR230-18)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR238-ERR230-20)
         SPACE 1
*    EXITS TO 1442 DUMP/RESTORE ERROR RECOVERY ROUTINES.
               SPACE 1
ERR201   BC    15,CHANERR              GO TO CHANNEL CONTROL CHECK RTN.
               SPACE 1
ERR202   BC    15,INFCERR              GO TO INTERFACE CONTROL CHECK
               SPACE 1
ERR203   BC    15,CHDATA               GO TO CHANNEL DATA ERROR ROUTINE
         SPACE 1
ERR204   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE 1
ERR205   BC    15,CHAINCHK             GO TO CHAINING CHECK ROUTINE
               SPACE 1
ERR206   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
               SPACE 1
ERR207   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
               SPACE 1
ERR208   BC    15,UNITCEPT             GO TO UNIT EXCEPTION ROUTINE
               SPACE 1
ERR209   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
               SPACE 1
ERR210   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
         SPACE 1
ERR231   CLI   ZERR(UCBREG),T1402       IS DEVICE A 1402         S20201
         BE    SEQERR                   YES, GO TO CMD SEQ RTN   S20201
         B     NEVER                    SHOULD NOT OCCUR RTN     S20201
         SPACE 1
ERR231A  B     NEVER                    SHOULD NOT OCCUR RTN     S20201
         SPACE 1
ERR232   LA    GR2,READCHK              ADDR OF READ CHECK MSG   S20201
         LA    GR1,60                   MESSAGE LENGTH           S20201
         B     TYPEWAIT                 TYPE MESSAGE AND WAIT    S20201
         SPACE 1
ERR233   BAL   LINK15,INTVREQ           INT. REQ. ROUTINE        S20201
         MVC   READYDEV(27),READYRDR    INSERT READY RDR MSG     S20201
         MVC   READYDEV+22(3),IOCONV+1  SET DEVICE IN MSG        S20201
         B     DEVWAIT                  GO TO WAIT RTN           S20201
         SPACE 1
ERR234   B     ERR134                   USE 2311 BUSOUT RTN      S20201
         SPACE 1
ERR235   LA    GR2,INVALCRD             ADDR OF ERROR MSG        S20201
         LA    GR1,64                   LENGTH OF MSG            S20201
         B     TYPEWAIT                 TYPE MSG AND WAIT        S20201
         SPACE 1
ERR236   CLI   ZERR(UCBREG),T1402       IS DEVICE A 1402         S20201
         BE    NEVER                    YES, SHOULD NOT OCCUR    S20201
         B     OVRRUN                   GO TO OVERRUN RTN        S20201
               SPACE 1
ERR237   BC    15,COMREJ               GO TO COMMAND REJECT ROUTINE
               SPACE 1
ERR238   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
*       ****************************************************
*       *  FOLLOWING ROUTINES FOR 2400 MAGNETIC TAPE UNIT  *
*       ****************************************************
               SPACE 2
*    2400 TAPE  TEST CHANNEL STATUS BYTES ROUTINE.
               SPACE 2
ERR300   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE TEST RTN.
         DC    X'1D'                   CHANNEL CONTROL CHECK
         DC    AL1(ERR301-ERR300-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR302-ERR300-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR303-ERR300-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR304-ERR300-10)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR330-ERR300-12)
         DC    X'1F'                   CHAINING CHECK
         DC    AL1(ERR305-ERR300-14)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR306-ERR300-16)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR307-ERR300-18)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR308-ERR300-20)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR309-ERR300-22)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR310-ERR300-24)
               SPACE 2
*    2400 TAPE  TEST CHANNEL SENSE BYTES ROUTINE.
               SPACE 2
ERR330   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR334-ERR330-4)
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR332-ERR330-6)
         DC    X'01'                   INTERVENTION REQ
         DC    AL1(ERR333-ERR330-8)
         DC    X'05'                   OVER RUN
         DC    AL1(ERR336-ERR330-10)
         DC    X'04'                   DATA CHECK.                 5434
         DC    AL1(ERR335-ERR330-12)                               5434
         DC    X'08'                   NOISE.                      5434
         DC    AL1(ERR331-ERR330-14)                               5434
         DC    X'07'                   DATA CONVERT CHECK
         DC    AL1(ERR337-ERR330-16)
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR338-ERR330-18)
         DC    X'0C'                   TAPE AT LOAD POINT
         DC    AL1(ERR339-ERR330-20)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR340-ERR330-22)
               SPACE 2
*    EXITS TO 2400 TAPE ERROR RECOVERY ROUTINES.
               SPACE 2
ERR301   BC    15,CHANERR              GO TO CHANNEL CONTROL CHECK RTN.
               SPACE 1
ERR302   BC    15,INFCERR              GO TO INTERFACE CONTROL CHECK
               SPACE 1
ERR303   BC    15,CHDATA               GO TO CHANNEL DATA CHECK ROUTINE
               SPACE 1
ERR304   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
               SPACE 1
ERR305   BAL   LINK15,BACKSPC          GO TO BACKSPACE ROUTINE
         BAL   LINK15,SIXTRY           RETRY ERROR CCW LIST 6 TIMES.
         BC    15,CHAINCHK             SOLID ERROR-GO TO CHAINCHK RTN.
               SPACE 1
ERR306   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
               SPACE 1
ERR307   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTING
               SPACE 1
ERR308   LM    0,15,ERRSAV1            RESTORE ORIGINAL P/P REGISTERS.
         TM    CKVOLSW,X'80'           IS IT END OF TAPE ALSO
         BC    1,IORTRN                YES, NORMAL RETURN
         BC    15,TAPEEOF              RETURN TO TAPE EOF ROUTINE
               SPACE 1
ERR309   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
               SPACE 1
ERR310   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
               SPACE 2
ERR331   BC    15,NOISETST             TEST FOR NOISE RECORD ROUTINE.
               SPACE 1
ERR332   BC    15,EQUIPCHK             GO TO EQUIPMENT CHECK ROUTINE
               SPACE 1
ERR333   BAL   LINK15,INTVREQ          LINK TO INTERVENTION REQ ROUTINE
         MVC   READYDEV(27),TAPEMSG    INSERT DISKMSG//CLEAR CUU FIELD.
         MVC   READYDEV+20(3),IOCONV+1 SET DEVICE ADDR. IN OPR MESSAGE.
         B     DEVWAIT                 GO TO DEVICE WAIT ROUTINE.
               SPACE 1
ERR334   BAL   LINK15,BACKSPC          BACKSPACE THE TAPE ONE RECORD.
         BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,BUSOUT               SOLID ERROR-GO TO BUSOUT ROUTINE
               SPACE 1
ERR335   BC    15,TAPEDATA             TEST READ OR WRITE OPERATION
               SPACE 1
ERR336   BAL   LINK15,BACKSPC          LINK TO TAPE BACKSPACE ROUTINE
         BAL   LINK15,SIXTRY           RETRY ERROR CCW UP TO SIX TIMES
         BC    15,OVRRUN               SOLID ERROR-GO TO OVERRUN RTN.
               SPACE 1
ERR337   BC    15,CONVTERR             GO TO DATA CONVERT ERROR ROUTINE
               SPACE 1
ERR338   TM    25(UCBREG),X'02'        DID FILE PROTECT OCCUR ALSO.
         BC    1,FILEPROT              YES..GO TO FILE PROTECTED RTN.
         BC    14,COMREJ               NO...GO TO COMMAND REJECT RTN.
               SPACE 1
ERR339   BC    15,TAPELP               GO TO LOAD POINT ERROR RTN.
               SPACE 1
ERR340   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
*       *********************************************
*      *  FOLLOWING ROUTINES USED BY 1403 AND 1443  *
*       *********************************************
               SPACE 2
*    1403 AND 1443 TEST CHANNEL STATUS BYTES ROUTINE.
               SPACE 2
ERR400   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTORL CHECK
         DC    AL1(ERR401-ERR400-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR402-ERR400-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR403-ERR400-8)
         DC    X'10'                   SHOULD NOT OCCUR
         DC    AL1(ERR404-ERR400-10)
         DC    X'11'                   SHOULD NOT OCCUR
         DC    AL1(ERR404-ERR400-12)
         DC    X'12'                   SHOULD NOT OCCUR
         DC    AL1(ERR404-ERR400-14)
         DC    X'1F'                   SHOULD NOT OCCUR
         DC    AL1(ERR404-ERR400-16)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR430-ERR400-18)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR405-ERR400-20)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR406-ERR400-22)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR407-ERR400-24)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR408-ERR400-26)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR409-ERR400-28)
               SPACE 2
*    1403 AND 1443 TEST CHANNEL SENSE BYTES ROUTINE
      SPACE 1
ERR430   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'06'                   SHOULD NOT OCCUR
         DC    AL1(ERR431-ERR430-4)     SHOULD NOT OCCUR         S20201
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR432-ERR430-6)     EQUIPMENT CHECK          S20201
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR433-ERR430-8)     INTERVENTION REQ         S20201
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR434-ERR430-10)    BUS OUT CHECK            S20201
         DC    X'07'                   CHANNEL 9
         DC    AL1(ERR435-ERR430-12)    CHANNEL 9                S20201
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR436-ERR430-14)    COMMAND REJECT           S20201
         DC    X'04'                    SHOULD NOT OCCUR         S20201
         DC    AL1(ERR431A-ERR430-16)   SHOULD NOT OCCUR         S20201
         DC    X'05'                    SHOULD NOT OCCUR         S20201
         DC    AL1(ERR431A-ERR430-18)   SHOULD NOT OCCUR         S20201
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR437-ERR430-20)
ERR432   EQU   *
         CLI   UCBSYO,T3800            IS DEVICE 3800?         @X50ADTT
         BNE   ERR432Y                 NO, GO TELL ABOUT PRT CK@X50ADTT
         SPACE
*   3800  TEST EQUIPMENT CHECK ROUTINE                         @X50ADTT
         SPACE
ERR432X  EQU   *                                               @X50ADTT
         BAL   ERRLNK,ERRTEST          GO CHECK ERROR REASON.  @X50ADTT
         DC    X'08'                   HARDWARE ERROR.         @X50ADTT
         DC    AL1(ERR432A-ERR432X-4)                          @X50ADTT
         DC    X'09'                   PERMANENT ERROR.        @X50ADTT
         DC    AL1(ERR432B-ERR432X-6)                          @X50ADTT
         DC    X'0A'                   ERROR LOG BUFFER FULL.  @X50ADTT
         DC    AL1(ERR432C-ERR432X-8)                          @X50ADTT
         DC    X'0B'                   CANCEL KEY.             @X50ADTT
         DC    AL1(ERR435-ERR432X-10)                          @X50ADTT
         DC    X'2F'                   END OF TEST.            @X50ADTT
         DC    AL1(ERR437-ERR432X-12)                          @X50ADTT
      SPACE 1
*    EXITS TO 1403 ERROR RECOVERY ROUTINES.
      SPACE 1
ERR401   BC    15,CHANERR              GO TO CHANNEL ERROR ROUTINE
               SPACE 1
ERR402   BC    15,INFCERR              GO TO INTERFACE ERROR ROUTINE
               SPACE 1
ERR403   BC    15,CHDATA               GO TO CHANNEL DATA ERROR ROUTINE
               SPACE 1
ERR404   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
               SPACE 1
ERR405   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
               SPACE 1
ERR406   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
               SPACE 1
ERR407   BC    15,SKIPTO1              GO TO CARRIAGE SKIP TO 1 ROUTINE
               SPACE 1
ERR408   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
               SPACE 1
ERR409   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
ERR431   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
         SPACE
ERR432A  EQU   *                       HARDWARE ERROR.         @X50ADTT
ERR432B  EQU   *                       PERMANENT ERROR.        @X50ADTT
         B     EQPERR                  GO HANDLE EQUIPMENT ERR.@X50ADTT
         SPACE
ERR432C  EQU   *                       LOG BUFFER FULL.        @X50ADTT
         B     LOGERR                  GO HANDLE LOG BUFF FULL.@X50ADTT
         SPACE
ERR432Y  EQU   *                                               @X50ADTT
         LA    GR2,PRINTCHK            ADDR OF PRINT CK MSG    @X50ADTT
         LA    GR1,59                  LENGTH OF MESSAGE IN BYTES.
         BC    15,TYPEWAIT             GO TO PRINT OPERATOR MSG//WAIT//
               SPACE 1
ERR433   LA    GR7,UCBSYO              GET ADDRESS OF SYSOUT DEVICE.
         BAL   LINK15,UNITADDR         CONVERT HEX UNIT ADDRESS TO BCD.
         MVC   READYDEV(27),READYPRT   INSERT READYPRT//CLEAR CUU FIELD
         MVC   READYDEV+23(3),UNITBUF+1  INSERT DEVICE ADDR IN MESSAGE.
         B     DEVWAIT                 GO TO DEVICE WAIT ROUTINE.
               SPACE 1
ERR434   B     ERR134                   USE 2311 BUSOUT RTN      S20201
               SPACE 1
ERR435   B     INDEXRTN                CHANNEL NINE SENSED//RETURN
*                                       OR CANCEL KEY 3800 ONLY@X50ADTT
               SPACE 1
ERR436   BC    15,COMREJ               GO TO COMMAND REJECT ROUTINE
ERR431A  CLI   ZERR(UCBREG),T1443       IS DEVICE A 1443         S20201
         BE    ERR437                   YES, GOTO END OF TEST    S20201
         B     NEVER                    SHOULD NOT OCCUR         S20201
               SPACE 1
ERR437   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
*        *****************************************************
*       *  FOLLOWING ROUTINES USED BY 1052,2150 I/O WRITERS  *
*        *****************************************************
               SPACE 2
*    1052 I/O WRITER TEST CHANNEL STATUS BYTES ROUTINE.
               SPACE 2
ERR500   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'1D'                   CHANNEL CONTROL CHECK
         DC    AL1(ERR501-ERR500-4)
         DC    X'1E'                   INTERFACE CONTROL CHECK
         DC    AL1(ERR502-ERR500-6)
         DC    X'1C'                   CHANNEL DATA CHECK
         DC    AL1(ERR503-ERR500-8)
         DC    X'11'                   SHOULD NOT OCCUR
         DC    AL1(ERR504-ERR500-10)
         DC    X'12'                   SHOULD NOT OCCUR
         DC    AL1(ERR504-ERR500-12)
         DC    X'16'                   UNIT CHECK
         DC    AL1(ERR530-ERR500-14)
         DC    X'1F'                   CHAINING CHECK
         DC    AL1(ERR505-ERR500-16)
         DC    X'1A'                   PROGRAM CHECK
         DC    AL1(ERR506-ERR500-18)
         DC    X'1B'                   PROTECTION CHECK
         DC    AL1(ERR507-ERR500-20)
         DC    X'17'                   UNIT EXCEPTION
         DC    AL1(ERR508-ERR500-22)
         DC    X'19'                   INCORRECT LENGTH
         DC    AL1(ERR509-ERR500-24)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR510-ERR500-26)
               SPACE 2
*    1052 I/O WRITER TEST CHANNEL SENSE BYTES ROUTINE.
      SPACE 1
ERR530   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'07'                   SHOULD NOT OCCUR
         DC    AL1(ERR531-ERR530-4)
         DC    X'06'                   SHOULD NOT OCCUR
         DC    AL1(ERR531-ERR530-6)
         DC    X'05'                   SHOULD NOT OCCUR
         DC    AL1(ERR531-ERR530-8)
         DC    X'04'                   SHOULD NOT OCCUR
         DC    AL1(ERR531-ERR530-10)
         DC    X'03'                   EQUIPMENT CHECK
         DC    AL1(ERR532-ERR530-12)
         DC    X'01'                   INTERVENTION REQUIRED
         DC    AL1(ERR533-ERR530-14)
         DC    X'02'                   BUS OUT CHECK
         DC    AL1(ERR534-ERR530-16)
         DC    X'00'                   COMMAND REJECT
         DC    AL1(ERR535-ERR530-18)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR536-ERR530-20)
         SPACE 1
*    EXITS TO 1052 I/O WRITER ERROR RECOVERY ROUTINES.
               SPACE 1
ERR501   BC    15,CHANERR              GO TO CHANNEL CONTROL ERROR RTN.
               SPACE 1
ERR502   BC    15,INFCERR              GO TO INTERFACE CONTROL CHECK
               SPACE 1
ERR503   BC    15,CHDATA               GO TO CHANNEL DATA CHECK ROUTINE
               SPACE 1
ERR504   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
               SPACE 1
ERR505   BC    15,CHAINCHK             GO TO CHAINING CHECK ROUTINE
               SPACE 1
ERR506   BC    15,PROCHK               GO TO PROGRAM CHECK ROUTINE
               SPACE 1
ERR507   BC    15,PTNCHK               GO TO PROTECTION CHECK ROUTINE
               SPACE 1
ERR508   LM    0,15,ERRSAV1            RESTORE REGS TO RETRY TYPER CCW.
         B     ATTN1                   RETRY TYPEWRITER RD CCW SA58009
               SPACE 1
ERR509   BC    15,WLRERR               GO TO INCORRECT LENGTH ROUTINE
               SPACE 1
ERR510   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE 1
ERR531   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
               SPACE 1
ERR532   TM    8(UCBREG),X'01'         TYPER IN READ OR WRITE STATUS
         BC    14,FAILREAD             READ STATUS--PRINT MESSAGE//WAIT
         BAL   LINK15,TWOTRY           WRITE STATUS--RETRY TYPER CCW.
         B     WAITTRY                 GO TO WAIT//RETRY CCW ROUTINE.
         SPACE 1
FAILREAD LA    GR2,TYPEFAIL            ADDR OF I/OWRITER READ ERROR MSG
         LA    GR1,98                  LENGTH OF MESSAGE IN BYTES.
         BC    15,TYPEWAIT             GO TO TYPE MESSAGE//WAIT ROUTINE
               SPACE 1
ERR533   B     WAITTRY                 GO TO WAIT ROUTINE//RETRY CCW.
               SPACE 1
ERR534   B     ERR134                   USE 2311 BUSOUT RTN      S20201
               SPACE 1
ERR535   BC    15,COMREJ               GO TO COMMAND REJECT ROUTINE
               SPACE 1
ERR536   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         SPACE
         SPACE
EQPERR   EQU   *                                               @X50ADTT
         LA    GR2,EQUP3800            EQUIP CK ADDRESS.       @X50ADTT
         LA    GR1,N70                 LENGTH OF MESSAGE.      @X50ADTT
         B     TYPEWAIT                GO TYPE OPER MESSAGE.   @X50ADTT
         SPACE
LOGERR   EQU   *                                               @X50ADTT
         MVC   SAVECCW(L2),L6(UCBREG)  SAVE CCW.               @X50ADTT
         LA    RCAW,LOGERCCW           SENSE BUFF LOG CCW.     @X50ADTT
         BAL   LINK9,STARTIO                                   @X50ADTT
         MVC   L6(L2,UCBREG),SAVECCW   RESTORE CCW.            @X50ADTT
         B     INDEXRTN                RETURN.                 @X50ADTT
         EJECT
*       ************************************************
*       *  FOLLOWING ROUTINE USED BY 2301 DASD DEVICE  *
*       ************************************************
               SPACE 2
*    2301 DASD TEST CHANNEL SENSE BYTES ROUTINE.
               SPACE 2
ERR730   BAL   ERRLNK,ERRTEST          LINK TO STATUS/SENSE BYTES TEST.
         DC    X'03'                    EQUIPMENT CHECK.
         DC    AL1(ERR732-ERR730-4)
         DC    X'0C'                    NO RECORD FOUND.
         DC    AL1(ERR741-ERR730-6)
         DC    X'07'                    INVALID ADDRESS.
         DC    AL1(ERR738-ERR730-8)
         DC    X'01'                    INTERVENTION REQUIRED.
         DC    AL1(ERR733-ERR730-10)
         DC    X'02'                    BUS OUT CHECK.
         DC    AL1(ERR734-ERR730-12)
         DC    X'04'                    DATA CHECK.
         DC    AL1(ERR735-ERR730-14)
         DC    X'05'                    OVERRUN.
         DC    AL1(ERR736-ERR730-16)
         DC    X'00'                    COMMAND REJECT.
         DC    AL1(ERR737-ERR730-18)
         DC    X'06'                    SHOULD NOT OCCUR.
         DC    AL1(ERR731-ERR730-20)
         DC    X'09'                    TRACK OVERRUN.
         DC    AL1(ERR739-ERR730-22)
         DC    X'0A'                    END OF CYLINDER.
         DC    AL1(ERR740-ERR730-24)
         DC    X'0D'                   FILE PROTECTED
         DC    AL1(ERR742-ERR730-26)
         DC    X'0F'                   OVERFLOW INCOMPLETE
         DC    AL1(ERR743-ERR730-28)
         DC    X'2F'                   END OF TEST
         DC    AL1(ERR744-ERR730-30)
               SPACE 2
*    EXITS TO 2301 DASD ERROR RECOVERY ROUTINES.
               SPACE 2
ERR731   BC    15,NEVER                GO TO SHOULD NOT OCCUR ROUTINE
               SPACE 1
ERR732   BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST ONCE MORE.
         BC    15,EQUIPCHK             SOLID ERROR-GO TO EQUIPCHK RTN.
               SPACE 1
ERR733   B     ERR133                  GO TO 2302 INTERVENTION REQ RTN.
               SPACE 1
ERR734   B     ERR134                   USE 2311 BUSOUT RTN      S20201
               SPACE 1
ERR735   BAL   LINK15,TENTRY           RETRY ERROR CCW LIST TEN TIMES.
         BC    15,DATACHK              SOLID ERROR-GO TO DATACHK RTN.
               SPACE 1
ERR736   B     ERR137                   USE 2311 OVERRUN RTN     S20201
               SPACE 1
ERR737   BC    15,ERR138                USE 2311 COMMAND REJECT
               SPACE 1
ERR738   BC    15,INVLDADR             GO TO INVALID ADDRESS ROUTINE
               SPACE 1
ERR739   BC    15,TROVRRUN             GO TO TRACK OVERRUN ROUTINE
               SPACE 1
ERR740   BC    15,ERR138A              DID FILE PROTECT OCCUR ALSO 6601
               SPACE 1
ERR741   BC    15,NORECFND             GO TO RECORD FOUND ROUTINE
               SPACE 1
ERR742   BC    15,ERR143                USE 2311 FILE PROTECT
               SPACE 1
ERR743   BC    15,OVRFLOW              GO TO OVERFLOW INCOMPLETE RTN.
               SPACE 1
ERR744   BC    15,ENDTEST              GO TO END OF TEST ROUTINE
         EJECT
***********************************************************
*        FOLLOWING ROUTINES USED BY 3330 AND 2305          *
***********************************************************
ERRB00   CLI   ZERR(UCBREG),T3330       IS DEVICE A 3330         S20201
         BL    ERRB01                   NO - CHECK 2305          S20201
         TM    TWOSIX(UCBREG),TEN       CHECK FOR ENV DATA      XL03145
         BNO   ERRA00                   CHECK REST OF SENSE      S20201
ENVDATA  BAL   LINK15,TWOTRY            RETRY CCW TWO TIMES      S20201
         B     ERRA00                   CHECK REST OF SENSE      S20201
ERRB01   TM    TWOSIX(UCBREG),EIGHTY    CHECK FOR BUFLOG FULL    S20201
         BNO   ERRA00                   CHECK REST OF SENSE      S20201
RDBUFLOG MVC   SAVECCW(L2),L6(UCBREG)   SAVE CCW IN ERROR        S20201
         LA    RCAW,BUFCCW              READ BUFFER LOG CCW      S20201
         BAL   LINK9,STARTIO            START THE IO             S20201
         MVC   L6(L2,UCBREG),SAVECCW    RESTORE CCW IN ERROR     S20201
         BAL   LINK15,TWOTRY            RETRY CCW TWO TIMES      S20201
ERRA00   BAL   ERRLNK,ERRTEST           LINK TO SENSE BYTE TEST  S20201
         DC    X'03'                    EQUIPMENT CHECK          S20201
         DC    AL1(ERRA01-ERRA00-4)     EQUIPMENT CHECK          S20201
         DC    X'0C'                    NO RECORD FOUND          S20201
         DC    AL1(ERRA02-ERRA00-6)     NO RECORD FOUND          S20201
         DC    X'01'                    INTERVENTION REQUIRED    S20201
         DC    AL1(ERRA03-ERRA00-8)     INTERVENTION REQUIRED    S20201
         DC    X'02'                    BUS OUT CHECK            S20201
         DC    AL1(ERRA04-ERRA00-10)    BUS OUT CHECK            S20201
         DC    X'05'                    OVERRUN                  S20201
         DC    AL1(ERRA06-ERRA00-12)    OVERRUN                  S20201
         DC    X'00'                    COMMAND REJECT           S20201
         DC    AL1(ERRA07-ERRA00-14)    COMMAND REJECT           S20201
         DC    X'0A'                    END OF CYLINDER          S20201
         DC    AL1(ERRA08-ERRA00-16)    END OF CYLINDER          S20201
         DC    X'0D'                    FILE PROTECT             S20201
         DC    AL1(ERRA09-ERRA00-18)    FILE PROTECT             S20201
         DC    X'04'                    DATA CHECK               S20201
         DC    AL1(ERRA05-ERRA00-20)    DATA CHECK               S20201
         DC    X'0F'                    OPERATION INCOMPLETE     S20201
         DC    AL1(ERRA10-ERRA00-22)    OPERATION INCOMPLETE     S20201
         DC    X'09'                    INVALID TRK FORMAT       S20201
         DC    AL1(ERRA12-ERRA00-24)    INVALID TRK FORMAT       S20201
         DC    X'2F'                    END OF TEST              S20201
         DC    AL1(ERRA13-ERRA00-26)    END OF TEST              S20201
ERRA01   TM    25(UCBREG),X'80'         IS PERM ERROR ON         S20201
         BO    EQUIPCHK                 YES, BYPASS ERP          S20201
         B     ERR131                   USE 2311 EQUIPCHK RTN    S20201
         SPACE 1
ERRA02   B     ERR132                   GO TO NOREC FND RTN      S20201
         SPACE 1
ERRA03   B     ERR133                   GO TO DASD INT REQ RTN   S20201
         SPACE 1
ERRA04   B     ERR134                   USE 2311 BUS OUT RTN     S20201
         SPACE 1
ERRA05   TM    25(UCBREG),X'80'         IS PERM ERROR ALSO       S20201
         BO    DATACHK                  YES, USE 2311 ERP        S20201
         B     ECFTEST                  NO, USE ECC FUNCTION     S20201
         SPACE 1
ERRA06   TM    25(UCBREG),X'80'         IS PERM ERROR ALSO       S20201
         BO    OVRRUN                   YES, BR TO TERMINATE     S20201
         B     ERR137                   USE 2311 OVERRUN RTN     S20201
         SPACE 1
ERRA07   B     ERR138                   USE 2311 COMMAND REJ
         SPACE 1
ERRA08   B     ENDOFCYL                 GO TO END OF CYL RTN     S20201
         SPACE 1
ERRA09   B     ERR143                   USE 2311 FILE PROT RTN   S20201
         SPACE 1
ERRA10   B     ERR144                   2311 DASD OVERFLOW RTN   S20201
         SPACE 1
ERRA12   B     INTRKFMT                 BR TO INVALID TRK FORMAT S20201
         SPACE 1
ERRA13   B     ENDTEST                  BR TO END OF TEST RTN    S20201
         EJECT
         EJECT
ERR900   BAL   ERRLNK,ERRTEST           LINK TO STATUS/SENSE BYTE TEST
         DC    X'03'                    EQUIPMENT CHECK
         DC    AL1(ERR901-ERR900-4)
         DC    X'0C'                    NO RECORD FOUND
         DC    AL1(ERR902-ERR900-6)
         DC    X'07'                    SEEK CHECK
         DC    AL1(ERR903-ERR900-8)
         DC    X'01'                    INTERVENTION REQUIRED
         DC    AL1(ERR904-ERR900-10)
         DC    X'02'                    BUSS OUT CHECK
         DC    AL1(ERR905-ERR900-12)
         DC    X'04'                    DATA CHECK
         DC    AL1(ERR906-ERR900-14)
         DC    X'05'                    OVERRUN
         DC    AL1(ERR907-ERR900-16)
         DC    X'0E'                    MISSING ADDRESS MARKER
         DC    AL1(ERR908-ERR900-18)
         DC    X'00'                    COMMAND REJECT
         DC    AL1(ERR909-ERR900-20)
         DC    X'06'                    TRACK CONDITION CHECK
         DC    AL1(ERR910-ERR900-22)
         DC    X'09'                    TRACK OVERRUN
         DC    AL1(ERR911-ERR900-24)
         DC    X'0A'                    END OF CYLINDER
         DC    AL1(ERR912-ERR900-26)
         DC    X'0D'                    FILE PROTECT
         DC    AL1(ERR913-ERR900-28)
         DC    X'2F'                    END OF TEST
         DC    AL1(ERR914-ERR900-30)
ERR901   B     EQUIPCHK                 GO TO EQUIPCHK ROUTINE
         SPACE 1
ERR902   TM    25(UCBREG),X'02'        MISSING ADDRESS MARKER ALSO
         BO    ACTVIII                   YES, CHECK MORE
         B     ACTIX                       CORRECT CYLINDER
         SPACE 1
ERR903   TM    25(UCBREG),X'02'        MISSING ADDRESS MARKER ALSO
         BO    BALLAST                  YES, SEEKED BALLAST-SOLID ERROR
         B     ACTXI                   CHECK ON SEEK CHECK
         SPACE 1
ERR904   B     ERR133                   INTERV REQUIRED;AS IN 2311
         SPACE 1
ERR905   B     ERR134                   USE 2311 BUSOUT RTN      S20201
         SPACE 1
ERR906   BAL   LINK1,ACTXII           DATA CHECK
         B     DATACHK
         SPACE 1
ERR907   BAL   LINK15,TENTRY
         B     OVRRUN
         SPACE 1
ERR908   BAL   LINK1,ACTXII           MISSING ADDRESS MARLER
         B     MISSMARK
         SPACE 1
ERR909   B     COMREJ
         SPACE 1
ERR910   B     INDEXRTN                 TRACK CONDITION CHECK
         SPACE 1
ERR911   B     TROVRRUN
         SPACE 1
ERR912   B     ENDOFCYL
         SPACE 1
ERR913   B     ERR143                   FILE PROTECT
         SPACE 1
ERR914   B     ENDTEST
         EJECT
ACTVIII  TM    ACTXIISW,X'40'           ERROR CAUSED IN TEN TRY ROUTINE
         BO    TENTRY                     YES, TRY AGAIN IF NECESSARY
         BAL   LINK1,TRESEEK           RESTORE, RETRY 3 TIMES
         L     REGD,ERRSAV1+12          GET CCW ADDRESS
         L     REGD,0(REGD)               GET SEEK ADDRESS
         MVC   STORSEEK(6),0(REGD)          MOVE IT
         XI    STORSEEK+5,X'01'         CHANGE TO ANOTHER TRACK
         MVI   ACTXIISW,X'10'           RETURN WITHOUT CHECKING ERROR
         LA    GR3,SOMEHOME              ADDRESS OF CCW LIST
         BAL   LINK9,STARTIO            SEEK, READ HA OF NEW TRACK
         CLC   STORSEEK+2(4),HOMEBUF+1  WAS THIS PROPER TRACK
         BE    ACTVIIIE                 YES, RETRY ORIGINAL
         BAL   LINK9,STARTIO            NO, TRY AGAIN
         CLC   STORSEEK+2(4),HOMEBUF+1  WAS THIS PROPER TRACK
         BNE   ACTVIIID
ACTVIIIE MVI   ACTXIISW,X'40'           TELL ACTVIII WHERE WE ARE
         BAL   LINK15,TENTRY            RETRY CCW LIST 10 TIMES
ACTVIIID MVI   ACTXIISW,X'00'            RESET SWITCH
         B     BLANKTRK                 SOLID//PRINT MSG//TERMINATE
         SPACE 1
SOMEHOME CCW   7,STORSEEK,X'60',6
         CCW   X'1A',HOMEBUF,X'20',5
         SPACE 1
ACTIX    BAL   LINK15,CYLNCHK          READ HA- SEE IF COREECT CYL
         BAL   LINK1,ACTX              NO-SEEK OTHER STRIP/RETRY 10TIME
         B     NORECFND                YES-HARD ERROR.
         SPACE 1
ACTX     LA    GR3,RESEEKM             GET ADDRESS OF CCW LIST
         MVC   SEEK1X(2),BBCCHH          GET
         MVC   SEEK2X(2),BBCCHH            CELL ADDRESS
         MVC   SEEK1X+5(1),HH+1        SET UP THE HEAD ADDRESS.
         MVC   SEEK2X+5(1),HH+1        SET UP THE HEAD ADDRESS.
         MVI   ACTXIISW,X'10'          SET FOR DIRECT RETURN.
         BAL   LINK9,STARTIO           SEEK TO AN OFF TRACK.
         MVI   ACTXIISW,X'00'          RESET DIRECT RETURN SWITCH.
         BAL   LINK15,TENTRY            RETRY TEN TIMES
         BR    LINK1                     SOLID RETURN TO USER
         SPACE 1
RESEEKM  CCW   7,SEEK1X,X'40',6
         CCW   7,SEEK2X,X'00',6
SEEK1X   DC    X'0000010101010000'     AT LEAST ONE ADDRESS
SEEK2X   DC    X'000003030303'            DIFFERENT THAN ORIGINAL
         SPACE 1
ACTXI    TM    25(UCBREG),X'01'        OVERFLOW INCPMPLETE ALSO
         BZ    ACTXIA                    NO - CHECK FURTHER
         BAL   LINK1,TENSEEK           RESTORE, RETRY 10 TIMES
         B     SEEKCHK                  SOLID - SEEK CHECK ROUTINE
ACTXIA   TM    24(UCBREG),X'80'        COMMAND REJECT ALSO
         BO    SEEKCHK                    YES - SOLID
         BAL   LINK1,ACTX
         B     SEEKCHK                  SOLID
         EJECT
ACTXII   TM    ACTXIISW,X'20'          EXECUTING ORIGINAL CCW LIST.
         BO    TRETRY                  YES-RETURN TO TRETRY ROUTINE.
         MVI   ACTXIISW,X'21'          NO-SET 1ST ENTRY(01)ORIGINAL(20)
         L     REGD,4(UCBREG)          GET ADDRESS OF START OF CCW LIST
         L     REGD,0(REGD)            PICK UP HALF OF SEEK CCW.
         MVC   HIADR(4),0(REGD)        SET UP ADDRESS FOR SEEK HIGHEST.
         MVC   LOWADR(4),0(REGD)       SET UP ADDRESS FOR SEEK LOWEST.
         L     REGE,LOWADR             SET UP TO SEEK ONE STRIP OFF.
         CLI   HIADR+3,X'00'           IS THIS STRIP ZERO.
         BE    ACTXIIA                 YES-USE NEXT HIGHER STRIP.
         BCTR  REGE,0                  NO--USE NEXT LOWER STRIP.
         B     ACTXIIB                 USE NEXT LOWER--BYPASS NEXT STEP
ACTXIIA  A     REGE,F1                 SEEK ADDRESS NEXT HIGHER STRIP.
ACTXIIB  ST    REGE,NXTLOW             SEEK ADDRESS LOWER OR HIGHER.
         LA    REGE,4                  SET UP FOR 8 RETRIES OF ORIGINAL
ACTXIIC  BAL   LINK15,TRETRY           TWO RETRIES.
         BCT   REGE,ACTXIIC            REPEAT SEQUENCE IF NECESSARY.
         LA    REGE,12                 12 PASSES THRU LOOP2X.
         LA    REGF,1                  1 PASS THRU LOOP2X AND LOOP3X.
         SPACE 1
LOOP2X   BAL   LINK15,EIGHTTRY         SEEK TO HIGH-LOW TRACKS 8 TIMES.
         NI    ACTXIISW,X'EF'          TURN OFF DIRECT RETURN BIT.
         BAL   LINK15,TRETRY           RETRY ORIGINAL CCW LIST TWICE.
         BCT   REGE,LOOP2X             REPEAT SEQUENCE IF NECESSARY.
         LA    REGE,15                 RESET THE LOOP COUNTER.
         SPACE 1
LOOP3X   LA    RCAW,SNXTLOW            SEEK COMMAND FOR NEXT LOWER
         BAL   LINK9,STARTIO             OR STRIP ONE.
         BAL   LINK15,TRETRY           RETRY ORIGINAL CCW LIST TWICE.
         BCT   REGF,LOOP2X             REPEAT SEQUENCE IF NECESSARY.
         XI    ACTXIISW,X'01'          RESET THE FIRST ENTRY SWITCH.
         TM    ACTXIISW,X'01'          FIRST PASS THRU BOTH LOOPS.
         BO    SDACTXII                NO--DONE--SOLID ERROR.
         LA    REGE,15                 15 PASSES THRU LOOP2X.
         LA    REGF,6                  6 PASSES OF LOOP2X AND LOOP3X.
         B     LOOP2X                  REPEAT UNTIL NO ERROR OR 226.
         SPACE 1
SDACTXII MVI   ACTXIISW,X'00'          TURN OFF THE CONTROL SWITCH.
         BR    LINK1                   SOLID ERROR--RETURN.
         SPACE 1
EIGHTTRY LA    REGG,8                  SET UP FOR EIGHT SWEEPS.
         LA    CCWREG,HILOWCCW         CCW LIST FOR LAST-FIRST TRACKS.
LOOP4X   BAL   LINK9,STARTIO           SWEEP FROM LAST TO FIRST TRACKS.
         BCT   REGG,LOOP4X             REPEAT FOR EIGHT SWEEPS.
         BR    LINK15                  RETURN
         EJECT
HILOWCCW CCW   7,HIADR,X'40',6         SEEK LAST TRACK OF STRIP.
         CCW   7,LOWADR,X'00',6        SEEK FIRST TRACK OF STRIP.
         SPACE 1
SNXTLOW  CCW   7,NXTLOW,X'00',6        SEEK NEXT LOWER OR STRIP ONE.
         DS    0D
HIADR    DC    X'0000000004130000'     SEEK ADDRESS FOR LAST TRACK.
LOWADR   DC    1D'0'                   SEEK ADDRESS FOR FIRST TRACK.
NXTLOW   DC    X'000000000000'         NEXT LOWER ADDRESS OR STRIP ONE.
         EJECT
*       **************************************************
*       *  ROUTINES BELOW ARE COMMON TO DASD DEVICES     *
*       **************************************************
         SPACE 1
*    SEEKED TO CORRECT CYLINDER ROUTINE
         SPACE 1
CYLNCHK  L     GR7,4(UCBREG)           GET SEEK CCW LIST ADDR. FROM CSW
         L     GR8,0(GR7)              GET ADDRESS OF SEEK BBCCHH FLD.
         MVC   STORSEEK(4),2(GR8)      SAVE ADDR. OF SEEKED TO LOCATION
         LA    GR3,READHOME            GET ADDR. OF READ HOME ADDR. CCW
         BAL   LINK9,STARTIO           DO READ HOME ADDRESS OPERATION.
         CLC   HOMEBUF+1(4),STORSEEK   VERIFY SEEK TO PROPER CYLN. NUMB
         BCR   7,LINK15                INCORRECT CYLINDER-RESEEK HEADS
         BC    8,4(LINK15)             CORRECT CYLINDER- ERROR RETURN
         SPACE 1
STORSEEK DC    3H'0'                   SAVE AREA FOR SEEK TO CCHH FLD.
         SPACE 1
         DS    0D                      DOUBLE WORD BOUNDARY
READHOME DC    X'1A'                   READ HOME ADDRESS OP. CODE
         DC    AL3(HOMEBUF)            ADDRESS OF READIN BUFFER
         DC    X'20000005'             COUNT OF 5/////SILI BIT ON/////
      SPACE 1
HOMEBUF  DC    XL5'00'                 BUFFER FOR READ H/A FIVE BYTES
         SPACE
TWOSEEK  LA    CSR3,WIPEHEAD           ADDRESS OF RESTORE CCW
         BAL   LINK9,STARTIO           PERFORM SEEK CCW LIST
         BAL   LINK15,TWOTRY           RETRY ERROR CCW LIST TWO TIMES
         BR    LINK1                   RETURN TO CALLING ROUTINE
TRESEEK  LA    GR3,WIPEHEAD            ADDRESS OF RESTORE CCW
         BAL   LINK9,STARTIO           PERFORM RESTORE
         BAL   LINK15,TRETRY           RETRY CCW LIST AND SEEK 3 TIMES
         BR    LINK1                   SOLID ERROR//..//RETURN//....
         SPACE 1
TENSEEK  LA    CSR3,WIPEHEAD           ADDRESS OF HEAD CLEAN CCW LIST
         BAL   LINK9,STARTIO           PERFORM A SEEK.
         BAL   LINK15,TENTRY           RETRY ERROR CCW LIST 10 TIMES
         BR    LINK1                   RETURN TO CALLING ROUTINE.
         SPACE 1
         DS    0D
WIPEHEAD CCW   X'13',0,X'60',1         RESTORE COMMAND 2311
         CCW   X'17',0,X'20',1         2321
         SPACE 1
*    TRACK OVERRUN ERROR ROUTINE
         SPACE 1
TROVRRUN LA    ERREG1,EMES14           INDEX TO MESSAGE TABLE.
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
         SPACE 1
*    DASD OVERFLOW ERROR ROUTINE
         SPACE 1
OVRFLOW  LA    ERREG1,EMES23           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*    FILE PROTECTED ERROR ROUTINE
               SPACE 1
FILEPROT LA    ERREG1,EMES15           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*    INVALID ADDRESS ERROR ROUTINE
               SPACE 1
INVLDADR LA    ERREG1,EMES10           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    SEEK CHECK ROUTINE
         SPACE 1
SEEKCHK  LA    ERREG1,EMES30           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    NO RECORD FOUND ERROR ROUTINE
         SPACE 1
NORECFND CLI   NORCDSW,X'F0'           IS THIS A LABEL CHECK ROUTINE.
         BC    7,NORECMSG              NO-GO TO PRINT ERROR MSG RTN.
         LM    0,15,ERRSAV1            YES-RESTORE REGISTERS FOR RETURN
         B     RCDRTN                  GO TO NO LABEL FOUND ROUTINE.
      SPACE 1
NORECMSG LA    ERREG1,EMES17           INDEX TO MESSAGE TABLE.
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    END OF CYLINDER ERROR ROUTINE
         SPACE 1
ENDOFCYL LA    ERREG1,EMES09           INDEX TO MESSAGE TABLE
*        INVALID TRACK FORMAT ERROR
INTRKFMT LA    ERREG1,EMES37            INDEX TO MESSAGE TABLE   S20201
         B     ERROROUT                 PRINT ERROR MSG          S20201
         SPACE 1
*    MISSING ADDRESS MARKER ERROR ROUTINE.
         SPACE 1
MISSMARK LA    ERREG1,EMES34           INDEX TO MESSAGE TABLE.
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
BLANKTRK LA    ERREG1,EMES35           BLANK TRACK
         B     ERROROUT
         SPACE 1
INDEXRTN MVI   ERRETRY,X'00'            RESET ERROR RETRY SWITCH OFF
         MVI   EORSW,X'00'             RESET END OF REEL SW    @ZA01216
         MVI   UESW,X'00'              TURN OFF UE SWITCH      @ZA01216
         MVI   DSKEOFSW,X'00'          RESET DISK EOF SWITXH.      5434
         MVI   ACTXIISW,X'00'          RESET ACTION XII SWITCH
         MVI   1(UCBREG),X'00'         TURN OFF THE FLAG.
         MVI   SAVEPSW+1,X'04'         TURN OFF WAIT BIT
         LA    GR7,TENCK               PGM LOOP CHECK           OX00110
         L     GR8,SAVEPSW+4           BRANCH ADDRESS           OX00110
         LA    GR8,0(GR8)              ZERO HIGH BYTE           OX00110
         CLR   GR7,GR8                 COMPARE PSW ADDRESS      OX00110
         LM    0,15,ERRSAV1            RESTORE THE REGISTERS.
         BE    RESET15                 END OF TAPE              OX00110
         LPSW  SAVEPSW                 RETURN TO PROCESS.
               EJECT
*       **************************************************
*       *  ROUTINES BELOW ARE COMMON TO TAPE DEVICES     *
*       **************************************************
         SPACE 2
*    TEST TAPE DATA CHECK==READ OR WRITE?
         SPACE 1
TAPEDATA TM    25(UCBREG),X'04'        TAPE IN READ OR WRITE STATUS?
         BC    14,NOISETST             READ STATUS-PERFORM NOISE CHECK
         SPACE 1
*    TAPE DATA CHECK ON WRITE ROUTINE
         SPACE 1
RITERROR EQU   *                                               @ZA01216
         NI    UESW,X'FD'              TURN OFF SPEC RETRY SW  @ZA01216
         TM    20(UCBREG),X'03'        IF BOTH UE AND UC       @ZA01216
         BNO   CONT                    TURN ON                 @ZA01216
         OI    UESW,ETT                UESWITCH                @ZA01216
CONT     EQU   *                                               @ZA01216
         BAL   LINK15,BACKSPC          BACKSPACE TAPE ONE REC  @ZA01216
         BAL   LINK15,ERASE            ERASE ONE LONG GAP ON TAPE
         OI    UESW,TVAE               INDICATE RETRY STARTED  @ZA01216
         BAL   LINK15,TENTRY           RETRY TEN TIMES             7849
         LA    ERREG1,EMES31           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    TAPE BACKSPACE ROUTINE
         SPACE 1
BACKSPC  LA    CSR3,BSPACE             GET ADDRESS OF BACKSPACE SSW
         BAL   LINK9,STARTIO           PERFORM BACKSPACE OPERATION.
         BCR   15,LINK15               RETURN TO CALLING ROUTINE
         SPACE 1
         DS    0D                      DOUBLE WORD BOUNDARY
BSPACE   DC    X'27'                   OP CODE FOR BACKSPACE
         DC    X'00000020000001'       REMAINDER OF CCW
         SPACE 1
*    TAPE ERASE ONE LONG GAP ROUTINE
         SPACE 1
ERASE    LA    CSR3,ERASEGAP           GET ADDRESS OF ERASE CCW LIST.
         BAL   LINK9,STARTIO           PERFORM ERASE OPERATION.
         BR    LINK15                  RETURN TO CALLING ROUTINE
         SPACE 1
         DS    0D
ERASEGAP DC    X'17'                   OP CODE FOR ERASE
         DC    X'00000020000001'       REMAINDER OF CCW
               SPACE 1
*    TAPE AT LOAD POINT ROUTINE
               SPACE 1
TAPELP   TM    LPSWITCH,X'EE'          LP OCCURED DURING TAPECLN RTN.
         BC    1,LPDATA                YES--GO TO DATA CHECK AT LP EXIT
         LA    ERREG1,EMES32           NO- INDEX TO THE MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE//TERMINATE.
         SPACE 1
LPSWITCH DC    X'00'                   SWITCH AT 'EE'//DATA CHECK AT LP
     EJECT
*    TAPE READ DATA CHECK////NOISE RECORD ERROR ROUTINE.
         SPACE 1
NOISETST TM    CKVOLSW,X'20'           IS ERR ON INIT LABEL      A27583
         BC    14,NOTLABEL             NO-GO TO STANDARD READ ERROR RTN
         SPACE 1                                                 A27583
*        DATA CHECK WHILE READING FIRST RECORD ON TAPE,          A27583
*        CANNOT READ AS LABEL, ASSUME LOADER (LABEL IS           A27583
*        VARIABLE MODE, LOADER IS DEFAULT MODE)                  A27583
         LM    0,15,ERRSAV1            YES---RESTORE P/P REGISTERS.
         XI    CKVOLSW,X'20'           TURN OFF INITIAL          A27583
*                                         LABEL SWITCH           A27583
         TM    TAPEBUFS+1,X'10'        IS TAPE 7 TRACK           A27583
         BNO   RETRYLBL                NO, KEEP MODE             A27583
         MVI   XRDVOLID,X'93'          LOADER DEFAULT MODE       A27583
RETRYLBL MVI   ERRETRY,X'00'           TURN OFF ERROR SW         A27583
         LA    RCAW,XREWCCW            REWIND TAPE               A27583
         BAL   RLINK1,STARTIO                                    A27583
         BR    RWRKREG4                RETRY LOADER              A27583
         SPACE 1
NOTLABEL L     GR7,16(UCBREG)          ADDR. OF CCW AFTER READ ERROR.
         S     GR7,EIGHT               GET ADDRESS OF ERROR CCW
         MVC   TIECCW1(8),0(GR7)       LOAD ERROR CCW IN TIE CCW LIST
         LH    GR8,6(GR7)              LOAD COUNT OF ERROR CCW IN REG 8
         SH    GR8,22(UCBREG)          GET NUMBER OF BYTES READ
         CH    GR8,TWELVE              TEST FOR TWELVE BYTES
         BC    10,READTAPE             12 BYTES OR MORE RECORD LENGTH
         TM    25(UCBREG),X'80'        LESS THAN 12BYTE-CHECK NOISE BIT
         BC    7,READTAPE              NOISE BIT ON--GO TO READTAPE RTN
NOISEREC MVI   ERRETRY,X'00'           TURN OFF ERROR RETRY SWITCH
         SPACE 1
         LM    0,15,ERRSAV1            RESTORE REGISTERS FOR RETURN.
         B     STARTIO1                IGNORE NOISE REC--GET NEXT REC.
         SPACE 1
READTAPE BAL   LINK15,BACKSPC          BACKSPACE TAPE ONE RECORD
         L     GR7,READTEN             SETUP COUNTER FOR READ RETRYS
         BCT   GR7,READLOOP            PERFORM 10 RETRYS IF ERROR CONTS
         TM    25(UCBREG),X'08'        IS THE TAPE AT LOAD POINT.
         BC    1,NOCLEAN               YES--BYPASS TAPE CLEANER ROUTINE
         SPACE 1
         MVI   LPSWITCH,X'EE'          SET LP SW ON TO DETECT BS TO LP.
         BAL   LINK15,TAPECLN          LINK TO TAPE CLEANER ROUTINE
         MVI   LPSWITCH,X'00'          RESET LP SWITCH TO OFF.
         SPACE 1
NOCLEAN  L     GR8,CLEANCTR            SET UP TAPE CLEANER ENTRY CTR.
         BCT   GR8,CLEANLOP            BR-ALLOW TEN ENTRYS INTO TAPECLN
         SPACE 1
LPDATA   MVC   READTEN(4),READSET      SOLID ERROR//RESET COUNTER TO 10
         MVC   CLEANCTR(4),CLEANSET    10TH ENTRY TO TAPE CLEANER/RESET
         MVI   LPSWITCH,X'00'          RESET LOAD POINT SWITCH OFF.
         LA    ERREG1,EMES12           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
CLEANLOP ST    GR8,CLEANCTR            SAVE DECREMENTED COUNTER VALUE
         L     GR7,READSET             10TH READ RETRY--RESET READTEN.
         SPACE 1
READLOOP ST    GR7,READTEN             SAVE DECREMENTED COUNTER VALUE
         MVC   TIEBYTE(1),26(UCBREG)   PUT SENSE BYTE 2 IN TIE CCW LIST
         MVI   ERRETRY,X'FF'           TURN ERROR RETRY SWITCH ON.
         LA    CSR3,TIECCW             LOAD TRACK IN ERROR CCW LIST ADR
         BAL   LINK9,STARTIO           EXECUTE T.I.E. CCW LIST.
         MVC   READTEN(4),READSET      NO ERROR RETURN--RESET COUNTER.
         MVC   CLEANCTR(4),CLEANSET    NO ERROR RETURN--RESET COUNTER.
         B     INDEXRTN                RESET SWITCHES AND RETURN
         SPACE 1
         DS    0D
TIECCW   DC    X'1B'                   TRACK IN ERROR COMMAND CODE.
         DC    AL3(TIEBYTE)            ADDRESS OF TRACK IN ERROR BYTE
         DC    X'60000001'             CHAIN BIT ON//SLI BIT ON//
TIECCW1  DC    X'0000000000000000'     SPACE FOR INSERTING READ CCW .
         SPACE 1
TIEBYTE  DC    X'00'                   SPACE TO INSERT SENSE BYTE TWO.
         SPACE 1
         DS    0F
READTEN  DC    X'0000000A'             COUNT OF RETRYS
READSET  DC    X'0000000A'             RESTORE VALUE
CLEANCTR DC    X'0000000A'             COUNT OF TAPE CLEANER ENTRYS
CLEANSET DC    X'0000000A'             RESTORE VALUE
         SPACE 1
         DS    0F                      FULL WORD ALIGNMENT
SIXTEEN  DC    1F'16'                  'SIXTEEN' ON FULL WORD BOUNDRY.
TWELVE   DC    H'12'                   HALF WORD OF 12
         SPACE 1
*    TAPE CLEANER ROUTINE
         SPACE 1
TAPECLN  LA    CSR3,CLEANTP            GET ADDRESS OF TAPE CLEANER CCWS
         BAL   LINK9,STARTIO           PERFORM TAPE CLEANER ROUTINE.
         BR    LINK15                  RETURN TO CALLING ROUTINE
         SPACE 1
         DS    0D
CLEANTP  DC    X'27'                   BACKSPACE OP CODE
         DC    X'00000060000001'       CHAIN BIT ON///SLI BIT ON//
         DC    X'27'                   BACKSPACE OP CODE
         DC    X'00000060000001'       CHAIN BIT ON///SLI BIT ON//
         DC    X'37'                   FORWARD SPACE OP CODE
         DC    X'00000060000001'       CHAIN BIT ON///SLI BIT ON//
         DC    X'37'                   FORWARD SPACE OP CODE
         DC    X'00000020000001'       CHAIN BIT OFF//SLI BIT ON//
               EJECT
*      **************************************************
*      * ROUTINES BELOW USED FOR ALL I/O ERROR RETRYS.  *
*      **************************************************
               SPACE 2
*    TWO RETRYS OF ERROR CCW ROUTINE
         SPACE 1
TWOTRY   TM    TWOFLAG,X'02'           IS THIS SECOND ENTRY INTO TWOTRY
         BC    1,BADTRY                YES. GO TO PERMANENT ERROR EXIT.
         MVI   TWOFLAG,X'02'           NO...SET TWOFLAG TO ON.
         L     CSR3,4(UCBREG)          GET ADDRESS OF START OF CCW LIST
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
         MVI   TWOFLAG,X'00'           RETRY OK--SET TWOFLAG TO OFF.
         B     INDEXRTN                RESET SWITCHES AND RETURN
         SPACE 1
BADTRY   MVI   TWOFLAG,X'00'           PERMANENT ERROR//SET TWOFLAG OFF
         BR    LINK15                  SOLID ERROR----//RETURN//---
         SPACE 1
TWOFLAG  DC    X'00'                   '00' EQUAL OFF/// '02' EQUAL ON.
         SPACE 1
         SPACE 1
*    THREE ERROR RETRYS ROUTINE.
         SPACE 1
TRETRY   L     GR7,TRECTR              SETUP COUNTER FOR RETRY
         BCT   GR7,TRELOOP             BR--ALLOW UP TO THREE RETRYS--
         MVC   TRECTR(4),TRESET        3RD RETRY ERROR--RESET COUNTER
         BR    LINK15                  SOLID ERROR----//RETURN//----
         SPACE 1
TRELOOP  ST    GR7,TRECTR              SAVE DECREMENTED COUNTER TOTAL
         L     CSR3,4(UCBREG)          ADDRESS OF CCW LIST IN ERROR
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
         MVC   TRECTR(4),TRESET        NO ERROR RETURN-SET COUNTER TO 3
         B     INDEXRTN                RESET SWITCHES AND RETURN
         SPACE 1
         DS    0F
TRECTR   DC    XL4'00000004'           COUNT OF RETRYS PLUS ONE    7849
TRESET   DC    XL4'00000004'           RESTORE VALUE               7849
         EJECT
*    SIX ERROR RETRYS ROUTINE
         SPACE 1
SIXTRY   L     GR7,SIXCTR              SETUP COUNTER FOR RETRY
         BCT   GR7,SIXLOOP             BR--ALLOW UP TO FIVE RETRYS--
         MVC   SIXCTR(4),SIXSET        6TH ERROR--RESET COUNTER
         BR    LINK15                  SOLID ERROR----//RETURN//---
         SPACE 1
SIXLOOP  ST    GR7,SIXCTR              SAVE DECREMENTED COUNTER TOTAL
         L     CSR3,4(UCBREG)          ADDRESS OF CCW LIST IN ERROR.
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
         MVC   SIXCTR(4),SIXSET        NO ERROR RETURN-SET COUNTER TO 5
         B     INDEXRTN                RESET SWITCHES AND RETURN
         SPACE 1
         DS    0F
SIXCTR   DC    X'00000005'             COUNT OF RETRYS
SIXSET   DC    X'00000005'             RESTORE VALUE
         SPACE 1
*    TEN RETRYS OF ERROR CCW LIST ROUTINE
         SPACE 1
TENTRY   L     GR7,TENCTR              SETUP COUNTER FOR RETRY
         BCT   GR7,TENLOOP             BR--ALLOW UP TO TEN RETRYS--
         MVC   TENCTR(4),TENSET        10TH ERROR--RESET COUNTER--
         BR    LINK15                  SOLID ERROR----//RETURN//---
         SPACE 1
TENLOOP  ST    GR7,TENCTR              SAVE DECREMENTED COUNTER TOTAL
         L     CSR3,4(UCBREG)          ADDRESS OF CCW LIST IN ERROR
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
TENCK    MVC   TENCTR(4),TENSET        NO ERR. RETURN-SET COUNTER TO 10
         B     INDEXRTN                RESET SWITCHES AND RETURN
         SPACE 1
         DS    0F
TENCTR   DC    XL4'0000000B'           COUNT OF RETRYS PLUS ONE    7849
TENSET   DC    XL4'0000000B'           RESTORE VALUE               7849
         SPACE
*    SIXTEEN BY SIXTEEN ERROR RETRY ROUTINE.
         SPACE 1
SIXTTRY  LH    GR7,RECALCTR            PICK UP COUNTER VALUE.
         BCT   GR7,SIXTLOOP            RECALIBRATE AFTER 16 ENTRIES.
         LA    GR3,WIPEHEAD            RECALIBRATE CCW.
         BAL   LINK9,STARTIO           POSITION DEVICE TO ZERO.
         LA    GR7,17                  VALUE TO RESET COUNTER.
SIXTLOOP STH   GR7,RECALCTR            STORE NEW COUNTER VALUE.
         LH    GR7,CTR16               PICK UP RETRY VALUE.
         BCT   GR7,S16LOOP             HAVE WE RETRIED 256 TIMES.
         MVC   CTR16(4),RESET          YES-SOLID ERROR/RESET COUNTERS.
         BR    LINK15                  RETURN TO CALLER.
S16LOOP  STH   GR7,CTR16               STORE NEW COUNTER VALUE.
         L     GR3,4(UCBREG)           CCW LIST IN ERROR.
         BAL   LINK9,STARTIO           RETRY CCW LIST ONCE MORE.
         MVC   CTR16(4),RESET          NO ERROR//RESET COUNTERS.
         B     INDEXRTN                ERROR RECOVERY RETURN.
CTR16    DC    H'257'                  COUNT OF RETRIES.
RECALCTR DC    H'17'                   RECALIBRATE COUNT.
RESET    DC    H'257'                  RESTORE VALUE.
BUFCCW   CCW   X'24',SAVECC1,X'30',128  READ BUFFER LOG          S20201
SAVECCW  DC    H'0'                     SAVE ADDR OF CCW         S20201
SAVECC1  DC    F'0'                     READ BUFLOG AREA         S20201
               EJECT
*      *****************************************************
*      * ROUTINES BELOW USED FOR OPERATOR ALERT ROUTINES.  *
*      *****************************************************
         SPACE 1
*    TYPE OPERATOR MESSAGE//WAIT ROUTINE
         SPACE 1
DEVWAIT  LA    GR1,50                  LENGTH OF MESSAGE IN BYTES.
         LA    GR2,READYDEV            ADDRESS OF READYDEV MESSAGE.
         SPACE 1
TYPEWAIT BAL   LINK15,OPPRNT           LINK TO I/O WRITER PRINT MESSAGE
         SPACE 1
WAITTRY  LA    GR7,STARTIO1            SET UP RETURN ADDRESS.
         ST    GR7,CONTINUE+4          MODIFY CONTINUE REENTRY POINT
         MVI   ERRETRY,X'00'           TURN OFF ERROR RETRY SWITCH
         LM    0,15,ERRSAV1            RESTORE REGS TO RETRY ORIG. CCW.
         LPSW  IOWAIT                  REENTER STARTIOX ON READY DEVICE
               SPACE 2
READYRDR DC    C'IBC154A  READY READER    . '
         SPACE 1
READCHK  DC    C'IBC159A  READER CHECK. CORRECT ERROR. DEPRESS '
         DC    C'INTERRUPT KEY.'
         SPACE 1
READYPRT DC    C'IBC155A  READY PRINTER    .'
         SPACE 1
PRINTCHK DC    C'IBC160A  PRINT CHECK. CORRECT ERROR. DEPRESS '
         DC    C'INTERRUPT KEY.'
         SPACE 1
INVALCRD DC    C'IBC101W INVALID CARD CODE. CORRECT ERROR. '
         DC    C'DEPRESS INTERRUPT KEY.'
         SPACE 1
TYPEFAIL DC    C'IBC153A  TYPEWRITER FAILED TO READ LAST MESSAGE. '
         SPACE 1
READYDEV DC    C'                            DEPRESS INTERRUPT KEY.'
         SPACE 1
DISKMSG  DC    C'IBC157A  READY DASD    .   '
         SPACE 1
TAPEMSG  DC    C'IBC156A  READY TAPE    .   '
         SPACE 1
GETTAPE  DC    C'IBC166A  NOT A RESTORE VOL. ON    .  MOUNT PROPER'
         DC    C' VOLUME. DEPRESS INTERRUPT KEY.'
         SPACE 1
GETCELL  DC    C'IBC167A  SEEKED BALLAST CELL. MOUNT PROPER CELL.'
         DC    C' DEPRESS INTERRUPT KEY.'
         SPACE 1
MESS1    DC    C'IBC161A  END OF TAPE. MOUNT TAPE ON    .'
         DC    C'  DEPRESS INTERRUPT KEY. '
         SPACE
EQUP3800 EQU   *                                               @X50ADTT
         DC    C'IBC169A PRINTER EQUIPMENT CHECK. CORRECT '    @X50ADTT
         DC    C'ERROR. DEPRESS INTERRUPT KEY.'                @X50ADTT
         SPACE
         EJECT
*    CONVERT UNIT INTERFACE ADDRESS TO EBDIC FOR PRINTING.
        SPACE 2
UNITADDR UNPK  UNITBUF(5),2(3,GR7)     UNPACK CHANNEL AND UNIT ADDRESS.
         TR    UNITBUF(4),IOTAB-240    TRANSULATE TO BCD.
         BR    LINK15                  RETURN TO USER.
         SPACE 2
UNITBUF  DS    1D                      BUFFER FOR EBDIC UNIT ADDRESS.
               SPACE 2
               SPACE 2
*    MOUNT PROPER TAPE MESSAGE HANDLING ROUTINE.
         SPACE 1
MOUNTAPE DS    0H
         LA    RUCBPTR,UCBFRM          GET UNIT                @ZA07404
         LA    RCAW,XREWCCW            REWIND                  @ZA07404
         BAL   RLINK1,STARTIO          *                       @ZA07404
         LA    GR7,UCBFRM              ADDRESS OF FROM DEVICE  @ZA07404
         BAL   LINK15,UNITADDR         CONVERT INTERFACE ADDRESS TO BCD
         MVC   GETTAPE+31(3),UNITBUF+1 PUT DEVICE ADDRESS IN MESSAGE.
         LA    GR2,GETTAPE             GET ADDRESS OF GETTAPE MESSAGE.
         LA    GR1,80                  MESSAGE LENGTH.
         BAL   LINK15,OPPRNT    GO TO PRINT MESSAGE//WAIT ROUT @ZA07404
         LA    RLINK2,FRMTAPE1         SET RETURN ADDR         @ZA07404
         B     PREWAITA                WAIT                    @ZA07404
         EJECT
*       **************************************************
*       *  ROUTINES BELOW ARE COMMON TO ALL I/O DEVICES  *
*       **************************************************
               SPACE 2
*    PRINT ERROR MESSAGE AND TERMINATE ROUTINE.
         SPACE 1
ERROR0F  MVI   115,X'0F'                INDICATE I/O CHANNEL FAILURE
         B     SEREPEND                 GO TO ERROR END TERMINATE.
         SPACE 1
ERROROUT MVI   115,X'1F'                INDICATE IO DEVICE FAILURE
         SPACE 1
SEREPEND MVC   58(2),2(UCBREG)          PUT CHANNEL AND UNIT IN I/O PSW
         MVC   SEREPSAV(28),48         SAVE OLD MC,I/O PSW,CSW, CAW
         MVC   24(6),24(UCBREG)         SAVE SENSE BYTES FOR SEREP
         SPACE 1
         BAL   LINK9,IOPRNT            LINK TO PRINT MESSAGE ROUTINE
         MVC   PRWD(36),ENDMESS        ADDRESS OF I/O ERROR END MESSAGE
         LA    GR1,36                  LENGTH OF MESSAGE IN BYTES.
         BAL   LINK9,PRNT              PRINT I/O ERROR TERMINATE.
         MVI   LPSWTCH,X'00'           CLEAR LOOP TRAP         @ZA13754
         SPACE 1
         MVC   48(28),SEREPSAV          RESTORE OLD MC,I/O PSW//CSW/CAW
         LM    0,15,ERRSAV1             RESTORE REGISTERS FOR SEREP
         B     SYO3800                 CK SYSOUT DEV.          @X50ADTT
      SPACE 1
ENDMESS  DC    C'IBC249W  I/O ERROR.  JOB TERMINATED.'
         SPACE 1
*    START I/O ERROR ROUTINE
               SPACE 1
SIOERR   LA    ERREG1,EMES11           INDEX TO MESSAGE TABLE
         CLI   LPSWTCH,X'FF'           HERE BEFORE?            @ZA13754
         BNE   NOLOOP                  NO, CONTINUE            @ZA13754
         LPSW  COWAIT                  YES, TERMINATE          @ZA13754
NOLOOP   MVI   LPSWTCH,X'FF'           SET TRAP FOR LOOP       @ZA13754
         MVI   115,X'3F'               INDICATE DEVICE NOT OPERATIONAL
         MVI   UCBSYO,X'00'            FORCE MESSAGE TO CONSOLE.
         B     SEREPEND                GO TO ERROR END TERMINATE
               SPACE 1
*   CHANNEL CONTROL CHECK ROUTINE
               SPACE 1
CHANERR  LA    ERREG1,EMES20           INDEX TO MESSAGE TABLE
         B     ERROR0F                 GO TO SEREP INTERFACE.  SET X'0F
               SPACE 1
*   INTERFACE CONTROL CHECK ROUTINE
               SPACE 1
INFCERR  LA    ERREG1,EMES21           INDEX TO MESSAGE TABLE
         B     ERROR0F                 GO TO SEREP INTERFACE.  SET X'0F
               SPACE 1
*   CHANNEL DATA CHECK ROUTINE
               SPACE 1
CHDATA   LA    ERREG1,EMES22           INDEX TO MESSAGE TABLE
         B     ERROR0F                 GO TO SEREP INTERFACE.  SET X'0F
               SPACE 1
*   PROGRAM CHECK ROUTINE
               SPACE 1
PROCHK   LA    ERREG1,EMES24           INDEX TO MESSAGE TABLE
         B     ERROR0F                 GO TO SEREP INTERFACE.  SET X'0F
         EJECT
*   PROTECTION CHECK ROUTINE
               SPACE 1
PTNCHK   LA    ERREG1,EMES25           INDEX TO MESSAGE TABLE
         B     ERROR0F                 GO TO SEREP INTERFACE.  SET X'0F
               SPACE 1
*   UNIT EXCEPTION ROUTINE
               SPACE 1
UNITCEPT CL    UCBREG,INPUTR       WAS THE UNIT EXCEPTION ON SYSIN 9930
         BE    ABSEQPRT            IF SO, GO PRNT CARD SEQ ERR MSG 9930
         LA    ERREG1,EMES26       INDEX TO MESSAGE TABLE          9930
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*   INCORRECT LENGTH ERROR ROUTINE.
               SPACE 1
WLRERR   LA    ERREG1,EMES27           INDEX TO MESSAGE TABLE
         TM    CKVOLSW,X'02'            HEADER REC READ WLR      A65560
         BNO   ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
PIDTAPE  LA    RCAW,FSFILE             CCW TO FOR. SPACE FILE    A65560
SPACEFL  BAL   RLINK1,STARTIO          EXECUTE CCW               A65560
         B     RTRNTM                  FORWARD SPACE FILE        A65560
*   CHAINING CHECK ROUTINE
               SPACE 1
CHAINCHK CLI   ZERR(UCBREG),T1402       IS DEVICE A 1402         S20201
         BE    NEVER                    SHOULD NOT OCCUR         S20201
         LA    ERREG1,EMES28            INDEX TO MSG TABLE       S20201
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*    EQUIPMENT CHECK ROUTINE
               SPACE 1
EQUIPCHK LA    ERREG1,EMES04           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*    DATA CHECK ROUTINE
               SPACE 1
DATACHK  LA    ERREG1,EMES05           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*   COMMAND REJECT ROUTINE
               SPACE 1
COMREJ   LA    ERREG1,EMES01           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*   WRITE INHIBIT ROUTINE                                         M4698
         SPACE 1
INHIBIT  LA    ERREG1,EMES43            MESSAGE INDEX             M4698
         B     ERROROUT                 PRINT MSG/ TERMINATE      M4698
         SPACE 1
               SPACE 1
*   END OF TEST ROUTINE
               SPACE 1
ENDTEST  LA    ERREG1,EMES18           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*   SHOULD NOT OCCUR ROUTINE
               SPACE 1
NEVER    LA    ERREG1,EMES19           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*    INTERVENTION REQUIRED ROUTINE
               SPACE 1
INTVREQ  LA    ERREG1,EMES02           INDEX TO MESSAGE TABLE
         BAL   LINK9,IOPRNT            LINK TO PRINT MESSAGE
         BR    LINK15                  WRITE MESSAGE EXECUTED//RETURN.
         SPACE 1
* SEEKED BALLAST CELL
         SPACE 1
BALLAST  LA    GR2,GETCELL             SEEKED BALLAST MESSAGE.
         LA    GR1,71                  MESSAGE LENGTH.
         B     TYPEWAIT                PRINT MESSAGE//AWAIT INTERRUPT.
         EJECT
*        ***************************************************
*        * ECF FOR 2305 AND 3330 DEVICES                   *
*        ***************************************************
ECFTEST  STM   0,15,REGSAVE             SAVE REGISTERS           S20201
         L     7,NEWBASE                GET NEW BASE ADDR        S20201
         USING ECFCODE,7                SET NEW BASE             S20201
         BAL   GR8,ECFCODE                                       S20201
ECFRTN   EQU   *                        CONNECTOR                 M3390
         DROP  7                                                 S20201
         B     INDEXRTN                 RETURN TO PROCESS        S20201
REGSAVE  DC    16F'0'                   REGISTER SAVE AREA       S20201
NEWBASE  DC    A(ECFCODE)               NEW BASE REG VALUE       S20201
         EJECT
*    BUS OUT CHECK ROUTINE
               SPACE 1
BUSOUT   LA    ERREG1,EMES03           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*    OVERRUN CHECK ROUTINE
               SPACE 1
OVRRUN   LA    ERREG1,EMES06           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*    UNUSUAL COMMAND SEQUENCE ROUTINE
               SPACE 1
SEQERR   LA    ERREG1,EMES29           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
               SPACE 1
*    DATA CONVERTER CHECK ROUTINE
               SPACE 1
CONVTERR LA    ERREG1,EMES08           INDEX TO MESSAGE TABLE
         B     ERROROUT                PRINT ERROR MESSAGE///TERMINATE.
         SPACE 1
*    CARRIAGE SKIP TO ONE ROUTINE
         SPACE 1
SKIPTO1  LA    GR3,CARSKIP            ADDRESS OF CARRIAGE SKIP TO 1 CCW
         MVI   ERRETRY,X'FF'           SET ERROR RETRY SWITCH ON
         BAL   LINK9,STARTIO           PERFORM SKIP TO ONE CCW.
         B     INDEXRTN                CCW EXECUTED//RETURN//
         SPACE 1
         DS    0D
CARSKIP  DC    X'8B'                   SKIP TO 1 COMMAND CODE
         DC    X'00000020000001'       SLI BIT ON//COUNT OF 1//
         SPACE 2
         EJECT
*      *****************************************************
*      * COMMON COMPUTER INTERRUPT ROUTINES ON THIS PAGE.  *
*      *****************************************************
         SPACE 2
*    EXTERNAL INTERRUPT SUPERVISOR.
         SPACE 1
EXTINT   TM    27,X'40'                 WAS THIS A CONSOLE INTERRUPT
         BC    8,EXTINT1               NO
         MVI   REQSW,X'FF'             TURN ON REQUEST SWITCH    A49361
         LPSW  CONTINUE                YES - GO TO PRESET LOCATION
         SPACE 1
         SPACE 2
*    PROGRAM INTERRUPT SUPERVISOR.
         SPACE 1
PGMINT   STM   0,15,REGSV2             SAVE REGISTERS
         L     BASE10,SYSBAS           INSURE BASE REGISTER 10     5274
         MVC   SVPSW(8),40             SAVE OLD PROGRAM INTERRUPT PSW.
         MVC   PRWD(27),PGIERR         LOAD ERROR MESSAGE IN PRINT FLD.
         MVC   PRWD+27(20),QUITJOB     LOAD JOB TERMINATED MESSAGE
         LA    GR1,47                  MESSAGE LENGTH IN BYTES.
         BAL   LINK9,PRNT              GO TO PRINT ROUTINE.
         B     SYO3800                 CK SYSOUT DEV.          @X50ADTT
         SPACE 1
PGIERR   DC    C'IBC152W  PROGRAM INTERRUPT.'
         SPACE 2
*    SVC CALL INTERRUPT SUPERVISOR.
         SPACE 1
SVCINT   STM   0,15,REGSV2             SAVE REGISTERS
         MVC   SVPSW(8),32             SAVE OLD SVC INTERRUPT PSW.
         MVC   PRWD(23),ERRSVC         LOAD ERROR MESSAGE IN PRINT FLD.
         MVC   PRWD+23(20),QUITJOB     LOAD JOB TERMINATED MESSAGE.
         LA    GR1,43                  MESSAGE LENGHT IN BYTES.
         BAL   LINK9,PRNT              GO TO PRINT ROUTINE.
         B     SYO3800                 CK SYSOUT DEV.          @X50ADTT
         SPACE 1
ERRSVC   DC    C'IBC104W  SVC INTERRUPT.'
QUITJOB  DC    C'   JOB TERMINATED.  '
LPSWTCH  DC    X'00'                   LOOP TRAP SWITCH        @ZA13754
         EJECT
*   REGISTER ASSIGNMENT
         SPACE 2
RWRKREG3 EQU   0
         SPACE 1
RUCBPTR  EQU   2
         SPACE 1
RWRKREG8 EQU   RUCBPTR
         SPACE 1
RCAW     EQU   3
         SPACE 1
RWRKREG7 EQU   RCAW
        SPACE 1
RTRKADR1 EQU   4
         SPACE 1
RLINK2   EQU   5
         SPACE 1
RWRKREG1 EQU   6
         SPACE 1
RWRKREG4 EQU   7
         SPACE 1
RWRKREG5 EQU   8
         SPACE 1
RLINK1   EQU   9
         SPACE 1
RWRKREG6 EQU   RLINK1
         SPACE 1
REIGHT   EQU   10
         SPACE 1
RSTOPLST EQU   11
         SPACE 1
RWTRDCCW EQU   1
         SPACE 1
RBASE2   EQU   13
         SPACE 1
RWRKREG2 EQU   14
         SPACE 1
RBEGTRK  EQU   15
         SPACE 1
RTRKADR  EQU   RBEGTRK
         EJECT
ORG0500X EQU   *
         ORG   ENTER+8192
ORG0600  EQU   *
*                ****************
*                * HOUSEKEEPING *
*                ****************
         SPACE 1
*  1) MOVE THE PROPER "CONTROL BLOCKS" TO THE "TO"
*     AND "FROM" CONTROL AREAS.
         SPACE 1
*  2) SET UP ADDRESS OF THE PROPER WRITE ROUTINE.
*     (RLINK2 ROUTINE)
         SPACE 1
START1A  L     RBASE2,BUFRBAS           ESTABLISH BUFFER BASE REGISTER
         SR    RWRKREG1,RWRKREG1
         IC    RWRKREG1,UCBFRM            GET CODE FOR DEVICE FROM AND
         CLI   UCBFRM,T3340             SENSE RTN FOR 3340      XL03130
         BNE   NOSENSE                  NO - BRANCH PAST RTN    XL03130
         LA    UCBREG,UCBFRM            POINTER TO DASD UCB     XL03130
SENDEV   LA    CCWREG,SENCCW            POINTER TO CCW LIST     XL03130
         BAL   LINK9,STARTIO            STARTIO - SENSE DEVTYPE XL03130
         TM    IOSESV+L2,L1             36MB DATA MODULE        XL03130
         BO    NOSENSE                  YES - TABLE POSITION A  XL03130
         TM    IOSESV+L2,L2             72MB DATA MODULE        XL03130
         BNO   WNGDEV                   ERROR - WRONG DEVICE    XL03130
         LA    RWRKREG1,L2(RWRKREG1)   72MB MOD IN TABPOS C    @Z30RSAG
NOSENSE  SLL   RWRKREG1,L4              MULT BY 16 FOR TAB POS. XL03130
         LA    RWRKREG1,DEVCTRL(RWRKREG1)  DATA CONCERNING DEVICE TO
         MVC   TODCTRL(L16),ZERR(RWRKREG1) DEVICE CONTROL AREA  XL03130
         CLI   DOSBIT,L1                FIRST PASS              XL03130
         BE    SETUP4B                  NO - EXIT               XL03130
         SPACE 1
         MVI   DOSBIT,L1                START SECOND PASS       XL03130
         MVC   FRMDCTRL(L16),ZERR(RWRKREG1) DEVICE CONTROL AREA XL03130
         SR    RWRKREG1,RWRKREG1
         IC    RWRKREG1,UCBTO           TO DEVICE TYPE CODE     XL03130
         CLI   UCBTO,T3340              SENSE RTN FOR 3340      XL03130
         BNE   NOSENSE                  NO - BRANCH PAST RTN    XL03130
         LA    UCBREG,UCBTO             POINTER TO DASD UCB     XL03130
         B     SENDEV                   SENSE CCW ON TO DEVICE  XL03130
         SPACE 2
START1   L     RBASE2,BUFRBAS           ESTABLISH BUFFER BASE REGISTER
         CLI   UCBTO,X'00'              IS DEVICE A 2321         S20201
         BE    BINOK                    YES, BIN IS OK           S20201
         CLI   UCBFRM,X'00'             IS FROM DEVICE A 2321    S20201
         BE    BINOK                    YES, BIN IS OK           S20201
         XC    BBCCHH(2),BBCCHH         CLEAR BIN NO IN SEEK     S20201
BINOK    EQU   *                        CONNECTOR                S20201
         MVI   TAPESW,X'00'             SET TAPE SWITCH TO ZERO
         L     RBEGTRK,ENDADR          PREPARE TO BUMP ENDADR
         ST    RBEGTRK,CCHH             SET FOR CYL CHANGE ROUTINE
         BAL   RLINK1,CHANGCYL          INCRIMENT TRACK ADDRESS
         SPACE 1
BEG1     ST    RBEGTRK,ENDADR
         L     RBEGTRK,BGNADR           GET BEGINNING ADDRESS
         EJECT
*            **************************
*            * HOUSEKEEPING CONTINUED *
*            **************************
*                 * RLINK2 CODE *
*                 ***************
         SPACE 2
*  "DASD CONTROL" IS USED TO LOAD THE ADDRESS OF THE
* BEGINNING OF THE ROUTINES INTO "RLINK2" REGISTER.
*  (HENCE, THE NAME "RLINK2")
         SPACE 1
*     IN CASE OF DUMP, THE CKD FIELDS ARE READ INTO THE
*  BUFFER THEN THE PROPER "RLINK2" LOOP ROUTINE IS USED TO
*  WRITE THE DATA (PACKED CKD FIELDS) AND CONTROL
*  INFORMATION ONTO THE TRANSIENT DEVICE
         SPACE 1
*     PRIOR TO ENTERING "MAIN" RLINK2 ROUTINE,
*  PRELIMINARY CHECKING IS DONE.
         SPACE 2
NOTDRUM  LM    RWRKREG4,RWRKREG5,BGNADR GET BEGINNING AND END+1 ADDRESS
         STM   RWRKREG4,RWRKREG5,DTABUFF PREPARE TO WRITE IT
         ST    RTRKADR,DTABUFF+8        SAVE RELATIVE BEGINNING ADDRESS
         MVC   DTABUFF+12(8),PRTKCODE   SET CODE TO PROTECT READING
*                                        FROM SCRATCH TAPE IN RESTORE
         MVC   DTABUFF+20(1),FULLDPSW  SAVE "FULL DUMP" SWITCH
         MVC   DTABUFF+21(1),UCBFRM     TELL DEVICE TYPE
         CLI   UCBFRM,T3340             3340 DEVICE TYPE ?      XL03130
         BNE   NON3340                  NO                      XL03130
         CLI   UPPRLMT1,L1              36 MB DATA MODULE SIZE  XL03130
         BL    WNGDEV                   ERROR - WRONG DEVICE    XL03130
         BH    MB72                     LARGER THAN 36 MB       XL03130
         MVI   DTABUFF+L22,L1           36 MB DATA MODULE FLAG  XL03130
         B     NON3340                  EXIT RTN                XL03130
MB72     MVI   DTABUFF+L22,L2           72 MB DATA MODULE FLAG  XL03130
         SPACE 1
NON3340  CLC   UCBFRM(1),UCBTO         DUMP TO LIKE DASD DEVICE XL03130
         BNE   CHKDMP                   NO,CHECK IF DUMP          M5581
         TM    SEQSW,L4                 IS THIS A DUMP REQUEST    M5581
         BZ    MOUNTAPE                 NO,TERMINATE WITH ERROR   M5581
         CLI   UCBFRM,T3340             3340 DEVICE TYPE        XL03130
         BNE   TOFM2311                 NO - CONTINUE           XL03130
         CLC   UPPRLMT1(L4),CYLINCRT+L4 NO. TRACKS/PACK         XL03130
         BE    TOFM2311                 DUMP TO LIKE PACK       XL03130
         BH    WNGDEV                   CAN'T DUMP SMALLER PACK XL03130
         MVI   DOSBIT,ON                DUMP TO LARGER PACK     XL03130
         B     TOFM2311                 YES, PROCEED            XL03130
CHKDMP   TM    SEQSW,L4                 IS THIS A DUMP REQUEST  XL03130
         BZ    SETRESTR                   NO                    XL03130
         SPACE 1
         CLI   XSTARTD+L3,ZERR          TABLE INDEX = ZERO      XL03130
         BE    TOTAPE                   YES - CONTINUE          XL03130
         L     RLINK2,XSTARTD           DEVICE INDEX FOR DUMP   XL03130
         B     SETDEV                   DEVICE DISPLACEMENT     XL03130
         SPACE 1
SETRESTR CLI   XSTARTR+L3,ZERR          TABLE INDEX = ZERO      XL03130
         BE    FRMTAPE                  YES - CONTINUE          XL03130
         L     RLINK2,XSTARTR           DEVICE INDEX RESTORE    XL03130
SETDEV   LA    RLINK2,TOTLTRK(RLINK2)   ADDR OF TABLE + DISP    XL03130
         MVC   TOTLTRK(L12),ZERR(RLINK2) MOVE DEVICE TABLE      XL03130
         TM    SEQSW,L4                 IS THIS A DUMP REQUEST  XL03130
         BO    TO2311                   YES - DUMP PROCEDURE    XL03130
         B     FRM2311                  RESTORE  PROCEDURE      XL03130
         EJECT
*           ***************************
*            *  HOUSEKEEPING CONTINUED *
*           ***************************
*          * PRELIMINARY RLINK2 *
*          **********************
*                * DUMP *
*                ********
         SPACE 1
*   ROUTINES USED TO PERFORM THE FOLLOWING.
         SPACE 1
*      1)  BE SURE AT LOAD POINT IF TAPE INVOLVED
*      IN DUMP
         SPACE 1
*      2)  BEGINNING, END, AND RELATIVE BEGINNING
*      ADDRESSES OF DASD ARE WRITTEN ON TRANSIENT DEVICE.
         SPACE 2
TOTAPE   MVI   WRTTPDTA+7,X'18'        HEADER REC LENGTH = 24    A53319
         XC    80(4),80                CLEAR THE TIMER.
         MVI   TAPESW,X'01'            SET TAPE SWITCH ON
         LA    RUCBPTR,UCBTO           GET POINTER TO  UNIT CONTROL
         LA    RCAW,XREWCCW            BE SURE TAPE IS AT LOAD POINT
         BAL   RLINK1,STARTIO
         SPACE 1
         LA    RWRKREG4,VTAPESET       RETURN FROM ROUTINE
SETMODET LA    GR3,SENSETAP            SENSE COMMAND ADDRESS
         BAL   RLINK1,STARTIO          START I/O                   3479
         CLI   MODESW,X'0F'            HAS USER DETERMINED MODE
         BE    SETUSRMD                YES- ESTABLISH HIS MODE
         LA    GR3,MODE4793            LOAD WITH '93' FOR 7 TRACK
SET7     MVC   XRDVOLID(1),0(GR3)      SET MODE FOR 7 TRACK TAPE   3479
         XI    XRDVOLID,X'10'          SET MODE FOR EVEN           3479
         OI    XRDVOLID,X'28'               PARITY,TRANSLATE ON    3479
         TM    TAPEBUFS+1,X'10'        TEST IF 7 TRACK TAPE        3479
         BC    1,SET47                 MODE SET FOR 7 TRACK
         LA    GR3,MODE49C3            LOAD WITH 'C3' FOR 9 TRACK 1600
         TM    TAPEBUFS+6,X'18'        MOD 4,6 OR 8 - 6250 BPI @ZA13799
         BO    SET6250                 YES, SET FOR 6250 BPI   @ZA13799
         TM    TAPEBUFS+6,X'10'        MOD 3,5 OR 7 - 800 BPI  @ZA13799
         BNO   SET9                    NO, LEAVE SET AT 1600   @ZA13799
         LA    GR3,MODE49CB            YES,SET 800 BPI 9 TRK   @ZA13799
         B     SET9                    CONTINUE                @ZA13799
SET6250  LA    GR3,MODE49D3            SET 'D3' FOR 9 TRK 6250 @ZA13799
SET9     MVC   XRDVOLID(1),0(GR3)      SET MODE FOR 9 TRACK TAPE   3479
SET47    MVC   SETMODE1(1),0(GR3)      SET MODE 7 OR 9 TRACK 800/1600
         MVC   SETMODE2(1),0(GR3)      SET MODE 7 OR 9 TRACK 800/1600
         MVC   SETMODE3(1),0(GR3)      SET MODE 7 OR 9 TRACK 800/1600
         MVC   SETMODE4(1),0(GR3)      SET MODE 7 OR 9 TRACK 800/1600
         MVC   SETMODE5(1),0(GR3)      SET MODE 7 OR 9 TRACK 800/1600
         MVC   XRDTRLR(1),0(GR3)       SETMODE 7 OR 9 TRACK        3479
         MVC   WTMCCW(1),0(GR3)                                    2324
         BR    RWRKREG4                RETURN TO VTAPESET OR FRMTAPEA
SETUSRMD LA    GR3,MODESET+1           USER MODE
         TM    TAPEBUFS+1,X'10'        TEST IF 7 TRACK             3479
         BC    1,SET7                  YES, SET MODE FOR 7 TRACK   3479
         BC    15,SET9                 NO, SET MODE FOR 9 TRACK    3479
VTAPESET MVI   CKVOLSW,X'21'           SET DUMP EOF AND          A27583
*                                      INITIAL LABEL SWITCH      A27583
         BALR  RWRKREG4,0              RETURN IF DATA CHECK      A27583
         LA    RCAW,XRDVOLID            GET INITIAL TAPE LABEL
         BAL   RLINK1,STARTIO
         CLC   SAVEVTOC+49(20),DASDIDR  IS THIS LOADER CARD FOR DASDI
         BE    RDLABELS                 YES, TAPE MARK WILL FOLLOW
         SPACE 1
         CLC   VOL1(3),SAVEVTOC         IS THIS RECORD A LABEL
         BNE   TOTAPE1A                   NO
         SPACE 1
         LA    RSTOPLST,VOLLABEL+36          GET VOLUME LABEL
         LA    RWTRDCCW,VOLLABEL               TABLE
CKLABEL  CLC   SAVEVTOC+4(6),0(RWTRDCCW)     DOES LABEL ON DISK AGREE
*                                              WITH LABEL IN TABLE
         BE    RDLABELS                      YES
         LA    RWTRDCCW,6(RWTRDCCW)          NO, GET NEXT LABEL FROM
         CLR   RWTRDCCW,RSTOPLST                LABEL            A23097
         BNH   CKLABEL                            TABLE
         B     PRNTMESS                      LABEL ISN'T IN LABEL TABLE
         SPACE 1
RDLABELS MVI   CKVOLSW,X'41'           STANDARD LBL SCRATCH OR LDR 2324
         BAL   RLINK1,STARTIO          LOOP THROUGH TO BYPASS REST 2324
         B     RDLABELS                  OF LABELS
         SPACE 1
TOTAPE1A LA    RCAW,XREWCCW             REWIND TAPE
         BAL   RLINK1,STARTIO            AGAIN
         SPACE 1
TOTAPE1B MVI   CKVOLSW,X'00'            TURN OFF EOF SWITCH
         MVI   SAVEVTOC,X'00'          CLEAR
         MVC   SAVEVTOC+1(96),SAVEVTOC      VTOC AREA
         B     BULDCCW1                GO WRITE HEADER RECORD
         SPACE 1
TO2311   BAL   RLINK2,CKVOLLBL          GO CHECK VOLUME LABEL
         SPACE 1
         MVC   WTRDDATA(8),LIMITCCW
         LA    RTRKADR1,1              SET UP FOR TRACK1; CYLINDER 0
         ST    RTRKADR1,CCHH             GET TRACK ADDRESS
         LA    RLINK2,DMP2302            CHANGE RLINK2 TO LOOP ADDRESS
         LA    RTRKADR1,1(RTRKADR1)      BUMP TRACK ADDRESS
         MVI   NON2311,X'01'           TURN ON UNLIKE DASD SWITCH
         B     WRTDISK                 WRITE BEGINNING AND END ADDRESS
         SPACE 1
TOFM2311 BAL   RLINK2,CKVOLLBL          GO CHECK VOLUME LABEL
         SPACE 1
         MVC   ADDRSCH1+9(3),A1        CHANGE TIC ADDRESS IN HAR0CCWS
         MVC   ADDRSCH2+9(3),A2        CHANGE TIC ADDRESS IN HAR0CCWS
         LA    RLINK2,WRTDISK           CHANGE RLINK2 TO LOOP ADDRESS
         B     BUILDCCW                START LOOP
         SPACE 2
*           ***************************
*           *  HOUSEKEEPING CONTINUED *
*           ***************************
*          PRELIMINARY RLINK2 *
*          **********************
*               * RESTORE *
*               ***********
         SPACE 2
*   ROUTINES USED TO PERFORM THE FOLLOWING
         SPACE 1
*      1)  CHECK THE VOLUME LABEL OF THE DEVICE "RESTORING"
*      TO, TO BE SURE IT IS THE ONE ASKED FOR.
         SPACE 1
*      2)  GET THE BEGINNING, END, AND RELATIVE BEGINNING ADDRESSES.
         SPACE 2
FRMTAPE  BAL   RLINK2,CKVOLLBL         GO CHECK VOLUME LABEL
         SPACE 1
FRMTAPE1 LA    RLINK2,RSTRTAPE          GET NORMAL LOOP ADDRESS
         XC    80(4),80                CLEAR THE TIMER.
         LA    RUCBPTR,UCBFRM          GET POINTER TO UNIT CONTROL
         LA    RCAW,XREWCCW            BE SURE TAPE IS AT LOAD POINT
         BAL   RLINK1,STARTIO
         SPACE 1
FRMTAPEA LA    RUCBPTR,UCBFRM          GET POINTER TO CONTROL UNIT
         BAL   RWRKREG4,SETMODET       SET TAPE MODE
         MVI   CKVOLSW,X'22'           SET RESTORE EOF AND       A27583
*                                      INITIAL LABEL SWITCH      A27583
         BALR  RWRKREG4,0              RETURN IF DATA CHECK      A27583
         LA    RCAW,XRDTRLR            READ LABEL (24 BYTES)     A65560
         BAL   RLINK1,STARTIO          START READ IO
         SPACE 1
         MVI   CKVOLSW,X'00'           EOF SWITCH ONLY           A27583
         B     RTR                     ALREADY READ HEADER REC   A65560
         SPACE 1
RTRNTM   MVI   CKVOLSW,X'00'            TURN OFF EOF SWITCH
         LA    RCAW,RDTPDTA-8          CCW FOR HEADER RECORD       3479
         MVC   RDTPDTA+2(2),SETMODE4+2 RESET ADDRESS               3479
         BAL   RLINK1,STARTIO           READ BEGINNING AND END ADDRESS
         SPACE 1
RTR      MVI   RDTPDTA+6,X'FF'          RESTORE (MAX) READ COUNT
         SPACE 1
         CLC   DTABUFF+12(8),PRTKCOD1   RESTORE TAPE OF LEVEL3(2311).
         BE    TAPEOK                   YES DO NOT CHECK DEVICE CODE.
         CLC   DTABUFF+12(8),PRTKCODE   IS THIS A RESTORE TAPE.
         BNE   WRNGTAPE                 NO--GO GIVE MESSAGE AND WAIT
         CLI   UCBTO,T333C              RESTORE TO 3330-C PACK  XL03145
         BNE   ALASKA                   NO - CONTINUE           XL03145
         CLI   DTABUFF+L21,T3330        RESTORE TAPE = 3330     XL03145
         BE    UPNORTH                  YES - SET DOS BIT VTOC  XL03145
ALASKA   CLC   DTABUFF+21(1),UCBTO      RESTORE TYPE SAME AS DUMP TYPE.
         BNE   WNGDEV                   NO--GO GIVE ERROR MESSAGE.
         CLI   UCBTO,T3340              3340 DEVICE TYPE        XL03130
         BNE   TAPEOK                   NO - CONTINUE           XL03130
         MVC   GR9(L1),CYLINCRT+L4      TO DEVICE SIZE (DISK)   XL03130
         CLC   GR9(L1),DTABUFF+L22      DISK .VS. TAPE SIZE     XL03130
         BL    WNGDEV                   CAN'T RESTORE SMALLER   XL03130
         BE    TAPEOK                   RESTORE TO LIKE PACK    XL03130
UPNORTH  MVI   DOSBIT,ON                RESTORE TO LARGER PACK  XL03130
TAPEOK   MVC   BGNADR(8),DTABUFF        STORE BEGIN AND END ADDRESSES.
         L     RTRKADR,DTABUFF+8        GET RELATIVE BEGINNING ADDRESS
         MVC   FULLDPSW(1),DTABUFF+20  RECOVER SW TO TELL IF FULL RSTR
         CLI   DOSCHECK,ON             2ND DEVICE CHECK RTN     XL03130
         MVI   DOSCHECK,ZERR           TURN OFF SWITCH          XL03130
         BCR   8,RLINK2                 START LOOP              XL03130
         CLI   UCBTO+2,X'00'           IS TO DEVICE ON MULTIPLEXOR 5981
         BE    ONLY32K                 YES-DO NOT BUFFER.          5981
         CLI   UCBFRM+2,X'00'          IS FROM DEVICE ON MULTIPLEX 5981
         BE    ONLY32K                 YES-DO NOT BUFFER.          5981
         L     GR3,CON64KK             PICK UP 64K CONSTANT.
         MVC   108(4),ONLY32KA         SET UP NEW PROGRAM PSW.
         ST    GR3,0(GR3,0)            TEST FOR PROGRAM INTERRUPT.
         MVI   SW64K,X'FF'             NO INTERRUPT//AT LEAST 64K.
         LM    GR2,GR3,DTALENG1        NEW ADDRESS FOR TAPE CCWS.
         ST    GR2,RDTPCCW             MODIFY FOR CCW LIST READ IN.
         ST    GR3,RDTPDTA             MODIFY FOR DATA READ IN.
ONLY32K  MVC   108(4),REGPSW           RESET NEW PROGRAM PSW.
         BR    RLINK2                  BRANCH TO PROPER ROUTINE.
         EJECT
WRNGTAPE EQU   *                                               @ZA06537
         LA    RLINK1,FRMTAPEA          PREPARE
         LA    RCAW,XREWCCW             TO PRINT
WRNGTAP1 STM   0,15,ERRSAV1             MESSAGE
         B     MOUNTAPE                 GO TO PRINT TAPE MESSAGE
WNGDEV   EQU   *                                               @ZA06537
         L     ERREG1,AMESS3            GET ADDR OF MSG 3      @ZA06537
         MVC   PRWD(LMESS3),DISP0(ERREG1) MOVE MSG TO PRT AREA @ZA06537
         LA    ERREG1,LMESS3            GET LENGTH OF MSG      @ZA06537
         BAL   LINK9,PRNT
         B     WAITZ
         SPACE 2
FRM2311  BAL   RLINK2,CKVOLLBL          GO CHECK VOLUME LABEL
         SPACE 1
FRM2311A MVC   WTRDDATA+8(8),LMITCCW1   PREPARE TO READ
         LA    RTRKADR1,1               SET UP FOR TRACK1, CYLINDER 0
         ST    RTRKADR1,CCHH              BEGINNING AND END TRACK ADR
         LA    RLINK2,RSTR2302          GET NORMAL LOOP ADDRESS
         LA    RTRKADR1,1(RTRKADR1)    BUMP TRACK ADDRESS
         LA    RUCBPTR,UCBFRM           GET POINTER TO UNIT CONTROL
         LA    RCAW,SEEKCCW             GET CCW ADDRESS
         MVI   TAPESW,X'02'            SET SWITCH TO TELL ALT1 IS RSTR
         BAL   RLINK1,STARTIO
         SPACE 1
         MVI   DOSCHECK,ON              FLAG CHECK              XL03130
        CLC   DTABUFF+12(8),PRTKCOD1   RESTORE TAPE OF LEVEL3(2311).
         BE    TAPEOK                   YES--DO NOT CHECK DEVICE CODE.
         CLC   DTABUFF+12(8),PRTKCODE   THIS A RESTORE TAPE.
         BNE   WRNGTAP1                 NO--GIVE MEGGASE//TERMINATE
         B     ALASKA                  CHECK DEVICE
         EJECT
*              **********************
*              * CHECK VOLUME LABEL *
*              **********************
         SPACE 1
*      1) CHECKS VOLUME LABEL ON ALL TODEVICES
*      EXCEPT TAPE
         SPACE 2
CKVOLLBL MVI   NORCDSW,X'F0'           TURN ON NO RECORD FOUND SWITCH
         LA    RUCBPTR,UCBTO            PREPARE TO READ
         XC    CCHHR(4),CCHHR
         MVI   CCHHR+4,X'03'
         MVC   CCHH(5),CCHHR               VOLUME ID
RETRY    LA    RCAW,SEARCHID           CCW LIST FOR VOLUME LABEL.
         MVI   UCBTO+24,X'00'          CLEAR FIRST SENSE BYTE.
         BAL   RLINK1,STARTIO           GET VOLUME LABEL
         TM    UCBTO+24,X'02'          IS VOLUME LABEL ON ALTERNATE.
         BC    1,YESALT                YES--SET UP FOR ALTERNATE.
         MVI   NORCDSW,X'00'           RESET NO RECORD SWITCH
         CLC   SAVEVTOC(4),VOLABID     IS THIS A SYSTEM VOLUME LABEL.
         BC    8,VOLYES                YES-COMPARE THE SERIAL NUMBERS.
      SPACE 1
         MVI   NORCDSW,X'0A'           NO--SET UP TO PRINT INVALID MSG.
         B     PRNTMESS                PRINT MESSAGE ABOUT VOLI/D.
YESALT   LA    RCAW,SEEKALT            READ HA / R0 OF BAD TRACK.
         BAL   RLINK1,STARTIO          PERFORM THE IO.
         MVC   CCHH(4),ALTBUFF+5       CCHH OF ALTERNATE.
         MVC   CCHHZERO(4),ALTBUFF+5   SAVE THIS ALTERNATE TRACK.
         B     RETRY                   READ LABEL FROM ALTERNATE.
      SPACE 1
VOLYES   LA    RSTOPLST,VOLLABEL+36      SET UP FOR
         LA    RWTRDCCW,VOLLABEL            MULTIPLE LABELS (CNTRL ST)
RECHKLAB CLC   0(6,RWTRDCCW),USEDLABL  HAS THE LABEL BEEN USED
         BE    NEWLABEL               YES, GET ANOTHER ONE
         CLC   SAVEVTOC+4(6),0(RWTRDCCW)  DO LABELS AGREE
         BE    LABLAGRE                YES, GO ON
         SPACE 1
NEWLABEL LA    RWTRDCCW,6(RWTRDCCW)     GET READY TO TRY AGAIN
         CLR   RWTRDCCW,RSTOPLST        USED ALL CNTRL ST LABELS
         BNH   RECHKLAB             NO, TRY AGAIN
         B     PRNTMESS             YES,LABEL NOT AGREE WITH CNTRL ST
         SPACE 1
LABLAGRE MVC   0(6,RWTRDCCW),USEDLABL  UPDATE CONTROL LABEL ADDRESS
         MVC   CCHHR(5),SAVEVTOC+11    SET UP SEARCH ADDRESS.
         MVC   CCHH(4),SAVEVTOC+11     SET UP SEEK ADDRESS.
         BAL   RLINK1,STARTIO
         MVC   ALTDATA(6),SAVEVTOC+8    SAVE  ALT TRK INFORMATION
         MVC   DEVSIZE(L2),SAVEVTOC+L18 SAVE DEVICE INFORMATION XL03145
         MVI   R,X'00'                 SET R OF CCHHR TO ZERO.
         BR    RLINK2                   RETURN
         SPACE 1
RCDRTN   MVI   NORCDSW,X'0A'           SET NO RECORD SWITCH TO INVALID.
PRNTMESS EQU   *                                               @ZA06537
         L     CSR1,AMESS7              GET ADDR OF MSG 7      @ZA06537
         MVC   PRWD(LMESS7),DISP0(CSR1) MOVE MSG TO PRINT AREA @ZA06537
         LA    CSR1,LMESS7              GET MSG LENGTH         @ZA06537
         BAL   RLINK1,PRNT               AGREE
         TM    NORCDSW,X'0A'           IS VOL I/D INVALID FORMAT.
         BC    14,SERPRINT             NO--PRINT SERIAL ERROR MSG.
         MVC   PRWD+9(16),INVALID      TELL VOLID COULD NOT BE FOUND.
         B     VPRINT1                 GO PRINT THE MESSAGE.
      SPACE 1
SERPRINT MVC   PRWD+15(6),SAVEVTOC+4   LABEL I/D.
VPRINT   MVC   PRWD+9(6),VOLIDIS       PRINT VOLUME
VPRINT1  LA    CSR1,26                 LENGTH OF MESSAGE.
         SPACE 1
         LA    RLINK1,WAITZ            AND PREPARE TO GO IS SOLID WAIT
         B     PRNT
INVALID  DC    C'VOLID IS INVALID'
VOLABID  DC    C'VOL1'                 1ST FOUR BYTES OF R-3 DATA FLD.
         EJECT
*        ****************************************
*        * SUBROUTINE USED TO MOVE DATA OR CCWS *
*        ****************************************
         SPACE 2
SETUP    LA    RWRKREG7,255            SET NO BYTES FOR EX OPCDOE
MOVEAGN  CL    RWRKREG4,TWO56          WILL THIS BE THE LAST MOVE.
         BNH   LASTTIME                YES--IT IS THE LAST MOVE.
         EX    RWRKREG7,MOVECHAR       MOVE 256 CHARACTERS.
         LA    RWRKREG5,256(RWRKREG5)  INCREMENT MOVE FROM ADDRESS.
         LA    RWRKREG6,256(RWRKREG6)  INCREMENT MOVE TO ADDRESS.
         S     RWRKREG4,TWO56          DECREMENT TOTAL COUNT.
         B     MOVEAGN                 RETURN TO CHECKPOINT.
         SPACE
LASTTIME LR    RWRKREG7,RWRKREG4       GET REMAINING NO OF BYTES.
         BCTR  RWRKREG7,0              DECREMENT FOR MVC.
         EX    RWRKREG7,MOVECHAR       MOVE THE CHARACTERS.
         BR    REG1                    RETURN
         EJECT
*           ************************
*           * BUILD READ COUNT CCW *
*           ************************
         SPACE 1
*  1) BUILD A LIST OF READ COUNT CCWS OF LENGTH
*     NECESSARY TO READ THE MAXIMUM NUMBER OF
*     RECORDS FOR THIS DEVICE.
         SPACE 2
BULDCCW1 LA    RLINK2,NONOISE2
BUILDCCW LM    RWRKREG4,RWRKREG5,DUMMYCCW  GET FILL CCW
         LA    REIGHT,8                LOAD INCREMENTING FACTOR.
         LA    RWTRDCCW,WTRDCCW            SET UP BEGINNING ADDRESS
         LR    RSTOPLST,RWTRDCCW           SET UP ENDING ADDRESS
         AH    RSTOPLST,MNCCWX8F            FOR STOPING FACTOR
         MVI   R,X'00'                 SET R OF CCHHR TO ZERO.
         SPACE 2
CREATCCW STM   RWRKREG4,RWRKREG5,0(RWTRDCCW)  STORE DUMMY CCW IN LIST
         AR    RWRKREG4,REIGHT                UPDATE ADDRESS OF NXT CCW
         SPACE 2
         BXLE  RWTRDCCW,REIGHT,CREATCCW      UPDATE CCW LIST ADDRESS
*                                             AND LOOP THROUGH IF NOT
*                                             DONE
         MVC   0(8,RWTRDCCW),NOPCCW    END CCW STRING WITH NOP @ZA01223
         MVC   WTRDDATA(8),DATAR0       SET R/W DATA TO READ
         L     BASE10,SYSBAS           RESTORE BASE REGISTER
         EJECT
*               ***************
*               * READ COUNTS *
*               ***************
         SPACE 1
*  1) SET UP TRACK ADDRESS AND OTHER INFORMATION
*     TO READ "COUNT" FIELDS FROM THE PROPER TRACK.
         SPACE 1
MODTKADA TM    TAPESW,X'01'            IS THIS DUMP TO TAPE.
         BC    1,MODTKADF              YES,GO TO READ COUNTS
         TM    R0SWITCH,X'01'          IS THIS HA R0 ONLY
         BC    8,MODTKADF              NO,GO TO READ COUNTS.
         L     RLINK2,SAVELK2          YES,RESTORE THE LINK REGISTER.
         LA    RCAW,HAR0CCW            POINT TO HA R0 CCW LIST.
         LA    RUCBPTR,UCBTO           PREPARE TO EXECUTE CCWS.
         BAL   RLINK1,STARTIO          WRITE HA-R0 ONLY RECORD.
MASK1    CLI   UCBTO+1,X'00'            IS DIRECT ACCESS FINISHED
         BC    7,MASK1                  NO - AWAIT COMPLETION
         MVI   R0SWITCH,X'00'          TURN OFF HA-R0 ONLY SWITCH.
         SPACE 1
MODTKADF ST    RTRKADR,CCHH             STORE TRACK ADDRESS
         CL    RTRKADR,ENDADR             FINISHED
         BE    EOJ100                  YES-GO WRITE DATA.
         SPACE 1
         LA    RUCBPTR,UCBFRM           PREPARE TO READ
         LA    RCAW,SEEKCCW                   COUNT
         SPACE 1
         BAL   RLINK1,CHANGCYL          INCRIMENT TRACK ADDRESS
         BAL   RLINK1,STARTIO1         READ COUNT FIELDS.
MASK2    CLI   UCBFRM+1,X'00'           IS DIRECT ACCESS FINISHED
         BC    7,MASK2                  NO - AWAIT COMPLETION
TAPETEST TM    TAPESW,X'01'            IS THIS DUMP TO TAPE
         BCR   1,RLINK2                YES--GO WRITE RECORD ON TAPE
         B     NONOISE1                NO--WAIT FOR DIRECT ACCESS
EOJ100   MVI   EOJSW,X'FF'             SET SWITCH FOR END OF JOB.
         B     TAPETEST
NONOISE2 LA    RCAW,WRTTPDTA-8         CCW LIST.
         LA    RUCBPTR,UCBTO           TO DEVICE.
         CLC   WRTTPDTA+6(2),NOISECK   IS THIS A NOISE RECORD.
         BNL   NONOISE                 NO--
         MVI   WRTTPDTA+7,X'18'        YES-INCREASE COUNT.
NONOISE  BAL   RLINK1,STARTIO1         WRITE TAPE RECORD(HDR OR DATA).
         SPACE 1
NONOISE1 CLI   UCBFRM+1,X'00'          IS DIRECT ACCESS FINISHED.
         BC    7,NONOISE1              NO--AWAIT COMPLETION.
         MVC   SEEKCCW(4),HAR0CCW      RESET SEEK ADDRESS.
TAPECOMP CLI   UCBTO+1,X'00'           IS TAPE COMPLETE.
         BC    7,TAPECOMP              NO--AWAIT COMPLETION.
         TM    EORSW,X'FF'             FF MEANS END OF REEL        5274
         MVI   EORSW,X'00'             RESET SWITCH                5274
         BO    RESET15                 DECREMENT GR15 ONE TRACK    5274
         CLI   EOJSW,X'FF'             IS THE JOB FINISHED.
         BE    EOJ1                    GO GIVE EOJ MESSAGE.
         MVC   DTABUFF(8),R0DATA
         EJECT
*             *******************
*             * BUILD READ CCWS *
*             *******************
         SPACE 1
*  1) BE SURE PREVIOUS READ COUNT WAS GOOD
         SPACE 1
*  2) GET ADDRESS OF LAST CCW "ACTUALLY" USED.
         SPACE 1
*  3) CHANGE CCW LIST TO READ COUNT KEY AND DATA.
         SPACE 1
*  4) FILL PROPER ADDRESS IN EACH CCW.
         SPACE 1
*  5) FILL PROPER COUNT FIELD IN EACH CCW.
         SPACE 1
*  6) ACCUMULATE TOTAL NUMBER OF BYTES OF DATA.
         SPACE
*  7) TURN OFF CHAIN COMMAND FLAG OF DISK CCW LIST.
         SPACE
ANALSENS TM    UCBFRM+25,X'04'
         BZ    CKALT                    NO, CHECK
         SPACE 2
CNGRDCKD LM    RWRKREG4,RWRKREG5,DMMYRCCW GET DUMMY READ CCWS
         L     RSTOPLST,UCBFRM+16       LOAD ADDR OF LAST RCNT CCW
         LA    REIGHT,8                SET UP REGISTER.
         N     RSTOPLST,MASKOPCD           EXICUTED AND MASK OFF  CCODE
         S     RSTOPLST,SIXTEENX        MODIFY TO POINT TO LAST EXICUTD
         LA    RWTRDCCW,WTRDCCW           GET ADDR OF FIRST READ CCW
         L     RWRKREG1,ADCTBUFF        BUFFER ADDRESS FOR COUNT FIELDS
CTBUFFOK LR    RWRKREG2,REIGHT          SET TO ACCUMULATE COUNTS.
         CLR   RSTOPLST,RWTRDCCW        ANY RECORDS BESIDES R0
         BNL   NEWRDCKD                YES--CONTINUE
         TM    NON2311,X'01'           IS UNLIKE DASD SWITCH ON
         BC    8,STORLINK              NO,CONTINUE
         MVC   SEEKCCW(72),HAR0CCW     SET UP HA R0 ONLY CCWS
         LA    RWRKREG1,88             SET UP COUNT FIELDS
         B     GOWRITE                 GO TO WRITE CCWS.
         SPACE
STORLINK ST    RLINK2,SAVELK2          SAVE LINK REGISTER
         MVI   R0SWITCH,X'01'          INDICATE HA-R0 ONLY.
         MVC   SEEKCCW(4),HAR0CCW      RESET SEEK ADDRESS
         BAL   RLINK2,MODTKADA         NO--READ COUNTS NEXT TRACK.
         SPACE
HAR0     MVI   R0SWITCH,X'00'          TURN OFF HA-R0 ONLY SWITCH.
         L     RLINK2,SAVELK2          RESTORE LINK REGISTER
         LA    UCBREG,UCBTO            TAPE UCB.
         LA    RCAW,SETMODE5           CCWS FOR SPECIAL LIST.
         BAL   RLINK1,STARTIO          WRITE SPECIAL CCWS ON TAPE. 5434
         LA    RCAW,24                 LENGTH OF DATA RECORD.      5434
         STH   RCAW,WRTTPDTA+6         SET COUNT IN CCW.           5434
         LA    RCAW,SETMODE2           TAPE CCW ADDRESS.           5434
         BAL   RLINK1,STARTIO          WRITE R0 DATA RECORD ON TAPE
         B     NONOISE1                GO WAIT ON DIRECT ACCESS.
         SPACE 2
NEWRDCKD IC    RWRKREG5,5(RWRKREG1)     GET THE KEY LENGTH.
         AH    RWRKREG5,6(RWRKREG1)     ADD THE DATA LENGTH.
         AR    RWRKREG5,REIGHT               ADD COUNT LENGTH
         O     RWRKREG5,MSKFLGON             SET THE FLAGS
         SPACE 1
         STM   RWRKREG4,RWRKREG5,0(RWTRDCCW) STORE CCW IN LIST
         CLC   6(2,RWRKREG1),ZERO1     IS DATA LENGTH = 0
         BC    7,ZEROFLG               NO, NOT EOF RECORD
         CLI   5(RWRKREG1),X'00'       IS KEY LENGTH = 0
         BC    7,ZEROFLG               NO,NOT EOF RECORD
         MVI   0(RWTRDCCW),X'12'       EOF REC, CHANGE OP CODE
ZEROFLG  N     RWRKREG5,MSKFLGOF       ZERO OUT THE FLAGS
         SPACE 1
         STH   RWRKREG5,SAVEVTOC        STORE TO DETERMINE IF DOUBLE WD
         TM    SAVEVTOC+1,X'07'         IS DATA ON DOUBLE WORD BOUNDARY
         BZ    AROUNDDW                   YES, DOUBLE WORD
         NI    SAVEVTOC+1,X'F8'           FORCE TO DOUBLE WORD
         LH    RWRKREG5,SAVEVTOC             PUT BACK IN REGISTER
         AR    RWRKREG5,REIGHT            NO, ADD EIGHT-AFTER FORCE
AROUNDDW AR    RWRKREG4,RWRKREG5        MODIFY CCW ADDRESS
         AR    RWRKREG2,RWRKREG5             ACCUMULATE COUNTS
         LA    RWRKREG1,8(RWRKREG1)          UPDATE COUNT BUFFER POINTR
         SR    RWRKREG5,RWRKREG5
         SPACE 1
         BXLE  RWTRDCCW,REIGHT,NEWRDCKD      UPDATE CCW ADR POINTER
*                                             RETURN IF NOT THROUGH
         MVI   4(RSTOPLST),X'20'       SET CHAIN COMMAND BIT OFF.
         EJECT
*             ********************
*             *  MOVE READ CCWS   *
*             ********************
         SPACE
*  1)  MOVE CCW LIST.
         SPACE
*  2)  IF 2301, MOVE LIST TO AREA IN HIGH CORE.
         SPACE
*  3)  START EXECUTION OF READ COUNT-KEY-DATA CCW LIST.
         SPACE
         SPACE
READCCWS LA    RWRKREG4,8(RSTOPLST)    GET END FOR FINDING COUNT.
         LA    RWRKREG5,SEEKCCW        GET BEGINNING (MOVE FROM).
         SR    RWRKREG4,RWRKREG5       DETERMINE COUNT.
         LA    RWRKREG6,WTRDCCW2       GET BEGINNING (MOVE TO).
MOVEREAD LR    RWRKREG8,RWRKREG6       SAVE BEGINNING CCW ADDRESS.
         BAL   REG1,SETUP              GO TO MOVE CCWS OR DATA
         MVC   SEEKCCW(4),HAR0CCW      SET UP SEEK ADDRESS
         SPACE
         LA    RWRKREG6,16(RWRKREG8)   POINT TO SEARCH R0 CCW.
         ST    RWRKREG6,8(RWRKREG6)    SET UP TIC ADDRESS.
         MVI   8(RWRKREG6),X'08'       RESET TIC OP CODE.
         SPACE
         LR    RCAW,RWRKREG8           CCW LIST ADDRESS.
         LA    RUCBPTR,UCBFRM          UCB FOR DIRECT ACCESS DEVICE.
         BAL   LINK9,STARTIO1          READ COUNT-KEY-DATA THIS TRACK.
         EJECT
*             ********************
*             * BUILD WRITE CCWS *
*             ********************
         SPACE 1
*  1) CHANGE FIRST CCW (DASD) TO READ R0.
         SPACE 1
*  2) STORE DASD CCW LIST LENGTH IN COUNT FIELD OF
*     WRITE (TAPE) CCW.
         SPACE 1
*  4) STORE DATA LENGTH IN WRITE (TAPE) DATA CCW.
         SPACE 2
PREPRWRT STH   RWRKREG2,WRTTPDTA+6      STORE TOTAL DATA CNT IN CCW
         LA    RWTRDCCW,DTALENG-8       GET ADDRESS OF DATA CONCERNING
*                                         CCW LIST AS WELL AS THE CCW
*                                         LIST
         SPACE 1
         LA    RWRKREG1,32(RSTOPLST)     GET STOPING FACTOR
         AR    RWRKREG1,RSTOPLST        DOUBLE IT FOR 2 SUBTRACTS
         S     RWRKREG1,ASEARIDE      SUBT ADDR OF SEARIDE
         SR    RWRKREG1,RWTRDCCW        SUBTRACT ADDR OF BEGIN OF LIST
         STH   RWRKREG1,WRTTPCCW+6      STORE IN COUNT FIELD
         SPACE 2
         EJECT
*       *****************************
*       * CHANGE DASD CCWS TO WRITE *
*       *****************************
         SPACE 1
*  1) CHECK IF WRITE SPECIAL IS NECESSARY.  IF SO,
*     MAKE LAST CCW WRITE SPECIAL.
         SPACE 1
*  2) IF NOT, MAKE LAST CCW WRITE COUNT,KEY,DATA.
         SPACE 1
*  3) MAKE FIRST CCW WRITE R0.
         SPACE 1
*  4) MAKE ALL OTHERS WRITE COUNT,KEY,DATA.
         SPACE 1
*  5) GO TO PROPER WRITE ROUTINE.
         SPACE 1
TSTWRTSP LA    RWRKREG4,8(RSTOPLST)     GET END FOR FINDING COUNT
         LA    RWRKREG5,SEARIDE         GET BEGINNING (MOVE FROM)
         SR    RWRKREG4,RWRKREG5        DETERMINE COUNT
         LA    RWRKREG6,8(RSTOPLST)     GET BEGINNING (MOVE TO)
         LA    RWRKREG8,8(RSTOPLST)    GET END OF READ BACK CHK FOR
         LA    REIGHT,8                SET UP INCREMENTING FACTOR.
         AR    RWRKREG8,RWRKREG4       SEARCH FOR RDBKCK FOR R0
         MVI   4(RSTOPLST),X'60'       CHAIN READS TO WRITES
         SPACE 1
         BAL   REG1,SETUP              GO TO MOVE CCWS OR DATA
         LR    RWRKREG3,RSTOPLST        SAVE RSTOPLST
         LA    RWTRDCCW,32(RSTOPLST)    GET BEG OF NEW LIST OF READ CCW
         S    RSTOPLST,ASEARIDE        GET LENGTH OF LIST OF READS
         AR    RSTOPLST,RWTRDCCW        GET END ADDRESS
        SPACE 1
CNGTOSKP OI    4(RWTRDCCW),X'10'       TURN ON SKIP
         BXLE  RWTRDCCW,REIGHT,CNGTOSKP  RETURN
        SPACE 1
        LR    RSTOPLST,RWRKREG3        RESTORE RSTOPLST
         MVC   0(24,RWRKREG8),SEARIDE  PREPARE READ BACK CHECK FOR R0
         ST    RWRKREG8,8(RWRKREG8)    STORE ADDRESS IN TIC
         MVI   8(RWRKREG8),X'08'       RESET TIC OP CODE.
         MVC   WTRDDATA(8),TICNOP      NOP THE FIRST RD (RO)
         MVI   24(RSTOPLST),X'05'      CHANGE FIRST READ TO WRITE
         AR    RWRKREG3,REIGHT          GET ADDRESS
         ST    RWRKREG3,16(RSTOPLST)   STORE ADDRESS IN TIC
         MVI   16(RSTOPLST),X'08'      RESET TIC OP CODE
         MVI   L20(RWRKREG8),SKBIT      TURN SK ON IN LAST RD R0 S20201
         SPACE 1
         LA    RWTRDCCW,WTRDCCW         GET BEGINNING OF RCKD'S
         SPACE 1
         SPACE 1
CNGTOWRT MVI   0(RWTRDCCW),X'1D'        CHANGE ALL READS EXCEPT LAST TO
         BXLE  RWTRDCCW,REIGHT,CNGTOWRT   WRITES
GOWRITE  TM    TAPESW,X'01'            DUMP TO TAPE
         BC    1,DMPDASD1               YES--GO TO WRITE ON TAPE.
TSTCOUNT CLI   UCBFRM+1,X'00'          NO--HAS READ COUNT COMPLETED8684
         BC    7,TSTCOUNT              WAIT
         SPACE 1                                                   8684
         TM    UCBFRM+25,X'01'     WAS THIS RECORD OVERFLOW        8684
         BCR   8,RLINK2           NO--CONTINUE                     8684
         MVI   0(RSTOPLST),X'01'   YES,CHANGE LAST CCW TO WRITE    8684
*                                      SPECIAL COUNT KEY DATA      8684
         NI    UCBFRM+25,X'FE'    TURN OFF OVERFLOW BIT            8684
         BR    RLINK2             GO TO PROPER ROUTINE             8684
         SPACE 1
         EJECT
*    **********************
*    * RLINK2  MAIN LOOPS *
*    **********************
*       * TO/FROM TAPE *
*       ****************
*         * TO 2311 *
*         ***********
         SPACE 2
*   ROUTINES TO
         SPACE 1
*          1)  WRITE ON TAPE IN DUMP   DASD - TAPE
*      OR
*          2)  READ FROM TAPE IN RESTORE   TAPE - DASD
*      OR
*          3)  WRITE ON 2311 IN DUMP   2311 - 2311
         SPACE 2
DMPDASD1 LA    RCAW,WRTTPCCW-8         CCWS FOR TAPE.
         LA    RUCBPTR,UCBTO           TAPE UCB.
         BAL   LINK9,STARTIO1          START 1ST TAPE RECORD.
TESTTAPE CLI   UCBTO+1,X'00'           HAS THE I/O COMPLETED.
         BC    7,TESTTAPE              NO--WAIT.
         CLI   UCBFRM+1,X'00'          HAS READ CKD COMPLETED.
         BC    7,TESTTAPE              NO--WAIT.
         SPACE 1
         TM    UCBFRM+25,X'01'         WAS THIS RECORD OVERFLOW    8327
         BZ    BULDCCW1                GO BUILD CCWS FOR NEXT TRK  8327
*                                                                  8327
* THIS ROUTINE WILL REWRITE THE CCW RECORD TO TAPE,                8327
*  IN THE CASE WHERE THERE IS AN OVERFLOW RECORD ON THE TRACK.     8327
*                                                                  8327
         MVI   0(RSTOPLST),X'01'       WRT CKD IS NOW WRT SPEC CKD 8327
         L     BASE10,SYSBAS           INSURE BASE REGISTER 10     8327
         LA    RCAW,BSPACE             BACKSPACE OVER THE CCW REC  8327
         LA    RUCBPTR,UCBTO           TAPE UCB                    8327
         BAL   LINK9,STARTIO           BACKSPACE                   8327
         NI    UCBFRM+25,X'FE'         TURN OFF THE OVERFLOW BIT   8327
         B     DMPDASD1                RE-WRITE THE CCW RECORD     8327
         SPACE 2
RSTRTAPE LA    RCAW,RDTPCCW-8           PREPARE TO             @ZA06537
         LA    RUCBPTR,UCBFRM           READ CONTROL FIELD     @ZA06537
         MVI   TAPESW,X'01'             SET SWITCH TO TAPE REST@ZA06537
         SPACE 1
RSTRTAP1 BAL   RLINK1,STARTIO
         CLI   SW64K,X'FF'             IS THIS A BUFFERED OPERATION
         BNE   TSTDISK2                NO--GO READ TAPE AND DISK.
         MVC   CORE+2(2),UCBFRM+22     SAVE RESIDUAL COUNT OF CCW READ
         LA    RCAW,RDTPDTA-8          CCWS FOR READING DATA FROM TAPE
         BAL   RLINK1,STARTIO          READ THE DATA INTO HIGH BUFFER
TESTDISK CLI   UCBTO+1,X'FF'           YES--IS THE DISK COMPLETE.
         BE    TESTDISK                NO--AWAIT END OF PREVIOUS I/O.
         BAL   RLINK2,CKALT1           GO TO CHECK ALTERNATE TRACK
         L     RWRKREG4,RDTPCCW+4      GET COUNT FROM CCW
         LA    RWRKREG4,0(RWRKREG4)    ZERO HIGH BYTE
         S     RWRKREG4,CORE           GET NUMBER OF BYTES TO MOVE
         LA    RWRKREG6,DTALENG        GET BEGINNING (MOVE TO )
         L     RWRKREG5,DTALENG1       GET BEGINNING (MOVE FROM)
         BAL   REG1,SETUP              GO TO MOVE CCWS OR DATA
         SPACE
         L     RWRKREG4,RDTPDTA+4      GET COUNT FROM CCW
         LA    RWRKREG4,0(RWRKREG4)    ZERO HIGH BYTE
         MVC   CORE+2(2),UCBFRM+22     SAVE RESIDUAL COUNT  OF DATA RD
         S     RWRKREG4,CORE           GET NUMBER OF BYTES TO MOVE
         LA    RWRKREG6,DTABUFF        GET BEGINNING (MOVE TO )
         L     RWRKREG5,DTABUFF1       GET BEGINNING (MOVE FROM)
         BAL   REG1,SETUP              GO TO MOVE CCWS OR DATA
         SPACE
MODTKADT ST    RTRKADR,CCHH            SET UP TRACK ADDRESS.   @ZA06537
         MVC   R0DATA(8),DTABUFF       MOVE R0 DATA.
         CL    RTRKADR,ENDADR          ARE WE FINISHED.
         BNL   EOJ1                    YES-GO TO END OF JOB.
         BAL   RLINK1,CNGCYLT          INCREMENT TRACK ADDRESS.
WRTDISK  LA    RCAW,SEEKCCW            DISK CCW LIST.
         LA    RUCBPTR,UCBTO           DEVICE TO BE WRITTEN ON.
         BAL   LINK9,STARTIO1          START WRITE ON DISK.
BUFOPTST CLI   SW64K,X'FF'             IS THIS A BUFFERED OPERATION.
         BE    RSTRTAPE                YES-GO READ TAPE.
TSTDISK1 CLI   UCBTO+1,X'FF'           IS THE DISK OPERATION COMPLETE.
         BE    TSTDISK1                NO--AWAIT COMPLETION.
         B     CKALT1                  GO TO CHECK ALTERNATE TRACK
TSTDISK2 LA    RCAW,RDTPDTA-8          PREPARE TO READ DATA FIELD.
         BAL   RLINK1,STARTIO            READ TAPE
         B     MODTKADT                CONTINUE
         EJECT
*              **********************
*              *2311 TRACK CONTROL *
*              **********************
         SPACE 2
*    THE LENGTH OF THE PORTION OF THE @DATA FIELD@ OF
*  THE NON 2311 DASD CONTAINED ON EACH 2311 TRACK IS
*  ENTERED AT DTALENG, DTALENG+2, ...
         SPACE 1
*    THIS WILL ENABLE THE WRITE/READ 2311 ROUTINE TO
*  TELL HOW MANY TRACKS ARE USED FOR THIS DASD TRACK.
         SPACE 1
*    ANY PORTION OF THE @DTALENG@ AREA THAT IS NOT
*  USED MUST BE ZEROED OUT, SINCE A @TEST FOR ZERO@
*  WILL BE THE MEANS OF TELLING WHEN THE LAST 2311
*  TRACK HAS BEEN WRITTEN/READ.
         SPACE 2
DMP2302  MVC   WRDSKCCW(64),DMYWTDK     SET UP THE WRITE 'DISK' CCW
*                                        LIST FOR 2311
TESTDA   CLI   UCBFRM+1,X'00'          HAS THE READ CKD COMPLETED.
         BNE   TESTDA                  NO--AWAIT COMPLETETION
         OI    RCCWRBC1+4,X'10'        SET
         OI    RCCWRBC2+4,X'10'          SKIP
         OI    RCCWRBC3+4,X'10'            BIT
         LA    RUCBPTR,UCBTO           GET UCB POINTER
         MVC   DTALENG-4(2),TWO56+2    SET R=1 - KEYLENGTH=0
         MVC   CNTFIELD+4(2),FIVE12    SET R=2 - KEY LENGTH=0
         CL    RTRKADR1,TOTLTRK         CHANGE OF DISK PACKS NEEDED
         BNL   SETLIMIT                   YES, PREPARE TO DO SO
         LH    RWRKREG3,TRECCNT         GET MAX LENGTH FOR 2 RECORDS
         STH   RWRKREG1,DTALENG-2       FILL R1'S COUNT FIELD.
         LA    RWRKREG1,8(RWRKREG1)     MODIFY CCW LIST +FUDGE TO
         STH   RWRKREG1,WRDSKCCW+6      STORE THE CCW LIST LENGTH+FUDGE
*                                        IN WRITE R1 CCW COUNT FIELD
         STH   RWRKREG1,RCCWRBC1+6      STORE THE CCW LIST LENGTH+FUDGE
*                                        IN RDBKCK CCW COUNT FIELD
         SR    RWRKREG3,RWRKREG1        SUBTRACT ABOVE COUNT FROM MAX
*                                        LENGTH FOR TWO RECORDS
         STH   RWRKREG2,CNTFIELD+6    STORE DATA LENGTH IN COUNT(CKD)
         STH   RWRKREG2,WDSKCCW2+6      STORE DATA LENGTH IN COUNT
*                                        FIELD OF R1 CCW
         STH   RWRKREG2,RCCWRBC3+6      STORE DATA LENGTH IN COUNT
*                                         FIELD OF RDBKCK R2
         SPACE 1
         SR    RWRKREG1,RWRKREG1        PREPARE RWRKREG1 FOR ANOTHER
*                                        ROUND
         SPACE 1
         CLR   RWRKREG3,RWRKREG2        WAS DATA LENGTH WITHIN CAPACITY
*                                        OF SINGLE TRACK
         BNL   STRTDSK                  YES, START WRITE
         SPACE 1
         STH   RWRKREG3,CNTFIELD+6      NO, REPLACE DATA LENGTH IN CNT
         STH   RWRKREG3,WDSKCCW2+6        AND REPLACE DATA LENGTH BY.
*                                        RESIDULE COUNT OF TRACK
         STH   RWRKREG3,RCCWRBC3+6       ALSO, READ BACK CHECK CCW
         SPACE 2
LOOPREC  STH   RWRKREG3,DTALENG(RWRKREG1) STORE NO OF BYTES FOUND ON
*                                          TRACK IN FUDGE PART OF CCW
*                                          LIST
         LA    RWRKREG1,2(RWRKREG1)     MODIFY INDEX IN CASE NEXT TRACK
*                                        WILL NOT HOLD RESIDULE DATA
         SR    RWRKREG2,RWRKREG3        DETERMINE NO OF BYTES OF DATA
*                                        LEFT
         STH   RWRKREG2,DTALENG(RWRKREG1) STORE RESIDULE COUNT IN SAVE
*                                        PART OF CCW LIST ETC.
         LH    RWRKREG3,TRECCNT         GET MAX COUNT
         CLR   RWRKREG3,RWRKREG2        WILL THIS TRACK CONTAIN
*                                        RESIDULE COUNT
         BNL   STRTDSK                  YES, START WRITE
         B     LOOPREC                  REPEAT PROCESS
         EJECT
*         ******************************
*         * WRITE/READ 2311(TRANSIENT) *
*         ******************************
         SPACE 2
*  1) FIRST TIME THROUGH READ/WRITE R0 AND R1 IS IMPLEMENTED
         SPACE 1
*  2) THEN DTALENG+2(TIMES THROUGH) IS CHECKED AND IF NON ZERO
*     THE READ/WRITE R0 CCW IS MODIFIED FROM DATA CONTAINED IN
*     DTALENG FIELD AND READ/WRITE IS STARTED FOR NEXT TRACK
         SPACE 2
STRTDSK  LA    RWRKREG1,DTALENG         GET ADDRESS OF 'NO RECORDS' CNT
         LA    RCAW,SEEK1CCW            GET CCW LIST ADDRESS
         LA    RLINK1,CKALT2            ADDRESS TO CK IF ALT TRK NEEDED
         SPACE 1
MODTKAD1 ST    RTRKADR1,CCHH1           STORE TRACK AND CYLINDER NO.
         ST    RTRKADR1,CNTADR1+2        IN R1 COUNT AND SEEK FIELD
         ST    RTRKADR1,DTALENG-8       ALSO STORE IT IN COUNT FIELD.
*                                         OF CKD (CCWLIST + )
         CLC   HH1(2),BUMPCYL           CHANGE OF CYLINDER NEEDED
         BE    CNGCYL2                  YES, DO SO
         LA    RTRKADR1,1(RTRKADR1)     NO, MODIFY TRACK ADDRESS
         B     STARTIO                  READ/WRITE THE TRACK.
         SPACE 1
MORETRKS CLI   DTALENG,X'FF'            HAS LAST TRACK BEEN PROCESSED
         BE    CKEOP                     YES
         CL    RWRKREG1,ADTALENG        IS THIS FIRST TIME THROUGH
         BNE   MORTRKS1                  NO
         MVC   RCCWRBC1(16),RCCWRBC2    MOVE CCWS UP SO WRITE ONLY ONE
         MVC   WRDSKCCW(48),WDSKCCW1      RECORD
         L     RWRKREG4,RDBKCK1        MODIFY
         S     RWRKREG4,EIGHT            TIC
         ST    RWRKREG4,RDBKCK1            ADDRESS
         SPACE 1
MORTRKS1 CLC   2(2,RWRKREG1),ZERO1    ARE THERE MORE TRACKS TO PROCESS
         BNE   GOAGAIN                  YES, DO SO
         XC    DTALENG(16),DTALENG      NO, CLEAR TRACK PROCESS AREA
         CL    RUCBPTR,AUCBTO          DUMP OR RESTORE
         BNE   MODTKADT                   RESTORE
         B     BUILDCCW                START OPERATION OVER
         SPACE 1
GOAGAIN  L     RWRKREG2,WRDSKCCW+8      GET PART OF CCW TO MODIFY
         LH    RWRKREG3,0(RWRKREG1)    GET PREVIOUS COUNT
         AR    RWRKREG2,RWRKREG3       ADD PREVIOUS DATA COUNT TO
*                                        PREVIOUS DATA ADDRESS.
         ST    RWRKREG2,WRDSKCCW+8      RETURN THAT PART
         ST    RWRKREG2,RCCWRBC2        ALSO PUT IN READ BACK CK.
         MVI   RCCWRBC2,X'1E'            KEEP READ CKD OP CODE
         MVC   WRDSKCCW+14(2),2(RWRKREG1) MOVE NEW COUNT TO COUNT FIELD
         MVC   RCCWRBC2+6(2),2(RWRKREG1) ALSO, TO RDBKCK
         MVC   CNTFIELD+6(2),2(RWRKREG1) GET COUNT OF CKD READY.
         MVI   CNTFIELD+4,X'01'         MAKE RECORD #1
         LA    RWRKREG1,2(RWRKREG1)     MODIFY CONTROL FIELD POINTER
         B     MODTKAD1                 PREPARE TO STARTIO AGAIN
         EJECT
RSTR2302 MVC   WRDSKCCW(24),DMYRDDK    SET UP THE READ 'DISK' CCW
*                                        LIST FOR 2311
         MVI   WLRECSW,X'01'           SWT SWITCH FOR WRONG LENGTH
         LA    RUCBPTR,UCBFRM           GET UCB POINTER
         B     STRTDSK                  PREPARE TO READ FROM PROPER
*                                        TRACK
         EJECT
*        ***********************
*        * GENERAL SUBROUTINES *
*        ***********************
         SPACE 2
*   ROUTINES TO CHANGE THE CCHH FROM CYLINDER M TRACK N
* (WHERE N IS MAXIMUM FOR THAT DASD) TO CYLINDER M+1 TRACK 0
         SPACE 1
         SPACE 1
CHANGCYL AL    RTRKADR,F1               UPDATE TRACK ADDRESS
         CLC   CCHH+3(1),TRKPCYLF+1     LAST TRACK
         BCR   4,RLINK1                 NO, RETURN
         SPACE 1
         A     RTRKADR,CYLINCRF         CHANGE ADDRESS TO NEXT CYLINDER
         B     CK2321                   CHECK IF 2321
         SPACE 2
CNGCYLT  AL    RTRKADR,F1               UPDATE TRACK ADDRESS
         CLC   CCHH+3(1),TRKPCYLT+1     LAST TRACK
         BCR   4,RLINK1                  NO, RETURN
         SPACE 1
         AL    RTRKADR,CYLINCRT         CHANGE CYLINDERS
         SPACE 2
CK2321   CLI   CCHH+2,X'04'             IS 2321 OR LAST CYL IF IS
         BCR   7,RLINK1                   NO
         SPACE 1
         AL    RTRKADR,STC2321          INCRIMENT STRIP
         CLI   CCHH+1,X'09'               LAST STRIP
         BCR   7,RLINK1                   NO,RETURN
         SPACE 1
         AL    RTRKADR,SCC2321          INCRIMENT SUBCELL
         BR    RLINK1                     RETURN
         SPACE 1
CNGCYL2  A     RTRKADR1,CYLINCR1        CHANGE CYLINDERS.
         B     STARTIO
         EJECT
*            **************************
*            * CHECK ALTERNATE TRACKS *
*            **************************
         SPACE 2
*     THE CHECK ALTERNATE TRACK ROUTINES ARE USED IN
*  THE FOLLOWING SITUATIONS.
         SPACE 1
*     CKALT ------- BAD TRACK IN READ ON DASD IN A
         SPACE 1
*                      DASD -- TAPE
*                                       DUMP
*                      2311 -- 2311
         SPACE 1
*     CKALT1 ------ BAD TRACK IN WRITE ON 2311 IN A
         SPACE 1
*                      TAPE -- 2311
*                                       RESTORE
*                      2311 -- 2311
         SPACE 1
*     CKALT2 ------ BAD TRACK IN WRITE/READ ON 2311 IN
         SPACE 1
*                   NON 2311
*                      DASD  - 2311     DUMP
         SPACE 1
*                              NON 2311
*                      2311 -- DASD     RESTORE
         SPACE 1
*                    CKALT--DEVICE FROM ON DUMP
         SPACE 1
*   CKALT CHECK S FOR BAD TRACK AND PLACES THE ALTERNATE TRACK ADDRESS
*   IN CCHH AND RETURNS FOR ANOTHER READ TRY
         SPACE 1
*      IT SHOULD BE NOTED THAT IF CCHH IS FOR ALTERNATE TRACK THEN THE
*      PROPER CCHH MUST BE BROUGHT BACK FOR USE IN RESTORE.
         SPACE 1
*   CKALT IS ENTERED ONLY WHEN UNIT CHECK IS ENCOUNTERED ON READ COUNT
*     AND PROTECTION BIT IS NOT ON.  HENCE IF THE TEST OF BAD TRACK
*     FAILS, A STANDARD ERROR IS ENCOUNTERED.
         SPACE 2
CKALT    LA    RUCBPTR,UCBFRM          UCB FOR DIRECT ACCESS DEVICE.
         LA    RCAW,SEEKALT            PREPARE TO READ HA + R0.
         BAL   RLINK1,STARTIO
         SPACE 1
         TM    ALTBUFF,X'01'            WAS TRACK READ ACTUALLY ALT
         BO    CNGRDCKD                  YES, RETURN TO BUILD RD CKD
         MVC   CCHHALT(4),ALTBUFF+5     GET ADDRESS OF ALTERNATE TRACK
         LA    RCAW,ALTCCW              SEEK ACTUAL ALT; SID RELATIVE
         BAL   RLINK1,STARTIO     READ COUNTS FROM ALTERNATE
         TM    UCBFRM+24,X'02'    A TRACK CONDITION CHECK?
         MVC   SEEKCCW(4),ALTCCW       SET UP SEEK ADDRESS
         BC    1,CNGRDCKD         YES-GO READ COUNT-KEY-DATA
         B     ANALSENS           NO--GO CHECK FOR FILE PROTECT
         EJECT
*                    CKALT1--DEVICE TO ON RESTORE.
         SPACE 1
*   CKALT1 NOTES IF BAD WRITE CAUSED BY BAD TRACK.
*     IF SO, THE FOLLOWING PROCEEDURE IS FOLLOWED.
*          1)WRITE R0 COMMAND IS SAVED
*          2)READ (R0) COUNT COMMAND (WITH CHAIN COMMAND)
*              IS DUBBED IN
*          3)ALTERNATE TRACK ADDRESS GOTTEN FROM COUNT
*             FIELD
*          4)WRITE R0 COMMAND PLACED BACK AND ANOTHER WRITE STARTED
         SPACE 2
CKALT1   TM    UCBTO+24,X'02'           BAD TRACK CONDITION?
         BC    7,GETCCW                  YES
         SPACE 1
CKALT1A  MVI   ALTSW,X'00'              SET 'ALT WRT' SWITCH OFF
         MVI   UCBTO+24,X'00'          CLEAR UCB "SENSE" AREA
         LA    RUCBPTR,UCBFRM          POINT TO 'FROM' UCB
         TM    TAPESW,X'03'              NO, WAS THIS RESTORE FROM TAPE
         BCR   5,RLINK2                  YES, RETURN TO READ TAPE
         B     BUILDCCW                  NO, THEN WAS DUMP (2311-2311)
*                                        RETURN AND BUILD ANOTHER CNT
*                                        CCW LIST
         SPACE 1
GETCCW   TM    ALTSW,X'01'              HAS ALTERNATE TRACK BEEN WRITTN
         BO    CKALT1A                   YES, RETURN
         MVI   ALTSW,X'01'              SET SWITCH INDICATING ALT WRT.
         SPACE 1
         LA    RUCBPTR,UCBTO           POINT TO 'TO' UCB
         LA    RCAW,SEEKALT             PREPARE TO READ HA AND R0
         BAL   RLINK1,STARTIO
         SPACE 1
         TM    ALTBUFF,X'01'            WAS TRACK READ ACTUALLY ALT
         BO    CKALT1A                   YES
         SPACE 1
HAVER0   MVC   CCHHALT(4),ALTBUFF+5     GET ADDRESS OF ALT FOR SEEK
         B     ALTCKRTN                CK. ALT. TRK. INFORMATION.  4332
CONTINU  EQU   *                       RETURN PT.                  4332
         SPACE 1
         MVC   PRWD(17),BAD             INSERT BAD TRACK MESSAGE
         UNPK  PRWD+20(9),CCHH(5)       INSERT ORIGINAL TRACK
         BAL   RLINK1,FINSPRNT         FINISH
         CLC   CCHH(4),ZERO            IS TRACK ZERO BAD.          8348
         BNE   ALTRACK                 NO                          8348
         L     REG1,AALTMSG             GET ADDR OF MESSAGE    @ZA06537
         MVC   PRWD(LALTMSG),DISP0(REG1) MOVE MSG TO PRINT AREA@ZA06537
         LA    REG1,LALTMSG             GET MSG LENGTH         @ZA06537
         BAL   RLINK1,PRNT             PRINT THE MESSAGE.          8348
         SPACE 1
ALTRACK  MVC   PRWD(18),ALT            GIVE ALTERNATE MESSAGE.     8348
         UNPK  PRWD+20(9),CCHHALT(5)    INSERT ALTERNATE ADDRESS
         BAL   RLINK1,FINSPRNT         FINISH
         SPACE 1
         BAL   RLINK1,PRNT             SPACE A LINE
         SPACE 1
         LA    RLINK1,CKALT1            GET RETURN ADDRESS
         LA    RCAW,ALTCCW              SEEK ACTUAL; SID RELATIVE
         B     STARTIO
         SPACE 2
FINSPRNT TR    PRWD+20(8),IOTAB-240    COVERT TO GRAPHICS.
         MVI   PRWD+28,C' '             CLEAR UNPK GARBAGE
         LA    REG1,30
         B     PRNT
         EJECT
*    CKALT2 IS USED WHEN BAD TRACK IS ENCOUNTERED
*  ON 2311 DURING "NON-2311 TO 2311" DUMP OR
*  "2311 TO NON-2311" RESTORE
         SPACE 1
CKALT2   TM    UCBTO+24,X'02'           BAD TRACK SWITCH ON
         BC    7,GETCCW2                 YES
         B     MORETRKS                 NO, RETURN
         SPACE 1
GETCCW2  MVC   SWITCHRD+8(8),SEARCCW1  SAVE SEARCH R0 CCW.
         MVC   SEARCCW1(8),READR0CT        REPLACE WITH READ R0 COUNT
         BAL   RLINK1,STARTIO
         SPACE 1
HAVER02  MVC   SEARCCW1(8),SWITCHRD+8  RESTORE SEARCH R0 CCW.
         MVC   NEWTRK+2(4),SWITCHRD    SEEK ADDRESS FOR ALTERNATE.
         LA    RCAW,GOTOALT            ADDRESS OF CCW LIST.
         BAL   RLINK1,STARTIO          PUT THE INFO ON AN ALTERNATE.
         LA    RCAW,SEEK1CCW           RESTORE CCW LIST POINTER
         B     MORETRKS                GO PROCESS SOME MORE.
         SPACE 1
         EJECT
*        *****************
*        * MULTIPLE TAPE *
*        *****************
         SPACE 2
*    UPON ENCOUNTERING UNIT EXCEPTION, CAUSE IS DETERMINED
*  TEST IS MADE TO DETERMINE IF TAPE IS INPUT OR OUTPUT
         SPACE 1
*     OUTPUT
*       1) CHECK IS MADE TO DETERMINE IF BOTH RECORDS
*           FOR TRACK ARE WRITTEN (CCW LIST AND BUFFER)
*       2) GET NEW REEL MESSAGE SET UP
*       3) CONTROL RECORD IS WRITTEN FOR RESTORE
         SPACE 1
*     INPUT
*       1) CONTROL RECORD IS READ
*       2) CHECK IS MADE TO DETERMINE IF DONE
*       3) TRANSFER IS MADE TO PROPER ROUTINE
         SPACE 2
ENDREEL  MVI   EORSW,X'FF'             FF MEANS END OF REEL        5274
         B     IORTRN                  LOAD I/O OLD PSW            5274
RESET15  L     GR15,CCHH               DECREMENT GR15 ONE TRACK    5274
         L     BASE10,SYSBAS           INSURE BASE REGISTER 10     5274
         MVI   CKVOLSW,X'80'                                       5274
         LA    RWRKREG4,UCBTO           GET ADDRESS OF UCB TO DEVICE
         BAL   RLINK1,UNIT               CONVERT TO PRINTABLE FORMAT
         MVC   MESS1+36(3),UNITHLD+1    PREPARE TO PRINT
         MVC   PRWD(65),MESS1          PUT TAPE MOUNT MESSAGE IN PRWD.
         LA    GR1,65                  LENGTH OF MESSAGE IN BYTES.
         SPACE 1
         L     RWRKREG4,REELCTRL        SET UP SWITCH TO DETERMINE
         SLL   RWRKREG4,1                WHEN ALL TAPES HAVE BEEN
         ST    RWRKREG4,REELCTRL         RESTORED
         ST    RWRKREG4,DTABUFF         PREPARE TO WRITE THEM
         SPACE 1
         LA    RLINK2,SETWAIT          PREPARE RETURN ADDRESS
         B     EOJ1A
         SPACE 2
         SPACE 2
EOJ1     MVC   PRWD(20),MESS2                GET ADDR OF EOJ CCW
         LA    REG1,20
         LA    RLINK2,WAITZ            GO INT WAIT STATE FOR NEW TAPE
         TM    TAPESW,X'01'                  TAPE OR 2311 TO 2311
         BZ    EOJ2311                 2311
         SPACE 1
         L     RWRKREG4,REELCTRL             SET UP SWITCH TO DETERMINE
         SLL   RWRKREG4,1                     THAT ALL TAPES HAVE BEEN
         LCR   RWRKREG4,RWRKREG4              RESTORED
         ST    RWRKREG4,DTABUFF              PREPARE TO WRITE
EOJ1A    MVC   WRTTPDTA+6(2),NOISECK        TRAILER REC 24 BYTES A53319
         XC    DTABUFF+4(20),DTABUFF+4      CLEAR TRAILER+4    @ZA11924
         LA    RUCBPTR,UCBTO
         SPACE 1
         LA    RCAW,WRTTPDTA-8              RESTORE (REELS) CONTROL
         BAL   RLINK1,STARTIO                ON TAPE
         SPACE 1
         LA    RCAW,WTMCCW
         BAL   RLINK1,STARTIO
         BAL   RLINK1,STARTIO          TWO TAPE MARKS AT THE END.
         SPACE 1
EOJA     MVI   TSWITCH,X'01'           THIS IS TAPE INOR OUT
         BAL   RWRKREG1,ENDOFJOB        GO PRINT END OF JOB MESSAGE
         LA    RCAW,XREWCCW              REWIND THE TAPE
         BAL   RLINK1,STARTIO
         BR    RLINK2                   SET UP PROPER WAIT
         SPACE 1
ENDOFJOB BAL   RLINK1,PRNT              PRINT END OF JOB OR  END OF
*                                          REEL/DISK PACK
         MVC   DTABUFF(8),BGNADR        STORE BEGINNING,END AND
         ST    RTRKADR,DTABUFF+8          RELATIVE BEGINNING ADDRESSES
         MVC   DTABUFF+12(8),PRTKCODE   SET CODE TO PROTECT READING
         MVC   DTABUFF+20(1),FULLDPSW  SAVE "FULLDUMP" SWITCH
         MVC   DTABUFF+21(1),UCBFRM    TELL DEVICE TYPE
         MVC   DTABUFF+22(1),UPPRLMT1  3340 MODULE SIZE         XL03130
         TM    TSWITCH,X'01'           TAPE INPUT OR OUTPUT?
         BCR   1,RWRKREG1                 YES, REWIND THE TAPE
         SPACE 1
         BR    RLINK2
         SPACE 2
WAITZ    CLI   UCBSYO,T2400             IS SYSOUT TAPE           S20201
         BE    WTMSYO                  YES
         B     SYO3800                 GO CHECK SYSOUT.        @X50ADTT
         SPACE 1
WTMSYO   LA    RCAW,WTMCCW
         LA    RUCBPTR,UCBSYO            WRITE TAPE MARK ON SYSOUT
         BAL   RLINK1,STARTIO
         SPACE 1
         LA    RCAW,XREWCCW            REWIND SYSOUT
         BAL   RLINK1,STARTIO
         SPACE 1
         LPSW  COWAIT
         SPACE 1
SETWAIT  LA    RLINK2,TOTAPE           GET RETURN ADDRESS
         B     PREWAITA
         SPACE 1
EOJ2311  LA    RWRKREG1,ENDOFJOB       BYPASS TAPE
         MVC   PRWD(20),MESS2          SET UP END OF JOB MESSAGE
         LA    REG1,20
         SPACE 1
EOJAA    CLI   UCBTO+1,X'FF'           IS DISK COMPLETE
         BE    EOJAA                   NO--AWAIT COMPLETION
         CLI   FULLDPSW,X'F0'          FULL RESTORE OR 2311 DUMP
         BCR   7,RWRKREG1              NO
         LA    RUCBPTR,UCBTO            PREPARE
         LA    RCAW,SEARCHID               TO
         MVC   CCHH(4),CCHHZERO        ACTUAL OR ALTERNATE CCHH FOR 0
         MVI   CCHHR+4,X'01'            SET SEARCH FOR IPL1      A36316
         MVI   WRTRDID+7,X'18'          SET IPL1 LENGTH          A36316
         XC    CCHHR(4),CCHHR          SET SEARCH FOR TRACK ZERO
         BAL   RLINK1,STARTIO           START IO
         MVI   CCHHR+4,X'02'            SET SEARCH FOR IPL2      A36316
         MVI   WRTRDID+7,X'90'          SET IPL2 LENGTH          A36316
         CLI   SAVEVTOC+1,X'06'         IS IPLTXT ON PACK        A36316
         BE    EOJAH                    NO IPLTXT                A36316
         BAL   RLINK1,STARTIO           READ IPL BOOTSTRAP       A36316
         MVC   CCHH(4),SAVEVTOC+38      GET ADDRESS OF IPL TEXT
         LA    RCAW,SEEKALT             GET IPL TEXT TRACK
         BAL   RLINK1,STARTIO           START IO
         LA    RCAW,SEARCHID
         LA    RLINK1,ALTBUFF+5         SET IPL TEXT CCHH ADDRESS
         TM    ALTBUFF,X'02'            IS IPL TEXT ON ALTERNATE TRACK
         BO    CNGIPLBS                   YES
         LA    RLINK1,SAVEVTOC+38       SET IPL TEXT
         CLC   SAVEVTOC+34(4),SAVEVTOC+38 WAS IPL TEXT ON ALTERNATE TRK
         BNE   CNGIPLBS                      YES
EOJAH    MVC   CCHH(4),CCHHZERO        ACTUAL OR ALTERNATE CCHH FOR 0
         MVI   CCHHR+4,X'03'           SET SEARCH FOR VOLUME LABEL
         BAL   RLINK1,STARTIO          READ IN POINTER TO VTOC.
         MVI   WRTRDID,X'06'           CHANGE BACK TO READ ID
         MVC   CCHHR(5),SAVEVTOC+11    SET UP SEARCH ADDRESS.
         MVC   CCHH(4),SAVEVTOC+11     SET UP SEEK ADDRESS.
         BAL   RLINK1,STARTIO
         SPACE 1
         CLI   DOSBIT,ON                SET DOSBIT IN VTOC ?    XL03145
         BNE   VTOCRITE                 NO - CONTINUE           XL03145
         OI    SAVEVTOC+L14,EIGHTY      YES - SET BIT ON        XL03145
VTOCRITE MVC   SAVEVTOC+8(6),ALTDATA    UPDATE ALTERNATE TRK INFORMATN
         MVC   SAVEVTOC+L18(L2),DEVSIZE UPDATE  DEVICE SIZE     XL03145
         MVI   WRTRDID,X'05'            WRITE VTOC
         BAL   RLINK1,STARTIO
         LA    RUCBPTR,UCBFRM           PREPARE REWIND IF NECESSARY
         BR    RWRKREG1                PREPARE TO PRINT EOJ MESSAGE
         SPACE 1
CNGIPLBS MVC   CCHH(4),CCHHZERO        ADDRESS OF IPL BOOTSTRAP.
         MVC   SAVEVTOC+34(4),0(RLINK1)   TO CHANGE AND WRITE
         MVI   WRTRDID,X'05'             PROPER TRACK IN BOOT STRAP
         XC    SAVEVTOC+50(13),SAVEVTOC+50  INSURE ALTBUFF IS CLEARED.
         BAL   RLINK1,STARTIO           START IO
         MVI   WRTRDID,X'06'           CHANGE BACK TO READ
         MVI   WRTRDID+7,X'60'        SET  COUNT
         B     EOJAH                    RETURN
         EJECT
SETLIMIT L     RWRKREG4,REELCTRL       SET UP SWITCH TO DETERMINE
         SLL   RWRKREG4,1                THIS DISK PACK
         ST    RWRKREG4,REELCTRL           HAS BEEN
         ST    RWRKREG4,DTABUFF              WRITTEN
         MVI   DTALENG,X'FF'           SET UP "END OF DISK" SWITCH
*                                          FOR RESTORE
         LA    RWRKREG1,40              RESET
         STH   RWRKREG1,RCCWRBC1+6        CCW LIST
         S     RWRKREG1,EIGHT              FOR
         STH   RWRKREG1,RCCWRBC3+6           TRAILER RECORDS
         STH   RWRKREG1,DTALENG-2      ALSO RESET
         STH   RWRKREG1,CNTFIELD+6          COUNT FIELDS
         LA    RWRKREG4,UCBTO          GET UCB ADDRESS
         BAL   RLINK1,UNIT              TELL OPERATOR TO MOUNT NEW PACK
      SPACE 1
         CL    RTRKADR,ENDADR           END OF VOLUME OR END OF JOB
         L     RTRKADR,CCHH            RESET TRACK ADDRESS
         BL    STRTDSK                  END OF VOLUME ONLY
         L     RTRKADR1,CCHH1          RESET TRACK ADDRESS IN CASE IT
*                                        WAS MODIFIED BY "EOJ2" TO
*                                        FORCE END OF PACK
         B     STRTDSK                 RETURN TO WRITE TRAILER RECORD
         SPACE 1
CKEOP    CL    RUCBPTR,AUCBTO          IS THIS "END OF PACK" FOR
*                                          DUMP OR RESTORE
         BNE   RDNEWD                    RESTORE
         TM    EOJSWTCH,X'01'          IS IT EOJ OR END OF PACK
         BO    EOJ3B                   END OF JOB
         MVC   DTABUFF(8),BGNADR         DUMP, STORE BEGINNING, END
         ST    RTRKADR,DTABUFF+8         AND RELATIVE BEGINNING ADDRES
         MVC   DTABUFF+12(8),PRTKCODE  SET "IS THIS RSTR PK" SWITCH
         MVC   DTABUFF+20(1),FULLDPSW  SAVE "FULLDUMP" SWITCH
         MVC   DTABUFF+21(1),UCBFRM    TELL DEVICE TYPE
         LA    RLINK2,TO2311            SETUP TO START NEXT ROUND
         MVI   DTALENG,X'00'           CLEAR END OF PACK SWITCH.
         B     PREWAIT                 DUMP
RDNEWD   LA    RWRKREG4,UCBFRM         ADDRESS OF FROM DEVICE UCB
         BAL   RLINK1,UNIT              TELL OPERATOR TO MOUNT NEW PAC
         LA    RLINK2,WAITZ            SET EOJ WAIT TO BE USED IF NEC
         OC    REELCK(4),DTABUFF       DETERMINE WHICH PACK RESTORED
         CLC   REELCK(4),REELMASK      FINAL ONE
         BE    EOJ2311                 YES
         LA    RLINK2,FRM2311A           NO
         B     PREWAIT                 PRINT MESSAGE, AND WAIT
         SPACE 2
EOJ3B    MVC   PRWD(20),MESS2          SET UP END OF JOB MESSAGE
         LA    REG1,20
         MVI   EOJSWTCH,X'00'           SET SWITCH; TELL EOJ
         BAL   RLINK1,PRNT
         B     WAITZ                    CHECK IF SYSOUT IS TAPE
         SPACE 1
UNIT     UNPK  UNITHLD(5),2(3,RWRKREG4) GET AND UNPACK UNIT ADDRESS
         TR    UNITHLD(4),IOTAB-240     CONVERT TO PRINTABLE FORMAT
         L     GR1,AMESS5               GET ADDR OF MSG 5      @ZA06537
         MVC   FMESS5(LFMESS5,GR1),UNITHLD1 PLACE FILL IN MSG  @ZA06537
         MVC   PRWD(LMESS5),DISP0(GR1) MOVE MSG TO PRINT AREA  @ZA06537
         LA    GR1,LMESS5               GET LENGTH OF MESSAGE  @ZA06537
         BR    RLINK1                   PRINT IT
         EJECT
DISKEOF  L     RWRKREG4,64              GET ADDRESS OF CCW
         S     RWRKREG4,EIGHT            HAVE EOF.
         SPACE 1
         CLI   0(RWRKREG4),X'16'       WAS "EOF" CAUSED BY READ R-0
         BC    8,INDEXRTN              YES,RETURN
         SPACE 1
DISKEOF1 MVI   0(RWRKREG4),X'12'       CHANGE EOF CCW TO READ COUNT.
         L     GR3,4(UCBREG)           GET TO CORRECT CCW.
         MVI   DSKEOFSW,X'FF'          TURN ON DISK EOF SWITCH     5434
         MVI   ERRETRY,X'FF'           HANDLE AS IF ERROR          5196
         BAL   RLINK1,STARTIO          GO TO EXECUTE CCW LIST.     5434
         B     INDEXRTN                ERROR RECOVERY RETURN       5434
         SPACE 1
         SPACE 2
TAPEEOF  TM    CKVOLSW,X'41'           WAS EOF ON SCRATCH          2324
         BO    TOTAPE1B                  YES, STANDARD LBL OR LDR  2324
         BM    TOTAPE1A                  YES, NONLABEL, SET MODE   2324
         TM    CKVOLSW,X'02'            WAS EOF ON "RESTORED FROM"
         BO    RTRNTM                     YES
         CL    RUCBPTR,AUCBTO           END OF FILE ON READ OR WRITE
         BE    ENDREEL                   WRITE
         CL    RUCBPTR,INPUTR     WAS THE UNIT EXCPTN ON SYSIN     9930
         BE    ABSEQPRT            IF SO, GO PRNT CNTRL SEQ ERR    9930
         SPACE 1
         MVC   PRWD(20),MESS2          PREPARE MESSAGE OF END OF JOB
         LA    REG1,20
         LA    RLINK2,WAITZ            PREPARE OF END OF JOB
         LA    RCAW,XRDTRLR            GET REEL CONTROL RECORD     3479
         L     GR9,DTALENG1            LOAD ADDRESS OF BUFFER    A53319
         CLI   SW64K,X'FF'             BUFFERED OPERATION      @ZA13769
         BE    MPLEX                   YES-KEEP BUFFER ADDR    @ZA13769
         LA    GR9,DTALENG             LOAD NO-BUFFERING ADDR  @ZA13769
MPLEX    CLI   16(GR9),X'07'           WAS LAST REC A SEEK     @ZA13769
         BE    GETREC                  YES, GET THE TRAILER REC  A53319
         MVC   SAVEVTOC(24),0(GR9)     MOVE TRAILER RECORD       A53319
         SSM   ENABLE                  MAKE SURE DISK IS ENABLED A53319
         B     TRAILER                 YES -TRAILER ALREADY READ A53319
GETREC   BAL   RLINK1,STARTIO
         SPACE 1
TRAILER  LA    RWRKREG1,EOJA           SET GO TO ADDRESS
         OC    REELCK(4),SAVEVTOC      UPDATE REEL CONTROL CHECK AREA.
         CLC   REELCK(4),REELMASK      IS JOB FINISHED
         BE    EOJAA
         SPACE 1
         LA    RLINK2,FRMTAPE1            NO, PREPARE FOR NEXT ROUND
         LA    RCAW,XREWCCW             REWIND THE TAPE
         BAL   RLINK1,STARTIO
         SPACE 1
PREWAIT1 LA    GR7,UCBFRM              ADDRESS OF FROM DEVICE UCB
         BAL   LINK15,UNITADDR         CONVERT HEX UNIT ADDR TO BCD.
         L     GR1,HUNIT               GET ADDRESS OF UNITBUF+1.
         MVC   MESS1+36(3),0(GR1)      PUT UNIT INTERFACE ADDR. IN MESS
         MVC   PRWD(65),MESS1          PUT TAPE MOUNT MESSAGE IN PRWD.
         LA    GR1,65                  LENGTH OF MESSAGE IN BYTES.
PREWAIT  BAL   RLINK1,PRNT             GIVE ON MESSAGE DEVICE.
PREWAITA LA    RWRKREG4,FIXEX          ADDRESS OF RETURN POINT.
         ST    RWRKREG4,CONTINUE+4     SET UP THE PSW.
         BAL   RLINK1,PRE3800          TEST FOR 3800.          @X50ADTT
         LPSW  COWAIT1                 WAIT FOR EXTERNAL INTERRUPT.
FIXEX    BR    RLINK2                  START NEW LOOP.
         EJECT
*    DUMMY AND SPECIAL CCWS
         SPACE 2
         DS    0D
LIMITCCW CCW   X'1D',DTABUFF-8,X'20',40
LMITCCW1 CCW   X'1E',DTABUFF-8,X'20',40
         SPACE 1
DMYWTDK  CCW   X'1D',DTALENG-8,X'60',40  WRITE R1 ON 2311 IN DUMP
         SPACE 1
         CCW   X'1D',CNTFIELD,X'A0',8   WRITE R1 ON 2311
         CCW   X'1D',DTABUFF,X'60',32   WRITE R1 ON 2311
         SPACE 1
         CCW   X'31',CNTADR1+2,X'60',5
         CCW   8,RDBKCK1,X'60',1
DMYRDDK  CCW   X'1E',DTALENG-8,X'60',X'FFFF'  READ R0 FRM 2311 IN RESTR
         SPACE 1
         CCW   X'1E',CNTFIELD,X'A0',8
         CCW   X'1E',DTABUFF,X'20',X'FFFF'  ERAD R2 IN RESTR
         SPACE 1
SEARCHID CCW   7,BBCCHH,X'60',6        SEEK TRACK 0 OR ITS ALTERNATE.
SEARCH   CCW   X'31',CCHHR,X'60',5     SEARCH FOR R2 OR R3.
         CCW   8,SEARCH,0,0            REPEAT UNTIL FOUND.
WRTRDID  CCW   6,SAVEVTOC,X'20',144    READ IPL BOOTSTRAP OR VOL.LABEL
         SPACE 1
DUMMYCCW CCW   X'92',CTBUFFER,X'60',8      SET UP READ COUNT
         SPACE 1
DMMYRCCW CCW   X'1E',DTABUFF+8,X'60',1 SET UP READ CKD
         SPACE 1
TICNOP   CCW   8,WTRDCCW,X'60',5
         SPACE 1
DATAR0   CCW   6,R0DATA,X'60',8        READ R0 DATA.
         SPACE 1
SETMODE1 CCW   X'93',DTALENG,X'60',1     SET 800BPI; CNV-ON; TR-FF
WRTTPCCW CCW   1,DTALENG,X'20',1        WRITE DISK CCW LIST ON TAPE
         SPACE 1
SETMODE2 CCW   X'93',DTABUFF,X'60',1     SET 800BPI; CNV-ON; TR-OFF
WRTTPDTA CCW   1,DTABUFF,X'20',1         WRITE DATA (GOTTEN FROM DASD)
         SPACE 1
SETMODE3 CCW   X'93',DTALENG,X'60',1     SET 800BPI; CNV-ON; TR-OFF
RDTPCCW  CCW   2,DTALENG,X'20',X'7FFF' READS CCW RECORD FROM TAPE. 5434
         SPACE 1
SETMODE4 CCW   X'93',DTABUFF,X'60',1     SET 800BPI; CNV-ON; TR-OFF
RDTPDTA  CCW   2,DTABUFF,X'20',X'7FFF' READS DATA RECORD FROM TAPE.5434
         SPACE 1
SETMODE5 CCW   X'93',DTALENG,X'60',1   MODE SET//800 BPI,CNV-ON,TR-OFF.
         CCW   1,HAR0CCW-16,X'20',88   WRITE SPECIAL CCW LIST.     5434
         SPACE 1
XRDVOLID CCW   X'93',SAVEVTOC,X'60',80   SET 800BPI; CNV-ON; TR-OFF
         CCW   2,SAVEVTOC,X'20',80       READ VOLUME LABEL
XRDTRLR  CCW   X'93',DTABUFF,X'40',24  SET 800 BPI CNV-ON TR-OFF A65560
         CCW   2,DTABUFF,X'00',24      READ TRAILER RECORD       A65560
         SPACE 1
FSFILE   CCW   X'3F',0,X'20',1         FORWARD SPACE FILE        A65560
         SPACE 1
READR0CT CCW   X'16',SWITCHRD,X'20',8  READ R0 COUNT-ALTERNATE TRACK.
         SPACE 1
WTMCCW   CCW   X'93',DTABUFF,X'60',1   SET MODE                    2324
         CCW   X'1F',0,X'60',1         WRITE TAPE MARK             2324
NOPCCW   CCW   3,0,X'20',1             NOP.                    @ZA01223
XREWCCW  CCW   7,0,X'20',1               REWIND
         SPACE
INITCCW  CCW   X'37',0,X'30',1         INITIALIZE CCW.         @X50ADTT
LOGERCCW CCW   X'24',0,X'30',136       SENSE ERROR LOG.        @X50ADTT
         EJECT
SEEK1CCW CCW   7,CNTADR1,X'60',6        THIS CCW LIST IS TO READ OR
         SPACE 1
SETMASK1 CCW   X'1F',FILEMASK,X'60',1    WRITE FROM 2311 IN THE
         SPACE 1
SEARCCW1 CCW   X'31',CNTADR1+2,X'60',5  DUMP/RESTORE - DASD - 2311
         SPACE 1
SEARTIC1 CCW   8,SEARCCW1,X'60',150
         SPACE 1
WRDSKCCW DS    D
WDSKCCW1 DS    D
WDSKCCW2 DS    D
         SPACE 1
RDBKCK1  CCW   X'31',CNTADR1+2,X'60',5
         CCW   8,RDBKCK1,X'60',1
RCCWRBC1 DS    D
RCCWRBC2 DS    D
RCCWRBC3 DS    D
SENSETAP CCW   4,TAPEBUFS,X'20',24     SENSE COMMAND FOR TAPE.  XL03128
MODE4793 DC    X'93'                   7 TRACK SETS 800BPI/CONVERTER ON
MODE49CB DC    X'CB'                   9 TRK 800 BPI           @ZA13799
MODE49C3 DC    X'C3'                   9 TRACK 1600 BPI IF AVAILABLE
MODE49D3 DC    X'D3'                   9 TRACK 6250 BPI        XL03128
TAPESENS DC    X'00'                   SWITCH SET TO 0F IF TAPE TESTING
         EJECT
AMESS3   DC    A(MESS3)                 ADDR OF MSG 3          @ZA06537
AMESS5   DC    A(MESS5)                 ADDR OF MSG 5          @ZA06537
AMESS7   DC    A(MESS7)                 ADDR OF MSG 7          @ZA06537
AALTMSG  DC    A(ALTMSG)                ADDR OF ALT MSG        @ZA06537
         SPACE 5
MESS2    DC    C'IBC163A  END OF JOB.'
LMESS2   EQU   *-MESS2                  MESSAGE LENGTH         @ZA06537
DASDIDR  DC    C'DASDI - DUMP/RESTORE'
BAD      DC    C'IBC110I BAD TRACK'
         SPACE
         EJECT
*           ****************
*           * DASD CONTROL *
*           ****************
         SPACE 1
*     THIS SECTION GIVES THE PROGRAM PERTINENT INFORMATION
*  CONCERNING THE TO-DEVICE AND FROM DEVICE, SUCH AS MAXIMUM
*  NUMBER OF RECORDS/TRACK ETC.
*     THE DATA IS STORED IN THIS SECTION DURING HOUSEKEEPING.
         SPACE 1
*  THE CONTROL SECTION THAT MAKES THE GENERAL PART OF THE
*  ROUTINE DASD INDEPENDENT.
         SPACE 2
FRMDCTRL DS    0D                       SPACE RESERVED FOR FRMDEV CNTRL
         SPACE 2
CYLINCRF DS    F                        INCREMENTING FACTOR TO CHANGE
*                                         CYLINDERS
UPPRLMT1 DS    F                        UPPER LIMIT (ORIGINAL)
         SPACE 1
XSTARTR  DS    F                        ADDRESS OF PRE RLINK2
         SPACE 1
TRKPCYLF DS    H                        (NUMBER OF TRACKS -1)/CYLINDER
         SPACE 1
MNCCWX8F DS    H                        (MAX NUMBER OF CCWS -1)X8 BYTES
         SPACE 3
TODCTRL  DS    0D                       SPACE RESERVED FOR TODEV CONTRL
         SPACE 2
CYLINCRT DS    F                        INCREMENTING FACTOR  TO CHANGE
*                                         CYLINDERS
         DS    F
         SPACE 1
XSTARTD  DS    F                        ADDRESS OF PRE RLINK2
         SPACE 1
TRKPCYLT DS    H                        (NUMBER OF TRACKS -1)/CYLINDER
         SPACE 1
MNCCWX8T DS    H
         SPACE 2
DTALENG1 DC    X'0200A000'             CCW BUFFER ADDRESS.     @ZA18374
DTABUFF1 DC    X'0200B800'             DATA BUFFER ADDRESS.    @ZA18374
ONLY32KA DC    A(ONLY32K)              RETURN ON PROGRAM INTERRUPT.
SW64K    DC    X'00'                   'FF' INDICATES 64K OR MORE.
         EJECT
ORG0600X EQU   *
         ORG   ENTER+12710
ORG0700  EQU   *
FILEMASK DC    X'D8'                   INHIBIT SEEK ON R COUNT
TAPESW DC X'00'                        TELL IF RSTR FRM TAPE OR 2311
         SPACE 1
ALTSW    DC    X'00'                   FINISHED READ/WRITE  ALTERNATE
         SPACE 1
         SPACE 1
WLRECSW  DC    X'00'                   SWITCH TO SURPRESS WRONG LENGTH
         SPACE 1
VOL1     DC    C'VOL1'                 COMPARE FACTOR  -  FOR LABEL
         SPACE 1
VOLIDIS  DC    C'VOLID='
         SPACE 1
CKVOLSW  DC    X'00'                   TAPE MARK ENCOUNTERED
         SPACE 1
PRTKCODE DC    X'F47006016663B24D'
PRTKCOD1 DC    X'F4701D16FB63B24D'     2311 HEADER LABEL CODE.
         SPACE
EOJSWTCH DC    X'00'
         SPACE
         SPACE 1
NOISECK  DC    X'0018'                 IS IT NOISE RECORD
A1       DC    AL3(ADDRSCH1)
A2       DC    AL3(ADDRSCH2)
ADCTBUFF DC    A(CTBUFFER)              BUFFER ADDRESS FOR COUNT FIELDS
TWO56    DC    X'00000100'                                         5434
ASEARIDE DC    A(SEARIDE)                                          5434
SIXTEENX DC    X'00000010'                                         5434
REELCK   DC    X'00000000'             CHECK IF 1ST REEL ON TAPE.  5434
REELCTRL DC    X'00000001'         MODIFIES REEL CONTRL RECORD.    5434
REELMASK DC    X'FFFFFFFE'             CHECK IF LAST REEL ON TAPE. 5434
AUCBTO   DC    A(UCBTO)                TO-DEVICE UCB ADDRESS.      5434
         EJECT
         SPACE 1
         SPACE 1
UNITHLD  DC    D'0'                     BUFFER FOR CONVERTING UNIT ADD.
UNITHLD1 EQU   UNITHLD+1                2ND BYTE OF CONVRT BUFF@ZA06537
         SPACE 1
CCHHR    DC    X'0000000003'           ADDRESS OF VOLUME LABEL
         SPACE 1
USEDLABL DC    X'012954367815'
         SPACE 2
*    SEEK ETC AND SPACE SAVED FOR READ COUNT CCWS
         SPACE 2
SEEKALT  CCW   7,BBCCHH,X'60',6         CCW LIST USED TO READ
         CCW   X'1A',ALTBUFF,X'60',5       HOME ADDRESS AND
         CCW   X'16',ALTBUFF+5,X'20',8        R0 OF BAD TRACK
         SPACE 1
ALTCCW   CCW   7,CCHHALT-2,X'60',6      SEEK ACTUAL ALT
         CCW   8,SETMASK,X'60',5
         SPACE 1
         DS    0D
         DC    XL4'00'
CCHHALT  DC    XL4'00'
         SPACE 2
         DC    D'0'                     USED BY CCHHALT AND CNTADR1
         DC    H'0'
CNTADR1  DC    3H'0'
         DC    D'0'
CNTFIELD DS    0D
CCHH1    DC    H'0'
HH1      DC    H'0'
         DC    F'0'
REGPSW   DC    A(PGMINT)
CON64KK  DC    F'65008'
NEWTRK   DC    6X'00'                  SEEK ADDRESS FOR ALTERNATE TRACK
GOTOALT  CCW   X'07',NEWTRK,X'40',6    SEEK TO ALTERNATE
         CCW   X'08',SEARCCW1,0,0      TIC TO SEARCH IN REGULAR CHAIN
CCHHZERO DC    F'0'                    CONTAINS CCHH OF VOL.LABELTRK.
EIGHT    DC    F'08'                   FULLWORD OF 08.
         EJECT
ORG0700X EQU   *
         ORG   ENTER+12970
ORG0800  EQU   *
BBCCHH   DC    X'0000'
CCHH     DC    X'0000'
HH       DC    X'0000'
R        DC    F'0'
         SPACE 1
ORG0800X EQU   *
         ORG   ENTER+12984
ORG0900  EQU   *
DTALENG  DC    XL16'00'
         SPACE 1
SEEKCCW  CCW   7,BBCCHH,X'60',6
         SPACE 1
SETMASK  CCW   X'1F',FILEMASK,X'60',1
         SPACE 1
SEARIDE  CCW   X'31',CCHH,X'60',5       SEARCH R0 ID EQUAL
         SPACE 1
         CCW   8,SEARIDE,X'60',5        TIC  BACK
         SPACE 1
WTRDDATA CCW   6,R0DATA,X'60',8         READ R0 DATA.
         SPACE 1
WTRDCCW  DS    160D
         DS    160D
WTRDCCW2 EQU   WTRDCCW+1840            CCW LIST FOR READ CT/KEY/DATA.
SAVEVTOC DS    18D                     BUFFER TO SAVE VTOC
         SPACE 1
ALTBUFF  EQU   SAVEVTOC+50
         SPACE
* THESE CCWS MUST BE PLACED AT LEAST AT 3D90 TO AVOID BEING    @ZA01224
*   OVERLAYED BY SCAN ROUTINE
         DC    6D'0'                   MAINT AREA              @ZA01662
         SPACE 1
HAR0CCW  CCW   7,BBCCHH,X'40',6        SEEK
         CCW   X'1F',FILEMASK,X'40',1  SET FILE MASK.
ADDRSCH1 CCW   X'31',CCHH,X'60',5      SEARCH FOR R0
         CCW   8,13016,0,0             REPEAT UNTIL FOUND.
WTRDR0   CCW   5,DTABUFF,X'60',8        WRITE OR READ R0         S20201
ADDRSCH2 CCW   X'31',CCHH,X'60',5      SEARCH FOR R0
         CCW   8,13040,0,0             REPEAT UNTIL FOUND.
         CCW   6,DTABUFF,X'70',8       READ BACK CHECK R0 DATA.
         CCW   X'11',CLEAR,X'20',8     ERASE REST OF TRACK.
         SPACE 1
TAPEBUFS DS    3D'0'                   BUFFER FOR SENSE BYTES.  XL03128
         SPACE 2
*    BUFFERS USED FOR COUNTS AND DATA FROM DISK
         SPACE 2
ORG0900X EQU   *
         ORG   ENTER+15888
ORG1000  EQU   *
         DC    X'000000010100'
         DC    X'0020'
DTABUFF  DS    10D                      *                        S20201
         SPACE 2
OPRTAB   DC    C'JOB     '                                       S20201
         B     JOBANL                   SCAN JOB CARD STATEMENT  S20201
         DC    C'MSG     '              MESSAGE KEYWORD          S20201
         B     MODANL                   CHECK MSG DEVICE         S20201
         DC    C'DUMP    '              DUMP KEYWORD             S20201
         B     DUMPANL                  SET DUMP SWITCH          S20201
         DC    C'RESTORE '              RESTORE KEYWORD          S20201
         B     RSTRANL                  SET RESTORE SWITCH       S20201
         DC    C'VDRL    '              VDRL KEYWORD             S20201
         B     VDRLANL                  SCAN BEGIN ADDR          S20201
         DC    C'END     '              END ADDR KEYWORD         S20201
         B     ENDANL                   CHECK END ADDRESS        S20201
KEYTAB   DC    C'FROMDEV '              FROMDEV KEYWORD          S20201
         B     SVFRMDL                  FROM DEVICE              S20201
         DC    C'FROMADDR'              FROMADDR KEYWORD         S20201
         B     SVFRMDEV                 FROM ADDRESS             S20201
         DC    C'TODEV   '              TO DEVICE KEYWORD        S20201
         B     SVTOMDL                  TO DEVICE                S20201
         DC    C'TOADDR  '              TOADDR KEYWORD           S20201
         B     SVTODEV                  TO ADDRESS               S20201
         DC    C'VOLID   '              VOLID KEYWORD            S20201
         B     SVVOLID                  CHECK VOLID              S20201
         DC    C'BEGIN   '              BEGIN KEYWORD            S20201
         B     SVBEGIN                  BEGIN ADDRESS            S20201
         DC    C'BIN     '              BIN KEYWORD              S20201
         B     SETBINAD                 BIN NUMBER               S20201
         DC    C'MODE    '              MODE KEYWORD             S20201
         B     SETMODE                  TAPE MODE                S20201
         DC    C'MODEL   '              MODEL KEYWORD            S20201
         B     SVMOD                    MODEL FOR 2305           S20201
         DC    C'END     '              END KEYWORD              S20201
         B     SVEND                    END OF CARDS             S20201
SYINTAB  DC    C'1402'                  DEVICE TYPE              S20201
         DC    X'18'                    DEVICE CODE              S20201
         DC    C'2540'                  DEVICE TYPE              S20201
         DC    X'18'                    DEVICE CODE              S20201
         DC    C'3505'                  DEVICE TYPE             XL03145
         DC    X'18'                    DEVICE CODE             XL03145
         DC    C'1442'                  DEVICE TYPE              S20201
         DC    X'19'                    DEVICE CODE              S20201
         DC    C'2501'                  DEVICE TYPE               M5715
         DC    X'19'                    DEVICE CODE               M5715
         DC    C'2520'                  DEVICE TYPE               M5715
         DC    X'19'                    DEVICE CODE               M5715
MODTABL  DC    C'2400'                  DEVICE TYPE              S20201
         DC    X'08'                    DEVICE CODE              S20201
         DC    C'2420'                  DEVICE TYPE              S20201
         DC    X'08'                    DEVICE CODE              S20201
         DC    C'3400'                  DEVICE TYPE              M1828
         DC    X'08'                    DEVICE CODE              M1828
MODTAB   DC    C'1403'                  DEVICE TYPE              S20201
         DC    X'1A'                    DEVICE CODE              S20201
         DC    C'3211'                  DEVICE TYPE              S20201
         DC    X'1A'                    DEVICE CODE              S20201
         DC    C'1443'                  DEVICE TYPE              S20201
         DC    X'1B'                    DEVICE CODE              S20201
         DC    C'3800'                 DEVICE TYPE.            @X50ADTT
         DC    X'1C'                   DEVICE CODE.            @X50ADTT
         DC    C'1052'                  DEVICE TYPE              S20201
         DC    X'17'                    DEVICE CODE              S20201
         DC    C'3210'                  DEVICE TYPE              S20201
         DC    X'17'                    DEVICE CODE              S20201
         DC    C'3215'                  DEVICE TYPE              MS0022
         DC    X'17'                    DEVICE CODE              MS0022
DEVTAB   DC    C'2321'                  DEVICE TYPE              S20201
         DC    X'00'                    DEVICE CODE              S20201
         DC    C'2305'                  DEVICE TYPE              S20201
         DC    X'06'                    DEVICE CODE              S20201
DEVTABL  DC    C'2311'                  DEVICE TYPE              S20201
         DC    X'01'                    DEVICE CODE              S20201
         DC    C'2314'                  DEVICE TYPE              S20201
         DC    X'02'                    DEVICE CODE              S20201
         DC    C'3330'                  DEVICE TYPE              S20201
         DC    X'09'                    DEVICE CODE              S20201
         DC    C'3340'                  DEVICE TYPE             XL03130
         DC    X'0A'                    DEVICE CODE             XL03130
         DC    C'3350'                 DEVICE TYPE             @Z30RSAG
         DC    X'0B'                   DEVICE CODE             @Z30RSAG
DEVTAB1  DC    C'2400'                  DEVICE TYPE              S20201
         DC    X'08'                    DEVICE CODE              S20201
         DC    C'2420'                  DEVICE TYPE              S20201
         DC    X'08'                    DEVICE CODE              S20201
         DC    C'3400'                  DEVICE TYPE              M1828
         DC    X'08'                    DEVICE CODE              M1828
TABEND   DS    0F                       *                        S20201
DEVTB2   DC    C'2305-1'                DEVICE TYPE             XL03145
         DC    X'06'                    DEVICE CODE             XL03145
         DC    C'2305-2'                DEVICE TYPE             XL03145
         DC    X'07'                    DEVICE CODE             XL03145
         DC    C'3330-1'                DEVICE TYPE             XL03145
         DC    X'0D'                           CODE             XL03145
TABEND2  DS    0F                                               XL03145
         SPACE 2
KPRNT    MVC   PRWD(L80),CARDBUFF     MOVE CNTRL CARD TO BUFFER XL03130
WASH     LA    GR1,L79                 SIZE OF CARD IN BYTES    XL03130
         ST    GR9,SAVE9               SAVE REGISTER 9 TEMPORARILY
         LA    GR9,PRWD                LOAD BUFFER ADDRESS      XL03130
         AR    GR9,GR1                 LOCATE BUFFER AT END     XL03130
RANDLE   CLI   0(GR9),C' '             BLANK SPACE              XL03130
         BNE   MTS                     NO - EXIT                XL03130
         BCTR  GR9,ZERR                DECREMENT BUFFER ADDR    XL03130
         BCT   GR1,RANDLE              DECREMENT COUNTER        XL03130
MTS      LA    GR1,L1(GR1)             ADD 1 TO COUNTER         XL03130
         BAL   GR9,PRNT                PRINT THE CARD
         L     GR9,SAVE9               RELOAD REGISTER 9
         BR    GR9                      RETURN TO USER
         EJECT
ORG1000X EQU   *                                                   5274
         ORG   WTRDCCW                                             5274
ORG1100  EQU   *                                                   5274
*                       ***********************************************
*                       *        CTL STATEMENT ANALYSIS ROUTINES      *
*                       ***********************************************
CLRSCAN  XC    SWITCHRD(116),SWITCHRD  CLEAR SCAN WORK AREA.
         MVI   SEQSW,X'00'             CLEAR SEQSW
         XC    CONTAB(32),CONTAB       CLEAR CONDENSED CTL INFORMATION
TOSCAN   L     BASE12,SYSBASE          ESTABLISH SCAN ROUTINE BASE REG
         BAL   14,RDCARD               LINK TO CTL CARD SCAN ROUTINE
SCANANL  TM    SWITCHRD,X'80'          IS SCAN ERROR BIT ON
         BO    SCANERR                 YES-CONTOL STATEMENT ERROR.
         TM    SWITCHRD,X'40'          SCAN
         BZ    TEST3                   BRANCH IF OFF
         LTR   LENGTH,LENGTH           SCAN LENGTH REG ZERO
         BE    SCANERR                 YES-CONTROL STATEMENT ERROR.
TEST3    TM    SWITCHRD,X'08'          IS THIS A COMMAND
         BC    1,CTLPRNT               GO TO CTL STATEMENT PRINT
         TM    SWITCHRD,X'04'          IS THIS A KEYWORD
         BC    1,KEYLUP                YES - PERFORM KEYWORD LOOKUP
         B     SCANERR                 SCAN ERROR
CTLPRNT  TM    SEQSW,X'02'             IS SYSOUT DEFINED
         BC    14,OPRLUP               PERFORM COMMAND LLOKUP.
         CLI   JOBSW,X'FF'             YES - HAS JOB STM BEEN PRINTED
         BC    7,OPRLUP                YES-BYPASS INITIAL PRINT ROUTINE
         CLI   UCBSYO,T3800            IS WRITER A 3800?       @X50ADTT
         BNE   NO3800                  NO, SKIP 3800 CODE.     @X50ADTT
         STM   GR0,GR15,REGSV4         SAVE REGISTERS.         @X50ADTT
         LA    GR2,UCBSYO              GET UCB ADDRESS.        @X50ADTT
         LA    GR3,INITCCW             GET INITIALIZE CCW.     @X50ADTT
         BAL   LINK9,STARTIO           ISSUE EODSET TO 3800.   @X50ADTT
         LM    GR0,GR15,REGSV4         RESTORE REGISTERS.      @X50ADTT
NO3800   EQU   *                                               @X50ADTT
         STM   SCANADR,LENGTH,REGSV1   SAVE SCAN REGS
         MVC   PRWD+20(18),OPRMSG+29   SET PRINT DUMP/RESTORE HDR  6379
         LA    GR1,38                  LENGTH OF MESSAGE IN BYTES.
         BAL   LINK9,PRNT              PRINT HEADER MESSAGE.
         MVC   PRWD(80),DTABUFF        NO - PRINT JOB STATEMENT
         BAL   LINK9,WASH              CALL THE PRINT ROUTINE   XL03130
         MVC   PRWD(L80),MODSAV        PRINT MOD STATEMENT
         BAL   LINK9,WASH              CALL THE PRINT ROUTINE   XL03130
         MVI   JOBSW,X'00'             CLEAR JOBSW
         LM    SCANADR,LENGTH,REGSV1   RESTORE SCAN REGISTERS
*
*    OPERATOR LOOKUP ROUTINE
*
OPRLUP   LA    CSR3,OPRTAB             START OF COMMAND TABLE
         LA    CSR5,KEYTAB-12          END OF OPRTAB
SCANTBL  STC   LENGTH,SAVLGTH          SAVE LENGTH REGISTER FROM SCAN
         CLI   SAVLGTH,8               IS LENGTH 8 OR LESS.
         BH    SCANERR                 NO- LENGTH EXCEEDS 8
         LA    GR4,12                  INCREMENTING FACTOR
         MVI   SARG,C' '                CLEAR SEARCH ARGUMENT
         MVC   SARG+1(7),SARG
         BCTR  LENGTH,0
         EX    LENGTH,OPRLUP3          MOVE SCAN OPERATOR TO
OPRCMP   CLC   SARG(8),0(CSR3)         SARG
         BNE   OPRLUP2                 FIND
         LA    CSR3,8(0,CSR3)          SET UP BRANCH IF YES
         BR    CSR3                    ENTER PROPER ROUTINE
OPRLUP2  BXLE  CSR3,CSR4,OPRCMP        LOOP TO CONTINUE SEARCH
         B     SCANERR                 INVALID OPERATOR
OPRLUP3  MVC   SARG(1),0(SCANADR)      MOVE SCANADR TO SEARCH ARGUMENT
*
*    KEYWORD LOOKUP ROUTINE
*
KEYLUP   LA    CSR3,KEYTAB             START OF KEY TABLE
         LA    CSR5,SYINTAB-12         END OF KEY TABLE
         B     SCANTBL                 SEARCH FOR KEY WORD
*
JOBANL   MVC   DTABUFF(80),SWITCHRD+1  SAVE JOB STATEMENT
         OI    SEQSW,X'01'             SET SEQUENCE SWITCH
         OI    SWITCHRD,X'40'          SET BYPASS SW ON
         B     TOSCAN                  RETURN TO SCAN
*
MODANL   MVC   MODSAV(80),SWITCHRD+1   SAVE MOD STATEMENT
         TM    SEQSW,X'01'             CHECK STATEMENT SEQUENCE
         BC    14,ABSEQERR             SEQUENCE ERROR ROUTINE
         OI    SEQSW,X'02'             SET SEQUENCE SWITCH
         B     TOSCAN                  RETURN TO SCAN
*
DUMPANL  TM    SEQSW,X'03'             CHECK STATEMENT SEQUENCE
         BC    14,ABSEQERR             SEQUENCE ERROR
         TM    SEQSW,X'04'             DUMP STM PREVIOUSLY RECEIVED
         BC    1,ABSEQERR              YES - SEQUENCE ERROR
         TM    SEQSW,X'08'             RESTORE STM PREVIOUSLY RECEIVED
         BC    1,ABSEQERR              YES - SEQUENCE ERROR
         OI    SEQSW,X'04'             SET SEQUENCE SWITCH
         MVI   PRNTSW,X'01'            SET TO PRINT STATEMENT.
         B     TOSCAN                  RETURN TO SCAN
*
RSTRANL  TM    SEQSW,X'07'             CHECK STATEMENT SEQUENCE
         BC    1,ABSEQERR
         TM    SEQSW,X'03'             CHECK SEQUENCE
         BC    14,ABSEQERR             SEQUENCE ERROR
         OI    SEQSW,X'08'             SET RESTORE BIT IN SEQSW
         MVI   PRNTSW,X'01'            SET TO PRINT STATEMENT.
         B     TOSCAN                  RETURN TO SCAN
*
VDRLANL  TM    SEQSW,X'07'             CHECK STATEMENT SEQUENCE
         BC    1,VSRLANL1
         TM    SEQSW,X'0B'
         BO    ABSEQERR                 SEQUENCE ERROR           S20201
VSRLANL1 OI    SEQSW,X'10'             SET SEQUENCE SW
         MVI   PRNTSW,X'01'            SET TO PRINT STATEMENT.
         B     TOSCAN                  RETURN TO SCAN
*
ENDANL   MVC   PRWD(80),CARDBUFF       MOVE END CARD TO PRINT BUFFER.
         BAL   LINK9,WASH              PRINT THE END CARD.      XL03130
         NI    SWITCHRD,X'F7'          RESET COMMAND SW        @ZA01222
         BAL   LINK9,SETUP2                                    @ZA01222
         TM    SEQSW,X'07'             CHECK STATEMENT SEQUENCE.
         BC    1,ENDANL1
         TM    SEQSW,X'0B'             SEQUENCE CHECKING
         BC    1,ENDANL1
         TM    SEQSW,X'17'             SEQUENCE CHECKING
         BC    1,ENDANL1
         TM    SEQSW,X'1B'             SEQUENCE CHECKING
         BC    14,ABSEQERR             SEQUENCE ERROR
ENDANL1  B     SETUP2
*
SVMODEL  BAL   LINK5,GETPARM            GET PARAMETER
         MVC   SYOMDL(4),0(SCANADR)    SAVE MODEL NUMBER
         LA    CSR2,SYOMDL             ESTABLISH UCBSYO
         LA    CSR3,MODTABL            TABLE LIMITS START AND     M1828
         LA    CSR5,DEVTAB-5           END ADR RESPECTIVELY
         BAL   LINK9,DEVLUP
         MVC   UCBSYO(1),0(CSR3)       SET DEVICE TYPE CODE
         B     TOSCAN                  RETURN TO SCAN
*
SVDEV    BAL   LINK5,GETPARM            GET PARAMETER
         MVC   SYODEV(3),0(SCANADR)    SAVE DEVICE ADDRESS
         LA    CSR2,SYODEV
         BAL   LINK9,INTFCECK          CHECK INTERFACE ADR
         BC    15,SCANERR              GO TO SCAN ERROR ROUTINE
         STH   CSR1,UCBSYO+2           SET INTERFACE ADR
         B     TOSCAN                  RETURN TO SCAN
*
SVFRMDL  BAL   LINK5,GETPARM            GET PARAMETER
         MVC   FMODEL(L6),ZERR(SCANADR) SAVE FROM MODEL         XL03145
         B     TOSCAN                  RETURN TO SCAN
*
SVFRMDEV BAL   LINK5,GETPARM            GET PARAMETER
         MVC   FMDEV(3),0(SCANADR)     SAVE FROM DEVICE ADDRESS
         B     TOSCAN                  RETURN TO SCAN
SVTOMDL  CLI   SEQSW,X'03'             IS THIS A MSG CTL STATEMENT
         BC    8,SVMODEL               YES - SAVE MSG TODEV
         BAL   LINK5,GETPARM            GET PARAMETER
         MVC   TOMDL(L6),ZERR(SCANADR)     SAVE TO MODEL NUMBER XL03145
         B     TOSCAN                  RETURN
*
SVTODEV  CLI   SEQSW,X'03'             IS THIS A MSG CTL STATEMENT
         BC    8,SVDEV                 YES - SAVE MSG TOADDR
         BAL   LINK5,GETPARM            GET PARAMETER
         MVC   TODEV(3),0(SCANADR)     SAVE TO DEVICE ADDRESS
         B     TOSCAN                  RETURN
SVMOD    BAL   LINK5,GETPARM            GET PARAMETER            S20201
         MVC   MMOD(L1),ZERR(SCANADR)   SAVE MODEL               S20201
         B     TOSCAN                   RETURN TO SCAN           S20201
         SPACE 1
         SPACE 1
SETBINAD BAL   LINK5,GETPARM            GET PARAMETER
         MVC   BBCCHH+1(1),0(SCANADR)   MOVE BIN NUMBER
         NI    BBCCHH+1,X'0F'           CLEAR ZONE BIT
         MVC   CCHHALT-2(2),BBCCHH     PUT BIN NUMBER TO SEEK ALT. 4608
         B     TOSCAN                   RETURN
         SPACE 2
GETPARM  BAL   14,RDCARD                SCAN FOR PARAMETER
         TM    SWITCHRD,X'80'           IS SCAN ERROR SWITCH ON
         BC    1,SCANERR                YES - SCAN ERROR
         TM    SWITCHRD,X'02'           IS THIS A PARAMETER
         BC    14,SCANERR               NO - SCAN ERROR CONDITION
         BR    LINK5                    RETURN
         EJECT
SVBEGIN  LA    GR6,BGNADR+6             GET "SAVE" ADDRESS
         MVI   ENDSW,X'01'              SET VDRL END SWITCH
         B     ADDRLBL                  FINISH
         SPACE 1
SVVOLID LA    GR6,VOLLABEL+6          GET ADDRESS OF VOLID SAVE AREA
         MVI   ENDSW,X'30'              SET FOR FIRST VOLID PARAMETER
         B     ADDRLBL
         SPACE 1
SVEND    LA    GR6,ENDADRX+6            GET "SAVE" ADDRESS
         MVI   ENDSW,X'00'              CLEAR VDRL END SWITCH
         SPACE 2
ADDRLBL  BAL   14,RDCARD                SCAN FOR PARAMETER
         TM    SWITCHRD,X'80'           IS SCAN ERROR SW ON
         BC    1,SCANERR                YES- SCAN ERROR
         TM    SWITCHRD,X'04'           WAS THIS KEYWORD
         BO    KEYLUP                     YES
         TM    SWITCHRD,X'02'           IS THIS A PARAMETER
         BC    14,SCANERR               NO - SCAN ERROR
         CH    LENGTH,SIXX+2           LENGTH LESS THAN OR EQUAL 6BYTES
         BH    SCANERR                  NO - SCAN ERROR
         SPACE 1
         TM    ENDSW,X'10'             VOLID
         BO    ADDRLBLB                  YES, LEFT ADJUST
         SR    GR6,LENGTH              BEGINNING OF STORE(RIGHT ADJUST)
ADDRLBLA BCTR  LENGTH,0                DECREMENT LENGTH FOR EXICUTE
         EX    LENGTH,MOVEA             SAVE PARAMETER
         LA    GR6,12(GR6)             INCR VOL ID SAVE AREA   @ZA24202
         TM    ENDSW,X'30'              WAS THIS VOLID PARAMETER
         BZ    TOSCAN                     NO, GET ANOTHER KEY WORD
         BM    ADDRLBL1                   YES, BUT NOT FIRST
         MVC   VOLLBL1(6),VOLLABEL        YES, FIRST-SO SAVE VOLID
         MVI   ENDSW,X'10'              RESET END SWITCH
ADDRLBL1 TM    SWITCHRD,X'40'           WAS THIS LAST PARAMETER
         BO    TOSCAN                     YES
         B     RDCARD                   GET ANOTHER PARAMETER
         SPACE 1
SETMODE  BAL   LINK5,GETPARM           GET PARAMETER
         LA    GR6,2                   MAXIMUM SIZE OF PARAMETER
         CLR   GR6,LENGTH              IS LENGTH OF PARAMETER 2 BYTES
         BC    7,SCANERR               NO- CONTROL STATEMENT ERROR
         TM    SEQSW,X'0C'             IS PARAMETER ON DUMP/RESTORE CD
         BC    8,SCANERR               NO- CONTROL STATEMENT ERROR
         MVC   MODESET(2),0(SCANADR)   MOVE MODESET PARAMETER TO SAVE
         OC    MODESET(2),CTOEMASK     CHANGE C ZONE TO E ZONE
         TR    MODESET(2),ALTTT-225    CONVERT MODESET TO HEX.
         PACK  MODESET+1(2),MODESET(3) REMOVE EXTRANEOUS BITS
         CLI   MODESET+1,X'93'         TEST IF 800/CONVERTER ON 7 TRACK
         BE    MODEISOK                YES- MODE IS GOOD
         CLI   MODESET+1,X'53'         TEST IF 556/CONVERTER ON 7 TRACK
         BE    MODEISOK                YES- MODE IS GOOD
         CLI   MODESET+1,X'13'         TEST IF 200/CONVERTER ON 7 TRACK
         BE    MODEISOK                YES- MODE IS GOOD
         CLI   MODESET+1,X'CB'         TEST IF 800 BPI 9 TRACK
         BE    MODEISOK                YES- MODE IS GOOD
         CLI   MODESET+1,X'C3'         TEST IF 1600BPI 9 TRACK
         BE    MODEISOK                YES - MODE IS GOOD      XL03128
         CLI   MODESET+1,X'D3'         TEST IF 6250 BPI 9 TRK  XL03128
         BNE   SCANERR                 NO- CONTROL STATEMENT ERROR
MODEISOK MVI   MODESW,X'0F'            SET MODE SWITCH
         B     TOSCAN                  RETURN TO SCAN
         SPACE 1
MOVEA    MVC   0(1,GR6),0(SCANADR)      SAVE PARAMETER
         SPACE 1
ADDRLBLB S     GR6,SIXX                LEFT ADJUST ; VOLID
         B     ADDRLBLA                RETURN
         SPACE 2
*    DEVICE TYPE LOOKUP ROUTINE
*
*    REG CSR2 CONTAINS FACTOR TO WHICH COMPARSION IS MADE
*    REG CSR3 CONTAINS BEGIN ADR OF DEVICE LOOKUP TABLE
*    REG CSR5 CONTAINS END ADR OF DEVICE LOOKUP TABLE
*
*    REG CSR3 CONTAINS DEVICE TYPE CODE UPON RETURN TO CALLER
*
*
DEVLUP   LA    CSR4,L5                 INDEX THROUGH TABLE ENTRIES
DEVLUP1  CLC   0(4,CSR2),0(CSR3)       COMPARE ADR IN CSR2 TO DEVTAB
         BNE   DEVLUP2                 NO COMPARE
         CLI   L4(CSR2),X'60'          CHECK FOR MINUS SIGN     XL03145
         BE    DEVLP2A                 YES, MUST BE 6 CHAR DEV  XL03145
         LA    CSR3,L4(ZERR,CSR3)      RETURN  CSR3 = DEVICE TYPE CODE
         BR    LINK9
DEVLUP2  BXLE  CSR3,CSR4,DEVLUP1       CONTINUE SEARCH
DEVLP2A  LA    CSR3,DEVTB2              TABLE START             XL03145
         LA    CSR5,TABEND2-L7          TABLE END               XL03145
DEVCHKA  LA    CSR4,L7                  INDEX TABLE ENTRIES     XL03145
DEVLP1   CLC   ZERR(L6,CSR2),ZERR(CSR3) COMPARE ADDR TO DEVTAB  XL03145
         BNE   DEVLP2                   GET NEXT ENTRY          XL03145
         LA    CSR3,L6(ZERR,CSR3)       LOAD DEVICE CODE        XL03145
         BR    LINK9                    RETURN                  XL03145
DEVLP2   BXLE  CSR3,CSR4,DEVLP1         CONTINUE SEARCH         XL03145
         B     SCANERR                  ERROR, DEVICE NOT FOUND XL03145
*
*    CHANNEL CHECK AND CONVERSION ROUTINE
*
*    REG CSR2 CONTAINS THE CHANNEL AND UNIT ON ENTRY
*    REG CSR1 CONTAINS CONVERTED C/U UPON EXIT
*
*
*    CHECK UNIT ADDRESS
*
INTFCECK LA    CSR3,3                   SET COUNTER FOR 3 DIGITS  M6370
INTFCE1  TM    0(CSR2),X'F0'           IS DIGIT A NUMBER
         BC    1,INTFCE2               YES
         CLI   0(CSR2),C'A'            IS DIGIT A HEX DIGIT
         BC    4,0(0,LINK9)            NO - ERROR RETURN TO CALLER
         CLI   0(CSR2),C'F'            DIGIT LESS THAN HEX F
         BC    2,0(0,LINK9)            NO - ERROR RETURN TO CALLER
         TR    0(1,CSR2),ALTTT-X'C1'   CONVERT A THRU F            6379
         OI    0(CSR2),X'F0'           MAKE A THRU F PACKABLE      6379
INTFCE2  LA    CSR2,1(0,CSR2)          INCREASE LOCATOR BY 1
         BCT   CSR3,INTFCE1            ARE BOTH U DIGITS CHECKED
         SH    CSR2,CON03              RESET LOCATOR TO ORIGINAL POINT
         PACK  UNITADR(2),0(3,CSR2)    COMBINE CHANNEL AND UNIT ADR
         LH    CSR1,UNITADR            GET PACKED DEVICE ADR
         SLL   CSR1,16                  CLEAR HIGH ORDER BYTES    M6370
         SRL   CSR1,20                  CLEAR SIGN FROM PACKED    M6370
         BC    15,4(0,LINK9)           NORMAL RETURN TO CALLER
         SPACE 2
SCANERR  TM    SWITCHRD,X'08'          THIS ERROR OCCUR ON A COMMAND.
         BC    14,SCANPRT              NO--HANDLE AS PRINTED STATEMENT.
         MVI   PRNTSW,X'01'            YES-FORCE PRINTING OF MESSAGE.
         BAL   LINK14,RDCARD           GO TO PRINT BAD STATEMENT.
SCANPRT  MVC   PRWD(33),SCANMSG        PRINT SCAN ERROR MESSAGE.
         B     ERRPRINT                GO TO PRINT STATEMENT.
         SPACE 1
ABSEQERR TM    SWITCHRD,X'08'          THIS ERROR OCCUR ON A COMMAND.
         BC    14,ABSEQPRT             NO--HANDLE AS PRINTED STATEMENT.
         MVI   PRNTSW,X'01'            YES-FORCE PRINTING OF MESSAGE.
         BAL   LINK14,RDCARD           GO TO PRINT BAD STATEMENT.
ABSEQPRT MVC   PRWD(34),SEQMSG         SEQUENCE ERROR MESSAGE.
ERRPRINT MVC   PRWD+34(18),QUITJOB     JOB TERMINATED MESSAGE.
         LA    GR1,52                  MESSAGE SIZE.
         BAL   LINK9,PRNT              CALL PRINT ROUTINE.
         B     SYO3800                 CK SYSOUT DEV.          @X50ADTT
SCANMSG  DC    C'IBC102A  CONTROL STATEMENT ERROR.'
SEQMSG   DC    C'IBC103A  STATEMENT SEQUENCE ERROR.'
PRNTSW   DC    X'00'
SETUP2   LA    CSR2,FMODEL
         TM    SEQSW,X'04'             DUMP REQUEST
         BC    1,ALTER1                ADJUST DEVICE LOOKUP FOR DUMP
         TM    SEQSW,X'08'             RESTORE REQUESTED
         BC    1,ALTER2                ADJUST DEVICE LOOKUP FOR RESTORE
         B     ABSEQERR                CTL STATEMENT SEQUENCE ERROR
ALTER1   LA    CSR3,DEVTAB             TABLE LIMITS START ADR AND
         LA    CSR5,DEVTAB1-5          END ADR RESPECTIVELY       M1828
         B     DEVCHK1
ALTER2   LA    CSR3,DEVTABL            TABLE LIMITS START ADR AND M1828
         LA    CSR5,TABEND-5           END ADR RESPECTIVELY
DEVCHK1  BAL   LINK9,DEVLUP            PERFORM DEVICE LOOKUP
         MVC   UCBFRM(1),0(CSR3)
         LA    CSR2,FMDEV
         BAL   LINK9,INTFCECK          CHECK INTERFACE ADR
         BC    15,SCANERR              GO TO SCAN ERROR ROUTINE
         STH   CSR1,UCBFRM+2
SETUP3A  CLI   UCBFRM,T2305             CHECK FOR 2305           S20201
         BNE   SETUP3                   BR IF NOT A 2305         S20201
         CLI   MMOD,MODBIT              WAS MODEL SPECIFIED      S20201
         BE    SETUP3                   BYPASS MORE CHECKS       S20201
         CLI   MMOD,ONE                 WAS MODEL EQUAL TO 1     S20201
         BE    SETUP3                   BR IF YES                S20201
         CLI   MMOD,TWO                 IS IT A 2305-2           S20201
         BNE   SCANERR                  BRANCH IF MODEL INVALID  S20201
         OI    UCBFRM,ORONE             MAKE INDEX FOR 2305-2    S20201
*
SETUP3   LA    CSR2,TOMDL
         TM    SEQSW,X'04'             DUMP REQUEST
         BC    1,ALTER4
         TM    SEQSW,X'08'             RESTORE REQUESTED
         BNO   ABSEQERR                CTL STATEMENT SEQUENCE ERROR
ALTER3   LA    CSR3,DEVTAB             TABLE LIMITS START ADR AND
         LA    CSR5,DEVTAB1-5          END ADR RESPECTIVELY       M1828
         B     DEVCHK2
ALTER4   LA    CSR3,DEVTABL            TABLE LIMITS START ADR AND M1828
         LA    CSR5,TABEND-5           END ADR RESPECTIVELY
DEVCHK2  BAL   LINK9,DEVLUP            PERFORM DEVICE LOOKUP
         MVC   UCBTO(1),0(CSR3)
         LA    CSR2,TODEV
         BAL   LINK9,INTFCECK          CHECK INTERFACE ADR
         BC    15,SCANERR              GO TO SCAN ERROR ROUTINE
         STH   CSR1,UCBTO+2
         CLI   UCBFRM,T3330             DUMP FROM 3330          XL03145
         BNE   SETUP4A                  NO                      XL03145
         CLI   UCBTO,T333C              DUMP TO DEVICE 3330-C   XL03145
         BNE   SETUP4A                  NO                      XL03145
         MVI   UCBTO,T3330              SET UP AS LIKE DEVICE   XL03145
         MVI   DOSBIT,ON                SET FLAG FOR VTOC       XL03145
SETUP4A  CLI   UCBTO,T2305              IS DEVICE A 2305         S20201
         BNE   SETUP4                   BR IF NOT A 2305         S20201
         CLI   MMOD,MODBIT              WAS MODEL SPECIFIED      S20201
         BE    SETUP4                   BR IF NO MOD SPECIFIED   S20201
         CLI   MMOD,ONE                 WAS MODEL EQUAL TO 1     S20201
         BE    SETUP4                   BR IF MOD EQUAL 1        S20201
         CLI   MMOD,TWO                 IS IT A 2305-2           S20201
         BNE   SCANERR                  BRANCH IF MODEL INVALID  S20201
         OI    UCBTO,ORONE              MAKE INDEX FOR 2305-2    S20201
*
SETUP4   L     BASE12,SYSBASE           ESTABLISH UTILITY BASE REG
         BAL   LINK9,START1A            SET UP LIMITS FOR DEVICE
SETUP4B  TM    SEQSW,X'10'              IS THERE A VDRL STATEMENT
         BC    14,UTLPGM           ****LINKAGE POINT TO THE P/P
         PACK  CVBCOM(8),BGNADR(6)      PACK RELATIVE BEGINNING ADDRESS
         CVB   CSR1,CVBCOM             CONVERT GEGIN ADR TO BINARY
         ST    CSR1,BGNADR             STORE CONVERTED BEGIN ADR
         XC    CVBCOM(6),CVBCOM          CLEAR CVBOM
         TM    ENDSW,X'01'             VDRL END VALUE GIVEN
         BO    SKIPEND                 NO
         PACK  CVBCOM(8),ENDADRX(6)      PACK RELATIVE END ADDRESS
         CVB   CSR1,CVBCOM             CONVERT END ADR TO BINARY
         ST    CSR1,ENDADR             STORE CONVERTED END ADR
SKIPEND  XC    CVBCOM(6),CVBCOM         CLEAR CVBCOM
         CLC   ENDADR(4),BGNADR        IS BGNADR > ENDADR
         BC    4,SCANERR               YES - CTL STATEMENT ERROR
         SPACE 2
*    ROUTINE CONVERTS RELATIVE TRACK ADDRESS TO ACTUAL ADDRESS
*
         LH    CSR3,CYLINCRF+2         GET TC
         LCR   CSR3,CSR3                   FACTOR
RTACONV  L     CSR5,BGNADR             GET BEGIN ADR RTA VALUE
         LA    GR6,BGNADR               GET ADDRESS OF BEGIN RTA
         BAL   LINK9,RTACONV1           GO CONVERT IT
         TM    ENDSW,X'01'              VDRL END ADDRESS REQUIRED
         BO    UTLPGM                     NO
         L     CSR5,ENDADR              GET END RTA
         LA    GR6,ENDADR               GET ADDRESS OF END RTA
         BAL   LINK9,RTACONV1           GO CONVERT IT
         B     START1                   CALL UTILITY PROGRAM
         SPACE 1
RTACONV1 SR    CSR4,CSR4                CLEAR FOR DIVIDE
         CLI   UCBFRM,X'00'              IS IT 2321
         BE    RTACONMF                  YES, SPECIAL CONVERT
         DR    CSR4,CSR3                DVD RTA/TC CSR4=HH;CSR5=CC
         ST    CSR4,0(GR6)              HH IN TRK ADDRESS
         STH   CSR5,0(GR6)              CC IN TRK ADDRESS
RTACONV2 CLC   0(4,GR6),UPPRLMT1        ADDRESS LARGER THAN UPPERLIMIT
         BH    SCANERR                   YES, ERROR
         BR    LINK9                     NO, RETURN
         SPACE 1
*   CONVERT  FOR  2321
         SPACE 1
RTACONMF LA    CSR3,20                  GET TC FACTOR (20 TRKS/CYL)
         DR    CSR4,CSR3                RTA/20 CSR4=TRK;CSR5=CYL
         ST    CSR4,0(GR6)              SAVE TRK ADDRESS
         SR    CSR4,CSR4                CLEAR FOR ANOTHER DIVIDE
         LA    CSR3,5                   GET TC FACTOR (5 CYL/STRIP)
         DR    CSR4,CSR3                RTA/5  CSR4=CYL;CSR5=STRIP
         STC   CSR4,2(GR6)              SAVE CYLINDER ADDRESS
         SR    CSR4,CSR4                CLEAR FOR ANOTHER DIVIDE
         LA    CSR3,10                  GET TC FACTOR (10 STRIP/SUBC)
         DR    CSR4,CSR3                RTA/10 CSR4=STRIP;CSR5=SUBC
         STC   CSR4,1(GR6)              SAVE STRIP ADDRESS
         STC   CSR5,0(GR6)             SAVE SUBCELL ADDRESS.
         B     RTACONV2                  RETURN
UTLPGM   MVC   ENDADR(4),UPPRLMT1        GET END ADDRESS
         MVI   FULLDPSW,X'F0'          SET SWITCH TELLING FULL DUMP
         MVI   ENDSW,X'00'             CLEAR VDRL END SWITCH
         B     START1                   CALL UTILITY PROGRAM
DEVCTRL  DS    0D                                                S20201
D2321    DS    0D                       CODE 00                  S20201
         DC    X'000000EC'              CYLINDER CHANGE          S20201
         DC    X'13050413'              UPPER LIMIT (EXCLUD ALT) S20201
         DC    F'0'                     NOT USED                 S20201
         DC    X'0013'                  TRACKS/CYLINDER-1        S20201
         DC    X'0200'                  (MAX NO. OF RECORDS-1)X8 S20201
D2311    DS    0D                       CODE 01                  S20201
         DC    X'0000FFF6'              CYLINDER CHANGE          S20201
         DC    X'00C70009'              UPPER LIM (EXCLUD ALTS)  S20201
         DC    F'12'                    INDEX FOR RLINK2        XL03130
         DC    X'0009'                  TRACKS/CYLINDER-1        S20201
         DC    X'01D8'                  (MAX NO. OF RECORDS-1)X8 S20201
D2314    DS    0D                       CODE 02                  S20201
         DC    X'0000FFEC'              CYLINDER CHANGE          S20201
         DC    X'00C70013'              UPPER LIM (EXCLUD ALTS)  S20201
         DC    F'24'                    INDEX FOR RLINK2        XL03130
         DC    X'0013'                  TRACKS/CYLINDER-1        S20201
         DC    X'0240'                  (MAX NO. OF RECORDS-1)X8 S20201
         SPACE 1
         DS    2D                    DRUM SUPPORT DROPPED VS1/3 XL03130
UNITADR  DS    2C                      CONVERTED DEVICE ADDRESS
CON03    DC    AL2(3)                  CONSTANT OF 3
CTOEMASK DC    X'2020'                 CONVERT C ZONE TO E ZONE
ALTTT    DC    X'0A0B0C0D0E0FDDDDDD'   TABLE TO CONVERT TO HEX
         DC    X'DDDDDDDDDDDD'
         DC    X'00010203040506070809'
         DS    1C                       FILLER  1 BYTE          XL03130
         SPACE 1
D2305M1  DS    0D                       CODE 06                  S20201
         DC    X'0000FFF8'              CYLINDER CHANGE          S20201
         DC    X'002F0007'              UPPER LIMIT (EXCLUD ALT) S20201
         DC    F'0'                     NOT USED                 S20201
         DC    X'0007'                  TRACKS/CYLINDER-1        S20201
         DC    X'0108'                  (MAX NO. OF RCDS-1)X8    S20201
D2305M2  DS    0D                       CODE 07                  S20201
         DC    X'0000FFF8'              CYLINDER CHANGE          S20201
         DC    X'005F0007'              UPPER LIMIT (EXCLUD ALT) S20201
         DC    F'0'                     NOT USED                 S20201
         DC    X'0007'                  TRACKS/CYLINDER-1        S20201
         DC    X'0250'                  (MAX NO. OF RECORDS-1)X8 S20201
D2400    DS    0D                       CODE 08                  S20201
         DC    2F'0'                    NOT USED                 S20201
         DC    F'0'                     INDEX FOR RLINK2         S20201
         DC    F'0'                     NOT USED                 S20201
D3330    DS    0D                       CODE 09                  S20201
         DC    X'0000FFED'              CYLINDER CHANGE          S20201
         DC    X'01930012'              UPPER LIM (EXCLUD ALTS)  S20201
         DC    F'36'                    INDEX FOR RLINK2        XL03130
         DC    X'0012'                  TRACKS/CYLINDER-1        S20201
         DC    X'0308'                  (MAX NO OF RECORDS-1)X8  S20201
D3340    DS    0D                       CODE 0A  36MB          @Z30RSAG
         DC    X'0000FFF4'              CYL CHANGE              XL03130
         DC    X'015B000B'              UPPER LIM (EXCLUD ALTS) XL03130
         DC    F'0'                     UNUSED                  XL03130
         DC    X'00B'                   TRACKS/CYLINDER-1       XL03130
         DC    H'0392'                  (MAX NO OF RECORDS-1)X8 XL03130
D3350    DS    0D                      CODE 0B                 @Z30RSAG
         DC    X'0000FFE2'             CYLINDER CHANGE         @Z30RSAG
         DC    X'022A001D'             UPPER LIM (EXCLUD ALTS) @Z30RSAG
         DC    F'60'                   INDEX FOR RLINK2        @Z30RSAG
         DC    X'001D'                 TRACKS/CYLINDER - 1     @Z30RSAG
         DC    X'0348'                 (MAX NO RECORDS - 1)X8  @Z30RSAG
D3340M1  DS    0D                       CODE 0C  72MB           XL03130
         DC    X'0000FFF4'              CYL CHANGE              XL03130
         DC    X'02B7000B'              UPPER LIM (EXCLUD ALTS) XL03130
         DC    F'0'                     UNUSED                  XL03130
         DC    X'00B'                   TRACKS/CYLINDER-1       XL03130
         DC    H'0392'                  (MAX NO OF RECORDS-1)X8 XL03130
D3330MC  DS    0D                       CODE 0D                 XL03145
         DC    X'0000FFED'              CYLINDER CHANGE         XL03145
         DC    X'03270012'              UPPER LIM (EXCLUD ALTS) XL03145
         DC    F'48'                    INDEX FOR RLINK2        XL03145
         DC    X'0012'                  TRACKS/CYLINDER-1       XL03145
         DC    X'0308'                  (MAX NO OF RECORDS-1)X8 XL03145
     EJECT
BIT80    EQU   X'80'                   ERROR SWITCH
BIT40    EQU   X'40'                   BYPASS SWITCH
BIT20    EQU   X'20'                   EOF, PARAMETER FOLLOWS SWITCH
BIT10    EQU   X'10'                   FIRST ENTRY, PARTIAL PARAMETER
BIT08    EQU   X'08'                   COMMAND, COLUMN 72 NON-BLANK SW
BIT04    EQU   X'04'                   KEYWORD, COLUMN 72 NON-BLANK SW
BIT02    EQU   X'02'                   PARAMETER SWITCH
BIT01    EQU   X'01'                   RIGHT PAREN, LENGTH=0 SWITCH
EQUAL    EQU   C'='                    HEX 'EQUAL'
COMMA    EQU   C','                    HEX 'COMMA'
MINUS    EQU   C'-'                    HEX MINUS                 A30065
BLANKCOL EQU   C' '                    BLANK CHARACTER.
RESET0   EQU   X'00'                   RESET BITS
CARDBUFF EQU   SWITCHRD+1              CARD READ-IN AREA.
LASTCOLM EQU   SWITCHRD+71             LAST COLUMN
PARAMSW  EQU   SWITCHRD+81             PARAMETER FOLLOWS, CONTINUATION
SAVEPAPR EQU   SWITCHRD+83             SAVE AREA FOR PARTIAL PARAMETERS
COL72LG  EQU   SWITCHRD+103            COLUMN 72 SWITCH AND LENGTH SW
DELIMIN  EQU   SWITCHRD+106            DELIMITER INDICATORS
DELIMIN2 EQU   SWITCHRD+107            DELIMITER INDI
SAVE9    EQU   SWITCHRD+108            SAVE REGISTER 9 AREA
STORGR3  EQU   SWITCHRD+112            LOCATION WHERE SCAN REG3 STORED
         SPACE 1
RDCARD   STM   3,15,REGSV6+12          SAVE REGS 3-15, 1-2 PARAM REGS
         L     GR3,STORGR3             POINTER FROM PREVIOUS SCAN SAVED
         NI    SWITCHRD,X'7F'          RESET ERROR BIT
         TM    SWITCHRD,BIT10          TEST FIRST ENTRY SWITCH
         BC    8,KIRSCD                SWITCH OFF ON FIRST ENTRY
         TM    SWITCHRD,BIT40          TEST BYPASS SWITCH
         BC    1,KBYPO                 IF ON GO TO BYPASS ROUTINE
         TM    PARAMSW,BIT08           TEST READ CARD SWITCH
         BC    1,KGTCD                 IF ON, READ A CARD
         TM    PRNTSW,X'01'            IS PRINT SWITCH ON
         BC    8,KPFOL                 NO-DO NOT PRINT NOW
         BAL   LINK9,KPRNT             PRINT THE CARD
         OI    PRNTSW,X'20'            INDICATE CARD PRINTED
         NI    PRNTSW,X'FE'            CLEAR EXTRANEOUS BITS
KPFOL    TM    PARAMSW,BIT20           DOES A PARAMETER FOLLOW
         BC    1,SCANR                 YES- SCAN THE CARD
         TM    PARAMSW,BIT40           CONTINUATION SWITCH SET
         BC    1,KCONT                 YES- PROCESS CONTINUED PART
         LA    GR3,CARDBUFF            LOAD ADDRESS OF FIRST COLUMN
KNAME    CLI   0(GR3),BLANKCOL         IS COLUMN BLANK
         LA    GR5,LASTCOLM            LOAD 5 WITH COLUMN 71 OF CARD
         BE    KOMMD                   YES- GO TO COMMAND WORD ROUTINE
         CR    GR3,GR5                 TEST IF SCANNED TO COLUMN 71
         BE    KNOP                    YES- END OF CARD REACHED
         LA    GR3,1(GR3)              GO TO NEXT COLUMN
         B     KNAME                   CHECK FOR BLANK
KOMMD    LA    GR3,1(GR3)              SPACE TO NEXT COLUMN AFTER COMD
         OI    PARAMSW,BIT04           SET COMMAND SWITCH PARAM FOLLOW
         OI    SWITCHRD,BIT08          SET COMMAND BIT '08'
         NI    DELIMIN,RESET0          RESET DELIMITER INDICATORS
KABC     CLI   0(GR3),BLANKCOL         IS COLUMN BLANK
         BNE   SCAN                    NO- CHECK PARAMETER
         CR    GR3,GR5                 IS THIS THE END COLUMN
         BE    KNOP                    YES- END OF CARD REACHED
         LA    GR3,1(GR3)              ADJUST POINTER TO NEXT COLUMN
         B     KABC                    CONTINUE SCAN
KCONT    LA    GR3,SWITCHRD+16         SET POINTER TO COLUMN 16
         CLI   0(GR3),BLANKCOL         IS COL 16 BLANK         @ZA01678
         BE    SCANPRT                 YES-PRINT ERR MSG       @ZA01678
         NI    DELIMIN,RESET0          CLEAR DELIMITER SWITCHES
SCANR    NI    SWITCHRD,X'F7'          RESET COMMAND BIT
SCAN     NI    SWITCHRD,X'98'          RESET ALL BUT ERROR, 1ST ENTRY
         NI    PARAMSW,X'14'           RESET ALL BITS BUT COMD CNTL SW
         MVC   DELIMIN2(1),DELIMIN     SAVE DELIMITER SWITCH SETTINGS
         NI    COL72LG,X'0C'           RESET EXIT CONTROL SWITCH
         NI    DELIMIN,RESET0          CLEAR DELIMITER SWITCH
         SR    GR2,GR2                 CLEAR REGISTER
         LR    GR1,GR3                 SAVE POINTER TO PRESENT COLUMN
         LA    GR5,LASTCOLM            LOAD ADDRESS OF END COLUMN
KOMPAR   CLI   0(GR3),EQUAL            IS CHARACTER A DELIMITER
         BNH   DELIMIT                 YES-'EQUAL' CHARACTER OR LOWER
KOMPARA  LA    GR2,1(GR2)              ADD ONE TO LENGTH         A30065
         CR    GR3,GR5                 IS THIS THE END COLUMN
         BE    KPART                   YES-GO TO PARTIAL PARAMETER SAVE
         LA    GR3,1(GR3)              UP POINTER TO NEXT COLUMN
         B     KOMPAR                  CONTINUE SCANNING FOR DELIMITER
KNOP     OI    SWITCHRD,BIT80          FLAG AS NO COMD OR PARAM ON CARD
         LM    1,2,ZERO                CLEAR LENGTH AND SCAN REGISTERS
KNOPAR   OI    SWITCHRD,BIT40          NO KEYWORD OR PARAMETERS FOLLOW
KPASS    LA    GR3,1(GR3)              UP POINTER TO NEXT COLUMN
         NI    PARAMSW,X'EB'           CLEAR ALL BUT BYPASS-PART PARAM.
         ST    GR3,STORGR3             SAVE REG3 FOR NEXT ENTRY
         LM    3,15,REGSV6+12          RESTORE REGISTERS 3-15, 1,2 SET
         BR    LINK14                  RETURN TO USER.
DELIMIT  CLI   0(GR3),MINUS            IS THIS A HYPHEN          A30065
         BE    KOMPARA                 YES - THIS IS OKAY.       A30065
         CR    GR3,GR5                 IS THIS END COLUMN.       A30065
         BE    SETCC2                  YES- SET INDICATOR
         OI    COL72LG,BIT40           SET DELIMITER BEFORE LAST SWITCH
         TM    PARAMSW,BIT10           IS PARTIAL PARAMETER SWITCH ON
         BC    1,KPPAR                 YES-COMPLETE PARAMETER
         B     TESTPAR                 CHECK PARAMETER
LENGTH0  OI    COL72LG,BIT01           SET LENGTH EQUAL TO ZERO
         B     DELIM                   CHECK DELIMITERS
SETCC2   OI    COL72LG,BIT20           SET DELIMITER IN LAST SWITCH
         TM    PARAMSW,BIT10           IS PARTIAL PARAMETER SWITCH ON
         BC    1,KTERBY                YES- LENGTH IS TOO LONG
TESTPAR  SR    GR4,GR4                 CLEAR REGISTER
         AR    GR4,GR2                 ADD LENGTH
         BC    8,LENGTH0               LENGTH EQUALS ZERO, SET SWITCH
         OI    COL72LG,BIT02           SET LENGTH GREATER THAN ZERO
DELIM    CLI   0(GR3),EQUAL            TEST IF DELIMITER IS AN EQUAL
         BE    KEY                     YES- GO TO KEY WORD ROUTINE
         CLI   0(GR3),COMMA            TEST FOR COMMA
         BE    PARAMC                  YES- GO TO PARAMETER ROUTINE
         CLI   0(GR3),BLANKCOL         TEST FOR BLANK
         BE    PARBLANK                YES- GO TO HANDLE BLANK PARAM
         OI    SWITCHRD,BIT80          SET ERROR BIT
         TM    COL72LG,BIT20           IS DELIMITER IN END COLUMN
         BC    1,KSETP                 YES- SET PARAMETER FOLLOWS SW.
KINVAL   OI    SWITCHRD,BIT80          SET INVALID DELIMITER ERROR SW
         LA    GR2,1(GR2)              ADJUST LENGTH REGISTER
         LA    GR3,1(GR3)              ADJUST SCAN POINTER
         CLI   0(GR3),EQUAL            TEST FOR DELIMITER
         BNH   KINV                    YES- TWO DELIMITERS IN A ROW
         CR    GR3,GR5                 END COLUMN
         BL    KINVAL                  NO- SCAN SOME MORE
         TM    COL72LG,BIT08           IS COLUMN 72 BLANK
         BC    1,KTERBY                YES
         LA    GR2,1(GR2)              UP LENGTH REGISTER
         B     KPTERR                  ESTABLISH PARAMETER
KINV     TM    PARAMSW,BIT04           IS COMMAND CONTROL SWITCH ON
         BC    1,KPCMD                 YES- ADJUST POINTER TO NEXT ONE
PRFOL    OI    PARAMSW,BIT20           SET PARAMETER FOLLOWS SWITCH
         B     KPASS                   GO TO RETURN
KBYPO    CLI   SWITCHRD+72,BLANKCOL    IS COLUMN 72 BLANK
         BNE   KGTCD                   NO- GET ANOTHER CARD
         NI    SWITCHRD,BIT10          RESET PARTIAL PARAMETER SWITCH
         NI    PARAMSW,RESET0          RESET ENTRY CONTROL SWITCH
         NI    PRNTSW,X'DE'            RESET EXTRANEOUS BITS
         B     KGTCD                   READ A CARD
KIRSCD   OI    SWITCHRD,BIT10          SET FIRST ENTRY SWITCH
         SR    GR3,GR3                 CLEAR SCAN REGISTER
         STC   GR3,PARAMSW             CLEAR PARAMETER SWITCH
         STC   GR3,COL72LG             CLEAR COLUMN 72 SWITCH
KGTCD    LA    GR2,CARDBUFF            ADDRESS OF INPUT BUFFER
         BAL   LINK15,SYSIN            READ A CARD FROM INPUT DEVICE
         TM    PRNTSW,X'20'            TEST DELAY PRINT SETTING
         BC    8,KGTCDR                DD NOT PRINT CARD NOW
         BAL   GR9,KPRNT               PRINT CARD
KGTCDR   NI    COL72LG,RESET0          CLEAR COLUMN 72 SWITCH
         CLI   SWITCHRD+72,BLANKCOL    IS COLUMN 72 BLANK
         BNE   CLMNOTBL                COLUMN 72 IS NOT BLANK
         OI    COL72LG,BIT08           SET 72 BLANK SWITCH
RETURN   TM    SWITCHRD,BIT40          IS BYPASS SWITCH ON
         BC    1,KBYPO                 YES- BYPASS CARD
         B     KPFOL                   START SCAN
CLMNOTBL OI    COL72LG,BIT04           SET 72 NOT BLANK SWITCH IN CASE
         B     RETURN                  CHECK SOME MORE
PARBLANK TM    PARAMSW,BIT04           IS COMMAND SWITCH ON
         BC    1,KPCMD                 YES-GO TO ADJUST POINTER
         OI    SWITCHRD,BIT02          SET PARAMETER PRESENT BIT
         OI    DELIMIN,BIT08           SET BLANK DELIMITER SWITCH
DECID    TM    COL72LG,BIT20           IS DELIMITER IN END COLUMN
         BC    1,KWENT                 YES- SET TO READ A CARD
         TM    COL72LG,BIT01           IS LENGTH EQUAL TO ZERO
         BC    1,KFORZRO               YES-SET UP FOR ZERO LENGTH
         OI    PARAMSW,BIT20           SET PARAMETER FOLLOWS SWITCH
         TM    DELIMIN,BIT08           IS DELIMITER A BLANK
         BC    8,KPASS                 NO- RETURN WITH POINTERS SET
KETBYP   OI    SWITCHRD,BIT40          SET BYPASS SWITCH
         B     KPASS                   GET SET TO RETURN
KFORZRO  LM    GR1,GR2,ZERO            CLEAR REGISTERS 1 AND 2
         TM    DELIMIN,BIT08           IS DELIMITER A BLANK
         BC    1,KETRDCD               GO TO SET READ CARD AND CONTINUE
         OI    PARAMSW,BIT20           SET PARAMETER FOLLOWS SWITCH
         TM    DELIMIN,BIT80           IS DELIMITER AN EQUAL SIGN
         BC    1,KTER                  YES- SET UP ERROR CONDITION
         B     KPASS                   RETURN
KETRDCD  OI    PARAMSW,X'48'           SET TO READ CARD AND CONTINUE
         TM    DELIMIN2,BIT40          IS LAST DELIMITER A COMMA
         BC    1,KGTCD                 YES- READ A CARD
         TM    COL72LG,BIT08           IS COLUMN 72 BLANK
         BC    8,KETBYP                NO- SET BYPASS SWITCH AND RETURN
         LA    GR4,SWITCHRD+16         CARD COLUMN 16
         CR    GR3,GR4                 IS SCAN ON COLUMN 16
         BE    KETBYP                  YES- SET BYPASS SWITCH
         TM    DELIMIN2,EQUAL          WAS LAST DELIMITER AN EQUAL
         BC    1,KETBYP                YES- SET BYPASS SWITCH
KTERBY   OI    SWITCHRD,BIT40          SET BYPASS SWITCH
KTER     OI    SWITCHRD,BIT80          SET ERROR SWITCH
         B     KPASS                   RETURN
KWENT    OI    PARAMSW,X'48'           SET TO READ CARD AND CONTINUE
         TM    COL72LG,BIT08           IS COLUMN 72 BLANK
         BC    1,KETCTBL               YES- SET BYPASS SWITCH AND CHECK
         TM    COL72LG,BIT01           IS LENGTH EQUAL TO ZERO
         BC    1,KZERO                 NO- RETURN
         TM    DELIMIN,BIT08           IS DELIMITER A BLANK
         BC    1,KETBYP                YES- SET BYPASS SWITCH, RETURN
         B     KPASS                   RETURN
KZERO    SR    GR1,GR1                 CLEAR REGISTER
         TM    DELIMIN,BIT80           IS DELIMITER AN EQUAL
         BC    1,KTER                  YES- SET ERROR SWITCH
         TM    DELIMIN,BIT40           IS DELIMITER A COMMA
         BC    8,KGTCD                 NO- READ A CARD
         CLC   DELIMIN(1),DELIMIN2     IS DELIMITER SAME AS LAST
         BE    KPASS                   YES- RETURN
KETCTBL  OI    SWITCHRD,BIT40          SET BYPASS SWITCH
         TM    DELIMIN,BIT40           IS DELIMITER A COMMA
         BC    1,KTER                  YES- SET ERROR SWITCH
         B     KPASS                   RETURN
KEY      OI    SWITCHRD,BIT04          SET KEY WORD SWITCH
         OI    DELIMIN,BIT80           SET DELIMITER SWITCH
         B     DECID                   GO TO CHECK DELIMITER
PARAMC   OI    SWITCHRD,BIT02          SET PARAMETER BIT
         OI    DELIMIN,BIT40           SET DELIMITER COMMA SWITCH
         B     DECID                   GO TO CHECK DELIMITER
KPART    TM    PARAMSW,BIT10           IS PARTIAL PARAMETER SWITCH ON
         BC    1,KTERBY                YES-SET BYPASS AND ERROR SWITCH
KPTERR   OI    PARAMSW,BIT10           SET PARTIAL PARAMETER SWITCH
         TM    COL72LG,BIT08           IS COLUMN 72 BLANK
         BC    1,KLAST                 YES- GO TO SET PARAMETER BIT
         MVI   SAVEPAPR,BIT40          FLAG PARTIAL PARAMETER STORED
         MVC   SAVEPAPR+1(19),SAVEPAPR STORE PARTIAL PARAMETER
         STC   GR2,SWITCHRD+82         SAVE LENGTH OF PARTIAL PARAMETER
         BCTR  GR2,0                   DECREMENT COUNT FOR MOVE
         EX    GR2,MOVEP               MOVE PARTIAL PARAMETER TO BUFFER
         OI    PARAMSW,BIT40           SET CONTINUE BIT
         TM    COL72LG,BIT04           IS COLUMN 72 BLANK
         BC    1,KGTCD                 NO- GET A CARD
         OI    SWITCHRD,BIT80          YES- FLAG AS ERROR
         B     KETBYP                  SET BYPASS SWITCH
KLAST    OI    SWITCHRD,BIT02          SET PARAMETER BIT
         B     KETBYP                  SET BYPASS BIT
KPPAR    SR    GR4,GR4                 CLEAR REGISTER
         IC    GR4,SWITCHRD+82         LENGTH OF FIRST PART.
         LTR   GR2,GR2                 IS LENGTH OF 2ND PART ZERO.
         BC     8,KOMPL                YES-THE PARAMETER IS COMPLETE.
         LA     GR6,SAVEPAPR           NO--ADDRESS OF FIRST PART.
         AR    GR6,GR4                 ADDRESS TO MOVE IN 2ND PART.
         BCTR  GR2,0                   DECREMENT COUNT FOR MOVE
         EX    GR2,MOVEPP              RECREATE COMPLETE PARAMETER.
         LA    GR2,1(GR2)              UP COUNT TO WHERE IT WAS
KOMPL    AR     GR2,GR4                TOTAL LENGTH OF PARAMETER.
         LA    GR1,SAVEPAPR            LOAD PARAMETER BUFFER ADDRESS
         NI    COL72LG,X'0C'           CLEAR LENGTH BITS, LEAVE'72' BIT
         OI    COL72LG,X'42'           SET LENGTH GREATER THAN ZERO
         MVC   DELIMIN2(1),DELIMIN     SAVE DELIMITER SWITCH SETTINGS
         NI    DELIMIN,RESET0          CLEAR DELIMITER BITS
         NI    PARAMSW,X'EF'           RESET PARTIAL PARAMETER SWITCH
         B     DELIM                   CHECK DELIMITERS
KPCMD    LA    GR3,1(GR3)              ADJUST POINTER TO NEXT COLUMN
         CLI   0(GR3),BLANKCOL         IS COLUMN BLANK
         BNE   KPCMA                   NO- CHECK FOR COMMA
         CR    GR5,GR3                 IS THIS THE LAST COLUMN
         BE    KNOPAR                  YES- NO PARAMETER FOLLOWS
         B     KPCMD                   CONTINUE SCAN
KPCMA    CLI   0(GR3),COMMA            IS COMMA THE FIRST CHARACTER
         BE    KNOPAR                  YES- NO PARAMETER FOLLOWS
         BCTR  GR3,0                   BACK UP REGISTER 3 TO PARAMETER
         B     PRFOL                   GO TO SET UP FOR PARAMETER
KSETP    OI    PARAMSW,BIT10           SET PARAMETER FOLLOWS SWITCH
         LA    GR2,1(GR2)              UP LENGTH
         B     KPTERR                  GO TO SET PARTIAL PARAMETER BIT
MOVEP    MVC   SAVEPAPR(1),0(GR1)      STORE PARTIAL PARAMETER
MOVEPP   MVC   0(1,GR4),0(GR1)         RECREATES PARAMETER
         EJECT
ORG1101X EQU   *                                               @ZA06537
         ORG   ENTER+35100                                     @Z30RSAG
ORG1111  EQU   *                                               @ZA06537
         SPACE 2
         EJECT
MESS3    DC    C'IBC165A  ATTEMPT RESTORE TO WRONG DEVICE - JOB'
         DC    C' TERMINATED  '
LMESS3   EQU   *-MESS3                  LENGTH OF MSG 3        @ZA06537
         SPACE 1
MESS5    DC    C'IBC162A  MOUNT ANOTHER PACK ON    .'
         DC    C'  DEPRESS INTERRUPT KEY.'
LMESS5   EQU   *-MESS5                  LENGTH OF MSG 5        @ZA06537
FMESS5   EQU   31                       FILL AREA IN MSG 5     @ZA06537
LFMESS5  EQU   3                        LENGTH OF MSG 5 FILL   @ZA06537
         SPACE 1
MESS7    DC    C'IBC106A  THE VOLID IN CONTROL STATEMENT '
         DC    C'DOES NOT AGREE WITH ID IN VOL LABEL '
         DC    C'WHICH FOLLOWS'
LMESS7   EQU   *-MESS7                  LENGTH OF MSG 7        @ZA06537
         SPACE 1
ALTMSG   DC    C'IBC168I TRACK 0 HAS AN ALTERNATE ASSIGNED THIS'   8348
         DC    C'VOLUME HAS BECOME NON-IPL-ABLE'                   8348
LALTMSG  EQU   *-ALTMSG                 LENGTH OF ALT MSG      @ZA06537
         EJECT
ORG1201X EQU   *                                                 S20201
         ORG   ENTER+37376              ECF CODE AREA          @Z30RSAG
         SPACE 1
ECFCODE  BALR  7,0                      ESTABLISH BASE           S20201
         USING *,7                      NEW BASE                 S20201
ECFCODE1 MVC   CSWADDR(L3),L17(UCBREG)  GET RESTART CSW ADDR     S20201
         LH    ECFREG2,IOSESV+L18       FETCH BACKWARDS DISP     S20201
         N     ECFREG2,CLEARHI2         CLEAR HI-ORDER BYTES     S20201
         LH    ECFREG3,L18(UCBREG)      GET CCW FROM CSW         S20201
         N     ECFREG3,CLEARHI2         CLEAR HI-ORDER BYTES     S20201
         S     ECFREG3,EIGHT            GET CCW ADDR IN ERROR    S20201
         MVC   ECFCNT+L2(L2),L6(ECFREG3)  SAVE CCW COUNT         S20201
         CLI   ZERR(UCBREG),T3330       IS DEVICE A 3330         S20201
         BL    DISPZ                    NO,SET 2305 DISP        XL03145
         MVC   TOTALCNT+L1(L3),IOSESV+L15  FETCH RESTART DISP    S20201
         L     ECFREG1,TOTALCNT         LOAD                     S20201
         SR    ECFREG1,ECFREG2          CALC FORWARD DISP        S20201
         B     ECCNT                    SKIP 2305 CODE           S20201
DISPZ    L     ECFREG1,ECFCNT           GET CCW COUNT            S20201
         SR    ECFREG1,ECFREG2          DECR BY ECC DISP         S20201
         LH    ECFREG2,RESIDCNT         FETCH RESIDUAL COUNT     S20201
         N     ECFREG2,CLEARHI2         CLEAR HI-ORDER BYTES     S20201
         SR    ECFREG1,ECFREG2          DECR BY RESIDUAL COUNT   S20201
ECCNT    LA    ECFREG2,IOSESV+L20       PT. TO ECC DATA          S20201
         LA    ECFREG4,L3               SET LOOP COUNT           S20201
ECFLOOP1 CL    ECFREG1,ECFCNT           ERROR IN THIS SEGMENT    S20201
         BNL   ENDSEG                   NO                       S20201
         L     ECFREG5,ZERR(ECFREG3)    GET DATA ADDRESS          M3390
         N     ECFREG5,CLEARHI2         CLEAR OP CODE             M3390
         AR    ECFREG5,ECFREG1          ADD FORWARD DISPLACEMENT S20201
         CLI   ZERR(ECFREG2),ZERR       IS ECC BYTE ZERO         S20201
         BE    ECFINCR                  YES, SKIP EXCL-OR        S20201
         TM    L4(ECFREG3),SKIP         IS SKIP FLAG ON          S20201
         BO    ECFINCR                  YES, SKIP EXCL-OR        S20201
         XC    ZERR(L1,ECFREG5),ZERR(ECFREG2) DO IT              S20201
ECFINCR  LA    ECFREG2,L1(ECFREG2)      PT TO NEXT ECC BYTE      S20201
         CLI   ZERR(UCBREG),T23A5       IS THIS A 2305-1         S20201
         BNE   ECFINCR1                 NO, SKIP                 S20201
         LA    ECFREG1,L1(ECFREG1)      2305-1 GET 2 INCREMENTS  S20201
ECFINCR1 LA    ECFREG1,L1(ECFREG1)      INCREMENT LOOP           S20201
         BCT   ECFREG4,ECFLOOP1         DECREMENT LOOP COUNT     S20201
ENDSEG   CLI   ZERR(UCBREG),T3330       IS DEVICE A 3330         S20201
         BL    ECFOVCK                  NO, SKIP                XL03145
         TM    L4(ECFREG3),DCHAIN       IS THIS DATA CHAINING    S20201
         BZ    ECFOVCK                  NO,CHECK FOR CMD CHAIN   S20201
         L     ECFREG6,TOTALCNT         FETCH                    S20201
         S     ECFREG6,ECFCNT           DECR BY CCW COUNT        S20201
         ST    ECFREG6,TOTALCNT         RESTORE                  S20201
         S     ECFREG1,ECFCNT           DECR DISP BY CCW COUNT   S20201
         LA    ECFREG3,L8(ECFREG3)      INCR TO NEXT CCW         S20201
         CLI   ZERR(ECFREG3),CMDTIC     IS IT A TIC              S20201
         BNE   SETECNT                  NO, UPDATE ECFCNT        S20201
         L     ECFREG3,ZERR(ECFREG3)    YES, POINT TO TIC        S20201
SETECNT  MVC   ECFCNT+L2(L2),L6(ECFREG3) UPDATE COUNT AREA       S20201
         B     ECFLOOP1                 LOOP                     S20201
         TM    IOSESV+L1,CHNGCYL        IS OPERATION INCOMPLETE  S20201
         BO    ENDCHAIN                 YES, RETURN TO PROCESS   S20201
ECFOVCK  TM    L4(ECFREG3),CYLHI        IS COMMAND CHAINING ON   S20201
         BZ    ENDCHAIN                 BR IF LAST CCW IN CHAIN  S20201
         LA    ECFREG2,L8(ECFREG3)      PT TO NEXT CCW           S20201
         CLI   ZERR(ECFREG3),CMDTIC     IS IT A TIC              S20201
         BNE   NOTIC                    NO TIC, SKIP             S20201
         L     ECFREG2,ZERR(ECFREG2)    YES,PT TO NEXT CCW       S20201
NOTIC    TM    ZERR(ECFREG2),CNTFLD     COUNT OPERATION          S20201
         MVC   CSWTIC+L1(L3),CSWADDR    SET TIC ADDRESS           M3390
         BZ    ECFBLD1                  BR IF COUNT OPERATION    S20201
         MVC   CCWADD(L8),CSWTIC        DELETE RD CNT CCW        S20201
         B     ECFBLD                   BUILD RESTART CCW        S20201
ECFBLD1  MVC   CCWADD(L16),RDCNT        INSERT RD CNT CCW        S20201
ECFBLD   MVC   ECFCC+L2(L4),IOSESV+L8   GET CCHH ADDR          @ZA01650
         TM    ECFCC+L5,CYLHI           IS CYLINDER HI BIT ON    S20201
         BNO   ECFIDEQ                  BYPASS CYL CHANGE        S20201
         MVI   ECFCC+L3,CHNGCYL         INCR CYL BY 256          S20201
ECFIDEQ  NI    ECFCC+L5,X'1F'           CLEAR HI ORDER HD BYTE   S20201
         MVC   ECFADDR(L5),IOSESV+L8    MOVE IN CCHHR            S20201
         LM    BASE0,REGF,REGSAVE       RESTORE REGISTERS         M3390
         LA    RCAW,ECFSEEK             LOAD RESTART CCW         S20201
         LM    GR8,LINK15,REGSAVE+L32   RESTORE REST OF REGS      M3390
         BAL   LINK9,STARTIO            START IO                 S20201
ENDCHAIN EQU   *                        RETURN TO PROCESS        S20201
         DROP   7                       DROP BASE REG
         B     ECFRTN                   RETURN                    M3390
         EJECT
*        ***************************************************
*        *  CHANNEL PROGRAM AND CONSTANTS FOR ECF          *
*        ***************************************************
ECFSEEK  CCW   7,ECFCC,X'40',6          SEEK                     S20201
         CCW   X'1F',FILEMASK,X'40',1   SET FILE MASK            S20201
ECFTIC   CCW   X'31',ECFADDR,X'60',5    SEARCH ID EQUAL          S20201
         CCW   8,ECFTIC,0,0             REPEAT UNTIL FOUND       S20201
CCWADD   DS    2D                       CCW AREA                 S20201
RDCNT    CCW   X'12',CTDATA,X'70',8     READ COUNT CCW           S20201
CSWTIC   CCW   8,CSWADDR,0,0            TIC TO CSW ADDR          S20201
         SPACE 2
CTDATA   DC    X'00'                    COUNT READ IN AREA       S20201
CSWADDR  DC    XL3'00'                  CSW RESTART ADDR         S20201
ECFADDR  DC    XL5'00'                  SEARCH ID EQ ADDRESS     S20201
         DS    0H                                                S20201
ECFCC    DC    XL6'00'                  SEEK ADDRESS             S20201
TOTALCNT DC    F'0'                     START COUNT AREA         S20201
ECFCNT   DC    F'0'                     CCW COUNT AREA           S20201
CLEARHI2 DC    X'0000FFFF'              CLEAR HIGH ORDER BYTES   S20201
         SPACE 1
CTBUFFER DS    160D                     COUNT FIELDS READ IN HERE.
         EJECT
ERRMSGIO BALR  7,0                                             @ZA01662
         USING *,7                                             @ZA01662
         MVI   IOCONV,C' '              BLANK OUT IOCONV
         MVC   IOCONV+1(35),IOCONV
         UNPK  IOCONV(5),2(3,UCBREG)     UNPACK CHANNEL / UNIT
         UNPK  IOCONV+4(5),20(3,UCBREG)  UNPACK CSW STATUS FIELD
         UNPK  IOCONV+8(13),24(7,UCBREG)  UNPACK SENSE INFORMATION
         CLI   ZERR(UCBREG),T2400       IS THIS TAPE             S20201
         BE    NOTDASD                  NO- BYPASS CCHH PRINT    S20201
         CLI   ZERR(UCBREG),TDASD       IS THIS A DA DEVICE      S20201
         BH    NOTDASD                 NO--BYPASS PRINT OF CCHH.
         L     CSR4,4(UCBREG)          YES-POINTER TO CCW LIST.
         LTR   CSR4,CSR4               IS THERE A POINTER TO A CCW LIST
         BC    8,NOTDASD               NO--DO NOT PRINT CCHH.
         L     CSR4,0(CSR4)            POINTER TO SEEK ADDRESS.
         UNPK  IOCONV+24(9),2(5,CSR4)  UNPACK THE SEEK ADDRESS.
NOTDASD  OC    16(4,UCBREG),16(UCBREG) COMMAND CODE FROM CSW OR CAW?
         BC    4,CSWEXIT               CSW--GO TO CSWEXIT.
         SPACE 1
         L     CSR4,4(UCBREG)          CAW--GET COMMAND CODE FROM CAW.
         B     CAWEXIT                 GO TO CAW EXIT .
         SPACE 1
CSWEXIT  L     CSR4,16(UCBREG)         GET ADDRESS IN CSW AT INTERRUPT.
         S     CSR4,EIGHT              GET ADDRESS OF CCW THAT INTERPTD
         SPACE 1
CAWEXIT  UNPK  IOCONV+20(3),0(2,CSR4)   UNPACK COMMAND CODE TO PRINT
         TR    IOCONV(32),IOTAB-240    TRANSLATE TO EBCDIC.
         L     WORK4,ERRORMSG          PUT ADDRESS OF ERRMSG IN REG 4
         AR    WORK4,ERREG1            ADD VALUE OF ERREG1 TO REG. 4
         MVI   PRWD,C' '               CLEAR PRINT AREA BEFORE     8407
         MVC   PRWD+1(131),PRWD        INSERTING MESSAGE.          8407
         MVC   PRWD(4),IBC2             INSERT MSG HEADER        S20201
         MVC   PRWD+4(20),0(WORK4)      INSERT INDEXED MSG       S20201
         MVC   PRWD+26(3),IOCONV+1     INSERT CHANNEL/UNIT IN MSG
         MVC   PRWD+30(2),IOCONV+20    INSERT OP CODE IN MSG
         MVC   PRWD+33(4),IOCONV+4     INSERT CSW STATUS IN MSG
         MVC   PRWD+38(12),IOCONV+8    INSERT SENSE INFORMATION
         MVC   PRWD+52(8),IOCONV+24    MOVE IN SEEK ADDRESS IF ANY.
         BAL   GR15,MORSENSE            CHECK IF DIRECT ACCESS   S20201
         LM    0,15,REGSV7             RESTORE REGS
         LA    CSR1,ONE04               MESSAGE LENGTH           S20201
         DROP  7                                               @ZA01662
         B     PRNT                                            @ZA01662
         EJECT
*      ********************************************
*      * INDEXING FACTOR TO ERROR MESSAGE TABLE.  *
*      ********************************************
               SPACE 2
EMES01   EQU   0                        COMMAND REJECT           S20201
EMES02   EQU   20                       INTERVENTION REQUIRED    S20201
EMES03   EQU   40                       BUS OUT CHECK            S20201
EMES04   EQU   60                       EQUIPMENT CHECK          S20201
EMES05   EQU   80                       DATA CHECK               S20201
EMES06   EQU   100                      OVER RUN CHECK           S20201
EMES08   EQU   120                      DATA CONVERTER CHECK     S20201
EMES09   EQU   140                      END OF CYLINDER          S20201
EMES10   EQU   160                      INVALID ADDRESS ERROR    S20201
EMES11   EQU   180                      NOT AVAILIABLE           S20201
EMES12   EQU   200                      TAPE READ DATA CHECK     S20201
EMES37   EQU   220                      INVALID TRK FORMAT       S20201
EMES14   EQU   240                      TRACK OVERRUN ERROR      S20201
EMES15   EQU   260                      FILE PROTECTED DEVICE    S20201
EMES35   EQU   280                      BLANK TRACK              S20201
EMES17   EQU   300                      DASD NO RECORD FOUND     S20201
EMES18   EQU   320                      END OF TEST TABLE        S20201
EMES19   EQU   340                      SHOULD NEVER OCCUR       S20201
EMES20   EQU   360                      CHANNEL CONTROL CHECK    S20201
EMES21   EQU   380                      INTERFACE CONTROL CHK    S20201
EMES22   EQU   400                      CHANNEL DATA CHECK       S20201
EMES23   EQU   420                      DASD OVERFLOW INCOMPLETE S20201
EMES24   EQU   440                      PROGRAM CHECK            S20201
EMES25   EQU   460                      PROTECTION CHECK         S20201
EMES26   EQU   480                      UNIT EXCEPTION           S20201
EMES27   EQU   500                      INCORRECT LENGTH         S20201
EMES28   EQU   520                      CHAINING CHECK           S20201
EMES29   EQU   540                      INVALID COMMAND SEQUENCE S20201
EMES30   EQU   560                      SEEK CHECK ERROR         S20201
EMES31   EQU   580                      TAPE WRITE DATA CHECK    S20201
EMES32   EQU   600                      TAPE AT LOAD POINT       S20201
EMES34   EQU   620                      MISSING ADDRESS MARKER   S20201
EMES43   EQU   640                      WRITE INHIBITED           M4698
         EJECT
*              **********************************
*              *  IOPRNT ERROR MESSAGE TABLE.   *
*              **********************************
               SPACE 2
ERRMSG   DC    C'01W COMMAND REJECT  '                           S20201
         DC    C'02A INTERV. REQUIRED'                           S20201
         DC    C'03W BUS OUT CHECK   '                           S20201
         DC    C'04W EQUIPMENT CHECK '                           S20201
         DC    C'05W DATA CHECK      '                           S20201
         DC    C'06W OVER RUN        '                           S20201
         DC    C'08W DATA CONV. CHECK'                           S20201
         DC    C'09W END OF CYLINDER '                           S20201
         DC    C'10W INVALID ADDRESS '                           S20201
         DC    C'11W NOT AVAILIABLE  '                           S20201
         DC    C'12W READ DATA CHECK '                           S20201
         DC    C'42W INVALID TRK FMT '                           S20201
         DC    C'14W TRACK OVERRUN   '                           S20201
         DC    C'15W FILE PROTECTED  '                           S20201
         DC    C'35W BLANK TRACK     '                           S20201
         DC    C'17W NO RECORD FOUND '                           S20201
         DC    C'18W  INVALID ERROR  '                           S20201
         DC    C'19W  WRONG ERROR    '                           S20201
         DC    C'20W CHAN. CTRL ERROR'                           S20201
         DC    C'21W INTERFACE ERROR '                           S20201
         DC    C'22W CHAN. DATA CHECK'                           S20201
         DC    C'23W DASD OVERFLOW   '                           S20201
         DC    C'24W PROGRAM CHECK   '                           S20201
         DC    C'25W PROTECTION CHECK'                           S20201
         DC    C'26W UNIT EXCEPTION  '                           S20201
         DC    C'27W INCORRECT LENGTH'                           S20201
         DC    C'28W CHAINING CHECK  '                           S20201
         DC    C'29W COMMAND SEQ. ERR'                           S20201
         DC    C'30W SEEK CHECK ERROR'                           S20201
         DC    C'31W WRITE DATA CHECK'                           S20201
         DC    C'32W TAPE--LOAD POINT'                           S20201
         DC    C'34W MISSING ADR-MARK'                           S20201
         DC    C'43W WRITE INHIBITED '  WRITE INHIBITED           M4698
         EJECT
         END   START
CLR8291 DUPLICATE ENTRY FOR SEQUENCE # 000030
CLR8291 DUPLICATE ENTRY FOR SEQUENCE # 000060
