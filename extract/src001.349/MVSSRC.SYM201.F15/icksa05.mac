         TITLE '***********  ICKSA05  SYSTEM ADAPTER UTIME MODULE  *****
               *********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
ICKSA05  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'ICKSA05   78.192'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         MVC   @PC00001(20),0(@01)                                 0002
*                                      /* NEW BASE FOR THE GLOBAL    */
*                                      /* DATA TABLE                 */
*                                                                  0193
*        /************************************************************/
*        /*                                                          */
*        /* SET BASE FOR THE GLOBAL DATA TABLE                       */
*        /*                                                          */
*        /************************************************************/
*                                                                  0193
*        GDTPR = ADDR(GDTTBLX);                                    0193
         L     GDTPR,@PC00001                                      0193
*        OLDERID2 = NEWERID2;                                      0194
         L     @10,GDTTR2(,GDTPR)                                  0194
         MVC   @TS00001(95),NEWERID2(@10)                          0194
         MVC   OLDERID2(95,@10),@TS00001                           0194
*        NEWID2 = 'SA05';                                          0195
*                                                                  0195
         MVC   NEWID2(4,@10),@CC00481                              0195
*        /************************************************************/
*        /*                                                          */
*        /* INITIALIZE DAYS PER MONTH AREA                           */
*        /*                                                          */
*        /************************************************************/
*                                                                  0196
*        MONTO = MONFROM;                                          0196
*                                                                  0196
         MVC   MONTO(11),MONFROM                                   0196
*        /************************************************************/
*        /*                                                          */
*        /* IF A FOURTH ARGUMENT IS SPECIFIED, BUT THIS ARGUMENT IS  */
*        /* NOT 'FORMAT', 'HSECOND', OR 'CLOCK', THEN CALL           */
*        /* THE UABORT ROUTINE.                                      */
*        /*                                                          */
*        /************************************************************/
*                                                                  0197
*        IF TILN = 4 & TIFORM ^= FORMAT & TIFORM ^= HSECOND &      0197
*          TIFORM ^= CLOCK                                         0197
*          THEN                                                    0197
*                                                                  0197
         L     @10,@PC00001+16                                     0197
         CLI   TILN(@10),4                                         0197
         BNE   @RF00197                                            0197
         L     @10,@PC00001+12                                     0197
         CLC   TIFORM(4,@10),@CC00139                              0197
         BE    @RF00197                                            0197
         CLC   TIFORM(4,@10),@CC00141                              0197
         BE    @RF00197                                            0197
         CLC   TIFORM(4,@10),@CC00143                              0197
         BE    @RF00197                                            0197
*            DO;                                                   0198
*              RESPECIFY(REG13,REG14,REG15) RSTD;                  0199
*              REG15 = ARGERR;                                     0200
         LA    REG15,40                                            0200
*              REG14 = GDTABT;                                     0201
         L     REG14,GDTABT(,GDTPR)                                0201
*              REG13 = GDTABH;                                     0202
         L     REG13,GDTABH(,GDTPR)                                0202
*              GEN(BR    REG14);                                   0203
         BR    REG14
*              RESPECIFY(REG13,REG14,REG15)UNRSTD;                 0204
*            END;                                                  0205
*                                                                  0205
*        /************************************************************/
*        /*                                                          */
*        /* CHECK IF DATE AND TIME IS TO BE FORMATTED                */
*        /*                                                          */
*        /************************************************************/
*                                                                  0206
*        IF TILN = 4 & TIFORM = FORMAT                             0206
*          THEN                                                    0206
@RF00197 L     @10,@PC00001+16                                     0206
         CLI   TILN(@10),4                                         0206
         BNE   @RF00206                                            0206
         L     @10,@PC00001+12                                     0206
         CLC   TIFORM(4,@10),@CC00139                              0206
         BNE   @RF00206                                            0206
*            DO;                                                   0207
*                                                                  0207
*              /******************************************************/
*              /*                                                    */
*              /* OBTAIN PACKED DECIMAL DATE AND TIME BY ISSUING     */
*              /* THE DEC FORM OF THE TIME MACRO.  THEN UNPACK THE   */
*              /* TIME INTO THE VARIABLE TIME                        */
*              /*                                                    */
*              /******************************************************/
*                                                                  0208
*              RESPECIFY (REG0,REG1) RSTD;                         0208
*LTIME1:       GEN(TIME  DEC);                                     0209
LTIME1   TIME  DEC
*              GEN(ST    REG0,TIME);                               0210
         ST    REG0,TIME
*              GEN(UNPK  TIME(9),TIME(4));                         0211
*                                                                  0211
         UNPK  TIME(9),TIME(4)
*              /******************************************************/
*              /*                                                    */
*              /* SHIFT HOUR VALUE LEFT AND INSERT COLON AFTER HOUR  */
*              /* VALUE,                                             */
*              /* SHIFT MINUTE VALUE LEFT AND INSERT COLON AFTER     */
*              /* MINUTE VALUE,                                      */
*              /* INSERT FORMATTED TIME INTO TITIME FOR THE USER     */
*              /*                                                    */
*              /******************************************************/
*                                                                  0212
*              TIME(1:2)=TIME(3:4);                                0212
         MVC   TIME(2),TIME+2                                      0212
*              TIME(3)=':';                                        0213
*                                                                  0213
         MVI   TIME+2,C':'                                         0213
*              TIME(4:5)=TIME(5:6);                                0214
         MVC   @TS00001(2),TIME+4                                  0214
         MVC   TIME+3(2),@TS00001                                  0214
*              TIME(6)=':';                                        0215
*                                                                  0215
         MVI   TIME+5,C':'                                         0215
*              TITIME(1:8)=TIME(1:8);                              0216
*                                                                  0216
         L     @10,@PC00001+4                                      0216
         MVC   TITIME(8,@10),TIME                                  0216
*              /******************************************************/
*              /*                                                    */
*              /* CONVERT PACKED DECIMAL YEAR AND DAY (00YYDDDF) TO  */
*              /* BINARY, F BEING THE SIGN CHARACTER                 */
*              /*                                                    */
*              /******************************************************/
*                                                                  0217
*              GEN(SR    REG0,REG0);                               0217
         SR    REG0,REG0
*              GEN(ST    REG0,DBLWORD);                            0218
         ST    REG0,DBLWORD
*              GEN(ST    REG1,DBLWORD+4);                          0219
         ST    REG1,DBLWORD+4
*              GEN(CVB   REG1,DBLWORD);                            0220
*                                                                  0220
         CVB   REG1,DBLWORD
*              /******************************************************/
*              /*                                                    */
*              /* SEPARATE THE YEAR AND DAY, STORE BINARY DAY NUMBER */
*              /* IN DAY, STORE BINARY YEAR NUMBER IN YEAR           */
*              /*                                                    */
*              /******************************************************/
*                                                                  0221
*              GEN(D     REG0,=F'1000');                           0221
         D     REG0,=F'1000'
*              GEN(STH   REG0,DAY);                                0222
         STH   REG0,DAY
*              GEN(STH   REG1,YEAR);                               0223
         STH   REG1,YEAR
*              RESPECIFY (REG0,REG1) UNRSTD;                       0224
*                                                                  0224
*              /******************************************************/
*              /******************************************************/
*              /*                                                    */
*              /* USE CALENDAR CONVERSION ALGORITHM TO OBTAIN DATE IN*/
*              /* DAY, MONTH, AND YEAR--PUNT IN YEAR 2000            */
*              /*                                                    */
*              /******************************************************/
*              /******************************************************/
*                                                                  0225
*              /******************************************************/
*              /*                                                    */
*              /* IF YEAR IS A LEAP YEAR, THEN REINITIALIZE THE MONTH*/
*              /* FEBRUARY TO 29 DAYS                                */
*              /*                                                    */
*              /******************************************************/
*                                                                  0225
*              IF YEAR//4 = 0                                      0225
*                THEN                                              0225
         LH    @00,YEAR                                            0225
         SRDA  @00,32                                              0225
         D     @00,@CF00044                                        0225
         LTR   @00,@00                                             0225
         BNZ   @RF00225                                            0225
*                  MTHS(2) = 29;                                   0226
*                                                                  0226
         MVI   MTHS+1,X'1D'                                        0226
*              DOCNTRL = ON;                                       0227
*                                                                  0227
@RF00225 OI    DOCNTRL,B'10000000'                                 0227
*              /******************************************************/
*              /*                                                    */
*              /* CALCULATE DAY AND MONTH                            */
*              /*                                                    */
*              /******************************************************/
*                                                                  0228
*TIDO:         DO I=1 TO 11 WHILE(DOCNTRL = ON);                   0228
TIDO     LA    I,1                                                 0228
@DL00228 TM    DOCNTRL,B'10000000'                                 0228
         BNO   @DC00228                                            0228
*                DAY = DAY - MTHS(I);                              0229
*                                                                  0229
         LH    @10,DAY                                             0229
         SLR   @08,@08                                             0229
         IC    @08,MTHS-1(I)                                       0229
         SLR   @10,@08                                             0229
         STH   @10,DAY                                             0229
*                /****************************************************/
*                /*                                                  */
*                /* CHECK IF DAY VALUE LESS THAN OR EQUAL ZERO       */
*                /*                                                  */
*                /****************************************************/
*                                                                  0230
*                IF DAY <= 0                                       0230
*                  THEN                                            0230
         LTR   @10,@10                                             0230
         BP    @RF00230                                            0230
*                    DOCNTRL = OFF;                                0231
         NI    DOCNTRL,B'01111111'                                 0231
*              END TIDO;                                           0232
*                                                                  0232
@RF00230 AL    I,@CF00165                                          0232
         C     I,@CF00263                                          0232
         BNH   @DL00228                                            0232
@DC00228 DS    0H                                                  0233
*              /******************************************************/
*              /*                                                    */
*              /* SET DAY AND MONTH VALUES                           */
*              /*                                                    */
*              /******************************************************/
*                                                                  0233
*              IF DOCNTRL = OFF                                    0233
*                THEN                                              0233
         TM    DOCNTRL,B'10000000'                                 0233
         BNZ   @RF00233                                            0233
*                  DO;                                             0234
*                    I = I - 1;                                    0235
         BCTR  I,0                                                 0235
*                    DAY = DAY + MTHS(I);                          0236
         SLR   @10,@10                                             0236
         IC    @10,MTHS-1(I)                                       0236
         AH    @10,DAY                                             0236
         STH   @10,DAY                                             0236
*                  END;                                            0237
*              MONTH = I;                                          0238
*                                                                  0238
@RF00233 STH   I,MONTH                                             0238
*              /******************************************************/
*              /*                                                    */
*              /* CONVERT DATE TO DECIMAL, UNPACK IT, AND FORMAT IT  */
*              /* INTO TIDATE FOR THE USER WITH A SLASH SEPARATING   */
*              /* MONTH FROM DAY AND DAY FROM YEAR                   */
*              /*                                                    */
*              /******************************************************/
*                                                                  0239
*              RESPECIFY(REG0) RSTD;                               0239
*              GEN(LH    REG1,MONTH);                              0240
         LH    REG1,MONTH
*              GEN(M     REG0,=F'1000');                           0241
         M     REG0,=F'1000'
*              GEN(AH    REG1,DAY);                                0242
         AH    REG1,DAY
*              GEN(M     REG0,=F'1000');                           0243
         M     REG0,=F'1000'
*              RESPECIFY (REG0) UNRSTD;                            0244
*              GEN(AH    REG1,YEAR);                               0245
         AH    REG1,YEAR
*              GEN(CVD   REG1,DBLWORD);                            0246
         CVD   REG1,DBLWORD
*              GEN(UNPK  DATETEMP(8),DBLWORD(8));                  0247
         UNPK  DATETEMP(8),DBLWORD(8)
*              GEN(MVZ   DATETEMP+7(1),DATETEMP+6);                0248
         MVZ   DATETEMP+7(1),DATETEMP+6
*              DATETEMP(3) = '/';                                  0249
         MVI   DATETEMP+2,C'/'                                     0249
*              DATETEMP(6) = '/';                                  0250
         MVI   DATETEMP+5,C'/'                                     0250
*              TIDATE(1:8) = DATETEMP(1:8);                        0251
         L     @10,@PC00001+8                                      0251
         MVC   TIDATE(8,@10),DATETEMP                              0251
*            END;                                                  0252
*          ELSE  /* DATE AND TIME NOT TO BE FORMATTED                */
*            DO;                                                   0253
         B     @RC00206                                            0253
@RF00206 DS    0H                                                  0254
*              IF TILN = 4 & TIFORM = HSECOND                      0254
*                THEN                                              0254
         L     @10,@PC00001+16                                     0254
         CLI   TILN(@10),4                                         0254
         BNE   @RF00254                                            0254
         L     @10,@PC00001+12                                     0254
         CLC   TIFORM(4,@10),@CC00141                              0254
         BNE   @RF00254                                            0254
*                  DO;                                             0255
*                                                                  0255
*                    /************************************************/
*                    /*                                              */
*                    /* OBTAIN THE TIME IN HUNDREDTHS OF A           */
*                    /* SECOND BY ISSUING THE BIN FORM OF            */
*                    /* THE TIME MACRO.                              */
*                    /*                                              */
*                    /************************************************/
*                                                                  0256
*                    RESPECIFY (REG0,REG1) RSTD;                   0256
*LTIME3:             GEN(TIME  BIN);                               0257
LTIME3   TIME  BIN
*                    GEN(ST    REG0,TIME);                         0258
         ST    REG0,TIME
*                    RESPECIFY (REG0) UNRSTD;                      0259
*                                                                  0259
*                    /************************************************/
*                    /*                                              */
*                    /* INSERT TIME IN HUNDREDTHS OF A               */
*                    /* SECOND INTO TITIME FOR USER.                 */
*                    /*                                              */
*                    /************************************************/
*                                                                  0260
*                    TITIME(1:4) = TIME(1:4);                      0260
         L     @10,@PC00001+4                                      0260
         MVC   TITIME(4,@10),TIME                                  0260
*                  END;                                            0261
*                ELSE                                              0262
*                  DO;                                             0262
*                                                                  0262
         B     @RC00254                                            0262
@RF00254 DS    0H                                                  0263
*                    /************************************************/
*                    /*                                              */
*                    /* OBTAIN PACKED DECIMAL DATE AND TIME IN       */
*                    /* MICROSECONDS BY ISSUING THE MIC FORM OF THE  */
*                    /* TIME MACRO.                                  */
*                    /*                                              */
*                    /************************************************/
*                                                                  0263
*                    RESPECIFY (REG1) RSTD;                        0263
*LTIME2:             GEN(TIME  MIC,DBLWORD);                       0264
*                                                                  0264
LTIME2   TIME  MIC,DBLWORD
*                    /************************************************/
*                    /*                                              */
*                    /* INSERT TIME IN MICROSECONDS INTO TITIME      */
*                    /* FOR USER.                                    */
*                    /*                                              */
*                    /************************************************/
*                                                                  0265
*                    TITIME = DBLWORD;                             0265
         L     @10,@PC00001+4                                      0265
         MVC   TITIME(8,@10),DBLWORD                               0265
*                    IF TILN = 4 & TIFORM = CLOCK                  0266
*                      THEN                                        0266
*                                                                  0266
         L     @10,@PC00001+16                                     0266
         CLI   TILN(@10),4                                         0266
         BNE   @RF00266                                            0266
         L     @10,@PC00001+12                                     0266
         CLC   TIFORM(4,@10),@CC00143                              0266
         BNE   @RF00266                                            0266
*                        /********************************************/
*                        /*                                          */
*                        /* OBTAIN THE TIME OF DAY IN MICRO          */
*                        /* SECONDS BY ISSUING A STORE CLOCK         */
*                        /* INSTRUCTION AND INSERTING IT             */
*                        /* INTO TITIME FOR THE USER.                */
*                        /*                                          */
*                        /********************************************/
*                                                                  0267
*                        GEN(STCK  DBLWORD);                       0267
         STCK  DBLWORD
*                        TITIME = DBLWORD;                         0268
@RF00266 L     @10,@PC00001+4                                      0268
         MVC   TITIME(8,@10),DBLWORD                               0268
*                  END;                                            0269
*                                                                  0269
*              /******************************************************/
*              /*                                                    */
*              /* INSERT DATE IN PACKED DECIMAL (00YYDDDF) INTO THE  */
*              /* UTIME DATE VARIABLE TIDATE IF ASKED FOR, WHERE     */
*              /* F IS THE SIGN CHARACTER                            */
*              /*                                                    */
*              /******************************************************/
*                                                                  0270
*              IF TILN ^= 2                                        0270
*                THEN                                              0270
@RC00254 L     @10,@PC00001+16                                     0270
         CLI   TILN(@10),2                                         0270
         BE    @RF00270                                            0270
*                  DO;                                             0271
*                    GEN(ST    REG1,DBLWORD);                      0272
         ST    REG1,DBLWORD
*                    RESPECIFY (REG1) UNRSTD;                      0273
*                    TIDATE(1:4) = DBLWORD(1:4);                   0274
         L     @10,@PC00001+8                                      0274
         MVC   TIDATE(4,@10),DBLWORD                               0274
*                  END;                                            0275
*            END;                                                  0276
*                                                                  0276
@RF00270 DS    0H                                                  0277
*        /************************************************************/
*        /*                                                          */
*        /* RETURN CONTROL TO THE CALLER                             */
*        /*                                                          */
*        /************************************************************/
*                                                                  0277
*        CALL ICKSAEP0(GDTTBL,MODID);                              0277
@RC00206 ST    GDTPR,@AL00001                                      0277
         LA    @10,MODID                                           0277
         ST    @10,@AL00001+4                                      0277
         MVI   @AL00001+4,X'80'                                    0277
         L     @15,GDTEPL(,GDTPR)                                  0277
         LA    @01,@AL00001                                        0277
         BALR  @14,@15                                             0277
*        RESPECIFY (GDTPR) UNRSTD;                                 0278
*        END ICKSA05                                               0279
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (DMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (DMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (DMSDF02 )                                        *
*;                                                                 0279
@EL00001 L     @13,4(,@13)                                         0279
@EF00001 L     @00,@SIZDATD                                        0279
         LR    @01,@11                                             0279
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0279
         BR    @14                                                 0279
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    5F
@AL00001 DS    2A
ICKSA05  CSECT
         DS    0F
@CF00165 DC    F'1'
@CF00044 DC    F'4'
@CF00263 DC    F'11'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
DMPINDEX DS    A
LISTPTR  DS    A
SETRC    DS    H
TESTRC   DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
TIME     DS    CL9
         DS    CL7
DATETEMP DS    CL8
DBLWORD  DS    CL8
MONTO    DS    CL11
         ORG   MONTO
MTHS     DS    11AL1
         ORG   MONTO+11
         DS    CL1
@NM00019 DS    CL6
         ORG   @NM00019
DAY      DS    FL2
MONTH    DS    FL2
YEAR     DS    FL2
         ORG   @NM00019+6
DOCNTRL  DS    BL1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICKSA05  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00139 DC    C'FORM'
@CC00141 DC    C'HSEC'
@CC00143 DC    C'KLOK'
@CC00481 DC    C'SA05'
FIXAREA  DS    CL100
         ORG   FIXAREA
@NM00018 DC    100X'00'
         ORG   FIXAREA+100
MODID    DC    CL4'SA05'
MONFROM  DS    CL11
         ORG   MONFROM
MINIT    DC    AL1(31)
         DC    AL1(28)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(31)
         DC    AL1(30)
         DC    AL1(31)
         DC    AL1(30)
         ORG   MONFROM+11
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @02
REG0     EQU   @00
REG1     EQU   @01
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
GDTPR    EQU   @09
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
RTNREG   EQU   @15
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDIN   EQU   GDTTBL+44
GDTDOP   EQU   GDTTBL+48
GDTDBG   EQU   GDTTBL+52
GDTDVO   EQU   GDTTBL+56
GDTPRT   EQU   GDTTBL+60
GDTESS   EQU   GDTTBL+64
GDTESA   EQU   GDTTBL+68
GDTRST   EQU   GDTTBL+72
GDTRES   EQU   GDTTBL+76
GDTCAL   EQU   GDTTBL+80
GDTGSP   EQU   GDTTBL+84
GDTFSP   EQU   GDTTBL+88
GDTGPL   EQU   GDTTBL+92
GDTFPL   EQU   GDTTBL+96
GDTLOD   EQU   GDTTBL+100
GDTDEL   EQU   GDTTBL+104
GDTPRL   EQU   GDTTBL+108
GDTEPL   EQU   GDTTBL+112
GDTTIM   EQU   GDTTBL+116
GDTIIO   EQU   GDTTBL+120
GDTTIO   EQU   GDTTBL+124
GDTOPN   EQU   GDTTBL+136
GDTCLS   EQU   GDTTBL+140
GDTGET   EQU   GDTTBL+144
GDTPUT   EQU   GDTTBL+148
GDTABT   EQU   GDTTBL+152
GDTABH   EQU   GDTTBL+156
GDTSNP   EQU   GDTTBL+160
GDTWTO   EQU   GDTTBL+168
GDTSCR   EQU   GDTTBL+172
GDTVCK   EQU   GDTTBL+176
GDTDVC   EQU   GDTTBL+180
GDTSTE   EQU   GDTTBL+188
ICKSAEP0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
STAEPARM EQU   0
STAEPFX  EQU   STAEPARM
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+13
IOCRFM   EQU   IOCSTR+14
IOCMAC   EQU   IOCSTR+15
IOCMSG   EQU   IOCSTR+16
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
DARGLIST EQU   0
DARGSTID EQU   DARGLIST+8
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
DMPITM   EQU   0
DMPARY   EQU   0
DMPTRM   EQU   0
ICKDB010 EQU   0
ICKDVCL0 EQU   0
ICKDVIN0 EQU   0
ICKDVON0 EQU   0
ICKDVOP0 EQU   0
ICKIOCL0 EQU   0
ICKIOGT0 EQU   0
ICKIOIT0 EQU   0
ICKIOOP0 EQU   0
ICKIOPT0 EQU   0
ICKIOTM0 EQU   0
ICKSACL0 EQU   0
ICKSADE0 EQU   0
ICKSAFP0 EQU   0
ICKSAFS0 EQU   0
ICKSAGP0 EQU   0
ICKSAGS0 EQU   0
ICKSALD0 EQU   0
ICKSAPR0 EQU   0
ICKSASC0 EQU   0
ICKSASN0 EQU   0
ICKSAST0 EQU   0
ICKSATI0 EQU   0
ICKSAVC0 EQU   0
ICKSAWO0 EQU   0
ICKTPEA0 EQU   0
ICKTPES0 EQU   0
ICKTPPR0 EQU   0
ICKTPRE0 EQU   0
ICKTPRS0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBLX  EQU   0
TITIME   EQU   0
TIDATE   EQU   0
TIFORM   EQU   0
TILN     EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00017 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00016 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00015 EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00014 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00013 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00012 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGILP  EQU   DARGLIST+12
DARGSENT EQU   DARGSTID+3
DARGSMOD EQU   DARGSTID
DARGRETP EQU   DARGLIST+4
DARGDBP  EQU   DARGLIST
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
OPNRSVD  EQU   OPNAGL+28
OPNVOL   EQU   OPNAGL+24
OPNBLK   EQU   OPNAGL+20
OPNREC   EQU   OPNAGL+16
OPNDSN   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
@NM00011 EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
@NM00010 EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00009 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
@NM00008 EQU   OPNOPT
OPNOPTJM EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+36
IOCRRN   EQU   IOCSTR+32
@NM00007 EQU   IOCSTR+30
IOCPNM   EQU   IOCSTR+28
IOCCBP   EQU   IOCSTR+24
IOCDSN   EQU   IOCSTR+20
@NM00006 EQU   IOCSTR+17
@NM00005 EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
IOCMACPA EQU   IOCMAC
@NM00004 EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00003 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00002 EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
STAEWORK EQU   STAEPARM+32
STARPTR  EQU   STAEPFX+28
STASPTR  EQU   STAEPFX+24
STALEN   EQU   STAEPFX+20
STAID    EQU   STAEPFX+16
STAEPA   EQU   STAEPFX+12
STAGDT   EQU   STAEPFX+8
STABPTR  EQU   STAEPFX+4
STAFPTR  EQU   STAEPFX
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00001 EQU   OLDERID1
GDTCVR   EQU   GDTTBL+184
GDTSPR   EQU   GDTTBL+164
GDTTOH   EQU   GDTTBL+132
GDTRIP   EQU   GDTTBL+128
GDTDVH   EQU   GDTTBL+40
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   ICKSA05,(C'PLS1906',0701,78192)
