         TITLE '**********  ICKWV01:  CREATE VOLUME TABLE OF CONTENTS  *
                ********'
        MACRO
        GETMAIN &R,&LV=
        L     REG15,0(REG1)           GDTTBL ADDRESS
        L     REG15,GDTPRL(REG15)     PROL ROUTINE ADDRESS
        CNOP  2,4                     BOUNDARY ALIGNMENT
        LA    REG14,*+14              RETURN ADDRESS
        BALR  REG1,REG15              LINKAGE TO PROL ROUTINE
        DC    A(MODID)                MODULE ID ADDRESS
        DC    A(@SIZDATD)             AUTOMATIC STORAGE SIZE ADDRESS
        MEND
ICKWV01  CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'ICKWV01   78.192'                                 0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         L     @00,@SIZDATD                                        0002
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0002
         USING @DATD,@11                                           0002
         ST    @13,@SA00001+4                                      0002
         LM    @00,@01,20(@13)                                     0002
         ST    @11,8(,@13)                                         0002
         LR    @13,@11                                             0002
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(28),0(@01)                                 0002
*                                                                  0180
         EJECT
*                                                                  0181
*/*****  B E G I N    E X E C U T I O N  *****************************/
*                                                                  0181
*    IF GDTDBG = NULLPTR                                           0181
*      THEN;                                                       0181
         L     @10,@PC00001                                        0181
         L     @10,GDTDBG(,@10)                                    0181
         LTR   @10,@10                                             0181
         BZ    @RT00181                                            0181
*      ELSE                                                        0183
*        CALL ICKDB010(GDTTBL                                      0183
*         ,'WV00');                                                0183
*                                                                  0183
*                                                                  0183
         L     @10,@PC00001                                        0183
         ST    @10,@AL00001                                        0183
         LA    @15,@CC00591                                        0183
         ST    @15,@AL00001+4                                      0183
         MVI   @AL00001+4,X'80'                                    0183
         L     @15,GDTDBG(,@10)                                    0183
         LA    @01,@AL00001                                        0183
         BALR  @14,@15                                             0183
*    CONDCODE = SUCCESS;                                           0184
*                                                                  0184
@RT00181 L     @10,@PC00001+24                                     0184
         SLR   @02,@02                                             0184
         ST    @02,CONDCODE(,@10)                                  0184
*/*  CHECK_VTOC_LOCATION_LEGALITY                                   */
*    CALL CHKVLOC;                                                 0185
*                                                                  0185
         BAL   @14,CHKVLOC                                         0185
*/*  IF NO ERRORS FOUND YET                                         */
*    IF CONDCODE = SUCCESS                                         0186
*                                                                  0186
*/*    THEN WRITE_FORMAT4_DSCB                                      */
*      THEN DO;    CALL WRTFMT4; END;                              0186
*                                                                  0186
         L     @10,@PC00001+24                                     0186
         L     @10,CONDCODE(,@10)                                  0186
         LTR   @10,@10                                             0186
         BNZ   @RF00186                                            0186
         BAL   @14,WRTFMT4                                         0188
*/*  IF NO ERRORS FOUND YET                                          */
*    IF CONDCODE = SUCCESS                                         0190
*                                                                  0190
*/*    THEN WRITE_FORMAT5_DSCB                                       */
*      THEN DO;    CALL WRTFMT5; END;                              0190
*                                                                  0190
@RF00186 L     @10,@PC00001+24                                     0190
         L     @10,CONDCODE(,@10)                                  0190
         LTR   @10,@10                                             0190
         BNZ   @RF00190                                            0190
         BAL   @14,WRTFMT5                                         0192
*/*  IF NO ERRORS FOUND YET                                          */
*    IF CONDCODE = SUCCESS                                         0194
*                                                                  0194
*/*    THEN WRITE_FORMAT0_DSCBS                                      */
*      THEN DO;    CALL WRTFMT0; END;                              0194
*                                                                  0194
@RF00190 L     @10,@PC00001+24                                     0194
         L     @10,CONDCODE(,@10)                                  0194
         LTR   @10,@10                                             0194
         BNZ   @RF00194                                            0194
         BAL   @14,WRTFMT0                                         0196
*/*  IF NO ERRORS FOUND YET                                          */
*    IF CONDCODE = SUCCESS                                         0198
*                                                                  0198
*/*    THEN                                                          */
*      THEN DO;                                                    0198
*                                                                  0198
*                                                                  0198
@RF00194 L     @10,@PC00001+24                                     0198
         L     @10,CONDCODE(,@10)                                  0198
         LTR   @10,@10                                             0198
         BNZ   @RF00198                                            0198
*/*      CHANGE_VOLUME_LABEL  WITH POINTER TO VTOC                   */
*        CALL ICKCV01(GDTTBL                                       0200
*                    ,VOLIB                                        0200
*                    ,VOLSER                                       0200
*                    ,OWNERID                                      0200
*                    ,VTOCLOC                                      0200
*                    ,RETCODE);                                    0200
*                                                                  0200
         L     @10,@PC00001                                        0200
         ST    @10,@AL00001                                        0200
         L     @10,@PC00001+4                                      0200
         ST    @10,@AL00001+4                                      0200
         LA    @10,VOLSER                                          0200
         ST    @10,@AL00001+8                                      0200
         LA    @10,OWNERID                                         0200
         ST    @10,@AL00001+12                                     0200
         L     @10,@PC00001+8                                      0200
         ST    @10,@AL00001+16                                     0200
         LA    @10,RETCODE                                         0200
         ST    @10,@AL00001+20                                     0200
         L     @15,@CV00596                                        0200
         LA    @01,@AL00001                                        0200
         BALR  @14,@15                                             0200
*/*      IF NOT SUCCESSFUL                                           */
*        IF RETCODE ^= SUCCESS                                     0201
*                                                                  0201
*/*        THEN SET ERROR CODE (CONDCODE=4)                          */
*          THEN DO;    CONDCODE = NOWTVLBL; END;                   0201
*                                                                  0201
         L     @10,RETCODE                                         0201
         LTR   @10,@10                                             0201
         BZ    @RF00201                                            0201
         L     @10,@PC00001+24                                     0203
         MVC   CONDCODE(4,@10),@CF00048                            0203
*/*      END-THEN                                                    */
*        END;                                                      0205
*                                                                  0205
@RF00201 DS    0H                                                  0206
*/*  RETURN                                                          */
*    CALL ICKSAFP0(GDTTBL                                          0206
*          ,POOLID                                                 0206
*          ,ALL);                                                  0206
@RF00198 MVC   @AL00001+4(8),@AL00206                              0206
         L     @10,@PC00001                                        0206
         ST    @10,@AL00001                                        0206
         L     @15,GDTFPL(,@10)                                    0206
         LA    @01,@AL00001                                        0206
         BALR  @14,@15                                             0206
*    IF GDTDBG = NULLPTR                                           0207
*      THEN;                                                       0207
         L     @10,@PC00001                                        0207
         L     @10,GDTDBG(,@10)                                    0207
         LTR   @10,@10                                             0207
         BZ    @RT00207                                            0207
*      ELSE                                                        0209
*        CALL ICKDB010(GDTTBL                                      0209
*         ,'WV99');                                                0209
         L     @10,@PC00001                                        0209
         ST    @10,@AL00001                                        0209
         LA    @15,@CC00597                                        0209
         ST    @15,@AL00001+4                                      0209
         MVI   @AL00001+4,X'80'                                    0209
         L     @15,GDTDBG(,@10)                                    0209
         LA    @01,@AL00001                                        0209
         BALR  @14,@15                                             0209
*    CALL ICKSAEP0(GDTTBL,MODID);                                  0210
*                                                                  0210
*                                                                  0210
@RT00207 L     @10,@PC00001                                        0210
         ST    @10,@AL00001                                        0210
         LA    @15,MODID                                           0210
         ST    @15,@AL00001+4                                      0210
         MVI   @AL00001+4,X'80'                                    0210
         L     @15,GDTEPL(,@10)                                    0210
         LA    @01,@AL00001                                        0210
         BALR  @14,@15                                             0210
         EJECT
*/*****  START OF SPECIFICATIONS  ************************************/
*/*                                                                  */
*/*  SUB-PROCEDURE NAME:  CHKVLOC                                    */
*/*                                                                  */
*/*  DESCRIPTIVE NAME:  CHECK VTOC LOCATION LEGALITY                 */
*/*                                                                  */
*/*  FUNCTION:                                                       */
*/*                                                                  */
*/*    DETERMINE, FOR PRESENT DEVICE, WHETHER THE VTOC ORIGIN AND    */
*/*    EXTENT ARE WITHIN THE PROPER BOUNDS.                          */
*/*                                                                  */
*/*****  END OF SPECIFICATIONS  **************************************/
*                                                                  0211
*                                                                  0211
*                                                                  0211
*/*  SUB-PROCEDURE CHECK_VTOC_LOCATION_LEGALITY                      */
*    CHKVLOC:                                                      0211
*      PROCEDURE;                                                  0211
CHKVLOC  STM   @14,@02,@SA00002                                    0211
         STM   @06,@12,@SA00002+20                                 0211
*    OLDERID2 = NEWERID2;                                          0212
         L     @10,@PC00001                                        0212
         L     @15,GDTTR2(,@10)                                    0212
         MVC   @TS00001(95),NEWERID2(@15)                          0212
         MVC   OLDERID2(95,@15),@TS00001                           0212
*    NEWID2 = 'WVCV';                                              0213
*                                                                  0213
         MVC   NEWID2(4,@15),@CC00601                              0213
*/*  OBTAIN NUMBER OF TRACKS PER CYLINDER FOR DEVICE (UDEVINFO)      */
*    CALL ICKDVIN0(GDTTBL                                          0214
*            ,VOLIB                                                0214
*            ,DEVTKCYL                                             0214
*            ,POOLID                                               0214
*            ,TKCYLPTR                                             0214
*            ,DATALEN                                              0214
*            ,RETCODE);                                            0214
*                                                                  0214
         ST    @10,@AL00001                                        0214
         L     @15,@PC00001+4                                      0214
         ST    @15,@AL00001+4                                      0214
         LA    @15,@CF00339                                        0214
         ST    @15,@AL00001+8                                      0214
         LA    @15,POOLID                                          0214
         ST    @15,@AL00001+12                                     0214
         LA    @15,TKCYLPTR                                        0214
         ST    @15,@AL00001+16                                     0214
         LA    @15,DATALEN                                         0214
         ST    @15,@AL00001+20                                     0214
         LA    @15,RETCODE                                         0214
         ST    @15,@AL00001+24                                     0214
         L     @15,GDTDIN(,@10)                                    0214
         LA    @01,@AL00001                                        0214
         BALR  @14,@15                                             0214
*/*  IF VTOC LOCATION IS 0:0                                         */
*    IF VTOCCYL = 0 & VTOCHEAD = 0                                 0215
*                                                                  0215
*/*    THEN SET ERROR CODE - INVALID VTOC LOCATION (CONDCODE=2)      */
*      THEN DO;    CONDCODE = BADLOCN; END;                        0215
*                                                                  0215
         L     @10,@PC00001+8                                      0215
         MVC   @ZT00002+2(2),VTOCCYL(@10)                          0215
         L     @15,@ZT00002                                        0215
         LTR   @15,@15                                             0215
         BNZ   @RF00215                                            0215
         MVC   @ZT00002+2(2),VTOCHEAD(@10)                         0215
         L     @10,@ZT00002                                        0215
         LTR   @10,@10                                             0215
         BNZ   @RF00215                                            0215
         L     @10,@PC00001+24                                     0217
         MVC   CONDCODE(4,@10),@CF00120                            0217
*/*  IF VTOC TRACK GIVEN IS BEYOND MAXIMUM VALUE                     */
*    IF VTOCHEAD > (TRKSCYL - 1)                                   0219
*                                                                  0219
*/*    THEN SET ERROR CODE - INVALID VTOC LOCATION (CONDCODE=2)      */
*      THEN DO;    CONDCODE = BADLOCN; END;                        0219
*                                                                  0219
@RF00215 L     @10,@PC00001+8                                      0219
         L     @01,TKCYLPTR                                        0219
         L     @15,TRKSCYL(,@01)                                   0219
         BCTR  @15,0                                               0219
         MVC   @ZT00002+2(2),VTOCHEAD(@10)                         0219
         C     @15,@ZT00002                                        0219
         BNL   @RF00219                                            0219
         L     @10,@PC00001+24                                     0221
         MVC   CONDCODE(4,@10),@CF00120                            0221
*/*  CONVERT VTOC LOCATION TO RELATIVE TRACK ADDRESS                 */
*    VTOCRTA = (VTOCCYL * TRKSCYL) + VTOCHEAD;                     0223
*                                                                  0223
@RF00219 L     @10,@PC00001+8                                      0223
         MVC   @ZT00002+2(2),VTOCCYL(@10)                          0223
         L     @01,@ZT00002                                        0223
         L     @04,TKCYLPTR                                        0223
         M     @00,TRKSCYL(,@04)                                   0223
         MVC   @ZT00002+2(2),VTOCHEAD(@10)                         0223
         AL    @01,@ZT00002                                        0223
         LR    VTOCRTA,@01                                         0223
*/*  OBTAIN NUMBER OF PRIMARY TRACKS FOR DEVICE (UDEVINFO)           */
*    CALL ICKDVIN0(GDTTBL                                          0224
*            ,VOLIB                                                0224
*            ,DEVPTRKS                                             0224
*            ,POOLID                                               0224
*            ,PTKSPTR                                              0224
*            ,DATALEN                                              0224
*            ,RETCODE);                                            0224
         L     @10,@PC00001                                        0224
         ST    @10,@AL00001                                        0224
         L     @04,@PC00001+4                                      0224
         ST    @04,@AL00001+4                                      0224
         LA    @04,@CF00332                                        0224
         ST    @04,@AL00001+8                                      0224
         LA    @04,POOLID                                          0224
         ST    @04,@AL00001+12                                     0224
         LA    @04,PTKSPTR                                         0224
         ST    @04,@AL00001+16                                     0224
         LA    @04,DATALEN                                         0224
         ST    @04,@AL00001+20                                     0224
         LA    @04,RETCODE                                         0224
         ST    @04,@AL00001+24                                     0224
         L     @15,GDTDIN(,@10)                                    0224
         LA    @01,@AL00001                                        0224
         BALR  @14,@15                                             0224
*    HIGHPRTA = NUMPTRKS - 1;                                      0225
*                                                                  0225
         L     @10,PTKSPTR                                         0225
         L     HIGHPRTA,NUMPTRKS(,@10)                             0225
         BCTR  HIGHPRTA,0                                          0225
*/*  IF VTOC BEGINS BEYOND PRIMARY TRACKS                            */
*    IF VTOCRTA > HIGHPRTA                                         0226
*                                                                  0226
*/*    THEN SET ERROR CODE - INVALID VTOC LOCATION (CONDCODE=2)      */
*      THEN DO;    CONDCODE = BADLOCN; END;                        0226
*                                                                  0226
         CLR   VTOCRTA,HIGHPRTA                                    0226
         BNH   @RF00226                                            0226
         L     @10,@PC00001+24                                     0228
         MVC   CONDCODE(4,@10),@CF00120                            0228
*/*  CALCULATE RELATIVE TRACK ADDRESS OF LAST TRACK OF VTOC          */
*    ENDVRTA = VTOCRTA + EXTENT - 1;                               0230
*                                                                  0230
@RF00226 L     @10,@PC00001+12                                     0230
         LR    ENDVRTA,VTOCRTA                                     0230
         AL    ENDVRTA,EXTENT(,@10)                                0230
         BCTR  ENDVRTA,0                                           0230
*/*  IF VTOC LOCATION IS VALID                                       */
*    IF CONDCODE = SUCCESS                                         0231
*                                                                  0231
*/*    THEN                                                          */
*      THEN DO;                                                    0231
*                                                                  0231
*                                                                  0231
         L     @10,@PC00001+24                                     0231
         L     @02,CONDCODE(,@10)                                  0231
         LTR   @02,@02                                             0231
         BNZ   @RF00231                                            0231
*/*      IF END OF VTOC IS BEYOND PRIMARY TRACKS                     */
*        IF ENDVRTA > HIGHPRTA                                     0233
*                                                                  0233
*/*        THEN SET ERROR CODE - INVALID EXTENT (CONDCODE=3)         */
*          THEN DO;    CONDCODE = BADEXTNT; END;                   0233
*                                                                  0233
         CLR   ENDVRTA,HIGHPRTA                                    0233
         BNH   @RF00233                                            0233
         MVC   CONDCODE(4,@10),@CF00140                            0235
*/*      END-THEN                                                    */
*        END;                                                      0237
*                                                                  0237
*/*  END-SUB-PROCEDURE CHECK_VTOC_LOCATION_LEGALITY                  */
*    END CHKVLOC;                                                  0238
*                                                                  0238
*                                                                  0238
@EL00002 DS    0H                                                  0238
@EF00002 DS    0H                                                  0238
@ER00002 LM    @14,@02,@SA00002                                    0238
         LM    @06,@12,@SA00002+20                                 0238
         BR    @14                                                 0238
         EJECT
*/*****  START OF SPECIFICATIONS  ************************************/
*/*                                                                  */
*/*  SUB-PROCEDURE NAME:  WRTFMT4                                    */
*/*                                                                  */
*/*  DESCRIPTIVE NAME:  WRITE FORMAT4 DSCB                           */
*/*                                                                  */
*/*  FUNCTION:                                                       */
*/*                                                                  */
*/*    CREATE, FOR THE PRESENT DEVICE, THE FIRST VTOC DSCB, AND      */
*/*    WRITE IT ON THE VOLUME.                                       */
*/*                                                                  */
*/*****  END OF SPECIFICATIONS  **************************************/
*                                                                  0239
*                                                                  0239
*                                                                  0239
*/*  SUB-PROCEDURE WRITE_FORMAT4_DSCB                                */
*    WRTFMT4:                                                      0239
*      PROCEDURE;                                                  0239
WRTFMT4  STM   @14,@12,@SA00003                                    0239
*    OLDERID2 = NEWERID2;                                          0240
         L     @10,@PC00001                                        0240
         L     @05,GDTTR2(,@10)                                    0240
         MVC   @TS00001(95),NEWERID2(@05)                          0240
         MVC   OLDERID2(95,@05),@TS00001                           0240
*    NEWID2 = 'WVF4';                                              0241
*                                                                  0241
*                                                                  0241
         MVC   NEWID2(4,@05),@CC00605                              0241
*/*  SET UP FORMAT 4 DATA SET CONTROL BLOCK                          */
*    DSCBDATA = ''B;                                               0242
         XC    DSCBDATA(96),DSCBDATA                               0242
*    F4PTR = ADDR(DSCBDATA);                                       0243
         LA    F4PTR,DSCBDATA                                      0243
*    DS4IDFMT = '4';                                               0244
         MVI   DS4IDFMT(F4PTR),C'4'                                0244
*    DS4NOEXT = 1;                                                 0245
*                                                                  0245
         MVI   DS4NOEXT(F4PTR),X'01'                               0245
*/*  GET FORMAT 4 DEVICE CONSTANTS FOR THE DEVICE (UDEVINFO)         */
*    CALL ICKDVIN0(GDTTBL                                          0246
*            ,VOLIB                                                0246
*            ,DEVDSCBF                                             0246
*            ,POOLID                                               0246
*            ,CONSTPTR                                             0246
*            ,DATALEN                                              0246
*            ,RETCODE);                                            0246
         ST    @10,@AL00001                                        0246
         L     @05,@PC00001+4                                      0246
         ST    @05,@AL00001+4                                      0246
         LA    @05,@CF00361                                        0246
         ST    @05,@AL00001+8                                      0246
         LA    @05,POOLID                                          0246
         ST    @05,@AL00001+12                                     0246
         LA    @05,CONSTPTR                                        0246
         ST    @05,@AL00001+16                                     0246
         LA    @05,DATALEN                                         0246
         ST    @05,@AL00001+20                                     0246
         LA    @05,RETCODE                                         0246
         ST    @05,@AL00001+24                                     0246
         L     @15,GDTDIN(,@10)                                    0246
         LA    @01,@AL00001                                        0246
         BALR  @14,@15                                             0246
*    DS4DEVCT = DEVCONST;                                          0247
         L     @10,CONSTPTR                                        0247
         MVC   DS4DEVCT(14,F4PTR),DEVCONST(@10)                    0247
*    DSCBMAX = DS4DEVDT;                                           0248
*                                                                  0248
         SLR   @10,@10                                             0248
         IC    @10,DS4DEVDT(,F4PTR)                                0248
         ST    @10,DSCBMAX                                         0248
*/*  CALCULATE NUMBER OF AVAILABLE (FORMAT 0) DSCBS                  */
*    AVAIL = (DS4DEVDT * EXTENT) - 2;                              0249
         L     @05,@PC00001+12                                     0249
         LR    @01,@10                                             0249
         M     @00,EXTENT(,@05)                                    0249
         BCTR  @01,0                                               0249
         BCTR  @01,0                                               0249
         ST    @01,AVAIL                                           0249
*    DS4DSREC = AVAIL;                                             0250
*                                                                  0250
         ST    @01,@TF00001                                        0250
         MVC   DS4DSREC(2,F4PTR),@TF00001+2                        0250
*/*  PLACE ALTERNATE TRACK INFO IN DSCB                              */
*    DS4HCCHH = NEXTALT;                                           0251
         L     @10,@PC00001+20                                     0251
         MVC   DS4HCCHH(4,F4PTR),NEXTALT(@10)                      0251
*    DS4NOATK = ALTS;                                              0252
*                                                                  0252
         L     @10,@PC00001+16                                     0252
         MVC   DS4NOATK(2,F4PTR),ALTS+2(@10)                       0252
*/*  SET VTOC EXTENT DESCRIPTION                                     */
*    DS4VTOCE(1) = 1;                                              0253
         LA    @10,1                                               0253
         STC   @10,DS4VTOCE(,F4PTR)                                0253
*    DS4VTOCE(3:6) = VTOCLOC;                                      0254
         L     @05,@PC00001+8                                      0254
         L     @03,VTOCLOC(,@05)                                   0254
         ST    @03,@TF00001                                        0254
         MVC   DS4VTOCE+2(4,F4PTR),@TF00001                        0254
*    DS4VTOCE(7:8) = ENDVRTA / TRKSCYL;                            0255
         L     @01,TKCYLPTR                                        0255
         L     @15,TRKSCYL(,@01)                                   0255
         LR    @01,ENDVRTA                                         0255
         SLR   @00,@00                                             0255
         DR    @00,@15                                             0255
         ST    @01,@TF00001                                        0255
         MVC   DS4VTOCE+6(2,F4PTR),@TF00001+2                      0255
*    DS4VTOCE(9:10) = ENDVRTA // TRKSCYL;                          0256
*                                                                  0256
         LR    @01,ENDVRTA                                         0256
         SLR   @00,@00                                             0256
         DR    @00,@15                                             0256
         ST    @00,@TF00001                                        0256
         MVC   DS4VTOCE+8(2,F4PTR),@TF00001+2                      0256
*/*  WRITE THE FORMAT 4 DSCB AT BEGINNING OF VTOC (UDEVOP)           */
*    DSCBKEY = DSCB4KEY;                                           0257
         MVC   DSCBKEY(44),DSCB4KEY                                0257
*    DSCBCCHH = VTOCLOC;                                           0258
         ST    @03,DSCBCCHH                                        0258
*    DSCBR = 1;                                                    0259
         MVI   DSCBR,X'01'                                         0259
*    DSCBKL = LENGTH(DSCBKEY);                                     0260
         MVI   DSCBKL,X'2C'                                        0260
*    DSCBDL = LENGTH(DSCBDATA);                                    0261
         MVC   DSCBDL(2),@CH00483                                  0261
*    RECNUM = 1;                                                   0262
         ST    @10,RECNUM                                          0262
*    DATAPTR = ADDR(DSCBREC);                                      0263
         LA    @10,DSCBREC                                         0263
         ST    @10,DATAPTR                                         0263
*    DATALEN = LENGTH(DSCBREC);                                    0264
         MVC   DATALEN(4),@CF00535                                 0264
*    CALL ICKDVOP0(GDTTBL                                          0265
*          ,VOLIB                                                  0265
*          ,ACTWCKDN                                               0265
*          ,VTOCLOC                                                0265
*          ,RECNUM                                                 0265
*          ,POOLID                                                 0265
*          ,DATAPTR                                                0265
*          ,DATALEN                                                0265
*          ,RETCODE);                                              0265
*                                                                  0265
         L     @10,@PC00001                                        0265
         ST    @10,@AL00001                                        0265
         L     @15,@PC00001+4                                      0265
         ST    @15,@AL00001+4                                      0265
         LA    @15,@CF00264                                        0265
         ST    @15,@AL00001+8                                      0265
         ST    @05,@AL00001+12                                     0265
         LA    @05,RECNUM                                          0265
         ST    @05,@AL00001+16                                     0265
         LA    @05,POOLID                                          0265
         ST    @05,@AL00001+20                                     0265
         LA    @05,DATAPTR                                         0265
         ST    @05,@AL00001+24                                     0265
         LA    @05,DATALEN                                         0265
         ST    @05,@AL00001+28                                     0265
         LA    @05,RETCODE                                         0265
         ST    @05,@AL00001+32                                     0265
         L     @15,GDTDOP(,@10)                                    0265
         LA    @01,@AL00001                                        0265
         BALR  @14,@15                                             0265
*/*  IF NOT SUCCESSFUL                                               */
*    IF RETCODE ^= SUCCESS                                         0266
*                                                                  0266
*/*    THEN SET ERROR CODE (CONDCODE=1)                              */
*      THEN DO;    CONDCODE = NOVTOCWT; END;                       0266
*                                                                  0266
         L     @10,RETCODE                                         0266
         LTR   @10,@10                                             0266
         BZ    @RF00266                                            0266
         L     @10,@PC00001+24                                     0268
         MVC   CONDCODE(4,@10),@CF00169                            0268
*/*  END-SUB-PROCEDURE WRITE_FORMAT4_DSCB                            */
*    END WRTFMT4;                                                  0270
*                                                                  0270
*                                                                  0270
*                                                                  0270
@EL00003 DS    0H                                                  0270
@EF00003 DS    0H                                                  0270
@ER00003 LM    @14,@12,@SA00003                                    0270
         BR    @14                                                 0270
         EJECT
*/*****  START OF SPECIFICATIONS  ************************************/
*/*                                                                  */
*/*  SUB-PROCEDURE NAME:  WRTFMT5                                    */
*/*                                                                  */
*/*  DESCRIPTIVE NAME:  WRITE FORMAT5 DSCB                           */
*/*                                                                  */
*/*  FUNCTION:                                                       */
*/*                                                                  */
*/*    CREATE AND WRITE FORMAT-5 DSCB AS APPROPRIATE:                */
*/*    MSS OR NON-MSS.                                               */
*/*                                                                  */
*/*****  END OF SPECIFICATIONS  **************************************/
*                                                                  0271
*                                                                  0271
*                                                                  0271
*/*  SUB-PROCEDURE WRITE_FORMAT5_DSCB                                */
*    WRTFMT5:                                                      0271
*      PROCEDURE;                                                  0271
WRTFMT5  STM   @14,@12,@SA00004                                    0271
*    OLDERID2 = NEWERID2;                                          0272
         L     @10,@PC00001                                        0272
         L     @07,GDTTR2(,@10)                                    0272
         MVC   @TS00001(95),NEWERID2(@07)                          0272
         MVC   OLDERID2(95,@07),@TS00001                           0272
*    NEWID2 = 'WVF5';                                              0273
*                                                                  0273
*                                                                  0273
         MVC   NEWID2(4,@07),@CC00612                              0273
*/*  SET UP FORMAT 5 DATA SET CONTROL BLOCK                          */
*    F5PTR = ADDR(DSCBAREA);                                       0274
         LA    F5PTR,DSCBAREA                                      0274
*    DSCBAREA = ''B;                                               0275
         XC    DSCBAREA(140),DSCBAREA                              0275
*    DS5KEYID = DSCB5KEY;                                          0276
         MVC   DS5KEYID(4,F5PTR),@CB00553                          0276
*    DS5FMTID = '5';                                               0277
*                                                                  0277
         MVI   DS5FMTID(F5PTR),C'5'                                0277
*/*  IF VOLUME IS NOT AN MSS VOLUME (UDEVINFO)                       */
*    CALL ICKDVIN0(GDTTBL                                          0278
*            ,VOLIB                                                0278
*            ,DEVMSSID                                             0278
*            ,POOLID                                               0278
*            ,MSSIDPTR                                             0278
*            ,DATALEN                                              0278
*            ,RETCODE);                                            0278
         ST    @10,@AL00001                                        0278
         L     @07,@PC00001+4                                      0278
         ST    @07,@AL00001+4                                      0278
         LA    @07,@CF00355                                        0278
         ST    @07,@AL00001+8                                      0278
         LA    @07,POOLID                                          0278
         ST    @07,@AL00001+12                                     0278
         LA    @07,MSSIDPTR                                        0278
         ST    @07,@AL00001+16                                     0278
         LA    @07,DATALEN                                         0278
         ST    @07,@AL00001+20                                     0278
         LA    @07,RETCODE                                         0278
         ST    @07,@AL00001+24                                     0278
         L     @15,GDTDIN(,@10)                                    0278
         LA    @01,@AL00001                                        0278
         BALR  @14,@15                                             0278
*    IF MSSFLAG = NO                                               0279
*                                                                  0279
*/*    THEN                                                          */
*      THEN DO;                                                    0279
*                                                                  0279
*                                                                  0279
         L     @10,MSSIDPTR                                        0279
         TM    MSSFLAG(@10),B'10000000'                            0279
         BNZ   @RF00279                                            0279
*        FREEPTR = ADDR(DS5AVEXT);                                 0281
*                                                                  0281
         LA    FREEPTR,DS5AVEXT(,F5PTR)                            0281
*/*      IF VTOC NOT AT BEGINNING OF VOLUME                          */
*        IF VTOCRTA > 1                                            0282
*                                                                  0282
*/*        THEN                                                      */
*          THEN DO;                                                0282
*                                                                  0282
*                                                                  0282
         CL    VTOCRTA,@CF00169                                    0282
         BNH   @RF00282                                            0282
*/*           BUILD EXTENT ENTRY FOR SPACE PRECEEDING VTOC           */
*             FREERTA = 1;                                         0284
         MVC   FREERTA(2,FREEPTR),@CH00169                         0284
*             IF VTOCRTA > TRKSCYL                                 0285
*               THEN DO;                                           0285
*                                                                  0285
         L     @10,TKCYLPTR                                        0285
         L     @10,TRKSCYL(,@10)                                   0285
         CLR   VTOCRTA,@10                                         0285
         BNH   @RF00285                                            0285
*                 FREECYL = (VTOCRTA / TRKSCYL) - 1;               0287
         LR    @01,VTOCRTA                                         0287
         SLR   @00,@00                                             0287
         DR    @00,@10                                             0287
         BCTR  @01,0                                               0287
         ST    @01,@TF00001                                        0287
         MVC   FREECYL(2,FREEPTR),@TF00001+2                       0287
*                 FREETRK = TRKSCYL - 1 + (VTOCRTA // TRKSCYL);    0288
         LR    @15,@10                                             0288
         BCTR  @15,0                                               0288
         LR    @01,VTOCRTA                                         0288
         SLR   @00,@00                                             0288
         DR    @00,@10                                             0288
         ALR   @15,@00                                             0288
         STC   @15,FREETRK(,FREEPTR)                               0288
*                 END;                                             0289
*               ELSE DO;                                           0290
*                                                                  0290
         B     @RC00285                                            0290
@RF00285 DS    0H                                                  0291
*                 FREECYL = 0;                                     0291
         SLR   @10,@10                                             0291
         ST    @10,@TF00001                                        0291
         MVC   FREECYL(2,FREEPTR),@TF00001+2                       0291
*                 FREETRK = VTOCRTA - 1;                           0292
         LR    @10,VTOCRTA                                         0292
         BCTR  @10,0                                               0292
         STC   @10,FREETRK(,FREEPTR)                               0292
*                 END;                                             0293
*                                                                  0293
*/*           INCREMENT TO NEXT FREE EXTENT AREA                     */
*             FREEPTR = FREEPTR + LENGTH(FREEDESC);                0294
*                                                                  0294
@RC00285 AH    FREEPTR,@CH00259                                    0294
*/*           END-THEN                                               */
*             END;                                                 0295
*                                                                  0295
*/*       IF VTOC NOT AT END OF VOLUME (PRIMARY TRACKS)              */
*         IF ENDVRTA < HIGHPRTA                                    0296
*                                                                  0296
*/*         THEN                                                     */
*           THEN DO;                                               0296
*                                                                  0296
*                                                                  0296
@RF00282 CLR   ENDVRTA,HIGHPRTA                                    0296
         BNL   @RF00296                                            0296
*/*           BUILD EXTENT ENTRY FOR SPACE FOLLOWING VTOC            */
*             FREERTA = ENDVRTA + 1;                               0298
         LA    @10,1                                               0298
         ALR   @10,ENDVRTA                                         0298
         ST    @10,@TF00001                                        0298
         MVC   FREERTA(2,FREEPTR),@TF00001+2                       0298
*             FREECYL = (HIGHPRTA - ENDVRTA) / TRKSCYL;            0299
         LR    @10,HIGHPRTA                                        0299
         SLR   @10,ENDVRTA                                         0299
         L     @03,TKCYLPTR                                        0299
         L     @03,TRKSCYL(,@03)                                   0299
         LR    @00,@10                                             0299
         SRDA  @00,32                                              0299
         DR    @00,@03                                             0299
         ST    @01,@TF00001                                        0299
         MVC   FREECYL(2,FREEPTR),@TF00001+2                       0299
*             FREETRK = (HIGHPRTA - ENDVRTA) // TRKSCYL;           0300
*                                                                  0300
         LR    @01,@10                                             0300
         SLR   @00,@00                                             0300
         DR    @00,@03                                             0300
         STC   @00,FREETRK(,FREEPTR)                               0300
*/*           END-THEN                                               */
*             END;                                                 0301
*                                                                  0301
*/*       END-THEN                                                   */
*         END;                                                     0302
*                                                                  0302
@RF00296 DS    0H                                                  0303
*/*  WRITE THE FORMAT 5 DSCB (UDEVOP)                                */
*    DSCBCCHH = VTOCLOC;                                           0303
@RF00279 L     @10,@PC00001+8                                      0303
         MVC   DSCBCCHH(4),VTOCLOC(@10)                            0303
*    DSCBR = 2;                                                    0304
         MVI   DSCBR,X'02'                                         0304
*    DSCBKL = 4;                                                   0305
         MVI   DSCBKL,X'04'                                        0305
*    DSCBDL = 136;                                                 0306
         MVC   DSCBDL(2),@CH00614                                  0306
*    RECNUM = 2;                                                   0307
         MVC   RECNUM(4),@CF00120                                  0307
*    DATAPTR = ADDR(DSCBREC);                                      0308
         LA    @15,DSCBREC                                         0308
         ST    @15,DATAPTR                                         0308
*    DATALEN = LENGTH(DSCBREC);                                    0309
         MVC   DATALEN(4),@CF00535                                 0309
*    CALL ICKDVOP0(GDTTBL                                          0310
*          ,VOLIB                                                  0310
*          ,ACTWCKDN                                               0310
*          ,VTOCLOC                                                0310
*          ,RECNUM                                                 0310
*          ,POOLID                                                 0310
*          ,DATAPTR                                                0310
*          ,DATALEN                                                0310
*          ,RETCODE);                                              0310
*                                                                  0310
         L     @15,@PC00001                                        0310
         ST    @15,@AL00001                                        0310
         L     @14,@PC00001+4                                      0310
         ST    @14,@AL00001+4                                      0310
         LA    @14,@CF00264                                        0310
         ST    @14,@AL00001+8                                      0310
         ST    @10,@AL00001+12                                     0310
         LA    @10,RECNUM                                          0310
         ST    @10,@AL00001+16                                     0310
         LA    @10,POOLID                                          0310
         ST    @10,@AL00001+20                                     0310
         LA    @10,DATAPTR                                         0310
         ST    @10,@AL00001+24                                     0310
         LA    @10,DATALEN                                         0310
         ST    @10,@AL00001+28                                     0310
         LA    @10,RETCODE                                         0310
         ST    @10,@AL00001+32                                     0310
         L     @15,GDTDOP(,@15)                                    0310
         LA    @01,@AL00001                                        0310
         BALR  @14,@15                                             0310
*/*  IF NOT SUCCESSFUL                                               */
*    IF RETCODE ^= SUCCESS                                         0311
*                                                                  0311
*/*    THEN SET ERROR CODE (CONDCODE=1)                              */
*      THEN DO;    CONDCODE = NOVTOCWT; END;                       0311
*                                                                  0311
         L     @10,RETCODE                                         0311
         LTR   @10,@10                                             0311
         BZ    @RF00311                                            0311
         L     @10,@PC00001+24                                     0313
         MVC   CONDCODE(4,@10),@CF00169                            0313
*/*  END-SUB-PROCEDURE WRITE_FORMAT5_DSCB                            */
*    END WRTFMT5;                                                  0315
*                                                                  0315
*                                                                  0315
@EL00004 DS    0H                                                  0315
@EF00004 DS    0H                                                  0315
@ER00004 LM    @14,@12,@SA00004                                    0315
         BR    @14                                                 0315
         EJECT
*/*****  START OF SPECIFICATIONS  ************************************/
*/*                                                                  */
*/*  SUB-PROCEDURE NAME:  WRTFMT0                                    */
*/*                                                                  */
*/*  DESCRIPTIVE NAME:  WRITE FORMAT0 DSCB                           */
*/*                                                                  */
*/*  FUNCTION:                                                       */
*/*                                                                  */
*/*    CREATE AND WRITE FORMAT-0 DSCBS THROUGH THE REMAINDER OF      */
*/*    THE VTOC EXTENT.                                              */
*/*                                                                  */
*/*****  END OF SPECIFICATIONS  **************************************/
*                                                                  0316
*                                                                  0316
*/*  SUB-PROCEDURE WRITE_FORMAT0_DSCBS                               */
*    WRTFMT0:                                                      0316
*      PROCEDURE;                                                  0316
WRTFMT0  STM   @14,@12,@SA00005                                    0316
*    OLDERID2 = NEWERID2;                                          0317
         L     @10,@PC00001                                        0317
         L     @10,GDTTR2(,@10)                                    0317
         MVC   @TS00001(95),NEWERID2(@10)                          0317
         MVC   OLDERID2(95,@10),@TS00001                           0317
*    NEWID2 = 'WVF0';                                              0318
*                                                                  0318
*                                                                  0318
         MVC   NEWID2(4,@10),@CC00618                              0318
*/*  SET UP TO WRITE FIRST FORMAT 0 DSCB                             */
*    DSCBAREA = ''B;                                               0319
         XC    DSCBAREA(140),DSCBAREA                              0319
*    DSCBCCHH = VTOCLOC;                                           0320
         L     @10,@PC00001+8                                      0320
         MVC   DSCBCCHH(4),VTOCLOC(@10)                            0320
*    DSCBR = 3;                                                    0321
         MVI   DSCBR,X'03'                                         0321
*    DSCBKL = LENGTH(DSCBKEY);                                     0322
         MVI   DSCBKL,X'2C'                                        0322
*    DSCBDL = LENGTH(DSCBDATA);                                    0323
         MVC   DSCBDL(2),@CH00483                                  0323
*    RECNUM = 3;                                                   0324
         MVC   RECNUM(4),@CF00140                                  0324
*    DATAPTR = ADDR(DSCBREC);                                      0325
         LA    @10,DSCBREC                                         0325
         ST    @10,DATAPTR                                         0325
*    DATALEN = LENGTH(DSCBREC);                                    0326
*                                                                  0326
         MVC   DATALEN(4),@CF00535                                 0326
*/*  DO-UNTIL VTOC FULL                                              */
*    DO AVAIL = AVAIL TO 1 BY -1;                                  0327
*                                                                  0327
*                                                                  0327
         L     @10,AVAIL                                           0327
         B     @DE00327                                            0327
@DL00327 DS    0H                                                  0328
*/*    WRITE A FORMAT 0 DSCB (UDEVOP)                                */
*      DSCBR = RECNUM;                                             0328
         MVC   DSCBR(1),RECNUM+3                                   0328
*      CALL ICKDVOP0(GDTTBL                                        0329
*            ,VOLIB                                                0329
*            ,ACTWCKDN                                             0329
*            ,DSCBCCHH                                             0329
*            ,RECNUM                                               0329
*            ,POOLID                                               0329
*            ,DATAPTR                                              0329
*            ,DATALEN                                              0329
*            ,RETCODE);                                            0329
*                                                                  0329
         L     @10,@PC00001                                        0329
         ST    @10,@AL00001                                        0329
         L     @15,@PC00001+4                                      0329
         ST    @15,@AL00001+4                                      0329
         LA    @15,@CF00264                                        0329
         ST    @15,@AL00001+8                                      0329
         LA    @15,DSCBCCHH                                        0329
         ST    @15,@AL00001+12                                     0329
         LA    @15,RECNUM                                          0329
         ST    @15,@AL00001+16                                     0329
         LA    @15,POOLID                                          0329
         ST    @15,@AL00001+20                                     0329
         LA    @15,DATAPTR                                         0329
         ST    @15,@AL00001+24                                     0329
         LA    @15,DATALEN                                         0329
         ST    @15,@AL00001+28                                     0329
         LA    @15,RETCODE                                         0329
         ST    @15,@AL00001+32                                     0329
         L     @15,GDTDOP(,@10)                                    0329
         LA    @01,@AL00001                                        0329
         BALR  @14,@15                                             0329
*/*    IF NOT SUCCESSFUL                                             */
*      IF RETCODE ^= SUCCESS                                       0330
*                                                                  0330
*/*      THEN RETURN (CONDCODE=1)                                    */
*        THEN DO;                                                  0330
*                                                                  0330
         SLR   @10,@10                                             0330
         C     @10,RETCODE                                         0330
         BE    @RF00330                                            0330
*          CONDCODE = NOVTOCWT;                                    0332
         L     @15,@PC00001+24                                     0332
         MVC   CONDCODE(4,@15),@CF00169                            0332
*          IF GDTDBG = NULLPTR                                     0333
*            THEN;                                                 0333
         L     @15,@PC00001                                        0333
         C     @10,GDTDBG(,@15)                                    0333
         BE    @RT00333                                            0333
*            ELSE                                                  0335
*              CALL ICKDB010(GDTTBL,'WV55');                       0335
         L     @10,@PC00001                                        0335
         ST    @10,@AL00001                                        0335
         LA    @15,@CC00620                                        0335
         ST    @15,@AL00001+4                                      0335
         MVI   @AL00001+4,X'80'                                    0335
         L     @15,GDTDBG(,@10)                                    0335
         LA    @01,@AL00001                                        0335
         BALR  @14,@15                                             0335
*          CALL ICKSAEP0(GDTTBL,MODID);                            0336
@RT00333 L     @10,@PC00001                                        0336
         ST    @10,@AL00001                                        0336
         LA    @15,MODID                                           0336
         ST    @15,@AL00001+4                                      0336
         MVI   @AL00001+4,X'80'                                    0336
         L     @15,GDTEPL(,@10)                                    0336
         LA    @01,@AL00001                                        0336
         BALR  @14,@15                                             0336
*          END;                                                    0337
*                                                                  0337
*/*    IF END OF TRACK IS REACHED                                    */
*      IF RECNUM = DSCBMAX                                         0338
*                                                                  0338
*/*      THEN                                                        */
*        THEN DO;                                                  0338
*                                                                  0338
*                                                                  0338
@RF00330 CLC   RECNUM(4),DSCBMAX                                   0338
         BNE   @RF00338                                            0338
*/*        IF END OF CYLINDER IS REACHED                             */
*          IF DSCBHH = (TRKSCYL - 1)                               0340
*                                                                  0340
*/*          THEN                                                    */
*            THEN DO;                                              0340
*                                                                  0340
*                                                                  0340
         L     @10,TKCYLPTR                                        0340
         L     @10,TRKSCYL(,@10)                                   0340
         BCTR  @10,0                                               0340
         MVC   @ZT00002+2(2),DSCBHH                                0340
         C     @10,@ZT00002                                        0340
         BNE   @RF00340                                            0340
*/*            SET FOR NEXT CYLINDER                                 */
*              DSCBCC = DSCBCC + 1;                                0342
         LA    @10,1                                               0342
         MVC   @ZT00002+2(2),DSCBCC                                0342
         L     @15,@ZT00002                                        0342
         ALR   @15,@10                                             0342
         STH   @15,DSCBCC                                          0342
*              DSCBHH = 0;                                         0343
         SLR   @15,@15                                             0343
         STH   @15,DSCBHH                                          0343
*              RECNUM = 1;                                         0344
         ST    @10,RECNUM                                          0344
*              DSCBR = RECNUM;                                     0345
*                                                                  0345
         STC   @10,DSCBR                                           0345
*/*            END-THEN                                              */
*              END;                                                0346
*                                                                  0346
*/*          ELSE                                                    */
*            ELSE DO;                                              0347
*                                                                  0347
*                                                                  0347
         B     @RC00340                                            0347
@RF00340 DS    0H                                                  0348
*/*            SET FOR NEXT TRACK                                    */
*              DSCBHH = DSCBHH + 1;                                0348
         LA    @10,1                                               0348
         MVC   @ZT00002+2(2),DSCBHH                                0348
         L     @15,@ZT00002                                        0348
         ALR   @15,@10                                             0348
         STH   @15,DSCBHH                                          0348
*              RECNUM = 1;                                         0349
         ST    @10,RECNUM                                          0349
*              DSCBR = RECNUM;                                     0350
*                                                                  0350
         STC   @10,DSCBR                                           0350
*/*            END-ELSE                                              */
*              END;                                                0351
*                                                                  0351
*/*        END-THEN                                                  */
*          END;                                                    0352
*                                                                  0352
*/*      ELSE INCREMENT RECORD NUMBER                                */
*        ELSE DO;                                                  0353
         B     @RC00338                                            0353
@RF00338 DS    0H                                                  0354
*          RECNUM = RECNUM + 1;                                    0354
         LA    @10,1                                               0354
         AL    @10,RECNUM                                          0354
         ST    @10,RECNUM                                          0354
*          DSCBR = RECNUM;                                         0355
         STC   @10,DSCBR                                           0355
*          END;                                                    0356
*                                                                  0356
*/*  END-UNTIL                                                       */
*    END;                                                          0357
*                                                                  0357
@RC00338 SLR   @10,@10                                             0357
         BCTR  @10,0                                               0357
         AL    @10,AVAIL                                           0357
         ST    @10,AVAIL                                           0357
@DE00327 LTR   @10,@10                                             0357
         BP    @DL00327                                            0357
*/*  END-SUB-PROCEDURE WRITE_FORMAT0_DSCBS                           */
*    END WRTFMT0;                                                  0358
*                                                                  0358
*                                                                  0358
@EL00005 DS    0H                                                  0358
@EF00005 DS    0H                                                  0358
@ER00005 LM    @14,@12,@SA00005                                    0358
         BR    @14                                                 0358
@PB00005 DS    0H                                                  0358
*/*  END-PROCEDURE CREATE_VOLUME_TABLE_OF_CONTENTS                   */
*                                                                  0359
*    END ICKWV01                                                   0359
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (DMSDF01 )                                        *
*/*%INCLUDE SYSLIB  (DMSDF00 )                                        *
*/*@INCLUDE SYSLIB  (DMSDF02 )                                        *
*/*%INCLUDE SYSLIB  (IECSDSL1)                                        *
*;                                                                 0359
@DATA    DS    0H
@CH00259 DC    H'5'
@CH00483 DC    H'96'
@CH00614 DC    H'136'
         DS    0F
@AL00206 DC    A(POOLID)               LIST WITH   2 ARGUMENT(S)
         DC    AL1(X'80')
         DC    AL3(@CC00141)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    7F
@SA00002 DS    12F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00005 DS    15F
@AL00001 DS    9A
@TF00001 DS    F
@ZTEMPS  DS    0F
@ZT00002 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
ICKWV01  CSECT
         DS    0F
@CF00169 DC    F'1'
@CH00169 EQU   @CF00169+2
@CF00120 DC    F'2'
@CF00140 DC    F'3'
@CF00048 DC    F'4'
@CF00264 DC    F'9'
@CF00535 DC    F'148'
@CF00332 DC    F'201'
@CF00339 DC    F'204'
@CF00355 DC    F'212'
@CF00361 DC    F'215'
@DATD    DSECT
         DS    0D
LISTSCAN DS    A
IOCSPTR  DS    A
OPNPTR   DS    A
DDSTRU   DS    A
FSADDR   DS    A
DMPINDEX DS    A
DSCBMAX  DS    F
CONSTPTR DS    A
DATAPTR  DS    A
DATALEN  DS    F
TKCYLPTR DS    A
PTKSPTR  DS    A
MSSIDPTR DS    A
RECNUM   DS    F
AVAIL    DS    F
RETCODE  DS    F
LISTPTR  DS    A
SETRC    DS    H
TESTRC   DS    H
LISTLN   DS    FL1
@TS00001 DS    CL95
DSCBREC  DS    CL148
         ORG   DSCBREC
DSCBCNT  DS    CL8
         ORG   DSCBCNT
DSCBCCHH DS    FL4
         ORG   DSCBCCHH
DSCBCC   DS    FL2
DSCBHH   DS    FL2
         ORG   DSCBCNT+4
DSCBR    DS    FL1
DSCBKL   DS    FL1
DSCBDL   DS    FL2
         ORG   DSCBREC+8
DSCBAREA DS    CL140
         ORG   DSCBAREA
DSCBKEY  DS    CL44
DSCBDATA DS    CL96
         ORG   DSCBREC+148
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ICKWV01  CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00596 DC    V(ICKCV01)
         DS    0D
@CC00591 DC    C'WV00'
@CC00597 DC    C'WV99'
@CC00601 DC    C'WVCV'
@CC00605 DC    C'WVF4'
@CC00612 DC    C'WVF5'
@CC00618 DC    C'WVF0'
@CC00620 DC    C'WV55'
@CC00141 DC    C'ALL'
@CB00553 DC    X'05050505'
MODID    DC    CL4'WV01'
DSCB4KEY DS    CL44
         ORG   DSCB4KEY
@NM00024 DC    44X'04'
         ORG   DSCB4KEY+44
VOLSER   DC    CL6'      '
OWNERID  DC    CL14'              '
POOLID   DC    CL4'WV01'
PTCHWV01 DS    CL256
         ORG   PTCHWV01
@NM00026 DC    256X'00'
         ORG   PTCHWV01+256
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
FREEPTR  EQU   @02
HIGHPRTA EQU   @05
ENDVRTA  EQU   @04
VTOCRTA  EQU   @03
F5PTR    EQU   @06
F4PTR    EQU   @02
REG12    EQU   @12
REG0     EQU   @00
REG1     EQU   @01
REG10    EQU   @10
REG11    EQU   @11
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG2     EQU   @02
REG3     EQU   @03
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
RTNREG   EQU   @15
ICKSAEP0 EQU   0
ICKSAFP0 EQU   0
TRACE1   EQU   0
OLDERID1 EQU   TRACE1
TRACE2   EQU   0
OLDERID2 EQU   TRACE2
NEWID2   EQU   TRACE2+95
NEWERID2 EQU   5
STAEPARM EQU   0
STAEPFX  EQU   STAEPARM
IOCSTR   EQU   0
IOCDSO   EQU   IOCSTR+13
IOCRFM   EQU   IOCSTR+14
IOCMAC   EQU   IOCSTR+15
IOCMSG   EQU   IOCSTR+16
OPNAGL   EQU   0
OPNOPT   EQU   OPNAGL
OPNRFM   EQU   OPNAGL+1
OPNTYP   EQU   OPNAGL+2
OPNMOD   EQU   OPNAGL+3
UVOLLIST EQU   0
UVOLENT  EQU   UVOLLIST+2
ICKDVIN0 EQU   0
ICKDVOP0 EQU   0
DARGLIST EQU   0
DARGSTID EQU   DARGLIST+8
DARGARY  EQU   DARGLIST+20
DARGINS  EQU   DARGARY
DARGINL  EQU   DARGARY+2
FMTLIST  EQU   0
FMTFLGS  EQU   FMTLIST
FMTSPF   EQU   FMTLIST+2
FMTRFNO  EQU   FMTSPF
FMTILEN  EQU   FMTRFNO
FMTIOFF  EQU   FMTLIST+4
FMTTRBC  EQU   FMTIOFF
FMTSTO   EQU   FMTTRBC
FMTOCOL  EQU   FMTLIST+6
FMTCNVF  EQU   FMTLIST+10
ICKDB010 EQU   0
DMPITM   EQU   0
DMPARY   EQU   0
IECSDSF4 EQU   0
IECSDSL4 EQU   0
DS4IDFMT EQU   IECSDSL4
DS4DSREC EQU   IECSDSL4+6
DS4HCCHH EQU   IECSDSL4+8
DS4NOATK EQU   IECSDSL4+12
DS4NOEXT EQU   IECSDSL4+15
DS4DEVCT EQU   IECSDSL4+18
DS4DEVOV EQU   DS4DEVCT+6
DS4DEVDT EQU   DS4DEVCT+12
DS4AMCAT EQU   IECSDSL4+40
DS4VSIND EQU   DS4AMCAT
DS4VTOCE EQU   IECSDSL4+61
IECSDSF5 EQU   0
IECSDSL5 EQU   0
DS5KEYID EQU   IECSDSL5
DS5AVEXT EQU   IECSDSL5+4
DS5FMTID EQU   IECSDSL5+44
DEVCONST EQU   0
TRKSCYL  EQU   0
NUMPTRKS EQU   0
MSSFLAG  EQU   0
FREEDESC EQU   0
FREERTA  EQU   FREEDESC
FREECYL  EQU   FREEDESC+2
FREETRK  EQU   FREEDESC+4
DMPTRM   EQU   0
ICKDVCL0 EQU   0
ICKDVON0 EQU   0
ICKIOCL0 EQU   0
ICKIOGT0 EQU   0
ICKIOIT0 EQU   0
ICKIOOP0 EQU   0
ICKIOPT0 EQU   0
ICKIOTM0 EQU   0
ICKSACL0 EQU   0
ICKSADE0 EQU   0
ICKSAFS0 EQU   0
ICKSAGP0 EQU   0
ICKSAGS0 EQU   0
ICKSALD0 EQU   0
ICKSAPR0 EQU   0
ICKSASC0 EQU   0
ICKSASN0 EQU   0
ICKSAST0 EQU   0
ICKSATI0 EQU   0
ICKSAVC0 EQU   0
ICKSAWO0 EQU   0
ICKTPEA0 EQU   0
ICKTPES0 EQU   0
ICKTPPR0 EQU   0
ICKTPRE0 EQU   0
ICKTPRS0 EQU   0
LISTTEST EQU   0
NEWERID1 EQU   5
GDTTBL   EQU   0
GDTTR1   EQU   GDTTBL+8
GDTTR2   EQU   GDTTBL+12
GDTDIN   EQU   GDTTBL+44
GDTDOP   EQU   GDTTBL+48
GDTDBG   EQU   GDTTBL+52
GDTDVO   EQU   GDTTBL+56
GDTPRT   EQU   GDTTBL+60
GDTESS   EQU   GDTTBL+64
GDTESA   EQU   GDTTBL+68
GDTRST   EQU   GDTTBL+72
GDTRES   EQU   GDTTBL+76
GDTCAL   EQU   GDTTBL+80
GDTGSP   EQU   GDTTBL+84
GDTFSP   EQU   GDTTBL+88
GDTGPL   EQU   GDTTBL+92
GDTFPL   EQU   GDTTBL+96
GDTLOD   EQU   GDTTBL+100
GDTDEL   EQU   GDTTBL+104
GDTPRL   EQU   GDTTBL+108
GDTEPL   EQU   GDTTBL+112
GDTTIM   EQU   GDTTBL+116
GDTIIO   EQU   GDTTBL+120
GDTTIO   EQU   GDTTBL+124
GDTOPN   EQU   GDTTBL+136
GDTCLS   EQU   GDTTBL+140
GDTGET   EQU   GDTTBL+144
GDTPUT   EQU   GDTTBL+148
GDTSNP   EQU   GDTTBL+160
GDTWTO   EQU   GDTTBL+168
GDTSCR   EQU   GDTTBL+172
GDTVCK   EQU   GDTTBL+176
GDTDVC   EQU   GDTTBL+180
GDTSTE   EQU   GDTTBL+188
VOLIB    EQU   0
VTOCLOC  EQU   0
EXTENT   EQU   0
ALTS     EQU   0
NEXTALT  EQU   0
CONDCODE EQU   0
@NM00025 EQU   VTOCLOC
VTOCCYL  EQU   @NM00025
VTOCHEAD EQU   @NM00025+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
GDTCVR   EQU   GDTTBL+184
GDTSPR   EQU   GDTTBL+164
GDTABH   EQU   GDTTBL+156
GDTABT   EQU   GDTTBL+152
GDTTOH   EQU   GDTTBL+132
GDTRIP   EQU   GDTTBL+128
GDTDVH   EQU   GDTTBL+40
GDTIOH   EQU   GDTTBL+36
GDTSAH   EQU   GDTTBL+32
GDTTPH   EQU   GDTTBL+28
GDTRIH   EQU   GDTTBL+24
GDTSTH   EQU   GDTTBL+20
GDTDBH   EQU   GDTTBL+16
GDTPRM   EQU   GDTTBL+4
GDTHDR   EQU   GDTTBL
DS5END   EQU   IECSDSL5+140
DS5PTRDS EQU   IECSDSL5+135
DS5MAVET EQU   IECSDSL5+45
DS5EXTAV EQU   IECSDSL5+9
@NM00023 EQU   IECSDSF5
DS4END   EQU   IECSDSL4+96
@NM00022 EQU   IECSDSL4+71
DS4F6PTR EQU   IECSDSL4+56
@NM00021 EQU   IECSDSL4+51
DS4R2TIM EQU   IECSDSL4+43
DS4VSCRA EQU   DS4AMCAT+1
@NM00020 EQU   DS4VSIND
DS4VSBAD EQU   DS4VSIND
DS4VSREF EQU   DS4VSIND
DS4AMTIM EQU   IECSDSL4+32
DS4DEVDB EQU   DS4DEVCT+13
DS4DEVTL EQU   DS4DEVCT+10
DS4DEVFG EQU   DS4DEVCT+9
DS4DEVK  EQU   DS4DEVCT+8
DS4DEVL  EQU   DS4DEVOV+1
DS4DEVI  EQU   DS4DEVOV
DS4DEVTK EQU   DS4DEVCT+4
DS4DEVSZ EQU   DS4DEVCT
@NM00019 EQU   IECSDSL4+16
DS4VTOCI EQU   IECSDSL4+14
DS4HPCHR EQU   IECSDSL4+1
@NM00018 EQU   IECSDSF4
@NM00017 EQU   DMPARY+15
DMPARYTP EQU   DMPARY+14
DMPARYEX EQU   DMPARY+12
DMPARYIC EQU   DMPARY+10
DMPARYSZ EQU   DMPARY+8
DMPARYNM EQU   DMPARY
@NM00016 EQU   DMPITM+15
DMPITMTP EQU   DMPITM+14
DMPITMLN EQU   DMPITM+12
DMPITMPT EQU   DMPITM+8
DMPITMNM EQU   DMPITM
@NM00015 EQU   FMTCNVF+1
FMTBS    EQU   FMTCNVF+1
FMTSS    EQU   FMTCNVF+1
FMTAL    EQU   FMTCNVF+1
FMTZS    EQU   FMTCNVF+1
@NM00014 EQU   FMTCNVF
FMTPU    EQU   FMTCNVF
FMTBD    EQU   FMTCNVF
FMTBHD   EQU   FMTCNVF
FMTBHA   EQU   FMTCNVF
FMTBH    EQU   FMTCNVF
FMTOLEN  EQU   FMTLIST+8
FMTRIO   EQU   FMTOCOL
FMTSPT   EQU   FMTSTO
FMTSTL   EQU   FMTILEN
@NM00013 EQU   FMTFLGS+1
FMTHDF   EQU   FMTFLGS
FMTDFF   EQU   FMTFLGS
FMTSTF   EQU   FMTFLGS
FMTREPF  EQU   FMTFLGS
FMTBDF   EQU   FMTFLGS
FMTIDF   EQU   FMTFLGS
FMTSCF   EQU   FMTFLGS
FMTEOLF  EQU   FMTFLGS
DARGDTM  EQU   DARGARY+4
DARGPCT  EQU   DARGINL
DARGREP  EQU   DARGINS
@NM00012 EQU   DARGLIST+19
DARGIND  EQU   DARGLIST+18
DARGRETL EQU   DARGLIST+16
DARGCNT  EQU   DARGLIST+14
DARGILP  EQU   DARGLIST+12
DARGSENT EQU   DARGSTID+3
DARGSMOD EQU   DARGSTID
DARGRETP EQU   DARGLIST+4
DARGDBP  EQU   DARGLIST
UVOLVOL  EQU   UVOLENT+4
UVOLDEV  EQU   UVOLENT
UVOLCNT  EQU   UVOLLIST
OPNRSVD  EQU   OPNAGL+28
OPNVOL   EQU   OPNAGL+24
OPNBLK   EQU   OPNAGL+20
OPNREC   EQU   OPNAGL+16
OPNDSN   EQU   OPNAGL+12
OPNDDN   EQU   OPNAGL+8
OPNIOC   EQU   OPNAGL+4
@NM00011 EQU   OPNMOD
OPNMODRC EQU   OPNMOD
OPNMODAC EQU   OPNMOD
@NM00010 EQU   OPNTYP
OPNTYPSO EQU   OPNTYP
OPNTYPSI EQU   OPNTYP
@NM00009 EQU   OPNRFM
OPNRFMBK EQU   OPNRFM
OPNRFMSF EQU   OPNRFM
OPNRFMUN EQU   OPNRFM
OPNRFMVR EQU   OPNRFM
OPNRFMFX EQU   OPNRFM
@NM00008 EQU   OPNOPT
OPNOPTJM EQU   OPNOPT
OPNOPTKS EQU   OPNOPT
OPNOPTBK EQU   OPNOPT
OPNOPTUP EQU   OPNOPT
OPNOPTOT EQU   OPNOPT
OPNOPTIN EQU   OPNOPT
IOCEXT   EQU   IOCSTR+36
IOCRRN   EQU   IOCSTR+32
@NM00007 EQU   IOCSTR+30
IOCPNM   EQU   IOCSTR+28
IOCCBP   EQU   IOCSTR+24
IOCDSN   EQU   IOCSTR+20
@NM00006 EQU   IOCSTR+17
@NM00005 EQU   IOCMSG
IOCMSGOP EQU   IOCMSG
IOCMACPA EQU   IOCMAC
@NM00004 EQU   IOCMAC
IOCMACBK EQU   IOCMAC
IOCMACUP EQU   IOCMAC
IOCMACOT EQU   IOCMAC
IOCMACIN EQU   IOCMAC
@NM00003 EQU   IOCRFM
IOCRFMBK EQU   IOCRFM
IOCRFMSF EQU   IOCRFM
IOCRFMUN EQU   IOCRFM
IOCRFMVR EQU   IOCRFM
IOCRFMFX EQU   IOCRFM
@NM00002 EQU   IOCDSO
IOCDSOPS EQU   IOCDSO
IOCKYL   EQU   IOCSTR+12
IOCTRN   EQU   IOCSTR+8
IOCDLN   EQU   IOCSTR+4
IOCDAD   EQU   IOCSTR
STAEWORK EQU   STAEPARM+32
STARPTR  EQU   STAEPFX+28
STASPTR  EQU   STAEPFX+24
STALEN   EQU   STAEPFX+20
STAID    EQU   STAEPFX+16
STAEPA   EQU   STAEPFX+12
STAGDT   EQU   STAEPFX+8
STABPTR  EQU   STAEPFX+4
STAFPTR  EQU   STAEPFX
NEWID1   EQU   TRACE1+95
CALLID   EQU   OLDERID1+90
@NM00001 EQU   OLDERID1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00231 EQU   @EL00002
@RF00233 EQU   @EL00002
@RF00266 EQU   @EL00003
@RF00311 EQU   @EL00004
@PB00004 EQU   @PB00005
@RC00340 EQU   @RC00338
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   ICKWV01,(C'PLS1843',0701,78192)
