         TITLE 'IEAQWAIT'
*                                                                     *
* STATUS                                                              *
*    CHANGE LEVEL 0                                                   *
*                                                                     *
* FUNCTION                                                            *
*    IEAQWAIT IS THE SMF WAIT TIME COLLECTION ROUTINE WHICH IS        *
*    ENTERED FROM THE I/O FLIH OR EXT FLIH WHEN THE WAIT TASK IS      *
*    INTERRUPTED. UPON ENTRY QWAIT DETERMINES WHETHER                 *
*    COLLECTION SHOULD BE DONE BY DETERMINING (1) IF THE CPU IS       *
*    ONLINE, (2) IF THE TOD CLOCK IS FUNCTIONING, AND (3) IF THE      *
*    LCCA IS PRESENT FOR THIS CPU. IF ALL ANSWERS ARE YES - QWAIT     *
*    CALCULATES ELAPSED WAIT TIME BY SUBTRACTING DISPATCHER TOD(LCCA- *
*    DTOD, PUT THERE BY DISPATCHER UPON ENTRY INTO WAIT STATE) FROM   *
*    THE INTERRUPT TOD(LCCAITOD) AND THEN ADDS THIS VALUE TO THE      *
*    WAIT TIME ACCUMULATION FIELD IN THE LCCA (LCCAWTIM).             *
*                                                                     *
* ENTRY POINTS                                                        *
*         IEAQWAIT - (R6 CONTAINS ENTRY @)                            *
*                                                                     *
* INPUT                                                               *
*    TOD VALUES IN LCCA FIELDS (LCCAITOD & LCCADTOD)                  *
*                                                                     *
* OUTPUT                                                              *
*    IF COLLECTING - UPDATE OF LCCAWTIM FIELD IN LCCA                 *
*    (REGISTERS 2,6,13,14,15 REMAIN UNCHANGED THRU QWAIT)             *
*                                                                     *
* EXTERNAL REFERENCES                                                 *
*         NONE                                                        *
*                                                                     *
* EXITS,NORMAL                                                        *
*    RETURN TO I/O OR EXT FLIH (R2 CONTAINS RETURN @)                 *
*                                                                     *
* EXITS,ERROR                                                         *
*    NONE                                                             *
*                                                                     *
* TABLES/WORK AREAS                                                   *
*    NONE                                                             *
*                                                                     *
* ATTRIBUTES                                                          *
*    SUPERVISOR STATE, KEY 0, DISABLED                                *
*                                                                     *
* CHARACTER CODE DEPENDENCY                                           *
*    NONE                                                             *
*                                                                     *
* NOTES                                                               *
*    MACROS USED - (MAPPING MACROS) CVT, IHAPSA, IHACSD, IHAPCCAT,    *
*    IHALCCAT, IHAPCCA, IHALCCA                                       *
*                                                                     *
*
*    REGISTER EQUATES
*
NOWHERE  EQU   0                   FOR CARRY IN DBLWORD ARITHMETIC
ONLINE   EQU   0                   TEST FOR CPU ONLINE
CPU@     EQU   1                   PHYSICAL CPU ADDRESS
RETURN@  EQU   2                   RETURN POINT IN CALLING MODULE
PSA@     EQU   3                   BASE REG FOR THE PSA
WAIT1    EQU   4                   1ST WORK REG FOR WAIT TIME CALC
WAIT2    EQU   5                   2ND WORK REG FOR WAIT TIME CALC
ENTRY@   EQU   6                   IEAQWAIT ENTRY ADDRESS (BASE REG)
CVT@     EQU   7                   BASE REG FOR THE CVT
CSD@     EQU   8                   BASE REG FOR THE CSD
PCCAVT@  EQU   9                   BASE REG FOR THE PCCAVT
LCCAVT@  EQU   10                  BASE REG FOR THE LCCAVT
PCCA@    EQU   11                  BASE REG FOR THIS CPU'S PCCA
LCCA@    EQU   12                  BASE REG FOR THIS CPU'S LCCA
*    REGISTERS 13, 14, AND 15 REMAIN UNCHANGED THRU QWAIT
*
*    OTHER EQUATES
*
CVTADDR  EQU   X'10'               @ OF THE CVT
ONE      EQU   1                   BIT SHIFT FOR ONLINE TEST AND
*                                  CARRY FOR DBL WORD ADDITION AND
*                                  MASK FOR BRANCH ON ONES REGISTER
TIMES4   EQU   2                   SHIFT OF 2 TO MULTIPLY CPU @ BY 4
FOUR     EQU   4                   ADJUST TO 2ND WORD OF DBLWORD VALUES
NC       EQU   12                  MASK FOR NOCARRY TEST IN ADDITION
SIXTEEN  EQU   16                  TO ADJUST CPU ONLINE BITS
NM       EQU   10                  MASK FOR BRANCH ON NOT MINUS REG
Z        EQU   8                   MASK FOR BRANCH ON ZERO REGISTER
*
IEAQWAIT CSECT
*C 21000,27500                                                 @YM03785
*A 38100-38400                                                 @YM04840
*C 34500,36500                                                 @YM04840
*C 21000,27500                                                 @YM03489
*
*    SET UP ADDRESSABILITY FOR PROGRAM AND CONTROL AREAS
*
         USING IEAQWAIT,ENTRY@     ADDRESSABILITY FOR QWAIT
         SR    PSA@,PSA@           GET @ OF PSA (0)
         USING PSA,PSA@            ADDRESSABILITY FOR PSA
         L     CVT@,CVTADDR        GET @ OF THE CVT (FROM LOC 16)
         USING CVTMAP,CVT@         ADDRESSABILITY FOR CVT
         L     CSD@,CVTCSD         GET CSD @ FROM CVT
         USING CSD,CSD@            ADDRESSABILITY FOR CSD
*
*    TEST TO SEE IF CPU IS ONLINE (DON'T ACCUM. TIME FOR OFFLINE CPU)
*
         SR    CPU@,CPU@           CLEAR REG TO INSERT CPU @
         LH    CPU@,PSACPUSA       GET PHYSICAL CPU @ FROM PSA @YM03489
         LH    ONLINE,CSDCPUAL     GET THE CPU ONLINE BITS FROM CSD
         SLL   ONLINE,SIXTEEN      PREPARE ONLINE BITS FOR TESTING
         LTR   CPU@,CPU@           IS THIS CPU 0?
         BZ    TESTSIGN            IF SO  - BITS ARE READY TO TEST
SHIFT    SLL   ONLINE,ONE          ELSE SHIFT TO NEXT ONLINE BIT
         BCT   CPU@,SHIFT          IS THIS THE RIGHT ONLINE BIT?
TESTSIGN LTR   ONLINE,ONLINE       TEST THIS CPU'S ONLINE BIT
         BCR   NM,RETURN@          IF OFF(LINE) - RETURN
*
*    LOCATE PCCA AND LCCA FOR THIS CPU
*
         L     PCCAVT@,CVTPCCAT    GET PCCAVT @ FROM CVT
         USING PCCAVT,PCCAVT@      ADDRESSABILITY FOR PCCAVT
         L     LCCAVT@,CVTLCCAT    GET LCCAVT @ FROM CVT
         USING LCCAVT,LCCAVT@      ADDRESSABILITY FOR LCCAVT
         LH    CPU@,PSACPUSA       GET CPU ADDRESS AGAIN       @YM03489
         SLA   CPU@,TIMES4         MULTIPLY @ BY 4 FOR CCAVT'S INDEXES
         L     PCCA@,PCCAVT(CPU@)  GET @ OF PCCA FOR THIS CPU
         USING PCCA,PCCA@          ADDRESSABILITY FOR PCCA
         L     LCCA@,LCCAVT(CPU@)  GET @ OF LCCA FOR THIS CPU
         USING LCCA,LCCA@          ADDRESSABILITY FOR LCCA
*
*    TEST TO SEE IF PROCESSING SHOULD BE DONE
*
         LA    LCCA@,NOWHERE(LCCA@)  0 THE HI-ORDER BYTE
         LTR   LCCA@,LCCA@         IS THERE AN LCCA FOR THIS CPU?
         BCR   Z,RETURN@           IF NOT - RETURN
         USING LCCA,LCCA@          ADDRESSABILITY FOR LCCA
         TM    PCCATODE,PCCANUTD   IS THE TOD CLOCK DEAD?
         BCR   ONE,RETURN@         IF SO - RETURN
*
*    CALCULATE WAIT TIME FOR THIS ENTRY
*
         LM    WAIT1,WAIT2,LCCAITOD GET THE INTERRUPT TOD
         SL    WAIT2,LCCADTOD+FOUR  2ND WORD SUBTRACTION
         BNM   NOBORROW            WAS THERE A CARRY?
         SL    WAIT1,ONE1          SUBTRACT 1 IF BORROW        @YM04840
NOBORROW SL    WAIT1,LCCADTOD      1ST WORD SUBTRACTION
*
*    ADD WAIT TIME TO ACCUMULATION FIELD (LCCAWTIM)
*
         AL    WAIT2,LCCAWTIM+FOUR 2ND WORD WAIT TIME ACCUMULATION
         BC    NC,NOCARRY          WAS THERE A CARRY?
         AL    WAIT1,ONE1          ADD 1 IF CARRY              @YM04840
NOCARRY  AL    WAIT1,LCCAWTIM      1ST WORD WAIT TIME ACCUMULATION
         STM   WAIT1,WAIT2,LCCAWTIM STORE BACK THE UPDATED WAIT TIME
         BR    RETURN@             RETURN
*                                                              @YM04840
*    CONSTANTS                                                 @YM04840
*                                                              @YM04840
ONE1     DC    F'1'                ONE USED IN COMPUTATION     @YM04840
         CVT   DSECT=YES
         IHAPSA
         IHACSD
         IHAPCCAT
         IHALCCAT
         IHAPCCA
         IHALCCA
         END
