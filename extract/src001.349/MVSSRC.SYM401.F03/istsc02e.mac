         TITLE 'ROUTINE SERVICE MODULE - ISTSC02E                      *
                        '
* IBM DISK OPERATING SYSTEM
* TOLTEP - 5745-SC-TLT
          ISEQ 73,80
ISTSC02E CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'ISTSC02E  75.177'                                 0002
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0002
         STM   @00,@12,20(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
*   R15=R13;                        /* SET BACKSAVE PTR              */
         LR    R15,R13                                             0043
*   R13=ADDR(SVESC02E);             /* PICK UP PTR TO SAVE AREA      */
         LA    R13,SVESC02E(,WAPTR)                                0044
*   BACKSAVE(3)=R13;                /* CHAIN BACKAREA & THIS AREA    */
         ST    R13,BACKSAVE+8(,R15)                                0045
*   SVESC02E(2)=R15;                /* TOGETHER                      */
         ST    R15,SVESC02E+4(,WAPTR)                              0046
*   RTNMAP=R1;                      /* SAVE PARM POINTER.            */
         LR    RTNMAP,R1                                           0047
*   $RETMASK='00'X;                 /* RESET RETURN CODE MASK BYTE   */
         MVI   $RETMASK(WAPTR),X'00'                               0048
*   $TRTN#=$RTNENUM;                /* ROUTINE NUMBER FOR TRACE      */
         SLR   @09,@09                                             0049
         IC    @09,$RTNENUM(,RTNMAP)                               0049
         STC   @09,$TRTN#(,WAPTR)                                  0049
*   $TESTERR=OFF;                   /* RESET TEST ERROR BIT          */
         NI    $TESTERR(WAPTR),B'01111111'                         0050
*   RTNSEL(1:8)=$RT0108;            /* FIRST BYTE OF ROUTINE FLAGS   */
         MVC   RTNSEL(1,WAPTR),$RT0108(WAPTR)                      0051
*   RTNSEL(9:16)=$RT0916;           /* SECOND BYTE ROUTINE FLAGS     */
         MVC   RTNSEL+1(1,WAPTR),$RT0916(WAPTR)                    0052
*   RTNSEL(17:256)=$ROUTMSK;        /* LAST 14 BYTES ROUTINE FLAGS   */
         MVC   RTNSEL+2(30,WAPTR),$ROUTMSK(WAPTR)                  0053
*/********************************************************************/
*/* CHECK THE SELECTED ROUTINE NUMBER IN THE ROUTINE PARAMETER LIST  */
*/* AGAINST A SET OF FLAGS REPRESENTING THE ROUTINES SELECTED FOR    */
*/* EXECUTION BY THE OPERATOR.                                       */
*/********************************************************************/
*                                                                  0054
*   X=$RTNENUM-1;                   /* DECREMENT ROUTINE SELECTION   */
         BCTR  @09,0                                               0054
         LR    X,@09                                               0054
*   R7=X/8;                         /* FIND ROUTINE MASK BYTE        */
         LR    R7,X                                                0055
         SRL   R7,3                                                0055
*   R6=X//8;                        /* SAVE THE REMAINDER            */
         LR    @10,X                                               0056
         SRDA  @10,32                                              0056
         D     @10,@CF00039                                        0056
         LR    R6,@10                                              0056
*   R1=0;                           /* RESET R1 TO ZEROS             */
         SLR   R1,R1                                               0057
*   GEN(IC R1,MASKLIST(R6));        /* SELECT PROPER BIT MASK        */
         IC R1,MASKLIST(R6)
*   R7=R7+ADDR($INBUFR);            /* CALCULATE ADDRESS OF ROUTINE
*                                      FLAGS FOR THIS ROUTINE.       */
         LA    @09,$INBUFR(,WAPTR)                                 0059
         ALR   R7,@09                                              0059
*   GEN(EX R1,TSTMSK);              /* TEST FOR SELECTED FLAG ON     */
         EX R1,TSTMSK
*   BC(8,S2EC0005);                 /* BRANCH IF NOT ON.             */
         BC    8,S2EC0005                                          0061
*/********************************************************************/
*/* CHECK FOR MANUAL INTERVENTION REQUIRED BY THIS ROUTINE.          */
*/********************************************************************/
*                                                                  0062
*   IF $RTNMI=ON                    /* CHECK FOR MI REQUIRED         */
*       &$MANINTV=OFF               /* AND MANUAL INTERVENTION IS NOT
*                                      ALLOWED.                      */
*     THEN                                                         0062
         TM    $RTNMI(RTNMAP),B'10000000'                          0062
         BNO   @RF00062                                            0062
         TM    $MANINTV(WAPTR),B'10000000'                         0062
         BNZ   @RF00062                                            0062
*     DO;                                                          0063
*                                                                  0063
*/* ******************************************************************/
*/*  MANUAL INTERVETION IS REQUIRED BY THIS ROUTINE BUT IS NOT       */
*/*  ALLOWED PER OPERATOR OPTIONS. RTN BYPASSED.                     */
*/* ******************************************************************/
*                                                                  0064
*       GEN(BAL R14,S2EC0050);      /* CALL MSG SUBROUTINE           */
*                                                                  0064
         BAL R14,S2EC0050
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(210)SUB(YES) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0065
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0065
*       R1=ADDR($TCA07);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA07                                           0066
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0067
         BALR  @14,@15                                             0067
*       DCL                                                        0068
*         1 $TCA07,                 /* TCEC PARM LIST                */
*          2 $TCB07 FIXED(32) INIT(210),/* MSG NUMBER                */
*          2 $TCC07 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD07 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE07 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       GO TO S2EC0005;                                            0069
         B     S2EC0005                                            0069
*     END;                                                         0070
*   IF $CTEQTT=ON                   /* IF CT ON SME LINE AS TT       */
*       &$DCL=ON THEN               /* AND ROUTINE MACRO EXPANSION 0071
*                                      INDICATES IT CANNOT BE RUN IN
*                                      THIS CASE BECAUSE OF POSSIBLE
*                                      HANG UPS WITH TWO WAY       0071
*                                      MESSAGES, THEN BYPASS THIS  0071
*                                      ROUTINE.                      */
@RF00062 TM    $CTEQTT(WAPTR),B'00010000'                          0071
         BNO   @RF00071                                            0071
         TM    $DCL(RTNMAP),B'00100000'                            0071
         BNO   @RF00071                                            0071
*     DO;                                                          0072
*                                                                  0072
*/********************************************************************/
*/* EITHER CT OR AP IS ON SAME LINE AS A TEST TERMINAL AND THIS      */
*/* ROUTINE CANNOT BE EXECUTED UNDER THAT CONDITION.                 */
*/****************************************************************** */
*                                                                  0073
*       GEN(BAL R14,S2EC0050);      /* CALL MSG SUBROUTINE           */
*                                                                  0073
         BAL R14,S2EC0050
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(210)SUB(YES)MSGMSK('40000000'X) INVOKED         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0074
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0074
*       R1=ADDR($TCA08);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA08                                           0075
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00643                                        0076
         BALR  @14,@15                                             0076
*       DCL                                                        0077
*         1 $TCA08,                 /* TCEC PARM LIST                */
*          2 $TCB08 FIXED(32) INIT(210),/* MSG NUMBER                */
*          2 $TCC08 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD08 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE08 CHAR(4) INIT('40000000'X);/* MSSAGE MASK         */
*       GO TO S2EC0005;                                            0078
         B     S2EC0005                                            0078
*     END;                                                         0079
*   ELSE                                                           0080
*     GO TO S2EC0020;                                              0080
*S2EC0005:                                                         0081
*   RET14=$RTNEEXT;                 /* SET RETURN REGISTER IN OLTS 0081
*                                      SAVE AREA TO POINT TO NEXT  0081
*                                      ROUTINE.                      */
S2EC0005 L     @09,$R13PTR(,WAPTR)                                 0081
         L     @04,$RTNEEXT(,RTNMAP)                               0081
         ST    @04,RET14(,@09)                                     0081
*   R15=4;                                                         0082
         LA    R15,4                                               0082
*   GOTO S2EC0015;                                                 0083
         B     S2EC0015                                            0083
*S2EC0010:                                                         0084
*   R15=0;                          /* ZERO RETURN CODE              */
S2EC0010 SLR   R15,R15                                             0084
*S2EC0015:                                                         0085
*   RET15=R15;                      /* RESET RETURN CODE REGISTER IN
*                                      OLTS SAVE AREA.               */
S2EC0015 L     @09,$R13PTR(,WAPTR)                                 0085
         ST    R15,RET15(,@09)                                     0085
*   R13=SVESC02E(2);                /* RESTORE R13 TO ORIG VALUE     */
         L     R13,SVESC02E+4(,WAPTR)                              0086
*   RETURN;                         /* RETURN VIA SAVE AREA MGR.     */
@EL00001 DS    0H                                                  0087
@EF00001 DS    0H                                                  0087
@ER00001 L     @14,12(,@13)                                        0087
         LM    @00,@12,20(@13)                                     0087
         BR    @14                                                 0087
*S2EC0020:                                                         0088
*   $RTN#=$RTNENUM;                 /* MOVE RTN# INTO SECTION PREF   */
S2EC0020 L     @09,$LOWADDR(,WAPTR)                                0088
         LH    @04,RTNDISP(,@09)                                   0088
         ALR   @04,@09                                             0088
         IC    @09,$RTNENUM(,RTNMAP)                               0088
         STC   @09,$RTN#(,@04)                                     0088
*   $REFNUM=$RTNEREF;               /* SET UP REF NUMB               */
         MVC   $REFNUM(1,@04),$RTNEREF(RTNMAP)                     0089
*   GO TO S2EC0010;                 /* RETURN.                       */
         B     S2EC0010                                            0090
*/********************************************************************/
*/* THE FOLLOWING INSTRUCTION IS THE TARGET OF AN EX (EXECUTE) INSTR.*/
*/********************************************************************/
*                                                                  0091
*TSTMSK:                                                           0091
*   GEN(TM 0(R7),0);                                               0091
*                                                                  0091
TSTMSK   TM 0(R7),0
*/****************************************************************** */
*/* THE FOLLOWING SUBROUTINE CONVERTS ROUTINE NUMBER TO EBCDIC       */
*/****************************************************************** */
*                                                                  0092
*S2EC0050:                                                         0092
*   R1=$RTNENUM;                    /* ROUTINE NUMBER IN HEX         */
S2EC0050 SLR   R1,R1                                               0092
         IC    R1,$RTNENUM(,RTNMAP)                                0092
*   CVD(R1,$INBUFR(70:77));         /* ROUTINE NUMBER IN PACKED    0093
*                                      DECIMAL.                      */
         CVD   R1,$INBUFR+69(,WAPTR)                               0093
*   UNPK($INBUFR(1:4),$INBUFR(75:77));/* UNPACK                      */
         UNPK  $INBUFR(4,WAPTR),$INBUFR+74(3,WAPTR)                0094
*   MVZ($INBUFR(4:4),$INBUFR(3:3)); /* ZONE TO SIGN.                 */
         MVZ   $INBUFR+3(1,WAPTR),$INBUFR+2(WAPTR)                 0095
*   GEN(BR R14);                    /* RETURN                        */
         BR R14
*/* ATDSPLY   INVOKED.                                               */
*/********************************************************************/
*/* THERE HAVE BEEN NO ATBUILD INCLUSIONS IN THIS COMPILATION.       */
*/********************************************************************/
*/* END OF ATDSPLY.                                                  */
*                                                                  0097
*   END ISTSC02E;                                                  0097
         B     @EL00001                                            0097
@DATA    DS    0H
         DS    0F
         DS    0F
@CF00039 DC    F'8'
@CV00643 DC    V(S20CEC03)
         DS    0D
MASKLIST DC    X'8040201008040201'
$TCA07   DS    CL13
         ORG   $TCA07
$TCB07   DC    A(210)
$TCC07   DC    A(0)
$TCD07   DC    B'10000000'
$TCE07   DC    X'FFFFFFFF'
         ORG   $TCA07+13
         DS    CL3
$TCA08   DS    CL13
         ORG   $TCA08
$TCB08   DC    A(210)
$TCC08   DC    A(0)
$TCD08   DC    B'10000000'
$TCE08   DC    X'40000000'
         ORG   $TCA08+13
         DS    CL3
PATCH    DC    8F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
WAPTR    EQU   @02
RTNMAP   EQU   @05
R15      EQU   @15
R1       EQU   @01
R2       EQU   @02
R6       EQU   @06
R7       EQU   @07
X        EQU   @08
R13      EQU   @13
R14      EQU   @14
R10      EQU   @10
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$TESTERR EQU   $ERROPT
$RT0108  EQU   $SCTTBLE+4
$RT0916  EQU   $SCTTBLE+5
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$MANINTV EQU   $OLTFLGS
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$CTEQTT  EQU   $TOTFLG1
$ROUTMSK EQU   $SCTTBLE+40
$RETMASK EQU   $SCTTBLE+70
$CDA     EQU   TOLTEPWA+100
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$LOWADDR EQU   $OLTPTR
$HIMOREC EQU   $CDA+60
$R13PTR  EQU   $CDA+80
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$FLAG2   EQU   $COMMFLG+1
$FLAG3   EQU   $COMMFLG+2
$FLAG4   EQU   $COMMFLG+3
$FLAG5   EQU   $COMMFLG+4
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$ABNDBIT EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$FLAG8   EQU   $COMMFLG+7
$TCECM   EQU   $FLAG8
$FLAG9   EQU   $COMMFLG+8
$FLAG10  EQU   $COMMFLG+9
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$FLAG13  EQU   $COMMFLG+12
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
@NM00035 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$SIOFLG  EQU   $DEVFLG3
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$RNINFO  EQU   $DEVTBLE+56
$DEVFLG5 EQU   $RNINFO+8
$DEVFLG4 EQU   $DEVTBLE+65
$INBUFR  EQU   TOLTEPWA+2104
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00043 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00043+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00043+10
$ENXX    EQU   @NM00043+15
$IMITX   EQU   $ENXX
$TRTN#   EQU   TOLTEPWA+2815
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
#EXIT    EQU   0
RTNEMAP  EQU   0
$RTNEEXT EQU   RTNEMAP+4
$RTNENUM EQU   RTNEMAP+8
$RTNEREF EQU   RTNEMAP+9
$RTNEFLG EQU   RTNEMAP+10
$RTNMI   EQU   $RTNEFLG
$DCL     EQU   $RTNEFLG
@NM00047 EQU   0
RTNDISP  EQU   @NM00047+10
INST     EQU   @NM00047+12
$NEWSPRF EQU   0
$RTN#    EQU   $NEWSPRF
#FLAGS   EQU   $NEWSPRF+16
$REFNUM  EQU   $NEWSPRF+17
BACKSAVE EQU   0
SAVEMAP  EQU   0
RET14    EQU   SAVEMAP+12
RET15    EQU   SAVEMAP+16
OLTENTRY EQU   0
SVESC02E EQU   SVESC022
RTNSEL   EQU   $INBUFR
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC025 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC022
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
FILL     EQU   SAVEMAP
$RME     EQU   $NEWSPRF+36
@NM00050 EQU   $NEWSPRF+35
$ECA     EQU   $NEWSPRF+32
$DCHB    EQU   $NEWSPRF+28
$MOSIZE  EQU   $NEWSPRF+24
$RTSIZE  EQU   $NEWSPRF+20
$COUNT   EQU   $NEWSPRF+18
@NM00049 EQU   #FLAGS
#MSGIDRQ EQU   #FLAGS
#PLKMCOR EQU   #FLAGS
@NM00048 EQU   #FLAGS
$VIRTUAL EQU   #FLAGS
$PLINK$  EQU   $NEWSPRF+12
$SCTREQ  EQU   $NEWSPRF+11
$RM      EQU   $NEWSPRF+9
$CTYPE   EQU   $NEWSPRF+8
$CCLASS  EQU   $NEWSPRF+7
$CFEAT   EQU   $NEWSPRF+6
$CMODEL  EQU   $NEWSPRF+5
$TYPE    EQU   $NEWSPRF+4
$CLASS   EQU   $NEWSPRF+3
$FEAT    EQU   $NEWSPRF+2
$MODEL   EQU   $NEWSPRF+1
#MSGID   EQU   @NM00047+16
LEVEL    EQU   @NM00047+8
SECTID   EQU   @NM00047
@NM00046 EQU   $RTNEFLG
$TRMYES  EQU   $RTNEFLG
$RTNIDNT EQU   RTNEMAP+2
$RTNLEVL EQU   RTNEMAP+1
$RTNTRMG EQU   RTNEMAP
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC033 EQU   TOLTEPWA+3160
@NM00045 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00044 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00043+14
$NSXX    EQU   @NM00043+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00043+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00043
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$WORK    EQU   TOLTEPWA+2376
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
$SLTBL   EQU   TOLTEPWA+1468
$CDEVPT  EQU   TOLTEPWA+1466
$DEVCNTS EQU   TOLTEPWA+1464
$FEEDBCK EQU   $DEVTBLE+66
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00042 EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$LINENME EQU   $RNINFO
$CID     EQU   $DEVTBLE+52
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
$SYSMN   EQU   $DEVTBLE+28
@NM00041 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$NOTDEV  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00040 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00039 EQU   $DEVCDSF
@NM00038 EQU   $DEVCDSF
@NM00037 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00035+1
$DEVCTLU EQU   @NM00035+1
$DEVCHAN EQU   @NM00035
@NM00036 EQU   @NM00035
$CTINDX  EQU   $DEVUNAD
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$CATMSG  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$LGON    EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00034 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00033 EQU   $FLAG11
@NM00032 EQU   $FLAG10
$INBND   EQU   $FLAG10
$WAITFLG EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
$NOTRRCH EQU   $FLAG9
@NM00031 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$REMSW   EQU   $FLAG9
$IGRES   EQU   $FLAG9
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00030 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00029 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$SNDRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$1STDATA EQU   $FLAG7
$CIREQ   EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$FSTMCIS EQU   $FLAG6
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00028 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00027 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$FSTFE   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$OPCOM   EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
$NDR     EQU   $FLAG2
@NM00026 EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00025 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00024 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00023 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00022 EQU   $CDA
@NM00021 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00020 EQU   $SCTTBLE+71
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00019 EQU   $TOTFLG1
@NM00018 EQU   $TOTFLG1
@NM00017 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
@NM00016 EQU   $TOTFLG1
@NM00015 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00014 EQU   $OLTFLG2
@NM00013 EQU   $OLTFLG2
@NM00012 EQU   $OLTFLG2
@NM00011 EQU   $OLTFLG2
@NM00010 EQU   $OLTFLG2
@NM00009 EQU   $OLTFLG2
@NM00008 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00007 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00006 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00005 EQU   $PDEVFLG
@NM00004 EQU   $PDEVFLG
@NM00003 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00002 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00001 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00071 EQU   S2EC0020
@ENDDATA EQU   *
         END   ISTSC02E,(C'PLS2034',0701,75177)
