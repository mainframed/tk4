         TITLE 'COMMUNICATIONS INTERVAL MODULE - ISTIC002              *
                        '
ISTIC002 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTIC002  76.244'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0056
*/********************************************************************/
*                                                                  0057
*   R15=R13;                        /* SET BACKSAVE PTR              */
         LR    R15,R13                                             0057
*   R13=ADDR(SVEIC002);             /* SET PTR TO SAVE AREA          */
         LA    R13,SVEIC002(,WAPTR)                                0058
*   BACKSAVE(3)=R13;                /* CHAIN AREAS TOGETHER          */
         ST    R13,BACKSAVE+8(,R15)                                0059
*   SVEIC002(2)=R15;                                               0060
         ST    R15,SVEIC002+4(,WAPTR)                              0060
*   RCAPTR=$RCA;                                                   0061
*                                                                  0061
         L     RCAPTR,$RCA(,WAPTR)                                 0061
*/********************************************************************/
*/* CHECK FOR SPECIAL CONDITION WHERE CI IS RE-ENTERED AFTER HAVING  */
*/* ONCE EXITED TO THE OLT AFTER CAT ERROR OCCURRED. IN THIS CASE    */
*/* THERE HAS ALREADY BEEN EITHER A DEVICE CHANGE OR TEST CHANGE     */
*/* ENTERED. NOW PROCEED TO DECODE THIS ENTRY.                       */
*/********************************************************************/
*                                                                  0062
*   IF $CATERR=ON&$CATMSG=OFF THEN  /* IF $CATERR IS ON BUT          */
         TM    $CATERR(WAPTR),B'00100000'                          0062
         BNO   @RF00062                                            0062
         TM    $CATMSG(WAPTR),B'00000100'                          0062
         BNZ   @RF00062                                            0062
*     DO;                           /* $CATMSG IS OFF, THEN RESET    */
*       $CATERR=OFF;                /* $CATERR FLAG AND PROCEED TO   */
         NI    $CATERR(WAPTR),B'11011111'                          0064
*       GO TO I02C0160;             /* DECODE PRIOR INPUT.           */
         B     I02C0160                                            0065
*     END;                                                         0066
*   $TSTDEVP=OFF;                   /* RESET PERMISSION REQUIRED     */
@RF00062 DS    0H                                                  0068
*   $APRQPER=OFF;                   /* SWITCHES (TEST DEVS AND AP)   */
         NI    $TSTDEVP(WAPTR),B'10011111'                         0068
*/********************************************************************/
*/*   OUTPUT OPTIONS ARE MESSAGE                                     */
*/********************************************************************/
*                                                                  0069
*I02C0005:                                                         0069
*   $CIREQ=OFF;                     /* RESET CI REQUIRED FLAG        */
I02C0005 NI    $CIREQ(WAPTR),B'11111110'                           0069
*   IF $LGON=ON THEN                /* CHECK FOR INITIAL ENTRY       */
         TM    $LGON(WAPTR),B'01000000'                            0070
         BNO   @RF00070                                            0070
*     DO;                                                          0071
*                                                                  0071
*/********************************************************************/
*/* IF THIS IS THE INITIAL ENTRY TO CI MODULE FOR THIS USER OR       */
*/* CONTROL HAS BEEN TRANSFERRED TO A NEW CT, OUTPUT THE MESSAGE     */
*/* 102I OLTS RUNNING WITH TOLTEP REL. XX.                           */
*/********************************************************************/
*                                                                  0072
*       $LGON=OFF;                                                 0072
         NI    $LGON(WAPTR),B'10111111'                            0072
*       IF $SYSMN(1,1:8)^='SYS CON ' THEN/* SYSTEM CONSOL    @D32JPFR*/
         CLC   $SYSMN(8,WAPTR),@CC00760                            0073
         BE    @RF00073                                            0073
*         DO;                       /* NO                    @D32JPFR*/
*           TEMPFLGS='0A'X;         /* SET REMOTE FLG        @D32JPFR*/
         MVI   TEMPFLGS(WAPTR),X'0A'                               0075
*           CTNAME=$SYSMN(1,1:8);   /* PICK UP NAME          @D32JPFR*/
         MVC   CTNAME(8,WAPTR),$SYSMN(WAPTR)                       0076
*           CALL I02C1000;          /* VERIFY AND CHK DEV CHARS    0077
*                                                            @D32JPFR*/
         BAL   @14,I02C1000                                        0077
*           IF R15^=0 THEN          /* BAD RC                @D32JPFR*/
         LTR   R15,R15                                             0078
         BZ    @RF00078                                            0078
*             DO;                   /* YES                   @D32JPFR*/
*               $INBUFR(1:8)=$SYSMN(1);/* PUT NAME IN MSG    @D32JPFR*/
         MVC   $INBUFR(8,WAPTR),$SYSMN(WAPTR)                      0080
*               IF R15=4 THEN       /* ALREADY IN USE        @D32JPFR*/
         C     R15,@CF00068                                        0081
         BNE   @RF00081                                            0081
*                 $INBUFR(9:29)=M923FILL(2);/* YES           @D32JPFR*/
         MVI   $INBUFR+28(WAPTR),C' '                              0082
         MVC   $INBUFR+8(20,WAPTR),M923FILL+20                     0082
*               ELSE                /* RC MUST = 8           @D32JPFR*/
*                 $INBUFR(9:29)=M923FILL(1);/* INVALID DEV CHARS   0083
*                                                            @D32JPFR*/
*                                                                  0083
         B     @RC00081                                            0083
@RF00081 MVI   $INBUFR+28(WAPTR),C' '                              0083
         MVC   $INBUFR+8(20,WAPTR),M923FILL                        0083
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(923)DIR(NET)SUB(YES) INVOKED            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0084
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
@RC00081 OI    $TCECM(WAPTR),B'00000001'                           0084
*               R1=ADDR($TCA11);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA11                                           0085
*               CALL #EXIT;         /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0086
         BALR  @14,@15                                             0086
*               DCL                                                0087
*                 1 $TCA11,         /* TCEC PARM LIST                */
*                  2 $TCB11 FIXED(32) INIT(923),/* MSG NUMBER        */
*                  2 $TCC11 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD11 BIT(8) INIT('10001000'B),/* FLAG         */
*                  2 $TCE11 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*               GOTO I02C0092;      /* RETURN                @D32JPFR*/
         B     I02C0092                                            0088
*             END;                  /*                       @D32JPFR*/
*           $RNINFO(3)=CTPTRS;      /* SAVE INFO FROM SC030  @D32JPFR*/
@RF00078 MVC   $RNINFO+136(9,WAPTR),CTPTRS(WAPTR)                  0090
*           $OPCOM=OFF;             /* TURN OFF OPERATOR COMM FLG  0091
*                                                            @D32JPFR*/
         NI    $OPCOM(WAPTR),B'01111111'                           0091
*           $DEVFEAT(1)=SVEIC00A(1);/* PUT DEV CHARS IN TABLE      0092
*                                                            @D32JPFR*/
         MVC   $DEVFEAT(4,WAPTR),SVEIC00A(WAPTR)                   0092
*           $DEVFLG5(1)=$DEVFLG5(1)×FLAG5;/* MOVE FLAG DATA TO     0093
*                                      DEVTABLE              @D32JPFR*/
*                                                                  0093
         OC    $DEVFLG5(1,WAPTR),FLAG5(WAPTR)                      0093
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(102) INVOKED                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0094
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0094
*           R1=ADDR($TCA12);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA12                                           0095
*           CALL #EXIT;             /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0096
         BALR  @14,@15                                             0096
*           DCL                                                    0097
*             1 $TCA12,             /* TCEC PARM LIST                */
*              2 $TCB12 FIXED(32) INIT(102),/* MSG NUMBER            */
*              2 $TCC12 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD12 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE12 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK     */
*           $INBUFR=$SYSMN(1);      /* GET NAME FOR MSG      @D32JPFR*/
*                                                                  0098
         MVI   $INBUFR+8(WAPTR),C' '                               0098
         MVC   $INBUFR+9(71,WAPTR),$INBUFR+8(WAPTR)                0098
         MVC   $INBUFR(8,WAPTR),$SYSMN(WAPTR)                      0098
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(920)DIR(NET)INCT(61)SUB(YES) INVOKED        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0099
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0099
*           R1=ADDR($TCA13);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA13                                           0100
*           CALL #EXIT;             /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0101
         BALR  @14,@15                                             0101
*           DCL                                                    0102
*             1 $TCA13,             /* TCEC PARM LIST                */
*              2 $TCB13 FIXED(32) INIT(920),/* MSG NUMBER            */
*              2 $TCC13 FIXED(32) INIT(61),/* INCT LEN               */
*              2 $TCD13 BIT(8) INIT('11001000'B),/* FLAG             */
*              2 $TCE13 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK     */
*           CALL I02C2000;          /* PROCESS RESPONSE      @D32JPFR*/
         BAL   @14,I02C2000                                        0103
*           IF R15=4 THEN           /* IF RESPONSE = NO      @D32JPFR*/
         C     R15,@CF00068                                        0104
         BE    @RT00104                                            0104
*             GOTO I02C0092;        /* RETURN                @D32JPFR*/
*         END;                      /*                       @D32JPFR*/
*       ELSE                                                       0107
*         DO;                       /* PUT OUT MSG TO SYSCON @ZD10886*/
*                                                                  0107
         B     @RC00073                                            0107
@RF00073 DS    0H                                                  0108
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(102) INVOKED                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0108
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0108
*           R1=ADDR($TCA14);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA14                                           0109
*           CALL #EXIT;             /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0110
         BALR  @14,@15                                             0110
*           DCL                                                    0111
*             1 $TCA14,             /* TCEC PARM LIST                */
*              2 $TCB14 FIXED(32) INIT(102),/* MSG NUMBER            */
*              2 $TCC14 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD14 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE14 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK     */
*         END;                                                     0112
*     END;                                                         0113
@RC00073 DS    0H                                                  0114
*I02C0007:                                                         0114
*   $OPTMSG=ON;                                                    0114
@RF00070 DS    0H                                                  0114
I02C0007 OI    $OPTMSG(WAPTR),B'10000000'                          0114
*   CALL ISTIC005;                  /* GO ISSUE OPTIONS ARE... MSG   */
         L     @15,@CV00795                                        0115
         BALR  @14,@15                                             0115
*/********************************************************************/
*/*    ISSUE  105D  MESSAGE.                                         */
*/********************************************************************/
*                                                                  0116
*I02C0010:                                                         0116
*                                                                  0116
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(105)INCT(61) INVOKED                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0116
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
I02C0010 OI    $TCECM(WAPTR),B'00000001'                           0116
*   R1=ADDR($TCA15);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA15                                           0117
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0118
         BALR  @14,@15                                             0118
*   DCL                                                            0119
*     1 $TCA15,                     /* TCEC PARM LIST                */
*      2 $TCB15 FIXED(32) INIT(105),/* MSG NUMBER                    */
*      2 $TCC15 FIXED(32) INIT(61), /* INCT LEN                      */
*      2 $TCD15 BIT(8) INIT('01000000'B),/* FLAG                     */
*      2 $TCE15 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK ISSUE ENTER
*                                      D/T/O/ MSG.                   */
*   $CIREQ=OFF;                     /* SET CIREQ OFF         @D32JPFR*/
         NI    $CIREQ(WAPTR),B'11111110'                           0120
*I02C0020:                                                         0121
*   $DTORESP=$INBUFR;                                              0121
I02C0020 MVC   $DTORESP(64,WAPTR),$INBUFR(WAPTR)                   0121
*   $DEVERR=OFF;                    /* RESET DEV FIELD ERROR FLAG    */
*   $TSTERR=OFF;                    /* RESET TEST FLD ERROR FLAG     */
*   $OPTERR=OFF;                    /* RESET OPT FIELD ERROR FLAG    */
         NI    $DEVERR(WAPTR),B'00111011'                          0124
*/********************************************************************/
*/*  $DTORESP CONTAINS INCOUNT IN FIRST BYTE, UP TO 61 CHARACTERS OF */
*/* OPERATOR RESPONSE.                                               */
*/********************************************************************/
*                                                                  0125
*   X=0;                                                           0125
         SLR   X,X                                                 0125
*   DO I=2 TO $DTORESP(1:1)+1;      /* CHECK REPLY FOR EXACTLY       */
         LA    I,2                                                 0126
         B     @DE00126                                            0126
@DL00126 DS    0H                                                  0127
*     IF $DTORESP(I)='/' THEN       /* THREE SLASHES                 */
         LR    @14,WAPTR                                           0127
         ALR   @14,I                                               0127
         CLI   $DTORESP-1(@14),C'/'                                0127
         BNE   @RF00127                                            0127
*       X=X+1;                      /* ADD SLASH COUNT               */
         AL    X,@CF00072                                          0128
*     ELSE                                                         0129
*       ;                                                          0129
@RF00127 DS    0H                                                  0130
*   END;                                                           0130
         AL    I,@CF00072                                          0130
@DE00126 LA    @14,1                                               0130
         SLR   @11,@11                                             0130
         IC    @11,$DTORESP(,WAPTR)                                0130
         ALR   @14,@11                                             0130
         CR    I,@14                                               0130
         BNH   @DL00126                                            0130
*   IF X=3 THEN                     /* (MEANING EXACTLY 3 SLASHES  0131
*                                      FOUND)                        */
         C     X,@CF00081                                          0131
         BNE   @RF00131                                            0131
*/********************************************************************/
*/* IF THREE SLASHES FOUND, THEN PUT ADDRESSES IN $SLASHAD ARRAY.    */
*/********************************************************************/
*                                                                  0132
*     DO;                                                          0132
*       X=0;                                                       0133
         SLR   X,X                                                 0133
*       DO I=2 TO $DTORESP(1:1)+1;                                 0134
         LA    I,2                                                 0134
         B     @DE00134                                            0134
@DL00134 DS    0H                                                  0135
*         IF $DTORESP(I)='/' THEN                                  0135
         LR    @14,WAPTR                                           0135
         ALR   @14,I                                               0135
         CLI   $DTORESP-1(@14),C'/'                                0135
         BNE   @RF00135                                            0135
*           DO;                                                    0136
*             X=X+1;                                               0137
         AL    X,@CF00072                                          0137
*             $SLASHAD(X)=ADDR($DTORESP(I));                       0138
         LR    @14,X                                               0138
         SLA   @14,2                                               0138
         LA    @11,$DTORESP-1(I,WAPTR)                             0138
         ST    @11,$SLASHAD-4(@14,WAPTR)                           0138
*           END;                                                   0139
*         ELSE                                                     0140
*           ;                                                      0140
@RF00135 DS    0H                                                  0141
*       END;                                                       0141
         AL    I,@CF00072                                          0141
@DE00134 LA    @14,1                                               0141
         SLR   @11,@11                                             0141
         IC    @11,$DTORESP(,WAPTR)                                0141
         ALR   @14,@11                                             0141
         CR    I,@14                                               0141
         BNH   @DL00134                                            0141
*     END;                                                         0142
*   ELSE                            /* WORK AREA.                    */
*     DO;                                                          0143
         B     @RC00131                                            0143
@RF00131 DS    0H                                                  0144
*       IF X>0 THEN                 /* CHECK FOR SLASH COUNT >0      */
         LTR   X,X                                                 0144
         BNP   @RF00144                                            0144
*         DO;                                                      0145
*                                                                  0145
*/********************************************************************/
*/* INPUT CONTAINS 1 OR MORE SLASHES (BUT NOT EXACTLY 3) THEN OUTPUT */
*/* MESSAGE -106I INPUT DATA DOES NOT CONTAIN 3 SLASHES-             */
*/********************************************************************/
*                                                                  0146
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(106) INVOKED                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0146
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0146
*           R1=ADDR($TCA16);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA16                                           0147
*           CALL #EXIT;             /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0148
         BALR  @14,@15                                             0148
*           DCL                                                    0149
*             1 $TCA16,             /* TCEC PARM LIST                */
*              2 $TCB16 FIXED(32) INIT(106),/* MSG NUMBER            */
*              2 $TCC16 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD16 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE16 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK   0149
*                                      ISSUE 106I MESSAGE.           */
*           GO TO I02C0010;         /* GO RE-ISSUE 105D MESSAGE.     */
         B     I02C0010                                            0150
*         END;                                                     0151
*       ELSE                                                       0152
*         ;                                                        0152
*                                                                  0152
@RF00144 DS    0H                                                  0153
*/********************************************************************/
*/* NO SLASHES IN RESPONSE - THEN TRY FOR VALID VERB REQUESTS.       */
*/********************************************************************/
*                                                                  0153
*I02C0080:                                                         0153
*       $DEVCHNG=OFF;               /* RESET DEV CHANGE FLAG         */
I02C0080 DS    0H                                                  0154
*       $TESTCNG=OFF;               /* RESET TEST CHANGE FLAG        */
*       $OPTCHNG=OFF;               /* RESET OPT CHANGE FLAG         */
         NI    $DEVCHNG(WAPTR),B'11000111'                         0155
*/********************************************************************/
*/* CHECK LENGTH OF RESPONSE - MUST EQUAL LENGTH OF SELECTED VERB.   */
*/********************************************************************/
*                                                                  0156
*       IF DTCOUNT=4 THEN           /* CHECK FOR LENGTH 4 VERBS      */
         CLI   DTCOUNT(WAPTR),4                                    0156
         BNE   @RF00156                                            0156
*         DO;                                                      0157
*                                                                  0157
*/********************************************************************/
*/*                 CHECK FOR DUMP REQUEST                           */
*/********************************************************************/
*                                                                  0158
*           IF $DTORESP(2:5)^='DUMP' THEN                          0158
         CLC   $DTORESP+1(4,WAPTR),@CC00815                        0158
         BNE   @RT00158                                            0158
*             GO TO I02C0090;                                      0159
*           IF $OPCOM=ON            /* CHECK FOR CT=SYSTEM CNSL      */
*               &$ALTPRTR=OFF THEN  /* AND NO ALT PRINTER            */
         TM    $OPCOM(WAPTR),B'10000000'                           0160
         BNO   @RF00160                                            0160
         TM    $ALTPRTR(WAPTR),B'00000010'                         0160
         BNZ   @RF00160                                            0160
*             DO;                                                  0161
*                                                                  0161
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(546) INVOKED                            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0162
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0162
*               R1=ADDR($TCA17);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA17                                           0163
*               CALL #EXIT;         /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0164
         BALR  @14,@15                                             0164
*               DCL                                                0165
*                 1 $TCA17,         /* TCEC PARM LIST                */
*                  2 $TCB17 FIXED(32) INIT(546),/* MSG NUMBER        */
*                  2 $TCC17 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD17 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE17 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*               GO TO I02C0010;     /* GO RE-ISSUE 105D MESSAGE      */
         B     I02C0010                                            0166
*             END;                                                 0167
*           ELSE                                                   0168
*             DO;                                                  0168
@RF00160 DS    0H                                                  0169
*               CALL ISTTC037;      /* CALL DUMP FUNCTION.           */
         L     @15,@CV00823                                        0169
         BALR  @14,@15                                             0169
*               GO TO I02C0010;     /* GO RE-ISSUE 105D MESSAGE.     */
         B     I02C0010                                            0170
*             END;                                                 0171
*                                                                  0171
*/********************************************************************/
*/*                 CHECK FOR TALK REQUEST                           */
*/********************************************************************/
*                                                                  0172
*I02C0090:                                                         0172
*           IF $DTORESP(2:5)='TALK' THEN                           0172
I02C0090 CLC   $DTORESP+1(4,WAPTR),@CC00824                        0172
         BNE   @RF00172                                            0172
*             DO;                                                  0173
*                                                                  0173
*/********************************************************************/
*/*   DETERMINE IF AN OLT IS ACTIVE AND HAS THE TALK CAPABILITY.     */
*/********************************************************************/
*                                                                  0174
*               IF $DYCOM=ON&$OLTACT=ON THEN                       0174
         TM    $DYCOM(WAPTR),B'00000001'                           0174
         BNO   @RF00174                                            0174
         TM    $OLTACT(WAPTR),B'00000001'                          0174
         BNO   @RF00174                                            0174
*                 DO;                                              0175
*                   $TALK=ON;       /* SET $TALK FLAG IN SCT.        */
         OI    $TALK(WAPTR),B'10000000'                            0176
*                   GO TO I02C0230; /* RETURN TO ACTIVE OLT.         */
         B     I02C0230                                            0177
*                 END;                                             0178
*               ELSE                                               0179
*                 ;                                                0179
@RF00174 DS    0H                                                  0180
*               DO;                                                0180
*                                                                  0180
*/********************************************************************/
*/* OUTPUT MESSAGE 166I OLT DOES NOT HAVE TALK CAPABILITY.           */
*/********************************************************************/
*                                                                  0181
*                 /***************************************************/
*                 /*                                                 */
*                 /* TCEC MSGN(166) INVOKED                          */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0181
*                 $TCECM='1'B;      /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0181
*                 R1=ADDR($TCA18);  /* SET UP PARM LIST $TR          */
         LA    R1,$TCA18                                           0182
*                 CALL #EXIT;       /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0183
         BALR  @14,@15                                             0183
*                 DCL                                              0184
*                   1 $TCA18,       /* TCEC PARM LIST                */
*                    2 $TCB18 FIXED(32) INIT(166),/* MSG NUMBER      */
*                    2 $TCC18 FIXED(32) INIT(0),/* INCT LEN          */
*                    2 $TCD18 BIT(8) INIT('00000000'B),/* FLAG       */
*                    2 $TCE18 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE  0184
*                                      MASK                          */
*                 GO TO I02C0010;   /* RE-ISSUE 105D MSG.            */
         B     I02C0010                                            0185
*               END;                                               0186
*             END;                                                 0187
*           ELSE                                                   0188
*             GO TO I02C0120;       /* GO CHECK FOR CT=              */
*         END;                                                     0189
*       ELSE                                                       0190
*         ;                                                        0190
@RF00156 DS    0H                                                  0191
*       IF DTCOUNT=6 THEN           /* CHECK VERBS OF LENGTH 6       */
         CLI   DTCOUNT(WAPTR),6                                    0191
         BNE   @RF00191                                            0191
*         DO;                                                      0192
*                                                                  0192
*/********************************************************************/
*/*                   CHECK FOR CANCEL REQUEST                       */
*/********************************************************************/
*                                                                  0193
*           IF $DTORESP(2:7)='CANCEL' THEN                         0193
         CLC   $DTORESP+1(6,WAPTR),@CC00834                        0193
         BNE   @RF00193                                            0193
*             DO;                                                  0194
*I02C0092:                          /*                       @D32JPFR*/
*               $CANCEL=ON;         /* INDICATE CANCEL IN PROGRESS   */
I02C0092 OI    $CANCEL(WAPTR),B'00000010'                          0195
*               CALL C14C0020;      /* CALL LOGOFF, NO RETURN.       */
         L     @15,@CV00836                                        0196
         BALR  @14,@15                                             0196
*             END;                                                 0197
*           ELSE                                                   0198
*             ;                                                    0198
*                                                                  0198
@RF00193 DS    0H                                                  0199
*/********************************************************************/
*/*                   CHECK FOR PROMPT REQUEST                       */
*/********************************************************************/
*                                                                  0199
*           IF $DTORESP(2:7)='PROMPT' THEN                         0199
         CLC   $DTORESP+1(6,WAPTR),@CC00837                        0199
         BE    @RT00199                                            0199
*             GO TO I02C0110;       /* GO ISSUE PROMPT MSGS          */
*           ELSE                                                   0201
*             ;                                                    0201
*                                                                  0201
*/********************************************************************/
*/*                 CHECK FOR UPDATE REQUEST                         */
*/********************************************************************/
*                                                                  0202
*           IF $DTORESP(2:7)^='UPDATE' THEN                        0202
         CLC   $DTORESP+1(6,WAPTR),@CC00839                        0202
         BNE   @RT00202                                            0202
*             GO TO I02C0120;       /* GO CHECK FOR CT=TERM INPUT    */
*/********************************************************************/
*/* CHECK FOR NON-DOS SYSTEM BEFORE ALLOWING UPDATE.                 */
*/* IF THE NUMBER OF TOLTEP USERS IS GREATER THAN 1, UPDATE FUNCTION */
*/* IS UNAVAILABLE AT THIS TIME.                                     */
*/********************************************************************/
*                                                                  0204
*           $UPDATE=ON;             /*                       @DA04680*/
         OI    $UPDATE(RCAPTR),B'10000000'                         0204
*           IF $USECNT>1×$DRIVER='87'X THEN                        0205
         LH    @14,$USECNT(,RCAPTR)                                0205
         C     @14,@CF00072                                        0205
         BH    @RT00205                                            0205
         CLI   $DRIVER(WAPTR),X'87'                                0205
         BNE   @RF00205                                            0205
@RT00205 DS    0H                                                  0206
*             DO;                                                  0206
*               $UPDATE=OFF;        /*                       @DA04680*/
*                                                                  0207
         NI    $UPDATE(RCAPTR),B'01111111'                         0207
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(551)MSGMSK('40000000'X) INVOKED         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0208
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0208
*               R1=ADDR($TCA19);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA19                                           0209
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0210
         BALR  @14,@15                                             0210
*               DCL                                                0211
*                 1 $TCA19,         /* TCEC PARM LIST                */
*                  2 $TCB19 FIXED(32) INIT(551),/* MSG NUMBER        */
*                  2 $TCC19 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD19 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE19 CHAR(4) INIT('40000000'X);/* MSSAGE MASK */
*               GO TO I02C0010;     /* REISSUE 105D MESSAGE          */
         B     I02C0010                                            0212
*             END;                                                 0213
*                                                                  0213
*/********************************************************************/
*/*            ASK NETWORK OPERATOR PERMISSION TO UPDATE             */
*/********************************************************************/
*                                                                  0214
*           IF $OPCOM=ON THEN       /* IF CT IS SAME AS SYSTEM     0214
*                                      CONSOLE, NO NEED FOR        0214
*                                      PERMISSION.                   */
@RF00205 TM    $OPCOM(WAPTR),B'10000000'                           0214
         BO    @RT00214                                            0214
*             GO TO I02C0100;                                      0215
*           $INBUFR(1:8)=$SYSMN(1); /* CT NAME TO MESSAGE            */
*                                                                  0216
         MVC   $INBUFR(8,WAPTR),$SYSMN(WAPTR)                      0216
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(550)INCT(61)SUB(YES)DIR(NET) INVOKED        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0217
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0217
*           R1=ADDR($TCA20);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA20                                           0218
*           CALL #EXIT;             /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0219
         BALR  @14,@15                                             0219
*           DCL                                                    0220
*             1 $TCA20,             /* TCEC PARM LIST                */
*              2 $TCB20 FIXED(32) INIT(550),/* MSG NUMBER            */
*              2 $TCC20 FIXED(32) INIT(61),/* INCT LEN               */
*              2 $TCD20 BIT(8) INIT('11001000'B),/* FLAG             */
*              2 $TCE20 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK     */
*I02C0095:                                                         0221
*           IF^($INBUFR(2)='Y'      /* IF INPUT IS NOT Y OR N        */
*               ×$INBUFR(2)='N')×($INBUFR(1)>1&$INBUFR(3)^=',') THEN
I02C0095 CLI   $INBUFR+1(WAPTR),C'Y'                               0221
         BE    @GL00005                                            0221
         CLI   $INBUFR+1(WAPTR),C'N'                               0221
         BNE   @RT00221                                            0221
@GL00005 CLI   $INBUFR(WAPTR),1                                    0221
         BNH   @RF00221                                            0221
         CLI   $INBUFR+2(WAPTR),C','                               0221
         BE    @RF00221                                            0221
@RT00221 DS    0H                                                  0222
*             DO;                                                  0222
*                                                                  0222
*/********************************************************************/
*/* OUTPUT 299D INCORRECT RESPONSE MESSAGE IF INPUT IS NOT           */
*/* ACCEPTABLE.                                                      */
*/********************************************************************/
*                                                                  0223
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(299)INCT(61)DIR(NET) INVOKED            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0223
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0223
*               R1=ADDR($TCA21);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA21                                           0224
*               CALL #EXIT;         /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0225
         BALR  @14,@15                                             0225
*               DCL                                                0226
*                 1 $TCA21,         /* TCEC PARM LIST                */
*                  2 $TCB21 FIXED(32) INIT(299),/* MSG NUMBER        */
*                  2 $TCC21 FIXED(32) INIT(61),/* INCT LEN           */
*                  2 $TCD21 BIT(8) INIT('01001000'B),/* FLAG         */
*                  2 $TCE21 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*               GO TO I02C0095;     /* GO DECODE REPLY               */
         B     I02C0095                                            0227
*             END;                                                 0228
*           ELSE                                                   0229
*             DO;                                                  0229
@RF00221 DS    0H                                                  0230
*               T463C=T463B;        /* MOVE INBUFFER DATA            */
         MVC   @TS00001(61),T463B(WAPTR)                           0230
         MVC   T463C(61,WAPTR),@TS00001                            0230
*               T463A='550';        /* INSERT MSG NUMBER             */
         MVC   T463A(3,WAPTR),@CC00868                             0231
*               IF $INBUFR(5)=',' THEN                             0232
         CLI   $INBUFR+4(WAPTR),C','                               0232
         BNE   @RF00232                                            0232
*                 DO;                                              0233
*                                                                  0233
*                   /*************************************************/
*                   /*                                               */
*                   /* TCEC MSGN(463)SUB(YES)MSGMSK('C0000000'X)     */
*                   /* INVOKED                                       */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0234
*                   $TCECM='1'B;    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0234
*                   R1=ADDR($TCA22);/* SET UP PARM LIST $TR          */
         LA    R1,$TCA22                                           0235
*                   CALL S20CEC03;  /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0236
         BALR  @14,@15                                             0236
*                   DCL                                            0237
*                     1 $TCA22,     /* TCEC PARM LIST                */
*                      2 $TCB22 FIXED(32) INIT(463),/* MSG NUMBER    */
*                      2 $TCC22 FIXED(32) INIT(0),/* INCT LEN        */
*                      2 $TCD22 BIT(8) INIT('10000000'B),/* FLAG     */
*                      2 $TCE22 CHAR(4) INIT('C0000000'X);/* MSSAGE
*                                      MASK                          */
*                 END;                                             0238
*               IF $INBUFR(4)='N' THEN                             0239
@RF00232 CLI   $INBUFR+3(WAPTR),C'N'                               0239
         BNE   @RF00239                                            0239
*                 DO;                                              0240
*                                                                  0240
*                   /*************************************************/
*                   /*                                               */
*                   /* TCEC MSGN(254) INVOKED                        */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0241
*                   $TCECM='1'B;    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0241
*                   R1=ADDR($TCA23);/* SET UP PARM LIST $TR          */
         LA    R1,$TCA23                                           0242
*                   CALL #EXIT;     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0243
         BALR  @14,@15                                             0243
*                   DCL                                            0244
*                     1 $TCA23,     /* TCEC PARM LIST                */
*                      2 $TCB23 FIXED(32) INIT(254),/* MSG NUMBER    */
*                      2 $TCC23 FIXED(32) INIT(0),/* INCT LEN        */
*                      2 $TCD23 BIT(8) INIT('00000000'B),/* FLAG     */
*                      2 $TCE23 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE
*                                      MASK                          */
*                   $UPDATE=OFF;    /*                       @DA04680*/
         NI    $UPDATE(RCAPTR),B'01111111'                         0245
*                   GO TO I02C0010;                                0246
         B     I02C0010                                            0246
*                 END;                                             0247
*I02C0100:                                                         0248
*                                                                  0248
*/********************************************************************/
*/* IF THIS IS NOT THE INITIAL D/T/O/ ENTRY, THEN CALL DTERM TO CLEAN*/
*/* UP ANY POSSIBLE ACTIVE TEST OR DEVICES (ALL TEST DEVICES WILL BE */
*/* RELEASED.)                                                       */
*/********************************************************************/
*                                                                  0248
*               CALL ISTTC035;                                     0248
@RF00239 DS    0H                                                  0248
I02C0100 L     @15,@CV00883                                        0248
         BALR  @14,@15                                             0248
*               CALL ISTIC006;      /* CALL THE UPDATE MODULES       */
         L     @15,@CV00885                                        0249
         BALR  @14,@15                                             0249
*/****************************************************************** */
*/* RESET VALID DEVICE AND TEST FIELD INDICATORS TO FORCE            */
*/* REDEFINITION OF THESE FIELDS.                                    */
*/****************************************************************** */
*                                                                  0250
*               $VALDDEV=OFF;                                      0250
*               $VALDTST=OFF;       /* SET UPDATE INACTIVE           */
         NI    $VALDDEV(WAPTR),B'11110011'                         0251
*               $UPDATE=OFF;        /* RE-ISSUE 105D MESSAGE         */
         NI    $UPDATE(RCAPTR),B'01111111'                         0252
*               GO TO I02C0010;                                    0253
         B     I02C0010                                            0253
*             END;                                                 0254
*         END;                      /* END OF CHECK FOR VERBS OF   0255
*                                      LENGTH SIX                    */
*       IF DTCOUNT=10 THEN          /* CHECK VERB OF LENGTH 10.      */
@RF00191 CLI   DTCOUNT(WAPTR),10                                   0256
         BNE   @RF00256                                            0256
*         DO;                                                      0257
*                                                                  0257
*/********************************************************************/
*/*                 CHECK FOR PROMPT ALL REQUEST                     */
*/********************************************************************/
*                                                                  0258
*           IF $DTORESP(2:11)='PROMPT ALL' THEN                    0258
         CLC   $DTORESP+1(10,WAPTR),@CC00888                       0258
         BNE   @RF00258                                            0258
*             DO;                                                  0259
*I02C0110:                                                         0260
*                                                                  0260
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(147)MSGMSK('FFFFFFFF'X) INVOKED         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0260
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
I02C0110 OI    $TCECM(WAPTR),B'00000001'                           0260
*               R1=ADDR($TCA24);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA24                                           0261
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0262
         BALR  @14,@15                                             0262
*               DCL                                                0263
*                 1 $TCA24,         /* TCEC PARM LIST                */
*                  2 $TCB24 FIXED(32) INIT(147),/* MSG NUMBER        */
*                  2 $TCC24 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD24 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE24 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*                                                                  0263
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(148)MSGMSK('FFFFFFFF'X) INVOKED         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0264
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0264
*               R1=ADDR($TCA25);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA25                                           0265
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0266
         BALR  @14,@15                                             0266
*               DCL                                                0267
*                 1 $TCA25,         /* TCEC PARM LIST                */
*                  2 $TCB25 FIXED(32) INIT(148),/* MSG NUMBER        */
*                  2 $TCC25 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD25 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE25 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*                                                                  0267
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(149)MSGMSK('FFFFFFFF'X) INVOKED         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0268
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0268
*               R1=ADDR($TCA26);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA26                                           0269
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0270
         BALR  @14,@15                                             0270
*               DCL                                                0271
*                 1 $TCA26,         /* TCEC PARM LIST                */
*                  2 $TCB26 FIXED(32) INIT(149),/* MSG NUMBER        */
*                  2 $TCC26 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD26 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE26 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*                                                                  0271
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(141)MSGMSK('FFFFFFFF'X) INVOKED         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0272
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0272
*               R1=ADDR($TCA27);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA27                                           0273
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0274
         BALR  @14,@15                                             0274
*               DCL                                                0275
*                 1 $TCA27,         /* TCEC PARM LIST                */
*                  2 $TCB27 FIXED(32) INIT(141),/* MSG NUMBER        */
*                  2 $TCC27 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD27 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE27 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*               GO TO I02C0010;     /* GO RE-ISSUE 105D MESSAGE      */
         B     I02C0010                                            0276
*             END;                                                 0277
*           ELSE                                                   0278
*             ;                                                    0278
@RF00258 DS    0H                                                  0279
*           IF $DTORESP(2:11)='PROMPT DEV' THEN                    0279
         CLC   $DTORESP+1(10,WAPTR),@CC00914                       0279
         BNE   @RF00279                                            0279
*             DO;                                                  0280
*                                                                  0280
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(147)MSGMSK('FFFFFFFF'X) INVOKED         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0281
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0281
*               R1=ADDR($TCA28);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA28                                           0282
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0283
         BALR  @14,@15                                             0283
*               DCL                                                0284
*                 1 $TCA28,         /* TCEC PARM LIST                */
*                  2 $TCB28 FIXED(32) INIT(147),/* MSG NUMBER        */
*                  2 $TCC28 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD28 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE28 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*               GO TO I02C0010;     /* GO RE-ISSUE 105D MESSAGE      */
         B     I02C0010                                            0285
*             END;                                                 0286
*           ELSE                                                   0287
*             ;                                                    0287
@RF00279 DS    0H                                                  0288
*           IF $DTORESP(2:11)='PROMPT OPT' THEN                    0288
         CLC   $DTORESP+1(10,WAPTR),@CC00921                       0288
         BNE   @RF00288                                            0288
*             DO;                                                  0289
*                                                                  0289
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(149)MSGMSK('FFFFFFFF'X) INVOKED         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0290
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0290
*               R1=ADDR($TCA29);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA29                                           0291
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0292
         BALR  @14,@15                                             0292
*               DCL                                                0293
*                 1 $TCA29,         /* TCEC PARM LIST                */
*                  2 $TCB29 FIXED(32) INIT(149),/* MSG NUMBER        */
*                  2 $TCC29 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD29 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE29 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*               GO TO I02C0010;     /* GO RE-ISSUE 105D MESSAGE      */
         B     I02C0010                                            0294
*             END;                                                 0295
*           ELSE                                                   0296
*             GO TO I02C0120;       /* CO CHECK FOR CT=.             */
*         END;                                                     0297
*       ELSE                                                       0298
*         ;                                                        0298
*                                                                  0298
@RF00256 DS    0H                                                  0299
*/********************************************************************/
*/*                 CHECK FOR PROMPT TEST REQUEST                    */
*/********************************************************************/
*                                                                  0299
*       IF DTCOUNT=11 THEN          /* CHECK LENGTH 11 VERBS.        */
         CLI   DTCOUNT(WAPTR),11                                   0299
         BNE   @RF00299                                            0299
*         DO;                                                      0300
*           IF $DTORESP(2:12)='PROMPT TEST' THEN                   0301
         CLC   $DTORESP+1(11,WAPTR),@CC00928                       0301
         BNE   @RF00301                                            0301
*             DO;                                                  0302
*                                                                  0302
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(148)MSGMSK('FFFFFFFF'X) INVOKED         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0303
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0303
*               R1=ADDR($TCA30);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA30                                           0304
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0305
         BALR  @14,@15                                             0305
*               DCL                                                0306
*                 1 $TCA30,         /* TCEC PARM LIST                */
*                  2 $TCB30 FIXED(32) INIT(148),/* MSG NUMBER        */
*                  2 $TCC30 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD30 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE30 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*               GO TO I02C0010;     /* GO RE-ISSUE 105D MESSAGE      */
         B     I02C0010                                            0307
*             END;                                                 0308
*           IF $DTORESP(2:12)='PROMPT VERB' THEN                   0309
*                                                                  0309
@RF00301 CLC   $DTORESP+1(11,WAPTR),@CC00935                       0309
         BNE   @RF00309                                            0309
*/********************************************************************/
*/*               CHECK FOR PROMPT VERB REQUEST                      */
*/********************************************************************/
*                                                                  0310
*             DO;                                                  0310
*                                                                  0310
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(141)MSGMSK('FFFFFFFF'X) INVOKED         */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0311
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0311
*               R1=ADDR($TCA31);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA31                                           0312
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0313
         BALR  @14,@15                                             0313
*               DCL                                                0314
*                 1 $TCA31,         /* TCEC PARM LIST                */
*                  2 $TCB31 FIXED(32) INIT(141),/* MSG NUMBER        */
*                  2 $TCC31 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD31 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE31 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*               GO TO I02C0010;     /* GO REISSUE 105D MESSAGE       */
         B     I02C0010                                            0315
*             END;                                                 0316
*           ELSE                                                   0317
*             GO TO I02C0120;       /* GO CHECK FOR CT=.             */
*         END;                                                     0318
*       ELSE                                                       0319
*         ;                                                        0319
*                                                                  0319
@RF00299 DS    0H                                                  0320
*/********************************************************************/
*/*                      CHECK FOR CT=NEWCT                          */
*/********************************************************************/
*                                                                  0320
*I02C0120:                                                         0320
*       IF $DTORESP(2:4)^='CT=' THEN                               0320
I02C0120 CLC   $DTORESP+1(3,WAPTR),@CC00942                        0320
         BNE   @RT00320                                            0320
*         GO TO I02C0150;                                          0321
*       I=$DTORESP(1:1)+1;          /* POINTER TO LAST INPUT CHAR    */
         LA    I,1                                                 0322
         SLR   @14,@14                                             0322
         IC    @14,$DTORESP(,WAPTR)                                0322
         ALR   I,@14                                               0322
*/********************************************************************/
*/* CT NAME IS CHECKED FOR VALID LENGTH (FROM 1 TO 8 CHARACTERS)     */
*/********************************************************************/
*                                                                  0323
*       IF I<5×I>12 THEN            /* VALID LENGTH IS 1 TO 8        */
         C     I,@CF00348                                          0323
         BL    @RT00323                                            0323
         C     I,@CF00134                                          0323
         BH    @RT00323                                            0323
*         GO TO I02C0150;           /* GO ISSUE 299D MESSAGE         */
*       IF $DTORESP(5:5)>'EF'X      /* IS FIRST CHAR NUMERIC         */
*           &$DTORESP(5:5)<'FA'X THEN                              0325
         CLI   $DTORESP+4(WAPTR),X'EF'                             0325
         BNH   @RF00325                                            0325
         CLI   $DTORESP+4(WAPTR),X'FA'                             0325
         BNL   @RF00325                                            0325
*         DO;                                                      0326
*                                                                  0326
*/****************************************************************** */
*/*              CT=TERMINAL IS IN UNIT ADDRESS FORMAT               */
*/****************************************************************** */
*                                                                  0327
*           CTNAME='00000000';      /* INITIALIZE 8 BYTES TO FO      */
         MVC   CTNAME(8,WAPTR),@CC00947                            0327
*           CTNAME((13-I):8)=$DTORESP(5:I);                        0328
         LA    @14,13                                              0328
         SLR   @14,I                                               0328
         ST    @14,@TF00001                                        0328
         ALR   @14,WAPTR                                           0328
         LA    @11,8                                               0328
         SL    @11,@TF00001                                        0328
         MVC   @TS00001(8),$DTORESP+4(WAPTR)                       0328
         EX    @11,@SM01138                                        0328
*           TEMPFLGS='00'X;         /* INDICATE UNIT ADDRESS         */
*                                                                  0329
         MVI   TEMPFLGS(WAPTR),X'00'                               0329
*           /*********************************************************/
*           /*                                                       */
*           /* ITACONV FROM(CTNAME)TO(CDSUAD)TYPE(EH)COUNT(8) INVOKED*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0330
*           DCL                                                    0330
*             1 ITATCPRM BDY(WORD), /* CONVERT PARAMETER LIST        */
*              2 * CHAR(4) INIT('0102F4F1'X),                      0330
*              2 ITATCFR PTR,       /* ADDRESS OF FROM FIELD         */
*              2 ITATCTO PTR,       /* ADDRESS OF TO FIELD           */
*              2 * BIT(8) INIT(0),  /* FLAGS FOR CONVERT MODULE      */
*               3 ITATCTP BIT(1),   /* TYPE OF CONVERT REQUIRED      */
*              2 ITATCNT FIXED(8);  /* NUMBER OF BYTES TO CONVERT    */
*           ITATCFR=ADDR(CTNAME);   /* SET THE FROM ADDRESS          */
         LA    @14,CTNAME(,WAPTR)                                  0331
         ST    @14,ITATCFR                                         0331
*           ITATCTO=ADDR(CDSUAD);   /* SET THE TO ADDRESS            */
         LA    @14,CDSUAD(,WAPTR)                                  0332
         ST    @14,ITATCTO                                         0332
*           ITATCTP='0'B;           /* SET THE TYPE OF CONVERT BIT   */
         NI    ITATCTP,B'01111111'                                 0333
*           ITATCNT=8;              /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0334
*           R1=ADDR(ITATCPRM);      /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0335
*           CALL ISTSC021;          /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00957                                        0336
         BALR  @14,@15                                             0336
*           IF R15^=0 THEN          /* IF CONVERT FAILED             */
         LTR   R15,R15                                             0337
         BNZ   @RT00337                                            0337
*             GO TO I02C0150;       /* GO ISSUE 299D MESSAGE         */
*         END;                                                     0339
*       ELSE                                                       0340
*         DO;                                                      0340
*                                                                  0340
         B     @RC00325                                            0340
@RF00325 DS    0H                                                  0341
*/****************************************************************** */
*/*        CT=TERMINAL INPUT IS A SYMBOLIC NAME, NOT A UNIT ADDRESS  */
*/****************************************************************** */
*                                                                  0341
*           TEMPFLGS='0A'X;         /* INDICATE SYMBOLIC NAME        */
         MVI   TEMPFLGS(WAPTR),X'0A'                               0341
*           CTNAME=$DTORESP(5:I);   /* SAVE SYMBOLIC NAME            */
         LR    @14,I                                               0342
         SL    @14,@CF00348                                        0342
         MVC   @TS00001(8),$DTORESP+4(WAPTR)                       0342
         MVI   CTNAME+1(WAPTR),C' '                                0342
         MVC   CTNAME+2(6,WAPTR),CTNAME+1(WAPTR)                   0342
         EX    @14,@SM01140                                        0342
*         END;                                                     0343
*       $CTMSGNM=$DTORESP(5:I);     /* SAVE CT NAME FOR MESSAGES     */
@RC00325 LR    @14,I                                               0344
         SL    @14,@CF00348                                        0344
         MVC   @TS00001(8),$DTORESP+4(WAPTR)                       0344
         MVI   $CTMSGNM+1(WAPTR),C' '                              0344
         MVC   $CTMSGNM+2(6,WAPTR),$CTMSGNM+1(WAPTR)               0344
         EX    @14,@SM01142                                        0344
*       CALL I02C1000;              /* CALL VERIFY FUNCTION  @D32JPFR*/
         BAL   @14,I02C1000                                        0345
*/****************************************************************** */
*/* IF NEWCT = PRESENT CT, IGNORE INPUT, GO BACK TO ISSUE 105D MSG.  */
*/****************************************************************** */
*                                                                  0346
*       IF R15=4×                   /* BAD RC FROM VERIFY    @D32JPFR*/
*           $CTMSGNM=$SYSMN(1) THEN                                0346
         C     R15,@CF00068                                        0346
         BE    @RT00346                                            0346
         CLC   $CTMSGNM(8,WAPTR),$SYSMN(WAPTR)                     0346
         BE    @RT00346                                            0346
*         GO TO I02C0010;           /* GO RE-ISSUE 105D MESSAGE      */
*       IF R15=8 THEN                                              0348
         C     R15,@CF00054                                        0348
         BNE   @RF00348                                            0348
*         DO;                                                      0349
*           $INBUFR=$CTMSGNM;                                      0350
*                                                                  0350
         MVI   $INBUFR+8(WAPTR),C' '                               0350
         MVC   $INBUFR+9(71,WAPTR),$INBUFR+8(WAPTR)                0350
         MVC   $INBUFR(8,WAPTR),$CTMSGNM(WAPTR)                    0350
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(460)SUB(YES)MSGMSK('20000000'X) INVOKED     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0351
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0351
*           R1=ADDR($TCA33);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA33                                           0352
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0353
         BALR  @14,@15                                             0353
*           DCL                                                    0354
*             1 $TCA33,             /* TCEC PARM LIST                */
*              2 $TCB33 FIXED(32) INIT(460),/* MSG NUMBER            */
*              2 $TCC33 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD33 BIT(8) INIT('10000000'B),/* FLAG             */
*              2 $TCE33 CHAR(4) INIT('20000000'X);/* MSSAGE MASK     */
*           GO TO I02C0010;         /* GO RE-ISSUE 105D MESSAGE      */
         B     I02C0010                                            0355
*         END;                                                     0356
*                                                                  0356
*/****************************************************************** */
*/* REQUEST NETWORK CONTROLLERS PERMISSION TO USE NEW CT             */
*/****************************************************************** */
*                                                                  0357
*       IF $OPCOM=ON THEN           /* IF NETWORK CONTROLLER IS SAME */
@RF00348 TM    $OPCOM(WAPTR),B'10000000'                           0357
         BO    @RT00357                                            0357
*         GO TO I02C0140;           /* AS SYSTEM CONSOLE, DO NOT ASK
*                                      PERMISSION FOR DEVICES        */
*       $INBUFR=$SYSMN(1);                                         0359
         MVI   $INBUFR+8(WAPTR),C' '                               0359
         MVC   $INBUFR+9(71,WAPTR),$INBUFR+8(WAPTR)                0359
         MVC   $INBUFR(8,WAPTR),$SYSMN(WAPTR)                      0359
*       $INBUFR(9:16)=$CTMSGNM;                                    0360
*                                                                  0360
         MVC   $INBUFR+8(8,WAPTR),$CTMSGNM(WAPTR)                  0360
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(462)DIR(NET)INCT(61)SUB(YES) INVOKED            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0361
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0361
*       R1=ADDR($TCA34);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA34                                           0362
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0363
         BALR  @14,@15                                             0363
*       DCL                                                        0364
*         1 $TCA34,                 /* TCEC PARM LIST                */
*          2 $TCB34 FIXED(32) INIT(462),/* MSG NUMBER                */
*          2 $TCC34 FIXED(32) INIT(61),/* INCT LEN                   */
*          2 $TCD34 BIT(8) INIT('11001000'B),/* FLAG                 */
*          2 $TCE34 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       CALL I02C2000;              /* PROCESS RESPONSE      @D32JPFR*/
         BAL   @14,I02C2000                                        0365
*       IF R15=4 THEN               /* RESPONSE = NO         @D32JPFR*/
         C     R15,@CF00068                                        0366
         BE    @RT00366                                            0366
*         GOTO I02C0010;            /* REISSUE 105D MSG      @D32JPFR*/
*I02C0130:                                                         0368
*I02C0140:                                                         0368
*                                                                  0368
*/****************************************************************** */
*/* RELEASE ALL TEST DEVICES FROM DEVICE TABLE.                      */
*/****************************************************************** */
*                                                                  0368
*       CALL ISTTC035;                                             0368
*                                                                  0368
I02C0130 DS    0H                                                  0368
I02C0140 L     @15,@CV00883                                        0368
         BALR  @14,@15                                             0368
*/********************************************************************/
*/*                        ACQUIRE NEW CT FROM VTAM.                 */
*/********************************************************************/
*                                                                  0369
*       $DEVTBLE(3)=($DEVTBLE(3)&&$DEVTBLE(3));/* ZERO TAB ENTRY     */
         XC    $DEVTBLE+136(68,WAPTR),$DEVTBLE+136(WAPTR)          0369
*       $SYSMN(3)=$CTMSGNM;         /* NEW CT SYMBOLIC NAME TO 1ST TT*/
         MVC   $SYSMN+136(8,WAPTR),$CTMSGNM(WAPTR)                 0370
*       $CTNAME=$CTMSGNM;           /* SAVE NEW CTNAME IN RCA        */
         MVC   $CTNAME(8,RCAPTR),$CTMSGNM(WAPTR)                   0371
*       $RNINFO(3)=CTPTRS;          /* RDT POINTERS TO DEVICE ENTRY  */
         MVC   $RNINFO+136(9,WAPTR),CTPTRS(WAPTR)                  0372
*       $DEVFEAT(3)=SVEIC00A(1);    /* SAVE DEV CHARS        @D32JPFR*/
         MVC   $DEVFEAT+136(4,WAPTR),SVEIC00A(WAPTR)               0373
*       $DEVCNTS=3;                 /* ADJUST DEV COUNT TO ALLOW ACQ
*                                      TO                            */
*                                                                  0374
         MVC   $DEVCNTS(2,WAPTR),@CH00081                          0374
*       /*************************************************************/
*       /*                                                           */
*       /* ACQUIRE THE NEW CT.                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0375
*       $DEVCHNG=ON;                                               0375
         OI    $DEVCHNG(WAPTR),B'00010000'                         0375
*       R1=ADDR(ACQCTPRM);          /* POINTER TO ACQCT PARM LIST    */
         LA    R1,ACQCTPRM                                         0376
*       CALL #EXIT;                 /* CALL ACQUISITION FUNCTION.    */
         L     @15,#EXITA(,WAPTR)                                  0377
         BALR  @14,@15                                             0377
*       $DEVCHNG=OFF;                                              0378
         NI    $DEVCHNG(WAPTR),B'11101111'                         0378
*       IF R15^=0 THEN              /* IF RETURN CODE NOT ZERO       */
         LTR   R15,R15                                             0379
         BNZ   @RT00379                                            0379
*         GO TO I02C0010;           /* RE-ISSUE 105D MESSAGE         */
*/****************************************************************** */
*/*    OUTPUT MESSAGE 461I CTRL SHIFTED BY XXXXXXXX TO YYYYYYYY.     */
*/****************************************************************** */
*                                                                  0381
*       $INBUFR=$SYSMN(1);                                         0381
         MVI   $INBUFR+8(WAPTR),C' '                               0381
         MVC   $INBUFR+9(71,WAPTR),$INBUFR+8(WAPTR)                0381
         MVC   $INBUFR(8,WAPTR),$SYSMN(WAPTR)                      0381
*       $INBUFR(9:16)=$CTMSGNM;                                    0382
*                                                                  0382
         MVC   $INBUFR+8(8,WAPTR),$CTMSGNM(WAPTR)                  0382
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(461)SUB(YES) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0383
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0383
*       R1=ADDR($TCA35);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA35                                           0384
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0385
         BALR  @14,@15                                             0385
*       DCL                                                        0386
*         1 $TCA35,                 /* TCEC PARM LIST                */
*          2 $TCB35 FIXED(32) INIT(461),/* MSG NUMBER                */
*          2 $TCC35 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD35 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE35 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*/********************************************************************/
*/* RELEASE THE OLD CT AND AP (IF ANY EXISTED)                       */
*/********************************************************************/
*                                                                  0387
*       $CTMSGNM=$SYSMN(1);         /* SAVE OLD CT NAME FOR MSG      */
         MVC   $CTMSGNM(8,WAPTR),$SYSMN(WAPTR)                     0387
*       R1=ADDR(RELPARM);           /* SET UP PARAMETER POINTER      */
         LA    R1,RELPARM                                          0388
*       RELDEV=ADDR($SYSMN(1));                                    0389
         LA    @14,$SYSMN(,WAPTR)                                  0389
         ST    @14,RELDEV                                          0389
*       RELFLG='80'X;               /* RELEASE CT AND AP FUNCTION    */
         MVI   RELFLG,X'80'                                        0390
*       CALL #EXIT;                 /* CALL RELEASE FUNCTION         */
         L     @15,#EXITA(,WAPTR)                                  0391
         BALR  @14,@15                                             0391
*       RELDEV=ADDR($SYSMN(2));                                    0392
         LA    @14,$SYSMN+68(,WAPTR)                               0392
         ST    @14,RELDEV                                          0392
*       CALL #EXIT;                                                0393
         L     @15,#EXITA(,WAPTR)                                  0393
         BALR  @14,@15                                             0393
*       $DEVTBLE(1)=$DEVTBLE(3);    /* MAKE DEVICE THE CT ENTRY    0394
*                                                            @D32JPPW*/
         MVC   $DEVTBLE(68,WAPTR),$DEVTBLE+136(WAPTR)              0394
*       $DEVCNTS=2;                 /* REDUCE COUNT SO IT IS NOT A 0395
*                                      TEST DEVICE           @D32JPPW*/
         MVC   $DEVCNTS(2,WAPTR),@CH00137                          0395
*       $OPCOM=OFF;                 /* IF HE WAS THE OPERATOR, HE IS
*                                      NO MORE               @D32JPPW*/
         NI    $OPCOM(WAPTR),B'01111111'                           0396
*/****************************************************************** */
*/*   OUTPUT  MESSAGE 461I CTRL SHIFTED BY XXXXXXXX TO YYYYYYYY      */
*/****************************************************************** */
*                                                                  0397
*       $INBUFR=$CTMSGNM;           /* NAME OF OLD CT                */
         MVI   $INBUFR+8(WAPTR),C' '                               0397
         MVC   $INBUFR+9(71,WAPTR),$INBUFR+8(WAPTR)                0397
         MVC   $INBUFR(8,WAPTR),$CTMSGNM(WAPTR)                    0397
*       $INBUFR(9:16)=$SYSMN(1);    /* NEW CT NAME                   */
*                                                                  0398
         MVC   $INBUFR+8(8,WAPTR),$SYSMN(WAPTR)                    0398
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(461)SUB(YES) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0399
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0399
*       R1=ADDR($TCA36);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA36                                           0400
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0401
         BALR  @14,@15                                             0401
*       DCL                                                        0402
*         1 $TCA36,                 /* TCEC PARM LIST                */
*          2 $TCB36 FIXED(32) INIT(461),/* MSG NUMBER                */
*          2 $TCC36 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD36 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE36 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       GO TO I02C0005;             /* GO RE-ISSUE OPTIONS ARE MSG.  */
         B     I02C0005                                            0403
*/****************************************************************** */
*/*      OUTPUT MESSAGE 299D INCORRECT REPLY, (TWO WAY MESSAGE)      */
*/****************************************************************** */
*                                                                  0404
*I02C0150:                                                         0404
*                                                                  0404
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(299)INCT(61) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0404
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
I02C0150 OI    $TCECM(WAPTR),B'00000001'                           0404
*       R1=ADDR($TCA37);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA37                                           0405
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0406
         BALR  @14,@15                                             0406
*       DCL                                                        0407
*         1 $TCA37,                 /* TCEC PARM LIST                */
*          2 $TCB37 FIXED(32) INIT(299),/* MSG NUMBER                */
*          2 $TCC37 FIXED(32) INIT(61),/* INCT LEN                   */
*          2 $TCD37 BIT(8) INIT('01000000'B),/* FLAG                 */
*          2 $TCE37 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       GO TO I02C0020;             /* GO CHECK RESPONSE             */
         B     I02C0020                                            0408
*     END;                          /* END OF ALL VERB TESTS         */
*/********************************************************************/
*/* TEST FOR A REQUEST ENTERED IN DEV, TST AND OPTIONS FIELDS.       */
*/********************************************************************/
*                                                                  0410
*   IF ADDR($DTORESP)+1^=$SLASHAD(1) THEN/* IF NOT EQUAL THEN        */
@RC00131 LA    @14,$DTORESP(,WAPTR)                                0410
         AL    @14,@CF00072                                        0410
         C     @14,$SLASHAD(,WAPTR)                                0410
         BE    @RF00410                                            0410
*     $DEVCHNG=ON;                  /* INDICATE DEV CHANGE ENTERED   */
         OI    $DEVCHNG(WAPTR),B'00010000'                         0411
*   ELSE                                                           0412
*     $DEVCHNG=OFF;                                                0412
         B     @RC00410                                            0412
@RF00410 NI    $DEVCHNG(WAPTR),B'11101111'                         0412
*   IF $SLASHAD(1)+1^=$SLASHAD(2) THEN/* IF TEST FLD SLASH           */
@RC00410 LA    @14,1                                               0413
         AL    @14,$SLASHAD(,WAPTR)                                0413
         C     @14,$SLASHAD+4(,WAPTR)                              0413
         BE    @RF00413                                            0413
*     $TESTCNG=ON;                  /* IS NOT ADJACENT TO OPT FLD    */
         OI    $TESTCNG(WAPTR),B'00100000'                         0414
*   ELSE                                                           0415
*     $TESTCNG=OFF;                 /* INDICATE TST CHANGE ENTERED   */
         B     @RC00413                                            0415
@RF00413 NI    $TESTCNG(WAPTR),B'11011111'                         0415
*   IF $SLASHAD(2)+1^=$SLASHAD(3) THEN                             0416
@RC00413 LA    @14,1                                               0416
         AL    @14,$SLASHAD+4(,WAPTR)                              0416
         C     @14,$SLASHAD+8(,WAPTR)                              0416
         BE    @RF00416                                            0416
*     $OPTCHNG=ON;                                                 0417
         OI    $OPTCHNG(WAPTR),B'00001000'                         0417
*   ELSE                                                           0418
*     $OPTCHNG=OFF;                                                0418
*                                                                  0418
         B     @RC00416                                            0418
@RF00416 NI    $OPTCHNG(WAPTR),B'11110111'                         0418
*/****************************************************************** */
*/*HANDLE THE SPECIAL CASE WHERE CI WAS CALLED BY DPRINT AS A RESULT */
*/* OF DPRINT MESSAGE OUTPUT WITH THE $CATERR FLAG ON. IF $CATERR    */
*/* AND $CATMSG FLAGS ARE BOTH ON THEN RESET THE $CATMSG FLAG AND    */
*/* RETURN TO THE OLT.                                               */
*/********************************************************************
*                                                                    */
*                                                                  0419
*   IF $CATERR=ON&$CATMSG=ON&($DEVCHNG=ON×$TESTCNG=ON) THEN        0419
@RC00416 TM    $CATERR(WAPTR),B'00100000'                          0419
         BNO   @RF00419                                            0419
         TM    $CATMSG(WAPTR),B'00000100'                          0419
         BNO   @RF00419                                            0419
         TM    $DEVCHNG(WAPTR),B'00110000'                         0419
         BNZ   @RT00419                                            0419
*     GO TO I02C0230;                                              0420
*   ELSE                                                           0421
*     ;                                                            0421
*                                                                  0421
@RF00419 DS    0H                                                  0422
*/********************************************************************/
*/* IF A DEVICE OR TEST CHANGE HAS BEEN MADE, DTERM IS CALLED TO     */
*/* RELEASE ANY ACTIVE DEVICES AND TERMINATE THE CURRENT TEST.       */
*/********************************************************************/
*                                                                  0422
*I02C0160:                                                         0422
*   IF $DEVCHNG=OFF&$TESTCNG=ON THEN                               0422
I02C0160 TM    $TESTCNG(WAPTR),B'00100000'                         0422
         BNO   @RF00422                                            0422
         TM    $DEVCHNG(WAPTR),B'00010000'                         0422
         BNZ   @RF00422                                            0422
*     $NORELDV=ON;                                                 0423
         OI    $NORELDV(WAPTR),B'00000010'                         0423
*   ELSE                                                           0424
*     ;                                                            0424
@RF00422 DS    0H                                                  0425
*   IF($DEVCHNG=ON×$TESTCNG=ON) THEN                               0425
*                                                                  0425
         TM    $DEVCHNG(WAPTR),B'00110000'                         0425
         BZ    @RF00425                                            0425
*/********************************************************************/
*/* IF THIS IS NOT THE FIRST D/T/O/ ENTRY THEN DTERM IS CALLED TO    */
*/* CLEAN UP ANY ACTIVE TEST OR DEVICES (ALL TEST DEVICES ARE        */
*/* RELEASED.)                                                       */
*/********************************************************************/
*                                                                  0426
*     CALL ISTTC035;                                               0426
*                                                                  0426
         L     @15,@CV00883                                        0426
         BALR  @14,@15                                             0426
*/********************************************************************/
*/*SAVE DEV FIELD FOR USE IN PERMISSION REQUIRED MSG TO NETWORK OP.  */
*/********************************************************************/
*                                                                  0427
*   IF $DEVCHNG=ON THEN             /* CK FOR GHNG IN DEVICE FLD     */
@RF00425 TM    $DEVCHNG(WAPTR),B'00010000'                         0427
         BNO   @RF00427                                            0427
*     DO;                                                          0428
*       IF $DTORESP(2:6)^='.NDR/'   /* DONT SAVE .NDR INPUT          */
*           &$DTORESP(2:3)^='*/' THEN/* DONT SAVE * INPUT            */
         CLC   $DTORESP+1(5,WAPTR),@CC00994                        0429
         BE    @RF00429                                            0429
         CLC   $DTORESP+1(2,WAPTR),@CC00995                        0429
         BE    @RF00429                                            0429
*         DO;                                                      0430
*           I=$SLASHAD(1)-ADDR($DTORESP);/* LENGTH OF DEV FIELD      */
         LA    I,$DTORESP(,WAPTR)                                  0431
         LCR   I,I                                                 0431
         AL    I,$SLASHAD(,WAPTR)                                  0431
*           $TSTDEVP=ON;            /* INDICATE MESSAGE REQUESTING 0432
*                                      NETWORK CONTROLLER PERMISSION
*                                      REQUIRED.                     */
         OI    $TSTDEVP(WAPTR),B'00100000'                         0432
*         END;                                                     0433
*       ELSE                                                       0434
*         $TSTDEVP=OFF;             /* RESET DEVICE ENTRY REQUIRES 0434
*                                      PERMISSION FLAG.              */
         B     @RC00429                                            0434
@RF00429 NI    $TSTDEVP(WAPTR),B'11011111'                         0434
*       $DEVERR=OFF;                /* RESET DEVICE ERROR FLAG.      */
@RC00429 NI    $DEVERR(WAPTR),B'01111111'                          0435
*       CALL ISTIC003;              /* CALL DEVICE DECODE FUNCTION   */
         L     @15,@CV00996                                        0436
         BALR  @14,@15                                             0436
*     END;                                                         0437
*   IF $TESTCNG=ON THEN             /* IF TEST FIELD ENTERED,        */
@RF00427 TM    $TESTCNG(WAPTR),B'00100000'                         0438
         BNO   @RF00438                                            0438
*     DO;                                                          0439
*       $TSTERR=OFF;                /* RESET TEST ERROR FLAG         */
         NI    $TSTERR(WAPTR),B'10111111'                          0440
*       CALL ISTIC004;              /* CALL TEST DECODE.             */
         L     @15,@CV00997                                        0441
         BALR  @14,@15                                             0441
*     END;                                                         0442
*   ELSE                                                           0443
*     ;                                                            0443
@RF00438 DS    0H                                                  0444
*   IF $OPTCHNG=ON THEN             /* IF OPTIONS FIELD ENTERED,     */
         TM    $OPTCHNG(WAPTR),B'00001000'                         0444
         BNO   @RF00444                                            0444
*     DO;                                                          0445
*       $OPTERR=OFF;                /* RESET OPTIONS ERROR FLAG.     */
         NI    $OPTERR(WAPTR),B'11111011'                          0446
*       CALL ISTIC005;              /* CALL OPTIONS DECODE           */
         L     @15,@CV00795                                        0447
         BALR  @14,@15                                             0447
*     END;                                                         0448
*                                                                  0448
*/********************************************************************/
*/* CHECK FOR INVALID SLASH RESPONSE (RESULTS IF SLASH ENTERED FOR A */
*/* FIELD WHICH HAS NOT HAD A PRIOR VALID ENTRY).                    */
*/********************************************************************/
*                                                                  0449
*I02C0170:                                                         0449
*   IF $DEVCHNG=OFF&$VALDDEV=OFF THEN/* IF NO DEV ENTERED            */
@RF00444 DS    0H                                                  0449
I02C0170 TM    $DEVCHNG(WAPTR),B'00010000'                         0449
         BNZ   @RF00449                                            0449
         TM    $VALDDEV(WAPTR),B'00001000'                         0449
         BNZ   @RF00449                                            0449
*/********************************************************************/
*/* IF THERE IS NO DEVICE CHANGE AND NO PRIOR VALID DEVICE THEN      */
*/* INDICATE DEVICE FIELD ERROR.                                     */
*/********************************************************************/
*                                                                  0450
*     DO;                                                          0450
*       $DEVERR=ON;                 /* INDICATE DEV FIELD ERROR.     */
*                                                                  0451
         OI    $DEVERR(WAPTR),B'10000000'                          0451
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(170)MSGMSK('80000000'X) INVOKED                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0452
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0452
*       R1=ADDR($TCA38);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA38                                           0453
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0454
         BALR  @14,@15                                             0454
*       DCL                                                        0455
*         1 $TCA38,                 /* TCEC PARM LIST                */
*          2 $TCB38 FIXED(32) INIT(170),/* MSG NUMBER                */
*          2 $TCC38 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD38 BIT(8) INIT('00000000'B),/* FLAG                 */
*          2 $TCE38 CHAR(4) INIT('80000000'X);/* MSSAGE MASK         */
*     END;                                                         0456
*   IF $TESTCNG=OFF&$VALDTST=OFF THEN                              0457
@RF00449 TM    $TESTCNG(WAPTR),B'00100000'                         0457
         BNZ   @RF00457                                            0457
         TM    $VALDTST(WAPTR),B'00000100'                         0457
         BNZ   @RF00457                                            0457
*     DO;                                                          0458
*       $TSTERR=ON;                 /* SET TEST FIELD ERROR FLAG.    */
*                                                                  0459
         OI    $TSTERR(WAPTR),B'01000000'                          0459
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(170)MSGMSK('40000000'X) INVOKED                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0460
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0460
*       R1=ADDR($TCA39);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA39                                           0461
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0462
         BALR  @14,@15                                             0462
*       DCL                                                        0463
*         1 $TCA39,                 /* TCEC PARM LIST                */
*          2 $TCB39 FIXED(32) INIT(170),/* MSG NUMBER                */
*          2 $TCC39 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD39 BIT(8) INIT('00000000'B),/* FLAG                 */
*          2 $TCE39 CHAR(4) INIT('40000000'X);/* MSSAGE MASK         */
*     END;                                                         0464
*   IF $DEVERR=OFF&$TSTERR=OFF&$OPTERR=OFF THEN                    0465
@RF00457 TM    $DEVERR(WAPTR),B'11000100'                          0465
         BZ    @RT00465                                            0465
*     GO TO I02C0180;                                              0466
*   ELSE                                                           0467
*     ;                                                            0467
*                                                                  0467
@RF00465 DS    0H                                                  0468
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(161) INVOKED                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0468
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0468
*   R1=ADDR($TCA40);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA40                                           0469
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0470
         BALR  @14,@15                                             0470
*   DCL                                                            0471
*     1 $TCA40,                     /* TCEC PARM LIST                */
*      2 $TCB40 FIXED(32) INIT(161),/* MSG NUMBER                    */
*      2 $TCC40 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD40 BIT(8) INIT('00000000'B),/* FLAG                     */
*      2 $TCE40 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK MSG IS FOR
*                                      HELP ENTER PROMT              */
*/********************************************************************/
*/* ASSEMBLE D/T/O/ PORTION OF MSG TO INDICATE WHICH FIELDS ARE TO BE*/
*/* INCLUDED IN RESPONSE.                                            */
*/********************************************************************/
*                                                                  0472
*   $INBUFR(1:6)='////  ';          /* INITIALIZE $INBUFR.           */
         MVC   $INBUFR(6,WAPTR),@CC01019                           0472
*   I=1;                                                           0473
         LA    I,1                                                 0473
*   IF $DEVERR=ON THEN              /* CHECK FOR 'D' REQUIRED.       */
         TM    $DEVERR(WAPTR),B'10000000'                          0474
         BNO   @RF00474                                            0474
*     DO;                                                          0475
*       $INBUFR(I:I)='D';                                          0476
         LR    @14,WAPTR                                           0476
         ALR   @14,I                                               0476
         MVI   $INBUFR-1(@14),C'D'                                 0476
*       I=I+2;                                                     0477
         AL    I,@CF00137                                          0477
*     END;                                                         0478
*   ELSE                                                           0479
*     I=I+1;                                                       0479
         B     @RC00474                                            0479
@RF00474 AL    I,@CF00072                                          0479
*   IF $TSTERR=ON THEN              /* CHECK FOR 'T' REQUIRED.       */
@RC00474 TM    $TSTERR(WAPTR),B'01000000'                          0480
         BNO   @RF00480                                            0480
*     DO;                                                          0481
*       $INBUFR(I:I+3)='T//';                                      0482
         LR    @14,WAPTR                                           0482
         ALR   @14,I                                               0482
         MVI   $INBUFR+2(@14),C' '                                 0482
         MVC   $INBUFR-1(3,@14),@CC01021                           0482
*       I=I+2;                                                     0483
         AL    I,@CF00137                                          0483
*     END;                                                         0484
*   ELSE                                                           0485
*     I=I+1;                                                       0485
         B     @RC00480                                            0485
@RF00480 AL    I,@CF00072                                          0485
*   IF $OPTERR=ON THEN              /* CHECK FOR 'O' REQUIRED.       */
@RC00480 TM    $OPTERR(WAPTR),B'00000100'                          0486
         BNO   @RF00486                                            0486
*     $INBUFR(I:I)='O/';                                           0487
         LR    @14,WAPTR                                           0487
         ALR   @14,I                                               0487
         MVI   $INBUFR-1(@14),C'O'                                 0487
*   ELSE                                                           0488
*     ;                                                            0488
*                                                                  0488
@RF00486 DS    0H                                                  0489
*/********************************************************************/
*/* IF THERE IS AT LEAST ONE VALID DEVICE AND ONE VALID TEST, THEN   */
*/* THE 464I MESSAGE IS ISSUED TO ALLOW THE OPERATOR THE OPTION OF   */
*/* TESTING WITH THE SUBSET OF DEVICES OR TEST WHICH WERE DECODED    */
*/* AND ACCEPTED, OR CORRECTING HIS ENTRY.                           */
*/********************************************************************/
*                                                                  0489
*   IF $VALDDEV=ON                  /* IF A VALID DEVICE EXISTS      */
*       &$VALDTST=ON THEN           /* AND A VALID TEST EXISTS       */
         TM    $VALDDEV(WAPTR),B'00001100'                         0489
         BNO   @RF00489                                            0489
*     DO;                                                          0490
*                                                                  0490
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(464)SUB(YES) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0491
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0491
*       R1=ADDR($TCA41);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA41                                           0492
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0493
         BALR  @14,@15                                             0493
*       DCL                                                        0494
*         1 $TCA41,                 /* TCEC PARM LIST                */
*          2 $TCB41 FIXED(32) INIT(464),/* MSG NUMBER                */
*          2 $TCC41 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD41 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE41 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       GO TO I02C0010;             /* RE-ISSUE 105D MESSAGE         */
         B     I02C0010                                            0495
*     END;                                                         0496
*                                                                  0496
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(223)SUB(YES) INVOKED                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0497
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
@RF00489 OI    $TCECM(WAPTR),B'00000001'                           0497
*   R1=ADDR($TCA42);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA42                                           0498
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0499
         BALR  @14,@15                                             0499
*   DCL                                                            0500
*     1 $TCA42,                     /* TCEC PARM LIST                */
*      2 $TCB42 FIXED(32) INIT(223),/* MSG NUMBER                    */
*      2 $TCC42 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD42 BIT(8) INIT('10000000'B),/* FLAG                     */
*      2 $TCE42 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK MSG TEXT IS
*                                      RE-ENTER FIELDS IN ERROR.   0500
*                                      FORMAT IS D/T/O/ (VARIABLE  0500
*                                      PORTION                       */
*   GO TO I02C0010;                 /* GO RE-ISSUE 105D MESSAGE      */
         B     I02C0010                                            0501
*/********************************************************************/
*/* ALL DEVICES HAVE BEEN PUT INTO DEVICE TABLE, NOW CHECK FOR       */
*/* ALTERNATE PRINTER CONFLICTS.                                     */
*/********************************************************************/
*                                                                  0502
*I02C0180:                                                         0502
*   DO I=3 TO $DEVCNTS;                                            0502
I02C0180 LA    I,3                                                 0502
         B     @DE00502                                            0502
@DL00502 DS    0H                                                  0503
*     IF $APRQPER=ON                /* IF A NEW AP HAS BEEN ENTERED
*                                      CK IT                         */
*         &$SYSMN(I)=$APNAME×$ALTPRTR=ON/* CHECK OLD ALTERNATE     0503
*                                      PRINTER                       */
*         &$SYSMN(I)=$SYSMN(2) THEN                                0503
         TM    $APRQPER(WAPTR),B'01000000'                         0503
         BNO   @GL00016                                            0503
         LR    @14,I                                               0503
         MH    @14,@CH00373                                        0503
         ALR   @14,WAPTR                                           0503
         CLC   $SYSMN-68(8,@14),$APNAME(WAPTR)                     0503
         BE    @RT00503                                            0503
@GL00016 TM    $ALTPRTR(WAPTR),B'00000010'                         0503
         BNO   @RF00503                                            0503
         LR    @14,I                                               0503
         MH    @14,@CH00373                                        0503
         ALR   @14,WAPTR                                           0503
         CLC   $SYSMN-68(8,@14),$SYSMN+68(WAPTR)                   0503
         BNE   @RF00503                                            0503
@RT00503 DS    0H                                                  0504
*       DO;                                                        0504
*                                                                  0504
*         /***********************************************************/
*         /*                                                         */
*         /* TCEC MSGN(465)MSGMSK('80000000'X) INVOKED               */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0505
*         $TCECM='1'B;              /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0505
*         R1=ADDR($TCA43);          /* SET UP PARM LIST $TR          */
         LA    R1,$TCA43                                           0506
*         CALL S20CEC03;            /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0507
         BALR  @14,@15                                             0507
*         DCL                                                      0508
*           1 $TCA43,               /* TCEC PARM LIST                */
*            2 $TCB43 FIXED(32) INIT(465),/* MSG NUMBER              */
*            2 $TCC43 FIXED(32) INIT(0),/* INCT LEN                  */
*            2 $TCD43 BIT(8) INIT('00000000'B),                    0508
*                                                                  0508
*/*  FLAG                                                            */
*                                                                  0508
*            2 $TCE43 CHAR(4) INIT('80000000'X);/* MSSAGE MASK       */
*         $VALDDEV=OFF;             /* RESET VALID DEVICE INDICATOR  */
         NI    $VALDDEV(WAPTR),B'11110111'                         0509
*         GO TO I02C0010;           /* GO RE-ISSUE 105D MESSAGE      */
         B     I02C0010                                            0510
*       END;                                                       0511
*   END;                                                           0512
*                                                                  0512
@RF00503 AL    I,@CF00072                                          0512
@DE00502 CH    I,$DEVCNTS(,WAPTR)                                  0512
         BNH   @DL00502                                            0512
*/********************************************************************/
*                                                                  0513
*   IF $OPCOM=ON THEN               /* IF CT SAME AS SYSCON          */
         TM    $OPCOM(WAPTR),B'10000000'                           0513
         BO    @RT00513                                            0513
*     GO TO I02C0220;               /* NO NEED TO ASK PERMISSION.    */
*/********************************************************************/
*/* DETERMINE IF THERE ARE ANY TEST DEVICES REQUIRING PERMISSION.    */
*/********************************************************************/
*                                                                  0515
*   X=0;                                                           0515
         SLR   X,X                                                 0515
*   IF $TSTDEVP=ON THEN             /* IF ANY NEW DEVS ENTERED       */
         TM    $TSTDEVP(WAPTR),B'00100000'                         0516
         BNO   @RF00516                                            0516
*     DO I=3 TO $DEVCNTS;                                          0517
*                                                                  0517
         LA    I,3                                                 0517
         B     @DE00517                                            0517
@DL00517 DS    0H                                                  0518
*/********************************************************************/
*/* CHECK FOR TEST TERMINAL EQUAL TO CT, IF SO, NO NEED TO ASK       */
*/* PERMISSION UNLESS TERMINAL IS DATA PROTECTED IN CDS.             */
*/********************************************************************/
*                                                                  0518
*       IF^($SYSMN(I)=$SYSMN(1))×$DEVFPM(I)=ON THEN                0518
         LR    @14,I                                               0518
         MH    @14,@CH00373                                        0518
         ST    @14,@TF00001                                        0518
         ALR   @14,WAPTR                                           0518
         CLC   $SYSMN-68(8,@14),$SYSMN(WAPTR)                      0518
         BNE   @RT00518                                            0518
         LR    @14,WAPTR                                           0518
         AL    @14,@TF00001                                        0518
         TM    $DEVFPM-68(@14),B'10000000'                         0518
         BNO   @RF00518                                            0518
@RT00518 DS    0H                                                  0519
*         X=X+1;                                                   0519
         AL    X,@CF00072                                          0519
*     END;                                                         0520
@RF00518 AL    I,@CF00072                                          0520
@DE00517 CH    I,$DEVCNTS(,WAPTR)                                  0520
         BNH   @DL00517                                            0520
*   IF $DEVCNTS=3&                  /* TEST FOR CT=TT ALONE          */
*       $APRQPER=OFF&               /* AND NO AP REQ                 */
*       $SYSMN(3)=$SYSMN(1) THEN                                   0521
@RF00516 CLC   $DEVCNTS(2,WAPTR),@CH00081                          0521
         BNE   @RF00521                                            0521
         TM    $APRQPER(WAPTR),B'01000000'                         0521
         BNZ   @RF00521                                            0521
         CLC   $SYSMN+136(8,WAPTR),$SYSMN(WAPTR)                   0521
         BE    @RT00521                                            0521
*     GOTO I02C0220;                /* IF YES SKIP PERMISSION        */
*/********************************************************************/
*/*IF AP WAS ENTERED OR TEST DEVICES WERE ENTERED, CHECK WITH NETWORK*/
*/*  OPERATOR FOR PERMISSION TO USE THESE DEVICES FOR TEST.          */
*/********************************************************************/
*                                                                  0523
*   IF $APRQPER=ON×(X>0             /* AP OR DEVICE CHANGE OCCURRED  */
*       &$TSTDEVP=ON) THEN                                         0523
@RF00521 TM    $APRQPER(WAPTR),B'01000000'                         0523
         BO    @RT00523                                            0523
         LTR   X,X                                                 0523
         BNP   @RF00523                                            0523
         TM    $TSTDEVP(WAPTR),B'00100000'                         0523
         BNO   @RF00523                                            0523
@RT00523 DS    0H                                                  0524
*     DO;                                                          0524
*                                                                  0524
*/********************************************************************/
*/*  SET UP MESSAGE WITH CT NAME FOLLOWED BY AP NAME (IF NEW AP)     */
*/********************************************************************/
*                                                                  0525
*       $INBUFR='';                 /* CLEAR $INBUFR TO BLANKS       */
         MVI   $INBUFR(WAPTR),C' '                                 0525
         MVC   $INBUFR+1(79,WAPTR),$INBUFR(WAPTR)                  0525
*       $INBUFR(1:8)=$SYSMN(1);     /* MOVE CTRL TERMINAL NAME TO  0526
*                                      MESSAGE TEXT.                 */
         MVC   $INBUFR(8,WAPTR),$SYSMN(WAPTR)                      0526
*       IF $APRQPER=ON THEN         /* IF AP HAS CHANGED, THEN       */
         TM    $APRQPER(WAPTR),B'01000000'                         0527
         BNO   @RF00527                                            0527
*         $INBUFR(9:16)=$APNAME;    /* MOVE NEW AP NAME INTO MSG.    */
         MVC   $INBUFR+8(8,WAPTR),$APNAME(WAPTR)                   0528
*       ELSE                                                       0529
*         $INBUFR(9:16)='        '; /* BLANK OUT AP NAME             */
*                                                                  0529
         B     @RC00527                                            0529
@RF00527 MVC   $INBUFR+8(8,WAPTR),@CC01044                         0529
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(247)DIR(NET)MSGMSK('80000000'X)SUB(YES) INVOKED */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0530
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
@RC00527 OI    $TCECM(WAPTR),B'00000001'                           0530
*       R1=ADDR($TCA44);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA44                                           0531
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0532
         BALR  @14,@15                                             0532
*       DCL                                                        0533
*         1 $TCA44,                 /* TCEC PARM LIST                */
*          2 $TCB44 FIXED(32) INIT(247),/* MSG NUMBER                */
*          2 $TCC44 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD44 BIT(8) INIT('10001000'B),/* FLAG                 */
*          2 $TCE44 CHAR(4) INIT('80000000'X);                     0533
*                                                                  0533
*/* MSSAGE MASK                                                      */
*                                                                  0534
*I02C0190:                                                         0534
*       DO I=3 TO $DEVCNTS;                                        0534
I02C0190 LA    I,3                                                 0534
         B     @DE00534                                            0534
@DL00534 DS    0H                                                  0535
*         IF^($SYSMN(I)=$SYSMN(1))  /* IF NOT CT=TT                  */
*             ×$DEVFPM(I)=ON THEN   /* OR ANYDEV FILE PROT           */
         LR    @14,I                                               0535
         MH    @14,@CH00373                                        0535
         ST    @14,@TF00001                                        0535
         ALR   @14,WAPTR                                           0535
         CLC   $SYSMN-68(8,@14),$SYSMN(WAPTR)                      0535
         BNE   @RT00535                                            0535
         LR    @14,WAPTR                                           0535
         AL    @14,@TF00001                                        0535
         TM    $DEVFPM-68(@14),B'10000000'                         0535
         BNO   @RF00535                                            0535
@RT00535 DS    0H                                                  0536
*           DO;                                                    0536
*             $INBUFR='';                                          0537
         MVI   $INBUFR(WAPTR),C' '                                 0537
         MVC   $INBUFR+1(79,WAPTR),$INBUFR(WAPTR)                  0537
*             $INBUFR(1:8)=$SYSMN(I);                              0538
         LR    @14,I                                               0538
         MH    @14,@CH00373                                        0538
         ST    @14,@TF00001                                        0538
         ALR   @14,WAPTR                                           0538
         MVC   $INBUFR(8,WAPTR),$SYSMN-68(@14)                     0538
*             IF $DEVFPM(I)=ON THEN                                0539
         LR    @14,WAPTR                                           0539
         AL    @14,@TF00001                                        0539
         TM    $DEVFPM-68(@14),B'10000000'                         0539
         BNO   @RF00539                                            0539
*               $INBUFR(10:22)='**PROTECTED**';                    0540
*                                                                  0540
         MVC   $INBUFR+9(13,WAPTR),@CC01054                        0540
*             /*******************************************************/
*             /*                                                     */
*             /* TCEC MSGN(247)SUB(YES)MSGMSK('40000000'X)DIR(NET)   */
*             /* INVOKED                                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0541
*             $TCECM='1'B;          /* SET TCEC SW IN RCA            */
@RF00539 OI    $TCECM(WAPTR),B'00000001'                           0541
*             R1=ADDR($TCA45);      /* SET UP PARM LIST $TR          */
         LA    R1,$TCA45                                           0542
*             CALL S20CEC03;        /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0543
         BALR  @14,@15                                             0543
*             DCL                                                  0544
*               1 $TCA45,           /* TCEC PARM LIST                */
*                2 $TCB45 FIXED(32) INIT(247),/* MSG NUMBER          */
*                2 $TCC45 FIXED(32) INIT(0),/* INCT LEN              */
*                2 $TCD45 BIT(8) INIT('10001000'B),/* FLAG           */
*                2 $TCE45 CHAR(4) INIT('40000000'X);/* MSSAGE MASK   */
*           END;                                                   0545
*       END;                                                       0546
*                                                                  0546
@RF00535 AL    I,@CF00072                                          0546
@DE00534 CH    I,$DEVCNTS(,WAPTR)                                  0546
         BNH   @DL00534                                            0546
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(247)MSGMSK('20000000'X)DIR(NET)INCT(61) INVOKED */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0547
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0547
*       R1=ADDR($TCA46);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA46                                           0548
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0549
         BALR  @14,@15                                             0549
*       DCL                                                        0550
*         1 $TCA46,                 /* TCEC PARM LIST                */
*          2 $TCB46 FIXED(32) INIT(247),/* MSG NUMBER                */
*          2 $TCC46 FIXED(32) INIT(61),/* INCT LEN                   */
*          2 $TCD46 BIT(8) INIT('01001000'B),/* FLAG                 */
*          2 $TCE46 CHAR(4) INIT('20000000'X);/* MSSAGE MASK         */
*I02C0210:                                                         0551
*       IF^($INBUFR(2)='Y'×$INBUFR(2)='N')×($INBUFR(1)>1&$INBUFR(3)^=',
*           ) THEN                                                 0551
I02C0210 CLI   $INBUFR+1(WAPTR),C'Y'                               0551
         BE    @GL00025                                            0551
         CLI   $INBUFR+1(WAPTR),C'N'                               0551
         BNE   @RT00551                                            0551
@GL00025 CLI   $INBUFR(WAPTR),1                                    0551
         BNH   @RF00551                                            0551
         CLI   $INBUFR+2(WAPTR),C','                               0551
         BE    @RF00551                                            0551
@RT00551 DS    0H                                                  0552
*         DO;                                                      0552
*                                                                  0552
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(299)INCT(61)DIR(NET) INVOKED                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0553
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0553
*           R1=ADDR($TCA47);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA47                                           0554
*           CALL #EXIT;             /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0555
         BALR  @14,@15                                             0555
*           DCL                                                    0556
*             1 $TCA47,             /* TCEC PARM LIST                */
*              2 $TCB47 FIXED(32) INIT(299),/* MSG NUMBER            */
*              2 $TCC47 FIXED(32) INIT(61),/* INCT LEN               */
*              2 $TCD47 BIT(8) INIT('01001000'B),/* FLAG             */
*              2 $TCE47 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK     */
*           GO TO I02C0210;                                        0557
         B     I02C0210                                            0557
*         END;                                                     0558
*       ELSE                                                       0559
*         DO;                                                      0559
@RF00551 DS    0H                                                  0560
*           T463C=T463B;                                           0560
         MVC   @TS00001(61),T463B(WAPTR)                           0560
         MVC   T463C(61,WAPTR),@TS00001                            0560
*           T463A='247';                                           0561
         MVC   T463A(3,WAPTR),@CC01073                             0561
*           IF $INBUFR(5)=',' THEN                                 0562
         CLI   $INBUFR+4(WAPTR),C','                               0562
         BNE   @RF00562                                            0562
*             DO;                                                  0563
*                                                                  0563
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(463)SUB(YES)MSGMSK('C0000000'X) INVOKED */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0564
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0564
*               R1=ADDR($TCA48);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA48                                           0565
*               CALL S20CEC03;      /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0566
         BALR  @14,@15                                             0566
*               DCL                                                0567
*                 1 $TCA48,         /* TCEC PARM LIST                */
*                  2 $TCB48 FIXED(32) INIT(463),/* MSG NUMBER        */
*                  2 $TCC48 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD48 BIT(8) INIT('10000000'B),/* FLAG         */
*                  2 $TCE48 CHAR(4) INIT('C0000000'X);/* MSSAGE MASK */
*             END;                                                 0568
*           IF $INBUFR(4)='N' THEN                                 0569
@RF00562 CLI   $INBUFR+3(WAPTR),C'N'                               0569
         BNE   @RF00569                                            0569
*             DO;                                                  0570
*                                                                  0570
*               /*****************************************************/
*               /*                                                   */
*               /* TCEC MSGN(254) INVOKED                            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0571
*               $TCECM='1'B;        /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0571
*               R1=ADDR($TCA49);    /* SET UP PARM LIST $TR          */
         LA    R1,$TCA49                                           0572
*               CALL #EXIT;         /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0573
         BALR  @14,@15                                             0573
*               DCL                                                0574
*                 1 $TCA49,         /* TCEC PARM LIST                */
*                  2 $TCB49 FIXED(32) INIT(254),/* MSG NUMBER        */
*                  2 $TCC49 FIXED(32) INIT(0),/* INCT LEN            */
*                  2 $TCD49 BIT(8) INIT('00000000'B),/* FLAG         */
*                  2 $TCE49 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK */
*               GO TO I02C0010;                                    0575
         B     I02C0010                                            0575
*             END;                                                 0576
*         END;                                                     0577
@RF00569 DS    0H                                                  0578
*I02C0220:                                                         0578
*       $TSTDEVP=OFF;                                              0578
*                                                                  0578
I02C0220 NI    $TSTDEVP(WAPTR),B'11011111'                         0578
*/****************************************************************** */
*/*     TEST DEVICES ARE ACCEPTABLE, NOW ACQUIRE THE NEW DEVICE(S)   */
*/********************************************************************/
*                                                                  0579
*       $OPNDCNT=OFF;                                              0579
         SLR   @14,@14                                             0579
         STH   @14,$OPNDCNT(,WAPTR)                                0579
*       $OPISCNT=OFF;               /* RESET FOR ACQUSITION          */
         STH   @14,$OPISCNT(,WAPTR)                                0580
*       R1=ADDR(ACQPARM);           /* SET UP PARAMETER POINTER      */
         LA    R1,ACQPARM                                          0581
*       CTPARMB='40'X;              /* ACQUIRE ALL DEVICES           */
         MVI   CTPARMB(WAPTR),X'40'                                0582
*       CALL #EXIT;                 /* CALL ACQUISITION FUNCTION     */
         L     @15,#EXITA(,WAPTR)                                  0583
         BALR  @14,@15                                             0583
*/********************************************************************/
*/* CHECK FOR NON-ZERO RETURN CODE - INDICATING THAT EITHER THERE    */
*/* WERE NO TEST DEVICES AVAILABLE, OR NOT ALL REQUESTED DEVICES     */
*/* WERE ACQUIRED AND THE CT OPERATOR ENTERED N FOR NO IN RESPONSE   */
*/* TO THE 381 MESSAGE DURING ACQUISITION.                           */
*/********************************************************************/
*                                                                  0584
*       IF R15^=0 THEN                                             0584
         LTR   R15,R15                                             0584
         BNZ   @RT00584                                            0584
*         GO TO I02C0007;                                          0585
*                                                                  0585
*/********************************************************************/
*/* EITHER ALL REQUESTED DEVICES WERE ACQUIRED OR SOME WERE          */
*/* ACQUIRED AND P FOR PROCEED WAS ENTERED BY THE CT OPERATOR IN     */
*/* RESPONSE TO THE 381 MESSAGE DURING ACQUISITION. NOW INITIALIZE   */
*/* THE REQUIRED AREAS AND PROCEED TO TEST.                          */
*/********************************************************************/
*                                                                  0586
*       IF $NEWAP=ON THEN                                          0586
         TM    $NEWAP(WAPTR),B'00000001'                           0586
         BNO   @RF00586                                            0586
*         DO;                                                      0587
*           RPLPTR=ADDR($TLTRPL2);  /* AP RPL                        */
         LA    RPLPTR,$TLTRPL2(,WAPTR)                             0588
*           $NEWAP=OFF;                                            0589
         NI    $NEWAP(WAPTR),B'11111110'                           0589
*           $NOTDEV(2)=OFF;         /* AP DEV ENTRY VAL              */
         NI    $NOTDEV+68(WAPTR),B'01111111'                       0590
*           $ALTPRTR=ON;                                           0591
         OI    $ALTPRTR(WAPTR),B'00000010'                         0591
*           $APRQPER=OFF;                                          0592
         NI    $APRQPER(WAPTR),B'10111111'                         0592
*         END;                                                     0593
*     END;                                                         0594
*                                                                  0594
@RF00586 DS    0H                                                  0595
*/********************************************************************/
*/* IF NEITHER A DEVICE NOR TEST CHANGE OCCURRED AT THIS COMM.       */
*/* INTERVAL, RETURN IS TO THE CALLER (OLT). OTHERWISE SCHEDULER IS  */
*/* CALLED.                                                          */
*/********************************************************************/
*                                                                  0595
*   IF $DEVCHNG=OFF&$TESTCNG=OFF&$OLTACT=ON THEN                   0595
@RF00523 TM    $OLTACT(WAPTR),B'00000001'                          0595
         BNO   @RF00595                                            0595
         TM    $DEVCHNG(WAPTR),B'00110000'                         0595
         BNZ   @RF00595                                            0595
*     DO;                                                          0596
*       $CATERR=OFF;                /* RESET CAT ERROR FLAG          */
         NI    $CATERR(WAPTR),B'11011111'                          0597
*       GOTO I02C0230;                                             0598
         B     I02C0230                                            0598
*     END;                                                         0599
*   ELSE                                                           0600
*     ;                                                            0600
@RF00595 DS    0H                                                  0601
*   DO;                                                            0601
*     R0=0;                                                        0602
         SLR   R0,R0                                               0602
*     CALL ISTCC010;                                               0603
         L     @15,@CV01086                                        0603
         BALR  @14,@15                                             0603
*   END;                                                           0604
*I02C0230:                                                         0605
*   ;                                                              0605
I02C0230 DS    0H                                                  0606
*   $CATMSG=OFF;                    /* RESET CATASTROPHIC MESSAGE HAS
*                                      BEEN                          */
*                                                                  0606
         NI    $CATMSG(WAPTR),B'11111011'                          0606
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUED FLAG.                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0607
*   R13=SVEIC002(2);                /* RESET R13 TO ORIG POINT       */
         L     R13,SVEIC002+4(,WAPTR)                              0607
*   RETURN;                         /* RETURN TO CALLER      @D32JPFR*/
@EL00001 DS    0H                                                  0608
@EF00001 DS    0H                                                  0608
@ER00001 LM    @14,@12,12(@13)                                     0608
         BR    @14                                                 0608
*I02C2000:                                                         0609
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0609
I02C2000 DS    0H                                                  0610
*   R4=R14;                         /* SAVE THE RETURN POINT         */
         LR    R4,R14                                              0610
*I02C2100:                                                         0611
*   IF^($INBUFR(2)='Y'×$INBUFR(2)='N')×($INBUFR(1)>1&$INBUFR(3)^=',')
*     THEN                                                         0611
I02C2100 CLI   $INBUFR+1(WAPTR),C'Y'                               0611
         BE    @GL00028                                            0611
         CLI   $INBUFR+1(WAPTR),C'N'                               0611
         BNE   @RT00611                                            0611
@GL00028 CLI   $INBUFR(WAPTR),1                                    0611
         BNH   @RF00611                                            0611
         CLI   $INBUFR+2(WAPTR),C','                               0611
         BE    @RF00611                                            0611
@RT00611 DS    0H                                                  0612
*     DO;                                                          0612
*                                                                  0612
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(299)INCT(61)DIR(NET) INVOKED                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0613
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0613
*       R1=ADDR($TCA50);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA50                                           0614
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0615
         BALR  @14,@15                                             0615
*       DCL                                                        0616
*         1 $TCA50,                 /* TCEC PARM LIST                */
*          2 $TCB50 FIXED(32) INIT(299),/* MSG NUMBER                */
*          2 $TCC50 FIXED(32) INIT(61),/* INCT LEN                   */
*          2 $TCD50 BIT(8) INIT('01001000'B),/* FLAG                 */
*          2 $TCE50 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       GO TO I02C2100;             /* GO DECODE INPUT               */
         B     I02C2100                                            0617
*     END;                                                         0618
*   ELSE                                                           0619
*     DO;                                                          0619
@RF00611 DS    0H                                                  0620
*       T463C=T463B;                /* MOVE MESSAGE OVER             */
         MVC   @TS00001(61),T463B(WAPTR)                           0620
         MVC   T463C(61,WAPTR),@TS00001                            0620
*       T463A='462';                /* INSERT MESSAGE ID             */
         MVC   T463A(3,WAPTR),@CC01098                             0621
*       IF $INBUFR(5)=',' THEN                                     0622
         CLI   $INBUFR+4(WAPTR),C','                               0622
         BNE   @RF00622                                            0622
*         DO;                                                      0623
*                                                                  0623
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(463)SUB(YES)MSGMSK('C0000000'X) INVOKED     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0624
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0624
*           R1=ADDR($TCA51);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA51                                           0625
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00842                                        0626
         BALR  @14,@15                                             0626
*           DCL                                                    0627
*             1 $TCA51,             /* TCEC PARM LIST                */
*              2 $TCB51 FIXED(32) INIT(463),/* MSG NUMBER            */
*              2 $TCC51 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD51 BIT(8) INIT('10000000'B),                  0627
*                                                                  0627
*/* FLAG                                                             */
*                                                                  0627
*              2 $TCE51 CHAR(4) INIT('C0000000'X);/* MSSAGE MASK     */
*         END;                                                     0628
*       IF $INBUFR(4)='N' THEN                                     0629
@RF00622 CLI   $INBUFR+3(WAPTR),C'N'                               0629
         BNE   @RF00629                                            0629
*         DO;                                                      0630
*                                                                  0630
*/****************************************************************** */
*/*      ISSUE MESSAGE -NETWORK CONTROLLER DENIED USE OF DEVICES-    */
*/****************************************************************** */
*                                                                  0631
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(254) INVOKED                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0631
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0631
*           R1=ADDR($TCA52);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA52                                           0632
*           CALL #EXIT;             /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0633
         BALR  @14,@15                                             0633
*           DCL                                                    0634
*             1 $TCA52,             /* TCEC PARM LIST                */
*              2 $TCB52 FIXED(32) INIT(254),/* MSG NUMBER            */
*              2 $TCC52 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD52 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE52 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK     */
*           R15=4;                  /* SET BAD RC            @D32JPFR*/
         LA    R15,4                                               0635
*         END;                                                     0636
*     END;                                                         0637
@RF00629 DS    0H                                                  0638
*   R14=R4;                         /* RESTORE THE RETURN POINT      */
         LR    R14,R4                                              0638
*   END I02C2000;                                                  0639
*                                                                  0639
@EL00002 DS    0H                                                  0639
@EF00002 DS    0H                                                  0639
@ER00002 BR    @14                                                 0639
*/****************************************************************** */
*/*                 DETERMINE IF NEW CT IS KNOWN TO VTAM             */
*/****************************************************************** */
*                                                                  0640
*I02C1000:                                                         0640
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0640
I02C1000 DS    0H                                                  0641
*   R4=R14;                         /* SAVE THE RETURN POINT         */
         LR    R4,R14                                              0641
*   R1=ADDR(CTPARM);                /* SET UP PARAMETER POINTER      */
         LA    R1,CTPARM(,WAPTR)                                   0642
*   CTPARMA=ADDR(TEMPCDS);          /* SET UP POINTER TO FAKE CDS    */
         LA    @14,TEMPCDS(,WAPTR)                                 0643
         ST    @14,CTPARMA(,WAPTR)                                 0643
*   CTPARMB='20'X;                  /* VERIFY AND RETURN DEVICE    0644
*                                      CHARACTERISTICS ALSO OUTPUT 0644
*                                      MSG IF DEVICE IS EITHER IN  0644
*                                      OTHER USERS DEV TABLE OR NOT
*                                      KNOWN TO VTAM.                */
         MVI   CTPARMB(WAPTR),X'20'                                0644
*   CALL ISTSC030;                  /* CALL ACQ/VERIFY FUNCTION      */
         L     @15,@CV01113                                        0645
         BALR  @14,@15                                             0645
*   CTPTRS=DEVDATA;                                                0646
         MVC   CTPTRS(9,WAPTR),DEVDATA(WAPTR)                      0646
*   IF R15^=0 THEN                  /* CHECK FOR NON-ZERO RET CODE   */
         LTR   R15,R15                                             0647
         BZ    @RF00647                                            0647
*     DO;                           /* ERROR FROM VERIFY     @D32JPFR*/
*       R15=4;                      /* GO RE-ISSUE 105D MESSAGE      */
         LA    R15,4                                               0649
*       GOTO I02C1100;              /* RETURN TO CALLER      @D32JPFR*/
         B     I02C1100                                            0650
*     END;                          /*                       @D32JPFR*/
*   $CTMSGNM=AQCTNAME;              /* SAVE DEVICE NAME RETURNED FROM
*                                      VTAM.                         */
@RF00647 L     @14,ACQSYMN(,WAPTR)                                 0652
         MVC   $CTMSGNM(8,WAPTR),AQCTNAME(@14)                     0652
*   SVEIC00A(1)=DEVCHAR;            /* SAVE NEW CT DEV CHARS.        */
         L     @14,ACQCHAR(,WAPTR)                                 0653
         MVC   SVEIC00A(4,WAPTR),DEVCHAR(@14)                      0653
*/********************************************************************/
*/* DETERMINE IF NEW CT HAS REQUIRED DEVICE CHARACTERISTICS (MUST    */
*/* BE CAPABLE OF ALPHA-NUMERIC INPUT.)                              */
*/********************************************************************/
*                                                                  0654
*   R1=ACQCHAR;                     /* POINTER TO DEV CHARACTERISTICS*/
         LR    R1,@14                                              0654
*   CALL I00C0200;                  /* CALL SUBROUTINE TO DETERMINE
*                                      IF THIS DEVICE OK AS CT       */
         L     @15,@CV01115                                        0655
         BALR  @14,@15                                             0655
*   IF R15^=0 THEN                  /* CHK RET CODE          @D32JPFR*/
         LTR   R15,R15                                             0656
         BZ    @RF00656                                            0656
*     R15=8;                        /* SET BAD RC            @D32JPFR*/
         LA    R15,8                                               0657
*I02C1100:                          /* RETURN TO CALLER      @D32JPFR*/
*   R14=R4;                         /* RESTORE THE RETRUN POINT      */
@RF00656 DS    0H                                                  0658
I02C1100 LR    R14,R4                                              0658
*   END I02C1000;                   /* END OF CT CHECK               */
@EL00003 DS    0H                                                  0659
@EF00003 DS    0H                                                  0659
@ER00003 BR    @14                                                 0659
*/* TPEPILOG                                                         */
*                                                                  0660
*   GEN(PRINT OFF);                                                0660
         PRINT OFF
*   GEN(PRINT ON);                                                 0661
*                                                                  0661
         PRINT ON
*/* END OF TPEPILOG                                                  */
*/* ATDSPLY   INVOKED.                                               */
*/********************************************************************/
*/* THE FOLLOWING ATBUILD INCLUSIONS HAVE BEEN MADE IN THIS          */
*/* COMPILATION:                                                     */
*/*             ISTTIE                                               */
*/********************************************************************/
*/* END OF ATDSPLY.                                                  */
*                                                                  0662
*   END;                                                           0662
         B     @EL00001                                            0662
@DATA    DS    0H
@CH00373 DC    H'68'
@SM01138 MVC   CTNAME-1(0,@14),@TS00001
@SM01140 MVC   CTNAME(0,WAPTR),@TS00001
@SM01142 MVC   $CTMSGNM(0,WAPTR),@TS00001
         DS    0F
@TF00001 DS    F
         DS    0F
@CF00072 DC    F'1'
@CF00137 DC    F'2'
@CH00137 EQU   @CF00137+2
@CF00081 DC    F'3'
@CH00081 EQU   @CF00081+2
@CF00068 DC    F'4'
@CF00348 DC    F'5'
@CF00054 DC    F'8'
@CF00134 DC    F'12'
@CV00795 DC    V(ISTIC005)
@CV00823 DC    V(ISTTC037)
@CV00836 DC    V(C14C0020)
@CV00842 DC    V(S20CEC03)
@CV00883 DC    V(ISTTC035)
@CV00885 DC    V(ISTIC006)
@CV00957 DC    V(ISTSC021)
@CV00996 DC    V(ISTIC003)
@CV00997 DC    V(ISTIC004)
@CV01086 DC    V(ISTCC010)
@CV01113 DC    V(ISTSC030)
@CV01115 DC    V(I00C0200)
         DS    0D
@TS00001 DS    CL61
@CC01054 DC    C'**PROTECTED**'
@CC00928 DC    C'PROMPT TEST'
@CC00935 DC    C'PROMPT VERB'
@CC00888 DC    C'PROMPT ALL'
@CC00914 DC    C'PROMPT DEV'
@CC00921 DC    C'PROMPT OPT'
@CC00760 DC    C'SYS CON '
@CC00947 DC    C'00000000'
@CC01044 DC    C'        '
@CC00834 DC    C'CANCEL'
@CC00837 EQU   @CC00928
@CC00839 DC    C'UPDATE'
@CC01019 DC    C'////  '
@CC00994 DC    C'.NDR/'
@CC00815 DC    C'DUMP'
@CC00824 DC    C'TALK'
@CC00868 DC    C'550'
@CC00942 DC    C'CT='
@CC01021 DC    C'T//'
@CC01073 DC    C'247'
@CC01098 DC    C'462'
@CC00995 DC    C'*/'
         DS    CL2
ACQCTPRM DS    CL9
         ORG   ACQCTPRM
@NM00056 DC    XL4'0102F3F0'
@NM00057 DC    F'0'
@NM00058 DC    B'01100000'
         ORG   ACQCTPRM+9
         DS    CL3
ACQPARM  DS    CL9
         ORG   ACQPARM
ACQID    DC    XL4'0102F3F0'
@NM00059 DC    XL4'00000000'
@NM00060 DC    B'01000000'
         ORG   ACQPARM+9
         DS    CL3
RELPARM  DS    CL9
         ORG   RELPARM
RELID    DC    XL4'0102F3F1'
RELDEV   DC    XL4'00000000'
RELFLG   DC    B'01000000'
         ORG   RELPARM+9
         DS    CL3
CTTIE    DS    CL16
$TCA11   DS    CL13
         ORG   $TCA11
$TCB11   DC    A(923)
$TCC11   DC    A(0)
$TCD11   DC    B'10001000'
$TCE11   DC    X'FFFFFFFF'
         ORG   $TCA11+13
         DS    CL3
$TCA12   DS    CL13
         ORG   $TCA12
$TCB12   DC    A(102)
$TCC12   DC    A(0)
$TCD12   DC    B'00000000'
$TCE12   DC    X'FFFFFFFF'
         ORG   $TCA12+13
         DS    CL3
$TCA13   DS    CL13
         ORG   $TCA13
$TCB13   DC    A(920)
$TCC13   DC    A(61)
$TCD13   DC    B'11001000'
$TCE13   DC    X'FFFFFFFF'
         ORG   $TCA13+13
         DS    CL3
$TCA14   DS    CL13
         ORG   $TCA14
$TCB14   DC    A(102)
$TCC14   DC    A(0)
$TCD14   DC    B'00000000'
$TCE14   DC    X'FFFFFFFF'
         ORG   $TCA14+13
         DS    CL3
$TCA15   DS    CL13
         ORG   $TCA15
$TCB15   DC    A(105)
$TCC15   DC    A(61)
$TCD15   DC    B'01000000'
$TCE15   DC    X'FFFFFFFF'
         ORG   $TCA15+13
         DS    CL3
$TCA16   DS    CL13
         ORG   $TCA16
$TCB16   DC    A(106)
$TCC16   DC    A(0)
$TCD16   DC    B'00000000'
$TCE16   DC    X'FFFFFFFF'
         ORG   $TCA16+13
         DS    CL3
$TCA17   DS    CL13
         ORG   $TCA17
$TCB17   DC    A(546)
$TCC17   DC    A(0)
$TCD17   DC    B'00000000'
$TCE17   DC    X'FFFFFFFF'
         ORG   $TCA17+13
         DS    CL3
$TCA18   DS    CL13
         ORG   $TCA18
$TCB18   DC    A(166)
$TCC18   DC    A(0)
$TCD18   DC    B'00000000'
$TCE18   DC    X'FFFFFFFF'
         ORG   $TCA18+13
         DS    CL3
$TCA19   DS    CL13
         ORG   $TCA19
$TCB19   DC    A(551)
$TCC19   DC    A(0)
$TCD19   DC    B'00000000'
$TCE19   DC    X'40000000'
         ORG   $TCA19+13
         DS    CL3
$TCA20   DS    CL13
         ORG   $TCA20
$TCB20   DC    A(550)
$TCC20   DC    A(61)
$TCD20   DC    B'11001000'
$TCE20   DC    X'FFFFFFFF'
         ORG   $TCA20+13
         DS    CL3
$TCA21   DS    CL13
         ORG   $TCA21
$TCB21   DC    A(299)
$TCC21   DC    A(61)
$TCD21   DC    B'01001000'
$TCE21   DC    X'FFFFFFFF'
         ORG   $TCA21+13
         DS    CL3
$TCA22   DS    CL13
         ORG   $TCA22
$TCB22   DC    A(463)
$TCC22   DC    A(0)
$TCD22   DC    B'10000000'
$TCE22   DC    X'C0000000'
         ORG   $TCA22+13
         DS    CL3
$TCA23   DS    CL13
         ORG   $TCA23
$TCB23   DC    A(254)
$TCC23   DC    A(0)
$TCD23   DC    B'00000000'
$TCE23   DC    X'FFFFFFFF'
         ORG   $TCA23+13
         DS    CL3
$TCA24   DS    CL13
         ORG   $TCA24
$TCB24   DC    A(147)
$TCC24   DC    A(0)
$TCD24   DC    B'00000000'
$TCE24   DC    X'FFFFFFFF'
         ORG   $TCA24+13
         DS    CL3
$TCA25   DS    CL13
         ORG   $TCA25
$TCB25   DC    A(148)
$TCC25   DC    A(0)
$TCD25   DC    B'00000000'
$TCE25   DC    X'FFFFFFFF'
         ORG   $TCA25+13
         DS    CL3
$TCA26   DS    CL13
         ORG   $TCA26
$TCB26   DC    A(149)
$TCC26   DC    A(0)
$TCD26   DC    B'00000000'
$TCE26   DC    X'FFFFFFFF'
         ORG   $TCA26+13
         DS    CL3
$TCA27   DS    CL13
         ORG   $TCA27
$TCB27   DC    A(141)
$TCC27   DC    A(0)
$TCD27   DC    B'00000000'
$TCE27   DC    X'FFFFFFFF'
         ORG   $TCA27+13
         DS    CL3
$TCA28   DS    CL13
         ORG   $TCA28
$TCB28   DC    A(147)
$TCC28   DC    A(0)
$TCD28   DC    B'00000000'
$TCE28   DC    X'FFFFFFFF'
         ORG   $TCA28+13
         DS    CL3
$TCA29   DS    CL13
         ORG   $TCA29
$TCB29   DC    A(149)
$TCC29   DC    A(0)
$TCD29   DC    B'00000000'
$TCE29   DC    X'FFFFFFFF'
         ORG   $TCA29+13
         DS    CL3
$TCA30   DS    CL13
         ORG   $TCA30
$TCB30   DC    A(148)
$TCC30   DC    A(0)
$TCD30   DC    B'00000000'
$TCE30   DC    X'FFFFFFFF'
         ORG   $TCA30+13
         DS    CL3
$TCA31   DS    CL13
         ORG   $TCA31
$TCB31   DC    A(141)
$TCC31   DC    A(0)
$TCD31   DC    B'00000000'
$TCE31   DC    X'FFFFFFFF'
         ORG   $TCA31+13
         DS    CL3
ITATCPRM DS    CL14
         ORG   ITATCPRM
@NM00061 DC    X'0102F4F1'
ITATCFR  DS    AL4
ITATCTO  DS    AL4
@NM00062 DC    AL1(0)
         ORG   @NM00062
ITATCTP  DS    BL1
         ORG   ITATCPRM+13
ITATCNT  DS    FL1
         ORG   ITATCPRM+14
         DS    CL2
$TCA33   DS    CL13
         ORG   $TCA33
$TCB33   DC    A(460)
$TCC33   DC    A(0)
$TCD33   DC    B'10000000'
$TCE33   DC    X'20000000'
         ORG   $TCA33+13
         DS    CL3
$TCA34   DS    CL13
         ORG   $TCA34
$TCB34   DC    A(462)
$TCC34   DC    A(61)
$TCD34   DC    B'11001000'
$TCE34   DC    X'FFFFFFFF'
         ORG   $TCA34+13
         DS    CL3
$TCA35   DS    CL13
         ORG   $TCA35
$TCB35   DC    A(461)
$TCC35   DC    A(0)
$TCD35   DC    B'10000000'
$TCE35   DC    X'FFFFFFFF'
         ORG   $TCA35+13
         DS    CL3
$TCA36   DS    CL13
         ORG   $TCA36
$TCB36   DC    A(461)
$TCC36   DC    A(0)
$TCD36   DC    B'10000000'
$TCE36   DC    X'FFFFFFFF'
         ORG   $TCA36+13
         DS    CL3
$TCA37   DS    CL13
         ORG   $TCA37
$TCB37   DC    A(299)
$TCC37   DC    A(61)
$TCD37   DC    B'01000000'
$TCE37   DC    X'FFFFFFFF'
         ORG   $TCA37+13
         DS    CL3
$TCA38   DS    CL13
         ORG   $TCA38
$TCB38   DC    A(170)
$TCC38   DC    A(0)
$TCD38   DC    B'00000000'
$TCE38   DC    X'80000000'
         ORG   $TCA38+13
         DS    CL3
$TCA39   DS    CL13
         ORG   $TCA39
$TCB39   DC    A(170)
$TCC39   DC    A(0)
$TCD39   DC    B'00000000'
$TCE39   DC    X'40000000'
         ORG   $TCA39+13
         DS    CL3
$TCA40   DS    CL13
         ORG   $TCA40
$TCB40   DC    A(161)
$TCC40   DC    A(0)
$TCD40   DC    B'00000000'
$TCE40   DC    X'FFFFFFFF'
         ORG   $TCA40+13
         DS    CL3
$TCA41   DS    CL13
         ORG   $TCA41
$TCB41   DC    A(464)
$TCC41   DC    A(0)
$TCD41   DC    B'10000000'
$TCE41   DC    X'FFFFFFFF'
         ORG   $TCA41+13
         DS    CL3
$TCA42   DS    CL13
         ORG   $TCA42
$TCB42   DC    A(223)
$TCC42   DC    A(0)
$TCD42   DC    B'10000000'
$TCE42   DC    X'FFFFFFFF'
         ORG   $TCA42+13
         DS    CL3
$TCA43   DS    CL13
         ORG   $TCA43
$TCB43   DC    A(465)
$TCC43   DC    A(0)
$TCD43   DC    B'00000000'
$TCE43   DC    X'80000000'
         ORG   $TCA43+13
         DS    CL3
$TCA44   DS    CL13
         ORG   $TCA44
$TCB44   DC    A(247)
$TCC44   DC    A(0)
$TCD44   DC    B'10001000'
$TCE44   DC    X'80000000'
         ORG   $TCA44+13
         DS    CL3
$TCA45   DS    CL13
         ORG   $TCA45
$TCB45   DC    A(247)
$TCC45   DC    A(0)
$TCD45   DC    B'10001000'
$TCE45   DC    X'40000000'
         ORG   $TCA45+13
         DS    CL3
$TCA46   DS    CL13
         ORG   $TCA46
$TCB46   DC    A(247)
$TCC46   DC    A(61)
$TCD46   DC    B'01001000'
$TCE46   DC    X'20000000'
         ORG   $TCA46+13
         DS    CL3
$TCA47   DS    CL13
         ORG   $TCA47
$TCB47   DC    A(299)
$TCC47   DC    A(61)
$TCD47   DC    B'01001000'
$TCE47   DC    X'FFFFFFFF'
         ORG   $TCA47+13
         DS    CL3
$TCA48   DS    CL13
         ORG   $TCA48
$TCB48   DC    A(463)
$TCC48   DC    A(0)
$TCD48   DC    B'10000000'
$TCE48   DC    X'C0000000'
         ORG   $TCA48+13
         DS    CL3
$TCA49   DS    CL13
         ORG   $TCA49
$TCB49   DC    A(254)
$TCC49   DC    A(0)
$TCD49   DC    B'00000000'
$TCE49   DC    X'FFFFFFFF'
         ORG   $TCA49+13
         DS    CL3
$TCA50   DS    CL13
         ORG   $TCA50
$TCB50   DC    A(299)
$TCC50   DC    A(61)
$TCD50   DC    B'01001000'
$TCE50   DC    X'FFFFFFFF'
         ORG   $TCA50+13
         DS    CL3
$TCA51   DS    CL13
         ORG   $TCA51
$TCB51   DC    A(463)
$TCC51   DC    A(0)
$TCD51   DC    B'10000000'
$TCE51   DC    X'C0000000'
         ORG   $TCA51+13
         DS    CL3
$TCA52   DS    CL13
         ORG   $TCA52
$TCB52   DC    A(254)
$TCC52   DC    A(0)
$TCD52   DC    B'00000000'
$TCE52   DC    X'FFFFFFFF'
         ORG   $TCA52+13
         DS    CL3
CTSAVE   DS    CL64
M923FILL DC    CL20' INVALID DEVICE TYPE'
         DC    CL20' IN USE BY ISTOLTEP '
PATCH    DC    55F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPLPTR   EQU   @10
RCAPTR   EQU   @03
WAPTR    EQU   @02
R0       EQU   @00
R1       EQU   @01
R4       EQU   @04
X        EQU   @06
I        EQU   @07
R5       EQU   @05
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$TRTBLA  EQU   $POINTER+124
$CTNAME  EQU   $POINTER+132
$CONSTNT EQU   $RCAAREA+244
$USECNT  EQU   $CONSTNT
$RCAFLG  EQU   $RCAAREA+604
$UPDATE  EQU   $RCAFLG
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$CATERR  EQU   $ERROPT
$DRIVER  EQU   $SCTTBLE+6
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$DYCOM   EQU   $OLTFLGS
$OLTFLG2 EQU   $SCTTBLE+37
$TALK    EQU   $OLTFLG2
$TOTFLG1 EQU   $SCTTBLE+38
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$SLASHAD EQU   $CDA+32
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$HIMOREC EQU   $CDA+60
$OPNDCNT EQU   $CDA+112
$OPISCNT EQU   $CDA+114
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$TESTCNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$NORELDV EQU   $FLAG1
$OLTACT  EQU   $FLAG1
$FLAG2   EQU   $COMMFLG+1
$VALDDEV EQU   $FLAG2
$VALDTST EQU   $FLAG2
$FLAG3   EQU   $COMMFLG+2
$DEVERR  EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$NEWAP   EQU   $FLAG3
$FLAG4   EQU   $COMMFLG+3
$OPCOM   EQU   $FLAG4
$APRQPER EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$FLAG5   EQU   $COMMFLG+4
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$ABNDBIT EQU   $FLAG6
$CIREQ   EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$FLAG8   EQU   $COMMFLG+7
$TCECM   EQU   $FLAG8
$FLAG9   EQU   $COMMFLG+8
$FLAG10  EQU   $COMMFLG+9
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$OPTMSG  EQU   $FLAG12
$FLAG13  EQU   $COMMFLG+12
$LGON    EQU   $FLAG13
$CATMSG  EQU   $FLAG13
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
@NM00039 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVFPM  EQU   $DEVCDSF
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$NOTDEV  EQU   $DEVFLG3
$SIOFLG  EQU   $DEVFLG3
$SYSMN   EQU   $DEVTBLE+28
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$RNINFO  EQU   $DEVTBLE+56
$DEVFLG5 EQU   $RNINFO+8
$DEVFLG4 EQU   $DEVTBLE+65
$DEVCNTS EQU   TOLTEPWA+1464
$SLTBL   EQU   TOLTEPWA+1468
$RUNTEST EQU   $SLTBL+13
$TESTFLG EQU   $SLTBL+21
$SECLST  EQU   $SLTBL+22
$TLTRPL2 EQU   TOLTEPWA+1736
$INBUFR  EQU   TOLTEPWA+2104
$WORK    EQU   TOLTEPWA+2376
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
$APNAME  EQU   TOLTEPWA+2704
$DTORESP EQU   TOLTEPWA+2712
@NM00048 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00048+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00048+10
$ENXX    EQU   @NM00048+15
$IMITX   EQU   $ENXX
SVESC033 EQU   TOLTEPWA+3160
SVECC013 EQU   TOLTEPWA+3232
SVEIC002 EQU   TOLTEPWA+3520
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
#EXIT    EQU   0
CDSMAP   EQU   0
CDSMFCT  EQU   CDSMAP+4
CDSFEAT  EQU   CDSMFCT+1
CDSFLAG  EQU   CDSMAP+9
ISTTIE   EQU   0
TIETIEA  EQU   ISTTIE+4
TIESNA   EQU   ISTTIE+8
TIERPHA  EQU   ISTTIE+12
AQCTNAME EQU   0
DEVCHAR  EQU   0
BACKSAVE EQU   0
$TRTBL   EQU   0
SVEIC00A EQU   SVEIC003
DTCOUNT  EQU   $DTORESP
MSG247   EQU   $INBUFR
ACQRESP  EQU   $WORK
ACQSYMN  EQU   ACQRESP
ACQCHAR  EQU   ACQRESP+4
DEVDATA  EQU   ACQRESP+8
XBUFR    EQU   $WORK
CTPTRS   EQU   XBUFR+104
FLAG5    EQU   CTPTRS+8
@NM00055 EQU   $DTORESP+16
$CTMSGNM EQU   @NM00055
TEMPCDS  EQU   @NM00055+8
CDSUAD   EQU   TEMPCDS
TEMPFLGS EQU   TEMPCDS+9
CTNAME   EQU   TEMPCDS+12
CTPARM   EQU   @NM00055+28
CTPARMA  EQU   CTPARM
CTPARMB  EQU   CTPARM+4
T463X    EQU   $INBUFR
T463A    EQU   T463X
T463C    EQU   T463X+3
T463Y    EQU   $INBUFR
T463B    EQU   T463Y+1
INCOUNT  EQU   $INBUFR
SVECC012 EQU   SVESC022
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC033
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
T463YA   EQU   T463Y
TEMPB    EQU   TEMPCDS+10
TEMPA    EQU   TEMPCDS+4
@NM00054 EQU   CTPTRS
@NM00053 EQU   XBUFR+72
CTCID    EQU   XBUFR+64
XBD      EQU   XBUFR
TESTDV   EQU   MSG247
TIEPTR2  EQU   TIERPHA
TIEPTR1  EQU   TIESNA
TIEGATE  EQU   TIETIEA
TIEREQ   EQU   ISTTIE+3
TIERETCD EQU   ISTTIE+2
TIELNGTH EQU   ISTTIE+1
TIETYPE  EQU   ISTTIE
CDSEXARA EQU   CDSMAP+20
CDSSYMBN EQU   CDSMAP+12
CDSEXTM  EQU   CDSFLAG+2
CDSEXTB  EQU   CDSFLAG+2
CDSTMERB EQU   CDSFLAG+2
@NM00052 EQU   CDSFLAG+1
CDSDVPRO EQU   CDSFLAG+1
CDSNTPRI EQU   CDSFLAG+1
CDSLINCN EQU   CDSFLAG
CDSREMSY EQU   CDSFLAG
CDS2CHAN EQU   CDSFLAG
CDSSYMB  EQU   CDSFLAG
CDSEXTPR EQU   CDSFLAG
CDSFEVOL EQU   CDSFLAG
CDSSHAR  EQU   CDSFLAG
CDSFPMD  EQU   CDSFLAG
CDSBYTCT EQU   CDSMAP+8
CDSTYPE  EQU   CDSMFCT+3
CDSCLASS EQU   CDSMFCT+2
@NM00051 EQU   CDSFEAT
CDSDEVM  EQU   CDSFEAT
CDSDEVT  EQU   CDSFEAT
CDSASCII EQU   CDSFEAT
CDSMODEL EQU   CDSMFCT
CDSUA    EQU   CDSMAP
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC025 EQU   TOLTEPWA+3088
@NM00050 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00049 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00048+14
$NSXX    EQU   @NM00048+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00048+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00048
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL1 EQU   TOLTEPWA+1616
@NM00047 EQU   $SLTBL+135
$HIGHRTN EQU   $SLTBL+134
$PRIMADR EQU   $SLTBL+130
$CTSTPT  EQU   $SLTBL+128
$TSTCNT  EQU   $SLTBL+126
$SECFLGS EQU   $SECLST+3
$SECTION EQU   $SECLST
$SECACT  EQU   $TESTFLG
$CANTRUN EQU   $TESTFLG
$FINAL   EQU   $TESTFLG
$TESTSUF EQU   $RUNTEST+5
$TESTNUM EQU   $RUNTEST+1
$LETPRF  EQU   $RUNTEST
$SYMBOLC EQU   $SLTBL+5
$FAMILY  EQU   $SLTBL
$CDEVPT  EQU   TOLTEPWA+1466
$FEEDBCK EQU   $DEVTBLE+66
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00046 EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$LINENME EQU   $RNINFO
$CID     EQU   $DEVTBLE+52
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
@NM00045 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00044 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00043 EQU   $DEVCDSF
@NM00042 EQU   $DEVCDSF
@NM00041 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00039+1
$DEVCTLU EQU   @NM00039+1
$DEVCHAN EQU   @NM00039
@NM00040 EQU   @NM00039
$CTINDX  EQU   $DEVUNAD
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00038 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00037 EQU   $FLAG11
@NM00036 EQU   $FLAG10
$INBND   EQU   $FLAG10
$WAITFLG EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
$NOTRRCH EQU   $FLAG9
@NM00035 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$REMSW   EQU   $FLAG9
$IGRES   EQU   $FLAG9
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00034 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00033 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$SNDRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$1STDATA EQU   $FLAG7
$ABTERM  EQU   $ABNDBIT
$FSTMCIS EQU   $FLAG6
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00032 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00031 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$FSTFE   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
$NDR     EQU   $FLAG2
@NM00030 EQU   $FLAG2
@NM00029 EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00028 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00027 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$LOWADDR EQU   $OLTPTR
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00026 EQU   $CDA
@NM00025 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00024 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00023 EQU   $TOTFLG1
@NM00022 EQU   $TOTFLG1
@NM00021 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
$CTEQTT  EQU   $TOTFLG1
@NM00020 EQU   $TOTFLG1
@NM00019 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00018 EQU   $OLTFLG2
@NM00017 EQU   $OLTFLG2
@NM00016 EQU   $OLTFLG2
@NM00015 EQU   $OLTFLG2
@NM00014 EQU   $OLTFLG2
@NM00013 EQU   $OLTFLG2
@NM00012 EQU   $OLTFLG2
@NM00011 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00010 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00009 EQU   $PDEVFLG
@NM00008 EQU   $PDEVFLG
@NM00007 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00006 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00005 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
$TLTEND  EQU   $RCAAREA+936
$EXITSAV EQU   $RCAAREA+864
$TRASCII EQU   $RCAAREA+608
@NM00004 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CUTESTB EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
$TLTPRPL EQU   $CONSTNT+20
@NM00003 EQU   $CONSTNT+4
@NM00002 EQU   $CONSTNT+2
$CURRTWA EQU   $POINTER+140
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00001 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB2 EQU   $POINTER+28
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$LSTAREA EQU   $POINTER+12
$FSTAREA EQU   $POINTER+8
$CVTSAVE EQU   $POINTER+4
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00104 EQU   I02C0092
@RT00158 EQU   I02C0090
@RF00172 EQU   I02C0120
@RT00199 EQU   I02C0110
@RT00202 EQU   I02C0120
@RT00214 EQU   I02C0100
@RF00288 EQU   I02C0120
@RF00309 EQU   I02C0120
@RT00320 EQU   I02C0150
@RT00323 EQU   I02C0150
@RT00337 EQU   I02C0150
@RT00346 EQU   I02C0010
@RT00357 EQU   I02C0140
@RT00366 EQU   I02C0010
@RT00379 EQU   I02C0010
@RT00419 EQU   I02C0230
@RT00465 EQU   I02C0180
@RT00513 EQU   I02C0220
@RT00521 EQU   I02C0220
@RT00584 EQU   I02C0007
@ENDDATA EQU   *
         END   ISTIC002,(C'PLS0905',0701,76244)
