         TITLE 'ISTSC02F,WAITIO - WAITS FOR I/O COMPLETION             *
                        '
* IBM DISK OPERATING SYSTEM
* TOLTEP - 5745-SCT-TLT
         ISEQ 73,80
ISTSC02F CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL2(@EP00002-@MAINENT)
         DC    AL1(16)                                             0002
         DC    C'ISTSC02F  75.225'                                 0002
S2FC1000 DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL2(@EP00674-S2FC1000)
         ENTRY S2FC1000
S2FC2000 DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL2(@EP00751-S2FC2000)
         ENTRY S2FC2000
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0002
         STM   @00,@12,20(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         AH    @15,4(,@15)                                         0002
         BR    @15                                                 0002
@EP00002 DS    0H                                                  0003
*   R14=R13;                        /* HOLD CALLER'S SVAREA PTR      */
         LR    R14,R13                                             0419
*   R13=ADDR(SVESC02F);             /* PT TO MY SAVEAREA             */
         LA    R13,SVESC02F(,WAPTR)                                0420
*   BACKSAVE(3)=R13;                /* PUT MY SVAPTR IN CALLER       */
         STCM  R13,15,BACKSAVE+8(R14)                              0421
*   SVESC02F(2)=R14;                /* PUT CALLER'S SVAREA PTR IN MY
*                                      SAVEAREA                      */
*                                                                  0422
         ST    R14,SVESC02F+4(,WAPTR)                              0422
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY FROM RCM FOR OLT WAITIO MACRO REQUEST                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0423
*   WAIPTR=R1;                      /* SAVE PTR TO WAITIO PARMLST    */
         LR    WAIPTR,R1                                           0423
*   IF $WIODE=ON×$WIOANY=ON         /* IF WAIT=DE OR WAIT=ANY        */
*     THEN                          /* THEN                          */
         TM    $WIODE(WAIPTR),B'00011000'                          0424
         BZ    @RF00424                                            0424
*     DO;                                                          0425
*       R15=4;                      /* SET RC=04                     */
         LA    R15,4                                               0426
*       GOTO S2FC9999;              /* RETURN TO CALLER              */
         B     S2FC9999                                            0427
*     END;                                                         0428
*   IF $WIOTECB=0                   /* IF TECB ADDR = 0              */
*     THEN                                                         0429
@RF00424 L     @08,$WIOTECB(,WAIPTR)                               0429
         LTR   @08,@08                                             0429
         BNZ   @RF00429                                            0429
*     DO;                                                          0430
*       J=0;                        /* NO DEVICE                     */
         SLR   J,J                                                 0431
*       GOTO S2FC0900;              /* THEN STANDALONE WAIT          */
         B     S2FC0900                                            0432
*     END;                                                         0433
*                                                                  0433
*   /*****************************************************************/
*   /*                                                               */
*   /* SEARCH DEVICE TABLE                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0434
*   IF $WIOCDS=0                    /* IF CDS ADDR = 0               */
*     THEN                          /* THEN                          */
@RF00429 L     @08,$WIOCDS(,WAIPTR)                                0434
         LTR   @08,@08                                             0434
         BNZ   @RF00434                                            0434
*     CDSPTR=ADDR($PDEVADR);        /* USE PRIMARY DEV ADDR          */
         LA    CDSPTR,$PDEVADR(,WAPTR)                             0435
*   ELSE                            /* ELSE                          */
*     CDSPTR=$WIOCDS;               /* USE WAITIO CDS PTR            */
         B     @RC00434                                            0436
@RF00434 L     CDSPTR,$WIOCDS(,WAIPTR)                             0436
*   DO J=3 TO $DEVCNTS;             /*                               */
@RC00434 LA    J,3                                                 0437
         B     @DE00437                                            0437
@DL00437 DS    0H                                                  0438
*     IF CDSSYMB=ON                 /* IF DEV HAS A SYMB NAME        */
*       THEN                        /* THEN                          */
         TM    CDSSYMB(CDSPTR),B'00001000'                         0438
         BNO   @RF00438                                            0438
*       DO;                                                        0439
*         IF CDSSYMBN=$$SYMNME(J)   /* CHK IF THEY MATCH             */
*           THEN                    /*                               */
         LR    @08,J                                               0440
         MH    @08,@CH01252                                        0440
         ALR   @08,WAPTR                                           0440
         CLC   CDSSYMBN(8,CDSPTR),$$SYMNME-68(@08)                 0440
         BE    @RT00440                                            0440
*           GOTO S2FC0200;          /* IF YES, CHK OUT DEVICE        */
*         ELSE                                                     0442
*           GOTO S2FC0250;          /* IF NO, GOTO NEXT DEV          */
         B     S2FC0250                                            0442
*       END;                                                       0443
*     ELSE                          /* IF NO SYMB NAME               */
*       IF CDSUA^=$DEVUNAD(J)       /* DO UNIT ADDRESSES MATCH?      */
*         THEN                      /*                               */
@RF00438 LR    @08,J                                               0444
         MH    @08,@CH01252                                        0444
         L     @07,CDSUA(,CDSPTR)                                  0444
         CL    @07,$DEVUNAD-68(@08,WAPTR)                          0444
         BNE   @RT00444                                            0444
*         GOTO S2FC0250;            /* IF NO, GET NEXT DEV           */
*S2FC0200:                                                         0446
*     IF $WIOTECB^=$DEVTECB(J)×     /* IF TECB NOT EXIOTECB          */
*         $DEVACT(J)=OFF            /* OR DEVICE NOT ACTIVE          */
*         ×$NOTDEV(J)=ON            /* OR IF DEV HAS GONE AWAY       */
*       THEN                        /* THEN                          */
S2FC0200 LR    @08,J                                               0446
         MH    @08,@CH01252                                        0446
         L     @07,$WIOTECB(,WAIPTR)                               0446
         ST    @08,@TF00001                                        0446
         ALR   @08,WAPTR                                           0446
         ICM   @03,15,$DEVTECB-68(@08)                             0446
         CLR   @07,@03                                             0446
         BNE   @RT00446                                            0446
         LR    @08,WAPTR                                           0446
         AL    @08,@TF00001                                        0446
         TM    $DEVACT-68(@08),B'00000100'                         0446
         BZ    @RT00446                                            0446
         LR    @08,WAPTR                                           0446
         AL    @08,@TF00001                                        0446
         TM    $NOTDEV-68(@08),B'10000000'                         0446
         BNO   @RF00446                                            0446
@RT00446 DS    0H                                                  0447
*S2FC0240:                                                         0447
*       DO;                                                        0447
S2FC0240 DS    0H                                                  0448
*         R15='0C'X;                /* SET RC = 0C                   */
         LA    R15,12                                              0448
*         GOTO S2FC9999;            /* RETURN                        */
         B     S2FC9999                                            0449
*       END;                                                       0450
*     ELSE                                                         0451
*       GOTO S2FC0260;              /* ELSE CONTINUE                 */
*S2FC0250:                                                         0452
*   END;                                                           0452
S2FC0250 AL    J,@CF00061                                          0452
@DE00437 CH    J,$DEVCNTS(,WAPTR)                                  0452
         BNH   @DL00437                                            0452
*   GOTO S2FC0240;                  /* IF DEV NOT FOUND, RC=C        */
*                                                                  0453
         B     S2FC0240                                            0453
*   /*****************************************************************/
*   /*                                                               */
*   /* PURGE REQUEST                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0454
*S2FC0260:                                                         0454
*   $WTISUED(J)=ON;                 /* WAITIO ISSUED                 */
S2FC0260 LR    @08,J                                               0454
         MH    @08,@CH01252                                        0454
         ST    @08,@TF00001                                        0454
         ALR   @08,WAPTR                                           0454
         OI    $WTISUED-68(@08),B'00000001'                        0454
*   IF $WIOPURG=ON                  /* IF PURGE=YES REQUESTED        */
*     THEN                          /* THEN                          */
         TM    $WIOPURG(WAIPTR),B'00100000'                        0455
         BNO   @RF00455                                            0455
*     DO;                           /* REINIT FLGS, RET              */
*       $IGLXIFB(J)=ON;             /* IGNORE PURGE FEEDBACK         */
         LR    @07,WAPTR                                           0457
         AL    @07,@TF00001                                        0457
         OI    $IGLXIFB-68(@07),B'01000000'                        0457
*       DIOCDS=ADDR($DEVTBLE(J));   /* ADDRESS OF CDS                */
         L     @07,@TF00001                                        0458
         LA    @07,$DEVTBLE-68(@07,WAPTR)                          0458
         ST    @07,DIOCDS                                          0458
*       DIOTECB=$DEVTECB(J);        /* ADDR OF TECB                  */
         LR    @07,WAPTR                                           0459
         AL    @07,@TF00001                                        0459
         ICM   @03,15,$DEVTECB-68(@07)                             0459
         ST    @03,DIOTECB                                         0459
*       R1=ADDR(DIOPARM);           /* ADDR OF PARM LIST             */
         LA    R1,DIOPARM                                          0460
*       CALL ISTSC032;              /* CALL DIO MODULE FOR HIO       */
         L     @15,@CV03939                                        0461
         BALR  @14,@15                                             0461
*       GOTO S2FC9900;              /* I/O TO DEV DONE               */
         B     S2FC9900                                            0462
*     END;                                                         0463
*                                                                  0463
*   /*****************************************************************/
*   /*                                                               */
*   /* WAIT=YES REQUEST & POLL=YES REQUEST                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0464
*   IF $WIOYES=OFF                  /* IF NOT A WIO=YES REQUEST      */
*       &$WIOPOLL=OFF               /* OR NOT WIO POLL               */
*     THEN                          /* THEN                          */
@RF00455 TM    $WIOYES(WAIPTR),B'11000000'                         0464
         BZ    @RT00464                                            0464
*     GOTO S2FC0900;                /* CALCULATE END TIME            */
*   IF $REMOTE(J)=OFF               /* IF A LOCAL DEV                */
*     THEN                          /* THEN                          */
@RF00464 LR    @08,J                                               0466
         MH    @08,@CH01252                                        0466
         ST    @08,@TF00001                                        0466
         ALR   @08,WAPTR                                           0466
         TM    $REMOTE-68(@08),B'01000000'                         0466
         BZ    @RT00466                                            0466
*     GOTO S2FC0770;                /* CHECK FOR EVENT COMPLETE      */
*                                                                  0467
*   /*****************************************************************/
*   /*                                                               */
*   /* REMOTE - IF A WRITE WAS ISSUED, EVENT COMPLETE                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0468
*   IF $REMWRIT(J)=ON               /* IF A WRITE WAS ISSUED         */
*     THEN                                                         0468
         LR    @08,WAPTR                                           0468
         AL    @08,@TF00001                                        0468
         TM    $REMWRIT-68(@08),B'00000100'                        0468
         BO    @RT00468                                            0468
*     GOTO S2FC0800;                /* THEN WIO IS COMPLETE          */
*                                                                  0469
*   /*****************************************************************/
*   /*                                                               */
*   /* REMOTE - CHECK FOR NCP DATA IN ALREADY                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0470
*   IF $1STUSED(J)=ON               /* IF 1ST DEV ACTIVE             */
*     THEN                          /* THEN                          */
         LR    @08,WAPTR                                           0470
         AL    @08,@TF00001                                        0470
         TM    $1STUSED-68(@08),B'00100000'                        0470
         BNO   @RF00470                                            0470
*     DO;                                                          0471
*       IF($OLTCCW1^=0              /* IF OLT HAS READ FOR DATA      */
*           &$1STBFR1^=0)           /* AND THERE IS DATA THERE       */
*         THEN                      /* THEN                          */
         SLR   @08,@08                                             0472
         C     @08,$OLTCCW1(,WAPTR)                                0472
         BE    @RF00472                                            0472
         C     @08,$1STBFR1(,WAPTR)                                0472
         BE    @RF00472                                            0472
*         CALL S2FC0300;            /* HAND FEEDBACK OVER TO OLT     */
         BAL   @14,S2FC0300                                        0473
*       GOTO S2FC0770;              /* CHK FOR EVENT COMPLETE        */
         B     S2FC0770                                            0474
*     END;                                                         0475
*   ELSE                            /* SECOND DEV ACTIVE             */
*     DO;                           /* PROCESS SECOND ACTIVE         */
@RF00470 DS    0H                                                  0477
*       IF $OLTCCW2^=0&$1STBFR2^=0 THEN/* CHECK FOR DATA AVAILABLE   */
         SLR   @08,@08                                             0477
         C     @08,$OLTCCW2(,WAPTR)                                0477
         BE    @RF00477                                            0477
         C     @08,$1STBFR2(,WAPTR)                                0477
         BE    @RF00477                                            0477
*         CALL S2FC0300;            /* DATA HERE, PASS IT B ACK      */
         BAL   @14,S2FC0300                                        0478
*       GO TO S2FC0770;             /* CHECK FOR EVENT COMPLETE      */
         B     S2FC0770                                            0479
*     END;                          /* END OF SECOND ACTIVE          */
*                                                                  0480
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO HAND FEEDBACK OVER TO OLTTCP                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0481
*S2FC0300:                                                         0481
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0481
S2FC0300 DS    0H                                                  0482
*   R14SAVE=R14;                                                   0482
         ST    R14,R14SAVE                                         0482
*   TECBPTR=$DEVTECB(J);            /* SAVE TECB PTR                 */
         LR    @08,J                                               0483
         MH    @08,@CH01252                                        0483
         ST    @08,@TF00001                                        0483
         ALR   @08,WAPTR                                           0483
         ICM   TECBPTR,15,$DEVTECB-68(@08)                         0483
*   IF $1STUSED(J)=ON               /* IF 1ST SET BEING USED         */
*     THEN                                                         0484
         LR    @10,WAPTR                                           0484
         AL    @10,@TF00001                                        0484
         TM    $1STUSED-68(@10),B'00100000'                        0484
         BNO   @RF00484                                            0484
*     DO;                                                          0485
*       BFRPTR=$1STBFR1;            /* PT TO OUR STORAGE BFR         */
         L     @08,$1STBFR1(,WAPTR)                                0486
         LR    BFRPTR,@08                                          0486
*       TEMPTR=$1STBFR1;            /* PT TO BFR TO RELEASE          */
         ST    @08,TEMPTR(,WAPTR)                                  0487
*       CCWPTR=$OLTCCW1;            /* POINT TO OLT'S READ CCW       */
         L     CCWPTR,$OLTCCW1(,WAPTR)                             0488
*       $OLTCCW1=0;                 /* ZERO READ CCW PTR             */
         SLR   @08,@08                                             0489
         ST    @08,$OLTCCW1(,WAPTR)                                0489
*     END;                                                         0490
*   ELSE                            /* IF 2ND SET BEING USED         */
*     DO;                                                          0491
         B     @RC00484                                            0491
@RF00484 DS    0H                                                  0492
*       BFRPTR=$1STBFR2;            /* PT TO OUR STORGE BFR          */
         L     @08,$1STBFR2(,WAPTR)                                0492
         LR    BFRPTR,@08                                          0492
*       TEMPTR=$1STBFR2;            /* PT TO BFR TO RELEASE          */
         ST    @08,TEMPTR(,WAPTR)                                  0493
*       CCWPTR=$OLTCCW2;            /* POINT TO OLT READ CCW         */
         L     CCWPTR,$OLTCCW2(,WAPTR)                             0494
*       $OLTCCW2=0;                 /* ZERO OUT OLT READ CCW PTR     */
         SLR   @08,@08                                             0495
         ST    @08,$OLTCCW2(,WAPTR)                                0495
*     END;                                                         0496
*   FSBPTR=TEMPTR;                  /* PT TO FSB BFR                 */
@RC00484 L     FSBPTR,TEMPTR(,WAPTR)                               0497
*   FDBPTR=ADDR(FSBFDB);            /* PT TO FDB IN FSB              */
         LA    FDBPTR,FSBFDB(,FSBPTR)                              0498
*   READPTR=CCWADDR;                /* PT TO OLT BFR ADR             */
         L     READPTR,CCWADDR-1(,CCWPTR)                          0499
         LA    READPTR,0(,READPTR)                                 0499
*   READSIZE=CCWCOUNT;              /* SIZE OF OLT BFR               */
         LH    @07,CCWCOUNT(,CCWPTR)                               0500
         STH   @07,READSIZE(,WAPTR)                                0500
*   IF $1STUSED(J)=ON               /* IF 1ST DEV ACTIVE             */
*     THEN                          /* AND                           */
         LR    @07,J                                               0501
         MH    @07,@CH01252                                        0501
         ALR   @07,WAPTR                                           0501
         TM    $1STUSED-68(@07),B'00100000'                        0501
         BNO   @RF00501                                            0501
*     DO;                                                          0502
*       IF $RESID1^=0               /* IF RESIDUAL DATA LEFT IN BDU  */
*         THEN                      /* THEN                          */
         SLR   @07,@07                                             0503
         L     @03,$RESID1(,WAPTR)                                 0503
         CR    @03,@07                                             0503
         BE    @RF00503                                            0503
*         DO;                                                      0504
*           FDBPTR=$RESID1;         /* POINT TO BDU CONTAINING DATA  */
         LR    FDBPTR,@03                                          0505
*           FBDATAPT=FDBPTR+$BUFSZ1;/* SKIP WHAT WAS ALREADY PASSED  */
         LR    FBDATAPT,FDBPTR                                     0506
         AL    FBDATAPT,$BUFSZ1(,WAPTR)                            0506
*           $RESID1=0;              /* RESID DATA = 0                */
         SLR   @03,@03                                             0507
         ST    @03,$RESID1(,WAPTR)                                 0507
*         END;                                                     0508
*       ELSE                        /* ELSE NO RESID DATA            */
*         GO TO S2FC0400;           /* GO THROUGH NORMAL PROCESSING  */
*     END;                                                         0510
*   ELSE                            /* ELSE FOR 2ND DEVICE           */
*     DO;                                                          0511
         B     @RC00501                                            0511
@RF00501 DS    0H                                                  0512
*       IF $RESID2^=0               /* IF RESIDUAL DATA IN BDU       */
*         THEN                      /* THEN                          */
         SLR   @07,@07                                             0512
         L     @03,$RESID2(,WAPTR)                                 0512
         CR    @03,@07                                             0512
         BE    @RF00512                                            0512
*         DO;                                                      0513
*           FDBPTR=$RESID2;         /* POINT TO FDB WITH DATA        */
         LR    FDBPTR,@03                                          0514
*           FBDATAPT=FDBPTR+$BUFSZ2;/* SKIP WHAT WAS ALREADY PASSED  */
         LR    FBDATAPT,FDBPTR                                     0515
         AL    FBDATAPT,$BUFSZ2(,WAPTR)                            0515
*           $RESID2=0;              /* ZERO SECOND RESID PTR         */
         SLR   @03,@03                                             0516
         ST    @03,$RESID2(,WAPTR)                                 0516
*         END;                                                     0517
*       ELSE                        /* NO RESID DATA                 */
*         GO TO S2FC0400;           /* GO THROUGH NORMAL PROCESSING  */
*     END;                                                         0519
*   TEMPSIZE=FDBDATCT-(FBDATAPT-FDBDATAA);/* AMT OF RESID DATA IN BDU*/
@RC00501 LR    @03,FBDATAPT                                        0520
         SL    @03,FDBDATAA(,FDBPTR)                               0520
         LCR   @03,@03                                             0520
         AH    @03,FDBDATCT(,FDBPTR)                               0520
         ST    @03,TEMPSIZE(,WAPTR)                                0520
*   GOTO S2FC0500;                  /* GIVE DATA TO OLT              */
*                                                                  0521
         B     S2FC0500                                            0521
*   /*****************************************************************/
*   /*                                                               */
*   /* PUT FEEDBACK DATA IN OLTTCP'S BUFFERS                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0522
*S2FC0400:                                                         0522
*                                                                  0522
*   /*****************************************************************/
*   /*                                                               */
*   /* BTU                                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0522
*   FSBPTR=BFRPTR;                  /* FSB FIRST THING IN BFR        */
S2FC0400 LR    FSBPTR,BFRPTR                                       0522
*   RFY                                                            0523
*     ISTPIU BASED(READPTR);                                       0523
*   THFLAG1=FSBTH1;                 /* TH FLGS TO OLT                */
         MVI   THFLAG1+1(READPTR),C' '                             0524
         MVC   THFLAG1(1,READPTR),FSBTH1(FSBPTR)                   0524
*   THDAF=FSBSAF;                   /* DESTINATION ADDR TO OLT       */
         MVC   THDAF(2,READPTR),FSBSAF(FSBPTR)                     0525
*   THOAF=FSBDAF;                   /* ORIGINAL ADDR TO OLT          */
         MVC   THOAF(2,READPTR),FSBDAF(FSBPTR)                     0526
*   THSNF=FSBSEQID;                 /* SEQUENCE NUMBER TO OLT        */
         MVC   THSNF(2,READPTR),FSBSEQID(FSBPTR)                   0527
*   THDCF=FSBTHCNT;                 /* DATA COUNT TO OLT             */
         LH    @00,FSBTHCNT(,FSBPTR)                               0528
         STH   @00,THDCF(,READPTR)                                 0528
*   ISTRH=FSBRHFLD;                 /* PASS BACK RH                  */
         MVC   ISTRH+10(3,READPTR),FSBRHFLD(FSBPTR)                0529
*   READPTR=ADDR(ISTMRU);           /* ADJUST READ PTR TO MRU        */
         LA    @15,13                                              0530
         ALR   READPTR,@15                                         0530
*   READSIZE=READSIZE-(LENGTH(ISTTH)+LENGTH(ISTRH));/* LOWER BYTES 0531
*                                      LEFT                          */
         LCR   @15,@15                                             0531
         AH    @15,READSIZE(,WAPTR)                                0531
         STH   @15,READSIZE(,WAPTR)                                0531
*   FDBPTR=ADDR(FSBFDB);            /* PT TO FDB                     */
*                                                                  0532
         LA    FDBPTR,FSBFDB(,FSBPTR)                              0532
*   /*****************************************************************/
*   /*                                                               */
*   /* DATA                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0533
*   TEMPSIZE=FDBDATCT;              /* DATA COUNT                    */
         LH    @03,FDBDATCT(,FDBPTR)                               0533
         ST    @03,TEMPSIZE(,WAPTR)                                0533
*   FBDATAPT=FDBDATAA;              /* PTR TO FB DATA PAST FDB       */
         L     FBDATAPT,FDBDATAA(,FDBPTR)                          0534
*S2FC0500:                                                         0535
*   RFY                                                            0535
*    (R0,                                                          0535
*     R1,                                                          0535
*     R14,                                                         0535
*     R15) RSTD;                                                   0535
S2FC0500 DS    0H                                                  0536
*   R0=ADDR(OLTBUFR);               /* POINT TO RECEIVING BUFFER     */
         LR    R0,READPTR                                          0536
*   R1=MIN(TEMPSIZE,READSIZE);      /* GET BYTES TO MOVE TO OLT      */
         L     R1,TEMPSIZE(,WAPTR)                                 0537
         LH    @03,READSIZE(,WAPTR)                                0537
         CR    R1,@03                                              0537
         BNH   *+6
         LR    R1,@03                                              0537
*   R14=ADDR(FBDATA);               /* POINT TO SOURCE BUFFER        */
         LR    R14,FBDATAPT                                        0538
*   R15=R1;                         /* MAKE FROM AND TO COUNTS THE 0539
*                                      SAME                          */
         LR    R15,R1                                              0539
*   MVCL(R0,R14);                   /* MOVE THE DATA                 */
         MVCL  R0,R14                                              0540
*   RFY                                                            0541
*    (R0,                                                          0541
*     R1,                                                          0541
*     R14,                                                         0541
*     R15) RSTD;                                                   0541
*   IF TEMPSIZE>READSIZE            /* IF NOT ENOUGH ROOM IN OLT BFR */
*     THEN                                                         0542
         L     @03,TEMPSIZE(,WAPTR)                                0542
         CH    @03,READSIZE(,WAPTR)                                0542
         BNH   @RF00542                                            0542
*     DO;                                                          0543
*S2FC0600:                                                         0544
*       TCBEVCSW(7:8)=0;            /* FILLED BUFFER, NO RESIDUAL  0544
*                                      COUT                          */
S2FC0600 LA    @03,TECBEVT1(,TECBPTR)                              0544
         SLR   @05,@05                                             0544
         IC    @05,TECBFDLN(,TECBPTR)                              0544
         ST    @03,@TF00001                                        0544
         SLR   @03,@03                                             0544
         IC    @03,TECBEVOC(,TECBPTR)                              0544
         MR    @04,@03                                             0544
         AL    @05,@TF00001                                        0544
         SLR   @03,@03                                             0544
         STCM  @03,3,TCBEVCSW+6(@05)                               0544
*       READPTR=FBDATAPT-FDBPTR+READSIZE;/* SET COUNT FOR STORING  0545
*                                      AWAY                          */
         LR    READPTR,FBDATAPT                                    0545
         SLR   READPTR,FDBPTR                                      0545
         AH    READPTR,READSIZE(,WAPTR)                            0545
*       IF $1STUSED(J)=ON           /* IF 1ST BEING USED             */
*         THEN                                                     0546
         LR    @03,J                                               0546
         MH    @03,@CH01252                                        0546
         ALR   @03,WAPTR                                           0546
         TM    $1STUSED-68(@03),B'00100000'                        0546
         BNO   @RF00546                                            0546
*         DO;                                                      0547
*           $RESID1=FDBPTR;         /* PT TO FDB RESID DATA IS IN    */
         ST    FDBPTR,$RESID1(,WAPTR)                              0548
*           $BUFSZ1=READPTR;        /* POINT TO DATA NOT YET PASSED  */
         ST    READPTR,$BUFSZ1(,WAPTR)                             0549
*         END;                                                     0550
*       ELSE                                                       0551
*         DO;                                                      0551
         B     @RC00546                                            0551
@RF00546 DS    0H                                                  0552
*           $RESID2=FDBPTR;         /* PT TO FDB RESID DATA IS IN    */
         ST    FDBPTR,$RESID2(,WAPTR)                              0552
*           $BUFSZ2=READPTR;        /* POINT TO DATA NOT YET PASSED  */
         ST    READPTR,$BUFSZ2(,WAPTR)                             0553
*         END;                                                     0554
*     END;                                                         0555
*   ELSE                                                           0556
*     DO;                                                          0556
         B     @RC00542                                            0556
@RF00542 DS    0H                                                  0557
*S2FC0700:                                                         0557
*       READSIZE=READSIZE-TEMPSIZE; /* DECR BFR SZ LEFT              */
S2FC0700 L     @10,TEMPSIZE(,WAPTR)                                0557
         LH    @03,READSIZE(,WAPTR)                                0557
         SLR   @03,@10                                             0557
         STH   @03,READSIZE(,WAPTR)                                0557
*       READPTR=READPTR+TEMPSIZE;   /* INCR OLT BFR PTR              */
         ALR   READPTR,@10                                         0558
*       IF(FDBFDBA&S2FGATE)=0       /* IF NO MORE FDB'S              */
*         THEN                                                     0559
         SLR   @10,@10                                             0559
         L     @05,FDBFDBA(,FDBPTR)                                0559
         N     @05,S2FGATE                                         0559
         CR    @05,@10                                             0559
         BNE   @RF00559                                            0559
*         DO;                                                      0560
*           TCBEVCSW(7:8)=READSIZE; /* RAN OUT OF DATA, SET RESIDUAL
*                                      COUNT                         */
         LA    @08,TECBEVT1(,TECBPTR)                              0561
         SLR   @05,@05                                             0561
         IC    @05,TECBFDLN(,TECBPTR)                              0561
         SLR   @07,@07                                             0561
         IC    @07,TECBEVOC(,TECBPTR)                              0561
         MR    @04,@07                                             0561
         ALR   @08,@05                                             0561
         STCM  @03,3,TCBEVCSW+6(@08)                               0561
*           IF BUFCHAIN=0&$TESTMDE(J)=OFF/* END OF TEST SEQUENCE     */
*             THEN                  /* THEN                          */
         L     @08,TEMPTR(,WAPTR)                                  0562
         C     @10,BUFCHAIN(,@08)                                  0562
         BNE   @RF00562                                            0562
         LR    @08,J                                               0562
         MH    @08,@CH01252                                        0562
         ST    @08,@TF00001                                        0562
         ALR   @08,WAPTR                                           0562
         TM    $TESTMDE-68(@08),B'00000010'                        0562
         BNZ   @RF00562                                            0562
*             DO;                                                  0563
*               $DEVACT(J)=OFF;     /* REMOTE DEV THRU               */
         LR    @08,WAPTR                                           0564
         AL    @08,@TF00001                                        0564
         NI    $DEVACT-68(@08),B'11111011'                         0564
*               IF $1STUSED(J)=ON   /* IF THIS IS 1ST DEV ACTIVE     */
*                 THEN              /* THEN                          */
         LR    @08,WAPTR                                           0565
         AL    @08,@TF00001                                        0565
         TM    $1STUSED-68(@08),B'00100000'                        0565
         BNO   @RF00565                                            0565
*                 DO;                                              0566
*                   $1STDATA=OFF;   /* TURN OFF 1ST FLAG             */
         NI    $1STDATA(WAPTR),B'01111111'                         0567
*                 END;                                             0568
*               ELSE                /* ELSE                          */
*                 DO;                                              0569
         B     @RC00565                                            0569
@RF00565 DS    0H                                                  0570
*                   $2NDDATA=OFF;   /* TURN OFF 2ND FLAG             */
         NI    $2NDDATA(WAPTR),B'10111111'                         0570
*                 END;                                             0571
*             END;                                                 0572
*           GOTO S2FC0740;          /* EVENT COMPLETE                */
         B     S2FC0740                                            0573
*         END;                                                     0574
*       ELSE                        /* IF MORE FB DATA               */
*         DO;                       /* THEN                          */
@RF00559 DS    0H                                                  0576
*           FDBPTR=FDBFDBA;         /* PT TO NEXT FDB                */
         L     FDBPTR,FDBFDBA(,FDBPTR)                             0576
*           FBDATAPT=FDBDATAA;      /* PT TO FB DATA                 */
         L     FBDATAPT,FDBDATAA(,FDBPTR)                          0577
*           TEMPSIZE=FDBDATCT;      /* INITIALIZE DATA COUNT         */
         LH    @03,FDBDATCT(,FDBPTR)                               0578
         ST    @03,TEMPSIZE(,WAPTR)                                0578
*           GOTO S2FC0500;          /* MOVE DATA INTO OLT BFR        */
         B     S2FC0500                                            0579
*         END;                                                     0580
*S2FC0740:                                                         0581
*                                                                  0581
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP TO RELEASE BUFFER                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0581
*       RFY                                                        0581
*         ISTTIE BASED(TIEPTR);                                    0581
S2FC0740 DS    0H                                                  0582
*       RFY                                                        0582
*         ISTLDNCB BASED($LDNCBPT(J));                             0582
*       RFY                                                        0583
*         ISTATCVT BASED($CVTSAVE);                                0583
*       RFY                                                        0584
*         ISTDYPAB BASED(ADDR(ATCTCIPB));                          0584
*       RFY                                                        0585
*         IOSB BASED(ADDR(LDNIOSB));                               0585
*       TIEPTR=ADDR(WAITIE);        /* PTR TO WAITIO WORK TIE        */
         LA    TIEPTR,WAITIE                                       0586
*       TIEPTR1=TEMPTR;                                            0587
         L     @03,TEMPTR(,WAPTR)                                  0587
         ST    @03,TIEPTR1(,TIEPTR)                                0587
*       ECB=0;                      /* SET ECB=0                     */
         SLR   @11,@11                                             0588
         ST    @11,ECB                                             0588
*       TIEPTR2=ADDR(ECB);          /* SET PARM                      */
         LA    @11,ECB                                             0589
         ST    @11,TIEPTR2(,TIEPTR)                                0589
*       BUFWAPTR=WAPTR;             /* PASS CURRENT WORKAREA POINTER */
         ST    WAPTR,BUFWAPTR(,@03)                                0590
*       BUFJ=J;                     /* PASS CURRENT DEVICE INDEX     */
         ST    J,BUFJ(,@03)                                        0591
*       CVTPTR=$CVTSAVE;            /* GET PTR TO CVT                */
         L     @03,RCAPTR(,WAPTR)                                  0592
         L     CVTPTR,$CVTSAVE(,@03)                               0592
*       RFY                                                        0593
*         ISTATCVT BASED(CVTPTR);                                  0593
*       R0=TIEPTR;                  /* POINT TO TIE          @D32JPPW*/
         LR    R0,TIEPTR                                           0594
*       R1=ADDR(DYPPAB);            /* POINT TO PAB          @D32JPPW*/
         LA    R1,DYPPAB+624(,CVTPTR)                              0595
*       CALL I00C1000;              /* TPQUE                 @D32JPPW*/
         L     @15,@CV03969                                        0596
         BALR  @14,@15                                             0596
*       R1=ADDR(ECB);               /* POINT TO ECB          @D32JPPW*/
         LA    R1,ECB                                              0597
*       CALL I00C1002;              /* WAIT                  @D32JPPW*/
         L     @15,@CV03970                                        0598
         BALR  @14,@15                                             0598
*     END;                          /* ALL BUFFER USED UP AND FREED  */
*S2FC0750:                                                         0600
*   $EVNCPLT(J)=ON;                 /* EVENT COMPLETE                */
@RC00542 DS    0H                                                  0600
S2FC0750 LR    @08,J                                               0600
         MH    @08,@CH01252                                        0600
         ALR   @08,WAPTR                                           0600
         OI    $EVNCPLT-68(@08),B'00010000'                        0600
*   R14=R14SAVE;                    /* RESTORE R14                   */
         L     R14,R14SAVE                                         0601
*   END S2FC0300;                                                  0602
*                                                                  0602
@EL00002 DS    0H                                                  0602
@EF00002 DS    0H                                                  0602
@ER00002 BR    @14                                                 0602
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR EVENT COMPLETE LOCAL AND REMOTE                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0603
*S2FC0770:                                                         0603
*   IF $EVNCPLT(J)=ON               /* AND IF EVENT IS COMPLETE      */
*     THEN                          /* THEN                          */
S2FC0770 LR    @08,J                                               0603
         MH    @08,@CH01252                                        0603
         ALR   @08,WAPTR                                           0603
         TM    $EVNCPLT-68(@08),B'00010000'                        0603
         BNO   @RF00603                                            0603
*S2FC0800:                                                         0604
*     DO;                                                          0604
S2FC0800 DS    0H                                                  0605
*       IF $REMOTE(J)=OFF           /* IF LOCAL DEVICE               */
*         THEN                                                     0605
         LR    @07,J                                               0605
         MH    @07,@CH01252                                        0605
         ST    @07,@TF00001                                        0605
         ALR   @07,WAPTR                                           0605
         TM    $REMOTE-68(@07),B'01000000'                         0605
         BNZ   @RF00605                                            0605
*         DO;                                                      0606
*           IF $1STUSED(J)=ON THEN                                 0607
         LR    @07,WAPTR                                           0607
         AL    @07,@TF00001                                        0607
         TM    $1STUSED-68(@07),B'00100000'                        0607
         BNO   @RF00607                                            0607
*             DO;                                                  0608
*               $1STUSED(J)=OFF;    /* 1ST USED OFF                  */
         LR    @07,WAPTR                                           0609
         AL    @07,@TF00001                                        0609
         NI    $1STUSED-68(@07),B'11011111'                        0609
*               $1STDATA=OFF;       /* RELEASE 1ST SET               */
         NI    $1STDATA(WAPTR),B'01111111'                         0610
*             END;                                                 0611
*           ELSE                    /* FOR 2ND DEV ACTIVE            */
*             DO;                                                  0612
         B     @RC00607                                            0612
@RF00607 DS    0H                                                  0613
*               $2NDUSED(J)=OFF;    /* 2ND FLAG OFF                  */
         LR    @07,J                                               0613
         MH    @07,@CH01252                                        0613
         ALR   @07,WAPTR                                           0613
         NI    $2NDUSED-68(@07),B'11101111'                        0613
*               $2NDDATA=OFF;       /* RELEASE 2ND SET               */
         NI    $2NDDATA(WAPTR),B'10111111'                         0614
*             END;                                                 0615
*           $TESTMDE(J)=OFF;        /* THEN IT IS OUT OF TEST MODE   */
@RC00607 LR    @07,J                                               0616
         MH    @07,@CH01252                                        0616
         ST    @07,@TF00001                                        0616
         ALR   @07,WAPTR                                           0616
         NI    $TESTMDE-68(@07),B'11111101'                        0616
*           IF $SYSMN(J)=$SYSMN(1)  /* IF TEST AND CT EQUAL          */
*             THEN                  /* THEN                          */
         LR    @07,WAPTR                                           0617
         AL    @07,@TF00001                                        0617
         CLC   $SYSMN-68(8,@07),$SYSMN(WAPTR)                      0617
         BNE   @RF00617                                            0617
*             DO;                                                  0618
*               $TESTMDE(1)=OFF;    /* CT TESTMODE OFF ALSO          */
         NI    $TESTMDE(WAPTR),B'11111101'                         0619
*               $DISCREQ=ON;        /* DISCONNECT REQUIRED BEFORE API
*                                      REQ                           */
         OI    $DISCREQ(WAPTR),B'00001000'                         0620
*             END;                                                 0621
*           $DEVACT(J)=OFF;         /* DEV ACTIVE OFF                */
@RF00617 LR    @07,J                                               0622
         MH    @07,@CH01252                                        0622
         ALR   @07,WAPTR                                           0622
         NI    $DEVACT-68(@07),B'11111011'                         0622
*         END;                                                     0623
*       $EVNCPLT(J)=OFF;            /* EVENT COMPLETE OFF            */
@RF00605 DS    0H                                                  0625
*       $ATTNEXP(J)=OFF;            /* ATTENTION EXPECTED OFF        */
*       $INTOCC(J)=OFF;             /* INTERRUPT OCCRD OFF           */
         LR    @07,J                                               0626
         MH    @07,@CH01252                                        0626
         ST    @07,@TF00001                                        0626
         ALR   @07,WAPTR                                           0626
         NI    $EVNCPLT-68(@07),B'11100101'                        0626
*       $WTISUED(J)=OFF;            /* WAIT ISSUED OFF               */
*       $IGLXIFB(J)=OFF;            /* IGNORE RESET IMM FB OFF       */
*       $EXIOISD(J)=OFF;            /* EXIO ISSUED                   */
*       $EXIOLV3(J)=OFF;            /* EXIO LEVEL 3 OFF              */
         LR    @07,WAPTR                                           0630
         AL    @07,@TF00001                                        0630
         NI    $WTISUED-68(@07),B'00111100'                        0630
*       $WAITFLG=OFF;               /* WAITIO IS DONE                */
         NI    $WAITFLG(WAPTR),B'10111111'                         0631
*       $REMWRIT(J)=OFF;            /* REMOTE WRITE ISSUED OFF       */
         LR    @07,WAPTR                                           0632
         AL    @07,@TF00001                                        0632
         NI    $REMWRIT-68(@07),B'11111011'                        0632
*       GOTO S2FC9900;              /* RETURN                        */
         B     S2FC9900                                            0633
*     END;                                                         0634
*   IF $WIOPOLL=ON                  /* IF WIO POLL REQ               */
*     THEN                          /* THEN                          */
@RF00603 TM    $WIOPOLL(WAIPTR),B'01000000'                        0635
         BNO   @RF00635                                            0635
*     DO;                                                          0636
*       IF $INTOCC(J)=ON            /* IF AN INTERRUPT OCCURRED      */
*         THEN                      /* THEN                          */
         LR    @07,J                                               0637
         MH    @07,@CH01252                                        0637
         ALR   @07,WAPTR                                           0637
         TM    $INTOCC-68(@07),B'00000010'                         0637
         BNO   @RF00637                                            0637
*         DO;                                                      0638
*           $WAITFLG=OFF;           /* WAITIO IS DONE                */
         NI    $WAITFLG(WAPTR),B'10111111'                         0639
*           R15='10'X;              /* SET RC=10                     */
         LA    R15,16                                              0640
*           GOTO S2FC9999;          /* RETURN                        */
         B     S2FC9999                                            0641
*         END;                                                     0642
*       ELSE                        /* ELSE                          */
*         DO;                                                      0643
@RF00637 DS    0H                                                  0644
*           R15=8;                  /* SET RC=8                      */
         LA    R15,8                                               0644
*           GOTO S2FC9999;          /* RETURN                        */
         B     S2FC9999                                            0645
*         END;                                                     0646
*     END;                                                         0647
*                                                                  0647
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO SET UP WAIT REQUEST                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0648
*S2FC0900:                                                         0648
*   IF $WIOTIME>1800                /* IF REQUEST FOR > 30 MIN       */
*     THEN                          /* THEN                          */
@RF00635 DS    0H                                                  0648
S2FC0900 CLC   $WIOTIME(2,WAIPTR),@CH03975                         0648
         BNH   @RF00648                                            0648
*     DO;                                                          0649
*       R15='0C'X;                  /* SET RC=0C                     */
         LA    R15,12                                              0650
*       GOTO S2FC9999;              /* AND RETURN                    */
         B     S2FC9999                                            0651
*     END;                                                         0652
*   IF $WIOTIME=0                   /* IF NO TIME SPECIFIED,         */
*     THEN                                                         0653
@RF00648 ICM   @08,3,$WIOTIME(WAIPTR)                              0653
         BNZ   @RF00653                                            0653
*     WAITIME=30;                   /* DEFAULT TO 30 SEC             */
         MVC   WAITIME(2,WAPTR),@CH01060                           0654
*   ELSE                                                           0655
*     WAITIME=$WIOTIME;             /* ELSE USE TIME SPECIFIED       */
         B     @RC00653                                            0655
@RF00653 MVC   WAITIME(2,WAPTR),$WIOTIME(WAIPTR)                   0655
*   IF J>0                          /* IF A DEVICE WAIT              */
*     THEN                          /* THEN                          */
@RC00653 C     J,@CF00036                                          0656
         BNH   @RF00656                                            0656
*     DO;                                                          0657
*       IF $REMOTE(J)=OFF           /* IF A LOCAL DEVICE             */
*         THEN                      /* THEN                          */
         LR    @07,J                                               0658
         MH    @07,@CH01252                                        0658
         ALR   @07,WAPTR                                           0658
         TM    $REMOTE-68(@07),B'01000000'                         0658
         BNZ   @RF00658                                            0658
*         DO;                                                      0659
*           CALL S2FC3000;                                         0660
         BAL   @14,S2FC3000                                        0660
*           IF $SIOFLG(J)=OFF THEN                                 0661
         LR    @07,J                                               0661
         MH    @07,@CH01252                                        0661
         ALR   @07,WAPTR                                           0661
         TM    $SIOFLG-68(@07),B'00010000'                         0661
         BNZ   @RF00661                                            0661
*             DO;                                                  0662
*               $CEINT1=WAITIME;    /* SAVE USER WAIT TIME           */
         LH    @07,WAITIME(,WAPTR)                                 0663
         ST    @07,$CEINT1(,WAPTR)                                 0663
*               CALL S2FC2500(SIOTIME,$WAITIME);/* SET END TIME      */
         LA    @07,SIOTIME                                         0664
         ST    @07,@AL00001                                        0664
         LA    @07,$WAITIME(,WAPTR)                                0664
         ST    @07,@AL00001+4                                      0664
         LA    @01,@AL00001                                        0664
         BAL   @14,S2FC2500                                        0664
*               GOTO S2FC0920;                                     0665
         B     S2FC0920                                            0665
*             END;                                                 0666
*           GOTO S2FC0910;          /* ELSE DO USER WAIT             */
         B     S2FC0910                                            0667
*         END;                                                     0668
*     END;                                                         0669
@RF00658 DS    0H                                                  0670
*S2FC0910:                                                         0670
*   CALL S2FC2500(WAITIME,$WAITIME);/* TIME CALCULATING RTN          */
@RF00656 DS    0H                                                  0670
S2FC0910 LA    @07,WAITIME(,WAPTR)                                 0670
         ST    @07,@AL00001                                        0670
         LA    @07,$WAITIME(,WAPTR)                                0670
         ST    @07,@AL00001+4                                      0670
         LA    @01,@AL00001                                        0670
         BAL   @14,S2FC2500                                        0670
*S2FC0920:                                                         0671
*   $WIODEV=J;                      /* SAVE PTR TO DEV NTRY          */
S2FC0920 STC   J,$WIODEV(,WAPTR)                                   0671
*   $WAITFLG=ON;                    /* TURN ON WAITING FLAG          */
         OI    $WAITFLG(WAPTR),B'01000000'                         0672
*   GOTO S2FC9999;                  /* RETURN                        */
         B     S2FC9999                                            0673
*                                                                  0674
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY FROM RCM TO SEE IF REQUESTED TIME HAS ELAPSED           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0674
*S2FC1000:                                                         0674
*   ENTRY;                                                         0674
@EP00674 DS    0H                                                  0675
*   R14=R13;                        /* HOLD CALLER'S SVAREA PTR      */
         LR    R14,R13                                             0675
*   R13=ADDR(SVESC02F);             /* PT TO MY SAVE AREA            */
         LA    R13,SVESC02F(,WAPTR)                                0676
*   BACKSAVE(3)=R13;                /* PUT MY SVAPTR IN CALLER       */
         STCM  R13,15,BACKSAVE+8(R14)                              0677
*   SVESC02F(2)=R14;                /* PUT CALLER'S SVAREA PTR IN MY
*                                      SAVEAREA                      */
         ST    R14,SVESC02F+4(,WAPTR)                              0678
*/*                                                                  */
*                                                                  0679
*   CALL ISTSC026;                  /* GO TO $DTIME FOR CURR TIME    */
         L     @15,@CV03986                                        0679
         BALR  @14,@15                                             0679
*/*                                                                  */
*                                                                  0680
*   DTIME=R1;                       /* SAVE CURRENT TIME             */
         ST    R1,DTIME(,WAPTR)                                    0680
*   J=$WIODEV;                      /* SET UP PTR TO DEV NTRY        */
         SLR   J,J                                                 0681
         IC    J,$WIODEV(,WAPTR)                                   0681
*   IF J=0                          /* IF A STANDALONE WAIT          */
*     THEN                          /* THEN                          */
         C     J,@CF00036                                          0682
         BE    @RT00682                                            0682
*     GOTO S2FC1100;                /* DON'T CHECK FOR EVENT COMPLETE*/
*   ELSE                            /* ELSE, A WAIT FOR A DEVICE     */
*     DO;                                                          0684
*       IF $DATAIN(J)=ON            /* IF DATA IN FOR NCP            */
*         THEN                      /* THEN                          */
         LR    @07,J                                               0685
         MH    @07,@CH01252                                        0685
         ALR   @07,WAPTR                                           0685
         TM    $DATAIN-68(@07),B'10000000'                         0685
         BNO   @RF00685                                            0685
*         CALL S2FC0300;            /* GET DATA                      */
         BAL   @14,S2FC0300                                        0686
*     END;                                                         0687
@RF00685 DS    0H                                                  0688
*S2FC1050:                                                         0688
*   IF $EVNCPLT(J)=ON               /* IF EVENT COMPLETE             */
*     THEN                          /* THEN                          */
S2FC1050 LR    @07,J                                               0688
         MH    @07,@CH01252                                        0688
         ST    @07,@TF00001                                        0688
         ALR   @07,WAPTR                                           0688
         TM    $EVNCPLT-68(@07),B'00010000'                        0688
         BO    @RT00688                                            0688
*     GOTO S2FC1300;                /* PROCESS EVENT COMPLETE        */
*   IF $REMOTE(J)=OFF               /* IF LOCAL DEVICE               */
*       &$SIOFLG(J)=OFF THEN                                       0690
         LR    @07,WAPTR                                           0690
         AL    @07,@TF00001                                        0690
         TM    $REMOTE-68(@07),B'01000000'                         0690
         BNZ   @RF00690                                            0690
         LR    @07,WAPTR                                           0690
         AL    @07,@TF00001                                        0690
         TM    $SIOFLG-68(@07),B'00010000'                         0690
         BNZ   @RF00690                                            0690
*     DO;                                                          0691
*       CALL S2FC3000;                                             0692
         BAL   @14,S2FC3000                                        0692
*       IF $SIOFLG(J)=ON THEN       /* THEN                          */
         LR    @07,J                                               0693
         MH    @07,@CH01252                                        0693
         ALR   @07,WAPTR                                           0693
         TM    $SIOFLG-68(@07),B'00010000'                         0693
         BNO   @RF00693                                            0693
*         DO;                                                      0694
*           CETIME=$CEINT1;         /* MOVE TO HALFWORD THE PARAMETER*/
         L     @07,$CEINT1(,WAPTR)                                 0695
         STH   @07,CETIME(,WAPTR)                                  0695
*           CALL S2FC2500(CETIME,$WAITIME);/* SET USER WAIT TIME     */
         LA    @07,CETIME(,WAPTR)                                  0696
         ST    @07,@AL00001                                        0696
         LA    @07,$WAITIME(,WAPTR)                                0696
         ST    @07,@AL00001+4                                      0696
         LA    @01,@AL00001                                        0696
         BAL   @14,S2FC2500                                        0696
*           GOTO S2FC1050;          /* CHECK FOR EVENT COMPLETE      */
         B     S2FC1050                                            0697
*         END;                                                     0698
*     END;                                                         0699
@RF00693 DS    0H                                                  0700
*S2FC1100:                                                         0700
*   IF DTIME>=$WAITIME              /* IF TIME HAS EXPIRED           */
*     THEN                          /* THEN                          */
@RF00690 DS    0H                                                  0700
S2FC1100 CLC   DTIME(4,WAPTR),$WAITIME(WAPTR)                      0700
         BL    @RF00700                                            0700
*     DO;                                                          0701
*       $WAITFLG=OFF;               /* TURN OFF WAITING FLG          */
         NI    $WAITFLG(WAPTR),B'10111111'                         0702
*       IF J=0                      /* IF A NO DEV TIMEOUT           */
*         THEN                      /* THEN                          */
         C     J,@CF00036                                          0703
         BE    @RT00703                                            0703
*         GOTO S2FC1200;            /* SKIP PURGE                    */
*       $IGLXIFB(J)=ON;             /* IGNORE PURGE FEEDBACK         */
         LR    @07,J                                               0705
         MH    @07,@CH01252                                        0705
         ST    @07,@TF00001                                        0705
         ALR   @07,WAPTR                                           0705
         OI    $IGLXIFB-68(@07),B'01000000'                        0705
*       DIOCDS=ADDR($DEVTBLE(J));   /* SET UP CDS PTR                */
         L     @07,@TF00001                                        0706
         LA    @07,$DEVTBLE-68(@07,WAPTR)                          0706
         ST    @07,DIOCDS                                          0706
*       DIOTECB=$DEVTECB(J);        /* SET UP TECB PTR               */
         LR    @07,WAPTR                                           0707
         AL    @07,@TF00001                                        0707
         ICM   @03,15,$DEVTECB-68(@07)                             0707
         ST    @03,DIOTECB                                         0707
*       R1=ADDR(DIOPARM);           /* POINT TO PARM LIST            */
         LA    R1,DIOPARM                                          0708
*       CALL ISTSC032;              /* CALL DIO MODULE               */
         L     @15,@CV03939                                        0709
         BALR  @14,@15                                             0709
*S2FC1200:                                                         0710
*       R15=8;                      /* SET TIMEOUT RC                */
S2FC1200 LA    R15,8                                               0710
*       GOTO S2FC9999;              /* RETURN                        */
         B     S2FC9999                                            0711
*     END;                                                         0712
*   ELSE                                                           0713
*     GOTO S2FC9999;                /* KEEP WAITING                  */
*S2FC1300:                                                         0714
*   $WAITFLG=OFF;                   /* WAITING FLAG OFF              */
S2FC1300 NI    $WAITFLG(WAPTR),B'10111111'                         0714
*   IF $REMOTE(J)=OFF               /* IF A LOCAL DEVICE             */
*     THEN                                                         0715
         LR    @07,J                                               0715
         MH    @07,@CH01252                                        0715
         ST    @07,@TF00001                                        0715
         ALR   @07,WAPTR                                           0715
         TM    $REMOTE-68(@07),B'01000000'                         0715
         BNZ   @RF00715                                            0715
*     DO;                                                          0716
*       IF $1STUSED(J)=ON           /* IF THIS WAS 1ST DEV           */
*         THEN                                                     0717
         LR    @07,WAPTR                                           0717
         AL    @07,@TF00001                                        0717
         TM    $1STUSED-68(@07),B'00100000'                        0717
         BNO   @RF00717                                            0717
*         DO;                                                      0718
*           $1STUSED(J)=OFF;        /* TURN OFF 1ST FLAG             */
         LR    @07,WAPTR                                           0719
         AL    @07,@TF00001                                        0719
         NI    $1STUSED-68(@07),B'11011111'                        0719
*           $1STDATA=OFF;           /* RELEASE 1ST CTL BLK SET       */
         NI    $1STDATA(WAPTR),B'01111111'                         0720
*         END;                                                     0721
*       ELSE                        /* FOR 2ND DEV                   */
*         DO;                                                      0722
         B     @RC00717                                            0722
@RF00717 DS    0H                                                  0723
*           $2NDUSED(J)=OFF;        /* 2ND DEV OFF                   */
         LR    @07,J                                               0723
         MH    @07,@CH01252                                        0723
         ALR   @07,WAPTR                                           0723
         NI    $2NDUSED-68(@07),B'11101111'                        0723
*           $2NDDATA=OFF;           /* RELEASE 2ND CTL BLK SET       */
         NI    $2NDDATA(WAPTR),B'10111111'                         0724
*         END;                                                     0725
*       $TESTMDE(J)=OFF;            /* TEST MODE TERMINATED          */
@RC00717 LR    @07,J                                               0726
         MH    @07,@CH01252                                        0726
         ST    @07,@TF00001                                        0726
         ALR   @07,WAPTR                                           0726
         NI    $TESTMDE-68(@07),B'11111101'                        0726
*       IF $SYSMN(J)=$SYSMN(1)      /* IF CT = TT                    */
*         THEN                      /* THEN                          */
         LR    @07,WAPTR                                           0727
         AL    @07,@TF00001                                        0727
         CLC   $SYSMN-68(8,@07),$SYSMN(WAPTR)                      0727
         BNE   @RF00727                                            0727
*         DO;                                                      0728
*           $TESTMDE(1)=OFF;        /* TEST MODE ON CT OFF           */
         NI    $TESTMDE(WAPTR),B'11111101'                         0729
*           $DISCREQ=ON;            /* DICOONN REQ BEFORE API REQ    */
         OI    $DISCREQ(WAPTR),B'00001000'                         0730
*         END;                                                     0731
*       $DEVACT(J)=OFF;             /* DEV NO LONGER ACTIVE          */
@RF00727 LR    @07,J                                               0732
         MH    @07,@CH01252                                        0732
         ALR   @07,WAPTR                                           0732
         NI    $DEVACT-68(@07),B'11111011'                         0732
*     END;                                                         0733
*   $EVNCPLT(J)=OFF;                /* EVENT COMPLETE OFF            */
@RF00715 DS    0H                                                  0735
*   $ATTNEXP(J)=OFF;                /* ATTENTION EXPTED OFF          */
*   $INTOCC(J)=OFF;                 /* INTERRUPT OCCURRED OFF        */
         LR    @07,J                                               0736
         MH    @07,@CH01252                                        0736
         ST    @07,@TF00001                                        0736
         ALR   @07,WAPTR                                           0736
         NI    $EVNCPLT-68(@07),B'11100101'                        0736
*   $WTISUED(J)=OFF;                /* WAIT ISSUED OFF               */
*   $REMWRIT(J)=OFF;                /* REMOTE WRITE OFF              */
*   $EXIOLV3(J)=OFF;                /* EXIO LEVEL 3 OFF              */
*   $IGLXIFB(J)=OFF;                /* IGNORE PURGE FEEDBK OFF       */
*   $EXIOISD(J)=OFF;                /* EXIO ISSUED OFF               */
         LR    @07,WAPTR                                           0741
         AL    @07,@TF00001                                        0741
         NI    $WTISUED-68(@07),B'00111000'                        0741
*   IF $REMOTE(J)=ON                /* IF A REMOTE DEV               */
*     THEN                          /* THEN                          */
         LR    @07,WAPTR                                           0742
         AL    @07,@TF00001                                        0742
         TM    $REMOTE-68(@07),B'01000000'                         0742
         BNO   @RF00742                                            0742
*     DO;                                                          0743
*       IF $REMDONE(J)=ON           /* IF REMOTE I/O DONE            */
*         THEN                      /* THEN                          */
         LR    @07,WAPTR                                           0744
         AL    @07,@TF00001                                        0744
         TM    $REMDONE-68(@07),B'00001000'                        0744
         BNO   @RF00744                                            0744
*         DO;                                                      0745
*           $DEVACT(J)=OFF;         /* DEVICE NO LONGER ACTIVE       */
         LR    @07,WAPTR                                           0746
         AL    @07,@TF00001                                        0746
         NI    $DEVACT-68(@07),B'11111011'                         0746
*           $REMDONE(J)=OFF;        /* TURN OFF REMOTE FINISHED      */
         LR    @07,WAPTR                                           0747
         AL    @07,@TF00001                                        0747
         NI    $REMDONE-68(@07),B'11110111'                        0747
*         END;                                                     0748
*     END;                                                         0749
*   GOTO S2FC9900;                  /* SET RC=00 AND RETURN          */
         B     S2FC9900                                            0750
*                                                                  0751
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY POINT FROM EXTERNAL MODULES FOR TIME CALCULATING ROUTINE*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0751
*S2FC2000:                                                         0751
*   ENTRY(IN,OUT);                                                 0751
@EP00751 MVC   @PC00001(8),0(@01)                                  0751
*   R14=R13;                        /* HOLD CALLER'S SVAREA PTR      */
         LR    R14,R13                                             0752
*   R13=ADDR(SVESC02F);             /* PT TO MY SAVEAREA             */
         LA    R13,SVESC02F(,WAPTR)                                0753
*   BACKSAVE(3)=R13;                /* PUT MY SVAPTR IN CALLER       */
         STCM  R13,15,BACKSAVE+8(R14)                              0754
*   SVESC02F(2)=R14;                /* PUT CALLER'S SVAREA PTR IN MY
*                                      SAVEAREA                      */
         ST    R14,SVESC02F+4(,WAPTR)                              0755
*   CALL S2FC2500(IN,OUT);          /* CALL TIME CALC ROUTINE        */
         L     @03,@PC00001                                        0756
         ST    @03,@AL00001                                        0756
         L     @03,@PC00001+4                                      0756
         ST    @03,@AL00001+4                                      0756
         LA    @01,@AL00001                                        0756
         BAL   @14,S2FC2500                                        0756
*   GOTO S2FC9999;                  /* RETURN                        */
*                                                                  0757
         B     S2FC9999                                            0757
*   /*****************************************************************/
*   /*                                                               */
*   /* TIME CALCULATING ROUTINE                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0758
*S2FC2500:                                                         0758
*   PROC(STTIME,OUTTIME) OPTIONS(NOSAVE,NOSAVEAREA);               0758
S2FC2500 MVC   @PC00003(8),0(@01)                                  0758
*   DCL                                                            0759
*     ENDTIME CHAR(4) DEF(OUTTIME);                                0759
*   DCL                                                            0760
*     TIME FIXED(15) DEF(STTIME);                                  0760
*   R14SAVE=R14;                    /* SAVE R14                      */
         ST    R14,R14SAVE                                         0761
*/*                                                                  */
*                                                                  0762
*   CALL ISTSC026;                  /* CALL $DTIME                   */
         L     @15,@CV03986                                        0762
         BALR  @14,@15                                             0762
*/*                                                                  */
*                                                                  0763
*   DTIME=R1;                       /* SAVE CURRENT TIME             */
         ST    R1,DTIME(,WAPTR)                                    0763
*   TEMPTIME='00'X;                 /* ZERO OUTADDR WORK AREA        */
         XC    TEMPTIME+1(5,WAPTR),TEMPTIME+1(WAPTR)               0764
         MVI   TEMPTIME(WAPTR),X'00'                               0764
*   CVD(TIME,TEMPTIME(4:6));        /* CONV WIO TIME REQ TO DEC      */
         L     @07,@PC00003                                        0765
         LH    @07,TIME(,@07)                                      0765
         CVD   @07,@TS00001                                        0765
         MVC   TEMPTIME+3(3,WAPTR),@TS00001+5                      0765
*   TEMPSEC(2:2)=TEMPSEC(2:2)×'0F'X;/* PUT SIGN IN WORKAREA          */
         OI    TEMPSEC+1(WAPTR),X'0F'                              0766
*   MVO(TEMPSEC,DTIME(3:3));        /* CURRENT SEC IN WORK AREA      */
         MVO   TEMPSEC(2,WAPTR),DTIME+2(1,WAPTR)                   0767
*   AP(TEMPTIME(4:6),TEMPSEC);      /* ADD WIO REQ TO CURRENT        */
         AP    TEMPTIME+3(3,WAPTR),TEMPSEC(2,WAPTR)                0768
*   DP(TEMPTIME(3:6),SIXTY);        /* DIVIDE SEC BY 60 DIVIDEND=MIN
*                                      REMAINDR=SEC                  */
         DP    TEMPTIME+2(4,WAPTR),SIXTY(2)                        0769
*   MVO(TEMPMIN,DTIME(2:2));        /* CURRENT MIN IN WORK AREA      */
         MVO   TEMPMIN(2,WAPTR),DTIME+1(1,WAPTR)                   0770
*   AP(TEMPTIME(3:4),TEMPMIN);      /* ADD CURRENT TO WIO REQ        */
         AP    TEMPTIME+2(2,WAPTR),TEMPMIN(2,WAPTR)                0771
*   DP(TEMPTIME(1:4),SIXTY);        /* DIVIDE MIN BY 60 HRS=DIVIDEND
*                                      MIN=REMAINDR                  */
         DP    TEMPTIME(4,WAPTR),SIXTY(2)                          0772
*   MVO(TEMPHR,DTIME(1:1));         /* MOVE CURRENT HRS TO WORK      */
         MVO   TEMPHR(2,WAPTR),DTIME(1,WAPTR)                      0773
*   AP(TEMPTIME(1:2),TEMPHR);       /* ADD WIO REQ TO CURRENT        */
         AP    TEMPTIME(2,WAPTR),TEMPHR(2,WAPTR)                   0774
*   MVO(ENDTIME(1:2),TEMPTIME(1:2));/* SAVE HRS IN COMMON            */
         L     @07,@PC00003+4                                      0775
         MVO   ENDTIME(2,@07),TEMPTIME(2,WAPTR)                    0775
*   IF ENDTIME(1:1)>'24'X           /* IF HRS NOW MORE THAN 24       */
*     THEN                                                         0776
         CLI   ENDTIME(@07),X'24'                                  0776
         BNH   @RF00776                                            0776
*     ENDTIME(1:1)=ENDTIME(1:1)-'24'X;/* SET TIME TO NEXT DAY        */
         SLR   @03,@03                                             0777
         IC    @03,ENDTIME(,@07)                                   0777
         SL    @03,@CF04015                                        0777
         STC   @03,ENDTIME(,@07)                                   0777
*   MVO(ENDTIME(2:3),TEMPTIME(3:4));/* SAVE MIN IN COMMON            */
@RF00776 L     @07,@PC00003+4                                      0778
         MVO   ENDTIME+1(2,@07),TEMPTIME+2(2,WAPTR)                0778
*   MVO(ENDTIME(3:4),TEMPTIME(5:6));/* SAVE SECS IN COMMON           */
         MVO   ENDTIME+2(2,@07),TEMPTIME+4(2,WAPTR)                0779
*   ENDTIME(4:4)=0;                 /* GET RID OF SIGN               */
         MVI   ENDTIME+3(@07),X'00'                                0780
*   R14=R14SAVE;                    /* RESTORE R14                   */
         L     R14,R14SAVE                                         0781
*   END S2FC2500;                                                  0782
@EL00003 DS    0H                                                  0782
@EF00003 DS    0H                                                  0782
@ER00003 BR    @14                                                 0782
*S2FC3000:                                                         0783
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0783
S2FC3000 DS    0H                                                  0784
*   R14SAVE=R14;                                                   0784
         ST    R14,R14SAVE                                         0784
*   IF IOSCC^=0 THEN                                               0785
         LR    @07,J                                               0785
         MH    @07,@CH01252                                        0785
         L     @03,$LDNCBPT-68(@07,WAPTR)                          0785
         CLI   IOSCC+412(@03),0                                    0785
         BE    @RF00785                                            0785
*     $SIOFLG(J)=ON;                /* SET SIO FLAG ON               */
         ALR   @07,WAPTR                                           0786
         OI    $SIOFLG-68(@07),B'00010000'                         0786
*   R14=R14SAVE;                    /* RESTORE R14                   */
@RF00785 L     R14,R14SAVE                                         0787
*   END S2FC3000;                                                  0788
@EL00004 DS    0H                                                  0788
@EF00004 DS    0H                                                  0788
@ER00004 BR    @14                                                 0788
*S2FC9900:                                                         0789
*   R15=0;                          /* SET RC=00                     */
S2FC9900 SLR   R15,R15                                             0789
*S2FC9999:                                                         0790
*   R13=SVESC02F(2);                /* GET CALLER'S SVAREA PTR       */
S2FC9999 L     R13,SVESC02F+4(,WAPTR)                              0790
*   DCL                                                            0791
*     1 IFGACB BASED,               /* LEVEL ONE DECLARE             */
*      2 ACBCOMN,                   /* ACB COMMON SECTION X03004     */
*        4 ACBID PTR(8),            /* ACB IDENTIFIER                */
*        4 ACBSTYP PTR(8),          /* ACB SUBTYPE                   */
*        4 ACBLENG FIXED(15),       /* ACB LENGTH IN BYTES           */
*         5 ACBLENG2 FIXED(15),     /* ACB LENGTH IN BYTES           */
*          6 ACBLEN2 FIXED(15),     /* ACB LENGTH IN BYTES X03004    */
*        4 ACBAMBL PTR(31),         /* AMB LIST ADDRESS              */
*         5 ACBJWA PTR(31),         /* JES WORKAREA ADDRESS          */
*          6 ACBIBCT PTR(31),       /* IBCT ADDRESS                  */
*        4 ACBINRTN PTR(31),        /* INTERFACE ROUTINE ADDRESS     */
*        4 ACBMACRF BIT(16),        /* MACRF FLAGS                   */
*         5 ACBMACR1 BIT(8),        /* MACRF FIRST BYTE              */
*          6 ACBKEY BIT(1),         /* ACCESS DATA VIA INDEX         */
*          6 ACBADR BIT(1),         /* ACCESS WITHOUT INDEX          */
*           7 ACBADD BIT(1),        /* SAME AS ABOVE                 */
*          6 ACBCNV BIT(1),         /* CONTROL INTERVAL PROCESSING   */
*           7 ACBBLK BIT(1),        /* SAME AS ABOVE                 */
*          6 ACBSEQ BIT(1),         /* SEQUENTIAL PROCESSING         */
*          6 ACBDIR BIT(1),         /* DIRECT PROCESSING             */
*          6 ACBIN BIT(1),          /* GET, READ                     */
*          6 ACBOUT BIT(1),         /* PUT, WRITE                    */
*          6 ACBUBF BIT(1),         /* USER BUFFERS                  */
*         5 ACBMACR2 BIT(8),        /* MACRF SECOND BYTE             */
*          6 * BIT(3),              /* RESERVED              @X04SVHS*/
*          6 ACBSKP BIT(1),         /* SKIP SEQUENTIAL PROCESSING    */
*          6 ACBLOGON BIT(1),       /* LOGON INDICATOR(VTAM) X03004  */
*          6 ACBRST BIT(1),         /* SET DATA SET TO EMPTY STATE 0791
*                                                            @X04SVHS*/
*          6 ACBDSN BIT(1),         /* BASIC SUBTASK SHARED CONTROL
*                                      BLOCK CONNECTION ON COMMON  0791
*                                      DSNAMES               @X04SVHS*/
*          6 ACBAIX BIT(1),         /* ENTITY TO BE PROCESSED IS AIX
*                                      OF THE PATH SPECIFIED IN THE
*                                      GIVEN DDNAME          @X04SVHS*/
*        4 ACBBSTNO PTR(8),         /* NO OF CONCURRENT STRINGS FOR
*                                      AIX PATH              @X04SVHS*/
*        4 ACBSTRNO PTR(8),         /* NUMBER OF STRINGS     @X04SVHS*/
*        4 ACBBUFND FIXED(15),      /* NUMBER OF BUFFERS REQUESTED 0791
*                                      FOR DATA                      */
*        4 ACBBUFNI FIXED(15),      /* NUMBER OF BUFFERS REQUESTED 0791
*                                      FOR INDEX                     */
*        4 ACBBUFPL PTR(31),        /* JES BUFFER POOL ADDR          */
*         5 ACBMACR3 BIT(8),        /* MACRF THIRD BYTE      @X04SVHS*/
*          6 * BIT(1),              /* RESERVED              @X04SVHS*/
*          6 ACBLSR BIT(1),         /* LOCAL SHARED RESOURCE @X04SVHS*/
*          6 ACBGSR BIT(1),         /* GLOBAL SHARED RESOURCE      0791
*                                                            @X04SVHS*/
*          6 ACBICI BIT(1),         /* IMPROVED CONTROL INTERVAL   0791
*                                      PROCESSING            @X04SVHS*/
*          6 ACBDFR BIT(1),         /* DEFER WRITES          @X04SVHS*/
*          6 ACBSIS BIT(1),         /* SEQUENTIAL INSERT STRATEGY  0791
*                                                            @X04SVHS*/
*          6 ACBNCFX BIT(1),        /* NFX=0/CFX=1           @X04SVHS*/
*          6 * BIT(1),              /* RESERVED FOR VSAM             */
*         5 ACBMACR4 BIT(8),        /* RESERVED FOR VSAM             */
*         5 ACBJBUF FIXED(15),      /* NUMBER OF BUFFERS REQUESTED 0791
*                                      FOR JOURNAL                   */
*        4 ACBRECFM BIT(8),         /* RECORD FORMAT                 */
*          6 ACBRECAF BIT(1),       /* JES FORMAT                    */
*          6 * BIT(6),              /* RESERVED                      */
*        4 ACBCCTYP BIT(8),         /* CONTROL CHARACTER             */
*         5 ACBTRCID BIT(2),        /* 3800 TRANSLATE TABLE  @Z40SVHS*/
*         5 * BIT(2),               /* RESERVED                      */
*         5 ACBASA BIT(4),          /* CONTROL CHARACTER TYPE        */
*        4 ACBOPT BIT(16),          /* NON-USER OPTIONS              */
*         5 ACBDSORG BIT(16),       /* MATCH ACBDORGA WITH DCBDSORG  */
*          6 ACBCROPS BIT(2),       /* CHECKPOINT/RESTART OPTIONS    */
*           7 ACBCRNCK BIT(1),      /* NO CHECK FOR MODIFY           */
*           7 ACBCRNRE BIT(1),      /* NO DATA ERASE OR REPOSITION   */
*          6 ACBDVIND BIT(1),       /* DEVICE INDICATOR      @Z40SVHS*/
*           7 ACBOPTJ BIT(1),       /* 3800 CONTROL CHARACTER PRESENT
*                                                            @Z40SVHS*/
*          6 * BIT(9),              /* RESERVED                      */
*          6 ACBDORGA BIT(1),       /* ACB INDICATOR                 */
*          6 * BIT(3),              /* RESERVED                      */
*        4 ACBMSGAR PTR(31),        /* MSG AREA              @X04SVHS*/
*        4 ACBPASSW PTR(31),        /* PASSWORD ADDRESS              */
*        4 ACBEXLST PTR(31),        /* USER EXIT LIST ADDR           */
*         5 ACBUEL PTR(31),         /* SAME AS ABOVE                 */
*/*  BEFORE OPEN                                                     */
*/*  (FOR VTAM, ACBDDNM INITIALIZED TO X'FF000000000000')     X03004 */
*                                                                  0791
*        4 ACBDDNM CHAR(8) BDY(WORD),/* DDNAME                       */
*/*  AFTER OPEN                                                      */
*                                                                  0791
*         5 ACBTIOT FIXED(15),      /* TIOT OFFSET                   */
*         5 ACBINFL PTR(8),         /* INDICATOR FLAGS               */
*         5 ACBAMETH PTR(8),        /* ACCESS METHOD TYPE            */
*          6 ACBAM PTR(8),          /* ACCESS METHOD TYPE X03004     */
*         5 ACBERFL BIT(8),         /* ERROR FLAGS                   */
*         5 ACBDEB PTR(24),         /* DEB ADDRESS                   */
*/*  NOT MOVED BY OPEN                                               */
*                                                                  0791
*        4 ACBOFLGS BIT(8),         /* OPEN / CLOSE FLAGS            */
*         5 * BIT(2),               /* RESERVED                      */
*         5 ACBEOV BIT(1),          /* EOV CONCATENATION             */
*         5 ACBOPEN BIT(1),         /* ACB IS OPEN                   */
*         5 ACBDSERR BIT(1),        /* NO FURTHER REQUESTS POSSIBLE
*                                      AGAINST ACB                   */
*         5 * BIT(1),               /* RESERVED                      */
*         5 ACBEXFG BIT(1),         /* USER EXIT FLAG                */
*          6 ACBLOCK BIT(1),        /* ACB IS LOCKED X03004          */
*         5 ACBIOSFG BIT(1),        /* OPEN/CLOSE IN CONTROL         */
*          6 ACBBUSY BIT(1),        /* ACB IS BUSY X03004            */
*        4 ACBERFLG BIT(8),         /* ERROR FLAGS                   */
*        4 ACBINFLG BIT(16),        /* INDICATOR FLAGS               */
*         5 * BIT(1),               /* RESERVED FOR EXCP             */
*         5 ACBJEPS BIT(1),         /* JEPS PROCESSING               */
*         5 ACBIJRQE BIT(1),        /* RQE BEING HELD BY JAM         */
*         5 ACBCAT BIT(1),          /* ACB FOR VSAM CATALOG          */
*         5 ACBSCRA BIT(1),         /* CATALOG CONTROL BLOCK SYSTEM
*                                      AREA                  @X04SVHS*/
*         5 ACBUCRA BIT(1),         /* CATALOG CONTROL BLOCK USER  0791
*                                      AREA                  @X04SVHS*/
*         5 ACBVVIC BIT(1),         /* DATA SET BEING OPENED IS    0791
*                                      SYS1.VVIC             @X04SVHS*/
*          6 ACBSDS BIT(1),         /* OPEN AS SYSTEM DATA SET     0791
*                                                            @Z40SVUC*/
*         5 ACBBYPSS BIT(1),        /* BYPASS SECURITY ON OPEN IF  0791
*                                      USER AUTH             @Z40RSUC*/
*         5 * BIT(8),               /* RESERVED              @Z40RSUC*/
*        4 ACBUJFCB PTR(31),        /* USER JFCB ADDRESS             */
*         5 ACBOPTN BIT(8),         /* JAM UCS INDICATOR             */
*         5 * PTR(24),              /* RESERVED                      */
*        4 ACBBUFSP FIXED(31),      /* SIZE AVAILABLE FOR BUFFERS    */
*        4 ACBBLKSZ FIXED(15),      /* BLOCKSIZE                     */
*         5 ACBMSGLN FIXED(15),     /* LENGTH OF MSG AREA    @X04SVHS*/
*        4 ACBLRECL FIXED(15),      /* LOGICAL RECORD LENGTH         */
*        4 ACBUAPTR PTR(31),        /* USER WORKAREA ADDR CAXWA    0791
*                                      ADDRESS FOR CATALOG OPEN      */
*        4 ACBCBMWA PTR(31),        /* CBM WORK AREA ADDRESS         */
*        4 ACBAPID PTR(31);         /* APPLICATION ID ADDRESS X03004 */
*/* ATDSPLY   INVOKED.                                               */
*/********************************************************************/
*/* THE FOLLOWING ATBUILD INCLUSIONS HAVE BEEN MADE IN THIS          */
*/* COMPILATION:                                                     */
*/*             ISTDEVCH                                             */
*/*             ISTLOK                                               */
*/*             ISTRPH                                               */
*/*             ISTPAB                                               */
*/*             ISTNCB                                               */
*/*             ISTLDNCB                                             */
*/*             ISTCCW                                               */
*/*             ISTLCCW                                              */
*/*             ISTPROCD                                             */
*/*             ISTFMCB                                              */
*/*             ISTFDB                                               */
*/*             ISTFSB                                               */
*/*             ISTRH                                                */
*/*             ISTSRU                                               */
*/*             ISTTH                                                */
*/*             ISTNIR                                               */
*/*             ISTPIU                                               */
*/*             ISTDYPAB                                             */
*/*             ISTATCVT                                             */
*/*             ISTTIE                                               */
*/********************************************************************/
*/* END OF ATDSPLY.                                                  */
*                                                                  0792
*   END ISTSC02F                                                   0792
*                                                                  0792
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*                                                                  0792
*       ;                                                          0792
@EL00001 DS    0H                                                  0792
@EF00001 DS    0H                                                  0792
@ER00001 L     @14,12(,@13)                                        0792
         LM    @00,@12,20(@13)                                     0792
         BR    @14                                                 0792
@DATA    DS    0H
@CH01060 DC    H'30'
@CH01252 DC    H'68'
@CH03975 DC    H'1800'
         DS    0F
@PC00001 DS    2F
@PC00003 DS    2F
@AL00001 DS    2A
@TF00001 DS    F
         DS    0F
@CF00036 DC    F'0'
@CF00061 DC    F'1'
@CF04015 DC    XL4'24'
@CV03939 DC    V(ISTSC032)
@CV03969 DC    V(I00C1000)
@CV03970 DC    V(I00C1002)
@CV03986 DC    V(ISTSC026)
         DS    0D
IOSBPTR  DS    A
SRBPTR   DS    A
FMCBPTR  DS    A
S2FGATE  DC    XL4'7FFFFFFF'
LCCWPTR  DS    A
R14SAVE  DS    F
ECB      DS    F
BDUPTR   DS    A
BTUPTR   DS    A
R2SAVE   DS    F
R3SAVE   DS    F
SIOTIME  DC    H'30'
I        DS    FL1
         DS    0D
@TS00001 DS    CL8
SIXTY    DC    X'060F'
         DS    CL2
DIOPARM  DS    CL13
         ORG   DIOPARM
@NM00104 DC    F'0'
DIOCDS   DS    AL4
DIOTECB  DS    AL4
DIOOPER  DC    XL1'01'
         ORG   DIOOPER
@NM00105 DS    BL1
DIOHIO   EQU   DIOOPER+0
         ORG   DIOPARM+13
         DS    CL3
WAITIE   DS    CL16
         ORG   WAITIE
@NM00106 DC    X'18'
@NM00107 DC    AL1(16)
@NM00108 DS    FL1
@NM00109 DC    AL1(4)
@NM00110 DS    CL12
         ORG   WAITIE+16
S2FREP   DC    50F'0'
C02FTPQS DS    16F
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TIEPTR   EQU   @07
CCWPTR   EQU   @04
FDBPTR   EQU   @07
FBDATAPT EQU   @10
READPTR  EQU   @08
BFRPTR   EQU   @10
CDSPTR   EQU   @03
TECBPTR  EQU   @11
FSBPTR   EQU   @03
WAIPTR   EQU   @09
J        EQU   @06
CVTPTR   EQU   @08
WAPTR    EQU   @02
R0       EQU   @00
R1       EQU   @01
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
RPHPTR   EQU   @01
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
ATCLCPTR EQU   1032
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
@NM00004 EQU   IOSB+20
IOSCC    EQU   @NM00004
IOSCSW   EQU   @NM00004+1
IOSTATUS EQU   IOSCSW+3
IOSIPIB  EQU   IOSB+44
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBFLC   EQU   SRB+12
LDNCBPTR EQU   0
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$CVTSAVE EQU   $POINTER+4
$TRTBLA  EQU   $POINTER+124
$CONSTNT EQU   $RCAAREA+244
$RCAFLG  EQU   $RCAAREA+604
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$PDEVADR EQU   $SCTTBLE+12
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$HIMOREC EQU   $CDA+60
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$FLAG2   EQU   $COMMFLG+1
$FLAG3   EQU   $COMMFLG+2
$FLAG4   EQU   $COMMFLG+3
$FLAG5   EQU   $COMMFLG+4
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$DISCREQ EQU   $FLAG6
$ABNDBIT EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$1STDATA EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$FLAG8   EQU   $COMMFLG+7
$FLAG9   EQU   $COMMFLG+8
$FLAG10  EQU   $COMMFLG+9
$WAITFLG EQU   $FLAG10
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$FLAG13  EQU   $COMMFLG+12
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
@NM00050 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$DEVACT  EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DATAIN  EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$NOTDEV  EQU   $DEVFLG3
$SIOFLG  EQU   $DEVFLG3
$SYSMN   EQU   $DEVTBLE+28
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$RNINFO  EQU   $DEVTBLE+56
$DEVFLG5 EQU   $RNINFO+8
$REMOTE  EQU   $DEVFLG5
$DEVFLG4 EQU   $DEVTBLE+65
$EXIOLV3 EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$WTISUED EQU   $DEVFLG4
$DEVCNTS EQU   TOLTEPWA+1464
$WORK    EQU   TOLTEPWA+2376
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00058 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00058+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00058+10
$ENXX    EQU   @NM00058+15
$IMITX   EQU   $ENXX
$WIODEV  EQU   TOLTEPWA+2814
$WAITIME EQU   TOLTEPWA+2816
$1STBFR1 EQU   TOLTEPWA+2824
$OLTCCW1 EQU   TOLTEPWA+2832
$RESID1  EQU   TOLTEPWA+2836
$BUFSZ1  EQU   TOLTEPWA+2840
$1STBFR2 EQU   TOLTEPWA+2848
$OLTCCW2 EQU   TOLTEPWA+2856
$RESID2  EQU   TOLTEPWA+2860
$BUFSZ2  EQU   TOLTEPWA+2864
$CEINT1  EQU   TOLTEPWA+2964
SVESC033 EQU   TOLTEPWA+3160
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
TECBMAPS EQU   0
TECBFDCT EQU   TECBMAPS
TECBFDLN EQU   TECBMAPS+1
TECBSNLN EQU   TECBMAPS+2
TECBFLGS EQU   TECBMAPS+4
TECBSNOC EQU   TECBMAPS+6
TECBEVOC EQU   TECBMAPS+7
TECBEVT1 EQU   TECBMAPS+8
TECBFD01 EQU   0
@NM00062 EQU   TECBFD01+4
TCBEVCSW EQU   @NM00062
TECBSNS1 EQU   0
TCBSENSE EQU   TECBSNS1+3
TECBSEND EQU   0
TCBRESP  EQU   TECBSEND+4
TCBRTYPE EQU   TECBSEND+7
TCBRKCHG EQU   TECBSEND+8
WTIOMAP  EQU   0
$WIOTECB EQU   WTIOMAP+4
$WIOCDS  EQU   WTIOMAP+8
$WIOFLAG EQU   WTIOMAP+12
$WIOYES  EQU   $WIOFLAG
$WIOPOLL EQU   $WIOFLAG
$WIOPURG EQU   $WIOFLAG
$WIODE   EQU   $WIOFLAG
$WIOANY  EQU   $WIOFLAG
$WIOTIME EQU   WTIOMAP+13
CDSMAP   EQU   0
CDSUA    EQU   CDSMAP
CDSMFCT  EQU   CDSMAP+4
CDSFEAT  EQU   CDSMFCT+1
CDSFLAG  EQU   CDSMAP+9
CDSSYMB  EQU   CDSFLAG
CDSSYMBN EQU   CDSMAP+12
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00071 EQU   LOKCHNG+2
ISTRPH   EQU   0
RPHFLAGS EQU   ISTRPH+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   ISTRPH+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTNCB   EQU   0
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
ISTLDNCB EQU   0
LDNCFLAG EQU   ISTLDNCB+54
LDNFLAGS EQU   ISTLDNCB+107
LDNFLAG2 EQU   ISTLDNCB+110
LDNZIOLK EQU   ISTLDNCB+184
LDNZERPF EQU   ISTLDNCB+185
LDNZCPAN EQU   LDNZERPF
LDNZEPIN EQU   LDNZERPF
LDNZLPC  EQU   ISTLDNCB+186
LDNDCDEB EQU   ISTLDNCB+304
LDNZSAV3 EQU   ISTLDNCB+376
LDNZSAV4 EQU   LDNZSAV3+8
LDNIOSB  EQU   ISTLDNCB+412
LDNZH003 EQU   ISTLDNCB+577
ISTCCW   EQU   0
CCWVADDR EQU   ISTCCW
CCWADDR  EQU   CCWVADDR+1
CCWFLAGS EQU   ISTCCW+4
CCWSPARE EQU   ISTCCW+5
CCWCOUNT EQU   ISTCCW+6
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCSTAT  EQU   ISTFMCB+28
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF006 EQU   FMCZFLAG
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTFDB   EQU   0
FDBFDBA  EQU   ISTFDB
FDBDATAA EQU   ISTFDB+4
FDBDATCT EQU   ISTFDB+8
ISTFSB   EQU   0
FSBFSB   EQU   ISTFSB
FSBMNRCD EQU   FSBFSB+2
FSBSFLGS EQU   FSBFSB+3
FSBFSBA  EQU   FSBFSB+4
FSBBTH   EQU   FSBFSB+8
FSBCID   EQU   FSBBTH
FSBSAF   EQU   FSBCID
FSBDAF   EQU   FSBCID+2
FSBRQTAG EQU   FSBBTH+4
FSBSEQID EQU   FSBRQTAG
FSBFLAGS EQU   FSBSEQID
FSBSEQ   EQU   FSBSEQID+1
FSBCSWST EQU   FSBBTH+6
FSBTHFLD EQU   FSBCSWST
FSBTH1   EQU   FSBTHFLD
FSBSYSRS EQU   FSBTH1
FSBTH2   EQU   FSBTHFLD+1
FSBEXTRS EQU   FSBTH2
FSBXFSTS EQU   FSBEXTRS
FSBXCODE EQU   FSBEXTRS
FSBNETRS EQU   FSBFSB+16
FSBSRCAT EQU   FSBNETRS
FSBERC   EQU   FSBNETRS+1
FSBFBMI  EQU   FSBERC
FSBDMGRS EQU   FSBFSB+18
FSBSS1   EQU   FSBDMGRS
FSBSS2   EQU   FSBDMGRS+1
FSBLCPB  EQU   FSBFSB+20
FSBMSGID EQU   FSBLCPB
FSBLCCWA EQU   FSBFSB+24
FSBRLSTS EQU   FSBLCCWA
FSBTHCNT EQU   FSBFSB+28
FSBFDB   EQU   ISTFSB+32
ISTRH    EQU   0
RHFLAGS  EQU   ISTRH
RH1      EQU   RHFLAGS
RH2      EQU   RHFLAGS+1
RHRETRY  EQU   RH2
RHRSVD1  EQU   RH2
RH3      EQU   RHFLAGS+2
ISTSRU   EQU   0
SRUTYPE  EQU   ISTSRU+1
SRULDID  EQU   ISTSRU+2
SRUSPSN  EQU   SRULDID
ISTTH    EQU   0
THFLAG1  EQU   ISTTH
THFLGA   EQU   THFLAG1
THMPF    EQU   THFLGA
THFLGB   EQU   THFLAG1+1
THDAF    EQU   ISTTH+2
THOAF    EQU   ISTTH+4
THSNF    EQU   ISTTH+6
THDCF    EQU   ISTTH+8
ISTTH2   EQU   0
TH2FLAG1 EQU   ISTTH2
TH2MPF   EQU   TH2FLAG1
ISTNIR   EQU   0
NIRRH    EQU   ISTNIR
NIRRU    EQU   ISTNIR+3
ISTPIU   EQU   0
PIUTH    EQU   ISTPIU
PIUNIR   EQU   ISTPIU+10
ISTRUB   EQU   0
ISTDYPAB EQU   0
DYPPAB   EQU   ISTDYPAB+16
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCTCIPB EQU   ISTATCVT+624
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTTIE   EQU   0
TIETIEA  EQU   ISTTIE+4
TIESNA   EQU   ISTTIE+8
TIEPTR1  EQU   TIESNA
TIERPHA  EQU   ISTTIE+12
TIEPTR2  EQU   TIERPHA
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
BACKSAVE EQU   0
OLTBUFR  EQU   0
FBDATA   EQU   0
@NM00113 EQU   0
BUFCHAIN EQU   @NM00113
BUFWAPTR EQU   @NM00113+4
BUFJ     EQU   @NM00113+8
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBVVIC  EQU   ACBINFLG
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
$TRTBL   EQU   0
#EXIT    EQU   0
IN       EQU   0
OUT      EQU   0
STTIME   EQU   0
OUTTIME  EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
RCAPTR   EQU   $RCA
SVESC02F EQU   SVECC013
FSBCOMBN EQU   FSBNETRS
FSBRHFLD EQU   FSBCOMBN+1
FSBRH3   EQU   FSBRHFLD+2
FSBLDFLG EQU   FSBRH3
@NM00091 EQU   FSBRQTAG
SRUSENSE EQU   ISTSRU
SRURMS   EQU   ISTSRU
SRUZIB   EQU   ISTSRU
SRUNETS  EQU   SRUZIB
ISTUNBRU EQU   SRUTYPE
ISTMRU   EQU   ISTRUB
MRURESP  EQU   ISTMRU+7
MRUSYSRS EQU   MRURESP
@NM00111 EQU   $WORK
READSIZE EQU   @NM00111
WAITIME  EQU   @NM00111+2
TEMPSIZE EQU   @NM00111+4
TEMPTR   EQU   @NM00111+8
TEMPTIME EQU   @NM00111+16
TEMPSEC  EQU   @NM00111+22
TEMPMIN  EQU   TEMPSEC
TEMPHR   EQU   TEMPMIN
CETIME   EQU   @NM00111+24
DTIME    EQU   @NM00111+28
ENDTIME  EQU   OUTTIME
TIME     EQU   STTIME
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC024 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC033
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00112 EQU   @NM00111+26
TEMPFMCB EQU   @NM00111+12
MRUDATA  EQU   ISTMRU+9
MRUEXTRS EQU   MRURESP+1
MRUSPHSE EQU   MRUSYSRS
MRUSERR  EQU   MRUSYSRS
MRUMODIF EQU   ISTMRU+6
MRUCMND  EQU   ISTMRU+5
MRUDAF   EQU   ISTMRU+3
MRUREQ   EQU   ISTMRU+2
MRUPREF  EQU   ISTMRU
UNBTYPE  EQU   ISTUNBRU
SRUNAF   EQU   SRUZIB+3
SRUNSREQ EQU   SRUNETS+2
SRUNSUBC EQU   SRUNETS+1
SRUNSCAT EQU   SRUNETS
SRUREQRE EQU   SRURMS+2
SRUPFX2  EQU   SRURMS+1
SRUPFX1  EQU   SRURMS
SRUSENS2 EQU   SRUSENSE+2
SRUSNS2  EQU   SRUSENSE+1
SRUSNS1  EQU   SRUSENSE
FSBRT0B  EQU   @NM00091+1
FSBRT0A  EQU   @NM00091+1
FSBRT09  EQU   @NM00091+1
FSBRT08  EQU   @NM00091+1
FSBRT07  EQU   @NM00091
FSBRT06  EQU   @NM00091
FSBRT05  EQU   @NM00091
FSBRT04  EQU   @NM00091
FSBRT03  EQU   @NM00091
FSBRT02  EQU   @NM00091
FSBRT01  EQU   @NM00091
FSBRT00  EQU   @NM00091
FSBLDCUF EQU   FSBLDFLG
FSBLDSIF EQU   FSBLDFLG
FSBLDSOF EQU   FSBLDFLG
FSBLDEBF EQU   FSBLDFLG
FSBLDBBF EQU   FSBLDFLG
FSBLDFME EQU   FSBLDFLG
FSBLDSCF EQU   FSBLDFLG
FSBLDRMF EQU   FSBLDFLG
FSBRH2   EQU   FSBRHFLD+1
FSBRH1   EQU   FSBRHFLD
FSBALIGN EQU   FSBCOMBN
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00009 EQU   IOSPCISC+4
@NM00008 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00007 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00125 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00124 EQU   ACBINFLG+1
ACBBYPSS EQU   ACBINFLG
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00123 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00122 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00121 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00120 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00119 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00118 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00117 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00116 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00115 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00114 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00103 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00102 EQU   RPLRBAR+3
@NM00101 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLRSV77 EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00100 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00099 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00098 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
TIEGATE  EQU   TIETIEA
TIEREQ   EQU   ISTTIE+3
TIERETCD EQU   ISTTIE+2
TIELNGTH EQU   ISTTIE+1
TIETYPE  EQU   ISTTIE
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00097 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPT18 EQU   ATCAOSM+300
ATCRPT17 EQU   ATCAOSM+296
ATCRPT16 EQU   ATCAOSM+292
ATCRPT15 EQU   ATCAOSM+288
ATCRPT14 EQU   ATCAOSM+284
ATCRPT13 EQU   ATCAOSM+280
ATCRPT12 EQU   ATCAOSM+276
ATCRPT11 EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
ATCRSVBB EQU   ISTATCVT+908
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00096 EQU   ISTATCVT+818
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00095 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00094 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00093 EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
TH2SNF   EQU   ISTTH2+4
TH2OAF   EQU   ISTTH2+3
TH2DAF   EQU   ISTTH2+2
TH2CDF   EQU   TH2FLAG1+1
TH2SEF   EQU   TH2FLAG1+1
TH2PYF   EQU   TH2FLAG1+1
TH2AFI   EQU   TH2FLAG1
TH2PSI   EQU   TH2FLAG1
TH2CMPLI EQU   TH2MPF
TH2RHI   EQU   TH2MPF
TH2FID   EQU   TH2FLAG1
THCDF    EQU   THFLGB
THSEF    EQU   THFLGB
THPYF    EQU   THFLGB
THAFI    EQU   THFLGA
THPSI    EQU   THFLGA
THCMPLI  EQU   THMPF
THRHI    EQU   THMPF
THFID    EQU   THFLAG1
SRURSV01 EQU   SRULDID+4
SRUPSSN  EQU   SRULDID+2
SRUDFCLV EQU   SRUSPSN
@NM00092 EQU   SRUTYPE
SRUPSAC  EQU   SRUTYPE
SRUSPAC  EQU   SRUTYPE
SRUQSREQ EQU   ISTSRU
RHRSVD5  EQU   RH3
RHRSVD4  EQU   RH3
RHLOG    EQU   RH3
RHRSVD3  EQU   RH3
RHRCDIR  EQU   RH3
RHCDIR   EQU   RH3
RHEB     EQU   RH3
RHBB     EQU   RH3
RHPACE   EQU   RH2
RHRSVD2  EQU   RH2
RHINOP   EQU   RHRSVD1
RHBUSY   EQU   RHRETRY
RHEXCEPT EQU   RH2
RHRRN    EQU   RH2
RHPE     EQU   RH2
RHFME    EQU   RH2
RHCHAIN  EQU   RH1
RHSENSE  EQU   RH1
RHFORMAT EQU   RH1
RHDIRI   EQU   RH1
RHSCI    EQU   RH1
RHTYPE   EQU   RH1
RHQS     EQU   RH1
FSBRSV01 EQU   FSBFSB+30
FSBRLRSV EQU   FSBRLSTS
FSBCFTX  EQU   FSBRLSTS
FSBICNCB EQU   FSBMSGID
FSBSSOC  EQU   FSBSS2
FSBSSCC  EQU   FSBSS2
FSBSSDC  EQU   FSBSS2
FSBSSEC  EQU   FSBSS2
FSBSSIR  EQU   FSBSS2
FSBSSCR  EQU   FSBSS2
@NM00090 EQU   FSBSS2
@NM00089 EQU   FSBSS1
FSBSSDE  EQU   FSBSS1
FSBSSUS  EQU   FSBSS1
@NM00088 EQU   FSBSS1
FSBSOHI  EQU   FSBERC
FSBLGI   EQU   FSBERC
FSBLMRI  EQU   FSBFBMI
FSBETI   EQU   FSBERC
FSBEMI   EQU   FSBERC
FSBEBI   EQU   FSBERC
FSBECI   EQU   FSBERC
FSBELI   EQU   FSBERC
FSBMJRCD EQU   FSBSRCAT
FSBXLCI  EQU   FSBXCODE
FSBXFINS EQU   FSBXCODE
FSBXNORM EQU   FSBXFSTS
FSBSCODE EQU   FSBSYSRS
FSBSPHSE EQU   FSBSYSRS
FSBSERR  EQU   FSBSYSRS
FSBCMD   EQU   FSBSEQ
FSBDTRCE EQU   FSBFLAGS
FSBASBTU EQU   FSBFLAGS
FSBINPET EQU   FSBFLAGS
FSBNONCB EQU   FSBFLAGS
FSBLBIND EQU   FSBFLAGS
FSBFFIND EQU   FSBFLAGS
FSBACIND EQU   FSBFLAGS
FSBRFIND EQU   FSBFLAGS
FSBGATE  EQU   FSBFSBA
FSBRSV02 EQU   FSBSFLGS
FSBPGBUF EQU   FSBSFLGS
FSBMNSDA EQU   FSBMNRCD
FSBMNOA  EQU   FSBMNRCD
FSBMNDIF EQU   FSBMNRCD
FSBMNEOP EQU   FSBMNRCD
FSBMNDNU EQU   FSBMNRCD
FSBMNATN EQU   FSBMNRCD
FSBMNRVI EQU   FSBMNRCD
FSBMNELI EQU   FSBMNRCD
FSBLNGTH EQU   FSBFSB+1
FSBTYPE  EQU   FSBFSB
FDBOFSET EQU   ISTFDB+10
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00087 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00086 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00085 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00084 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB3  EQU   ISTFMCB+96
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCPROCD EQU   ISTFMCB+48
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
FMCDEBA  EQU   ISTFMCB+32
@NM00083 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00082 EQU   ISTFMCB+30
@NM00081 EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDEVOF EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDNCBA EQU   ISTFMCB+16
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCSAF   EQU   ISTFMCB+2
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PRORSV11 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00080 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
CCWSPRSV EQU   CCWSPARE
CCWCFTX  EQU   CCWSPARE
CCWTRCE  EQU   CCWSPARE
CCWNULL  EQU   CCWFLAGS
CCWPCI   EQU   CCWFLAGS
CCWSKIP  EQU   CCWFLAGS
CCWSLI   EQU   CCWFLAGS
CCWCC    EQU   CCWFLAGS
CCWCD    EQU   CCWFLAGS
CCWCODE  EQU   CCWVADDR
LDNZS00F EQU   LDNZH003+1
LDNZS00E EQU   LDNZH003+1
LDNZS00D EQU   LDNZH003+1
LDNZS00C EQU   LDNZH003+1
LDNZS00B EQU   LDNZH003+1
LDNZS007 EQU   LDNZH003
LDNZS006 EQU   LDNZH003
LDNZS005 EQU   LDNZH003
LDNZS004 EQU   LDNZH003
LDNZS003 EQU   LDNZH003
LDNZS002 EQU   LDNZH003
LDNZS001 EQU   LDNZH003
LDNZS000 EQU   LDNZH003
LDNZX006 EQU   ISTLDNCB+576
LDNZC001 EQU   ISTLDNCB+569
LDNZX005 EQU   ISTLDNCB+568
LDNZV006 EQU   ISTLDNCB+564
LDNSRB   EQU   ISTLDNCB+520
@NM00079 EQU   LDNZSAV3+28
LDNRSV06 EQU   LDNZSAV4+16
LDNZSAV6 EQU   LDNZSAV4+12
LDNZSAV5 EQU   LDNZSAV4
LDNZSAVE EQU   LDNZSAV3
LDNZSAV2 EQU   ISTLDNCB+368
LDNZSAV1 EQU   ISTLDNCB+352
LDNZ3RR  EQU   ISTLDNCB+348
LDNZ2RR  EQU   ISTLDNCB+344
LDNZ1RR  EQU   ISTLDNCB+340
LDNRSV0B EQU   ISTLDNCB+336
LDNRSV0A EQU   ISTLDNCB+332
LDNRSV09 EQU   ISTLDNCB+328
LDNRSV08 EQU   ISTLDNCB+324
LDNRSV07 EQU   ISTLDNCB+320
LDNDEAD  EQU   LDNDCDEB+12
LDNUCBAD EQU   LDNDCDEB+8
LDNAPPAD EQU   LDNDCDEB+5
LDNEXSCL EQU   LDNDCDEB+4
LDNDCBAD EQU   LDNDCDEB+1
LDNDEBID EQU   LDNDCDEB
LDNZRIND EQU   ISTLDNCB+300
LDNRPH   EQU   ISTLDNCB+192
LDNZTCP  EQU   ISTLDNCB+188
LDNZCHNC EQU   ISTLDNCB+187
LDNZLPC7 EQU   LDNZLPC
LDNZLPC6 EQU   LDNZLPC
LDNZLPC5 EQU   LDNZLPC
LDNZLPC4 EQU   LDNZLPC
LDNZLPC3 EQU   LDNZLPC
LDNZLPC2 EQU   LDNZLPC
LDNZLPC1 EQU   LDNZLPC
LDNZLPC0 EQU   LDNZLPC
LDNRSV05 EQU   LDNZERPF
LDNZCTOV EQU   LDNZEPIN
LDNZF001 EQU   LDNZEPIN
LDNZFRDW EQU   LDNZCPAN
LDNZFRD  EQU   LDNZCPAN
LDNZNARD EQU   LDNZCPAN
LDNRSV04 EQU   LDNZIOLK
LDNZATBF EQU   LDNZIOLK
LDNZERLK EQU   LDNZIOLK
LDNZDSIC EQU   LDNZIOLK
LDNZPAB1 EQU   ISTLDNCB+168
LDNZV005 EQU   ISTLDNCB+160
LDNZS1VR EQU   ISTLDNCB+136
LDNZS1RR EQU   ISTLDNCB+132
LDNZS1FC EQU   ISTLDNCB+128
LDNZS1BC EQU   ISTLDNCB+124
LDNZLOCK EQU   ISTLDNCB+120
LDNZFBUF EQU   ISTLDNCB+116
LDNZLAST EQU   ISTLDNCB+112
LDNRSV02 EQU   LDNFLAG2
LDNZFF04 EQU   LDNFLAG2
LDNZFF69 EQU   LDNFLAGS+2
LDNTPBIO EQU   LDNFLAGS+2
LDNZFF03 EQU   LDNFLAGS+2
LDNZFF02 EQU   LDNFLAGS+2
LDNZFF01 EQU   LDNFLAGS+2
LDNZFF00 EQU   LDNFLAGS+2
LDNCLOSD EQU   LDNFLAGS+2
LDNZENTR EQU   LDNFLAGS+2
LDNZICCW EQU   LDNFLAGS+1
LDNZREC  EQU   LDNFLAGS+1
LDNZCTXT EQU   LDNFLAGS+1
LDNZATLK EQU   LDNFLAGS+1
LDNZCHNE EQU   LDNFLAGS+1
LDNZATTP EQU   LDNFLAGS+1
LDNZIOBY EQU   LDNFLAGS+1
LDNZF00A EQU   LDNFLAGS+1
LDNZF009 EQU   LDNFLAGS
LDNZF008 EQU   LDNFLAGS
LDNZF007 EQU   LDNFLAGS
LDNZF006 EQU   LDNFLAGS
LDNZF005 EQU   LDNFLAGS
LDNZF004 EQU   LDNFLAGS
LDNZF003 EQU   LDNFLAGS
LDNZF002 EQU   LDNFLAGS
LDNZHDCC EQU   ISTLDNCB+106
LDNZARM  EQU   ISTLDNCB+104
LDNZRM   EQU   ISTLDNCB+102
LDNZRB   EQU   ISTLDNCB+100
LDNCPQ   EQU   ISTLDNCB+96
LDNSIOQ  EQU   ISTLDNCB+92
LDNZX002 EQU   ISTLDNCB+91
LDNZX001 EQU   ISTLDNCB+90
LDNZH002 EQU   ISTLDNCB+88
LDNZV001 EQU   ISTLDNCB+84
LDNZACSW EQU   ISTLDNCB+76
LDNZC002 EQU   ISTLDNCB+68
LDNCSWSV EQU   ISTLDNCB+60
LDNCHFLD EQU   ISTLDNCB+56
LDNRESRV EQU   ISTLDNCB+55
@NM00078 EQU   LDNCFLAG
LDNRMF   EQU   LDNCFLAG
LDNIBI   EQU   LDNCFLAG
LDNTSAF  EQU   ISTLDNCB+52
LDNCUUA  EQU   ISTLDNCB+48
LDNCB    EQU   ISTLDNCB
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00077 EQU   NCBFLAG1
@NM00076 EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBDAF   EQU   ISTNCB+2
NCBLNGTH EQU   ISTNCB+1
NCBTYPE  EQU   ISTNCB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHCRR   EQU   ISTRPH+32
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00075 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00074 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00073 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   ISTRPH+1
RPHTYPE  EQU   ISTRPH
LOKXCL   EQU   @NM00071
LOKPRY   EQU   @NM00071
@NM00072 EQU   @NM00071
@NM00070 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
CDSEXARA EQU   CDSMAP+20
CDSEXTM  EQU   CDSFLAG+2
CDSEXTB  EQU   CDSFLAG+2
CDSTMERB EQU   CDSFLAG+2
@NM00069 EQU   CDSFLAG+1
CDSDVPRO EQU   CDSFLAG+1
CDSNTPRI EQU   CDSFLAG+1
CDSLINCN EQU   CDSFLAG
CDSREMSY EQU   CDSFLAG
CDS2CHAN EQU   CDSFLAG
CDSEXTPR EQU   CDSFLAG
CDSFEVOL EQU   CDSFLAG
CDSSHAR  EQU   CDSFLAG
CDSFPMD  EQU   CDSFLAG
CDSBYTCT EQU   CDSMAP+8
CDSTYPE  EQU   CDSMFCT+3
CDSCLASS EQU   CDSMFCT+2
@NM00068 EQU   CDSFEAT
CDSDEVM  EQU   CDSFEAT
CDSDEVT  EQU   CDSFEAT
CDSASCII EQU   CDSFEAT
CDSMODEL EQU   CDSMFCT
@NM00067 EQU   $WIOFLAG
$WIOIDNT EQU   WTIOMAP+2
$WIOLEVL EQU   WTIOMAP+1
$WIOTRMG EQU   WTIOMAP
TCBOBSQL EQU   TECBSEND+23
TCBOBSQ  EQU   TECBSEND+22
TCBIBSQL EQU   TECBSEND+20
TCBIBSQ  EQU   TECBSEND+19
TCBSIGDA EQU   TECBSEND+15
TCBSEQNO EQU   TECBSEND+13
TCBCNTRL EQU   TECBSEND+10
TCBCHAIN EQU   TECBSEND+9
@NM00066 EQU   TCBRKCHG
TCBALT   EQU   TCBRKCHG
TCBREQ   EQU   TCBRKCHG
TCBCMD   EQU   TCBRKCHG
TCBEB    EQU   TCBRKCHG
TCBBB    EQU   TCBRKCHG
@NM00065 EQU   TCBRTYPE
TCBDFAS  EQU   TCBRTYPE
TCBNDFS  EQU   TCBRTYPE
TCBRSP   EQU   TCBRTYPE
@NM00064 EQU   TCBRTYPE
TCBRECLN EQU   TECBSEND+5
TCBRRN   EQU   TCBRESP
TCBNFME  EQU   TCBRESP
TCBEX    EQU   TCBRESP
@NM00063 EQU   TCBRESP
TCBUSEN  EQU   TECBSEND+2
TCBSSENM EQU   TECBSEND+1
TCBSSEN  EQU   TECBSEND
TCBSNDEV EQU   TECBSNS1
TCBEVDEV EQU   TECBFD01+1
TCBEVTYP EQU   TECBFD01
TECBSNCT EQU   TECBMAPS+5
@NM00061 EQU   TECBFLGS
TCBQUEUE EQU   TECBFLGS
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC025 EQU   TOLTEPWA+3088
@NM00060 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00059 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$ENDBFR2 EQU   TOLTEPWA+2852
$TECB2   EQU   TOLTEPWA+2844
$ENDBFR1 EQU   TOLTEPWA+2828
$TECB1   EQU   TOLTEPWA+2820
$TRTN#   EQU   TOLTEPWA+2815
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00058+14
$NSXX    EQU   @NM00058+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00058+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00058
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$INBUFR  EQU   TOLTEPWA+2104
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
$SLTBL   EQU   TOLTEPWA+1468
$CDEVPT  EQU   TOLTEPWA+1466
$FEEDBCK EQU   $DEVTBLE+66
@NM00057 EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$LINENME EQU   $RNINFO
$CID     EQU   $DEVTBLE+52
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
@NM00056 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00055 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00054 EQU   $DEVCDSF
@NM00053 EQU   $DEVCDSF
@NM00052 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00050+1
$DEVCTLU EQU   @NM00050+1
$DEVCHAN EQU   @NM00050
@NM00051 EQU   @NM00050
$CTINDX  EQU   $DEVUNAD
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$CATMSG  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$LGON    EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00049 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00048 EQU   $FLAG11
@NM00047 EQU   $FLAG10
$INBND   EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
$NOTRRCH EQU   $FLAG9
@NM00046 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$REMSW   EQU   $FLAG9
$IGRES   EQU   $FLAG9
$TCECM   EQU   $FLAG8
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00045 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00044 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$SNDRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$CIREQ   EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$FSTMCIS EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00043 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00042 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$FSTFE   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$OPCOM   EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
$NDR     EQU   $FLAG2
@NM00041 EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00040 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00039 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00038 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$LOWADDR EQU   $OLTPTR
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00037 EQU   $CDA
@NM00036 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00035 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00034 EQU   $TOTFLG1
@NM00033 EQU   $TOTFLG1
@NM00032 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
$CTEQTT  EQU   $TOTFLG1
@NM00031 EQU   $TOTFLG1
@NM00030 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00029 EQU   $OLTFLG2
@NM00028 EQU   $OLTFLG2
@NM00027 EQU   $OLTFLG2
@NM00026 EQU   $OLTFLG2
@NM00025 EQU   $OLTFLG2
@NM00024 EQU   $OLTFLG2
@NM00023 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00022 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00021 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00020 EQU   $PDEVFLG
@NM00019 EQU   $PDEVFLG
@NM00018 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00017 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00016 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
$TLTEND  EQU   $RCAAREA+936
$EXITSAV EQU   $RCAAREA+864
$TRASCII EQU   $RCAAREA+608
@NM00015 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CUTESTB EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$UPDATE  EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
$TLTPRPL EQU   $CONSTNT+20
@NM00014 EQU   $CONSTNT+4
@NM00013 EQU   $CONSTNT+2
$USECNT  EQU   $CONSTNT
$CURRTWA EQU   $POINTER+140
$CTNAME  EQU   $POINTER+132
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00012 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB2 EQU   $POINTER+28
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$LSTAREA EQU   $POINTER+12
$FSTAREA EQU   $POINTER+8
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
@NM00011 EQU   SRB+40
@NM00010 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPARM  EQU   SRB+28
SRBRMTR  EQU   SRB+24
SRBEP    EQU   SRB+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRB+8
SRBFLNK  EQU   SRB+4
SRBID    EQU   SRB
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00006 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00005 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSUCB   EQU   IOSB+16
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00003 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSFLC6  EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00440 EQU   S2FC0200
@RF00440 EQU   S2FC0250
@RT00444 EQU   S2FC0250
@RF00446 EQU   S2FC0260
@RT00464 EQU   S2FC0900
@RT00466 EQU   S2FC0770
@RT00468 EQU   S2FC0800
@RF00472 EQU   S2FC0770
@RF00477 EQU   S2FC0770
@RF00503 EQU   S2FC0400
@RF00512 EQU   S2FC0400
@RC00546 EQU   @RC00542
@RF00562 EQU   S2FC0740
@RC00565 EQU   S2FC0740
@RF00661 EQU   S2FC0910
@RT00682 EQU   S2FC1100
@RT00688 EQU   S2FC1300
@RT00703 EQU   S2FC1200
@RF00700 EQU   S2FC9999
@RF00742 EQU   S2FC9900
@RF00744 EQU   S2FC9900
@ENDDATA EQU   *
         END   ISTSC02F,(C'PLS1814',0701,75225)
