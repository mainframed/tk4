         TITLE 'TABLE SEARCH - ISTCC015                                *
                        '
* IBM DISK OPERATING SYSTEM
* TOLTEP - 5745-SCT-TLT
         ISEQ 73,80
ISTCC015 CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'ISTCC015  75.184'                                 0002
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0002
         STM   @02,@12,28(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         USING @DATD,R8
*   TPQINPUT=TPQ1;                  /* INIT PARAM REGISTER           */
         LR    TPQINPUT,TPQ1                                       0044
*   RCAPTR=TPQRCA;                  /* INIT RCAPTR                   */
         L     RCAPTR,TPQRCA(,TPQINPUT)                            0045
*   REGSAV=WAPTR;                   /* SAVE CURRENT TWA PTR          */
         LR    REGSAV,WAPTR                                        0046
*   IF FSTAREA^=0                   /* INIT WORK AREA PTR            */
*     THEN                                                         0047
         L     @15,FSTAREA(,RCAPTR)                                0047
         LTR   @15,@15                                             0047
         BZ    @RF00047                                            0047
*     WAPTR=FSTAREA;                                               0048
*                                                                  0048
         LR    WAPTR,@15                                           0048
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK INPUT CODE TO TABLE SEARCH                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0049
*   R8=ADDR($TBSDATA);              /* SET UP COMPILER COVER REG     */
@RF00047 LA    R8,$TBSDATA(,WAPTR)                                 0049
*   CODREG=TPCODE;                                                 0050
         SLR   CODREG,CODREG                                       0050
         IC    CODREG,TPCODE(,TPQINPUT)                            0050
*   IF CODREG>5                     /* CODE INVALID?                 */
*     THEN                                                         0051
         C     CODREG,@CF00378                                     0051
         BNH   @RF00051                                            0051
*     RETURN CODE(8);                                              0052
         LA    @15,8                                               0052
@EL00001 DS    0H                                                  0052
@EF00001 DS    0H                                                  0052
@ER00001 L     @14,12(,@13)                                        0052
         LM    @02,@12,28(@13)                                     0052
         BR    @14                                                 0052
*   IF CODREG<3×                    /* CHECK CID AND SYMBOL CODES    */
*       CODREG>4 THEN                                              0053
@RF00051 C     CODREG,@CF00112                                     0053
         BL    @RT00053                                            0053
         C     CODREG,@CF00100                                     0053
         BNH   @RF00053                                            0053
@RT00053 DS    0H                                                  0054
*     IF FSTAREA=0×                 /* FOR VALID CASES               */
*         DAF=0 THEN                                               0054
         SLR   @15,@15                                             0054
         CL    @15,FSTAREA(,RCAPTR)                                0054
         BE    @RT00054                                            0054
         L     @14,TPQDATA(,TPQINPUT)                              0054
         SLR   @11,@11                                             0054
         ICM   @11,3,DAF(@14)                                      0054
         CR    @15,@11                                             0054
         BNE   @RF00054                                            0054
@RT00054 DS    0H                                                  0055
*       RETURN CODE(4);                                            0055
         LA    @15,4                                               0055
         L     @14,12(,@13)                                        0055
         LM    @02,@12,28(@13)                                     0055
         BR    @14                                                 0055
*   CODREG=CODREG+1;                /* USE BRANCHING TABLE           */
@RF00054 DS    0H                                                  0056
@RF00053 AL    CODREG,@CF00033                                     0056
*   GOTO TAB(CODREG);               /* GOTO SUBROUTINE               */
         LR    @15,CODREG                                          0057
         SLA   @15,2                                               0057
         L     @15,TAB-4(@15)                                      0057
         BR    @15                                                 0057
*                                                                  0058
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES FOR A MATCH ON $SYMNAM. IT IS INVOKED*/
*   /* BY PASSING A CODE OF 0                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0058
*C15C0000:                                                         0058
*   ;                                                              0058
C15C0000 DS    0H                                                  0059
*C15C0002:                                                         0059
*   ;                                                              0059
C15C0002 DS    0H                                                  0060
*   I=$DEVCNTS;                     /* INITIALIZE COUNTER            */
         LH    I,$DEVCNTS(,WAPTR)                                  0060
*C15C0005:                                                         0061
*   ;                                                              0061
C15C0005 DS    0H                                                  0062
*   IF I=0                          /* IF 0 NO MORE DEVICES          */
*     THEN                                                         0062
         LTR   I,I                                                 0062
         BZ    @RT00062                                            0062
*     GOTO C15C0010;                /* CK NEXT WORK AREA             */
*   IF $NOTDEV(I)='1'B              /* IS THIS A DEVICE TO CHECK     */
*     THEN                                                         0064
         LR    @15,I                                               0064
         MH    @15,@CH00403                                        0064
         ST    @15,@TF00001                                        0064
         ALR   @15,WAPTR                                           0064
         TM    $NOTDEV-68(@15),B'10000000'                         0064
         BO    @RT00064                                            0064
*     GOTO C15C0007;                                               0065
*   IF SYM=$SYSMN(I)                /* SYMBOL FOUND?                 */
*     THEN                                                         0066
         L     @15,TPQDATA(,TPQINPUT)                              0066
         LR    @14,WAPTR                                           0066
         AL    @14,@TF00001                                        0066
         CLC   SYM(8,@15),$SYSMN-68(@14)                           0066
         BNE   @RF00066                                            0066
*     DO;                           /* YES                           */
*C15C0RT0:                                                         0068
*       ;                                                          0068
C15C0RT0 DS    0H                                                  0069
*       TPQ1=WAPTR;                 /* R1 PTS TO WORK AREA           */
         LR    TPQ1,WAPTR                                          0069
*       RETURN CODE(0);             /* RETURN CODE = 0               */
         SLR   @15,@15                                             0070
         L     @14,12(,@13)                                        0070
         LM    @02,@12,28(@13)                                     0070
         BR    @14                                                 0070
*     END;                                                         0071
*   ELSE                                                           0072
*     DO;                                                          0072
@RF00066 DS    0H                                                  0073
*C15C0007:                                                         0073
*       ;                                                          0073
C15C0007 DS    0H                                                  0074
*       I=I-1;                      /* INCREMENT COUNTER             */
         BCTR  I,0                                                 0074
*       GOTO C15C0005;                                             0075
         B     C15C0005                                            0075
*     END;                                                         0076
*C15C0010:                                                         0077
*   ;                                                              0077
C15C0010 DS    0H                                                  0078
*   IF TFWDPTR=0                    /* ANY MORE WORK AREAS ?         */
*     THEN                                                         0078
         L     @15,TFWDPTR(,WAPTR)                                 0078
         LTR   @15,@15                                             0078
         BNZ   @RF00078                                            0078
*     RETURN CODE(4);               /* NO                            */
         LA    @15,4                                               0079
         L     @14,12(,@13)                                        0079
         LM    @02,@12,28(@13)                                     0079
         BR    @14                                                 0079
*   WAPTR=TFWDPTR;                  /* UPDATE WORK PTR               */
@RF00078 L     WAPTR,TFWDPTR(,WAPTR)                               0080
*   GOTO C15C0002;                                                 0081
         B     C15C0002                                            0081
*                                                                  0082
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES FOR A MATCH ON $CID. IT IS INVOKED BY*/
*   /* PASSING A CODE OF 1                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0082
*C15C0100:                                                         0082
*   ;                                                              0082
C15C0100 DS    0H                                                  0083
*   RETURN CODE(8);                 /* NOT SUPPORTED         @D32JPPW*/
*                                                                  0083
         LA    @15,8                                               0083
         L     @14,12(,@13)                                        0083
         LM    @02,@12,28(@13)                                     0083
         BR    @14                                                 0083
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES FOR A MATCH ON $SYSMN. IF THE WORK   */
*   /* AREA IS THE CURRENT USER'S, THE NEXT WORK AREA WILL BE        */
*   /* SEARCHED FOR A MATCH                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0084
*C15C0200:                                                         0084
*   ;                                                              0084
C15C0200 DS    0H                                                  0085
*   IF LNAME^=BLANKS                /* IF LOCAL DO NOT TEST          */
*     THEN                                                         0085
         L     @15,TPQDATA(,TPQINPUT)                              0085
         CLC   LNAME(8,@15),BLANKS                                 0085
         BE    @RF00085                                            0085
*     DO;                           /* FOR LINE CONFLICT             */
*       WAPTR=REGSAV;               /* POINT TO CURRENT TWA          */
         LR    WAPTR,REGSAV                                        0087
*       IF $CTEQTT='0'B THEN        /* IF CT NOT = TT                */
         TM    $CTEQTT(WAPTR),B'00010000'                          0088
         BNZ   @RF00088                                            0088
*         DO;                       /* TEST FOR LINE CONFLICT        */
*           WAPTR=FSTAREA;          /* PNT TO 1ST TWA                */
         L     WAPTR,FSTAREA(,RCAPTR)                              0090
*           DO WHILE WAPTR^=0;      /* LOOP THRU ALL TWAS            */
         B     @DE00091                                            0091
@DL00091 DS    0H                                                  0092
*             IF WAPTR^=REGSAV THEN /* SKIP TEST FOR CURR TWA        */
         CR    WAPTR,REGSAV                                        0092
         BE    @RF00092                                            0092
*               DO;                                                0093
*                 IF LNAME=$LINENME(1)/* REQUESTED TT ON SAME        */
*                   THEN            /* ANOTHER USER CT               */
         L     @15,TPQDATA(,TPQINPUT)                              0094
         CLC   LNAME(8,@15),$LINENME(WAPTR)                        0094
         BNE   @RF00094                                            0094
*                   DO;                                            0095
*                     IF $CTEQTT^='0'B/* THAT IS NOT CT=TT           */
*                       THEN                                       0096
         TM    $CTEQTT(WAPTR),B'00010000'                          0096
         BZ    @RF00096                                            0096
*                       RETURN CODE(12);                           0097
         LA    @15,12                                              0097
         L     @14,12(,@13)                                        0097
         LM    @02,@12,28(@13)                                     0097
         BR    @14                                                 0097
*                   END;            /* FLAG REQUEST WITH RC 12       */
@RF00096 DS    0H                                                  0099
*               END;                                               0099
@RF00094 DS    0H                                                  0100
*             WAPTR=$TFWDPTR;       /* POINT TO NEXT TWA             */
@RF00092 L     WAPTR,$TFWDPTR(,WAPTR)                              0100
*           END;                                                   0101
@DE00091 LTR   WAPTR,WAPTR                                         0101
         BNZ   @DL00091                                            0101
*         END;                      /* NO LINE CONFLICT              */
*       WAPTR=FSTAREA;              /* POINT TO FIRST TWA            */
@RF00088 L     WAPTR,FSTAREA(,RCAPTR)                              0103
*     END;                                                         0104
*C15C0202:                                                         0105
*   I=$DEVCNTS;                     /* INITIALIZE COUNTER            */
@RF00085 DS    0H                                                  0105
C15C0202 LH    I,$DEVCNTS(,WAPTR)                                  0105
*   IF WAPTR=REGSAV                 /* IF CURRENT WORK AREA          */
*     THEN                                                         0106
         CR    WAPTR,REGSAV                                        0106
         BE    @RT00106                                            0106
*     GOTO C15C0210;                /* SKIP IT                       */
*C15C0205:                                                         0108
*   IF I=0                          /* IF 0 NO MORE DEVICES          */
*     THEN                                                         0108
C15C0205 LTR   I,I                                                 0108
         BZ    @RT00108                                            0108
*     GOTO C15C0210;                /* CK NEXT WORK AREA             */
*   IF $NOTDEV(I)='1'B THEN                                        0110
         LR    @15,I                                               0110
         MH    @15,@CH00403                                        0110
         ST    @15,@TF00001                                        0110
         ALR   @15,WAPTR                                           0110
         TM    $NOTDEV-68(@15),B'10000000'                         0110
         BO    @RT00110                                            0110
*     GOTO C15C0207;                                               0111
*   IF SYM=$SYSMN(I)                /* SYMBOL FOUND?                 */
*     THEN                                                         0112
         L     @15,TPQDATA(,TPQINPUT)                              0112
         LR    @14,WAPTR                                           0112
         AL    @14,@TF00001                                        0112
         CLC   SYM(8,@15),$SYSMN-68(@14)                           0112
         BE    @RT00112                                            0112
*     GOTO C15C0RT0;                /* YES                           */
*   ELSE                                                           0114
*     DO;                                                          0114
*C15C0207:                                                         0115
*       I=I-1;                                                     0115
C15C0207 BCTR  I,0                                                 0115
*       GOTO C15C0205;                                             0116
         B     C15C0205                                            0116
*     END;                                                         0117
*C15C0210:                                                         0118
*   IF TFWDPTR=0                    /* ANY MORE WORK AREAS ?         */
*     THEN                                                         0118
C15C0210 L     @15,TFWDPTR(,WAPTR)                                 0118
         LTR   @15,@15                                             0118
         BNZ   @RF00118                                            0118
*     RETURN CODE(4);               /* NO                            */
         LA    @15,4                                               0119
         L     @14,12(,@13)                                        0119
         LM    @02,@12,28(@13)                                     0119
         BR    @14                                                 0119
*   WAPTR=TFWDPTR;                  /* UPDATE WKPTR                  */
@RF00118 L     WAPTR,TFWDPTR(,WAPTR)                               0120
*   GOTO C15C0202;                  /* CONTINUE SEARCH               */
         B     C15C0202                                            0121
*                                                                  0122
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE ADDS A WORK AREA ONTO THE QUEUE. IT IS INVOKED*/
*   /* BY PASSING A CODE OF 3                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0122
*C15C0300:                                                         0122
*   IF FSTAREA=0                    /* IF NO AREAS ON QUEUE          */
*     THEN                                                         0122
C15C0300 SLR   @15,@15                                             0122
         CL    @15,FSTAREA(,RCAPTR)                                0122
         BNE   @RF00122                                            0122
*     DO;                           /* THEN BUILD 1ST ENTRY          */
*       FSTAREA=TPQDATA;            /* FORWARD QUEUE PTR             */
         L     @14,TPQDATA(,TPQINPUT)                              0124
         ST    @14,FSTAREA(,RCAPTR)                                0124
*       LSTAREA=TPQDATA;            /* BACKWARD QUEUE PTR            */
         ST    @14,LSTAREA(,RCAPTR)                                0125
*       WAPTR=TPQDATA;              /* INIT WORK PTR                 */
         LR    WAPTR,@14                                           0126
*       TFWDPTR=0;                  /* BACKWARD QUEUE PTR            */
         ST    @15,TFWDPTR(,WAPTR)                                 0127
*       TBWDPTR=0;                  /* BACKWARD PTR = 0              */
         ST    @15,TBWDPTR(,WAPTR)                                 0128
*C15C0RT2:                                                         0129
*       TPQ1=TPQDATA;               /* R1 = TPQDATA                  */
C15C0RT2 L     TPQ1,TPQDATA(,TPQINPUT)                             0129
*       RETURN CODE(0);                                            0130
         SLR   @15,@15                                             0130
         L     @14,12(,@13)                                        0130
         LM    @02,@12,28(@13)                                     0130
         BR    @14                                                 0130
*     END;                                                         0131
*   IF LSTAREA=0                    /* IF BACKWARD PTR = 0           */
*     THEN                                                         0132
@RF00122 L     @15,LSTAREA(,RCAPTR)                                0132
         LTR   @15,@15                                             0132
         BNZ   @RF00132                                            0132
*     RETURN CODE(8);               /* ERROR!                        */
*                                                                  0133
         LA    @15,8                                               0133
         L     @14,12(,@13)                                        0133
         LM    @02,@12,28(@13)                                     0133
         BR    @14                                                 0133
*   /*****************************************************************/
*   /*                                                               */
*   /* ADD ENTRY TO AN EXISTING QUEUE                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0134
*   WAPTR=LSTAREA;                  /* PTR TO LAST ELEMENT ON Q      */
@RF00132 L     WAPTR,LSTAREA(,RCAPTR)                              0134
*   TFWDPTR=TPQDATA;                /* ADD TO END OF Q               */
         L     @15,TPQDATA(,TPQINPUT)                              0135
         ST    @15,TFWDPTR(,WAPTR)                                 0135
*   WAPTR=TPQDATA;                  /* INITIALIZE FIELDS IN WORK     */
         LR    WAPTR,@15                                           0136
*   TFWDPTR=0;                      /* AREA                          */
         SLR   @14,@14                                             0137
         ST    @14,TFWDPTR(,WAPTR)                                 0137
*   TBWDPTR=LSTAREA;                                               0138
         MVC   TBWDPTR(4,WAPTR),LSTAREA(RCAPTR)                    0138
*   LSTAREA=TPQDATA;                                               0139
         ST    @15,LSTAREA(,RCAPTR)                                0139
*   GOTO C15C0RT2;                  /* RETURN CODE = 0               */
         B     C15C0RT2                                            0140
*                                                                  0141
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE DELETES AN AREA FROM THE CHAIN. IT IS INVOKED */
*   /* BY PASSING A CODE OF 4                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0141
*C15C0400:                                                         0141
*   DELAD=TPQDATA;                  /* R7 HAS ADDRESS                */
C15C0400 L     DELAD,TPQDATA(,TPQINPUT)                            0141
*C15C0402:                                                         0142
*   IF DELAD=WAPTR                  /* MATCH?                        */
*     THEN                                                         0142
C15C0402 CR    DELAD,WAPTR                                         0142
         BE    @RT00142                                            0142
*     GOTO C15C0S04;                                               0143
*   IF TFWDPTR=0                    /* IF NO FORWARD PTR             */
*     THEN                                                         0144
         L     @15,TFWDPTR(,WAPTR)                                 0144
         LTR   @15,@15                                             0144
         BNZ   @RF00144                                            0144
*     RETURN CODE(4);               /* NOT FOUND                     */
         LA    @15,4                                               0145
         L     @14,12(,@13)                                        0145
         LM    @02,@12,28(@13)                                     0145
         BR    @14                                                 0145
*   WAPTR=TFWDPTR;                                                 0146
@RF00144 L     WAPTR,TFWDPTR(,WAPTR)                               0146
*   GOTO C15C0402;                                                 0147
*                                                                  0147
         B     C15C0402                                            0147
*   /*****************************************************************/
*   /*                                                               */
*   /* A MATCH HAS BEEN FOUND                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0148
*C15C0S04:                                                         0148
*   IF DELAD^=LSTAREA               /* LAST AREA ON CHAIN ?          */
*     THEN                                                         0148
C15C0S04 CL    DELAD,LSTAREA(,RCAPTR)                              0148
         BNE   @RT00148                                            0148
*     GOTO C15C0S24;                                               0149
*                                                                  0149
*   /*****************************************************************/
*   /*                                                               */
*   /* LAST AREA ON Q IS TO BE DELETED                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0150
*   IF FSTAREA=LSTAREA THEN                                        0150
         CLC   FSTAREA(4,RCAPTR),LSTAREA(RCAPTR)                   0150
         BNE   @RF00150                                            0150
*     DO;                                                          0151
*       LSTAREA=0;                  /* NONE LEFT                     */
         SLR   @15,@15                                             0152
         ST    @15,LSTAREA(,RCAPTR)                                0152
*       FSTAREA=0;                  /* ON Q                          */
         ST    @15,FSTAREA(,RCAPTR)                                0153
*       GOTO C15C0D04;              /* GOTO WRAP UP                  */
         B     C15C0D04                                            0154
*     END;                                                         0155
*   ELSE                                                           0156
*     DO;                           /* REMOVE ONLY LAST ELEMENT      */
@RF00150 DS    0H                                                  0157
*       LSTAREA=TBWDPTR;            /* ZERO OUT NEW                  */
         MVC   LSTAREA(4,RCAPTR),TBWDPTR(WAPTR)                    0157
*       WAPTR=TBWDPTR;              /* LAST ELEMENT'S                */
         L     WAPTR,TBWDPTR(,WAPTR)                               0158
*       TFWDPTR=0;                  /* FORWARD PTR                   */
         SLR   @15,@15                                             0159
         ST    @15,TFWDPTR(,WAPTR)                                 0159
*       GOTO C15C0D04;              /* GOTO WRAP UP                  */
         B     C15C0D04                                            0160
*     END;                                                         0161
*                                                                  0161
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF ELEMENT IS FIRST ON Q                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0162
*C15C0S24:                                                         0162
*   IF DELAD=FSTAREA THEN                                          0162
C15C0S24 CL    DELAD,FSTAREA(,RCAPTR)                              0162
         BNE   @RF00162                                            0162
*     DO;                                                          0163
*       FSTAREA=TFWDPTR;            /* INIT FSTAREA PTR              */
         MVC   FSTAREA(4,RCAPTR),TFWDPTR(WAPTR)                    0164
*       WAPTR=TFWDPTR;                                             0165
         L     WAPTR,TFWDPTR(,WAPTR)                               0165
*       TBWDPTR=0;                  /* ZERO OUT 2ND ELEM BK PTR      */
         SLR   @15,@15                                             0166
         ST    @15,TBWDPTR(,WAPTR)                                 0166
*       GOTO C15C0D04;              /* GOTO TO WRAP UP               */
         B     C15C0D04                                            0167
*     END;                                                         0168
*                                                                  0168
*   /*****************************************************************/
*   /*                                                               */
*   /* ELEMENT IS NOT FIRST ON QUEUE                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0169
*   $TFWDPTR->TBWDPTR=              /* RE-CHAIN ELEMENTS             */
*       TBWDPTR;                                                   0169
@RF00162 L     @15,$TFWDPTR(,WAPTR)                                0169
         MVC   TBWDPTR(4,@15),TBWDPTR(WAPTR)                       0169
*   $TBWDPTR->TFWDPTR=TFWDPTR;                                     0170
         L     @15,$TBWDPTR(,WAPTR)                                0170
         MVC   TFWDPTR(4,@15),TFWDPTR(WAPTR)                       0170
*C15C0D04:                                                         0171
*   TPQ1=DELAD;                     /* SET R1                        */
C15C0D04 LR    TPQ1,DELAD                                          0171
*   RETURN CODE(0);                                                0172
         SLR   @15,@15                                             0172
         L     @14,12(,@13)                                        0172
         LM    @02,@12,28(@13)                                     0172
         BR    @14                                                 0172
*                                                                  0173
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES FOR A MATCH ON $TESTCID. IT IS       */
*   /* INVOKED BY PASSING A CODE OF 5                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0173
*C15C0500:                                                         0173
*   RETURN CODE(8);                 /* NOT SUPPORTED         @D32JPPW*/
C15C0500 LA    @15,8                                               0173
         L     @14,12(,@13)                                        0173
         LM    @02,@12,28(@13)                                     0173
         BR    @14                                                 0173
*/* ATDSPLY   INVOKED.                                               */
*/********************************************************************/
*/* THERE HAVE BEEN NO ATBUILD INCLUSIONS IN THIS COMPILATION.       */
*/********************************************************************/
*/* END OF ATDSPLY.                                                  */
*                                                                  0174
*   END ISTCC015;                                                  0174
@DATA    DS    0H
@CH00403 DC    H'68'
@DATD    DSECT
         DS    0F
@TF00001 DS    F
ISTCC015 CSECT
         DS    0F
@CF00033 DC    F'1'
@CF00112 DC    F'3'
@CF00100 DC    F'4'
@CF00378 DC    F'5'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTCC015 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
BLANKS   DC    CL8'        '
PATCH    DC    10F'0'
TAB      DC    AL4(C15C0000)
         DC    AL4(C15C0100)
         DC    AL4(C15C0200)
         DC    AL4(C15C0300)
         DC    AL4(C15C0400)
         DC    AL4(C15C0500)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RCAPTR   EQU   @04
TPQINPUT EQU   @03
TPQ1     EQU   @01
R0       EQU   @00
R8       EQU   @08
I        EQU   @05
CODREG   EQU   @06
REGSAV   EQU   @09
DELAD    EQU   @07
WAPTR    EQU   @02
TPQUIN   EQU   0
TPQRCA   EQU   TPQUIN
TPQDATA  EQU   TPQUIN+4
TPCODE   EQU   TPQUIN+8
DAF      EQU   0
DTAFLD   EQU   0
SYM      EQU   DTAFLD
LNAME    EQU   DTAFLD+8
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$FSTAREA EQU   $POINTER+8
$LSTAREA EQU   $POINTER+12
$TRTBLA  EQU   $POINTER+124
$CONSTNT EQU   $RCAAREA+244
$RCAFLG  EQU   $RCAAREA+604
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$CTEQTT  EQU   $TOTFLG1
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$TFWDPTR EQU   $CDA+8
$TBWDPTR EQU   $CDA+12
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$HIMOREC EQU   $CDA+60
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$FLAG2   EQU   $COMMFLG+1
$FLAG3   EQU   $COMMFLG+2
$FLAG4   EQU   $COMMFLG+3
$FLAG5   EQU   $COMMFLG+4
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$ABNDBIT EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$FLAG8   EQU   $COMMFLG+7
$FLAG9   EQU   $COMMFLG+8
$FLAG10  EQU   $COMMFLG+9
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$FLAG13  EQU   $COMMFLG+12
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
@NM00039 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$NOTDEV  EQU   $DEVFLG3
$SIOFLG  EQU   $DEVFLG3
$SYSMN   EQU   $DEVTBLE+28
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$RNINFO  EQU   $DEVTBLE+56
$LINENME EQU   $RNINFO
$DEVFLG5 EQU   $RNINFO+8
$DEVFLG4 EQU   $DEVTBLE+65
$DEVCNTS EQU   TOLTEPWA+1464
$SLTBL   EQU   TOLTEPWA+1468
$RUNTEST EQU   $SLTBL+13
$TESTFLG EQU   $SLTBL+21
$SECLST  EQU   $SLTBL+22
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00048 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00048+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00048+10
$ENXX    EQU   @NM00048+15
$IMITX   EQU   $ENXX
$TBSDATA EQU   TOLTEPWA+2796
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
$TRTBL   EQU   0
#EXIT    EQU   0
FSTAREA  EQU   $FSTAREA
LSTAREA  EQU   $LSTAREA
TBWDPTR  EQU   $TBWDPTR
TFWDPTR  EQU   $TFWDPTR
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC025 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC022
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC033 EQU   TOLTEPWA+3160
@NM00050 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00049 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00048+14
$NSXX    EQU   @NM00048+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00048+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00048
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$WORK    EQU   TOLTEPWA+2376
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$INBUFR  EQU   TOLTEPWA+2104
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
@NM00047 EQU   $SLTBL+135
$HIGHRTN EQU   $SLTBL+134
$PRIMADR EQU   $SLTBL+130
$CTSTPT  EQU   $SLTBL+128
$TSTCNT  EQU   $SLTBL+126
$SECFLGS EQU   $SECLST+3
$SECTION EQU   $SECLST
$SECACT  EQU   $TESTFLG
$CANTRUN EQU   $TESTFLG
$FINAL   EQU   $TESTFLG
$TESTSUF EQU   $RUNTEST+5
$TESTNUM EQU   $RUNTEST+1
$LETPRF  EQU   $RUNTEST
$SYMBOLC EQU   $SLTBL+5
$FAMILY  EQU   $SLTBL
$CDEVPT  EQU   TOLTEPWA+1466
$FEEDBCK EQU   $DEVTBLE+66
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00046 EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$CID     EQU   $DEVTBLE+52
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
@NM00045 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00044 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00043 EQU   $DEVCDSF
@NM00042 EQU   $DEVCDSF
@NM00041 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00039+1
$DEVCTLU EQU   @NM00039+1
$DEVCHAN EQU   @NM00039
@NM00040 EQU   @NM00039
$CTINDX  EQU   $DEVUNAD
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$CATMSG  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$LGON    EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00038 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00037 EQU   $FLAG11
@NM00036 EQU   $FLAG10
$INBND   EQU   $FLAG10
$WAITFLG EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
$NOTRRCH EQU   $FLAG9
@NM00035 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$REMSW   EQU   $FLAG9
$IGRES   EQU   $FLAG9
$TCECM   EQU   $FLAG8
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00034 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00033 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$SNDRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$1STDATA EQU   $FLAG7
$CIREQ   EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$FSTMCIS EQU   $FLAG6
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00032 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00031 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$FSTFE   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$OPCOM   EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
$NDR     EQU   $FLAG2
@NM00030 EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00029 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00028 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00027 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$LOWADDR EQU   $OLTPTR
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
@NM00026 EQU   $CDA
@NM00025 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00024 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00023 EQU   $TOTFLG1
@NM00022 EQU   $TOTFLG1
@NM00021 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
@NM00020 EQU   $TOTFLG1
@NM00019 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00018 EQU   $OLTFLG2
@NM00017 EQU   $OLTFLG2
@NM00016 EQU   $OLTFLG2
@NM00015 EQU   $OLTFLG2
@NM00014 EQU   $OLTFLG2
@NM00013 EQU   $OLTFLG2
@NM00012 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00011 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00010 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00009 EQU   $PDEVFLG
@NM00008 EQU   $PDEVFLG
@NM00007 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00006 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00005 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
$TLTEND  EQU   $RCAAREA+936
$EXITSAV EQU   $RCAAREA+864
$TRASCII EQU   $RCAAREA+608
@NM00004 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CUTESTB EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$UPDATE  EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
$TLTPRPL EQU   $CONSTNT+20
@NM00003 EQU   $CONSTNT+4
@NM00002 EQU   $CONSTNT+2
$USECNT  EQU   $CONSTNT
$CURRTWA EQU   $POINTER+140
$CTNAME  EQU   $POINTER+132
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00001 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB2 EQU   $POINTER+28
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$CVTSAVE EQU   $POINTER+4
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00062 EQU   C15C0010
@RT00064 EQU   C15C0007
@RT00106 EQU   C15C0210
@RT00108 EQU   C15C0210
@RT00110 EQU   C15C0207
@RT00112 EQU   C15C0RT0
@RT00142 EQU   C15C0S04
@RT00148 EQU   C15C0S24
@ENDDATA EQU   *
         END   ISTCC015,(C'PLS1913',0701,75184)
