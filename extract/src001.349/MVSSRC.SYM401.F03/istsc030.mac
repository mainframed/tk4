         TITLE 'ISTSC030 - ACQUISITION/VERIFY FUNCTION                 *
                        '
ISTSC030 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'ISTSC030  77.194'                                 0001
S30C1000 DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00389-S30C1000)
         ENTRY S30C1000
S30C0010 DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00701-S30C0010)
         ENTRY S30C0010
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @01,@12,24(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  LA    @12,4095(,@11)                                      0001
         USING @PSTART,@11                                         0001
         USING @PSTART+4095,@12                                    0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 DS    0H                                                  0002
*                                                                  0243
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0244
*S30C0000:                                                         0244
*   ;                                                              0244
S30C0000 DS    0H                                                  0245
*   R15=R13;                        /* SET PTR TO BACKSAVE DSECT     */
         LR    R15,R13                                             0245
*   R13=ADDR(SVESC030);             /* SET POINTER TO SAVE AREA      */
         LA    R13,SVESC030(,WAPTR)                                0246
*   BACKSAVE(3)=R13;                /* CHAIN SREAS TOGETHER          */
         ST    R13,BACKSAVE+8(,R15)                                0247
*   SVESC030(2)=R15;                                               0248
         ST    R15,SVESC030+4(,WAPTR)                              0248
*   $ACQLIST=R1;                    /* GET ADDR OF PARMLIST  @D32JPPW*/
         ST    R1,$ACQLIST(,WAPTR)                                 0249
*   NIBPTR=ADDR(M200820);                                          0250
         LA    @14,M200820                                         0250
         ST    @14,NIBPTR                                          0250
*   BADDVPTR=0;                                                    0251
         SLR   @14,@14                                             0251
         ST    @14,BADDVPTR                                        0251
*   R=1;                                                           0252
         MVC   R(2),@CH00075                                       0252
*   P=8;                                                           0253
         MVC   P(2),@CH00058                                       0253
*   APTRCDS=PTRCDS;                 /* GET PTR TO CDS                */
*                                                                  0254
         L     @10,$ACQLIST(,WAPTR)                                0254
         L     @03,PTRCDS(,@10)                                    0254
         ST    @03,APTRCDS                                         0254
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THIS IS A CALL TO ACQUISTION OR VERIFY           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0255
*   IF ACQVER='0'B                  /* IF 0 ,                        */
*     THEN                                                         0255
         TM    ACQVER(@10),B'01000000'                             0255
         BZ    @RT00255                                            0255
*     GOTO XXX;                     /* GO TO VERIFY CODE             */
*                                                                  0256
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE ACQUIRE COUNTERS                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0257
*   $OPISCNT=0;                                                    0257
         STH   @14,$OPISCNT(,WAPTR)                                0257
*   $OPNDCNT=0;                                                    0258
*                                                                  0258
         STH   @14,$OPNDCNT(,WAPTR)                                0258
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF CUTEST IS THE CALLER                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0259
*   IF CUTSTON='1'B                 /* IF CUTEST IS THE CALLER,      */
*     THEN                                                         0259
         TM    CUTSTON(@10),B'00010000'                            0259
         BO    @RT00259                                            0259
*     GOTO A101720;                 /* GO TO CUTEST CODE             */
*   $R4SAVE=R11;                    /* SAVE PTR TO TWA FOR EXIT CODE */
         ST    R11,$R4SAVE(,WAPTR)                                 0261
*   $PTRAREA=$OLTPTR;               /* GET PTR TO OLT AREA. THE OLT
*                                      AREA IS USED TO BUILD THE RPL
*                                      AND NIBS FOR THE OPNDST       */
         L     @10,$OLTPTR(,WAPTR)                                 0262
         ST    @10,$PTRAREA(,WAPTR)                                0262
*   IF APTRCDS=0                    /* IF THE PTR TO THE CDS IS ZERO
*                                      THEN THIS IS A CALL TO ACQ. 0263
*                                      ALL NON-ACQ DEVICES IN THE DET*/
*     THEN                                                         0263
         CR    @03,@14                                             0263
         BNE   @RF00263                                            0263
*     APTRCDS=ADDR($DEVTBLE(1));                                   0264
*                                                                  0264
         LA    @14,$DEVTBLE(,WAPTR)                                0264
         ST    @14,APTRCDS                                         0264
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP SEACH FOR NON-ACQUIRED DEVICES IN THE DEVICE ENTRY     */
*   /* TABLE (DET)                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0265
*   RFY                                                            0265
*    (R1,                                                          0265
*     R5) RSTD;                                                    0265
@RF00263 DS    0H                                                  0266
*   DO I=2 TO $DEVCNTS;                                            0266
         LA    @14,2                                               0266
         B     @DE00266                                            0266
@DL00266 DS    0H                                                  0267
*     RPLPTR=ADDR(BUFFRPL);         /*                       @DA04686*/
         LA    @10,12                                              0267
         AL    @10,$PTRAREA(,WAPTR)                                0267
         ST    @10,RPLPTR                                          0267
*     IF $NOTDEV(I)='1'B×$ACQRED(I)='1'B/* ANY DEVICES               */
*       THEN                                                       0268
         MH    @14,@CH00318                                        0268
         ALR   @14,WAPTR                                           0268
         TM    $NOTDEV-68(@14),B'11000000'                         0268
         BNZ   @RT00268                                            0268
*       GOTO M080215;               /* NO, GO TO END OF LOOP         */
*A300804:                                                          0270
*     ;                                                            0270
*                                                                  0270
A300804  DS    0H                                                  0271
*/* ACQUIRE ANY DEVICE  IN DEVICE ENTRY TABLE                        */
*                                                                  0271
*     IF I>2                        /* ACQUIRE TEST DEVICE           */
*       THEN                                                       0271
         LH    @14,I                                               0271
         C     @14,@CF00139                                        0271
         BH    @RT00271                                            0271
*       GOTO M070435;               /* BR IF YES                     */
*     DO J=3 TO $DEVCNTS;           /* CK TO SEE IF IT IS A TEST DEV */
         LA    @14,3                                               0273
         B     @DE00273                                            0273
@DL00273 DS    0H                                                  0274
*       IF $ACQRED(J)='0'B×$NOTDEV(J)='1'B                         0274
*                                                                  0274
*       /*************************************************************/
*       /*                                                           */
*       /* IF NOT ACQUIRED THEN                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0274
*         THEN                                                     0274
         LA    @10,68                                              0274
         LR    @07,@14                                             0274
         MR    @06,@10                                             0274
         ST    @07,@TF00001                                        0274
         ALR   @07,WAPTR                                           0274
         TM    $NOTDEV-68(@07),B'10000000'                         0274
         BNZ   @RT00274                                            0274
         TM    $ACQRED-68(@07),B'01000000'                         0274
         BNO   @RT00274                                            0274
*         GOTO M030410;             /* GET NEXT ENTRY                */
*       IF $SYSMN(I)=$SYSMN(J)      /* DO DEVICES MATCH              */
*         THEN                                                     0276
         MH    @10,I                                               0276
         ALR   @10,WAPTR                                           0276
         LR    @14,WAPTR                                           0276
         AL    @14,@TF00001                                        0276
         CLC   $SYSMN-68(8,@10),$SYSMN-68(@14)                     0276
         BE    @RT00276                                            0276
*         GOTO M030510;             /* SET ACQUIRED FLAG             */
*M030410:                                                          0278
*       ;                                                          0278
M030410  DS    0H                                                  0279
*     END;                                                         0279
         LA    @14,1                                               0279
         AH    @14,J                                               0279
@DE00273 STH   @14,J                                               0279
         CH    @14,$DEVCNTS(,WAPTR)                                0279
         BNH   @DL00273                                            0279
*     GOTO M071120;                 /* GO BUILD RPL & NIB            */
         B     M071120                                             0280
*M070435:                                                          0281
*     ;                                                            0281
*                                                                  0281
M070435  DS    0H                                                  0282
*     /***************************************************************/
*     /*                                                             */
*     /* IF THE ENTRY IS NOT AN ENDING NODE ONLY THE RN OR LDNCB NEED*/
*     /* BE ACQUIRED                                                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0282
*     IF $ENDNODE(I)^='1'B          /* IS THIS AN ENDING NODE        */
*       THEN                                                       0282
         LH    @14,I                                               0282
         MH    @14,@CH00318                                        0282
         ST    @14,@TF00001                                        0282
         ALR   @14,WAPTR                                           0282
         TM    $ENDNODE-68(@14),B'10000000'                        0282
         BO    @RF00282                                            0282
*       DO;                         /* BR IF YES                     */
*         $ACQRED(I)='1'B;          /* SET ACQUIRED BIT              */
         LR    @14,WAPTR                                           0284
         AL    @14,@TF00001                                        0284
         OI    $ACQRED-68(@14),B'01000000'                         0284
*         GOTO J130421;                                            0285
         B     J130421                                             0285
*       END;                                                       0286
*                                                                  0286
*     /***************************************************************/
*     /*                                                             */
*     /* FOR THE THIRD THROUGH THE LAST ENTRY OF DET A SEARCH OF THE */
*     /* FIRST TWO ENTRIES IS MADE SO THAT WE DO NOT ACQUIRE A TEST  */
*     /* DEVICE MORE THAN ONCE                                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0287
*J130420:                                                          0287
*     ;                                                            0287
@RF00282 DS    0H                                                  0287
J130420  DS    0H                                                  0288
*     IF $SYSMN(I)=$SYSMN(1)        /* DO NAMES MATCH                */
*       THEN                                                       0288
         LH    @14,I                                               0288
         LR    @10,@14                                             0288
         MH    @10,@CH00318                                        0288
         ST    @10,@TF00001                                        0288
         ALR   @10,WAPTR                                           0288
         CLC   $SYSMN-68(8,@10),$SYSMN(WAPTR)                      0288
         BNE   @RF00288                                            0288
*       DO;                                                        0289
*         $CTEQTT='1'B;                                            0290
         OI    $CTEQTT(WAPTR),B'00010000'                          0290
*         $CTINDX(1)=I;             /* GET INDEX TO THE CT ENTRY   0291
*                                                            @D32JPPW*/
         STH   @14,$CTINDX(,WAPTR)                                 0291
*         $CID(I)=$CID(1);          /* FILL IN THE CID OF THE TEST 0292
*                                      DEVICE                @D32JPPW*/
         LR    @14,WAPTR                                           0292
         AL    @14,@TF00001                                        0292
         MVC   @TS00001(4),$CID(WAPTR)                             0292
         MVC   $CID-68(4,@14),@TS00001                             0292
*J130421:                                                          0293
*         ;                                                        0293
J130421  DS    0H                                                  0294
*         IF $DEVLU(I)='0'B THEN    /* GET DATA IF DEVICE IS NOT AN
*                                      LU                    @D32JPFR*/
         LH    @14,I                                               0294
         MH    @14,@CH00318                                        0294
         ST    @14,@TF00001                                        0294
         ALR   @14,WAPTR                                           0294
         TM    $DEVLU-68(@14),B'00001000'                          0294
         BNZ   @RF00294                                            0294
*           DO;                     /* IT IS NOT             @D32JPFR*/
*             IFTFB0='00'X;         /* TURN OFF ALL BITS             */
         LA    @14,IFTPL                                           0296
         MVI   IFTFB0(@14),X'00'                                   0296
*             IFTTPPST='1'B;        /* SET FOR VPOST                 */
         OI    IFTTPPST(@14),B'10000000'                           0297
*             IFTFPABP='1'B;        /* TURN ON VARY PAB-TEST DEV     */
*             IFTTBON='1'B;         /* TURN ON TEST BIT RDT          */
*             IFTSTDAF='1'B;        /* TURN ON DAF OF TEST DEV       */
         OI    IFTFPABP(@14),B'10100001'                           0300
*             IF $REMOTE(I)='0'B&$ENDNODE(I)='1'B THEN             0301
         LR    @10,WAPTR                                           0301
         AL    @10,@TF00001                                        0301
         TM    $ENDNODE-68(@10),B'10000000'                        0301
         BNO   @RF00301                                            0301
         TM    $REMOTE-68(@10),B'01000000'                         0301
         BNZ   @RF00301                                            0301
*               IFTFLDNP='1'B;                                     0302
         OI    IFTFLDNP(@14),B'00000010'                           0302
*             IFTSYMOV=$SYSMN(I);   /* MOVE IN SYM NAME              */
@RF00301 LA    @14,IFTPL                                           0303
         LH    @10,I                                               0303
         MH    @10,@CH00318                                        0303
         ST    @10,@TF00001                                        0303
         ALR   @10,WAPTR                                           0303
         MVC   IFTSYMOV(8,@14),$SYSMN-68(@10)                      0303
*             IFTPABPR=ADDR($IFTOUT(I));                           0304
         L     @10,@TF00001                                        0304
         LA    @10,$IFTOUT-68(@10,WAPTR)                           0304
         ST    @10,IFTPABPR(,@14)                                  0304
*             ACQECB=0;             /* ZERO OUT ECB                  */
         SLR   @14,@14                                             0305
         ST    @14,ACQECB                                          0305
*             R0=ADDR(TIE);         /* POINT TO ELEMENT      @D32JPPW*/
         LA    R0,TIE                                              0306
*             R1=ADDR(DYPPAB);      /* POINT TO QUEUE        @D32JPPW*/
         L     @14,RCAPTR(,WAPTR)                                  0307
         L     R1,$CVTSAVE(,@14)                                   0307
         LA    R1,DYPPAB+656(,R1)                                  0307
*             CALL I00C1000;        /* TPQUE                 @D32JPPW*/
         L     @15,@CV02694                                        0308
         BALR  @14,@15                                             0308
*             R1=ADDR(ACQECB);      /* POINT TO ECB          @D32JPPW*/
         LA    R1,ACQECB                                           0309
*             CALL I00C1002;        /* WAIT                  @D32JPPW*/
         L     @15,@CV02695                                        0310
         BALR  @14,@15                                             0310
*             IF IFTRETCD^=0 THEN                                  0311
         LA    @14,IFTPL                                           0311
         CLI   IFTRETCD(@14),0                                     0311
         BNE   @RT00311                                            0311
*               GOTO M080198;                                      0312
*             $LDNCBPT(I)=IFTLONPR;                                0313
         LH    @10,I                                               0313
         MH    @10,@CH00318                                        0313
         L     @14,IFTLONPR(,@14)                                  0313
         ST    @14,$LDNCBPT-68(@10,WAPTR)                          0313
*           END;                    /* END OF NOT LU CODE    @D32JPFR*/
*         ELSE                      /* IF IT IS AN LU, PUT IN SESSION
*                                      PARAMTERS             @D32JPFR*/
*           $DEVSESP(I)=$DEVSESP(1);/* DEVICE HAS SAME SESS PARMS  0315
*                                                            @D32JPFR*/
         B     @RC00294                                            0315
@RF00294 LH    @14,I                                               0315
         MH    @14,@CH00318                                        0315
         ALR   @14,WAPTR                                           0315
         MVC   @TS00001(6),$DEVSESP(WAPTR)                         0315
         MVC   $DEVSESP-68(6,@14),@TS00001                         0315
*         GOTO M080215;                                            0316
         B     M080215                                             0316
*       END;                                                       0317
*M071120:                                                          0318
*     ;                                                            0318
*                                                                  0318
@RF00288 DS    0H                                                  0318
M071120  DS    0H                                                  0319
*     /***************************************************************/
*     /*                                                             */
*     /* THIS ROUTINE ISSUES AN OPNDST WITH PREEMPT FOR AN ENDING    */
*     /* NODE                                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0319
*     RFY                                                          0319
*       BUFFRPL BASED(RPLPTR);      /*                       @ZA20801*/
*     RPLPTR=ADDR(SIMRPL);          /*                       @ZA20801*/
*                                                                  0320
         LA    @14,SIMRPL                                          0320
         ST    @14,RPLPTR                                          0320
*     /***************************************************************/
*     /*                                                             */
*     /* SET UP RPL AND NIB IN OLT AREA                              */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0321
*     BUFFRPL(1:LENGTH($TLTPRPL))=$TLTPRPL;                        0321
         L     @10,RCAPTR(,WAPTR)                                  0321
         MVC   BUFFRPL(120,@14),$TLTPRPL(@10)                      0321
*     ADDR(BUFFRPL)->RPLUSFLD=WAPTR;/* STORE TWA PTR IN RPL  @ZA18457*/
         ST    WAPTR,RPLUSFLD(,@14)                                0322
*     NIBPTR=ADDR(M200821);         /*                       @ZA20801*/
         LA    @14,M200821                                         0323
         ST    @14,NIBPTR                                          0323
*     BUFFNIB(1:LENGTH(ISTNIB))=M200820;                           0324
         MVC   BUFFNIB(64,@14),M200820                             0324
*     NIBSYM=$SYSMN(I);             /* MOVE IN SYM. NAME IN NIB      */
         LH    @10,I                                               0325
         MH    @10,@CH00318                                        0325
         ST    @10,@TF00001                                        0325
         ALR   @10,WAPTR                                           0325
         MVC   NIBSYM(8,@14),$SYSMN-68(@10)                        0325
*     NIBMODE(1:8)='BASIC   ';      /* DEFAULT BASIC         @D32JPFR*/
         MVC   NIBMODE(8,@14),@CC02699                             0326
*     BINDLEN=0;                    /* INIT BIND LENGTH      @D32JPFR*/
         SLR   @10,@10                                             0327
         ST    @10,BINDLEN                                         0327
*     IF $DEVLU(I)='1'B THEN        /* IS THIS DEVICE AN LU  @D32JPFR*/
         LR    @10,WAPTR                                           0328
         AL    @10,@TF00001                                        0328
         TM    $DEVLU-68(@10),B'00001000'                          0328
         BNO   @RF00328                                            0328
*       DO;                         /* YES                   @D32JPFR*/
*         NIBMODE(1:8)='RECORD  ';  /* SET MODE TO RECORD    @D32JPFR*/
         MVC   NIBMODE(8,@14),@CC02700                             0330
*         NIBLMODE='';              /* BLANK OUT NIBLMODE    @D32JPFR*/
         MVI   NIBLMODE(@14),C' '                                  0331
         MVC   NIBLMODE+1(7,@14),NIBLMODE(@14)                     0331
*         IF $DVLGMDE(I)='1'B THEN  /* NIBLMODE SPECIFIED    @D32JPFR*/
         LR    @10,WAPTR                                           0332
         AL    @10,@TF00001                                        0332
         TM    $DVLGMDE-68(@10),B'00001000'                        0332
         BNO   @RF00332                                            0332
*           NIBLMODE=$IFTOUT(I,1:8);/* YES GET IT            @D32JPFR*/
         LR    @10,WAPTR                                           0333
         AL    @10,@TF00001                                        0333
         MVC   NIBLMODE(8,@14),$IFTOUT-68(@10)                     0333
*         BINDLEN=LENGTH(ISTBIND);  /* LENGTH OF BIND PARMS  @D32JPFR*/
@RF00332 LA    @14,36                                              0334
         ST    @14,BINDLEN                                         0334
*         R1=ADDR(BUFFRPL);         /* ADDR OF RECORD RPL    @D32JPFR*/
         L     R1,RPLPTR                                           0335
*         R1->RPLBUFL=BINDLEN;      /* USE R1 TO PT TO RPL   @D32JPFR*/
         ST    @14,RPLBUFL(,R1)                                    0336
*         R5=NIBPTR;                /* GET ADDRESS OF NIB    @D32JPFR*/
         L     R5,NIBPTR                                           0337
*         GEN;                                                     0338
         INQUIRE RPL=(1),NIB=(R5),OPTCD=(SYN,SESSPARM),AREA=BINDBUFR
*         IF R15^=0 THEN            /* INQUIRE OK            @D32JPFR*/
         LTR   R15,R15                                             0339
         BNZ   @RT00339                                            0339
*           GOTO M080197;           /* NO                    @D32JPFR*/
*         IF $DVSPRM(I)='1'B THEN   /* SESSPARMS SPECIFIED?  @D32JPFR*/
         LH    @14,I                                               0341
         MH    @14,@CH00318                                        0341
         ST    @14,@TF00001                                        0341
         ALR   @14,WAPTR                                           0341
         TM    $DVSPRM-68(@14),B'00010000'                         0341
         BNO   @RF00341                                            0341
*           BINDBUFR(2:7)=$DEVSESP(I,1:6);/* YES PICK UP     @D32JPFR*/
         LR    @14,WAPTR                                           0342
         AL    @14,@TF00001                                        0342
         MVC   BINDBUFR+1(6),$DEVSESP-68(@14)                      0342
*         $DVSPRM(I)='0'B;          /* SET SESSPARM FLAG OFF @D32JPFR*/
@RF00341 DS    0H                                                  0344
*         $DVLGMDE(I)='0'B;         /* SET LOGMODE FLAG OFF  @D32JPFR*/
         LH    @14,I                                               0344
         LR    @10,@14                                             0344
         MH    @10,@CH00318                                        0344
         ALR   @10,WAPTR                                           0344
         NI    $DVSPRM-68(@10),B'11100111'                         0344
*         RFY                                                      0345
*           ISTBIND BASED(ADDR(BINDBUFR));                         0345
*         IF ACQCT='1'B×            /* CT=TT                 @D32JPFR*/
*             I=2 THEN              /* OR DEVICE IS AP       @D32JPFR*/
         L     @10,$ACQLIST(,WAPTR)                                0346
         TM    ACQCT(@10),B'00100000'                              0346
         BO    @RT00346                                            0346
         C     @14,@CF00139                                        0346
         BNE   @RF00346                                            0346
@RT00346 DS    0H                                                  0347
*           DO;                     /* YES                   @D32JPFR*/
*             R1=ADDR(BINFM);       /* GET BIND PARMS        @D32JPFR*/
         LA    R1,BINDBUFR                                         0348
         LA    R1,BINFM(,R1)                                       0348
*             CALL I01C1000;        /* MODIFY THEM           @D32JPFR*/
         L     @15,@CV02705                                        0349
         BALR  @14,@15                                             0349
*           END;                                                   0350
*         BINDPTR=$PTRAREA+LENGTH($TLTPRPL)+/* COMPUTE PTR   @D32JPFR*/
*             LENGTH(ISTNIB)+LENGTH(WORKFLS);                      0351
@RF00346 LA    @14,196                                             0351
         AL    @14,$PTRAREA(,WAPTR)                                0351
         ST    @14,BINDPTR                                         0351
*         BUFFBIND(1:BINDLEN)=BINDBUFR;/* MOVE DATA          @D32JPFR*/
         L     @10,BINDLEN                                         0352
         BCTR  @10,0                                               0352
         EX    @10,@SM02916                                        0352
*         $DEVSESP(I)=BINDBUFR(2:LENGTH($DEVSESP(I))+1);/*   @D32JPFR*/
         LH    @10,I                                               0353
         MH    @10,@CH00318                                        0353
         ALR   @10,WAPTR                                           0353
         MVC   $DEVSESP-68(6,@10),BINDBUFR+1                       0353
*         NIBNDAR=BINDPTR;          /* PT TO BIND PARM       @D32JPFR*/
         L     @10,NIBPTR                                          0354
         ST    @14,NIBNDAR(,@10)                                   0354
*       END;                                                       0355
*                                                                  0355
*     /***************************************************************/
*     /*                                                             */
*     /* GET PTR TO RPL AND NIB                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0356
*     DEFUSERF=ADDR(TOLTEPWA);                                     0356
@RF00328 L     @14,NIBPTR                                          0356
         ST    WAPTR,DEFUSERF(,@14)                                0356
*     R1=RPLPTR;                    /*                       @ZA20801*/
         L     R1,RPLPTR                                           0357
*     R15=NIBPTR;                                                  0358
*                                                                  0358
         LR    R15,@14                                             0358
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE SIMLOGON                                      @ZA20801*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0359
*     GENERATE;                                                    0359
*                                                         /*@ZA20801*/
       SIMLOGON RPL=(R1),NIB=(R15),OPTCD=(SYN,RELRQ,Q)
*     IF R15=0 THEN                                                0360
         LTR   R15,R15                                             0360
         BNZ   @RF00360                                            0360
*       DO;                         /*                       @ZA20801*/
*         $OPISCNT=$OPISCNT+1;      /*                       @ZA20801*/
         LA    @14,1                                               0362
         AH    @14,$OPISCNT(,WAPTR)                                0362
         STH   @14,$OPISCNT(,WAPTR)                                0362
*         GOTO M080199;             /*                       @ZA20801*/
         B     M080199                                             0363
*       END;                        /*                       @ZA20801*/
*     RFY                                                          0365
*       BUFFRPL BASED($PTRAREA+LENGTH(WORKFLS));/*           @ZA20801*/
@RF00360 DS    0H                                                  0366
*     $OPNDCNT=$OPNDCNT+1;                                         0366
         LA    @14,1                                               0366
         AH    @14,$OPNDCNT(,WAPTR)                                0366
         STH   @14,$OPNDCNT(,WAPTR)                                0366
*     RPLRTNCD=0;                   /*                        @DM0906*/
         L     @14,RPLPTR                                          0367
         MVI   RPLRTNCD(@14),X'00'                                 0367
*     RPLFDB2=R15;                  /*                       @DA04686*/
         STC   R15,RPLFDB2(,@14)                                   0368
*M080197:                                                          0369
*     $NOTDEV(I)='1'B;              /* OPEN FAILED SO MARK ENTRY     */
M080197  DS    0H                                                  0370
*     $ACQRED(I)='1'B;              /* AS NOT A DEV                  */
         LH    @14,I                                               0370
         MH    @14,@CH00318                                        0370
         ALR   @14,WAPTR                                           0370
         OI    $NOTDEV-68(@14),B'11000000'                         0370
*M080198:                                                          0371
*     ;                                                            0371
M080198  DS    0H                                                  0372
*     $FEEDBCK(I,1)=RPLRTNCD;       /*                        @DM0906*/
         LH    @14,I                                               0372
         MH    @14,@CH00318                                        0372
         L     @10,RPLPTR                                          0372
         SLR   @04,@04                                             0372
         IC    @04,RPLRTNCD(,@10)                                  0372
         STC   @04,$FEEDBCK-68(@14,WAPTR)                          0372
*     $FEEDBCK(I,2)=RPLFDB2;        /*                       @DA04686*/
         SLR   @04,@04                                             0373
         IC    @04,RPLFDB2(,@10)                                   0373
         STC   @04,$FEEDBCK-67(@14,WAPTR)                          0373
*     GOTO M080215;                                                0374
         B     M080215                                             0374
*M080199:                                                          0375
*     ;                                                            0375
*                                                                  0375
M080199  DS    0H                                                  0376
*     /***************************************************************/
*     /*                                                             */
*     /* UPDATE POINTER TO NEXT AVAILABLE AREA IN OLT AREA           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0376
*     $PTRAREA=($PTRAREA+LENGTH(ISTNIB)+LENGTH($TLTPRPL)+LENGTH(WORKFLS
*         )+BINDLEN+3)/4*4;         /* POINT THEN ROUND UP   @XM00894*/
         LA    @06,196                                             0376
         AL    @06,$PTRAREA(,WAPTR)                                0376
         AL    @06,BINDLEN                                         0376
         AL    @06,@CF00084                                        0376
         SRDA  @06,32                                              0376
         D     @06,@CF00071                                        0376
         SLA   @07,2                                               0376
         ST    @07,$PTRAREA(,WAPTR)                                0376
*M080200:                                                          0377
*     ;                                                            0377
M080200  DS    0H                                                  0378
*M030510:                                                          0378
*     ;                                                            0378
M030510  DS    0H                                                  0379
*M080215:                                                          0379
*     ;                                                            0379
M080215  DS    0H                                                  0380
*   END;                            /* END OF OPNDST PREENPT         */
         LA    @14,1                                               0380
         AH    @14,I                                               0380
@DE00266 STH   @14,I                                               0380
         CH    @14,$DEVCNTS(,WAPTR)                                0380
         BNH   @DL00266                                            0380
*   RFY                                                            0381
*    (R1,                                                          0381
*     R5) UNRSTD;                                                  0381
*                                                                  0381
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE DETERMINES IF ALL THE OPNDST WITH PREEMPT ISSUED ARE*/
*   /* COMPLETED. THIS IS DONE BY CHECKING THE OPNDST ISSUED COUNTER */
*   /* ($OPNDCNT) WITH THE OPNDST COMPLETE COUNTER ($OPISCNT). IF ALL*/
*   /* OPNDST ARE NOT DONE , CONTROL IS GIVEN TO THE RESOURCE CONTROL*/
*   /* MANAGER (RCM) AND THIS CODE WILL BE CALLED BY HIM AT REGULAR  */
*   /* INTERVALS                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0382
*   IF $OPNDCNT=$OPISCNT            /* ARE ALL OPNDST DONE           */
*     THEN                                                         0382
         CLC   $OPNDCNT(2,WAPTR),$OPISCNT(WAPTR)                   0382
         BE    @RT00382                                            0382
*     GOTO M090155;                 /* BR IF YES                     */
*                                                                  0383
*   /*****************************************************************/
*   /*                                                               */
*   /* OTHERWISE WAIT FOR 30 SECONDS GO TO WAITIO ROUTINE TO GET THE */
*   /* END OF 30 SECS                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0384
*M090306:                                                          0384
*   ;                                                              0384
M090306  DS    0H                                                  0385
*   CALL S2FC2000(T30SECS,$TIMEALW);/* GET END OF 30 SEC             */
         LA    @14,T30SECS                                         0385
         ST    @14,@AL00001                                        0385
         LA    @14,$TIMEALW(,WAPTR)                                0385
         ST    @14,@AL00001+4                                      0385
         L     @15,@CV02719                                        0385
         LA    @01,@AL00001                                        0385
         BALR  @14,@15                                             0385
*M090830:                                                          0386
*   ;                                                              0386
M090830  DS    0H                                                  0387
*   $ACTOPND='1'B;                  /* SET ACQUIRE ACTIVE BIT        */
         OI    $ACTOPND(WAPTR),B'00000001'                         0387
*   GOTO S30C0210;                                                 0388
         B     S30C0210                                            0388
*S30C1000:                                                         0389
*   ENTRY;                                                         0389
*                                                                  0389
@EP00389 DS    0H                                                  0390
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED BY THE RCM AT REGULAR INTERVALS TO     */
*   /* CHECK IF ALL OPNDST ARE DONE                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0390
*   R15=R13;                        /* SET PTR TO BACKSAVE DSECT     */
         LR    R15,R13                                             0390
*   R13=ADDR(SVESC030);             /* SET PTR TO SAVE AREA          */
         LA    R13,SVESC030(,WAPTR)                                0391
*   BACKSAVE(3)=R13;                /* CHAIN SAVE AREAS              */
         ST    R13,BACKSAVE+8(,R15)                                0392
*   SVESC030(2)=R15;                                               0393
         ST    R15,SVESC030+4(,WAPTR)                              0393
*M090155:                                                          0394
*   ;                                                              0394
M090155  DS    0H                                                  0395
*   $ACTOPND='0'B;                  /* SET ACQUIRE ACTIVE OFF        */
         NI    $ACTOPND(WAPTR),B'11111110'                         0395
*   IF CUTSTON='1'B                 /* WAS CUTEST THE INITIAL CALLER */
*     THEN                                                         0396
         L     @14,$ACQLIST(,WAPTR)                                0396
         TM    CUTSTON(@14),B'00010000'                            0396
         BO    @RT00396                                            0396
*     GOTO M101836;                 /* BR IF YES                     */
*                                                                  0397
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL OPNDST ARE NOT DONE , MESSAGE 381 IS ISSUED INDICATING */
*   /* WHAT DEVICES HAVE NOT BEE ACQUIRED AND WHAT ACTION SHOULD BE  */
*   /* TAKEN                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0398
*   $INBUFR(1:LENGTH($INBUFR))='';                                 0398
         MVI   $INBUFR(WAPTR),C' '                                 0398
         MVC   $INBUFR+1(79,WAPTR),$INBUFR(WAPTR)                  0398
*   R=1;                                                           0399
         MVC   R(2),@CH00075                                       0399
*   P=8;                                                           0400
*                                                                  0400
         MVC   P(2),@CH00058                                       0400
*   /*****************************************************************/
*   /*                                                               */
*   /* POST ALL DET ENTRIES WHEN ACQUIRE WAS DONE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0401
*   DO I=2 TO $DEVCNTS;             /* LOOP THRU DEVICES     @DA04686*/
         LA    @14,2                                               0401
         B     @DE00401                                            0401
@DL00401 DS    0H                                                  0402
*     IF $FEEDBCK(I)^='0000'X THEN                                 0402
         MH    @14,@CH00318                                        0402
         ST    @14,@TF00001                                        0402
         ALR   @14,WAPTR                                           0402
         CLC   $FEEDBCK-68(2,@14),@CB02656                         0402
         BE    @RF00402                                            0402
*       DO;                         /* BAD RC, PUT OUT MSG   @DA04686*/
*                                                                  0403
*         /***********************************************************/
*         /*                                                         */
*         /* ITACONV FROM($FEEDBCK(I))TO($INBUFR,4)V INVOKED         */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0404
*         DCL                                                      0404
*          (ITATCF,                                                0404
*           ITATCT) CHAR(*) BASED;  /* GENERATE WORK VARABLES        */
*         DCL                                                      0405
*           ITATCTS FIXED;          /* TEMP SPOT FOR ALTERED BYTE    */
*         RFY                                                      0406
*           ITATCF BASED(ADDR($FEEDBCK(I)));/* MAP VARIABLE OVER FROM*/
*         RFY                                                      0407
*           ITATCT BASED(ADDR($INBUFR));/* MAP VARIBABLE OVER TO     */
*         UNPK(ITATCT(1:4+1),ITATCF(1:LENGTH($FEEDBCK(I))+1));/*   0408
*                                      EXPAND HEX TO EBCDIC          */
         LA    @14,2104                                            0408
         ALR   @14,WAPTR                                           0408
         L     @10,@TF00001                                        0408
         LA    @10,$FEEDBCK-68(@10,WAPTR)                          0408
         UNPK  ITATCT(5,@14),ITATCF(3,@10)                         0408
*         TR(ITATCT(1:4),$TRTBL);   /* CONVERT FA-FF TO C1-C6        */
*                                                                  0409
         L     @10,RCAPTR(,WAPTR)                                  0409
         L     @10,$TRTBLA(,@10)                                   0409
         TR    ITATCT(4,@14),$TRTBL(@10)                           0409
*         /***********************************************************/
*         /*                                                         */
*         /*                                                 @DA04686*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0410
*         $INBUFR(12:15)=$INBUFR(1:4);/*                     @DA04686*/
         MVC   $INBUFR+11(4,WAPTR),$INBUFR(WAPTR)                  0410
*         $INBUFR(4:11)=$SYSMN(I);  /*                       @DA04686*/
         LR    @14,WAPTR                                           0411
         AL    @14,@TF00001                                        0411
         MVC   $INBUFR+3(8,WAPTR),$SYSMN-68(@14)                   0411
*         $INBUFR(1:3)='OPN';       /*                       @DA04686*/
         MVC   $INBUFR(3,WAPTR),@CC02738                           0412
*         $FEEDBCK(I)='0000'X;      /* ZERO FEEDBACK         @DA04686*/
*                                                                  0413
         LR    @14,WAPTR                                           0413
         AL    @14,@TF00001                                        0413
         MVC   $FEEDBCK-68(2,@14),@CB02656                         0413
*         /***********************************************************/
*         /*                                                         */
*         /* TCEC MSGN(383)SUB(YES) INVOKED                          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0414
*         $TCECM='1'B;              /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0414
*         R1=ADDR($TCA16);          /* SET UP PARM LIST $TR          */
         LA    R1,$TCA16                                           0415
*         CALL #EXIT;               /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0416
         BALR  @14,@15                                             0416
*         DCL                                                      0417
*           1 $TCA16,               /* TCEC PARM LIST                */
*            2 $TCB16 FIXED(32) INIT(383),/* MSG NUMBER              */
*            2 $TCC16 FIXED(32) INIT(0),/* INCT LEN                  */
*            2 $TCD16 BIT(8) INIT('10000000'B),/* FLAG               */
*            2 $TCE16 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK     0417
*                                                            @DA04686*/
*       END;                        /* END BAD RC CHECK      @DA04686*/
*   END;                            /* END LOOP FOR BAD RC   @DA04686*/
@RF00402 LA    @14,1                                               0419
         AH    @14,I                                               0419
@DE00401 STH   @14,I                                               0419
         CH    @14,$DEVCNTS(,WAPTR)                                0419
         BNH   @DL00401                                            0419
*   $INBUFR='';                     /* BLANK BUFFER          @DA04686*/
         MVI   $INBUFR(WAPTR),C' '                                 0420
         MVC   $INBUFR+1(79,WAPTR),$INBUFR(WAPTR)                  0420
*   DO I=2 TO $DEVCNTS;                                            0421
         LA    @14,2                                               0421
         B     @DE00421                                            0421
@DL00421 DS    0H                                                  0422
*     IF $ACQRED(I)='1'B×$NOTDEV(I)='1'B THEN                      0422
         LR    @10,@14                                             0422
         MH    @10,@CH00318                                        0422
         ST    @10,@TF00001                                        0422
         ALR   @10,WAPTR                                           0422
         TM    $ACQRED-68(@10),B'11000000'                         0422
         BNZ   @RT00422                                            0422
*       GOTO M090250;               /* WAS THIS A VALID DEV, BR IF NO*/
*     IF $OPIS(I)=$OPND(I)          /* ALL OPENS DONE                */
*       THEN                                                       0424
         L     @10,@TF00001                                        0424
         LH    @10,$OPIS-68(@10,WAPTR)                             0424
         L     @03,@TF00001                                        0424
         CH    @10,$OPND-68(@03,WAPTR)                             0424
         BNE   @RF00424                                            0424
*       DO;                                                        0425
*         $ACQRED(I)='1'B;          /* SET ACQUIRED BIT              */
         LR    @10,WAPTR                                           0426
         AL    @10,@TF00001                                        0426
         OI    $ACQRED-68(@10),B'01000000'                         0426
*         IF I=2×ACQCT='1'B THEN    /* IF ACQUIRING CT OR AP @D32JPPW*/
         C     @14,@CF00139                                        0427
         BE    @RT00427                                            0427
         L     @14,$ACQLIST(,WAPTR)                                0427
         TM    ACQCT(@14),B'00100000'                              0427
         BNO   @RF00427                                            0427
@RT00427 DS    0H                                                  0428
*           DO;                     /* CLEAR ALL UNUSED AREAS IN THE
*                                      DEV TABLE             @D32JPPW*/
*             $DEVTECB(I)=$DEVFEAT(I);/* SAVE DEVICE CHARACTERISTICS
*                                                            @D32JPPW*/
         LH    @14,I                                               0429
         LR    @10,@14                                             0429
         MH    @10,@CH00318                                        0429
         ST    @10,@TF00001                                        0429
         ALR   @10,WAPTR                                           0429
         LR    @03,WAPTR                                           0429
         AL    @03,@TF00001                                        0429
         MVC   $DEVTECB-68(4,@10),$DEVFEAT-68(@03)                 0429
*             $DEVCDS(I)=$DEVCDS(I)&&$DEVCDS(I);/* ZERO CDS FIELD  0430
*                                                            @D32JPPW*/
         LR    @10,WAPTR                                           0430
         AL    @10,@TF00001                                        0430
         XC    $DEVCDS-68(20,@10),$DEVCDS-68(@10)                  0430
*             $DEVFEAT(I)=$DEVTECB(I);/* RESTORE DEV CHAR    @D32JPPW*/
         LR    @10,WAPTR                                           0431
         AL    @10,@TF00001                                        0431
         LR    @03,WAPTR                                           0431
         AL    @03,@TF00001                                        0431
         MVC   $DEVFEAT-68(4,@10),$DEVTECB-68(@03)                 0431
*             $DVSEQNO(I)=1;        /* SET SEQUENCE NUM TO 1 @DA04689*/
         LR    @10,WAPTR                                           0432
         AL    @10,@TF00001                                        0432
         MVC   $DVSEQNO-68(2,@10),@CH00075                         0432
*             $OPND(I)=0;                                          0433
         SLR   @10,@10                                             0433
         L     @03,@TF00001                                        0433
         STH   @10,$OPND-68(@03,WAPTR)                             0433
*             $LDNCBPT(I)=0;        /* DONT POINT TO THE LDNCB     0434
*                                                            @D32JPPW*/
         L     @03,@TF00001                                        0434
         ST    @10,$LDNCBPT-68(@03,WAPTR)                          0434
*             $DVLN(I)=0;           /* NO CURRENT LINE FOR SCREEN  0435
*                                                            @D32JPPW*/
         LR    @03,WAPTR                                           0435
         AL    @03,@TF00001                                        0435
         STCM  @10,3,$DVLN-68(@03)                                 0435
*             IF ACQCT='1'B&I=3 THEN/* ARE WE ACQUIRING A NEW CT   0436
*                                                            @D32JPPW*/
         L     @10,$ACQLIST(,WAPTR)                                0436
         TM    ACQCT(@10),B'00100000'                              0436
         BNO   @RF00436                                            0436
         C     @14,@CF00084                                        0436
         BNE   @RF00436                                            0436
*               DO;                 /* SPECIAL CODE FOR ACQUIRING A
*                                      NEW CT                @D32JPPW*/
*                 $DVINCT(3)=LENGTH($TRMINPT);/* READ FULL BUFFER  0438
*                                                            @D32JPPW*/
         MVI   $DVINCT+136(WAPTR),X'50'                            0438
*               END;                /* END SPECIAL CODE FOR ACQUIRING
*                                      A NEW CT              @D32JPPW*/
*           END;                    /* END OF CLEARING FOR CT/AP   0440
*                                                            @D32JPPW*/
*         GOTO M090250;             /* GO LOOK AT NEXT DEV           */
         B     M090250                                             0441
*       END;                                                       0442
*                                                                  0442
*     /***************************************************************/
*     /*                                                             */
*     /* PUT DEVICE NAME INTO BUFFER($INBUFR) FOR MESSAGE 381        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0443
*M090245:                                                          0443
*     ;                                                            0443
@RF00424 DS    0H                                                  0443
M090245  DS    0H                                                  0444
*     IF $REMOTE(I)='1'B            /* DETERMINE IF LOCAL OR REMOTE  */
*       THEN                                                       0444
         LH    @14,I                                               0444
         MH    @14,@CH00318                                        0444
         ST    @14,@TF00001                                        0444
         ALR   @14,WAPTR                                           0444
         TM    $REMOTE-68(@14),B'01000000'                         0444
         BNO   @RF00444                                            0444
*       $INBUFR(R:P)=$SYSMN(I);                                    0445
         LH    @14,R                                               0445
         ALR   @14,WAPTR                                           0445
         LH    @10,R                                               0445
         LCR   @10,@10                                             0445
         AH    @10,P                                               0445
         LR    @03,WAPTR                                           0445
         AL    @03,@TF00001                                        0445
         EX    @10,@SM02920                                        0445
*     ELSE                                                         0446
*       $INBUFR(R:P)=$LINENME(I);                                  0446
         B     @RC00444                                            0446
@RF00444 LH    @14,R                                               0446
         ALR   @14,WAPTR                                           0446
         LH    @10,R                                               0446
         LCR   @10,@10                                             0446
         AH    @10,P                                               0446
         LH    @03,I                                               0446
         MH    @03,@CH00318                                        0446
         ALR   @03,WAPTR                                           0446
         EX    @10,@SM02922                                        0446
*     R=R+9;                        /* UPDATE PTRS                   */
@RC00444 LA    @14,9                                               0447
         LH    @10,R                                               0447
         ALR   @10,@14                                             0447
         STH   @10,R                                               0447
*     P=P+9;                                                       0448
         AH    @14,P                                               0448
         STH   @14,P                                               0448
*M090250:                                                          0449
*     ;                                                            0449
M090250  DS    0H                                                  0450
*   END;                                                           0450
*                                                                  0450
         LA    @14,1                                               0450
         AH    @14,I                                               0450
@DE00421 STH   @14,I                                               0450
         CH    @14,$DEVCNTS(,WAPTR)                                0450
         BNH   @DL00421                                            0450
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL OPNDST ARE DONE WE GO AND POST EACH DET ENTRY          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0451
*   IF $OPNDCNT=$OPISCNT            /* HAVE ALL THE OPNDST COMPLETE? */
*     THEN                                                         0451
         CLC   $OPNDCNT(2,WAPTR),$OPISCNT(WAPTR)                   0451
         BE    @RT00451                                            0451
*     GOTO M090205;                 /* BR IF YES                     */
*                                                                  0452
*   /*****************************************************************/
*   /*                                                               */
*   /* IF TIME HAS EXPIRED MESSAGE 381 IS OUTPUTTED. OTHERWISE, WE   */
*   /* RETURN TO THE RCM                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0453
*   CALL ISTSC026;                  /* GET TIME                      */
         L     @15,@CV02752                                        0453
         BALR  @14,@15                                             0453
*   IF R1<$TIMEALW                  /* HAS TIME EXPIRED              */
*     THEN                                                         0454
         C     R1,$TIMEALW(,WAPTR)                                 0454
         BL    @RT00454                                            0454
*     GOTO M090830;                 /* BR IF NO                      */
*M090255:                                                          0456
*   ;                                                              0456
*                                                                  0456
M090255  DS    0H                                                  0457
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE MESSAGE 381 TCEC                                        */
*   /* MSGN(381)MSGMSK('11110000'B)SUB(YES)INCT(61) INVOKED          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0457
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0457
*   R1=ADDR($TCA17);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA17                                           0458
*   CALL S20CEC03;                  /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV02756                                        0459
         BALR  @14,@15                                             0459
*   DCL                                                            0460
*     1 $TCA17,                     /* TCEC PARM LIST                */
*      2 $TCB17 FIXED(32) INIT(381),/* MSG NUMBER                    */
*      2 $TCC17 FIXED(32) INIT(61), /* INCT LEN                      */
*      2 $TCD17 BIT(8) INIT('11000000'B),/* FLAG                     */
*      2 $TCE17 CHAR(4) INIT('11110000'B);/* MSSAGE MASK             */
*M090300:                                                          0461
*   ;                                                              0461
*                                                                  0461
M090300  DS    0H                                                  0462
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE RESPONSE TO MESSAGE 381                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0462
*   IF $INBUFR(2:2)='Y'             /* CONTINUE TO WAIT              */
*     THEN                                                         0462
         CLI   $INBUFR+1(WAPTR),C'Y'                               0462
         BE    @RT00462                                            0462
*     GOTO M090306;                 /* BR IF YES                     */
*   R1=ADDR(RELEASE);                                              0464
         LA    R1,RELEASE                                          0464
*   IF $INBUFR(2:2)='N'             /* DO WE GET RID OF ALL DEVICES  */
*     THEN                                                         0465
         CLI   $INBUFR+1(WAPTR),C'N'                               0465
         BNE   @RF00465                                            0465
*     DO;                           /* YES                           */
*       RLB='28'X;                  /* SET TO GET RID OF TEST DEV    */
         MVI   RLB,X'28'                                           0467
*       CALL #EXIT;                 /* GO TO RELEASE                 */
         L     @15,#EXITA(,WAPTR)                                  0468
         BALR  @14,@15                                             0468
*       IF $DEVCHNG='1'B            /* HAS THERE BEEN A DEV CHANGE   */
*         THEN                                                     0469
         TM    $DEVCHNG(WAPTR),B'00010000'                         0469
         BNO   @RF00469                                            0469
*         DO;                       /* IF YES                        */
*           R1=ADDR(RELEASE);       /* GET PARM LIST                 */
         LA    R1,RELEASE                                          0471
*           RLB='40'X;              /* RELEASE ACQ DEVICES           */
         MVI   RLB,X'40'                                           0472
*           CALL #EXIT;             /* GO TO RELASE                  */
         L     @15,#EXITA(,WAPTR)                                  0473
         BALR  @14,@15                                             0473
*         END;                                                     0474
*       R15='0C'X;                                                 0475
@RF00469 LA    R15,12                                              0475
*       GOTO S14C0210;                                             0476
         B     S14C0210                                            0476
*     END;                                                         0477
*   IF $INBUFR(2:2)='P'             /* CONTINUE WITH WHAT WE HAVE    */
*     THEN                                                         0478
@RF00465 CLI   $INBUFR+1(WAPTR),C'P'                               0478
         BNE   @RF00478                                            0478
*     DO;                           /* YES                           */
*       RLB='28'X;                  /* GET RID OF UNACQUIRE DEV      */
         MVI   RLB,X'28'                                           0480
*       CALL #EXIT;                 /* GOTO RELEASE                  */
         L     @15,#EXITA(,WAPTR)                                  0481
         BALR  @14,@15                                             0481
*       GOTO M090205;               /* GO GET FMCB                   */
         B     M090205                                             0482
*     END;                                                         0483
*                                                                  0483
*   /*****************************************************************/
*   /*                                                               */
*   /* IF Y, N, OR P WAS NOT INPUTTED MSG 299 IS ISSUED TCEC         */
*   /* MSGN(299)INCT(61) INVOKED                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0484
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
@RF00478 OI    $TCECM(WAPTR),B'00000001'                           0484
*   R1=ADDR($TCA18);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA18                                           0485
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0486
         BALR  @14,@15                                             0486
*   DCL                                                            0487
*     1 $TCA18,                     /* TCEC PARM LIST                */
*      2 $TCB18 FIXED(32) INIT(299),/* MSG NUMBER                    */
*      2 $TCC18 FIXED(32) INIT(61), /* INCT LEN                      */
*      2 $TCD18 BIT(8) INIT('01000000'B),/* FLAG                     */
*      2 $TCE18 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK ISSUE     0487
*                                      INCORRECT REPLY               */
*   GOTO M090300;                   /* GO EVALUATE RESPONSE          */
         B     M090300                                             0488
*M090205:                                                          0489
*   ;                                                              0489
M090205  DS    0H                                                  0490
*   RPLPTR=$OLTPTR+LENGTH(WORKFLS);                                0490
         L     @14,$OLTPTR(,WAPTR)                                 0490
         LA    @10,12                                              0490
         ALR   @10,@14                                             0490
         ST    @10,RPLPTR                                          0490
*   $PTRAREA=$OLTPTR;               /* SET AREA PTR                  */
         ST    @14,$PTRAREA(,WAPTR)                                0491
*   R15=0;                          /* SET GOOD RETURN CODE          */
         SLR   R15,R15                                             0492
*S14C0210:                                                         0493
*   ;                                                              0493
*                                                                  0493
S14C0210 DS    0H                                                  0494
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS CODE DETERMINES IF A WHAT RETURN CODE SHOULD BE GIVEN    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0494
*   IF $ACQRED(2)='0'B              /* IS THE AP ACQUIRED            */
*     THEN                                                         0494
         TM    $ACQRED+68(WAPTR),B'01000000'                       0494
         BNZ   @RF00494                                            0494
*     DO;                           /* IF NOT ACQUIRED, DO THE     0495
*                                      FOLLOWING                     */
*       $NEWAP='0'B;                /* TURN OFF THE AP BITS          */
         NI    $NEWAP(WAPTR),B'11111110'                           0496
*       $APRQPER='0'B;                                             0497
         NI    $APRQPER(WAPTR),B'10111111'                         0497
*     END;                                                         0498
*   IF R15='0C'X                    /* WAS THERE A NO REPLY TO 381   */
*     THEN                                                         0499
@RF00494 C     R15,@CF00712                                        0499
         BNE   @RF00499                                            0499
*     DO;                           /* IF YES                        */
*       IF $DEVCHNG='1'B            /* WAS THERE A DEVICE CHANGE??   */
*         THEN                                                     0501
         TM    $DEVCHNG(WAPTR),B'00010000'                         0501
         BO    @RT00501                                            0501
*         GOTO S21C1830;            /* RESET DEV COUNTS              */
*       GOTO S30C0210;              /* OTHERWISE LEAVE COUNTS ALONE  */
         B     S30C0210                                            0503
*     END;                                                         0504
*   IF $DEVCHNG='0'B×               /* IS THERE WAS NO DEV CHANGE OR */
*       $NDR='1'B                   /* NDR WAS SPECIFIED             */
*     THEN                                                         0505
@RF00499 TM    $DEVCHNG(WAPTR),B'00010000'                         0505
         BZ    @RT00505                                            0505
         TM    $NDR(WAPTR),B'00100000'                             0505
         BO    @RT00505                                            0505
*     GOTO S30C0210;                /* THEN RETURN                   */
*   DO I=3 TO $DEVCNTS;             /* CK FOR ANY ACQUIRED TEST    0507
*                                      DEVICES                       */
         LA    @14,3                                               0507
         B     @DE00507                                            0507
@DL00507 DS    0H                                                  0508
*     IF $ACQRED(I)='1'B            /* IF A DEVICE IS ACQUIRED       */
*       THEN                                                       0508
         LR    @10,@14                                             0508
         MH    @10,@CH00318                                        0508
         ALR   @10,WAPTR                                           0508
         TM    $ACQRED-68(@10),B'01000000'                         0508
         BO    @RT00508                                            0508
*       GOTO J060630;               /* GO SET GOOD RETURN CODE       */
*   END;                                                           0510
         AL    @14,@CF00075                                        0510
@DE00507 STH   @14,I                                               0510
         CH    @14,$DEVCNTS(,WAPTR)                                0510
         BNH   @DL00507                                            0510
*S21C1830:                                                         0511
*   ;                                                              0511
S21C1830 DS    0H                                                  0512
*   $DEVCNTS=2;                     /* SET DEVICE TO 2, NO TEST DEV  */
         MVC   $DEVCNTS(2,WAPTR),@CH00139                          0512
*   $VALDDEV='0'B;                  /* TURN OFF ACTIVE TEST DEVICES  */
         NI    $VALDDEV(WAPTR),B'11110111'                         0513
*   R15='0C'X;                      /* SET BAD RETURN CODE           */
         LA    R15,12                                              0514
*   GOTO S30C0210;                  /* RETURN                        */
         B     S30C0210                                            0515
*J060630:                                                          0516
*   ;                                                              0516
J060630  DS    0H                                                  0517
*   R15=0;                          /* SET GOOD RETURN CODE          */
         SLR   R15,R15                                             0517
*   GOTO S30C0210;                  /* RETURN                        */
         B     S30C0210                                            0518
*M090410:                                                          0519
*   ;                                                              0519
*                                                                  0519
M090410  DS    0H                                                  0520
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF ACQUIRE CODE                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0520
*XXX:                                                              0520
*   ;                                                              0520
*                                                                  0520
XXX      DS    0H                                                  0521
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF VERIFY CODE THIS ROUTINE DETERMINES IF A DEVICE CAN  */
*   /* BE USED BY TOLTEP INITIALIZATION OF VERIFY WORKAREAS          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0521
*   $WORK(1:60)=$WORK(1:60)&&$WORK(1:60);                          0521
         XC    $WORK(60,WAPTR),$WORK(WAPTR)                        0521
*   RFY                                                            0522
*     RETPART2 BASED(ADDR($WORK)+LENGTH(RETPMLST));                0522
*   VERBUFR(1:LENGTH($TLTPRPL))=$TLTPRPL;                          0523
*                                                                  0523
         L     @14,RCAPTR(,WAPTR)                                  0523
         MVC   VERBUFR(120),$TLTPRPL(@14)                          0523
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THIS REQUEST IS FOR A LOCAL OR REMOTE DEVICE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0524
*   IF CDSSYMB^='1'B                /* IF NOT ON,IT IS A REMOTE DEV  */
*     THEN                                                         0524
         L     @10,APTRCDS                                         0524
         TM    CDSSYMB(@10),B'00001000'                            0524
         BO    @RF00524                                            0524
*     DO;                           /* CODE FOR A LOCAL DEVICE       */
*                                                                  0525
*       /*************************************************************/
*       /*                                                           */
*       /* ******** INSERT CODE TO GET SN FOR UA ITACONV             */
*       /* FROM(CDSUA)TO(SYMBN) INVOKED                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0526
*       RFY                                                        0526
*         ITATCF BASED(ADDR(CDSUA));/* MAP VARIABLE OVER FROM        */
*       RFY                                                        0527
*         ITATCT BASED(ADDR(SYMBN));/* MAP VARIBABLE OVER TO         */
*       ITATCTS=ITATCT(LENGTH(SYMBN)+1:LENGTH(SYMBN)+1);/* SAVE BYTE
*                                      PAST TO FIELD                 */
         LA    @03,SYMBN                                           0528
         SLR   @09,@09                                             0528
         IC    @09,ITATCT+8(,@03)                                  0528
         ST    @09,ITATCTS                                         0528
*       UNPK(ITATCT(1:LENGTH(SYMBN)+1),ITATCF(1:LENGTH(CDSUA)+1));/*
*                                      EXPAND HEX TO EBCDIC          */
         UNPK  ITATCT(9,@03),ITATCF(5,@10)                         0529
*       TR(ITATCT(1:LENGTH(SYMBN)),$TRTBL);/* CONVERT FA-FF TO C1-C6 */
         L     @14,$TRTBLA(,@14)                                   0530
         TR    ITATCT(8,@03),$TRTBL(@14)                           0530
*       ITATCT(LENGTH(SYMBN)+1:LENGTH(SYMBN)+1)=ITATCTS;/* RESTORE 0531
*                                      BYTE PAST TO FIELD            */
*                                                                  0531
         STC   @09,ITATCT+8(,@03)                                  0531
*       /*************************************************************/
*       /*                                                           */
*       /* WHEN A LOCAL DEVICE IS SPECIFIED, THE NAME GIVEN IS FOR   */
*       /* THE LDNCB. THE NAME WHICH IS A UNIT ADDRESS IS TRANSLATED */
*       /* INTO A SYMBOLIC NAME CONSISTING OF EBCDIC REPRESENTATION  */
*       /* OF 3 DIGIT UNIT ADDRESS AND PADDED TO THE RIGHT WITH      */
*       /* BLANKS                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0532
*       SYMBN(1:3)=SYMBN(6:8);      /* POSITION AND STORE            */
         MVC   SYMBN(3),SYMBN+5                                    0532
*       SYMBN(4:8)='';              /* AWAY THE SYM NAME             */
         MVI   SYMBN+3,C' '                                        0533
         MVC   SYMBN+4(4),SYMBN+3                                  0533
*       NIBSYM=SYMBN;                                              0534
         L     @14,NIBPTR                                          0534
         MVC   NIBSYM(8,@14),SYMBN                                 0534
*       R6=LENGTH(ISTNIB);                                         0535
*                                                                  0535
         LA    R6,64                                               0535
*       /*************************************************************/
*       /*                                                           */
*       /* THE INQUIRE MACRO IS ISSUED TO OBTAIN THE TERMINAL ENTRY  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0536
*       GEN;                                                       0536
   INQUIRE RPL=VERBUFR,AREA=$WORK1,AREALEN=(R6),OPTCD=(SYN,TERMS),     X
               NIB=M200820
*       IF R15^=0                   /* IF THE RETURN CODE IS NOT 0   */
*         THEN                                                     0537
         LTR   R15,R15                                             0537
         BNZ   @RT00537                                            0537
*         GOTO S30C0060;            /* THEN ISSUE MSG 380, DEV DOES
*                                      NOT EXIST                     */
*       RNNAME=SYMBN;               /* STORE LDNCB                   */
         LA    @14,2376                                            0539
         ALR   @14,WAPTR                                           0539
         MVC   RNNAME(8,@14),SYMBN                                 0539
*       NIBSYM=$WORK1(13:20);       /* OBTAIN TERMINAL NAME          */
         L     @10,NIBPTR                                          0540
         MVC   NIBSYM(8,@10),$WORK1+12                             0540
*       SYMBN=NIBSYM;                                              0541
         MVC   SYMBN(8),NIBSYM(@10)                                0541
*       REMOTE='0'B;                /* SET APPROPRIATE BITS          */
*       ENDNODE='1'B;                                              0543
         OI    ENDNODE(@14),B'10000000'                            0543
         NI    REMOTE(@14),B'10111111'                             0543
*     END;                                                         0544
*   ELSE                                                           0545
*     DO;                           /* IT IS A REMOTE DEV            */
         B     @RC00524                                            0545
@RF00524 DS    0H                                                  0546
*       SYMBN=CDSSYMBN;             /* GET SYM NAME                  */
         L     @14,APTRCDS                                         0546
         MVC   SYMBN(8),CDSSYMBN(@14)                              0546
*       NIBSYM=SYMBN;                                              0547
         L     @14,NIBPTR                                          0547
         MVC   NIBSYM(8,@14),SYMBN                                 0547
*       REMOTE='1'B;                /* SET REMOTE BIT                */
         OI    REMOTE+2376(WAPTR),B'01000000'                      0548
*     END;                                                         0549
*   DEVSYNME=SYMBN;                                                0550
@RC00524 LA    @14,$WORK(,WAPTR)                                   0550
         MVC   DEVSYNME+20(8,@14),SYMBN                            0550
*   R6=LENGTH(ISTNIB);                                             0551
*                                                                  0551
         LA    R6,64                                               0551
*   /*****************************************************************/
*   /*                                                               */
*   /* GET DEVICE CHARACTERISTICS TO DETERMINE IF DEVICE IS CAPABLE  */
*   /* OF BEING CTONTROL TERMINAL (CT) OR ALTERNATE PRINTER (AP)     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0552
*   GEN;                                                           0552
   INQUIRE RPL=VERBUFR,AREA=$WORK1,AREALEN=(R6),OPTCD=(SYN,DEVCHAR),   X
               NIB=M200820
*   IF R15=0                        /* IF GOOD RET CODE              */
*     THEN                                                         0553
         LTR   R15,R15                                             0553
         BZ    @RT00553                                            0553
*     GOTO S30C0110;                /* CONTINUE PROCESSING           */
*                                                                  0554
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A BAD RETURN CODE WAS GIVEN. DETERMINE IF IT WAS DUE TO 1) */
*   /* VTAM ERROR OCCURRED OR 2) DEVICE DOES NOT EXIST TO VTAM       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0555
*S30C0060:                                                         0555
*   ;                                                              0555
S30C0060 DS    0H                                                  0556
*   IF R15=16                       /* DEVICE DOESNT EXIST           */
*     THEN                                                         0556
         C     R15,@CF00064                                        0556
         BNE   @RF00556                                            0556
*     DO;                                                          0557
*                                                                  0557
*       /*************************************************************/
*       /*                                                           */
*       /* IF TSTMSK IS ON, IT INDICATES THE CALLER DOESNOT WANT     */
*       /* MESSAGE 380 ISSUED TELLING THE REASON WHY THE DEVICE IS   */
*       /* NOT AVAILABLE. IF TSTMSK IS OFF, ISSUE MESSAGE 380        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0558
*       IF TSTMSK='0'B THEN                                        0558
         L     @14,$ACQLIST(,WAPTR)                                0558
         TM    TSTMSK(@14),B'10000000'                             0558
         BNZ   @RF00558                                            0558
*         DO;                                                      0559
*           $INBUFR(1:8)=SYMBN(1:8);                               0560
*                                                                  0560
         MVC   $INBUFR(8,WAPTR),SYMBN                              0560
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(380)SUB(YES)MSGMSK('01000000'B) INVOKED     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0561
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0561
*           R1=ADDR($TCA20);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA20                                           0562
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV02756                                        0563
         BALR  @14,@15                                             0563
*           DCL                                                    0564
*             1 $TCA20,             /* TCEC PARM LIST                */
*              2 $TCB20 FIXED(32) INIT(380),/* MSG NUMBER            */
*              2 $TCC20 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD20 BIT(8) INIT('10000000'B),/* FLAG             */
*              2 $TCE20 CHAR(4) INIT('01000000'B);/* MSSAGE MASK     */
*         END;                                                     0565
*     END;                                                         0566
*   ELSE                                                           0567
*     DO;                                                          0567
         B     @RC00556                                            0567
@RF00556 DS    0H                                                  0568
*A212010:                                                          0568
*       ;                                                          0568
*                                                                  0568
A212010  DS    0H                                                  0569
*       /*************************************************************/
*       /*                                                           */
*       /* DETERMINE IF MESSAGE 380 FOR VATM ERROR SHOULD BE ISSUED  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0569
*       IF TSTMSK='0'B              /* SHOULD MSG BE PRINTED         */
*         THEN                                                     0569
         L     @14,$ACQLIST(,WAPTR)                                0569
         TM    TSTMSK(@14),B'10000000'                             0569
         BNZ   @RF00569                                            0569
*         DO;                       /* THIS CODE PRINTS MSG          */
*           $INBUFR(1:8)=SYMBN(1:8);                               0571
*                                                                  0571
         MVC   $INBUFR(8,WAPTR),SYMBN                              0571
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE MESSAGE 380 TCEC                                */
*           /* MSGN(380)SUB(YES)MSGMSK('10000000'B) INVOKED          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0572
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0572
*           R1=ADDR($TCA21);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA21                                           0573
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV02756                                        0574
         BALR  @14,@15                                             0574
*           DCL                                                    0575
*             1 $TCA21,             /* TCEC PARM LIST                */
*              2 $TCB21 FIXED(32) INIT(380),/* MSG NUMBER            */
*              2 $TCC21 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD21 BIT(8) INIT('10000000'B),/* FLAG             */
*              2 $TCE21 CHAR(4) INIT('10000000'B);/* MSSAGE MASK     */
*         END;                                                     0576
*     END;                                                         0577
@RF00569 DS    0H                                                  0578
*S30C0070:                                                         0578
*   ;                                                              0578
@RC00556 DS    0H                                                  0578
S30C0070 DS    0H                                                  0579
*   R15=4;                          /* SET BAD RETURN CODE           */
         LA    R15,4                                               0579
*   GOTO S30C0210;                  /* RETURN TO CALLER              */
         B     S30C0210                                            0580
*S30C0110:                                                         0581
*   ;                                                              0581
S30C0110 DS    0H                                                  0582
*   CHARDEV=$WORK1(1:4);                                           0582
*                                                                  0582
         LA    @14,$WORK(,WAPTR)                                   0582
         MVC   CHARDEV+20(4,@14),$WORK1                            0582
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE DETERMINES IF THE DEVICE IS IN USE BY ANY OTHER  */
*   /* TOLTEP USER                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0583
*   RCAADDR=$RCA;                   /* GET ADDRESS OF RCA            */
         L     @14,$RCA(,WAPTR)                                    0583
         ST    @14,RCAADDR                                         0583
*   PTRTONM=ADDR(NIBSYM);           /* GET PTR TO DEV NAME           */
*                                                                  0584
         L     @14,NIBPTR                                          0584
         LA    @14,NIBSYM(,@14)                                    0584
         ST    @14,PTRTONM                                         0584
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD PARAMETER LIST AND CALL ROUTINE ISTCC015 TO DETERMINE IF*/
*   /* DEVICE IS IN USE                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0585
*   R1=ADDR(TABSRCH);               /* GET ADDR OF PARMLIST          */
         LA    R1,TABSRCH                                          0585
*   CALL ISTCC015;                  /* GO TO TABLE SEARCH ROUTINE    */
*                                                                  0586
         L     @15,@CV02815                                        0586
         BALR  @14,@15                                             0586
*   /*****************************************************************/
*   /*                                                               */
*   /* A GOOD RETURN INDICATES THAT THE DEVICE WAS FOUND IN USE BY   */
*   /* ANOTHER TOLTEP USER                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0587
*   IF R15=0                        /* WAS THERE A GOOD RET CODE     */
*     THEN                                                         0587
         LTR   R15,R15                                             0587
         BNZ   @RF00587                                            0587
*     DO;                           /* IF YES, ERROR PUT OUT MSG 380 */
*                                                                  0588
*       /*************************************************************/
*       /*                                                           */
*       /* PUT OUT MESSAGE 380 INDICATING DEVICE IS IN USE BY ANOTHER*/
*       /* TOLTEP USER                                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0589
*       IF TSTMSK='0'B              /* SHOULD MSG 380 BE PRINTED     */
*         THEN                                                     0589
         L     @14,$ACQLIST(,WAPTR)                                0589
         TM    TSTMSK(@14),B'10000000'                             0589
         BNZ   @RF00589                                            0589
*         DO;                       /* YES                           */
*           $INBUFR(1:8)=SYMBN(1:8);                               0591
*                                                                  0591
         MVC   $INBUFR(8,WAPTR),SYMBN                              0591
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE MESSAGE 380 TCEC                                */
*           /* MSGN(380)SUB(YES)MSGMSK('00100000'B) INVOKED          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0592
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0592
*           R1=ADDR($TCA22);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA22                                           0593
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV02756                                        0594
         BALR  @14,@15                                             0594
*           DCL                                                    0595
*             1 $TCA22,             /* TCEC PARM LIST                */
*              2 $TCB22 FIXED(32) INIT(380),/* MSG NUMBER            */
*              2 $TCC22 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD22 BIT(8) INIT('10000000'B),/* FLAG             */
*              2 $TCE22 CHAR(4) INIT('00100000'B);/* MSSAGE MASK     */
*         END;                                                     0596
*       GOTO S30C0070;              /* SET RET CODE AND RETURN       */
         B     S30C0070                                            0597
*     END;                                                         0598
*   IF R15=12 THEN                                                 0599
@RF00587 C     R15,@CF00033                                        0599
         BNE   @RF00599                                            0599
*     DO;                                                          0600
*       $INBUFR(1:8)=SYMBN(1:8);                                   0601
*                                                                  0601
         MVC   $INBUFR(8,WAPTR),SYMBN                              0601
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(380)SUB(YES)MSGMSK('00010000'B) INVOKED         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0602
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0602
*       R1=ADDR($TCA23);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA23                                           0603
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV02756                                        0604
         BALR  @14,@15                                             0604
*       DCL                                                        0605
*         1 $TCA23,                 /* TCEC PARM LIST                */
*          2 $TCB23 FIXED(32) INIT(380),/* MSG NUMBER                */
*          2 $TCC23 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD23 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE23 CHAR(4) INIT('00010000'B);/* MSSAGE MASK         */
*     END;                                                         0606
*                                                                  0606
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD RETURNING INFORMATIOM FOR CALLER                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0607
*   PTRWK001=ADDR($WORK)+LENGTH(RETPMLST);/* GET PTR                 */
@RF00599 LA    @14,$WORK(,WAPTR)                                   0607
         AL    @14,@CF00320                                        0607
         ST    @14,PTRWK001(,R1)                                   0607
*   PTRPTR1=ADDR(DEVSYNME);         /* GET ADDR OF SYM NAME          */
         LA    @10,2376                                            0608
         ALR   @10,WAPTR                                           0608
         ST    @14,PTRPTR1(,@10)                                   0608
*   PTRPTR2=ADDR(CHARDEV);          /* GET ADDR OF DEV CHAR          */
*                                                                  0609
         LA    @14,CHARDEV(,@14)                                   0609
         ST    @14,PTRPTR2(,@10)                                   0609
*   /*****************************************************************/
*   /*                                                               */
*   /* GET CDS FOR DEVICE                                    @D32JPFR*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0610
*   RFY                                                            0610
*     ISTNIB BASED(ADDR(VERBUFR));                                 0610
*   NOCDS='0'B;                     /* INIT NOCDS FLAG       @D32JPFR*/
         L     @14,$ACQLIST(,WAPTR)                                0611
         NI    NOCDS(@14),B'11111011'                              0611
*   DVLU='0'B;                      /* INIT LOGICAL UNIT FLAG      0612
*                                                            @D32JPFR*/
         NI    DVLU(@10),B'11110111'                               0612
*   RFY                                                            0613
*     R15 RSTD;                     /*                       @D32JPFR*/
*   RFY                                                            0614
*     ISTDEVCH BASED(PTRPTR2);      /*                       @D32JPFR*/
*   RFY                                                            0615
*     CDSMAP BASED(PTRCDS);         /*                       @D32JPFR*/
*   DCL                                                            0616
*     1 ZZZGTPRM BDY(WORD),         /* GETCONFG PARAMETER LIST       */
*      2 * CHAR(4) INIT('0102F1F6'X),                              0616
*      2 ZZZGTCD PTR,               /* POINTER TO BASIC CDS INFO     */
*      2 ZZZGTAD PTR,               /* POINTER TO RECEIVING BUFFER   */
*      2 ZZZGTCT FIXED(8);          /* NUMBER OF CDS BYTES NEEDED    */
*   ZZZGTAD=ADDR(CDSMAP);           /* POINTER TO RECEIVING BUFFER   */
         L     @14,PTRCDS(,@14)                                    0617
         ST    @14,ZZZGTAD                                         0617
*   ZZZGTCD=ADDR(CDSMAP);           /* POINTER TO BASIC CDS INFO     */
         ST    @14,ZZZGTCD                                         0618
*   ZZZGTCT=20;                     /* NUMBER OF BYTES NEEDED        */
         MVI   ZZZGTCT,X'14'                                       0619
*   R1=ADDR(ZZZGTPRM);              /* POINT TO THE PARM LIST        */
         LA    R1,ZZZGTPRM                                         0620
*   CALL ISTSC029;                  /* CALL THE GETCONFG FUNCTION    */
         L     @15,@CV02838                                        0621
         BALR  @14,@15                                             0621
*   IF R15^=0&                      /* CHECK RETURN FROM GETCONFG  0622
*                                                            @D32JPFR*/
*       R15^=8 THEN                                                0622
         LTR   R15,R15                                             0622
         BZ    @RF00622                                            0622
         C     R15,@CF00058                                        0622
         BE    @RF00622                                            0622
*     DO;                                                          0623
*       NOCDS='1'B;                 /* NO CDS FOUND          @D32JPFR*/
         L     @14,$ACQLIST(,WAPTR)                                0624
         OI    NOCDS(@14),B'00000100'                              0624
*       IF $UPDATE='1'B×            /* SKIP IF UPDATE IS ACTIVE,OR 0625
*                                                            @XM00893*/
*           (ACQCT='1'B&DEVTCODE^=DEVLU) THEN/* NOT AN LU CT @DY00885*/
         L     @10,RCAPTR(,WAPTR)                                  0625
         TM    $UPDATE(@10),B'10000000'                            0625
         BO    @RT00625                                            0625
         TM    ACQCT(@14),B'00100000'                              0625
         BNO   @RF00625                                            0625
         L     @14,PTRPTR2+2376(,WAPTR)                            0625
         CLI   DEVTCODE(@14),X'6D'                                 0625
         BNE   @RT00625                                            0625
*         GOTO A080130;             /* IF SO RETURN          @D32JPFR*/
*       IF CDSSYMB='0'B THEN        /* REMOTE CDS ?          @D32JPFR*/
@RF00625 L     @14,$ACQLIST(,WAPTR)                                0627
         L     @14,PTRCDS(,@14)                                    0627
         TM    CDSSYMB(@14),B'00001000'                            0627
         BNZ   @RF00627                                            0627
*         DO;                       /* NO                    @D32JPFR*/
*                                                                  0628
*           /*********************************************************/
*           /*                                                       */
*           /* ITACONV FROM(CDSUA,4)TO($INBUFR,8) INVOKED            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0629
*           RFY                                                    0629
*             ITATCF BASED(ADDR(CDSUA));/* MAP VARIABLE OVER FROM    */
*           RFY                                                    0630
*             ITATCT BASED(ADDR($INBUFR));/* MAP VARIBABLE OVER TO   */
*           ITATCTS=ITATCT(8+1:8+1);/* SAVE BYTE PAST TO FIELD       */
         LA    @10,2104                                            0631
         ALR   @10,WAPTR                                           0631
         SLR   @03,@03                                             0631
         IC    @03,ITATCT+8(,@10)                                  0631
         ST    @03,ITATCTS                                         0631
*           UNPK(ITATCT(1:8+1),ITATCF(1:4+1));/* EXPAND HEX TO EBCDIC*/
         UNPK  ITATCT(9,@10),ITATCF(5,@14)                         0632
*           TR(ITATCT(1:8),$TRTBL); /* CONVERT FA-FF TO C1-C6        */
         L     @14,RCAPTR(,WAPTR)                                  0633
         L     @14,$TRTBLA(,@14)                                   0633
         TR    ITATCT(8,@10),$TRTBL(@14)                           0633
*           ITATCT(8+1:8+1)=ITATCTS;/* RESTORE BYTE PAST TO FIELD    */
         STC   @03,ITATCT+8(,@10)                                  0634
*         END;                      /*                       @D32JPFR*/
*       ELSE                                                       0636
*         DO;                       /* FOR REMOTE CDS        @D32JPFR*/
         B     @RC00627                                            0636
@RF00627 DS    0H                                                  0637
*           $INBUFR(1:8)='';        /* OTHERWISE             @D32JPFR*/
         MVI   $INBUFR(WAPTR),C' '                                 0637
         MVC   $INBUFR+1(7,WAPTR),$INBUFR(WAPTR)                   0637
*           $INBUFR(1:8)=CDSSYM(1:8);/* SET UP AND ISSUE     @D32JPFR*/
         L     @14,$ACQLIST(,WAPTR)                                0638
         L     @14,PTRCDS(,@14)                                    0638
         MVC   $INBUFR(8,WAPTR),CDSSYM(@14)                        0638
*         END;                      /*                       @D32JPFR*/
*                                                                  0639
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(127)SUB(YES) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0640
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
@RC00627 OI    $TCECM(WAPTR),B'00000001'                           0640
*       R1=ADDR($TCA26);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA26                                           0641
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0642
         BALR  @14,@15                                             0642
*       DCL                                                        0643
*         1 $TCA26,                 /* TCEC PARM LIST                */
*          2 $TCB26 FIXED(32) INIT(127),/* MSG NUMBER                */
*          2 $TCC26 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD26 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE26 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       R15=8;                      /* SET ERROR RETURN CODE TO    0644
*                                      CALLER@D32JPFR                */
         LA    R15,8                                               0644
*       GOTO S30C0210;              /* RETURN TO CALLER      @D32JPFR*/
         B     S30C0210                                            0645
*     END;                                                         0646
*                                                                  0646
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF DEVICE IS A LOGICAL UNIT                     @D32JPFR*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0647
*   IF DEVTCODE=DEVLU THEN          /* IF DEVICE IS AN LU    @D32JPFR*/
@RF00622 LA    @14,2376                                            0647
         ALR   @14,WAPTR                                           0647
         L     @10,PTRPTR2(,@14)                                   0647
         CLI   DEVTCODE(@10),X'6D'                                 0647
         BNE   @RF00647                                            0647
*     DO;                           /* YES                   @D32JPFR*/
*       DVLU='1'B;                  /* SET LU FLAG           @D32JPFR*/
         OI    DVLU(@14),B'00001000'                               0649
*       IF CDSASCII='1'B THEN       /* ASCII MODE ?          @D32JPFR*/
         L     @10,$ACQLIST(,WAPTR)                                0650
         L     @10,PTRCDS(,@10)                                    0650
         TM    CDSASCII(@10),B'10000000'                           0650
         BNO   @RF00650                                            0650
*         DVASCII='1'B;             /* YES                   @D32JPFR*/
         OI    DVASCII(@14),B'00000100'                            0651
*       IF CDSCLASS^='42'X×         /* IF THIS IS NOT A 3270 @D32JPFR*/
*           CDSTYPE^='1D'X THEN     /* THEN                  @D32JPFR*/
@RF00650 L     @14,$ACQLIST(,WAPTR)                                0652
         L     @14,PTRCDS(,@14)                                    0652
         CLI   CDSCLASS(@14),66                                    0652
         BNE   @RT00652                                            0652
         CLI   CDSTYPE(@14),29                                     0652
         BE    @RF00652                                            0652
@RT00652 DS    0H                                                  0653
*         DEVTCODE=DEV2741;         /* INDICATE IT           @D32JPFR*/
         L     @14,PTRPTR2+2376(,WAPTR)                            0653
         MVI   DEVTCODE(@14),X'02'                                 0653
*       ELSE                                                       0654
*         DO;                       /* OTHERWISE             @D32JPFR*/
         B     @RC00652                                            0654
@RF00652 DS    0H                                                  0655
*           IF CDSDEVT='0'B THEN    /* IS DEV A 3277         @D32JPFR*/
         L     @14,$ACQLIST(,WAPTR)                                0655
         L     @14,PTRCDS(,@14)                                    0655
         TM    CDSDEVT(@14),B'01000000'                            0655
         BNZ   @RF00655                                            0655
*             DEVTCODE=DEV3277;     /* YES                   @D32JPFR*/
         L     @14,PTRPTR2+2376(,WAPTR)                            0656
         MVI   DEVTCODE(@14),X'19'                                 0656
*           ELSE                                                   0657
*             DEVTCODE=DEV3284;     /* NO, MUST BE A 3284    @D32JPFR*/
         B     @RC00655                                            0657
@RF00655 L     @14,PTRPTR2+2376(,WAPTR)                            0657
         MVI   DEVTCODE(@14),X'1A'                                 0657
*           IF CDSDEVM='0'B THEN    /* CHECK AND SET         @D32JPFR*/
@RC00655 L     @14,$ACQLIST(,WAPTR)                                0658
         L     @14,PTRCDS(,@14)                                    0658
         TM    CDSDEVM(@14),B'00100000'                            0658
         BNZ   @RF00658                                            0658
*             DEVMCODE=DEVMOD2;     /* APPROPRIATE           @D32JPFR*/
         L     @14,PTRPTR2+2376(,WAPTR)                            0659
         MVI   DEVMCODE(@14),X'01'                                 0659
*           ELSE                                                   0660
*             DEVMCODE=DEVMOD1;     /* MODE                  @D32JPFR*/
         B     @RC00658                                            0660
@RF00658 L     @14,PTRPTR2+2376(,WAPTR)                            0660
         MVI   DEVMCODE(@14),X'00'                                 0660
*         END;                                                     0661
@RC00658 DS    0H                                                  0662
*     END;                                                         0662
*                                                                  0662
@RC00652 DS    0H                                                  0663
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THIS IS A REMOTE DEVICE AND IF SO DETERMINE IF   */
*   /* THE DEVICE IS AN ENDING NODE ( EITHER A TERMINAL OR A         */
*   /* COMPONENT)                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0663
*   IF REMOTE='0'B                  /* IS THIS A REMOTE DEV          */
*     THEN                                                         0663
@RF00647 TM    REMOTE+2376(WAPTR),B'01000000'                      0663
         BZ    @RT00663                                            0663
*     GOTO A080130;                 /* BR IF NO                      */
*                                                                  0664
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE INQUIRE MACRO TO DETERMINE IF THIS IS AN ENDING NODE THE*/
*   /* INQUIRE FUNCTION WILL BUILD A LIST OF NIBS ( EACH A LENGTH OF */
*   /* 44 BYTES). IF WE DIVIDE THE AREA THEY OCCUPY BY 44 WE WILL GET*/
*   /* THE NUMBER OF NIBS BUILT. IF TH COUNT IS 1 THEN THIS IS A     */
*   /* TERMINAL ENTRY. THERWISE A CHECK FOR A COMPONENT ENTRY IS     */
*   /* MADE.                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0665
*   GEN;                                                           0665
       INQUIRE RPL=VERBUFR,AREA=$WORK1,AREALEN=880,OPTCD=(SYN,TERMS),  X
               NIB=M200820
*   RPLPTR=ADDR(VERBUFR);           /* GET RPL WHICH CONTAINS LENGTH
*                                      OF AREA OCCUPIED              */
         LA    @14,VERBUFR                                         0666
         ST    @14,RPLPTR                                          0666
*   IF(RPLRLEN/LENGTH(ISTNIB))=1    /* IS THIS A TERMINAL            */
*     THEN                                                         0667
         L     @14,RPLRLEN(,@14)                                   0667
         SRL   @14,6                                               0667
         C     @14,@CF00075                                        0667
         BNE   @RF00667                                            0667
*     DO;                           /* YES                           */
*S18C0130:                                                         0669
*       ;                                                          0669
S18C0130 DS    0H                                                  0670
*       R1=PTRPTR2;                 /* GET PTR TO SYM NAME           */
*                                                                  0670
         L     R1,PTRPTR2+2376(,WAPTR)                             0670
*       /*************************************************************/
*       /*                                                           */
*       /* GO DETERMINE IF THIS IS A VALID ENDING NODE               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0671
*       CALL I00C0200;                                             0671
         L     @15,@CV02853                                        0671
         BALR  @14,@15                                             0671
*       IF R15<12                   /* IF RET CODE WAS OK            */
*         THEN                                                     0672
         C     R15,@CF00033                                        0672
         BNL   @RF00672                                            0672
*         ENDNODE='1'B;             /* SET ENDING NODE BIT           */
         OI    ENDNODE+2376(WAPTR),B'10000000'                     0673
*     END;                                                         0674
*   ELSE                                                           0675
*     DO;                           /* CODE TO CHECK FOR COMPONENT   */
         B     @RC00667                                            0675
@RF00667 DS    0H                                                  0676
*       K=RPLRLEN/LENGTH(ISTNIB);   /* GET NO. OF NIBS               */
         L     @14,RPLPTR                                          0676
         L     @14,RPLRLEN(,@14)                                   0676
         SRL   @14,6                                               0676
         STH   @14,K                                               0676
*       NIBPTR=ADDR($WORK1);        /* GET ADDR OF WORKAREA          */
         LA    @14,$WORK1                                          0677
         ST    @14,NIBPTR                                          0677
*       DO I=1 TO K;                /* SEARCH NIBS FOR COMPONENT     */
         LA    @14,1                                               0678
         B     @DE00678                                            0678
@DL00678 DS    0H                                                  0679
*         IF DEVSYNME=NIBSYM        /* IF NAMES MATCH THEN           */
*           THEN                                                   0679
         LA    @10,$WORK(,WAPTR)                                   0679
         LA    @03,VERBUFR                                         0679
         CLC   DEVSYNME+20(8,@10),NIBSYM(@03)                      0679
         BE    @RT00679                                            0679
*           GOTO S18C0130;          /* COMPONENT ENTRY               */
*         NIBPTR=NIBPTR+LENGTH(ISTNIB);/* OTHERWISE GET NEXT NIB     */
         LA    @10,64                                              0681
         AL    @10,NIBPTR                                          0681
         ST    @10,NIBPTR                                          0681
*       END;                                                       0682
         AL    @14,@CF00075                                        0682
@DE00678 STH   @14,I                                               0682
         CH    @14,K                                               0682
         BNH   @DL00678                                            0682
*     END;                                                         0683
*                                                                  0683
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE LINE NAME                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0684
*   IFTFB0='00'X;                                                  0684
@RC00667 LA    @14,IFTPL                                           0684
         MVI   IFTFB0(@14),X'00'                                   0684
*   IFTTPPST='1'B;                  /* SET FOR VPOST                 */
         OI    IFTTPPST(@14),B'10000000'                           0685
*   IFTFLNNM='1'B;                                                 0686
         OI    IFTFLNNM(@14),B'00010000'                           0686
*   ACQECB=0;                                                      0687
         SLR   @10,@10                                             0687
         ST    @10,ACQECB                                          0687
*   IFTSYMRT='';                    /* BLANK OUT INITIALLY           */
         MVI   IFTSYMRT(@14),C' '                                  0688
         MVC   IFTSYMRT+1(7,@14),IFTSYMRT(@14)                     0688
*   IFTSYMOV=SYMBN;                                                0689
         MVC   IFTSYMOV(8,@14),SYMBN                               0689
*   R0=ADDR(TIE);                   /* POINT TO ELEMENT      @D32JPPW*/
         LA    R0,TIE                                              0690
*   R1=ADDR(DYPPAB);                /* POINT TO PAB          @D32JPPW*/
         L     @14,RCAPTR(,WAPTR)                                  0691
         L     R1,$CVTSAVE(,@14)                                   0691
         LA    R1,DYPPAB+656(,R1)                                  0691
*   CALL I00C1000;                  /* TPQUE                 @D2JPPPW*/
         L     @15,@CV02694                                        0692
         BALR  @14,@15                                             0692
*   R1=ADDR(ACQECB);                /* POINT TO ECB          @D32JPPW*/
         LA    R1,ACQECB                                           0693
*   CALL I00C1002;                  /* WAIT                  @D32JPPW*/
         L     @15,@CV02695                                        0694
         BALR  @14,@15                                             0694
*   RNNAME=IFTSYMRT;                                               0695
         LA    @14,IFTPL                                           0695
         MVC   RNNAME+2376(8,WAPTR),IFTSYMRT(@14)                  0695
*A080130:                                                          0696
*   ;                                                              0696
A080130  DS    0H                                                  0697
*   R15=0;                          /* SET GOOD RETURN CODE          */
         SLR   R15,R15                                             0697
*S30C0210:                                                         0698
*   ;                                                              0698
*                                                                  0698
S30C0210 DS    0H                                                  0699
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0699
*   R13=SVESC030(2);                /* GET PT R TO SAVE AREA         */
         L     R13,SVESC030+4(,WAPTR)                              0699
*   RETURN;                         /* RETURN                        */
*                                                                  0700
@EL00001 DS    0H                                                  0700
@EF00001 DS    0H                                                  0700
@ER00001 L     @14,12(,@13)                                        0700
         LM    @01,@12,24(@13)                                     0700
         BR    @14                                                 0700
*   /*****************************************************************/
*   /*                                                               */
*   /* ACQUISITION ENTRY POINT PICK UP PARAMETER LIST FROM 4 PAST THE*/
*   /* POINTER                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0701
*S30C0010:                                                         0701
*   ENTRY;                                                         0701
@EP00701 DS    0H                                                  0702
*   R1=R1+4;                                                       0702
         AL    R1,@CF00071                                         0702
*   GOTO S30C0000;                                                 0703
         B     S30C0000                                            0703
*A101720:                                                          0704
*   ;                                                              0704
*                                                                  0704
A101720  DS    0H                                                  0705
*   /*****************************************************************/
*   /*                                                               */
*   /* ACQUISITION CODE TO SUPPORT CUTEST REQUESTS DETERMINE IF THE  */
*   /* GETMAIN (IF IT EXISTS) IS LARGE ENOUGH                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0705
*   R0=(LENGTH(ISTNIB)+LENGTH($TLTPRPL)+LENGTH(WORKFLS))*NUMUNIT;/*
*                                      CALCULATE AREA NEEDED BY    0705
*                                      MULIPLY RPL AND NIB SIZE BY 0705
*                                      NO. OF DEV                    */
         L     @14,$ACQLIST(,WAPTR)                                0705
         L     @14,PTRCDS(,@14)                                    0705
         SLR   R0,R0                                               0705
         IC    R0,NUMUNIT(,@14)                                    0705
         MH    R0,@CH02900                                         0705
*   IF R0>$GETMSZE                  /* IS GETMAIN SIZE LARGE ENOUGH  */
*     THEN                                                         0706
         CH    R0,$GETMSZE(,WAPTR)                                 0706
         BNH   @RF00706                                            0706
*     DO;                           /* IF NOT ,SET RET. CODE INDICAT */
*       R15=16;                                                    0708
         LA    R15,16                                              0708
*       GOTO S30C0210;              /* RETURN TO CALLER              */
         B     S30C0210                                            0709
*     END;                                                         0710
*                                                                  0710
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE COUNTERS AND POINTERS                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0711
*   $OPNDCNT=0;                                                    0711
@RF00706 SLR   @14,@14                                             0711
         STH   @14,$OPNDCNT(,WAPTR)                                0711
*   $OPISCNT=0;                                                    0712
         STH   @14,$OPISCNT(,WAPTR)                                0712
*   $PTRAREA=$GETMPTR;              /* GET ADDR OF WORKAREA          */
         L     @14,$GETMPTR(,WAPTR)                                0713
         ST    @14,$PTRAREA(,WAPTR)                                0713
*   CUTWK1=UNITAD;                  /* GET START OF DEVICE ADDRESSES */
*                                                                  0714
         L     @14,$ACQLIST(,WAPTR)                                0714
         L     @14,PTRCDS(,@14)                                    0714
         L     @14,UNITAD(,@14)                                    0714
         ST    @14,CUTWK1                                          0714
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP LOOP TO ACQUIRE EACH CUTEST DEVICE                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0715
*   DO I=1 TO NUMUNIT;                                             0715
*                                                                  0715
         LA    @14,1                                               0715
         B     @DE00715                                            0715
@DL00715 DS    0H                                                  0716
*     /***************************************************************/
*     /*                                                             */
*     /* ITACONV FROM(CUTWK1)TO(SYMBN) INVOKED                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0716
*     RFY                                                          0716
*       ITATCF BASED(ADDR(CUTWK1)); /* MAP VARIABLE OVER FROM        */
*     RFY                                                          0717
*       ITATCT BASED(ADDR(SYMBN));  /* MAP VARIBABLE OVER TO         */
*     ITATCTS=ITATCT(LENGTH(SYMBN)+1:LENGTH(SYMBN)+1);/* SAVE BYTE 0718
*                                      PAST TO FIELD                 */
         LA    @14,SYMBN                                           0718
         SLR   @10,@10                                             0718
         IC    @10,ITATCT+8(,@14)                                  0718
         ST    @10,ITATCTS                                         0718
*     UNPK(ITATCT(1:LENGTH(SYMBN)+1),ITATCF(1:LENGTH(CUTWK1)+1));/*
*                                      EXPAND HEX TO EBCDIC          */
         LA    @03,CUTWK1                                          0719
         UNPK  ITATCT(9,@14),ITATCF(5,@03)                         0719
*     TR(ITATCT(1:LENGTH(SYMBN)),$TRTBL);/* CONVERT FA-FF TO C1-C6   */
         L     @03,RCAPTR(,WAPTR)                                  0720
         L     @09,$TRTBLA(,@03)                                   0720
         TR    ITATCT(8,@14),$TRTBL(@09)                           0720
*     ITATCT(LENGTH(SYMBN)+1:LENGTH(SYMBN)+1)=ITATCTS;/* RESTORE BYTE
*                                      PAST TO FIELD                 */
         STC   @10,ITATCT+8(,@14)                                  0721
*/* SETUP UNIT ADDR INTO                                             */
*                                                                  0722
*                                   /* A SYM NAME                    */
*     SYMBN(1:3)=SYMBN(6:8);        /* POSITION NAME                 */
         MVC   SYMBN(3),SYMBN+5                                    0722
*     SYMBN(4:8)='';                                               0723
         MVI   SYMBN+3,C' '                                        0723
         MVC   SYMBN+4(4),SYMBN+3                                  0723
*     NIBPTR=ADDR(M200820);         /* GET PTR TO NIB                */
         LA    @14,M200820                                         0724
         ST    @14,NIBPTR                                          0724
*     NIBSYM=SYMBN;                 /* MOVE IN SYM NAME INTO NIB     */
         LA    @14,VERBUFR                                         0725
         MVC   NIBSYM(8,@14),SYMBN                                 0725
*     R1=$PTRAREA+LENGTH(WORKFLS);                                 0726
         LA    @14,12                                              0726
         AL    @14,$PTRAREA(,WAPTR)                                0726
         LR    R1,@14                                              0726
*     R6=LENGTH(ISTNIB);                                           0727
         LA    R6,64                                               0727
*     BUFFRPL(1:LENGTH($TLTPRPL))=$TLTPRPL;/* GET RPL                */
*                                                                  0728
         MVC   BUFFRPL(120,@14),$TLTPRPL(@03)                      0728
*     /***************************************************************/
*     /*                                                             */
*     /* THE UNIT ADDRESS ENTERED IS AN LDNCB TO VTAM BY ISSUING AN  */
*     /* INQUIRE FUNCTION FOR THE LDNCB WE WILL OBTAIN THE TERMINAL  */
*     /* ENTRY WHICH WE WILL OPNDST PREEMPT                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0729
*     GEN;                                                         0729
   INQUIRE RPL=(R1),AREA=$WORK1,AREALEN=(R6),OPTCD=(SYN,TERMS),        X
               NIB=M200820
*     SYMBN=$WORK1(13:20);          /* OBTAIN THE TERMINAL NAME      */
*                                                                  0730
         MVC   SYMBN(8),$WORK1+12                                  0730
*     /***************************************************************/
*     /*                                                             */
*     /* THE DET WILL BE SEARCH TO ENSURE THAT THE DEVICE HAS NOT    */
*     /* BEEN ALREADY ACQUIRED.                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0731
*     DO J=1 TO $DEVCNTS;                                          0731
         LA    @14,1                                               0731
         B     @DE00731                                            0731
@DL00731 DS    0H                                                  0732
*       IF $ACQRED(J)='1'B&         /* DETERMINE IF THIS IS A        */
*           $NOTDEV(J)='0'B&        /* VALID ENTRY                   */
*           $SYSMN(J)=SYMBN         /* AND IF THE NAMES MATCH        */
*         THEN                                                     0732
         MH    @14,@CH00318                                        0732
         ST    @14,@TF00001                                        0732
         ALR   @14,WAPTR                                           0732
         TM    $ACQRED-68(@14),B'01000000'                         0732
         BNO   @RF00732                                            0732
         TM    $NOTDEV-68(@14),B'10000000'                         0732
         BNZ   @RF00732                                            0732
         LR    @14,WAPTR                                           0732
         AL    @14,@TF00001                                        0732
         CLC   $SYSMN-68(8,@14),SYMBN                              0732
         BE    @RT00732                                            0732
*         GOTO A101115;             /* BR IF ALL CONDITIONS MET      */
*     END;                                                         0734
@RF00732 LA    @14,1                                               0734
         AH    @14,J                                               0734
@DE00731 STH   @14,J                                               0734
         CH    @14,$DEVCNTS(,WAPTR)                                0734
         BNH   @DL00731                                            0734
*     DO J=1 TO 16;                                                0735
*                                                                  0735
         LA    @14,1                                               0735
         STH   @14,J                                               0735
@DL00735 DS    0H                                                  0736
*       /*************************************************************/
*       /*                                                           */
*       /* SEARCH THE PREVIOUS CUTEST ENTRIES ( IF ANY) FOR THE      */
*       /* DEVICE                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0736
*       IF ADDR($CUTABLE(J))=PTRCDS /* ANY PREVIOUS ENTRY            */
*         THEN                                                     0736
         MH    @14,@CH00503                                        0736
         LA    @10,$CUTABLE-5(@14,WAPTR)                           0736
         L     @03,$ACQLIST(,WAPTR)                                0736
         C     @10,PTRCDS(,@03)                                    0736
         BE    @RT00736                                            0736
*         GOTO A101120;             /* BR IF NO                      */
*       IF CUTWK1=>$CUTABLE(J,1:4)&                                0738
*                                                                  0738
*       /*************************************************************/
*       /*                                                           */
*       /* IS THEIS DEVICE IN THOSE ENTRY(IES)                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0738
*           CUTWK1=<$CUTABLE(J,1:4)+$CUTABLE(J,5:5) THEN           0738
         L     @10,CUTWK1                                          0738
         ST    @14,@TF00001                                        0738
         ALR   @14,WAPTR                                           0738
         ICM   @03,15,$CUTABLE-5(@14)                              0738
         CLR   @10,@03                                             0738
         BL    @RF00738                                            0738
         L     @14,@TF00001                                        0738
         SLR   @09,@09                                             0738
         IC    @09,$CUTABLE-1(@14,WAPTR)                           0738
         ALR   @03,@09                                             0738
         CLR   @10,@03                                             0738
         BNH   @RT00738                                            0738
*         GOTO A101115;             /* BR IF YES                     */
*     END;                                                         0740
@RF00738 LA    @14,1                                               0740
         AH    @14,J                                               0740
         STH   @14,J                                               0740
         C     @14,@CF00064                                        0740
         BNH   @DL00735                                            0740
*A101120:                                                          0741
*     ;                                                            0741
*                                                                  0741
A101120  DS    0H                                                  0742
*     /***************************************************************/
*     /*                                                             */
*     /* SET UP RPL AND NIB FOR OPNDST                               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0742
*     COUNTFI=20;                                                  0742
         L     @14,$PTRAREA(,WAPTR)                                0742
         MVC   COUNTFI(2,@14),@CH00320                             0742
*     COUNTNM=SYMBN;                                               0743
         MVC   COUNTNM(8,@14),SYMBN                                0743
*     $OPISCNT=$OPISCNT+1;          /* ADD 1 TO OPEN ISSUED COUNTER  */
         LA    @10,1                                               0744
         AH    @10,$OPISCNT(,WAPTR)                                0744
         STH   @10,$OPISCNT(,WAPTR)                                0744
*     BUFFRPL(1:LENGTH($TLTPRPL))=$TLTPRPL;/* GET RPL                */
         LA    @10,12                                              0745
         ALR   @10,@14                                             0745
         L     @03,RCAPTR(,WAPTR)                                  0745
         MVC   BUFFRPL(120,@10),$TLTPRPL(@03)                      0745
*     NIBPTR=$PTRAREA+LENGTH($TLTPRPL)+LENGTH(WORKFLS);/* PTR FOR NIB*/
         AL    @14,@CF00069                                        0746
         ST    @14,NIBPTR                                          0746
*     RFY                                                          0747
*       ISTNIB BASED(NIBPTR);       /* POINT TO NIB           @DM0912*/
*     BUFFNIB(1:LENGTH(ISTNIB))=M200820;/* GET NIB                   */
         MVC   BUFFNIB(64,@14),M200820                             0748
*     NIBSYM=SYMBN;                 /* MOVE IN SYM NAME              */
         MVC   NIBSYM(8,@14),SYMBN                                 0749
*     PTRUSRFD=WAPTR;               /* MOVE IN PTR TO TWA            */
         ST    WAPTR,PTRUSRFD(,@14)                                0750
*     R1=$PTRAREA+LENGTH(WORKFLS);                                 0751
         LR    R1,@10                                              0751
*     R15=NIBPTR;                                                  0752
*                                                                  0752
         LR    R15,@14                                             0752
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE OPNDST WITH PREEMPT                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0753
*     GEN;                                                         0753
         OPNDST RPL=(R1),NIB=(R15),OPTCD=(ASY,ACQUIRE),                X
               EXIT=M080330
*     IF R15^=0 THEN                                               0754
         LTR   R15,R15                                             0754
         BZ    @RF00754                                            0754
*       $OPNDCNT=$OPNDCNT+1;                                       0755
         LA    @14,1                                               0755
         AH    @14,$OPNDCNT(,WAPTR)                                0755
         STH   @14,$OPNDCNT(,WAPTR)                                0755
*     $PTRAREA=($PTRAREA+LENGTH(ISTNIB)+LENGTH($TLTPRPL)+LENGTH(WORKFLS
*         )+3)/4*4;                 /* POINT THEN ROUND UP   @XM00894*/
@RF00754 LA    @04,199                                             0756
         AL    @04,$PTRAREA(,WAPTR)                                0756
         SRDA  @04,32                                              0756
         D     @04,@CF00071                                        0756
         SLA   @05,2                                               0756
         ST    @05,$PTRAREA(,WAPTR)                                0756
*     NIBPTR=ADDR(M200820);         /* GET PTR TO NIB                */
         LA    @14,M200820                                         0757
         ST    @14,NIBPTR                                          0757
*     CUTWK1=CUTWK1+1;              /* GET NEXT UNIT ADDRESS         */
         LA    @14,1                                               0758
         AL    @14,CUTWK1                                          0758
         ST    @14,CUTWK1                                          0758
*A101115:                                                          0759
*     ;                                                            0759
A101115  DS    0H                                                  0760
*   END;                                                           0760
*                                                                  0760
         LA    @14,1                                               0760
         AH    @14,I                                               0760
@DE00715 STH   @14,I                                               0760
         L     @10,$ACQLIST(,WAPTR)                                0760
         L     @10,PTRCDS(,@10)                                    0760
         SLR   @03,@03                                             0760
         IC    @03,NUMUNIT(,@10)                                   0760
         CR    @14,@03                                             0760
         BNH   @DL00715                                            0760
*   /*****************************************************************/
*   /*                                                               */
*   /* AFTER ALL OPNDST ARE ISSUED , WE DETERMINE IF THEY HAVE       */
*   /* COMPLETED                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0761
*   IF $OPNDCNT=$OPISCNT            /* ALL OPENS DONE                */
*     THEN                                                         0761
         CLC   $OPNDCNT(2,WAPTR),$OPISCNT(WAPTR)                   0761
         BE    @RT00761                                            0761
*     GOTO A080130;                 /* BR IF YES                     */
*                                                                  0762
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL OPENS ARE NOT DONE WE WILL WAIT IN 30 SECOND INTERVALS.*/
*   /* AFTER EACH INTERVAL WE WILL PUT OUT MESSAGE 539 TO DETERMINE  */
*   /* WHAT ACTION SHOULD BE TAKEN                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0763
*A101833:                                                          0763
*   ;                                                              0763
*                                                                  0763
A101833  DS    0H                                                  0764
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE END OF THE 30 SECOND INTERVAL BY CALL THE WAITIO      */
*   /* TIMING ROUTINE                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0764
*   R1=ADDR(TIMEALLW);              /* GET PARMLIST                  */
         LA    R1,TIMEALLW                                         0764
*   CALL S2FC1000;                  /* GO TO WAITIO                  */
         L     @15,@CV02872                                        0765
         BALR  @14,@15                                             0765
*   GOTO S30C0210;                  /* SET WAITING BIT AND RETURN    */
         B     S30C0210                                            0766
*M101836:                                                          0767
*   ;                                                              0767
*                                                                  0767
M101836  DS    0H                                                  0768
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF ALL OPENS ARE DONE AND IF NOT DETERMINE IF       */
*   /* MESSAGE 539 SHOULD BE ISSUED                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0768
*   IF $OPNDCNT=$OPISCNT            /* ARE ALL OPENS DONE            */
*     THEN                                                         0768
         CLC   $OPNDCNT(2,WAPTR),$OPISCNT(WAPTR)                   0768
         BE    @RT00768                                            0768
*     GOTO A080130;                 /* BR IF YES                     */
*   CALL ISTSC026;                  /* GET CURRENT TIME              */
         L     @15,@CV02752                                        0770
         BALR  @14,@15                                             0770
*   IF R1<$TIMEALW                  /* HAS 30 SEC EXPIRED            */
*     THEN                                                         0771
         C     R1,$TIMEALW(,WAPTR)                                 0771
         BL    @RT00771                                            0771
*     GOTO M090830;                 /* BR IF NO                      */
*                                                                  0772
*   /*****************************************************************/
*   /*                                                               */
*   /* IF TIME HAS EXPIRED , MESSAGE 539 IS ISSUED. DEPENDING ON THE */
*   /* REPLY (Y) WE WILL CONTINUE WAITING (N) WE GIVE A BAD RETURN   */
*   /* CODE AND RELEASE CUTEST DEVICES                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0773
*A101841:                                                          0773
*   ;                                                              0773
*                                                                  0773
A101841  DS    0H                                                  0774
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(539)INCT(61) INVOKED                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0774
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0774
*   R1=ADDR($TCA28);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA28                                           0775
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0776
         BALR  @14,@15                                             0776
*   DCL                                                            0777
*     1 $TCA28,                     /* TCEC PARM LIST                */
*      2 $TCB28 FIXED(32) INIT(539),/* MSG NUMBER                    */
*      2 $TCC28 FIXED(32) INIT(61), /* INCT LEN                      */
*      2 $TCD28 BIT(8) INIT('01000000'B),/* FLAG                     */
*      2 $TCE28 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK ISSUE MSG 0777
*                                      539                           */
*A101842:                                                          0778
*   ;                                                              0778
*                                                                  0778
A101842  DS    0H                                                  0779
*   /*****************************************************************/
*   /*                                                               */
*   /* CODE TO DECODE REPLY                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0779
*   IF $INBUFR(2:2)='Y'             /* CONTINUE WAITING??            */
*     THEN                                                         0779
         CLI   $INBUFR+1(WAPTR),C'Y'                               0779
         BE    @RT00779                                            0779
*     GOTO M101836;                 /* BR IF YES                     */
*   IF $INBUFR(2:2)='N'             /* RELEASE DEVICES??             */
*     THEN                                                         0781
         CLI   $INBUFR+1(WAPTR),C'N'                               0781
         BNE   @RF00781                                            0781
*     DO;                           /* YES                           */
*       BADDVPTR=PTRCDS;            /* SET UP PARM LIST TO RELEASE   */
         L     @14,$ACQLIST(,WAPTR)                                0783
         L     @14,PTRCDS(,@14)                                    0783
         ST    @14,BADDVPTR                                        0783
*       RLB='04'X;                  /* SET RELEASE CODE              */
         MVI   RLB,X'04'                                           0784
*       R1=ADDR(RELEASE);           /* GET PTR TO PARMLIST           */
*                                                                  0785
         LA    R1,RELEASE                                          0785
*       /*************************************************************/
*       /*                                                           */
*       /* GO TO RELEASE MODULE VIA RCM TO RELEASE CUTEST DEVICES    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0786
*       CALL #EXIT;                                                0786
         L     @15,#EXITA(,WAPTR)                                  0786
         BALR  @14,@15                                             0786
*       R15=4;                      /* SET BAD RET CODE              */
         LA    R15,4                                               0787
*       GOTO S30C0210;              /* RETURN TO CALLER              */
         B     S30C0210                                            0788
*     END;                                                         0789
*                                                                  0789
*   /*****************************************************************/
*   /*                                                               */
*   /* MESSAGE 299 IS ISSUED IF AN INVALID REPLY IS GIVEN TCEC       */
*   /* MSGN(299)INCT(61) INVOKED                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0790
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
@RF00781 OI    $TCECM(WAPTR),B'00000001'                           0790
*   R1=ADDR($TCA29);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA29                                           0791
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0792
         BALR  @14,@15                                             0792
*   DCL                                                            0793
*     1 $TCA29,                     /* TCEC PARM LIST                */
*      2 $TCB29 FIXED(32) INIT(299),/* MSG NUMBER                    */
*      2 $TCC29 FIXED(32) INIT(61), /* INCT LEN                      */
*      2 $TCD29 BIT(8) INIT('01000000'B),/* FLAG                     */
*      2 $TCE29 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK ISSUE MSG 0793
*                                      299                           */
*   GOTO A101842;                   /* GO TO REPLY DECODE            */
*                                                                  0794
         B     A101842                                             0794
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF CUTEST SUPPORT CODE                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0795
*M080330:                                                          0795
*   ;                                                              0795
*                                                                  0795
M080330  DS    0H                                                  0796
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE GETS CONTROL FROM VTAM WHEN AN OPNDST WITH       */
*   /* PREEMPT IS COMPLETED . THIS EXIT ROUTINE WILL POST THE CORRECT*/
*   /* TWA WITH A SUCCESSFUL OR UNSUCCESSFUL CODE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0796
*   RFY                                                            0796
*    (R3,                                                          0796
*     R14,                                                         0796
*     R5,                                                          0796
*     R6) RSTD;                     /* RESTRICT REGS         @ZD10884*/
*   RFY                                                            0797
*     ISTNIB BASED(R3);             /* SET REG 3 TO POINT TO NIB     */
*   RFY                                                            0798
*     IFGRPL BASED(R5);             /* SET REG 5 TO POINT TO RPL     */
*   R3=R1+LENGTH($TLTPRPL);         /* GET PTR TO NIB                */
         LA    R3,120                                              0799
         ALR   R3,R1                                               0799
*   WAPTR=PTRUSRFD;                 /* GET PTR TO TWA                */
         L     WAPTR,PTRUSRFD(,R3)                                 0800
*   R11=$R4SAVE;                    /* PICK UP BASE REG              */
         L     R11,$R4SAVE(,WAPTR)                                 0801
*   R12=R11+4095;                                                  0802
         LA    R12,4095                                            0802
         ALR   R12,R11                                             0802
*   R5=R1;                                                         0803
         LR    R5,R1                                               0803
*   R6=R14;                         /* SAVE RETURN ADDR              */
*                                                                  0804
         LR    R6,R14                                              0804
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE CHECK MACRO TO CLEAN UP RPL                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0805
*   R13=ADDR($EXITSAV);             /* GET SAVE AREA                 */
         L     R13,RCAPTR(,WAPTR)                                  0805
         LA    R13,$EXITSAV(,R13)                                  0805
*   GEN(  CHECK  RPL=(R5) ) ;       /* ISSUE CHECK MACRO             */
           CHECK  RPL=(R5)
*   IF RPLRTNCD^='00'X              /* WAS THERE A GOOD RET CODE     */
*       ×RPLFDB2^='00'X             /* CHECK FOR EITHER BYTE NOT ZERO
*                                                            @DA04692*/
*     THEN                                                         0807
         CLI   RPLRTNCD(R5),0                                      0807
         BNE   @RT00807                                            0807
         CLI   RPLFDB2(R5),0                                       0807
         BE    @RF00807                                            0807
@RT00807 DS    0H                                                  0808
*     DO;                           /* IF NO                         */
*       IF IINDEX>19                /* WAS IT A CUTEST CALL          */
*         THEN                                                     0809
         LR    @10,R5                                              0809
         AL    @10,@CF02929                                        0809
         LH    @10,IINDEX(,@10)                                    0809
         C     @10,@CF02893                                        0809
         BH    @RT00809                                            0809
*         GOTO A101331;             /* GO POT OPEN                   */
*       $NOTDEV(IINDEX)='1'B;       /* OPEN FAILED SO MARK ENTRY     */
*       $ACQRED(IINDEX)='1'B;       /* AS NOT A DEV                  */
         MH    @10,@CH00318                                        0812
         ST    @10,@TF00001                                        0812
         ALR   @10,WAPTR                                           0812
         OI    $NOTDEV-68(@10),B'11000000'                         0812
*       $FEEDBCK(IINDEX,1)=RPLRTNCD;/* SAVE ERROR FEEDBACK    @DM0906*/
         SLR   @10,@10                                             0813
         IC    @10,RPLRTNCD(,R5)                                   0813
         L     @07,@TF00001                                        0813
         STC   @10,$FEEDBCK-68(@07,WAPTR)                          0813
*       $FEEDBCK(IINDEX,2)=RPLFDB2; /*                       @DA04686*/
         SLR   @10,@10                                             0814
         IC    @10,RPLFDB2(,R5)                                    0814
         L     @07,@TF00001                                        0814
         STC   @10,$FEEDBCK-67(@07,WAPTR)                          0814
*       GOTO A101331;                                              0815
         B     A101331                                             0815
*     END;                                                         0816
*   IF IINDEX>19                    /* WAS IT A CUTEST REQUEST       */
*     THEN                                                         0817
@RF00807 LR    @10,R5                                              0817
         AL    @10,@CF02929                                        0817
         LH    @10,IINDEX(,@10)                                    0817
         C     @10,@CF02893                                        0817
         BNH   @RF00817                                            0817
*     DO;                                                          0818
*       IFTFB0='00'X;                                              0819
         LA    @10,IFTPL                                           0819
         MVI   IFTFB0(@10),X'00'                                   0819
*       IFTTPPST='1'B;              /* SET FOR VPOST                 */
         OI    IFTTPPST(@10),B'10000000'                           0820
*       IFTTBIO='1'B;                                              0821
         OI    IFTTBIO(@10),B'00001000'                            0821
*       ACQECB=0;                                                  0822
         SLR   @07,@07                                             0822
         ST    @07,ACQECB                                          0822
*       IFTSYMOV=INAME;                                            0823
         LR    @07,R5                                              0823
         AL    @07,@CF02930                                        0823
         MVC   IFTSYMOV(8,@10),INAME(@07)                          0823
*       R0=ADDR(TIE);               /* POINT TO ELEMENT      @D32JPPW*/
         LA    R0,TIE                                              0824
*       R1=ADDR(DYPPAB);            /* POINT TO PAB          @D32JPPW*/
         L     @10,RCAPTR(,WAPTR)                                  0825
         L     R1,$CVTSAVE(,@10)                                   0825
         LA    R1,DYPPAB+656(,R1)                                  0825
*       CALL I00C1000;              /* TPQUE                 @D32JPPW*/
         L     @15,@CV02694                                        0826
         BALR  @14,@15                                             0826
*       R1=ADDR(ACQECB);            /* POINT TO ECB          @D32JPPW*/
         LA    R1,ACQECB                                           0827
*       CALL I00C1002;              /* WAIT                  @D32JPPW*/
         L     @15,@CV02695                                        0828
         BALR  @14,@15                                             0828
*       GOTO A101331;                                              0829
         B     A101331                                             0829
*     END;                                                         0830
*   $OPND(IINDEX)=$OPND(IINDEX)+1;  /* POST DET COUNTER              */
@RF00817 LR    @10,R5                                              0831
         AL    @10,@CF02929                                        0831
         LH    @10,IINDEX(,@10)                                    0831
         MH    @10,@CH00318                                        0831
         LA    @07,1                                               0831
         AH    @07,$OPND-68(@10,WAPTR)                             0831
         STH   @07,$OPND-68(@10,WAPTR)                             0831
*   $CID(IINDEX)=RPLARG;            /* STORE CID INTO DET            */
         L     @07,RPLARG(,R5)                                     0832
         ST    @10,@TF00001                                        0832
         ALR   @10,WAPTR                                           0832
         STCM  @07,15,$CID-68(@10)                                 0832
*   IF $DEVLU(IINDEX)='0'B THEN     /* IN TEST IF NOT AN LU  @D32JPFR*/
         LR    @10,WAPTR                                           0833
         AL    @10,@TF00001                                        0833
         TM    $DEVLU-68(@10),B'00001000'                          0833
         BNZ   @RF00833                                            0833
*     DO;                           /* THE DEVICE IS NOT AN LU     0834
*                                                            @D32JPFR*/
*       IFTFB0='00'X;                                              0835
         LA    @10,IFTPL                                           0835
         MVI   IFTFB0(@10),X'00'                                   0835
*       IFTTPPST='1'B;              /* SET FOR VPOST                 */
         OI    IFTTPPST(@10),B'10000000'                           0836
*       IFTFPABP='1'B;                                             0837
         OI    IFTFPABP(@10),B'00000001'                           0837
*       IF ACQCT='0'B THEN                                         0838
         L     @07,$ACQLIST(,WAPTR)                                0838
         TM    ACQCT(@07),B'00100000'                              0838
         BNZ   @RF00838                                            0838
*         IFTTBON='1'B;                                            0839
         OI    IFTTBON(@10),B'10000000'                            0839
*       IFTSTDAF='1'B;                                             0840
@RF00838 LA    @10,IFTPL                                           0840
         OI    IFTSTDAF(@10),B'00100000'                           0840
*       IF $REMOTE(IINDEX)='0'B&$ENDNODE(IINDEX)='1'B THEN         0841
         LR    @07,R5                                              0841
         AL    @07,@CF02929                                        0841
         LH    @07,IINDEX(,@07)                                    0841
         MH    @07,@CH00318                                        0841
         ALR   @07,WAPTR                                           0841
         TM    $ENDNODE-68(@07),B'10000000'                        0841
         BNO   @RF00841                                            0841
         TM    $REMOTE-68(@07),B'01000000'                         0841
         BNZ   @RF00841                                            0841
*         IFTFLDNP='1'B;                                           0842
         OI    IFTFLDNP(@10),B'00000010'                           0842
*       IFTSYMOV=$SYSMN(IINDEX);                                   0843
@RF00841 LA    @10,IFTPL                                           0843
         LR    @07,R5                                              0843
         AL    @07,@CF02929                                        0843
         LH    @07,IINDEX(,@07)                                    0843
         MH    @07,@CH00318                                        0843
         ST    @07,@TF00001                                        0843
         ALR   @07,WAPTR                                           0843
         MVC   IFTSYMOV(8,@10),$SYSMN-68(@07)                      0843
*       IFTPABPR=ADDR($IFTOUT(IINDEX));                            0844
         L     @07,@TF00001                                        0844
         LA    @07,$IFTOUT-68(@07,WAPTR)                           0844
         ST    @07,IFTPABPR(,@10)                                  0844
*       ACQECB=0;                                                  0845
         SLR   @10,@10                                             0845
         ST    @10,ACQECB                                          0845
*       R0=ADDR(TIE);               /* POINT TO ELEMENT      @D32JPPW*/
         LA    R0,TIE                                              0846
*       R1=ADDR(DYPPAB);            /* POINT TO PAB          @D32JPPW*/
         L     @10,RCAPTR(,WAPTR)                                  0847
         L     R1,$CVTSAVE(,@10)                                   0847
         LA    R1,DYPPAB+656(,R1)                                  0847
*       CALL I00C1000;              /* TPQUE                 @D32JPPW*/
         L     @15,@CV02694                                        0848
         BALR  @14,@15                                             0848
*       R1=ADDR(ACQECB);            /* POINT TO ECB          @D32JPPW*/
         LA    R1,ACQECB                                           0849
*       CALL I00C1002;              /* WAIT                  @D32JPPW*/
         L     @15,@CV02695                                        0850
         BALR  @14,@15                                             0850
*       $LDNCBPT(IINDEX)=IFTLONPR;                                 0851
         LR    @10,R5                                              0851
         AL    @10,@CF02929                                        0851
         LH    @10,IINDEX(,@10)                                    0851
         MH    @10,@CH00318                                        0851
         LA    @07,IFTPL                                           0851
         L     @07,IFTLONPR(,@07)                                  0851
         ST    @07,$LDNCBPT-68(@10,WAPTR)                          0851
*     END;                          /* END OF NOT LU CODE    @D32JPFR*/
*A101331:                                                          0853
*   ;                                                              0853
@RF00833 DS    0H                                                  0853
A101331  DS    0H                                                  0854
*   $OPNDCNT=$OPNDCNT+1;            /* ADD 1 TO OPEN DONE COUNTER    */
         LA    @10,1                                               0854
         AH    @10,$OPNDCNT(,WAPTR)                                0854
         STH   @10,$OPNDCNT(,WAPTR)                                0854
*J060700:                                                          0855
*   ;                                                              0855
J060700  DS    0H                                                  0856
*   R14=R6;                                                        0856
         LR    R14,R6                                              0856
*   GEN(    BR    14);              /* RETURN TO VTAM                */
*                                                                  0857
             BR    14
*   /*****************************************************************/
*   /*                                                               */
*   /* END OF ISTSC030                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0858
*/* TPEPILOG                                                         */
*                                                                  0858
*   GEN(PRINT OFF);                                                0858
         PRINT OFF
*   GEN(PRINT ON);                                                 0859
*                                                                  0859
         PRINT ON
*/* END OF TPEPILOG                                                  */
*/* ATDSPLY   INVOKED.                                               */
*/********************************************************************/
*/* THE FOLLOWING ATBUILD INCLUSIONS HAVE BEEN MADE IN THIS          */
*/* COMPILATION:                                                     */
*/*             ISTPROCD                                             */
*/*             ISTDEVCH                                             */
*/*             ISTNIB                                               */
*/*             ISTAVT                                               */
*/*             ISTPAB                                               */
*/*             ISTLOK                                               */
*/*             ISTDYPAB                                             */
*/*             ISTRPH                                               */
*/*             ISTATCVT                                             */
*/*             ISTTIE                                               */
*/*             ISTIFTPL                                             */
*/*             ISTBIND                                              */
*/********************************************************************/
*/* END OF ATDSPLY.                                                  */
*                                                                  0860
*   END                                                            0860
*                                                                  0860
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                       */
*                                                                  0860
*       ;                                                          0860
         B     @EL00001                                            0860
@DATA    DS    0H
@CH00503 DC    H'5'
@CH00318 DC    H'68'
@CH02900 DC    H'196'
@SM02916 MVC   BUFFBIND(0,@14),BINDBUFR
@SM02920 MVC   $INBUFR-1(0,@14),$SYSMN-68(@03)
@SM02922 MVC   $INBUFR-1(0,@14),$LINENME-68(@03)
         DS    0F
@AL00001 DS    2A
@TF00001 DS    F
         DS    0F
@CF00075 DC    F'1'
@CH00075 EQU   @CF00075+2
@CF00139 DC    F'2'
@CH00139 EQU   @CF00139+2
@CF00084 DC    F'3'
@CF00071 DC    F'4'
@CF00058 DC    F'8'
@CH00058 EQU   @CF00058+2
@CF00033 DC    F'12'
@CF00064 DC    F'16'
@CF02893 DC    F'19'
@CF00320 DC    F'20'
@CH00320 EQU   @CF00320+2
@CF00069 DC    F'132'
@CF02929 DC    F'-12'
@CF02930 DC    F'-8'
@CF00712 DC    XL4'0C'
@CV02694 DC    V(I00C1000)
@CV02695 DC    V(I00C1002)
@CV02705 DC    V(I01C1000)
@CV02719 DC    V(S2FC2000)
@CV02752 DC    V(ISTSC026)
@CV02756 DC    V(S20CEC03)
@CV02815 DC    V(ISTCC015)
@CV02838 DC    V(ISTSC029)
@CV02853 DC    V(I00C0200)
@CV02872 DC    V(S2FC1000)
         DS    0D
RPLPTR   DS    A
CVTPTR   DS    A
NIBPTR   DS    A
BINDPTR  DS    A
CUTWK1   DS    F
APTRCDS  DS    A
ACQECB   DC    F'0'
BINDLEN  DS    F
ITATCTS  DS    F
R        DS    H
P        DS    H
I        DS    H
J        DS    H
K        DS    H
T30SECS  DC    XL2'0020'
@TS00001 DS    CL6
@CC02699 DC    C'BASIC   '
@CC02700 DC    C'RECORD  '
@CC02738 DC    C'OPN'
@CB02656 DC    X'0000'
SYMBN    DS    CL8
         DS    CL1
$WORK1   DS    CL960
VERBUFR  DS    CL120
BINDBUFR DS    CL36
TABSRCH  DS    CL9
         ORG   TABSRCH
RCAADDR  DS    AL4
PTRTONM  DS    AL4
@NM00123 DC    X'02'
         ORG   TABSRCH+9
         DS    CL3
TIMEALLW DS    CL8
         ORG   TIMEALLW
@NM00124 DC    AL4(T30SECS)
@NM00125 DC    AL4($TIMEALW)
         ORG   TIMEALLW+8
RELEASE  DS    CL9
         ORG   RELEASE
@NM00126 DC    XL4'0102F3F1'
BADDVPTR DS    AL4
RLB      DS    FL1
         ORG   RELEASE+9
         DS    CL3
TIE      DS    CL16
         ORG   TIE
@NM00127 DC    X'18'
@NM00128 DC    AL1(16)
@NM00129 DC    AL1(0)
@NM00130 DC    AL1(5)
@NM00131 DC    A(0)
@NM00132 DC    AL4(IFTPL)
@NM00133 DC    A(0)
         ORG   TIE+16
IFTPL    DS    CL44
         ORG   IFTPL
@NM00134 DC    X'0000'
@NM00135 DC    X'8000'
@NM00136 DC    AL4(ACQECB)
@NM00137 DS    CL8
@NM00138 DS    CL8
@NM00139 DC    A(0)
@NM00140 DC    A(0)
@NM00141 DC    AL1(0)
@NM00142 DS    CL11
         ORG   IFTPL+44
SUPRMODE DC    X'0C'
         DS    CL3
$TCA16   DS    CL13
         ORG   $TCA16
$TCB16   DC    A(383)
$TCC16   DC    A(0)
$TCD16   DC    B'10000000'
$TCE16   DC    X'FFFFFFFF'
         ORG   $TCA16+13
         DS    CL3
$TCA17   DS    CL13
         ORG   $TCA17
$TCB17   DC    A(381)
$TCC17   DC    A(61)
$TCD17   DC    B'11000000'
$TCE17   DC    B'11110000'
         DC    XL3'0'
         ORG   $TCA17+13
         DS    CL3
$TCA18   DS    CL13
         ORG   $TCA18
$TCB18   DC    A(299)
$TCC18   DC    A(61)
$TCD18   DC    B'01000000'
$TCE18   DC    X'FFFFFFFF'
         ORG   $TCA18+13
         DS    CL3
$TCA20   DS    CL13
         ORG   $TCA20
$TCB20   DC    A(380)
$TCC20   DC    A(0)
$TCD20   DC    B'10000000'
$TCE20   DC    B'01000000'
         DC    XL3'0'
         ORG   $TCA20+13
         DS    CL3
$TCA21   DS    CL13
         ORG   $TCA21
$TCB21   DC    A(380)
$TCC21   DC    A(0)
$TCD21   DC    B'10000000'
$TCE21   DC    B'10000000'
         DC    XL3'0'
         ORG   $TCA21+13
         DS    CL3
$TCA22   DS    CL13
         ORG   $TCA22
$TCB22   DC    A(380)
$TCC22   DC    A(0)
$TCD22   DC    B'10000000'
$TCE22   DC    B'00100000'
         DC    XL3'0'
         ORG   $TCA22+13
         DS    CL3
$TCA23   DS    CL13
         ORG   $TCA23
$TCB23   DC    A(380)
$TCC23   DC    A(0)
$TCD23   DC    B'10000000'
$TCE23   DC    B'00010000'
         DC    XL3'0'
         ORG   $TCA23+13
         DS    CL3
ZZZGTPRM DS    CL13
         ORG   ZZZGTPRM
@NM00143 DC    X'0102F1F6'
ZZZGTCD  DS    AL4
ZZZGTAD  DS    AL4
ZZZGTCT  DS    FL1
         ORG   ZZZGTPRM+13
         DS    CL3
$TCA26   DS    CL13
         ORG   $TCA26
$TCB26   DC    A(127)
$TCC26   DC    A(0)
$TCD26   DC    B'10000000'
$TCE26   DC    X'FFFFFFFF'
         ORG   $TCA26+13
         DS    CL3
$TCA28   DS    CL13
         ORG   $TCA28
$TCB28   DC    A(539)
$TCC28   DC    A(61)
$TCD28   DC    B'01000000'
$TCE28   DC    X'FFFFFFFF'
         ORG   $TCA28+13
         DS    CL3
$TCA29   DS    CL13
         ORG   $TCA29
$TCB29   DC    A(299)
$TCC29   DC    A(61)
$TCD29   DC    B'01000000'
$TCE29   DC    X'FFFFFFFF'
         ORG   $TCA29+13
         DS    CL3
PATCH    DC    40F'0'
ISTSC030 CSECT
*                                                          /*@ZA20801*/
M200821  NIB
ISTSC030 CSECT
*                                                          /*@ZA20801*/
SIMRPL   RPL AM=VTAM
FILL     DS  D
ISTSC030 CSECT
M200820 NIB MODE=BASIC,LISTEND=YES
ISTSC030 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
WAPTR    EQU   @02
R0       EQU   @00
R1       EQU   @01
R3       EQU   @03
R5       EQU   @05
R6       EQU   @06
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
RPHPTR   EQU   @01
R10      EQU   @10
R2       EQU   @02
R4       EQU   @04
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
         ENTRY M080330
ATCLCPTR EQU   1032
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$CVTSAVE EQU   $POINTER+4
$TRTBLA  EQU   $POINTER+124
$CONSTNT EQU   $RCAAREA+244
$TLTPRPL EQU   $CONSTNT+20
$RCAFLG  EQU   $RCAAREA+604
$UPDATE  EQU   $RCAFLG
$EXITSAV EQU   $RCAAREA+864
$TRTBL   EQU   0
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$CTEQTT  EQU   $TOTFLG1
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$HIMOREC EQU   $CDA+60
$GETMPTR EQU   $CDA+88
$PTRAREA EQU   $CDA+92
$TIMEALW EQU   $CDA+96
$GETMSZE EQU   $CDA+110
$OPNDCNT EQU   $CDA+112
$OPISCNT EQU   $CDA+114
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$DEVCHNG EQU   $FLAG1
$FLAG2   EQU   $COMMFLG+1
$NDR     EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$FLAG3   EQU   $COMMFLG+2
$NEWAP   EQU   $FLAG3
$FLAG4   EQU   $COMMFLG+3
$APRQPER EQU   $FLAG4
$ACTOPND EQU   $FLAG4
$FLAG8   EQU   $COMMFLG+7
$TCECM   EQU   $FLAG8
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
$CTINDX  EQU   $DEVUNAD
@NM00044 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$DVSPRM  EQU   $EVNCPLT
$ATTNEXP EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$DVSEQNO EQU   $OPIS
$OPND    EQU   $DEVTECB+2
$DVINCT  EQU   $DEVTBLE+26
$DEVFLG3 EQU   $DEVTBLE+27
$NOTDEV  EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$SIOFLG  EQU   $DEVFLG3
$SYSMN   EQU   $DEVTBLE+28
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$DVLN    EQU   $SSCPDAF
$LDNCBPT EQU   $DEVTBLE+48
$CID     EQU   $DEVTBLE+52
$RNINFO  EQU   $DEVTBLE+56
$LINENME EQU   $RNINFO
$DEVFLG5 EQU   $RNINFO+8
$ENDNODE EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$DEVFLG4 EQU   $DEVTBLE+65
$FEEDBCK EQU   $DEVTBLE+66
$DEVCNTS EQU   TOLTEPWA+1464
$INBUFR  EQU   TOLTEPWA+2104
$TRMINPT EQU   TOLTEPWA+2184
$WORK    EQU   TOLTEPWA+2376
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00052 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00052+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00052+10
$ENXX    EQU   @NM00052+15
$IMITX   EQU   $ENXX
$R4SAVE  EQU   TOLTEPWA+2804
$CUTABLE EQU   TOLTEPWA+2868
$ACQLIST EQU   TOLTEPWA+2956
SVESC033 EQU   TOLTEPWA+3160
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVESC030 EQU   TOLTEPWA+3808
SVECC011 EQU   TOLTEPWA+4024
#EXIT    EQU   0
CDSMAP   EQU   0
CDSUA    EQU   CDSMAP
CDSMFCT  EQU   CDSMAP+4
CDSFEAT  EQU   CDSMFCT+1
CDSASCII EQU   CDSFEAT
CDSDEVT  EQU   CDSFEAT
CDSDEVM  EQU   CDSFEAT
CDSCLASS EQU   CDSMFCT+2
CDSTYPE  EQU   CDSMFCT+3
CDSFLAG  EQU   CDSMAP+9
CDSSYMB  EQU   CDSFLAG
CDSSYMBN EQU   CDSMAP+12
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLRLEN  EQU   RPLCOMN+48
RPLBUFL  EQU   RPLCOMN+52
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLUSFLD EQU   RPLVTEXT+16
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVMCODE EQU   ISTDEVCH+2
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTNIB   EQU   0
NIBUSER  EQU   ISTNIB+8
NIBSYM   EQU   ISTNIB+12
NIBMODE  EQU   ISTNIB+20
NIBFLGS  EQU   ISTNIB+40
NIBFLG1  EQU   NIBFLGS
NIBLMODE EQU   ISTNIB+48
NIBNDAR  EQU   ISTNIB+56
ISTAVT   EQU   0
ISTAS49  EQU   ISTAVT+4
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00063 EQU   LOKCHNG+2
ISTDYPAB EQU   0
DYPPAB   EQU   ISTDYPAB+16
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVTIPB EQU   ISTATCVT+656
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00074 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00076 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTTIE   EQU   0
TIETIEA  EQU   ISTTIE+4
TIESNA   EQU   ISTTIE+8
TIERPHA  EQU   ISTTIE+12
ISTIFTPL EQU   0
IFTFB0   EQU   ISTIFTPL
IFTTBON  EQU   IFTFB0
IFTSTDAF EQU   IFTFB0
IFTFLNNM EQU   IFTFB0
IFTTBIO  EQU   IFTFB0
IFTFLDNP EQU   IFTFB0
IFTFPABP EQU   IFTFB0
IFTSB0   EQU   ISTIFTPL+2
IFTTPPST EQU   IFTSB0
IFTSYMDV EQU   ISTIFTPL+8
IFTSYMRT EQU   ISTIFTPL+16
IFTPABPR EQU   ISTIFTPL+24
IFTLDNPR EQU   ISTIFTPL+28
IFTRETCD EQU   ISTIFTPL+32
ISTBIND  EQU   0
BINFMTY  EQU   ISTBIND
BINFM    EQU   ISTBIND+1
BINPRIP  EQU   ISTBIND+3
BINSECP  EQU   ISTBIND+4
BINCMNP  EQU   ISTBIND+5
BINCMNP2 EQU   ISTBIND+6
BINTSU   EQU   ISTBIND+7
BINRPACE EQU   BINTSU+1
BINRUSZ  EQU   BINTSU+2
BINSRUSZ EQU   BINRUSZ
BINPRUSZ EQU   BINRUSZ+1
BINPRSVC EQU   ISTBIND+13
BINLUP   EQU   BINPRSVC
BINPSCHR EQU   BINPRSVC+1
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
BACKSAVE EQU   0
WORKFLS  EQU   0
COUNTFI  EQU   WORKFLS
COUNTNM  EQU   WORKFLS+4
BUFFRPL  EQU   0
BUFFNIB  EQU   0
BUFFBIND EQU   0
PARMLIST EQU   0
PTRCDS   EQU   PARMLIST
PFLAGS   EQU   PARMLIST+4
TSTMSK   EQU   PFLAGS
ACQVER   EQU   PFLAGS
ACQCT    EQU   PFLAGS
CUTSTON  EQU   PFLAGS
NOCDS    EQU   PFLAGS
@NM00115 EQU   0
UNITAD   EQU   @NM00115
NUMUNIT  EQU   @NM00115+4
CDSSYM   EQU   @NM00115+12
PARM001  EQU   0
PTRSYM01 EQU   PARM001
PTRWK001 EQU   PARM001+4
RETPMLST EQU   0
PTRPTR1  EQU   RETPMLST
PTRPTR2  EQU   RETPMLST+4
RNNAME   EQU   RETPMLST+8
@NM00117 EQU   RETPMLST+16
@NM00118 EQU   @NM00117
ENDNODE  EQU   @NM00118
REMOTE   EQU   @NM00118
DVLU     EQU   @NM00118
DVASCII  EQU   @NM00118
RETPART2 EQU   0
DEVSYNME EQU   RETPART2
CHARDEV  EQU   RETPART2+8
IINDEX   EQU   0
INAME    EQU   0
ITATCF   EQU   0
ITATCT   EQU   0
GOODRPL  EQU   0
ISTRPL   EQU   0
SYMBN001 EQU   0
RCAPTR   EQU   $RCA
IFTSYMOV EQU   IFTSYMDV
IFTLONPR EQU   IFTLDNPR
BINLUP1  EQU   BINPSCHR
BINLUS   EQU   BINPSCHR
BINFMF1  EQU   BINLUS
BINRSV09 EQU   BINFMF1
BINDSPF1 EQU   BINLUS+2
BINMEDIA EQU   BINLUS+4
BINLUP2  EQU   BINPSCHR
BINLUP3  EQU   BINPSCHR
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
DEFUSERF EQU   NIBUSER
PTRUSRFD EQU   NIBUSER
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC033
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
BINRSV26 EQU   BINLUP3
BINRSV15 EQU   BINLUP2+10
BINPRESZ EQU   BINLUP2+9
BINRSV14 EQU   BINLUP2
BINRSV13 EQU   BINMEDIA
BINDISK  EQU   BINMEDIA
BINXCHNG EQU   BINMEDIA
BINCARD  EQU   BINMEDIA
BINDOCMT EQU   BINMEDIA
BINRSV17 EQU   BINDSPF1+1
BINTRNDS EQU   BINDSPF1
BINRSV12 EQU   BINDSPF1
BINVSDS  EQU   BINDSPF1
BINVTDS  EQU   BINDSPF1
BINHFDS  EQU   BINDSPF1
BININTR  EQU   BINDSPF1
BINRSV11 EQU   BINRSV09+1
BINXFPD  EQU   BINRSV09+1
BINCSDS  EQU   BINRSV09+1
BINQDSI  EQU   BINRSV09+1
BINRSV16 EQU   BINRSV09+1
BINARRR  EQU   BINRSV09
BINSIDS  EQU   BINRSV09
BINSAI   EQU   BINRSV09
BINSDSI  EQU   BINRSV09
BINKDDSI EQU   BINRSV09
BINPDIR  EQU   BINFMF1
BINCMPCT EQU   BINFMF1
BINDESTS EQU   BINFMF1
BINSLUS1 EQU   BINLUP1+6
BINPLUS1 EQU   BINLUP1+1
BINDSP1  EQU   BINLUP1
BINFMHS1 EQU   BINLUP1
@NM00122 EQU   CHARDEV+2
DEVMCDE  EQU   CHARDEV+1
DEVTCDE  EQU   CHARDEV
@NM00121 EQU   @NM00117+1
@NM00120 EQU   @NM00118
@NM00119 EQU   @NM00118
@NM00116 EQU   @NM00115+5
@NM00114 EQU   PFLAGS
@NM00113 EQU   PFLAGS
@NM00112 EQU   WORKFLS+2
RPLSEQNO EQU   RPLOF60+6
@NM00111 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00110 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00109 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00108 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00107 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00106 EQU   RPLRESP
@NM00105 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00104 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00103 EQU   RPLVTFL1
@NM00102 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00101 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00100 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00099 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00085 EQU   CVTFIX+248
@NM00084 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
BINUSE   EQU   ISTBIND+36
BINUSEL  EQU   ISTBIND+35
BINPRIM  EQU   ISTBIND+27
BINPRIML EQU   ISTBIND+26
BINRSV05 EQU   ISTBIND+25
BINLUTYP EQU   BINLUP
BINRSV27 EQU   BINLUP
BINRSV08 EQU   BINTSU+4
BINPRUSE EQU   BINPRUSZ
BINPRUSM EQU   BINPRUSZ
BINSRUSE EQU   BINSRUSZ
BINSRUSM EQU   BINSRUSZ
BINRPACM EQU   BINRPACE
BINRSV07 EQU   BINRPACE
BINRSV06 EQU   BINTSU
BINCONR  EQU   BINCMNP2
BINRCHN  EQU   BINCMNP2
BINMDIBK EQU   BINCMNP2
BINBKFS  EQU   BINCMNP2
BINRCVR  EQU   BINCMNP2
BINFMTRM EQU   BINCMNP2
BINRSV04 EQU   BINCMNP
BINALT   EQU   BINCMNP
BINBKTR  EQU   BINCMNP
BINBRAK  EQU   BINCMNP
BINFMHD  EQU   BINCMNP
BINRSV03 EQU   BINCMNP
BINSSEB  EQU   BINSECP
BINSCMP  EQU   BINSECP
BINRSV02 EQU   BINSECP
BINSCHNR EQU   BINSECP
BINSMCH  EQU   BINSECP
BINSCHN  EQU   BINSECP
BINPSEB  EQU   BINPRIP
BINPCMP  EQU   BINPRIP
BINRSV01 EQU   BINPRIP
BINPCHNR EQU   BINPRIP
BINPMCH  EQU   BINPRIP
BINPCHN  EQU   BINPRIP
BINTS    EQU   ISTBIND+2
BINTYPE  EQU   BINFMTY
BINFMT   EQU   BINFMTY
@NM00083 EQU   ISTIFTPL+36
@NM00082 EQU   ISTIFTPL+33
IFTECBPR EQU   ISTIFTPL+4
@NM00081 EQU   ISTIFTPL+3
@NM00080 EQU   IFTSB0
IFTDEVOF EQU   IFTSB0
IFTRDTLK EQU   IFTSB0
IFTVOCLK EQU   IFTSB0
IFTFB1   EQU   ISTIFTPL+1
IFTTBIOF EQU   IFTFB0
IFTTBOFF EQU   IFTFB0
TIEPTR2  EQU   TIERPHA
TIEPTR1  EQU   TIESNA
TIEGATE  EQU   TIETIEA
TIEREQ   EQU   ISTTIE+3
TIERETCD EQU   ISTTIE+2
TIELNGTH EQU   ISTTIE+1
TIETYPE  EQU   ISTTIE
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00079 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00078 EQU   ATCAOSM+333
@NM00077 EQU   @NM00076
ATCSNUF  EQU   @NM00076
ATCOPKL  EQU   @NM00076
ATCABEN  EQU   @NM00076
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00075 EQU   @NM00074
ATCVTMAB EQU   @NM00074
@NM00073 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00072 EQU   ISTATCVT+819
@NM00071 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00070 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00069 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00068 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHCRR   EQU   ISTRPH+32
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00067 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00066 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00065 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
LOKXCL   EQU   @NM00063
LOKPRY   EQU   @NM00063
@NM00064 EQU   @NM00063
@NM00062 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
ISTPDAVP EQU   ISTAVT+40
ISTAVR01 EQU   ISTAVT+38
ISTVTTP  EQU   ISTAVT+36
ISTAGTWT EQU   ISTAVT+34
ISTATRT  EQU   ISTAVT+32
ISTARID  EQU   ISTAVT+30
ISTX1    EQU   ISTAVT+29
ISTPHNM  EQU   ISTAVT+24
ISTAPSEX EQU   ISTAVT+20
ISTVTTIK EQU   ISTAVT+18
AVTASID  EQU   ISTAVT+16
ISTAPSTA EQU   ISTAVT+12
ISTAS53  EQU   ISTAVT+8
ISTAHIP  EQU   ISTAS49
ISTACVT  EQU   ISTAVT
NIBRESV  EQU   ISTNIB+60
NIBEXLST EQU   ISTNIB+44
NIBLIMIT EQU   ISTNIB+42
@NM00061 EQU   ISTNIB+41
@NM00060 EQU   NIBFLG1
@NM00059 EQU   NIBFLG1
@NM00058 EQU   NIBFLG1
@NM00057 EQU   NIBFLG1
NIBSHLTP EQU   NIBFLG1
NIBSDAPP EQU   NIBFLG1
NIBCON   EQU   NIBFLG1
NIBLAST  EQU   NIBFLG1
NIBPROCD EQU   ISTNIB+36
NIBDEVCH EQU   ISTNIB+28
NIBCID   EQU   ISTNIB+4
NIBLEN   EQU   ISTNIB+3
NIBCONDN EQU   ISTNIB+2
NIBRSV01 EQU   ISTNIB+1
NIBID    EQU   ISTNIB
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00098 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00097 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00096 EQU   RPLOPT12
@NM00095 EQU   RPLOPT12
@NM00094 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00093 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00092 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00091 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00090 EQU   RPLRBAR+3
@NM00089 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00088 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00087 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00086 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
CDSEXARA EQU   CDSMAP+20
CDSEXTM  EQU   CDSFLAG+2
CDSEXTB  EQU   CDSFLAG+2
CDSTMERB EQU   CDSFLAG+2
@NM00056 EQU   CDSFLAG+1
CDSDVPRO EQU   CDSFLAG+1
CDSNTPRI EQU   CDSFLAG+1
CDSLINCN EQU   CDSFLAG
CDSREMSY EQU   CDSFLAG
CDS2CHAN EQU   CDSFLAG
CDSEXTPR EQU   CDSFLAG
CDSFEVOL EQU   CDSFLAG
CDSSHAR  EQU   CDSFLAG
CDSFPMD  EQU   CDSFLAG
CDSBYTCT EQU   CDSMAP+8
@NM00055 EQU   CDSFEAT
CDSMODEL EQU   CDSMFCT
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC025 EQU   TOLTEPWA+3088
@NM00054 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00053 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00052+14
$NSXX    EQU   @NM00052+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00052+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00052
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
$SLTBL   EQU   TOLTEPWA+1468
$CDEVPT  EQU   TOLTEPWA+1466
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00051 EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
@NM00050 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$CEINTRP EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00049 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00048 EQU   $DEVCDSF
@NM00047 EQU   $DEVCDSF
@NM00046 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00044+1
$DEVCTLU EQU   @NM00044+1
$DEVCHAN EQU   @NM00044
@NM00045 EQU   @NM00044
@NM00043 EQU   $COMMFLG+15
@NM00042 EQU   $COMMFLG+14
@NM00041 EQU   $COMMFLG+13
@NM00040 EQU   $COMMFLG+12
@NM00039 EQU   $COMMFLG+11
@NM00038 EQU   $COMMFLG+10
@NM00037 EQU   $COMMFLG+9
@NM00036 EQU   $COMMFLG+8
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00035 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00034 EQU   $FLAG8
@NM00033 EQU   $COMMFLG+6
@NM00032 EQU   $COMMFLG+5
@NM00031 EQU   $COMMFLG+4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$OPCOM   EQU   $FLAG4
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
@NM00030 EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00029 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00028 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00027 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$LOWADDR EQU   $OLTPTR
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00026 EQU   $CDA
@NM00025 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00024 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00023 EQU   $TOTFLG1
@NM00022 EQU   $TOTFLG1
@NM00021 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
@NM00020 EQU   $TOTFLG1
@NM00019 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00018 EQU   $OLTFLG2
@NM00017 EQU   $OLTFLG2
@NM00016 EQU   $OLTFLG2
@NM00015 EQU   $OLTFLG2
@NM00014 EQU   $OLTFLG2
@NM00013 EQU   $OLTFLG2
@NM00012 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00011 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00010 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00009 EQU   $PDEVFLG
@NM00008 EQU   $PDEVFLG
@NM00007 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00006 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00005 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
$TLTEND  EQU   $RCAAREA+936
$TRASCII EQU   $RCAAREA+608
@NM00004 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CUTESTB EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
@NM00003 EQU   $CONSTNT+4
@NM00002 EQU   $CONSTNT+2
$USECNT  EQU   $CONSTNT
$CURRTWA EQU   $POINTER+140
$CTNAME  EQU   $POINTER+132
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00001 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB2 EQU   $POINTER+28
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$LSTAREA EQU   $POINTER+12
$FSTAREA EQU   $POINTER+8
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00255 EQU   XXX
@RT00259 EQU   A101720
@RT00268 EQU   M080215
@RT00271 EQU   M070435
@RT00274 EQU   M030410
@RT00276 EQU   M030510
@RT00311 EQU   M080198
@RC00294 EQU   M080215
@RT00339 EQU   M080197
@RT00382 EQU   M090155
@RT00396 EQU   M101836
@RT00422 EQU   M090250
@RF00427 EQU   M090250
@RF00436 EQU   M090250
@RT00451 EQU   M090205
@RT00454 EQU   M090830
@RT00462 EQU   M090306
@RT00501 EQU   S21C1830
@RT00505 EQU   S30C0210
@RT00508 EQU   J060630
@RT00537 EQU   S30C0060
@RT00553 EQU   S30C0110
@RF00558 EQU   @RC00556
@RF00589 EQU   S30C0070
@RT00625 EQU   A080130
@RT00663 EQU   A080130
@RF00672 EQU   @RC00667
@RT00679 EQU   S18C0130
@RT00732 EQU   A101115
@RT00736 EQU   A101120
@RT00738 EQU   A101115
@RT00761 EQU   A080130
@RT00768 EQU   A080130
@RT00771 EQU   M090830
@RT00779 EQU   M101836
@RT00809 EQU   A101331
@ENDDATA EQU   *
         END   ISTSC030,(C'PLS1421',0701,77194)
