         TITLE 'ISTSC022-CUTEST,CONTROL UNIT TEST FUNCTION             *
                        '
* IBM DISK OPERATING SYSTEM
* TOLTEP - 5745-SC-TLT
   ISEQ  73,80
ISTSC022 CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'ISTSC022  75.184'                                 0002
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0002
         STM   @00,@12,20(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
*   CVTPTR=R1;                      /* SAVE PARM LIST PTR            */
         LR    CVTPTR,R1                                           0058
*   R3=R13;                         /* REGISTER                      */
         LR    R3,R13                                              0059
*   R13=ADDR(SVESC022);             /* LINKAGE                       */
         LA    R13,SVESC022(,WAPTR)                                0060
*   SVESC022(2)=R3;                                                0061
         ST    R3,SVESC022+4(,WAPTR)                               0061
*   BACKSAVE(3)=R13;                /* GET BACK SAVE PTR             */
         ST    R13,BACKSAVE+8(,R3)                                 0062
*   RCAPTR=$RCA;                    /* GET PTR TO RCA                */
         L     RCAPTR,$RCA(,WAPTR)                                 0063
*   IF $CUTESTB='1'B                /* WAS A CUTEST ENTERED          */
*     THEN                          /* YES SET IND TO 1              */
         TM    $CUTESTB(RCAPTR),B'00010000'                        0064
         BNO   @RF00064                                            0064
*     CUTESTIN=1;                                                  0065
         MVI   CUTESTIN,X'01'                                      0065
*   ELSE                            /* NO SET IND TO 0               */
*     CUTESTIN=0;                                                  0066
         B     @RC00064                                            0066
@RF00064 MVI   CUTESTIN,X'00'                                      0066
*   $CUTESTB='1'B;                  /* CUTEST IN PROGRESS            */
@RC00064 OI    $CUTESTB(RCAPTR),B'00010000'                        0067
*   R10=$CUTEXT;                                                   0068
         L     R10,$CUTEXT(,CVTPTR)                                0068
*   R11=1;                                                         0069
         LA    R11,1                                               0069
*   IF $CUTLEVL='02'X THEN          /* ONLY 1 EXTENT ALLOWED         */
         CLI   $CUTLEVL(CVTPTR),X'02'                              0070
         BE    @RT00070                                            0070
*     GO TO S22C010;                /* YES                           */
*   R11=$NUMEXTS;                   /* NUMBER OF CUTEST REQ          */
         SLR   R11,R11                                             0072
         IC    R11,$NUMEXTS(,CVTPTR)                               0072
*   IF R11<=0×                      /* CHECK VALIDITY                */
*       R11>16 THEN                                                0073
         LTR   R11,R11                                             0073
         BNP   @RT00073                                            0073
         C     R11,@CF00061                                        0073
         BNH   @RF00073                                            0073
@RT00073 DS    0H                                                  0074
*     DO;                                                          0074
*       R15=12;                     /* SET BAD RET CODE              */
         LA    R15,12                                              0075
*       GO TO S22C300;              /* RETURN TO CALLER              */
         B     S22C300                                             0076
*     END;                                                         0077
*   IF $CUCODE^='01'X THEN          /* ONLY CODE 01 SUPPORTED        */
@RF00073 CLI   $CUCODE(CVTPTR),X'01'                               0078
         BE    @RF00078                                            0078
*     DO;                                                          0079
*       R15=4;                      /* SET BAD RC                    */
         LA    R15,4                                               0080
*       GO TO S22C300;              /* RETURN                        */
         B     S22C300                                             0081
*     END;                                                         0082
*S22C010:                                                          0083
*   IF R10=0×BASEADR=0 THEN         /* BASE ADDRESS = 0              */
@RF00078 DS    0H                                                  0083
S22C010  SLR   @14,@14                                             0083
         CR    R10,@14                                             0083
         BE    @RT00083                                            0083
         C     @14,BASEADR(,R10)                                   0083
         BNE   @RF00083                                            0083
@RT00083 DS    0H                                                  0084
*     DO;                           /* YES ERROR                     */
*       R15=12;                     /* SET BAD RC                    */
         LA    R15,12                                              0085
*       GO TO S22C300;              /* RETURN                        */
         B     S22C300                                             0086
*     END;                                                         0087
*   IF $USECNT^=1 THEN              /* MORE THAN 1 LOGON?            */
@RF00083 CLC   $USECNT(2,RCAPTR),@CH00072                          0088
         BE    @RF00088                                            0088
*     DO;                           /* YES FUNCTION NOT AVAILABLE    */
*       R15=8;                      /* SET BAD R/C                   */
         LA    R15,8                                               0090
*       GO TO S22C300;              /* RETURN                        */
         B     S22C300                                             0091
*     END;                                                         0092
*   R6=EXTENT;                      /* PICK UP EXTENT                */
@RF00088 SLR   R6,R6                                               0093
         IC    R6,EXTENT(,R10)                                     0093
*   IF R6=0 THEN                    /* EXTENT = ZERO                 */
         LTR   R6,R6                                               0094
         BNZ   @RF00094                                            0094
*     DO;                           /* YES,ERROR                     */
*       R15=12;                                                    0096
         LA    R15,12                                              0096
*       GO TO S22C300;              /* RETURN                        */
         B     S22C300                                             0097
*     END;                                                         0098
*   IF $CUCNT=16 THEN               /* MORE THAN 16 CUTEST CALLS?    */
@RF00094 CLC   $CUCNT(2,WAPTR),@CH00061                            0099
         BNE   @RF00099                                            0099
*     DO;                           /* YES,ERROR                     */
*       R15=8;                      /* SET BAD R/C                   */
         LA    R15,8                                               0101
*       GO TO S22C300;              /* RETURN                        */
         B     S22C300                                             0102
*     END;                                                         0103
*   IF $CUCNT>0 THEN                /* MULTI CUTEST CALLS            */
@RF00099 LH    @14,$CUCNT(,WAPTR)                                  0104
         LTR   @14,@14                                             0104
         BNP   @RF00104                                            0104
*     DO;                           /* YES                           */
*       DO I=1 TO $CUCNT;           /* DUPLICATE REQUEST?            */
         LA    I,1                                                 0106
         B     @DE00106                                            0106
@DL00106 DS    0H                                                  0107
*         IF $CUTABLE(I)=CUDATA THEN                               0107
         LR    @14,I                                               0107
         MH    @14,@CH00348                                        0107
         ALR   @14,WAPTR                                           0107
         CLC   $CUTABLE-5(5,@14),CUDATA(R10)                       0107
         BE    @RT00107                                            0107
*           GO TO S22C250;          /* YES RETURN                    */
*       END;                                                       0109
         AL    I,@CF00072                                          0109
@DE00106 CH    I,$CUCNT(,WAPTR)                                    0109
         BNH   @DL00106                                            0109
*     END;                                                         0110
*   VERACQ='0'B;                    /* SET TO VERIFY                 */
@RF00104 NI    VERACQ,B'10111111'                                  0111
*   VERPARM=ADDR(CDSINFO);          /* PT TO DUMMY CDS FOR ACQ       */
         LA    @14,CDSINFO                                         0112
         ST    @14,VERPARM                                         0112
*   R1=ADDR(VERPARM);               /* INIT CDS SYM NAME             */
         LA    R1,VERPARM                                          0113
*   DO I=1 TO R6;                   /* VERIFY ALL DEVS ON CU         */
         LA    I,1                                                 0114
         B     @DE00114                                            0114
@DL00114 DS    0H                                                  0115
*     UNIT=BASEADR+I-1;                                            0115
         LR    @14,I                                               0115
         AL    @14,BASEADR(,R10)                                   0115
         BCTR  @14,0                                               0115
         STH   @14,UNIT                                            0115
*     CALL ISTSC030;                /* CALL ACQ MODULE TO VERIFY     */
         L     @15,@CV00708                                        0116
         BALR  @14,@15                                             0116
*     IF R15^=0 THEN                /* ERROR?                        */
         LTR   R15,R15                                             0117
         BZ    @RF00117                                            0117
*       DO;                         /* YES                           */
*         R15=8;                    /* SET RET CODE                  */
         LA    R15,8                                               0119
*         GO TO S22C300;            /* RETURN                        */
         B     S22C300                                             0120
*       END;                                                       0121
*     DO J=1 TO 2 BY 1;             /* MAKE SURE                     */
@RF00117 LA    @14,1                                               0122
         STH   @14,J                                               0122
@DL00122 DS    0H                                                  0123
*       IF SYMNAME=$SYSMN(J) THEN   /* DEV AN ALT PRT OR CT          */
         L     @09,SYMPTR+2376(,WAPTR)                             0123
         MH    @14,@CH00373                                        0123
         ALR   @14,WAPTR                                           0123
         CLC   SYMNAME(8,@09),$SYSMN-68(@14)                       0123
         BNE   @RF00123                                            0123
*         DO;                       /* YES,ERROR                     */
*           R15=8;                  /* SET BAD R/C                   */
         LA    R15,8                                               0125
*           GO TO S22C300;          /* RETURN                        */
         B     S22C300                                             0126
*         END;                                                     0127
*     END;                                                         0128
@RF00123 LA    @14,1                                               0128
         AH    @14,J                                               0128
         STH   @14,J                                               0128
         C     @14,@CF00137                                        0128
         BNH   @DL00122                                            0128
*   END;                                                           0129
         AL    I,@CF00072                                          0129
@DE00114 CR    I,R6                                                0129
         BNH   @DL00114                                            0129
*S22C100:                                                          0130
*   IF $OPCOM='1'B THEN             /* SYSTEM CONSOLE REQ.?          */
S22C100  TM    $OPCOM(WAPTR),B'10000000'                           0130
         BO    @RT00130                                            0130
*     GO TO S22C115;                /* YES TAKE BRANCH               */
*   $INBUFR=$INBUFR&&$INBUFR;       /* CLEAR MSG BUFFER              */
         XC    $INBUFR(80,WAPTR),$INBUFR(WAPTR)                    0132
*   $INBUFR(1:8)=$SYSMN(1);         /* MOVE CT NME TO MSG            */
*                                                                  0133
         MVC   $INBUFR(8,WAPTR),$SYSMN(WAPTR)                      0133
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(247)MSGMSK('80000000'X)SUB(YES)DIR(NET) INVOKED     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0134
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0134
*   R1=ADDR($TCA09);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA09                                           0135
*   CALL S20CEC03;                  /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00713                                        0136
         BALR  @14,@15                                             0136
*   DCL                                                            0137
*     1 $TCA09,                     /* TCEC PARM LIST                */
*      2 $TCB09 FIXED(32) INIT(247),/* MSG NUMBER                    */
*      2 $TCC09 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD09 BIT(8) INIT('10001000'B),/* FLAG                     */
*      2 $TCE09 CHAR(4) INIT('80000000'X);/* MSSAGE MASK             */
*                                                                  0137
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(BASEADR,4)TO(CUFLD,4) INVOKED                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0138
*   DCL                                                            0138
*    (ITATCF,                                                      0138
*     ITATCT) CHAR(*) BASED;        /* GENERATE WORK VARABLES        */
*   DCL                                                            0139
*     ITATCTS FIXED;                /* TEMP SPOT FOR ALTERED BYTE    */
*   RFY                                                            0140
*     ITATCF BASED(ADDR(BASEADR));  /* MAP VARIABLE OVER FROM        */
*   RFY                                                            0141
*     ITATCT BASED(ADDR(CUFLD));    /* MAP VARIBABLE OVER TO         */
*   ITATCTS=ITATCT(4+1:4+1);        /* SAVE BYTE PAST TO FIELD       */
         LA    @14,CUFLD                                           0142
         SLR   ITATCTS,ITATCTS                                     0142
         IC    ITATCTS,ITATCT+4(,@14)                              0142
*   UNPK(ITATCT(1:4+1),ITATCF(1:4+1));/* EXPAND HEX TO EBCDIC        */
         UNPK  ITATCT(5,@14),ITATCF(5,R10)                         0143
*   TR(ITATCT(1:4),$TRTBL);         /* CONVERT FA-FF TO C1-C6        */
         L     @09,$TRTBLA(,RCAPTR)                                0144
         TR    ITATCT(4,@14),$TRTBL(@09)                           0144
*   ITATCT(4+1:4+1)=ITATCTS;        /* RESTORE BYTE PAST TO FIELD    */
         STC   ITATCTS,ITATCT+4(,@14)                              0145
*   $INBUFR=MSG247;                 /* MOVE MSG TO MSG BUFFER        */
*                                                                  0146
         MVI   $INBUFR+48(WAPTR),C' '                              0146
         MVC   $INBUFR+49(31,WAPTR),$INBUFR+48(WAPTR)              0146
         MVC   $INBUFR(48,WAPTR),MSG247                            0146
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(247)MSGMSK('40000000'X)SUB(YES)DIR(NET) INVOKED     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0147
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0147
*   R1=ADDR($TCA11);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA11                                           0148
*   CALL S20CEC03;                  /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00713                                        0149
         BALR  @14,@15                                             0149
*   DCL                                                            0150
*     1 $TCA11,                     /* TCEC PARM LIST                */
*      2 $TCB11 FIXED(32) INIT(247),/* MSG NUMBER                    */
*      2 $TCC11 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD11 BIT(8) INIT('10001000'B),/* FLAG                     */
*      2 $TCE11 CHAR(4) INIT('40000000'X);/* MSSAGE MASK             */
*                                                                  0150
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(247)MSGMSK('20000000'X)INCT(1)DIR(NET) INVOKED      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0151
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0151
*   R1=ADDR($TCA12);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA12                                           0152
*   CALL S20CEC03;                  /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00713                                        0153
         BALR  @14,@15                                             0153
*   DCL                                                            0154
*     1 $TCA12,                     /* TCEC PARM LIST                */
*      2 $TCB12 FIXED(32) INIT(247),/* MSG NUMBER                    */
*      2 $TCC12 FIXED(32) INIT(1),  /* INCT LEN                      */
*      2 $TCD12 BIT(8) INIT('01001000'B),/* FLAG                     */
*      2 $TCE12 CHAR(4) INIT('20000000'X);/* MSSAGE MASK             */
*S22C110:                                                          0155
*                                                                  0155
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK RESPONSE FROM PERMISSION MESSAGE                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0155
*   IF^($INBUFR(2)='Y'×$INBUFR(2)='N')×($INBUFR(1)>1&$INBUFR(3)^=',')
*     THEN                                                         0155
S22C110  CLI   $INBUFR+1(WAPTR),C'Y'                               0155
         BE    @GL00003                                            0155
         CLI   $INBUFR+1(WAPTR),C'N'                               0155
         BNE   @RT00155                                            0155
@GL00003 CLI   $INBUFR(WAPTR),1                                    0155
         BNH   @RF00155                                            0155
         CLI   $INBUFR+2(WAPTR),C','                               0155
         BE    @RF00155                                            0155
@RT00155 DS    0H                                                  0156
*     DO;                                                          0156
*                                                                  0156
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(299)INCT(61) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0157
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0157
*       R1=ADDR($TCA13);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA13                                           0158
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0159
         BALR  @14,@15                                             0159
*       DCL                                                        0160
*         1 $TCA13,                 /* TCEC PARM LIST                */
*          2 $TCB13 FIXED(32) INIT(299),/* MSG NUMBER                */
*          2 $TCC13 FIXED(32) INIT(61),/* INCT LEN                   */
*          2 $TCD13 BIT(8) INIT('01000000'B),/* FLAG                 */
*          2 $TCE13 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK INVALID
*                                      RESPONSE                      */
*       GO TO S22C110;              /* REISSUE MESSAGE               */
         B     S22C110                                             0161
*     END;                                                         0162
*   ELSE                                                           0163
*     DO;                                                          0163
@RF00155 DS    0H                                                  0164
*       T463C=T463B;                /* SHIFT MESSAGE                 */
         MVC   @TS00001(61),T463B(WAPTR)                           0164
         MVC   T463C(61,WAPTR),@TS00001                            0164
*       T463A='247';                /* SET COMM MSG NUM              */
         MVC   T463A(3,WAPTR),@CC00757                             0165
*       IF $INBUFR(5)=',' THEN      /* CHECK FOR COMM REPLY          */
         CLI   $INBUFR+4(WAPTR),C','                               0166
         BNE   @RF00166                                            0166
*         DO;                                                      0167
*                                                                  0167
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(463)SUB(YES) INVOKED                        */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0168
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0168
*           R1=ADDR($TCA14);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA14                                           0169
*           CALL #EXIT;             /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0170
         BALR  @14,@15                                             0170
*           DCL                                                    0171
*             1 $TCA14,             /* TCEC PARM LIST                */
*              2 $TCB14 FIXED(32) INIT(463),/* MSG NUMBER            */
*              2 $TCC14 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD14 BIT(8) INIT('10000000'B),/* FLAG             */
*              2 $TCE14 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK   0171
*                                      ISSUE COMM MESSAGE            */
*         END;                                                     0172
*       IF $INBUFR(4)='N' THEN      /* REQUEST DENIED                */
@RF00166 CLI   $INBUFR+3(WAPTR),C'N'                               0173
         BNE   @RF00173                                            0173
*         DO;                       /* YES                           */
*                                                                  0174
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(254) INVOKED                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0175
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0175
*           R1=ADDR($TCA15);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA15                                           0176
*           CALL #EXIT;             /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0177
         BALR  @14,@15                                             0177
*           DCL                                                    0178
*             1 $TCA15,             /* TCEC PARM LIST                */
*              2 $TCB15 FIXED(32) INIT(254),/* MSG NUMBER            */
*              2 $TCC15 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD15 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE15 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK   0178
*                                      ISSUE DENIED PER MSG          */
*           R15=8;                  /* SET BAD R/C                   */
         LA    R15,8                                               0179
*           GO TO S22C300;          /* RETURN                        */
         B     S22C300                                             0180
*         END;                                                     0181
*     END;                                                         0182
@RF00173 DS    0H                                                  0183
*S22C115:                                                          0183
*   VERACQ='1'B;                    /* SET TO ACQUIRE                */
S22C115  OI    VERACQ,B'01000000'                                  0183
*   $CUCNT=$CUCNT+1;                /* UPDATE CNT OF CU'S            */
         LA    @14,1                                               0184
         AH    @14,$CUCNT(,WAPTR)                                  0184
         STH   @14,$CUCNT(,WAPTR)                                  0184
*   $CUTABLE($CUCNT)=CUDATA;        /* ENTER NAME OF CU IN TBL       */
         MH    @14,@CH00348                                        0185
         ALR   @14,WAPTR                                           0185
         MVC   $CUTABLE-5(5,@14),CUDATA(R10)                       0185
*S22C120:                                                          0186
*   VERPARM=ADDR($CUTABLE($CUCNT)); /* PT TO NEW DEVS                */
S22C120  LH    @14,$CUCNT(,WAPTR)                                  0186
         MH    @14,@CH00348                                        0186
         LA    @14,$CUTABLE-5(@14,WAPTR)                           0186
         ST    @14,VERPARM                                         0186
*   R1=ADDR(ACQPARM);               /* PT TO PARM LIST               */
         LA    R1,ACQPARM                                          0187
*   CALL #EXIT;                     /* ACQUIRE DEVICE                */
         L     @15,#EXITA(,WAPTR)                                  0188
         BALR  @14,@15                                             0188
*   IF R15=0 THEN                   /* CHK RETURN CODE               */
         LTR   R15,R15                                             0189
         BZ    @RT00189                                            0189
*     GO TO S22C250;                /* GOT IT                        */
*   IF R15^=16 THEN                 /* NEED MORE SPACE ?             */
         C     R15,@CF00061                                        0191
         BE    @RF00191                                            0191
*     DO;                           /* NO,ANOTHER ERROR              */
*       $CUCNT=$CUCNT-1;            /* SUB 1 FROM CU COUNT           */
         LH    @14,$CUCNT(,WAPTR)                                  0193
         BCTR  @14,0                                               0193
         STH   @14,$CUCNT(,WAPTR)                                  0193
*       R15=8;                      /* DEVICE DOES NOT MEET REQS     */
         LA    R15,8                                               0194
*       GO TO S22C300;              /* RETURN                        */
         B     S22C300                                             0195
*     END;                                                         0196
*   R7=$GETMPTR;                                                   0197
@RF00191 L     R7,$GETMPTR(,WAPTR)                                 0197
*   R8=$GETMSZE;                    /* SIZE OF AREA                  */
         LH    R8,$GETMSZE(,WAPTR)                                 0198
*   $GETMSZE=R0;                    /* GET SIZE NEEDED FRM VER       */
         STH   R0,$GETMSZE(,WAPTR)                                 0199
*   IF R8=0 THEN                    /* PREVIOUS GETMAIN DONE?        */
         LTR   R8,R8                                               0200
         BZ    @RT00200                                            0200
*     GO TO S22C150;                /* NO DONT DO FREEMAIN           */
*                                                                  0201
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE EXSISTING AREA                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0202
*   RESPECIFY                                                      0202
*     R4 RESTRICTED;                                               0202
*   R0=R8;                                                         0203
*                                                                  0203
         LR    R0,R8                                               0203
*/*VFRMAIN  SIZE((0))STORAGE((R7))SUBPOOL(0)                         */
*                                                                  0204
*   DO;                                                            0204
*     DCL                                                          0205
*       GPR00F FIXED(31) REG(00);                                  0205
*     DCL                                                          0206
*       GPR00P PTR(31) REG(00);                                    0206
*     DCL                                                          0207
*       GPR15F FIXED(31) REG(15);                                  0207
*     DCL                                                          0208
*       GPR15P PTR(31) REG(15);                                    0208
*     RFY                                                          0209
*      (GPR00P,                                                    0209
*       GPR15P) RSTD;               /* PUT SUBPOOL PARM IN HIGH-   0209
*                                      ORDER BYTE OF REG 15          */
*     GPR15F=0;                                                    0210
         SLR   GPR15F,GPR15F                                       0210
*     SLL(GPR15P,24);               /* COMBINE SUBPOOL AND SIZE IN 0211
*                                      REGISTER 0                    */
         SLL   GPR15P,24                                           0211
*     GPR00P=GPR00P×GPR15P;                                        0212
         OR    GPR00P,GPR15P                                       0212
*     RFY                                                          0213
*      (GPR00P,                                                    0213
*       GPR15P) UNRSTD;             /* DECLARE AND RESTRICT REG 1    */
*     DCL                                                          0214
*       GPR01F FIXED(31) REG(01);                                  0214
*     DCL                                                          0215
*       GPR01P PTR(31) REG(01);                                    0215
*     RFY                                                          0216
*      (GPR01P) RSTD;               /* INVOKE XREGSET MACRO TO CHECK
*                                      STORAGE PARM AND PUT ADDR IN
*                                      REGISTER 1                    */
*/*XREGSET  PID('STORAGE')PPARM((R7))RREG(1,GPR01P)                  */
*                                                                  0217
*     DO;                                                          0217
*       GPR01P=R7;                  /* SET RREG SYMBOL TO VALUE OF 0218
*                                      PPARM OPERAND                 */
         LR    GPR01P,R7                                           0218
*     END;                          /* XREGSET INVOKE FREEMAIN MACRO */
*     GEN;                                                         0220
         FREEMAIN R,LV=(0),A=(1)
*                                   /* UNRESTRICT REG 1              */
*     RFY                                                          0221
*      (GPR01P) UNRSTD;                                            0221
*   END;                            /* VFRMAIN                       */
*S22C150:                                                          0223
*   R8=$GETMSZE;                    /* GET SIZE IN REG               */
*                                                                  0223
S22C150  LH    R8,$GETMSZE(,WAPTR)                                 0223
*   /*****************************************************************/
*   /*                                                               */
*   /* GET AREA NEEDED BY ACQUISITION FOR ACQUIRE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0224
*   R7=ADDR($GETMPTR);              /* SET PTR FOR RTN ADDR OF AREA
*                                      GOTTEN                        */
         LA    R7,$GETMPTR(,WAPTR)                                 0224
*   GEN(STM R2,R4,VGETSAVE);                                       0225
*                                                                  0225
         STM R2,R4,VGETSAVE
*/*VGTMAIN SIZE($GETMSZE)STORAGE((R7))SUBPOOL(0)PAGE(NO)             */
*                                                                  0226
*   DO;                             /* DECLARE AND RESTRICT REGISTERS
*                                      2,3, AND 4                    */
*     DCL                                                          0227
*       GPR02F FIXED(31) REG(02);                                  0227
*     DCL                                                          0228
*       GPR02P PTR(31) REG(02);                                    0228
*     DCL                                                          0229
*       GPR03F FIXED(31) REG(03);                                  0229
*     DCL                                                          0230
*       GPR03P PTR(31) REG(03);                                    0230
*     DCL                                                          0231
*       GPR04F FIXED(31) REG(04);                                  0231
*     DCL                                                          0232
*       GPR04P PTR(31) REG(04);                                    0232
*     RFY                                                          0233
*      (GPR02P,                                                    0233
*       GPR03P,                                                    0233
*       GPR04P) RSTD;               /* INVOKE XREGSET MACRO TO CHECK
*                                      SIZE PARM AND PUT VALUE IN  0233
*                                      REGISTER 2                    */
*/*XREGSET  PID('SIZE')PPARM($GETMSZE)RREG(,GPR02F)OUTPUT(PARM)      */
*                                                                  0234
*     DO;                                                          0234
*       GPR02F=$GETMSZE;            /* SET RREG SYMBOL TO VALUE OF 0235
*                                      PPARM OPERAND                 */
         LH    GPR02F,$GETMSZE(,WAPTR)                             0235
*     END;                          /* XREGSET INVOKE XREGSET MACRO
*                                      TO CHECK STORAGE PARM AND PUT
*                                      VALUE IN REGISTER 3           */
*/*XREGSET  PID('STORAGE')PPARM((R7))RREG(,GPR03F)                   */
*                                                                  0237
*     DO;                                                          0237
*       GPR03F=R7;                  /* SET RREG SYMBOL TO VALUE OF 0238
*                                      PPARM OPERAND                 */
         LR    GPR03F,R7                                           0238
*     END;                          /* XREGSET INVOKE XREGSET MACRO
*                                      TO CHECK SUBPOOL PARM AND PUT
*                                      VALUE IN REGISTER 4           */
*/*XREGSET  PID('SUBPOOL')PPARM(0)RREG(,GPR04F)OUTPUT(PARM)          */
*                                                                  0240
*     DO;                                                          0240
*       GPR04F=0;                   /* SET RREG SYMBOL TO VALUE OF 0241
*                                      PPARM OPERAND                 */
         SLR   GPR04F,GPR04F                                       0241
*     END;                          /* XREGSET INVOKE GETMAIN MACRO  */
*     GEN REFS(GPR02F,GPR03P,GPR04F) SETS(GPR03P,GPR15F);          0243
         GETMAIN EC,LV=(2),A=(3),SP=(4)
*                                   /* UNRESTRICT REGS 2,3, AND 4    */
*     RFY                                                          0244
*      (GPR02P,                                                    0244
*       GPR03P,                                                    0244
*       GPR04P) UNRSTD;                                            0244
*   END;                            /* VGTMAIN                       */
*   GEN(LM R2,R4,VGETSAVE);                                        0246
         LM R2,R4,VGETSAVE
*   IF R15^=0 THEN                  /* GETMAIN OK?                   */
         LTR   R15,R15                                             0247
         BZ    @RF00247                                            0247
*     DO;                           /* NO                            */
*       R15=8;                      /* SET RETURN CODE               */
         LA    R15,8                                               0249
*       GO TO S22C300;              /* RETURN                        */
         B     S22C300                                             0250
*     END;                                                         0251
*   GO TO S22C120;                  /* GETMAIN DONE GO ACQUIRE       */
         B     S22C120                                             0252
*S22C250:                                                          0253
*   R11=R11-1;                      /* REDUCE REQUEST COUNTER        */
S22C250  BCTR  R11,0                                               0253
*   IF R11^=0 THEN                  /* ARE WE DONE ?                 */
         LTR   R11,R11                                             0254
         BZ    @RF00254                                            0254
*     DO;                           /* NO                            */
*       R10=R10+4;                  /* POINT TO NEXT EXTENT          */
         AL    R10,@CF00068                                        0256
*       GO TO S22C010;              /* PROCESS NEXT                  */
         B     S22C010                                             0257
*     END;                                                         0258
*   R15=0;                          /* INDICATE GOOD RETURN          */
@RF00254 SLR   R15,R15                                             0259
*   GOTO S22C301;                   /* GO TO GOOD RTN                */
         B     S22C301                                             0260
*S22C300:                                                          0261
*   IF CUTESTIN=0                   /* BAD RTN- IF IND=0 THE         */
*     THEN                          /* BIT TURNED OFF                */
S22C300  CLI   CUTESTIN,0                                          0261
         BNE   @RF00261                                            0261
*     $CUTESTB='0'B;                /* ELSE LEAVE ON                 */
         NI    $CUTESTB(RCAPTR),B'11101111'                        0262
*S22C301:                                                          0263
*   ;                                                              0263
@RF00261 DS    0H                                                  0263
S22C301  DS    0H                                                  0264
*   R13=SVESC022(2);                /* RESTORE                       */
         L     R13,SVESC022+4(,WAPTR)                              0264
*   RETURN;                                                        0265
*                                                                  0265
@EL00001 DS    0H                                                  0265
@EF00001 DS    0H                                                  0265
@ER00001 L     @14,12(,@13)                                        0265
         LM    @00,@12,20(@13)                                     0265
         BR    @14                                                 0265
*/* ATDSPLY   INVOKED.                                               */
*/********************************************************************/
*/* THERE HAVE BEEN NO ATBUILD INCLUSIONS IN THIS COMPILATION.       */
*/********************************************************************/
*/* END OF ATDSPLY.                                                  */
*                                                                  0266
*   END ISTSC022;                                                  0266
@DATA    DS    0H
@CH00348 DC    H'5'
@CH00373 DC    H'68'
         DS    0F
         DS    0F
@CF00072 DC    F'1'
@CH00072 EQU   @CF00072+2
@CF00137 DC    F'2'
@CF00068 DC    F'4'
@CF00061 DC    F'16'
@CH00061 EQU   @CF00061+2
@CV00708 DC    V(ISTSC030)
@CV00713 DC    V(S20CEC03)
         DS    0D
EXTFXD   DS    FL4
         ORG   EXTFXD
EXTCHR   DS    CL4
         ORG   EXTFXD+4
CUPTR    DS    A
J        DS    H
CUTESTIN DC    AL1(0)
@TS00001 DS    CL61
@CC00757 DC    C'247'
         DS    CL1
ACQPARM  DS    CL9
         ORG   ACQPARM
@NM00054 DC    X'0102F3F0'
VERPARM  DS    AL4
ACQFLGS  DC    X'10'
         ORG   ACQFLGS
PRT380   DS    BL1
VERACQ   EQU   ACQFLGS+0
DEVCHR   EQU   ACQFLGS+0
@NM00055 EQU   ACQFLGS+0
         ORG   ACQPARM+9
         DS    CL3
CDSINFO  DC    X'0000000000000000000000000000000000000000'
         ORG   CDSINFO
@NM00056 DS    FL2
UNIT     DS    FL2
@NM00057 DS    CL16
         ORG   CDSINFO+20
MSG247   DC    CL48'CONTROL UNIT XXXX AND ALL ASSOCIATED DEVICES'
         ORG   MSG247
@NM00058 DS    CL13
CUFLD    DS    CL4
@NM00059 DS    CL27
         ORG   MSG247+48
$TCA09   DS    CL13
         ORG   $TCA09
$TCB09   DC    A(247)
$TCC09   DC    A(0)
$TCD09   DC    B'10001000'
$TCE09   DC    X'80000000'
         ORG   $TCA09+13
         DS    CL3
$TCA11   DS    CL13
         ORG   $TCA11
$TCB11   DC    A(247)
$TCC11   DC    A(0)
$TCD11   DC    B'10001000'
$TCE11   DC    X'40000000'
         ORG   $TCA11+13
         DS    CL3
$TCA12   DS    CL13
         ORG   $TCA12
$TCB12   DC    A(247)
$TCC12   DC    A(1)
$TCD12   DC    B'01001000'
$TCE12   DC    X'20000000'
         ORG   $TCA12+13
         DS    CL3
$TCA13   DS    CL13
         ORG   $TCA13
$TCB13   DC    A(299)
$TCC13   DC    A(61)
$TCD13   DC    B'01000000'
$TCE13   DC    X'FFFFFFFF'
         ORG   $TCA13+13
         DS    CL3
$TCA14   DS    CL13
         ORG   $TCA14
$TCB14   DC    A(463)
$TCC14   DC    A(0)
$TCD14   DC    B'10000000'
$TCE14   DC    X'FFFFFFFF'
         ORG   $TCA14+13
         DS    CL3
$TCA15   DS    CL13
         ORG   $TCA15
$TCB15   DC    A(254)
$TCC15   DC    A(0)
$TCD15   DC    B'00000000'
$TCE15   DC    X'FFFFFFFF'
         ORG   $TCA15+13
         DS    CL3
PATCH    DC    15F'0'
VGETSAVE DS    3F
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ITATCTS  EQU   @04
I        EQU   @04
CVTPTR   EQU   @04
RCAPTR   EQU   @05
WAPTR    EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R7       EQU   @07
R6       EQU   @06
R8       EQU   @08
R10      EQU   @10
R11      EQU   @11
R13      EQU   @13
R15      EQU   @15
GPR00P   EQU   @00
GPR15F   EQU   @15
GPR15P   EQU   @15
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR00F   EQU   @00
GPR01F   EQU   @01
R12      EQU   @12
R14      EQU   @14
R9       EQU   @09
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$TRTBLA  EQU   $POINTER+124
$CONSTNT EQU   $RCAAREA+244
$USECNT  EQU   $CONSTNT
$RCAFLG  EQU   $RCAAREA+604
$CUTESTB EQU   $RCAFLG
$TRTBL   EQU   0
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$HIMOREC EQU   $CDA+60
$GETMPTR EQU   $CDA+88
$GETMSZE EQU   $CDA+110
$CUCNT   EQU   $CDA+118
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$FLAG2   EQU   $COMMFLG+1
$FLAG3   EQU   $COMMFLG+2
$FLAG4   EQU   $COMMFLG+3
$OPCOM   EQU   $FLAG4
$FLAG5   EQU   $COMMFLG+4
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$ABNDBIT EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$FLAG8   EQU   $COMMFLG+7
$TCECM   EQU   $FLAG8
$FLAG9   EQU   $COMMFLG+8
$FLAG10  EQU   $COMMFLG+9
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$FLAG13  EQU   $COMMFLG+12
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
@NM00039 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$SIOFLG  EQU   $DEVFLG3
$SYSMN   EQU   $DEVTBLE+28
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$RNINFO  EQU   $DEVTBLE+56
$DEVFLG5 EQU   $RNINFO+8
$DEVFLG4 EQU   $DEVTBLE+65
$SLTBL   EQU   TOLTEPWA+1468
$RUNTEST EQU   $SLTBL+13
$TESTFLG EQU   $SLTBL+21
$SECLST  EQU   $SLTBL+22
$INBUFR  EQU   TOLTEPWA+2104
$WORK    EQU   TOLTEPWA+2376
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00048 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00048+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00048+10
$ENXX    EQU   @NM00048+15
$IMITX   EQU   $ENXX
$CUTABLE EQU   TOLTEPWA+2868
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
#EXIT    EQU   0
CUTSTMAP EQU   0
$CUTLEVL EQU   CUTSTMAP+1
$CUTEXT  EQU   CUTSTMAP+4
$CUCODE  EQU   CUTSTMAP+8
$NUMEXTS EQU   CUTSTMAP+9
@NM00052 EQU   0
BASEADR  EQU   @NM00052
CUDATA   EQU   BASEADR
EXTENT   EQU   CUDATA+4
@NM00060 EQU   0
SYMPTR   EQU   @NM00060
SYMNAME  EQU   0
BACKSAVE EQU   0
ITATCF   EQU   0
ITATCT   EQU   0
T463X    EQU   $INBUFR
T463A    EQU   T463X
T463C    EQU   T463X+3
T463Y    EQU   $INBUFR
T463B    EQU   T463Y+1
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC025 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC022
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00061 EQU   T463Y
DEVCHRPT EQU   @NM00060+4
@NM00053 EQU   CUDATA
$CUDSML  EQU   CUTSTMAP+12
@NM00051 EQU   CUTSTMAP+10
$CUTIDNT EQU   CUTSTMAP+2
$CUTTRMG EQU   CUTSTMAP
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC033 EQU   TOLTEPWA+3160
@NM00050 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00049 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00048+14
$NSXX    EQU   @NM00048+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00048+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00048
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
@NM00047 EQU   $SLTBL+135
$HIGHRTN EQU   $SLTBL+134
$PRIMADR EQU   $SLTBL+130
$CTSTPT  EQU   $SLTBL+128
$TSTCNT  EQU   $SLTBL+126
$SECFLGS EQU   $SECLST+3
$SECTION EQU   $SECLST
$SECACT  EQU   $TESTFLG
$CANTRUN EQU   $TESTFLG
$FINAL   EQU   $TESTFLG
$TESTSUF EQU   $RUNTEST+5
$TESTNUM EQU   $RUNTEST+1
$LETPRF  EQU   $RUNTEST
$SYMBOLC EQU   $SLTBL+5
$FAMILY  EQU   $SLTBL
$CDEVPT  EQU   TOLTEPWA+1466
$DEVCNTS EQU   TOLTEPWA+1464
$FEEDBCK EQU   $DEVTBLE+66
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00046 EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$LINENME EQU   $RNINFO
$CID     EQU   $DEVTBLE+52
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
@NM00045 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$NOTDEV  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00044 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00043 EQU   $DEVCDSF
@NM00042 EQU   $DEVCDSF
@NM00041 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00039+1
$DEVCTLU EQU   @NM00039+1
$DEVCHAN EQU   @NM00039
@NM00040 EQU   @NM00039
$CTINDX  EQU   $DEVUNAD
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$CATMSG  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$LGON    EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00038 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00037 EQU   $FLAG11
@NM00036 EQU   $FLAG10
$INBND   EQU   $FLAG10
$WAITFLG EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
$NOTRRCH EQU   $FLAG9
@NM00035 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$REMSW   EQU   $FLAG9
$IGRES   EQU   $FLAG9
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00034 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00033 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$SNDRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$1STDATA EQU   $FLAG7
$CIREQ   EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$FSTMCIS EQU   $FLAG6
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00032 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00031 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$FSTFE   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
$NDR     EQU   $FLAG2
@NM00030 EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00029 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00028 EQU   $CDA+120
@NM00027 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$LOWADDR EQU   $OLTPTR
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00026 EQU   $CDA
@NM00025 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00024 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00023 EQU   $TOTFLG1
@NM00022 EQU   $TOTFLG1
@NM00021 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
$CTEQTT  EQU   $TOTFLG1
@NM00020 EQU   $TOTFLG1
@NM00019 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00018 EQU   $OLTFLG2
@NM00017 EQU   $OLTFLG2
@NM00016 EQU   $OLTFLG2
@NM00015 EQU   $OLTFLG2
@NM00014 EQU   $OLTFLG2
@NM00013 EQU   $OLTFLG2
@NM00012 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00011 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00010 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00009 EQU   $PDEVFLG
@NM00008 EQU   $PDEVFLG
@NM00007 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00006 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00005 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
$TLTEND  EQU   $RCAAREA+936
$EXITSAV EQU   $RCAAREA+864
$TRASCII EQU   $RCAAREA+608
@NM00004 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$UPDATE  EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
$TLTPRPL EQU   $CONSTNT+20
@NM00003 EQU   $CONSTNT+4
@NM00002 EQU   $CONSTNT+2
$CURRTWA EQU   $POINTER+140
$CTNAME  EQU   $POINTER+132
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00001 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB2 EQU   $POINTER+28
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$LSTAREA EQU   $POINTER+12
$FSTAREA EQU   $POINTER+8
$CVTSAVE EQU   $POINTER+4
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00070 EQU   S22C010
@RT00107 EQU   S22C250
@RT00130 EQU   S22C115
@RT00189 EQU   S22C250
@RT00200 EQU   S22C150
@RF00247 EQU   S22C120
@ENDDATA EQU   *
         END   ISTSC022,(C'PLS1846',0701,75184)
