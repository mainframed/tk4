         TITLE 'HMBLKERR  -  ERROR HANDLING ROUTINE'
         LCLA  &T,&SPN                                            0001
.@001    ANOP                                                     0001
HMBLKERR CSECT ,                                                  0001
         BC    15,14(0,@F)
         DC    C'©HMBLKERR'                                       0001
         STM   @E,@C,12(@D)                                       0001
         BALR  @B,0                                               0001
@PSTART  DS    0H                                                 0001
         USING @PSTART+00000,@B                                   0001
         L     @0,@SIZ001                                         0001
         GETMAIN  R,LV=(0)                                        0001
         LR    @C,@1                                              0001
         USING @DATD+00000,@C                                     0001
         LM    @0,@1,20(@D)                                       0001
         XC    @TEMPS(@L),@TEMPS                                  0001
         ST    @D,@SAV001+4                                       0001
         LA    @F,@SAV001                                         0001
         ST    @F,8(0,@D)                                         0001
         LR    @D,@F                                              0001
*         PARMPTR=R1;                   /* SAVE REG. 1 INTERNALLY     *
         ST    @1,PARMPTR                                         0013
*         RESTRICT(3);                  /* USED TO HOLD DCB ADDRESS   *
*         IF ERRORS=0                   /* IF NO ERRORS, DONT PRINT   *
*            THEN GO TO RET;            /* ANYTHING                   *
         L     @2,PARMPTR                                         0015
         CLC   32(4,@2),@D1                                       0015
         BC    08,RET                                             0016
*         PARM=DCBOUT;                  /* SET DCBADDRESS FOR PUTS    *
         L     @3,4(0,@2)                                         0017
*         LINE=' ';                     /* BLANK OUT LINE             *
         MVI   LINE,C' '                                          0018
         MVC   LINE+1(120),LINE                                   0018
*         ASACHAR='1';                  /* SET TO GO TO TOP OF PAGE   *
         MVI   LINE,C'1'                                          0019
*         DO I=1 TO 2;                  /* SKIP DOWN A FEW LINES      *
         LA    @F,1                                               0020
         ST    @F,I                                               0020
@DO9FF   EQU   *                                                  0020
*         GEN(PUT  (PARM),LINE);        /* PRINT OUT A LINE OF BLANKS *
         PUT  (PARM),LINE
         DS    0H
*         ASACHAR='0';                  /* SKIP TWO LINES             *
         MVI   LINE,C'0'                                          0022
*         END;
*         MSG='**** D I A G N O S T I C  D I R E C T O R Y ****';
         L     @F,I                                               0023
         AH    @F,@D2                                             0023
@DO9FE   ST    @F,I                                               0023
         CH    @F,@D3                                             0023
         BC    12,@DO9FF                                          0023
         MVC   LINE+6(48),@C4                                     0024
         MVI   LINE+54,C' '                                       0024
         MVC   LINE+55(66),LINE+54                                0024
*         GEN(PUT  (PARM),LINE);        /* PRINT IT PUT               *
         PUT  (PARM),LINE
         DS    0H
*         /* ******************************************************** *
*         /*   LOOP THRU TESTING EACH BIT OF 'ERRORS'.  IF A BIT IS ON*
*         /*   THEN PRINT OUT ASSOC. MESSAGE                          *
*         /* ******************************************************** *
*         RESTRICT(2);                  /*  USED FOR BIT TESTING      *
*         TESTBIT=1;                    /* SET UP BIT FOR FIRST TEST  *
         LA    @2,1                                               0027
*         GEN(SLL  TESTBIT,31);         /* START AT LEFT END OF FIELD *
         SLL  TESTBIT,31
         DS    0H
*         DO MSGNUM=1 TO 32;            /* CHECK EACH BIT             *
         LA    @F,1                                               0029
         ST    @F,MSGNUM                                          0029
*         IF (TESTBIT & ERRORS) ^=0     /* IS BIT ON?                 *
*            THEN DO;                   /* YES - PRINT MESSAGE        *
@DO9FB   L     @8,PARMPTR                                         0030
         MVC   @TEMP4(4),32(@8)                                   0030
         L     @F,@TEMP4                                          0030
         NR    @F,@2                                              0030
         CL    @F,@D1                                             0030
         BC    08,@9F7                                            0030
*                 /* GET POINTER TO OFFSET AND LENGTH FOR MESSAGE     *
*                 LISTPTR=ADDR(MSGLIST) + (MSGNUM-1)*4;
         L     @F,MSGNUM                                          0032
         BCTR  @F,0                                               0032
         SLA   @F,2                                               0032
         L     @9,@V1              ADDRESS OF MSGLIST             0032
         AR    @F,@9                                              0032
         ST    @F,LISTPTR                                         0032
*                 IF LENGTH=0           /* UNDEFINED MESSAGE?         *
*                    THEN GO TO EL1;    /* YES - SKIP PRINTING        *
         SR    @F,@F                                              0033
         L     @6,LISTPTR                                         0033
         CH    @F,2(0,@6)                                         0033
         BC    08,EL1                                             0034
*                 MSGPTR=ADDR(MESSAGES) + OFFSET; /* POINT TO MESSAGE *
         LH    @F,0(0,@6)                                         0035
         L     @7,@V2              ADDRESS OF MESSAGES            0035
         AR    @F,@7                                              0035
         ST    @F,MSGPTR                                          0035
*                 MSG=' ';              /* INIT. LINE                 *
         MVI   LINE+6,C' '                                        0036
         MVC   LINE+7(114),LINE+6                                 0036
*                 MSG(1:LENGTH)=TEXT(1:LENGTH);  /* MOVE IN MESAAGE   *
         L     @4,MSGPTR                                          0037
         LR    @E,@4                                              0037
         LH    @5,2(0,@6)                                         0037
         BCTR  @5,0                                               0037
         LA    @A,LINE+6                                          0037
         EX    @5,@MVC                                            0037
*                 IF MSGNUM=10 ×        /* CHECK FOR MESSAGES WHICH   *
*                    MSGNUM=11 ×        /* NEEED TO HAVE DDNAME       *
*                    MSGNUM=5
*                       THEN MSG(10:17)=DDNAME;
         LA    @F,10                                              0038
         C     @F,MSGNUM                                          0038
         BC    08,@9F6                                            0038
         LA    @F,11                                              0038
         C     @F,MSGNUM                                          0038
         BC    08,@9F5                                            0038
         LA    @F,5                                               0038
         C     @F,MSGNUM                                          0038
         BC    07,@9F4                                            0038
@9F5     EQU   *                                                  0039
@9F6     L     @8,PARMPTR                                         0039
         MVC   LINE+15(8),44(@8)                                  0039
*                 IF MSGNUM=8           /* MEMBER NOT FOUND?          *
*                    THEN MSG(10:17)=MEMNAME;/* PUT MEMNAME IN MESSAGE*
@9F4     LA    @F,8                                               0040
         C     @F,MSGNUM                                          0040
         BC    07,@9F3                                            0040
         L     @8,PARMPTR                                         0041
         MVC   LINE+15(8),36(@8)                                  0041
*                 GEN(PUT  (PARM),LINE);  /* PRINT LINNE              *
@9F3     EQU   *                                                  0042
         PUT  (PARM),LINE
         DS    0H
*                 ASACHAR=' ';          /* SET FOR SINGLE SPACING     *
         MVI   LINE,C' '                                          0043
*                 END;
*         GEN(SRL  TESTBIT,1);          /* SHIFT TO TEST NEXT BIT     *
@9F7     EQU   *                                                  0045
         SRL  TESTBIT,1
         DS    0H
* EL1:    END;
*         IF (E12MASK&ERRORS) > 0       /* ANY RETURN CODE 12 ERRORS  *
*           THEN                        /* YES                        *
EL1      L     @F,MSGNUM                                          0046
         AH    @F,@D2                                             0046
@DO9FA   ST    @F,MSGNUM                                          0046
         CH    @F,@D4                                             0046
         BC    12,@DO9FB                                          0046
         L     @8,PARMPTR                                         0047
         MVC   @CTEMP2(4),32(@8)                                  0047
         NC    @CTEMP2(4),E12MASK                                 0047
         CLC   @CTEMP2(4),@D1                                     0047
         BC    12,@9F2                                            0047
*             DO;
*               ECD12 = '1'B;           /* SET RC 12 ERROR BIT        *
         OI    68(@8),B'00100000'                                 0049
*               GO TO EL2;              /* ZERO ERROR BITS            *
         BC    15,EL2                                             0050
*             END;
*           ELSE;                       /* NO RETURN CODE ERRORS      *
@9F2     EQU   *                                                  0052
*         IF (E8MASK&ERRORS) > 0        /* ANY RETURN CODE 8 ERRORS   *
*           THEN                        /* YES                        *
@9F1     L     @8,PARMPTR                                         0053
         MVC   @CTEMP2(4),32(@8)                                  0053
         NC    @CTEMP2(4),E8MASK                                  0053
         CLC   @CTEMP2(4),@D1                                     0053
         BC    12,@9F0                                            0053
*             DO;
*               ECD8 = '1'B;            /* SET RC 8 ERROR BIT         *
         OI    68(@8),B'01000000'                                 0055
*               GO TO EL2;              /* ZERO ERROR BITS            *
         BC    15,EL2                                             0056
*             END;
*           ELSE;                       /* NO RETURN CODE ERRORS      *
@9F0     EQU   *                                                  0058
*         IF (E4MASK&ERRORS) > 0        /* ANY RETURN CODE 4 ERRORS   *
*           THEN                        /* YES                        *
@9EF     L     @8,PARMPTR                                         0059
         MVC   @CTEMP2(4),32(@8)                                  0059
         NC    @CTEMP2(4),E4MASK                                  0059
         CLC   @CTEMP2(4),@D1                                     0059
         BC    12,@9EE                                            0059
*             ECD4 = '1'B;              /* SET RC 4 ERROR BIT         *
         OI    68(@8),B'10000000'                                 0060
*           ELSE;                       /* NO RETURN CODE ERRORS      *
@9EE     EQU   *                                                  0061
* EL2:    ERRORS=0;                     /* RE-INITIALIZE ERROR BITS   *
@9ED     EQU   *                                                  0062
EL2      L     @8,PARMPTR                                         0062
         MVC   32(4,@8),@D1                                       0062
* RET:    END HMBLKERR;
RET      EQU   *                                                  0063
@EL01    L     @D,4(0,@D)                                         0063
         LR    @1,@C                                              0063
         L     @0,@SIZ001                                         0063
         FREEMAIN R,LV=(0),A=(1)                                  0063
         LM    @E,@C,12(@D)                                       0063
         BCR   15,@E                                              0063
@DATA1   EQU   *
@0       EQU   00                  EQUATES FOR REGISTERS 0-15
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
@D1      DC    F'0'
@D2      DC    H'1'
@D3      DC    H'2'
@D4      DC    H'32'
@MVC     MVC   0(1,@A),0(@E)
@V1      DC    V(MSGLIST)
@V2      DC    V(MESSAGES)
         DS    0F
@SIZ001  DC    AL1(&SPN)
         DC    AL3(@DATEND-@DATD)
         DS    0F
@C4      DC    C'**** D I A G N O S T I C  D I R E C T O R Y ****'
         DS    0D
@DATA    EQU   *
DUMMY    EQU   00000000            FULLWORD INTEGER
PARM     EQU   00000003            FULLWORD POINTER REGISTER
R1       EQU   00000001            FULLWORD POINTER REGISTER
TESTBIT  EQU   00000002            FULLWORD INTEGER REGISTER
PARMLIST EQU   00000000            72 BYTE(S) ON WORD
A00000   EQU   PARMLIST+00000000   FULLWORD POINTER
DCBOUT   EQU   PARMLIST+00000004   FULLWORD POINTER
A00001   EQU   PARMLIST+00000008   12 BYTE(S)
FLAGS    EQU   PARMLIST+00000020   16 BIT(S)
A00002   EQU   PARMLIST+00000020   8 BIT(S)
A00003   EQU   PARMLIST+00000021   8 BIT(S)
BLKCNT   EQU   PARMLIST+00000022   HALFWORD INTEGER
A00004   EQU   PARMLIST+00000024   8 BYTE(S)
ERRORS   EQU   PARMLIST+00000032   32 BIT(S)
MEMNAME  EQU   PARMLIST+00000036   8 BYTE(S)
DDNAME   EQU   PARMLIST+00000044   8 BYTE(S)
A00005   EQU   PARMLIST+00000052   5 BYTE(S)
A00006   EQU   PARMLIST+00000060   FULLWORD INTEGER
A00007   EQU   PARMLIST+00000064   4 BYTE(S)
NFLGS    EQU   PARMLIST+00000068   32 BIT(S)
ECD4     EQU   PARMLIST+00000068   1 BIT(S)
ECD8     EQU   PARMLIST+00000068   1 BIT(S)
ECD12    EQU   PARMLIST+00000068   1 BIT(S)
MSGL     EQU   00000000            4 BYTE(S) ON WORD
OFFSET   EQU   MSGL+00000000       HALFWORD INTEGER
LENGTH   EQU   MSGL+00000002       HALFWORD INTEGER
TEXT     EQU   00000000            115 BYTE(S)
E4MASK   EQU   *                   32 BIT(S) ON BYTE
         DC    B'00000100000100000000000001111100'
E8MASK   EQU   *                   32 BIT(S) ON BYTE
         DC    B'11111011110011101000111110000000'
E12MASK  EQU   *                   32 BIT(S) ON BYTE
         DC    B'00000000001000010001000000000000'
         ORG   @DATA
         DS    00000012C
@L       EQU   1
@DATD    DSECT
@SAV001  EQU   @DATD+00000000      72 BYTE(S) ON WORD
I        EQU   @DATD+00000072      FULLWORD INTEGER
MSGPTR   EQU   @DATD+00000076      FULLWORD POINTER
LISTPTR  EQU   @DATD+00000080      FULLWORD POINTER
MSGNUM   EQU   @DATD+00000084      FULLWORD INTEGER
PARMPTR  EQU   @DATD+00000088      FULLWORD POINTER
LINE     EQU   @DATD+00000092      121 BYTE(S)
ASACHAR  EQU   LINE+00000000       1 BYTE(S)
BLANKS   EQU   LINE+00000001       5 BYTE(S)
MSG      EQU   LINE+00000006       115 BYTE(S)
         DS    00000213C
@TEMPS   DS    0F
@TEMP4   DC    F'0'
@CTEMP2  DS    CL004
@DATEND  EQU   *
HMBLKERR CSECT ,
         END   HMBLKERR,(C'PL/S',1400,74038)
