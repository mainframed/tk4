         TITLE 'IASXSD81 - EXTERNAL WRITER CLASSNAME SET-UP ROUTINE'
IASXSD81 CSECT
*
*          RELEASE 21 DELETIONS/CHANGES
* 23808-23814,23868                                              A58681
* 23712,23720,23978-24098,54850,61459,61475                      A58031
*0641016692                                                      M3017
*0641                                                            A53230
*0641023720,023938                                               A45415
*0641                                                            A43873
*0641023087,023093-023096,048140                                 A42459
*0641020920                                                      A36842
*          RELEASE 20 DELETIONS/CHANGES
*1045023087-023093                                               S20202
* 017680,023092,023808-023868,023898,046500-047600               A32047
* 057204-057364,059400-061080                                    MAPMAC
*          RELEASE 19 DELETIONS/CHANGES
* 023080,023710,023740-023746,024000                             A27785
* 013680,017320-017440,017650,017840,023586-023590,023693-023714   I272
* 031800,032600,061160-061320                                      I272
* 020720,022360,022920-022960                                    A29072
*          RELEASE 18 DELETIONS/CHANGES
* 000260-000320,014320,017480,019040-019120                        MC01
* 023340-023346,023584-023594,023666,023676                        MC01
* 023688-023702,023704-023710,054230,061440-061565                 MC01
         EJECT
**********************************************************************
*                                                                    *
*TITLE-- IASXSD81 - EXTERNAL WRITER                                  *
*                   CLASSNAME SET-UP ROUTINE                         *
*                                                                    *
*STATUS CHANGE LEVEL 008
*                                                                    *
*FUNCTION/OPERATION--THE ROUTINE IS ENTERED INITIALLY FROM           *
*   IASXWR00 IN RESPONSE TO A 'START XWTR' COMMAND OR FROM           *
*   THE EXTERNAL WRITER CONTROL MODULE IASXSD82 IN RESPONSE TO A     *
*   'MODIFY' COMMAND.                                              CC0H
*   1. THE COMMAND MUST BE CHECKED TO CONFIRM THAT IT IS VALID.    CC0H
*   IF NOT A MESSAGE MUST BE GIVEN INDICATING THE ERROR. THE       CC0H
*   TYPE OF OUTPUT (PRINTER OR PUNCH), CLASSES TO BE HANDLED,      CC0H
*   AND NAME OF THE JOB SEPERATION ROUTINE ARE SAVED IF IT IS      CC0H
*   A START COMMAND. THE TYPE OF PAUSE AND CLASSES ARE SAVED IF    CC0H
*   IT IS A MODIFY COMMAND.                                        CC0H
*   2. ON A START COMMAND IT IS NECESSARY TO OPEN THE DCB. IF      CC0H
*   COMMAND CHAINING IS TO BE USED AN EXCP DCB MUST BE OPENED      CC0H
*   RATHER THAN A QSAM DCB. THIS WILL INVOLVE SETTING UP AN ECB,   CC0H
*   IOB, CCWS, AND BUFFERS WHICH EXCP WILL USE. IT WILL ALSO       CC0H
*   REQUIRE THE LOADING OF THE IEFSDXYZ MODULE WHICH WILL BE       CC0H
*   BRANCHED TO WHEN A PUT COMMAND IS GIVEN.                       CC0H
*   A CHANNEL END APPENDAGE IGG019C5 WILL BE LOADED TO HANDLE    A29072
*   CARRIAGE CONTROL TAPE OVERFLOW SKIP TO ONE INDICATORS        A29072
*   4. AFTER EXECUTING THE COMMAND THE COMMAND INPUT BUFFER IS     CC0H
*   ZEROED OUT.                                                    CC0H
*   5. IF THE COMMAND IS INVALID IT IS NOT CARRIED OUT, IF A       CC0H
*   MODIFY. IF INVALID AND A START COMMAND THE WRITER IS NOT       CC0H
*   STARTED. IN BOTH CASES MESSAGES ARE WRITTEN TO THE OPERATOR.   CC0H
*                                                                    *
*ENTRY POINT--                                                       *
*        IASXSD81 - EITHER FROM IASXWR00(INITIALIZATION RTN) OR      *
*   FROM IASXSD82 (MAIN LOGIC CONTROL MODULE)                        *
*                                                                    *
*INPUT-- THIS ROUTINE RECEIVES IN REGISTER 1 A PTR TO A 13-WORD    CC0H
*   PARAMETER LIST.                                                CC0H
*                                                                    *
*OUTPUT-- THE PARAMETER LIST WHICH THIS MODULE GOT AS INPUT AND    CC0H
*   WHICH IT FILLED IS PASSED ON TO THE NEXT MODULE IN REG. 1.     CC0H
*                                                                    *
*EXTERNAL ROUTINES--NONE                                             *
*                                                                    *
*EXIT--IF THE COMMAND IS AN INVALID START COMMAND RETURNS TO       CC0H
*   MASTER SCHEDULER.                                              CC0H
*      OTHERWISE TO                                                CC0H
*   IASXSD82 - THE MAINLINE LOGIC PROCESSING ROUTINE OF THE          *
*   SYSOUT WRITER (OR TO A MODULE WHICH USES  XCTL  TO  TRANSFER     *
*                                                                    *
*TABLES/WORK AREAS--                                                 *
*   THE SPL IS A SINGLE POINTER:                                   I272
*   1. POINTER TO PARAMETER FIELD OF THE PROCEDURE STARTED.        CC0H
*   SYSOUT WRITER                                                    *
*   THE FIELD POINTED TO CONSISTS OF A FIELD LENGTH,               CC0H
*   A P OR A C, THE CLASS NAMES, AND THE NAME OF THE JOB           CC0H
*   SEPERATER PROGRAM IF THERE IS ONE.                             CC0H
*                                                                  I272
*   THE CSCB COMMUNICATIONS AREA CONSISTS OF TWO POINTERS:         I272
*   2. POINTER TO THE COMMUNICATION ECB. THIS ECB IS POSTED ON     CC0H
*   A COMMAND TO THIS WRITER.                                      CC0H
*   3. POINTER TO THE COMMAND INPUT BUFFER (CIB). THE FIELD        CC0H
*   (MAPPED IN A DSECT BELOW) INCLUDES FIELD LENGTH,               CI0I
*   COMMAND TYPE, AND THE COMMAND CONSISTING OF CLASS AND/OR       CC0H
*   PAUSE TYPE.                                                    CC0H
*                                                                    *
*ATTRIBUTES--THIS ROUTINE IS REENTRANT AND REFRESHABLE             CC0H
*                                                                    *
*NOTES--THE FOLLOWING SYSTEM MACROS ARE USED                         *
*   GETMAIN,FREEMAIN,OPEN,RETURN                                   CC0H
*                                                                    *
**********************************************************************
*        ESSENTIAL EQUATES                                           *
**********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
ORDISP   EQU   10                  'OR' DISPLACEMENT INTO TABLE ENTRY
SSOBDISP EQU   8                   PARAMETER DISPLACEMENT INTO SSOB
KEYSIZE  EQU   12                  SIZE OF ONE TABLE ENTRY
KEYDISP  EQU   0                   DISP. OF KEY IN TABLE ENTRY
ANDDISP  EQU   11                  'AND' DISP. IN TABLE ENTRY
MSGSIZ   EQU   46                  SIZE OF KEYWORD BAD MSG.
NAMDISP  EQU   16                  DISP. OF WTR. NAME IN KEYWORD MSG.
*                                                                    *
FTFTWO   EQU   128                      1442               SWITCH
*                                                                A29072
INCONE   EQU   1                        INCREMENT BY ONE         A29072
DIVTWO   EQU   1                        DIVIDE BY TWO            A29072
EOCFLAG  EQU   5                                                 M3017
CCWLGN   EQU   8                        LGN OF 1 CCW             A29072
NOP      EQU   X'03'                    NOP CCW OP CODE          A29072
NINE     EQU   X'09'                    DIVIDE TO 2 CHAINS       A29072
FLAGF    EQU   X'FF'                    ONE BYTE FLAG TO MARK    A29072
*                                         END OF CCW CHAIN OR    A29072
*                                         USER SPECIFIED CNTRL C A29072
SIXTEEN  EQU   16                       LENGTH OF SIXTEEN        A43873
DEBADDR  EQU   8                                                 A32047
UCBADDR  EQU   32                                                A32047
FOUR     EQU   4                        LENGTH OF FOUR           S20202
HIAR1    EQU   X'80'                    HIARCHY 1 IN PARUCSID    A36842
**********************************************************************
         EJECT
**********************************************************************
*        IASXSD81                  THE PROGRAM                       *
**********************************************************************
***                                                                ***
*        ESTABLISH BASE                                              *
***                                                                ***
         BALR  R9,0
         USING *,R9
***                                                                ***
*        MOVE CLASSNAME INDICATION FROM CSCB TO WORK AREA IN PARLIST *
***                                                                ***
         LR    R6,R1                    SAVE INPUT REG
         USING PARLIST,R6               ADDRESSABILITY FOR PARLIST
         L     R3,PARCOMM              GET ADDRESS OF COMM AREA    I272
         USING COMMAD,R3               ADDRESSABILITY FOR COMM AREAI272
         L     R4,COMMCIB              GET ADDR OF CIB             I272
         USING CIB,R4                                              CI0I
         CLI   CIBVERB,CIBSTART    TEST FOR START COMMAND; IF NOT, CI0I
         BNE   SD81MOD                  BRANCH TO DO MODIFY
         MVC   PARSAV+12(4),SD81EXIT    SAVE RETURN ADDRESS IN PARSAV
         NI    PARSAV+16,X'7F'     TURN OFF TO INDICATE START FOR ERROR
***                                                                 ***
*        THE FOLLOWING DOES STARTING A WRITER. FIRST DO EXECUTE PARMS *
***                                                                 ***
         LA    R0,COMMCIB              GET ADDR OF CIB PTR         I272
         QEDIT CIBCTR=1,ORIGIN=(0)     SET CIB COUNT FOR MODIFY    CI0I
         MVC   PARWORK2(8),SD81BLNK     BLANKS FOR CLASSNAMES
         L     R5,PARSPL               GET ADDRESS OF SPL          I272
         USING SPLAD,R5                START PARAMETER LIST        I272
         L     R5,SPLPAR                GET ADDRESS OF PROCEDURE PARMS
         LH    R11,0(R5)                GET LENGTH OF PARM FIELD
         LA    R11,2(R11,R5)           ADDRESS BYTE BEYOND END     I272
         L     R3,SD81MESG              GET ADDRESS OF MESSAGES
         LA    R5,2(R5)                 GET START OF SCAN AREA
         CR    R5,R11                   TEST HAVE MORE CONTENT IN PARMS
         BNL   SD81ERPR                 BRANCH TO PARM LENGTH ERROR
         CLI   0(R5),C'P'               TEST FOR PRINT TYPE. IF NOT
         BE    SD81SCS                  BRANCH AROUND SETTING PUNCH SW
         CLI   0(R5),C'C'               TEST FOR PUNCH TYPE. IF NOT
         BNE   SD81ERPR                 BRANCH TO PARM MISSPELL
         OI    PARSWCH,PARPUN           TURN ON PUNCH TYPE SWITCH
SD81SCS  LA    R7,PARWORK2              GET LOCATION CLASSES PUT AT
         CLI   1(R5),C','          IS THERE NO CLASS LIST?
         BE    SD81SEP             NO, CHECK FOR JOB SEPARATOR
         CLI   1(R5),C' '          IS THERE A BLANK FOR END OF LIST?
         BE    SD81SSC             YES, CHECK START STATEMENT
         BAL   R12,SD81NCM              BRANCH TO SCAN WITHOUT COMMAS
         B     SD81SSC                  BRANCH OUT OF SCANS        000F
         B     SD81ERPR           BRANCH TO PARM LENGTH ERROR      000F
         CH    R2,SD81THRE              TEST FOR COMMA. IF NOT
         BNE   SD81ERPR                 BRANCH TO PARM BAD DELIMETER
*        SEPERATION JOB ROUTINE HANDLED HERE
SD81SEP  EQU   *
         LA    R8,1(R5)                 GET START OF SEPERATION FIELD
         CR    R8,R11                   TEST FOR NO SEPERATION FIELD
         BNL   SD81ERPR                 BRANCH TO PARM BAD DELIMETER
         CLI   1(R5),C' '               TEST FOR NO SEPERATION FIELD
         BE    SD81ERPR                 BRANCH TO PARM BAD DELIMETER
         TM    1(R5),X'F0'              TEST FOR NUMERIC FIRST CHAR.
         BO    SD81ERPR                 BRANCH TO PARM MISPELL IF SO
         L     R7,PARJBSEP              GET WHERE ROUTINE NAME TO GO
         BAL   R12,SD81NCM              BRANCH TO SCAN WITHOUT COMMAS
         B     SD81SSC                  BRANCH OUT OF SCANS        000F
         B     SD81ERPR           BRANCH TO PARM LENGTH ERROR      000F
         B     SD81ERPR                 BRANCH TO PARM BAD DELIMETER
*        SCAN THE START COMMAND TO SEE IF CLASSES TO BE OVERRIDDEN    *
SD81SSC  LA    R5,CIBDATA          ADDRESS JOBNAMES                CI0I
         LH    R11,CIBDATLN        LENGTH OF CIBDATA               CI0I
         AR    R11,R5              ADD. BYTE BEYOND END OF CIBDATA CI0I
         CR    R5,R11                   TEST HAVE CONTENT IN CIB
         BNL   SD81SSD                  BRANCH TO DONE
         CLI   0(R5),C' '               TEST FOR BLANKS AS NEXT CHAR.
         BE    SD81SSD                  BRANCH TO ARE DONE
         MVC   PARWORK2(8),SD81BLNK     BLANKS FOR CLASSNAMES
         BAL   R12,SD81NCP         BRANCH TO SCAN CLASS -COMMAS ILLEGAL
         B     SD81SSD             END OF SCAN, CLASSES VALID
         B     SD81ERTL            BRANCH TO TERM LENGTH ERROR
         B     SD81ERDL            BRANCH TO DELIMITER ERROR
SD81SSD  BAL   R12,SD81FKO              BRANCH TO FREE CORE OF CIB
***                                                                 ***
         CLI   PARWORK2,C' '       WAS THERE NO CLASS LIST
         BNE   SD81ONXT            YES, THERE IS A CLASS LIST
         OI    PARDUM,PARMOD       INDICATE TO WAIT ON ONE ECB ONLY
SD81ONXT EQU   *                   CONTINUE WITH OPEN
*        OPEN FOR SYSOUT                                              *
***                                                                 ***
         LA    R1,PARFORM               LOAD ADDRESS OF WORD USED FOR
*                                        OPEN LIST (GOT CORE)
         L     R2,PARDCB                LOAD ADDRESS OF DCB
         MVC   PARFORM,SD81OPEN         MOVE OPEN LIST INTO GOT CORE
         MVC   PARFORM+1(3),PARDCB+1    MOVE ADDR OF ACTUAL DCB,
*                                        THAT IS, DCB IN GOTTEN CORE,
*                                        INTO WORD USED AS OPEN LIST
         USING IHADCB,R2                ADRESSABILITY FOR DCB      CC0H
*ACTUAL OPEN                                                       CC0H
SD81OPN  LA    R1,PARFORM               GET OPEN LIST WORD         CC0H
         OPEN  ((R2),OUTPUT),MF=(E,(1)) OPEN FOR OUTPUT
         TM    DCBOFLGS,X'10'      TEST FOR SUCCESSFULL OPEN     A27785
         BZ    SD81WTOG            WRITE MSG. IF OPEN FAILED
OPENOK   MVC   PARFORM(4),SD81BLNK BLANK OUT PARFORM
         TM    PARSWCH,PARDUMMY    IS THIS A DUMMY DATA SET
         BO    CONTINUE            YES- DON'T GET UCB ADDR.
         L     R8,16               GET TCB ADDRESS
         L     R8,0(R8)
         L     R8,4(R8)            NOW HAVE TCB ADDRESS
         L     R8,DEBADDR(R8)      GET DEB ADDRESS
         L     R8,UCBADDR(R8)      GET UCB ADDRESS
         ST    R8,PARUCB           UPT UCB ADDR IN PARLIST
         USING UCBOB,R8            BASE FOR UCB
         MVC   PARWTRNM,UCBNAME    SAVE WRITER NAME FOR DUMMY D.S.
         TM    UCBTBYT3,UCB3UREC        IS IT UNIT RECORD?       S20202
         BZ    CONTINUE                 NO, BYPASS 3211 CODE     S20202
         CLI   UCBTBYT4,X'09'           IS IT 3211 UCB
         BNE   CONTINUE                 NO, BYPASS 3211 CODE
         L     R8,UCBXTADR              PICK UP UCB EXTENSION    S20202
         DROP  R8                                                A42459
         USING UCBUCS,R8                BASE FOR UCS EXTENSION   A42459
         MVC   PARUCSID(FOUR),UCBUCSID  SAVE DEFAULT UCS ID      A42459
         MVC   PARFCBID(FOUR),UCBFCBID  SAVE DEFAULT FCB ID      A42459
CONTINUE MVC   PARLRECL(2),DCBLRECL                              S20202
         B     SD81OLD                  BRANCH TO SET UP WRITER TO RUN
***                                                                 ***
*        THE FOLLOWING HANDLES A MODIFY COMMAND. FIRST TEST PAUSE     *
SD81MOD  ST    R14,PARSAV+12       SAVE RETURN ADDRESS
         LR    R14,R7              ADDRESS OF SSOB INTO R14
         USING SSOB,R14            ADDRESSABILITY FOR SSOB FOR MODIFY
         LA    R5,CIBDATA          ADDRESS JOBNAMES
         OI    PARSAV+16,X'80'     INDICATE MODIFY IN CASE OF ERR RTRN
         LH    R11,CIBDATLN        LENGTH OF CIBDATA               CI0I
         AR    R11,R5              ADD. BYTE BEYOND END OF CIBDATA CI0I
         L     R3,SD81MESG         ADDRESS MESSAGES                CI0I
         MVI   PARCHAR,X'00'            INDICATE NOTHING TO MODIFY YET
         CR    R5,R11                   TEST HAVE MORE CONTENT IN CIB
         BNL   SD81ERPM                 BRANCH TO NO PARAMETER ERROR
         CLI   0(R5),C' '               TEST FOR BLANK AS NEXT CHAR.
         BE    SD81ERPM                 BRANCH TO NO PARAMETER ERROR
SD81TRD  CR    R5,R11                   TEST HAVE MORE CONTENT IN CIB
         BE    SD81IMD             BRANCH TO IMPLEMENT COMMAND
SD81TFR  CLC   0(11,R5),SD81FRM         COMPARE TO PAUSE=FORMS
         BE    SD81PAUF            BRANCH TO PROCESS PAUSE=FORMS
         CLC   0(7,R5),SD81SFMP    TEST FOR P=FORMS
         BNE   SD81TDA             BRANCH TO TEST PAUSE=DATASET
         SH    R5,=H'4'            SUBTRACT FOUR TO MAKE UP FOR SHORT
SD81PAUF TM    PARCHAR,PARCPAU     TEST FOR ALREADY HAVE PAUSE
         BO    SD81ERDF                 BRANCH TO DUPLICATE FIELD ERROR
         OI    PARCHAR,PARCPAU          INDICATE PAUSE=FORMS
         LA    R5,11(R5)                GET NEXT CHARACTER TO TEST
SD81TND  CR    R5,R11                   TEST ARE DONE
         BH    SD81ERTL                 BRANCH TO TERM LENGTH ERROR
         BE    SD81IMD                  BRANCH TO IMPLEMENT COMMAND
         CLI   0(R5),C' '               TEST ARE DONE
         BE    SD81IMD                  BRANCH TO IMPLEMENT COMMAND
SD81TCM  CLI   0(R5),C','               TEST FOR COMMA AS NEXT CHAR.
         BNE   SD81ERDL                 BRANCH TO DELIM ERROR AS NOT ,
         LA    R5,1(R5)                 GET NEXT CHARACTER TO TEST
         B     SD81TRD                  BRANCH TO TEST FOR MORE FIELDS
SD81TDA  CLC   0(13,R5),SD81DTS         COMPARE TO PAUSE=DATASET
         BE    SD81PAUD            BRANCH TO PROCESS PAUSE=DATASET
         CLC   0(9,R5),SD81SFMD    IS KEYWORD 'P=DATASET'
         BNE   SD81TCL             BRANCH TO CLASS TEST IF NOT
         SH    R5,=H'4'            SUBTRACT 4 FOR SHORT FORM
SD81PAUD TM    PARCHAR,PARCPAU     TEST FOR ALREADY HAVE PAUSE
         BO    SD81ERDF                 BRANCH TO DUPLICATE FIELD ERROR
         OI    PARCHAR,PARCPAU+PARCDAT  INDICATE PAUSE=DATASET
         LA    R5,13(R5)                GET NEXT CHARACTER TO TEST
         B     SD81TND                  BRANCH TO SEE IF THIS FIELD OK
*                                                                     *
*        THIS HANDLES CLASS                                           *
*                                                                     *
SD81TCL  CLC   0(6,R5),SD81CLA          COMPARE TO CLASS=
         BE    SD81CLSS            BRANCH TO PROCESS CLASS
         CLC   0(2,R5),SD81CLSE    IS KEYWORD C=
         BNE   SD81SELC            TEST FOR OTHER KEYWORDS
         SH    R5,=H'4'            SUBTRACT TO ACCOUNT FOR SHORT FORM
SD81CLSS TM    PARCHAR,PARCCLA     TEST FOR ALREADY HAVE CLASSES
         BO    SD81ERDF                 BRANCH TO DUPLICATE FIELD ERROR
         OI    PARCHAR,PARCCLA          INDICATE CLASSES
         LA    R5,6(R5)                 GET NEXT CHARACTER TO TEST
         CR    R5,R11                   TEST FOR TOO LONG. IF SO
         BE    SD81AND1            YES, CLASS IS NULL
         BH    SD81ERTL            BRANCH TO TERM LENGTH ERROR
         CLI   0(R5),C','          IS CLASS NULL
         BNE   CKCLS               NO, GO ADD CLASSES
SD81AND1 NI    SSSOFLG1,255-SSSOSCLS    TURN OFF SELECTION BY CLASS
         B     SD81TND             CHECK FOR MORE KEYWORDS
CKCLS    OI    SSSOFLG1,SSSOSCLS   TURN ON SELECTION BY CLASS
         MVC   PARWORK2(8),SD81BLNK     BLANK FOR CLASSNAMES
         SR    R2,R2               GET ZERO IN FUNCTION REGISTER
SD81OCL  BAL   R12,SD81NCP        BRANCH TO SCAN WITHOUT COMMAS    000F
         B     SD81CLSM            BRANCH TO MOVE IN CLASS LIST
         B     SD81ERTL           BRANCH TO TERM LENGTH ERROR      000F
         B     SD81CLSM            BRANCH TO MOVE IN CLASS LIST
*                                                                     *
*        COMMAND IS VALID. THIS SECTION IMPLEMENTS IT.                *
*                                                                     *
SD81IMD  BAL   R12,SD81FKO              BRANCH TO FREE CORE OF CIB
         TM    PARCHAR,PARCCLA          TEST FOR HAVE CLASSES, IF SO
         BO    SD81IMP                  BRANCH AROUND USE PREVIOUS 000F
         MVC   PARWORK2(8),PARGCLN     USE PREVIOUS CLASSNAMES   A28724
SD81IMP  TM    PARCHAR,PARCPAU+PARCDAT  TEST FOR PAUSE CHANGE
         BZ    SD81MODO            BRANCH TO AVOID PAUSE CHANGE
         BO    SD81IDA                  BRANCH TO MAKE PAUSE ON DATASET
         NI    PARSWCH,255-PARDAT       INDICATE PAUSE ON FORMS
         B     SD81MODO            BRANCH TO FIX WRITER TO RUN
SD81IDA  OI    PARSWCH,PARDAT           INDICATE PAUSE ON DATASET
         B     SD81MODO            BRANCH TO FIX WRITER TO RUN
***                                                                 ***
*        THE FOLLOWING CODE IS A SUBROUTINE THAT SCANS ALPHANUMERIC   *
*        CHARACTERS IN XXXXXXXX FORM AND PUTS THEM IN A DESTINATION.  *
*        NO MORE THAN 8 CHARACTERS ARE MOVED.                      000F
***                                                                000F
SD81NCP  LA    R7,PARWORK2        GET LOCATION CLASSES PUT AT      000F
         SR    R2,R2                    ZERO OUT FUNCTION REGISTER 000F
         SR    R8,R8                    ZERO OUT COUNT             000F
         B     SD81NCQ                  BRANCH TO CONTINUE SCAN    000F
SD81NCM  SR    R2,R2                    ZERO OUT FUNCTION REGISTER
         SR    R8,R8                    ZERO OUT COUNT
SD81NCN  LA    R5,1(R5)                 GET LOCATION OF NEXT CHAR
SD81NCQ  CR    R5,R11                   TEST FOR BEYOND END        000F
         BCR   11,R12                   BRANCH OUT OF SCANS        000F
         TRT   0(1,R5),SD81TRT          TEST THE CHARACTER. IF NOT GOOD
         BC    2,SD81NCO                BRANCH TO SEE IF A BLANK
         CH    R8,SD81EIGT              TEST FOR 8 CHAR. MOVED ALREADY
         BNL   4(0,R12)                 BRANCH TO LENGTH ERROR     000F
         IC    R10,0(R5)                GET CHARACTER
         STC   R10,0(R7,R8)             STORE IT IN DESTINATION
         LA    R8,1(R8)                 UP COUNT BY 1
         B     SD81NCN                  BRANCH TO DO NEXT CHARACTER
SD81NCO  CH    R2,SD81ATWO              TEST FOR CHARACTER A BLANK
         BCR   8,R12                    BRANCH OUT OF SCANS        000F
         B     8(0,R12)           BRANCH OUT OF SCANS TO 3RD ADD   000F
SD81CLSM MVC   PARGCLN(8),PARWORK2 MOVE IN GOOD CLASS LIST
         B     SD81TND             BRANCH TO TEST IF ARE DONE
***                                                                 ***
*        FREE CIB SUBROUTINE                                          *
***                                                                 ***
         USING COMMAD,R3                                         A27785
SD81FKO  L     R3,PARCOMM              GET ADDR OF COMM AREA       I272
         QEDIT ORIGIN=COMMCIB,BLOCK=(4) FREE CIB                   I272
         BR    R12                      RETURN
***                                                                ***
*        TRANSLATE AND TEST TABLE                                     *
***                                                                ***
SD81TRT  DS    0F
         DC    XL25'01010101010101010101010101010101010101010101010101'
         DC    XL25'01010101010101010101010101010101010101010101010101'
         DC    XL14'0101010101010101010101010101'
         DC    XL1'02'                  BLANK
         DC    XL12'010101010101010101010101'
         DC    XL1'04'                  LEFT PAREN
         DC    XL15'010101010101010101010101010101'
         DC    XL1'05'                  RIGHT PAREN
         DC    XL13'01010101010101010101010101'
         DC    XL1'03'                  COMMA
         DC    XL25'01010101010101010101010101010101010101010101010101'
         DC    XL25'01010101010101010101010101010101010101010101010101'
         DC    XL25'01010101010101010101010101010101010101010101010101'
         DC    XL10'01010101010101010101'
         DC    XL9'00'                  A THRU I
         DC    XL7'01010101010101'
         DC    XL9'00'                  J THRU R
         DC    XL8'0101010101010101'
         DC    XL8'00'                  S THRU Z
         DC    XL6'010101010101'
         DC    XL10'00'                 0 THRU 9
         DC    XL6'010101010101'
SD81TED  EQU   *
***                                                                 ***
*        ERRORS FOUND IN EXECUTE PARAMETER AND COMMAND FIELDS         *
***                                                                 ***
         USING SD81MEPR,R3              ADDRESSABILITY FOR MESSAGES
SD81ERPR LA    R1,SD81MEPR              PROCEEDURE PARM MESSAGE
         B     SD81WTOS                 BRANCH TO WTO
SD81ERDL LA    R1,SD81MSDL              DELIMETER ERROR START MESSAGE
         CLI   CIBVERB,CIBSTART    TEST FOR START COMMAND; IF SO,  CI0I
         BE    SD81WTOS                 BRANCH TO WTO
         LA    R1,SD81MMDL              IF NOT GET MODIFY MESSAGE
         B     SD81WTOM                 BRANCH TO WTO
SD81ERTL LA    R1,SD81MSTL              TERM LENGTH START MESSAGE
         CLI   CIBVERB,CIBSTART    TEST FOR START COMMAND; IF SO,  CI0I
         BE    SD81WTOS                 BRANCH TO WTO
         LA    R1,SD81MMTL              IF NOT GET MODIFY MESSAGE
         B     SD81WTOM                 BRANCH TO WTO
SD81ERPM LA    R1,SD81MMPM              PARAMETER MISSING MODIFY MESG
         B     SD81WTOM                 BRANCH TO WTO
SD81ERDF LA    R1,SD81MMDF              PARAMETERS CONFLICT MODIFY MESG
         B     SD81WTOM                 BRANCH TO WTO
SD81WTOM OI    PARDUM,PARMOD       INDICATE WAIT ON ONE ECB ONLY
         L     R3,PARCOMM          GET ADDR. OF COMM AREA
         USING COMMAD,R3               ADDRESSABILITY FOR COMM AREAI272
         L     R3,COMMCIB              GET ADDR OF CIB             I272
         USING CIB,R3                  COMMAND INPUT BUFFER        I272
         SR    R0,R0                   CLEAR REGISTER              I272
         IC    R0,CIBCONID             GET CONSOLE ID              I272
SD81MWTO WTO   MF=(E,(1))          WRITE TO OPERATOR
         BAL   R12,SD81FKO             FREE CIB CORE               I272
         MVC   PARWORK2(8),PARGCLN      USE PREVIOUS CLASSNAMES    I272
         B     SD81OLD                 SET UP CLASSNAMES           I272
SD81WTOS L     R3,PARCOMM              GET ADDR OF COMM AREA       I272
         USING COMMAD,R3               CSCB COMMUNICATIONS AREA    I272
         L     R3,COMMCIB              GET ADDR OF CIB             I272
         USING CIB,R3                  COMMAND INPUT BUFFER        I272
         SR    R0,R0                   CLEAR REGISTER              I272
         IC    R0,CIBCONID             GET CONSOLE ID              I272
         WTO   MF=(E,(1))              WRITE START MESSAGE         I272
FREECORE BAL   R12,SD81FKO         BRANCH TO FREE CORE OF CIB    A27785
*                                                                  I272
ERROUT   SR    R15,R15                  INDICATE NO I/O ERROR    A58031
         TM    PARSAV+16,X'80'     MODIFY?
         BZ    RESTORE             NO
         L     R14,PARSAV+12       RESTORE RETURN ADDRESS
         LA    R15,4               INDICATE ERROR RETURN
         BR    R14                 RETURN
*                                                                     *
RESTORE  ST    R15,SIXTEEN(R13)    STORE IN SAVE AREA
         L     R1,PARDCB                LOAD ADDRESS OF CORE     A58031
*                                       OBTAINED                 A45415
*                                        BY IEFSD080 (INIT. ROUT.)
         LA    R7,4                     DECREMENT THE ADDRESS
         SR    R1,R7                     TO THE LENGTH FIELD ADDR
         L     R0,0(R1)                 LOAD PREVIOUSLY STORED LENGTH
         FREEMAIN R,LV=(0),A=(1)
         LR    R1,R3                    RESTORE ORIGINAL CONTENTS OF
*                                        PARAMETER REGISTER (SPL PTR)
*                                        BEFORE RETURNING
         RETURN (14,12),T               ISSUE RETURN
***                                                                 ***
* THE SYSOUT WRITER GIVES                                             *
* UP CONTROL AT THIS POINT                                            *
***                                                                 ***
         USING SD81MEPR,R3                                       A27785
SD81WTOG L     R3,SD81MESG         EST ADDRESSIBILITY FOR MSG    A27785
         L     R7,PARWORK          GET ADDRESS OF CORE FOR WTO
         MVC   0(SD81OEND-SD81OPER,R7),SD81OPER   MOVE MSG TO WRITE
         MVC   WTRNMPS(3,R7),PARWTRNM   PUT WRITER IDENT. IN MSG.
         LR    R1,R7               ADDRES OF WTO
WTOPR    WTO   MF=(E,(1))              ISSUE MESSAGE             A27785
         B     ERROUT                   BRANCH TO FREECORE &     A45415
*                                       RETURN                   A45415
*                                      THE CLASSNAMES ARE NOW IN THE
*                                        PARAMETER LIST WORK AREA,
*                                        SUCCESSIVE AND LEFT-JUSTIFIED
*                                        THEREIN, FOLLOWED BY BLANKS
*                                        IF LESS THAN 8 CLASSNAMES
SD81OLD  MVC   PARGCLN(8),PARWORK2 SAVE GOOD CLASSNAMES
         USING SPLAD,R3                                          A27785
SD81MODO EQU   *
         L     R3,PARCOMM              GET ADDRESS OF COMM AREA    I272
         USING COMMAD,R3               CSCB COMMUNICATIONS AREA    I272
         L     R3,COMMECB              GET ADDR OF COMMAND ECB     I272
         ST    R3,PARECBL          SAVE COMMAND ECB ADDR.
**********************************************************************
*        EXIT                                                        *
**********************************************************************
         LR    R1,R6                    RESTORE ADDR OF PARLIST
         XR    R8,R8                    CLEAR IND REG USED BY IEFSD082
         L     R14,PARSAV+12       RESTORE RETURN ADDRESS
         SR    R15,R15             NORMAL RETURN
         BR    R14                 EXIT
*                                       **************
***                                                                 ***
*   SEARCH SELECTION CRITERIA TABLE FOR MATCH, ADD OR DELETE SELECTION*
*   CRITERIA FROM SSOB
***                                                                 ***
SD81SELC MVC   PARWORK2(8),SD81BLNK     CLEAR WORK AREA
         LA    R7,PARWORK2         ADDRESS FOR KEYWORD
         LR    R2,R5               START OF KEYWORD
         XR    R1,R1               ZERO R1
SD81EQU  CLI   0(R2),C'='          IS THIS THE END OF KEYWORD
         BE    SD81MVE             YES
         LA    R2,1(R2)            INCREMENT TO NEXT BYTE
         LA    R1,1(R1)            INCREASE SIZE OF KEYWORD
         CH    R1,SEVEN            HAS MAXIMUM SIZE BEEN REACHED
         BNL   KEYBAD              YES, ISSUE ERROR MSG.
         B     SD81EQU             CHECK FOR END OF KEYWORD
SD81MVE  EX    R1,SD81MOVE         MOVE KEYWORD TO WORK AREA
         LA    R5,1(R2)            INCREMENT TO PARAMETER
         LA    R15,TABLE           BEGINNING OF TABLE
         LA    R1,8                ENTRIES IN TABLE
KEYMTCH  CLC   PARWORK2(7),KEYDISP(R15)      DOES KEYWORD MATCH TABLE
         BE    SD81MTCH            YES
         LA    R15,KEYSIZE(R15)    INCREMENT TO NEXT ENTRY
         BCT   R1,KEYMTCH          TRY NEXT ENTRY
         B     KEYBAD              NO MATCH FOUND
SD81MTCH CLI   0(R5),C','          IS PARAMETER A NULL
         BE    SD81AND             YES, PARAMETER IS NULL
         CR    R5,R11              TEST FOR END OF COMMAND
         BNE   SD81ORC             NO, GO ADD CRITERIA
SD81AND  NC    SSSOFLG1(1),ANDDISP(R15) REMOVE SELECTION CRITERIA
         B     SD81TND             SEARCH FOR ANOTHER CRITERIA
SD81ORC  CR    R5,R11              IS THIS END OF DATA
         BNL   SD81ERTL            YES
         MVC   PARWORK2(8),SD81BLNK     CLEAR WORK AREA
         SR    R2,R2               ZERO R2
         BAL   R12,SD81NCP         PARSE PARAMETER
         B     SD81IMPL            NORMAL RETURN
         B     SD81ERTL            ERROR RETURN
SD81IMPL LH    R1,SSOBDISP(R15)    GET DISPLACEMENT INTO SSOB
         AR    R1,R14              ADD DISPLACEMENT TO SSOB ADDR.
         CLI   0(R15),C'F'         IS KEYWORD FORMS
         BE    SD81FORM            YES
         CLI   0(R15),C'W'         IS THE KEYWORD WRITER?
         BNE   MOVEPARM            NO
         CLC   PARWORK2(6),=C'STDWTR'   IS WRITER NAME STDWTR?
         BNE   MOVEPARM            NO, CONTINUE
         MVC   PARWORK2(8),SD81BLNK     BLANK OUT WRITER NAME
MOVEPARM MVC   0(8,R1),PARWORK2    PUT PARAMETER INTO SSOB
ORCHAR   OC    SSSOFLG1(1),ORDISP(R15)  OR IN SELECTION CRITERIA FLAG
         B     SD81TND             CHECK FOR MORE KEYWORDS
SD81FORM CLC   PARWORK2+4(4),SD81BLNK   IS FORM NUMBER VALID
         BNE   SD81ERTL            NO
         MVC   0(4,R1),PARWORK2    PUT FORM NUMBER INTO SSOB
         OC    SSSOFLG1(1),ORDISP(R15)  OR ON CRITERIA FLAG
         B     SD81TND             CHECK FOR MORE KEYWORDS
         USING SD81MEPR,R3         MESSAGE ADDRESSABILITY
KEYBAD   LA    R2,M81MODBD         KEYWORD INVALID
         L     R15,PARWKLST        WORK LIST ADDRESSABILITY
         USING WORKLST,R15         ADDRESS WORK LIST
         L     R1,WJFCB            WORK AREA ADDRESS
         DROP  R15                 DROP REGISTER 15
         MVC   0(MSGSIZ,R1),0(R2)  MOVE MSG. SKELETON TO WORK AREA
         MVC   NAMDISP(3,R1),PARWTRNM   MOVE IN WRITER NAME
         OI    PARDUM,PARMOD       TELL 082 TO WAIT ON ONE ECB
         B     SD81MWTO            WRITE MSG
SD81MOVE MVC   0(1,R7),0(R5)       MOVE KEYWORD INTO WORK AREA
         EJECT
**********************************************************************
*        CONSTANTS  AND  DSECTS                                      *
**********************************************************************
         DS    0F
SD81CLAS DC    X'000000C0'
SD81PSTD DC    X'40000000'              MODEL OF POSTED  ECB
SD81BT1N DC    X'80000000'
SD81000F DC    X'0000000F'
SD81BLNK DC    C'        '
SD81THRE DC    H'3'
SD81ATWO DC    H'2'
SD81FIVE DC    H'5'
SD81FOUR DC    H'4'
SD81EIGT DC    H'8'
SEVEN    DC    H'7'                SEVEN
SD81EXIT DC    V(IASXSD82)         ADDRESS OF EXIT ROUTINE
SD81MESG DC    A(IASSD81M)         ADDRESS OF MESSAGE CSECT
SD81OPEN OPEN  (0,OUTPUT),MF=L
         DS    0F
SD81FRTY DC    H'40'
SD81SFMP DC    C'P=FORMS'
SD81SFMD DC    C'P=DATASET'        PAUSE=DATASET, SHORT FORM
SD81CLSE DC    C'C='               SHORT FORM OF CLASS=
SD81FRM  DC    C'PAUSE=FORMS'
SD81DTS  DC    C'PAUSE=DATASET'
SD81CLA  DC    C'CLASS='
TABLE    DS    0F                  TABLE OF VALID KEYWORDS
         DC    CL8'F=',AL2(SSSOFORM-SSOB),AL1(SSSOSFRM)
         DC    AL1(255-SSSOSFRM)
         DC    CL8'D=',AL2(SSSODEST-SSOB),AL1(SSSODST)
         DC    AL1(255-SSSODST)
         DC    CL8'W=',AL2(SSSOPGMN-SSOB),AL1(SSSOSPGM)
         DC    AL1(255-SSSOSPGM)
         DC    CL8'J=',AL2(SSSOJOBI-SSOB),AL1(SSSOSJBI)
         DC    AL1(255-SSSOSJBI)
         DC    CL8'FORMS=',AL2(SSSOFORM-SSOB),AL1(SSSOSFRM)
         DC    AL1(255-SSSOSFRM)
         DC    CL8'DEST=',AL2(SSSODEST-SSOB),AL1(SSSODST)
         DC    AL1(255-SSSODST)
         DC    CL8'WRITER=',AL2(SSSOPGMN-SSOB),AL1(SSSOSPGM)
         DC    AL1(255-SSSOSPGM)
         DC    CL8'JOBID=',AL2(SSSOJOBI-SSOB),AL1(SSSOSJBI)
         DC    AL1(255-SSSOSJBI)
         DC    20F'0'
***
**********************************************************************
TCBAR    DSECT
         DS    2F
TCBDEB   DS    1F
TCBTIO   DS    1F
**********************************************************************
         IEFJSSOB (SO)             SSOB
***********************************************************************
         IEFSDWKT
***********************************************************************
         IEFTIOT1                                                A27785
***********************************************************************
DEBAR    DSECT
         DS    8F
DEBUCB   DS    1F
**********************************************************************
CIB      DSECT                                                     CI0I
         IEZCIB                                                    CI0I
         IEFSDBAR                                                MAPMAC
         EJECT
**********************************************************************
UCBAR    DSECT
         IEFUCBOB
**********************************************************************
         EJECT
**********************************************************************
         DCBD  DSORG=PS
         EJECT
         IEFSDPAR                                                MAPMAC
COMMAD   DSECT                         COMMUNICATIONS AREA IN CSCB I272
COMMECB  DS    A                       ADDR OF COMMAND ECB         I272
COMMCIB  DS    A                       ADDR OF COMMAND INPUT BUFFERI272
**********************************************************************
IASSD81M CSECT
***                                                                 ***
*                                                                     *
* THIS CSECT CONTAINS THE MESSAGES USED TO INDICATE A COMMAND OR      *
* EXECUTE PARAMETER ERROR. THE COMMAND WILL NOT BE EXEUCTED.          *
*                                                                     *
***                                                                 ***
WTRNMPS  EQU   12                  WTR NAME DISPLACEMENT         A27785
SD81MEPR WTO   'IEE192I INVALID PROCEDURE PARM FIELD FORMAT',MF=L, MC0IX
               DESC=(5),MCSFLAG=(REG0)                             MC0I
SD81MSDL WTO   'IEE307I START  DELIMITER ERROR',MF=L,            A58031X
               DESC=(5),MCSFLAG=(REG0)                             MC0I
SD81MMDL WTO   'IEE307I MODIFY DELIMITER ERROR',MF=L,            A58031X
               DESC=(5),MCSFLAG=(REG0)                             MC0I
SD81MSTL WTO   'IEE308I START  TERM LENGTH ERROR',MF=L,            MC0IX
               DESC=(5),MCSFLAG=(REG0)                             MC0I
SD81MMTL WTO   'IEE308I MODIFY TERM LENGTH ERROR',MF=L,            MC0IX
               DESC=(5),MCSFLAG=(REG0)                             MC0I
SD81MMPM WTO   'IEE311I MODIFY PARAMETER MISSING',MF=L,            MC0IX
               DESC=(5),MCSFLAG=(REG0)                             MC0I
SD81MMDF WTO   'IEE312I MODIFY PARAMETERS CONFLICT',MF=L,          MC0IX
               DESC=(5),MCSFLAG=(REG0)                             MC0I
SD81MSCN WTO   'IEE323I START  CLASSNAME ERROR',MF=L,              MC0IX
               DESC=(5),MCSFLAG=(REG0)                             MC0I
SD81MMCN WTO   'IEE323I MODIFY CLASSNAME ERROR',MF=L,              MC0IX
               DESC=(5),MCSFLAG=(REG0)                             MC0I
SD81OPER  WTO 'IEF307I XXX WTR CLOSED-OUTPUT DCB FAILED TO OPEN',      "
               MF=L,ROUTCDE=(7,10),DESC=(4),MCSFLAG=(REG0)       A27785
SD81OEND EQU   *                                                 A27785
M81MODBD WTO   'IEF177I WTR DDD INVALID MODIFY KEYWORD',MF=L,          C
               ROUTCDE=(2),DESC=(3)
M81MODPM WTO   'IEF178I WTR DDD MODIFY PARAMETER INVALID',MF=L,ROUTCDE=C
               (2),DESC=(3)
         END
