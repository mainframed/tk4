 TITLE 'IFCSAXXX - VTAM RECORD SUMMARY'
*          THIS MODULE IN SUPPORT OF                            XL03004
         MACRO
&NAME    DSGEN ,
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
         AIF   (&ITEMITR EQ 0).START
 MNOTE   20,'DSGEN MACRO OCCURRS AFTER ITEMSORT MACRO HAS BEEN ISSUED.'
         MEXIT
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         MACRO
         HEX   ,
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER,&ARG
       ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND  &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
.MEXIT   MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&K EQ 1).ERR3
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
         AIF   ('&LETTER' EQ 'R').RIGHT
.ERR3    MNOTE '**PARAMETER 3 INCOMPLETE-DSGEN DEFINITION USED**'
         AGO   .USEDEFN
.RIGHT   ANOP
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         BIN   ,
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S,&ARG
          ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&SUB EQ 1).SUB00
         AIF   ('&SYSLIST(3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(3)
         AGO   .SETT
.SUB00   AIF   ('&SYSLIST(&OP,3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(&OP,3)
.SETT    ANOP
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
.MEXIT   MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
         AIF   (&SUB EQ 1).BIN2
         AIF   ('&SYSLIST(2)' NE '').BIN3
         AGO   .BIN2A
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
.BIN2A   ANOP
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         MACRO
         LINEND ,
.*                                 THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
           MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         MACRO
         ITEMFIND &ARG,&ITFDIAG=
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLA  &A,&B,&X,&I
         LCLC  &C1,&C2,&S
         ACTR  100000
&ITEMXPT SETA  0                  INDICATE ITEM NOT FOUND.
         AIF   ('&ARG' NE '').NORM
         AIF   ('&ITFDIAG' EQ 'OFF'  OR  '&ITFDIAG' EQ 'ON').DIAGSET
  MNOTE 0,'ITEMFIND - OPERAND (&ITFDIAG) INVALID FOR ITFDIAG KEYWORD.'
         MEXIT
.DIAGSET ANOP
&DIAGITF SETB  ('&ITFDIAG' EQ 'ON')
         MEXIT
.NORM    AIF   (&ITEMITR GT 0).SORTED
         ITEMSORT
.SORTED  ANOP
&I       SETA  &ITEMITR           COMPUTED ITTERATION COUNT.
&X       SETA  &ITEMMDX           COMPUTED MAXIMUM INDEX.
&C1      SETC  '&ARG'             ISOLATE SEARCH ARGUMENT.
&C1      SETC  '&C1'.'       '(1,8-K'&C1) PAD TO FULL 8 CHARACTERS.
.SRCHUP  ANOP
&A       SETA  &A+&X              CURRENT TABLE SUBSCRIPT + INDEX.
&S       SETC  '+'
         AIF   (&A  GT &ITEMNBR  AND  NOT &DIAGITF).SRCHDN1
         AIF   (&A  LE &ITEMNBR).SRCH00
&C2      SETC  '*-OVER-*'
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X'
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
.NOFIND  MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEXIT
.SRCH00  ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
         AIF   (&I LT 0).NOFIND   IF COUNT HAS GONE TO ZERO.
&X       SETA  &X/2               HALVE INDEX VALUE.
&B       SETA  &ITEMNDX(&A)       GET SUBSCRIPT FROM INDEX TABLE.
&C2      SETC  '&ITEM(&B)'.'       '(1,8-K'&ITEM(&B))  PAD COMPARAND.
         AIF   (NOT &DIAGITF).COMPARE
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X   POS = &B'
.COMPARE AIF   ('&C1' LT '&C2').SRCHDWN   ARGUMENT LOWER, MOVE DOWN.
         AIF   ('&C1' GT '&C2').SRCHUP    ARGUMENT HIGHER, MOVE UP.
&ITEMXPT SETA  &B                 FOUND. SET INDEX POINTER FOR RETURN.
&ITEMFST(&I+1)  SETA  &ITEMFST(&I+1)+1
         MEXIT
.SRCHDWN ANOP
&A       SETA  &A-&X              CURRENT POINTER MINUS INDEX VALUE.
&S       SETC  '-'
         AIF   (&A LE &ITEMNBR).SRCH00    IF WITHIN BOUNDS OF TABLE.
.SRCHDN1 ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
         MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEND
         MACRO
         ITEMSORT  &DUMMY
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLA  &R,&ZI,&I,&A1,&A2,&TEMP
         LCLB  &SR,&GOTO,&TB
         LCLB  &SW(3000)
         LCLC  &C1,&C2
         ACTR  100000
&A1      SETA  0
         AIF   (&ITEMITR EQ 0).LOOP0   TEST FOR RE-ENTRY.
 MNOTE   0,'ITEMSORT MACRO OCCURRS MORE THAN ONCE. TABLE NOT RESORTED.'
         MEXIT
.LOOP0   ANOP
&A1      SETA  &A1+1
&ITEMNDX(&A1) SETA &A1
         AIF   (&A1 LT &ITEMNBR).LOOP0
         AIF   (&ITEMNBR LT 2).MEXIT
&A1      SETA  &ITEMNBR/2         HALF OF TOTAL ENTRIES.
&A2      SETA  0
.LOOP1   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  1                  SET FIRST HALF OF SWITCHES TO 1.
         AIF   (&A2 LT &A1).LOOP1
.LOOP2   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  0                  SET SECOND HALF TO ZERO.
         AIF   (&A2 LT &ITEMNBR).LOOP2
&R       SETA  0                  SET R TO FIRST TRIAL ITEM.
&ZI      SETA  &ITEMNBR-1         SET ZI TO LAST ITEM.
&I       SETA  &ZI-1
.T3      ANOP
&SR      SETB  (&SW(&R+1))        GET FLAG, WHICH WAY TO GO?
&R       SETA  (&R*2)+1+&SR       R=2R+(1 OR 2)
         AIF   (&R LE &I).T3
.T4      ANOP
&R       SETA  (&R-1)/2           R=(R-1)/2
&SR      SETB  (&SW(&R+1))        GET SUBTREE SELECT FLAG.
         AIF   (&SR EQ 0).T7
         AIF   (&GOTO EQ 0).T5
.T7      ANOP
&A1      SETA  &ITEMNDX(&R+1)
&A2      SETA  &ITEMNDX(&ZI+1)
&C1      SETC  '&ITEM(&A1)'.'       '(1,8-K'&ITEM(&A1))
&C2      SETC  '&ITEM(&A2)'.'       '(1,8-K'&ITEM(&A2))
         AIF   ('&C1' LT '&C2').T8
.T9      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
.T8      AIF   (&R GT 0).T4
&GOTO    SETB  1                  SET 'GO TO' T7
&ZI      SETA  &ZI-1
&I       SETA  &I-1
         AIF   (&I GE 0).T3
.MEXIT   ANOP
&ITEMITR SETA 1
&ITEMMDX SETA 1
.ITRLOOP ANOP
&ITEMITR SETA &ITEMITR+1
&ITEMMDX SETA &ITEMMDX+&ITEMMDX
         AIF  (&ITEMMDX LT &ITEMNBR).ITRLOOP
&ITEMITR SETA &ITEMITR-1
&ITEMMDX SETA &ITEMMDX/2
&A1      SETA &ITEMNBR
&A2      SETA &ITEMMDX
&TEMP    SETA &ITEMITR
 MNOTE *,' ITEMS = &A1, MAX INDEX = &A2, ITTERATION COUNT = &TEMP'
         MEXIT
.T5      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
         AGO   .T3
         MEND
         MACRO
         LSTART ,
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLA  &NDX,&CTR
         ACTR  500000
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
         CONVT ,
         GBLA  &BITS(2600),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(2600),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(2600)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(2600)
         GBLC  &LABELS(2600),&LBL(100),&NRENTSX
         LCLB  &SUB
         LCLA  &OP
         LCLA  &OFFSET,&OUT,&IN,&IND,&IBITS,&ISHIFT
.*
.*       CONVERT BINARY TO DECIMAL
.*             &NAME IS THE REFERENCE INTO THE DSECT RECORD
.*             &OUT    IS THE NUMBER OF CHARS TO BE PUT ONTO PRINT LINE
.*                                      DEFAULT IS FOUR MAXIMUM IS 8
.*             &IN       IS THE NUMBER OF BYTES AS INPUT
.*                                      ERROR DEFAULT IS 2 MAXIMUM IS 4
.*
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LLOP
&SUB     SETB  1
.LLOP    ANOP
&OP      SETA  &OP+1
&OUT     SETA  4                        .BR NOT NULL ELSE SET TO 4
         AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(3)' EQ '').B  TEST FOR NULL INPUT
&OUT     SETA  &SYSLIST(3)             SET &OUT FROM INPUT
         AGO   .A
.SUBA    AIF   ('&SYSLIST(&OP,3)' EQ '').B
&OUT     SETA  &SYSLIST(&OP,3)          SET &OUT FROM INPUT
.A       AIF   (&OUT GT 0 AND &OUT LT 9).B   TEST RANGE
.AERR    MNOTE '*** BYTES OUT INCORRECTLY SPECIFIED DEFAULT USED ***'
&OUT     SETA  4
.B       AIF   (&SUB EQ 1).SUBB
         AIF   ('&SYSLIST(2)' EQ '').LOOP    BRANCH IF NULL
&IN      SETA  &SYSLIST(2)              .SET &IN FROM INPUT
         AGO   .BB
.SUBB    AIF   ('&SYSLIST(&OP,2)' EQ '').LOOP
&IN      SETA  &SYSLIST(&OP,2)          .SET &IN FROM INPUT
.BB      AIF   (&IN GT 0 AND &IN LT 5).D     TEST RANGE
.BERR    MNOTE '*** BYTES IN INCORRECTLY SPECIFIED DEFAULT USED ***'
&IN      SETA  2
         AGO   .D
.LOOP    ANOP                           .LOOP TO FIND &NAME IN DSECT
&IND     SETA  &IND+1                   .SET UP LOOP COUNTER
         AIF   ('&ITEM(&IND)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&IND LT &ITEMNBR).LOOP  .TEST FOR END OF DSECT
         MNOTE '*** LOG ITEM NOT DEFINED ***'
         MEXIT
.FOUND   ANOP
&IBITS   SETA  &BITS(&IND)              .SET UP NUMBER OF BITS SPEC
         AIF   (&IBITS-((&IBITS/8)*8) EQ 0).C  .TEST FOR MULTIPLE OF 8
         MNOTE '*** DATA NOT DEFINED A MULTIPLE OF 8 BITS ***'
         MEXIT
.C       ANOP
&IN      SETA  &IBITS/8                 .COMPUTE NUMBER OF BYTES
         AIF   (&IN LT 1 OR &IN GT 4).BERR  .TEST RANGE B IF IN ERROR
&ISHIFT  SETA  &SHIFT(&IND)             .SET UP FOR TEST OF BYTE BNDR
         AIF   (&ISHIFT EQ 0).D         .TEST FOR BYTE BNDRY
         MNOTE '*** DATA NOT ALIGNED ON A BYTE BOUNDARY ***'
         MEXIT
.*
.D       ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),AL.4(9)
         DC    X'&IN',X'&OUT'
&IND     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LLOP
.OUTA    ANOP
         MEND
****************************************************
*    THIS ENTIRE MODULE IN SUPPORT OF  XL30040     *
****************************************************
         MACRO
         SPECIAL  &ROUTINE,&PARAM,&SPACE=
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M.
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT.
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE
.*                                 INTERPRETED AS AN ARGUMENT OF THE
.*                                 SPECIAL ROUTINE.
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO
.*                                 ALLOCATE FOR REQUIRED PROCESSING.
         GBLC  &CSECT
         GBLA  &COUNTR
         LCLA  &ADD
         DC    AL1(128)
         DC    BL.8'&PARAM'
         DC    AL2(&ROUTINE-&CSECT)
         DC    AL2(&COUNTR)
&ADD     SETA  1
         AIF   ('&SPACE' EQ '').NORM
&ADD     SETA  &SPACE
.NORM    ANOP
&COUNTR  SETA  &COUNTR+&ADD
         MEND
         MACRO
         SUM   &LOGITEM,&MASK
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY
.*                                 FOR PROCESSING BY THE SUMMARY MODULE
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.
.*                                 THIS OPERAND SHOULD BE OMITTED FOR
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE
.*                                 MASK WILL BE SET ACCORDING TO THE
.*                                 OFF BYTE BIT DISPLACEMENT OF THE
.*                                ITEM AS DEFINED BY THE MACRO 'DSGEN'
         GBLA  &COUNTR,&ITEMNBR,&BITS(2600),&SHIFT(2600)
         GBLC  &ITEM(2600),&DSECT
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOGITEM NOT FOUND'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF  (&IBITS EQ 1).FORM1 TEST FOR OLD FORM
         AIF  ('&MASK' NE '').FORM1 TEST FOR MASK
         AIF  (&IBITS+&ISHIFT GT 8).MSG  TEST FOR > 8
         DC   AL.1(0),AL.3(&ISHIFT),AL.4(&IBITS)
         DC   AL1(0)
         AGO  .ITEM
.MSG     MNOTE '**BITS GREATER THAN 8**'
        MEXIT
.FORM1    ANOP
          DC   AL1(0)
         AIF   ('&MASK' EQ '').FORM
         DC    B'&MASK'
         AGO   .ITEM
.FORM    ANOP
&BITNBR  SETA  &ISHIFT-7
&BITNBR  SETA  0-&BITNBR
&M       SETA  1
.LOOP2   ANOP
         AIF   (&BITNBR EQ 0).GOTIT
&M       SETA  &M*2
&BITNBR  SETA  &BITNBR-1
         AGO   .LOOP2
.GOTIT   ANOP
         DC    AL1(&M)
.ITEM    DC    AL2(&LOGITEM-&DSECT)
         DC    AL2(&COUNTR)
&COUNTR  SETA  &COUNTR+1
         MEND
         GBLC  &DSECT,&CSECT
&CSECT   SETC  'IFCSAXXX'
&DSECT   SETC  'XVTAM'
          TITLE 'IFCSAXXX- LINKNAME - IFCSAXXX'
IFCSAXXX CSECT
         USING *,R9
         DC    A(SUMSTART)
         DC    A(PENTRY)
R8PTR    DS    F
SCSIZE   DC    H'80'          NUMBER OF COUNTERS NEEDED        @X50DQMC
HEX00    DC    XL4'00'
*
*              VTAM  SUMMARY MODULE
*
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L17      EQU   17                                                P4954
HEX01    EQU   X'01'
HEX02    EQU   X'02'
HEX06    EQU   X'06'
HEX08    EQU   X'08'
HEX10    EQU   X'10'
HEX20    EQU   X'20'
HEX23    EQU   X'23'
HEX25    EQU   X'25'
HEX29    EQU   X'29'
HEX32    EQU   X'32'
HEX60    EQU   X'60'
HEX70    EQU   X'70'
HEX80    EQU   X'80'
HEXE0    EQU   X'E0'
*
*
*        DSGEN  FOR SUMMARY COUNTER AREA
YVTAM    DSECT
         DSGEN (TBLPTR,32),(FWDPTR,32)             HEADER PORTION
         DSGEN (TOTAL,16),(DUM1,16)                 TACKED ON BY EP009
         DSGEN (YCUA,24),(SRIAL,24),(CPUNO,16)      32 BYTES
         DS    CL2
         DSGEN (TERMINAL,64)
*
         DSGEN (LODATE,32),(HIDATE,32)            COMMON SECT
         DSGEN (DEVTYPE,16),(UNRCEOD,16)             L COUNTERS
*
         DSGEN (UNRCSIO,32),(UNRCTE,16),(UNRCPE,16)
         DSGEN (NB01,16),(NB02,16),(NB03,16),(NB04,16),        @X50DQMCX
               (NB05,16),(NB06,16),(NB07,16),(NB08,16),        @X50DQMCX
               (NB11,16),(NB12,16),(NB13,16),(NB14,16),        @X50DQMCX
               (NB15,16),(NB16,16),(NB17,16),(NB18,16)         @X50DQMC
         DSGEN (NB21,16),(NB22,16),(NB23,16),(NB24,16),        @X50DQMCX
               (NB25,16),(NB26,16),(NB27,16),(NB28,16),        @X50DQMCX
               (NB31,16),(NB32,16),(NB33,16),(NB34,16),        @X50DQMCX
               (NB35,16),(NB36,16),(NB37,16),(NB38,16)         @X50DQMC
         DSGEN (SR01,16),(SR02,16),(SR03,16),(SR04,16),                X
               (SR05,16),(SR06,16),(SR07,16),(SR08,16),(SR09,16),      X
               (SR10,16),(SR11,16),(SR12,16),(SR13,16),(SR14,16),      X
               (SR15,16),(SR16,16),(SR17,16),(SR18,16),(SR19,16),      X
               (SR20,16)
*
*
*              DSGEN FOR RECORD
*
XVTAM    DSECT
         DSGEN (CLASRC,8),(SYSREL,8),(SWITCH1,8),(SWITCH2,8)   @X50DQMC
         DSGEN (SPARE1,32)
         DSGEN (DAY,32),(TIME,32)
         DSGEN (SPARE2,8),(CPUSERL,24),(CPUID,16),(SPARE3,16)
         DSGEN (JOBID1,32)
         DSGEN (JOBID2,32)
         DSGEN (FCCWCC,8),(FCCWA,24),(FCCWFL,8),(FCCW,8),(FCCWCT,16)
         DSGEN (CSWK,8),(CSWCA,24)
         DSGEN (CSWUS1,1),(CSWUS2,1),(CSWUS3,1),(CSWUS4,1),            X
               (CSWUS5,1),(CSWUS6,1),(CSWUS7,1),(CSWUS8,1),            X
               (CSWCS1,1),(CSWCS2,1),(CSWCS3,1),(CSWCS4,1),            X
               (CSWCS5,1),(CSWCS6,1),(CSWCS7,1),(CSWCS8,1),(CSWCT,16)
         DSGEN (DEVDPD,8),(SECCUA,24)
         DSGEN (DEVTYP1,8),(DEVTYP1A,8),(DEVTYP2,16)
         DSGEN (SPARE4,8),(CUA,24)
         DSGEN (IORET,16),(SBCNT,16)                           @X50DQMC
         DSGEN (SIOCNT,16),(TEMPER,8),(MASK,8),(OP1,8),(OP2,8),        X
               (VTAMFL,8),(LDGRAPH,8)
         DSGEN (TERMNM,64)
         DSGEN (SDR01,4),(SDR02,4),(SDR03,4),(SDR04,4),                X
               (SDR05,4),(SDR06,4),(SDR07,4),(SDR08,4),(SDR09,4),      X
               (SDR10,4),(SDR11,4),(SDR12,4),(SDR13,4),(SDR14,4),      X
               (SDR15,4),(SDR16,4),(SDR17,4),(SDR18,4),(SDR19,4),      X
               (SDR20,4)
         DSGEN (SNB01,1),(SNB02,1),(SNB03,1),(SNB04,1),        @X50DQMCX
               (SNB05,1),(SNB06,1),(SNB07,1),(SNB08,1),        @X50DQMCX
               (SNB11,1),(SNB12,1),(SNB13,1),(SNB14,1),        @X50DQMCX
               (SNB15,1),(SNB16,1),(SNB17,1),(SNB18,1),        @X50DQMCX
               (SNB21,1),(SNB22,1),(SNB23,1),(SNB24,1),        @X50DQMCX
               (SNB25,1),(SNB26,1),(SNB27,1),(SNB28,1),        @X50DQMCX
               (SNB31,1),(SNB32,1),(SNB33,1),(SNB34,1),        @X50DQMCX
               (SNB35,1),(SNB36,1),(SNB37,1),(SNB38,1)         @X50DQMC
         ORG   JOBID1                                          @X50DQMC
         DSGEN (SHRDEV1,8),(SHRDEV1A,8),(SHRDEV2,16)           @X50DQMC
         DSGEN (SHRSDRL,8),(SHRTCUA,24)                        @X50DQMC
         DSGEN (SHRSDR01,4),(SHRSDR02,4),(SHRSDR03,4),         @X50DQMCX
               (SHRSDR04,4),(SHRSDR05,4),(SHRSDR06,4),         @X50DQMCX
               (SHRSDR07,4),(SHRSDR08,4),(SHRSDR09,4),         @X50DQMCX
               (SHRSDR10,4),(SHRSDR11,4),(SHRSDR12,4),         @X50DQMCX
               (SHRSDR13,4),(SHRSDR14,4),(SHRSDR15,4),         @X50DQMCX
               (SHRSDR16,4),(SHRSDR17,4),(SHRSDR18,4),         @X50DQMCX
               (SHRSDR19,4),(SHRSDR20,4)                       @X50DQMC
         DSGEN (SHRSIOC,16)                                    @X50DQMC
*                                                              @X50DQMC
*
*
IFCSAXXX CSECT
         USING XVTAM,R2
SHRFLAG  DC    F'0'                                            @X50DQMC
ONE  DC  F'1'                                                  @X50DQMC
ZERO  DC  F'0'                                                 @X50DQMC
SIXTEEN  DC  F'16'                                             @X50DQMC
OVLYFLAG  DC  F'0'                                             @X50DQMC
*                                                              @X50DQMC
*                                                              @X50DQMC
TESTDEV  STM   R5,R8,SAVEREG                                   @X50DQMC
         TM    SWITCH2,H20       IF 3790 SHORT RECORD          @X50DQMC
         BZ    RETURN            BRANCH IF NO                  @X50DQMC
         CLC   SHRDEV2(2),UNIT90     YES-   IF 3790 FAMILY     @X50DQMC
         BNE   RETURN    NO-                                   @X50DQMC
         SR    R5,R5                                           @X50DQMC
         L     R5,ONE                                          @X50DQMC
         ST    R5,SHRFLAG    SET 3790 SHORT RECORD FLAG        @X50DQMC
         B     RETURN                                          @X50DQMC
*                                                              @X50DQMC
F3790SNB STM   R5,R8,SAVEREG                                   @X50DQMC
         CLC   DEVTYP2(2),UNIT90 IF 3790 LONG RECORD           @X50DQMC
         BE    RETURN      YES-3790 LONG RECORD,TWO SENSE BYTES
         LA    R5,UNRECEND-L6     NO-SKIP SECOND SENSE BYTE    @X50DQMC
         ST    R5,R8PTR                                        @X50DQMC
         B     RETURN                                          @X50DQMC
*                                                              @X50DQMC
*                                                              @X50DQMC
*                                                              @X50DQMC
*
SETDATE  CLC   DAY(L4),HEX00            IS DATE ZERO
         BE    NODATE                   BR-YES
         CLC   L0(L4,R3),HEX00          IS THIS FIRST TIME
         BNE   TESTDTE                  BR-NO
         MVC   L0(L4,R3),DAY            MOVE IN DAY
SAVEHI   MVC   L4(L4,R3),DAY            TO BOTH HI & LOW CNTRS
         BE    NODATE                   EXIT
TESTDTE  CLC   L0(L4,R3),DAY            TEST FOR LOW
         BNH   TESTHI                   BR-SAVED DATE LOW
         MVC   L0(L4,R3),DAY            NEW DATE LOW
TESTHI   CLC   L4(L4,R3),DAY            TEST FOR HI
         BL    SAVEHI              BR-SAVED DATE LOW
NODATE   BR    R14                      RETURN
*
*
*
SETDEV   CLC   SHRFLAG(4),ONE         IF 3790 SHORT RECORD     @X50DQMC
         BE    SHRDEV                 YES-                     @X50DQMC
         MVC   L0(L2,R3),DEVTYP2       NO-                     @X50DQMC
          BR    R14                                            @X50DQMC
SHRDEV   MVC   L0(L2,R3),SHRDEV2                               @X50DQMC
         BR    R14                                             @X50DQMC
*
*
TESTMODE STM   R5,R8,SAVEREG
         CLC   SHRFLAG(4),ONE        IF 3790 SHORT ROECORD     @X50DQMC
         BE    EODRTN       YES-                               @X50DQMC
         CLC   DEVTYP2(2),UNIT90     IF 3790 FAMILY            @X50DQMC
         BE    RETURN     YES                                  @X50DQMC
         TM    VTAMFL,HEX60
         BM    EODRTN
RETURN   LM    R5,R8,SAVEREG
           BR      R14
EODRTN   LH    R5,0(3)
         LA    R5,1(R5)
         STH   R5,0(3)
         B     RETURN
*
*
FWWA    DC      F'0'
ADDSIO   STM   R5,R8,SAVEREG       SAVE REGS
         SR    R5,R5
         XC    FWWA(4),FWWA
         CLC   SHRFLAG(4),ONE    IF 3790 SHORT RECORD          @X50DQMC
         BE   ADSHRSIO                                         @X50DQMC
         MVC   FWWA+2(2),SIOCNT
CONTINUE L     R5,FWWA                                         @X50DQMC
         MVC   FWWA(4),L0(R3)
         A     R5,FWWA
         ST    R5,FWWA
         MVC   L0(4,R3),FWWA
         B     RETURN
ADSHRSIO MVC   FWWA+2(2),SHRSIOC                               @X50DQMC
         B     CONTINUE                                        @X50DQMC
*
ADDTE    STM   R5,R8,SAVEREG
         CLC   SHRFLAG(4),ONE    IF 3790 SHORT RECORD          @X50DQMC
         BE    SHRREC         YES-                             @X50DQMC
         SR    R5,R5                    PICK UP TEMP
         IC    R5,TEMPER                 ERR COUNT
         AH    R5,L0(R3)                ADD SUM TO IT
         STH   R5,L0(R3)                SAVE IT
         CLC   DEVTYP2(2),UNIT90         IF 3790 FAMILY        @X50DQMC
         BE    PERM         YES-                               @X50DQMC
         TM    VTAMFL,HEX60             TEST FOR EOD & OVERFLOW
         BM    RECDONE                  BR YES
PERM     LH    R5,L2(R3)                YES ADD 1 TO PER       @X50DQMC
         LA    R5,L1(R5)                COUNTER &
         STH   R5,L2(R3)                SAVE IT
         B     RETURN
STOREPTR ST    R5,R8PTR            SAVE PTR FOR SUM MODULE
         B     RETURN
RECDONE  LA    R5,UNRECEND-L6      SET PTR TO X'FF' TO SIGNAL END
         B     STOREPTR
*
SHRREC   LA    R5,SHRSDR-L6                                    @X50DQMC
         B     STOREPTR                                        @X50DQMC
JUMP     STM   R5,R8,SAVEREG    SAVE REGISTERS                 @X50DQMC
         CLC   OVLYFLAG(4),ONE    CHECK IF OVERLAY IS DONE     @X50DQMC
         BE    RETURN        YES- SKIP OVERLAY                 @X50DQMC
         SR    R5,R5        NO-  SET OVLYFLAG TO ONE           @X50DQMC
         L     R5,ONE                                          @X50DQMC
         ST    R5,OVLYFLAG                                     @X50DQMC
         LA    R5,SHRSDR                                       @X50DQMC
         LA    R7,SHRSDR+102                                   @X50DQMC
OVERLAY  SR    R6,R6                                           @X50DQMC
         LH    R6,4(0,R5)      GET CURRENT COUNTER POSITION    @X50DQMC
         S     R6,SIXTEEN        REPOSITION BACK SIXTEEN       @X50DQMC
         STH   R6,4(0,R5)        OVERLAY COUNTER               @X50DQMC
         LA    R5,6(0,R5)      GET NEXT ITEM                   @X50DQMC
         CR    R5,R7               DO ALL COUNTERS             @X50DQMC
         BNH   OVERLAY                                         @X50DQMC
         B     RETURN                                          @X50DQMC
*                                                              @X50DQMC
RESTFLAG STM   R5,R8,SAVEREG       ROUTINE TO RESET FLAG       @X50DQMC
         L     R5,ZERO                                         @X50DQMC
         ST    R5,SHRFLAG                                      @X50DQMC
         LA    R5,END-L6     SET  'FF' TO INDICATE END         @X50DQMC
         B     STOREPTR                                        @X50DQMC
*
*
*
SUMSTART DS    0F
         SPECIAL TESTDEV,0,SPACE=0                             @X50DQMC
         SPECIAL    SETDATE,0,SPACE=4
         SPECIAL    SETDEV,0,SPACE=1
         SPECIAL    TESTMODE,0,SPACE=1
*
UNRECSCT EQU   *
         SPECIAL    ADDSIO,0,SPACE=2              ADD SIO CNTRS
         SPECIAL    ADDTE,0,SPACE=2               ADD TEMP/PERM ERRORS
         SUM     SNB01                                         @X50DQMC
         SUM     SNB02                                         @X50DQMC
         SUM     SNB03                                         @X50DQMC
         SUM     SNB04                                         @X50DQMC
         SUM     SNB05                                         @X50DQMC
         SUM     SNB06                                         @X50DQMC
         SUM     SNB07                                         @X50DQMC
         SUM     SNB08                                         @X50DQMC
         SUM     SNB11                                         @X50DQMC
         SUM     SNB12                                         @X50DQMC
         SUM     SNB13                                         @X50DQMC
         SUM     SNB14                                         @X50DQMC
         SUM     SNB15                                         @X50DQMC
         SUM     SNB16                                         @X50DQMC
         SUM     SNB17                                         @X50DQMC
         SUM     SNB18                                         @X50DQMC
         SPECIAL  F3790SNB,0,SPACE=0                           @X50DQMC
         SUM     SNB21                                         @X50DQMC
         SUM     SNB22                                         @X50DQMC
         SUM     SNB23                                         @X50DQMC
         SUM     SNB24                                         @X50DQMC
         SUM     SNB25                                         @X50DQMC
         SUM     SNB26                                         @X50DQMC
         SUM     SNB27                                         @X50DQMC
         SUM     SNB28                                         @X50DQMC
         SUM     SNB31                                         @X50DQMC
         SUM     SNB32                                         @X50DQMC
         SUM     SNB33                                         @X50DQMC
         SUM     SNB34                                         @X50DQMC
         SUM     SNB35                                         @X50DQMC
         SUM     SNB36                                         @X50DQMC
         SUM     SNB37                                         @X50DQMC
         SUM     SNB38                                         @X50DQMC
UNRECEND  EQU  *
         SUM   SDR01
         SUM   SDR02
         SUM   SDR03
         SUM   SDR04
         SUM   SDR05
         SUM   SDR06
         SUM   SDR07
         SUM   SDR08
         SUM   SDR09
         SUM   SDR10
         SUM   SDR11
         SUM   SDR12
         SUM   SDR13
         SUM   SDR14
         SUM   SDR15
         SUM   SDR16
         SPECIAL RESTFLAG,0,SPACE=0                            @X50DQMC
SHRSDR   EQU   *                                               @X50DQMC
         SPECIAL JUMP,0,SPACE=0                                @X50DQMC
         SUM   SHRSDR01                                        @X50DQMC
         SUM   SHRSDR02                                        @X50DQMC
         SUM   SHRSDR03                                        @X50DQMC
         SUM   SHRSDR04                                        @X50DQMC
         SUM   SHRSDR05                                        @X50DQMC
         SUM   SHRSDR06                                        @X50DQMC
         SUM   SHRSDR07                                        @X50DQMC
         SUM   SHRSDR08                                        @X50DQMC
         SUM   SHRSDR09                                        @X50DQMC
         SUM   SHRSDR10                                        @X50DQMC
         SUM   SHRSDR11                                        @X50DQMC
         SUM   SHRSDR12                                        @X50DQMC
         SUM   SHRSDR13                                        @X50DQMC
         SUM   SHRSDR14                                        @X50DQMC
         SUM   SHRSDR15                                        @X50DQMC
         SUM   SHRSDR16                                        @X50DQMC
         SPECIAL RESTFLAG,0,SPACE=0                            @X50DQMC
END      DC    X'FF'           END OF SUM SECTION              @X50DQMC
*
*
*
*
*
*
*              EDIT PRINT SECTION
*
&CSECT   SETC  'PENTRY'
&DSECT   SETC  'YVTAM'
*
PENTRY   DS    0F
         DC    A(PENTRIES)
         DC    CL8'IFCSAXXX'
R9PTR    DS    2F
*
*              SPECIAL ROUTINES
*
         USING PENTRY,R9
         USING YVTAM,R2
*
CONVERT  STM   R5,R8,SAVEREG
         LH    R5,L0(R4)           PICK UP CNTR
         LTR   R5,R5               IS IT ZERO
         BZ    RETURNA             BR-YES
CONVT    CVD   R5,WORK
         UNPK  L0(L4,R3),WORK+L4(L4) PACK IT INTO BUFF
         MVZ   L3(L1,R3),L0(R3)    PUT ON ZONE
RETURNA  LM    R5,R8,SAVEREG
SKIPPER  BR    R14
*
*
SETCPUNO STM   R5,R8,SAVEREG            SAVE REGS
         SR    R5,R5                    CLEAR R5
         IC    R5,0(R4)                 PICK UP CPU TYPE
         SLL   R5,R8
         IC    R5,L1(R4)
         LTR   R5,R5                    IS IT ZERO
         BNZ   RETURNA                  NO
         LA    R6,L64                   CORREST DATA POINTER
         SR    R3,R6
         MVC   L0(L6,R3),SHARED           MOVE IN SHARED       @Z427VLS
         B     RETURNA
*
SHARED   DC    C'SHARED'                                       @Z427VLS
NONE     DC    C' NONE '
*
SETDATE2 UNPK  WORK(L8),L0(L4,R4)
         MVZ   WORK+L7(L1),WORK
         MVC   L0(L3,R3),WORK+L5        MOVE IN DAYS
         MVC   L5(L2,R3),WORK+L3        MOVE IN YEAR
         BR    R14
SETDEV2  MVC   L0(L4,R3),C3270     MOVE IN 3270                @XA20412
         CLC   L0(L2,R4),UNIT70    IS IT 3270                  @XA20412
         BER   R14                 YES,RETURN                  @XA20412
         CLC   L0(L2,R4),UNIT90    IS IT A 3790                @XA20412
         BNE   CHK3705             NO,CHECK FOR 3705           @XA20412
         MVC   L0(L10,R3),C3790    YES MOVE IN 3791 LOCAL      @XA20412
         BR    R14                 AND RETURN                  @XA20412
CHK3705  STM   R5,R8,SAVEREG       SAVE REGISTERS              @XA20412
         CLI   L0(R4),HEX40        IS THIS A COMM DEVICE       @XA20412
         BNE   SETUNKN             NO,DEVICE NOT SUPPORTED     @XA20412
         MVC   L0(L4,R3),C3705     MOVE 3705 TO IMAGE          @XA20412
         LA    R5,L5               TABLE SIZE                  @XA20412
         LA    R6,TYPTAB           GET KNOWN 3705 ID'S         @XA20412
SETLOOP  CLC   L1(L1,R4),L0(R6)    IS THIS ONE                 @XA20412
         BE    RETURNA             YES,RETURN                  @XA20412
         LA    R6,L1(R6)           BCT  R5,SETLOOP             @XA20412
         BCT   R5,SETLOOP                                      @XA20412
SETUNKN  MVC   L0(L4,R3),CUNKN     MOVE INUNKN                 @XA20412
         B     RETURNA                                         @XA20412
*
SETTERM  STM   R5,R8,SAVEREG
         LR    R5,R3               SET R5
         SH    R5,H10              DEC BACK 10 BYTES
         MVC   L0(L8,R5),L0(R4)    MOVE IN TERMINAL NAME
         B     RETURNA
*
*
*
*
FREEALL  STM   R14,R12,L12(R13)         SAVE ALL REGS
         LR    R12,R13
         LA    R13,SAVEREG
         ST    R12,L4(R13)
         ST    R13,L8(R12)
FREEALLA L     R3,L4(R2)                                       @X50DQMC
         LH    R0,SIZE
         LR    R1,R2
         FREEMAIN R,LV=(0),A=(1)
         LTR   R3,R3
         BZ    RETURN0
         LR    R2,R3
         LA    R5,PENTRIES+10
         ST    R5,R9PTR
         LA    R5,LABELS-1
         ST    R5,R9PTR+4
         ST    R3,L28(R12)                                     @X50DQMC
RETURN0  L     R13,L4(R13)                                     @X50DQMC
         LM    R14,R12,L12(R13)
         BR    R14
U3270    CLC   L0(L2,R4),UNIT70    IS THIS A 3270              @XA20412
         STM   R5,R8,SAVEREG       SAVE WORK REGS              @XA20412
         B     SET90               *                           @XA20412
         B     GOCHK               NO,WHATIS IT                @XA20412
*                                                              @XA20412
U3790    CLC   L0(L2,R4),UNIT90    IS IT 3790                  @XA20412
         BER   R14                 YES,RETURN                  @XA20412
         STM   R5,R8,SAVEREG       SAVE WORK REGISTERS         @XA20412
         B     SKIPOUT             *                           @XA20412
*                                                              @XA20412
U3705    STM   R5,R8,SAVEREG       SAVE WORK REGISTERS         @XA20412
         LA    R6,TYPTAB           GET KNOWN 3705 ID'S         @XA20412
         LA    R7,L5               TABLE SIZE                  @XA20412
U3705LP  CLC   L1(L1,R4),L0(R6)    IS IT A 3705                @XA20412
         BE    RETURNA             YES,RETURN                  @XA20412
         LA    R6,L1(R6)                                       @XA20412
         BCT   R7,U3705LP          AND TRY AGAIN               @XA20412
*                                                              @XA20412
GOCHK    CLC   L0(L2,R4),UNIT90    CHECK FOR 3790              @XA20412
         BNE   SET70               *                           @XA20412
         L     R6,L3790                                        @XA20412
         LA    R7,LINE3790-4                                   @XA20412
         B     GOOUT                                           @XA20412
SET70    LA    R6,LAB3270-1        *                           @XA20412
         LA    R7,LINE3270-4                                   @XA20412
         B     GOOUT                                           @XA20412
SET90    CLC   L0(L2,R4),UNIT90    *                           @XA20412
         BNE   SKIPOUT             *                           @XA20412
         L     R6,L3790            *                           @XA20412
         LA    R7,LINE3790-4       *                           @XA20412
         B     GOOUT               *                           @XA20412
SKIPOUT  L     R6,LINLAB           *                           @XA20412
         LA    R7,LASTLINE-4       *                           @XA20412
GOOUT    ST    R6,R9PTR+4          SAVE                        @XA20412
         ST    R7,R9PTR            POINTERS                    @XA20412
         B     RETURNA             AND RETURN                  @XA20412
*                                                              @X50DQMC
SAVEREG  DS    18F
HSAVE    DC    CL1' '
*
SAVE8    DS    F
WORK     DS    D
TOTREC   DS    H
TOTSIO   DS    H
TOTTE    DS    H
TOTUNR   DS    H
TOTIM    DS    H
SIZE     DC    H'160'                                          @X50DQMC
H10      DC    H'10'
L30      EQU   30
L34      EQU   34
L28      EQU   28
H20      EQU   X'20'                                           @X50DQMC
HEX40    EQU   X'40'
HEX03    EQU   X'03'
HEX05    EQU   X'05'
H0F    EQU   X'0F'
L12      EQU   12
LBLPTR   EQU   TBLPTR
C3270    DC    C'3270'
C3705    DC    C'3705'
UNIT70   DC    X'1009'                                         @XA20412
L3790    DC    A(LAB3790-1)                                    @X50DQMC
LINLAB   DC    A(LABLIN-1)                                     @X50DQMC
C3790    DC    C'3791 LOCAL'                                   @X50DQMC
UNIT90   DC    X'40F1'                                         @X50DQMC
TYPTAB   DC    X'0506152535'       LIST OF KNOWN 3705 ID'S     @XA20412
CUNKN    DC    C'UNKN'             UNKNOWN OR UNSUPPORTED DEV  @XA20412
L32      EQU   32
L64      EQU   64
PENTRIES DS    0F
         DC    XL4'00010001'                                   @X50DQMC
         DC    XL4'00010001'                                   @X50DQMC
         DC    A(LABELS)
         DC    H'0'
*
         DC    X'01'
         DC    X'000B8B00'              SKIP TP  CHANNEL 1
         LABEL ''
*
         LINE  (57,32),(23,26),SKIP=1
         HEX   CPUNO,0,2B
         HEX   SRIAL,0,3B
         ROUTINE   CPUNO,SETCPUNO
         LABEL 'DAY YEAR   DAY YEAR','MODEL-','SERIAL NO.'
*
         LINE       (23,11),(1,30),SKIP=2
         ROUTINE    LODATE,SETDATE2
         ROUTINE    HIDATE,SETDATE2
         LABEL      'OUTBOARD DATE RANGE -','TO'
*
         LINE       (48,22),(1,57)
         HEX        YCUA,0,3B
         ROUTINE    DEVTYPE,SETDEV2
         LABEL      'SUMMARY OF VTAM I/O OUTBOARD RECORDS FOR CUA ',   X
               'DEVICE TYPE'
*
         LINE       (26,1),,SKIP=3
         CONVT  TOTAL
         LABEL      'TOTAL NUMBER OF RECORDS'
*
         LINE       (40,67),(5,55),SKIP=1
         CONVT  UNRCSIO,4,6
         CONVT  UNRCPE
         LABEL      'TOTAL NUMBER OF SIO','TOTAL NUMBER OF UNRECOVERABL*
               E (UNREC) ERRORS'
*
         LINE       ,,SKIP=3
         CONVT  UNRCTE
         CONVT  UNRCEOD
         LABEL      'TOTAL NUMBER OF TEMPORARY FAILURES',              *
               'TOTAL NUMBER OF EOD/OVERFLOW RECORDS    '
*
       LINE  ,,SKIP=1                                          @X50DQMC
       ROUTINE  DEVTYPE,U3705                                  @X50DQMC
       LABEL ''                                                @X50DQMC
           LINE    ,,SKIP=3                                    @X50DQMC
           ROUTINE  TERMINAL,SETTERM                           @X50DQMC
           LABEL  'RESOURCE NAME'                              @X50DQMC
         LINE  (12,28),(3,28),SKIP=2                           @X50DQMC
        LABEL 'SENSE BYTE SUMMARY    3705'                     @X50DQMC
         LINE  (17,28),(4,28),SKIP=1                           @X50DQMC
         CONVT NB11                                            @X50DQMC
       LABEL 'CMND REJ'
         LINE   ,
         CONVT NB12                                            @X50DQMC
         LABEL 'INTV REQD'
         LINE  ,
         CONVT NB13                                            @X50DQMC
         LABEL 'BUS O CHK'
         LINE  ,
         CONVT NB14                                            @X50DQMC
           LABEL             'EQUIP CHK'
         LINE  ,
         CONVT NB15                                            @X50DQMC
         LABEL 'N/A'
         LINE  ,
         CONVT NB16                                            @X50DQMC
         LABEL 'N/A'
         LINE  ,
         CONVT NB17                                            @X50DQMC
         LABEL 'IPL REQST'
         LINE  ,
         CONVT NB18                                            @X50DQMC
         LABEL 'ABORT'
        LINE  (20,30),(6,30),SKIP=3
        LABEL ''
        LINE  ,,SKIP=2
        LABEL 'SDR SUMMARY AREA   3705'
        LINE  ,,SKIP=1
        CONVT SR01
        CONVT SR02
        LABEL 'NOT USED','NOT USED'
        LINE  ,
        CONVT SR03
        CONVT SR04
        LABEL 'INTV REQD','BUS OUT'
        LINE ,
        CONVT  SR05
        CONVT  SR06
        LABEL 'EQUIP CHK','NOT USED'
        LINE  ,
        CONVT  SR07
        CONVT  SR08
        LABEL  'IPL REQ','NOT USED'
        LINE  ,
        CONVT  SR09
        CONVT  SR10
        LABEL 'NOT USED','NOT USED'
        LINE  ,
        CONVT  SR11
        CONVT  SR12
        LABEL 'NOT USED','NOT USED'
        LINE ,
        CONVT  SR13
        CONVT  SR14
        LABEL 'NOT USED  ','NOT USED     '
        LINE  ,
        CONVT  SR15
        CONVT  SR16
        LABEL  'NOT USED','CHAN DATA CHK'
       LINE  ,
       ROUTINE  DEVTYPE,U3270
       LABEL ''
LINE3270 LINE  (40,67),(5,55),SKIP=3                           @X50DQMC
         ROUTINE TERMINAL,SETTERM                              @X50DQMC
LAB3270  LABEL 'RESOURCE NAME'                                 @X50DQMC
         LINE  (12,28),(3,28),SKIP=2                           @X50DQMC
        LABEL 'SENSE BYTE SUMMARY    3270'                     @X50DQMC
*                                                              @X50DQMC
*        SENSE BYTE SUMMARY  3270                              @X50DQMC
*                                                              @X50DQMC
         LINE  (17,28),(4,28),SKIP=1                           @X50DQMC
         CONVT NB11                                            @X50DQMC
     LABEL 'CMND REJ'
         LINE  ,
         CONVT NB12                                            @X50DQMC
         LABEL 'INTV REQD'
         LINE  ,
         CONVT NB13                                            @X50DQMC
         LABEL 'BUS O CHK'
         LINE  ,
         CONVT NB14                                            @X50DQMC
           LABEL 'EQUIP CHK'
         LINE  ,
         CONVT NB15                                            @X50DQMC
         LABEL 'DATA CHK'
         LINE  ,
         CONVT NB16                                            @X50DQMC
         LABEL 'UNIT SPEC'
         LINE  ,
         CONVT NB17                                            @X50DQMC
         LABEL 'CNTL CHK'
         LINE  ,
         CONVT NB18                                            @X50DQMC
         LABEL 'OPRTN'
        LINE  (20,30),(6,30),SKIP=3
        LABEL ''
        LINE  ,,SKIP=2
        LABEL 'SDR SUMMARY AREA   3270 '
        LINE  ,,SKIP=1
        CONVT SR01
        CONVT SR02
        LABEL 'READ DC','WRITE DC'
        LINE  ,
        CONVT SR03
        CONVT SR04
        LABEL 'INTV REQD','BUS OUT'
        LINE ,
        CONVT  SR05
        CONVT  SR06
        LABEL 'EQUIP CHK','NOT USED'
        LINE  ,
        CONVT  SR07
        CONVT  SR08
        LABEL  'CNTL CHK','NOT USED'
        LINE  ,
        CONVT  SR09
        CONVT  SR10
        LABEL 'NOT USED','NOT USED'
        LINE  ,
        CONVT  SR11
        CONVT  SR12
        LABEL 'NOT USED','DATA CHK US   '
        LINE ,
        CONVT  SR13
        CONVT  SR14
        LABEL 'INT REQ US  ','INT REQ EC US'
        LINE  ,
        CONVT  SR15
        CONVT  SR16
        LABEL  'EC US','CHAN DATA CHK'
         LINE  ,                                               @X50DQMC
         ROUTINE DEVTYPE,U3790                                 @X50DQMC
         LABEL ''                                              @X50DQMC
LINE3790 LINE  (12,28),(1,28),SKIP=2                           @X50DQMC
LAB3790  LABEL 'SENSE BYTE SUMMARY'                            @X50DQMC
         LINE  ,(4,28),SKIP=2                                  @X50DQMC
         LABEL 'BIT','INITIAL   FINAL'                         @X50DQMC
         LINE  (32,11),,SKIP=1                                 @X50DQMC
         CONVT NB01                                            @X50DQMC
         CONVT  NB21                                           @X50DQMC
         LABEL '0  COMMAND REJECT'                             @X50DQMC
         LINE   ,                                              @X50DQMC
         CONVT  NB02                                           @X50DQMC
         CONVT  NB22                                           @X50DQMC
         LABEL '1  INTERVENTION REQD'                          @X50DQMC
         LINE   ,                                              @X50DQMC
         CONVT  NB03                                           @X50DQMC
         CONVT  NB23                                           @X50DQMC
         LABEL '2  BUS OUT CHK'                                @X50DQMC
         LINE   ,                                              @X50DQMC
        CONVT NB04                                             @X50DQMC
        CONVT NB24                                             @X50DQMC
         LABEL '3  EQUIPMENT CHK'                              @X50DQMC
         LINE   ,                                              @X50DQMC
        CONVT NB05                                             @X50DQMC
        CONVT NB25                                             @X50DQMC
         LABEL '4  DATA CHK'                                   @X50DQMC
         LINE   ,                                              @X50DQMC
        CONVT NB06                                             @X50DQMC
        CONVT NB26                                             @X50DQMC
         LABEL '5  (NOT USED)'                                 @X50DQMC
         LINE   ,                                              @X50DQMC
        CONVT NB07                                             @X50DQMC
        CONVT NB27                                             @X50DQMC
         LABEL '6  NOT INITIALIZED'                            @X50DQMC
         LINE   ,                                              @X50DQMC
        CONVT NB08                                             @X50DQMC
        CONVT NB28                                             @X50DQMC
         LABEL '7  (NOT USED)'                                 @X50DQMC
         LINE   ,                                              @X50DQMC
        CONVT NB11                                             @X50DQMC
        CONVT NB31                                             @X50DQMC
         LABEL '8  LENGTH CHK'                                 @X50DQMC
         LINE  ,                                               @X50DQMC
        CONVT NB12                                             @X50DQMC
        CONVT NB32                                             @X50DQMC
         LABEL '9  DATA REJECT'                                @X50DQMC
         LINE  ,(3,29),SKIP=1                                  @X50DQMC
        CONVT NB13                                             @X50DQMC
        CONVT NB33                                             @X50DQMC
         LABEL '10  (NOT USED)'                                @X50DQMC
         LINE  ,                                               @X50DQMC
        CONVT NB14                                             @X50DQMC
        CONVT NB34                                             @X50DQMC
         LABEL '11  (NOT USED)'                                @X50DQMC
         LINE  ,                                               @X50DQMC
        CONVT NB15                                             @X50DQMC
        CONVT NB35                                             @X50DQMC
         LABEL '12  PARITY ERROR'                              @X50DQMC
         LINE   ,                                              @X50DQMC
        CONVT NB16                                             @X50DQMC
        CONVT NB36                                             @X50DQMC
         LABEL '13  PARITY CHK#1'                              @X50DQMC
         LINE   ,                                              @X50DQMC
        CONVT NB17                                             @X50DQMC
        CONVT NB37                                             @X50DQMC
         LABEL '14  PARITY CHK#2'                              @X50DQMC
         LINE   ,,SKIP=3                                       @X50DQMC
         CONVT NB18                                            @X50DQMC
         CONVT NB38                                            @X50DQMC
         LABEL '15  MACHINE CHECK'                             @X50DQMC
         LINE   ,(1,28),SKIP=2                                 @X50DQMC
         LABEL 'SDR COUNTER SUMMARY'                           @X50DQMC
         LINE   (33,39),(3,39),SKIP=1                          @X50DQMC
         CONVT SR01                                            @X50DQMC
         CONVT SR09                                            @X50DQMC
         LABEL '1 NOT USED',' 9 DATA CHK, LENGTH CHK'          @X50DQMC
         LINE   ,                                              @X50DQMC
         CONVT SR02                                            @X50DQMC
         CONVT SR10                                            @X50DQMC
         LABEL '2 NOT USED','10 DATA CHK, DATA REJECT'         @X50DQMC
         LINE   ,                                              @X50DQMC
         CONVT SR03                                            @X50DQMC
         CONVT SR11                                            @X50DQMC
          LABEL '3 BUS OUT, P-CHK #2','11 EQUIP CHK, MACH CHK' @X50DQMC
         LINE   ,                                              @X50DQMC
         CONVT SR04                                            @X50DQMC
         CONVT SR12                                            @X50DQMC
         LABEL '4 BUS OUT, P-CHK #1,2','12 NOT USED'           @X50DQMC
         LINE   ,                                              @X50DQMC
         CONVT SR05                                            @X50DQMC
         CONVT SR13                                            @X50DQMC
         LABEL '5 EQUIP CHK, P-CHK #1','13 NOT USED'           @X50DQMC
         LINE   ,                                              @X50DQMC
         CONVT SR06                                            @X50DQMC
         CONVT SR14                                            @X50DQMC
         LABEL '6 EQUIP CHK, P-CHK #2','14 NOT USED'           @X50DQMC
         LINE   ,                                              @X50DQMC
         CONVT SR07                                            @X50DQMC
         CONVT SR15                                            @X50DQMC
         LABEL '7 EQUIP CHK, P-ERR, P-CHK #1','15 NOT USED'    @X50DQMC
         LINE   ,                                              @X50DQMC
         CONVT SR08                                            @X50DQMC
         CONVT SR16                                            @X50DQMC
         LABEL '8 DATA CHK','16 CHANNEL DATA CHK'              @X50DQMC
LASTLINE   LINE ,
           ROUTINE TBLPTR,FREEALL
LABLIN     LABEL ''
           LINE ,
           LABEL '----END OF VTAM SUMMARY----'
           DC   X'FF'
           DC   XL6'000000000000'
           DC    C'$'
LABELS     EQU *
           LSTART
          END
