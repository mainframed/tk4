*  LINE MACRO     LINE MACRO     LINE MACRO     LINE MACRO            *
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         LCLA  &S
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
&S       SETA  &LASTCC
         AGO   .DEFAULT
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
&S       SETA  &SKIP
.DEFAULT ANOP
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
&TEST    SETB  0
         AGO   .DD
.AB      AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    FL1'9'
&LASTCC  SETA  &SKIP
&TEST    SETB  1
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         SPACE 2
*  ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO*
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLC  &DSECT,&CSECT
         GBLC  &ITEM(1000)
         GBLA  &SHIFT(1000),&ITEMNBR
         GBLA  &NRENTS
         LCLA  &ISHIFT,&NDX
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL.4(&ISHIFT),AL.12(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN &X1,&X2,&X3,&X4,&X5,&X6,&X7,&X8,&X9,&X10,&X11,&X12,&X13,X
               &X14,&X15,&X16,&X17,&X18,&X19,&X20,&X21,&X22,&X23,&X24, X
               &X25,&X26,&X27,&X28,&X29,&X30,&X31,&X32
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000)
         LCLC  &SYMBOL
         LCLA  &OP,&COUNT,&BYTE
.LOOP    ANOP
&OP      SETA  &OP+1
&ITEMNBR SETA  &ITEMNBR+1
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE *,'NULL BIT COUNT FIELD'
         MEXIT
.OK1     ANOP
         AIF   ('&SYMBOL' NE '').OK
         MNOTE 'LOG ITEM SYMBOL NOT PROVIDED'
         AGO   .CNT
.OK      ANOP
         AIF   ('&SYMBOL'(1,1) EQ '''').CNT                *TEMP*
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR)  SETC '&SYSLIST(&OP,1)'
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF (&OP LT N'&SYSLIST).LOOP
         AIF   (&COUNT NE 32).NOT32
&NAME    DS    4C
         MEXIT
.NOT32   AIF   (&COUNT NE 64).ERR
&NAME    DS    8C
         MEXIT
.ERR     MNOTE '**BIT COUNT FIELDS DO NOT TOTAL 32 OR 64**'
         MEND
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         SPACE 2
         EJECT
*  LABEL MACRO     LABEL MACRO     LABEL MACRO     LABEL MACRO        *
         SPACE 2
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                            THIS MACRO ALLOWS UP TO ACHT LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN. THIS MACRO WILL ALSO ALERT
.*                                 THE PROGRAMMER TO EXACTLY WHERE THE
.*                                 TABLE MUST BE BROKEN IF NECESSARY
.*                                 TO AVOID EXCEEDING THE MAXIMUM LIMIT
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         SPACE 2
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLC &LABELS(2000)
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         LCLA  &NDX,&CTR
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         SPACE 2
*  BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO  *
         SPACE 2
         MACRO
         BIN   &LOGITEM,&SKIP$OR
.*                                 &LOGITEM - NAME OF ITEM IN LOG
.*                                      RECORD DSECT
.*                                 &SKIP$OR - NBR OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLC  &DSECT
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T
         LCLC  &S
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'YOU BLEW IT'
         ROUTINE DUM,SKIPPER
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
A&SYSNDX DC    AL.12(&LOGITEM-&DSECT),XL.4'&TEMP'
         AIF (&IBITS EQ 1 AND &B EQ 0).OUT
         ORG   A&SYSNDX
&B       SETB  1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
         MEND
         EJECT
*  HEX MACRO     HEX MACRO     HEX MACRO    HEXN MACRO     HEX MACRO  *
         SPACE 2
         MACRO
         HEX   &LOGITEM,&SKIP$OR,&BYTES
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &LOGITEM - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SKIP$OR - NUMBER OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &BYTES - NUMBER OF TOTAL INPUT BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(1000),&DSECT
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP
         LCLC  &S,&LETTER
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&CODE    SETA  1
&K       SETA  K'&BYTES
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE *,'BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL'
         MEXIT
.OK      AIF   ('&BYTES' EQ '').USEDEFN
&LETTER  SETC  '&BYTES'(&K,1)
&S       SETC  '&BYTES'(1,&K-1)
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).OK2
.ERR     MNOTE *,'DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY'
         MEXIT
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'A'
         DC    BL.1'&B',FL.7'&S',FL.4'&BYTESP',FL.4'&CODE'
.OUT     ANOP
         MEND
         MACRO
         SPECIAL  &ROUTINE,&PARAM,&SPACE=
.*                            THIS MACRO GENERATES A SPECIAL ROUTINE
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M.
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT.
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE
.*                                 INTERPRETED AS AN ARGUMENT OF THE
.*                                 SPECIAL ROUTINE.
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO
.*                                 ALLOCATE FOR REQUIRED PROCESSING.
         GBLC  &CSECT
         GBLA  &COUNTR
         LCLA  &ADD
         DC    AL1(128)
         DC    BL.8'&PARAM'
         DC    AL2(&ROUTINE-&CSECT)
         DC    AL2(&COUNTR)
&ADD     SETA  1
         AIF   ('&SPACE' EQ '').NORM
&ADD     SETA  &SPACE
.NORM    ANOP
&COUNTR  SETA  &COUNTR+&ADD
         MEND
         MACRO
         SUM   &LOGITEM,&MASK
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY
.*                                 FOR PROCESSING BY THE SUMMARY MODULE
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.
.*                                 THIS OPERAND SHOULD BE OMITTED FOR
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE
.*                                 MASK WILL BE SET ACCORDING TO THE
.*                                 OFF BYTE BIT DISPLACEMENT OF THE
.*                                ITEM AS DEFINED BY THE MACRO 'DSGEN'
         GBLA  &COUNTR,&ITEMNBR,&BITS(1000),&SHIFT(1000)
         GBLC  &ITEM(1000),&DSECT
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOGITEM NOT FOUND'
         MEXIT
.FOUND   ANOP
         DC    AL1(0)
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   ('&MASK' EQ '').FORM
         DC    B'&MASK'
         AGO   .ITEM
.FORM    ANOP
&BITNBR  SETA  &ISHIFT-7
&BITNBR  SETA  0-&BITNBR
&M       SETA  1
.LOOP2   ANOP
         AIF   (&BITNBR EQ 0).GOTIT
&M       SETA  &M*2
&BITNBR  SETA  &BITNBR-1
         AGO   .LOOP2
.GOTIT   ANOP
         DC    AL1(&M)
.ITEM    DC    AL2(&LOGITEM-&DSECT)
         DC    AL2(&COUNTR)
&COUNTR  SETA  &COUNTR+1
         MEND
         GBLC  &DSECT,&CSECT
&CSECT   SETC  'IFCSIPL'
&DSECT   SETC  'DIPL'
IFCSIPL  CSECT
DIPL     DSECT
         DSGEN (CLASRC,8),(SYSREL,8),(SWITCHES,16)
         DSGEN (RECID,8),(SPARE1,16),(TYPE,8)
         DSGEN (DAY,32)
         DSGEN (HOUR,32)
         DSGEN (SPARE2,8),(CPUSERL,24)
         DSGEN (CPUID,16),(SPARE3,16)
HEX24    DSGEN (SSID,8),(CAUADR,24),(IPLRCODE,16),(CHMAP,16)
         DSGEN (CHTAB07,32),(CHTAB8F,32)
         DSGEN (HSA,32),(SPARE99,32)
*
IFCSIPL  CSECT
         USING DIPL,R2
         USING *,R9
         DC    A(ENTRIES)
         DC    A(PEDIT)
*
REG8    DC    F'0'
SCSIZE   DC    H'40'
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
L13      EQU   13
L14      EQU   14
L15      EQU   15
L16      EQU   16
L17      EQU   17
L18      EQU   18
L19      EQU   19
L20      EQU   20
L22      EQU   22
L23      EQU   23
L24      EQU   24
L26      EQU   26
L28      EQU   28
L31      EQU   31
L32      EQU   32
L36      EQU   36
L39      EQU   39
L44      EQU   44
H0F      EQU   X'0F'
HE0      EQU   X'E0'
HF0      EQU   X'F0'
H00      EQU   X'00'
H01      EQU   X'01'
H02      EQU   X'02'
H04      EQU   X'04'
H08      EQU   X'08'
HC0      EQU   X'C0'
H80      EQU   X'80'
H50      EQU   X'50'
H40      EQU   X'40'
H30      EQU   X'30'
H20      EQU   X'20'
H10      EQU   X'10'
H21      EQU   X'21'
X50      EQU   X'50'
H23      EQU   X'23'
H25      EQU   X'25'
H29      EQU   X'29'
X80      EQU   X'80'                    EOD RECORD I.D.        @YL02021
X81      EQU   X'81'                    SYS TERM RECORD I.D.   @YL02021
HEX00    DC    F'0'                                             YM6456P
XSAVEA   DC    F'0'
XSAVE1   DC    5F'0'
ASWITCH  DC    A(SWITCH)
ONE      DC    H'1'
XFF      DC    C'FF'
SUMTAB   DC    C'NMIEIMMEUNOPUPENCEDFFF'
RECODE   STM   R5,R8,XSAVE1             SAVE REGS
         LA    R5,SUMTAB                GET ADDR OF SUMTABLE
         LA    R6,L20(R3)               POINT TO ERROR    ENTRY
NEXTONE  CLC   L0(L2,R5),IPLRCODE       DOES CODE CORRESPOND
         BE    ADDNOW                   BR-YES
         CLC   L0(L2,R5),XFF            IS IT AN FF
         BE    STOPADD                  BR-STOP
         LA    R3,L2(R3)                POINT TO NEXT COUNTER
         LA    R5,L2(R5)                POINT TO NEXT CODE
         B     NEXTONE                  TRY AGAIN
ADDNOW   LH    R7,L0(R3)                LOAD COUNT
         AH    R7,ONE                   ADD ONE TO COUNT
         STH   R7,L0(R3)                STORE NEW TOTAL
         B     RETURN1                  GO BACK
STOPADD  LH    R7,L0(R6)                GET ERROR COUNT
         AH    R7,ONE                   ADD ONE
         STH   R7,L0(R6)                STORE ERROR COUNT
         B     RETURN1                  GO-BACK
XDATE1   STM   R5,R8,XSAVE1            SAVE REGS
         L     R6,ASWITCH               GET ADDRESS OF SWITCH
         MVC   L0(L1,R6),CLASRC         PUT CLASS REC IN SECOND PART
         TM    CLASRC,X50               IS IT A IPL RECORD
         BO    SKIP1                    BR YES
         LA    R7,QUIT-L6               POINT TO END OF SUMMARY
         ST    R7,REG8                  STORE POINTER
SKIP1    EQU   *
         LA    R5,L0(R3)                GET OUTDSELT POINTER RIGHT
         CLC   DAY(L4),HEX00           IS DATE ZERO
         BE    RETURN1                 BR-ZERO
         CLC   L0(L4,R3),HEX00          IS LOW DATE ZERO
         BNE   XDATE2                   BR-NO
         MVC   L0(L4,R3),DAY           MOVE IN DATE
XDATE2   CLC   DAY(L4),L0(R3)          CHECK FOR LOW DATE
         BL    SAVELOW                  LOWER SAVE IT
         CLC   DAY(L4),L4(R3)          CHECK FOR HI
         BNH   RETURN1
SAVEHI   MVC   L4(L4,R3),DAY           MOVE HI DATE
         B     RETURN1
SAVELOW  MVC   L0(L4,R3),DAY           MOVE LOW DATE
         B     RETURN1
RETURN1  LM    R5,R8,XSAVE1            RESTORE REGS
SKIP     BR    R14
ADDSUM   STM   R5,R8,XSAVE1             SAVE REGS
         L     R8,REG8                  GET POINTER TO ENTRY
         CLC   SSID(L1),L1(R8)          USE MASK TO TEST
         BE    ADD                      IF EQUAL - THEN ADD
         B     RETURN1                  IF NOT - RETURN
ADD      LH    R5,L0(R3)                GET HALFWORD COUNTER
         AH    R5,ONE                   ADD ONE TO COUNT
         STH   R5,L0(R3)                STORE NEW TOTAL
         B     RETURN1                  RETURN
*
ENTRIES  DS    0F
         SPECIAL XDATE1,00000000,SPACE=4
         SPECIAL ADDSUM,10010001,SPACE=1
         SPECIAL ADDSUM,10010000,SPACE=1
         SPECIAL ADDSUM,01110000,SPACE=1
         SPECIAL ADDSUM,01100000,SPACE=1
         SPECIAL ADDSUM,01010000,SPACE=1
         SPECIAL ADDSUM,00110000,SPACE=1
         SPECIAL ADDSUM,10000000,SPACE=1
         SPECIAL ADDSUM,01000000,SPACE=1
         SPECIAL ADDSUM,00100000,SPACE=1
         SPECIAL ADDSUM,00010000,SPACE=1
         SPECIAL ADDSUM,00000000,SPACE=1
         SPECIAL  SKIP,0,SPACE=1
         SPECIAL  RECODE,0,SPACE=4
QUIT     DC    X'FF'
*                                                APPROPRIATE COUNTERS
PEDIT    DS    0F
*
&DSECT   SETC  'YYYY2'
&CSECT   SETC  'PEDIT'
         USING *,R9
         USING YYYY2,R2
         DC    A(PENTRY)
         DC    C'IFCSIPL '
YR9PTR   DS    F
YLABEL   DS    F
YYYY2    DSECT
         DS    3H
         DSGEN (YDUMA,16),(YNOREC,16)
         DSGEN (YTYPE,8),(YCHAN,8),(YCUA,24),(YSER,24)
         DSGEN (YCPU,16),(YSMSW,16)
         DSGEN (YDATES,64)
         DSGEN (CIBMPP,16),(CIBMSCP,16),(CTELE,16),(CMICR,16)
         DSGEN (CCDPT,16),(COTHER,16),(CGXPAU,16),(CTAPE,16)
         DSGEN (CDA,16),(CPROSS,16),(CNULL,16),(CEXTRA,16)
         DSGEN (CNM,16),(CIE,16),(CIM,16),(CME,16)
         DSGEN (CUN,16),(COP,16),(CUP,16),(CEN,16)
         DSGEN (CCE,16),(CDF,16),(CFF,16),(CDUMMY,16)
IFCSIPL  CSECT
*
WORK     DS    D
WORKAREA DS    D
XSAVE    DS    6F
FSAVE    DS    18F
SWITCH   DS    XL1
RETURN   LM    R5,R8,XSAVE             RESTORE REGS
SKIPPER  BR    R14
FREECTR  STM   R14,R12,L12(R13)        SAVE ALL REGS
         LR    R12,R13                 SAVE SAVE AREA ADDR
         LA    R13,FSAVE               POINT TO MY SAVE
         ST    R12,L4(R13)             SET CHAINING POINTERS
         ST    R13,L8(R12)
         L     R3,L4(R2)               PICK UP POINTER TO NEXT COUNTER
         ST    R3,L28(R12)             SAVE POINTER IN REG SAVE
         LH    R0,SIZE                 PICK UP SAZE OF AREA
         LR    R1,R2                   SET ADDRESS
         FREEMAIN R,LV=(0),A=(1)
         LTR   R3,R3                   ANY MORE COUNTERS
         BZ    RETURN0                 NO RETURN
         LA    R5,PENTRY+L10           POINT TO TOP ENTRY - 4
         ST    R5,YR9PTR
         LA    R5,LABELS-L1            POINT TO FIRST LABEL -1
         ST    R5,YLABEL               STORE IT IN TABLE
RETURN0  L     R13,L4(R13)             PICK UP &
         LM    R14,R12,L12(R13)        RESTORE REGS
         BR    R14
CONVERT  STM   R5,R8,XSAVE              SAVE REGS
         LH    R5,L0(R4)                LOAD COUNT
         CVD   R5,WORK                  CONVERT TO DECIMAL
         UNPK  L0(L3,R3),WORK+L6(L2)    UNPACK TO PRINT BUFFER
         MVZ   L2(L1,R3),L0(R3)         MOVE IN RIGHT ZONE
         B     RETURN                   RETURN
RETURNA  LM    R5,R8,XSAVE              RESTORE REGS
         BR    R14                      RETURN
*
NONE     DC    CL6'NONE  '
SIZE     DC    H'102'
UNIVERS  DC    C'UNIVERSAL'
TESTREC  STM   R5,R8,XSAVE
         TM    SWITCH,X50
         BO    RETURN
         CLI   SWITCH,X81               SYS TERM RECORD ?      @YL02021
         BNE   NEXTREC                  NO, BRANCH             @YL02021
         LA    R5,SYSTLINE-L4           YES, ADJUST LINE/LABEL POINTERS
         ST    R5,YR9PTR                    V                  @YL02021
         LA    R5,SYSTLABL-L1               V                  @YL02021
         ST    R5,YLABEL                    V                  @YL02021
         BR    R14                      RETURN                 @YL02021
NEXTREC  EQU   *                                               @YL02021
         LA    R5,XXXXXX-L4
         ST    R5,YR9PTR
         LA    R5,YYYYYY
         ST    R5,YLABEL
         B     RETURN
IPLHEAD  CLI    SWITCH,X50              IS IT IPL RECORD ?     @YL02021
         BE    SKIPPER                  YES, BRANCH            @YL02021
         SR    R15,R15                  SET 15 SO NO LINE IS PRINTED
         BR    R14
EODHEAD  CLI   SWITCH,X80               IS IT EOD RECORD ?     @YL02021
         BNE   DELETE                   NO, BRANCH             @YL02021
         BR    R14
SYSHEAD  EQU   *                                               @YL02021
         CLI   SWITCH,X81               SYS TERM RECORD ?      @YL02021
         BCR   8,R14                    YES, BRANCH            @YL02021
DELETE   SR    R15,R15                  SET 15 SO NO LINE IS PRINTED
         BR    R14                      GO BACK
SETDATES UNPK  WORK(L8),L0(L4,R4)       UNPACK LOW DATE
         MVZ   WORK+L7(L1),WORK         MOVE IN RIGHT ZONE
         MVC   L0(L3,R3),WORK+L5        PUT DATE IN PTR BUFF
         MVC   L5(L2,R3),WORK+L3        PUT YEAR IN PTR BUFF
         UNPK  WORK(L8),L4(L4,R4)       UNPACK HIGH DATE
         MVZ   WORK+L7(L1),WORK         MOVE IN RIGHT ZONE
         MVC   L13(L3,R3),WORK+L5       PUT DATE IN PTR BUFF
         MVC   L18(L2,R3),WORK+L3       PUT YEAR IN PTR BUFF
         BR    R14
PENTRY   DS    0F
         DC    X'0001001'
         DC    X'0001001'
         DC    A(LABELS)
         DC    H'0'
         DC    X'01'
         DC    X'000B8B00'
         LABEL ' '
         LINE  (90,30),(1,80),SKIP=1
         HEX   YCPU
         ROUTINE YDUMA,IPLHEAD
         LABEL 'SUMMARY OF IPL RECORDS','MODEL'
         LINE
         HEX   YCPU
         ROUTINE YDUMA,EODHEAD
         LABEL 'SUMMARY OF EOD RECORDS','MODEL'
         LINE  ,                                               @YL02021
         ROUTINE YDUMA,SYSHEAD                                 @YL02021
         LABEL 'SUMMARY OF SYSTEM TERMINATION RECORDS','MODEL' @YL02021
         LINE  (93,),(41,35)
         HEX   YSER
         LABEL 'DAY YEAR     DAY YEAR','CPU SERIAL'
         LINE  (41,),(22,29),SKIP=2
         ROUTINE YDATES,SETDATES
         LABEL 'DATE RANGE  FROM','TO'
         LINE  (38,)
         ROUTINE YNOREC,CONVERT
         LABEL 'NO. OF RECORDS'
         LINE
         ROUTINE YDUMA,TESTREC
         LABEL ' '
         LINE
         LABEL ' '
         LINE (20,43),(3,30),SKIP=2
         LABEL 'XXXX  SUBSYSTEM NAME AND NUMBER OF OCCURENCES XXXX'
         LINE  ,,SKIP=1
         ROUTINE CNULL,CONVERT
         ROUTINE CPROSS,CONVERT
         LABEL 'NULL','PROCESSOR'
         LINE
         ROUTINE CTAPE,CONVERT
         ROUTINE CTELE,CONVERT
         LABEL 'TAPE','TELEPROCESSING'
         LINE
         ROUTINE CMICR,CONVERT
         ROUTINE CGXPAU,CONVERT
         LABEL 'MICR/OCR','GRAPHIX/DISPLAY/AUDIO'
         LINE
         ROUTINE CCDPT,CONVERT
         ROUTINE CIBMSCP,CONVERT
         LABEL 'CARD/PRINT','IBM SYSTEM CONTROL PROGRAM'
         LINE
         ROUTINE CDA,CONVERT
         ROUTINE CIBMPP,CONVERT
         LABEL 'DIRECT ACCESS','IBM PROGRAMMING PRODUCT'
         LINE  ,,SKIP=3
         ROUTINE COTHER,CONVERT
         LABEL 'OTHER'
         LINE  ,,SKIP=2
         LABEL 'XXXX IPL REASON CODE AND NUMBER OF OCCURENCES XXX'
         LINE  ,,SKIP=1
         ROUTINE CNM,CONVERT
         ROUTINE CME,CONVERT
         LABEL 'NORMAL','MEDIA'
         LINE
         ROUTINE CUN,CONVERT
         ROUTINE COP,CONVERT
         LABEL 'UNKNOWN','OPERATIONAL'
         LINE
         ROUTINE CUP,CONVERT
         ROUTINE CEN,CONVERT
         LABEL 'USER PROGRAM','ENVIRONMENTAL'
         LINE  (56,)
         ROUTINE CIE,CONVERT
         LABEL 'IBM HARDWARE PROGRAMMING PROBLEM-CE/SE NOT REQUIRED'
         LINE
         ROUTINE CIM,CONVERT
         LABEL 'IBM HARDWARE PROGRAMMING PROBLEM-CE/SE REQUIRED'
         LINE  (28,)
         ROUTINE CCE,CONVERT
         LABEL 'CE/SE HAS THE SYSTEM'
         LINE
         ROUTINE CDF,CONVERT
         LABEL 'DEFAULT -U-'
         LINE    ,,SKIP=3
         ROUTINE CFF,CONVERT
         LABEL 'INVALID IPL REASON CODE'
         LINE ,(10,20)
         LABEL 'XXXXXXX END OF IPL SUMMARY XXXXXXX'
         LINE
         ROUTINE YDUMA,FREECTR
         LABEL ' '
         DC    X'FF'
         DC    XL6'0'
SYSTLINE LINE  ,(10,20)                                        @YL02021
SYSTLABL LABEL 'XXXXXXX END OF SYSTEM TERMINATION SUMMARY XXXXXXX'
         LINE  ,                                               @YL02021
         ROUTINE YDUMA,FREECTR                                 @YL02021
         LABEL ' '                                             @YL02021
         LABEL ' '                                             @YL02021
         DC    X'FF'                                           @YL02021
         DC    XL6'0'                                          @YL02021
XXXXXX   LINE  (50,50),(10,20),SKIP=1
YYYYYY   LABEL 'XXXXXXX END OF EOD SUMMARY XXXXXX'
         LINE
         ROUTINE YDUMA,FREECTR
         LABEL ' '
         LABEL ' '
         DC    X'FF'
         DC    XL2'0000'
         DC    XL2'0000'
         DC    H'0'
         DC    C'$'
LABELS   EQU   *
         LSTART
         END
