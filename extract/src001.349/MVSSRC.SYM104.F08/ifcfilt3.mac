         TITLE 'IFCFILT3-RECORD FILTER FOR TREND REPORT                *
                        '
IFCFILT3 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IFCFILT3  78.228'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @11,4095(,@12)                                      0001
         LA    @10,4095(,@11)                                      0001
         LA    @09,4095(,@10)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@11                                    0001
         USING @PSTART+8190,@10                                    0001
         USING @PSTART+12285,@09                                   0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*IF DEBUG4 = ON THEN                                               0188
         TM    DEBUG4(R2),B'00001000'                              0188
         BNO   @RF00188                                            0188
* DO;                                                      /*@Z427VLS*/
*  R15 = R12 - 27;                                         /*@Z427VLS*/
         LR    R15,R12                                             0190
         SL    R15,@CF01116                                        0190
*  GEN(MVC PRINTBDY(16),0(R15));                           /*@Z427VLS*/
         MVC PRINTBDY(16),0(R15)
*  PRINTADR = ADDR(PRINTLIN);                              /*@Z427VLS*/
         LA    @14,PRINTLIN                                        0192
         ST    @14,PRINTADR(,R2)                                   0192
*  CALL IOHND(RITEPRTR);                                   /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0193
         LA    @01,@AL00193                                        0193
         BALR  @14,@15                                             0193
*  R15 = ZERO;                                             /*@Z427VLS*/
         SLR   R15,R15                                             0194
* END;                                                     /*@Z427VLS*/
*/*PROCESS ERROR RECORDS SEQUENTIALLY                        @Z427VLS*/
*CALL INITIATE; /*ALLOCATE INITIAL TABLES                    @Z427VLS*/
@RF00188 BAL   @14,INITIATE                                        0196
*R15 = ERROR; /*GET ERROR CONDITIONS FROM INITIATE           @Z427VLS*/
         L     R15,ERROR                                           0197
*DO WHILE R15 = SUCCESS & ENTRIES < MAXENT;                /*@0099VLS*/
         B     @DE00198                                            0198
@DL00198 DS    0H                                                  0199
*  CALL IOHND(READSEQ); /*GET A RECORD FROM ACCDEV OR SERLOG @Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0199
         LA    @01,@AL00199                                        0199
         BALR  @14,@15                                             0199
*  IF R15 = SUCCESS THEN /*CONTINUE IF NOT EOF OR UNREADABLE @Z427VLS*/
         LTR   R15,R15                                             0200
         BNZ   @RF00200                                            0200
*    DO;                                                   /*@Z427VLS*/
*      BUG(1) = BUG(1) + 1; /*NUMBER OF RECORDS RETRIEVED    @Z427VLS*/
         LA    @14,1                                               0202
         AL    @14,BUG                                             0202
         ST    @14,BUG                                             0202
*IF ((LRTKEY1 & GENREC) = HEXA0)×   /* IF MCH OR CCH FRAME RECORD */
*   ((LRTKEY1 & GENREC) = HEXB0) THEN                              0203
         MVC   @TS00001(1),LRTKEY1(R7)                             0203
         NI    @TS00001,X'F0'                                      0203
         CLI   @TS00001,X'A0'                                      0203
         BE    @RT00203                                            0203
         MVC   @TS00001(1),LRTKEY1(R7)                             0203
         NI    @TS00001,X'F0'                                      0203
         CLI   @TS00001,X'B0'                                      0203
         BNE   @RF00203                                            0203
@RT00203 DS    0H                                                  0204
* DO;                                                      /*@G51DGBB*/
*  CALL FLIMFRAM; /*PROCESS FRAME RECORDS SEQUENTIALLY       @G51DGBB*/
         BAL   @14,FLIMFRAM                                        0205
*  R15 = ERROR; /*PASS ERROR CONDITIONS FROM FRAME PROCESSING*/    0206
         L     R15,ERROR                                           0206
* END;                                                     /*@G51DGBB*/
*ELSE  /*NORMAL ERROR RECORD PROCESSING                      @G51DGBB*/
*  DO;                                                     /*@G51DGBB*/
         B     @RC00203                                            0208
@RF00203 DS    0H                                                  0209
*      CALL ALLREC; /*PERFORM TIME, DATE FILTERING           @Z427VLS*/
         BAL   @14,ALLREC                                          0209
*      IF PASSFLAG = YES THEN                                      0210
         TM    PASSFLAG(R2),B'00000001'                            0210
         BNO   @RF00210                                            0210
*        DO;                                               /*@Z427VLS*/
*          BUG(2) = BUG(2) + 1; /*NUM REC PASS DATE,TIME FILTERING*/
         LA    @14,1                                               0212
         AL    @14,BUG+4                                           0212
         ST    @14,BUG+4                                           0212
*          CALL RECDEP; /*FILTER BY DEVICE, STORE IN TABLE IF PASS*/
         BAL   @14,RECDEP                                          0213
*          IF PASSFLAG = ON THEN                                   0214
         TM    PASSFLAG(R2),B'00000001'                            0214
         BNO   @RF00214                                            0214
*            DO;                                           /*@Z427VLS*/
*              BUG(3) = BUG(3) + ONE; /*NUMBER OF RECORDS PASS FILT*/
         LA    @14,1                                               0216
         AL    @14,BUG+8                                           0216
         ST    @14,BUG+8                                           0216
*             IF LRTYRDAY > EVSTOP THEN /*LATEST DAY IN DATA @Z427VLS*/
         L     @14,EVPTR(,R2)                                      0217
         CLC   LRTYRDAY(3,R7),EVSTOP(@14)                          0217
         BNH   @RF00217                                            0217
*               EVSTOP = LRTYRDAY; /*SAVE FOR LATER COMPARES @Z427VLS*/
         MVC   EVSTOP(3,@14),LRTYRDAY(R7)                          0218
*             IF LRTYRDAY < STRTDATE THEN /*IF EARLIEST DAY IN DATA*/
@RF00217 CLC   LRTYRDAY(3,R7),STRTDATE(R2)                         0219
         BNL   @RF00219                                            0219
*               STRTDATE = LRTYRDAY; /*SAVE FOR LATER COMPARES*/   0220
         MVC   STRTDATE(3,R2),LRTYRDAY(R7)                         0220
*              IF PACC = YES THEN /*HISTORY D.S. TO BE CREATED*/   0221
@RF00219 TM    PACC(R2),B'01000000'                                0221
         BNO   @RF00221                                            0221
*                CALL IOHND(RITEHIST); /*WRITE TO ACCDEV     @Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0222
         LA    @01,@AL00222                                        0222
         BALR  @14,@15                                             0222
*              IF R15 = SUCCESS & TRENDGRP  ^= ZERO & /*IF SUCCESS */
*                       CPU0FLG = OFF THEN /*NO ERRORS FOUND, CPU OK */
@RF00221 LTR   R15,R15                                             0223
         BNZ   @RF00223                                            0223
         CLI   TRENDGRP,0                                          0223
         BE    @RF00223                                            0223
         TM    CPU0FLG,B'00001000'                                 0223
         BNZ   @RF00223                                            0223
*               DO;                                        /*@Z427VLS*/
*                CALL ADDVALUE;   /*BUILD THE SORT TABLE ENTRY*/   0225
         BAL   @14,ADDVALUE                                        0225
*                TREND2  = (TREND2  && TREND2 ); /*CLEAR TREND2*/  0226
         XC    TREND2(14),TREND2                                   0226
*               END;                                       /*@Z427VLS*/
*              ELSE                                                0228
*               IF R15 ^= SUCCESS THEN                             0228
         B     @RC00223                                            0228
@RF00223 LTR   R15,R15                                             0228
         BZ    @RF00228                                            0228
*                 ZEROALL = NO; /*DONT CLEAR LOGREC IF DONT PROCESS*/
         NI    ZEROALL(R2),B'10111111'                             0229
*                               /*ALL RECORDS                @Z427VLS*/
*            END;                                          /*@Z427VLS*/
@RF00228 DS    0H                                                  0230
@RC00223 DS    0H                                                  0231
*         END;                                             /*@Z427VLS*/
@RF00214 DS    0H                                                  0232
*   END;                                                   /*@G51DGBB*/
@RF00210 DS    0H                                                  0233
*      END;                                                /*@Z427VLS*/
@RC00203 DS    0H                                                  0234
*    END;                                                  /*@Z427VLS*/
@RF00200 DS    0H                                                  0234
@DE00198 LTR   R15,R15                                             0234
         BNZ   @DC00198                                            0234
         L     @14,ENTRIES                                         0234
         C     @14,MAXENT                                          0234
         BL    @DL00198                                            0234
@DC00198 DS    0H                                                  0235
* ERROR = R15; /*TELL ENDOFILE IF ERRORS                     @Z427VLS*/
         ST    R15,ERROR                                           0235
*PASSNUM = ENTRIES - 1;                                    /*@0099VLS*/
         L     @14,ENTRIES                                         0236
         BCTR  @14,0                                               0236
         ST    @14,PASSNUM                                         0236
* CALL ENDOFILE; /*SORT EVTABLE,TRENDONE, AND TREND2. HANDLE ERROR*/
         BAL   @14,ENDOFILE                                        0237
*                /*CONDITIONS, FREE EXCESS TREND2 CORE.      @Z427VLS*/
* R15 = ERROR; /*RETURN CODE MAY HAVE BEEN MODIFIED BY ENDOFILE*/  0238
         L     R15,ERROR                                           0238
* IF DEBUG16 = ON THEN                                             0239
         TM    DEBUG16(R2),B'10000000'                             0239
         BNO   @RF00239                                            0239
*   CALL BUGCNTS; /*PRINT COUNT OF DIFFERENT RECORD TYPES    @Z427VLS*/
         BAL   @14,BUGCNTS                                         0240
* IF DEBUG11 = ON THEN                                             0241
@RF00239 TM    DEBUG11(R2),B'00010000'                             0241
         BNO   @RF00241                                            0241
*   GEN(ABEND 320,DUMP); /*SHOW STATUS IF TESTING SITUATION  @Z427VLS*/
         ABEND 320,DUMP
*RESPECIFY(R15) UNRESTRICTED;                              /*@Z427VLS*/
*/*******************************************************************/
*/*    THIS PROC WILL SEARCH THE SORT TABLE FOR A ENTRY WITH THE SAME*/
*/*    KEY AS THIS ONE THEN SUM THE PERM AND TEMP ERRORS WITH THIS REC*
*/*    IF NO MATCH CAN BE FOUND THEN CREATE A NEW ONE        @0099VLS*/
*/*                                                          @0099VLS*/
*ADDVALUE: PROC;                                           /*@0099VLS*/
@EL00001 L     @13,4(,@13)                                         0244
@EF00001 DS    0H                                                  0244
@ER00001 L     @14,12(,@13)                                        0244
         LM    @00,@12,20(@13)                                     0244
         BR    @14                                                 0244
ADDVALUE STM   @14,@12,@SA00002                                    0244
* DCL ZZ PTR(31)  INIT(0);                                 /*@0099VLS*/
* DCL Z1 FIXED(31)  INIT(0);                               /*@0099VLS*/
* DCL Z2 FIXED(31)  INIT(0);                               /*@0099VLS*/
* DCL Z3 FIXED(31)  INIT(0);                               /*@0099VLS*/
*DCL ZZ3 FIXED(31) INIT(0);                                /*@G51DGBB*/
* DCL  1  TMTA  BASED(ZZ),                                         0250
*       2 TMTKEYA  CHAR(8),                                        0250
*       2 TMTPERMA FIXED(15) BDY(BYTE),                            0250
*       2 TMTTEMPA FIXED(31) BDY(BYTE);                    /*@0099VLS*/
* ZZ3 = ZZ3 + 1;  /*NUMBER OF ENTRIES IN PART 2              @0099VLS*/
         LA    @08,1                                               0251
         AL    @08,ZZ3                                             0251
         ST    @08,ZZ3                                             0251
* FOUND = NO;        /*SET FLAG TO ASSUME THE WORST          @0099VLS*/
         NI    FOUND,B'01111111'                                   0252
* DO ZZ = SORTADR + (ENTRIES - 1) * 14 BY -14 TO SORTADR WHILE(    0253
*                                   FOUND = NO);           /*@0099VLS*/
         L     @08,ENTRIES                                         0253
         BCTR  @08,0                                               0253
         MH    @08,@CH00940                                        0253
         AL    @08,SORTADR(,R2)                                    0253
         ST    @08,ZZ                                              0253
         B     @DE00253                                            0253
@DL00253 TM    FOUND,B'10000000'                                   0253
         BNZ   @DC00253                                            0253
*  IF TMTKEYA = TRENDKEY THEN                                      0254
         CLC   TMTKEYA(8,@08),TRENDKEY                             0254
         BNE   @RF00254                                            0254
*   DO;                                                    /*@0099VLS*/
*    TMTPERMA = TMTPERMA + TRENDPR1;                       /*@0099VLS*/
         ICM   @06,12,TMTPERMA(@08)                                0256
         SRA   @06,16                                              0256
         ICM   @03,12,TRENDPR1                                     0256
         SRA   @03,16                                              0256
         ALR   @06,@03                                             0256
         STCM  @06,3,TMTPERMA(@08)                                 0256
*    TMTTEMPA = TMTTEMPA + TRENDTMP;                       /*@0099VLS*/
         ICM   @06,15,TMTTEMPA(@08)                                0257
         ICM   @03,15,TRENDTMP                                     0257
         ALR   @06,@03                                             0257
         STCM  @06,15,TMTTEMPA(@08)                                0257
*    FOUND = YES;                                          /*@0099VLS*/
         OI    FOUND,B'10000000'                                   0258
*   END;                                                   /*@0099VLS*/
* END;                                                     /*@0099VLS*/
@RF00254 L     @08,@CF01351                                        0260
         AL    @08,ZZ                                              0260
         ST    @08,ZZ                                              0260
@DE00253 C     @08,SORTADR(,R2)                                    0260
         BNL   @DL00253                                            0260
@DC00253 DS    0H                                                  0261
* IF FOUND = NO THEN                                               0261
         TM    FOUND,B'10000000'                                   0261
         BNZ   @RF00261                                            0261
*  DO;                                                     /*@0099VLS*/
*   TMT2(ENTRIES) = TREND2;                                /*@0099VLS*/
         L     @08,ENTRIES                                         0263
         LR    @06,@08                                             0263
         MH    @06,@CH00940                                        0263
         L     @03,SORTADR(,R2)                                    0263
         ALR   @03,@06                                             0263
         AL    @03,@CF01351                                        0263
         MVC   TMT2(14,@03),TREND2                                 0263
*   ENTRIES = ENTRIES + 1;                                 /*@0099VLS*/
         AL    @08,@CF00055                                        0264
         ST    @08,ENTRIES                                         0264
*  END;                                                    /*@0099VLS*/
*IF DEBUG50 = ON THEN                                              0266
@RF00261 TM    DEBUG50(R2),B'00100000'                             0266
         BNO   @RF00266                                            0266
* DO;                                                      /*@0099VLS*/
*  NUMBER = 14;                                            /*@0099VLS*/
         MVC   NUMBER(4),@CF00940                                  0268
*  NEXTBY = ADDR(TREND2);                                  /*@0099VLS*/
         LA    @08,TREND2                                          0269
         ST    @08,NEXTBY                                          0269
*  ADDNXT = ADDR(PRINTBDY);                                /*@0099VLS*/
         LA    @08,PRINTBDY                                        0270
         ST    @08,ADDNXT                                          0270
*  CALL CONVERT;                                           /*@0099VLS*/
         BAL   @14,CONVERT                                         0271
*  IF FOUND = YES THEN                                             0272
         TM    FOUND,B'10000000'                                   0272
         BNO   @RF00272                                            0272
*  DO;                                                     /*@0099VLS*/
*  NEXTBY = ZZ + 14;                                       /*@0099VLS*/
         LA    @08,14                                              0274
         AL    @08,ZZ                                              0274
         ST    @08,NEXTBY                                          0274
*  ADDNXT = ADDR(PRINTBDY) + 40;                           /*@0099VLS*/
         LA    @08,PRINTBDY                                        0275
         AL    @08,@CF01356                                        0275
         ST    @08,ADDNXT                                          0275
*  CALL CONVERT;                                           /*@0099VLS*/
         BAL   @14,CONVERT                                         0276
*  END;                                                    /*@0099VLS*/
*  PRINTADR = ADDR(PRINTLIN);                              /*@0099VLS*/
@RF00272 LA    @08,PRINTLIN                                        0278
         ST    @08,PRINTADR(,R2)                                   0278
*  CALL IOHND(RITEPRTR);                                   /*@0099VLS*/
         L     @15,ADIOHND(,R2)                                    0279
         LA    @01,@AL00279                                        0279
         BALR  @14,@15                                             0279
* END;                                                     /*@0099VLS*/
*TREND2 = TREND2  && TREND2;    /*CLEAR FOR THE NEXT ENTRY   @0099VLS*/
@RF00266 XC    TREND2(14),TREND2                                   0281
*END;                                                      /*@0099VLS*/
@EL00002 DS    0H                                                  0282
@EF00002 DS    0H                                                  0282
@ER00002 LM    @14,@12,@SA00002                                    0282
         BR    @14                                                 0282
*INITIATE: PROC;                                           /*@Z427VLS*/
INITIATE STM   @14,@12,@SA00003                                    0283
*RESPECIFY(R3,R15) RESTRICTED;                             /*@Z427VLS*/
*/*CORE IS ALLOCATED FOR TREND2  , EVTABLE, THE INITIAL ENTRIES OF */
*/*TRENDONE. IF SHARE TABLE EXISTS, EXTRA ENTRIES OF TRENDONE ARE  */
*/* ALLOCATED FOR EVERY UNIQUE CPU SERIAL ENCOUNTERED IN SHARE     */
*/* TABLE. ERROR MESSAGES ARE ISSUED AND A SERIOUS RETURN CODE     */
*/* ISSUED IF CORE IS NOT AVAILABLE. THE LENGTH  OF A TRENDONE     */
*/* GETMAIN IS DETERMINED.                                   @Z427VLS*/
*CALL CALCRANG; /*FIND NUMBER OF DAYS IN DAY RANGE           @Z427VLS*/
         BAL   @14,CALCRANG                                        0285
*TREN1SIZ = (NUMDAYS * 76) + 8;                            /*@0099VLS*/
         L     @14,NUMDAYS(,R2)                                    0286
         MH    @14,@CH01361                                        0286
         AL    @14,@CF00066                                        0286
         ST    @14,TREN1SIZ                                        0286
*R3 = TABSIZE + EVSIZE; /*LENGTH OF TREND2 PLUS EVTABLE      @Z427VLS*/
         LA    R3,104                                              0287
         AL    R3,TABSIZE(,R2)                                     0287
*GEN(GETMAIN EC,LV=(R3),A=COMPLINK); /*ISSUE REQUEST FOR CORE*/    0288
         GETMAIN EC,LV=(R3),A=COMPLINK
*IF R15 ^= SUCCESS THEN /*IF GETMAIN NOT SUCCESSFULL         @Z427VLS*/
         LTR   R15,R15                                             0289
         BZ    @RF00289                                            0289
*  DO;                                                     /*@Z427VLS*/
*    MSGNO = 2;                                            /*@Z427VLS*/
         MVI   MSGNO,X'02'                                         0291
*    CALL ERRMSG;                                          /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0292
*    R15 =NOSRTABL;                                        /*@0001VLS*/
         LA    R15,12                                              0293
*    GETFAIL = YES;                                        /*@0001VLS*/
         OI    GETFAIL,B'00000100'                                 0294
*  END;                                                    /*@Z427VLS*/
*ELSE /*IF GETMAIN IS SUCCESSFULL                            @Z427VLS*/
*  DO;                                                     /*@Z427VLS*/
         B     @RC00289                                            0296
@RF00289 DS    0H                                                  0297
*    EVPTR = COMPLINK; /*ESTABLISH BASE ADDRESS OF EVTABLE   @Z427VLS*/
         L     @14,COMPLINK                                        0297
         ST    @14,EVPTR(,R2)                                      0297
*    EVSTOP = '00000F'X; /*GRAB FIRST RECORDS DATE           @Z427VLS*/
         MVC   EVSTOP(3,@14),@CB00228                              0298
*    STRTDATE = '99366F'X; /*LIKEWISE                        @Z427VLS*/
         MVC   STRTDATE(3,R2),@CB01363                             0299
*    MAXENT = TABSIZE/14;      /*DETERMINE MAX NUMBER OF ENTRIES*/ 0300
         L     @00,TABSIZE(,R2)                                    0300
         SRDA  @00,32                                              0300
         D     @00,@CF00940                                        0300
         ST    @01,MAXENT                                          0300
*    SORTADR = EVPTR + EVSIZE; /*SET TREND2 BASE PAST EVTABLE*/    0301
         LA    @08,104                                             0301
         ALR   @08,@14                                             0301
         ST    @08,SORTADR(,R2)                                    0301
*    TREND2(1) = (TREND2(1) && TREND2(1)); /*CLEAR TREND2 ENT ONE*/
         XC    TREND2(1),TREND2                                    0302
*    EVTABLE  = (EVTABLE  && EVTABLE); /*CLEAR EVTABLE TO ZEROS*/  0303
         XC    EVTABLE(102,@14),EVTABLE(@14)                       0303
*    IF SHAREPTR ^= ZERO THEN                                      0304
         L     @14,SHAREPTR(,R2)                                   0304
         LTR   @14,@14                                             0304
         BZ    @RF00304                                            0304
*      DO;                                              /* @ZA17692 */
*        CALL SORTSHAR;      /* SORT SHARE TABLE CPU LETER @ZA17692 */
         BAL   @14,SORTSHAR                                        0306
*        DO J = 1 BY 1 TO SHARENUM WHILE R15 = SUCCESS;    /*@Z427VLS*/
         LA    @14,1                                               0307
         ST    @14,J                                               0307
         B     @DE00307                                            0307
@DL00307 LTR   R15,R15                                             0307
         BNZ   @DC00307                                            0307
*          UNIQUE = YES;                                   /*@Z427VLS*/
         OI    UNIQUE,B'00000100'                                  0308
*          DO K = 1 BY 1 TO EVMAX WHILE UNIQUE = YES;      /*@Z427VLS*/
         LA    @14,1                                               0309
         ST    @14,K                                               0309
@DL00309 TM    UNIQUE,B'00000100'                                  0309
         BNO   @DC00309                                            0309
*            IF SHARSERA(J) = EVSERIAL(K) THEN                     0310
         L     @08,J                                               0310
         MH    @08,@CH00033                                        0310
         L     @06,SHAREPTR(,R2)                                   0310
         MH    @14,@CH00081                                        0310
         L     @01,EVPTR(,R2)                                      0310
         ALR   @06,@08                                             0310
         AL    @06,@CF01571                                        0310
         ALR   @01,@14                                             0310
         CLC   SHARSERA-4(3,@06),EVSERIAL-6(@01)                   0310
         BNE   @RF00310                                            0310
*              UNIQUE = NO;                                /*@Z427VLS*/
         NI    UNIQUE,B'11111011'                                  0311
*            ELSE IF EVSERIAL(K) = ZERO THEN                       0312
         B     @RC00310                                            0312
@RF00310 L     @14,K                                               0312
         MH    @14,@CH00081                                        0312
         L     @08,EVPTR(,R2)                                      0312
         L     @06,EVSERIAL-7(@14,@08)                             0312
         LA    @06,0(,@06)                                         0312
         LTR   @06,@06                                             0312
         BNZ   @RF00312                                            0312
*              DO;                                         /*@Z427VLS*/
*                UNIQUE = NO; /*ONLY BUILD ONE ENTRY PER CPU @Z427VLS*/
         NI    UNIQUE,B'11111011'                                  0314
*                EVSERIAL(K) = SHARSERA(J);                /*@Z427VLS*/
         ST    @14,@TF00001                                        0315
         ALR   @14,@08                                             0315
         L     @06,J                                               0315
         MH    @06,@CH00033                                        0315
         L     @05,SHAREPTR(,R2)                                   0315
         ST    @06,@TF00002                                        0315
         ALR   @06,@05                                             0315
         AL    @06,@CF01571                                        0315
         MVC   EVSERIAL-6(3,@14),SHARSERA-4(@06)                   0315
*                EVLETTER(K) = SHARLET(J);                 /*@Z427VLS*/
         LR    @14,@08                                             0316
         AL    @14,@TF00001                                        0316
         AL    @05,@TF00002                                        0316
         MVC   EVLETTER-6(1,@14),SHARLET-11(@05)                   0316
*                EVNUM = EVNUM + 1;                        /*@Z427VLS*/
         LA    @14,1                                               0317
         AH    @14,EVNUM(,@08)                                     0317
         STH   @14,EVNUM(,@08)                                     0317
*                    R3 = TREN1SIZ; /*LENGTH OF TRENDONE TABLE*/   0318
         L     R3,TREN1SIZ                                         0318
*                    GEN(GETMAIN EC,LV=(R3),A=COMPLINK);   /*@Z427VLS*/
         GETMAIN EC,LV=(R3),A=COMPLINK
*                    IF R15  ^= SUCCESS THEN                       0320
         LTR   R15,R15                                             0320
         BZ    @RF00320                                            0320
*                      DO;                                 /*@Z427VLS*/
*                        MSGNO = 1;                        /*@Z427VLS*/
         MVI   MSGNO,X'01'                                         0322
*                        CALL ERRMSG;                      /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0323
*                    R15 = NOSRTABL; /*RET.CODE OF 12        @0001VLS*/
         LA    R15,12                                              0324
*                    GETFAIL = YES; /*STOP FURTHER PROCESSING*/    0325
         OI    GETFAIL,B'00000100'                                 0325
*                      END;                                /*@Z427VLS*/
*                    ELSE                                          0327
*                      DO;                                 /*@Z427VLS*/
         B     @RC00320                                            0327
@RF00320 DS    0H                                                  0328
*                        IF K > 1 THEN /*IF NOT 1ST CREATED ENTRY*/
         CLC   K(4),@CF00055                                       0328
         BNH   @RF00328                                            0328
*                          TRENEXT = COMPLINK; /*POINT TO THIS NEW*/
         L     @14,TRENPTR(,R2)                                    0329
         L     @08,COMPLINK                                        0329
         ST    @08,TRENEXT(,@14)                                   0329
*                                         /*ENTRY IN THE OLD ENTRY*/
*                        TRENPTR = COMPLINK; /*ADDRESS NEW ENTRY*/ 0330
@RF00328 L     @14,COMPLINK                                        0330
         ST    @14,TRENPTR(,R2)                                    0330
*                        SAVEADR(K) = COMPLINK; /*SAVE ENTRY ADDRESS*/
         L     @08,K                                               0331
         SLA   @08,2                                               0331
         ST    @14,SAVEADR-4(@08)                                  0331
*                        DO Q = 1 BY 1 TO NUMDAYS;         /*@Z427VLS*/
         LA    @14,1                                               0332
         ST    @14,Q                                               0332
         B     @DE00332                                            0332
@DL00332 DS    0H                                                  0333
*                          TREGEN(Q) = (TREGEN(Q) && TREGEN(Q));   0333
         LR    @08,@14                                             0333
         MH    @08,@CH01361                                        0333
         L     @06,TRENPTR(,R2)                                    0333
         ALR   @06,@08                                             0333
         AL    @06,@CF01573                                        0333
         XC    TREGEN-8(76,@06),TREGEN-8(@06)                      0333
*                        END;                              /*@Z427VLS*/
         AL    @14,@CF00055                                        0334
         ST    @14,Q                                               0334
@DE00332 C     @14,NUMDAYS(,R2)                                    0334
         BNH   @DL00332                                            0334
*                        TRENEXT = (TRENEXT && TRENEXT);   /*@Z427VLS*/
         L     @14,TRENPTR(,R2)                                    0335
         L     @08,TRENEXT(,@14)                                   0335
         LR    @06,@08                                             0335
         XR    @06,@08                                             0335
         ST    @06,TRENEXT(,@14)                                   0335
*                        TRENUM  = (TRENUM && TRENUM);     /*@Z427VLS*/
         L     @08,TRENUM(,@14)                                    0336
         LR    @06,@08                                             0336
         XR    @06,@08                                             0336
         ST    @06,TRENUM(,@14)                                    0336
*                          /*SET NEW ENTRY TO ZEROS          @Z427VLS*/
*                      END;                                /*@Z427VLS*/
*              END;                                        /*@Z427VLS*/
@RC00320 DS    0H                                                  0339
*      END;                                                /*@Z427VLS*/
@RF00312 DS    0H                                                  0339
@RC00310 LA    @14,1                                               0339
         AL    @14,K                                               0339
         ST    @14,K                                               0339
         C     @14,@CF00088                                        0339
         BNH   @DL00309                                            0339
@DC00309 DS    0H                                                  0340
*        END;                                            /* @Z427VLS */
         LA    @14,1                                               0340
         AL    @14,J                                               0340
         ST    @14,J                                               0340
@DE00307 L     @08,SHAREPTR(,R2)                                   0340
         CH    @14,SHARENUM(,@08)                                  0340
         BNH   @DL00307                                            0340
@DC00307 DS    0H                                                  0341
*      END;                                             /* @ZA17692 */
*  END;                                                    /*@Z427VLS*/
@RF00304 DS    0H                                                  0343
*  NUMUNSHR = EVNUM + 1;                                   /*@Z427VLS*/
@RC00289 L     @14,EVPTR(,R2)                                      0343
         LH    @14,EVNUM(,@14)                                     0343
         LA    @14,1(,@14)                                         0343
         STH   @14,NUMUNSHR                                        0343
*IF R15 = SUCCESS &  /*IF OTHER GETMAINS HAVE BEEN SUCCESSFULL  */ 0344
*         PACC = ON &  /*ONLY CHECK FRAMES IF WRITTEN TO ACCDEV*/  0344
*         (PMCH = ON × PCHAN = ON) THEN /*IF MCH OR CCH SELECTED*/ 0344
         LTR   R15,R15                                             0344
         BNZ   @RF00344                                            0344
         TM    PACC(R2),B'01000000'                                0344
         BNO   @RF00344                                            0344
         TM    PMCH(R2),B'11000000'                                0344
         BZ    @RF00344                                            0344
*  DO;                                                     /*@G51DGBB*/
*    RESPECIFY (R1) RESTRICTED;                            /*@G51DGBB*/
*    R0 = FRAMBENT * EVMAX; /*NUMBER OF ENTRIES TIMES BYTES PER ENTRY*/
         LA    R0,384                                              0347
*    R0 = R0 + 4;           /*ADD FRAMENUM LENGTH            @G51DGBB*/
         AL    R0,@CF00064                                         0348
*    GEN(GETMAIN EC,LV=(R0),A=LINKITM,SP=21); /*GET THE STORAGE*/  0349
         GETMAIN EC,LV=(R0),A=LINKITM,SP=21
*    RESPECIFY (R0) UNRESTRICTED;                          /*@G51DGBB*/
*    IF R15 = SUCCESS THEN   /*IF GETMAIN SUCCESSFULL        @G51DGBB*/
         LTR   R15,R15                                             0351
         BNZ   @RF00351                                            0351
*      DO;                                                 /*@G51DGBB*/
*        FRAMEPTR = LINKITM;  /*ESTABLISH FRAMETAB BASE ADDRESS*/  0353
         L     @14,LINKITM                                         0353
         ST    @14,FRAMEPTR(,R2)                                   0353
*        DO Y = 1 BY 1 TO EVMAX; /*CLEAR FRAMETAB TO ZEROS   @G51DGBB*/
         LA    @14,1                                               0354
         ST    @14,Y                                               0354
@DL00354 DS    0H                                                  0355
*          FRAMEDTA(Y) = (FRAMEDTA(Y) && FRAMEDTA(Y));     /*@G51DGBB*/
         LR    @08,@14                                             0355
         MH    @08,@CH00227                                        0355
         L     @06,FRAMEPTR(,R2)                                   0355
         ALR   @06,@08                                             0355
         AL    @06,@CF01574                                        0355
         XC    FRAMEDTA-4(24,@06),FRAMEDTA-4(@06)                  0355
*        END;                                              /*@G51DGBB*/
         AL    @14,@CF00055                                        0356
         ST    @14,Y                                               0356
         C     @14,@CF00088                                        0356
         BNH   @DL00354                                            0356
*        FRAMENUM = ZEROS;                                 /*@G51DGBB*/
         L     @14,FRAMEPTR(,R2)                                   0357
         SLR   @08,@08                                             0357
         ST    @08,FRAMENUM(,@14)                                  0357
*      END;                                                /*@G51DGBB*/
*  ELSE  /*UNSUCCESSFULL GETMAIN                             @G51DGBB*/
*    DO;                                                   /*@G51DGBB*/
         B     @RC00351                                            0359
@RF00351 DS    0H                                                  0360
*      R15 = TWELVE;  /*DONT CONTINUE RETURN CODE            @G51DGBB*/
         LA    R15,12                                              0360
*      MSGNO = 40;   /*CORE NOT AVAILABLE MESSAGE            @G51DGBB*/
         MVI   MSGNO,X'28'                                         0361
*      CALL ERRMSG;  /*PRINT ERROR MESSAGE                   @G51DGBB*/
         BAL   @14,ERRMSG                                          0362
*    END;                                                  /*@G51DGBB*/
* END; /*END OF FRAMETAB GETMAIN                             @G51DGBB*/
@RC00351 DS    0H                                                  0365
*  ERROR = R15; /*COMMUNICATE ERROR CONDITIONS TO CALLING PROC*/   0365
@RF00344 ST    R15,ERROR                                           0365
*RESPECIFY(R3,R15) UNRESTRICTED;                           /*@Z427VLS*/
*END; /*END OF PROC INITAB                                   @Z427VLS*/
@EL00003 DS    0H                                                  0367
@EF00003 DS    0H                                                  0367
@ER00003 LM    @14,@12,@SA00003                                    0367
         BR    @14                                                 0367
*CONVERT: PROC;                                            /*@Z427VLS*/
CONVERT  STM   @14,@12,12(@13)                                     0368
* DCL  T      FIXED(31) INIT(0);                           /*@Z427VLS*/
*DCL  P FIXED(31) INIT(0);                                 /*@G51DGBB*/
*DCL  R FIXED(31) INIT(0);                                 /*@G51DGBB*/
* DCL  NUMBER FIXED(31) INIT(0);                           /*@Z427VLS*/
* DCL  NEXTBYTE(1) CHAR(1) BASED(NEXTBY);                  /*@Z427VLS*/
* DCL  ADDNUM(1)   CHAR(1) BASED(ADDNXT);                  /*@Z427VLS*/
* DCL  CHARS       CHAR(16) INIT('0123456789ABCDEF');      /*@Z427VLS*/
* DCL  NEXTBY FIXED(31) INIT(0);                           /*@Z427VLS*/
* DCL  ADDNXT FIXED(31) INIT(0);                           /*@Z427VLS*/
*   RESPECIFY (R4,R5) RESTRICTED;                          /*@0099VLS*/
*DO R = NUMBER BY -1 TO 1;                                 /*@G51DGBB*/
         L     @08,NUMBER                                          0379
         ST    @08,R                                               0379
         B     @DE00379                                            0379
@DL00379 DS    0H                                                  0380
* R4 = NEXTBYTE(R);                                        /*@G51DGBB*/
         L     @06,NEXTBY                                          0380
         BCTR  @06,0                                               0380
         SLR   R4,R4                                               0380
         IC    R4,NEXTBYTE(@08,@06)                                0380
* P = 2 * R;                                               /*@G51DGBB*/
         LR    @06,@08                                             0381
         ALR   @06,@06                                             0381
         ST    @06,P                                               0381
*  SRDL(R4,4);                                             /*@Z427VLS*/
         SRDL  R4,4                                                0382
*  SRL(R5,28);                                             /*@Z427VLS*/
         SRL   R5,28                                               0383
*  R5 = R5 + 1;                                            /*@Z427VLS*/
         LA    @03,1                                               0384
         ALR   R5,@03                                              0384
*  R4 = R4 + 1;                                            /*@Z427VLS*/
         ALR   R4,@03                                              0385
* ADDNUM(P-1) = CHARS(R4);                                 /*@G51DGBB*/
         L     @03,ADDNXT                                          0386
         ALR   @06,@03                                             0386
         BCTR  @06,0                                               0386
         BCTR  @06,0                                               0386
         LA    @15,CHARS-1(R4)                                     0386
         MVC   ADDNUM(1,@06),0(@15)                                0386
* ADDNUM(P)  = CHARS(R5);                                  /*@G51DGBB*/
         L     @06,P                                               0387
         ALR   @03,@06                                             0387
         BCTR  @03,0                                               0387
         LA    @06,CHARS-1(R5)                                     0387
         MVC   ADDNUM(1,@03),0(@06)                                0387
* END;                                                     /*@Z427VLS*/
         BCTR  @08,0                                               0388
         ST    @08,R                                               0388
@DE00379 LTR   @08,@08                                             0388
         BP    @DL00379                                            0388
*END;                                                      /*@Z427VLS*/
@EL00004 DS    0H                                                  0389
@EF00004 DS    0H                                                  0389
@ER00004 LM    @14,@12,12(@13)                                     0389
         BR    @14                                                 0389
*RESPECIFY (R4,R5) UNRESTRICTED;                           /*@Z427VLS*/
*SORTONE: PROC; /*SORT EVTABLE IN DESCENDING ORDER BY MODEL, SERIAL*/
SORTONE  STM   @14,@12,12(@13)                                     0391
*               /*NUMBER FOR UNSHARED CPUS AND RELINK THE NEXT     */
*               /*ENTRY POINTERS FOR TABLE TRENDONE.         @Z427VLS*/
*               /*SET EVLETTER FOR UNSHARED CPUS             @Z427VLS*/
*IF NUMUNSHR < EVNUM THEN  /*IF TWO OR MORE CPUS IDENTIFIED AND    */
         LH    @08,NUMUNSHR                                        0392
         L     @06,EVPTR(,R2)                                      0392
         CH    @08,EVNUM(,@06)                                     0392
         BNL   @RF00392                                            0392
*  DO;   /*NOT IN SHARE TABLE THEN SORT, RELINK POINTERS.    @Z427VLS*/
*    DO J = NUMUNSHR BY 1 TO EVNUM - 1; /*SORT IN DESCENDING ORDER */
         ST    @08,J                                               0394
         B     @DE00394                                            0394
@DL00394 DS    0H                                                  0395
*      DO K = J+1 BY 1 TO EVNUM;                           /*@Z427VLS*/
         AL    @08,@CF00055                                        0395
         ST    @08,K                                               0395
         B     @DE00395                                            0395
@DL00395 DS    0H                                                  0396
*        IF EVKEY(J) < EVKEY(K) THEN                               0396
         L     @06,J                                               0396
         LA    @03,6                                               0396
         LR    @05,@06                                             0396
         MR    @04,@03                                             0396
         L     @04,EVPTR(,R2)                                      0396
         LR    @15,@03                                             0396
         MR    @14,@08                                             0396
         ST    @05,@TF00001                                        0396
         ALR   @05,@04                                             0396
         ST    @15,@TF00002                                        0396
         ALR   @15,@04                                             0396
         CLC   EVKEY-6(6,@05),EVKEY-6(@15)                         0396
         BNL   @RF00396                                            0396
*          DO;                                             /*@Z427VLS*/
*            EVKEY(J) = (EVKEY(J)   &&   EVKEY(K)); /*FLIP ENTRIES*/
         LR    @03,@04                                             0398
         AL    @03,@TF00001                                        0398
         LR    @05,@04                                             0398
         AL    @05,@TF00001                                        0398
         MVC   @TS00001(6),EVKEY-6(@05)                            0398
         LR    @05,@04                                             0398
         AL    @05,@TF00002                                        0398
         XC    @TS00001(6),EVKEY-6(@05)                            0398
         MVC   EVKEY-6(6,@03),@TS00001                             0398
*            EVKEY(K) = (EVKEY(K)   &&   EVKEY(J));        /*@Z427VLS*/
         LR    @03,@04                                             0399
         AL    @03,@TF00002                                        0399
         LR    @05,@04                                             0399
         AL    @05,@TF00002                                        0399
         MVC   @TS00001(6),EVKEY-6(@05)                            0399
         LR    @05,@04                                             0399
         AL    @05,@TF00001                                        0399
         XC    @TS00001(6),EVKEY-6(@05)                            0399
         MVC   EVKEY-6(6,@03),@TS00001                             0399
*            EVKEY(J) = (EVKEY(J)   &&   EVKEY(K));        /*@Z427VLS*/
         LR    @03,@04                                             0400
         AL    @03,@TF00001                                        0400
         LR    @05,@04                                             0400
         AL    @05,@TF00001                                        0400
         MVC   @TS00001(6),EVKEY-6(@05)                            0400
         AL    @04,@TF00002                                        0400
         XC    @TS00001(6),EVKEY-6(@04)                            0400
         MVC   EVKEY-6(6,@03),@TS00001                             0400
*            SAVEADR(J) = (SAVEADR(J)  &&  SAVEADR(K));    /*@Z427VLS*/
         LR    @03,@06                                             0401
         SLA   @03,2                                               0401
         LR    @15,@08                                             0401
         SLA   @15,2                                               0401
         L     @00,SAVEADR-4(@03)                                  0401
         X     @00,SAVEADR-4(@15)                                  0401
         ST    @00,SAVEADR-4(@03)                                  0401
*            SAVEADR(K) = (SAVEADR(K)  &&  SAVEADR(J));    /*@Z427VLS*/
         X     @00,SAVEADR-4(@15)                                  0402
         ST    @00,SAVEADR-4(@15)                                  0402
*            SAVEADR(J) = (SAVEADR(J)  &&  SAVEADR(K));    /*@Z427VLS*/
         X     @00,SAVEADR-4(@03)                                  0403
         ST    @00,SAVEADR-4(@03)                                  0403
*            /*MUST SAVE ALTERATIONS TO EVTABLE SO THAT I CAN FIX*/
*            /*ENTRY POINTERS TO EVTABLE IN SYSUM2 AT END OF JOB*/ 0404
*            FLIP(J)    = (FLIP(J) && FLIP(K));            /*@Z427VLS*/
         SLR   @03,@03                                             0404
         IC    @03,FLIP-1(@06)                                     0404
         SLR   @00,@00                                             0404
         IC    @00,FLIP-1(@08)                                     0404
         XR    @03,@00                                             0404
         STC   @03,FLIP-1(@06)                                     0404
*            FLIP(K)    = (FLIP(K) && FLIP(J));            /*@Z427VLS*/
         SLR   @00,@00                                             0405
         IC    @00,FLIP-1(@08)                                     0405
         XR    @03,@00                                             0405
         STC   @03,FLIP-1(@08)                                     0405
*            FLIP(J)    = (FLIP(J) && FLIP(K));            /*@Z427VLS*/
         SLR   @08,@08                                             0406
         IC    @08,FLIP-1(@06)                                     0406
         XR    @03,@08                                             0406
         STC   @03,FLIP-1(@06)                                     0406
*          END;                                            /*@Z427VLS*/
*        END;                                              /*@Z427VLS*/
@RF00396 LA    @08,1                                               0408
         AL    @08,K                                               0408
         ST    @08,K                                               0408
@DE00395 L     @06,EVPTR(,R2)                                      0408
         CH    @08,EVNUM(,@06)                                     0408
         BNH   @DL00395                                            0408
*     END;                                                 /*@Z427VLS*/
         LA    @08,1                                               0409
         AL    @08,J                                               0409
         ST    @08,J                                               0409
@DE00394 L     @06,EVPTR(,R2)                                      0409
         LH    @06,EVNUM(,@06)                                     0409
         BCTR  @06,0                                               0409
         CR    @08,@06                                             0409
         BNH   @DL00394                                            0409
*DO J = NUMUNSHR BY 1 TO EVNUM; /*RELINK ALL TRENDONE ENTRIES*/    0410
         LH    @08,NUMUNSHR                                        0410
         ST    @08,J                                               0410
         B     @DE00410                                            0410
@DL00410 DS    0H                                                  0411
*  IF J > 1 THEN  /*IF 1ST ENTRY, CANT CHANGE PREVIOUS FORWARD PTR*/
         C     @08,@CF00055                                        0411
         BNH   @RF00411                                            0411
*    DO;                                                   /*@Z427VLS*/
*      TRENPTR = SAVEADR(J-1); /*ADDRESS PREVIOUS ENTRY      @Z427VLS*/
         SLA   @08,2                                               0413
         L     @06,SAVEADR-8(@08)                                  0413
         ST    @06,TRENPTR(,R2)                                    0413
*      TRENEXT = SAVEADR(J); /*CHANGE PREVIOUS FORWARD PTR   @Z427VLS*/
         L     @08,SAVEADR-4(@08)                                  0414
         ST    @08,TRENEXT(,@06)                                   0414
*    END;                                                  /*@Z427VLS*/
*  IF J = EVNUM THEN /*IF LAST ENTRY IN CHAIN, DONT POINT TO NEXT*/
@RF00411 L     @08,J                                               0416
         L     @06,EVPTR(,R2)                                      0416
         CH    @08,EVNUM(,@06)                                     0416
         BNE   @RF00416                                            0416
*    DO;                                                   /*@Z427VLS*/
*      TRENPTR = SAVEADR(J); /*ADDRESS LAST ENTRY            @Z427VLS*/
         SLA   @08,2                                               0418
         L     @08,SAVEADR-4(@08)                                  0418
         ST    @08,TRENPTR(,R2)                                    0418
*      TRENEXT = 0; /*SET LAST ENTRY FORWARD POINTER TO ZERO @Z427VLS*/
         SLR   @06,@06                                             0419
         ST    @06,TRENEXT(,@08)                                   0419
*    END;                                                  /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
@RF00416 LA    @08,1                                               0421
         AL    @08,J                                               0421
         ST    @08,J                                               0421
@DE00410 L     @06,EVPTR(,R2)                                      0421
         CH    @08,EVNUM(,@06)                                     0421
         BNH   @DL00410                                            0421
* END;                                                     /*@Z427VLS*/
*IF NUMUNSHR < EVNUM + 1 THEN  /*IF SOME EVLETTERS REMAIN UNSET*/  0423
@RF00392 LH    @08,NUMUNSHR                                        0423
         L     @06,EVPTR(,R2)                                      0423
         LA    @03,1                                               0423
         AH    @03,EVNUM(,@06)                                     0423
         CR    @08,@03                                             0423
         BNL   @RF00423                                            0423
*  DO J = NUMUNSHR BY 1 TO EVNUM;                          /*@Z427VLS*/
         ST    @08,J                                               0424
         B     @DE00424                                            0424
@DL00424 DS    0H                                                  0425
*    EVLETTER(J) = EVCON(J); /*GET NEXT CONSECUTIVE LETTER FOR CPU*/
         LR    @06,@08                                             0425
         MH    @06,@CH00081                                        0425
         L     @03,EVPTR(,R2)                                      0425
         ALR   @03,@06                                             0425
         LA    @06,EVCON-1(@08)                                    0425
         MVC   EVLETTER-6(1,@03),0(@06)                            0425
*  END;                                                    /*@Z427VLS*/
         AL    @08,@CF00055                                        0426
         ST    @08,J                                               0426
@DE00424 L     @06,EVPTR(,R2)                                      0426
         CH    @08,EVNUM(,@06)                                     0426
         BNH   @DL00424                                            0426
*TRENPTR = SAVEADR(1); /*SET TRENPTR TO FIRST TABLE IN CHAIN @Z427VLS*/
@RF00423 L     @08,SAVEADR                                         0427
         ST    @08,TRENPTR(,R2)                                    0427
*END; /*CLOSING END FOR SORTONE                              @Z427VLS*/
@EL00005 DS    0H                                                  0428
@EF00005 DS    0H                                                  0428
@ER00005 LM    @14,@12,12(@13)                                     0428
         BR    @14                                                 0428
*SORTWO: PROC;                                             /*@Z427VLS*/
SORTWO   STM   @14,@12,@SA00006                                    0429
*/*ADJUST POINTERS TO EVTABLE, TRENDCPU,TRENDOLD AS A RESULT OF SORT*/
*/*OF EVTABLE. MUST DO BEFORE SORTING TREND2                 @Z427VLS*/
*  DO J = 1 BY 1 TO PASSNUM;                               /*@Z427VLS*/
         LA    @08,1                                               0430
         ST    @08,J                                               0430
         B     @DE00430                                            0430
@DL00430 DS    0H                                                  0431
*    WORKBYTE = TMTCPUS(J);                                /*@0099VLS*/
         LR    @06,@08                                             0431
         MH    @06,@CH00940                                        0431
         L     @03,SORTADR(,R2)                                    0431
         ST    @06,@TF00001                                        0431
         ALR   @06,@03                                             0431
         AL    @06,@CF01575                                        0431
         MVC   WORKBYTE(1),TMTCPUS-3(@06)                          0431
*    WORKTWO  = WORKBYTE; /*DITTO                            @Z427VLS*/
         MVC   WORKTWO(1),WORKBYTE                                 0432
*    SRL(WORKBYTE,4); /*WORKBYTE,WORKNM NOW SET TO TRENDCPU  @Z427VLS*/
         SLR   @06,@06                                             0433
         IC    @06,WORKBYTE                                        0433
         SRL   @06,4                                               0433
         STC   @06,WORKBYTE                                        0433
*    WORKTWO = (WORKTWO & '0F'X); /*WORKTWO,WORKNM2 NOW TRENDOLD*/ 0434
         NI    WORKTWO,X'0F'                                       0434
*    WORKNM2 = WORKNM2 + 1; /*REFERENCE 1ST ENTRY AS 1, NOT 0*/    0435
         LA    @06,1                                               0435
         SLR   @00,@00                                             0435
         IC    @00,WORKNM2                                         0435
         ALR   @00,@06                                             0435
         STC   @00,WORKNM2                                         0435
*    TMTCPUS(J) = FLIPFLOP(WORKNM2);                       /*@0099VLS*/
         LR    @15,@03                                             0436
         AL    @15,@TF00001                                        0436
         AL    @15,@CF01575                                        0436
         LR    @14,@00                                             0436
         LA    @05,FLIPFLOP-1(@14)                                 0436
         MVC   TMTCPUS-3(1,@15),0(@05)                             0436
*    WORKNM = WORKNM + 1; /*REFERENCE 1ST ENTRY AS 1, NOT 0  @Z427VLS*/
         SLR   @00,@00                                             0437
         IC    @00,WORKNM                                          0437
         ALR   @06,@00                                             0437
         STC   @06,WORKNM                                          0437
*    WORKTWO = FLIPFLOP(WORKNM);    /*TRENDCPU AFTER SORTING @Z427VLS*/
         LA    @15,FLIPFLOP-1(@06)                                 0438
         MVC   WORKTWO(1),0(@15)                                   0438
*    SLL(WORKTWO,4); /*SORTED TRENDCPU NOW IN FIRST FOUR BITS*/    0439
         SLR   @06,@06                                             0439
         IC    @06,WORKTWO                                         0439
         SLL   @06,4                                               0439
         STC   @06,WORKTWO                                         0439
*    TMTCPUS(J) = (TMTCPUS(J) × WORKTWO);                  /*@0099VLS*/
         LR    @06,@03                                             0440
         AL    @06,@TF00001                                        0440
         AL    @06,@CF01575                                        0440
         OC    TMTCPUS-3(1,@06),WORKTWO                            0440
*    /*FOLLOWING IS A LAST MINUTE MANIPULATION, OCT 13, 1976, TO*/ 0441
*    /*GET 3705 ERROR TYPE TO FOLLOW TRENDCPU FOR PROPER SORTING*/ 0441
*    WORKTWO = (TMTCPUS(J) & '0F'X);                       /*@0099VLS*/
         LR    @06,@03                                             0441
         AL    @06,@TF00001                                        0441
         AL    @06,@CF01575                                        0441
         MVC   WORKTWO(1),TMTCPUS-3(@06)                           0441
         NI    WORKTWO,X'0F'                                       0441
*    TMTCPUS(J) = (TMTCPUS(J) & 'F0'X);                    /*@0099VLS*/
         LR    @06,@03                                             0442
         AL    @06,@TF00001                                        0442
         AL    @06,@CF01575                                        0442
         NI    TMTCPUS-3(@06),X'F0'                                0442
*    TMTITEM(J) = (TMTITEM(J) × WORKTWO);                  /*@0099VLS*/
         AL    @03,@TF00001                                        0443
         AL    @03,@CF01576                                        0443
         OC    TMTITEM-4(1,@03),WORKTWO                            0443
*                                           /*PLACE          @Z427VLS*/
*  END;                                                    /*@Z427VLS*/
         AL    @08,@CF00055                                        0444
         ST    @08,J                                               0444
@DE00430 C     @08,PASSNUM                                         0444
         BNH   @DL00430                                            0444
*  IF DEBUG23 ^= ON & SORTNUM > 1 THEN /*ONLY SORT IS AT LEAST TWO*/
         TM    DEBUG23(R2),B'00000001'                             0445
         BO    @RF00445                                            0445
         L     @08,SORTNUM(,R2)                                    0445
         C     @08,@CF00055                                        0445
         BNH   @RF00445                                            0445
*  DO;  /*ENTRIES AND DEBUG DOESNT SPECIFY ORIGINAL INPUT ORDER*/  0446
*/* SORT THAT ONLY EXAMINES AN ENTRY ONCE IF DATA IS IN ORDER*/    0447
* SRTCONT = ((PASSNUM-1)*14) + SORTADR;                    /*@0099VLS*/
         L     @08,PASSNUM                                         0447
         BCTR  @08,0                                               0447
         MH    @08,@CH00940                                        0447
         AL    @08,SORTADR(,R2)                                    0447
         ST    @08,SRTCONT                                         0447
*GENERATE REFS(TMT2,TMTKEY);                               /*@0099VLS*/
    LA   R15,14
    L    R3,SORTADR(R2)
    L    R4,SRTCONT
    LR   R1,R3
    B    DOIT
LOOPBCK1 ALR  R3,R15
         CR   R3,R4
         BNL  DONE
DOIT     CLC  TMTKEY(7,R3),TMTKEY+14(R3)
         BNH  LOOPBCK1
         XC   TMT2(14,R3),TMT2+14(R3)
         XC   TMT2+14(14,R3),TMT2(R3)
         XC   TMT2(14,R3),TMT2+14(R3)
         LR   R6,R3
LOOPBCK2 SR   R6,R15
         CR   R6,R1
         BL   LOOPBCK1
         CLC  TMTKEY(7,R6),TMTKEY+14(R6)
         BNH  LOOPBCK1
         XC   TMT2+14(14,R6),TMT2(R6)
         XC   TMT2(14,R6),TMT2+14(R6)
         XC   TMT2+14(14,R6),TMT2(R6)
          B      LOOPBCK2            DOES IT NEED TO BE MOVED AGAIN
DONE      EQU    *
* END;                                                     /*@Z427VLS*/
*END; /*CLOSING END TO PROC SORTWO                           @Z427VLS*/
@EL00006 DS    0H                                                  0450
@EF00006 DS    0H                                                  0450
@ER00006 LM    @14,@12,@SA00006                                    0450
         BR    @14                                                 0450
*CONTMDR: PROC; /*COUNT TEMPORARY ERRORS AND INDICATE PERMANENT */ 0451
CONTMDR  STM   @14,@12,@SA00007                                    0451
*               /*ERROR IF RECORD REPRESENTS SUCH.           @Z427VLS*/
*BUG(4) = BUG(4) + 1; /*COUNT NUMBER OF MDR 91, 3705 RECORDS @Z427VLS*/
         LA    @08,1                                               0452
         AL    @08,BUG+12                                          0452
         ST    @08,BUG+12                                          0452
*IF TPRMODE = LINSTAT0 THEN                                        0453
         CLI   TPRMODE(R7),X'00'                                   0453
         BNE   @RF00453                                            0453
*  DO;                                                     /*@Z427VLS*/
*    TRENDTMP  = TRENDTMP  + ERRCT1;                   /*@Z427VLS*/
         ICM   @08,15,TRENDTMP                                     0455
         SLR   @06,@06                                             0455
         IC    @06,ERRCT1(,R7)                                     0455
         ALR   @08,@06                                             0455
         STCM  @08,15,TRENDTMP                                     0455
*    TRENDPRM  = ON; /*RECORD REPRESENTS ONE PERMANENT ERROR @0099VLS*/
         OI    TRENDPRM,B'00000001'                                0456
*  END;                                                    /*@Z427VLS*/
*ELSE                                                              0458
*  DO;                                                     /*@Z427VLS*/
         B     @RC00453                                            0458
@RF00453 DS    0H                                                  0459
*    IF TPRMODE = LINSTAT1 THEN                                    0459
         CLI   TPRMODE(R7),X'01'                                   0459
         BNE   @RF00459                                            0459
*      TRENDTMP = ERRCT1;                                  /*@VS48722*/
         SLR   @08,@08                                             0460
         IC    @08,ERRCT1(,R7)                                     0460
         STCM  @08,15,TRENDTMP                                     0460
*  ELSE                                                            0461
*    DO;                                                   /*@Z427VLS*/
         B     @RC00459                                            0461
@RF00459 DS    0H                                                  0462
*      IF TPRMODE = CHANADAP × /*CHANNEL ADAPTER ERROR       @Z427VLS*/
*         TPRMODE = COMSCAN  × /*COMMUNICATION SCANNER ERROR @Z427VLS*/
*         TPRMODE = IOERROR  × /*I/O INSTRUCTION EXCEPTION   @Z427VLS*/
*         TPRMODE = UNRESOLV × /*UNRESOLVED PROGRAM LEVEL ONE */   0462
*                              /*INTERRUPT                   @Z427VLS*/
*         TPRMODE = LINKERR THEN  /* LINK ERROR              @Z427VLS*/
         CLI   TPRMODE(R7),X'10'                                   0462
         BE    @RT00462                                            0462
         CLI   TPRMODE(R7),X'11'                                   0462
         BE    @RT00462                                            0462
         CLI   TPRMODE(R7),X'12'                                   0462
         BE    @RT00462                                            0462
         CLI   TPRMODE(R7),X'13'                                   0462
         BE    @RT00462                                            0462
         CLI   TPRMODE(R7),X'02'                                   0462
         BNE   @RF00462                                            0462
@RT00462 DS    0H                                                  0463
*           TRENDPRM  = ON;                              /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0463
*      ELSE                                                        0464
*      DO;                                                 /*@Z427VLS*/
         B     @RC00462                                            0464
@RF00462 DS    0H                                                  0465
*      IF TPRMODE = LINSTAT3 THEN /*IF MODE IS 03            @Z427VLS*/
         CLI   TPRMODE(R7),X'03'                                   0465
         BNE   @RF00465                                            0465
*         DO;                                              /*@Z427VLS*/
*           TRENDTMP  = TRENDTMP  + ERRCT1;            /*@Z427VLS*/
         ICM   @08,15,TRENDTMP                                     0467
         SLR   @06,@06                                             0467
         IC    @06,ERRCT1(,R7)                                     0467
         ALR   @08,@06                                             0467
         STCM  @08,15,TRENDTMP                                     0467
*           TRENDPRM  = ON;                              /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0468
*         END;                                             /*@Z427VLS*/
*       END;                                               /*@Z427VLS*/
@RF00465 DS    0H                                                  0471
*       END;                                               /*@Z427VLS*/
@RC00462 DS    0H                                                  0472
*    END;                                                  /*@Z427VLS*/
@RC00459 DS    0H                                                  0473
*IF TRENDPRM  = ON × TRENDTMP  > ZERO THEN                         0473
@RC00453 TM    TRENDPRM,B'00000001'                                0473
         BO    @RT00473                                            0473
         ICM   @08,15,TRENDTMP                                     0473
         BNP   @RF00473                                            0473
@RT00473 DS    0H                                                  0474
*  DO;                                                     /*@Z427VLS*/
*    BUG(5) = BUG(5) + 1; /*MDRS SAVED IN TREND2             @Z427VLS*/
         LA    @08,1                                               0475
         L     @06,BUG+16                                          0475
         ALR   @06,@08                                             0475
         ST    @06,BUG+16                                          0475
*    BUG(13) = BUG(13) + 1; /*DEVICE GROUP FIVE COUNT        @Z427VLS*/
         AL    @08,BUG+48                                          0476
         ST    @08,BUG+48                                          0476
*    TRENDGRP  = FIVE; /*SET GROUP TO TP CNTRL             @Z427VLS*/
         MVI   TRENDGRP,X'05'                                      0477
*    WORKCUA  = (TPRCUA & ONLYCUA2);                       /*@Z427VLS*/
         MVC   WORKCUA(2),TPRCUA(R7)                               0478
         NC    WORKCUA(2),@CB00910                                 0478
*    TRENDRT  = (TPRCUA & ONLYCUA2);                     /*@Z427VLS*/
         MVC   TRENDRT(2),TPRCUA(R7)                               0479
         NC    TRENDRT(2),@CB00910                                 0479
*    /*TRENDCUA IS 4 BITS TOO FAR TO THE RIGHT FOR NOW       @Z427VLS*/
*    TRENDDEV  = '3705'X;                                /*@Z427VLS*/
         MVC   TRENDDEV(2),@CB01393                                0480
*    CALL SETCPU;                                          /*@Z427VLS*/
         BAL   @14,SETCPU                                          0481
*    CALL SET3705;                                         /*@Z427VLS*/
         BAL   @14,SET3705                                         0482
*    TRENDDAT  = TREIDX; /*SET RELATIVE DATE FOR SORTING   @Z427VLS*/
         IC    @08,TREIDX                                          0483
         STC   @08,TRENDDAT                                        0483
*  END;                                                    /*@Z427VLS*/
*END; /*END FOR PROC COUNTMDR                                @Z427VLS*/
@EL00007 DS    0H                                                  0485
@EF00007 DS    0H                                                  0485
@ER00007 LM    @14,@12,@SA00007                                    0485
         BR    @14                                                 0485
*COUNTOBR:PROC; /*IDENTIFY AND SUM PERMANENT AND TEMPORARY ERRORS*/
COUNTOBR STM   @14,@12,@SA00008                                    0486
*               /*FROM OBR RECORDS IN TREND2                 @Z427VLS*/
*BUG(7) = BUG(7) + 1; /*OBR RECORDS PASSED FILTERING         @Z427VLS*/
         LA    @08,1                                               0487
         AL    @08,BUG+24                                          0487
         ST    @08,BUG+24                                          0487
*IF WORKDEV = DEV3410 ×                                            0488
*   WORKDEV = DEV3420 ×                                            0488
*   WORKDEV = DEV34XX THEN                                         0488
         CLC   WORKDEV(2),@CB00884                                 0488
         BE    @RT00488                                            0488
         CLC   WORKDEV(2),@CB00886                                 0488
         BE    @RT00488                                            0488
         CLC   WORKDEV(2),@CB00888                                 0488
         BNE   @RF00488                                            0488
@RT00488 DS    0H                                                  0489
*  CALL CHECK34X; /*IF 34XX TAPE THEN USE ANOTHER ALGORITHM  @Z427VLS*/
         BAL   @14,CHECK34X                                        0489
*ELSE /*IF NON 34XX DEVICE RECORD                            @Z427VLS*/
*   DO;                                                    /*@Z427VLS*/
         B     @RC00488                                            0490
@RF00488 DS    0H                                                  0491
*     IF WORKDEV = DEV3330 ×                                       0491
*        WORKDEV = DEV3340 ×                                       0491
*        WORKDEV = DEV3350 ×                                       0491
*        WORKDEV = DEV33301 ×                                      0491
*        WORKDEV = DEV23051 ×                                      0491
*        WORKDEV = DEV23052 THEN                                   0491
         CLC   WORKDEV(2),@CB00968                                 0491
         BE    @RT00491                                            0491
         CLC   WORKDEV(2),@CB00970                                 0491
         BE    @RT00491                                            0491
         CLC   WORKDEV(2),@CB00972                                 0491
         BE    @RT00491                                            0491
         CLC   WORKDEV(2),@CB00974                                 0491
         BE    @RT00491                                            0491
         CLC   WORKDEV(2),@CB00964                                 0491
         BE    @RT00491                                            0491
         CLC   WORKDEV(2),@CB00966                                 0491
         BNE   @RF00491                                            0491
@RT00491 DS    0H                                                  0492
*       CALL CHECK33X;                                     /*@Z427VLS*/
         BAL   @14,CHECK33X                                        0492
*     ELSE                                                         0493
*       DO;                                                /*@Z427VLS*/
         B     @RC00491                                            0493
@RF00491 DS    0H                                                  0494
*         IF SHORTSW = YES THEN                                    0494
         TM    SHORTSW(R7),B'00100000'                             0494
         BNO   @RF00494                                            0494
*           DO;                                            /*@Z427VLS*/
*             IF OBRSSDRC > ZERO THEN /*IF STAT COUNTERS EXIST*/   0496
         CLI   OBRSSDRC(R7),0                                      0496
         BNH   @RF00496                                            0496
*               DO;                                        /*@Z427VLS*/
*                 ERRNUM = NULLIT; /*CLEAR WORK AREA TO ZERO @Z427VLS*/
         MVI   ERRNUM,X'00'                                        0498
*                 ERRPLACE = (ERRPLACE × OBRSRDS); /*GET R,R ERRORS*/
         OC    ERRPLACE(1),OBRSRDS(R7)                             0499
*                 SRL(ERRPLACE,4); /*SHIFT OUT WRITE ERRORS  @Z427VLS*/
         SLR   @08,@08                                             0500
         IC    @08,ERRPLACE                                        0500
         SRL   @08,4                                               0500
         STC   @08,ERRPLACE                                        0500
*                 TRENDTMP  = TRENDTMP  + ERRNUM;      /*@Z427VLS*/
         ICM   @08,15,TRENDTMP                                     0501
         SLR   @06,@06                                             0501
         IC    @06,ERRNUM                                          0501
         ALR   @08,@06                                             0501
         STCM  @08,15,TRENDTMP                                     0501
*                 ERRNUM = NULLIT;                         /*@Z427VLS*/
         MVI   ERRNUM,X'00'                                        0502
*                 ERRPLACE = OBRSRDS; /*GET BOTH READ AND WRITE*/  0503
         MVC   ERRPLACE(1),OBRSRDS(R7)                             0503
*                 ERRPLACE = (ERRPLACE & NOREAD); /*REMOVE READS*/ 0504
         NI    ERRPLACE,X'0F'                                      0504
*                 TRENDTMP  = TRENDTMP  + ERRNUM;      /*@Z427VLS*/
         SLR   @06,@06                                             0505
         IC    @06,ERRNUM                                          0505
         ALR   @08,@06                                             0505
         STCM  @08,15,TRENDTMP                                     0505
*               END;                                       /*@Z427VLS*/
*           END;                                           /*@Z427VLS*/
*         ELSE /*LONG OBR BY DEFAULT                         @Z427VLS*/
*           DO;                                            /*@Z427VLS*/
         B     @RC00494                                            0508
@RF00494 DS    0H                                                  0509
*             IF DISMOUNT = ON × /*IF A DISMOUNT RECORD WITH STAT DTA*/
*                SDRCOUNT = ON × /*SDR COUNTER DUMPED AT EOD @Z427VLS*/
*                OBRTEMP = ON THEN /*OBR TEMPORARY ERROR FLAG ON     */
         TM    DISMOUNT(R7),B'11000100'                            0509
         BZ    @RF00509                                            0509
*              DO;                     /*                    @XA21207*/
*              IF OBRLSDRC > ZERO THEN /*IF STAT CNTRS EXIST @XA21207*/
         CLI   OBRLSDRC(R7),0                                      0511
         BNH   @RF00511                                            0511
*               DO;                                        /*@Z427VLS*/
*                 ERRNUM = NULLIT;                         /*@Z427VLS*/
         MVI   ERRNUM,X'00'                                        0513
*                 ERRPLACE = (ERRPLACE × OBRLSDR); /*GET LNG R,R ERR*/
         LA    @08,64                                              0514
         ALR   @08,R7                                              0514
         SLR   @06,@06                                             0514
         IC    @06,OBRDEVDC(,R7)                                   0514
         SLA   @06,3                                               0514
         ALR   @08,@06                                             0514
         OC    ERRPLACE(1),OBRLSDR(@08)                            0514
*                 SRL(ERRPLACE,4); /*SHIFT TO ACCESS AS NUMERIC*/  0515
         SLR   @06,@06                                             0515
         IC    @06,ERRPLACE                                        0515
         SRL   @06,4                                               0515
         STC   @06,ERRPLACE                                        0515
*                 TRENDTMP  = TRENDTMP  + ERRNUM;      /*@Z427VLS*/
         ICM   @06,15,TRENDTMP                                     0516
         SLR   @03,@03                                             0516
         IC    @03,ERRNUM                                          0516
         ALR   @06,@03                                             0516
         STCM  @06,15,TRENDTMP                                     0516
*                 ERRNUM = NULLIT;                         /*@Z427VLS*/
         MVI   ERRNUM,X'00'                                        0517
*                 ERRPLACE = OBRLSDR; /*GET READ, WRITE ERRORS*/   0518
         MVC   ERRPLACE(1),OBRLSDR(@08)                            0518
*                 ERRPLACE = (ERRPLACE & NOREAD); /*ELIM READ ERRORS*/
         NI    ERRPLACE,X'0F'                                      0519
*                 TRENDTMP  = TRENDTMP  + ERRNUM;      /*@Z427VLS*/
         SLR   @08,@08                                             0520
         IC    @08,ERRNUM                                          0520
         ALR   @06,@08                                             0520
         STCM  @06,15,TRENDTMP                                     0520
*               END;                                       /*@Z427VLS*/
*              END;                    /*                    @XA21207*/
*             ELSE /*CONTINUE CHECKING TO FIND PERM ERRORS   @Z427VLS*/
*               DO;                                        /*@Z427VLS*/
         B     @RC00509                                            0523
@RF00509 DS    0H                                                  0524
*                 IF OBRSENS0 ^= '40'X THEN   /* IF NOT INTERV. REQ  */
         LA    @08,64                                              0524
         ALR   @08,R7                                              0524
         SLR   @06,@06                                             0524
         IC    @06,OBRDEVDC(,R7)                                   0524
         SLA   @06,3                                               0524
         ALR   @08,@06                                             0524
         SLR   @06,@06                                             0524
         IC    @06,OBRLSDRC(,R7)                                   0524
         ALR   @08,@06                                             0524
         CLI   OBRSENS0(@08),X'40'                                 0524
         BE    @RF00524                                            0524
*                   TRENDPRM  = ON;                      /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0525
*               END;                                       /*@Z427VLS*/
@RF00524 DS    0H                                                  0527
*            END;                                          /*@Z427VLS*/
@RC00509 DS    0H                                                  0528
*         END;                                             /*@Z427VLS*/
@RC00494 DS    0H                                                  0529
*       END;                                               /*@Z427VLS*/
@RC00491 DS    0H                                                  0530
*    IF TRENDPRM  = ON × TRENDTMP  > ZERO THEN                     0530
@RC00488 TM    TRENDPRM,B'00000001'                                0530
         BO    @RT00530                                            0530
         ICM   @08,15,TRENDTMP                                     0530
         BNP   @RF00530                                            0530
@RT00530 DS    0H                                                  0531
*      DO;                                                 /*@Z427VLS*/
*        BUG(8) = BUG(8) + 1; /*OBRS STORED IN TREND2        @Z427VLS*/
         LA    @08,1                                               0532
         AL    @08,BUG+28                                          0532
         ST    @08,BUG+28                                          0532
*        CALL GROUPASN;                                    /*@Z427VLS*/
         BAL   @14,GROUPASN                                        0533
*        TRENDRT  = WORKCUA; /*CUA IS 4 BITS RIGHT OF CORRECT POS*/
         MVC   TRENDRT(2),WORKCUA                                  0534
*      LINKDEV = (LINKDEV && LINKDEV); /*CLEAR ITEM FROM LAST VALUE*/
         XC    LINKDEV(4),LINKDEV                                  0535
*      CALL IFCDEVIC(4,WORKDEV,LINKDEV); /*GET DEVICE LABEL  @G51DGBB*/
         L     @15,@CV01403                                        0536
         LA    @01,@AL00536                                        0536
         BALR  @14,@15                                             0536
*       TRENDDEV = DEVLABEL;  /* SET TREND2 ENTRY WITH DEVICE LABEL */
         MVC   TRENDDEV(2),DEVLABEL                                0537
*        CALL SETCPU;                                      /*@Z427VLS*/
         BAL   @14,SETCPU                                          0538
*        TRENDDAT  = TREIDX; /*SET RELATIVE DATE FOR SORTING @0099VLS*/
         IC    @08,TREIDX                                          0539
         STC   @08,TRENDDAT                                        0539
*      END;                                                /*@Z427VLS*/
*  END; /*CLOSING END FOR PROC COUNTOBR                      @Z427VLS*/
@EL00008 DS    0H                                                  0541
@EF00008 DS    0H                                                  0541
@ER00008 LM    @14,@12,@SA00008                                    0541
         BR    @14                                                 0541
*CHECK34X: PROC; /*FIND PERM, TEMP ERRORS IN 34XX DEVICES    @Z427VLS*/
CHECK34X STM   @14,@12,12(@13)                                     0542
*     BUG(38) = BUG(38) + 1;                               /*@Z427VLS*/
         LA    @08,1                                               0543
         AL    @08,BUG+148                                         0543
         ST    @08,BUG+148                                         0543
*     IF SHORTSW = NO THEN                                         0544
         TM    SHORTSW(R7),B'00100000'                             0544
         BNZ   @RF00544                                            0544
*       DO;                                                /*@Z427VLS*/
*         IF DISMOUNT = ON × SDRCOUNT = ON THEN /*IF IS EITHER A */
         TM    DISMOUNT(R7),B'10000100'                            0546
         BZ    @RF00546                                            0546
*           TRENDTMP  = TRENDTMP  + OBR34CT1 + OBR34CT2;   /*@0099VLS*/
         ICM   @08,15,TRENDTMP                                     0547
         SLR   @06,@06                                             0547
         IC    @06,OBR34CT1(,R7)                                   0547
         ALR   @08,@06                                             0547
         SLR   @06,@06                                             0547
         IC    @06,OBR34CT2(,R7)                                   0547
         ALR   @08,@06                                             0547
         STCM  @08,15,TRENDTMP                                     0547
*         ELSE /*PERM ERROR BY DEFAULT                       @Z427VLS*/
*          IF OBRTEMP = OFF THEN /*TEMP GARBAGE RECORDS MAY EXIST*/
         B     @RC00546                                            0548
@RF00546 TM    OBRTEMP(R7),B'01000000'                             0548
         BNZ   @RF00548                                            0548
*           TRENDPRM  = ON;                              /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0549
*        END;                                              /*@Z427VLS*/
@RF00548 DS    0H                                                  0550
@RC00546 DS    0H                                                  0551
*      IF TRENDTMP  = 1 × TRENDPRM  = ON THEN                      0551
@RF00544 CLC   TRENDTMP(4),@CF00055                                0551
         BE    @RT00551                                            0551
         TM    TRENDPRM,B'00000001'                                0551
         BNO   @RF00551                                            0551
@RT00551 DS    0H                                                  0552
*        BUG(39) = BUG(39) + 1;                            /*@Z427VLS*/
         LA    @08,1                                               0552
         AL    @08,BUG+152                                         0552
         ST    @08,BUG+152                                         0552
*END; /*CLOSING END TO CHECK34X                              @Z427VLS*/
@EL00009 DS    0H                                                  0553
@EF00009 DS    0H                                                  0553
@ER00009 LM    @14,@12,12(@13)                                     0553
         BR    @14                                                 0553
*CHECK33X: PROC;                                           /*@Z427VLS*/
CHECK33X STM   @14,@12,12(@13)                                     0554
*BUG(36) = BUG(36) + 1;                                    /*@Z427VLS*/
         LA    @08,1                                               0555
         AL    @08,BUG+140                                         0555
         ST    @08,BUG+140                                         0555
*IF (OBRSENS1 & PERMBIT) = PERMBIT THEN                            0556
         LA    @08,64                                              0556
         ALR   @08,R7                                              0556
         SLR   @06,@06                                             0556
         IC    @06,OBRDEVDC(,R7)                                   0556
         SLA   @06,3                                               0556
         ALR   @08,@06                                             0556
         SLR   @06,@06                                             0556
         IC    @06,OBRLSDRC(,R7)                                   0556
         ALR   @08,@06                                             0556
         MVC   @TS00001(1),OBRSENS1(@08)                           0556
         NI    @TS00001,B'10000000'                                0556
         CLI   @TS00001,B'10000000'                                0556
         BNE   @RF00556                                            0556
*  TRENDPRM  = ON;                                       /*@Z427VLS*/
         OI    TRENDPRM,B'00000001'                                0557
*ELSE                                                              0558
*  DO;                                                     /*@Z427VLS*/
         B     @RC00556                                            0558
@RF00556 DS    0H                                                  0559
*    IF OBRTEMP = ON THEN                                          0559
         TM    OBRTEMP(R7),B'01000000'                             0559
         BNO   @RF00559                                            0559
*      TRENDTMP  = TRENDTMP  + 1;                      /*@Z427VLS*/
         LA    @08,1                                               0560
         ICM   @06,15,TRENDTMP                                     0560
         ALR   @08,@06                                             0560
         STCM  @08,15,TRENDTMP                                     0560
*    ELSE                                                          0561
*      TRENDPRM  = ON;                                   /*@Z427VLS*/
         B     @RC00559                                            0561
@RF00559 OI    TRENDPRM,B'00000001'                                0561
*   END;                                                   /*@Z427VLS*/
@RC00559 DS    0H                                                  0563
*IF TRENDTMP  = 1 × TRENDPRM  = ON THEN                            0563
@RC00556 CLC   TRENDTMP(4),@CF00055                                0563
         BE    @RT00563                                            0563
         TM    TRENDPRM,B'00000001'                                0563
         BNO   @RF00563                                            0563
@RT00563 DS    0H                                                  0564
*  BUG(37) = BUG(37) + 1;                                  /*@Z427VLS*/
         LA    @08,1                                               0564
         AL    @08,BUG+144                                         0564
         ST    @08,BUG+144                                         0564
*END; /*CLOSING END TO CHECK33X                              @Z427VLS*/
@EL00010 DS    0H                                                  0565
@EF00010 DS    0H                                                  0565
@ER00010 LM    @14,@12,12(@13)                                     0565
         BR    @14                                                 0565
*GROUPASN: PROC; /*DETERMINE DEVICE GROUP FOR TREND REPORT   @Z427VLS*/
GROUPASN STM   @14,@12,12(@13)                                     0566
*                /*SET TRENDGRP IN TABLE TREND2 TO THE ENTRY NUMBER*/
*                /*IN TABLE DEVGROUP RELATING TO THIS DEVICE GROUP*/
*IF (WORKDEV1 = HEX08 & WORKDEV2 ^= HEX42) ×                       0567
*   WORKDEV  = HEX100C ×                                           0567
*   WORKDEV  = HEX1008 THEN                                        0567
         CLI   WORKDEV1,X'08'                                      0567
         BNE   @GL00024                                            0567
         CLI   WORKDEV2,X'42'                                      0567
         BNE   @RT00567                                            0567
@GL00024 CLC   WORKDEV(2),@CB00890                                 0567
         BE    @RT00567                                            0567
         CLC   WORKDEV(2),@CB00892                                 0567
         BNE   @RF00567                                            0567
@RT00567 DS    0H                                                  0568
*  DO;                                                     /*@Z427VLS*/
*    BUG(9) = BUG(9) + 1;                                  /*@Z427VLS*/
         LA    @08,1                                               0569
         AL    @08,BUG+32                                          0569
         ST    @08,BUG+32                                          0569
*    TRENDGRP  = ONE;  /*CONSOLE AND UNIT RECORD GROUP     @Z427VLS*/
         MVI   TRENDGRP,X'01'                                      0570
*  END;                                                    /*@Z427VLS*/
*ELSE                                                              0572
*  DO;                                                     /*@Z427VLS*/
         B     @RC00567                                            0572
@RF00567 DS    0H                                                  0573
*    IF WORKDEV1 = HEX10 THEN                                      0573
         CLI   WORKDEV1,X'10'                                      0573
         BNE   @RF00573                                            0573
*      DO;                                                 /*@Z427VLS*/
*        TRENDGRP  = FOUR;                               /*@Z427VLS*/
         MVI   TRENDGRP,X'04'                                      0575
*        BUG(12) = BUG(12) + 1;                            /*@Z427VLS*/
         LA    @08,1                                               0576
         AL    @08,BUG+44                                          0576
         ST    @08,BUG+44                                          0576
*      END;                                                /*@Z427VLS*/
*    ELSE                                                          0578
*      DO;                                                 /*@Z427VLS*/
         B     @RC00573                                            0578
@RF00573 DS    0H                                                  0579
*        IF WORKDEV1 = HEX20 ×                                     0579
*           WORKDEV = HEX0842 THEN                                 0579
         CLI   WORKDEV1,X'20'                                      0579
         BE    @RT00579                                            0579
         CLC   WORKDEV(2),@CB00894                                 0579
         BNE   @RF00579                                            0579
@RT00579 DS    0H                                                  0580
*          DO;                                             /*@Z427VLS*/
*            TRENDGRP  = TWO;                            /*@Z427VLS*/
         MVI   TRENDGRP,X'02'                                      0581
*            BUG(10) = BUG(10) + 1;                        /*@Z427VLS*/
         LA    @08,1                                               0582
         AL    @08,BUG+36                                          0582
         ST    @08,BUG+36                                          0582
*          END;                                            /*@Z427VLS*/
*        ELSE                                                      0584
*         DO;                                              /*@Z427VLS*/
         B     @RC00579                                            0584
@RF00579 DS    0H                                                  0585
*           IF WORKDEV1 = HEX40 THEN                               0585
         CLI   WORKDEV1,X'40'                                      0585
         BNE   @RF00585                                            0585
*             DO;                                          /*@Z427VLS*/
*               TRENDGRP  = FIVE;                        /*@Z427VLS*/
         MVI   TRENDGRP,X'05'                                      0587
*               BUG(13) = BUG(13) + 1;                     /*@Z427VLS*/
         LA    @08,1                                               0588
         AL    @08,BUG+48                                          0588
         ST    @08,BUG+48                                          0588
*             END;                                         /*@Z427VLS*/
*           ELSE                                                   0590
*             DO;                                          /*@Z427VLS*/
         B     @RC00585                                            0590
@RF00585 DS    0H                                                  0591
*               IF WORKDEV1 = HEX42 ×                              0591
*                  WORKDEV1 = HEX44 THEN                           0591
         CLI   WORKDEV1,X'42'                                      0591
         BE    @RT00591                                            0591
         CLI   WORKDEV1,X'44'                                      0591
         BNE   @RF00591                                            0591
@RT00591 DS    0H                                                  0592
*                 DO;                                      /*@Z427VLS*/
*                   TRENDGRP  = SIX;                     /*@Z427VLS*/
         MVI   TRENDGRP,X'06'                                      0593
*                   BUG(14) = BUG(14) + 1;                 /*@Z427VLS*/
         LA    @08,1                                               0594
         AL    @08,BUG+52                                          0594
         ST    @08,BUG+52                                          0594
*                 END;                                     /*@Z427VLS*/
*               ELSE                                               0596
*                 DO;                                      /*@Z427VLS*/
         B     @RC00591                                            0596
@RF00591 DS    0H                                                  0597
*                   IF WORKDEV1 = HEX80 THEN                       0597
         CLI   WORKDEV1,X'80'                                      0597
         BNE   @RF00597                                            0597
*                     DO;                                  /*@Z427VLS*/
*                       TRENDGRP  = THREE;               /*@Z427VLS*/
         MVI   TRENDGRP,X'03'                                      0599
*                       BUG(11) = BUG(11) + 1;             /*@Z427VLS*/
         LA    @08,1                                               0600
         AL    @08,BUG+40                                          0600
         ST    @08,BUG+40                                          0600
*                     END;                                 /*@Z427VLS*/
*                 END;                                     /*@Z427VLS*/
*             END;                                         /*@Z427VLS*/
*          END;                                            /*@Z427VLS*/
*      END;                                                /*@Z427VLS*/
*     END;                                                 /*@Z427VLS*/
*    END; /*CLOSING END TO GROUPASN PROC                     @Z427VLS*/
@EL00011 DS    0H                                                  0607
@EF00011 DS    0H                                                  0607
@ER00011 LM    @14,@12,12(@13)                                     0607
         BR    @14                                                 0607
*SET3705: PROC;                                            /*@Z427VLS*/
SET3705  STM   @14,@12,12(@13)                                     0608
*  IF TPRMODE = LINKERR ×                                          0609
*     TPRMODE = LINSTAT1 ×                                         0609
*     TPRMODE = LINSTAT0 ×                                         0609
*     TPRMODE = LINSTAT3 THEN                                      0609
         CLI   TPRMODE(R7),X'02'                                   0609
         BE    @RT00609                                            0609
         CLI   TPRMODE(R7),X'01'                                   0609
         BE    @RT00609                                            0609
         CLI   TPRMODE(R7),X'00'                                   0609
         BE    @RT00609                                            0609
         CLI   TPRMODE(R7),X'03'                                   0609
         BNE   @RF00609                                            0609
@RT00609 DS    0H                                                  0610
*    TRENDITM = (TRENDITM ×   '20'X);                  /*@Z427VLS*/
         OI    TRENDITM,X'20'                                      0610
*  ELSE IF TPRMODE = IOERROR ×                                     0611
*          TPRMODE = UNRESOLV THEN                                 0611
         B     @RC00609                                            0611
@RF00609 CLI   TPRMODE(R7),X'12'                                   0611
         BE    @RT00611                                            0611
         CLI   TPRMODE(R7),X'13'                                   0611
         BNE   @RF00611                                            0611
@RT00611 DS    0H                                                  0612
*          TRENDITM = (TRENDITM ×   '10'X);            /*@Z427VLS*/
         OI    TRENDITM,X'10'                                      0612
*  /*IF TPRMODE IS EQUAL TO DEFAULT OF COMSCAN OR CHANADAP ERRORS*/
*  /*TREN37 NEED NOT BE SET AS ITS CORRECT VALUE IS ZERO. TRENDRT */
*  /*IS SET HERE AS THE STUPID COMPILER WILL NOT ACCESS TREN37*/   0613
*END;                                                      /*@Z427VLS*/
@EL00012 DS    0H                                                  0613
@EF00012 DS    0H                                                  0613
@ER00012 LM    @14,@12,12(@13)                                     0613
         BR    @14                                                 0613
*SETCPU: PROC;                                             /*@Z427VLS*/
SETCPU   STM   @14,@12,@SA00013                                    0614
*/* SET NEW AND OLD CPUS IN TREND2. IF SHARED IO, ADJUST TRENCPU AND*/
*/*AND TRENCUA TO THE RESPECTIVE BASE ITEMS.                 @Z427VLS*/
*CALL TREADR;   /*CREATE EVTABLE, TRENDONE ENTRIES IF UNIQUE CPU    */
         BAL   @14,TREADR                                          0615
*MISSW = OFF;                                              /*@Z427VLS*/
         NI    MISSW,B'11111101'                                   0616
*DO J = 1 BY 1 TO EVNUM WHILE MISSW = OFF;                 /*@Z427VLS*/
         LA    @08,1                                               0617
         ST    @08,J                                               0617
         B     @DE00617                                            0617
@DL00617 TM    MISSW,B'00000010'                                   0617
         BNZ   @DC00617                                            0617
*  IF EVSERIAL(J) = LRTCPUS × EVSERIAL(J) = 'FFFFFF'X THEN         0618
         MH    @08,@CH00081                                        0618
         L     @06,EVPTR(,R2)                                      0618
         ST    @08,@TF00001                                        0618
         ALR   @08,@06                                             0618
         CLC   EVSERIAL-6(3,@08),LRTCPUS(R7)                       0618
         BE    @RT00618                                            0618
         AL    @06,@TF00001                                        0618
         CLC   EVSERIAL-6(3,@06),@CB00237                          0618
         BNE   @RF00618                                            0618
@RT00618 DS    0H                                                  0619
*      /*EVSERIAL ONLY = FOXES IF 16TH OR HIGHER CPU IN INPUT*/    0619
*    DO;                                                   /*@Z427VLS*/
*      MISSW = ON; /*LOOK KICK OUT FLAG IF A MATCH IS FOUND  @Z427VLS*/
         OI    MISSW,B'00000010'                                   0620
*      WORKNM = J - 1; /*SET TO EVTABLE ENTRY NUMBER MINUS ONE*/   0621
         L     @08,J                                               0621
         BCTR  @08,0                                               0621
         STC   @08,WORKNM                                          0621
*      TRENCPUS  = WORKBYTE; /*REFERENCE WORKNM VIA BIT STRING AND*/
         MVC   TRENCPUS(1),WORKBYTE                                0622
*                             /*SET SYSOLD EQUAL TO IT       @Z427VLS*/
*      IF SHAREPTR ^= ZERO THEN                                    0623
         L     @08,SHAREPTR(,R2)                                   0623
         LTR   @08,@08                                             0623
         BZ    @RF00623                                            0623
*        DO;                                               /*@Z427VLS*/
*          SHAREYES = NO;                                  /*@Z427VLS*/
         NI    SHAREYES,B'10111111'                                0625
*          DO K = 1 BY 1 TO SHARENUM WHILE SHAREYES = NO;  /*@Z427VLS*/
         LA    @08,1                                               0626
         ST    @08,K                                               0626
         B     @DE00626                                            0626
@DL00626 TM    SHAREYES,B'01000000'                                0626
         BNZ   @DC00626                                            0626
*            IF LRTCPUS = SHARSERA(K) THEN                         0627
         MH    @08,@CH00033                                        0627
         L     @06,SHAREPTR(,R2)                                   0627
         ST    @08,@TF00001                                        0627
         ALR   @08,@06                                             0627
         AL    @08,@CF01571                                        0627
         CLC   LRTCPUS(3,R7),SHARSERA-4(@08)                       0627
         BNE   @RF00627                                            0627
*              DO;                                         /*@Z427VLS*/
*                IF SHAREDX(K) = ON THEN                           0629
         LR    @08,@06                                             0629
         AL    @08,@TF00001                                        0629
         AL    @08,@CF01580                                        0629
         TM    SHAREDX-2(@08),B'10000000'                          0629
         BNO   @RF00629                                            0629
*                  DO;                                     /*@Z427VLS*/
*                    IF (SHARECUA(K) & CUXOFF) = (WORKCUA & NOUNIT2)
*                    THEN /*ELIMINATE CUX FLAG AND SEE IF CHANNEL AND*/
         LR    @08,@06                                             0631
         AL    @08,@TF00001                                        0631
         AL    @08,@CF01580                                        0631
         MVC   @TS00001(2),SHARECUA-2(@08)                         0631
         NC    @TS00001(2),@CB00942                                0631
         MVC   @TS00001+2(2),WORKCUA                               0631
         NC    @TS00001+2(2),@CB00908                              0631
         CLC   @TS00001(2),@TS00001+2                              0631
         BNE   @RF00631                                            0631
*                         /*CONTROL UNIT ADDRESS HALF BYTES MATCH*/
*                      DO;                                 /*@Z427VLS*/
*                        TRENDRT  = (TRENDRT  & UNITON);   /*@0099VLS*/
         NC    TRENDRT(2),@CB00930                                 0633
*                                     /*GET UNIT ADDRESS UNCHANGED*/
*                        TRENDRT  = (TRENDRT  × SHARECUB(K));      0634
         AL    @06,@TF00001                                        0634
         AL    @06,@CF01581                                        0634
         OC    TRENDRT(2),SHARECUB-7(@06)                          0634
*                        /*CONVER CHANNEL,CONTROL UNIT TO BASE ADDRS*/
*                        MISSW1 = OFF;                     /*@Z427VLS*/
         NI    MISSW1,B'11111110'                                  0635
*                        DO L = 1 BY 1 TO EVNUM WHILE MISSW1 = OFF;
         LA    @08,1                                               0636
         ST    @08,L                                               0636
         B     @DE00636                                            0636
@DL00636 TM    MISSW1,B'00000001'                                  0636
         BNZ   @DC00636                                            0636
*                          IF EVSERIAL(L) = SHARSERB(K) ×          0637
*                             EVSERIAL(L) = 'FFFFFF'X THEN         0637
         MH    @08,@CH00081                                        0637
         L     @06,EVPTR(,R2)                                      0637
         L     @03,K                                               0637
         MH    @03,@CH00033                                        0637
         L     @15,SHAREPTR(,R2)                                   0637
         ST    @08,@TF00001                                        0637
         ALR   @08,@06                                             0637
         ALR   @15,@03                                             0637
         BCTR  @15,0                                               0637
         BCTR  @15,0                                               0637
         CLC   EVSERIAL-6(3,@08),SHARSERB-9(@15)                   0637
         BE    @RT00637                                            0637
         AL    @06,@TF00001                                        0637
         CLC   EVSERIAL-6(3,@06),@CB00237                          0637
         BNE   @RF00637                                            0637
@RT00637 DS    0H                                                  0638
*                            DO;                           /*@Z427VLS*/
*                              WORKNM = L - 1; /*SET TO EVTABLE ENT.*/
         L     @08,L                                               0639
         BCTR  @08,0                                               0639
         STC   @08,WORKNM                                          0639
*                                              /*NUMBER MINUS ONE*/
*                              MISSW1 = ON;                /*@Z427VLS*/
         OI    MISSW1,B'00000001'                                  0640
*                            END;                          /*@Z427VLS*/
*                        END;                              /*@Z427VLS*/
@RF00637 LA    @08,1                                               0642
         AL    @08,L                                               0642
         ST    @08,L                                               0642
@DE00636 L     @06,EVPTR(,R2)                                      0642
         CH    @08,EVNUM(,@06)                                     0642
         BNH   @DL00636                                            0642
@DC00636 DS    0H                                                  0643
*                        SHAREYES = ON;                    /*@Z427VLS*/
         OI    SHAREYES,B'01000000'                                0643
*                      END;                                /*@Z427VLS*/
*                  END;                                    /*@Z427VLS*/
*                ELSE                                              0646
*                  DO;                                     /*@Z427VLS*/
         B     @RC00629                                            0646
@RF00629 DS    0H                                                  0647
*                    IF SHARECUA(K) = WORKCUA THEN                 0647
         L     @08,K                                               0647
         MH    @08,@CH00033                                        0647
         L     @06,SHAREPTR(,R2)                                   0647
         ST    @08,@TF00001                                        0647
         ALR   @08,@06                                             0647
         AL    @08,@CF01580                                        0647
         CLC   SHARECUA-2(2,@08),WORKCUA                           0647
         BNE   @RF00647                                            0647
*                      DO;                                 /*@Z427VLS*/
*                        TRENDRT  = SHARECUB(K); /*GET BASE CPU*/  0649
         AL    @06,@TF00001                                        0649
         AL    @06,@CF01581                                        0649
         MVC   TRENDRT(2),SHARECUB-7(@06)                          0649
*                        MISSW1 = OFF;                     /*@Z427VLS*/
         NI    MISSW1,B'11111110'                                  0650
*                        DO L = 1 BY 1 TO EVNUM WHILE MISSW1 = OFF;
         LA    @08,1                                               0651
         ST    @08,L                                               0651
         B     @DE00651                                            0651
@DL00651 TM    MISSW1,B'00000001'                                  0651
         BNZ   @DC00651                                            0651
*                          IF EVSERIAL(L) = SHARSERB(K) ×          0652
*                             EVSERIAL(L) = 'FFFFFF'X THEN         0652
         MH    @08,@CH00081                                        0652
         L     @06,EVPTR(,R2)                                      0652
         L     @03,K                                               0652
         MH    @03,@CH00033                                        0652
         L     @15,SHAREPTR(,R2)                                   0652
         ST    @08,@TF00001                                        0652
         ALR   @08,@06                                             0652
         ALR   @15,@03                                             0652
         BCTR  @15,0                                               0652
         BCTR  @15,0                                               0652
         CLC   EVSERIAL-6(3,@08),SHARSERB-9(@15)                   0652
         BE    @RT00652                                            0652
         AL    @06,@TF00001                                        0652
         CLC   EVSERIAL-6(3,@06),@CB00237                          0652
         BNE   @RF00652                                            0652
@RT00652 DS    0H                                                  0653
*                            DO;                           /*@Z427VLS*/
*                              WORKNM = L - 1; /*SET TO EVTABLE ENT.*/
         L     @08,L                                               0654
         BCTR  @08,0                                               0654
         STC   @08,WORKNM                                          0654
*                                             /*NUMBER MINUS ONE*/ 0655
*                              MISSW1 = ON;                /*@Z427VLS*/
         OI    MISSW1,B'00000001'                                  0655
*                            END;                          /*@Z427VLS*/
*                        END;                              /*@Z427VLS*/
@RF00652 LA    @08,1                                               0657
         AL    @08,L                                               0657
         ST    @08,L                                               0657
@DE00651 L     @06,EVPTR(,R2)                                      0657
         CH    @08,EVNUM(,@06)                                     0657
         BNH   @DL00651                                            0657
@DC00651 DS    0H                                                  0658
*                        SHAREYES = ON;                    /*@Z427VLS*/
         OI    SHAREYES,B'01000000'                                0658
*                    END;                                  /*@Z427VLS*/
*                 END;                                     /*@Z427VLS*/
@RF00647 DS    0H                                                  0661
*              END;                                        /*@Z427VLS*/
@RC00629 DS    0H                                                  0662
*           END;                                           /*@Z427VLS*/
@RF00627 LA    @08,1                                               0662
         AL    @08,K                                               0662
         ST    @08,K                                               0662
@DE00626 L     @06,SHAREPTR(,R2)                                   0662
         CH    @08,SHARENUM(,@06)                                  0662
         BNH   @DL00626                                            0662
@DC00626 DS    0H                                                  0663
*        END;                                              /*@Z427VLS*/
*        SLL(TRENDRT ,4); /*SHIFT INTO TRENDCUA            @Z427VLS*/
@RF00623 SLR   @08,@08                                             0664
         ICM   @08,3,TRENDRT                                       0664
         SLL   @08,4                                               0664
         STCM  @08,3,TRENDRT                                       0664
*        SLL(WORKNM,4); /*SHIFT BASE CPU INDEX TO BYTE BOUNDARY*/  0665
         SLR   @08,@08                                             0665
         IC    @08,WORKNM                                          0665
         SLL   @08,4                                               0665
         STC   @08,WORKNM                                          0665
*        TRENCPUS  = (TRENCPUS  × WORKBYTE); /*SET TRENCPU   @0099VLS*/
         OC    TRENCPUS(1),WORKBYTE                                0666
*     END;                                                 /*@Z427VLS*/
*   END;                                                   /*@Z427VLS*/
@RF00618 LA    @08,1                                               0668
         AL    @08,J                                               0668
         ST    @08,J                                               0668
@DE00617 L     @06,EVPTR(,R2)                                      0668
         CH    @08,EVNUM(,@06)                                     0668
         BNH   @DL00617                                            0668
@DC00617 DS    0H                                                  0669
*END;/*CLOSING END TO SETCPU                                 @Z427VLS*/
@EL00013 DS    0H                                                  0669
@EF00013 DS    0H                                                  0669
@ER00013 LM    @14,@12,@SA00013                                    0669
         BR    @14                                                 0669
*ENDOFILE: PROC; /*SORT EVTABLE, TRENDONE, TREND2, FREE EXCESS*/   0670
ENDOFILE STM   @14,@12,@SA00014                                    0670
*                /*TREND2 CORE, PRINT TOURIST INFO, SET RETURN CODES*/
*RESPECIFY(R15) RESTRICTED;                                /*@Z427VLS*/
*IF R15 = OVERFLOW & PHIST = ON THEN /*IF DIRECTWK OVERFLOW AND */ 0672
         C     R15,@CF00066                                        0672
         BNE   @RF00672                                            0672
         TM    PHIST(R2),B'00100000'                               0672
         BNO   @RF00672                                            0672
*  DO; /*HISTORY INPUT THEN IFCIOHND HAS NOT CLOSED HISTORY INPUT*/
*    CLOSEIO = (CLOSEIO && CLOSEIO); /*DONT CLOSE OTHER DATA SETS*/
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           0674
*    CACCIN = ON; /*SET ACCIN CLOSE REQUESTED FLAG           @Z427VLS*/
         OI    CACCIN(R2),B'00010000'                              0675
*    CALL IOHND(IOCLOSE); /*REQUEST CLOSE                    @Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0676
         LA    @01,@AL00676                                        0676
         BALR  @14,@15                                             0676
*  END;                                                    /*@Z427VLS*/
*IF MAXENT <= I & ERROR ^= ENDFILE & GETFAIL = NO THEN             0678
@RF00672 L     @14,MAXENT                                          0678
         C     @14,I                                               0678
         BH    @RF00678                                            0678
         CLC   ERROR(4),@CF00064                                   0678
         BE    @RF00678                                            0678
         TM    GETFAIL,B'00000100'                                 0678
         BNZ   @RF00678                                            0678
*  DO;            /*WORLD, DONT TELL EREP1, DONT LET LOGREC BE RESET*/
*     ZEROALL = NO;                                        /*@Z427VLS*/
         NI    ZEROALL(R2),B'10111111'                             0680
*     MSGNO = 3;                                           /*@Z427VLS*/
         MVI   MSGNO,X'03'                                         0681
*     CALL ERRMSG;                                         /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0682
*     ERROR = ZERO;                                        /*@0001VLS*/
         SLR   @14,@14                                             0683
         ST    @14,ERROR                                           0683
*     IF PHIST = ON THEN /*IF HISTORY INPUT                  @Z427VLS*/
         TM    PHIST(R2),B'00100000'                               0684
         BNO   @RF00684                                            0684
*       DO;                                                /*@Z427VLS*/
*         CLOSEIO = (CLOSEIO && CLOSEIO);                  /*@Z427VLS*/
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           0686
*         CACCIN = ON;                                     /*@Z427VLS*/
         OI    CACCIN(R2),B'00010000'                              0687
*         CALL IOHND(IOCLOSE);                             /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0688
         LA    @01,@AL00688                                        0688
         BALR  @14,@15                                             0688
*       END;                                               /*@G51DGBB*/
* END;                                                     /*@G51DGBB*/
@RF00684 DS    0H                                                  0691
* IF ERROR = FOUR THEN                                             0691
@RF00678 CLC   ERROR(4),@CF00064                                   0691
         BNE   @RF00691                                            0691
*   DO;                                                    /*@G51DGBB*/
*     R15 = ZERO;                                          /*@G51DGBB*/
         SLR   R15,R15                                             0693
*     ERROR = ZERO;                                        /*@G51DGBB*/
         SLR   @14,@14                                             0694
         ST    @14,ERROR                                           0694
*   END;                                                   /*@G51DGBB*/
*/*THE FOLLOWING CODE MUST BE ADDED TO THE END OF FILE PROC BEFORE*/
*/*CLOSING ACCDEV TO WRITE FRAMES TO ACCDEV, IF NECESSARY    @G51DGBB*/
*IF R15 < TWELVE &             /*IF NON TERMINATE RETURN CODE */   0696
*   FRAMEPTR ^= ZERO THEN      /*IF FRAMETAB IS ALLOCATED    @G51DGBB*/
@RF00691 C     R15,@CF00032                                        0696
         BNL   @RF00696                                            0696
         SLR   @14,@14                                             0696
         L     @08,FRAMEPTR(,R2)                                   0696
         CR    @08,@14                                             0696
         BE    @RF00696                                            0696
* DO;                                                      /*@G51DGBB*/
*    IF  FRAMENUM > ZERO THEN /* IF FRAMETAB ENTRIES BUILD.  @G51DGBB*/
         C     @14,FRAMENUM(,@08)                                  0698
         BNL   @RF00698                                            0698
*      DO;                                                 /*@G51DGBB*/
*         IF PHIST = ON THEN /*IF DIRECTWK WAS USED TO STORE FRAMES */
         TM    PHIST(R2),B'00100000'                               0700
         BNO   @RF00700                                            0700
*           DO;                                            /*@G51DGBB*/
*             CLOSEIO = (CLOSEIO && CLOSEIO); /*ZERO CLOSE FLAGS*/ 0702
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           0702
*             CDRCTWRK = ON;      /*INDICATE CLOSE OF DIRECTWK FOR  */
         OI    CDRCTWRK(R2),B'00000010'                            0703
*             CALL IOHND(IOCLOSE); /*WRITING, IMPLICITLY OPENED FOR RD*
         L     @15,ADIOHND(,R2)                                    0704
         LA    @01,@AL00704                                        0704
         BALR  @14,@15                                             0704
*           END;                                           /*@G51DGBB*/
*         DO A = 1 BY 1 TO FRAMENUM WHILE R15 < FOUR;       /*SETS. */
@RF00700 LA    @14,1                                               0706
         ST    @14,A                                               0706
         B     @DE00706                                            0706
@DL00706 C     R15,@CF00064                                        0706
         BNL   @DC00706                                            0706
*           IF FRAMETYP(A) = ALLALL THEN /*IF COMPLETE SET   @G51DGBB*/
         MH    @14,@CH00227                                        0707
         L     @08,FRAMEPTR(,R2)                                   0707
         ST    @14,@TF00001                                        0707
         ALR   @14,@08                                             0707
         AL    @14,@CF01571                                        0707
         CLI   FRAMETYP-17(@14),X'FF'                              0707
         BNE   @RF00707                                            0707
*             DO;                                          /*@G51DGBB*/
*               LISTPTR = FRAMLOCM(A);   /*ESTABLISH LISTLOC ADDR.*/
         L     @14,@TF00001                                        0709
         AL    @08,@CF01581                                        0709
         L     @14,FRAMLOCM-20(@14,@08)                            0709
         ST    @14,LISTPTR                                         0709
*               DO Z = 1 BY 1 TO LISTNUM WHILE R15 < FOUR ;/*@G51DGBB*/
         LA    @14,1                                               0710
         ST    @14,Z                                               0710
         B     @DE00710                                            0710
@DL00710 C     R15,@CF00064                                        0710
         BNL   @DC00710                                            0710
*                 RECCCHHR = LISTCCHR(Z);  /*GET ALL MCH FRAMES*/  0711
         MH    @14,@CH00079                                        0711
         L     @08,LISTPTR                                         0711
         ALR   @08,@14                                             0711
         BCTR  @08,0                                               0711
         MVC   RECCCHHR(5,R2),LISTCCHR-4(@08)                      0711
*                 CALL IOHND(READIRCT);    /*READ FRAME FROM DIRECTWK*/
         L     @15,ADIOHND(,R2)                                    0712
         LA    @01,@AL00712                                        0712
         BALR  @14,@15                                             0712
*                 IF R15 = ZERO THEN       /*WRITE FRAME TO ACCDEV*/
         LTR   R15,R15                                             0713
         BNZ   @RF00713                                            0713
*                   CALL IOHND(RITEHIST);                  /*@G51DGBB*/
         L     @15,ADIOHND(,R2)                                    0714
         LA    @01,@AL00714                                        0714
         BALR  @14,@15                                             0714
*              END;                                        /*@G51DGBB*/
@RF00713 LA    @14,1                                               0715
         AL    @14,Z                                               0715
         ST    @14,Z                                               0715
@DE00710 L     @08,LISTPTR                                         0715
         C     @14,LISTNUM(,@08)                                   0715
         BNH   @DL00710                                            0715
@DC00710 DS    0H                                                  0716
*              IF R15 = ZERO THEN /*IF NO ACCDEV WRITE ERROR @G51DGBB*/
         LTR   R15,R15                                             0716
         BNZ   @RF00716                                            0716
*                DO;                                       /*@G51DGBB*/
*                  LISTPTR = FRAMLOCC(A); /*GET CCH FRAMES   @G51DGBB*/
         L     @14,A                                               0718
         MH    @14,@CH00227                                        0718
         L     @08,FRAMEPTR(,R2)                                   0718
         L     @14,FRAMLOCC-24(@14,@08)                            0718
         ST    @14,LISTPTR                                         0718
*                  DO Z = 1 BY 1 TO LISTNUM WHILE R15 < FOUR;      0719
         LA    @14,1                                               0719
         ST    @14,Z                                               0719
         B     @DE00719                                            0719
@DL00719 C     R15,@CF00064                                        0719
         BNL   @DC00719                                            0719
*                    RECCCHHR = LISTCCHR(Z);               /*@G51DGBB*/
         MH    @14,@CH00079                                        0720
         L     @08,LISTPTR                                         0720
         ALR   @08,@14                                             0720
         BCTR  @08,0                                               0720
         MVC   RECCCHHR(5,R2),LISTCCHR-4(@08)                      0720
*                      CALL IOHND(READIRCT); /*READ FRAME OFF DRCTWK*/
         L     @15,ADIOHND(,R2)                                    0721
         LA    @01,@AL00721                                        0721
         BALR  @14,@15                                             0721
*                      IF R15 = ZERO THEN    /*IF SUCCESS THEN WRITE*/
         LTR   R15,R15                                             0722
         BNZ   @RF00722                                            0722
*                        CALL IOHND(RITEHIST); /*TO ACCDEV   @G51DGBB*/
         L     @15,ADIOHND(,R2)                                    0723
         LA    @01,@AL00723                                        0723
         BALR  @14,@15                                             0723
*                    END;                                  /*@G51DGBB*/
@RF00722 LA    @14,1                                               0724
         AL    @14,Z                                               0724
         ST    @14,Z                                               0724
@DE00719 L     @08,LISTPTR                                         0724
         C     @14,LISTNUM(,@08)                                   0724
         BNH   @DL00719                                            0724
@DC00719 DS    0H                                                  0725
*                 END;                                     /*@G51DGBB*/
*             END;                                         /*@G51DGBB*/
*           ELSE  /*INCOMPLETE FRAME SET                     @G51DGBB*/
*             DO;                                          /*@G51DGBB*/
         B     @RC00707                                            0727
@RF00707 DS    0H                                                  0728
*               MSGNO = 78; /*MISSING FRAME SET MESSAGE      @G51DGBB*/
         MVI   MSGNO,X'4E'                                         0728
*               CCHINDX = A;   /*CORRECT DEBUG FRAME COUNTS BY */  0729
         L     @14,A                                               0729
         ST    @14,CCHINDX                                         0729
*               CALL ERRMSG;                               /*@G51DGBB*/
         BAL   @14,ERRMSG                                          0730
*               CALL FIXENTRY; /*PASSING ENTRY INDEX TO FIXENTRY*/ 0731
         BAL   @14,FIXENTRY                                        0731
*             END;                                         /*@G51DGBB*/
*         END;                                             /*@G51DGBB*/
@RC00707 LA    @14,1                                               0733
         AL    @14,A                                               0733
         ST    @14,A                                               0733
@DE00706 L     @08,FRAMEPTR(,R2)                                   0733
         C     @14,FRAMENUM(,@08)                                  0733
         BNH   @DL00706                                            0733
@DC00706 DS    0H                                                  0734
*      END;                                                /*@G51DGBB*/
*     GEN(FREEMAIN R,SP=21);                               /*@G51DGBB*/
@RF00698 DS    0H                                                  0735
         FREEMAIN R,SP=21
* END;                                                     /*@G51DGBB*/
*IF ERROR = OVERFLOW × ERROR = ENDFILE THEN                        0737
@RF00696 L     @14,ERROR                                           0737
         C     @14,@CF00066                                        0737
         BE    @RT00737                                            0737
         C     @14,@CF00064                                        0737
         BNE   @RF00737                                            0737
@RT00737 DS    0H                                                  0738
*  ERROR = ZERO;                                           /*@0001VLS*/
         SLR   @14,@14                                             0738
         ST    @14,ERROR                                           0738
*BUG(50) = BUG(23) + BUG(17) + BUG(19) + BUG(21);          /*@G51DGBB*/
@RF00737 L     @14,BUG+88                                          0739
         AL    @14,BUG+64                                          0739
         AL    @14,BUG+72                                          0739
         AL    @14,BUG+80                                          0739
         ST    @14,BUG+196                                         0739
*NUMREC = BUG(50);                                         /*@G51DGBB*/
         ST    @14,NUMREC                                          0740
*CVD(NUMREC,PACKPAS); /*PRINT NUMBER OF RECORDS PASSED FILTERING*/ 0741
         CVD   @14,@TS00001                                        0741
         MVC   PACKPAS(4),@TS00001+4                               0741
*PACKPAS = (PACKPAS × '0000000F'X); /*CHANGE SIGN FROM C TO F*/    0742
         OC    PACKPAS(4),@CB01432                                 0742
*UNPK(EDFLD,PACKPAS);                                      /*@Z427VLS*/
         UNPK  EDFLD(9),PACKPAS(4)                                 0743
*NONBLANK = OFF; /*INITIALIZE TO NO LEADING BLANKS           @G51DGBB*/
         NI    NONBLANK,B'10111111'                                0744
*DO J = 1 BY 1 TO 8 WHILE NONBLANK = OFF;                  /*@Z427VLS*/
         LA    @14,1                                               0745
         ST    @14,J                                               0745
@DL00745 TM    NONBLANK,B'01000000'                                0745
         BNZ   @DC00745                                            0745
*  IF EDIFILD(J) = CHARZERO THEN                                   0746
         LA    @08,EDIFILD-1(@14)                                  0746
         CLI   0(@08),X'F0'                                        0746
         BNE   @RF00746                                            0746
*    EDIFILD(J) = BLANK;                                   /*@Z427VLS*/
         LA    @08,EDIFILD-1(@14)                                  0747
         MVI   0(@08),X'40'                                        0747
*  ELSE                                                            0748
*    NONBLANK = ON;                                        /*@Z427VLS*/
         B     @RC00746                                            0748
@RF00746 OI    NONBLANK,B'01000000'                                0748
*END;                                                      /*@Z427VLS*/
@RC00746 LA    @14,1                                               0749
         AL    @14,J                                               0749
         ST    @14,J                                               0749
         C     @14,@CF00066                                        0749
         BNH   @DL00745                                            0749
@DC00745 DS    0H                                                  0750
*PRINTADR = ADDR(PRINTLIN);                                /*@Z427VLS*/
         LA    @14,PRINTLIN                                        0750
         ST    @14,PRINTADR(,R2)                                   0750
*CALL IFCMSG(70,ADDR(PRINTBDY));                           /*@Z427VLS*/
         LA    @14,PRINTBDY                                        0751
         ST    @14,@AFTEMPS                                        0751
         L     @15,ADIFCMSG(,R2)                                   0751
         LA    @01,@AL00751                                        0751
         BALR  @14,@15                                             0751
*PRINTED = EDFLD;                                          /*@Z427VLS*/
         MVC   PRINTED(9),EDFLD                                    0752
*CALL IOHND(RITEPRTR);                                     /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0753
         LA    @01,@AL00753                                        0753
         BALR  @14,@15                                             0753
*CVD(ZZ3,PACKPAS);                                         /*@0099VLS*/
         L     @14,ZZ3                                             0754
         CVD   @14,@TS00001                                        0754
         MVC   PACKPAS(4),@TS00001+4                               0754
*PACKPAS = (PACKPAS × '0000000F'X); /*CHANGE SIGN FROM C TO F*/    0755
         OC    PACKPAS(4),@CB01432                                 0755
*UNPK(EDFLD,PACKPAS); /*CONVERT PACKED TO PRINTABLE          @Z427VLS*/
         UNPK  EDFLD(9),PACKPAS(4)                                 0756
*NONBLANK = OFF; /*REINITIALIZE THE SWITCH                   @Z427VLS*/
         NI    NONBLANK,B'10111111'                                0757
*DO J = 1 BY 1 TO 8 WHILE NONBLANK = OFF;                  /*@Z427VLS*/
         LA    @14,1                                               0758
         ST    @14,J                                               0758
@DL00758 TM    NONBLANK,B'01000000'                                0758
         BNZ   @DC00758                                            0758
*  IF EDIFILD(J) = CHARZERO THEN                                   0759
         LA    @08,EDIFILD-1(@14)                                  0759
         CLI   0(@08),X'F0'                                        0759
         BNE   @RF00759                                            0759
*    EDIFILD(J) = BLANK;                                   /*@Z427VLS*/
         LA    @08,EDIFILD-1(@14)                                  0760
         MVI   0(@08),X'40'                                        0760
*  ELSE /*NON BLANK BY DEFAULT                               @Z427VLS*/
*    NONBLANK = ON;                                        /*@Z427VLS*/
         B     @RC00759                                            0761
@RF00759 OI    NONBLANK,B'01000000'                                0761
*END;                                                      /*@Z427VLS*/
@RC00759 LA    @14,1                                               0762
         AL    @14,J                                               0762
         ST    @14,J                                               0762
         C     @14,@CF00066                                        0762
         BNH   @DL00758                                            0762
@DC00758 DS    0H                                                  0763
*PRINTADR = ADDR(PRINTLIN);                                /*@Z427VLS*/
         LA    @14,PRINTLIN                                        0763
         ST    @14,PRINTADR(,R2)                                   0763
*CALL IFCMSG(71,ADDR(PRINTBDY));                           /*@Z427VLS*/
         LA    @14,PRINTBDY                                        0764
         ST    @14,@AFTEMPS                                        0764
         L     @15,ADIFCMSG(,R2)                                   0764
         LA    @01,@AL00764                                        0764
         BALR  @14,@15                                             0764
*PRINTED = EDFLD;                                          /*@Z427VLS*/
         MVC   PRINTED(9),EDFLD                                    0765
*CALL IOHND(RITEPRTR);                                     /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0766
         LA    @01,@AL00766                                        0766
         BALR  @14,@15                                             0766
*IF PACC = YES THEN                                                0767
         TM    PACC(R2),B'01000000'                                0767
         BNO   @RF00767                                            0767
*  DO;                                                     /*@Z427VLS*/
*    CLOSEIO = CLOSEIO && CLOSEIO;                         /*@Z427VLS*/
         XC    CLOSEIO(2,R2),CLOSEIO(R2)                           0769
*    CACCDEV = ON;                                         /*@Z427VLS*/
         OI    CACCDEV(R2),B'00001000'                             0770
*    CALL IOHND(IOCLOSE);                                  /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    0771
         LA    @01,@AL00771                                        0771
         BALR  @14,@15                                             0771
*  END;                                                    /*@Z427VLS*/
*IF ERROR ^= NOSRTABL THEN                                         0773
@RF00767 CLC   ERROR(4),@CF00032                                   0773
         BE    @RF00773                                            0773
* DO;                                                      /*@Z427VLS*/
*   SORTNUM = PASSNUM; /*TELL EREP1 HOW MANY RECORDS IN TREND2  */ 0775
         L     @14,PASSNUM                                         0775
         ST    @14,SORTNUM(,R2)                                    0775
*   EXCESS = TABSIZE - (PASSNUM * SORTELNT); /*CORE UNUSED BY TREND2*/
         L     @08,TABSIZE(,R2)                                    0776
         MH    @14,@CH00940                                        0776
         LCR   @14,@14                                             0776
         ALR   @14,@08                                             0776
         ST    @14,EXCESS                                          0776
*   IF EXCESS > 16 THEN /*IF ONE DOUBLEWORD TO FREE AFTER ROUNDING*/
         C     @14,@CF00088                                        0777
         BNH   @RF00777                                            0777
*     DO;                                                  /*@Z427VLS*/
*       EXCESS = (EXCESS & DBWRD1); /*ROUND DOWN TO DBWORD AMOUNT*/
         N     @14,@CF00881                                        0779
         ST    @14,EXCESS                                          0779
*       RESPECIFY (R0,R1) RESTRICTED;                      /*@Z427VLS*/
*       R0 = EXCESS;                                       /*@Z427VLS*/
         LR    R0,@14                                              0781
*       R1 = SORTADR + TABSIZE - EXCESS;                   /*@Z427VLS*/
         AL    @08,SORTADR(,R2)                                    0782
         SLR   @08,@14                                             0782
         LR    R1,@08                                              0782
*       GEN(FREEMAIN R,LV=(0),A=(1));                      /*@Z427VLS*/
         FREEMAIN R,LV=(0),A=(1)
*     END;                                                 /*@Z427VLS*/
*     RESPECIFY(R1) UNRESTRICTED;                          /*@Z427VLS*/
@RF00777 DS    0H                                                  0786
*  END;                                                    /*@Z427VLS*/
*IF SORTNUM = ZERO & NUMREC = ZERO THEN  /*IF NO RECDS, EREP1 QUIT*/
@RF00773 SLR   @14,@14                                             0787
         C     @14,SORTNUM(,R2)                                    0787
         BNE   @RF00787                                            0787
         C     @14,NUMREC                                          0787
         BNE   @RF00787                                            0787
*  ERROR = TERMINAT;                                       /*@0001VLS*/
         MVC   ERROR(4),@CF00032                                   0788
*IF ERROR = SUCCESS THEN                                           0789
@RF00787 L     @14,ERROR                                           0789
         LTR   @14,@14                                             0789
         BNZ   @RF00789                                            0789
* DO;                                                      /*@Z427VLS*/
*  CALL SORTONE; /*SORT EVTABLE,TRENDONE,SET EVLETTER IF UNSET*/   0791
         BAL   @14,SORTONE                                         0791
*  IF SORTNUM > ZERO THEN /*IF ANY SAVED OBR, MDR RECORDS    @Z427VLS*/
         L     @14,SORTNUM(,R2)                                    0792
         LTR   @14,@14                                             0792
         BNP   @RF00792                                            0792
*    CALL SORTWO;                                          /*@Z427VLS*/
         BAL   @14,SORTWO                                          0793
* END;                                                     /*@Z427VLS*/
*RESPECIFY (R0,R1,R15) UNRESTRICTED;                       /*@Z427VLS*/
*END; /*CLOSING END TO ENDOFILE                              @Z427VLS*/
@EL00014 DS    0H                                                  0796
@EF00014 DS    0H                                                  0796
@ER00014 LM    @14,@12,@SA00014                                    0796
         BR    @14                                                 0796
*ALLREC: PROC;  /*RECORD DEPENDENT SELECTION CRITTERIA       @Z427VLS*/
ALLREC   STM   @14,@12,12(@13)                                     0797
*               /*COMPARE RECORD ITEMS PRECEEDED BY          @Z427VLS*/
*               /* LRT TO PARAMETER TABLE SELECTION          @Z427VLS*/
*               /*VALUES AND RANGES                          @Z427VLS*/
*PASSFLAG = YES; /*RECORD SELECTED IF PASSFLAG NOT SET TO NO @Z427VLS*/
         OI    PASSFLAG(R2),B'00000001'                            0798
*IF LRTDATE >= STDATE & LRTDATE <= ENDDATE THEN                    0799
         CLC   LRTDATE(4,R7),STDATE(R2)                            0799
         BL    @RF00799                                            0799
         CLC   LRTDATE(4,R7),ENDDATE(R2)                           0799
         BH    @RF00799                                            0799
*  DO;                                                     /*@Z427VLS*/
*    IF (LRTTIME >= STTIME1 & LRTTIME <= ENDTIME1) ×               0801
*       (LRTTIME >= STTIME2 & LRTTIME <= ENDTIME2) THEN            0801
         CLC   LRTTIME(4,R7),STTIME1(R2)                           0801
         BL    @GL00042                                            0801
         CLC   LRTTIME(4,R7),ENDTIME1(R2)                          0801
         BNH   @RT00801                                            0801
@GL00042 CLC   LRTTIME(4,R7),STTIME2(R2)                           0801
         BL    @RF00801                                            0801
         CLC   LRTTIME(4,R7),ENDTIME2(R2)                          0801
         BH    @RF00801                                            0801
@RT00801 DS    0H                                                  0802
*      DO;                                                 /*@Z427VLS*/
*        IF SHIFT3RD = ON &                                        0803
*          ((LRTDATE = STDATE & LRTTIME < STTIME1) ×               0803
*           (LRTDATE = ENDDATE & LRTTIME > ENDTIME2))              0803
*           THEN                                                   0803
         TM    SHIFT3RD(R2),B'00010000'                            0803
         BNO   @RF00803                                            0803
         CLC   LRTDATE(4,R7),STDATE(R2)                            0803
         BNE   @GL00046                                            0803
         CLC   LRTTIME(4,R7),STTIME1(R2)                           0803
         BL    @RT00803                                            0803
@GL00046 CLC   LRTDATE(4,R7),ENDDATE(R2)                           0803
         BNE   @RF00803                                            0803
         CLC   LRTTIME(4,R7),ENDTIME2(R2)                          0803
         BNH   @RF00803                                            0803
@RT00803 DS    0H                                                  0804
*              PASSFLAG = NO;                              /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            0804
*      END;                                                /*@Z427VLS*/
*    ELSE                                                          0806
*      PASSFLAG = NO;                                      /*@Z427VLS*/
         B     @RC00801                                            0806
@RF00801 NI    PASSFLAG(R2),B'11111110'                            0806
*   END;                                                   /*@Z427VLS*/
*  ELSE                                                            0808
*   PASSFLAG = NO;                                         /*@Z427VLS*/
         B     @RC00799                                            0808
@RF00799 NI    PASSFLAG(R2),B'11111110'                            0808
*END;                                                      /*@Z427VLS*/
@EL00015 DS    0H                                                  0809
@EF00015 DS    0H                                                  0809
@ER00015 LM    @14,@12,12(@13)                                     0809
         BR    @14                                                 0809
*RECDEP: PROC; /*IDENTIFY RECORD TYPE, SET SORT TABLE KEY    @Z427VLS*/
RECDEP   STM   @14,@12,@SA00016                                    0810
*              /*PERFORM FILTERING                           @Z427VLS*/
*WORKTYPE = (LRTKEY1 & GENREC);                            /*@Z427VLS*/
         MVC   WORKTYPE(1),LRTKEY1(R7)                             0811
         NI    WORKTYPE,X'F0'                                      0811
*IF LRTRUNC = ON × (WORKTYPE < HEX10)                              0812
*                × (WORKTYPE > HEX90) THEN                         0812
         TM    LRTRUNC(R7),B'00100000'                             0812
         BO    @RT00812                                            0812
         CLI   WORKTYPE,X'10'                                      0812
         BL    @RT00812                                            0812
         CLI   WORKTYPE,X'90'                                      0812
         BNH   @RF00812                                            0812
@RT00812 DS    0H                                                  0813
*  BUG(15) = BUG(15) + ONE;                                /*@Z427VLS*/
         LA    @08,1                                               0813
         AL    @08,BUG+56                                          0813
         ST    @08,BUG+56                                          0813
*ELSE                                                              0814
*  DO;                                                     /*@Z427VLS*/
         B     @RC00812                                            0814
@RF00812 DS    0H                                                  0815
*    IF WORKTYPE = HEX30 THEN                                      0815
         CLI   WORKTYPE,X'30'                                      0815
         BNE   @RF00815                                            0815
*      DO;                                                 /*@Z427VLS*/
*        CALL OBRFILT;                                     /*@Z427VLS*/
         BAL   @14,OBRFILT                                         0817
*        BUG(6) = BUG(6) + 1; /*NUMBER OF OBRS IDENTIFIED    @Z427VLS*/
         LA    @08,1                                               0818
         AL    @08,BUG+20                                          0818
         ST    @08,BUG+20                                          0818
*      END;                                                /*@Z427VLS*/
*    ELSE                                                          0820
*      DO;                                                 /*@Z427VLS*/
         B     @RC00815                                            0820
@RF00815 DS    0H                                                  0821
*        IF WORKTYPE = HEX90 THEN                                  0821
         CLI   WORKTYPE,X'90'                                      0821
         BNE   @RF00821                                            0821
*          CALL MDRFILT;                                   /*@Z427VLS*/
         BAL   @14,MDRFILT                                         0822
*        ELSE                                                      0823
*          DO;                                             /*@Z427VLS*/
         B     @RC00821                                            0823
@RF00821 DS    0H                                                  0824
*            IF WORKTYPE = HEX10 THEN                              0824
         CLI   WORKTYPE,X'10'                                      0824
         BNE   @RF00824                                            0824
*              CALL MCHFILT;                               /*@Z427VLS*/
         BAL   @14,MCHFILT                                         0825
*            ELSE                                                  0826
*             DO;                                          /*@Z427VLS*/
         B     @RC00824                                            0826
@RF00824 DS    0H                                                  0827
*               IF WORKTYPE = HEX20 THEN                           0827
         CLI   WORKTYPE,X'20'                                      0827
         BNE   @RF00827                                            0827
*                 CALL CCHFILT;                            /*@Z427VLS*/
         BAL   @14,CCHFILT                                         0828
*               ELSE                                               0829
*                DO;                                       /*@Z427VLS*/
         B     @RC00827                                            0829
@RF00827 DS    0H                                                  0830
*                   IF WORKTYPE = HEX40 THEN                       0830
         CLI   WORKTYPE,X'40'                                      0830
         BNE   @RF00830                                            0830
*                     CALL SOFTFILT;                       /*@Z427VLS*/
         BAL   @14,SOFTFILT                                        0831
*                   ELSE                                           0832
*                     DO;                                  /*@Z427VLS*/
         B     @RC00830                                            0832
@RF00830 DS    0H                                                  0833
*                       IF WORKTYPE = HEX50 THEN                   0833
         CLI   WORKTYPE,X'50'                                      0833
         BNE   @RF00833                                            0833
*                         CALL IPLFILT;                    /*@Z427VLS*/
         BAL   @14,IPLFILT                                         0834
*                       ELSE                                       0835
*                         DO;                              /*@Z427VLS*/
         B     @RC00833                                            0835
@RF00833 DS    0H                                                  0836
*                           IF WORKTYPE = HEX60 THEN               0836
         CLI   WORKTYPE,X'60'                                      0836
         BNE   @RF00836                                            0836
*                             CALL DDRFILT;                /*@Z427VLS*/
         BAL   @14,DDRFILT                                         0837
*                           ELSE                                   0838
*                             DO;                          /*@Z427VLS*/
         B     @RC00836                                            0838
@RF00836 DS    0H                                                  0839
*                               IF WORKTYPE = HEX70 THEN           0839
         CLI   WORKTYPE,X'70'                                      0839
         BNE   @RF00839                                            0839
*                                 CALL MIHFILT;            /*@Z427VLS*/
         BAL   @14,MIHFILT                                         0840
*                               ELSE                               0841
*                                 CALL EODFILT;            /*@Z427VLS*/
         B     @RC00839                                            0841
@RF00839 BAL   @14,EODFILT                                         0841
*                             END;                         /*@Z427VLS*/
*                         END;                             /*@Z427VLS*/
*                     END;                                 /*@Z427VLS*/
*                 END;                                     /*@Z427VLS*/
*             END;                                         /*@Z427VLS*/
*         END;                                             /*@Z427VLS*/
*     END;                                                 /*@Z427VLS*/
*   END;                                                   /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00016 DS    0H                                                  0850
@EF00016 DS    0H                                                  0850
@ER00016 LM    @14,@12,@SA00016                                    0850
         BR    @14                                                 0850
*TREADR: PROC;                                             /*@Z427VLS*/
TREADR   STM   @14,@12,@SA00017                                    0851
*RESPECIFY(R3,R15) RESTRICTED;                             /*@Z427VLS*/
*/*ADDRESS THE TRENDONE ENTRY THAT RELATES TO THE RECORD CPU @Z427VLS*/
*/*SERIAL NUMBER. IF THE ENTRY DOES NOT EXIST, CREATE IT AND @Z427VLS*/
*/*ADDRESS IT. TRENDONE ENTRY NUMBER IS EQUAL TO EVTABLE     @Z427VLS*/
*/*ENTRY NUMBER.                                     IF MORE @Z427VLS*/
*/*THAN 16 CPUS ARE IDENTIFIED, AN ERROR MESSAGE IS ISSUED   @Z427VLS*/
*/*THE FIRST TIME, AND THE RECORDS FOR THE EXCESS CPUS ARE   @Z427VLS*/
*/*SUMMED INTO THE 16TH CPU BUCKET BEFORE THE BUCKETS ARE IN @Z427VLS*/
*/*CPU SERIAL ORDER. AN INDEX TO THE BUCKETS FOR THE RELATIVE*/    0853
*/*DATE IN TRENDONE IS CREATED.                              @Z427VLS*/
*CPU0FLG = OFF; /*CPU INNOCENT UNTIL PROVEN GUILTY           @Z427VLS*/
         NI    CPU0FLG,B'11110111'                                 0853
*CVB(BINDAY,LRTDAY); /*CONVERT RECORD DAY TO BINARY FROM PACKED*/  0854
         XC    @TS00001(8),@TS00001                                0854
         MVC   @TS00001+6(2),LRTDAY(R7)                            0854
         CVB   @14,@TS00001                                        0854
         ST    @14,BINDAY                                          0854
*IF CROSSFLG = YES THEN /*IF YEAR BOUNDARY IS CROSSED        @Z427VLS*/
         TM    CROSSFLG,B'10000000'                                0855
         BNO   @RF00855                                            0855
*  DO;                                                     /*@Z427VLS*/
*    IF BINDAY >  DEC335 THEN  /*IS DAY FROM OLD YEAR        @Z427VLS*/
         C     @14,@CF00960                                        0857
         BNH   @RF00857                                            0857
*      TREIDX = BINDAY - DSTART + ONE; /*SET RELATIVE INDEX  @Z427VLS*/
         SL    @14,DSTART                                          0858
         LA    @14,1(,@14)                                         0858
         STC   @14,TREIDX                                          0858
*    ELSE  /*DAY FROM NEW YEAR                               @Z427VLS*/
*      TREIDX = BINDAY + ADDAFT; /*ADD OLD YEAR DAYS FOR PROPER INDEX*/
         B     @RC00857                                            0859
@RF00857 L     @14,BINDAY                                          0859
         AL    @14,ADDAFT                                          0859
         STC   @14,TREIDX                                          0859
*  END;                                                    /*@Z427VLS*/
*ELSE /*IF ALL DAYS IN SAME YEAR                             @Z427VLS*/
*  TREIDX = BINDAY - DSTART + ONE;                         /*@Z427VLS*/
         B     @RC00855                                            0861
@RF00855 L     @14,BINDAY                                          0861
         SL    @14,DSTART                                          0861
         LA    @14,1(,@14)                                         0861
         STC   @14,TREIDX                                          0861
*IF LRTCPUS = ZEROS THEN /*PROTECT AGAINST ZERO SERIAL NO. IN RECORD*/
@RC00855 CLC   LRTCPUS(3,R7),@CB00944                              0862
         BNE   @RF00862                                            0862
*  DO;                                                     /*@Z427VLS*/
*    CPU0FLG = ON; /*DONT SAVE THIS RECORD                   @Z427VLS*/
         OI    CPU0FLG,B'00001000'                                 0864
*    MSGNO = 5;                                            /*@Z427VLS*/
         MVI   MSGNO,X'05'                                         0865
*    CALL ERRMSG;                                          /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0866
*  END;                                                    /*@Z427VLS*/
*ELSE                                                              0868
*  DO;                                                     /*@Z427VLS*/
         B     @RC00862                                            0868
@RF00862 DS    0H                                                  0869
*    TRENPTR = SAVEADR(1);                                 /*@Z427VLS*/
         L     @14,SAVEADR                                         0869
         ST    @14,TRENPTR(,R2)                                    0869
*    GETOUT = NO;                                          /*@Z427VLS*/
         NI    GETOUT,B'10111111'                                  0870
*    DO K = 1 BY 1 TO EVMAX WHILE GETOUT = NO;             /*@Z427VLS*/
         LA    @14,1                                               0871
         ST    @14,K                                               0871
@DL00871 TM    GETOUT,B'01000000'                                  0871
         BNZ   @DC00871                                            0871
*      IF EVSERIAL(K) = LRTCPUS THEN                               0872
         MH    @14,@CH00081                                        0872
         L     @08,EVPTR(,R2)                                      0872
         ST    @14,@TF00001                                        0872
         ALR   @14,@08                                             0872
         CLC   EVSERIAL-6(3,@14),LRTCPUS(R7)                       0872
         BNE   @RF00872                                            0872
*        DO;                                               /*@Z427VLS*/
*          EVMODEL(K) = LRTMODEL; /*SET IN CASE THIS ENTRY CREATED*/
         AL    @08,@TF00001                                        0874
         MVC   EVMODEL-6(2,@08),LRTMODEL(R7)                       0874
*          GETOUT = YES;          /*FROM EVTABLE ENTRY WHICH IS   */
         OI    GETOUT,B'01000000'                                  0875
*        END;                     /*MISSING MODEL NUMBER     @Z427VLS*/
*      ELSE                                                        0877
*        DO;                                               /*@Z427VLS*/
         B     @RC00872                                            0877
@RF00872 DS    0H                                                  0878
*          IF TRENEXT ^= ZERO & TRENPTR ^= ZERO THEN /*IF ANOTHER*/
         SLR   @14,@14                                             0878
         L     @08,TRENPTR(,R2)                                    0878
         L     @06,TRENEXT(,@08)                                   0878
         CR    @06,@14                                             0878
         BE    @RF00878                                            0878
         CR    @08,@14                                             0878
         BE    @RF00878                                            0878
*          /*ENTRY OF TRENDONE AND ANOTHER ENTRY OF EVTABLE EXIST.*/
*          /*ALSO, IF AN ENTRY OS TRENDONE HAS BEEN CREATED  @Z427VLS*/
*                TRENPTR = TRENEXT; /*RESET BASE TO NEXT ENTRY*/   0879
         ST    @06,TRENPTR(,R2)                                    0879
*          ELSE                                                    0880
*            DO;                                           /*@Z427VLS*/
         B     @RC00878                                            0880
@RF00878 DS    0H                                                  0881
*              GETOUT = YES; /*ONLY CREATE ONE ENTRY PER CPU @Z427VLS*/
         OI    GETOUT,B'01000000'                                  0881
*              IF K < EVMAX × /*IF ROOM FOR ANOTHER EVTABLE ENTRY OR*/
*                (K = EVMAX & EVSERIAL(K) = ZERO) THEN /*LAST ENTRY*/
         L     @14,K                                               0882
         LA    @08,16                                              0882
         CR    @14,@08                                             0882
         BL    @RT00882                                            0882
         CR    @14,@08                                             0882
         BNE   @RF00882                                            0882
         MH    @14,@CH00081                                        0882
         L     @08,EVPTR(,R2)                                      0882
         L     @14,EVSERIAL-7(@14,@08)                             0882
         LA    @14,0(,@14)                                         0882
         LTR   @14,@14                                             0882
         BNZ   @RF00882                                            0882
@RT00882 DS    0H                                                  0883
*                  /*OF EVTABLE BUT IT HAS NOT BEEN SET THEN @Z427VLS*/
*                DO;                                       /*@Z427VLS*/
*                  L = EVNUM + 1; /*INDEX TO UNBUILT ENTRY   @Z427VLS*/
         L     @14,EVPTR(,R2)                                      0884
         LA    @08,1                                               0884
         AH    @08,EVNUM(,@14)                                     0884
         ST    @08,L                                               0884
*                  R3 = TREN1SIZ; /*LENGTH OF TRENDONE IN BYTES*/  0885
         L     R3,TREN1SIZ                                         0885
*                  GEN(GETMAIN EC,LV=(R3),A=COMPLINK); /*GET CORE FOR*/
         GETMAIN EC,LV=(R3),A=COMPLINK
*                                           /*NEW TRENDONE ENTRY*/ 0887
*                  IF R15 = ZERO THEN /*IF GETMAIN IS SUCCESSFUL*/ 0887
         SLR   @14,@14                                             0887
         CR    R15,@14                                             0887
         BNE   @RF00887                                            0887
*                  DO;                                     /*@Z427VLS*/
*                  IF EVNUM > ZERO THEN /*IF NOT ONLY ENTRY EXISTANT*/
         L     @08,EVPTR(,R2)                                      0889
         CH    @14,EVNUM(,@08)                                     0889
         BNL   @RF00889                                            0889
*                    TRENEXT = COMPLINK; /*FORWARD PTR TO CREATED ENT*/
         L     @14,TRENPTR(,R2)                                    0890
         L     @08,COMPLINK                                        0890
         ST    @08,TRENEXT(,@14)                                   0890
*                  TRENPTR = COMPLINK; /*ADDRESS NEW ENTRY OF TRENDONE*
@RF00889 L     @14,COMPLINK                                        0891
         ST    @14,TRENPTR(,R2)                                    0891
*                  DO Q = 1 BY 1 TO NUMDAYS; /*CLEAR NEW ENTRY*/   0892
         LA    @14,1                                               0892
         ST    @14,Q                                               0892
         B     @DE00892                                            0892
@DL00892 DS    0H                                                  0893
*                    TREGEN(Q) = (TREGEN(Q) && TREGEN(Q)); /*@Z427VLS*/
         LR    @08,@14                                             0893
         MH    @08,@CH01361                                        0893
         L     @06,TRENPTR(,R2)                                    0893
         ALR   @06,@08                                             0893
         AL    @06,@CF01573                                        0893
         XC    TREGEN-8(76,@06),TREGEN-8(@06)                      0893
*                  END;                                    /*@Z427VLS*/
         AL    @14,@CF00055                                        0894
         ST    @14,Q                                               0894
@DE00892 C     @14,NUMDAYS(,R2)                                    0894
         BNH   @DL00892                                            0894
*                  TRENEXT = (TRENEXT && TRENEXT);         /*@Z427VLS*/
         L     @14,TRENPTR(,R2)                                    0895
         L     @08,TRENEXT(,@14)                                   0895
         LR    @06,@08                                             0895
         XR    @06,@08                                             0895
         ST    @06,TRENEXT(,@14)                                   0895
*                  TRENUM = (TRENUM && TRENUM);            /*@Z427VLS*/
         L     @08,TRENUM(,@14)                                    0896
         LR    @06,@08                                             0896
         XR    @06,@08                                             0896
         ST    @06,TRENUM(,@14)                                    0896
*                  EVMODEL(L) = LRTMODEL; /*SET NEW EVTABLE ENTRY FOR*/
         L     @08,L                                               0897
         LR    @06,@08                                             0897
         MH    @06,@CH00081                                        0897
         L     @05,EVPTR(,R2)                                      0897
         ST    @06,@TF00001                                        0897
         ALR   @06,@05                                             0897
         MVC   EVMODEL-6(2,@06),LRTMODEL(R7)                       0897
*                  EVSERIAL(L) = LRTCPUS; /*CPU IDENTIFIED AS UNIQUE*/
         LR    @06,@05                                             0898
         AL    @06,@TF00001                                        0898
         MVC   EVSERIAL-6(3,@06),LRTCPUS(R7)                       0898
*                  SAVEADR(L) = TRENPTR; /*SAVE ADDRESS FOR SORTING*/
         SLA   @08,2                                               0899
         ST    @14,SAVEADR-4(@08)                                  0899
*                  EVNUM = EVNUM + 1; /*ADD 1 TO NUMBER OF ENTRIES*/
         LA    @14,1                                               0900
         AH    @14,EVNUM(,@05)                                     0900
         STH   @14,EVNUM(,@05)                                     0900
*                  END;                                    /*@Z427VLS*/
*                  ELSE                                            0902
*                    DO;                                   /*@Z427VLS*/
         B     @RC00887                                            0902
@RF00887 DS    0H                                                  0903
*                      MSGNO = ONE; /*TELL NOT ENOUGH CORE FOR TABLE*/
         MVI   MSGNO,X'01'                                         0903
*                      CALL ERRMSG;                        /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0904
*                      R15 = NOSRTABL;                     /*@0001VLS*/
         LA    R15,12                                              0905
*                      GETFAIL = YES;                      /*@0001VLS*/
         OI    GETFAIL,B'00000100'                                 0906
*                    END;                                  /*@Z427VLS*/
*                END;                                      /*@Z427VLS*/
*              ELSE  /*HERE WE HAVE NEW CPU WITH NO ROOM IN EVTABLE*/
*                DO;                                       /*@Z427VLS*/
         B     @RC00882                                            0909
@RF00882 DS    0H                                                  0910
*                  BUG(30) = BUG(30) + 1; /*RECORD FOR EXCESS CPU*/
         LA    @14,1                                               0910
         AL    @14,BUG+116                                         0910
         ST    @14,BUG+116                                         0910
*                  IF FIRSTIME = OFF   THEN /*PRINT ERROR MESSAGE ONLY*
         TM    FIRSTIME,B'00100000'                                0911
         BNZ   @RF00911                                            0911
*                    DO;                    /*FOR FIRST EXCESS CPU*/
*                      MSGNO = 6;                          /*@Z427VLS*/
         MVI   MSGNO,X'06'                                         0913
*                      CALL ERRMSG;                        /*@Z427VLS*/
         BAL   @14,ERRMSG                                          0914
*                      FIRSTIME = ON;       /*NEVER TO RETURN*/    0915
         OI    FIRSTIME,B'00100000'                                0915
*                      EVSERIAL(K) = 'FFFFFF'X; /*RESET TO NO ROOM ID*/
         L     @14,K                                               0916
         MH    @14,@CH00081                                        0916
         L     @08,EVPTR(,R2)                                      0916
         ST    @14,@TF00001                                        0916
         ALR   @14,@08                                             0916
         MVC   EVSERIAL-6(3,@14),@CB00237                          0916
*                      EVMODEL(K) = 'FFFF'X; /*WILL SORT 1ST @Z427VLS*/
         AL    @08,@TF00001                                        0917
         MVC   EVMODEL-6(2,@08),@CB00261                           0917
*                    END;                                  /*@Z427VLS*/
*                 END;                                     /*@Z427VLS*/
@RF00911 DS    0H                                                  0920
*               END;                                       /*@Z427VLS*/
@RC00882 DS    0H                                                  0921
*             END;                                         /*@Z427VLS*/
@RC00878 DS    0H                                                  0922
*         END;                                             /*@Z427VLS*/
@RC00872 LA    @14,1                                               0922
         AL    @14,K                                               0922
         ST    @14,K                                               0922
         C     @14,@CF00088                                        0922
         BNH   @DL00871                                            0922
@DC00871 DS    0H                                                  0923
*      END;                                                /*@Z427VLS*/
*ERROR = R15; /*COMMUNICATE ERROR CONDITIONS TO CALLING PROC @Z427VLS*/
@RC00862 ST    R15,ERROR                                           0924
*RESPECIFY(R3,R15) UNRESTRICTED;                           /*@Z427VLS*/
* END; /*CLOSING END FOR SUMONADR                            @Z427VLS*/
@EL00017 DS    0H                                                  0926
@EF00017 DS    0H                                                  0926
@ER00017 LM    @14,@12,@SA00017                                    0926
         BR    @14                                                 0926
*CALCRANG: PROC; /*CALCULATE NUMBER OF DAYS IN DATE RANGE    @Z427VLS*/
CALCRANG STM   @14,@12,12(@13)                                     0927
*CVB(DSTART,PSTDY); /*CHANGE PACKED START DAY TO BINARY      @Z427VLS*/
         XC    @TS00001(8),@TS00001                                0928
         MVC   @TS00001+6(2),PSTDY(R2)                             0928
         CVB   @08,@TS00001                                        0928
         ST    @08,DSTART                                          0928
*CVB(DEND,PENDY); /*CHANGE PACKED END DAY TO BINARY          @Z427VLS*/
         XC    @TS00001(8),@TS00001                                0929
         MVC   @TS00001+6(2),PENDY(R2)                             0929
         CVB   @06,@TS00001                                        0929
         ST    @06,DEND                                            0929
*IF DSTART > DEND THEN /*IF CROSS YEAR BOUNDARY              @Z427VLS*/
         CR    @08,@06                                             0930
         BNH   @RF00930                                            0930
*  DO;                                                     /*@Z427VLS*/
*    CROSSFLG = YES; /*YEAR BOUNDARY CROSSED FLAG            @Z427VLS*/
         OI    CROSSFLG,B'10000000'                                0932
*    ADDAFT = DEC366 - DSTART; /*CREATE RELATIVE INDEX IF AFTER END*/
         LCR   @08,@08                                             0933
         AL    @08,@CF00936                                        0933
         ST    @08,ADDAFT                                          0933
*                              /*OF YEAR                     @Z427VLS*/
*    NUMDAYS = DEC366 - DSTART + DEND;                     /*@Z427VLS*/
         ALR   @06,@08                                             0934
         ST    @06,NUMDAYS(,R2)                                    0934
*    YRSAVE1 = (YRSAVE1 && YRSAVE1); /*ZERO HIGH BYTE        @Z427VLS*/
         XC    YRSAVE1(1),YRSAVE1                                  0935
*    YRSAVE2 = PSTYR; /*GET DECIMAL YEAR FROM RECORD         @Z427VLS*/
         MVC   YRSAVE2(1),PSTYR(R2)                                0936
*    SLL(YRSAVE,4); /*SHIFT 4 BITS TO MAKE ROOM FOR SIGN     @Z427VLS*/
         SLR   @03,@03                                             0937
         ICM   @03,3,YRSAVE                                        0937
         SLL   @03,4                                               0937
         STCM  @03,3,YRSAVE                                        0937
*    YRSAVE2 = (YRSAVE2 × '0F'X); /*INSERT SIGN, NUMBER NOW PACKED*/
         OI    YRSAVE2,X'0F'                                       0938
*    CVB(YEAR,YRSAVE); /*CHANGE PACKED TO BINARY             @Z427VLS*/
         XC    @TS00001(8),@TS00001                                0939
         MVC   @TS00001+6(2),YRSAVE                                0939
         CVB   @03,@TS00001                                        0939
         STH   @03,YEAR                                            0939
*    IF (YEARC & LEAPMASK) = HEX0000 THEN /*IF LEAP YEARC THEN*/   0940
         MVC   @TS00001(2),YEARC                                   0940
         NC    @TS00001(2),@CB00995                                0940
         CLC   @TS00001(2),@CB00208                                0940
         BNE   @RF00940                                            0940
*     DO;                                                  /*@Z427VLS*/
*      NUMDAYS = NUMDAYS + ONE;                            /*@Z427VLS*/
         LA    @03,1                                               0942
         ALR   @06,@03                                             0942
         ST    @06,NUMDAYS(,R2)                                    0942
*      ADDAFT = ADDAFT + ONE; /*ONE MORE DAT IN LEAPYEAR     @Z427VLS*/
         ALR   @08,@03                                             0943
         ST    @08,ADDAFT                                          0943
*     END;                                                 /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*ELSE /*IF SAME YEAR                                         @Z427VLS*/
*  NUMDAYS = DEND - DSTART + ONE;                          /*@Z427VLS*/
         B     @RC00930                                            0946
@RF00930 L     @08,DEND                                            0946
         SL    @08,DSTART                                          0946
         AL    @08,@CF00055                                        0946
         ST    @08,NUMDAYS(,R2)                                    0946
*END; /*CLOSING END TO CALCRANGE                             @Z427VLS*/
@EL00018 DS    0H                                                  0947
@EF00018 DS    0H                                                  0947
@ER00018 LM    @14,@12,12(@13)                                     0947
         BR    @14                                                 0947
*OBRFILT: PROC;                                            /*@Z427VLS*/
OBRFILT  STM   @14,@12,@SA00019                                    0948
*IF POBR = OFF THEN                                                0949
         TM    POBR(R2),B'00100000'                                0949
         BNZ   @RF00949                                            0949
*  PASSFLAG=OFF;                                           /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            0950
*ELSE                                                              0951
*  DO;                                                     /*@Z427VLS*/
         B     @RC00949                                            0951
@RF00949 DS    0H                                                  0952
*    IF SHORTSW = ON THEN /*IF SHORT OBR THEN                @Z427VLS*/
         TM    SHORTSW(R7),B'00100000'                             0952
         BNO   @RF00952                                            0952
*      DO;                                                 /*@Z427VLS*/
*         WORKDEV = OBRSDEV2; /*GET DEVICE CODE FROM SHORT LOCATION*/
         MVC   WORKDEV(2),OBRSDEV2(R7)                             0954
*         WWCUA = (OBRSCUA & ONLYCUA3);                    /*@Z427VLS*/
         MVC   WWCUA(3),OBRSCUA(R7)                                0955
         NC    WWCUA(3),@CB00912                                   0955
*         CUA3 = WWCUA;                                    /*@Z427VLS*/
         MVC   CUA3(3),WWCUA                                       0956
*      END;                                                /*@Z427VLS*/
*    ELSE /*LONG OBR BY DEFAULT                              @Z427VLS*/
*      DO;                                                 /*@Z427VLS*/
         B     @RC00952                                            0958
@RF00952 DS    0H                                                  0959
*        WORKDEV = OBRDEV; /*GET DEVICE CODE FROM LONG LOCATION*/  0959
         MVC   WORKDEV(2),OBRDEV(R7)                               0959
*        WWCUA = (OBRPCUA & ONLYCUA3);                     /*@Z427VLS*/
         MVC   WWCUA(3),OBRPCUA(R7)                                0960
         NC    WWCUA(3),@CB00912                                   0960
*        CUA3 = WWCUA;                                     /*@Z427VLS*/
         MVC   CUA3(3),WWCUA                                       0961
*      END;                                                /*@Z427VLS*/
*    IF CUAPTR ^= ZERO THEN /*IF CUA SELECTION SPECIFIED THEN*/    0963
@RC00952 L     @08,CUAPTR(,R2)                                     0963
         LTR   @08,@08                                             0963
         BZ    @RF00963                                            0963
*      CALL CUASELCT; /*EXAMINE LIST OF VALID CUAS           @Z427VLS*/
         BAL   @14,CUASELCT                                        0964
*    IF PASSFLAG = YES THEN                                        0965
@RF00963 TM    PASSFLAG(R2),B'00000001'                            0965
         BNO   @RF00965                                            0965
*      DO;                                                 /*@Z427VLS*/
*        IF DEVPTR ^= ZERO THEN /*IF DEVICE SELECTION SPECIFIED THEN*/
         L     @08,DEVPTR(,R2)                                     0967
         LTR   @08,@08                                             0967
         BZ    @RF00967                                            0967
*          CALL DEVSEL; /*EXAMINE LIST OF VALID DEVICES      @Z427VLS*/
         BAL   @14,DEVSEL                                          0968
*        IF PASSFLAG = YES THEN                                    0969
@RF00967 TM    PASSFLAG(R2),B'00000001'                            0969
         BNO   @RF00969                                            0969
*          CALL COUNTOBR; /*COUNT PERM,TEMP ERRS IF IN RECORD*/    0970
         BAL   @14,COUNTOBR                                        0970
*      END;                                                /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END; /*CLOSING END OF OBRFILT                               @Z427VLS*/
@EL00019 DS    0H                                                  0973
@EF00019 DS    0H                                                  0973
@ER00019 LM    @14,@12,@SA00019                                    0973
         BR    @14                                                 0973
*MDRFILT: PROC;   /*MISCELLANEOUS DATA RECORD FILTER.        @Z427VLS*/
MDRFILT  STM   @14,@12,@SA00020                                    0974
*                 /*PASSFLAG IS TURNED OFF IF RECORD FAILS   @Z427VLS*/
*IF PTTYP = OFF THEN  /*ARE MDR RECORDS SELECTED             @Z427VLS*/
         TM    PTTYP(R2),B'10000000'                               0975
         BNZ   @RF00975                                            0975
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            0976
*ELSE /*IF MDR RECORDS HAVE BEEN SELECTED THEN               @Z427VLS*/
*  DO;                                                     /*@Z427VLS*/
         B     @RC00975                                            0977
@RF00975 DS    0H                                                  0978
*    WWCUA2 = (TPRCUA & ONLYCUA2);                         /*@XA22630*/
         MVC   WWCUA2(2),TPRCUA(R7)                                0978
         NC    WWCUA2(2),@CB00910                                  0978
*    WORKDEV = TPRDEV; /*SET WORK ITEM TO RECORD DEVICE CODE @Z427VLS*/
         MVI   WORKDEV+1,C' '                                      0979
         MVC   WORKDEV(1),TPRDEV(R7)                               0979
*    IF CUAPTR ^= ZERO THEN /*IF CUA SELECTION SPECIFIED THEN*/    0980
         L     @08,CUAPTR(,R2)                                     0980
         LTR   @08,@08                                             0980
         BZ    @RF00980                                            0980
*      CALL CUASELCT; /*EXAMINE LIST OF VALID CUAS           @Z427VLS*/
         BAL   @14,CUASELCT                                        0981
*    IF PASSFLAG = YES THEN                                        0982
@RF00980 TM    PASSFLAG(R2),B'00000001'                            0982
         BNO   @RF00982                                            0982
*      DO;                                                 /*@Z427VLS*/
*         IF DEVPTR ^= ZERO THEN /*IF DEVICE SELECTION SPECIFIED*/ 0984
         L     @08,DEVPTR(,R2)                                     0984
         LTR   @08,@08                                             0984
         BZ    @RF00984                                            0984
*           CALL DEVSEL; /*EXAMINE DEVICE SELECTION LIST     @Z427VLS*/
         BAL   @14,DEVSEL                                          0985
*         IF PASSFLAG = YES THEN /*IF VALID DEVICE TYPE THEN @Z427VLS*/
@RF00984 TM    PASSFLAG(R2),B'00000001'                            0986
         BNO   @RF00986                                            0986
*           DO;                                            /*@Z427VLS*/
*    IF LRTKEY1 = HEX91 & (TPRDEV = DV3705 × TPRDEV = DV3705A) THEN
         CLI   LRTKEY1(R7),X'91'                                   0988
         BNE   @RF00988                                            0988
         CLI   TPRDEV(R7),X'05'                                    0988
         BE    @RT00988                                            0988
         CLI   TPRDEV(R7),X'15'                                    0988
         BNE   @RF00988                                            0988
@RT00988 DS    0H                                                  0989
*               CALL CONTMDR; /*PERM,TEMP ERRORS IF FROM MVS SYSTEM*/
         BAL   @14,CONTMDR                                         0989
*             ELSE                                                 0990
*               DO;                                        /*@Z427VLS*/
         B     @RC00988                                            0990
@RF00988 DS    0H                                                  0991
*                 IF TPRDEV = DV3330 ×                             0991
*                    TPRDEV = DV3340 ×                             0991
*                    TPRDEV = DV33302 ×                            0991
*                    TPRDEV = DV3350 THEN                          0991
         CLI   TPRDEV(R7),X'01'                                    0991
         BE    @RT00991                                            0991
         CLI   TPRDEV(R7),X'09'                                    0991
         BE    @RT00991                                            0991
         CLI   TPRDEV(R7),X'0A'                                    0991
         BE    @RT00991                                            0991
         CLI   TPRDEV(R7),X'11'                                    0991
         BNE   @RF00991                                            0991
@RT00991 DS    0H                                                  0992
*                   DO;                                    /*@Z427VLS*/
*                     TRENDTMP  = TRENDTMP                         0993
*                                 + TPRS1213                       0993
*                                 + TPRS1415                       0993
*                                 + TPRS19;                /*@Z427VLS*/
         LA    @08,TPRVOL(,R7)                                     0993
         LA    @06,15                                              0993
         SLR   @03,@03                                             0993
         IC    @03,TPRBUFC(,R7)                                    0993
         NR    @06,@03                                             0993
         ALR   @08,@06                                             0993
         AL    @08,@CF01167                                        0993
         ICM   @06,15,TRENDTMP                                     0993
         SLR   @03,@03                                             0993
         ICM   @03,3,TPRS1213(@08)                                 0993
         ALR   @06,@03                                             0993
         SLR   @03,@03                                             0993
         ICM   @03,3,TPRS1415(@08)                                 0993
         ALR   @06,@03                                             0993
         SLR   @03,@03                                             0993
         IC    @03,TPRS19(,@08)                                    0993
         ALR   @06,@03                                             0993
         STCM  @06,15,TRENDTMP                                     0993
*                     BUG(34) = BUG(34) + 1;               /*@Z427VLS*/
         LA    @08,1                                               0994
         L     @03,BUG+132                                         0994
         ALR   @03,@08                                             0994
         ST    @03,BUG+132                                         0994
*                     IF TRENDTMP   > ZERO THEN                    0995
         LTR   @06,@06                                             0995
         BNP   @RF00995                                            0995
*                       DO;                                /*@Z427VLS*/
*                         BUG(35) = BUG(35) + 1;           /*@Z427VLS*/
         AL    @08,BUG+136                                         0997
         ST    @08,BUG+136                                         0997
*                         TRENDGRP  = TWO;               /*@Z427VLS*/
         MVI   TRENDGRP,X'02'                                      0998
*                         TRENDRT   = (TPRCUA & ONLYCUA2); /*@0099VLS*/
         MVC   TRENDRT(2),TPRCUA(R7)                               0999
         NC    TRENDRT(2),@CB00910                                 0999
*                         WORKCUA = (TPRCUA & ONLYCUA2);   /*@Z427VLS*/
         MVC   WORKCUA(2),TPRCUA(R7)                               1000
         NC    WORKCUA(2),@CB00910                                 1000
*                         IF TPRDEV    = DV3330 ×                  1001
*                            TPRDEV    = DV33302 THEN              1001
         CLI   TPRDEV(R7),X'01'                                    1001
         BE    @RT01001                                            1001
         CLI   TPRDEV(R7),X'0A'                                    1001
         BNE   @RF01001                                            1001
@RT01001 DS    0H                                                  1002
*                           TRENDDEV  = '3330'X;         /*@Z427VLS*/
         MVC   TRENDDEV(2),@CB01469                                1002
*                         ELSE                                     1003
*                           DO;                            /*@Z427VLS*/
         B     @RC01001                                            1003
@RF01001 DS    0H                                                  1004
*                             IF TPRDEV = DV3340 THEN              1004
         CLI   TPRDEV(R7),X'09'                                    1004
         BNE   @RF01004                                            1004
*                               TRENDDEV  = '3340'X;     /*@Z427VLS*/
         MVC   TRENDDEV(2),@CB01470                                1005
*                             ELSE                                 1006
*                               TRENDDEV  = '3350'X;     /*@Z427VLS*/
         B     @RC01004                                            1006
@RF01004 MVC   TRENDDEV(2),@CB01471                                1006
*                           END;                           /*@Z427VLS*/
@RC01004 DS    0H                                                  1008
*                         CALL SETCPU;                     /*@Z427VLS*/
@RC01001 BAL   @14,SETCPU                                          1008
*                         TRENDDAT  = TREIDX;            /*@Z427VLS*/
         IC    @08,TREIDX                                          1009
         STC   @08,TRENDDAT                                        1009
*                       END;                               /*@Z427VLS*/
*                     END;                                 /*@Z427VLS*/
*                   ELSE                                           1012
*                     BUG(31) = BUG(31) +1;                /*@Z427VLS*/
         B     @RC00991                                            1012
@RF00991 LA    @08,1                                               1012
         AL    @08,BUG+120                                         1012
         ST    @08,BUG+120                                         1012
*                 END;                                     /*@Z427VLS*/
*           END;                                           /*@Z427VLS*/
*       END;                                               /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;/*CLOSING END FOR MDRFILT PROC                          @Z427VLS*/
@EL00020 DS    0H                                                  1017
@EF00020 DS    0H                                                  1017
@ER00020 LM    @14,@12,@SA00020                                    1017
         BR    @14                                                 1017
*DDRFILT: PROC;                                            /*@Z427VLS*/
DDRFILT  STM   @14,@12,@SA00021                                    1018
*BUG(24) = BUG(24) + 1; /*DDRS IDENTIFIED                    @Z427VLS*/
         LA    @08,1                                               1019
         AL    @08,BUG+92                                          1019
         ST    @08,BUG+92                                          1019
*IF PDDR = OFF THEN                                                1020
         TM    PDDR(R2),B'00000100'                                1020
         BNZ   @RF01020                                            1020
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1021
*ELSE                                                              1022
*  DO;                                                     /*@Z427VLS*/
         B     @RC01020                                            1022
@RF01020 DS    0H                                                  1023
*    IF CUAPTR ^= ZERO THEN /*IF CUA SELECTION SPECIFIED THEN*/    1023
         L     @08,CUAPTR(,R2)                                     1023
         LTR   @08,@08                                             1023
         BZ    @RF01023                                            1023
*      DO;                                                 /*@Z427VLS*/
*      WWCUA = DDRFCUA; /*GET FROM CUA FROM RECORD           @Z427VLS*/
         MVC   WWCUA(3),DDRFCUA(R7)                                1025
*      CALL CUASELCT; /*EXAMINE LIST OF VALID CUA RANGES     @Z427VLS*/
         BAL   @14,CUASELCT                                        1026
*      END;                                                /*@Z427VLS*/
*    IF PASSFLAG = YES THEN /*IF CUA ON LIST THEN            @Z427VLS*/
@RF01023 TM    PASSFLAG(R2),B'00000001'                            1028
         BNO   @RF01028                                            1028
*      DO;                                                 /*@Z427VLS*/
*        IF DEVPTR ^= ZERO THEN                                    1030
         L     @08,DEVPTR(,R2)                                     1030
         LTR   @08,@08                                             1030
         BZ    @RF01030                                            1030
*          DO;                                             /*@Z427VLS*/
*          WORKDEV = DDRCODE2;                             /*@Z427VLS*/
         MVC   WORKDEV(2),DDRCODE2(R7)                             1032
*          CALL DEVSEL;                                    /*@Z427VLS*/
         BAL   @14,DEVSEL                                          1033
*          END;                                            /*@Z427VLS*/
*        IF PASSFLAG = YES THEN                                    1035
@RF01030 TM    PASSFLAG(R2),B'00000001'                            1035
         BNO   @RF01035                                            1035
*          BUG(25) = BUG(25) + 1;                          /*@Z427VLS*/
         LA    @08,1                                               1036
         AL    @08,BUG+96                                          1036
         ST    @08,BUG+96                                          1036
*      END;                                                /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00021 DS    0H                                                  1039
@EF00021 DS    0H                                                  1039
@ER00021 LM    @14,@12,@SA00021                                    1039
         BR    @14                                                 1039
*MIHFILT: PROC;                                            /*@Z427VLS*/
MIHFILT  STM   @14,@12,@SA00022                                    1040
*BUG(26) = BUG(26) + 1; /*NUMBER OF MIH RECORDS IDENTIFIED   @Z427VLS*/
         LA    @08,1                                               1041
         AL    @08,BUG+100                                         1041
         ST    @08,BUG+100                                         1041
*IF PMIH = OFF THEN                                                1042
         TM    PMIH(R2),B'00000010'                                1042
         BNZ   @RF01042                                            1042
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1043
*ELSE                                                              1044
*  DO;                                                     /*@Z427VLS*/
         B     @RC01042                                            1044
@RF01042 DS    0H                                                  1045
*    IF CUAPTR ^= ZERO THEN                                        1045
         L     @08,CUAPTR(,R2)                                     1045
         LTR   @08,@08                                             1045
         BZ    @RF01045                                            1045
*      DO;                                                 /*@Z427VLS*/
*        WWCUA = MIHCUA;                                   /*@Z427VLS*/
         MVC   WWCUA(3),MIHCUA(R7)                                 1047
*        CALL CUASELCT;                                    /*@Z427VLS*/
         BAL   @14,CUASELCT                                        1048
*      END;                                                /*@Z427VLS*/
*    IF PASSFLAG = YES THEN                                        1050
@RF01045 TM    PASSFLAG(R2),B'00000001'                            1050
         BNO   @RF01050                                            1050
*      DO;                                                 /*@Z427VLS*/
*        IF DEVPTR ^= ZERO THEN /*IF DEVICE SELECTION SPECIFIED*/  1052
         L     @08,DEVPTR(,R2)                                     1052
         LTR   @08,@08                                             1052
         BZ    @RF01052                                            1052
*          DO;                                             /*@Z427VLS*/
*            WORKDEV = MIHCODE2;                           /*@Z427VLS*/
         MVC   WORKDEV(2),MIHCODE2(R7)                             1054
*            CALL DEVSEL; /*EXAMINE LIST OF VALID DEVICES    @Z427VLS*/
         BAL   @14,DEVSEL                                          1055
*           END;                                           /*@Z427VLS*/
*        IF PASSFLAG = YES THEN                                    1057
@RF01052 TM    PASSFLAG(R2),B'00000001'                            1057
         BNO   @RF01057                                            1057
*          BUG(27) = BUG(27) + 1;                          /*@Z427VLS*/
         LA    @08,1                                               1058
         AL    @08,BUG+104                                         1058
         ST    @08,BUG+104                                         1058
*       END;                                               /*@Z427VLS*/
*   END;                                                   /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00022 DS    0H                                                  1061
@EF00022 DS    0H                                                  1061
@ER00022 LM    @14,@12,@SA00022                                    1061
         BR    @14                                                 1061
*CCHFILT: PROC;                                            /*@Z427VLS*/
CCHFILT  STM   @14,@12,@SA00023                                    1062
*DCL  INDEX   FIXED(31);                                   /*@0099VLS*/
*BUG(18) = BUG(18) + 1; /*NUMBER OF CCH RECORDS IDENTIFIED   @Z427VLS*/
         LA    @08,1                                               1064
         AL    @08,BUG+68                                          1064
         ST    @08,BUG+68                                          1064
*IF PCHAN = OFF THEN                                               1065
         TM    PCHAN(R2),B'01000000'                               1065
         BNZ   @RF01065                                            1065
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1066
*ELSE                                                              1067
*  DO;                                                     /*@Z427VLS*/
         B     @RC01065                                            1067
@RF01065 DS    0H                                                  1068
*    IF CUAPTR ^= ZERO THEN /*IF CUA SELECTION SPECIFIED THEN*/    1068
         L     @08,CUAPTR(,R2)                                     1068
         LTR   @08,@08                                             1068
         BZ    @RF01068                                            1068
*      DO;                                                 /*@Z427VLS*/
*        WWCUA2 = (WWCUA2 & ONLYCUA2);                     /*@Z427VLS*/
         NC    WWCUA2(2),@CB00910                                  1070
*        CALL CUASELCT;                                    /*@Z427VLS*/
         BAL   @14,CUASELCT                                        1071
*      END;                                                /*@Z427VLS*/
*        IF PASSFLAG = YES THEN                                    1073
@RF01068 TM    PASSFLAG(R2),B'00000001'                            1073
         BNO   @RF01073                                            1073
*          DO;                                             /*@Z427VLS*/
*            CALL TREADR;  /*ADDR CCH ENT REL TO  CPU SER    @XA20474*/
         BAL   @14,TREADR                                          1075
*           IF CPU0FLG = OFF THEN                                  1076
         TM    CPU0FLG,B'00001000'                                 1076
         BNZ   @RF01076                                            1076
*            DO;                                           /*@Z427VLS*/
*    INDEX = CCHCUA;                                       /*@0099VLS*/
         SLR   @08,@08                                             1078
         ICM   @08,3,CCHCUA(R7)                                    1078
         ST    @08,INDEX                                           1078
*    SRL(INDEX,8);                                         /*@0001VLS*/
         SRL   @08,8                                               1079
         ST    @08,INDEX                                           1079
*    IF INDEX = 0 THEN                                             1080
         L     @08,INDEX                                           1080
         LTR   @08,@08                                             1080
         BNZ   @RF01080                                            1080
*       TRECCH0(TREIDX) = TRECCH0(TREIDX) + 1;             /*@G51DGVS*/
         SLR   @08,@08                                             1081
         IC    @08,TREIDX                                          1081
         MH    @08,@CH01361                                        1081
         L     @06,TRENPTR(,R2)                                    1081
         LA    @03,1                                               1081
         LA    @01,0(@08,@06)                                      1081
         AL    @01,@CF01588                                        1081
         AL    @03,TRECCH0-16(,@01)                                1081
         AL    @06,@CF01588                                        1081
         ST    @03,TRECCH0-16(@08,@06)                             1081
*    ELSE                                                          1082
*     IF INDEX = 1 THEN                                            1082
         B     @RC01080                                            1082
@RF01080 LA    @08,1                                               1082
         C     @08,INDEX                                           1082
         BNE   @RF01082                                            1082
*        TRECCH1(TREIDX) = TRECCH1(TREIDX) + 1;            /*@G51DGVS*/
         SLR   @06,@06                                             1083
         IC    @06,TREIDX                                          1083
         MH    @06,@CH01361                                        1083
         L     @03,TRENPTR(,R2)                                    1083
         LA    @01,0(@06,@03)                                      1083
         AL    @01,@CF01589                                        1083
         AL    @08,TRECCH1-20(,@01)                                1083
         AL    @03,@CF01589                                        1083
         ST    @08,TRECCH1-20(@06,@03)                             1083
*     ELSE                                                         1084
*      IF INDEX = 2 THEN                                           1084
         B     @RC01082                                            1084
@RF01082 CLC   INDEX(4),@CF00074                                   1084
         BNE   @RF01084                                            1084
*         TRECCH2(TREIDX) = TRECCH2(TREIDX) + 1;           /*@G51DGVS*/
         SLR   @08,@08                                             1085
         IC    @08,TREIDX                                          1085
         MH    @08,@CH01361                                        1085
         L     @06,TRENPTR(,R2)                                    1085
         LA    @03,1                                               1085
         LA    @01,0(@08,@06)                                      1085
         AL    @01,@CF01590                                        1085
         AL    @03,TRECCH2-24(,@01)                                1085
         AL    @06,@CF01590                                        1085
         ST    @03,TRECCH2-24(@08,@06)                             1085
*      ELSE                                                        1086
*       IF INDEX = 3 THEN                                          1086
         B     @RC01084                                            1086
@RF01084 CLC   INDEX(4),@CF00076                                   1086
         BNE   @RF01086                                            1086
*          TRECCH3(TREIDX) = TRECCH3(TREIDX) + 1;          /*@G51DGVS*/
         SLR   @08,@08                                             1087
         IC    @08,TREIDX                                          1087
         MH    @08,@CH01361                                        1087
         L     @06,TRENPTR(,R2)                                    1087
         LA    @03,1                                               1087
         LA    @01,0(@08,@06)                                      1087
         AL    @01,@CF01591                                        1087
         AL    @03,TRECCH3-28(,@01)                                1087
         AL    @06,@CF01591                                        1087
         ST    @03,TRECCH3-28(@08,@06)                             1087
*       ELSE                                                       1088
*        IF INDEX = 4 THEN                                         1088
         B     @RC01086                                            1088
@RF01086 CLC   INDEX(4),@CF00064                                   1088
         BNE   @RF01088                                            1088
*           TRECCH4(TREIDX) = TRECCH4(TREIDX) + 1;         /*@G51DGVS*/
         SLR   @08,@08                                             1089
         IC    @08,TREIDX                                          1089
         MH    @08,@CH01361                                        1089
         L     @06,TRENPTR(,R2)                                    1089
         LA    @03,1                                               1089
         LA    @01,0(@08,@06)                                      1089
         AL    @01,@CF01592                                        1089
         AL    @03,TRECCH4-32(,@01)                                1089
         AL    @06,@CF01592                                        1089
         ST    @03,TRECCH4-32(@08,@06)                             1089
*        ELSE                                                      1090
*         IF INDEX = 5 THEN                                        1090
         B     @RC01088                                            1090
@RF01088 CLC   INDEX(4),@CF00079                                   1090
         BNE   @RF01090                                            1090
*            TRECCH5(TREIDX) = TRECCH5(TREIDX) + 1;        /*@G51DGVS*/
         SLR   @08,@08                                             1091
         IC    @08,TREIDX                                          1091
         MH    @08,@CH01361                                        1091
         L     @06,TRENPTR(,R2)                                    1091
         LA    @03,1                                               1091
         LA    @01,0(@08,@06)                                      1091
         AL    @01,@CF01593                                        1091
         AL    @03,TRECCH5-36(,@01)                                1091
         AL    @06,@CF01593                                        1091
         ST    @03,TRECCH5-36(@08,@06)                             1091
*         ELSE                                                     1092
*          IF INDEX = 6 THEN                                       1092
         B     @RC01090                                            1092
@RF01090 CLC   INDEX(4),@CF00081                                   1092
         BNE   @RF01092                                            1092
*             TRECCH6(TREIDX) = TRECCH6(TREIDX) + 1;       /*@G51DGVS*/
         SLR   @08,@08                                             1093
         IC    @08,TREIDX                                          1093
         MH    @08,@CH01361                                        1093
         L     @06,TRENPTR(,R2)                                    1093
         LA    @03,1                                               1093
         LA    @01,0(@08,@06)                                      1093
         AL    @01,@CF01594                                        1093
         AL    @03,TRECCH6-40(,@01)                                1093
         AL    @06,@CF01594                                        1093
         ST    @03,TRECCH6-40(@08,@06)                             1093
*          ELSE                                                    1094
*           IF INDEX = 7 THEN                                      1094
         B     @RC01092                                            1094
@RF01092 CLC   INDEX(4),@CF00083                                   1094
         BNE   @RF01094                                            1094
*              TRECCH7(TREIDX) = TRECCH7(TREIDX) + 1;      /*@G51DGVS*/
         SLR   @08,@08                                             1095
         IC    @08,TREIDX                                          1095
         MH    @08,@CH01361                                        1095
         L     @06,TRENPTR(,R2)                                    1095
         LA    @03,1                                               1095
         LA    @01,0(@08,@06)                                      1095
         AL    @01,@CF01595                                        1095
         AL    @03,TRECCH7-44(,@01)                                1095
         AL    @06,@CF01595                                        1095
         ST    @03,TRECCH7-44(@08,@06)                             1095
*           ELSE                                                   1096
*            IF INDEX = 8 THEN                                     1096
         B     @RC01094                                            1096
@RF01094 CLC   INDEX(4),@CF00066                                   1096
         BNE   @RF01096                                            1096
*               TRECCH8(TREIDX) = TRECCH8(TREIDX) + 1;     /*@G51DGVS*/
         SLR   @08,@08                                             1097
         IC    @08,TREIDX                                          1097
         MH    @08,@CH01361                                        1097
         L     @06,TRENPTR(,R2)                                    1097
         LA    @03,1                                               1097
         LA    @01,0(@08,@06)                                      1097
         AL    @01,@CF01596                                        1097
         AL    @03,TRECCH8-48(,@01)                                1097
         AL    @06,@CF01596                                        1097
         ST    @03,TRECCH8-48(@08,@06)                             1097
*            ELSE                                                  1098
*             IF INDEX = 9 THEN                                    1098
         B     @RC01096                                            1098
@RF01096 CLC   INDEX(4),@CF00035                                   1098
         BNE   @RF01098                                            1098
*                TRECCH9(TREIDX) = TRECCH9(TREIDX) + 1;    /*@G51DGVS*/
         SLR   @08,@08                                             1099
         IC    @08,TREIDX                                          1099
         MH    @08,@CH01361                                        1099
         L     @06,TRENPTR(,R2)                                    1099
         LA    @03,1                                               1099
         LA    @01,0(@08,@06)                                      1099
         AL    @01,@CF01597                                        1099
         AL    @03,TRECCH9-52(,@01)                                1099
         AL    @06,@CF01597                                        1099
         ST    @03,TRECCH9-52(@08,@06)                             1099
*             ELSE                                                 1100
*              IF INDEX = 10 THEN                                  1100
         B     @RC01098                                            1100
@RF01098 CLC   INDEX(4),@CF00034                                   1100
         BNE   @RF01100                                            1100
*                 TRECCHA(TREIDX) = TRECCHA(TREIDX) + 1;   /*@G51DGVS*/
         SLR   @08,@08                                             1101
         IC    @08,TREIDX                                          1101
         MH    @08,@CH01361                                        1101
         L     @06,TRENPTR(,R2)                                    1101
         LA    @03,1                                               1101
         LA    @01,0(@08,@06)                                      1101
         AL    @01,@CF01574                                        1101
         AL    @03,TRECCHA-56(,@01)                                1101
         AL    @06,@CF01574                                        1101
         ST    @03,TRECCHA-56(@08,@06)                             1101
*               IF INDEX = 11 THEN /*TO MANY IFS HAVE TO GO THIS WAY*/
@RF01100 DS    0H                                                  1102
@RC01098 DS    0H                                                  1102
@RC01096 DS    0H                                                  1102
@RC01094 DS    0H                                                  1102
@RC01092 DS    0H                                                  1102
@RC01090 DS    0H                                                  1102
@RC01088 DS    0H                                                  1102
@RC01086 DS    0H                                                  1102
@RC01084 DS    0H                                                  1102
@RC01082 DS    0H                                                  1102
@RC01080 CLC   INDEX(4),@CF00033                                   1102
         BNE   @RF01102                                            1102
*                  TRECCHB(TREIDX) = TRECCHB(TREIDX) + 1;  /*@G51DGVS*/
         SLR   @08,@08                                             1103
         IC    @08,TREIDX                                          1103
         MH    @08,@CH01361                                        1103
         L     @06,TRENPTR(,R2)                                    1103
         LA    @03,1                                               1103
         LA    @01,0(@08,@06)                                      1103
         AL    @01,@CF01598                                        1103
         AL    @03,TRECCHB-60(,@01)                                1103
         AL    @06,@CF01598                                        1103
         ST    @03,TRECCHB-60(@08,@06)                             1103
*               ELSE                                               1104
*                IF INDEX = 12 THEN                                1104
         B     @RC01102                                            1104
@RF01102 CLC   INDEX(4),@CF00032                                   1104
         BNE   @RF01104                                            1104
*                   TRECCHC(TREIDX) = TRECCHC(TREIDX) + 1; /*@G51DGVS*/
         SLR   @08,@08                                             1105
         IC    @08,TREIDX                                          1105
         MH    @08,@CH01361                                        1105
         L     @06,TRENPTR(,R2)                                    1105
         LA    @03,1                                               1105
         LA    @01,0(@08,@06)                                      1105
         AL    @01,@CF01599                                        1105
         AL    @03,TRECCHC-64(,@01)                                1105
         AL    @06,@CF01599                                        1105
         ST    @03,TRECCHC-64(@08,@06)                             1105
*                ELSE                                              1106
*                 IF INDEX = 13 THEN                               1106
         B     @RC01104                                            1106
@RF01104 CLC   INDEX(4),@CF01015                                   1106
         BNE   @RF01106                                            1106
*                    TRECCHD(TREIDX) = TRECCHD(TREIDX) + 1;/*@G51DGVS*/
         SLR   @08,@08                                             1107
         IC    @08,TREIDX                                          1107
         MH    @08,@CH01361                                        1107
         L     @06,TRENPTR(,R2)                                    1107
         LA    @03,1                                               1107
         LA    @01,0(@08,@06)                                      1107
         AL    @01,@CF01600                                        1107
         AL    @03,TRECCHD-68(,@01)                                1107
         AL    @06,@CF01600                                        1107
         ST    @03,TRECCHD-68(@08,@06)                             1107
*                 ELSE                                             1108
*                  IF INDEX = 14 THEN                              1108
         B     @RC01106                                            1108
@RF01106 CLC   INDEX(4),@CF00940                                   1108
         BNE   @RF01108                                            1108
*                     TRECCHE(TREIDX) = TRECCHE(TREIDX) + 1;       1109
         SLR   @08,@08                                             1109
         IC    @08,TREIDX                                          1109
         MH    @08,@CH01361                                        1109
         L     @06,TRENPTR(,R2)                                    1109
         LA    @03,1                                               1109
         LA    @01,0(@08,@06)                                      1109
         AL    @01,@CF01581                                        1109
         AL    @03,TRECCHE-72(,@01)                                1109
         AL    @06,@CF01581                                        1109
         ST    @03,TRECCHE-72(@08,@06)                             1109
*                  ELSE                                            1110
*          IF INDEX = 15 THEN                                      1110
         B     @RC01108                                            1110
@RF01108 CLC   INDEX(4),@CF00036                                   1110
         BNE   @RF01110                                            1110
*                      TRECCHF(TREIDX) = TRECCHF(TREIDX) + 1;      1111
         SLR   @08,@08                                             1111
         IC    @08,TREIDX                                          1111
         MH    @08,@CH01361                                        1111
         L     @06,TRENPTR(,R2)                                    1111
         LA    @03,1                                               1111
         AL    @03,TRECCHF-76(@08,@06)                             1111
         ST    @03,TRECCHF-76(@08,@06)                             1111
*            BUG(19) = BUG(19) + 1;                        /*@Z427VLS*/
@RF01110 DS    0H                                                  1112
@RC01108 DS    0H                                                  1112
@RC01106 DS    0H                                                  1112
@RC01104 DS    0H                                                  1112
@RC01102 LA    @08,1                                               1112
         L     @06,BUG+72                                          1112
         ALR   @06,@08                                             1112
         ST    @06,BUG+72                                          1112
*           IF FRAMEPTR ^= ZERO THEN /*IF FRAMETAB IS ALLOCATED*/  1113
         L     @06,FRAMEPTR(,R2)                                   1113
         LTR   @06,@06                                             1113
         BZ    @RF01113                                            1113
*            DO;                                           /*@G51DGBB*/
*           GETOUT = NO;                                   /*@G51DGBB*/
         NI    GETOUT,B'10111111'                                  1115
*            DO A = 1 BY 1 TO MRDNUMBR WHILE GETOUT = NO;  /*@G51DGBB*/
         ST    @08,A                                               1116
         B     @DE01116                                            1116
@DL01116 TM    GETOUT,B'01000000'                                  1116
         BNZ   @DC01116                                            1116
*              IF MODEL(A) = LRTMODEL THEN                         1117
         ALR   @08,@08                                             1117
         L     @06,MERDCPTR(,R2)                                   1117
         ALR   @06,@08                                             1117
         CLC   MODEL-2(2,@06),LRTMODEL(R7)                         1117
         BNE   @RF01117                                            1117
*                DO;                                       /*@G51DGBB*/
*                  CALL BUILDFTB; /*IF UNIQUE,BUILD FRAMTAB ENTRY*/
         BAL   @14,BUILDFTB                                        1119
*                  GETOUT = YES;  /*EXIT LOOP                @G51DGBB*/
         OI    GETOUT,B'01000000'                                  1120
*                END;                                      /*@G51DGBB*/
*            END;                                          /*@G51DGBB*/
@RF01117 LA    @08,1                                               1122
         AL    @08,A                                               1122
         ST    @08,A                                               1122
@DE01116 L     @06,MERDCPTR(,R2)                                   1122
         CH    @08,MRDNUMBR(,@06)                                  1122
         BNH   @DL01116                                            1122
@DC01116 DS    0H                                                  1123
*            END;                                          /*@G51DGBB*/
*            END;                                          /*@Z427VLS*/
*           END;                                           /*@Z427VLS*/
*   END;                                                   /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00023 DS    0H                                                  1127
@EF00023 DS    0H                                                  1127
@ER00023 LM    @14,@12,@SA00023                                    1127
         BR    @14                                                 1127
*IPLFILT: PROC;                                            /*@Z427VLS*/
IPLFILT  STM   @14,@12,@SA00024                                    1128
*BUG(22) = BUG(22) + 1;                                    /*@Z427VLS*/
         LA    @08,1                                               1129
         AL    @08,BUG+84                                          1129
         ST    @08,BUG+84                                          1129
*IF PIPL = OFF THEN                                                1130
         TM    PIPL(R2),B'00001000'                                1130
         BNZ   @RF01130                                            1130
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1131
*ELSE                                                              1132
*  DO;                                                     /*@Z427VLS*/
         B     @RC01130                                            1132
@RF01130 DS    0H                                                  1133
*   CALL TREADR;  /*ADDRESS IPL ENT RELATING TO REC CPU SER  @XA20474*/
         BAL   @14,TREADR                                          1133
*   IF CPU0FLG = OFF THEN                                          1134
         TM    CPU0FLG,B'00001000'                                 1134
         BNZ   @RF01134                                            1134
*    DO;                                                   /*@Z427VLS*/
*    BUG(23) = BUG(23) + 1;                                /*@Z427VLS*/
         LA    @08,1                                               1136
         L     @06,BUG+88                                          1136
         ALR   @06,@08                                             1136
         ST    @06,BUG+88                                          1136
*    TREIPL(TREIDX) = TREIPL(TREIDX) + ONE; /*ADD TO MCH REC. COUNT*/
         SLR   @06,@06                                             1137
         IC    @06,TREIDX                                          1137
         MH    @06,@CH01361                                        1137
         L     @03,TRENPTR(,R2)                                    1137
         LA    @01,0(@06,@03)                                      1137
         AL    @01,@CF01573                                        1137
         AL    @08,TREIPL-8(,@01)                                  1137
         AL    @03,@CF01573                                        1137
         ST    @08,TREIPL-8(@06,@03)                               1137
*    END;                                                  /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00024 DS    0H                                                  1140
@EF00024 DS    0H                                                  1140
@ER00024 LM    @14,@12,@SA00024                                    1140
         BR    @14                                                 1140
*EODFILT: PROC;                                            /*@Z427VLS*/
EODFILT  STM   @14,@12,12(@13)                                     1141
*BUG(28) = BUG(28) + 1;                                    /*@Z427VLS*/
         LA    @08,1                                               1142
         AL    @08,BUG+108                                         1142
         ST    @08,BUG+108                                         1142
*IF PEOD = OFF THEN                                                1143
         TM    PEOD(R2),B'00000001'                                1143
         BNZ   @RF01143                                            1143
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1144
*ELSE /*IF PASSED FILTERING                                  @Z427VLS*/
*  BUG(29) = BUG(29) + 1;                                  /*@Z427VLS*/
         B     @RC01143                                            1145
@RF01143 LA    @08,1                                               1145
         AL    @08,BUG+112                                         1145
         ST    @08,BUG+112                                         1145
*END;                                                      /*@Z427VLS*/
@EL00025 DS    0H                                                  1146
@EF00025 DS    0H                                                  1146
@ER00025 LM    @14,@12,12(@13)                                     1146
         BR    @14                                                 1146
*MCHFILT: PROC;                                            /*@Z427VLS*/
MCHFILT  STM   @14,@12,@SA00026                                    1147
*BUG(16) = BUG(16) + 1;                                    /*@Z427VLS*/
         LA    @08,1                                               1148
         AL    @08,BUG+60                                          1148
         ST    @08,BUG+60                                          1148
*IF PMCH = OFF THEN                                                1149
         TM    PMCH(R2),B'10000000'                                1149
         BNZ   @RF01149                                            1149
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1150
*ELSE                                                              1151
*  DO;                                                     /*@Z427VLS*/
         B     @RC01149                                            1151
@RF01149 DS    0H                                                  1152
*   CALL TREADR;  /*ADDRESS MCH ENT RELATING TO REC CPU SER  @XA20474*/
         BAL   @14,TREADR                                          1152
*   IF CPU0FLG = OFF THEN                                          1153
         TM    CPU0FLG,B'00001000'                                 1153
         BNZ   @RF01153                                            1153
*    DO;                                                   /*@Z427VLS*/
*    TREMCH(TREIDX) = TREMCH(TREIDX) + ONE; /*ADD 1 TO MCH REC. CNT*/
         SLR   @08,@08                                             1155
         IC    @08,TREIDX                                          1155
         MH    @08,@CH01361                                        1155
         L     @06,TRENPTR(,R2)                                    1155
         LA    @03,1                                               1155
         LA    @01,0(@08,@06)                                      1155
         AL    @01,@CF01601                                        1155
         L     @15,TREMCH-12(,@01)                                 1155
         ALR   @15,@03                                             1155
         AL    @06,@CF01601                                        1155
         ST    @15,TREMCH-12(@08,@06)                              1155
*    BUG(17) = BUG(17) + 1;                                /*@Z427VLS*/
         L     @08,BUG+64                                          1156
         ALR   @08,@03                                             1156
         ST    @08,BUG+64                                          1156
*IF FRAMEPTR ^= ZERO THEN /*IF FRAMETAB IS ALLOCATED         @G51DGBB*/
         L     @08,FRAMEPTR(,R2)                                   1157
         LTR   @08,@08                                             1157
         BZ    @RF01157                                            1157
*DO;                                                       /*@G51DGBB*/
*    GETOUT = NO;                                          /*@G51DGBB*/
         NI    GETOUT,B'10111111'                                  1159
*DO A = 1 BY 1 TO MRDNUMBR WHILE GETOUT = NO; /*LOOP THROUGH LIST OF */
         ST    @03,A                                               1160
         B     @DE01160                                            1160
@DL01160 TM    GETOUT,B'01000000'                                  1160
         BNZ   @DC01160                                            1160
*                                           /*MERIDIAN-LIKE CPUS   */
*  IF MODEL(A) = LRTMODEL THEN             /*IF MERIDIAN-LIKE CPU */
         ALR   @03,@03                                             1161
         L     @08,MERDCPTR(,R2)                                   1161
         ALR   @08,@03                                             1161
         CLC   MODEL-2(2,@08),LRTMODEL(R7)                         1161
         BNE   @RF01161                                            1161
*    DO;                                                   /*@G51DGBB*/
*      CALL BUILDFTB; /*SEE IF UNIQUE, BUILD FRAMTAB ENTRY IF IT IS */
         BAL   @14,BUILDFTB                                        1163
*      GETOUT = YES;  /*EXIT LOOP                            @G51DGBB*/
         OI    GETOUT,B'01000000'                                  1164
*    END;                                                  /*@G51DGBB*/
*END;                                                      /*@G51DGBB*/
@RF01161 LA    @03,1                                               1166
         AL    @03,A                                               1166
         ST    @03,A                                               1166
@DE01160 L     @08,MERDCPTR(,R2)                                   1166
         CH    @03,MRDNUMBR(,@08)                                  1166
         BNH   @DL01160                                            1166
@DC01160 DS    0H                                                  1167
*END;                                                      /*@G51DGBB*/
*    END;                                                  /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00026 DS    0H                                                  1170
@EF00026 DS    0H                                                  1170
@ER00026 LM    @14,@12,@SA00026                                    1170
         BR    @14                                                 1170
*SOFTFILT: PROC;                                           /*@Z427VLS*/
SOFTFILT STM   @14,@12,@SA00027                                    1171
*BUG(20) = BUG(20) + 1;                                    /*@Z427VLS*/
         LA    @08,1                                               1172
         AL    @08,BUG+76                                          1172
         ST    @08,BUG+76                                          1172
*IF PSOFT = OFF THEN                                               1173
         TM    PSOFT(R2),B'00010000'                               1173
         BNZ   @RF01173                                            1173
*  PASSFLAG = OFF;                                         /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1174
*ELSE                                                              1175
*  DO;                                                     /*@Z427VLS*/
         B     @RC01173                                            1175
@RF01173 DS    0H                                                  1176
*   CALL TREADR;  /*ADDRESS SOFT ENT RELATING TO REC CPU SER @XA20474*/
         BAL   @14,TREADR                                          1176
*   IF CPU0FLG = OFF THEN                                          1177
         TM    CPU0FLG,B'00001000'                                 1177
         BNZ   @RF01177                                            1177
*    DO;                                                   /*@Z427VLS*/
*    TREPRE(TREIDX) = TREPRE(TREIDX) + ONE; /*ADD 1 TO SOFT REC. CT */
         SLR   @08,@08                                             1179
         IC    @08,TREIDX                                          1179
         MH    @08,@CH01361                                        1179
         L     @06,TRENPTR(,R2)                                    1179
         LA    @03,1                                               1179
         L     @15,TREPRE-76(@08,@06)                              1179
         ALR   @15,@03                                             1179
         ST    @15,TREPRE-76(@08,@06)                              1179
*    BUG(21) = BUG(21) + 1;                                /*@Z427VLS*/
         AL    @03,BUG+80                                          1180
         ST    @03,BUG+80                                          1180
*    END;                                                  /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00027 DS    0H                                                  1183
@EF00027 DS    0H                                                  1183
@ER00027 LM    @14,@12,@SA00027                                    1183
         BR    @14                                                 1183
*DEVSEL: PROC;                                             /*@Z427VLS*/
DEVSEL   STM   @14,@12,12(@13)                                     1184
*IF WORKTYPE = HEX90 THEN                                          1185
         CLI   WORKTYPE,X'90'                                      1185
         BNE   @RF01185                                            1185
*  DO;                                                     /*@Z427VLS*/
*    IF DEVEXCL = ON THEN                                          1187
         TM    DEVEXCL(R2),B'00100000'                             1187
         BNO   @RF01187                                            1187
*      DO;                                                 /*@Z427VLS*/
*        DEVOK = YES;                                      /*@Z427VLS*/
         OI    DEVOK,B'00100000'                                   1189
*        DO J = 1 BY 1 TO MDRNUM WHILE DEVOK = YES;        /*@Z427VLS*/
         LA    @08,1                                               1190
         ST    @08,J                                               1190
         B     @DE01190                                            1190
@DL01190 TM    DEVOK,B'00100000'                                   1190
         BNO   @DC01190                                            1190
*        IF TPRDEV = MDRVAL(J) THEN                                1191
         L     @06,DEVPTR(,R2)                                     1191
         ALR   @06,@08                                             1191
         CLC   TPRDEV(1,R7),MDRVAL-1(@06)                          1191
         BNE   @RF01191                                            1191
*          DO;                                             /*@Z427VLS*/
*            DEVOK = NO;                                   /*@Z427VLS*/
         NI    DEVOK,B'11011111'                                   1193
*            PASSFLAG = NO;                                /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1194
*            BUG(32) = BUG(32) + 1;                        /*@Z427VLS*/
         LA    @08,1                                               1195
         AL    @08,BUG+124                                         1195
         ST    @08,BUG+124                                         1195
*          END;                                            /*@Z427VLS*/
*        END;                                              /*@Z427VLS*/
@RF01191 LA    @08,1                                               1197
         AL    @08,J                                               1197
         ST    @08,J                                               1197
@DE01190 L     @06,DEVPTR(,R2)                                     1197
         CH    @08,MDRNUM(,@06)                                    1197
         BNH   @DL01190                                            1197
@DC01190 DS    0H                                                  1198
*      END;                                                /*@Z427VLS*/
*    ELSE                                                          1199
*      DO;                                                 /*@Z427VLS*/
         B     @RC01187                                            1199
@RF01187 DS    0H                                                  1200
*        DEVOK = NO;                                       /*@Z427VLS*/
         NI    DEVOK,B'11011111'                                   1200
*        DO J = 1 BY 1 TO MDRNUM WHILE DEVOK = NO;         /*@Z427VLS*/
         LA    @08,1                                               1201
         ST    @08,J                                               1201
         B     @DE01201                                            1201
@DL01201 TM    DEVOK,B'00100000'                                   1201
         BNZ   @DC01201                                            1201
*        IF TPRDEV = MDRVAL(J) THEN                                1202
         L     @06,DEVPTR(,R2)                                     1202
         ALR   @06,@08                                             1202
         CLC   TPRDEV(1,R7),MDRVAL-1(@06)                          1202
         BNE   @RF01202                                            1202
*          DEVOK = YES;                                    /*@Z427VLS*/
         OI    DEVOK,B'00100000'                                   1203
*        END;                                              /*@Z427VLS*/
@RF01202 LA    @08,1                                               1204
         AL    @08,J                                               1204
         ST    @08,J                                               1204
@DE01201 L     @06,DEVPTR(,R2)                                     1204
         CH    @08,MDRNUM(,@06)                                    1204
         BNH   @DL01201                                            1204
@DC01201 DS    0H                                                  1205
*        IF DEVOK = NO THEN                                        1205
         TM    DEVOK,B'00100000'                                   1205
         BNZ   @RF01205                                            1205
*          DO;                                             /*@Z427VLS*/
*            PASSFLAG = NO;                                /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1207
*            BUG(32) = BUG(32) + 1;                        /*@Z427VLS*/
         LA    @08,1                                               1208
         AL    @08,BUG+124                                         1208
         ST    @08,BUG+124                                         1208
*          END;                                            /*@Z427VLS*/
*       END;                                               /*@Z427VLS*/
*    END;                                                  /*@Z427VLS*/
*  ELSE                                                            1212
*    IF DEVEXCL = ON THEN                                          1212
         B     @RC01185                                            1212
@RF01185 TM    DEVEXCL(R2),B'00100000'                             1212
         BNO   @RF01212                                            1212
*      DO;                                                 /*@Z427VLS*/
*        DEVOK = YES;                                      /*@Z427VLS*/
         OI    DEVOK,B'00100000'                                   1214
*        DO J = 1 BY 1 TO DEVNUM WHILE DEVOK = YES;        /*@Z427VLS*/
         LA    @08,1                                               1215
         ST    @08,J                                               1215
         B     @DE01215                                            1215
@DL01215 TM    DEVOK,B'00100000'                                   1215
         BNO   @DC01215                                            1215
*          IF WORKDEV = DEVVAL(J) THEN                             1216
         ALR   @08,@08                                             1216
         L     @06,DEVPTR(,R2)                                     1216
         ALR   @06,@08                                             1216
         CLC   WORKDEV(2),DEVVAL-2(@06)                            1216
         BNE   @RF01216                                            1216
*            DO;                                           /*@Z427VLS*/
*              DEVOK = NO;                                 /*@Z427VLS*/
         NI    DEVOK,B'11011111'                                   1218
*              PASSFLAG = NO;                              /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1219
*              BUG(32) = BUG(32) + 1;                      /*@Z427VLS*/
         LA    @08,1                                               1220
         AL    @08,BUG+124                                         1220
         ST    @08,BUG+124                                         1220
*            END;                                          /*@Z427VLS*/
*        END;                                              /*@Z427VLS*/
@RF01216 LA    @08,1                                               1222
         AL    @08,J                                               1222
         ST    @08,J                                               1222
@DE01215 L     @06,DEVPTR(,R2)                                     1222
         CH    @08,DEVNUM(,@06)                                    1222
         BNH   @DL01215                                            1222
@DC01215 DS    0H                                                  1223
*      END;                                                /*@Z427VLS*/
*  ELSE                                                            1224
*   DO;                                                    /*@Z427VLS*/
         B     @RC01212                                            1224
@RF01212 DS    0H                                                  1225
*     DEVOK = NO;                                          /*@Z427VLS*/
         NI    DEVOK,B'11011111'                                   1225
*     DO J =  1 BY 1 TO DEVNUM WHILE DEVOK = NO;           /*@Z427VLS*/
         LA    @08,1                                               1226
         ST    @08,J                                               1226
         B     @DE01226                                            1226
@DL01226 TM    DEVOK,B'00100000'                                   1226
         BNZ   @DC01226                                            1226
*       IF WORKDEV = DEVVAL(J) THEN                                1227
         ALR   @08,@08                                             1227
         L     @06,DEVPTR(,R2)                                     1227
         ALR   @06,@08                                             1227
         CLC   WORKDEV(2),DEVVAL-2(@06)                            1227
         BNE   @RF01227                                            1227
*         DEVOK = YES;                                     /*@Z427VLS*/
         OI    DEVOK,B'00100000'                                   1228
*     END;                                                 /*@Z427VLS*/
@RF01227 LA    @08,1                                               1229
         AL    @08,J                                               1229
         ST    @08,J                                               1229
@DE01226 L     @06,DEVPTR(,R2)                                     1229
         CH    @08,DEVNUM(,@06)                                    1229
         BNH   @DL01226                                            1229
@DC01226 DS    0H                                                  1230
*     IF DEVOK = NO THEN                                           1230
         TM    DEVOK,B'00100000'                                   1230
         BNZ   @RF01230                                            1230
*       DO;                                                /*@Z427VLS*/
*         PASSFLAG = OFF;                                  /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1232
*         BUG(32) = BUG(32) + 1;                           /*@Z427VLS*/
         LA    @08,1                                               1233
         AL    @08,BUG+124                                         1233
         ST    @08,BUG+124                                         1233
*       END;                                               /*@Z427VLS*/
*    END;                                                  /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00028 DS    0H                                                  1236
@EF00028 DS    0H                                                  1236
@ER00028 LM    @14,@12,12(@13)                                     1236
         BR    @14                                                 1236
*CUASELCT: PROC; /*CHECK RECORD CUA AGAINST LIST OF VALID CUAS*/   1237
CUASELCT STM   @14,@12,12(@13)                                     1237
*CUAOK = NO;                                               /*@Z427VLS*/
         NI    CUAOK,B'11101111'                                   1238
*DO M = 1 BY 1 TO CUANUM WHILE CUAOK = NO;                 /*@Z427VLS*/
         LA    @08,1                                               1239
         ST    @08,M                                               1239
         B     @DE01239                                            1239
@DL01239 TM    CUAOK,B'00010000'                                   1239
         BNZ   @DC01239                                            1239
*  IF WWCUA2 >= CUA1(M) & WWCUA2 <= CUA2(M) THEN                   1240
         SLA   @08,2                                               1240
         L     @06,CUAPTR(,R2)                                     1240
         ST    @08,@TF00001                                        1240
         ALR   @08,@06                                             1240
         BCTR  @08,0                                               1240
         BCTR  @08,0                                               1240
         CLC   WWCUA2(2),CUA1-2(@08)                               1240
         BL    @RF01240                                            1240
         AL    @06,@TF00001                                        1240
         CLC   WWCUA2(2),CUA2-4(@06)                               1240
         BH    @RF01240                                            1240
*    CUAOK = YES;                                          /*@Z427VLS*/
         OI    CUAOK,B'00010000'                                   1241
*END;                                                      /*@Z427VLS*/
@RF01240 LA    @08,1                                               1242
         AL    @08,M                                               1242
         ST    @08,M                                               1242
@DE01239 L     @06,CUAPTR(,R2)                                     1242
         CH    @08,CUANUM(,@06)                                    1242
         BNH   @DL01239                                            1242
@DC01239 DS    0H                                                  1243
*IF CUAOK = NO THEN                                                1243
         TM    CUAOK,B'00010000'                                   1243
         BNZ   @RF01243                                            1243
*  DO;                                                     /*@Z427VLS*/
*    PASSFLAG = NO;                                        /*@Z427VLS*/
         NI    PASSFLAG(R2),B'11111110'                            1245
*    BUG(33) = BUG(33) + 1;                                /*@Z427VLS*/
         LA    @08,1                                               1246
         AL    @08,BUG+128                                         1246
         ST    @08,BUG+128                                         1246
*  END;                                                    /*@Z427VLS*/
*END; /*CLOSING END OF PROC CUASELCT                         @Z427VLS*/
@EL00029 DS    0H                                                  1248
@EF00029 DS    0H                                                  1248
@ER00029 LM    @14,@12,12(@13)                                     1248
         BR    @14                                                 1248
*ERRMSG: PROC;                                             /*@Z427VLS*/
ERRMSG   STM   @14,@12,@SA00030                                    1249
*PRINTADR = ADDR(PRINTLIN);                                /*@Z427VLS*/
         LA    @08,PRINTLIN                                        1250
         ST    @08,PRINTADR(,R2)                                   1250
*IF MSGNO=1  ×                                           /* @XA19728 */
*   MSGNO=2  THEN                                        /* @XA19728 */
         CLI   MSGNO,1                                             1251
         BE    @RT01251                                            1251
         CLI   MSGNO,2                                             1251
         BNE   @RF01251                                            1251
@RT01251 DS    0H                                                  1252
*  DO;                                                     /*@GZZDGVS*/
*    ZEROALL=NO;         /* DONT RESET LOGREC HEADER OF ALL  @GZZDGVS*/
         NI    ZEROALL(R2),B'10111111'                             1253
*                        /* RECORDS NOT PROCESSED           @XA19728 */
*    CALL IFCMSG(55,ADDR(PRINTBDY));  /*GET FAILED SORT TBL @Z427VLS */
         LA    @08,PRINTBDY                                        1254
         ST    @08,@AFTEMPS+4                                      1254
         L     @15,ADIFCMSG(,R2)                                   1254
         LA    @01,@AL01254                                        1254
         BALR  @14,@15                                             1254
*  END;                                                    /*@GZZDGVS*/
*IF MSGNO = 3 THEN                                                 1256
@RF01251 CLI   MSGNO,3                                             1256
         BNE   @RF01256                                            1256
*   CALL IFCMSG(53,ADDR(PRINTBDY));                        /*@Z427VLS*/
         LA    @08,PRINTBDY                                        1257
         ST    @08,@AFTEMPS+4                                      1257
         L     @15,ADIFCMSG(,R2)                                   1257
         LA    @01,@AL01257                                        1257
         BALR  @14,@15                                             1257
*IF MSGNO = 6 THEN                                                 1258
@RF01256 CLI   MSGNO,6                                             1258
         BNE   @RF01258                                            1258
*  DO;                                                     /*@Z427VLS*/
*    CALL IFCMSG(73,ADDR(PRINTBDY));                       /*@Z427VLS*/
         LA    @08,PRINTBDY                                        1260
         ST    @08,@AFTEMPS+4                                      1260
         L     @15,ADIFCMSG(,R2)                                   1260
         LA    @01,@AL01260                                        1260
         BALR  @14,@15                                             1260
*    ER3 = EVSERIAL(K);                                    /*@Z427VLS*/
         L     @08,K                                               1261
         MH    @08,@CH00081                                        1261
         L     @06,EVPTR(,R2)                                      1261
         ALR   @06,@08                                             1261
         MVC   ER3(3),EVSERIAL-6(@06)                              1261
*    SLL(ERSER,4); /*SHIFT SERIAL IN ORDER TO ADD PACKED SIGN*/    1262
         L     @08,ERSER                                           1262
         SLL   @08,4                                               1262
         ST    @08,ERSER                                           1262
*    ER3 = (ER3 × '00000F'X);   /*ADD SIGN FOR PROPER UNPACKING*/  1263
         OC    ER3(3),@CB00228                                     1263
*    UNPK(PRNTSER,ERSER);                                  /*@Z427VLS*/
         UNPK  PRNTSER(7),ERSER(4)                                 1264
*  END;                                                    /*@Z427VLS*/
*IF MSGNO = FIVE THEN                                              1266
@RF01258 CLI   MSGNO,5                                             1266
         BNE   @RF01266                                            1266
*  CALL IFCMSG(72,ADDR(PRINTBDY));                         /*@Z427VLS*/
         LA    @08,PRINTBDY                                        1267
         ST    @08,@AFTEMPS+4                                      1267
         L     @15,ADIFCMSG(,R2)                                   1267
         LA    @01,@AL01267                                        1267
         BALR  @14,@15                                             1267
*IF MSGNO = 78 THEN                                                1268
@RF01266 CLI   MSGNO,78                                            1268
         BNE   @RF01268                                            1268
* DO;                                                      /*@G51DGBB*/
*   CALL IFCMSG(78,ADDR(PRINTBDY));                        /*@G51DGBB*/
         LA    @08,PRINTBDY                                        1270
         ST    @08,@AFTEMPS+4                                      1270
         L     @15,ADIFCMSG(,R2)                                   1270
         LA    @01,@AL01270                                        1270
         BALR  @14,@15                                             1270
*   NUMBER = 3;                                            /*@G51DGBB*/
         MVC   NUMBER(4),@CF00076                                  1271
*   ADDNXT = ADDR(PFRAMSER);                               /*@G51DGBB*/
         LA    @08,PFRAMSER                                        1272
         ST    @08,ADDNXT                                          1272
*   NEXTBY = ADDR(FRAMESER(CCHINDX));                      /*@G51DGBB*/
         L     @08,CCHINDX                                         1273
         MH    @08,@CH00227                                        1273
         L     @06,FRAMEPTR(,R2)                                   1273
         AL    @06,@CF01574                                        1273
         LA    @08,FRAMESER-4(@08,@06)                             1273
         ST    @08,NEXTBY                                          1273
*   CALL CONVERT;                                          /*@G51DGBB*/
         BAL   @14,CONVERT                                         1274
*   NUMBER = 2;                                            /*@G51DGBB*/
         MVC   NUMBER(4),@CF00074                                  1275
*   ADDNXT = ADDR(PFRAMMOD);                               /*@G51DGBB*/
         LA    @08,PFRAMMOD                                        1276
         ST    @08,ADDNXT                                          1276
*   NEXTBY = ADDR(FRAMEMOD(CCHINDX));                      /*@G51DGBB*/
         L     @08,CCHINDX                                         1277
         MH    @08,@CH00227                                        1277
         L     @06,FRAMEPTR(,R2)                                   1277
         AL    @06,@CF01604                                        1277
         LA    @08,FRAMEMOD-7(@08,@06)                             1277
         ST    @08,NEXTBY                                          1277
*   CALL CONVERT;                                          /*@G51DGBB*/
         BAL   @14,CONVERT                                         1278
* END;                                                     /*@G51DGBB*/
*IF MSGNO = 79  &   /*IF MISSING FRAME SET MESSAGE           @G51DGBB*/
*   DEBUG16 = ON THEN  /*IF DEBUG16 ERROR MESSAGES TO BE PRINTED*/ 1280
@RF01268 CLI   MSGNO,79                                            1280
         BNE   @RF01280                                            1280
         TM    DEBUG16(R2),B'10000000'                             1280
         BNO   @RF01280                                            1280
*  DO;                                                     /*@G51DGBB*/
*    NUMBER = 3;                                           /*@G51DGBB*/
         MVC   NUMBER(4),@CF00076                                  1282
*    ADDNXT = ADDR(PARSER);                                /*@G51DGBB*/
         LA    @08,PARSER                                          1283
         ST    @08,ADDNXT                                          1283
*    NEXTBY = ADDR(FRAMESER(CCHINDX));                     /*@G51DGBB*/
         L     @08,CCHINDX                                         1284
         MH    @08,@CH00227                                        1284
         L     @06,FRAMEPTR(,R2)                                   1284
         AL    @06,@CF01574                                        1284
         LA    @08,FRAMESER-4(@08,@06)                             1284
         ST    @08,NEXTBY                                          1284
*    CALL CONVERT;                                         /*@G51DGBB*/
         BAL   @14,CONVERT                                         1285
*    NUMBER = 2;                                           /*@G51DGBB*/
         MVC   NUMBER(4),@CF00074                                  1286
*    ADDNXT = ADDR(PARMOD);                                /*@G51DGBB*/
         LA    @08,PARMOD                                          1287
         ST    @08,ADDNXT                                          1287
*    NEXTBY = ADDR(FRAMEMOD(CCHINDX));                     /*@G51DGBB*/
         L     @08,CCHINDX                                         1288
         MH    @08,@CH00227                                        1288
         L     @06,FRAMEPTR(,R2)                                   1288
         AL    @06,@CF01604                                        1288
         LA    @08,FRAMEMOD-7(@08,@06)                             1288
         ST    @08,NEXTBY                                          1288
*    CALL CONVERT;                                         /*@G51DGBB*/
         BAL   @14,CONVERT                                         1289
*    NUMBER = 1;                                           /*@G51DGBB*/
         MVC   NUMBER(4),@CF00055                                  1290
*    ADDNXT = ADDR(PARREP);                                /*@G51DGBB*/
         LA    @08,PARREP                                          1291
         ST    @08,ADDNXT                                          1291
*    NEXTBY = ADDR(FRAMETYP(CCHINDX));                     /*@G51DGBB*/
         L     @08,CCHINDX                                         1292
         MH    @08,@CH00227                                        1292
         L     @06,FRAMEPTR(,R2)                                   1292
         AL    @06,@CF01571                                        1292
         LA    @08,FRAMETYP-17(@08,@06)                            1292
         ST    @08,NEXTBY                                          1292
*    CALL CONVERT;                                         /*@G51DGBB*/
         BAL   @14,CONVERT                                         1293
*    PRINTBDY(1:58) = PARTIAL;                             /*@G51DGBB*/
         MVC   PRINTBDY(58),PARTIAL                                1294
*  END;                                                    /*@G51DGBB*/
*IF MSGNO = 40 THEN                                                1296
@RF01280 CLI   MSGNO,40                                            1296
         BNE   @RF01296                                            1296
* CALL IFCMSG(40,ADDR(PRINTBDY));                          /*@G51DGBB*/
         LA    @08,PRINTBDY                                        1297
         ST    @08,@AFTEMPS+4                                      1297
         L     @15,ADIFCMSG(,R2)                                   1297
         LA    @01,@AL01297                                        1297
         BALR  @14,@15                                             1297
*IF MSGNO = 24 THEN                                                1298
@RF01296 CLI   MSGNO,24                                            1298
         BNE   @RF01298                                            1298
* CALL IFCMSG(24,ADDR(PRINTBDY));                          /*@G51DGBB*/
         LA    @08,PRINTBDY                                        1299
         ST    @08,@AFTEMPS+4                                      1299
         L     @15,ADIFCMSG(,R2)                                   1299
         LA    @01,@AL01299                                        1299
         BALR  @14,@15                                             1299
*CALL IOHND(RITEPRTR); /*CALL IFCIOHND TO WRITE TO TOURIST D.S.*/  1300
@RF01298 L     @15,ADIOHND(,R2)                                    1300
         LA    @01,@AL01300                                        1300
         BALR  @14,@15                                             1300
*END;  /*CLOSING END FOR PROC ERRMSG                         @Z427VLS*/
@EL00030 DS    0H                                                  1301
@EF00030 DS    0H                                                  1301
@ER00030 LM    @14,@12,@SA00030                                    1301
         BR    @14                                                 1301
*SORTSHAR: PROC;        /* SORT SHARE TABLE CPU BY LETTER  @ZA17692 */
SORTSHAR STM   @14,@12,12(@13)                                     1302
*  DO J=1 BY 1 TO SHARENUM-1;                           /* @ZA17692 */
         LA    @08,1                                               1303
         ST    @08,J                                               1303
         B     @DE01303                                            1303
@DL01303 DS    0H                                                  1304
*    DO K= J+1 BY 1 TO SHARENUM;                        /* @ZA17692 */
         AL    @08,@CF00055                                        1304
         ST    @08,K                                               1304
         B     @DE01304                                            1304
@DL01304 DS    0H                                                  1305
*      IF SHARLET(J) > SHARLET(K)  THEN                 /* @ZA17692 */
         LA    @06,11                                              1305
         L     @01,J                                               1305
         MR    @00,@06                                             1305
         L     @03,SHAREPTR(,R2)                                   1305
         LR    @05,@08                                             1305
         MR    @04,@06                                             1305
         ST    @01,@TF00001                                        1305
         ALR   @01,@03                                             1305
         ST    @05,@TF00002                                        1305
         ALR   @05,@03                                             1305
         CLC   SHARLET-11(1,@01),SHARLET-11(@05)                   1305
         BNH   @RF01305                                            1305
*        DO;                                            /* @ZA17692 */
*          SHAREIO(J)=(SHAREIO(J)&&SHAREIO(K));         /* @ZA17692 */
         LR    @08,@03                                             1307
         AL    @08,@TF00001                                        1307
         AL    @08,@CF01580                                        1307
         LR    @06,@03                                             1307
         AL    @06,@TF00001                                        1307
         AL    @06,@CF01580                                        1307
         MVC   @TS00001(11),SHAREIO-2(@06)                         1307
         LR    @06,@03                                             1307
         AL    @06,@TF00002                                        1307
         AL    @06,@CF01580                                        1307
         XC    @TS00001(11),SHAREIO-2(@06)                         1307
         MVC   SHAREIO-2(11,@08),@TS00001                          1307
*          SHAREIO(K)=(SHAREIO(K)&&SHAREIO(J));         /* @ZA17692 */
         LR    @08,@03                                             1308
         AL    @08,@TF00002                                        1308
         AL    @08,@CF01580                                        1308
         LR    @06,@03                                             1308
         AL    @06,@TF00002                                        1308
         AL    @06,@CF01580                                        1308
         MVC   @TS00001(11),SHAREIO-2(@06)                         1308
         LR    @06,@03                                             1308
         AL    @06,@TF00001                                        1308
         AL    @06,@CF01580                                        1308
         XC    @TS00001(11),SHAREIO-2(@06)                         1308
         MVC   SHAREIO-2(11,@08),@TS00001                          1308
*          SHAREIO(J)=(SHAREIO(J)&&SHAREIO(K));         /* @ZA17692 */
         LR    @08,@03                                             1309
         AL    @08,@TF00001                                        1309
         AL    @08,@CF01580                                        1309
         LR    @06,@03                                             1309
         AL    @06,@TF00001                                        1309
         AL    @06,@CF01580                                        1309
         MVC   @TS00001(11),SHAREIO-2(@06)                         1309
         AL    @03,@TF00002                                        1309
         AL    @03,@CF01580                                        1309
         XC    @TS00001(11),SHAREIO-2(@03)                         1309
         MVC   SHAREIO-2(11,@08),@TS00001                          1309
*        END;                                           /* @ZA17692 */
*     END;                                              /* @ZA17692 */
@RF01305 LA    @08,1                                               1311
         AL    @08,K                                               1311
         ST    @08,K                                               1311
@DE01304 L     @06,SHAREPTR(,R2)                                   1311
         CH    @08,SHARENUM(,@06)                                  1311
         BNH   @DL01304                                            1311
*  END;                                                 /* @ZA17692 */
         LA    @08,1                                               1312
         AL    @08,J                                               1312
         ST    @08,J                                               1312
@DE01303 L     @06,SHAREPTR(,R2)                                   1312
         LH    @06,SHARENUM(,@06)                                  1312
         BCTR  @06,0                                               1312
         CR    @08,@06                                             1312
         BNH   @DL01303                                            1312
*END;                       /*  CLOSING END FOR SORTSHAR   @ZA17692 */
@EL00031 DS    0H                                                  1313
@EF00031 DS    0H                                                  1313
@ER00031 LM    @14,@12,12(@13)                                     1313
         BR    @14                                                 1313
*BUGCNTS: PROC;                                            /*@Z427VLS*/
BUGCNTS  STM   @14,@12,@SA00032                                    1314
*/*PRINT COUNTS OF RECORDS PROCESSED IF DEBUG16 IS ON        @Z427VLS*/
*PRINTADR = ADDR(PRINTLIN);                                /*@Z427VLS*/
         LA    @08,PRINTLIN                                        1315
         ST    @08,PRINTADR(,R2)                                   1315
*M = 42; /*DONT SET ERRLINE EXPLICITLY OR COMPILER WILL CHOKE*/    1316
         LA    @08,42                                              1316
         ST    @08,M                                               1316
*PRINTLIN = ERRLINE(M);  /*PLACE DEBUG COUNTS HEADER MESSAGE IN PRINT*/
         MVI   PRINTLIN+73,C' '                                    1317
         MVC   PRINTLIN+74(60),PRINTLIN+73                         1317
         MH    @08,@CH01510                                        1317
         LA    @06,ERRLINE-73(@08)                                 1317
         MVC   PRINTLIN(73),0(@06)                                 1317
*CALL IOHND(RITEPRTR);                                     /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    1318
         LA    @01,@AL01318                                        1318
         BALR  @14,@15                                             1318
* DO M = 1 BY 1 TO 41;   /*PRINT ALL DEBUG COUNTS            @G51DGBB*/
         LA    @08,1                                               1319
         ST    @08,M                                               1319
@DL01319 DS    0H                                                  1320
*  NUMREC = BUG(M);                                        /*@Z427VLS*/
         SLA   @08,2                                               1320
         L     @08,BUG-4(@08)                                      1320
         ST    @08,NUMREC                                          1320
*  CVD(NUMREC,PACKPAS);                                    /*@Z427VLS*/
         CVD   @08,@TS00001                                        1321
         MVC   PACKPAS(4),@TS00001+4                               1321
*  PACKPAS = (PACKPAS × '0000000F'X);                      /*@Z427VLS*/
         OC    PACKPAS(4),@CB01432                                 1322
*  UNPK(EDFLD,PACKPAS);                                    /*@Z427VLS*/
         UNPK  EDFLD(9),PACKPAS(4)                                 1323
*  NONBLANK = OFF;                                         /*@Z427VLS*/
         NI    NONBLANK,B'10111111'                                1324
*  DO L = 1 BY 1 TO 8 WHILE NONBLANK = OFF;                /*@Z427VLS*/
         LA    @08,1                                               1325
         ST    @08,L                                               1325
@DL01325 TM    NONBLANK,B'01000000'                                1325
         BNZ   @DC01325                                            1325
*    IF EDIFILD(L) = CHARZERO THEN                                 1326
         LA    @06,EDIFILD-1(@08)                                  1326
         CLI   0(@06),X'F0'                                        1326
         BNE   @RF01326                                            1326
*      EDIFILD(L) = BLANK;                                 /*@Z427VLS*/
         LA    @06,EDIFILD-1(@08)                                  1327
         MVI   0(@06),X'40'                                        1327
*    ELSE                                                          1328
*      NONBLANK = ON;                                      /*@Z427VLS*/
         B     @RC01326                                            1328
@RF01326 OI    NONBLANK,B'01000000'                                1328
*  END;                                                    /*@Z427VLS*/
@RC01326 LA    @08,1                                               1329
         AL    @08,L                                               1329
         ST    @08,L                                               1329
         C     @08,@CF00066                                        1329
         BNH   @DL01325                                            1329
@DC01325 DS    0H                                                  1330
*  ERXNUM(M) = EDFLD;                                      /*@Z427VLS*/
         L     @08,M                                               1330
         MH    @08,@CH01510                                        1330
         LA    @06,ERXNUM-73(@08)                                  1330
         MVC   0(9,@06),EDFLD                                      1330
*  PRINTLIN = ERRLINE(M);                                  /*@Z427VLS*/
         MVI   PRINTLIN+73,C' '                                    1331
         MVC   PRINTLIN+74(60),PRINTLIN+73                         1331
         LA    @06,ERRLINE-73(@08)                                 1331
         MVC   PRINTLIN(73),0(@06)                                 1331
*  PRINTADR = ADDR(PRINTLIN);                              /*@Z427VLS*/
         LA    @08,PRINTLIN                                        1332
         ST    @08,PRINTADR(,R2)                                   1332
*  CALL IOHND(RITEPRTR);                                   /*@Z427VLS*/
         L     @15,ADIOHND(,R2)                                    1333
         LA    @01,@AL01333                                        1333
         BALR  @14,@15                                             1333
*END; /*END OF M LOOP                                        @Z427VLS*/
         LA    @08,1                                               1334
         AL    @08,M                                               1334
         ST    @08,M                                               1334
         C     @08,@CF01520                                        1334
         BNH   @DL01319                                            1334
*END; /*CLOSING END TO PROC BUGCNTS                          @Z427VLS*/
@EL00032 DS    0H                                                  1335
@EF00032 DS    0H                                                  1335
@ER00032 LM    @14,@12,@SA00032                                    1335
         BR    @14                                                 1335
*/*THIS PROC WILL EXAMINE THE MERIDIAN MCH OR CCH IN ORDER TO BUILD*/
*/*FRAMTAB ENTRIES FOR UNIQUE RECORDS                        @G51DGBB*/
*BUILDFTB: PROC; /*BUILD NEW ENTRY IF CPU IS UNIQUE          @G51DGBB*/
BUILDFTB STM   @14,@12,@SA00033                                    1336
*LOOPOUT = NO;                                             /*@G51DGBB*/
         NI    LOOPOUT,B'11111101'                                 1337
*DO Y = 1 BY 1 TO EVMAX WHILE LOOPOUT = NO; /*EXAMINE ALL FRAMETAB*/
         LA    @08,1                                               1338
         ST    @08,Y                                               1338
@DL01338 TM    LOOPOUT,B'00000010'                                 1338
         BNZ   @DC01338                                            1338
*  IF FRAMECPU(Y) = LRTCPMOD THEN  /*IF CPU ALREADY IN TABLE THEN*/
         MH    @08,@CH00227                                        1339
         L     @06,FRAMEPTR(,R2)                                   1339
         ALR   @06,@08                                             1339
         AL    @06,@CF01574                                        1339
         CLC   FRAMECPU-4(5,@06),LRTCPMOD(R7)                      1339
         BNE   @RF01339                                            1339
*    LOOPOUT = YES; /*EXIT LOOP                              @G51DGBB*/
         OI    LOOPOUT,B'00000010'                                 1340
*  ELSE     /*IF ENTRY DOESNT MATCH THE FRAME                @G51DGBB*/
*    DO;                                                   /*@G51DGBB*/
         B     @RC01339                                            1341
@RF01339 DS    0H                                                  1342
*      IF FRAMECPU(Y) = '0000000000'X THEN /*NO MATCH, ALL SET */  1342
         L     @08,Y                                               1342
         MH    @08,@CH00227                                        1342
         L     @06,FRAMEPTR(,R2)                                   1342
         ST    @08,@TF00001                                        1342
         ALR   @08,@06                                             1342
         AL    @08,@CF01574                                        1342
         CLC   FRAMECPU-4(5,@08),@CB00288                          1342
         BNE   @RF01342                                            1342
*        DO;                              /*ENTRIES EXAMINED @G51DGBB*/
*          FRAMECPU(Y) = LRTCPMOD;                         /*@G51DGBB*/
         LR    @08,@06                                             1344
         AL    @08,@TF00001                                        1344
         AL    @08,@CF01574                                        1344
         MVC   FRAMECPU-4(5,@08),LRTCPMOD(R7)                      1344
*          FRAMENUM = FRAMENUM + 1; /*COUNT NUMBER OF ENTRIES BUILT*/
         LA    @08,1                                               1345
         AL    @08,FRAMENUM(,@06)                                  1345
         ST    @08,FRAMENUM(,@06)                                  1345
*          LOOPOUT = YES;                                  /*@G51DGBB*/
         OI    LOOPOUT,B'00000010'                                 1346
*        END;                                              /*@G51DGBB*/
*      ELSE                                                        1348
*        IF Y = EVMAX THEN /*UNIQUE ENTRY BUT NOT ROOM IN TABLE*/  1348
         B     @RC01342                                            1348
@RF01342 CLC   Y(4),@CF00088                                       1348
         BNE   @RF01348                                            1348
*          DO;                                             /*@G51DGBB*/
*            IF ONETIME = NO THEN   /*ISSUE MESSAGE ONLY ONCE*/    1350
         TM    ONETIME,B'10000000'                                 1350
         BNZ   @RF01350                                            1350
*              DO;                                         /*@G51DGBB*/
*                MSGNO = 24;                               /*@G51DGBB*/
         MVI   MSGNO,X'18'                                         1352
*                CALL ERRMSG;                              /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1353
*                ONETIME = YES;                            /*@G51DGBB*/
         OI    ONETIME,B'10000000'                                 1354
*              END;                                        /*@G51DGBB*/
*          END;                                            /*@G51DGBB*/
@RF01350 DS    0H                                                  1357
*   END;                                                   /*@G51DGBB*/
@RF01348 DS    0H                                                  1357
@RC01342 DS    0H                                                  1358
*  END;                                                    /*@G51DGBB*/
@RC01339 LA    @08,1                                               1358
         AL    @08,Y                                               1358
         ST    @08,Y                                               1358
         C     @08,@CF00088                                        1358
         BNH   @DL01338                                            1358
@DC01338 DS    0H                                                  1359
*END; /*END OF PROC BUILDFTB                                 @G51DGBB*/
@EL00033 DS    0H                                                  1359
@EF00033 DS    0H                                                  1359
@ER00033 LM    @14,@12,@SA00033                                    1359
         BR    @14                                                 1359
*FRAMEREP: PROC; /*REPLACE FRAME IF MORE CURRENT FRAME FOUND @G51DGBB*/
FRAMEREP STM   @14,@12,@SA00034                                    1360
*                /*COMPLETE ENTRY IF NO DATE ETC.            @G51DGBB*/
*                /*APPEND LOCATION OF FRAME EXTERNAL LOCATION LIST*/
*GETOUT = NO;                                              /*@G51DGBB*/
         NI    GETOUT,B'10111111'                                  1361
*DO X = 1 BY 1 TO FRAMENUM WHILE GETOUT = NO; /*LOOP THROUGH ALL SET*/
         LA    @08,1                                               1362
         ST    @08,X                                               1362
         B     @DE01362                                            1362
@DL01362 TM    GETOUT,B'01000000'                                  1362
         BNZ   @DC01362                                            1362
*                                             /*ENTRIES OF FRAMETAB */
*  IF FRAMECPU(X) = LRTCPMOD THEN             /*IF RECORD CPU MODEL */
         LR    @06,@08                                             1363
         MH    @06,@CH00227                                        1363
         L     @03,FRAMEPTR(,R2)                                   1363
         ST    @06,@TF00001                                        1363
         ALR   @06,@03                                             1363
         AL    @06,@CF01574                                        1363
         CLC   FRAMECPU-4(5,@06),LRTCPMOD(R7)                      1363
         BNE   @RF01363                                            1363
*    DO;                                      /*SERIAL MATCHES THOSE*/
*      CCHINDX = X;  /*SAVE INDEX*/           /*OF THE ENTRY @G51DGBB*/
         ST    @08,CCHINDX                                         1365
*      IF FRAMEDT(X) < LRTDT THEN             /*IF REC DATE GREATER */
         AL    @03,@TF00001                                        1366
         AL    @03,@CF01605                                        1366
         CLC   FRAMEDT-9(8,@03),LRTDT(R7)                          1366
         BNL   @RF01366                                            1366
*        DO;                                  /*THAN ENTRY DATE     */
*              CALL FIXENTRY;               /*DELETE OLD FRAME SET*/
         BAL   @14,FIXENTRY                                        1368
*              FRAMEDT(X) = LRTDT;           /*SAVE HIGH DATE*/    1369
         L     @08,X                                               1369
         MH    @08,@CH00227                                        1369
         L     @06,FRAMEPTR(,R2)                                   1369
         ALR   @06,@08                                             1369
         AL    @06,@CF01605                                        1369
         MVC   FRAMEDT-9(8,@06),LRTDT(R7)                          1369
*              CALL BUILDTTR;                /*SAVE FRAME LOCATION*/
         BAL   @14,BUILDTTR                                        1370
*               FRAMEYES = YES;/*SAVE SUCCEEDING FRAMES OF THIS    */
         OI    FRAMEYES,B'00000001'                                1371
*                              /*LOGICAL SET                 @G51DGBB*/
*         END;                                             /*@G51DGBB*/
*       ELSE  /*IMPLIES DATE IS LOW OR EQUAL                 @G51DGBB*/
*        DO;                                               /*@G51DGBB*/
         B     @RC01366                                            1373
@RF01366 DS    0H                                                  1374
*         IF FRAMEDT(X) = LRTDT THEN /*IF TABLE DATE EQUALS RECORD DAT*
         L     @08,X                                               1374
         MH    @08,@CH00227                                        1374
         L     @06,FRAMEPTR(,R2)                                   1374
         ST    @08,@TF00001                                        1374
         ALR   @08,@06                                             1374
         AL    @08,@CF01605                                        1374
         CLC   FRAMEDT-9(8,@08),LRTDT(R7)                          1374
         BNE   @RF01374                                            1374
*           DO;                                            /*@G51DGBB*/
*            IF FRAMETYP(X) ^= ALLALL THEN                         1376
         AL    @06,@TF00001                                        1376
         AL    @06,@CF01571                                        1376
         CLI   FRAMETYP-17(@06),X'FF'                              1376
         BE    @RF01376                                            1376
*             DO;                                          /*@G51DGBB*/
*                      CALL FIXENTRY; /*DELETE INCOMPLETE SET       */
         BAL   @14,FIXENTRY                                        1378
*                      MSGNO = 79; /*INCOMPLETE FRAME SET MESSAGE*/
         MVI   MSGNO,X'4F'                                         1379
*                      CALL ERRMSG;                        /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1380
*                      CALL BUILDTTR; /*SAVE NEW FIRST GOOD FRAME*/
         BAL   @14,BUILDTTR                                        1381
*                      FRAMEYES = YES; /*SAVE SUCCEEDING MEMBERS */
         OI    FRAMEYES,B'00000001'                                1382
*             END;                                         /*@G51DGBB*/
*            ELSE  /*COMPLETE SET FOR THIS DATE ALREADY EXISTS      */
*               DO; /*FRAMETYP IS EQUAL TO ALLALL            @G51DGBB*/
         B     @RC01376                                            1384
@RF01376 DS    0H                                                  1385
*                   FRAMEYES = NO;/*DELETE SUCCEEDING FRAMES OF SET */
         NI    FRAMEYES,B'11111110'                                1385
*                   BUG(41) = BUG(41) + 1; /*COUNT FRAME AS NOT USED*/
         LA    @08,1                                               1386
         AL    @08,BUG+160                                         1386
         ST    @08,BUG+160                                         1386
*               END;                                       /*@G51DGBB*/
*        END; /*END OF CODE IF DATE IN RECORD EQUALS DATE IN TABLE*/
*       ELSE /*DATE IN TABLE GREATER THAN FRAME RECORD DATE  @G51DGBB*/
*        BUG(41) = BUG(41)  + 1;                           /*@G51DGBB*/
         B     @RC01374                                            1389
@RF01374 LA    @08,1                                               1389
         AL    @08,BUG+160                                         1389
         ST    @08,BUG+160                                         1389
*    END; /*END OF CODE IF DATE IN RECORD IS LOW OR EQUAL    @G51DGBB*/
@RC01374 DS    0H                                                  1391
*  GETOUT = YES; /*GET OUT OF LOOP AFTER CPU MATCH           @G51DGBB*/
@RC01366 OI    GETOUT,B'01000000'                                  1391
* END; /*END OF CODE FOR A RECORD TO ENTRY CPU MATCH         @G51DGBB*/
*END; /*END OF FRAMETAB LOOP                                 @G51DGBB*/
@RF01363 LA    @08,1                                               1393
         AL    @08,X                                               1393
         ST    @08,X                                               1393
@DE01362 L     @06,FRAMEPTR(,R2)                                   1393
         C     @08,FRAMENUM(,@06)                                  1393
         BNH   @DL01362                                            1393
@DC01362 DS    0H                                                  1394
*IF GETOUT = NO THEN /*MERIDIAN FRAME BUT NO ROOM IN TABLE   @G51DGBB*/
         TM    GETOUT,B'01000000'                                  1394
         BNZ   @RF01394                                            1394
*  BUG(41) = BUG(41) + 1;                                  /*@G51DGBB*/
         LA    @08,1                                               1395
         AL    @08,BUG+160                                         1395
         ST    @08,BUG+160                                         1395
*END; /*END OF PROC FRAMEREP                                 @G51DGBB*/
@EL00034 DS    0H                                                  1396
@EF00034 DS    0H                                                  1396
@ER00034 LM    @14,@12,@SA00034                                    1396
         BR    @14                                                 1396
*BUILDTTR: PROC; /*SAVE LOCATION OF A FRAME IN LISTLOC       @G51DGBB*/
BUILDTTR STM   @14,@12,@SA00035                                    1397
*RESPECIFY (R0,R1,R4,R15) RESTRICTED;                      /*@G51DGBB*/
*IF (LRTKEY1 & GENREC) = HEXA0 THEN /* IF MCH FRAME          @G51DGBB*/
         MVC   @TS00001(1),LRTKEY1(R7)                             1399
         NI    @TS00001,X'F0'                                      1399
         CLI   @TS00001,X'A0'                                      1399
         BNE   @RF01399                                            1399
*  DO;                                                     /*@G51DGBB*/
*    IF FRAMLOCM(CCHINDX) = ZERO THEN /*IF LISTLOC CORE FOR A CPU*/
         L     @14,CCHINDX                                         1401
         MH    @14,@CH00227                                        1401
         L     @08,FRAMEPTR(,R2)                                   1401
         AL    @08,@CF01581                                        1401
         L     @14,FRAMLOCM-20(@14,@08)                            1401
         LTR   @14,@14                                             1401
         BNZ   @RF01401                                            1401
*      DO;                            /*IS UNALLOCATED       @G51DGBB*/
*        R0 = LISTBENT * LISTMAX * 2; /*ALLOCATE CORE FOR BOTH CCH*/
         LA    R0,500                                              1403
*        R0 = R0 + 12;                /*AND MCH FRAME LOCATIONS   */
         AL    R0,@CF00032                                         1404
*        GEN(GETMAIN EC,LV=(R0),A=LINKITM,SP=21);          /*@G51DGBB*/
         GETMAIN EC,LV=(R0),A=LINKITM,SP=21
*        IF R15 = SUCCESS THEN                                     1406
         LTR   R15,R15                                             1406
         BNZ   @RF01406                                            1406
*          DO;                                             /*@G51DGBB*/
*            R1 = LINKITM;  /*GRAB GOTTEN CORE ADDRESS FROM GETMAIN*/
         L     R1,LINKITM                                          1408
*            FRAMLOCM(CCHINDX) = R1;  /*SET POINTERS TO LISTLOC   */
         L     @14,CCHINDX                                         1409
         MH    @14,@CH00227                                        1409
         L     @08,FRAMEPTR(,R2)                                   1409
         AL    @08,@CF01581                                        1409
         ST    R1,FRAMLOCM-20(@14,@08)                             1409
*            R1 = R1+LISTBENT *       /*TABLES FOR BOTH CCL AND MCH*/
*                LISTMAX+4;           /*FRAMES               @G51DGBB*/
         AL    R1,@CF01563                                         1410
*            R0 = ZERO;          /*ENSURE THAT TABLE ON WORD BOUNDARY*/
         SLR   R0,R0                                               1411
*            R4 = 4;             /*DIVIDE BY NUMBER OF BYTES IN WORD*/
         LA    R4,4                                                1412
*            GEN(DR R0,R4);                                /*@G51DGBB*/
         DR R0,R4
*            IF R0 > ZERO THEN /*REMAINDER MEANS NOT INTEGRAL NUMBER*/
         LTR   R0,R0                                               1414
         BNP   @RF01414                                            1414
*                              /*NUMBER OF DOUBLEWORDS.      @G51DGBB*/
*              R1 = R1 + 1; /*ADD ONE EXTRA FULL WORD        @G51DGBB*/
         AL    R1,@CF00055                                         1415
*            R1 = R1 * FOUR; /*RESET ONE TO NUMBER OF BYTES  @G51DGBB*/
@RF01414 SLL   R1,2                                                1416
*            FRAMLOCC(CCHINDX) = R1; /*SET POINTER TO CCH CCHHR TABLE*/
         L     @14,CCHINDX                                         1417
         MH    @14,@CH00227                                        1417
         L     @08,FRAMEPTR(,R2)                                   1417
         ST    R1,FRAMLOCC-24(@14,@08)                             1417
*            LISTPTR = R1;      /*ESTABLISH ADDRESSABILITY FOR CCH TB*/
         ST    R1,LISTPTR                                          1418
*            LISTNUM = ZERO;    /*ZERO CCH LISTLOC TABLE     @G51DGBB*/
         L     @14,LISTPTR                                         1419
         SLR   @08,@08                                             1419
         ST    @08,LISTNUM(,@14)                                   1419
*            DO Y = 1 BY 1 TO LISTMAX;                     /*@G51DGBB*/
         LA    @14,1                                               1420
         ST    @14,Y                                               1420
@DL01420 DS    0H                                                  1421
*              LISTCCHR(Y) = LISTCCHR(Y) &&                        1421
*                            LISTCCHR(Y);                  /*@G51DGBB*/
         LR    @08,@14                                             1421
         MH    @08,@CH00079                                        1421
         L     @06,LISTPTR                                         1421
         ALR   @06,@08                                             1421
         BCTR  @06,0                                               1421
         XC    LISTCCHR-4(5,@06),LISTCCHR-4(@06)                   1421
*            END;                                          /*@G51DGBB*/
         AL    @14,@CF00055                                        1422
         ST    @14,Y                                               1422
         C     @14,@CF00293                                        1422
         BNH   @DL01420                                            1422
*            LISTPTR = FRAMLOCM(CCHINDX); /*ADDRESS OF MCH LISTLOC */
         L     @14,CCHINDX                                         1423
         MH    @14,@CH00227                                        1423
         L     @08,FRAMEPTR(,R2)                                   1423
         AL    @08,@CF01581                                        1423
         L     @14,FRAMLOCM-20(@14,@08)                            1423
         ST    @14,LISTPTR                                         1423
*            DO Y = 1 BY 1 TO LISTMAX;   /* ZERO MCH LISTLOC TABLE  */
         LA    @14,1                                               1424
         ST    @14,Y                                               1424
@DL01424 DS    0H                                                  1425
*            LISTCCHR(Y) = LISTCCHR(Y) &&                          1425
*                          LISTCCHR(Y);                    /*@G51DGBB*/
         LR    @08,@14                                             1425
         MH    @08,@CH00079                                        1425
         L     @06,LISTPTR                                         1425
         ALR   @06,@08                                             1425
         BCTR  @06,0                                               1425
         XC    LISTCCHR-4(5,@06),LISTCCHR-4(@06)                   1425
*            END;                                          /*@G51DGBB*/
         AL    @14,@CF00055                                        1426
         ST    @14,Y                                               1426
         C     @14,@CF00293                                        1426
         BNH   @DL01424                                            1426
*            LISTNUM = ZERO;                               /*@G51DGBB*/
         L     @14,LISTPTR                                         1427
         SLR   @08,@08                                             1427
         ST    @08,LISTNUM(,@14)                                   1427
*          END;                                            /*@G51DGBB*/
*        ELSE /*UNSUCCESSFUL GETMAIN                         @G51DGBB*/
*          DO;                                             /*@G51DGBB*/
         B     @RC01406                                            1429
@RF01406 DS    0H                                                  1430
*            MSGNO = 40;                                   /*@G51DGBB*/
         MVI   MSGNO,X'28'                                         1430
*            CALL ERRMSG;                                  /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1431
*            R15 = TWELVE;                                 /*@G51DGBB*/
         LA    @08,12                                              1432
         LR    R15,@08                                             1432
*            ERROR = TWELVE;                               /*@G51DGBB*/
         ST    @08,ERROR                                           1433
*          END;                                            /*@G51DGBB*/
*      END;                                                /*@G51DGBB*/
@RC01406 DS    0H                                                  1436
*    IF R15 = ZERO THEN /*IF GETMAIN WAS SUCCESSFUL OR NO GETMAIN*/
@RF01401 LTR   R15,R15                                             1436
         BNZ   @RF01436                                            1436
*      LISTPTR = FRAMLOCM(CCHINDX);/*ESTABLISH LISTLOC ADDRESS   */
         L     @14,CCHINDX                                         1437
         MH    @14,@CH00227                                        1437
         L     @08,FRAMEPTR(,R2)                                   1437
         AL    @08,@CF01581                                        1437
         L     @14,FRAMLOCM-20(@14,@08)                            1437
         ST    @14,LISTPTR                                         1437
*  END;                                                    /*@G51DGBB*/
*ELSE /* IS A CCH FRAME                                      @G51DGBB*/
*    LISTPTR = FRAMLOCC(CCHINDX);  /*ESTABLISH CCH LISTLOC ADDRESS*/
         B     @RC01399                                            1439
@RF01399 L     @14,CCHINDX                                         1439
         MH    @14,@CH00227                                        1439
         L     @08,FRAMEPTR(,R2)                                   1439
         L     @14,FRAMLOCC-24(@14,@08)                            1439
         ST    @14,LISTPTR                                         1439
*IF ERROR = ZERO THEN                                              1440
@RC01399 L     @14,ERROR                                           1440
         LTR   @14,@14                                             1440
         BNZ   @RF01440                                            1440
*  DO;                                                     /*@G51DGBB*/
*    IF LISTNUM + 1 <= LISTMAX THEN /*IF ROOM IN LISTLOC     @G51DGBB*/
         LA    @14,1                                               1442
         L     @08,LISTPTR                                         1442
         AL    @14,LISTNUM(,@08)                                   1442
         C     @14,@CF00293                                        1442
         BH    @RF01442                                            1442
*      DO;                                                 /*@G51DGBB*/
*        RESPECIFY (R1) UNRESTRICTED; /*FOR PARM LIST        @G51DGBB*/
*        IF PHIST = ON THEN        /*IF HISTORY INPUT        @G51DGBB*/
         TM    PHIST(R2),B'00100000'                               1445
         BNO   @RF01445                                            1445
*          CALL IOHND(RITESCRT);   /*WRITE TO SCRATCH DATA SET*/   1446
         L     @15,ADIOHND(,R2)                                    1446
         LA    @01,@AL01446                                        1446
         BALR  @14,@15                                             1446
*        IF R15 = SUCCESS THEN     /*IF SUCCESSFULL WRITE    @G51DGBB*/
@RF01445 LTR   R15,R15                                             1447
         BNZ   @RF01447                                            1447
*          DO;                                             /*@G51DGBB*/
*            LISTCCHR(LISTNUM+1) = RECCCHHR;/*SAVE FRAME EXTERNAL LOC*/
         L     @14,LISTPTR                                         1449
         L     @08,LISTNUM(,@14)                                   1449
         LR    @06,@08                                             1449
         MH    @06,@CH00079                                        1449
         ALR   @06,@14                                             1449
         MVC   LISTCCHR(5,@06),RECCCHHR(R2)                        1449
*            LISTNUM = LISTNUM + 1; /*INCREMENT NO OF BUILT ENTRIES*/
         LA    @06,1                                               1450
         ALR   @08,@06                                             1450
         ST    @08,LISTNUM(,@14)                                   1450
*            BUG(40) = BUG(40) + 1;                        /*@G51DGBB*/
         AL    @06,BUG+156                                         1451
         ST    @06,BUG+156                                         1451
*          END;                                            /*@G51DGBB*/
*        ELSE  /*UNSUCCESSFUL WRITE TO SCRATCH D.S.          @G51DGBB*/
*          R15 = TWELVE; /*TERMINATE FURTHER PROCESSING      @G51DGBB*/
         B     @RC01447                                            1453
@RF01447 LA    R15,12                                              1453
*      END;                                                /*@G51DGBB*/
@RC01447 DS    0H                                                  1455
*  END;                                                    /*@G51DGBB*/
@RF01442 DS    0H                                                  1456
*ERROR = R15;                                              /*@G51DGBB*/
@RF01440 ST    R15,ERROR                                           1456
*RESPECIFY (R0,R4,R15) UNRESTRICTED;                       /*@G51DGBB*/
*END; /*END OF BUILDTTR PROC                                 @G51DGBB*/
@EL00035 DS    0H                                                  1458
@EF00035 DS    0H                                                  1458
@ER00035 LM    @14,@12,@SA00035                                    1458
         BR    @14                                                 1458
*FIXENTRY: PROC;  /*RESET LISTLOC TABLE TO ZEROS BUT DONT FREE CORE*/
FIXENTRY STM   @14,@12,12(@13)                                     1459
*                 /*RESET DATE,TYPE TO ZEROS                 @G51DGBB*/
*FRAMEDT(CCHINDX) = '0000000000000000'X; /*ZERO DATE,TIME    @G51DGBB*/
         L     @08,CCHINDX                                         1460
         MH    @08,@CH00227                                        1460
         L     @06,FRAMEPTR(,R2)                                   1460
         ST    @08,@TF00001                                        1460
         ALR   @08,@06                                             1460
         AL    @08,@CF01605                                        1460
         MVC   FRAMEDT-9(8,@08),@CB01535                           1460
*FRAMETYP(CCHINDX) = '00'X; /*RESET TO NO TYPES OF FRAMES STORED*/ 1461
         LR    @08,@06                                             1461
         AL    @08,@TF00001                                        1461
         AL    @08,@CF01571                                        1461
         MVI   FRAMETYP-17(@08),X'00'                              1461
*IF FRAMLOCM(CCHINDX) > ZERO THEN /*IF MCH FRAME LOC. TAB. ALLOCATED*/
         L     @08,@TF00001                                        1462
         AL    @06,@CF01581                                        1462
         L     @08,FRAMLOCM-20(@08,@06)                            1462
         LTR   @08,@08                                             1462
         BNP   @RF01462                                            1462
*  DO;                                                     /*@G51DGBB*/
*    LISTPTR = FRAMLOCM(CCHINDX); /*SET TABLE BASE ADDRESS   @G51DGBB*/
         ST    @08,LISTPTR                                         1464
*    DO Y = 1 BY 1 TO LISTNUM; /*CLEAR ALL STORED CCHHRS TO ZERO*/ 1465
         LA    @08,1                                               1465
         ST    @08,Y                                               1465
         B     @DE01465                                            1465
@DL01465 DS    0H                                                  1466
*      LISTCCHR(Y) = (LISTCCHR(Y) && LISTCCHR(Y));         /*@G51DGBB*/
         LR    @06,@08                                             1466
         MH    @06,@CH00079                                        1466
         L     @03,LISTPTR                                         1466
         ALR   @03,@06                                             1466
         BCTR  @03,0                                               1466
         XC    LISTCCHR-4(5,@03),LISTCCHR-4(@03)                   1466
*      BUG(41) = BUG(41) + 1; /*ADD TO COUNT OF REJECTED FRAMES*/  1467
         LA    @06,1                                               1467
         AL    @06,BUG+160                                         1467
         ST    @06,BUG+160                                         1467
*      BUG(40) = BUG(40) - 1; /*SUBTRACT FROM COUNT OF ACCEPTED FRMES*/
         L     @06,BUG+156                                         1468
         BCTR  @06,0                                               1468
         ST    @06,BUG+156                                         1468
*    END;                                                  /*@G51DGBB*/
         AL    @08,@CF00055                                        1469
         ST    @08,Y                                               1469
@DE01465 L     @06,LISTPTR                                         1469
         C     @08,LISTNUM(,@06)                                   1469
         BNH   @DL01465                                            1469
*    LISTNUM = ZERO; /*SET NUMBER OF STORED CCHHRS TO ZERO   @G51DGBB*/
         L     @08,LISTPTR                                         1470
         SLR   @06,@06                                             1470
         ST    @06,LISTNUM(,@08)                                   1470
*  END;                                                    /*@G51DGBB*/
*IF FRAMLOCC(CCHINDX) > ZERO THEN /*IF CCH FRAM LOC TABLE ALLOCATED*/
@RF01462 L     @08,CCHINDX                                         1472
         MH    @08,@CH00227                                        1472
         L     @06,FRAMEPTR(,R2)                                   1472
         L     @08,FRAMLOCC-24(@08,@06)                            1472
         LTR   @08,@08                                             1472
         BNP   @RF01472                                            1472
*  DO;                                                     /*@G51DGBB*/
*    LISTPTR = FRAMLOCC(CCHINDX); /*SET BASE ADDRESS OF LISTLOC*/  1474
         ST    @08,LISTPTR                                         1474
*    DO Y = 1 BY 1 TO LISTNUM; /*ZERO ALL SAVED CCHHRS       @G51DGBB*/
         LA    @08,1                                               1475
         ST    @08,Y                                               1475
         B     @DE01475                                            1475
@DL01475 DS    0H                                                  1476
*      LISTCCHR(Y) = (LISTCCHR(Y) && LISTCCHR(Y));         /*@G51DGBB*/
         LR    @06,@08                                             1476
         MH    @06,@CH00079                                        1476
         L     @03,LISTPTR                                         1476
         ALR   @03,@06                                             1476
         BCTR  @03,0                                               1476
         XC    LISTCCHR-4(5,@03),LISTCCHR-4(@03)                   1476
*      BUG(41) = BUG(41) + 1; /*ADD TO COUNT OF REJECTED FRAMES*/  1477
         LA    @06,1                                               1477
         AL    @06,BUG+160                                         1477
         ST    @06,BUG+160                                         1477
*      BUG(40) = BUG(40) - 1; /*SUBTRACT FROM COUNT OF ACCEPTED FRAMES*
         L     @06,BUG+156                                         1478
         BCTR  @06,0                                               1478
         ST    @06,BUG+156                                         1478
*    END;                                                  /*@G51DGBB*/
         AL    @08,@CF00055                                        1479
         ST    @08,Y                                               1479
@DE01475 L     @06,LISTPTR                                         1479
         C     @08,LISTNUM(,@06)                                   1479
         BNH   @DL01475                                            1479
*    LISTNUM = ZERO; /*SET NUMBER OF  CCHHRS SAVED TO ZERO   @G51DGBB*/
         L     @08,LISTPTR                                         1480
         SLR   @06,@06                                             1480
         ST    @06,LISTNUM(,@08)                                   1480
*  END;                                                    /*@G51DGBB*/
*END;                                                      /*@G51DGBB*/
@EL00036 DS    0H                                                  1482
@EF00036 DS    0H                                                  1482
@ER00036 LM    @14,@12,12(@13)                                     1482
         BR    @14                                                 1482
*FLIMFRAM: PROC; /*PROCESS FRAME RECORDS SEQUENTIALLY        @G51DGBB*/
FLIMFRAM STM   @14,@12,@SA00037                                    1483
* RESPECIFY (R15) RESTRICTED;                              /*@G51DGBB*/
*   IF PACC = ON &                 /* IF NO ACCUMULATION OR NO  */ 1485
*     (PMCH = ON × PCHAN = ON) THEN /* MCH OR CCH SELECTION THEN */
         TM    PACC(R2),B'01000000'                                1485
         BNO   @RF01485                                            1485
         TM    PMCH(R2),B'11000000'                                1485
         BZ    @RF01485                                            1485
*    DO;                            /* DONT SELECT FRAMES    @G51DGBB*/
*      IF LRTCNT = ONE &            /* IF FIRST PHYSICAL FRAME   */
*         (LRTKEY1 & GENREC) = HEXA0 THEN /*IS MCF           @G51DGBB*/
         CLI   LRTCNT(R7),1                                        1487
         BNE   @RF01487                                            1487
         MVC   @TS00001(1),LRTKEY1(R7)                             1487
         NI    @TS00001,X'F0'                                      1487
         CLI   @TS00001,X'A0'                                      1487
         BNE   @RF01487                                            1487
*        DO;                                               /*@G51DGBB*/
*          SAVESEQ = ONE;           /* RESET SEQUENCE CHECK  @G51DGBB*/
         MVI   SAVESEQ,X'01'                                       1489
*          CALL FRAMEREP;           /* SEE IF THIS FRAME SET MUST*/
         BAL   @14,FRAMEREP                                        1490
*          R15 = ERROR;             /* BE SAVED              @G51DGBB*/
         L     R15,ERROR                                           1491
*          IF LRTNLAST = OFF &      /*IF FIRST FRAME IS LAST OF SET*/
*             FRAMEYES = YES &     /*IF FRAME SET TO BE SAVED   */ 1492
*             R15 = ZERO THEN      /*NO ERROR CONDITIONS     @G51DGBB*/
         TM    LRTNLAST(R7),B'10000000'                            1492
         BNZ   @RF01492                                            1492
         TM    FRAMEYES,B'00000001'                                1492
         BNO   @RF01492                                            1492
         LTR   R15,R15                                             1492
         BNZ   @RF01492                                            1492
*            DO;                                           /*@G51DGBB*/
*              SAVESEQ = ZERO;    /*INITIALIZE SEQUENCE CHECK*/    1494
         MVI   SAVESEQ,X'00'                                       1494
*              FRAMETYP(CCHINDX) = ALLMCH; /*ONLY ONE BUT ALL IN*/ 1495
         L     @14,CCHINDX                                         1495
         MH    @14,@CH00227                                        1495
         L     @08,FRAMEPTR(,R2)                                   1495
         ALR   @08,@14                                             1495
         AL    @08,@CF01571                                        1495
         MVI   FRAMETYP-17(@08),X'02'                              1495
*            END;                                          /*@G51DGBB*/
*        END;                                              /*@G51DGBB*/
*      ELSE                         /* NON-FIRST FRAME       @G51DGBB*/
*        DO;                                               /*@G51DGBB*/
         B     @RC01487                                            1498
@RF01487 DS    0H                                                  1499
*          IF FRAMEYES = ON THEN    /* IF FRAME IS TO BE SAVED  */ 1499
         TM    FRAMEYES,B'00000001'                                1499
         BNO   @RF01499                                            1499
*            DO;                                           /*@G51DGBB*/
*              SAVESEQ = SAVESEQ + 1;  /* UP SEQ CHECK       @G51DGBB*/
         IC    @14,SAVESEQ                                         1501
         LA    @14,1(,@14)                                         1501
         STC   @14,SAVESEQ                                         1501
*              IF SAVESEQ = LRTCNT THEN /* IF RECORD NOT MISSING */
         CLC   SAVESEQ(1),LRTCNT(R7)                               1502
         BNE   @RF01502                                            1502
*                DO;                                       /*@G51DGBB*/
*                  CALL BUILDTTR;    /* BUILD EXTERNAL LOCATION */ 1504
         BAL   @14,BUILDTTR                                        1504
*                  R15 = ERROR;                            /*@G51DGBB*/
         L     R15,ERROR                                           1505
*                  IF R15 = ZERO THEN  /* IF FRAME EXTERNAL LOC  */
         LTR   R15,R15                                             1506
         BNZ   @RF01506                                            1506
*                    DO;               /* SUCCESSFULLY SAVED @G51DGBB*/
*                      IF LRTNLAST = OFF THEN /* IF LAST FRAME  */ 1508
         TM    LRTNLAST(R7),B'10000000'                            1508
         BNZ   @RF01508                                            1508
*                        DO;                               /*@G51DGBB*/
*                          IF (LRTKEY1 & GENREC) = HEXA0 THEN      1510
         MVC   @TS00001(1),LRTKEY1(R7)                             1510
         NI    @TS00001,X'F0'                                      1510
         CLI   @TS00001,X'A0'                                      1510
         BNE   @RF01510                                            1510
*                            DO;                           /*@G51DGBB*/
*                              SAVESEQ = ZERO; /*REINITIALIZE SEQ CNT*/
         MVI   SAVESEQ,X'00'                                       1512
*                              FRAMETYP(CCHINDX) = ALLMCH; /*@G51DGBB*/
         L     @14,CCHINDX                                         1513
         MH    @14,@CH00227                                        1513
         L     @08,FRAMEPTR(,R2)                                   1513
         ALR   @08,@14                                             1513
         AL    @08,@CF01571                                        1513
         MVI   FRAMETYP-17(@08),X'02'                              1513
*                            END;                          /*@G51DGBB*/
*                          /*IF ALL MCH FRAMES HAVE BEEN SAVED,  */
*                          /*THEN INDICATE SUCH              @G51DGBB*/
*                           ELSE                  /*IS CCH FRAME */
*                            DO;                           /*@G51DGBB*/
         B     @RC01510                                            1515
@RF01510 DS    0H                                                  1516
*                            FRAMEYES = OFF; /*RESET FRAME ACCEPT SW*/
         NI    FRAMEYES,B'11111110'                                1516
*                            IF FRAMETYP(CCHINDX) ^= ALLMCH THEN   1517
         L     @14,CCHINDX                                         1517
         MH    @14,@CH00227                                        1517
         L     @08,FRAMEPTR(,R2)                                   1517
         ALR   @08,@14                                             1517
         AL    @08,@CF01571                                        1517
         CLI   FRAMETYP-17(@08),X'02'                              1517
         BE    @RF01517                                            1517
*                              DO; /*IF MISSING LAST MCH FRAME   */
*                                MSGNO = 79; /*INCOMPLETE FRAME SET*/
         MVI   MSGNO,X'4F'                                         1519
*                                CALL ERRMSG;              /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1520
*                                CALL FIXENTRY; /*DELETE INCOM-  */
         BAL   @14,FIXENTRY                                        1521
*                              END;             /*PLETE SET. @G51DGBB*/
*                            ELSE   /*IS COMPLETE SET -INDICATE  */
*                              FRAMETYP(CCHINDX) = ALLALL; /*IT IS*/
         B     @RC01517                                            1523
@RF01517 L     @14,CCHINDX                                         1523
         MH    @14,@CH00227                                        1523
         L     @08,FRAMEPTR(,R2)                                   1523
         ALR   @08,@14                                             1523
         AL    @08,@CF01571                                        1523
         MVI   FRAMETYP-17(@08),X'FF'                              1523
*                            END;                          /*@G51DGBB*/
*                        END;                              /*@G51DGBB*/
*                   END;                                   /*@G51DGBB*/
*              END;                                        /*@G51DGBB*/
*            ELSE   /*MISSING MIDDLE FRAME                   @G51DGBB*/
*              DO;                                         /*@G51DGBB*/
         B     @RC01502                                            1528
@RF01502 DS    0H                                                  1529
*                MSGNO = 79; /*INCOMPLETE FRAME SET MESSAGE  @G51DGBB*/
         MVI   MSGNO,X'4F'                                         1529
*                CALL ERRMSG;                              /*@G51DGBB*/
         BAL   @14,ERRMSG                                          1530
*                FRAMEYES = OFF; /*DONT SAVE INCOMPLETE SET  @G51DGBB*/
         NI    FRAMEYES,B'11111110'                                1531
*                CALL FIXENTRY; /*DELETE REFS TO INCOMPLETE SET*/  1532
         BAL   @14,FIXENTRY                                        1532
*                BUG(41) = BUG(41) + 1;                    /*@G51DGBB*/
         LA    @14,1                                               1533
         AL    @14,BUG+160                                         1533
         ST    @14,BUG+160                                         1533
*              END;                                        /*@G51DGBB*/
*       END;                                               /*@G51DGBB*/
*          ELSE      /*FRAME NOT TO BE SAVED                 @G51DGBB*/
*            BUG(41) = BUG(41) + 1;                        /*@G51DGBB*/
         B     @RC01499                                            1536
@RF01499 LA    @14,1                                               1536
         AL    @14,BUG+160                                         1536
         ST    @14,BUG+160                                         1536
*      END;                                                /*@G51DGBB*/
*   END;                                                   /*@G51DGBB*/
*  ELSE   /*NOT ACCUMULATING OR SELECTING MCH OR CCH RECORDS @G51DGBB*/
*    BUG(41) = BUG(41) + 1; /*COUNT FRAMES REJECTED          @G51DGBB*/
         B     @RC01485                                            1539
@RF01485 LA    @14,1                                               1539
         AL    @14,BUG+160                                         1539
         ST    @14,BUG+160                                         1539
*RESPECIFY (R15) UNRESTRICTED;                             /*@G51DGBB*/
*END; /*CLOSING END TO PROC FLIMFRAM                         @G51DGBB*/
@EL00037 DS    0H                                                  1541
@EF00037 DS    0H                                                  1541
@ER00037 LM    @14,@12,@SA00037                                    1541
         BR    @14                                                 1541
*END  /*CLOSING END TO EXTERNAL PROC, IFCFILT3               @Z427VLS*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (COMTABLE)                                        *
*;                                                                 1542
@DATA    DS    0H
@CH01361 DC    H'76'
         DS    0F
@AL00193 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00279 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00753 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00766 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01300 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01318 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL01333 DC    A(@CF00074+2)           LIST WITH   1 ARGUMENT(S)
@AL00199 DC    A(@CF00076+2)           LIST WITH   1 ARGUMENT(S)
@AL00222 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00714 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00723 DC    A(@CF00064+2)           LIST WITH   1 ARGUMENT(S)
@AL00536 DC    A(@CF00064)             LIST WITH   3 ARGUMENT(S)
         DC    A(WORKDEV)
         DC    A(LINKDEV)
@AL00676 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00688 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00704 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00771 DC    A(@CF00083+2)           LIST WITH   1 ARGUMENT(S)
@AL00712 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00721 DC    A(@CF00081+2)           LIST WITH   1 ARGUMENT(S)
@AL00751 DC    A(@CF01434)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS)
@AL00764 DC    A(@CF01435)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS)
@AL01254 DC    A(@CF01508)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01257 DC    A(@CF01509)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01260 DC    A(@CF01510)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01267 DC    A(@CF01511)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01270 DC    A(@CF01427)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01297 DC    A(@CF01356)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01299 DC    A(@CF00227)             LIST WITH   2 ARGUMENT(S)
         DC    A(@AFTEMPS+4)
@AL01446 DC    A(@CF00079+2)           LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@SA00003 DS    15F
@SA00037 DS    15F
@SA00016 DS    15F
@SA00002 DS    15F
@SA00014 DS    15F
@SA00032 DS    15F
@SA00030 DS    15F
@SA00006 DS    15F
@SA00007 DS    15F
@SA00013 DS    15F
@SA00008 DS    15F
@SA00017 DS    15F
@SA00019 DS    15F
@SA00020 DS    15F
@SA00026 DS    15F
@SA00023 DS    15F
@SA00027 DS    15F
@SA00024 DS    15F
@SA00021 DS    15F
@SA00022 DS    15F
@SA00033 DS    15F
@SA00034 DS    15F
@SA00035 DS    15F
@TF00001 DS    F
@TF00002 DS    F
@AFTEMPS DS    2F
         DS    0F
@CF00055 DC    F'1'
@CF00074 DC    F'2'
@CH00074 EQU   @CF00074+2
@CF00076 DC    F'3'
@CH00076 EQU   @CF00076+2
@CF00064 DC    F'4'
@CH00064 EQU   @CF00064+2
@CF00079 DC    F'5'
@CH00079 EQU   @CF00079+2
@CF00081 DC    F'6'
@CH00081 EQU   @CF00081+2
@CF00083 DC    F'7'
@CH00083 EQU   @CF00083+2
@CF00066 DC    F'8'
@CF00035 DC    F'9'
@CF00034 DC    F'10'
@CF00033 DC    F'11'
@CH00033 EQU   @CF00033+2
@CF00032 DC    F'12'
@CF01015 DC    F'13'
@CF00940 DC    F'14'
@CH00940 EQU   @CF00940+2
@CF00036 DC    F'15'
@CF00088 DC    F'16'
@CF01167 DC    F'18'
@CF00227 DC    F'24'
@CH00227 EQU   @CF00227+2
@CF01116 DC    F'27'
@CF01356 DC    F'40'
@CF01520 DC    F'41'
@CF00293 DC    F'50'
@CF01509 DC    F'53'
@CF01508 DC    F'55'
@CF01434 DC    F'70'
@CF01435 DC    F'71'
@CF01511 DC    F'72'
@CF01510 DC    F'73'
@CH01510 EQU   @CF01510+2
@CF01427 DC    F'78'
@CF01563 DC    F'254'
@CF00960 DC    F'335'
@CF00936 DC    F'366'
@CF01573 DC    F'-68'
@CF01601 DC    F'-64'
@CF01588 DC    F'-60'
@CF01589 DC    F'-56'
@CF01590 DC    F'-52'
@CF01591 DC    F'-48'
@CF01592 DC    F'-44'
@CF01593 DC    F'-40'
@CF01594 DC    F'-36'
@CF01595 DC    F'-32'
@CF01596 DC    F'-28'
@CF01597 DC    F'-24'
@CF01574 DC    F'-20'
@CF01604 DC    F'-17'
@CF01598 DC    F'-16'
@CF01605 DC    F'-15'
@CF01351 DC    F'-14'
@CF01599 DC    F'-12'
@CF01575 DC    F'-11'
@CF01576 DC    F'-10'
@CF01580 DC    F'-9'
@CF01600 DC    F'-8'
@CF01571 DC    F'-7'
@CF01581 DC    F'-4'
@CF00881 DC    XL4'FFFFFFF8'
@CV01403 DC    V(IFCDEVIC)
         DS    0D
ENTRIES  DC    F'1'
LISTPTR  DC    A(0)
ZZ       DC    A(0)
Z1       DC    F'0'
Z2       DC    F'0'
Z3       DC    F'0'
ZZ3      DC    F'0'
NUMBER   DC    F'0'
NEXTBY   DC    F'0'
ADDNXT   DC    F'0'
T        DC    F'0'
P        DC    F'0'
R        DC    F'0'
INDEX    DS    F
YEAR     DC    H'0'
         DS    0D
@TS00001 DS    CL11
@CB01535 DC    X'0000000000000000'
@CB00288 EQU   @CB01535
@CB01432 DC    X'0000000F'
@CB00228 DC    X'00000F'
@CB00237 DC    X'FFFFFF'
@CB00912 DC    X'000FFF'
@CB00944 EQU   @CB01535
@CB01363 DC    X'99366F'
@CB00208 EQU   @CB01535
@CB00261 EQU   @CB00237
@CB00884 DC    X'8004'
@CB00886 DC    X'8005'
@CB00888 DC    X'8003'
@CB00890 DC    X'100C'
@CB00892 DC    X'1008'
@CB00894 DC    X'0842'
@CB00908 DC    X'0FF0'
@CB00910 DC    X'0FFF'
@CB00930 EQU   @CB00912
@CB00942 DC    X'7FFF'
@CB00964 DC    X'2006'
@CB00966 DC    X'2007'
@CB00968 DC    X'2009'
@CB00970 DC    X'200A'
@CB00972 DC    X'200B'
@CB00974 DC    X'200D'
@CB00995 DC    X'0003'
@CB01393 DC    X'3705'
@CB01469 DC    X'3330'
@CB01470 DC    X'3340'
@CB01471 DC    X'3350'
TREND2   DC    X'0000000000000000000000000000'
         ORG   TREND2
TRENDKEY DS    CL8
         ORG   TRENDKEY
TRENDGRP DS    FL1
TRENDRT  DS    BL2
         ORG   TRENDRT
TRENDCUA DS    BL2
         ORG   TRENDKEY+3
TRENCPUS DS    BL1
         ORG   TRENCPUS
TRENDCPU DS    BL1
TRENDOLD EQU   TRENCPUS+0
         ORG   TRENDKEY+4
TRENDITM DS    BL1
         ORG   TRENDITM
TREND037 DS    BL1
TRENDOD  EQU   TRENDITM+0
         ORG   TRENDKEY+5
TRENDDAT DS    FL1
TRENDDEV DS    CL2
         ORG   TREND2+8
TRENDPR1 DS    FL2
         ORG   TRENDPR1
@NM00084 DS    BL2
TRENDPRM EQU   TRENDPR1+1
         ORG   TREND2+10
TRENDTMP DS    FL4
         ORG   TREND2+14
         DS    CL3
FILT1ITM DS    CL139
         ORG   FILT1ITM
MAXENT   DC    F'0'
FREEADR  DC    A(0)
I        DC    A(1)
J        DC    A(0)
K        DC    A(0)
L        DC    A(0)
M        DC    A(0)
Q        DC    A(0)
A        DC    A(0)
X        DC    A(0)
Y        DC    A(0)
Z        DC    A(0)
LINKITM  DC    A(0)
CCHINDX  DC    A(0)
SAVESEQ  DS    FL1
         DS    CL3
ADDAFT   DC    F'0'
SRTCONT  DC    F'0'
SRTCONT1 DC    F'0'
DSTART   DC    F'0'
DEND     DC    F'0'
UNKNWN   DC    F'0'
COMPLINK DC    F'0'
ALLCORE  DC    F'0'
TREN1SIZ DC    F'0'
BINDAY   DC    F'0'
ERROR    DC    F'0'
ERSER    DC    X'00000000'
         ORG   ERSER
@NM00085 DS    CL1
ER3      DS    CL3
         ORG   FILT1ITM+108
NUMUNSHR DC    H'1'
PACKPAS  DC    CL4'    '
         DS    CL2
PASSNUM  DC    F'0'
NUMREC   DC    F'0'
EXCESS   DC    F'0'
WORKDEV  DC    X'0000'
         ORG   WORKDEV
WORKDEV1 DS    CL1
WORKDEV2 DS    CL1
         ORG   FILT1ITM+130
WORKTYPE DC    X'00'
CUA3     DC    X'000000'
         ORG   CUA3
@NM00086 DS    BL1
WORKCUA  DS    BL2
         ORG   WORKCUA
WRKCUA   DS    BL2
         ORG   FILT1ITM+134
WWCUA    DS    CL3
         ORG   WWCUA
@NM00087 DS    CL1
WWCUA2   DS    CL2
         ORG   FILT1ITM+137
TREIDX   DC    AL1(0)
MSGNO    DC    AL1(0)
         ORG   FILT1ITM+139
LINKDEV  DS    CL4
         ORG   LINKDEV
DEVLABEL DS    CL2
@NM00088 DS    CL2
         ORG   LINKDEV+4
YRSAVE   DC    X'0000'
         ORG   YRSAVE
YRSAVE1  DS    BL1
YRSAVE2  DS    BL1
         ORG   YRSAVE+2
ERRPLACE DS    BL1
         ORG   ERRPLACE
ERRP1    DS    BL1
ERRP2    EQU   ERRPLACE+0
         ORG   ERRPLACE+1
PRINTLIN DS    CL134
         ORG   PRINTLIN
PRINTDS  DC    X'F1'
PRINTCC  DC    X'09'
PRINTBDY DC    CL132' '
         ORG   PRINTBDY
@NM00089 DS    CL8
PRINTED  DS    CL9
@NM00090 DS    CL24
PRNTSER  DS    CL7
         ORG   PRINTLIN+134
PARTIAL  DS    CL58
         ORG   PARTIAL
@NM00093 DC    CL29'DEBUG16 FRAME SET INCOMPLETE '
PARMOD   DS    CL4
@NM00094 DC    CL1' '
PARSER   DS    CL6
@NM00095 DC    CL17' FRAMEREP SET TO '
PARREP   DS    CL1
         ORG   PARTIAL+58
BITSWIT  DC    X'000000'
         ORG   BITSWIT
FOUND    DS    BL1
NONBLANK EQU   BITSWIT+0
DEVOK    EQU   BITSWIT+0
CUAOK    EQU   BITSWIT+0
SORTSW   EQU   BITSWIT+0
UNIQUE   EQU   BITSWIT+0
MISSW    EQU   BITSWIT+0
MISSW1   EQU   BITSWIT+0
CROSSFLG DS    BL1
GETOUT   EQU   BITSWIT+1
FIRSTIME EQU   BITSWIT+1
ONBOUND  EQU   BITSWIT+1
CPU0FLG  EQU   BITSWIT+1
GETFAIL  EQU   BITSWIT+1
LOOPOUT  EQU   BITSWIT+1
FRAMEYES EQU   BITSWIT+1
ONETIME  DS    BL1
SHAREYES EQU   BITSWIT+2
         ORG   BITSWIT+3
WORKBYTE DS    BL1
         ORG   WORKBYTE
WORKBYT4 DS    BL1
         ORG   WORKBYTE+1
WORKTWO  DS    BL1
DEVCDLNK DC    X'00000000'
         ORG   DEVCDLNK
DEVLINK  DS    CL2
@NM00097 DS    CL2
         ORG   DEVCDLNK+4
CHARS    DC    CL16'0123456789ABCDEF'
SUPERZAP DC    3CL10'SUPERZAP'
         DS    CL3
SAVEADR  DC    A(0)
         DS    15XL4
EVCON    DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
         DC    CL1'G'
         DC    CL1'H'
         DC    CL1'I'
         DC    CL1'J'
         DC    CL1'K'
         DC    CL1'L'
         DC    CL1'M'
         DC    CL1'N'
         DC    CL1'O'
         DC    CL1'P'
FLIP     DC    AL1(0)
         DC    AL1(1)
         DC    AL1(2)
         DC    AL1(3)
         DC    AL1(4)
         DC    AL1(5)
         DC    AL1(6)
         DC    AL1(7)
         DC    AL1(8)
         DC    AL1(9)
         DC    AL1(10)
         DC    AL1(11)
         DC    AL1(12)
         DC    AL1(13)
         DC    AL1(14)
         DC    AL1(15)
PATCH    DC    25F'0'
EDIFILD  DS    9CL1
         DS    CL3
BUG      DC    50F'0'
ERRLINE  DS    CL73
         ORG   ERRLINE+0
ERRDS    DC    CL1'1'
ERCC     DC    X'09'
ERRMES   DC    CL10'DEBUG16   '
ERXNUM   DC    CL9'         '
@NM00098 DC    CL2'  '
ERRTXT   DC    CL50'RECORDS RETRIEVED VIA READSEQ           '
         ORG   ERRLINE+73
         ORG   ERRLINE+73
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS PASSED DATE, TIME FILTERING     '
         ORG   ERRLINE+146
         ORG   ERRLINE+146
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS PASSED ALL FILTERING            '
         ORG   ERRLINE+219
         ORG   ERRLINE+219
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDR TYPE 91 DEVICE TYPE 3705 RECS FOUND '
         ORG   ERRLINE+292
         ORG   ERRLINE+292
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDR TYPE 91, DV3705 RECS SAVED IN TREND2'
         ORG   ERRLINE+365
         ORG   ERRLINE+365
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR RECORDS IDENTIFIED                  '
         ORG   ERRLINE+438
         ORG   ERRLINE+438
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR RECORDS PASSED FILTERING            '
         ORG   ERRLINE+511
         ORG   ERRLINE+511
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR RECORDS STORED IN TREND2            '
         ORG   ERRLINE+584
         ORG   ERRLINE+584
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 1 RECORDS IDENTIFIED              '
         ORG   ERRLINE+657
         ORG   ERRLINE+657
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 2 RECORDS IDENTIFIED              '
         ORG   ERRLINE+730
         ORG   ERRLINE+730
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 3 RECORDS IDENTIFIED              '
         ORG   ERRLINE+803
         ORG   ERRLINE+803
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 4 RECORDS IDENTIFIED              '
         ORG   ERRLINE+876
         ORG   ERRLINE+876
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 5 RECORDS IDENTIFIED              '
         ORG   ERRLINE+949
         ORG   ERRLINE+949
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'GROUP 6 RECORDS IDENTIFIED              '
         ORG   ERRLINE+1022
         ORG   ERRLINE+1022
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS IDENTIFIED FOR CPU FFFFFF       '
         ORG   ERRLINE+1095
         ORG   ERRLINE+1095
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MCH RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1168
         ORG   ERRLINE+1168
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MCH RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1241
         ORG   ERRLINE+1241
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'CCH RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1314
         ORG   ERRLINE+1314
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'CCH RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1387
         ORG   ERRLINE+1387
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'SOFTWARE RECORDS IDENTIFIED             '
         ORG   ERRLINE+1460
         ORG   ERRLINE+1460
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'SOFTWARE RECORDS PASSED FILTERING       '
         ORG   ERRLINE+1533
         ORG   ERRLINE+1533
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'IPL RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1606
         ORG   ERRLINE+1606
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'IPL RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1679
         ORG   ERRLINE+1679
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'DDR RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1752
         ORG   ERRLINE+1752
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'DDR RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1825
         ORG   ERRLINE+1825
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MIH RECORDS IDENTIFIED                  '
         ORG   ERRLINE+1898
         ORG   ERRLINE+1898
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MIH RECORDS PASSED FILTERING            '
         ORG   ERRLINE+1971
         ORG   ERRLINE+1971
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'EOD RECORDS IDENTIFIED                  '
         ORG   ERRLINE+2044
         ORG   ERRLINE+2044
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'EOD RECORDS PASSED FILTERING            '
         ORG   ERRLINE+2117
         ORG   ERRLINE+2117
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS SAVED FROM CPU FFFFFF MODEL FFFF'
         ORG   ERRLINE+2190
         ORG   ERRLINE+2190
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDRS NOT TYPE 91 NOT DEVICE TYPE 3705   '
         ORG   ERRLINE+2263
         ORG   ERRLINE+2263
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS FAILED DEVICE SELECTION         '
         ORG   ERRLINE+2336
         ORG   ERRLINE+2336
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'RECORDS FAILED CUA SELECTION            '
         ORG   ERRLINE+2409
         ORG   ERRLINE+2409
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDR 33XX RECORDS IDENTIFIED             '
         ORG   ERRLINE+2482
         ORG   ERRLINE+2482
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'MDR 33XX RECORDS SAVED                  '
         ORG   ERRLINE+2555
         ORG   ERRLINE+2555
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR 33XX, 2305 RECORDS IDENTIFIED       '
         ORG   ERRLINE+2628
         ORG   ERRLINE+2628
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR 33XX, 2305 RECORDS SAVED            '
         ORG   ERRLINE+2701
         ORG   ERRLINE+2701
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR 34XX RECORDS IDENTIFIED             '
         ORG   ERRLINE+2774
         ORG   ERRLINE+2774
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'OBR 34XX RECORDS SAVED                  '
         ORG   ERRLINE+2847
         ORG   ERRLINE+2847
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'FRAMES USED IN PROCESSING               '
         ORG   ERRLINE+2920
         ORG   ERRLINE+2920
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'FRAMES NOT USED IN PROCESSING           '
         ORG   ERRLINE+2993
         ORG   ERRLINE+2993
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         DC    CL50'****IFCFILT3 DEBUG16 RECORD COUNTS******'
         ORG   ERRLINE+3066
         ORG   ERRLINE+3066
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3139
         ORG   ERRLINE+3139
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3212
         ORG   ERRLINE+3212
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3285
         ORG   ERRLINE+3285
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3358
         ORG   ERRLINE+3358
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3431
         ORG   ERRLINE+3431
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3504
         ORG   ERRLINE+3504
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3577
         ORG   ERRLINE+3577
         DC    CL1'1'
         DC    X'09'
         DC    CL10'DEBUG16   '
         DC    CL9'         '
         DC    CL2'  '
         ORG   ERRLINE+3650
IFCFILT3 CSECT
         DC    S(SUPERZAP)
IFCFILT3 CSECT
         DC    S(PATCH)     BASE DISPLACEMENT OF PATCH AREA
IFCFILT3 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R2       EQU   @02
R7       EQU   @07
R0       EQU   @00
R1       EQU   @01
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R12      EQU   @12
R15      EQU   @15
R10      EQU   @10
R11      EQU   @11
R13      EQU   @13
R14      EQU   @14
R6       EQU   @06
R8       EQU   @08
R9       EQU   @09
IOHND    EQU   0
IFCMSG   EQU   0
PARM     EQU   0
RECTYPE  EQU   PARM
PMCH     EQU   RECTYPE
PCHAN    EQU   RECTYPE
POBR     EQU   RECTYPE
PSOFT    EQU   RECTYPE
PIPL     EQU   RECTYPE
PDDR     EQU   RECTYPE
PMIH     EQU   RECTYPE
PEOD     EQU   RECTYPE
PTTYP    EQU   RECTYPE+1
SWITCHES EQU   PARM+2
ZEROALL  EQU   SWITCHES+1
DEVEXCL  EQU   SWITCHES+1
SHIFT3RD EQU   SWITCHES+1
DEBUG    EQU   PARM+4
DEBUG4   EQU   DEBUG
DEBUG11  EQU   DEBUG+1
DEBUG16  EQU   DEBUG+2
DEBUG23  EQU   DEBUG+2
DEBUGA   EQU   PARM+8
DEBUG50  EQU   DEBUGA+2
MISC     EQU   PARM+12
PACC     EQU   MISC
PHIST    EQU   MISC
PRINTES  EQU   MISC
PASSFLAG EQU   MISC
OPENCLSE EQU   PARM+13
OPENIO   EQU   OPENCLSE
CLOSEIO  EQU   OPENCLSE+2
CACCIN   EQU   CLOSEIO
CACCDEV  EQU   CLOSEIO
CDRCTWRK EQU   CLOSEIO
DATENOW  EQU   PARM+17
STDT     EQU   PARM+23
STDATE   EQU   STDT
PSTD     EQU   STDATE+1
PSTYR    EQU   PSTD
PSTDY    EQU   PSTD+1
ENDDT    EQU   PARM+31
ENDDATE  EQU   ENDDT
PEND     EQU   ENDDATE+1
PENDY    EQU   PEND+1
STTIME1  EQU   PARM+39
ENDTIME1 EQU   PARM+43
STTIME2  EQU   PARM+47
ENDTIME2 EQU   PARM+51
STRTDATE EQU   PARM+55
@NM00007 EQU   PARM+75
TABSIZE  EQU   PARM+80
SORTNUM  EQU   PARM+84
NUMDAYS  EQU   PARM+88
ERRID    EQU   PARM+92
IDTIMEA  EQU   ERRID+6
IDTIME   EQU   IDTIMEA
CCHHRLNG EQU   PARM+112
RECCCHHR EQU   CCHHRLNG
ADIOHND  EQU   PARM+124
ADIFCMSG EQU   PARM+128
ADEDITB  EQU   PARM+132
EVPTR    EQU   PARM+136
SORTADR  EQU   PARM+140
PRINTADR EQU   PARM+148
CUAPTR   EQU   PARM+152
DEVPTR   EQU   PARM+156
MODPTR   EQU   PARM+160
SERPTR   EQU   PARM+164
VOLPTR   EQU   PARM+168
CPUPTR   EQU   PARM+172
CPCUAPTR EQU   PARM+176
LIBADPTR EQU   PARM+180
SYMCDPTR EQU   PARM+184
SYSUMPTR EQU   PARM+188
TRENPTR  EQU   PARM+192
SHAREPTR EQU   PARM+196
FRAMEPTR EQU   PARM+200
MERDCPTR EQU   PARM+208
DUMPTABL EQU   PARM+228
DUMPINFO EQU   DUMPTABL+4
TRENDONE EQU   0
TRENEXT  EQU   TRENDONE
TRENUM   EQU   TRENDONE+4
TREGEN   EQU   TRENDONE+8
TREIPL   EQU   TREGEN
TREMCH   EQU   TREGEN+4
TRECCH0  EQU   TREGEN+8
TRECCH1  EQU   TREGEN+12
TRECCH2  EQU   TREGEN+16
TRECCH3  EQU   TREGEN+20
TRECCH4  EQU   TREGEN+24
TRECCH5  EQU   TREGEN+28
TRECCH6  EQU   TREGEN+32
TRECCH7  EQU   TREGEN+36
TRECCH8  EQU   TREGEN+40
TRECCH9  EQU   TREGEN+44
TRECCHA  EQU   TREGEN+48
TRECCHB  EQU   TREGEN+52
TRECCHC  EQU   TREGEN+56
TRECCHD  EQU   TREGEN+60
TRECCHE  EQU   TREGEN+64
TRECCHF  EQU   TREGEN+68
TREPRE   EQU   TREGEN+72
EVTABLE  EQU   0
EVSTOP   EQU   EVTABLE
EVNUM    EQU   EVTABLE+4
EVKEY    EQU   EVTABLE+6
EVMODEL  EQU   EVKEY
EVSERIAL EQU   EVKEY+2
EVLETTER EQU   EVKEY+5
SORTABLE EQU   0
SORTKEY  EQU   SORTABLE
SORTCCHR EQU   SORTABLE+5
SYSUMONE EQU   0
SHARE    EQU   0
SHARENUM EQU   SHARE
SHAREIO  EQU   SHARE+2
SHRCUCPU EQU   SHAREIO
SHARECUA EQU   SHRCUCPU
SHAREDX  EQU   SHARECUA
SHARSERA EQU   SHRCUCPU+2
SHARECUB EQU   SHAREIO+5
SHARSERB EQU   SHAREIO+7
SHARLET  EQU   SHAREIO+10
EDITLOAD EQU   0
EDITABLE EQU   EDITLOAD+4
CUA      EQU   0
CUANUM   EQU   CUA
CUAVAL   EQU   CUA+2
CUA1     EQU   CUAVAL
CUA2     EQU   CUAVAL+2
DEVICE   EQU   0
DEVNUM   EQU   DEVICE
DEVVAL   EQU   DEVICE+2
MDRNUM   EQU   DEVICE+202
MDRVAL   EQU   DEVICE+204
MODELS   EQU   0
DEVSERAL EQU   0
VOLUME   EQU   0
CPUS     EQU   0
CPUCUAS  EQU   0
CPUCUAV  EQU   CPUCUAS+2
LIBADR   EQU   0
SYMCODE  EQU   0
SYMVAL   EQU   SYMCODE+2
TMT2     EQU   0
TMTKEY   EQU   TMT2
TMTSRT   EQU   TMTKEY+1
TMTCPUS  EQU   TMTKEY+3
TMTITEM  EQU   TMTKEY+4
TMTPERM1 EQU   TMT2+8
TMP2     EQU   0
TMPKEY   EQU   TMP2
TMPSRT   EQU   TMPKEY+1
TMPCPUS  EQU   TMPKEY+3
TMPITEM  EQU   TMPKEY+4
TMPPERM1 EQU   TMP2+7
MERIDIAN EQU   0
MRDNUMBR EQU   MERIDIAN
MODEL    EQU   MERIDIAN+2
LRTREC   EQU   0
LRTKEY   EQU   LRTREC
LRTKEY1  EQU   LRTKEY
LRTSMS   EQU   LRTREC+2
LRTNLAST EQU   LRTSMS
LRTRUNC  EQU   LRTSMS
LRTERRID EQU   LRTREC+3
@NM00017 EQU   LRTREC+4
LRTCNT   EQU   @NM00017+2
LRTDT    EQU   LRTREC+8
LRTDATE  EQU   LRTDT
LRTYRDAY EQU   LRTDATE+1
LRTDAY   EQU   LRTYRDAY+1
LRTTIME  EQU   LRTDT+4
LRTCPU   EQU   LRTREC+16
LRTCPMOD EQU   LRTCPU+1
LRTCPUS  EQU   LRTCPMOD
LRTMODEL EQU   LRTCPMOD+3
MCHREC   EQU   0
MCHHEAD  EQU   MCHREC
MCHKEY   EQU   MCHHEAD
MCHSMS   EQU   MCHHEAD+2
MCHCPUID EQU   MCHHEAD+16
CCHREC   EQU   0
CCHHEAD  EQU   CCHREC
CCHKEY   EQU   CCHHEAD
CCHSMS   EQU   CCHHEAD+2
CCHCPUID EQU   CCHHEAD+16
CCHCODE  EQU   CCHREC+68
CCHCODE2 EQU   CCHCODE+2
CCHCUA   EQU   CCHREC+74
OBRREC   EQU   0
OBRHEAD  EQU   OBRREC
OBRKEY   EQU   OBRHEAD
OBRSMS   EQU   OBRHEAD+2
MISCSW   EQU   OBRSMS
OBRSUBTP EQU   OBRSMS+1
SDRCOUNT EQU   OBRSUBTP
OBRTEMP  EQU   OBRSUBTP
SHORTSW  EQU   OBRSUBTP
DISMOUNT EQU   OBRSUBTP
OBRCPUID EQU   OBRHEAD+16
OBRJOBID EQU   OBRREC+24
OBRSDEV2 EQU   OBRJOBID+2
OBRSSDRC EQU   OBRJOBID+4
OBRSCUA  EQU   OBRJOBID+5
OBRFCCW  EQU   OBRREC+32
OBRSRDS  EQU   OBRFCCW
OBRCSW   EQU   OBRREC+40
OBRDEVDC EQU   OBRREC+48
OBRCODE  EQU   OBRREC+52
OBRDEV   EQU   OBRCODE+2
OBRLSDRC EQU   OBRREC+56
OBRPCUA  EQU   OBRREC+57
OBRSEEK  EQU   OBRREC+70
OBRTERMN EQU   OBRSEEK+2
OBR34CT1 EQU   OBRTERMN+4
OBR34CT2 EQU   OBRTERMN+5
SFTREC   EQU   0
SFTHEAD  EQU   SFTREC
SFTKEY   EQU   SFTHEAD
SFTCPUID EQU   SFTHEAD+16
SFTSDWA  EQU   SFTREC+32
SFTAEC1  EQU   SFTSDWA+96
SFTFLGS  EQU   SFTSDWA+232
SFTRECP  EQU   SFTSDWA+292
IPLREC   EQU   0
IPLHEAD  EQU   IPLREC
IPLKEY   EQU   IPLHEAD
IPLCPUID EQU   IPLHEAD+16
IPLSTIME EQU   IPLREC+52
DDRREC   EQU   0
DDRHEAD  EQU   DDRREC
DDRKEY   EQU   DDRHEAD
DDRSMS   EQU   DDRHEAD+2
DDRCPUID EQU   DDRHEAD+16
@NM00052 EQU   DDRREC+24
DDRFCUA  EQU   DDRREC+45
DDRFDEV  EQU   DDRREC+48
DDRCODE2 EQU   DDRFDEV+2
DDRTODEV EQU   DDRREC+56
MIHREC   EQU   0
MIHHEAD  EQU   MIHREC
MIHKEY   EQU   MIHHEAD
@NM00054 EQU   MIHHEAD+4
MIHCPUID EQU   MIHHEAD+16
@NM00057 EQU   MIHREC+24
MIHCUA   EQU   MIHREC+35
MIHDEV   EQU   MIHREC+44
MIHCODE2 EQU   MIHDEV+2
EODREC   EQU   0
EODHEAD  EQU   EODREC
EODKEY   EQU   EODHEAD
EODCPUID EQU   EODHEAD+16
TPRREC   EQU   0
TPRHEAD  EQU   TPRREC
TPRKEY   EQU   TPRHEAD
TPRDEV   EQU   TPRHEAD+4
TPRBUFC  EQU   TPRHEAD+5
TPRCPUID EQU   TPRHEAD+16
TPRCUA   EQU   TPRREC+24
@NM00065 EQU   TPRREC+26
TPRVOL   EQU   @NM00065
TPRMODE  EQU   TPRREC+38
DVBSDRE  EQU   TPRREC+56
MCFREC   EQU   0
MCFHEAD  EQU   MCFREC
MCFKEY   EQU   MCFHEAD
MCFSMS   EQU   MCFHEAD+2
@NM00073 EQU   MCFHEAD+16
MCFSMO   EQU   MCFHEAD+17
CCFREC   EQU   0
CCFHEAD  EQU   CCFREC
CCFKEY   EQU   CCFHEAD
CCFSMS   EQU   CCFHEAD+2
@NM00081 EQU   CCFHEAD+16
CCFSMO   EQU   CCFHEAD+17
OBRLSDR  EQU   0
OBRSENSE EQU   0
OBRSENS0 EQU   OBRSENSE
OBRSENS1 EQU   OBRSENSE+1
TPRSENSE EQU   0
TPRS1213 EQU   TPRSENSE
TPRS1415 EQU   TPRSENSE+2
TPRS19   EQU   TPRSENSE+7
FRAMETAB EQU   0
FRAMENUM EQU   FRAMETAB
FRAMEDTA EQU   FRAMETAB+4
FRAMEKEY EQU   FRAMEDTA
FRAMECPU EQU   FRAMEKEY
FRAMESER EQU   FRAMECPU
FRAMEMOD EQU   FRAMECPU+3
FRAMEDT  EQU   FRAMEKEY+5
FRAMETYP EQU   FRAMEKEY+13
FRAMLOCM EQU   FRAMEDTA+16
FRAMLOCC EQU   FRAMEDTA+20
LISTLOC  EQU   0
LISTNUM  EQU   LISTLOC
LISTCCHR EQU   LISTLOC+4
TMTA     EQU   0
TMTKEYA  EQU   TMTA
TMTPERMA EQU   TMTA+8
TMTTEMPA EQU   TMTA+10
NEXTBYTE EQU   0
ADDNUM   EQU   0
FLIPFLOP EQU   FLIP
YEARC    EQU   YEAR
EDFLD    EQU   EDIFILD
ERRCT1   EQU   DVBSDRE
ERRNUM   EQU   ERRPLACE
ERR78    EQU   PRINTBDY
PFRAMMOD EQU   ERR78+27
PFRAMSER EQU   ERR78+32
WORKNM   EQU   WORKBYTE
WORKNM2  EQU   WORKTWO
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00092 EQU   ERR78+31
@NM00091 EQU   ERR78
FRAMETIM EQU   FRAMEDT+4
FRAMEDAT EQU   FRAMEDT
@NM00096 EQU   TPRSENSE+4
OBRLSDR2 EQU   OBRLSDR
OBRLSDR1 EQU   OBRLSDR
CCFFRAME EQU   CCFREC+24
@NM00083 EQU   CCFHEAD+22
CCFMOD   EQU   CCFSMO+3
CCFSER   EQU   CCFSMO
CCFVER   EQU   @NM00081
@NM00082 EQU   @NM00081
CCFTIMD  EQU   CCFHEAD+12
CCFDAT   EQU   CCFHEAD+8
@NM00080 EQU   CCFHEAD+7
CCFCNT   EQU   CCFHEAD+6
@NM00079 EQU   CCFHEAD+4
@NM00078 EQU   CCFSMS+1
CCFCPU   EQU   CCFSMS+1
CCFMP    EQU   CCFSMS+1
@NM00077 EQU   CCFSMS
CCFTIM   EQU   CCFSMS
@NM00076 EQU   CCFSMS
CCFTRU   EQU   CCFSMS
CCFTOD   EQU   CCFSMS
CCFLST   EQU   CCFSMS
CCFKEY2  EQU   CCFKEY+1
CCFKEY1  EQU   CCFKEY
MCFFRAME EQU   MCFREC+24
@NM00075 EQU   MCFHEAD+22
MCFMOD   EQU   MCFSMO+3
MCFSER   EQU   MCFSMO
MCFVER   EQU   @NM00073
@NM00074 EQU   @NM00073
MCFTIMD  EQU   MCFHEAD+12
MCFDAT   EQU   MCFHEAD+8
@NM00072 EQU   MCFHEAD+7
MCFCNT   EQU   MCFHEAD+6
@NM00071 EQU   MCFHEAD+4
@NM00070 EQU   MCFSMS+1
MCFCPU   EQU   MCFSMS+1
MCFMP    EQU   MCFSMS+1
@NM00069 EQU   MCFSMS
MCFTIM   EQU   MCFSMS
@NM00068 EQU   MCFSMS
MCFTRU   EQU   MCFSMS
MCFTOD   EQU   MCFSMS
MCFLST   EQU   MCFSMS
MCFKEY2  EQU   MCFKEY+1
MCFKEY1  EQU   MCFKEY
RMSSCBRY EQU   TPRREC+58
@NM00067 EQU   TPRREC+39
TPRLINAD EQU   TPRREC+36
@NM00066 EQU   TPRREC+34
TPRCEL   EQU   TPRCPUID+6
TPRMODEL EQU   TPRCPUID+4
TPRSER   EQU   TPRCPUID+1
@NM00064 EQU   TPRCPUID
TPRTIME  EQU   TPRHEAD+12
TPRDATE  EQU   TPRHEAD+8
@NM00063 EQU   TPRHEAD+6
TPRLENGT EQU   TPRBUFC
@NM00062 EQU   TPRBUFC
TPRSMS   EQU   TPRHEAD+2
TPRKEY2  EQU   TPRKEY+1
TPRKEY1  EQU   TPRKEY
EODCEL   EQU   EODCPUID+6
EODMODEL EQU   EODCPUID+4
EODSER   EQU   EODCPUID+1
@NM00061 EQU   EODCPUID
EODTIME  EQU   EODHEAD+12
EODDATE  EQU   EODHEAD+8
@NM00060 EQU   EODHEAD+5
EODDEV   EQU   EODHEAD+4
EODSMS   EQU   EODHEAD+2
EODKEY2  EQU   EODKEY+1
EODKEY1  EQU   EODKEY
MIHTYPE  EQU   MIHCODE2+1
MIHCLASS EQU   MIHCODE2
@NM00059 EQU   MIHDEV
MIHVOL   EQU   MIHREC+38
@NM00058 EQU   @NM00057+8
MIHJOBID EQU   @NM00057
MIHCEL   EQU   MIHCPUID+6
MIHMOD   EQU   MIHCPUID+4
MIHSER   EQU   MIHCPUID+1
@NM00056 EQU   MIHCPUID
MIHTIME  EQU   MIHHEAD+12
MIHDATE  EQU   MIHHEAD+8
@NM00055 EQU   MIHHEAD+6
MIHCSID  EQU   MIHHEAD+5
MIHDEBIT EQU   @NM00054
MIHCEBIT EQU   @NM00054
MIHSMS   EQU   MIHHEAD+2
MIHKEY2  EQU   MIHKEY+1
MIHKEY1  EQU   MIHKEY
DDRDEV2  EQU   DDRTODEV+2
DDRDEV1  EQU   DDRTODEV
DDRTOCUA EQU   DDRREC+53
@NM00053 EQU   DDRREC+52
DDRTYPE  EQU   DDRCODE2+1
DDRCLASS EQU   DDRCODE2
DDRCODE1 EQU   DDRFDEV
DDRPHD   EQU   @NM00052+20
DDRVOL2  EQU   @NM00052+14
DDRVOL1  EQU   @NM00052+8
DDRJOBID EQU   @NM00052
DDRCEL   EQU   DDRCPUID+6
DDRMOD   EQU   DDRCPUID+4
DDRSER   EQU   DDRCPUID+1
@NM00051 EQU   DDRCPUID
DDRTIME  EQU   DDRHEAD+12
DDRDATE  EQU   DDRHEAD+8
@NM00050 EQU   DDRHEAD+4
DDRDEPSW EQU   DDRSMS+1
@NM00049 EQU   DDRSMS
DDRKEY2  EQU   DDRKEY+1
DDRKEY1  EQU   DDRKEY
IPLSHSEC EQU   IPLSTIME+3
IPLSSEC  EQU   IPLSTIME+2
IPLSMIN  EQU   IPLSTIME+1
IPLSHOUR EQU   IPLSTIME
IPLSDATE EQU   IPLREC+48
IPLTEMP  EQU   IPLREC+46
IPLHIGH  EQU   IPLREC+42
IPLCHAN  EQU   IPLREC+32
@NM00048 EQU   IPLREC+30
IPLREAS  EQU   IPLREC+28
@NM00047 EQU   IPLREC+25
IPLSYSID EQU   IPLREC+24
IPLCEL   EQU   IPLCPUID+6
IPLMOD   EQU   IPLCPUID+4
IPLSER   EQU   IPLCPUID+1
@NM00046 EQU   IPLCPUID
IPLTIME  EQU   IPLHEAD+12
IPLDATE  EQU   IPLHEAD+8
@NM00045 EQU   IPLHEAD+4
IPLSMS   EQU   IPLHEAD+2
IPLKEY2  EQU   IPLKEY+1
IPLKEY1  EQU   IPLKEY
SFTXDATA EQU   SFTREC+434
SFTLVARA EQU   SFTREC+432
SFTREXN  EQU   SFTRECP+16
SFTCSECT EQU   SFTRECP+8
SFTMODN  EQU   SFTRECP
@NM00044 EQU   SFTSDWA+238
SFTLCPUA EQU   SFTSDWA+236
SFTERRD  EQU   SFTFLGS+3
SFTERRC  EQU   SFTFLGS+2
SFTERRB  EQU   SFTFLGS+1
SFTERRA  EQU   SFTFLGS
@NM00043 EQU   SFTSDWA+136
SFTAAEC1 EQU   SFTSDWA+120
@NM00042 EQU   SFTSDWA+112
SFTPROGC EQU   SFTAEC1+8
@NM00041 EQU   SFTAEC1
@NM00040 EQU   SFTSDWA+88
SFTGRSV  EQU   SFTSDWA+24
SFTABNDC EQU   SFTSDWA
SFTJOBID EQU   SFTREC+24
SFTCEL   EQU   SFTCPUID+6
SFTMOD   EQU   SFTCPUID+4
SFTSER   EQU   SFTCPUID+1
@NM00039 EQU   SFTCPUID
SFTTIME  EQU   SFTHEAD+12
SFTDATE  EQU   SFTHEAD+8
@NM00038 EQU   SFTHEAD+4
SFTSMS   EQU   SFTHEAD+2
SFTKEY2  EQU   SFTKEY+1
SFTKEY1  EQU   SFTKEY
@NM00037 EQU   OBRTERMN
@NM00036 EQU   OBRSEEK+1
OBRTCAM  EQU   OBRSEEK
OBRVOL   EQU   OBRREC+64
OBRSBCNT EQU   OBRREC+62
OBRRETRY EQU   OBRREC+60
OBRTYPE  EQU   OBRDEV+1
OBRCLASS EQU   OBRDEV
OBRCODE1 EQU   OBRCODE
OBRSECUA EQU   OBRREC+49
OBRSTAT  EQU   OBRCSW+4
@NM00035 EQU   OBRCSW
OBRSDRS2 EQU   OBRSRDS
OBRSDRS1 EQU   OBRSRDS
OBRSDEV1 EQU   OBRJOBID
OBRCEL   EQU   OBRCPUID+6
OBRMOD   EQU   OBRCPUID+4
OBRSER   EQU   OBRCPUID+1
@NM00034 EQU   OBRCPUID
OBRTIME  EQU   OBRHEAD+12
OBRDATE  EQU   OBRHEAD+8
@NM00033 EQU   OBRHEAD+4
@NM00032 EQU   OBRSUBTP
@NM00031 EQU   OBRSUBTP
@NM00030 EQU   MISCSW
TRUNC    EQU   MISCSW
@NM00029 EQU   MISCSW
OBRKEY2  EQU   OBRKEY+1
OBRKEY1  EQU   OBRKEY
CCHLOG   EQU   CCHREC+80
CCHMP    EQU   CCHREC+76
@NM00028 EQU   CCHREC+73
CCHID    EQU   CCHREC+72
CCHTYPE  EQU   CCHCODE2+1
CCHCLASS EQU   CCHCODE2
CCHCODE1 EQU   CCHCODE
CCHECSW  EQU   CCHREC+64
CCHCSW   EQU   CCHREC+56
CCHFCCW  EQU   CCHREC+48
CCHATIO  EQU   CCHREC+32
CCHJOBID EQU   CCHREC+24
CCHCEL   EQU   CCHCPUID+6
CCHMOD   EQU   CCHCPUID+4
CCHSER   EQU   CCHCPUID+1
@NM00027 EQU   CCHCPUID
CCHTIME  EQU   CCHHEAD+12
CCHDATE  EQU   CCHHEAD+8
@NM00026 EQU   CCHHEAD+4
CCHRINC  EQU   CCHSMS+1
@NM00025 EQU   CCHSMS
CCHRCRH  EQU   CCHSMS
@NM00024 EQU   CCHSMS
CCHKEY2  EQU   CCHKEY+1
CCHKEY1  EQU   CCHKEY
MCHLOG   EQU   MCHREC+48
MCHOPSW  EQU   MCHREC+40
MCHJOBID EQU   MCHREC+32
MCHPGMID EQU   MCHREC+24
MCHCEL   EQU   MCHCPUID+6
MCHMOD   EQU   MCHCPUID+4
MCHSER   EQU   MCHCPUID+1
@NM00023 EQU   MCHCPUID
MCHTIME  EQU   MCHHEAD+12
MCHDATE  EQU   MCHHEAD+8
@NM00022 EQU   MCHHEAD+4
MCHSYSTR EQU   MCHSMS+1
@NM00021 EQU   MCHSMS
MCHKEY2  EQU   MCHKEY+1
MCHKEY1  EQU   MCHKEY
LRTMCEL  EQU   LRTCPU+6
@NM00020 EQU   LRTCPU
LRTHSECS EQU   LRTTIME+3
LRTSEC   EQU   LRTTIME+2
LRTMIN   EQU   LRTTIME+1
LRTHOUR  EQU   LRTTIME
LRTYEAR  EQU   LRTYRDAY
LRTDATE0 EQU   LRTDATE
@NM00019 EQU   @NM00017+3
@NM00018 EQU   @NM00017
LRTDSMNT EQU   LRTERRID
@NM00016 EQU   LRTERRID
LRTSHRT  EQU   LRTERRID
@NM00015 EQU   LRTERRID
@NM00014 EQU   LRTSMS
LRTIMCNV EQU   LRTSMS
@NM00013 EQU   LRTSMS
LRNS     EQU   LRTSMS
LRTKEY2  EQU   LRTKEY+1
TMPTEMP  EQU   TMP2+9
TMPPERM  EQU   TMPPERM1+1
@NM00012 EQU   TMPPERM1
TMPDEV   EQU   TMPKEY+5
TMPOLDA  EQU   TMPITEM
TMP3705  EQU   TMPITEM
TMPOLD   EQU   TMPCPUS
TMPCPU   EQU   TMPCPUS
TMPCUA   EQU   TMPSRT
TMPGROUP EQU   TMPKEY
TMTTEMP  EQU   TMT2+10
TMTPERM  EQU   TMTPERM1+1
@NM00011 EQU   TMTPERM1
TMTDEV   EQU   TMTKEY+6
TMTDAT   EQU   TMTKEY+5
TMTOLDA  EQU   TMTITEM
TMT3705  EQU   TMTITEM
TMTOLD   EQU   TMTCPUS
TMTCPU   EQU   TMTCPUS
TMTCUA   EQU   TMTSRT
TMTGROUP EQU   TMTKEY
SYMVAL2  EQU   SYMVAL+2
SYMVAL1  EQU   SYMVAL
SYMCDNUM EQU   SYMCODE
LIBVAL   EQU   LIBADR+2
LIBADNUM EQU   LIBADR
CPUCUX3  EQU   CPUCUAV+5
CPUCUX2  EQU   CPUCUAV+3
CPUCUX1  EQU   CPUCUAV
CPCUANUM EQU   CPUCUAS
CPUVAL   EQU   CPUS+2
CPUNUM   EQU   CPUS
VOLVAL   EQU   VOLUME+2
VOLNUM   EQU   VOLUME
SERVAL   EQU   DEVSERAL+2
SERNUM   EQU   DEVSERAL
MODVAL   EQU   MODELS+2
MODNUM   EQU   MODELS
LOADPTR  EQU   EDITABLE+8
LOADNAME EQU   EDITABLE
EDITNUM  EQU   EDITLOAD
SYSUMEOD EQU   SYSUMONE+96
SYSUMPER EQU   SYSUMONE+92
SYSUMPEA EQU   SYSUMONE+88
SYSUMPEI EQU   SYSUMONE+84
SYSUMCH  EQU   SYSUMONE+20
SYSUMMCN EQU   SYSUMONE+16
SYSUMMCR EQU   SYSUMONE+12
SYSUMNXT EQU   SYSUMONE+8
SYSUMIPL EQU   SYSUMONE+4
SYSUMNUM EQU   SYSUMONE
SORTCORE EQU   SORTCCHR
SORTTIME EQU   SORTKEY+1
SORTYEAR EQU   SORTKEY
EVDAY    EQU   EVSTOP+1
EVYEAR   EQU   EVSTOP
DUMPSIZE EQU   DUMPINFO+4
DUMPADR  EQU   DUMPINFO
DUMPNUM  EQU   DUMPTABL
@NM00010 EQU   PARM+212
RECLNGT1 EQU   PARM+204
ADCPUT   EQU   PARM+144
LINECT   EQU   PARM+120
RECLNGTH EQU   CCHHRLNG+6
@NM00009 EQU   CCHHRLNG+5
USERPGM  EQU   PARM+102
IDTSEC   EQU   IDTIME+3
IDSEC    EQU   IDTIME+2
IDMIN    EQU   IDTIME+1
IDHOUR   EQU   IDTIME
IDASID   EQU   ERRID+4
IDCPU    EQU   ERRID+3
@NM00008 EQU   ERRID+2
IDVALUE  EQU   ERRID
SYSRETRN EQU   @NM00007
@NM00006 EQU   PARM+72
WRTHRSH  EQU   PARM+69
RDTHRSH  EQU   PARM+66
TERM     EQU   PARM+58
EVSDAY   EQU   STRTDATE+1
EVSYEAR  EQU   STRTDATE
PENSEC2  EQU   ENDTIME2+2
PENMIN2  EQU   ENDTIME2+1
PENHOUR2 EQU   ENDTIME2
PSTSEC2  EQU   STTIME2+2
PSTMIN2  EQU   STTIME2+1
PSTHOUR2 EQU   STTIME2
PENSEC1  EQU   ENDTIME1+2
PENMIN1  EQU   ENDTIME1+1
PENHOUR1 EQU   ENDTIME1
PSTSEC1  EQU   STTIME1+2
PSTMIN1  EQU   STTIME1+1
PSTHOUR1 EQU   STTIME1
@NM00005 EQU   ENDDT+4
PENYR    EQU   PEND
@NM00004 EQU   ENDDATE
@NM00003 EQU   STDT+4
@NM00002 EQU   STDATE
YEARNOW  EQU   DATENOW+4
@NM00001 EQU   DATENOW+3
DAYNOW   EQU   DATENOW
CSNAP    EQU   CLOSEIO
CSYSIN   EQU   CLOSEIO
CSERLOG  EQU   CLOSEIO
CEREPPT  EQU   CLOSEIO
CTOURIST EQU   CLOSEIO
OSNAP    EQU   OPENIO
ODRCTWRK EQU   OPENIO
OSYSIN   EQU   OPENIO
OACCDEV  EQU   OPENIO
OACCIN   EQU   OPENIO
OSERLOG  EQU   OPENIO
OEREPPT  EQU   OPENIO
OTOURIST EQU   OPENIO
PLOGREC  EQU   MISC
ERRORID  EQU   MISC
PSUM     EQU   PRINTES
PEDIT    EQU   PRINTES
PZERO    EQU   MISC
DEBUG63  EQU   DEBUGA+3
DEBUG62  EQU   DEBUGA+3
DEBUG61  EQU   DEBUGA+3
DEBUG60  EQU   DEBUGA+3
DEBUG59  EQU   DEBUGA+3
DEBUG58  EQU   DEBUGA+3
DEBUG57  EQU   DEBUGA+3
DEBUG56  EQU   DEBUGA+3
DEBUG55  EQU   DEBUGA+2
DEBUG54  EQU   DEBUGA+2
DEBUG53  EQU   DEBUGA+2
DEBUG52  EQU   DEBUGA+2
DEBUG51  EQU   DEBUGA+2
DEBUG49  EQU   DEBUGA+2
DEBUG48  EQU   DEBUGA+2
DEBUG47  EQU   DEBUGA+1
DEBUG46  EQU   DEBUGA+1
DEBUG45  EQU   DEBUGA+1
DEBUG44  EQU   DEBUGA+1
DEBUG43  EQU   DEBUGA+1
DEBUG42  EQU   DEBUGA+1
DEBUG41  EQU   DEBUGA+1
DEBUG40  EQU   DEBUGA+1
DEBUG39  EQU   DEBUGA
DEBUG38  EQU   DEBUGA
DEBUG37  EQU   DEBUGA
DEBUG36  EQU   DEBUGA
DEBUG35  EQU   DEBUGA
DEBUG34  EQU   DEBUGA
DEBUG33  EQU   DEBUGA
DEBUG32  EQU   DEBUGA
DEBUG31  EQU   DEBUG+3
DEBUG30  EQU   DEBUG+3
DEBUG29  EQU   DEBUG+3
DEBUG28  EQU   DEBUG+3
DEBUG27  EQU   DEBUG+3
DEBUG26  EQU   DEBUG+3
DEBUG25  EQU   DEBUG+3
DEBUG24  EQU   DEBUG+3
DEBUG22  EQU   DEBUG+2
DEBUG21  EQU   DEBUG+2
DEBUG20  EQU   DEBUG+2
DEBUG19  EQU   DEBUG+2
DEBUG18  EQU   DEBUG+2
DEBUG17  EQU   DEBUG+2
DEBUG15  EQU   DEBUG+1
DEBUG14  EQU   DEBUG+1
DEBUG13  EQU   DEBUG+1
DEBUG12  EQU   DEBUG+1
DEBUG10  EQU   DEBUG+1
DEBUG9   EQU   DEBUG+1
DEBUG8   EQU   DEBUG+1
DEBUG7   EQU   DEBUG
DEBUG6   EQU   DEBUG
DEBUG5   EQU   DEBUG
DEBUG3   EQU   DEBUG
DEBUG2   EQU   DEBUG
DEBUG1   EQU   DEBUG
DEBUG0   EQU   DEBUG
SORTBRK  EQU   SWITCHES+1
COREFAIL EQU   SWITCHES+1
ANALYSIS EQU   SWITCHES+1
NOTALL   EQU   SWITCHES+1
NOSDR    EQU   SWITCHES
TIMESEQ  EQU   SWITCHES
SYSUM    EQU   SWITCHES
PARMTHR  EQU   SWITCHES
TREND    EQU   SWITCHES
SHORTOBR EQU   SWITCHES
PARMMES  EQU   SWITCHES
RDESUM   EQU   SWITCHES
PCCHFRAM EQU   RECTYPE+1
PMCHFRAM EQU   RECTYPE+1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00445 EQU   @EL00006
@RF00473 EQU   @EL00007
@RF00496 EQU   @RC00494
@RF00511 EQU   @RC00509
@RF00530 EQU   @EL00008
@RF00551 EQU   @EL00009
@RF00563 EQU   @EL00010
@RC00567 EQU   @EL00011
@RC00573 EQU   @EL00011
@RC00579 EQU   @EL00011
@RC00585 EQU   @EL00011
@RC00591 EQU   @EL00011
@RF00597 EQU   @EL00011
@RF00611 EQU   @EL00012
@RC00609 EQU   @EL00012
@RF00631 EQU   @RC00629
@RF00716 EQU   @RC00707
@RF00789 EQU   @EL00014
@RF00792 EQU   @EL00014
@RC00799 EQU   @EL00015
@RC00812 EQU   @EL00016
@RC00815 EQU   @EL00016
@RC00821 EQU   @EL00016
@RC00824 EQU   @EL00016
@RC00827 EQU   @EL00016
@RC00830 EQU   @EL00016
@RC00833 EQU   @EL00016
@RC00836 EQU   @EL00016
@RC00839 EQU   @EL00016
@RC00857 EQU   @RC00855
@RC00887 EQU   @RC00882
@RC00930 EQU   @EL00018
@RC00949 EQU   @EL00019
@RF00965 EQU   @EL00019
@RF00969 EQU   @EL00019
@RC00975 EQU   @EL00020
@RF00982 EQU   @EL00020
@RF00986 EQU   @EL00020
@RC00988 EQU   @EL00020
@RC00991 EQU   @EL00020
@RC01020 EQU   @EL00021
@RF01028 EQU   @EL00021
@RF01035 EQU   @EL00021
@RC01042 EQU   @EL00022
@RF01050 EQU   @EL00022
@RF01057 EQU   @EL00022
@RC01065 EQU   @EL00023
@RF01073 EQU   @EL00023
@RF01076 EQU   @EL00023
@RF01113 EQU   @EL00023
@RC01130 EQU   @EL00024
@RF01134 EQU   @EL00024
@RC01143 EQU   @EL00025
@RC01149 EQU   @EL00026
@RF01153 EQU   @EL00026
@RF01157 EQU   @EL00026
@RC01173 EQU   @EL00027
@RF01177 EQU   @EL00027
@RC01212 EQU   @EL00028
@RC01185 EQU   @EL00028
@RF01230 EQU   @EL00028
@RF01243 EQU   @EL00029
@RC01376 EQU   @RC01374
@RF01394 EQU   @EL00034
@RF01436 EQU   @RC01399
@RF01472 EQU   @EL00036
@RC01485 EQU   @EL00037
@PB00037 EQU   @EL00001
@RC00801 EQU   @RC00799
@RF00940 EQU   @RC00930
@RF00995 EQU   @RC00991
@RC01187 EQU   @RC01185
@RF01205 EQU   @RC01185
@PB00036 EQU   @PB00037
@RC01487 EQU   @RC01485
@RC01499 EQU   @RC01485
@RF00803 EQU   @RC00801
@PB00035 EQU   @PB00036
@RF01492 EQU   @RC01487
@RC01502 EQU   @RC01499
@PB00034 EQU   @PB00035
@RF01506 EQU   @RC01502
@RF01508 EQU   @RC01502
@RC01510 EQU   @RC01502
@RC01517 EQU   @RC01502
@PB00033 EQU   @PB00034
@PB00032 EQU   @PB00033
@PB00031 EQU   @PB00032
@PB00030 EQU   @PB00031
@PB00029 EQU   @PB00030
@PB00028 EQU   @PB00029
@PB00027 EQU   @PB00028
@PB00026 EQU   @PB00027
@PB00025 EQU   @PB00026
@PB00024 EQU   @PB00025
@PB00023 EQU   @PB00024
@PB00022 EQU   @PB00023
@PB00021 EQU   @PB00022
@PB00020 EQU   @PB00021
@PB00019 EQU   @PB00020
@PB00018 EQU   @PB00019
@PB00017 EQU   @PB00018
@PB00016 EQU   @PB00017
@PB00015 EQU   @PB00016
@PB00014 EQU   @PB00015
@PB00013 EQU   @PB00014
@PB00012 EQU   @PB00013
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@RF00241 EQU   @PB00002
@ENDDATA EQU   *
         END   IFCFILT3
