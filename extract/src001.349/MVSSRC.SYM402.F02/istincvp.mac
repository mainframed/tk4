SVTM     TITLE 'ISTINCVP VARY PENDING PROCESSOR                        *
                        '
ISTINCVP CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTINCVP  78.152'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  LA    @12,4095(,@11)                                      0001
         LA    @10,4095(,@12)                                      0001
         USING @PSTART,@11                                         0001
         USING @PSTART+4095,@12                                    0001
         USING @PSTART+8190,@10                                    0001
            EJECT
 USING @DATD,CVPWKPTR
*   DO;                                                            0779
*                                                                  0779
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(SUB)RPHADD((CVPINPUT->NCS
*LRPH))  **                                                          */
*/* ATBUILD (ISTRPH,ISTCRA,ISTPFCRR,ISTVYCRR)                        */
*                                                                  0780
*     RFY                                                          0780
*       ISTZSAVE;                                                  0780
*     RFY                                                          0781
*       ISTCFCRR;                                                  0781
*     RFY                                                          0782
*       ISTZCRR;                                                   0782
*     RFY                                                          0783
*       ISTASCRR;                                                  0783
*     RFY                                                          0784
*       ISTAPCRR;                                                  0784
*     RFY                                                          0785
*       ISTCRA;                                                    0785
*                                                                  0785
*/* END OF ATBUILD                                                   */
*/*  ** SET ENTERED BIT FOR THIS PROCEDURE **                        */
*                                                                  0786
*     CVPINPUT->NCSPLRPH->RPHCRR->CRACRR->NINCVP='1'B;             0786
*                                                                  0786
         L     @04,NCSPLRPH(,CVPINPUT)                             0786
         L     @04,RPHCRR(,@04)                                    0786
         L     @04,CRACRR(,@04)                                    0786
         OI    NINCVP(@04),B'00001000'                             0786
*/*  ** CLEAR AND SET CURRENT PROCEDURE BIT **                       */
*                                                                  0787
*     CVPINPUT->NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;             0787
         XC    VYCCRT+1(11,@04),VYCCRT+1(@04)                      0787
         MVI   VYCCRT(@04),B'00000000'                             0787
*     CVPINPUT->NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;             0788
         OI    CINCVP(@04),B'00001000'                             0788
*   END;                                                           0789
*   CVPSAVE=CVPSAVE-SAVECONS;       /* BACK UP SAVE AREA PTR         */
         LA    @04,72                                              0790
         SLR   CVPSAVE,@04                                         0790
*   CALLERAD=ADDR(CALLSAVE);        /* SET UP CALLER SAVE ADD        */
         ALR   @04,CVPSAVE                                         0791
         ST    @04,CALLERAD(,CVPSAVE)                              0791
*   CVPAREA=ADDR(AREASAVE);         /* SET UP CVP SAVE ADD           */
         ST    CVPSAVE,CVPAREA(,@04)                               0792
*   CVPWKPTR=CVPINPUT->NCSPLWKA->NXTAVPTR;/* SET UP @DATD          0793
*                                      ADDRESSABILITY                */
         L     @03,NCSPLWKA(,CVPINPUT)                             0793
         L     CVPWKPTR,NXTAVPTR(,@03)                             0793
*   CVPNCSPL=CVPINPUT;              /* SAVE NCSPL PTR                */
         ST    CVPINPUT,CVPNCSPL                                   0794
*   CVPWKPT1=NCSPLRPT;                                             0795
         L     @04,CVPNCSPL                                        0795
         L     @03,NCSPLRPT(,@04)                                  0795
         ST    @03,CVPWKPT1                                        0795
*   NXTAVPTR=NXTAVPTR+@SIZDATD;     /* UPDATE NEXT AVAILABLE         */
         L     @04,NCSPLWKA(,@04)                                  0796
         L     @09,NXTAVPTR(,@04)                                  0796
         AL    @09,@SIZDATD                                        0796
         ST    @09,NXTAVPTR(,@04)                                  0796
*   NXTAVPTR=NXTAVPTR+(CVPDWORD-(NXTAVPTR//CVPDWORD));             0797
         LR    @06,@09                                             0797
         SRDA  @06,32                                              0797
         D     @06,@CF00099                                        0797
         LCR   @06,@06                                             0797
         AL    @06,@CF00099                                        0797
         ALR   @09,@06                                             0797
         ST    @09,NXTAVPTR(,@04)                                  0797
*   CVPSWICH=CVPSWICH&&CVPSWICH;    /* CLEAR ALL SWITCHES            */
         XC    CVPSWICH(2),CVPSWICH                                0798
*   CVPSUBRN=NCSPLRPT;              /*                       @DC36143*/
         ST    @03,CVPSUBRN                                        0799
*   IF NCSPLRPT->RPRVRYPD='1'B×NCSPLRPT->RPRHLVPD='1'B THEN        0800
         TM    RPRVRYPD(@03),B'00000010'                           0800
         BO    @RT00800                                            0800
         TM    RPRHLVPD(@03),B'00000100'                           0800
         BNO   @RF00800                                            0800
@RT00800 DS    0H                                                  0801
*     NCSPLSID=RPRCONID;            /*                       @D402600*/
         L     @04,CVPNCSPL                                        0801
         L     @03,CVPWKPT1                                        0801
         MVC   NCSPLSID(9,@04),RPRCONID(@03)                       0801
*   ELSE                                                           0802
*     ;                                                            0802
@RF00800 DS    0H                                                  0803
*   IF NCSPL2IN='1'B THEN                                          0803
         L     @04,CVPNCSPL                                        0803
         TM    NCSPL2IN(@04),B'10000000'                           0803
         BNO   @RF00803                                            0803
*     DO;                           /*                       @DC36143*/
*       IF NCSPLVIS='1'B&NCSVBF12='1'B/* V.IMM AND INTERNAL ONLY     */
*         THEN                                                     0805
         TM    NCSPLVIS(@04),B'00000010'                           0805
         BNO   @RF00805                                            0805
         TM    NCSVBF12(@04),B'00010000'                           0805
         BNO   @RF00805                                            0805
*         DO;                       /*                       @DC36143*/
*           CALL CVPDEAC;           /*                       @DC36143*/
         BAL   @14,CVPDEAC                                         0807
*         END;                      /*                       @DC36143*/
*       ELSE                                                       0809
*         DO;                       /*                       @DC36143*/
         B     @RC00805                                            0809
@RF00805 DS    0H                                                  0810
*           CALL CVPHEADP;          /*                       @DC36143*/
         BAL   @14,CVPHEADP                                        0810
*           CVPMSG#='105I';         /*                       @DC36143*/
         MVC   CVPMSG#(4),@CC05831                                 0811
*           CVPRID=ADDR(NCSPLRID);  /*                       @DC36143*/
         L     @04,CVPNCSPL                                        0812
         LA    @04,NCSPLRID(,@04)                                  0812
         ST    @04,CVPRID                                          0812
*           CALL CVPWTO;            /*                       @DC36143*/
         BAL   @14,CVPWTO                                          0813
*         END;                      /*                       @DC36143*/
*     END;                          /*                       @DC36143*/
*   ELSE                                                           0816
*     DO;                           /*                       @DC36143*/
         B     @RC00803                                            0816
@RF00803 DS    0H                                                  0817
*/* SEGMENT(CVPPR01)REQUEST                                          */
*                                                                  0817
*       DO;                                                        0817
*         GOTO CVPPR01;                                            0818
         B     CVPPR01                                             0818
*CVPPR01#:                                                         0819
*       END;                                                       0819
*                                                                  0819
CVPPR01# DS    0H                                                  0820
*/********************************************************************
*                                                                    */
*/*   CVPPR01 IS GIVEN CONTROL BY MAINLINE TO PROCESS THE VARIOUS    */
*/* ENTRIES TO ISTINCVP:                                             */
*/*      1. CALLER IS ISTINCVI FOR VARY IMMEDIATE INITIALIZATION     */
*/*      2. CALLER IS ISTINCVI FOR VARY TERMINATION                  */
*/*      3. CALLER IS ISTINCVI TO PROCESS PU RDTE                    */
*/*      4. CALLER IS ISTINCSM FOR VARY NORMAL CLEANUP(VARY PENDING) */
*/*   IF THE CALLER IS VARY IMMEDAITE INITIALIZATION, CVPLIN IS      */
*/* CALLED TO DEACTIVATE THE 370X.                                   */
*/*   IF NOT VARY IMMEDIATE INITIALIZATION, CLOSE VARY PENDING BIT IS*/
*/* TURNED OFF(RPRCLVPD)                                             */
*/*   IF THE ENTRY IS AN LCDI, THE PEP COUNT IS DECREMENTED. IF THE  */
*/* PEP COUNT IS NOT 0, CVPPR01 RETURNS.                             */
*/*   OTHERWISE, CVPSCAN IS CALLED TO PROCESS THE ENTRY. UPON RETURN */
*/* FROM CVPSCAN IF THE SKIP HEAD SWITCH IS ON, A MSG IS ISSUED TO   */
*/* INDICATE HEADER HAS BEEN DEACTIVATED. IF THE SKIP HEAD SWITCH    */
*/* IS NOT SET AND VARY PENDING IS SET FOR THE ENTRY, A MSG IS PUT   */
*/* OUT INDICATING THE ENTRY IS NOW OFFLINE & THE VARY PENDING FLAG  */
*/* IS CLEARED.                                                      */
*/*   IF THE ENTRY IS AN LCDI & THE CTERM PORTION IS VARY PENDING,   */
*/* HIGHER LEVEL VARY PENDING IN THE CTERM IS TURNED OFF & A MSG     */
*/* ISSUED.                                                          */
*/*   THE VARY IMMEDIATE FLAG IS TURNED OFF. IF HIGHER LEVEL VARY    */
*/* PENDING IS SET, THE HIGHER LEVEL VARY PENDING FLAG IS TURNED OFF.*/
*/* THE NEXT HIGHER NODE IS NOW PROCESSED BY GETTING ITS NSNEA. IF   */
*/* VARY PENDING IS NOT SET, CVPPR01 EXITS.                          */
*/********************************************************************
*                                                                    */
*                                                                  0820
*       IF NCSPLVIS^=CVPON THEN                                    0820
         L     @04,CVPNCSPL                                        0820
         TM    NCSPLVIS(@04),B'00000010'                           0820
         BO    @RF00820                                            0820
*         NCSVDEL=CVPON;            /* IF VARY IMM INIT TURN ON NCSPL
*                                      DELETE FLAG                   */
         OI    NCSVDEL(@04),B'01000000'                            0821
*     END;                          /*                       @DC36143*/
@RF00820 DS    0H                                                  0823
*   NXTAVPTR=CVPWKPTR;              /* RESTORE NEXT AVAILABLE PTR    */
@RC00803 L     @04,CVPNCSPL                                        0823
         L     @04,NCSPLWKA(,@04)                                  0823
         ST    CVPWKPTR,NXTAVPTR(,@04)                             0823
*   CVPSAVE=CALLERAD;                                              0824
         L     CVPSAVE,CALLERAD(,CVPSAVE)                          0824
*   GEN(   EJECT);                                                 0825
            EJECT
*CVPCLOSE:                                                         0826
*   PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);                        0826
*                                                                  0826
         B     @PB00002                                            0826
CVPCLOSE DS    0H                                                  0827
*/********************************************************************/
*/* THIS ROUTINE IS CALLED BY CVPHEADP,CVPSCAN,AND CVPLCLPR          */
*/* TO CLOSE THE NODE REPRESENTED BY THE RDT ENTRY POINTED TO BY     */
*/* CVPWKPT1.                                                        */
*/********************************************************************/
*                                                                  0827
*   CVPCLSAV=CVPRTNAD;                                             0827
         ST    CVPRTNAD,CVPCLSAV                                   0827
*   RFY                                                            0828
*    (ISTRPRE,                                                     0828
*     ISTRLN) BASED(CVPWKPT1);                                     0828
*   NCSPLRAD=CVPWKPT1;              /*                       @D32CKLV*/
         L     @04,CVPNCSPL                                        0829
         L     @03,CVPWKPT1                                        0829
         ST    @03,NCSPLRAD(,@04)                                  0829
*   CVPINPUT=CVPNCSPL;              /*                       @D32CKLV*/
         LR    CVPINPUT,@04                                        0830
*   CALL ISTINCX9;                  /* DO CLSDST             @D32CKLV*/
         L     @15,@CV05804                                        0831
         BALR  @14,@15                                             0831
*   DO;                                                            0832
*                                                                  0832
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*/* ** CLEAR AND SET CURRENT PROCEDURE BIT **                        */
*                                                                  0833
*     NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;                       0833
         L     @04,CVPNCSPL                                        0833
         L     @04,NCSPLRPH(,@04)                                  0833
         L     @04,RPHCRR(,@04)                                    0833
         L     @04,CRACRR(,@04)                                    0833
         XC    VYCCRT+1(11,@04),VYCCRT+1(@04)                      0833
         MVI   VYCCRT(@04),B'00000000'                             0833
*     NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;                       0834
         OI    CINCVP(@04),B'00001000'                             0834
*   END;                                                           0835
*   IF CVPRTNCD=0                   /* IS CLSDST SUCCESSFUL ?        */
*     THEN                                                         0836
         LTR   CVPRTNCD,CVPRTNCD                                   0836
         BZ    @RT00836                                            0836
*     ;                             /* OK, NO-OP             @D32CKLV*/
*   ELSE                                                           0838
*     DO;                           /*                       @D32CKLV*/
*       IF RPRENTRY=RPRENTLN&RLNPORT=CVPON THEN                    0839
         L     @04,CVPWKPT1                                        0839
         CLI   RPRENTRY(@04),X'50'                                 0839
         BNE   @RF00839                                            0839
         TM    RLNPORT(@04),B'00010000'                            0839
         BO    @RT00839                                            0839
*         ;                         /* LCDI?                         */
*       ELSE                                                       0841
*         DO;                                                      0841
@RF00839 DS    0H                                                  0842
*           CVPMSG#='622I';                                        0842
         MVC   CVPMSG#(4),@CC05842                                 0842
*           CVPRID=ADDR(RPRNAME);   /* SET UP MSG DATA               */
         L     @04,CVPWKPT1                                        0843
         ST    @04,CVPRID                                          0843
*           CALL CVPWTO;                                           0844
         BAL   @14,CVPWTO                                          0844
*         END;                                                     0845
*     END;                          /*                       @D32CKLV*/
@RT00839 DS    0H                                                  0847
*   IF(RPRENTRY=RPRENTLU&NCSPLRPT->RPRENTRY=RPRENTCC)×(RPRENTRY=   0847
*       RPRENTTR&DEVSUBND='1'B)×    /* DUMMY TR              @D32CKLV*/
*       (RPRENTRY=RPRENTLC)×        /*                       @D32CKLV*/
*       (NCSPLRPT->RPRENTRY=RPRENTCC&RCCRESET='1'B)×/*       @D32CKLV*/
*       (RPRENTRY=RPRENTLU&RPRHDTYP=RPRENTSW&/*              @ZA10412*/
*       (RPRVRYPD='0'B&RPRNSNEA->RCCRESET='1'B))×/*          @ZA10412*/
*       (RPRENTRY=RPRENTCC&RPRHDTYP=RPRENTSW&RCCRESET='1'B)/*      0847
*                                                            @ZA10412*/
*     THEN                                                         0847
@RT00836 L     @04,CVPWKPT1                                        0847
         CLI   RPRENTRY(@04),X'81'                                 0847
         BNE   @GL00008                                            0847
         L     @04,CVPNCSPL                                        0847
         L     @04,NCSPLRPT(,@04)                                  0847
         CLI   RPRENTRY(@04),X'71'                                 0847
         BE    @RT00847                                            0847
@GL00008 L     @04,CVPWKPT1                                        0847
         CLI   RPRENTRY(@04),X'80'                                 0847
         BNE   @GL00007                                            0847
         TM    DEVSUBND+44(@04),B'00010000'                        0847
         BO    @RT00847                                            0847
@GL00007 L     @04,CVPWKPT1                                        0847
         CLI   RPRENTRY(@04),X'45'                                 0847
         BE    @RT00847                                            0847
         L     @03,CVPNCSPL                                        0847
         L     @03,NCSPLRPT(,@03)                                  0847
         CLI   RPRENTRY(@03),X'71'                                 0847
         BNE   @GL00005                                            0847
         TM    RCCRESET(@04),B'00000100'                           0847
         BO    @RT00847                                            0847
@GL00005 L     @04,CVPWKPT1                                        0847
         CLI   RPRENTRY(@04),X'81'                                 0847
         BNE   @GL00004                                            0847
         CLI   RPRHDTYP(@04),X'04'                                 0847
         BNE   @GL00004                                            0847
         TM    RPRVRYPD(@04),B'00000010'                           0847
         BNZ   @GL00004                                            0847
         L     @04,RPRNSNEA(,@04)                                  0847
         TM    RCCRESET(@04),B'00000100'                           0847
         BO    @RT00847                                            0847
@GL00004 L     @04,CVPWKPT1                                        0847
         CLI   RPRENTRY(@04),X'71'                                 0847
         BNE   @RF00847                                            0847
         CLI   RPRHDTYP(@04),X'04'                                 0847
         BNE   @RF00847                                            0847
         TM    RCCRESET(@04),B'00000100'                           0847
         BO    @RT00847                                            0847
*     ;                             /*                       @D32CKLV*/
*   ELSE                                                           0849
*     DO;                           /* UPDATE LINE C/R DATA SET    0849
*                                                            @X50BHLV*/
@RF00847 DS    0H                                                  0850
*       IF RPRENTRY=RPRENTLN&RLNPORT='1'B/*                  @X50BHLV*/
*         THEN                                                     0850
         L     @04,CVPWKPT1                                        0850
         CLI   RPRENTRY(@04),X'50'                                 0850
         BNE   @RF00850                                            0850
         TM    RLNPORT(@04),B'00010000'                            0850
         BNO   @RF00850                                            0850
*         DO;                       /*                       @X50BHLV*/
*           NCSPACTV='1'B;          /*                       @X50BHLV*/
         L     @04,CVPNCSPL                                        0852
         OI    NCSPACTV(@04),B'01000000'                           0852
*           NCSPTMOD='0'B;          /*                       @X50BHLV*/
         NI    NCSPTMOD(@04),B'10111111'                           0853
*         END;                      /*                       @X50BHLV*/
*       ELSE                                                       0855
*         DO;                       /* ITS NOT A PORT        @X50BHLV*/
         B     @RC00850                                            0855
@RF00850 DS    0H                                                  0856
*           NCSACTV='1'B;           /*                       @X50BHLV*/
         L     @04,CVPNCSPL                                        0856
         OI    NCSACTV(@04),B'10000000'                            0856
*           NCSAIMOD='0'B;          /*                       @X50BHLV*/
         NI    NCSAIMOD(@04),B'01111111'                           0857
*         END;                      /*                       @X50BHLV*/
*       CALL CVPCRIO;               /*                       @X50BHLV*/
@RC00850 BAL   @14,CVPCRIO                                         0859
*     END;                          /*                       @X50BHLV*/
*   CVPRTNAD=CVPCLSAV;                                             0861
@RT00847 L     CVPRTNAD,CVPCLSAV                                   0861
*   END CVPCLOSE;                                                  0862
@EL00002 DS    0H                                                  0862
@EF00002 DS    0H                                                  0862
@ER00002 BR    @14                                                 0862
@PB00002 DS    0H                                                  0863
*   GEN(  EJECT);                                                  0863
           EJECT
*CVPWTO:                                                           0864
*   PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);                        0864
*                                                                  0864
         B     @PB00003                                            0864
CVPWTO   DS    0H                                                  0865
*/********************************************************************/
*/* THIS ROUTINE IS CALLED TO ISSUE THE MESSAGE WHOSE IDENTIFICATION */
*/* IS SET IN CVPMSG# WITHIN THE WORK AREA. TPMSG IS INVOKED TO ISSUE*/
*/* THE MESSAGE, WITH AN INDICATION THAT THE TPMSG PARAMETER LIST    */
*/* IS TO BE BUILT IN THE NEXT AVAILABLE SPACE IN THE WORK AREA      */
*/* (PLAREA PARAMETER).                                              */
*/********************************************************************/
*                                                                  0865
*   CVPWTOSV=CVPRTNAD;                                             0865
         ST    CVPRTNAD,CVPWTOSV                                   0865
*   CVPR2=ADDR(CVPMSG#);                                           0866
         LA    CVPR2,CVPMSG#                                       0866
*   CVPOPT=ADDR(NCSPLSID);                                         0867
         L     @04,CVPNCSPL                                        0867
         LA    @04,NCSPLSID(,@04)                                  0867
         ST    @04,CVPOPT                                          0867
*   CVPWORKR=ADDR(CVPMSGPL);                                       0868
*                                                                  0868
         LA    @03,CVPMSGPL                                        0868
         ST    @03,CVPWORKR                                        0868
*/*TPMSG MSGID((CVPR2))MSG((CVPRID))OPTIONS((CVPOPT))PLAREA((CVPWORKR))
*                                                                    */
*                                                                  0869
*   DO;                                                            0869
*     DCL                                                          0870
*       REG1025 REG(1) PTR;                                        0870
*     RFY                                                          0871
*      (REG1025) RSTD;                                             0871
*     RFY                                                          0872
*      (EMCR13) RSTD;                                              0872
*     DCL                                                          0873
*       1 * BASED(REG1025),                                        0873
*        2 CMZID025 PTR(31),                                       0873
*        2 *,                                                      0873
*         3 CMZRL025 PTR(8),                                       0873
*         3 CMZRA025 PTR(24) BDY(BYTE),                            0873
*        2 CMZEA025 PTR(31),                                       0873
*        2 CMZVP025 PTR(31);                                       0873
*                                                                  0873
*/*XREGSET  PID('PLAREA')PPARM((CVPWORKR))RREG(,REG1025)             */
*                                                                  0874
*     DO;                                                          0874
*       REG1025=CVPWORKR;           /* SET RREG SYMBOL TO VALUE OF 0875
*                                      PPARM OPERAND                 */
         LR    REG1025,@03                                         0875
*     END;                          /* XREGSET                       */
*     CMZID025=0;                                                  0877
         SLR   @03,@03                                             0877
         ST    @03,CMZID025(,REG1025)                              0877
*     CMZRL025=0;                                                  0878
         MVI   CMZRL025(REG1025),X'00'                             0878
*     CMZRA025=0;                                                  0879
         STCM  @03,7,CMZRA025(REG1025)                             0879
*     CMZEA025=0;                                                  0880
         ST    @03,CMZEA025(,REG1025)                              0880
*     CMZVP025=0;                                                  0881
         ST    @03,CMZVP025(,REG1025)                              0881
*     CMZID025=CVPR2;                                              0882
         ST    CVPR2,CMZID025(,REG1025)                            0882
*     CMZVP025=CVPRID;                                             0883
         L     @03,CVPRID                                          0883
         ST    @03,CMZVP025(,REG1025)                              0883
*     DCL                                                          0884
*       CMZSA025(18) PTR(31) BASED(EMCR13);                        0884
*     CMZSA025(5)=CVPOPT;                                          0885
         ST    @04,CMZSA025+16(,EMCR13)                            0885
*     DCL                                                          0886
*       REG15025 REG(15) PTR;                                      0886
*     RFY                                                          0887
*       REG15025 RSTD;                                             0887
*     DO;                           /* LISATCVT                    0888
*                                      CVTBASE(PAGEABLE,(REG15025))  */
*       REG15025=ATCLCPTR;          /* SET UP ATCVT POINTER          */
         L     REG15025,ATCLCPTR                                   0889
*     END;                          /* LISATCVT                      */
*     DCL                                                          0891
*       CMTA025 BASED(REG15025) ENTRY VALUERANGE(*);               0891
*     REG15025=REG15025->ATCMSGP;                                  0892
         L     REG15025,ATCMSGP(,REG15025)                         0892
*     CALL CMTA025;                                                0893
         BALR  @14,@15                                             0893
*     RESPECIFY                                                    0894
*      (REG1025,                                                   0894
*       REG15025) UNRESTRICTED;                                    0894
*     RFY                                                          0895
*      (EMCR13) UNRSTD;                                            0895
*   END;                                                           0896
*   CVPRTNAD=CVPWTOSV;                                             0897
         L     CVPRTNAD,CVPWTOSV                                   0897
*   END CVPWTO;                                                    0898
@EL00003 DS    0H                                                  0898
@EF00003 DS    0H                                                  0898
@ER00003 BR    @14                                                 0898
@PB00003 DS    0H                                                  0899
*   GEN(   EJECT);                                                 0899
            EJECT
*CVPDOIO:                                                          0900
*   PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);                        0900
*                                                                  0900
         B     @PB00004                                            0900
CVPDOIO  DS    0H                                                  0901
*/********************************************************************
*                                                                    */
*/*   CVPDOIO IS ISTINCVP'S INTERFACE SUBROUTINE TO ISTINCIO, THE    */
*/* SSCP I/O ROUTINE. ISTINCIO IS CALLED WITH THE NCSPL IN REG 1, THE*/
*/* NCB PTR IN REG 2, SAVE AREA IN REG 13 & THE DAF LOCK HELD.       */
*/* ISTINCIO WILL RELEASE THE DAF LOCK.                              */
*/********************************************************************
*                                                                    */
*                                                                  0901
*   CVPIOSAV=CVPRTNAD;              /* SAVE RETURN @                 */
         ST    CVPRTNAD,CVPIOSAV                                   0901
*   CVPINPUT=NCSPLRPH;              /* SET UP RPH TO REG 1           */
         L     @04,CVPNCSPL                                        0902
         L     CVPINPUT,NCSPLRPH(,@04)                             0902
*   CVPR2=NCSPLCID;                 /* SET UP CID IN REG 2           */
         L     CVPR2,NCSPLCID(,@04)                                0903
*   DO;                             /* CIDCTL(FIND)                  */
*     RFY                                                          0905
*      (EMCR2,                                                     0905
*       EMCR3) RSTD;                                               0905
*     GEN SETS(RPHWORK)                                            0906
*         (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);     0906
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*     EMCR3='00'X;                  /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         0907
*     EMCR3='01'X;                  /* INDICATE SHARED LOCK          */
         LA    EMCR3,1                                             0908
*     CALL ATCLCPTR->ATCCDFND->ISTSDCCF;/* PROCESS REQUEST           */
         L     @04,ATCLCPTR                                        0909
         L     @15,ATCCDFND(,@04)                                  0909
         BALR  @14,@15                                             0909
*     RFY                                                          0910
*      (EMCR2,                                                     0910
*       EMCR3) UNRSTD;                                             0910
*   END;                            /* CIDCTL GET DAF LOCK SHARED FOR
*                                      CIO                           */
*   IF CVPRTNCD=0                   /*                       @ZA30081*/
*     THEN                          /*                       @ZA30081*/
         LTR   CVPRTNCD,CVPRTNCD                                   0912
         BNZ   @RF00912                                            0912
*     DO;                           /*                       @ZA30081*/
*       CVPR2=CVPR0;                /* PUT NCB @ IN REG 2 FOR      0914
*                                      ISTINCIO                      */
         LR    CVPR2,CVPR0                                         0914
*       CVPINPUT=CVPNCSPL;          /* SET UP REG 1 TO NCSPL FOR CIO */
         L     CVPINPUT,CVPNCSPL                                   0915
*       CALL ISTINCIO;              /* ISSUE I/O                     */
         L     @15,@CV05800                                        0916
         BALR  @14,@15                                             0916
*       DO;                                                        0917
*                                                                  0917
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*/* ** CLEAR AND SET CURRENT PROCEDURE BIT **                        */
*                                                                  0918
*         NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;                   0918
         L     @04,CVPNCSPL                                        0918
         L     @04,NCSPLRPH(,@04)                                  0918
         L     @04,RPHCRR(,@04)                                    0918
         L     @04,CRACRR(,@04)                                    0918
         XC    VYCCRT+1(11,@04),VYCCRT+1(@04)                      0918
         MVI   VYCCRT(@04),B'00000000'                             0918
*         NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;                   0919
         OI    CINCVP(@04),B'00001000'                             0919
*       END;                                                       0920
*     END;                          /*                       @ZA30081*/
*   CVPRTNAD=CVPIOSAV;              /* RESTORE RETURN @              */
@RF00912 L     CVPRTNAD,CVPIOSAV                                   0922
*   END CVPDOIO;                                                   0923
@EL00004 DS    0H                                                  0923
@EF00004 DS    0H                                                  0923
@ER00004 BR    @14                                                 0923
@PB00004 DS    0H                                                  0924
*   GEN(   EJECT);                                                 0924
*                                                                  0924
            EJECT
*/* SEGMENT(CVPSCAN)START                                            */
*                                                                  0925
*   DO;                                                            0925
*     GOTO CVPSCAN@;                                               0926
         B     CVPSCAN@                                            0926
*CVPSCAN:                                                          0927
*   END;                                                           0927
*                                                                  0927
CVPSCAN  DS    0H                                                  0928
*/********************************************************************/
*/* THIS ROUTINE IS CALLED BY CVPVPRO1 TO COMPLETE VARY              */
*/* PENDING CLEANUP PROCESSING FOR THE RDT ENTRY POINTED TO BY       */
*/* CVPWKPT1.                                                        */
*/*   CVPSCAN IS THE SUBROUTINE WHICH PROCESSES EACH ENTRY IN THE RDT*/
*/* FOR ISTINCVP. THE ENTRIES ARE AS FOLLOWS:                        */
*/*   1. OLD PU OR DUMMY TERMINAL - IF VARY PENDING IS SET IN        */
*/*      THE ENTRY OR IN THE RN ENTRY, THE SESSION IS CLOSED & ONLINE*/
*/*      & LIVE BITS TURNED OFF.                                     */
*/*   2. TERMINAL - IF NSNEA IS AN LC, THE TERMINAL IS MARKED OFFLINE*/
*/*      & NOT LIVE & CVPLCLP CALLED TO PROCESS THE LC. ON RETURN    */
*/*      ONLINE & LIVE IN THE LC ARE TURNED OFF                      */
*/*   3. U-TERM OR COMPONENT - IF VARY PENDING IS SET, ONLINE & LIVE */
*/*      ARE TURNED OFF.                                             */
*/*   4. LCDO - ONLINE & LIVE TURNED OFF                             */
*/*   5. LINE - IF AN LCDI, SET CTERM NOT HIGHER LEVEL VARY PENDING  */
*/*      & RESET VYIMM IN CTERM. CALL CVPCLOSE TO CLOSE DOWN VARY'S  */
*/*      SESSION WITH THE PORT SOLICITOR. MARK THE CTERM OFFLINE &   */
*/*      NOT LIVE(RPTONLIN & RPRLIVE).                               */
*/*      IF VARY PENDING IS SET FOR THE ENTRY CALL CVPEPLN TO PROCESS*/
*/*      THE LINE & TURN OFF ONLINE & LIVE.                          */
*/*   6. RN OR LOCAL HEADER - CALL CVPHEADP TO PROCESS THE RDT HEADER*/
*/*      & TURN ON THE SKIP HEAD SWITCH.                             */
*/*   7. LU - CALL CVPDELOG TO DEACTIVATE LOGICAL UNIT, CALL CVPCLOSE*/
*/*      TO CLOSE DOWN VARY'S SESSION WITH THE LU, & MARK THE LU     */
*/*      ENTRY OFFLINE & NOT LIVE.                                   */
*/*   8. NEW PU - SAVE PU NAME IN NCSPLRID, CALL CVPSNCL TO          */
*/*      PROCESS THE NEW PU, AND TURN ON THE SKIP HEAD SWITCH        */
*/*   9. EVERYTHING ELSE - EXIT                                      */
*/*   10.LOCAL SUBAREA OR SWITHED SUBAREA - CALL CVPSUBS AND CVPHEADP*/
*/********************************************************************/
*                                                                  0928
*   RFY                                                            0928
*    (ISTRPRE,                                                     0928
*     ISTRLN,                                                      0928
*     ISTRPT,                                                      0928
*     ISTRLU) BASED(CVPWKPT1);      /*                       @VS41705*/
*/********************************************************************/
*/* FOR A PU WITH 'VARY PENDING' CALL CVPCLOSE TO CLOSE THE          */
*/* PU . RESET THE PU                                                */
*/* RDT ENTRY TO 'OFFLINE' (RPRONLIN='0'B) AND NOT 'LIVE'            */
*/* (RPRLIVE='0'B).                                                  */
*/********************************************************************/
*                                                                  0929
*   IF RPRENTRY=RPRENTCL×(RPRENTRY=RPRENTTR&DEVSUBND=CVPON) THEN   0929
         L     @04,CVPWKPT1                                        0929
         CLI   RPRENTRY(@04),X'70'                                 0929
         BE    @RT00929                                            0929
         CLI   RPRENTRY(@04),X'80'                                 0929
         BNE   @RF00929                                            0929
         TM    DEVSUBND+44(@04),B'00010000'                        0929
         BNO   @RF00929                                            0929
@RT00929 DS    0H                                                  0930
*     DO;                                                          0930
*       CVPWKPT3=CVPWKPT1;          /* GET RDTE @ IN WORK REG        */
         L     @04,CVPWKPT1                                        0931
         ST    @04,CVPWKPT3                                        0931
*       DO WHILE CVPWKPT3->RPRENTRY^=RPRENTRN;/* LOOK FOR RN SEG @   */
         B     @DE00932                                            0932
@DL00932 DS    0H                                                  0933
*         CVPWKPT3=CVPWKPT3->RPRNSNEA;                             0933
         L     @04,CVPWKPT3                                        0933
         L     @04,RPRNSNEA(,@04)                                  0933
         ST    @04,CVPWKPT3                                        0933
*       END;                                                       0934
*                                                                  0934
@DE00932 L     @04,CVPWKPT3                                        0934
         CLI   RPRENTRY(@04),X'01'                                 0934
         BNE   @DL00932                                            0934
*/*  *****************************************************************/
*/*   IF THE NODE IS A PU THAT IS NOT VARY PENDING AND THE RN        */
*/*   IS NOT VARY PENDING, THE ORIGINAL COMMAND MUST HAVE BEEN FOR   */
*/*   A LINE.  THEREFORE, A PURGE MUST BE ISSUED, UNLESS A VARY      */
*/*   INACTIVATE IMMEDIATE IS ALREADY IN PROGRESS FOR THIS PU,       */
*/*   SO THAT THE PU SOLICITOR WILL DROP THE POLL OF THE LINE        */
*/*   BEFORE THE DEACTIVATE LINK IS SENT OUT.                @XM97230*/
*/*  *****************************************************************/
*                                                                  0935
*       IF RPRVRYPD=CVPOFF&CVPWKPT3->RPRVRYPD=CVPOFF THEN/* IF NO VY
*                                      PD IN EITHER RDTE             */
         L     @03,CVPWKPT1                                        0935
         TM    RPRVRYPD(@03),B'00000010'                           0935
         BNZ   @RF00935                                            0935
         TM    RPRVRYPD(@04),B'00000010'                           0935
         BNZ   @RF00935                                            0935
*         IF RPRENTRY=RPRENTCL&RPRVYIMM=CVPOFF THEN                0936
         CLI   RPRENTRY(@03),X'70'                                 0936
         BNE   @RF00936                                            0936
         TM    RPRVYIMM(@03),B'00000010'                           0936
         BNZ   @RF00936                                            0936
*           DO;                     /*                       @XM97230*/
*             NCSIOCID=CVPSAF+RPRDAF;/*                      @XM97230*/
         L     @04,CVPNCSPL                                        0938
         LH    @09,RPRDAF(,@03)                                    0938
         N     @09,@CF06675                                        0938
         AL    @09,CVPSAF                                          0938
         ST    @09,NCSIOCID(,@04)                                  0938
*             NCSPLCMD=NCSNCPPG;    /*                       @XM97230*/
         MVC   NCSPLCMD(2,@04),@CB03775                            0939
*             NCSPRMRC=LCPMNVD;     /*                       @XM97230*/
         MVI   NCSPRMRC(@04),X'07'                                 0940
*             NCSPLRAD=CVPWKPT1;    /*                       @XM97230*/
         ST    @03,NCSPLRAD(,@04)                                  0941
*             CALL CVPDOIO;         /*                       @XM97230*/
         BAL   @14,CVPDOIO                                         0942
*           END;                    /*                       @XM97230*/
*         ELSE                                                     0944
*           ;                       /*                       @XM97230*/
@RF00936 DS    0H                                                  0945
*       ELSE                                                       0945
*         DO;                                                      0945
         B     @RC00935                                            0945
@RF00935 DS    0H                                                  0946
*           CALL CVPCLOSE;                                         0946
         BAL   @14,CVPCLOSE                                        0946
*           RPRONLIN=CVPOFF;                                       0947
         L     @04,CVPWKPT1                                        0947
         NI    RPRONLIN(@04),B'11110111'                           0947
*           RPRLIVE=CVPOFF;                                        0948
         NI    RPRLIVE(@04),B'11111110'                            0948
*         END;                                                     0949
*     END;                          /* END FOR OLD PU OR DUMMY     0950
*                                      TERMINAL                      */
*/********************************************************************/
*/* FOR A TERMINAL OR COMPONENT, IF ATTACHED TO A LOCAL CONTROL UNIT */
*/* THEN CALL CVPLCLPR TO CLOSE THE LOCAL.                           */
*/********************************************************************/
*                                                                  0951
*   ELSE                                                           0951
*     DO;                                                          0951
         B     @RC00929                                            0951
@RF00929 DS    0H                                                  0952
*       IF RPRENTRY=RPRENTTR THEN                                  0952
         L     @04,CVPWKPT1                                        0952
         CLI   RPRENTRY(@04),X'80'                                 0952
         BNE   @RF00952                                            0952
*         IF RPRNSNEA->RPRENTRY=RPRENTLC THEN                      0953
         L     @04,RPRNSNEA(,@04)                                  0953
         CLI   RPRENTRY(@04),X'45'                                 0953
         BNE   @RF00953                                            0953
*           DO;                                                    0954
*             NCSACTV='1'B;         /*                       @X50BHLV*/
         L     @04,CVPNCSPL                                        0955
         OI    NCSACTV(@04),B'10000000'                            0955
*             NCSAIMOD='0'B;        /*                       @X50BHLV*/
         NI    NCSAIMOD(@04),B'01111111'                           0956
*             CALL CVPCRIO;         /*                       @X50BHLV*/
         BAL   @14,CVPCRIO                                         0957
*             RPRONLIN='0'B;                                       0958
         L     @04,CVPWKPT1                                        0958
         NI    RPRONLIN(@04),B'11110111'                           0958
*             RPRLIVE='0'B;                                        0959
         NI    RPRLIVE(@04),B'11111110'                            0959
*             CVPWKPT1=CVPWKPT1->RPRNSNEA;                         0960
*                                                                  0960
         L     @04,RPRNSNEA(,@04)                                  0960
         ST    @04,CVPWKPT1                                        0960
*             /*******************************************************/
*             /*                                                     */
*             /* SEGMENT(CVPLCLP)REQUEST                             */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0961
*             DO;                                                  0961
*               GOTO CVPLCLP;                                      0962
         B     CVPLCLP                                             0962
*CVPLCLP#:                                                         0963
*             END;                                                 0963
CVPLCLP# DS    0H                                                  0964
*             RPRONLIN='0'B;                                       0964
         L     @04,CVPWKPT1                                        0964
         NI    RPRONLIN(@04),B'11110111'                           0964
*             RPRLIVE='0'B;                                        0965
         NI    RPRLIVE(@04),B'11111110'                            0965
*             CVPWKPT1=CVPWKPT1+RPRELEN;                           0966
         LH    @03,RPRELEN(,@04)                                   0966
         ALR   @03,@04                                             0966
         ST    @03,CVPWKPT1                                        0966
*           END;                                                   0967
*                                                                  0967
*/********************************************************************/
*/* FOR A NONLOCAL TERMINAL OR COMPONENT WITH 'VARY PENDING',        */
*/* TURN OFF ONLINE & LIVE BITS IN RDTE                              */
*/********************************************************************/
*                                                                  0968
*         ELSE                                                     0968
*           IF RPRVRYPD='1'B THEN                                  0968
         B     @RC00953                                            0968
@RF00953 L     @04,CVPWKPT1                                        0968
         TM    RPRVRYPD(@04),B'00000010'                           0968
         BNO   @RF00968                                            0968
*             DO;                                                  0969
*               RPRONLIN='0'B;                                     0970
         NI    RPRONLIN(@04),B'11110111'                           0970
*               RPRLIVE='0'B;                                      0971
         NI    RPRLIVE(@04),B'11111110'                            0971
*               NCSACTV='1'B;       /*                       @X50BHLV*/
         L     @04,CVPNCSPL                                        0972
         OI    NCSACTV(@04),B'10000000'                            0972
*               NCSAIMOD='0'B;      /*                       @X50BHLV*/
         NI    NCSAIMOD(@04),B'01111111'                           0973
*               CALL CVPCRIO;       /*                       @X50BHLV*/
         BAL   @14,CVPCRIO                                         0974
*             END;                                                 0975
*           ELSE                                                   0976
*             DO;                   /*                       @ZA08934*/
         B     @RC00968                                            0976
@RF00968 DS    0H                                                  0977
*               CVPWKPT3=CVPWKPT1;  /*                       @ZA08934*/
         L     @04,CVPWKPT1                                        0977
         ST    @04,CVPWKPT3                                        0977
*               DO WHILE CVPWKPT3->RPRENTRY^=RPRENTRN;/* FIND RN   0978
*                                                            @ZA08934*/
         B     @DE00978                                            0978
@DL00978 DS    0H                                                  0979
*                 CVPWKPT3=CVPWKPT3->RPRNSNEA;/*             @ZA08934*/
         L     @04,CVPWKPT3                                        0979
         L     @04,RPRNSNEA(,@04)                                  0979
         ST    @04,CVPWKPT3                                        0979
*               END;                                               0980
@DE00978 L     @04,CVPWKPT3                                        0980
         CLI   RPRENTRY(@04),X'01'                                 0980
         BNE   @DL00978                                            0980
*               IF CVPWKPT3->RRNLCDIP='1'B/* IF RN VARY PENDING    0981
*                                                            @ZA08934*/
*                 THEN              /*                       @ZA08934*/
         TM    RRNLCDIP(@04),B'00001000'                           0981
         BNO   @RF00981                                            0981
*                 DO;               /*                       @ZA08934*/
*                   RPRONLIN='0'B;  /* TURN OFF ONLINE       @ZA08934*/
         L     @04,CVPWKPT1                                        0983
         NI    RPRONLIN(@04),B'11110111'                           0983
*                   RPRLIVE='0'B;   /* AND LIVE              @ZA08934*/
         NI    RPRLIVE(@04),B'11111110'                            0984
*                 END;              /*                       @ZA08934*/
*             END;                  /*                       @ZA08934*/
*       ELSE                                                       0987
*         DO;                       /* IF ENTRY NOT A TERMINAL       */
         B     @RC00952                                            0987
@RF00952 DS    0H                                                  0988
*           IF RPRENTRY=RPRENTUT×RPRENTRY=RPRENTCM THEN/* IF ENTRY 0988
*                                      UTERM OR COMPON               */
         L     @04,CVPWKPT1                                        0988
         CLI   RPRENTRY(@04),X'75'                                 0988
         BE    @RT00988                                            0988
         CLI   RPRENTRY(@04),X'90'                                 0988
         BNE   @RF00988                                            0988
@RT00988 DS    0H                                                  0989
*             DO;                                                  0989
*               IF RPRVRYPD=CVPON THEN/* IF VARY PENDING SET         */
         L     @04,CVPWKPT1                                        0990
         TM    RPRVRYPD(@04),B'00000010'                           0990
         BNO   @RF00990                                            0990
*                 DO;                                              0991
*                   RPRONLIN=CVPOFF;/* TURN OFF ONLINE & LIVE        */
         NI    RPRONLIN(@04),B'11110111'                           0992
*                   RPRLIVE=CVPOFF;                                0993
         NI    RPRLIVE(@04),B'11111110'                            0993
*                   NCSACTV='1'B;   /*                       @X50BHLV*/
         L     @04,CVPNCSPL                                        0994
         OI    NCSACTV(@04),B'10000000'                            0994
*                   NCSAIMOD='0'B;  /*                       @X50BHLV*/
         NI    NCSAIMOD(@04),B'01111111'                           0995
*                   CALL CVPCRIO;   /*                       @X50BHLV*/
         BAL   @14,CVPCRIO                                         0996
*                 END;                                             0997
*               ELSE                                               0998
*                 DO;               /*                       @ZA08934*/
         B     @RC00990                                            0998
@RF00990 DS    0H                                                  0999
*                   CVPWKPT3=CVPWKPT1;/*                     @ZA08934*/
         L     @04,CVPWKPT1                                        0999
         ST    @04,CVPWKPT3                                        0999
*                   DO WHILE CVPWKPT3->RPRENTRY^=RPRENTRN;/* FIND RN
*                                                            @ZA08934*/
         B     @DE01000                                            1000
@DL01000 DS    0H                                                  1001
*                     CVPWKPT3=CVPWKPT3->RPRNSNEA;/*         @ZA08934*/
         L     @04,CVPWKPT3                                        1001
         L     @04,RPRNSNEA(,@04)                                  1001
         ST    @04,CVPWKPT3                                        1001
*                   END;                                           1002
@DE01000 L     @04,CVPWKPT3                                        1002
         CLI   RPRENTRY(@04),X'01'                                 1002
         BNE   @DL01000                                            1002
*                   IF CVPWKPT3->RRNLCDIP='1'B/* IF RN VARY PENDING
*                                                            @ZA08934*/
*                     THEN          /*                       @ZA08934*/
         TM    RRNLCDIP(@04),B'00001000'                           1003
         BNO   @RF01003                                            1003
*                     DO;           /*                       @ZA08934*/
*                       RPRONLIN='0'B;/* TURN OFF ONLINE     @ZA08934*/
         L     @04,CVPWKPT1                                        1005
         NI    RPRONLIN(@04),B'11110111'                           1005
*                       RPRLIVE='0'B;/* AND LIVE             @ZA08934*/
         NI    RPRLIVE(@04),B'11111110'                            1006
*                     END;          /*                       @ZA08934*/
*                 END;              /*                       @ZA08934*/
*             END;                  /* END FOR UTERM OR COMPONENT  1009
*                                      ENTRY                         */
*           ELSE                                                   1010
*             DO;                   /* IF ENTRY NOT UTERM OR COMPON  */
         B     @RC00988                                            1010
@RF00988 DS    0H                                                  1011
*               IF RPRENTRY=RPRENTDS THEN/* IF ENTRY AN LCDO         */
         L     @04,CVPWKPT1                                        1011
         CLI   RPRENTRY(@04),X'20'                                 1011
         BNE   @RF01011                                            1011
*                 DO;                                              1012
*                   RPRONLIN=CVPOFF;/* TURN OFF ONLINE & LIVE        */
         NI    RPRONLIN(@04),B'11110111'                           1013
*                   RPRLIVE=CVPOFF;                                1014
         NI    RPRLIVE(@04),B'11111110'                            1014
*                 END;                                             1015
*               ELSE                                               1016
*                 DO;               /* IF ENTRY NOT AN LCDO          */
         B     @RC01011                                            1016
@RF01011 DS    0H                                                  1017
*                   IF RPRENTRY=RPRENTLN THEN/* ENTRY A LINE?        */
         L     @04,CVPWKPT1                                        1017
         CLI   RPRENTRY(@04),X'50'                                 1017
         BNE   @RF01017                                            1017
*                     DO;                                          1018
*                       IF RLNPORT=CVPON THEN/* ENTRY AN LCDI?       */
         TM    RLNPORT(@04),B'00010000'                            1019
         BNO   @RF01019                                            1019
*                         DO;                                      1020
*                           RPTHLVPD=CVPOFF;/* SET CTERM NOT HIGHER
*                                      LEVEL VARY PENDING            */
*                           RPTVYIMM=CVPOFF;/* RESET CTERM VYIMM FLAG*/
         NI    RPTHLVPD(@04),B'11011011'                           1022
*                           CALL CVPCLOSE;/* CLOSE CTERM SESSION     */
         BAL   @14,CVPCLOSE                                        1023
*                           RPTONLIN=CVPOFF;/* MAKE CTERM OFFLINE &
*                                      DEAD                          */
         L     @04,CVPWKPT1                                        1024
         NI    RPTONLIN(@04),B'11101111'                           1024
*                           RPRLIVE=CVPOFF;                        1025
         NI    RPRLIVE(@04),B'11111110'                            1025
*                         END;      /* END FOR LCDI LINE             */
*                       ELSE                                       1027
*                         ;                                        1027
@RF01019 DS    0H                                                  1028
*                       IF RPRVRYPD=CVPON THEN/* IF VARY PENDING SET
*                                      FOR LINE                      */
         L     @04,CVPWKPT1                                        1028
         TM    RPRVRYPD(@04),B'00000010'                           1028
         BNO   @RF01028                                            1028
*                         DO;                                      1029
*                           CALL CVPPEPLN;/* PROCESS LINE            */
         BAL   @14,CVPPEPLN                                        1030
*                           RPRONLIN=CVPOFF;/* TURN OFF ONLINE & LIVE*/
         L     @04,CVPWKPT1                                        1031
         NI    RPRONLIN(@04),B'11110111'                           1031
*                           RPRLIVE=CVPOFF;                        1032
         NI    RPRLIVE(@04),B'11111110'                            1032
*                         END;                                     1033
*                       ELSE                                       1034
*                         ;                                        1034
@RF01028 DS    0H                                                  1035
*                     END;          /* END FOR ENTRY NOT A LINE      */
*                   ELSE                                           1036
*                     DO;           /* IF ENTRY NOT A LINE           */
         B     @RC01017                                            1036
@RF01017 DS    0H                                                  1037
*                       IF RPRENTRY=RPRENTRN×RPRENTRY=RPRENTLH THEN
         L     @04,CVPWKPT1                                        1037
         CLI   RPRENTRY(@04),X'01'                                 1037
         BE    @RT01037                                            1037
         CLI   RPRENTRY(@04),X'03'                                 1037
         BNE   @RF01037                                            1037
@RT01037 DS    0H                                                  1038
*                         DO;       /* IF ENTRY IS RN OR LOCAL HEADER*/
*                           CALL CVPHEADP;/* PROCESS         @DC36143
*                                      HEADER                        */
         BAL   @14,CVPHEADP                                        1039
*                           CVPSKPHD=CVPON;/* TURN SKIP HEAD ON      */
         OI    CVPSKPHD,B'00100000'                                1040
*                         END;      /* END FOR NOT RN OR LH          */
*                       ELSE                                       1042
*                         DO;       /* IF ENTRY NOT RN OR LH         */
         B     @RC01037                                            1042
@RF01037 DS    0H                                                  1043
*/*------------------------------------------------------------------*/
*/* IF RDTE IS A LOCAL SUBAREA OR A WITCH SUBAREA THEN INVOKE        */
*/* CVPSUBS AND CVPHEADP SUBROUTINES TO DO THE PROCESSING    @D32CKLV*/
*/*------------------------------------------------------------------*/
*                                                                  1043
*                           IF RPRENTRY=RPRENTLS×RPRENTRY=RPRENTSW THEN
         L     @04,CVPWKPT1                                        1043
         CLI   RPRENTRY(@04),X'05'                                 1043
         BE    @RT01043                                            1043
         CLI   RPRENTRY(@04),X'04'                                 1043
         BNE   @RF01043                                            1043
@RT01043 DS    0H                                                  1044
*                             DO;   /*                       @D32CKLV*/
*                               CALL CVPSUBS;/*              @D32CKLV*/
         BAL   @14,CVPSUBS                                         1045
*                               CALL CVPHEADP;/*             @D32CKLV*/
         BAL   @14,CVPHEADP                                        1046
*                               CVPSKPHD=CVPON;/*            @D32CKLV*/
         OI    CVPSKPHD,B'00100000'                                1047
*                             END;  /*                       @D32CKLV*/
*                           ELSE                                   1049
*                             DO;   /*                       @D32CKLV*/
         B     @RC01043                                            1049
@RF01043 DS    0H                                                  1050
*                               IF RPRENTRY=RPRENTLU THEN/* ENTRY AN
*                                      LU?                           */
         L     @04,CVPWKPT1                                        1050
         CLI   RPRENTRY(@04),X'81'                                 1050
         BNE   @RF01050                                            1050
*                                 DO;                              1051
*                                   IF RLUNDSES=CVPON/* SPECIAL END
*                                      SESSION NCSPL         @VS41705*/
*                                     THEN                         1052
         TM    RLUNDSES(@04),B'00010000'                           1052
         BNO   @RF01052                                            1052
*                                    DO;/* CLEAN UP THE LU   @VS41705*/
*                                     RLUNDSES=CVPOFF;/* RESET     1054
*                                      SPECIAL END SESSION   @VS41705*/
         NI    RLUNDSES(@04),B'11101111'                           1054
*                                     RPRHLVPD=CVPOFF;/* RESET HIGHER
*                                      LEVEL VARY PENDING    @VS41705*/
         NI    RPRHLVPD(@04),B'11111011'                           1055
*                                     RPRNSNEA->RPRPEPCT=RPRNSNEA->
*                                         RPRPEPCT-1;/* DECR PU'S  1056
*                                      COUNT OF ACTIVE LU'S  @VS41705*/
         L     @04,RPRNSNEA(,@04)                                  1056
         LH    @03,RPRPEPCT(,@04)                                  1056
         BCTR  @03,0                                               1056
         STH   @03,RPRPEPCT(,@04)                                  1056
*                                     IF RPRNSNEA->RPRPEPCT=0/* ANY
*                                      MORE LU'S             @VS41705*/
*                                       THEN/* CLEAN UP THE PU RDTE
*                                                            @VS41705*/
         LTR   @03,@03                                             1057
         BNZ   @RF01057                                            1057
*                                      DO;/*                 @VS41705*/
*                                       NCSPLRPT=RPRNSNEA;/* SET   1059
*                                      RPT=ADDR PU           @VS41705*/
         L     @03,CVPNCSPL                                        1059
         ST    @04,NCSPLRPT(,@03)                                  1059
*                                       CVPINPUT=CVPNCSPL;/* SET   1060
*                                      R1=ADDR NCSPL         @VS41705*/
         LR    CVPINPUT,@03                                        1060
*                                       CALL ISTINCW6;/* PROCESS THE
*                                      PU                    @VS41705*/
         L     @15,@CV05805                                        1061
         BALR  @14,@15                                             1061
*                                       DO;                        1062
*                                                                  1062
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  1063
*                                        /* ** CLEAR AND SET CURRENT
*                                      PROCEDURE BIT                 */
*                                        NCSPLRPH->RPHCRR->CRACRR->
*                                            VYCCRT='0'B;          1063
         L     @04,CVPNCSPL                                        1063
         L     @03,NCSPLRPH(,@04)                                  1063
         L     @03,RPHCRR(,@03)                                    1063
         L     @03,CRACRR(,@03)                                    1063
         XC    VYCCRT+1(11,@03),VYCCRT+1(@03)                      1063
         MVI   VYCCRT(@03),B'00000000'                             1063
*                                        NCSPLRPH->RPHCRR->CRACRR->
*                                            CINCVP='1'B;          1064
         OI    CINCVP(@03),B'00001000'                             1064
*                                       END;/*               @VS41705*/
*                                       CVPSKPHD=CVPON;/* SET SKIP 1066
*                                      HEAD SWITCH ON        @VS41705*/
         OI    CVPSKPHD,B'00100000'                                1066
*                                       NCSPLRID=RPRNSNEA->RPRNAME;/*
*                                      SET UP FOR PU OFFLINE MSG   1067
*                                                            @VS41705*/
         L     @03,CVPWKPT1                                        1067
         L     @03,RPRNSNEA(,@03)                                  1067
         MVC   NCSPLRID(8,@04),RPRNAME(@03)                        1067
*                                      END;/*                @VS41705*/
*                                     ELSE                         1069
*                                      ;/*                   @VS41705*/
@RF01057 DS    0H                                                  1070
*                                    END;/*                  @VS41705*/
*                                   ELSE/* CONTINUE NORMAL PROCESSING
*                                                            @VS41705*/
*                                    DO;/*                   @VS41705*/
*                                                                  1071
         B     @RC01052                                            1071
@RF01052 DS    0H                                                  1072
*                                     /*******************************/
*                                     /*                             */
*                                     /* SEGMENT(CVPDELG)REQUEST     */
*                                     /*                             */
*                                     /*******************************/
*                                                                  1072
*                                     DO;                          1072
*                                      GOTO CVPDELG;               1073
         B     CVPDELG                                             1073
*CVPDELG#:                                                         1074
*                                     END;/* DEACT LU                */
CVPDELG# DS    0H                                                  1075
*                                     CALL CVPCLOSE;/* CLOSE SSCP  1075
*                                      SESSION                       */
         BAL   @14,CVPCLOSE                                        1075
*                                     RPRONLIN=CVPOFF;             1076
         L     @04,CVPWKPT1                                        1076
         NI    RPRONLIN(@04),B'11110111'                           1076
*                                     RPRLIVE=CVPOFF;              1077
         NI    RPRLIVE(@04),B'11111110'                            1077
*                                    END;/*                  @VS41705*/
*                                 END;/* END FOR LU ENTRY            */
*                               ELSE                               1080
*                                 DO;                              1080
         B     @RC01050                                            1080
@RF01050 DS    0H                                                  1081
*                                   IF RPRENTRY=RPRENTCC THEN      1081
         L     @04,CVPWKPT1                                        1081
         CLI   RPRENTRY(@04),X'71'                                 1081
         BNE   @RF01081                                            1081
*                                    DO;/* IF SNA PU                 */
*                                     NCSPLRID=RPRNAME;/* SAVE PU  1083
*                                      NAME IN NCSPLRID            1083
*                                      SEGMENT(CVPSNCL)REQUEST       */
         L     @03,CVPNCSPL                                        1083
         MVC   NCSPLRID(8,@03),RPRNAME(@04)                        1083
*                                     DO;                          1084
*                                      GOTO CVPSNCL;               1085
         B     CVPSNCL                                             1085
*CVPSNCL#:                                                         1086
*                                     END;                         1086
CVPSNCL# DS    0H                                                  1087
*                                     CVPSKPHD=CVPON;/* TURN ON SKP
*                                      HD SW.                        */
         OI    CVPSKPHD,B'00100000'                                1087
*                                    END;/* SNA CLUS END             */
*                                   ELSE                           1089
*                                    ;                             1089
@RF01081 DS    0H                                                  1090
*                                 END;/* END FOR NOT LU ENTRY        */
*                             END;  /* END OF NO LOCAL OR SW SUBAREA */
@RC01050 DS    0H                                                  1092
*                         END;      /* END FOR NOT RN OR LH ENTRY    */
@RC01043 DS    0H                                                  1093
*                     END;          /* END FOR NOT LINE ENTRY        */
@RC01037 DS    0H                                                  1094
*                 END;              /* END FOR NOT LCDO ENTRY        */
@RC01017 DS    0H                                                  1095
*             END;                  /* END FOR NOT UTERM OR COMPONENT*/
@RC01011 DS    0H                                                  1096
*         END;                      /* END FOR NOT TERMINAL ENTRY    */
@RC00988 DS    0H                                                  1097
*     END;                          /* END FOR NOT OLD PU OR DUMMY 1097
*                                      TERMINAL                      */
@RC00952 DS    0H                                                  1098
*/* SEGMENT(CVPSCAN)FINISH                                           */
*                                                                  1098
*   DO;                                                            1098
@RC00929 DS    0H                                                  1099
*     GOTO CVPSCAN#;                                               1099
         B     CVPSCAN#                                            1099
*CVPSCAN@:                                                         1100
*   END;                                                           1100
CVPSCAN@ DS    0H                                                  1101
*   GEN(   EJECT);                                                 1101
            EJECT
*CVPHEADP:                                                         1102
*   PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);/*                @DC36143*/
         B     @PB00005                                            1102
CVPHEADP DS    0H                                                  1103
*/********************************************************************/
*/* THIS ROUTINE IS CALLED BY ISTINCVP MAINLINE TO                   */
*/* COMPLETE DEACTIVATION OF AN RDT SEGMENT WHEN CVPWKPT1, THE       */
*/* ADDRESS OF THE COMMAND RDT ENTRY, IS FOR A 370X OR A LOCAL       */
*/* HEADER.                                                          */
*/********************************************************************/
*                                                                  1103
*   RFY                                                            1103
*     ISTRPRE BASED(CVPWKPT1);                                     1103
*   CVPHEDSV=CVPRTNAD;              /* SAVE RTN ADDR         @DC36143*/
         ST    CVPRTNAD,CVPHEDSV                                   1104
*   NCSPLRPT=CVPWKPT1;              /*                       @DM10630*/
         L     @04,CVPWKPT1                                        1105
         L     @03,CVPNCSPL                                        1105
         ST    @04,NCSPLRPT(,@03)                                  1105
*   IF RPRENTRY=RPRENTRN THEN                                      1106
         CLI   RPRENTRY(@04),X'01'                                 1106
         BNE   @RF01106                                            1106
*     DO;                                                          1107
*       IF NCSPL2IN='1'B THEN                                      1108
         TM    NCSPL2IN(@03),B'10000000'                           1108
         BNO   @RF01108                                            1108
*         DO;                       /*                       @DC36143*/
*           CVPSUBRN=NCSPLRPT;      /*                       @DC36143*/
         ST    @04,CVPSUBRN                                        1110
*           CALL CVPDEAC;           /*                       @DC36143*/
         BAL   @14,CVPDEAC                                         1111
*         END;                                                     1112
*       ELSE                                                       1113
*         DO;                       /*                       @DC36143*/
         B     @RC01108                                            1113
@RF01108 DS    0H                                                  1114
*           IF NCSPLVIT=CVPON       /* IF ENTERED FROM VAY IMM     1114
*                                      TERMINATE             @DC36143*/
*             THEN                                                 1114
         L     @04,CVPNCSPL                                        1114
         TM    NCSPLVIT(@04),B'00000001'                           1114
         BO    @RT01114                                            1114
*             ;                     /* DON'T PROCESS CVPLIN  @DC36143*/
*           ELSE                                                   1116
*             IF RPRVYIMM=CVPON     /* IF VARY DEACT IMM     @DC36143*/
*               THEN                /*                       @DC36143*/
         L     @04,CVPWKPT1                                        1116
         TM    RPRVYIMM(@04),B'00000010'                           1116
         BNO   @RF01116                                            1116
*               CALL CVPSUBS;       /*                       @ZA26906*/
         BAL   @14,CVPSUBS                                         1117
*             ELSE                                                 1118
*               CALL CVPLIN;        /*                       @DC36143*/
         B     @RC01116                                            1118
@RF01116 BAL   @14,CVPLIN                                          1118
*         END;                      /*                       @DC36143*/
@RC01116 DS    0H                                                  1119
@RT01114 DS    0H                                                  1120
*       NCSPLCID=CVPSAF+RPRDAF;     /* FORM CID WITH RPRDAF          */
@RC01108 L     @04,CVPNCSPL                                        1120
         L     @03,CVPWKPT1                                        1120
         LH    @03,RPRDAF(,@03)                                    1120
         N     @03,@CF06675                                        1120
         AL    @03,CVPSAF                                          1120
         ST    @03,NCSPLCID(,@04)                                  1120
*       NCSPLRAD=NCSPLRPT;                                         1121
         L     @03,NCSPLRPT(,@04)                                  1121
         ST    @03,NCSPLRAD(,@04)                                  1121
*       CVPINPUT=NCSPLRPH;                                         1122
         L     CVPINPUT,NCSPLRPH(,@04)                             1122
*       CVPINPUT->RPHWEA=CVPNCSPL;                                 1123
*                                                                  1123
         ST    @04,RPHWEA(,CVPINPUT)                               1123
*/* TPREDRVE                                                         */
*                                                                  1124
*       DO;                         /* BEGIN TPREDRVE GENERATION     */
*/* ATBUILD (ISTRPH)                                                 */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTCRA)                                                 */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTNCSPL)                                               */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTNCB)                                                 */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTICNCB)                                               */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTLDNCB)                                               */
*/* END OF ATBUILD                                                   */
*                                                                  1125
*         DCL                                                      1125
*           CMZ00045 REG(00) PTR(31),                              1125
*           CMZ10045 REG(01) PTR(31),                              1125
*           CMZ20045 REG(02) PTR(31),                              1125
*           CMZ80045 REG(08) PTR(31),                              1125
*           CMZC0045 REG(12) PTR(31),                              1125
*           CMZD0045 REG(13) PTR(31),                              1125
*           CMZE0045 REG(14) PTR(31),                              1125
*           CMZF0045 REG(15) PTR(31);                              1125
*         RFY                                                      1126
*          (CMZ00045,                                              1126
*           CMZ10045,                                              1126
*           CMZ20045,                                              1126
*           CMZ80045,                                              1126
*           CMZC0045,                                              1126
*           CMZD0045,                                              1126
*           CMZE0045,                                              1126
*           CMZF0045) RSTD;                                        1126
*         GEN REFS(CMZE0045,CMZC0045,CMZD0045);                    1127
          STM   CMZE0045,CMZC0045,12(CMZD0045)
*         CMZD0045=CMZD0045-72;     /* ADDRESS NEW SAVE AREA         */
         SL    CMZD0045,@CF03436                                   1128
*         CMZ80045=RPHWEA;          /* ADDRESS NCSPL                 */
         L     CMZ80045,RPHWEA(,RPHPTR)                            1129
*         CMZ20045=CMZ80045->NCSIOCID;/* SET CIDCTL PARAMETER        */
         L     CMZ20045,NCSIOCID(,CMZ80045)                        1130
*         DO;                       /* CIDCTL(FIND)                  */
*           RFY                                                    1132
*            (EMCR2,                                               1132
*             EMCR3) RSTD;                                         1132
*           GEN SETS(RPHWORK)                                      1133
*               (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*           EMCR3='00'X;            /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         1134
*           EMCR3='01'X;            /* INDICATE SHARED LOCK          */
         LA    EMCR3,1                                             1135
*           CALL ATCLCPTR->ATCCDFND->ISTSDCCF;/* PROCESS REQUEST     */
         L     @09,ATCLCPTR                                        1136
         L     @15,ATCCDFND(,@09)                                  1136
         BALR  @14,@15                                             1136
*           RFY                                                    1137
*            (EMCR2,                                               1137
*             EMCR3) UNRSTD;                                       1137
*         END;                      /* CIDCTL                        */
*         IF CMZF0045=0 THEN                                       1139
         LTR   CMZF0045,CMZF0045                                   1139
         BNZ   @RF01139                                            1139
*           DO;                     /* IF CIDCTL IS SUCCESSFUL       */
*             CMZ20045=CMZ00045;    /* LOAD NCB ADDRESS              */
         LR    CMZ20045,CMZ00045                                   1141
*             IF CMZ20045->NCBTYPE=ICTYPE THEN/* IF NCB AN ICNCB     */
         CLI   NCBTYPE(CMZ20045),X'06'                             1142
         BNE   @RF01142                                            1142
*               DO;                 /* PROCESS ICNCB NCB             */
*                 CMZ20045->ICNZFF69='1'B;/* TURN ON ICNCB DEACTIVATE
*                                      FLAG                          */
         L     @09,ICNZFF69-1(,CMZ20045)                           1144
@GL00025 LR    @04,@09                                             1144
         O     @04,@CF06681                                        1144
         CS    @09,@04,ICNZFF69-1(CMZ20045)                        1144
         BNE   @GL00025                                            1144
*/*  TPQUE (CMZ10045,CMZ20045->ICNZPAB4) NORM                        */
*                                                                  1145
*                 DO;                                              1145
*                   RFY                                            1146
*                    (GPR00P,                                      1146
*                     GPR01P,                                      1146
*                     GPR04P,                                      1146
*                     GPR05P,                                      1146
*                     GPR15P) RSTD;                                1146
*                   GEN REFS(GPR01P) SETS(RPHWORK)                 1147
*                       (STM GPR02P,GPR08P,RPHWORK(GPR01P));       1147
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*                   GPR00P=0;                                      1148
         SLR   GPR00P,GPR00P                                       1148
*                   GPR15P=ADDR(CMZ20045->ICNZPAB4);/* HOLD PAB PTR  */
         LA    GPR15P,ICNZPAB4(,CMZ20045)                          1149
*                   GPR04P=CMZ10045;/* WORK ELE PTR                  */
         LR    GPR04P,CMZ10045                                     1150
*                   GPR05P=GPR15P;  /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       1151
*                   CALL ATCLCPTR->ATCAP37->ISTAPC37;              1152
         L     @09,ATCLCPTR                                        1152
         L     @15,ATCAP37(,@09)                                   1152
         BALR  @14,@15                                             1152
*                   GEN(NOPR  0)                                   1153
*                   NOSETS NOREFS;                                 1153
         NOPR  0
*                   RFY                                            1154
*                    (GPR00P,                                      1154
*                     GPR01P,                                      1154
*                     GPR04P,                                      1154
*                     GPR05P,                                      1154
*                     GPR15P) UNRSTD;                              1154
*                 END;              /* *** END OF TPQUE GENERATION   */
*               END;                /* END ICNCB NCB PROCESSING      */
*             ELSE                  /* IF NCB NOT AN ICNCB           */
*               DO;                 /* PROCESS LDNCB NCB             */
         B     @RC01142                                            1157
@RF01142 DS    0H                                                  1158
*                 CMZ20045->LDNZFF69='1'B;/* TURN ON LDNCB DEACTIVATE
*                                      FLAG                          */
         L     @09,LDNZFF69-1(,CMZ20045)                           1158
@GL00026 LR    @04,@09                                             1158
         O     @04,@CF06681                                        1158
         CS    @09,@04,LDNZFF69-1(CMZ20045)                        1158
         BNE   @GL00026                                            1158
*/*  TPQUE (CMZ10045,CMZ20045->LDNZPAB1) NORM                        */
*                                                                  1159
*                 DO;                                              1159
*                   RFY                                            1160
*                    (GPR00P,                                      1160
*                     GPR01P,                                      1160
*                     GPR04P,                                      1160
*                     GPR05P,                                      1160
*                     GPR15P) RSTD;                                1160
*                   GEN REFS(GPR01P) SETS(RPHWORK)                 1161
*                       (STM GPR02P,GPR08P,RPHWORK(GPR01P));       1161
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*                   GPR00P=0;                                      1162
         SLR   GPR00P,GPR00P                                       1162
*                   GPR15P=ADDR(CMZ20045->LDNZPAB1);/* HOLD PAB PTR  */
         LA    GPR15P,LDNZPAB1(,CMZ20045)                          1163
*                   GPR04P=CMZ10045;/* WORK ELE PTR                  */
         LR    GPR04P,CMZ10045                                     1164
*                   GPR05P=GPR15P;  /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       1165
*                   CALL ATCLCPTR->ATCAP37->ISTAPC37;              1166
         L     @09,ATCLCPTR                                        1166
         L     @15,ATCAP37(,@09)                                   1166
         BALR  @14,@15                                             1166
*                   GEN(NOPR  0)                                   1167
*                   NOSETS NOREFS;                                 1167
         NOPR  0
*                   RFY                                            1168
*                    (GPR00P,                                      1168
*                     GPR01P,                                      1168
*                     GPR04P,                                      1168
*                     GPR05P,                                      1168
*                     GPR15P) UNRSTD;                              1168
*                 END;              /* *** END OF TPQUE GENERATION   */
*               END;                /* END LDNCB NCB                 */
*             CMZ20045=CMZ80045->NCSIOCID;/* SET CIDCTL PARAMETER    */
@RC01142 L     CMZ20045,NCSIOCID(,CMZ80045)                        1171
*             DO;                   /* CIDCTL(FINISH)                */
*               RFY                                                1173
*                (EMCR2,                                           1173
*                 EMCR3) RSTD;                                     1173
*               GEN SETS(RPHWORK)                                  1174
*                   (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH)
*                   ;                                              1174
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*               EMCR3='00'X;        /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         1175
*               CALL ATCLCPTR->ATCCDFIN->ISTSDCCR;/* PROCESS REQUEST */
         L     @09,ATCLCPTR                                        1176
         L     @15,ATCCDFIN(,@09)                                  1176
         BALR  @14,@15                                             1176
*               RFY                                                1177
*                (EMCR2,                                           1177
*                 EMCR3) UNRSTD;                                   1177
*             END;                  /* CIDCTL                        */
*/*  TPWAIT                                                          */
*                                                                  1179
*             DO;                   /* BEGIN TPWAIT GENERATION       */
*               RFY                                                1180
*                (GPR01P,                                          1180
*                 GPR14P,                                          1180
*                 GPR15P) RSTD;                                    1180
*               RFY                                                1181
*                (GPR00P) RSTD;                                    1181
*               GEN(STM   GPR00P,GPR15P,RPHWORK(GPR01P))           1182
*               REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);          1182
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*               RFY                                                1183
*                (GPR00P) UNRSTD;                                  1183
*               GPR15P=ADDR(LHAA0072);                             1184
         LA    GPR15P,LHAA0072                                     1184
*               GPR14P=0;                                          1185
         SLR   GPR14P,GPR14P                                       1185
*               GPR15P=GPR15P&'00FFFFFF'X;                         1186
         N     GPR15P,@CF05903                                     1186
*               GPR15P=GPR15P×RPHWT1;                              1187
         O     GPR15P,@CF02817                                     1187
*               CS(GPR14P,GPR15P,GPR01P->RPHRESMA);                1188
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         1188
*               BC(7,LHAB0072);                                    1189
*                                                                  1189
         BC    7,LHAB0072                                          1189
*/* TPEXIT  NONE                                                     */
*                                                                  1190
*               DO;                                                1190
*                 RESPECIFY                                        1191
*                   GPR15P RSTD;                                   1191
*                                                                  1191
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  1192
*                 DO;               /* LISATCVT                    1192
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                   GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     1193
*                 END;              /* LISATCVT                      */
*                 RESPECIFY                                        1195
*                   GPR00F RSTD;                                   1195
*                 GPR00F=0;         /* SET PARAMETER REGISTER TO 0   */
         SLR   GPR00F,GPR00F                                       1196
*                 GPR15P=GPR15P->ATCAP31;                          1197
         L     GPR15P,ATCAP31(,GPR15P)                             1197
*                 DCL                                              1198
*                   FMZL0077 BASED(GPR15P) LABEL VALUERANGE(*);    1198
*                 CALL FMZL0077;                                   1199
         BALR  @14,@15                                             1199
*                 RESPECIFY                                        1200
*                  (GPR00F,                                        1200
*                   GPR15P) UNRSTD;                                1200
*               END;                /* **** END OF TPEXIT            */
*LHAB0072:                                                         1202
*               ;                                                  1202
LHAB0072 DS    0H                                                  1203
*               GPR01P->RPHRESMA=0;                                1203
         SLR   @09,@09                                             1203
         ST    @09,RPHRESMA(,GPR01P)                               1203
*               RFY                                                1204
*                (GPR00P) RSTD;                                    1204
*LHAA0072:                                                         1205
*               ;                                                  1205
LHAA0072 DS    0H                                                  1206
*               GEN(LM    GPR00P,GPR15P,RPHWORK(GPR01P))           1206
*               REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);          1206
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*               RFY                                                1207
*                (GPR00P,                                          1207
*                 GPR01P,                                          1207
*                 GPR14P,                                          1207
*                 GPR15P) UNRSTD;                                  1207
*             END;                  /* ****END OF TPWAIT             */
*           END;                    /* END CIDCTL SUCCESSFUL         */
*         ELSE                                                     1210
*           ;                       /* CIDCTL FAILED                 */
@RF01139 DS    0H                                                  1211
*         CMZD0045=CMZD0045+72;     /* RESTORE SAVE AREA ADDRESS     */
         AL    CMZD0045,@CF03436                                   1211
*         GEN SETS(CMZE0045,CMZC0045) REFS(CMZD0045);              1212
          LM    CMZE0045,CMZC0045,12(CMZD0045)
*         RFY                                                      1213
*          (CMZ00045,                                              1213
*           CMZ10045,                                              1213
*           CMZ20045,                                              1213
*           CMZ80045,                                              1213
*           CMZC0045,                                              1213
*           CMZD0045,                                              1213
*           CMZE0045,                                              1213
*           CMZF0045) UNRSTD;                                      1213
*       END;                        /* END TPREDRVE GENERATION       */
*/*  SEGMENT(CVPDEAL)REQUEST                                         */
*                                                                  1215
*       DO;                                                        1215
*         GOTO CVPDEAL;                                            1216
         B     CVPDEAL                                             1216
*CVPDEAL#:                                                         1217
*       END;                                                       1217
CVPDEAL# DS    0H                                                  1218
*       NCSPLRIO=CVPON;             /*                       @ZA28442*/
         L     @04,CVPNCSPL                                        1218
         OI    NCSPLRIO(@04),B'00100000'                           1218
*       NCSPLCMD=NCSCQUIS;          /*                       @ZA28442*/
         MVC   NCSPLCMD(2,@04),@CB03690                            1219
*       CALL CVPDOIO;               /*                       @ZA28442*/
         BAL   @14,CVPDOIO                                         1220
*       NCSPLRIO=CVPOFF;            /*                       @ZA28442*/
         L     @04,CVPNCSPL                                        1221
         NI    NCSPLRIO(@04),B'11011111'                           1221
*       CALL CVPCLOSE;              /* GO DO CLOSE PROCESSING        */
         BAL   @14,CVPCLOSE                                        1222
*     END;                          /* END FOR ENTRY AN RN           */
*   ELSE                                                           1224
*     ;                                                            1224
@RF01106 DS    0H                                                  1225
*   IF RPRENTRY=RPRENTLH×RPRENTRY=RPRENTLS×RPRENTRY=RPRENTSW×RPRENTRY=
*       RPRENTRN THEN                                              1225
         L     @04,CVPWKPT1                                        1225
         CLI   RPRENTRY(@04),X'03'                                 1225
         BE    @RT01225                                            1225
         CLI   RPRENTRY(@04),X'05'                                 1225
         BE    @RT01225                                            1225
         CLI   RPRENTRY(@04),X'04'                                 1225
         BE    @RT01225                                            1225
         CLI   RPRENTRY(@04),X'01'                                 1225
         BNE   @RF01225                                            1225
@RT01225 DS    0H                                                  1226
*     DO;                           /*                       @DC36143*/
*       CVPINPUT=CVPNCSPL;          /* SET REG 1 TO NCSPL PTR        */
         L     @04,CVPNCSPL                                        1227
         LR    CVPINPUT,@04                                        1227
*       NCSPLRID=RPRNAME;           /* GET RESOURCE NAME FROM RDTE   */
         L     @03,CVPWKPT1                                        1228
         MVC   NCSPLRID(8,@04),RPRNAME(@03)                        1228
*       CALL ISTINCFS;              /* GO FREE SEGMENT               */
         L     @15,@CV05799                                        1229
         BALR  @14,@15                                             1229
*       DO;                                                        1230
*                                                                  1230
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*/* ** CLEAR AND SET CURRENT PROCEDURE BIT **                        */
*                                                                  1231
*         NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;                   1231
         L     @04,CVPNCSPL                                        1231
         L     @04,NCSPLRPH(,@04)                                  1231
         L     @04,RPHCRR(,@04)                                    1231
         L     @04,CRACRR(,@04)                                    1231
         XC    VYCCRT+1(11,@04),VYCCRT+1(@04)                      1231
         MVI   VYCCRT(@04),B'00000000'                             1231
*         NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;                   1232
         OI    CINCVP(@04),B'00001000'                             1232
*       END;                                                       1233
*     END;                          /*                       @DC36143*/
*   ELSE                                                           1235
*     ;                             /*                       @DC36143*/
@RF01225 DS    0H                                                  1236
*   CVPRTNAD=CVPHEDSV;              /*                       @DC36143*/
         L     CVPRTNAD,CVPHEDSV                                   1236
*   END CVPHEADP;                   /*                       @DC36143*/
@EL00005 DS    0H                                                  1237
@EF00005 DS    0H                                                  1237
@ER00005 BR    @14                                                 1237
@PB00005 DS    0H                                                  1238
*   GEN(   EJECT);                                                 1238
*                                                                  1238
            EJECT
*/* SEGMENT(CVPPR01)START                                            */
*                                                                  1239
*   DO;                                                            1239
*     GOTO CVPPR01@;                                               1240
         B     CVPPR01@                                            1240
*CVPPR01:                                                          1241
*   END;                                                           1241
*                                                                  1241
CVPPR01  DS    0H                                                  1242
*/********************************************************************/
*/*   CVPPR01 IS GEIVEN CONTROL BY MAINLINE TO PROCESS THE 3 POSSIBLE*/
*/* ENTRIES TO ISTINCVP:                                             */
*/*          1. CALLER IS ISTINCVI FOR VARY IMMEDIATE INITIALIZATION */
*/*          2. CALLER IS ISTINCVI FOR VARY IMMEDIATE TERMINATION    */
*/*          3. CALLER IS ISTINCVI TO PROCESS NEW PU                 */
*/*          4. CALLER IS ISTINCSM OR ISTINCVI FOR VARY NORMAL       */
*/*             CLEANUP(NO VARY PENDING)                             */
*/*   IF THE CALLER IS VARY IMMEDIATE INITIALIZATION, CVPLIN IS      */
*/* CALLED TO DEACTIVATE THE 370X.                                   */
*/*   IF NOT VARY IMMEDIATE INITIALIZATION, THE FOLLOWING IS DONE:   */
*/*    IF THE ENTRY IS AN LCDI, THE PEP COUNT IS DECREMENTED. IF THE */
*/*  PEP COUNT IS NOT 0, CVPPR01 RETURNS.                            */
*/*   OTHERWISE, CVPSCAN IS CALLED TO PROCESS THE ENTRY. UPON RETURN.*/
*/* FROM CVPSCAN IF THE SKIP HEAD SWITCH IS ON, A MSG IS ISSUED TO   */
*/* INDICATE HEADER PROCESSING HAS BEEN DONE. IF THE SKIP HEAD SWITCH*/
*/* IS NOT SET AND VARY PENDING IS SET FOR THE ENTRY, A MSG IS PUT   */
*/* OUT INDICATING THE ENTRY IS NOW OFFLINE & THE VARY PENDING FLAG  */
*/* IS CLEARED.                                                      */
*/*   IF THE ENTRY IS AN LCDI & THE CTERM PORTION IS VARY PENDING,   */
*/* HIGHER LEVEL VARY PENDING IN THE CTERM IS TURNED OFF & A MSG     */
*/* ISSUED.                                                          */
*/*   THE VARY IMMEDIATE FLAG IS TURNED OFF. IF HIGHER LEVEL VARY    */
*/* PENDING IS SET, THE HIGHER LEVEL VARY PENDING FLAG IS TURNED OFF.*/
*/* THE NEXT HIGHER NODE IS NOW PROCESSED BY GETTING NSNEA. IF VARY  */
*/* PENDING IS NOT SET, CVPPR01 EXITS.                               */
*/********************************************************************/
*                                                                  1242
*   RFY                                                            1242
*    (ISTRPRE,                                                     1242
*     ISTRPT,                                                      1242
*     ISTRLN) BASED(CVPWKPT1);                                     1242
*   IF NCSPLVIS=CVPON THEN          /* IF CALLER VARY IMM INIT       */
         L     @04,CVPNCSPL                                        1243
         TM    NCSPLVIS(@04),B'00000010'                           1243
         BNO   @RF01243                                            1243
*     CALL CVPLIN;                                                 1244
         BAL   @14,CVPLIN                                          1244
*   ELSE                                                           1245
*     DO WHILE CVPPR1LP=CVPOFF;                                    1245
         B     @RC01243                                            1245
@RF01243 B     @DE01245                                            1245
@DL01245 DS    0H                                                  1246
*       CVPSWICH=CVPSWICH&&CVPSWICH;/* CLEAR ALL SWITCHES            */
         XC    CVPSWICH(2),CVPSWICH                                1246
*       CVPPR1LP=CVPON;             /* FORCE LOOP EXIT               */
         OI    CVPPR1LP,B'00000100'                                1247
*       RPRCLVPD=CVPOFF;            /* TURN OFF ENTRY HAS BEEN CLOSED*/
         L     @04,CVPWKPT1                                        1248
         NI    RPRCLVPD(@04),B'01111111'                           1248
*       IF RPRENTRY=RPRENTLN&RLNPORT=CVPON THEN/* IF ENTRY IS A LINE
*                                      & A PORT                      */
         CLI   RPRENTRY(@04),X'50'                                 1249
         BNE   @RF01249                                            1249
         TM    RLNPORT(@04),B'00010000'                            1249
         BNO   @RF01249                                            1249
*         RPTPEPCT=RPTPEPCT-1;      /* DECREMENT PEP COUNT IN CTERM  */
         LH    @03,RPTPEPCT(,@04)                                  1250
         BCTR  @03,0                                               1250
         STH   @03,RPTPEPCT(,@04)                                  1250
*       ELSE                                                       1251
*         ;                                                        1251
@RF01249 DS    0H                                                  1252
*       IF RPRPEPCT^=0 THEN                                        1252
         L     @04,CVPWKPT1                                        1252
         LH    @03,RPRPEPCT(,@04)                                  1252
         LTR   @03,@03                                             1252
         BZ    @RF01252                                            1252
*         RPRPEPCT=RPRPEPCT-1;      /* DECREMENT PEP COUNT IF NOT  1253
*                                      ALREADY 0                     */
         BCTR  @03,0                                               1253
         STH   @03,RPRPEPCT(,@04)                                  1253
*       IF RPRPEPCT=0 THEN          /* IF PENDING COUNT HAS REACHED 0*/
@RF01252 L     @04,CVPWKPT1                                        1254
         LH    @03,RPRPEPCT(,@04)                                  1254
         LTR   @03,@03                                             1254
         BNZ   @RF01254                                            1254
*         DO;                                                      1255
*           RPRINIMM='0'B;          /* AS12052                       */
*                                                                  1256
         NI    RPRINIMM(@04),B'11111110'                           1256
*           /*********************************************************/
*           /*                                                       */
*           /* SEGMENT(CVPSCAN)REQUEST                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  1257
*           DO;                                                    1257
*             GOTO CVPSCAN;                                        1258
         B     CVPSCAN                                             1258
*CVPSCAN#:                                                         1259
*           END;                    /* PROCESS ENTRY                 */
CVPSCAN# DS    0H                                                  1260
*           IF CVPSKPHD=CVPON THEN  /* IF SKIP HEAD SWITCH ON        */
         TM    CVPSKPHD,B'00100000'                                1260
         BNO   @RF01260                                            1260
*             DO;                                                  1261
*               CVPMSG#='105I';     /* SET MSG # TO OFFLINE          */
         MVC   CVPMSG#(4),@CC05831                                 1262
*               CVPRID=ADDR(NCSPLRID);/* SET UP RID FOR TPMSG        */
         L     @04,CVPNCSPL                                        1263
         LA    @04,NCSPLRID(,@04)                                  1263
         ST    @04,CVPRID                                          1263
*               CALL CVPWTO;        /* ISSUE MSG                     */
         BAL   @14,CVPWTO                                          1264
*             END;                                                 1265
*           ELSE                                                   1266
*             DO;                   /* ELSE SKIP HEAD SWITCH NOT ON  */
         B     @RC01260                                            1266
@RF01260 DS    0H                                                  1267
*               IF RPRVRYPD=CVPON THEN/* ELSE IF VARY PENDING SET    */
         L     @04,CVPWKPT1                                        1267
         TM    RPRVRYPD(@04),B'00000010'                           1267
         BNO   @RF01267                                            1267
*                 DO;                                              1268
*                   CVPMSG#='105I'; /* SET MSG # TO OFFLINE          */
         MVC   CVPMSG#(4),@CC05831                                 1269
*                   CVPRID=ADDR(RPRNAME);/* SET UP NAME FOR TPMSG    */
         ST    @04,CVPRID                                          1270
*                   CALL CVPWTO;    /* ISSUE MSG                     */
         BAL   @14,CVPWTO                                          1271
*                   RPRVRYPD=CVPOFF;/* TURN OFF VARY PENDING         */
         L     @04,CVPWKPT1                                        1272
         NI    RPRVRYPD(@04),B'11111101'                           1272
*                   RPRINIMM='0'B;  /* AS12052                       */
         NI    RPRINIMM(@04),B'11111110'                           1273
*                 END;                                             1274
*               ELSE                                               1275
*                 ;                 /* NO VARY PENDING               */
@RF01267 DS    0H                                                  1276
*               IF RPRENTRY=RPRENTLN&RLNPORT=CVPON THEN/* ENTRY LCDI?*/
         L     @04,CVPWKPT1                                        1276
         CLI   RPRENTRY(@04),X'50'                                 1276
         BNE   @RF01276                                            1276
         TM    RLNPORT(@04),B'00010000'                            1276
         BNO   @RF01276                                            1276
*                 IF RPTVRYPD=CVPON THEN/* CTERM VQRY PD?            */
         TM    RPTVRYPD(@04),B'01000000'                           1277
         BNO   @RF01277                                            1277
*                   DO;                                            1278
*                     CVPMSG#='105I';/* SET UP OFFLINE MSG           */
         MVC   CVPMSG#(4),@CC05831                                 1279
*                     CVPRID=ADDR(RPTCTNM);/* SET UP NAME FOR TPMSG  */
         LA    @03,RPTCTNM(,@04)                                   1280
         ST    @03,CVPRID                                          1280
*                     RPTVRYPD=CVPOFF;/* TURN OFF VARY PENDING       */
         NI    RPTVRYPD(@04),B'10111111'                           1281
*                     CALL CVPWTO;  /* ISSUE MSG                     */
         BAL   @14,CVPWTO                                          1282
*                   END;            /* END FOR CTERM VARY PENDING    */
*                 ELSE                                             1284
*                   ;               /* ELSE CTERM NOT VARY PENDING   */
@RF01277 DS    0H                                                  1285
*               ELSE                                               1285
*                 ;                 /* ELSE NOT AN LCDI              */
@RF01276 DS    0H                                                  1286
*               RPRVYIMM=CVPOFF;    /* TURN OFF VARY IMMEDIATE FLAG  */
         L     @04,CVPWKPT1                                        1286
         NI    RPRVYIMM(@04),B'11111101'                           1286
*               IF RPRHLVPD=CVPON THEN/* IS HIGHER LEVEL VARY      1287
*                                      PENDING?                      */
         TM    RPRHLVPD(@04),B'00000100'                           1287
         BNO   @RF01287                                            1287
*                 DO;                                              1288
*                   CVPPR1LP=CVPOFF;/* STAY IN LOOP                  */
         NI    CVPPR1LP,B'11111011'                                1289
*                   RPRHLVPD=CVPOFF;/* CLEAR HIGHER LEVEL VARY PEND. */
         NI    RPRHLVPD(@04),B'11111011'                           1290
*                   IF CVPWKPT1=NCSPLRPT THEN/* IS THIS COMMAND    1291
*                                      ENTRY?                        */
         L     @03,CVPNCSPL                                        1291
         C     @04,NCSPLRPT(,@03)                                  1291
         BNE   @RF01291                                            1291
*                     CVPWKPT1=NCSPLNSN;/* GET NSNEA FROM NCSPL      */
         L     @04,NCSPLNSN(,@03)                                  1292
         ST    @04,CVPWKPT1                                        1292
*                   ELSE                                           1293
*                     CVPWKPT1=RPRNSNEA;/* ELSE SET WKPT1 TO NSNEA OF
*                                      CURRENT ENTRY                 */
         B     @RC01291                                            1293
@RF01291 L     @04,CVPWKPT1                                        1293
         L     @04,RPRNSNEA(,@04)                                  1293
         ST    @04,CVPWKPT1                                        1293
*                 END;              /* END FOR HIGHER LEVEL VARY   1294
*                                      PENDING                       */
*               ELSE                                               1295
*                 ;                                                1295
@RF01287 DS    0H                                                  1296
*             END;                  /* END FOR SKIP HEADER NOT ON    */
*         END;                      /* END FOR PEP COUNT = 0         */
*       ELSE                                                       1298
*         ;                         /* ELSE PEP COUNT ^=0            */
@RF01254 DS    0H                                                  1299
*     END;                          /* END FOR DO WHILE LOOP TO    1299
*                                      PROCESS HIGHER LEVEL VARY P   */
@RC01254 DS    0H                                                  1299
@DE01245 TM    CVPPR1LP,B'00000100'                                1299
         BZ    @DL01245                                            1299
*/* SEGMENT(CVPPR01)FINISH                                           */
*                                                                  1300
*   DO;                                                            1300
@RC01243 DS    0H                                                  1301
*     GOTO CVPPR01#;                                               1301
         B     CVPPR01#                                            1301
*CVPPR01@:                                                         1302
*   END;                                                           1302
CVPPR01@ DS    0H                                                  1303
*   GEN(   EJECT);                                                 1303
            EJECT
*CVPPEPLN:                                                         1304
*   PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);                        1304
         B     @PB00006                                            1304
CVPPEPLN DS    0H                                                  1305
*   CVPPLNSV=CVPRTNAD;              /* SAVE RETURN @                 */
         ST    CVPRTNAD,CVPPLNSV                                   1305
*/********************************************************************/
*/* THIS ROUTINE IS CALLED BY CVPLIN TO DEACTIVATE THE               */
*/* LINE REPRESENTED BY THE RDT ENTRY ADDRESSED BY CVPWKPT1.         */
*/* HOWEVER, IF 'VARY I/O DONE' IS SET (RPRVIODN='1'B), THEN         */
*/* THE DEACTIVATE COMMAND HAS ALREADY BEEN ISSUED, AND CVPPEPLN JUST*/
*/* RETURNS.                                                         */
*/********************************************************************/
*                                                                  1306
*   RFY                                                            1306
*     ISTRPRE BASED(CVPWKPT1);                                     1306
*   RFY                                                            1307
*     ISTRLN BASED(CVPWKPT1);                                      1307
*   IF RPRVIODN=CVPON THEN                                         1308
         L     @04,CVPWKPT1                                        1308
         TM    RPRVIODN(@04),B'00010000'                           1308
         BO    @RT01308                                            1308
*     ;                                                            1309
*   ELSE                                                           1310
*     DO;                                                          1310
*       IF NCSVBF11=CVPON           /* NCSPL FLAGGED INTERNAL ONLY?
*                                                            @XM95350*/
*         THEN                                                     1311
         L     @04,CVPNCSPL                                        1311
         TM    NCSVBF11(@04),B'00100000'                           1311
         BNO   @RF01311                                            1311
*         DO;                       /* YES -                 @XM95350*/
*           RPRVIODN=CVPON;         /* TURN ON I/O DONE FLAG @XM95350*/
*           RPRONLIN=CVPOFF;        /* OFFLINE               @ZA26906*/
         L     @04,CVPWKPT1                                        1314
         OI    RPRVIODN(@04),B'00010000'                           1314
         NI    RPRONLIN(@04),B'11110111'                           1314
*           CVPQUIT=CVPON;          /* TURN ON QUIT SWITCH SO CVPEPL3
*                                      WILL NOT DO ANY I/O   @XM95350*/
         OI    CVPQUIT,B'10000000'                                 1315
*         END;                      /*                       @XM95350*/
*       ELSE                                                       1317
*                                                                  1317
*         /***********************************************************/
*         /*                                                         */
*         /* SEGMENT(CVPEPL2)REQUEST                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1317
*         DO;                                                      1317
         B     @RC01311                                            1317
@RF01311 DS    0H                                                  1318
*           GOTO CVPEPL2;                                          1318
         B     CVPEPL2                                             1318
*CVPEPL2#:                                                         1319
*         END;                                                     1319
*                                                                  1319
CVPEPL2# DS    0H                                                  1320
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @XM95350*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  1320
*       IF RLNRAPEP=CVPON THEN      /* IS IT A PEP LINE?             */
*                                                                  1320
@RC01311 L     @04,CVPWKPT1                                        1320
         TM    RLNRAPEP(@04),B'00000001'                           1320
         BNO   @RF01320                                            1320
*         /***********************************************************/
*         /*                                                         */
*         /* SEGMENT(CVPEPL3)REQUEST                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1321
*         DO;                                                      1321
*           GOTO CVPEPL3;                                          1322
         B     CVPEPL3                                             1322
*CVPEPL3#:                                                         1323
*         END;                      /* GO DO PEP LINE PROCESSING     */
*       ELSE                                                       1324
*         CVPQUIT=CVPOFF;           /* ELSE TURN OFF QUIT SWITCH     */
         B     @RC01320                                            1324
@RF01320 NI    CVPQUIT,B'01111111'                                 1324
*     END;                                                         1325
@RC01320 DS    0H                                                  1326
*   CVPRTNAD=CVPPLNSV;              /* RESTORE RETURN @              */
@RT01308 L     CVPRTNAD,CVPPLNSV                                   1326
*   GEN(   EJECT);                                                 1327
*                                                                  1327
            EJECT
*/* SEGMENT(CVPEPL3)START                                            */
*                                                                  1328
*   DO;                                                            1328
*     GOTO CVPEPL3@;                                               1329
         B     CVPEPL3@                                            1329
*CVPEPL3:                                                          1330
*   END;                                                           1330
*                                                                  1330
CVPEPL3  DS    0H                                                  1331
*/********************************************************************/
*/* THIS SEGMENT IS INVOKED BY CVPPEPLN TO SWITCH THE PEP LINE BEING */
*/* DEACTIVATED TO EP MODE AND TO DEALLOCATE THE PEP LINE FROM VTAM. */
*/* CVPWKPT1 IS THE ADDRESS OF THE RDT ENTRY FOR THE PEP LINE.       */
*/********************************************************************/
*                                                                  1331
*   RFY                                                            1331
*    (ISTRPRE,                                                     1331
*     ISTRLN,                                                      1331
*     ISTRPT) BASED(CVPWKPT1);      /*                       @DM12066*/
*/********************************************************************/
*/* IF THE QUIT SWITCH HAS NOT BEEN SET,THEN SET THE NCSPL COMMAND   */
*/* CODE TO 'SWITCH TO EP', LOCATE THE 370X RDT ENTRY TO OBTAIN THE  */
*/* DAF OF THE 370X, BUILD THE CID IN NCSIOCID USING THE 370X DAF,   */
*/* OBTAIN THE DAF LOCK VIA CIDCTL, AND CALL ISTINCIO TO ISSUE THE   */
*/* COMMAND TO THE 370X.                                             */
*/********************************************************************/
*                                                                  1332
*   IF CVPQUIT=CVPOFF THEN                                         1332
         TM    CVPQUIT,B'10000000'                                 1332
         BNZ   @RF01332                                            1332
*     DO;                                                          1333
*       NCSPLCMD=NCSCSEP;           /* SWITCH TO EMULATOR PGM        */
         L     @04,CVPNCSPL                                        1334
         MVC   NCSPLCMD(2,@04),@CB03747                            1334
*       CVPP3OP='52'X;                                             1335
         MVI   CVPP3OP,X'52'                                       1335
*       IF RLNPORT=CVPON THEN                                      1336
         L     @04,CVPWKPT1                                        1336
         TM    RLNPORT(@04),B'00010000'                            1336
         BNO   @RF01336                                            1336
*         CVPP3DAF=RPTLNDAF;        /* USE LINE DAF IN PORT ENTRY  1337
*                                                            @DM12066*/
         MVC   CVPP3DAF(2),RPTLNDAF(@04)                           1337
*       ELSE                                                       1338
*         CVPP3DAF=RPRDAF;          /* GET DAF FROM RDTE     @DM12066*/
         B     @RC01336                                            1338
@RF01336 L     @04,CVPWKPT1                                        1338
         MVC   CVPP3DAF(2),RPRDAF(@04)                             1338
*       NCSPLRUO=ADDR(CVPP3RU);     /* SET OUTBOUND ADDRESS          */
@RC01336 L     @04,CVPNCSPL                                        1339
         LA    @03,CVPP3RU                                         1339
         ST    @03,NCSPLRUO(,@04)                                  1339
*       NCSPLOLN=LENGTH(CVPP3RU);   /* SET BUFFER LENGTH             */
         MVC   NCSPLOLN(2,@04),@CH00091                            1340
*       NCSPLRUI=0;                 /* INDICATE NO DATA SAVED        */
         SLR   @03,@03                                             1341
         ST    @03,NCSPLRUI(,@04)                                  1341
*       CALL CVPDOIO;                                              1342
*                                                                  1342
         BAL   @14,CVPDOIO                                         1342
*/********************************************************************/
*/* UPON RETURN, UPDATE THE CRR AUDIT TRAIL. IF NCSPL RETURN CODE    */
*/* INDICATES THAT I/O FIALED, THEN, IF I/O WAS PURGED, SET THE QUIT */
*/* SWITCH. CALL CVPWTO TO ISSUE ERROR MESSAGE FOR 'SWITCH TO EP'    */
*/* FAILURE.                                                         */
*/********************************************************************/
*                                                                  1343
*       IF NCSIORC^=NCSIOSUC THEN                                  1343
         L     @04,CVPNCSPL                                        1343
         CLI   NCSIORC(@04),X'00'                                  1343
         BE    @RF01343                                            1343
*         DO;                                                      1344
*           CVPMSG#='158I';                                        1345
         MVC   CVPMSG#(4),@CC05936                                 1345
*           CVPRID=ADDR(RPRNAME);                                  1346
         L     @04,CVPWKPT1                                        1346
         ST    @04,CVPRID                                          1346
*           CALL CVPWTO;                                           1347
         BAL   @14,CVPWTO                                          1347
*         END;                                                     1348
*       ELSE                                                       1349
*         DO;                       /* INDICATE LINE ON EP SIDE      */
         B     @RC01343                                            1349
@RF01343 DS    0H                                                  1350
*           RLNSWNCP=CVPOFF;        /* INDICATE LINE ON EP SIDE      */
*           RLNSWEP=CVPON;                                         1351
         L     @04,CVPWKPT1                                        1351
         OI    RLNSWEP(@04),B'00000100'                            1351
         NI    RLNSWNCP(@04),B'10111111'                           1351
*         END;                                                     1352
*     END;                          /* END FOR QUIT SWITCH NOT SET   */
*   ELSE                                                           1354
*     CVPQUIT=CVPOFF;                                              1354
*                                                                  1354
         B     @RC01332                                            1354
@RF01332 NI    CVPQUIT,B'01111111'                                 1354
*/* SEGMENT(CVPEPL3)FINISH                                           */
*                                                                  1355
*   DO;                                                            1355
@RC01332 DS    0H                                                  1356
*     GOTO CVPEPL3#;                                               1356
         B     CVPEPL3#                                            1356
*CVPEPL3@:                                                         1357
*   END;                                                           1357
CVPEPL3@ DS    0H                                                  1358
*   GEN(   EJECT);                                                 1358
*                                                                  1358
            EJECT
*/* SEGMENT(CVPEPL2)START                                            */
*                                                                  1359
*   DO;                                                            1359
*     GOTO CVPEPL2@;                                               1360
         B     CVPEPL2@                                            1360
*CVPEPL2:                                                          1361
*   END;                                                           1361
*                                                                  1361
CVPEPL2  DS    0H                                                  1362
*/********************************************************************/
*/* THIS ROUTINE IS CALLED BY CVPPEPLN TO                            */
*/* ISSUE A DEACTIVATE LINK COMMAND TO THE 370X FOR THE LINE         */
*/* REPRESENTED BY THE RDT ENTRY POINTED TO BY CVPWKPT1.             */
*/********************************************************************/
*                                                                  1362
*   RFY                                                            1362
*     ISTRPRE BASED(CVPWKPT1);                                     1362
*   RFY                                                            1363
*     ISTRLN BASED(CVPWKPT1);                                      1363
*                                                                  1363
*/********************************************************************/
*/* SET UP THE NCSPL TO INDICATE A DEACTIVATE LINK COMMAND TO THE    */
*/* 370X FOR THE LINE. OBTAIN THE DAF LOCK VIA CIDCTL AND CALL       */
*/* ISTINCIO TO ISSUE THE COMMAND.                                   */
*/********************************************************************/
*                                                                  1364
*   IF RPRLTASN='1'B THEN           /* IF LINE TRACE ACTIVE  @ZM32959*/
         L     @04,CVPWKPT1                                        1364
         TM    RPRLTASN(@04),B'10000000'                           1364
         BNO   @RF01364                                            1364
*     DO;                           /* TURN OFF LINE TRACING @ZM32959*/
*       NCSPLCMD=NCSCDCLT;          /* CMD IS DEACT LINE TRACE     1366
*                                                            @ZM32959*/
         L     @03,CVPNCSPL                                        1366
         MVC   NCSPLCMD(2,@03),@CB03765                            1366
*       CVPDCLRU(1:3)='010303'X;    /* SET UP OUTBOUND RU    @XM8372K*/
         MVC   CVPDCLRU(3),@CB05942                                1367
*       CVPDCLRU(6:8)='010000'X;    /*                       @ZM32959*/
         MVC   CVPDCLRU+5(3),@CB05943                              1368
*       IF RLNPORT='1'B THEN        /* IF ITS A PORT         @ZM32959*/
         TM    RLNPORT(@04),B'00010000'                            1369
         BNO   @RF01369                                            1369
*         CVPDCLRU(4:5)=RPTLNDAF;   /* SET UP LINE DAF       @ZM32959*/
         MVC   CVPDCLRU+3(2),RPTLNDAF(@04)                         1370
*       ELSE                                                       1371
*         CVPDCLRU(4:5)=RPRDAF;     /*                       @ZM32959*/
         B     @RC01369                                            1371
@RF01369 L     @04,CVPWKPT1                                        1371
         MVC   CVPDCLRU+3(2),RPRDAF(@04)                           1371
*       CVPWKPT3=CVPWKPT1;          /* SET WORK RDT PTR      @ZM32959*/
@RC01369 L     @04,CVPWKPT1                                        1372
         ST    @04,CVPWKPT3                                        1372
*       DO UNTIL CVPWKPT3->RPRENTRY=RPRENTRN;/* FIND RN ENTRY@ZM32959*/
@DL01373 DS    0H                                                  1374
*         CVPWKPT3=CVPWKPT3->RPRNSNEA;/* GET HIGHER NODE     @ZM32959*/
         L     @04,CVPWKPT3                                        1374
         L     @04,RPRNSNEA(,@04)                                  1374
         ST    @04,CVPWKPT3                                        1374
*       END;                        /* END DO UNTILE         @ZM32959*/
@DE01373 L     @04,CVPWKPT3                                        1375
         CLI   RPRENTRY(@04),X'01'                                 1375
         BNE   @DL01373                                            1375
*       NCSIOCID=CVPSAF+CVPWKPT3->RPRDAF;/* SET UP CID       @ZM32959*/
         L     @03,CVPNCSPL                                        1376
         LH    @04,RPRDAF(,@04)                                    1376
         N     @04,@CF06675                                        1376
         AL    @04,CVPSAF                                          1376
         ST    @04,NCSIOCID(,@03)                                  1376
*       NCSPLOLN=8;                 /* SET UP RECORD LENGTH  @ZM32959*/
         MVC   NCSPLOLN(2,@03),@CH00099                            1377
*       NCSPLRUI=0;                 /*                       @ZM32959*/
         SLR   @04,@04                                             1378
         ST    @04,NCSPLRUI(,@03)                                  1378
*       NCSPLRUO=ADDR(CVPDCLRU);    /* PUT RU ADDR. IN NCSPL @ZM32959*/
         LA    @04,CVPDCLRU                                        1379
         ST    @04,NCSPLRUO(,@03)                                  1379
*       CALL CVPDOIO;               /*                       @ZM32959*/
         BAL   @14,CVPDOIO                                         1380
*       RPRLTASN='0'B;              /* TURN OFF LINE TRACE IN LINE 1381
*                                                            @ZM32959*/
         L     @04,CVPWKPT1                                        1381
         NI    RPRLTASN(@04),B'01111111'                           1381
*       CVPWKPT3->RPRLTASN='0'B;    /* TURN OFF RN LINE TRACE      1382
*                                                            @ZM32959*/
         L     @04,CVPWKPT3                                        1382
         NI    RPRLTASN(@04),B'01111111'                           1382
*     END;                          /*                       @ZM32959*/
*   ELSE                                                           1384
*     ;                             /*                       @ZM32959*/
@RF01364 DS    0H                                                  1385
*   NCSPLCMD=NCSCDACL;              /* DEACTIVATE LINK               */
         L     @04,CVPNCSPL                                        1385
         MVC   NCSPLCMD(2,@04),@CB03739                            1385
*   CVPP2OP='01020B'X;                                             1386
         MVC   CVPP2OP(3),@CB05944                                 1386
*   IF RLNPORT=CVPON THEN                                          1387
         L     @04,CVPWKPT1                                        1387
         TM    RLNPORT(@04),B'00010000'                            1387
         BNO   @RF01387                                            1387
*     CVPP2DAF=CVPRPDAF;            /* GET DAF FROM RDTE             */
         MVC   CVPP2DAF(2),CVPRPDAF(@04)                           1388
*   ELSE                                                           1389
*     CVPP2DAF=RPRDAF;              /* ELSE GET 'NORMAL' DAF         */
         B     @RC01387                                            1389
@RF01387 L     @04,CVPWKPT1                                        1389
         MVC   CVPP2DAF(2),RPRDAF(@04)                             1389
*   NCSPLRUO=ADDR(CVPP2RU);         /* SET OUTBOUND RU ADDRESS       */
@RC01387 L     @04,CVPNCSPL                                        1390
         LA    @03,CVPP2RU                                         1390
         ST    @03,NCSPLRUO(,@04)                                  1390
*   NCSPLRUI=0;                     /* INDICATE NO DATA SAVED        */
         SLR   @03,@03                                             1391
         ST    @03,NCSPLRUI(,@04)                                  1391
*   NCSPLOLN=LENGTH(CVPP2RU);       /* SET BUFFER LENGTH             */
         MVC   NCSPLOLN(2,@04),@CH00133                            1392
*   CVPWKPT3=CVPWKPT1;                                             1393
         L     @04,CVPWKPT1                                        1393
         ST    @04,CVPWKPT3                                        1393
*   DO WHILE(CVPWKPT3->RPRENTRY^=RPRENTRN);                        1394
         B     @DE01394                                            1394
@DL01394 DS    0H                                                  1395
*     CVPWKPT3=CVPWKPT3->RPRNSNEA;                                 1395
         L     @04,CVPWKPT3                                        1395
         L     @04,RPRNSNEA(,@04)                                  1395
         ST    @04,CVPWKPT3                                        1395
*   END;                                                           1396
@DE01394 L     @04,CVPWKPT3                                        1396
         CLI   RPRENTRY(@04),X'01'                                 1396
         BNE   @DL01394                                            1396
*   NCSIOCID=CVPSAF+CVPWKPT3->RPRDAF;                              1397
         LH    @04,RPRDAF(,@04)                                    1397
         N     @04,@CF06675                                        1397
         AL    @04,CVPSAF                                          1397
         L     @03,CVPNCSPL                                        1397
         ST    @04,NCSIOCID(,@03)                                  1397
*   CALL CVPDOIO;                                                  1398
         BAL   @14,CVPDOIO                                         1398
*   RPRVIODN='1'B;                                                 1399
*   RPRONLIN=CVPOFF;                /*                       @ZA26906*/
         L     @04,CVPWKPT1                                        1400
         OI    RPRVIODN(@04),B'00010000'                           1400
         NI    RPRONLIN(@04),B'11110111'                           1400
*/*------------------------------------------------------------------*/
*/* UPDATE C/R DATA SET                                      @D32CKLV*/
*/*------------------------------------------------------------------*/
*                                                                  1401
*   NCSACTV='1'B;                   /*                       @X50BHLV*/
         L     @04,CVPNCSPL                                        1401
         OI    NCSACTV(@04),B'10000000'                            1401
*   NCSAIMOD='0'B;                  /*                       @X50BHLV*/
         NI    NCSAIMOD(@04),B'01111111'                           1402
*   CALL CVPCRIO;                   /*                       @X50BHLV*/
         BAL   @14,CVPCRIO                                         1403
*/********************************************************************/
*/* UPON RETURN, UPDATE CRR AUDIT TRAIL AND SET THE 'VARY I/O DONE'  */
*/* BIT IN THE RDT ENTRY FOR THE LINE. IF THE NCSPL RETURN CODE      */
*/* INDICATES AN I/O FAILURE, THEN, IF I/O WAS PURGED, SET THE QUIT  */
*/* SWITCH. CALL CVPWTO TO ISSUE ERROR MESSAGE.                      */
*/********************************************************************/
*                                                                  1404
*   IF NCSIORC^=NCSIOSUC THEN                                      1404
         L     @04,CVPNCSPL                                        1404
         CLI   NCSIORC(@04),X'00'                                  1404
         BE    @RF01404                                            1404
*     DO;                                                          1405
*       IF NCSIORC=NCSIOPRG THEN                                   1406
         CLI   NCSIORC(@04),X'08'                                  1406
         BNE   @RF01406                                            1406
*         CVPQUIT='1'B;                                            1407
         OI    CVPQUIT,B'10000000'                                 1407
*       ELSE                                                       1408
*         ;                                                        1408
@RF01406 DS    0H                                                  1409
*       CVPMSG#='161I';                                            1409
         MVC   CVPMSG#(4),@CC05945                                 1409
*       CVPRID=ADDR(RPRNAME);       /* SET UP NAME FOR TPMSG         */
         L     @04,CVPWKPT1                                        1410
         ST    @04,CVPRID                                          1410
*       CALL CVPWTO;                                               1411
         BAL   @14,CVPWTO                                          1411
*     END;                                                         1412
*   ELSE                                                           1413
*     RLNACTLN=CVPOFF;              /* SHOW LINE NOT ACTIVE          */
         B     @RC01404                                            1413
@RF01404 L     @04,CVPWKPT1                                        1413
         NI    RLNACTLN(@04),B'01111111'                           1413
*/* SEGMENT(CVPEPL2)FINISH                                           */
*                                                                  1414
*   DO;                                                            1414
@RC01404 DS    0H                                                  1415
*     GOTO CVPEPL2#;                                               1415
         B     CVPEPL2#                                            1415
*CVPEPL2@:                                                         1416
*   END;                                                           1416
*   END CVPPEPLN;                                                  1417
@EL00006 DS    0H                                                  1417
@EF00006 DS    0H                                                  1417
@ER00006 BR    @14                                                 1417
@PB00006 DS    0H                                                  1418
*   GEN(   EJECT);                                                 1418
*                                                                  1418
            EJECT
*/* SEGMENT(CVPLCLP)START                                            */
*                                                                  1419
*   DO;                                                            1419
*     GOTO CVPLCLP@;                                               1420
         B     CVPLCLP@                                            1420
*CVPLCLP:                                                          1421
*   END;                                                           1421
*                                                                  1421
CVPLCLP  DS    0H                                                  1422
*/********************************************************************/
*/* THIS ROUTINE IS CALLED BY CVPSCAN TO ISSUE A RECORD DEVICE       */
*/* STATISTICS FOR A LOCAL TERMINAL BEING DEACTIVATED, AND ALSO      */
*/* TO DEACTIVATE THE UCB/PUB.                                       */
*/********************************************************************/
*                                                                  1422
*   RFY                                                            1422
*     ISTRPRE BASED(CVPWKPT1);                                     1422
*                                                                  1422
*/********************************************************************/
*/* IF VARY I/O NOT ALREADY DONE FOR THE LOCAL, THEN SET NCSPLCMD    */
*/* 'RECORD DEVICE STATISTICS' COMMAND CODE, BUILD CID IN NCSIOCID   */
*/* USING DAF FROM RDT ENTRY, OBTAIN THE DAF LOCK VIA CIDCTL, AND    */
*/* CALL ISTINCIO TO ISSUE THE COMMAND. UPDATE THE CRR AUDIT TRAIL   */
*/* UPON RETURN, AND IF NCSPL RETURN CODE IS BAD, CALL CVPWTO TO     */
*/* ISSUE ERROR MESSAGE. SET THE 'VARY I/O DONE' BIT IN THE RDT ENTRY*/
*/********************************************************************/
*                                                                  1423
*   IF RPRVIODN=CVPOFF THEN                                        1423
         L     @04,CVPWKPT1                                        1423
         TM    RPRVIODN(@04),B'00010000'                           1423
         BNZ   @RF01423                                            1423
*     DO;                                                          1424
*       RFY                                                        1425
*         CVPR2 RSTD;                                              1425
*       NCSIOCID=CVPSAF+RPRDAF;                                    1426
         L     @03,CVPNCSPL                                        1426
         LH    @04,RPRDAF(,@04)                                    1426
         N     @04,@CF06675                                        1426
         AL    @04,CVPSAF                                          1426
         ST    @04,NCSIOCID(,@03)                                  1426
*       CVPINPUT=NCSPLRPH;          /* SET UP RPH FOR CIDCTL         */
         L     CVPINPUT,NCSPLRPH(,@03)                             1427
*       CVPR2=NCSPLCID;             /* SET UP CID                    */
         L     CVPR2,NCSPLCID(,@03)                                1428
*       DO;                         /* CIDCTL(FIND)                  */
*         RFY                                                      1430
*          (EMCR2,                                                 1430
*           EMCR3) RSTD;                                           1430
*         GEN SETS(RPHWORK)                                        1431
*             (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH); 1431
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*         EMCR3='00'X;              /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         1432
*         EMCR3='01'X;              /* INDICATE SHARED LOCK          */
         LA    EMCR3,1                                             1433
*         CALL ATCLCPTR->ATCCDFND->ISTSDCCF;/* PROCESS REQUEST       */
         L     @04,ATCLCPTR                                        1434
         L     @15,ATCCDFND(,@04)                                  1434
         BALR  @14,@15                                             1434
*         RFY                                                      1435
*          (EMCR2,                                                 1435
*           EMCR3) UNRSTD;                                         1435
*       END;                        /* CIDCTL GET LOCK SHARED        */
*       IF CVPRTNCD^=0 THEN                                        1437
         LTR   CVPRTNCD,CVPRTNCD                                   1437
         BNZ   @RT01437                                            1437
*         GOTO CVPLCEND;            /*                       @DM09634*/
*       ELSE                                                       1439
*         DO;                       /*                       @DM09634*/
*           CVPR2=CVPR0;            /* SET UP REG 2 FOR CIO          */
         LR    CVPR2,CVPR0                                         1440
*           CVPR0->LDNCLOSD=CVPON;                                 1441
         LR    @09,CVPR0                                           1441
         L     @04,LDNCLOSD-1(,@09)                                1441
@GL00032 LR    @03,@04                                             1441
         O     @03,@CF06687                                        1441
         CS    @04,@03,LDNCLOSD-1(@09)                             1441
         BNE   @GL00032                                            1441
*           NCSPLCMD=NCSCRDS;                                      1442
         L     @04,CVPNCSPL                                        1442
         MVC   NCSPLCMD(2,@04),@CB03688                            1442
*           CVPINPUT=CVPNCSPL;                                     1443
         LR    CVPINPUT,@04                                        1443
*           CALL ISTINCIO;                                         1444
         L     @15,@CV05800                                        1444
         BALR  @14,@15                                             1444
*           CVPINPUT=NCSPLRPH;                                     1445
         L     @04,CVPNCSPL                                        1445
         L     CVPINPUT,NCSPLRPH(,@04)                             1445
*           DO;                                                    1446
*                                                                  1446
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)  **               */
*                                                                  1447
*             DCL                                                  1447
*               CMZK0103 PTR(31) REG(1);                           1447
*             RFY                                                  1448
*              (CMZK0103) RSTD;                                    1448
*                                                                  1448
*             /*******************************************************/
*             /*                                                     */
*             /* ** CLEAR AND SET CURRENT PROCEDURE BIT              */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1449
*             CMZK0103->RPHCRR->CRACRR->VYCCRT='0'B;               1449
         L     @03,RPHCRR(,CMZK0103)                               1449
         L     @03,CRACRR(,@03)                                    1449
         XC    VYCCRT+1(11,@03),VYCCRT+1(@03)                      1449
         MVI   VYCCRT(@03),B'00000000'                             1449
*             CMZK0103->RPHCRR->CRACRR->CINCVP='1'B;               1450
         OI    CINCVP(@03),B'00001000'                             1450
*           END;                                                   1451
*           IF NCSIORC^=NCSIOSUC THEN                              1452
         CLI   NCSIORC(@04),X'00'                                  1452
         BE    @RF01452                                            1452
*             DO;                                                  1453
*               CVPMSG#='159I';                                    1454
         MVC   CVPMSG#(4),@CC05952                                 1454
*               CVPRID=ADDR(NCSPLRID);/* SET UP NAME FOR TPMSG       */
         LA    @04,NCSPLRID(,@04)                                  1455
         ST    @04,CVPRID                                          1455
*               CALL CVPWTO;                                       1456
         BAL   @14,CVPWTO                                          1456
*             END;                                                 1457
*           ELSE                                                   1458
*             ;                                                    1458
@RF01452 DS    0H                                                  1459
*           RPRVIODN=CVPON;                                        1459
*                                                                  1459
         L     @04,CVPWKPT1                                        1459
         OI    RPRVIODN(@04),B'00010000'                           1459
*/********************************************************************/
*/* CALL ISTINCAV TO DEALLOCATE THE LOCAL, UPDATE THE CRR AUDIT TRAIL*/
*/* UPON RETURN, AND IF RETRUN CODE INDICATES DEALLOCATE FAILED, THEN*/
*/* CALL CVPWTO TO ISSUE ERROR MESSAGE.                              */
*/********************************************************************/
*                                                                  1460
*           CVPINPUT=CVPNCSPL;                                     1460
         L     @03,CVPNCSPL                                        1460
         LR    CVPINPUT,@03                                        1460
*           NCSPLRAD=CVPWKPT1;      /* SET RAD TO LC @               */
         ST    @04,NCSPLRAD(,@03)                                  1461
*           CVPVBFSV=NCSPLVBF;                                     1462
         MVC   CVPVBFSV(2),NCSPLVBF(@03)                           1462
*           CVPVCDSV=NCSPLVCD;                                     1463
         MVC   CVPVCDSV(1),NCSPLVCD(@03)                           1463
*           NCSPLVBF=NCSVDEA;                                      1464
         MVC   NCSPLVBF(2,@03),@CB03585                            1464
*           NCSPLVCD=NCSPLVC1;                                     1465
         MVI   NCSPLVCD(@03),X'01'                                 1465
*           CALL ISTINCAV;                                         1466
         L     @15,@CV05796                                        1466
         BALR  @14,@15                                             1466
*           CVPWORKR=CVPRTNCD;                                     1467
         ST    CVPRTNCD,CVPWORKR                                   1467
*           CVPINPUT=NCSPLRPH;                                     1468
         L     @04,CVPNCSPL                                        1468
         L     CVPINPUT,NCSPLRPH(,@04)                             1468
*           DO;                                                    1469
*                                                                  1469
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)  **               */
*                                                                  1470
*             DCL                                                  1470
*               CMZK0104 PTR(31) REG(1);                           1470
*             RFY                                                  1471
*              (CMZK0104) RSTD;                                    1471
*                                                                  1471
*/*  ** CLEAR AND SET CURRENT PROCEDURE BIT **                       */
*                                                                  1472
*             CMZK0104->RPHCRR->CRACRR->VYCCRT='0'B;               1472
         L     @03,RPHCRR(,CMZK0104)                               1472
         L     @03,CRACRR(,@03)                                    1472
         XC    VYCCRT+1(11,@03),VYCCRT+1(@03)                      1472
         MVI   VYCCRT(@03),B'00000000'                             1472
*             CMZK0104->RPHCRR->CRACRR->CINCVP='1'B;               1473
         OI    CINCVP(@03),B'00001000'                             1473
*           END;                                                   1474
*           NCSPLVCD=CVPVCDSV;      /* RESTORE NCSPLVCD              */
         MVC   NCSPLVCD(1,@04),CVPVCDSV                            1475
*           NCSPLVBF=CVPVBFSV;      /* RESTORE NCSPLVBF              */
         MVC   NCSPLVBF(2,@04),CVPVBFSV                            1476
*           IF CVPWORKR^=0 THEN                                    1477
         L     @03,CVPWORKR                                        1477
         LTR   @03,@03                                             1477
         BZ    @RF01477                                            1477
*             DO;                                                  1478
*               CVPMSG#='156I';                                    1479
         MVC   CVPMSG#(4),@CC05954                                 1479
*               CVPRID=ADDR(NCSPLRID);/* SET UP RID FOR TPMSG        */
         LA    @04,NCSPLRID(,@04)                                  1480
         ST    @04,CVPRID                                          1480
*               CALL CVPWTO;                                       1481
         BAL   @14,CVPWTO                                          1481
*             END;                                                 1482
*         END;                      /*                       @DM09634*/
@RF01477 DS    0H                                                  1484
*     END;                          /* END FOR I/O DONE NOT ON       */
*   ELSE                                                           1485
*     ;                                                            1485
*                                                                  1485
@RF01423 DS    0H                                                  1486
*/********************************************************************/
*/* OTHERWISE, DO A TPREDRIVE TO CLEAR THE ATTENTION QUEUE AND       */
*/* THEN CALL CVPCLOSE TO CLOSE THE LOCAL CONTROL UNIT.      @D31JKMD*/
*/********************************************************************/
*                                                                  1486
*   CVPINPUT=NCSPLRPH;              /*                       @D31JKMD*/
         L     @04,CVPNCSPL                                        1486
         L     CVPINPUT,NCSPLRPH(,@04)                             1486
*   CVPINPUT->RPHWEA=CVPNCSPL;      /*                       @D31JKMD*/
         ST    @04,RPHWEA(,CVPINPUT)                               1487
*/* TPREDRVE                                                         */
*                                                                  1488
*   DO;                             /* BEGIN TPREDRVE GENERATION     */
*/* ATBUILD (ISTRPH)                                                 */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTCRA)                                                 */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTNCSPL)                                               */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTNCB)                                                 */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTICNCB)                                               */
*/* END OF ATBUILD                                                   */
*/* ATBUILD (ISTLDNCB)                                               */
*/* END OF ATBUILD                                                   */
*                                                                  1489
*     DCL                                                          1489
*       CMZ00105 REG(00) PTR(31),                                  1489
*       CMZ10105 REG(01) PTR(31),                                  1489
*       CMZ20105 REG(02) PTR(31),                                  1489
*       CMZ80105 REG(08) PTR(31),                                  1489
*       CMZC0105 REG(12) PTR(31),                                  1489
*       CMZD0105 REG(13) PTR(31),                                  1489
*       CMZE0105 REG(14) PTR(31),                                  1489
*       CMZF0105 REG(15) PTR(31);                                  1489
*     RFY                                                          1490
*      (CMZ00105,                                                  1490
*       CMZ10105,                                                  1490
*       CMZ20105,                                                  1490
*       CMZ80105,                                                  1490
*       CMZC0105,                                                  1490
*       CMZD0105,                                                  1490
*       CMZE0105,                                                  1490
*       CMZF0105) RSTD;                                            1490
*     GEN REFS(CMZE0105,CMZC0105,CMZD0105);                        1491
          STM   CMZE0105,CMZC0105,12(CMZD0105)
*     CMZD0105=CMZD0105-72;         /* ADDRESS NEW SAVE AREA         */
         SL    CMZD0105,@CF03436                                   1492
*     CMZ80105=RPHWEA;              /* ADDRESS NCSPL                 */
         L     CMZ80105,RPHWEA(,RPHPTR)                            1493
*     CMZ20105=CMZ80105->NCSIOCID;  /* SET CIDCTL PARAMETER          */
         L     CMZ20105,NCSIOCID(,CMZ80105)                        1494
*     DO;                           /* CIDCTL(FIND)                  */
*       RFY                                                        1496
*        (EMCR2,                                                   1496
*         EMCR3) RSTD;                                             1496
*       GEN SETS(RPHWORK)                                          1497
*           (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);   1497
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*       EMCR3='00'X;                /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         1498
*       EMCR3='01'X;                /* INDICATE SHARED LOCK          */
         LA    EMCR3,1                                             1499
*       CALL ATCLCPTR->ATCCDFND->ISTSDCCF;/* PROCESS REQUEST         */
         L     @09,ATCLCPTR                                        1500
         L     @15,ATCCDFND(,@09)                                  1500
         BALR  @14,@15                                             1500
*       RFY                                                        1501
*        (EMCR2,                                                   1501
*         EMCR3) UNRSTD;                                           1501
*     END;                          /* CIDCTL                        */
*     IF CMZF0105=0 THEN                                           1503
         LTR   CMZF0105,CMZF0105                                   1503
         BNZ   @RF01503                                            1503
*       DO;                         /* IF CIDCTL IS SUCCESSFUL       */
*         CMZ20105=CMZ00105;        /* LOAD NCB ADDRESS              */
         LR    CMZ20105,CMZ00105                                   1505
*         IF CMZ20105->NCBTYPE=ICTYPE THEN/* IF NCB AN ICNCB         */
         CLI   NCBTYPE(CMZ20105),X'06'                             1506
         BNE   @RF01506                                            1506
*           DO;                     /* PROCESS ICNCB NCB             */
*             CMZ20105->ICNZFF69='1'B;/* TURN ON ICNCB DEACTIVATE  1508
*                                      FLAG                          */
         L     @09,ICNZFF69-1(,CMZ20105)                           1508
@GL00033 LR    @04,@09                                             1508
         O     @04,@CF06681                                        1508
         CS    @09,@04,ICNZFF69-1(CMZ20105)                        1508
         BNE   @GL00033                                            1508
*/*  TPQUE (CMZ10105,CMZ20105->ICNZPAB4) NORM                        */
*                                                                  1509
*             DO;                                                  1509
*               RFY                                                1510
*                (GPR00P,                                          1510
*                 GPR01P,                                          1510
*                 GPR04P,                                          1510
*                 GPR05P,                                          1510
*                 GPR15P) RSTD;                                    1510
*               GEN REFS(GPR01P) SETS(RPHWORK)                     1511
*                   (STM GPR02P,GPR08P,RPHWORK(GPR01P));           1511
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*               GPR00P=0;                                          1512
         SLR   GPR00P,GPR00P                                       1512
*               GPR15P=ADDR(CMZ20105->ICNZPAB4);/* HOLD PAB PTR      */
         LA    GPR15P,ICNZPAB4(,CMZ20105)                          1513
*               GPR04P=CMZ10105;    /* WORK ELE PTR                  */
         LR    GPR04P,CMZ10105                                     1514
*               GPR05P=GPR15P;      /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       1515
*               CALL ATCLCPTR->ATCAP37->ISTAPC37;                  1516
         L     @09,ATCLCPTR                                        1516
         L     @15,ATCAP37(,@09)                                   1516
         BALR  @14,@15                                             1516
*               GEN(NOPR  0)                                       1517
*               NOSETS NOREFS;                                     1517
         NOPR  0
*               RFY                                                1518
*                (GPR00P,                                          1518
*                 GPR01P,                                          1518
*                 GPR04P,                                          1518
*                 GPR05P,                                          1518
*                 GPR15P) UNRSTD;                                  1518
*             END;                  /* *** END OF TPQUE GENERATION   */
*           END;                    /* END ICNCB NCB PROCESSING      */
*         ELSE                      /* IF NCB NOT AN ICNCB           */
*           DO;                     /* PROCESS LDNCB NCB             */
         B     @RC01506                                            1521
@RF01506 DS    0H                                                  1522
*             CMZ20105->LDNZFF69='1'B;/* TURN ON LDNCB DEACTIVATE  1522
*                                      FLAG                          */
         L     @09,LDNZFF69-1(,CMZ20105)                           1522
@GL00034 LR    @04,@09                                             1522
         O     @04,@CF06681                                        1522
         CS    @09,@04,LDNZFF69-1(CMZ20105)                        1522
         BNE   @GL00034                                            1522
*/*  TPQUE (CMZ10105,CMZ20105->LDNZPAB1) NORM                        */
*                                                                  1523
*             DO;                                                  1523
*               RFY                                                1524
*                (GPR00P,                                          1524
*                 GPR01P,                                          1524
*                 GPR04P,                                          1524
*                 GPR05P,                                          1524
*                 GPR15P) RSTD;                                    1524
*               GEN REFS(GPR01P) SETS(RPHWORK)                     1525
*                   (STM GPR02P,GPR08P,RPHWORK(GPR01P));           1525
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*               GPR00P=0;                                          1526
         SLR   GPR00P,GPR00P                                       1526
*               GPR15P=ADDR(CMZ20105->LDNZPAB1);/* HOLD PAB PTR      */
         LA    GPR15P,LDNZPAB1(,CMZ20105)                          1527
*               GPR04P=CMZ10105;    /* WORK ELE PTR                  */
         LR    GPR04P,CMZ10105                                     1528
*               GPR05P=GPR15P;      /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       1529
*               CALL ATCLCPTR->ATCAP37->ISTAPC37;                  1530
         L     @09,ATCLCPTR                                        1530
         L     @15,ATCAP37(,@09)                                   1530
         BALR  @14,@15                                             1530
*               GEN(NOPR  0)                                       1531
*               NOSETS NOREFS;                                     1531
         NOPR  0
*               RFY                                                1532
*                (GPR00P,                                          1532
*                 GPR01P,                                          1532
*                 GPR04P,                                          1532
*                 GPR05P,                                          1532
*                 GPR15P) UNRSTD;                                  1532
*             END;                  /* *** END OF TPQUE GENERATION   */
*           END;                    /* END LDNCB NCB                 */
*         CMZ20105=CMZ80105->NCSIOCID;/* SET CIDCTL PARAMETER        */
@RC01506 L     CMZ20105,NCSIOCID(,CMZ80105)                        1535
*         DO;                       /* CIDCTL(FINISH)                */
*           RFY                                                    1537
*            (EMCR2,                                               1537
*             EMCR3) RSTD;                                         1537
*           GEN SETS(RPHWORK)                                      1538
*               (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*           EMCR3='00'X;            /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         1539
*           CALL ATCLCPTR->ATCCDFIN->ISTSDCCR;/* PROCESS REQUEST     */
         L     @09,ATCLCPTR                                        1540
         L     @15,ATCCDFIN(,@09)                                  1540
         BALR  @14,@15                                             1540
*           RFY                                                    1541
*            (EMCR2,                                               1541
*             EMCR3) UNRSTD;                                       1541
*         END;                      /* CIDCTL                        */
*/*  TPWAIT                                                          */
*                                                                  1543
*         DO;                       /* BEGIN TPWAIT GENERATION       */
*           RFY                                                    1544
*            (GPR01P,                                              1544
*             GPR14P,                                              1544
*             GPR15P) RSTD;                                        1544
*           RFY                                                    1545
*            (GPR00P) RSTD;                                        1545
*           GEN(STM   GPR00P,GPR15P,RPHWORK(GPR01P))               1546
*           REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);              1546
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*           RFY                                                    1547
*            (GPR00P) UNRSTD;                                      1547
*           GPR15P=ADDR(LHAA0132);                                 1548
         LA    GPR15P,LHAA0132                                     1548
*           GPR14P=0;                                              1549
         SLR   GPR14P,GPR14P                                       1549
*           GPR15P=GPR15P&'00FFFFFF'X;                             1550
         N     GPR15P,@CF05903                                     1550
*           GPR15P=GPR15P×RPHWT1;                                  1551
         O     GPR15P,@CF02817                                     1551
*           CS(GPR14P,GPR15P,GPR01P->RPHRESMA);                    1552
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         1552
*           BC(7,LHAB0132);                                        1553
*                                                                  1553
         BC    7,LHAB0132                                          1553
*/* TPEXIT  NONE                                                     */
*                                                                  1554
*           DO;                                                    1554
*             RESPECIFY                                            1555
*               GPR15P RSTD;                                       1555
*                                                                  1555
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  1556
*             DO;                   /* LISATCVT                    1556
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     1557
*             END;                  /* LISATCVT                      */
*             RESPECIFY                                            1559
*               GPR00F RSTD;                                       1559
*             GPR00F=0;             /* SET PARAMETER REGISTER TO 0   */
         SLR   GPR00F,GPR00F                                       1560
*             GPR15P=GPR15P->ATCAP31;                              1561
         L     GPR15P,ATCAP31(,GPR15P)                             1561
*             DCL                                                  1562
*               FMZL0137 BASED(GPR15P) LABEL VALUERANGE(*);        1562
*             CALL FMZL0137;                                       1563
         BALR  @14,@15                                             1563
*             RESPECIFY                                            1564
*              (GPR00F,                                            1564
*               GPR15P) UNRSTD;                                    1564
*           END;                    /* **** END OF TPEXIT            */
*LHAB0132:                                                         1566
*           ;                                                      1566
LHAB0132 DS    0H                                                  1567
*           GPR01P->RPHRESMA=0;                                    1567
         SLR   @09,@09                                             1567
         ST    @09,RPHRESMA(,GPR01P)                               1567
*           RFY                                                    1568
*            (GPR00P) RSTD;                                        1568
*LHAA0132:                                                         1569
*           ;                                                      1569
LHAA0132 DS    0H                                                  1570
*           GEN(LM    GPR00P,GPR15P,RPHWORK(GPR01P))               1570
*           REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);              1570
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*           RFY                                                    1571
*            (GPR00P,                                              1571
*             GPR01P,                                              1571
*             GPR14P,                                              1571
*             GPR15P) UNRSTD;                                      1571
*         END;                      /* ****END OF TPWAIT             */
*       END;                        /* END CIDCTL SUCCESSFUL         */
*     ELSE                                                         1574
*       ;                           /* CIDCTL FAILED                 */
@RF01503 DS    0H                                                  1575
*     CMZD0105=CMZD0105+72;         /* RESTORE SAVE AREA ADDRESS     */
         AL    CMZD0105,@CF03436                                   1575
*     GEN SETS(CMZE0105,CMZC0105) REFS(CMZD0105);                  1576
          LM    CMZE0105,CMZC0105,12(CMZD0105)
*     RFY                                                          1577
*      (CMZ00105,                                                  1577
*       CMZ10105,                                                  1577
*       CMZ20105,                                                  1577
*       CMZ80105,                                                  1577
*       CMZC0105,                                                  1577
*       CMZD0105,                                                  1577
*       CMZE0105,                                                  1577
*       CMZF0105) UNRSTD;                                          1577
*   END;                            /* END TPREDRVE GENERATION       */
*   CALL CVPCLOSE;                                                 1579
         BAL   @14,CVPCLOSE                                        1579
*CVPLCEND:                          /*                       @DM09634*/
*/* SEGMENT(CVPLCLP)FINISH                                           */
*                                                                  1580
*   DO;                                                            1580
CVPLCEND DS    0H                                                  1581
*     GOTO CVPLCLP#;                                               1581
         B     CVPLCLP#                                            1581
*CVPLCLP@:                                                         1582
*   END;                                                           1582
CVPLCLP@ DS    0H                                                  1583
*   GEN(   EJECT);                                                 1583
*                                                                  1583
            EJECT
*/* SEGMENT(CVPSNCL)START                                            */
*                                                                  1584
*   DO;                                                            1584
*     GOTO CVPSNCL@;                                               1585
         B     CVPSNCL@                                            1585
*CVPSNCL:                                                          1586
*   END;                                                           1586
*                                                                  1586
CVPSNCL  DS    0H                                                  1587
*/*-------------------------------------------------------------------
*                                                                    */
*/* THIS SEGMENT IS CALLED TO DEACTIVATE PU IN THE 370X OR IN THE    */
*/* LOCAL SUBAREA OR IN THE SWITHED SUBAREA                  @D32CKLV*/
*/*------------------------------------------------------------------*/
*                                                                  1587
*   IF RPRVIODN=CVPON               /* I/O DONE ?            @D32CKLV*/
*     THEN                                                         1587
         L     @04,CVPWKPT1                                        1587
         TM    RPRVIODN(@04),B'00010000'                           1587
         BNO   @RF01587                                            1587
*     DO;                                                          1588
*       IF RPRHDTYP=RPRENTSW        /* YES, IF PU IN SW SUBAREA      */
*         THEN                                                     1589
         CLI   RPRHDTYP(@04),X'04'                                 1589
         BNE   @RF01589                                            1589
*         CALL CVPSNA1;             /* INVOKE CVPSNA1 TO PROC SW SUB
*                                                            @D32CKLV*/
         BAL   @14,CVPSNA1                                         1590
*       ELSE                                                       1591
*         ;                         /*                       @D32CKLV*/
@RF01589 DS    0H                                                  1592
*     END;                          /* END OF I/O DONE FLAG ON       */
*   ELSE                                                           1593
*     DO;                           /* I/O NOT DONE                  */
         B     @RC01587                                            1593
@RF01587 DS    0H                                                  1594
*       NCSPLRAD=CVPWKPT1;          /* PU RDTE ADDR          @D32CKLV*/
         L     @04,CVPNCSPL                                        1594
         L     @03,CVPWKPT1                                        1594
         ST    @03,NCSPLRAD(,@04)                                  1594
*       CVPINPUT=CVPNCSPL;          /*                       @D32CKLV*/
         LR    CVPINPUT,@04                                        1595
*       CALL ISTINCX7;              /* SEND DE-ACTPU         @D32CKLV*/
         L     @15,@CV05806                                        1596
         BALR  @14,@15                                             1596
*       DO;                                                        1597
*                                                                  1597
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  1598
*         /***********************************************************/
*         /*                                                         */
*         /* ** CLEAR AND SET CURRENT PROCEDURE BIT                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1598
*         NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;                   1598
         L     @04,CVPNCSPL                                        1598
         L     @03,NCSPLRPH(,@04)                                  1598
         L     @03,RPHCRR(,@03)                                    1598
         L     @03,CRACRR(,@03)                                    1598
         XC    VYCCRT+1(11,@03),VYCCRT+1(@03)                      1598
         MVI   VYCCRT(@03),B'00000000'                             1598
*         NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;                   1599
         OI    CINCVP(@03),B'00001000'                             1599
*       END;                                                       1600
*       IF RPRHDTYP=RPRENTLS        /* PU IN LOCAL SUBAREA ?         */
*         THEN                                                     1601
         L     @03,CVPWKPT1                                        1601
         CLI   RPRHDTYP(@03),X'05'                                 1601
         BNE   @RF01601                                            1601
*         DO;                       /* YES,                  @D32CKLV*/
*           NCSPLP1=RCCDPAB;        /* PAB OF PU             @D32CKLV*/
         L     @03,RCCDPAB(,@03)                                   1603
         ST    @03,NCSPLP1(,@04)                                   1603
*           CVPINPUT=CVPNCSPL;      /*                       @D32CKLV*/
         LR    CVPINPUT,@04                                        1604
*           CALL ISTINCL7;          /* DISCONTACT CHANNEL    @D32CKLV*/
         L     @15,@CV05801                                        1605
         BALR  @14,@15                                             1605
*           DO;                                                    1606
*                                                                  1606
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  1607
*             /*******************************************************/
*             /*                                                     */
*             /* ** CLEAR AND SET CURRENT PROCEDURE BIT              */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1607
*             NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;               1607
         L     @04,CVPNCSPL                                        1607
         L     @04,NCSPLRPH(,@04)                                  1607
         L     @04,RPHCRR(,@04)                                    1607
         L     @04,CRACRR(,@04)                                    1607
         XC    VYCCRT+1(11,@04),VYCCRT+1(@04)                      1607
         MVI   VYCCRT(@04),B'00000000'                             1607
*             NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;               1608
         OI    CINCVP(@04),B'00001000'                             1608
*           END;                    /*                       @D32CKLV*/
*         END;                      /*                       @D32CKLV*/
*       ELSE                                                       1611
*         IF RPRHDTYP=RPRENTRN      /* IS PU IN 370X         @D32CKLV*/
*           THEN                    /* SEGMENT(CVPSNA2)REQUEST       */
         B     @RC01601                                            1611
@RF01601 L     @04,CVPWKPT1                                        1611
         CLI   RPRHDTYP(@04),X'01'                                 1611
         BNE   @RF01611                                            1611
*           DO;                                                    1612
*             GOTO CVPSNA2;                                        1613
         B     CVPSNA2                                             1613
*CVPSNA2#:                                                         1614
*           END;                                                   1614
*                                                                  1614
*/* YES, INVOKE CVPSNA2                                              */
*                                                                  1615
*         ELSE                                                     1615
*           CALL CVPSNA1;           /* INVOKE CVPSNA1 TO PROC SWITHED
*                                      SUBAREA               @D32CKLV*/
         B     @RC01611                                            1615
@RF01611 BAL   @14,CVPSNA1                                         1615
*     END;                          /*                       @D32CKLV*/
@RC01611 DS    0H                                                  1616
@RC01601 DS    0H                                                  1617
*   RPRVIODN=CVPON;                 /* SET I/O DONE          @D32CKLV*/
@RC01587 L     @04,CVPWKPT1                                        1617
         OI    RPRVIODN(@04),B'00010000'                           1617
*   CALL CVPCLOSE;                  /* CLOSE SSCP PU SESSION @D32CKLV*/
         BAL   @14,CVPCLOSE                                        1618
*   RPRVRYPD=CVPOFF;                /* CLEAR VARY PENDING    @D32CKLV*/
         L     @04,CVPWKPT1                                        1619
         NI    RPRVRYPD(@04),B'11111101'                           1619
*   RPRVYIMM=CVPOFF;                /* CLEAR VARY IMM        @D32CKLV*/
*   RPRONLIN=CVPOFF;                /* CLEAR ON-LINE         @D32CKLV*/
         NI    RPRVYIMM(@04),B'11110101'                           1621
*   RPRLIVE=CVPOFF;                 /* CLEAR LIVE            @D32CKLV*/
         NI    RPRLIVE(@04),B'11111110'                            1622
*   RCCACTPU=CVPOFF;                /* DEACT PHYSICAL DONE   @D32CKLV*/
         NI    RCCACTPU(@04),B'01111111'                           1623
*   RCCCUDIE=CVPOFF;                /* PU DEACT              @D32CKLV*/
         NI    RCCCUDIE(@04),B'10111111'                           1624
*   RCCFINAL=CVPOFF;                /* DEACT PU FINAL REQ=OFF        */
*   RCCRTGOH=CVPOFF;                /* DCR3878.0                     */
         NI    RCCFINAL(@04),B'11110110'                           1626
*   RCCOHIMM=CVPOFF;                /* DCR3878.0                     */
         NI    RCCOHIMM(@04),B'11110111'                           1627
*   RPRINIMM='0'B;                  /* AS12052                       */
         NI    RPRINIMM(@04),B'11111110'                           1628
*   IF RPRHDTYP=RPRENTRN            /* PU IN 370X ?          @D32CKLV*/
*     THEN                                                         1629
         CLI   RPRHDTYP(@04),X'01'                                 1629
         BNE   @RF01629                                            1629
*     DO;                           /* YES                   @D32CKLV*/
*       RPRVRYPD=CVPON;             /* SET VARY PENDING      @D32CKLV*/
         OI    RPRVRYPD(@04),B'00000010'                           1631
*       CALL CVPSNA3;               /* DO PAB PURGE AND EXIT @D32CKLV*/
         BAL   @14,CVPSNA3                                         1632
*     END;                          /*                       @D32CKLV*/
*   ELSE                                                           1634
*     IF RCCRESET=CVPON             /* RESET ONLY ON ?       @D32CKLV*/
*       THEN                        /* SEGMENT(CVPSNA4)REQUEST       */
         B     @RC01629                                            1634
@RF01629 L     @04,CVPWKPT1                                        1634
         TM    RCCRESET(@04),B'00000100'                           1634
         BNO   @RF01634                                            1634
*       DO;                                                        1635
*         GOTO CVPSNA4;                                            1636
         B     CVPSNA4                                             1636
*CVPSNA4#:                                                         1637
*       END;                        /* YES, RESTORE PU AND LUS       */
*     ELSE                                                         1638
*       DO;                         /* NOT RESET ONLY        @D32CKLV*/
         B     @RC01634                                            1638
@RF01634 DS    0H                                                  1639
*         IF RPRHDTYP=RPRENTLS      /* IS PU IS LOCAL SUBAREA      1639
*                                                            @D32CKLV*/
*           THEN                                                   1639
         L     @04,CVPWKPT1                                        1639
         CLI   RPRHDTYP(@04),X'05'                                 1639
         BNE   @RF01639                                            1639
*           DO;                     /* YES,                  @D32CKLV*/
*             CVPINPUT=CVPNCSPL;    /*                       @D32CKLV*/
         L     CVPINPUT,CVPNCSPL                                   1641
*             CALL ISTINCL8;        /*                       @D32CKLV*/
         L     @15,@CV05802                                        1642
         BALR  @14,@15                                             1642
*             DO;                                                  1643
*                                                                  1643
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  1644
*               /*****************************************************/
*               /*                                                   */
*               /* ** CLEAR AND SET CURRENT PROCEDURE BIT            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  1644
*               NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;             1644
         L     @04,CVPNCSPL                                        1644
         L     @04,NCSPLRPH(,@04)                                  1644
         L     @04,RPHCRR(,@04)                                    1644
         L     @04,CRACRR(,@04)                                    1644
         XC    VYCCRT+1(11,@04),VYCCRT+1(@04)                      1644
         MVI   VYCCRT(@04),B'00000000'                             1644
*               NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;             1645
         OI    CINCVP(@04),B'00001000'                             1645
*             END;                  /*                       @D32CKLV*/
*           END;                    /*                       @D32CKLV*/
*         ELSE                                                     1648
*           ;                       /*                       @D32CKLV*/
*                                                                  1648
@RF01639 DS    0H                                                  1649
*         /***********************************************************/
*         /*                                                         */
*         /* SEGMENT(CVPSNA5)REQUEST                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1649
*         DO;                                                      1649
*           GOTO CVPSNA5;                                          1650
         B     CVPSNA5                                             1650
*CVPSNA5#:                                                         1651
*         END;                                                     1651
*                                                                  1651
CVPSNA5# DS    0H                                                  1652
*         /***********************************************************/
*         /*                                                         */
*         /*                                                 @D32CKLV*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  1652
*       END;                        /* END OF NOT RESET ONLY         */
*/* SEGMENT(CVPSNCL)FINISH                                           */
*                                                                  1653
*   DO;                                                            1653
@RC01634 DS    0H                                                  1653
@RC01629 DS    0H                                                  1654
*     GOTO CVPSNCL#;                                               1654
         B     CVPSNCL#                                            1654
*CVPSNCL@:                                                         1655
*   END;                                                           1655
*                                                                  1655
CVPSNCL@ DS    0H                                                  1656
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @D32CKLV*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1656
*   GEN(EJECT);                     /*                       @D32CKLV*/
         EJECT
*CVPSNA1:                                                          1657
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @D32CKLV*/
         B     @PB00007                                            1657
CVPSNA1  DS    0H                                                  1658
*/*------------------------------------------------------------------*/
*/* CVPSNA1  IS CALLED BY CVPSNCL TO DEACTIVATE THE SWITHED PU       */
*/*------------------------------------------------------------------*/
*                                                                  1658
*   CVPSNA1S=CVPRTNAD;              /*                       @D32CKLV*/
         ST    CVPRTNAD,CVPSNA1S                                   1658
*   GTNCSAD=0;                      /* INDICATE GET NCSPL    @D32CKLV*/
         L     @04,CVPNCSPL                                        1659
         L     @03,NCSPLRPH(,@04)                                  1659
         L     @09,RPHCRR(,@03)                                    1659
         LA    @08,118                                             1659
         AL    @08,CRACRR(,@09)                                    1659
         SLR   @09,@09                                             1659
         ST    @09,GTNCSAD(,@08)                                   1659
*   GTNCSREQ='1'B;                  /* REQSTORE MAY BE USED  @D32CKLV*/
*   GTNCSRQU='1'B;                  /* QUEUE OPTION MAY BE USED      */
*   GTNCSWKA='0'B;                  /* REQ. NCSPL WKA        @D32CKLV*/
         OI    GTNCSREQ(@08),B'11000000'                           1662
         NI    GTNCSWKA(@08),B'11011111'                           1662
*   CVPR0=ADDR(GTNCSAD);            /* ISTINCW3 PARM.LIST    @D32CKLV*/
         LR    CVPR0,@08                                           1663
*   CVPINPUT=NCSPLRPH;              /*                       @D32CKLV*/
         LR    CVPINPUT,@03                                        1664
*   CALL NCSPLCVT->ATCINCW3;        /* GET NCSPL             @D32CKLV*/
         L     @04,NCSPLCVT(,@04)                                  1665
         L     @15,ATCINCW3(,@04)                                  1665
         BALR  @14,@15                                             1665
*   IF CVPRTNCD^=0                  /* IF GET NCSPL FAILED   @D32CKLV*/
*     THEN                                                         1666
         LTR   CVPRTNCD,CVPRTNCD                                   1666
         BZ    @RF01666                                            1666
*     DO;                           /* THEN WRITE MSG 681 SAYING     */
*       CVPMSG#='681A';             /* POTENTIAL OPEN        @XM18635*/
         MVC   CVPMSG#(4),@CC05987                                 1668
*       CVPRID=ADDR(RPRNAME);       /* CONNECTION ON LINK = PUNAME,  */
         L     @04,CVPWKPT1                                        1669
         ST    @04,CVPRID                                          1669
*       CALL CVPWTO;                /* MANUALLY HANG UP.     @D32CKLV*/
         BAL   @14,CVPWTO                                          1670
*     END;                          /*                       @D32CKLV*/
*   ELSE                                                           1672
*     DO;                           /* DO IF GET NCSPL OK    @D32CKLV*/
         B     @RC01666                                            1672
@RF01666 DS    0H                                                  1673
*       RFY                                                        1673
*         ISTRUB BASED(ADDR(CVPSNCRU));/*                    @D32CKLV*/
*       GTNCSAD->NCSPLRSF='1'B;     /* NO SICK CLEAR BEFORE I/O    1674
*                                                            @D32CKLV*/
         L     @04,CVPNCSPL                                        1674
         L     @04,NCSPLRPH(,@04)                                  1674
         L     @04,RPHCRR(,@04)                                    1674
         L     @04,CRACRR(,@04)                                    1674
         L     @04,GTNCSAD+118(,@04)                               1674
         OI    NCSPLRSF(@04),B'01000000'                           1674
*       GTNCSAD->NCSPLOLN=7;        /* RU LENGTH             @D32CKLV*/
         MVC   NCSPLOLN(2,@04),@CH00089                            1675
*       GTNCSAD->NCSPLRUI=0;        /* LENGTH OF I/B RU      @D32CKLV*/
         SLR   @03,@03                                             1676
         ST    @03,NCSPLRUI(,@04)                                  1676
*       GTNCSAD->NCSPLCMD=NCSCFNA;  /*                       @D32CKLV*/
         MVC   NCSPLCMD(2,@04),@CB03769                            1677
*       GTNCSAD->NCSPLRUO=ADDR(CVPSNCRU);/* RU ADDR          @D32CKLV*/
         LA    @03,CVPSNCRU                                        1678
         ST    @03,NCSPLRUO(,@04)                                  1678
*       GTNCSAD->NCSPLVCD=NCSPLVC6; /* INTERNAL CMD          @ZD13755*/
         MVI   NCSPLVCD(@04),X'06'                                 1679
*       GTNCSAD->NCSPLVBF=NCSSEND;  /* SNED                  @ZD13755*/
         MVC   NCSPLVBF(2,@04),@CB03611                            1680
*       GTNCSAD->NCSVSTAT='1'B;     /* STATIC - POST INCE2   @ZD13756*/
         OI    NCSVSTAT(@04),B'00100000'                           1681
*       CVPSNCRU=CVPSNCRU&&CVPSNCRU;/* CLEAR RU              @D32CKLV*/
         XC    CVPSNCRU(8),CVPSNCRU                                1682
*       NSRUID=NSRUNS;              /*                       @D32CKLV*/
         LA    @04,CVPSNCRU                                        1683
         MVI   NSRUID(@04),X'01'                                   1683
*       NSRUSUB=NSRUPCS;            /* FORMAT RU             @D32CKLV*/
         MVI   NSRUSUB(@04),X'02'                                  1684
*       NSRURCD=NSRUFNA;            /*                       @D32CKLV*/
         MVI   NSRURCD(@04),X'1A'                                  1685
*       CVPWKPT3=CVPWKPT1;                                         1686
         L     @04,CVPWKPT1                                        1686
         ST    @04,CVPWKPT3                                        1686
*       DO WHILE CVPWKPT3->RPRENTRY^=RPRENTRN;                     1687
         B     @DE01687                                            1687
@DL01687 DS    0H                                                  1688
*         CVPWKPT3=CVPWKPT3->RPRNSNEA;                             1688
         L     @04,CVPWKPT3                                        1688
         L     @04,RPRNSNEA(,@04)                                  1688
         ST    @04,CVPWKPT3                                        1688
*       END;                                                       1689
@DE01687 L     @04,CVPWKPT3                                        1689
         CLI   RPRENTRY(@04),X'01'                                 1689
         BNE   @DL01687                                            1689
*       GTNCSAD->NCSPLDAF=CVPWKPT3->RPRDAF;/* RN DAF         @ZD13756*/
         L     @03,CVPNCSPL                                        1690
         L     @09,NCSPLRPH(,@03)                                  1690
         L     @09,RPHCRR(,@09)                                    1690
         L     @09,CRACRR(,@09)                                    1690
         L     @09,GTNCSAD+118(,@09)                               1690
         MVC   NCSPLDAF(2,@09),RPRDAF(@04)                         1690
*       GTNCSAD->NCSPLSAF=0;        /* SAF=0                 @ZD13756*/
         SLR   @04,@04                                             1691
         STH   @04,NCSPLSAF(,@09)                                  1691
*       GTNCSAD->NCSPLRAD=CVPWKPT1; /* PU ADDRESS            @ZD13756*/
         L     @04,CVPWKPT1                                        1692
         ST    @04,NCSPLRAD(,@09)                                  1692
*       NSRUDAF=CVPWKPT1->RPRSWDAF;                                1693
         LA    @08,CVPSNCRU                                        1693
         MVC   NSRUDAF(2,@08),RPRSWDAF(@04)                        1693
*       ;                           /*                       @ZD13757*/
*       NSRUNA1=NSRUFALL;           /*                       @D32CKLV*/
         MVI   NSRUNA1(@08),X'00'                                  1695
*       NSRUNA3=CVPON;              /*                       @D32CKLV*/
         OI    NSRUNA3(@08),B'10000000'                            1696
*       NCSPLRAD=CVPWKPT1;          /* PU RDTE               @D32CKLV*/
         ST    @04,NCSPLRAD(,@03)                                  1697
*       NCSPLSPL=GTNCSAD;           /* NEW NCSPL ADDR        @D32CKLV*/
         ST    @09,NCSPLSPL(,@03)                                  1698
*       CVPINPUT=CVPNCSPL;          /*                       @D32CKLV*/
         LR    CVPINPUT,@03                                        1699
*       CALL ISTINCE2;              /* PAB SWITH I/O         @D32CKLV*/
         L     @15,@CV05797                                        1700
         BALR  @14,@15                                             1700
*       DO;                                                        1701
*                                                                  1701
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  1702
*         /***********************************************************/
*         /*                                                         */
*         /* ** CLEAR AND SET CURRENT PROCEDURE BIT                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1702
*         NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;                   1702
         L     @04,CVPNCSPL                                        1702
         L     @03,NCSPLRPH(,@04)                                  1702
         L     @03,RPHCRR(,@03)                                    1702
         L     @03,CRACRR(,@03)                                    1702
         XC    VYCCRT+1(11,@03),VYCCRT+1(@03)                      1702
         MVI   VYCCRT(@03),B'00000000'                             1702
*         NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;                   1703
         OI    CINCVP(@03),B'00001000'                             1703
*       END;                        /*                       @D32CKLV*/
*       RCCSWTOX=GTNCSAD;           /* SWITHED TO 370X       @D32CKLV*/
         L     @03,GTNCSAD+118(,@03)                               1705
         L     @09,CVPWKPT1                                        1705
         ST    @03,RCCSWTOX(,@09)                                  1705
*       CVPINPUT=CVPNCSPL;          /* NCSPL ADDR            @D32CKLV*/
         LR    CVPINPUT,@04                                        1706
*       CVPLUSV=NCSPLRPT;           /* SAVE CMD RDTE         @D32CKLV*/
         L     @03,NCSPLRPT(,@04)                                  1707
         ST    @03,CVPLUSV                                         1707
*       NCSPLRPT=NCSPLRAD;          /* NCSPLRPT PTS TO PU    @D32CKLV*/
         L     @03,NCSPLRAD(,@04)                                  1708
         ST    @03,NCSPLRPT(,@04)                                  1708
*       CALL ISTINCE3;              /* PU CLEAN UP           @D32CKLV*/
         L     @15,@CV05798                                        1709
         BALR  @14,@15                                             1709
*       DO;                                                        1710
*                                                                  1710
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  1711
*         /***********************************************************/
*         /*                                                         */
*         /* ** CLEAR AND SET CURRENT PROCEDURE BIT                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1711
*         NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;                   1711
         L     @04,CVPNCSPL                                        1711
         L     @03,NCSPLRPH(,@04)                                  1711
         L     @03,RPHCRR(,@03)                                    1711
         L     @03,CRACRR(,@03)                                    1711
         XC    VYCCRT+1(11,@03),VYCCRT+1(@03)                      1711
         MVI   VYCCRT(@03),B'00000000'                             1711
*         NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;                   1712
         OI    CINCVP(@03),B'00001000'                             1712
*       END;                        /*                       @D32CKLV*/
*       NCSPLRPT=CVPLUSV;           /* RESET NCSPLRPT /*@D32CKLV     */
         L     @03,CVPLUSV                                         1714
         ST    @03,NCSPLRPT(,@04)                                  1714
*     END;                          /* END OF GET NCSPL OK   @D32CKLV*/
*   CVPRTNAD=CVPSNA1S;              /* RESTORE CALLER RTN ADDR.      */
@RC01666 L     CVPRTNAD,CVPSNA1S                                   1716
*   END CVPSNA1;                    /*                       @D32CKLV*/
@EL00007 DS    0H                                                  1717
@EF00007 DS    0H                                                  1717
@ER00007 BR    @14                                                 1717
@PB00007 DS    0H                                                  1718
*   GEN(EJECT);                     /*                       @D32CKLV*/
         EJECT
*/* SEGMENT(CVPSNA2)START                                            */
*                                                                  1719
*   DO;                                                            1719
*     GOTO CVPSNA2@;                                               1720
         B     CVPSNA2@                                            1720
*CVPSNA2:                                                          1721
*   END;                                                           1721
*                                                                  1721
CVPSNA2  DS    0H                                                  1722
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @D32CKLV*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1722
*/*------------------------------------------------------------------*/
*/* THIS SEGMENT IS CALLED TO DEACTIVATE A 370X PU           @D32CKLV*/
*/*-----------------------------------------------------------------**/
*                                                                  1722
*   CVPWKPT3=CVPWKPT1;              /*                       @D32CKLV*/
         L     @04,CVPWKPT1                                        1722
         ST    @04,CVPWKPT3                                        1722
*   DO WHILE CVPWKPT3->RPRENTRY^=RPRENTRN;/* LOOK FOR BNN    @D32CKLV*/
         B     @DE01723                                            1723
@DL01723 DS    0H                                                  1724
*     CVPWKPT3=CVPWKPT3->RPRNSNEA;  /* GET NEXT HIGHER NODE          */
         L     @04,CVPWKPT3                                        1724
         L     @04,RPRNSNEA(,@04)                                  1724
         ST    @04,CVPWKPT3                                        1724
*   END;                            /* END DO WHILE          @D32CKLV*/
@DE01723 L     @04,CVPWKPT3                                        1725
         CLI   RPRENTRY(@04),X'01'                                 1725
         BNE   @DL01723                                            1725
*   IF CVPWKPT3->RRNLCDIP=CVPON     /* IS BNN TERMINATING    @D32CKLV*/
*     THEN                                                         1726
         TM    RRNLCDIP(@04),B'00001000'                           1726
         BO    @RT01726                                            1726
*     ;                             /* YES, NO-OP            @D32CKLV*/
*   ELSE                                                           1728
*     DO;                           /* DO, BNN NOT TERMINATING       */
*       GTNCSAD=0;                  /* INDICATE GET NCSPL    @D32CKLV*/
         L     @04,CVPNCSPL                                        1729
         L     @03,NCSPLRPH(,@04)                                  1729
         L     @09,RPHCRR(,@03)                                    1729
         LA    @08,118                                             1729
         AL    @08,CRACRR(,@09)                                    1729
         SLR   @09,@09                                             1729
         ST    @09,GTNCSAD(,@08)                                   1729
*       GTNCSREQ='1'B;              /* MAY UUE REQSTORE      @D32CKLV*/
*       GTNCSRQU='1'B;              /* QUEUE OPTION MAY BE USED      */
*       GTNCSWKA='0'B;              /* NCSPL WKA REQUIRED    @D32CKLV*/
         OI    GTNCSREQ(@08),B'11000000'                           1732
         NI    GTNCSWKA(@08),B'11011111'                           1732
*       CVPINPUT=NCSPLRPH;          /*                       @D32CKLV*/
         LR    CVPINPUT,@03                                        1733
*       CVPR0=ADDR(GTNCSAD);        /*                       @D32CKLV*/
         LR    CVPR0,@08                                           1734
*       CALL NCSPLCVT->ATCINCW3;    /* TO GET NCSPL AND WKA          */
         L     @04,NCSPLCVT(,@04)                                  1735
         L     @15,ATCINCW3(,@04)                                  1735
         BALR  @14,@15                                             1735
*       IF CVPRTNCD^=0              /* IS IT FAILED TO GET NCSPL     */
*         THEN                                                     1736
         LTR   CVPRTNCD,CVPRTNCD                                   1736
         BZ    @RF01736                                            1736
*         DO;                       /* YES, WRITE MSG 682-UNABLE     */
*           CVPMSG#='682I';         /* TO ISSUE DISCONTACT TO PU     */
         MVC   CVPMSG#(4),@CC05992                                 1738
*           CVPRID=ADDR(RPRNAME);   /*                       @D32CKLV*/
         L     @04,CVPWKPT1                                        1739
         ST    @04,CVPRID                                          1739
*           CALL CVPWTO;            /*                       @D32CKLV*/
         BAL   @14,CVPWTO                                          1740
*         END;                      /* END GET NCSPL FAILED          */
*       ELSE                                                       1742
*         DO;                       /* DO IF GET NCSPL SUCC  @D32CKLV*/
         B     @RC01736                                            1742
@RF01736 DS    0H                                                  1743
*           NCSPLRAD=CVPWKPT1;      /*                       @D32CKLV*/
         L     @04,CVPNCSPL                                        1743
         L     @03,CVPWKPT1                                        1743
         ST    @03,NCSPLRAD(,@04)                                  1743
*           NCSPLSPL=GTNCSAD;       /* NEW NCSPL ADDR        @D32CKLV*/
         L     @03,NCSPLRPH(,@04)                                  1744
         L     @03,RPHCRR(,@03)                                    1744
         L     @03,CRACRR(,@03)                                    1744
         L     @03,GTNCSAD+118(,@03)                               1744
         ST    @03,NCSPLSPL(,@04)                                  1744
*           CVPINPUT=CVPNCSPL;      /* INPUT TO ISTINCW5     @D32CKLV*/
         LR    CVPINPUT,@04                                        1745
*           CALL ISTINCW5;          /* DO DISCONTACT PU      @D32CKLV*/
         L     @15,@CV05803                                        1746
         BALR  @14,@15                                             1746
*           DO;                                                    1747
*                                                                  1747
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  1748
*             /*******************************************************/
*             /*                                                     */
*             /* ** CLEAR AND SET CURRENT PROCEDURE BIT              */
*             /*                                                     */
*             /*******************************************************/
*                                                                  1748
*             NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;               1748
         L     @04,CVPNCSPL                                        1748
         L     @03,NCSPLRPH(,@04)                                  1748
         L     @09,RPHCRR(,@03)                                    1748
         L     @09,CRACRR(,@09)                                    1748
         XC    VYCCRT+1(11,@09),VYCCRT+1(@09)                      1748
         MVI   VYCCRT(@09),B'00000000'                             1748
*             NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;               1749
         OI    CINCVP(@09),B'00001000'                             1749
*           END;                    /*                       @D32CKLV*/
*           CVPR0=ADDR(GTNCSAD);    /* INPUT TO ISTINCW3     @D32CKLV*/
         AL    @09,@CF06661                                        1751
         LR    CVPR0,@09                                           1751
*           CVPINPUT=NCSPLRPH;      /* INPUT TO ISTINCW3     @D32CKLV*/
         LR    CVPINPUT,@03                                        1752
*           CALL NCSPLCVT->ATCINCW3;/* FREE NCSPL            @D32CKLV*/
         L     @04,NCSPLCVT(,@04)                                  1753
         L     @15,ATCINCW3(,@04)                                  1753
         BALR  @14,@15                                             1753
*         END;                      /* END IF GET NCSPL SUCC.        */
*     END;                          /* END OF BNN NOT TERMINATING    */
@RC01736 DS    0H                                                  1756
*/*  SEGMENT(CVPSNA2)FINISH                                          */
*                                                                  1756
*   DO;                                                            1756
@RT01726 DS    0H                                                  1757
*     GOTO CVPSNA2#;                                               1757
         B     CVPSNA2#                                            1757
*CVPSNA2@:                                                         1758
*   END;                                                           1758
*                                                                  1758
CVPSNA2@ DS    0H                                                  1759
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @D32CKLV*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1759
*   GEN(EJECT);                     /*                       @D32CKLV*/
         EJECT
*CVPSNA3:                                                          1760
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @D32CKLV*/
         B     @PB00008                                            1760
CVPSNA3  DS    0H                                                  1761
*/*------------------------------------------------------------------*/
*/* CVPSNA3 IS CALLED TO REFORMATS THE INPUT NCSPL INTO A PAB PURGE  */
*/* NCSPL, QUEUES IT THE HEADER PAB, AND TPEXIT              @D32CKLV*/
*/*------------------------------------------------------------------*/
*                                                                  1761
*   NCSPLVCD=NCSPLVC6;              /* INTERNAL CMD          @D32CKLV*/
         L     @04,CVPNCSPL                                        1761
         MVI   NCSPLVCD(@04),X'06'                                 1761
*   NCSPLVBF=NCSPURGE;              /* PURGE                 @D32CKLV*/
         MVC   NCSPLVBF(2,@04),@CB03551                            1762
*   NCSPLRPT=CVPWKPT1;              /* PU RDTE               @D32CKLV*/
         L     @03,CVPWKPT1                                        1763
         ST    @03,NCSPLRPT(,@04)                                  1763
*   IF RPRONLIN=CVPOFF&RPRLIVE=CVPOFF/* IS PU OFF LINE ?     @D32CKLV*/
*     THEN                                                         1764
         TM    RPRONLIN(@03),B'00001000'                           1764
         BNZ   @RF01764                                            1764
         TM    RPRLIVE(@03),B'00000001'                            1764
         BNZ   @RF01764                                            1764
*     DO;                           /* YES, PUT OFF LINE MSG @D32CKLV*/
*       CVPMSG#='105I';             /*                       @D32CKLV*/
         MVC   CVPMSG#(4),@CC05831                                 1766
*       CVPRID=ADDR(RPRNAME);       /*                       @D32CKLV*/
         ST    @03,CVPRID                                          1767
*       CALL CVPWTO;                /*                       @D32CKLV*/
         BAL   @14,CVPWTO                                          1768
*     END;                          /* END PU OFF LINE       @D32CKLV*/
*   ELSE                                                           1770
*     ;                             /*                       @D32CKLV*/
@RF01764 DS    0H                                                  1771
*   CVPWKPT3=CVPWKPT1;              /*                       @D32CKLV*/
         L     @04,CVPWKPT1                                        1771
         ST    @04,CVPWKPT3                                        1771
*   DO WHILE CVPWKPT3->RPRENTRY^=CVPWKPT3->RPRHDTYP;               1772
         B     @DE01772                                            1772
@DL01772 DS    0H                                                  1773
*     CVPWKPT3=CVPWKPT3->RPRNSNEA;  /* NEXT ENTRY            @D32CKLV*/
         L     @04,CVPWKPT3                                        1773
         L     @04,RPRNSNEA(,@04)                                  1773
         ST    @04,CVPWKPT3                                        1773
*   END;                            /*                       @D32CKLV*/
@DE01772 L     @04,CVPWKPT3                                        1774
         CLC   RPRENTRY(1,@04),RPRHDTYP(@04)                       1774
         BNE   @DL01772                                            1774
*   NXTAVPTR=NCSPLWKA+8;            /* RE-SET WKAREA         @D32CKLV*/
         L     @04,CVPNCSPL                                        1775
         L     @03,NCSPLWKA(,@04)                                  1775
         LA    @09,8                                               1775
         ALR   @09,@03                                             1775
         ST    @09,NXTAVPTR(,@03)                                  1775
*   CVPINPUT=NCSPLRPH;              /* GET NCSPL ADDRESS     @D32CKLV*/
         L     CVPINPUT,NCSPLRPH(,@04)                             1776
*   RFY                                                            1777
*     ISTRDT BASED(CVPWKPT3);       /*                       @D32CKLV*/
*   RFY                                                            1778
*     ISTDYPAB BASED(RDTVPAB);      /*                       @D32CKLV*/
*   RFY                                                            1779
*     ISTPAB BASED(ADDR(DYPPAB));   /*                       @D32CKLV*/
*/*  TPQUE (CVPNCSPL,ISTPAB) NORM                                    */
*                                                                  1780
*   DO;                                                            1780
*     RFY                                                          1781
*      (GPR00P,                                                    1781
*       GPR01P,                                                    1781
*       GPR04P,                                                    1781
*       GPR05P,                                                    1781
*       GPR15P) RSTD;                                              1781
*     GEN REFS(GPR01P) SETS(RPHWORK)(STM GPR02P,GPR08P,RPHWORK(GPR01P))
*         ;                                                        1782
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*     GPR00P=0;                                                    1783
         SLR   GPR00P,GPR00P                                       1783
*     GPR15P=ADDR(ISTPAB);          /* HOLD PAB PTR                  */
         LA    GPR15P,16                                           1784
         L     @03,CVPWKPT3                                        1784
         AL    GPR15P,RDTVPAB(,@03)                                1784
*     GPR04P=CVPNCSPL;              /* WORK ELE PTR                  */
         L     GPR04P,CVPNCSPL                                     1785
*     GPR05P=GPR15P;                /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       1786
*     CALL ATCLCPTR->ATCAP37->ISTAPC37;                            1787
         L     @03,ATCLCPTR                                        1787
         L     @15,ATCAP37(,@03)                                   1787
         BALR  @14,@15                                             1787
*     GEN(NOPR  0)                                                 1788
*     NOSETS NOREFS;                                               1788
         NOPR  0
*     RFY                                                          1789
*      (GPR00P,                                                    1789
*       GPR01P,                                                    1789
*       GPR04P,                                                    1789
*       GPR05P,                                                    1789
*       GPR15P) UNRSTD;                                            1789
*   END;                            /* *** END OF TPQUE GENERATION 1790
*                                      TPQUE NCSPL TO HEADER VPAB    */
*/* TPEXIT  NORM                                                     */
*                                                                  1791
*   DO;                                                            1791
*     RESPECIFY                                                    1792
*       GPR15P RSTD;                                               1792
*                                                                  1792
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  1793
*     DO;                           /* LISATCVT                    1793
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*       GPR15P=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     1794
*     END;                          /* LISATCVT                      */
*     RESPECIFY                                                    1796
*       GPR00F RSTD;                                               1796
*     GPR00F=4;                     /* SET PARAMETER REGISTER TO 4   */
         LA    GPR00F,4                                            1797
*     GPR15P=GPR15P->ATCAP31;                                      1798
         L     GPR15P,ATCAP31(,GPR15P)                             1798
*     DCL                                                          1799
*       FMZL0167 BASED(GPR15P) LABEL VALUERANGE(*);                1799
*     CALL FMZL0167;                                               1800
         BALR  @14,@15                                             1800
*     RESPECIFY                                                    1801
*      (GPR00F,                                                    1801
*       GPR15P) UNRSTD;                                            1801
*   END;                            /* **** END OF TPEXIT            */
*                                                                  1802
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @D32CKLV*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1803
*   END CVPSNA3;                    /*                       @D32CKLV*/
@EL00008 DS    0H                                                  1803
@EF00008 DS    0H                                                  1803
@ER00008 BR    @14                                                 1803
@PB00008 DS    0H                                                  1804
*   GEN(EJECT);                     /*                       @D32CKLV*/
         EJECT
*/* SEGMENT(CVPSNA4)START                                            */
*                                                                  1805
*   DO;                                                            1805
*     GOTO CVPSNA4@;                                               1806
         B     CVPSNA4@                                            1806
*CVPSNA4:                                                          1807
*   END;                                                           1807
*                                                                  1807
CVPSNA4  DS    0H                                                  1808
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @D32CKLV*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1808
*/*------------------------------------------------------------------*/
*/* THIS SEGMENT RESETS PU & LUS FLAGS FOR RESET ONLY PROCESSING THEN*/
*/* CALL CVPSNA3 TO PAB PURGE AND EXIT                       @D32CKLV*/
*/*------------------------------------------------------------------*/
*                                                                  1808
*   RPRONLIN=CVPON;                 /*                       @D32CKLV*/
         L     @04,CVPWKPT1                                        1808
         OI    RPRONLIN(@04),B'00001000'                           1808
*   RPRLIVE=CVPON;                  /*                       @D32CKLV*/
         OI    RPRLIVE(@04),B'00000001'                            1809
*   RCCRESET=CVPOFF;                /*                       @D32CKLV*/
         NI    RCCRESET(@04),B'11111011'                           1810
*   RPRVIODN=CVPOFF;                /*                       @D32CKLV*/
         NI    RPRVIODN(@04),B'11101111'                           1811
*   RPRCONCT=CVPOFF;                /* NOT CONNECTED         @D32CKLV*/
         NI    RPRCONCT(@04),B'10111111'                           1812
*   IF RCCCTELU=0 THEN                                             1813
         LH    @04,RCCCTELU(,@04)                                  1813
         LTR   @04,@04                                             1813
         BZ    @RT01813                                            1813
*     ;                                                            1814
*   ELSE                                                           1815
*     DO;                           /* HAVE LU ENTRIES       @D32CKLV*/
*       CVPSNA4F=CVPON;             /* SET LOOP CTL FLAG     @D32CKLV*/
         OI    CVPSNA4F,B'00100000'                                1816
*       CVPWKPT3=CVPWKPT1+RPRELEN;  /* GET FST LU            @D32CKLV*/
         L     @04,CVPWKPT1                                        1817
         LH    @03,RPRELEN(,@04)                                   1817
         ALR   @03,@04                                             1817
         ST    @03,CVPWKPT3                                        1817
*       RFY                                                        1818
*         ISTRPRE BASED(CVPWKPT3);  /*                       @D32CKLV*/
*       DO WHILE CVPSNA4F=CVPON;    /*                       @D32CKLV*/
         B     @DE01819                                            1819
@DL01819 DS    0H                                                  1820
*         IF RPRENTRY=RPRENTLU      /* IF IT IS LU ENTRY     @D32CKLV*/
*           THEN                                                   1820
         L     @04,CVPWKPT3                                        1820
         CLI   RPRENTRY(@04),X'81'                                 1820
         BNE   @RF01820                                            1820
*           DO;                                                    1821
*             RPRVIODN=CVPOFF;      /* RESET I/O DONE FLAG   @D32CKLV*/
         NI    RPRVIODN(@04),B'11101111'                           1822
*             RPRPTHCT=1;           /* PATH COUNT =1         @D32CKLV*/
         MVI   RPRPTHCT(@04),X'01'                                 1823
*             IF RPRRSON=CVPON THEN                                1824
         TM    RPRRSON(@04),B'00100000'                            1824
         BNO   @RF01824                                            1824
*               DO;                                                1825
*                 RPRONLIN=CVPON;                                  1826
         OI    RPRONLIN(@04),B'00001000'                           1826
*                 RPRLIVE=CVPON;                                   1827
         OI    RPRLIVE(@04),B'00000001'                            1827
*               END;                                               1828
*             ELSE                                                 1829
*               DO;                                                1829
         B     @RC01824                                            1829
@RF01824 DS    0H                                                  1830
*                 RPRONLIN=CVPOFF;                                 1830
         L     @04,CVPWKPT3                                        1830
         NI    RPRONLIN(@04),B'11110111'                           1830
*                 RPRLIVE=CVPOFF;                                  1831
         NI    RPRLIVE(@04),B'11111110'                            1831
*               END;                                               1832
*             RPRCONCT=CVPOFF;      /* NOT CONTACTED         @D32CKLV*/
@RC01824 L     @04,CVPWKPT3                                        1833
         NI    RPRCONCT(@04),B'10111111'                           1833
*             IF RPRENTED=CVPON THEN                               1834
         TM    RPRENTED(@04),B'00000100'                           1834
         BNO   @RF01834                                            1834
*               CVPSNA4F=CVPOFF;                                   1835
         NI    CVPSNA4F,B'11011111'                                1835
*             ELSE                                                 1836
*               CVPWKPT3=CVPWKPT3+RPRELEN;/* GET NEXT ENTRY  @D32CKLV*/
         B     @RC01834                                            1836
@RF01834 L     @04,CVPWKPT3                                        1836
         LH    @03,RPRELEN(,@04)                                   1836
         ALR   @03,@04                                             1836
         ST    @03,CVPWKPT3                                        1836
*           END;                    /* END IF ENTRY IS LU            */
*         ELSE                                                     1838
*           CVPSNA4F=CVPOFF;        /* GET OUT OF LOOP       @D32CKLV*/
         B     @RC01820                                            1838
@RF01820 NI    CVPSNA4F,B'11011111'                                1838
*       END;                        /* END UPDATE LUS LOOP   @D32CKLV*/
@RC01820 DS    0H                                                  1839
@DE01819 TM    CVPSNA4F,B'00100000'                                1839
         BO    @DL01819                                            1839
*     END;                          /* END IF RCCCTELU^=0    @D32CKLV*/
*   RFY                                                            1841
*     ISTRPRE BASED(CVPWKPT1);      /*                       @D32CKLV*/
@RT01813 DS    0H                                                  1842
*   CALL CVPSNA3;                   /* DO PAB PURGE AND EXIT @D32CKLV*/
         BAL   @14,CVPSNA3                                         1842
*/* SEGMENT(CVPSNA4)FINISH                                           */
*                                                                  1843
*   DO;                                                            1843
*     GOTO CVPSNA4#;                                               1844
         B     CVPSNA4#                                            1844
*CVPSNA4@:                                                         1845
*   END;                                                           1845
*                                                                  1845
CVPSNA4@ DS    0H                                                  1846
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @D32CKLV*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1846
*   GEN(EJECT);                     /*                       @D32CKLV*/
         EJECT
*/* SEGMENT(CVPSNA5)START                                            */
*                                                                  1847
*   DO;                                                            1847
*     GOTO CVPSNA5@;                                               1848
         B     CVPSNA5@                                            1848
*CVPSNA5:                                                          1849
*   END;                                                           1849
*                                                                  1849
CVPSNA5  DS    0H                                                  1850
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @D32CKLV*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1850
*/*------------------------------------------------------------------*/
*/* THIS SEGMENT MARKS THE PU VARY PENDING AND NOT CONNECTED. IT     */
*/* ALSO MARKS EACH OF THE PU'S LUS NOT CONNECTED THE CALLS CVPSNA3  */
*/* TO PAB PURGE AND EXIT                                    @D32CKLV*/
*/*------------------------------------------------------------------*/
*                                                                  1850
*   RPRVRYPD=CVPON;                 /* VARY PENDING          @D32CKLV*/
         L     @04,CVPWKPT1                                        1850
         OI    RPRVRYPD(@04),B'00000010'                           1850
*   RPRCONCT=CVPOFF;                /* NOT CONNECTED         @D32CKLV*/
         NI    RPRCONCT(@04),B'10111111'                           1851
*   IF RCCCTELU=0                   /* ANY LU UNDER THIS PU  @D32CKLV*/
*     THEN                                                         1852
         LH    @04,RCCCTELU(,@04)                                  1852
         LTR   @04,@04                                             1852
         BZ    @RT01852                                            1852
*     ;                             /* NO, NO-OP             @D32CKLV*/
*   ELSE                                                           1854
*     DO;                                                          1854
*       CVPWKPT3=CVPWKPT1+RPRELEN;  /* GET 1ST LU RDTE       @D32CKLV*/
         L     @04,CVPWKPT1                                        1855
         LH    @03,RPRELEN(,@04)                                   1855
         ALR   @03,@04                                             1855
         ST    @03,CVPWKPT3                                        1855
*       CVPSNA5F=CVPON;                                            1856
         OI    CVPSNA5F,B'00010000'                                1856
*       DO WHILE CVPSNA5F=CVPON;    /*                       @D32CKLV*/
         B     @DE01857                                            1857
@DL01857 DS    0H                                                  1858
*         IF CVPWKPT3->RPRENTRY=RPRENTLU THEN                      1858
         L     @04,CVPWKPT3                                        1858
         CLI   RPRENTRY(@04),X'81'                                 1858
         BNE   @RF01858                                            1858
*           DO;                                                    1859
*             CVPWKPT3->RPRCONCT=CVPOFF;/*                   @D32CKLV*/
         NI    RPRCONCT(@04),B'10111111'                           1860
*             IF CVPWKPT3->RPRENTED='1'B/*                   @D32CKLV*/
*               THEN                                               1861
         TM    RPRENTED(@04),B'00000100'                           1861
         BNO   @RF01861                                            1861
*               CVPSNA5F=CVPOFF;    /*                       @D32CKLV*/
         NI    CVPSNA5F,B'11101111'                                1862
*             ELSE                                                 1863
*               CVPWKPT3=CVPWKPT3+CVPWKPT3->RPRELEN;/*       @D32CKLV*/
         B     @RC01861                                            1863
@RF01861 L     @04,CVPWKPT3                                        1863
         LH    @03,RPRELEN(,@04)                                   1863
         ALR   @03,@04                                             1863
         ST    @03,CVPWKPT3                                        1863
*           END;                    /*                       @D32CKLV*/
*         ELSE                                                     1865
*           CVPSNA5F=CVPOFF;                                       1865
         B     @RC01858                                            1865
@RF01858 NI    CVPSNA5F,B'11101111'                                1865
*       END;                        /*                       @D32CKLV*/
@RC01858 DS    0H                                                  1866
@DE01857 TM    CVPSNA5F,B'00010000'                                1866
         BO    @DL01857                                            1866
*     END;                                                         1867
*   CALL CVPSNA3;                   /* DO PAB PURGE AND EXIT @D32CKLV*/
@RT01852 BAL   @14,CVPSNA3                                         1868
*/*  SEGMENT(CVPSNA5)FINISH                                          */
*                                                                  1869
*   DO;                                                            1869
*     GOTO CVPSNA5#;                                               1870
         B     CVPSNA5#                                            1870
*CVPSNA5@:                                                         1871
*   END;                                                           1871
*                                                                  1871
CVPSNA5@ DS    0H                                                  1872
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @D32CKLV*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1872
*   GEN(   EJECT);                                                 1872
*                                                                  1872
            EJECT
*/* SEGMENT(CVPDEAL)START                                            */
*                                                                  1873
*   DO;                                                            1873
*     GOTO CVPDEAL@;                                               1874
         B     CVPDEAL@                                            1874
*CVPDEAL:                                                          1875
*   END;                                                           1875
*                                                                  1875
CVPDEAL  DS    0H                                                  1876
*/********************************************************************
*                                                                    */
*/*   CVPDEAL DEALLOCATES 370X'S, WHETHER LOCAL OR REMOTE. IF THE    */
*/* 370X IS LOCAL, ISTINCAV IS CALLED & IF THE DEALLOCATE FAILED, A  */
*/* MSG IS ISSUED. IF SUCCESSFUL, CVPDEAL RETURNS.                   */
*/*   IF THE 370X IS REMOTE, THE BOUNDARY NETWORK NODE RDTE IS FOUND */
*/* FROM THE REMOTE 370X'S RDTE IN THE BOUNDARY NODES'S SEGMENT.     */
*/*   IF THE BNN IS NOT TERMINATING, A DISCONTACT NCSPL IS BUILT & IF*/
*/* THE BUILD IS SUCCESSFUL, A DISCONTACT IS DONE. IF THE DISCONTACT */
*/* IS SUCCESSFUL, CVPDEAL RETURNS.                                  */
*/*   IF THE NCSPL BUILD OR THE DISCONTACT IS NOT SUCCESSFUL, OR THE */
*/* BNN IS TERMINATING, THE REMOTE 370X RDTE IS CHECKED FOR POWER OFF*/
*/* REQUIRED. THE REMOTE 370X DAF IS SAVED IN THE REMOTE RDTE IN THE */
*/* BNN RDT SEGMENT & THE SUBROUTINE RETURNS.                        */
*/********************************************************************
*                                                                    */
*                                                                  1876
*   RFY                                                            1876
*    (ISTRPRE,                                                     1876
*     ISTRRN) BASED(CVPWKPT1);                                     1876
*   RFY                                                            1877
*    (ISTRCPRE,                                                    1877
*     ISTRIN) BASED(RRNTRENT);                                     1877
*   IF RRNRBREM=CVPON THEN          /* IF RN IS REMOTE               */
         L     @04,CVPWKPT1                                        1878
         TM    RRNRBREM(@04),B'00000100'                           1878
         BNO   @RF01878                                            1878
*     DO;                           /*                       @D32CKLV*/
*       CVPWKPT3=RRNTRENT;          /* GET @ TERM ENTRY IN LOCAL   1880
*                                      SEGMENT                       */
         L     @04,RRNTRENT(,@04)                                  1880
         ST    @04,CVPWKPT3                                        1880
*       DO WHILE(CVPWKPT3->RPRENTRY^=RPRENTRN);/* LOOK FOR BNN RDTE  */
         B     @DE01881                                            1881
@DL01881 DS    0H                                                  1882
*         CVPWKPT3=CVPWKPT3->RPRNSNEA;/* GET NEXT HIGHER LEVEL NODE  */
         L     @04,CVPWKPT3                                        1882
         L     @04,RPRNSNEA(,@04)                                  1882
         ST    @04,CVPWKPT3                                        1882
*       END;                                                       1883
@DE01881 L     @04,CVPWKPT3                                        1883
         CLI   RPRENTRY(@04),X'01'                                 1883
         BNE   @DL01881                                            1883
*       IF CVPWKPT3->RRNLCDIP=CVPON /* IS BNN TERMINATING?   @D32CKLV*/
*         THEN                                                     1884
         TM    RRNLCDIP(@04),B'00001000'                           1884
         BO    @RT01884                                            1884
*         ;                         /*                       @D32CKLV*/
*       ELSE                                                       1886
*         DO;                       /*                       @D32CKLV*/
*           GTNCSAD=0;              /* INDICATE TO GET NCSPL @D32CKLV*/
         L     @04,CVPNCSPL                                        1887
         L     @03,NCSPLRPH(,@04)                                  1887
         L     @09,RPHCRR(,@03)                                    1887
         LA    @08,118                                             1887
         AL    @08,CRACRR(,@09)                                    1887
         SLR   @09,@09                                             1887
         ST    @09,GTNCSAD(,@08)                                   1887
*           GTNCSREQ='1'B;          /* MAY USE REQSTORE      @D32CKLV*/
*           GTNCSRQU='1'B;          /* Q OPTION MAY BE USED  @D32CKLV*/
*           GTNCSWKA='0'B;          /* GET NCSPL WKAREA      @D32CKLV*/
         OI    GTNCSREQ(@08),B'11000000'                           1890
         NI    GTNCSWKA(@08),B'11011111'                           1890
*           CVPINPUT=NCSPLRPH;      /*                       @D32CKLV*/
         LR    CVPINPUT,@03                                        1891
*           CVPR0=ADDR(GTNCSAD);    /* GET NCSPL PARM.LIST   @D32CKLV*/
         LR    CVPR0,@08                                           1892
*           CALL NCSPLCVT->ATCINCW3;/*                       @D32CKLV*/
         L     @04,NCSPLCVT(,@04)                                  1893
         L     @15,ATCINCW3(,@04)                                  1893
         BALR  @14,@15                                             1893
*           IF CVPRTNCD^=0          /* IF GET NCSPL FAILED   @D32CKLV*/
*             THEN                                                 1894
         LTR   CVPRTNCD,CVPRTNCD                                   1894
         BZ    @RF01894                                            1894
*             DO;                   /* THEN WRIT ERROR MSG   @D32CKLV*/
*               CVPMSG#='682I';     /* MSG NUMBER=682I       @D32CKLV*/
         MVC   CVPMSG#(4),@CC05992                                 1896
*               CVPRID=ADDR(RPRNAME);/* NODE NAME            @D32CKLV*/
         L     @04,CVPWKPT1                                        1897
         ST    @04,CVPRID                                          1897
*               CALL CVPWTO;        /*                       @D32CKLV*/
         BAL   @14,CVPWTO                                          1898
*             END;                  /*                       @D32CKLV*/
*           ELSE                                                   1900
*             DO;                   /* IF GET NCSPL SUCCESSFULE      */
         B     @RC01894                                            1900
@RF01894 DS    0H                                                  1901
*               NCSPLRAD=CVPWKPT1;  /* ZD13736               @D32CKLV*/
         L     @04,CVPNCSPL                                        1901
         L     @03,CVPWKPT1                                        1901
         ST    @03,NCSPLRAD(,@04)                                  1901
*               NCSPLSPL=GTNCSAD;   /* NEW NCSPL ADDR.       @D32CKLV*/
         L     @03,NCSPLRPH(,@04)                                  1902
         L     @03,RPHCRR(,@03)                                    1902
         L     @03,CRACRR(,@03)                                    1902
         L     @03,GTNCSAD+118(,@03)                               1902
         ST    @03,NCSPLSPL(,@04)                                  1902
*               CVPINPUT=CVPNCSPL;  /*                       @D32CKLV*/
         LR    CVPINPUT,@04                                        1903
*               CALL ISTINCW5;      /* DO DISCONTACT         @D32CKLV*/
         L     @15,@CV05803                                        1904
         BALR  @14,@15                                             1904
*               DO;                                                1905
*                                                                  1905
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  1906
*                 /***************************************************/
*                 /*                                                 */
*                 /* ** CLEAR AND SET CURRENT PROCEDURE BIT          */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  1906
*                 NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;           1906
         L     @04,CVPNCSPL                                        1906
         L     @03,NCSPLRPH(,@04)                                  1906
         L     @09,RPHCRR(,@03)                                    1906
         L     @09,CRACRR(,@09)                                    1906
         XC    VYCCRT+1(11,@09),VYCCRT+1(@09)                      1906
         MVI   VYCCRT(@09),B'00000000'                             1906
*                 NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;           1907
         OI    CINCVP(@09),B'00001000'                             1907
*               END;                /*                       @D32CKLV*/
*               CVPINPUT=NCSPLRPH;  /* FREE DISCONTACT NCSPL @D32CKLV*/
         LR    CVPINPUT,@03                                        1909
*               CVPR0=ADDR(GTNCSAD);/* AND WORKAREA          @D32CKLV*/
         AL    @09,@CF06661                                        1910
         LR    CVPR0,@09                                           1910
*               CALL NCSPLCVT->ATCINCW3;/*                   @D32CKLV*/
         L     @04,NCSPLCVT(,@04)                                  1911
         L     @15,ATCINCW3(,@04)                                  1911
         BALR  @14,@15                                             1911
*               IF NCSIORC=NCSIOSUC /* IF DISCONTACT IS OK   @D32CKLV*/
*                 THEN                                             1912
         L     @04,CVPNCSPL                                        1912
         CLI   NCSIORC(@04),X'00'                                  1912
         BNE   @RF01912                                            1912
*                 CVPDEALF=CVPON;   /* SET PROC COMPL FLAG   @D32CKLV*/
         OI    CVPDEALF,B'01000000'                                1913
*               ELSE                                               1914
*                 DO;               /*                       @D32CKLV*/
         B     @RC01912                                            1914
@RF01912 DS    0H                                                  1915
*                   CVPMSG#='682I'; /* ERROR MSG NO.         @D32CKLV*/
         MVC   CVPMSG#(4),@CC05992                                 1915
*                   CVPRID=ADDR(RPRNAME);/*                  @D32CKLV*/
         L     @04,CVPWKPT1                                        1916
         ST    @04,CVPRID                                          1916
*                   CALL CVPWTO;    /*                       @D32CKLV*/
         BAL   @14,CVPWTO                                          1917
*                 END;              /*                       @D32CKLV*/
*             END;                  /* END OF GET NCSPL SUCCESSFUL 1919
*                                                            @D32CKLV*/
@RC01912 DS    0H                                                  1920
*         END;                      /* END OF BNN IS NOT TERMINATING
*                                                            @D32CKLV*/
@RC01894 DS    0H                                                  1921
*       IF CVPDEALF=CVPON           /* NO MORE PROCESSING    @D32CKLV*/
*         THEN                                                     1921
@RT01884 TM    CVPDEALF,B'01000000'                                1921
         BO    @RT01921                                            1921
*         ;                         /*                       @D32CKLV*/
*       ELSE                                                       1923
*         DO;                       /*                       @D32CKLV*/
*           IF RRNREMPO=CVPON       /* IF REMOVE POWER OFF INDICATED */
*             THEN                                                 1924
         L     @04,CVPWKPT1                                        1924
         TM    RRNREMPO(@04),B'00000010'                           1924
         BNO   @RF01924                                            1924
*             RINREMPO=CVPON;       /* FLAG REMOTE RN POW OFF      1925
*                                      REQUIRED                      */
         L     @04,RRNTRENT(,@04)                                  1925
         OI    RINREMPO(@04),B'10000000'                           1925
*           ELSE                                                   1926
*             ;                     /*                       @D32CKLV*/
@RF01924 DS    0H                                                  1927
*           RRNTRENT->RINRLDAF=RPRDAF;/* SAVE REMOTE DAF IN TERM   1927
*                                      ENTRY                         */
         L     @04,CVPWKPT1                                        1927
         L     @03,RRNTRENT(,@04)                                  1927
         MVC   RINRLDAF(2,@03),RPRDAF(@04)                         1927
*         END;                      /*                       @D32CKLV*/
*     END;                          /* END OF RN IS A REMOTE RDTE    */
*   ELSE                                                           1930
*     DO;                           /* IF RN NOT REMOTE      @D32CKLV*/
         B     @RC01878                                            1930
@RF01878 DS    0H                                                  1931
*       CVPVCDSV=NCSPLVCD;          /* SAVE VERB CODE OVER ISTINCAV  */
         L     @04,CVPNCSPL                                        1931
         MVC   CVPVCDSV(1),NCSPLVCD(@04)                           1931
*       CVPVBFSV=NCSPLVBF;          /* SAVE NCSPLVBF                 */
         MVC   CVPVBFSV(2),NCSPLVBF(@04)                           1932
*       NCSPLVCD=NCSPLVC1;          /* SET VERB CODE TO VARY         */
         MVI   NCSPLVCD(@04),X'01'                                 1933
*       NCSPLVBF=NCSVDEA;           /* SET MODIFIER TO DEACTIVATE    */
         MVC   NCSPLVBF(2,@04),@CB03585                            1934
*       CVPINPUT=CVPNCSPL;          /* SET INPUT FOR ISTINCAV        */
         LR    CVPINPUT,@04                                        1935
*       NCSPLRAD=CVPWKPT1;          /* PUT RN RDTE IN NCSPLRAD       */
         L     @03,CVPWKPT1                                        1936
         ST    @03,NCSPLRAD(,@04)                                  1936
*       CALL ISTINCAV;              /* DEALLOCATE UCB                */
         L     @15,@CV05796                                        1937
         BALR  @14,@15                                             1937
*       DO;                                                        1938
*                                                                  1938
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  1939
*         /***********************************************************/
*         /*                                                         */
*         /* ** CLEAR AND SET CURRENT PROCEDURE BIT                  */
*         /*                                                         */
*         /***********************************************************/
*                                                                  1939
*         NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;                   1939
         L     @04,CVPNCSPL                                        1939
         L     @03,NCSPLRPH(,@04)                                  1939
         L     @03,RPHCRR(,@03)                                    1939
         L     @03,CRACRR(,@03)                                    1939
         XC    VYCCRT+1(11,@03),VYCCRT+1(@03)                      1939
         MVI   VYCCRT(@03),B'00000000'                             1939
*         NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;                   1940
         OI    CINCVP(@03),B'00001000'                             1940
*       END;                                                       1941
*       NCSPLVBF=CVPVBFSV;          /* RESTORE NCSPLVBF              */
         MVC   NCSPLVBF(2,@04),CVPVBFSV                            1942
*       IF CVPRTNCD=0 THEN                                         1943
         LTR   CVPRTNCD,CVPRTNCD                                   1943
         BZ    @RT01943                                            1943
*         ;                         /* IF SUCCESSFUL, EXIT           */
*       ELSE                                                       1945
*         DO;                                                      1945
*           CVPMSG#='156I';                                        1946
         MVC   CVPMSG#(4),@CC05954                                 1946
*           CVPRID=ADDR(RPRNAME);   /* ST UP NAME FOR TPMSG          */
         L     @04,CVPWKPT1                                        1947
         ST    @04,CVPRID                                          1947
*           CALL CVPWTO;            /* ISSUEFAILURE MSG              */
         BAL   @14,CVPWTO                                          1948
*         END;                                                     1949
*     END;                          /* END FOR RN NOT REMOTE         */
@RT01943 DS    0H                                                  1951
*/* SEGMENT(CVPDEAL)FINISH                                           */
*                                                                  1951
*   DO;                                                            1951
@RC01878 DS    0H                                                  1952
*     GOTO CVPDEAL#;                                               1952
         B     CVPDEAL#                                            1952
*CVPDEAL@:                                                         1953
*   END;                                                           1953
CVPDEAL@ DS    0H                                                  1954
*   GEN(   EJECT);                                                 1954
            EJECT
*CVPLIN:                                                           1955
*   PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);                        1955
         B     @PB00009                                            1955
CVPLIN   DS    0H                                                  1956
*   CVPLINAD=CVPRTNAD;              /* SAVE RETURN @                 */
         ST    CVPRTNAD,CVPLINAD                                   1956
*   CVPLINSV=CVPWKPT1;              /* SAVE CVPWKPT1                 */
         L     @04,CVPWKPT1                                        1957
         ST    @04,CVPLINSV                                        1957
*   DO WHILE CVPWKPT1->RPRENTRY^=RPRENTRN;/* SEARCH FOR RN SEGMENT   */
         B     @DE01958                                            1958
@DL01958 DS    0H                                                  1959
*     CVPWKPT1=CVPWKPT1->RPRNSNEA;  /* GET NEXT HIGHER LEVEL NODE    */
         L     @04,CVPWKPT1                                        1959
         L     @04,RPRNSNEA(,@04)                                  1959
         ST    @04,CVPWKPT1                                        1959
*   END;                                                           1960
@DE01958 L     @04,CVPWKPT1                                        1960
         CLI   RPRENTRY(@04),X'01'                                 1960
         BNE   @DL01958                                            1960
*   CVPSUBRN=CVPWKPT1;              /* SAVE @ RN SEGMENT FOR CVPSUBS */
         ST    @04,CVPSUBRN                                        1961
*   DO WHILE CVPPEPLP=CVPOFF;       /* PROCESS RN SEGMENT            */
         B     @DE01962                                            1962
@DL01962 DS    0H                                                  1963
*     IF CVPWKPT1->RPRENTRY=RPRENTLN&CVPWKPT1->RLNRATRN=CVPOFF&CVPWKPT1
*         ->RPRONLIN=CVPON THEN     /* IF ENTRY IS LINK & NOT SDLC & */
         L     @04,CVPWKPT1                                        1963
         CLI   RPRENTRY(@04),X'50'                                 1963
         BNE   @RF01963                                            1963
         TM    RLNRATRN(@04),B'00000010'                           1963
         BNZ   @RF01963                                            1963
         TM    RPRONLIN(@04),B'00001000'                           1963
         BNO   @RF01963                                            1963
*       CALL CVPPEPLN;              /* LINK ONLINE                   */
         BAL   @14,CVPPEPLN                                        1964
*     ELSE                                                         1965
*       ;                                                          1965
@RF01963 DS    0H                                                  1966
*     IF CVPWKPT1->RPRENTED=CVPON THEN                             1966
         L     @04,CVPWKPT1                                        1966
         TM    RPRENTED(@04),B'00000100'                           1966
         BNO   @RF01966                                            1966
*       CVPPEPLP=CVPON;                                            1967
         OI    CVPPEPLP,B'00000010'                                1967
*     ELSE                                                         1968
*       CVPWKPT1=CVPWKPT1+CVPWKPT1->RPRELEN;/* GET NEXT ENTRY        */
         B     @RC01966                                            1968
@RF01966 L     @04,CVPWKPT1                                        1968
         LH    @03,RPRELEN(,@04)                                   1968
         ALR   @03,@04                                             1968
         ST    @03,CVPWKPT1                                        1968
*   END;                            /* END SCAN THROUGH SEGMENT      */
@RC01966 DS    0H                                                  1969
@DE01962 TM    CVPPEPLP,B'00000010'                                1969
         BZ    @DL01962                                            1969
*   CVPWKPT1=CVPLINSV;              /* RESTORE CVPWKPT1              */
         L     @04,CVPLINSV                                        1970
         ST    @04,CVPWKPT1                                        1970
*   CALL CVPSUBS;                   /*                       @DC36143*/
         BAL   @14,CVPSUBS                                         1971
*   CALL CVPDEAC;                   /*                       @DC36143*/
         BAL   @14,CVPDEAC                                         1972
*   CVPRTNAD=CVPLINAD;              /* RESTORE RETURN @              */
         L     CVPRTNAD,CVPLINAD                                   1973
*   END CVPLIN;                     /*                       @DC36143*/
@EL00009 DS    0H                                                  1974
@EF00009 DS    0H                                                  1974
@ER00009 BR    @14                                                 1974
@PB00009 DS    0H                                                  1975
*   GEN(   EJECT);                                                 1975
            EJECT
*CVPDEAC:                                                          1976
*   PROC OPTIONS(NOSAVE,NOSAVEAREA,RETREG);/*                @DC36143*/
         B     @PB00010                                            1976
CVPDEAC  DS    0H                                                  1977
*/********************************************************************/
*/* THIS ROUTINE IS CALLED BY CVPLIN WITH CVPWKPT1                   */
*/* POINTING AT THE RDT ENTRY . CVPDEACT COMPLETES THE               */
*/* DEACTIVATION OF THE 370X BY INVOKING ISTINCIO TO ISSUE A         */
*/* DEACTIVATE PHYSICAL UNIT COMMAND TO THE 370X, FOLLOWED BY        */
*/* THE NECESSARY DISCONTACTS.                                       */
*/********************************************************************/
*                                                                  1977
*   RFY                                                            1977
*     ISTRPRE BASED(CVPWKPT1);                                     1977
*                                                                  1977
*/********************************************************************/
*/* SET CLOSEDOWN BIT IN THE ICNCB FOR THE 370X                      */
*/* SET NCSPL COMMAND CODE TO 'DEACTIVATE PHYSICAL UNIT              */
*/* SET NCSPL CID FIELD TO SAF OF 0 AND DAF OF 370X                  */
*/* OBTAIN DAF LOCK VIA CIDCTL                                       */
*/* INVOKE ISTINCIO TO ISSUE 'DEACTIVATE PHYSICAL UNIT COMMAND       */
*/********************************************************************/
*                                                                  1978
*   CVPDEASV=CVPRTNAD;              /*                       @DC36143*/
         ST    CVPRTNAD,CVPDEASV                                   1978
*/*  SEGMENT(CVPDISC)REQUEST                                         */
*                                                                  1979
*   DO;                                                            1979
*     GOTO CVPDISC;                                                1980
         B     CVPDISC                                             1980
*CVPDISC#:                                                         1981
*   END;                                                           1981
CVPDISC# DS    0H                                                  1982
*   NCSPLCMD=NCSCDPU;               /* SET NCSPLCMD TO DEACT PHYS  1982
*                                      UNIT                          */
         L     @04,CVPNCSPL                                        1982
         MVC   NCSPLCMD(2,@04),@CB03709                            1982
*   NCSIOCID=CVPSAF+RPRDAF;                                        1983
         L     @03,CVPWKPT1                                        1983
         LH    @03,RPRDAF(,@03)                                    1983
         N     @03,@CF06675                                        1983
         AL    @03,CVPSAF                                          1983
         ST    @03,NCSIOCID(,@04)                                  1983
*   NCSPLRUO=ADDR(CVPDARU);         /* SET OUTBOUND BUF ADDRESS      */
         LA    @03,CVPDARU                                         1984
         ST    @03,NCSPLRUO(,@04)                                  1984
*   NCSPLRUI=0;                     /* INDICATE NO DATA SAVED        */
         SLR   @03,@03                                             1985
         ST    @03,NCSPLRUI(,@04)                                  1985
*   NCSPLOLN=LENGTH(CVPDAOP);       /* SET LENGTH                    */
         MVC   NCSPLOLN(2,@04),@CH00169                            1986
*   CVPDAOP='1201'X;                                               1987
         MVC   CVPDAOP(2),@CB06027                                 1987
*   CVPINPUT=NCSPLRPH;              /* SET UP RPH FOR CIDCTL         */
         L     CVPINPUT,NCSPLRPH(,@04)                             1988
*   CVPR2=NCSPLCID;                 /* SET UP CID IN REG 2           */
         L     CVPR2,NCSPLCID(,@04)                                1989
*   DO;                             /* CIDCTL(FIND)                  */
*     RFY                                                          1991
*      (EMCR2,                                                     1991
*       EMCR3) RSTD;                                               1991
*     GEN SETS(RPHWORK)                                            1992
*         (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);     1992
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*     EMCR3='00'X;                  /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         1993
*     EMCR3='01'X;                  /* INDICATE SHARED LOCK          */
         LA    EMCR3,1                                             1994
*     CALL ATCLCPTR->ATCCDFND->ISTSDCCF;/* PROCESS REQUEST           */
         L     @04,ATCLCPTR                                        1995
         L     @15,ATCCDFND(,@04)                                  1995
         BALR  @14,@15                                             1995
*     RFY                                                          1996
*      (EMCR2,                                                     1996
*       EMCR3) UNRSTD;                                             1996
*   END;                            /* CIDCTL GET LOCK SHARED        */
*   CVPR2=CVPR0;                    /* PUT NCB @ IN REG 2 FOR      1998
*                                      ISTINCIO                      */
         LR    CVPR2,CVPR0                                         1998
*   CVPR2->ICNCLOSE='1'B;                                          1999
         L     @04,ICNCLOSE-1(,CVPR2)                              1999
@GL00038 LR    @03,@04                                             1999
         O     @03,@CF06693                                        1999
         CS    @04,@03,ICNCLOSE-1(CVPR2)                           1999
         BNE   @GL00038                                            1999
*   CVPINPUT=CVPNCSPL;                                             2000
         L     CVPINPUT,CVPNCSPL                                   2000
*   CALL ISTINCIO;                                                 2001
*                                                                  2001
         L     @15,@CV05800                                        2001
         BALR  @14,@15                                             2001
*/********************************************************************/
*/* AFTER RETURN FROM ISTINCIO UPDATE CRR AUDIT TRAIL AND SET THE    */
*/* 'ONLINE' AND 'LIVE' BITS OFF IN THE RDT ENTRY FOR THE 370X.      */
*/********************************************************************/
*                                                                  2002
*   DO;                                                            2002
*                                                                  2002
*/***  CRRMAINT  PROCNM(ISTINCVP)COMP(VY)FUNC(RET)RPHADD((NCSPLRPH))  *
*                                                                    */
*                                                                  2003
*     /***************************************************************/
*     /*                                                             */
*     /* ** CLEAR AND SET CURRENT PROCEDURE BIT                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  2003
*     NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;                       2003
         L     @04,CVPNCSPL                                        2003
         L     @03,NCSPLRPH(,@04)                                  2003
         L     @03,RPHCRR(,@03)                                    2003
         L     @03,CRACRR(,@03)                                    2003
         XC    VYCCRT+1(11,@03),VYCCRT+1(@03)                      2003
         MVI   VYCCRT(@03),B'00000000'                             2003
*     NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;                       2004
         OI    CINCVP(@03),B'00001000'                             2004
*   END;                                                           2005
*   RPRONLIN=CVPOFF;                                               2006
         L     @03,CVPWKPT1                                        2006
         NI    RPRONLIN(@03),B'11110111'                           2006
*   RPRLIVE=CVPOFF;                                                2007
*                                                                  2007
         NI    RPRLIVE(@03),B'11111110'                            2007
*/********************************************************************/
*/* IF THE RETURN CODE FROM ISTINCIO IN THE NCSPL (NCSIORC)          */
*/* INDICATES AN I/O FAILURE AND THE PROCESSING IS NOT INTERNAL ONLY,*/
*/* THEN ISSUE ERROR MESSAGE.                                @XM95350*/
*/********************************************************************/
*                                                                  2008
*   IF(NCSIORC^=NCSIOSUC&NCSVBF11^=CVPON) THEN                     2008
         CLI   NCSIORC(@04),X'00'                                  2008
         BE    @RF02008                                            2008
         TM    NCSVBF11(@04),B'00100000'                           2008
         BO    @RF02008                                            2008
*     DO;                                                          2009
*       CVPMSG#='157I';                                            2010
         MVC   CVPMSG#(4),@CC06028                                 2010
*       CVPRID=ADDR(RPRNAME);       /* SET UP NAME FOR TPMSG         */
         ST    @03,CVPRID                                          2011
*       CALL CVPWTO;                                               2012
         BAL   @14,CVPWTO                                          2012
*     END;                                                         2013
*   ELSE                                                           2014
*     ;                                                            2014
@RF02008 DS    0H                                                  2015
*   NCSPLSAF=ATCVTMID;              /* SET NCSPL SAF TO SSCP'S       */
         L     @04,CVPNCSPL                                        2015
         L     @03,NCSPLCVT(,@04)                                  2015
         MVC   NCSPLSAF(2,@04),ATCVTMID(@03)                       2015
*   CVPINPUT=NCSPLRPH;              /* SET UP RPH FOR CIDCTL         */
         L     CVPINPUT,NCSPLRPH(,@04)                             2016
*   CVPR2=NCSPLCID;                 /* SET UP REG 2 WITH CID FOR   2017
*                                      CIDCTL                        */
         L     CVPR2,NCSPLCID(,@04)                                2017
*   DO;                             /* CIDCTL(FIND) LOCK(XCLUSIVE)   */
*     RFY                                                          2019
*      (EMCR2,                                                     2019
*       EMCR3) RSTD;                                               2019
*     GEN SETS(RPHWORK)                                            2020
*         (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);     2020
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*     EMCR3='00'X;                  /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         2021
*     EMCR3='02'X;                  /* INDICATE EXCLUSIVE LOCK       */
         LA    EMCR3,2                                             2022
*     CALL ATCLCPTR->ATCCDFND->ISTSDCCF;/* PROCESS REQUEST           */
         L     @04,ATCLCPTR                                        2023
         L     @15,ATCCDFND(,@04)                                  2023
         BALR  @14,@15                                             2023
*     RFY                                                          2024
*      (EMCR2,                                                     2024
*       EMCR3) UNRSTD;                                             2024
*   END;                            /* CIDCTL                        */
*   CVPR2->FMCDEVOF=CVPON;          /* TURN ON CONNECT DEAD          */
         OI    FMCDEVOF(CVPR2),B'00010000'                         2026
*   CVPR2=NCSIOCID;                                                2027
         L     @04,CVPNCSPL                                        2027
         L     CVPR2,NCSIOCID(,@04)                                2027
*   DO;                             /* CIDCTL(FINISH)                */
*     RFY                                                          2029
*      (EMCR2,                                                     2029
*       EMCR3) RSTD;                                               2029
*     GEN SETS(RPHWORK)                                            2030
*         (STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH);     2030
         STM EMCR0,EMCR15,RPHWORK(RPHPTR) SAVE REGS IN RPH
*     EMCR3='00'X;                  /* CLEAR EXTRA BITS              */
         SLR   EMCR3,EMCR3                                         2031
*     CALL ATCLCPTR->ATCCDFIN->ISTSDCCR;/* PROCESS REQUEST           */
         L     @04,ATCLCPTR                                        2032
         L     @15,ATCCDFIN(,@04)                                  2032
         BALR  @14,@15                                             2032
*     RFY                                                          2033
*      (EMCR2,                                                     2033
*       EMCR3) UNRSTD;                                             2033
*   END;                            /* CIDCTL END OF REMOTE RN CODE  */
*   GEN(   EJECT);                                                 2035
*                                                                  2035
            EJECT
*/* SEGMENT(CVPDISC)START                                            */
*                                                                  2036
*   DO;                                                            2036
*     GOTO CVPDISC@;                                               2037
         B     CVPDISC@                                            2037
*CVPDISC:                                                          2038
*   END;                                                           2038
*                                                                  2038
CVPDISC  DS    0H                                                  2039
*/********************************************************************
*                                                                    */
*/*   THE FUNCTION OF CVPDISC IS TO SCAN THE RDT SEGMENT FOR ACTIVE  */
*/* SUBNODES AT THE TIME THIS NODE WAS DEACTIVATED. FOR EACH ACTIVE  */
*/* SUBNODE FOUND, A DISCONTACT RU MUST BE SENT & THEN THE SDLC LINK */
*/* MUST BE DEACTIVATED VIA A DEACTIVATE LINK RU.                    */
*/*   THE ROUTINE CONSISTS OF TWO DO WHILE LOOPS, A MAJOR LOOP WHICH */
*/* HANDLES DEACTIVATE LINKS FOR EACH SDLC LINK. THE MINOR DO WHILE  */
*/* LOOP SCANS EACH SUBENTRY UNDER THE PARTICULAR SDLC LINK FOR A NEW*/
*/* PU, REMOTE 370X, OR LU. FOR NEW PUS & REMOTE 370XS, IF           */
*/* DISCONTACT IS REQUIRED, THE DISCONTACT IS DONE. FOR REMOTE 370XS */
*/* IF POWER OFF IS REQUIRED, THIS RU IS SENT ALSO.                  */
*/********************************************************************
*                                                                    */
*                                                                  2039
*   RFY                                                            2039
*    (ISTRPRE,                                                     2039
*     ISTRCPRE,                                                    2039
*     ISTRIN) BASED(CVPSUBRN);                                     2039
*   CVPDISOP='010202'X;             /* SET OP CODES IN 3 RU'S        */
         MVC   CVPDISOP(3),@CB06034                                2040
*   CVPDLOP='01020B'X;                                             2041
         MVC   CVPDLOP(3),@CB05944                                 2041
*   CVPPOOP='010209'X;                                             2042
         MVC   CVPPOOP(3),@CB06035                                 2042
*   NCSPLOLN=CVPDLEN;               /* SET OUTBOUND LENGTH           */
         L     @04,CVPNCSPL                                        2043
         MVC   NCSPLOLN(2,@04),@CH00133                            2043
*   NCSPLRUI=0;                     /* INDICATE NO DATA SAVED        */
         SLR   @03,@03                                             2044
         ST    @03,NCSPLRUI(,@04)                                  2044
*   NCSPLCID=CVPSAF+CVPSUBRN->RPRDAF;/* SET UP NCSPLCID USING RN DAF
*                                      WITH PTR(CVPSUBRN) SAVED FOR
*                                      CVPSUBS SEGMENT               */
         L     @03,CVPSUBRN                                        2045
         LH    @03,RPRDAF(,@03)                                    2045
         N     @03,@CF06675                                        2045
         AL    @03,CVPSAF                                          2045
         ST    @03,NCSPLCID(,@04)                                  2045
*   DO WHILE CVPDISLP=CVPOFF;       /* PROCESS RN SEGMENT            */
         B     @DE02046                                            2046
@DL02046 DS    0H                                                  2047
*     IF CVPSUBRN->RPRENTRY=RPRENTLN&CVPSUBRN->RLNRATRN=CVPON&CVPSUBRN
*         ->RLNRACAT='0'B&CVPSUBRN->RLNRACAN='0'B THEN             2047
         L     @04,CVPSUBRN                                        2047
         CLI   RPRENTRY(@04),X'50'                                 2047
         BNE   @RF02047                                            2047
         TM    RLNRATRN(@04),B'00000010'                           2047
         BNO   @RF02047                                            2047
         TM    RLNRACAT(@04),B'11000000'                           2047
         BNZ   @RF02047                                            2047
*       DO;                         /* IF CURRENT ENTRY IS AN NONE 2048
*                                      SWITHED SDLC LINK             */
*         CVPDISLK=CVPSUBRN;        /* SAVE LINK'S RDTE              */
         ST    @04,CVPDISLK                                        2049
*         CVPSUBLP=CVPOFF;          /* INITIALIZE LOOP SWITCH        */
*                                                                  2050
         NI    CVPSUBLP,B'01111111'                                2050
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESS REMOTE RN, NEW CLUS, & LOGICAL UNIT ENTRIES     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  2051
*         DO WHILE CVPSUBRN->RPRENTED=CVPOFF&CVPSUBLP=CVPOFF;      2051
         B     @DE02051                                            2051
@DL02051 DS    0H                                                  2052
*           CVPSUBRN=CVPSUBRN+CVPSUBRN->RPRELEN;/* BUMP SCAN RDTE TO
*                                      NEXT ENTRY                    */
         L     @04,CVPSUBRN                                        2052
         LH    @03,RPRELEN(,@04)                                   2052
         ALR   @03,@04                                             2052
         ST    @03,CVPSUBRN                                        2052
*           IF CVPSUBRN->RPRENTRY=RPRENTCC THEN/* IF SNA PU          */
         CLI   RPRENTRY(@03),X'71'                                 2053
         BNE   @RF02053                                            2053
*             DO;                                                  2054
*               IF CVPSUBRN->RCCLDISC=CVPON THEN/* PU REQUIRE        */
         TM    RCCLDISC(@03),B'00010000'                           2055
         BNO   @RF02055                                            2055
*                 DO;               /* DISCONTACT?                   */
*                   NCSPLRUO=ADDR(CVPDISRU);/* SET O/B BUF @ TO    2057
*                                      DISBUF                        */
         L     @04,CVPNCSPL                                        2057
         LA    @09,CVPDISRU                                        2057
         ST    @09,NCSPLRUO(,@04)                                  2057
*                   CVPDSDAF=CVPSUBRN->RPRDAF;/* SET RU DAF TO PU    */
         MVC   CVPDSDAF(2),RPRDAF(@03)                             2058
*                   NCSPLCMD=NCSCDCON;/* SET CMD TO DISCONTACT       */
         MVC   NCSPLCMD(2,@04),@CB03723                            2059
*                   CALL CVPDOIO;   /* PERFORM I/O OPERATION         */
         BAL   @14,CVPDOIO                                         2060
*                 END;              /* END FOR PU DISCONTACT REQUIRED*/
*               ELSE                                               2062
*                 ;                                                2062
@RF02055 DS    0H                                                  2063
*             END;                  /* END FOR SNA CLUSRER ENTRY     */
*           ELSE                                                   2064
*             IF CVPSUBRN->RPRENTRY=RPRENTIN THEN/* IF REMOTE RN     */
         B     @RC02053                                            2064
@RF02053 L     @04,CVPSUBRN                                        2064
         CLI   RPRENTRY(@04),X'82'                                 2064
         BNE   @RF02064                                            2064
*               DO;                                                2065
*                 IF CVPSUBRN->RINLDISC=CVPON THEN/* REMOTE NEED   2066
*                                      DISCONTACT                    */
         TM    RINLDISC(@04),B'00100000'                           2066
         BNO   @RF02066                                            2066
*                   DO;                                            2067
*                     IF RINREMPO=CVPON THEN/* IF REM POW OFF IND    */
         TM    RINREMPO(@04),B'10000000'                           2068
         BNO   @RF02068                                            2068
*                       DO;                                        2069
*                         NCSPLRUO=ADDR(CVPPORU);/* SET O/B BUF @ TO
*                                      POBUF                         */
         L     @03,CVPNCSPL                                        2070
         LA    @09,CVPPORU                                         2070
         ST    @09,NCSPLRUO(,@03)                                  2070
*                         CVPPODAF=CVPSUBRN->RINRLDAF;/* GET SAVED 2071
*                                      REMOTE DAF                    */
         MVC   CVPPODAF(2),RINRLDAF(@04)                           2071
*                         NCSPLCMD=NCSCPWO;/* CMD IS REMOTE POWER OFF*/
         MVC   NCSPLCMD(2,@03),@CB03755                            2072
*                         CALL CVPDOIO;                            2073
         BAL   @14,CVPDOIO                                         2073
*                       END;        /* END FOR REMOTE POW OFF REQ    */
*                     ELSE                                         2075
*                       DO;         /*                       @DM37521*/
         B     @RC02068                                            2075
@RF02068 DS    0H                                                  2076
*                         NCSPLRUO=ADDR(CVPDISRU);/* SET O/B BUF @ TO
*                                      DISBUF                        */
         L     @04,CVPNCSPL                                        2076
         LA    @03,CVPDISRU                                        2076
         ST    @03,NCSPLRUO(,@04)                                  2076
*                         CVPDSDAF=CVPSUBRN->RINRLDAF;/* SET RU DAF
*                                      TO REMOTE DAF                 */
         L     @03,CVPSUBRN                                        2077
         MVC   CVPDSDAF(2),RINRLDAF(@03)                           2077
*                         NCSPLCMD=NCSCDCON;/* CMD IS DISCONTACT     */
         MVC   NCSPLCMD(2,@04),@CB03723                            2078
*                         CALL CVPDOIO;                            2079
         BAL   @14,CVPDOIO                                         2079
*                       END;        /*                       @DM37521*/
*                   END;            /* END FOR REMOTE RN             */
*                 ELSE                                             2082
*                   ;                                              2082
@RF02066 DS    0H                                                  2083
*               END;                /* END FOR REMOTE RN             */
*             ELSE                                                 2084
*               IF CVPSUBRN->RPRENTRY=RPRENTLU THEN                2084
         B     @RC02064                                            2084
@RF02064 L     @04,CVPSUBRN                                        2084
         CLI   RPRENTRY(@04),X'81'                                 2084
         BE    @RT02084                                            2084
*                 ;                 /* IS IT AN LU                   */
*               ELSE                                               2086
*                 DO;               /* IF NOT, EXIT LOOP             */
*                   CVPSUBLP=CVPON; /* TURN ON EOL SWITCH            */
         OI    CVPSUBLP,B'10000000'                                2087
*                   CVPSUBRN=CVPSUBRN-CVPSUBRN->RPRPELEN;/* BACK UP
*                                      TO PREV ENTRY                 */
         L     @04,CVPSUBRN                                        2088
         LR    @03,@04                                             2088
         SH    @03,RPRPELEN(,@04)                                  2088
         ST    @03,CVPSUBRN                                        2088
*                 END;                                             2089
*         END;                      /* END INNER DO WHILE LOOP       */
@RT02084 DS    0H                                                  2090
@RC02064 DS    0H                                                  2090
@RC02053 DS    0H                                                  2090
@DE02051 L     @04,CVPSUBRN                                        2090
         TM    RPRENTED(@04),B'00000100'                           2090
         BNZ   @DC02051                                            2090
         TM    CVPSUBLP,B'10000000'                                2090
         BZ    @DL02051                                            2090
@DC02051 DS    0H                                                  2091
*         IF CVPDISLK->RPRONLIN=CVPON THEN/* IF LINK ONLINE          */
         L     @04,CVPDISLK                                        2091
         TM    RPRONLIN(@04),B'00001000'                           2091
         BNO   @RF02091                                            2091
*           DO;                                                    2092
*             IF CVPDISLK->RPRLTASN=CVPON THEN/* IF LINE TRACE     2093
*                                                            @ZM32959*/
         TM    RPRLTASN(@04),B'10000000'                           2093
         BNO   @RF02093                                            2093
*               DO;                 /* TURN OFF LINE TRACE   @ZM32959*/
*                 NCSPLCMD=NCSCDCLT;/* CMD IS DEACT LINE TRACE     2095
*                                                            @ZM32959*/
         L     @03,CVPNCSPL                                        2095
         MVC   NCSPLCMD(2,@03),@CB03765                            2095
*                 CVPDCLRU(1:3)='010303'X;/* SET UP OUTBND RU      2096
*                                                            @ZM32959*/
         MVC   CVPDCLRU(3),@CB05942                                2096
*                 CVPDCLRU(6:8)='010000'X;/*                 @ZM32959*/
         MVC   CVPDCLRU+5(3),@CB05943                              2097
*                 CVPDCLRU(4:5)=CVPDISLK->RPRDAF;/*          @ZM32959*/
         MVC   CVPDCLRU+3(2),RPRDAF(@04)                           2098
*                 CVPWKPT3=CVPDISLK;/*                       @ZM32959*/
         ST    @04,CVPWKPT3                                        2099
*                 DO UNTIL CVPWKPT3->RPRENTRY=RPRENTRN;/*    @ZM32959*/
@DL02100 DS    0H                                                  2101
*                   CVPWKPT3=CVPWKPT3->RPRNSNEA;/*           @ZM32959*/
         L     @04,CVPWKPT3                                        2101
         L     @04,RPRNSNEA(,@04)                                  2101
         ST    @04,CVPWKPT3                                        2101
*                 END;              /* END DO UNITL          @ZM32959*/
@DE02100 L     @04,CVPWKPT3                                        2102
         CLI   RPRENTRY(@04),X'01'                                 2102
         BNE   @DL02100                                            2102
*                 NCSPLOLN=8;       /* SET UP RECORD LENGTH  @ZM32959*/
         L     @04,CVPNCSPL                                        2103
         MVC   NCSPLOLN(2,@04),@CH00099                            2103
*                 NCSPLRUI=0;       /*                       @ZM32959*/
         SLR   @03,@03                                             2104
         ST    @03,NCSPLRUI(,@04)                                  2104
*                 NCSPLRUO=ADDR(CVPDCLRU);/*                 @ZM32959*/
         LA    @03,CVPDCLRU                                        2105
         ST    @03,NCSPLRUO(,@04)                                  2105
*                 CALL CVPDOIO;     /*                       @ZM32959*/
         BAL   @14,CVPDOIO                                         2106
*                 CVPDISLK->RPRLTASN=CVPOFF;/*               @ZM32959*/
         L     @04,CVPDISLK                                        2107
         NI    RPRLTASN(@04),B'01111111'                           2107
*                 CVPWKPT3->RPRLTASN=CVPOFF;/*               @ZM32959*/
         L     @04,CVPWKPT3                                        2108
         NI    RPRLTASN(@04),B'01111111'                           2108
*               END;                /*                       @ZM32959*/
*             ELSE                                                 2110
*               ;                   /*                       @ZM32959*/
@RF02093 DS    0H                                                  2111
*             NCSPLRUO=ADDR(CVPDLRU);/* SET O/B BUF @ TO DLBUF       */
         L     @04,CVPNCSPL                                        2111
         LA    @03,CVPDLRU                                         2111
         ST    @03,NCSPLRUO(,@04)                                  2111
*             CVPDLDAF=CVPDISLK->RPRDAF;/* SET DAF IN RU TO LINK'S   */
         L     @03,CVPDISLK                                        2112
         MVC   CVPDLDAF(2),RPRDAF(@03)                             2112
*             NCSPLCMD=NCSCDACL;    /* SET CMD TO DEZCT LINE         */
         MVC   NCSPLCMD(2,@04),@CB03739                            2113
*             NCSPLOLN=CVPDLEN;     /*                       @ZM32959*/
         MVC   NCSPLOLN(2,@04),@CH00133                            2114
*             CALL CVPDOIO;                                        2115
         BAL   @14,CVPDOIO                                         2115
*           END;                    /* END FOR LINK ONLINE           */
*         ELSE                                                     2117
*           ;                                                      2117
@RF02091 DS    0H                                                  2118
*         CVPDISLK->RPRONLIN=CVPOFF;/* INSURE OFFLINE SET    @ZA26906*/
         L     @04,CVPDISLK                                        2118
         NI    RPRONLIN(@04),B'11110111'                           2118
*       END;                        /* END FOR CURRENT ENTRY AN SDLC
*                                      LINK                          */
*     ELSE                                                         2120
*       ;                           /* ELSE NOT AN SDLC LINK         */
@RF02047 DS    0H                                                  2121
*     IF CVPSUBRN->RPRENTED=CVPOFF THEN/* ENTRY LAST IN SEGMENT?     */
         L     @04,CVPSUBRN                                        2121
         TM    RPRENTED(@04),B'00000100'                           2121
         BNZ   @RF02121                                            2121
*       CVPSUBRN=CVPSUBRN+CVPSUBRN->RPRELEN;/* BUMP TO NEXT ONE      */
         LH    @03,RPRELEN(,@04)                                   2122
         ALR   @03,@04                                             2122
         ST    @03,CVPSUBRN                                        2122
*     ELSE                                                         2123
*       CVPDISLP=CVPON;             /* ELSE GET OUT OF LOOP          */
         B     @RC02121                                            2123
@RF02121 OI    CVPDISLP,B'00000001'                                2123
*   END;                            /* END OUTER DO WHILE FOR REMOTE
*                                      RN, SNA CLUS, & LU            */
@RC02121 DS    0H                                                  2124
@DE02046 TM    CVPDISLP,B'00000001'                                2124
         BZ    @DL02046                                            2124
*/* SEGMENT(CVPDISC)FINISH                                           */
*                                                                  2125
*   DO;                                                            2125
*     GOTO CVPDISC#;                                               2126
         B     CVPDISC#                                            2126
*CVPDISC@:                                                         2127
*   END;                                                           2127
CVPDISC@ DS    0H                                                  2128
*   CVPRTNAD=CVPDEASV;              /*                       @DC36143*/
         L     CVPRTNAD,CVPDEASV                                   2128
*   END CVPDEAC;                    /*                       @DC36143*/
@EL00010 DS    0H                                                  2129
@EF00010 DS    0H                                                  2129
@ER00010 BR    @14                                                 2129
@PB00010 DS    0H                                                  2130
*   GEN(   EJECT);                                                 2130
            EJECT
*CVPSUBS:                                                          2131
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @D32CKLV*/
         B     @PB00011                                            2131
CVPSUBS  DS    0H                                                  2132
*/********************************************************************
*                                                                    */
*/*   THE FUNCTION OF CVPSUBS IS TO PROCESS SUB-NODE TERMINATION     */
*/********************************************************************
*                                                                    */
*                                                                  2132
*   CVPSUBSV=CVPRTNAD;                                             2132
         ST    CVPRTNAD,CVPSUBSV                                   2132
*   CVPINPUT=NCSPLRPH;                                             2133
*                                                                  2133
         L     @04,CVPNCSPL                                        2133
         L     CVPINPUT,NCSPLRPH(,@04)                             2133
*/*** START -TPLOCK (VOCLOCK)TYPE(XCLSIVE)- **                       */
*                                                                  2134
*   DO;                                                            2134
*     RFY                                                          2135
*      (GPR00P,                                                    2135
*       GPR01P,                                                    2135
*       GPR02P,                                                    2135
*       GPR03P,                                                    2135
*       GPR04P,                                                    2135
*       GPR15P) RSTD;                                              2135
*     GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);   2136
         STM GPR00P,GPR14P,RPHWORK(GPR01P)
*     GPR15P=ATCAP36;               /* ADDRESS OF LOCK ROUTINE       */
         L     @09,CVPNCSPL                                        2137
         L     @09,NCSPLCVT(,@09)                                  2137
         L     GPR15P,ATCAP36(,@09)                                2137
*     GPR02P=ADDR(ATCVOCLK);        /* SET PARAM - LOCKWORD PTR      */
         LA    GPR02P,ATCVOCLK(,@09)                               2138
*     GPR04P=GPR01P->RPHCRR;        /* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              2139
*     GPR00P=CRALMS02;              /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,2                                            2140
*     GPR03P=ADDR(GPR04P->CRAL2PTR);/* SET PARAM - LOCK LEVEL PTR    */
         LA    GPR03P,CRAL2PTR(,GPR04P)                            2141
*     DCL                                                          2142
*       FMZL0199 BASED(GPR15P) LABEL VALUERANGE(*);                2142
*     CALL FMZL0199;                                               2143
         BALR  @14,@15                                             2143
*     GENERATE REFS(GPR00P,GPR01P,GPR14P,RPHWORK) SETS(GPR00P,GPR01P,
*         GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,GPR09P, 2144
*         GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,GPR15P);              2144
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*     RFY                                                          2145
*      (GPR00P,                                                    2145
*       GPR01P,                                                    2145
*       GPR02P,                                                    2145
*       GPR03P,                                                    2145
*       GPR04P,                                                    2145
*       GPR15P) UNRSTD;                                            2145
*   END;                                                           2146
*                                                                  2146
*/*** END -TPLOCK (VOCLOCK)TYPE(XCLSIVE)- **                         */
*                                                                  2147
*   IF CVPSUBRN->RDTVYRPH^=0 THEN                                  2147
         L     @04,CVPSUBRN                                        2147
         L     @04,RDTVYRPH(,@04)                                  2147
         LTR   @04,@04                                             2147
         BZ    @RF02147                                            2147
*     DO;                           /*                       @DC36143*/
*/*** START -TPUNLOCK (VOCLOCK)- **                                  */
*                                                                  2149
*       DO;                                                        2149
*                                                                  2149
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)                                   */
*/* END OF ATBUILD                                                   */
*                                                                  2150
*         RFY                                                      2150
*          (GPR00P,                                                2150
*           GPR01P,                                                2150
*           GPR02P,                                                2150
*           GPR03P,                                                2150
*           GPR04P,                                                2150
*           GPR15P) RSTD;                                          2150
*         GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*         GPR02P=ADDR(ATCVOCLK);    /* SET PARAM - LOCKWORD PTR      */
         L     @09,CVPNCSPL                                        2152
         L     GPR02P,NCSPLCVT(,@09)                               2152
         LA    GPR02P,ATCVOCLK(,GPR02P)                            2152
*         GPR04P=GPR01P->RPHCRR;    /* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              2153
*         GPR00P=CRALMS02;          /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,2                                            2154
*         GPR03P=ADDR(GPR04P->CRAL2PTR);/* SET PARAM - LOCK LEVEL PTR*/
         LA    GPR03P,CRAL2PTR(,GPR04P)                            2155
*         DO;                       /* LISATCVT                    2156
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     2157
*         END;                      /* LISATCVT                      */
*         GPR15P=GPR15P->ATCAP33;                                  2159
         L     GPR15P,ATCAP33(,GPR15P)                             2159
*         DCL                                                      2160
*           FMZL0204 BASED(GPR15P) LABEL VALUERANGE(*);            2160
*         CALL FMZL0204;                                           2161
         BALR  @14,@15                                             2161
*         GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P, 2162
*             GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P,
*             GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,GPR15P);   2162
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*         RFY                                                      2163
*          (GPR00P,                                                2163
*           GPR01P,                                                2163
*           GPR02P,                                                2163
*           GPR03P,                                                2163
*           GPR04P,                                                2163
*           GPR15P) UNRSTD;                                        2163
*       END;                                                       2164
*                                                                  2164
*/*** END -TPUNLOCK (VOCLOCK)- **                                    */
*                                                                  2165
*                                   /*                       @DC36143*/
*       CVPR0=ADDR(GTNCSAD);                                       2165
         L     @04,CVPNCSPL                                        2165
         L     @03,NCSPLRPH(,@04)                                  2165
         L     @09,RPHCRR(,@03)                                    2165
         L     @09,CRACRR(,@09)                                    2165
         LA    @08,118                                             2165
         ALR   @08,@09                                             2165
         LR    CVPR0,@08                                           2165
*       CVPINPUT=NCSPLRPH;                                         2166
         LR    CVPINPUT,@03                                        2166
*       GTNCSAD=CVPNCSPL;                                          2167
         ST    @04,GTNCSAD(,@08)                                   2167
*       CVPSAVE=ADDR(VYCRRSAV);     /* USE ISTVYCRR SAVE     @D32CKLV*/
         LA    CVPSAVE,VYCRRSAV(,@09)                              2168
*       CALL NCSPLCVT->ATCINCW3;                                   2169
*                                                                  2169
         L     @04,NCSPLCVT(,@04)                                  2169
         L     @15,ATCINCW3(,@04)                                  2169
         BALR  @14,@15                                             2169
*/* TPEXIT  NORM                                                     */
*                                                                  2170
*       DO;                                                        2170
*         RESPECIFY                                                2171
*           GPR15P RSTD;                                           2171
*                                                                  2171
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  2172
*         DO;                       /* LISATCVT                    2172
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     2173
*         END;                      /* LISATCVT                      */
*         RESPECIFY                                                2175
*           GPR00F RSTD;                                           2175
*         GPR00F=4;                 /* SET PARAMETER REGISTER TO 4   */
         LA    GPR00F,4                                            2176
*         GPR15P=GPR15P->ATCAP31;                                  2177
         L     GPR15P,ATCAP31(,GPR15P)                             2177
*         DCL                                                      2178
*           FMZL0214 BASED(GPR15P) LABEL VALUERANGE(*);            2178
*         CALL FMZL0214;                                           2179
         BALR  @14,@15                                             2179
*         RESPECIFY                                                2180
*          (GPR00F,                                                2180
*           GPR15P) UNRSTD;                                        2180
*       END;                        /* **** END OF TPEXIT            */
*                                                                  2181
*       /*************************************************************/
*       /*                                                           */
*       /*                                                   @DC36143*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  2182
*     END;                          /*                       @DC36143*/
*   ELSE                                                           2183
*     DO;                           /* RDTVYRPH^=0           @DC36143*/
         B     @RC02147                                            2183
@RF02147 DS    0H                                                  2184
*/* CVPSUBRN IS RDT PTR FORM CVPLIN                                  */
*                                                                  2184
*       IF CVPSUBRN->RDTSTCNT=0 THEN/* IF SUBNODE COUNT IS 0 @DC36143*/
         L     @04,CVPSUBRN                                        2184
         CLI   RDTSTCNT(@04),0                                     2184
         BNE   @RF02184                                            2184
*/*** START -TPUNLOCK (VOCLOCK)- **                                  */
*                                                                  2185
*         DO;                                                      2185
*                                                                  2185
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)                                   */
*/* END OF ATBUILD                                                   */
*                                                                  2186
*           RFY                                                    2186
*            (GPR00P,                                              2186
*             GPR01P,                                              2186
*             GPR02P,                                              2186
*             GPR03P,                                              2186
*             GPR04P,                                              2186
*             GPR15P) RSTD;                                        2186
*           GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK);
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*           GPR02P=ADDR(ATCVOCLK);  /* SET PARAM - LOCKWORD PTR      */
         L     @09,CVPNCSPL                                        2188
         L     GPR02P,NCSPLCVT(,@09)                               2188
         LA    GPR02P,ATCVOCLK(,GPR02P)                            2188
*           GPR04P=GPR01P->RPHCRR;  /* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              2189
*           GPR00P=CRALMS02;        /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,2                                            2190
*           GPR03P=ADDR(GPR04P->CRAL2PTR);/* SET PARAM - LOCK LEVEL
*                                      PTR                           */
         LA    GPR03P,CRAL2PTR(,GPR04P)                            2191
*           DO;                     /* LISATCVT                    2192
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*             GPR15P=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     2193
*           END;                    /* LISATCVT                      */
*           GPR15P=GPR15P->ATCAP33;                                2195
         L     GPR15P,ATCAP33(,GPR15P)                             2195
*           DCL                                                    2196
*             FMZL0222 BASED(GPR15P) LABEL VALUERANGE(*);          2196
*           CALL FMZL0222;                                         2197
         BALR  @14,@15                                             2197
*           GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,
*               GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,GPR08P
*               ,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,GPR15P);
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*           RFY                                                    2199
*            (GPR00P,                                              2199
*             GPR01P,                                              2199
*             GPR02P,                                              2199
*             GPR03P,                                              2199
*             GPR04P,                                              2199
*             GPR15P) UNRSTD;                                      2199
*         END;                                                     2200
*                                                                  2200
*/*** END -TPUNLOCK (VOCLOCK)- **                                    */
*                                                                  2201
*                                   /*                       @DC36143*/
*       ELSE                                                       2201
*         DO;                       /*                       @DC36143*/
         B     @RC02184                                            2201
@RF02184 DS    0H                                                  2202
*           IF NCSPLVCD=NCSPLVC2    /*                       @D32CKCV*/
*             THEN                                                 2202
         L     @04,CVPNCSPL                                        2202
         CLI   NCSPLVCD(@04),X'02'                                 2202
         BNE   @RF02202                                            2202
*             DO;                   /*                       @D32CKLV*/
*               NCSPLVCD=NCSPLVC1;  /*                       @D32CKLV*/
         MVI   NCSPLVCD(@04),X'01'                                 2204
*               NCSPLVBF=NCSVDII;   /*                       @D32CKLV*/
         MVC   NCSPLVBF(2,@04),@CB03599                            2205
*               NCSPLVID='1'B;      /*                       @D32CKLV*/
         OI    NCSPLVID(@04),B'00100000'                           2206
*             END;                                                 2207
*           ELSE                                                   2208
*             ;                                                    2208
@RF02202 DS    0H                                                  2209
*           CVPSUBRN->RDTVYRPH=CVPNCSPL;/* SET CURRENT RPH @ IN    2209
*                                      RDTVYRPH                      */
         L     @04,CVPNCSPL                                        2209
         L     @03,CVPSUBRN                                        2209
         ST    @04,RDTVYRPH(,@03)                                  2209
*           NCSPLRID=CVPSUBRN->RPRNAME;/*                    @DC36143*/
         MVC   NCSPLRID(8,@04),RPRNAME(@03)                        2210
*           NCSPLRPT=CVPWKPT1;      /*                       @DC36143*/
         L     @03,CVPWKPT1                                        2211
         ST    @03,NCSPLRPT(,@04)                                  2211
*           NCSPL2IN='1'B;          /*                       @DC36143*/
         OI    NCSPL2IN(@04),B'10000000'                           2212
*           NXTAVPTR=CVPWKPTR+8;    /*                       @DC36143*/
         L     @04,NCSPLWKA(,@04)                                  2213
         LA    @03,8                                               2213
         ALR   @03,CVPWKPTR                                        2213
         ST    @03,NXTAVPTR(,@04)                                  2213
*/*** START -TPUNLOCK (VOCLOCK)- **                                  */
*                                                                  2214
*           DO;                                                    2214
*                                                                  2214
*/* ATBUILD (ISTRPH,ISTLOK,ISTCRA)                                   */
*/* END OF ATBUILD                                                   */
*                                                                  2215
*             RFY                                                  2215
*              (GPR00P,                                            2215
*               GPR01P,                                            2215
*               GPR02P,                                            2215
*               GPR03P,                                            2215
*               GPR04P,                                            2215
*               GPR15P) RSTD;                                      2215
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(RPHWORK)
*                 ;                                                2216
         STM GPR00P,GPR15P,RPHWORK(GPR01P)
*             GPR02P=ADDR(ATCVOCLK);/* SET PARAM - LOCKWORD PTR      */
         L     @09,CVPNCSPL                                        2217
         L     GPR02P,NCSPLCVT(,@09)                               2217
         LA    GPR02P,ATCVOCLK(,GPR02P)                            2217
*             GPR04P=GPR01P->RPHCRR;/* SET PARAM - ISTCRA PTR        */
         L     GPR04P,RPHCRR(,GPR01P)                              2218
*             GPR00P=CRALMS02;      /* SET PARAM - LOCK LEVEL FLAG   */
         LA    GPR00P,2                                            2219
*             GPR03P=ADDR(GPR04P->CRAL2PTR);/* SET PARAM - LOCK LEVEL
*                                      PTR                           */
         LA    GPR03P,CRAL2PTR(,GPR04P)                            2220
*             DO;                   /* LISATCVT                    2221
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     2222
*             END;                  /* LISATCVT                      */
*             GPR15P=GPR15P->ATCAP33;                              2224
         L     GPR15P,ATCAP33(,GPR15P)                             2224
*             DCL                                                  2225
*               FMZL0232 BASED(GPR15P) LABEL VALUERANGE(*);        2225
*             CALL FMZL0232;                                       2226
         BALR  @14,@15                                             2226
*             GENERATE REFS(GPR00P,GPR01P,GPR15P,RPHWORK) SETS(GPR00P,
*                 GPR01P,GPR02P,GPR03P,GPR04P,GPR05P,GPR06P,GPR07P,
*                 GPR08P,GPR09P,GPR10P,GPR11P,GPR12P,GPR13P,GPR14P,
*                 GPR15P);                                         2227
         LM GPR00P,GPR15P,RPHWORK(GPR01P)
*             RFY                                                  2228
*              (GPR00P,                                            2228
*               GPR01P,                                            2228
*               GPR02P,                                            2228
*               GPR03P,                                            2228
*               GPR04P,                                            2228
*               GPR15P) UNRSTD;                                    2228
*           END;                                                   2229
*                                                                  2229
*/*** END -TPUNLOCK (VOCLOCK)- **                                    */
*                                                                  2230
*                                   /*                       @DC36143*/
*/* TPEXIT  NORM                                                     */
*                                                                  2230
*           DO;                                                    2230
*             RESPECIFY                                            2231
*               GPR15P RSTD;                                       2231
*                                                                  2231
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  2232
*             DO;                   /* LISATCVT                    2232
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*               GPR15P=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     2233
*             END;                  /* LISATCVT                      */
*             RESPECIFY                                            2235
*               GPR00F RSTD;                                       2235
*             GPR00F=4;             /* SET PARAMETER REGISTER TO 4   */
         LA    GPR00F,4                                            2236
*             GPR15P=GPR15P->ATCAP31;                              2237
         L     GPR15P,ATCAP31(,GPR15P)                             2237
*             DCL                                                  2238
*               FMZL0242 BASED(GPR15P) LABEL VALUERANGE(*);        2238
*             CALL FMZL0242;                                       2239
         BALR  @14,@15                                             2239
*             RESPECIFY                                            2240
*              (GPR00F,                                            2240
*               GPR15P) UNRSTD;                                    2240
*           END;                    /* **** END OF TPEXIT            */
*                                                                  2241
*           /*********************************************************/
*           /*                                                       */
*           /*                                               @DC36143*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  2242
*         END;                      /*                       @DC36143*/
*     END;                          /*                       @DC36143*/
@RC02184 DS    0H                                                  2244
*   CVPRTNAD=CVPSUBSV;              /*                       @D32CKLV*/
@RC02147 L     CVPRTNAD,CVPSUBSV                                   2244
*   END CVPSUBS;                    /*                       @D32CKLV*/
@EL00011 DS    0H                                                  2245
@EF00011 DS    0H                                                  2245
@ER00011 BR    @14                                                 2245
@PB00011 DS    0H                                                  2246
*   GEN(   EJECT);                                                 2246
*                                                                  2246
            EJECT
*/* SEGMENT(CVPDELG)START                                            */
*                                                                  2247
*   DO;                                                            2247
*     GOTO CVPDELG@;                                               2248
         B     CVPDELG@                                            2248
*CVPDELG:                                                          2249
*   END;                                                           2249
*                                                                  2249
CVPDELG  DS    0H                                                  2250
*/********************************************************************
*                                                                    */
*/*   THE FUNCTION OF CVPDELG IS TO CHECK THE I/O DONE FLAG IN THE LU*/
*/* RDTE & IF NOT SET TO SEND A DEACTIVATE LOGICAL UNIT TO ISTINCIO  */
*/* TO DEACTIVATE THE LU.                                            */
*/********************************************************************
*                                                                    */
*                                                                  2250
*   RFY                                                            2250
*    (ISTRPRE,                                                     2250
*     ISTRLU) BASED(CVPWKPT1);                                     2250
*   IF RPRVIODN=CVPON THEN                                         2251
         L     @04,CVPWKPT1                                        2251
         TM    RPRVIODN(@04),B'00010000'                           2251
         BO    @RT02251                                            2251
*     ;                             /* IF I/O DONE, EXIT             */
*   ELSE                                                           2253
*     DO;                                                          2253
*       NCSPLRUO=ADDR(CVPDELRU);    /* SET O/B BUFFER @ IN RU        */
         L     @04,CVPNCSPL                                        2254
         LA    @03,CVPDELRU                                        2254
         ST    @03,NCSPLRUO(,@04)                                  2254
*       NCSPLOLN=LENGTH(CVPDELOP);  /* SET LENGTH IN NCSPL           */
         MVC   NCSPLOLN(2,@04),@CH00086                            2255
*       NCSPLRUI=0;                 /* INDICATE NO DATA SAVED        */
         SLR   @03,@03                                             2256
         ST    @03,NCSPLRUI(,@04)                                  2256
*       CVPDELOP='0E'X;                                            2257
         MVI   CVPDELOP,X'0E'                                      2257
*       NCSPLCID=CVPSAF+RPRDAF;     /* BUILD CID IN NCSPL            */
         L     @03,CVPWKPT1                                        2258
         LH    @03,RPRDAF(,@03)                                    2258
         N     @03,@CF06675                                        2258
         AL    @03,CVPSAF                                          2258
         ST    @03,NCSPLCID(,@04)                                  2258
*       NCSPLCMD=NCSCDLU;           /* DEACTIVATE LOGICAL UNIT       */
         MVC   NCSPLCMD(2,@04),@CB03713                            2259
*       CALL CVPDOIO;                                              2260
         BAL   @14,CVPDOIO                                         2260
*       RLUACTLU=CVPOFF;            /* INDICATE DEACT LU DONE IN RDTE*/
         L     @04,CVPWKPT1                                        2261
         NI    RLUACTLU(@04),B'01111111'                           2261
*     END;                          /* END FOR I/O NOT DONE          */
*/* SEGMENT(CVPDELG)FINISH                                           */
*                                                                  2263
*   DO;                                                            2263
@RT02251 DS    0H                                                  2264
*     GOTO CVPDELG#;                                               2264
         B     CVPDELG#                                            2264
*CVPDELG@:                                                         2265
*   END;                                                           2265
*                                                                  2266
*/*------------------------------------------------------------------*/
*/* THIS SUBROUTINE ISSUES CRIO MOCRO TO UPDATE C/R DATA SETTTTT     */
*/*------------------------------------------------------------------*/
*                                                                  2266
*CVPCRIO:                                                          2266
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @X50BHLV*/
         B     @PB00012                                            2266
CVPCRIO  DS    0H                                                  2267
*   CVPSAVE6=CVPRTNAD;              /*                       @X50BHLV*/
         ST    CVPRTNAD,CVPSAVE6                                   2267
*/*CRIO  FUNC(UPDATE)RDT((CVPWKPT1))PROCNM(ISTINCVP)                 */
*                                                                  2268
*   DO;                                                            2268
*     RFY                                                          2269
*      (GPR01P,                                                    2269
*       GPR15P) RSTD;                                              2269
*     GPR15P=0;                                                    2270
         SLR   GPR15P,GPR15P                                       2270
*     IF CVPWKPT1->RPRCRCPT='1'B THEN                              2271
         L     @04,CVPWKPT1                                        2271
         TM    RPRCRCPT(@04),B'01000000'                           2271
         BNO   @RF02271                                            2271
*       DO;                                                        2272
*         NCSCRDTE=CVPWKPT1;                                       2273
         L     @03,CVPNCSPL                                        2273
         ST    @04,NCSCRDTE(,@03)                                  2273
*         NCSCRCMD=NCSCRWR;                                        2274
         MVI   NCSCRCMD(@03),X'00'                                 2274
*         GPR01P=ADDR(ISTNCSPL);                                   2275
         LR    GPR01P,@03                                          2275
*         CALL ISTINCR5;                                           2276
         L     @15,@CV06056                                        2276
         BALR  @14,@15                                             2276
*         DO;                                                      2277
*                                                                  2277
*/***  CRRMAINT  RPHADD((NCSPLRPH))PROCNM(ISTINCVP)COMP(VY)FUNC(RET)  *
*                                                                    */
*/* ** CLEAR AND SET CURRENT PROCEDURE BIT **                        */
*                                                                  2278
*           NCSPLRPH->RPHCRR->CRACRR->VYCCRT='0'B;                 2278
         L     @04,CVPNCSPL                                        2278
         L     @04,NCSPLRPH(,@04)                                  2278
         L     @04,RPHCRR(,@04)                                    2278
         L     @04,CRACRR(,@04)                                    2278
         XC    VYCCRT+1(11,@04),VYCCRT+1(@04)                      2278
         MVI   VYCCRT(@04),B'00000000'                             2278
*           NCSPLRPH->RPHCRR->CRACRR->CINCVP='1'B;                 2279
         OI    CINCVP(@04),B'00001000'                             2279
*         END;                                                     2280
*         RFY                                                      2281
*          (GPR01P,                                                2281
*           GPR15P) UNRSTD;                                        2281
*       END;                                                       2282
*   END;                                                           2283
*                                                                  2283
@RF02271 DS    0H                                                  2284
*/*  END OF CRIO EXPANSION                                           */
*                                                                  2284
*                                   /*                       @X50BHLV*/
*   CVPRTNAD=CVPSAVE6;              /*                       @X50BHLV*/
         L     CVPRTNAD,CVPSAVE6                                   2284
*   END CVPCRIO;                    /*                       @X50BHLV*/
@EL00012 DS    0H                                                  2285
@EF00012 DS    0H                                                  2285
@ER00012 BR    @14                                                 2285
@PB00012 DS    0H                                                  2286
*                                                                  2286
*/* TPEPILOG                                                         */
*                                                                  2286
*   GEN(PRINT OFF);                                                2286
         PRINT OFF
*/* VS1, VS2 TPIOS SAVEAREA FORMAT */                              2287
*DCL  1  ISTZSAVE BDY(WORD) BASED,                                 2287
*        2   ZSAZSVBC PTR(31),         /* SAVEAREA BACK CHAIN        */
*            3   ZSAZSVMS CHAR(1),     /* MODULE TRACE CODE          */
*                4 ZSAZACTV BIT(1),    /* ACTIVE SAVE AREA FLAG      */
*        2   ZSAZSVFC PTR(31),         /* SAVEAREA FORWARD CHAIN     */
*        2   ZSAZSVRR PTR(31),         /* RETURN REGISTER            */
*        2   ZSAZSVVR (6) PTR(31),    /* VARIABLE REGS (7-12) SVEAREA*/
*        2   ZSAZTRAC CHAR(4);        /* EBCDIC NAME OF OWNER        */
*/*                                                                2288
*THE FOLLOWING EQUATES SHOULD READ ''FIXED(8) CONSTANT(LENGTH(X))'',
*WHERE X IS THE NAME OF THE VARIABLE CONTROL BLOCK OR FIELD OF WHICH
*LENGTH IS THE VALUE BEING EQUATED, SHOULD THE PLS COMPILER BE     2288
*BE ABLE TO TAKE IT.                                               2288
*                                                                    */
*DCL ZSAZSVVA FIXED(8) CONSTANT(8);  /* DISPLACEMENT TO VARIABLE REGS*/
*DCL ZSAZSVSZ FIXED(8) CONSTANT(40); /* LENGTH OF ISTZSAVE           */
*/* CRR FOR COMMAND FACILITIES                                      */
*/*  REVISIONS                                         001 06/02/75 */
*DCL  1  ISTCFCRR BDY(WORD) BASED, /* CRR FOR COMMAND FACILITIES    */
*        2 CFCAUDIT,               /* AUDIT TRAIL FOR CMD FACILITIES*/
*          3 CFCNTRD  CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES ENTERED            */
*            4 NCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 ENTERED   */
*            4 NCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 ENTERED   */
*            4 NCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 ENTERED   */
*            4 NCFCRP   BIT(1),    /* IND MODULE ISTCFCRP ENTERED   */
*            4 NCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 ENTERED   */
*            4 NCFRSVD  BIT(3),    /* RESERVED                      */
*          3 CFCCRT   CHAR(1),     /* LIST OF MODULES IN COMMAND    */
*                                  /* FACILITIES RUNNING            */
*            4 CCFCS1   BIT(1),    /* IND MODULE ISTCFCS1 RUNNING   */
*            4 CCFCS2   BIT(1),    /* IND MODULE ISTCFCS2 RUNNING   */
*            4 CCFCR1   BIT(1),    /* IND MODULE ISTCFCR1 RUNNING   */
*            4 CCFCRP   BIT(1),    /* IND MODULE ISTCFCRP RUNNING   */
*            4 CCFCR2   BIT(1),    /* IND MODULE ISTCFCR2 RUNNING   */
*            4 CCFRSVD1 BIT(3);    /* RESERVED                      */
*DCL TIDCFCS1 BIT(8) CONSTANT('00'X); /* THREAD ID FOR ISTCFCS1     */
*DCL TIDCFCR1 BIT(8) CONSTANT('01'X); /* THREAD ID FOR ISTCFCR1     */
*DCL TIDCFCR2 BIT(8) CONSTANT('02'X); /* THREAD ID FOR ISTCFCR2     */
*/* COMPONENT RECOVERY RECORD FOR TPIOS */                         2294
*/*  DELTA                                             006 02/10/75  */
*DCL                                                               2294
*1  ISTZCRR BDY(WORD) BASED,     /* CONTROL WORD                     */
*   2  ZCRCRR CHAR(4),           /* CONTROL WORD                     */
*      3  ZCRID CHAR(1),         /* CONTROL BLOCK ID                 */
*      3  ZCRLEN CHAR(2),        /* LENGTH OF ZCR                    */
*      3  ZCRFLAG CHAR(1),       /* FLAGS                            */
*   2  ZCRCHAIN PTR(31),         /* POINTER TO PREVIOUS ZCR          */
*   2  ZCRFRRA PTR(31),          /* PTR TO FRR                       */
*   2  ZCRFLGS1 CHAR(1),         /* FLGS USED BY REQUEST COMPLETION  */
*      3  ZCREXSW BIT(1),        /* EXIT SWITCH                      */
*      3  ZCRQUESW BIT(1),       /* QUEUE SWITCH                     */
*      3  ZCRDEQSW BIT(1),       /* DEQUEUE SWITCH                   */
*      3  ZCRWAIT BIT(1),        /* WAIT Q ANALYSIS COMPLETE         */
*      3  ZCRNRMEX BIT(1),       /* NORMAL EXIT TO BE TAKEN          */
*      3  ZCRENDLP BIT(1),       /* END OF LOOP SWITCH               */
*      3  ZCRUNSOL BIT(1),       /* UNSOLICITED DATA                 */
*      3  ZCRFEXIT BIT(1),       /* FORCE EXIT SWITCH                */
*   2  ZCRFLGS2 CHAR(1),         /* FLAGS USED WITHIN TPIOS          */
*      3  ZCRLOCAL BIT(1),       /* LOCAL SUPPORT                    */
*      3  ZCRSHEDI BIT(1),       /* IMMEDIATE SCHEDULE               */
*      3  ZCRFMSED BIT(1),       /* FMCB SEARCH ENDED                */
*      3  ZCROB    BIT(1),       /* OUTBOUND PROC IN PROGRESS        */
*      3  ZCRIF0E1 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E2 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*      3  ZCRIF0E3 BIT(1),       /* SWITCH FOR STRUCTURED PGM USED BY
*                                   INBOUND PROCESSING               */
*   2  ZCRSWFLD CHAR(1),         /* SWITCHES FOR TPIOS OUTBOUND      */
*      3  ZCRENDSH BIT(1),       /* EXIT FROM REMOTE DEV SCHEDULER   */
*         4  ZCRSLCP BIT(1),     /* SCHEDULE LCPB                    */
*      3  ZCREXTYP BIT(1),       /* TPEXIT TYPE                      */
*      3  ZCRENDPR BIT(1),       /* EXIT FROM INNER PROCESS          */
*      3  ZCRNDLCP BIT(1),       /* EXIT FROM LCPB PROCESSING        */
*         4  ZCROB1 BIT(1),      /* REMOTE DEV SCHED 1ST TIME SWITCH */
*      3  ZCRENDX BIT(1),        /* EXIT FROM LCCW/BTU XLATION       */
*      3  ZCRENDXL BIT(1),       /* EXIT FROM LCCW PROC              */
*      3  ZCRENDAN BIT(1),       /* EXIT FROM LCPB ANALYSIS          */
*      3  ZCRRESET BIT(1),                                         2294
*         4  ZCRCNLXL BIT(1),    /* CANCEL FURTHER XLATE             */
*   2  ZCRFLGS3 CHAR(1),         /* FLAGS FOR OUTBOUND PROCESSING    */
*      3  ZCRTIC BIT(1),         /* SELECT NOT TO BE SENT            */
*      3  ZCRTPCON BIT(1),       /* TPIOS CONTACT SENT               */
*      3  ZCRTPDIS BIT(1),       /* TPIOS DISCONNECT TO BE SENT      */
*      3  ZCRDISC  BIT(1),       /* DISCONNECT IN PROCESS            */
*      3  ZCREDRIV BIT(1),       /* DO DERIVE                        */
*      3  ZCRNOFRE BIT(1),       /* NO FREEING OF SIO QUEUE          */
*      3  ZCRWRPTR BIT(1),       /* WRITE TO PRINTER REQUEST         */
*      3  ZCRINLCP BIT(1),       /* ERROR OCCURED DURING OUTBND PROC */
*   2  ZCRGENSW CHAR(1),         /* GENERAL SWITCHES                 */
*      3  ZCRTSW1  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRTSW2  BIT(1),       /* TEMP SW FOR STRUCTURED PGM       */
*      3  ZCRRT06  BIT(1),       /* CRITICAL TEXT OPTION             */
*      3  ZCRLCSYN BIT(1),       /* LCCW SYNC SPECIFIED              */
*      3  ZCREXRES BIT(1),       /* EXCEPTION RESPONSE SPECIFIED     */
*      3  ZCRCLRBD BIT(1),       /* FLAG INDICATING BIND WAS CLEARED */
*      3  ZCRBRIS  BIT(1),       /* BRACKET REJECTED DUE TO IN BRAC. */
*      3  ZCRF1RES BIT(1),       /* FID1 RESPONSE TO BE GENERATED    */
*   2  ZCRPFLGS CHAR(1),         /* UTILITIES PROC OPTION FLAGS      */
*      3  ZCRQAHED BIT(1),      /* QXFR RTN TO USE INSERT OPT'N ON TPQ*
*      3  *        BIT(7),      /* RESERVED                          */
*   2  ZCRIBPR CHAR(1),          /* INBOUND PROCESSING FLAGS         */
*         3  ZCRNOBUF BIT(1),    /* FSB WITH NO BUFFER               */
*         3  ZCRERR   BIT(1),    /* ERROR INDICATOR                  */
*         3  ZCRRELK  BIT(1),    /* RESET ERROR LOCK FUNCTION REQ.   */
*         3  ZCRLCPFR BIT(1),    /* FLAG IND. DEALLOCATE ATOP LCPB   */
*         3  ZCRLCPFD BIT(1),    /* FLAG IND. LCPB FOUND ON WAITQ    */
*         3  ZCR3270  BIT(1),    /* 3270 DEVICE                      */
*         3  ZCR3270R BIT(1),    /* 3270 DEVICE IN RECORD MODE       */
*         3  *        BIT(1),    /* RESERVED                         */
*   2  ZCRSCPSW CHAR(1),         /* SESSION CONTROL FLAGS            */
*         3  ZCRTPEX BIT(1),     /* TP EXIT                          */
*         3  ZCRTPINV BIT(1),    /* INVOKE TPIOS                     */
*         3  ZCRRJLCP BIT(1),    /* LCPB REJECTED                    */
*         3  ZCRLREQ BIT(1),     /* REQUEST                          */
*         3  ZCRPRCMP BIT(1),    /* PROCESSING COMPLETE              */
*         3  ZCRFSBWE BIT(1),    /* FSB IS WORK ELEMENT              */
*         3  ZCRSKIPT BIT(1),    /* SKIP TRACE FLAG                  */
*         3  ZCRMDATA BIT(1),    /* LCCW DATA HAS BEEN MOVED @ZA29724*/
*   2  ZCRCRLCP PTR(31),         /* CURRENT LCPB PTR                 */
*   2  ZCRPARMS BDY(WORD),       /* PARAMETERS PASSED TO UTILITIES */
*      3  ZCRFBPTR PTR(31),      /* PTR TO FROM BUFFER               */
*         4  ZCRCBPTR PTR(31),   /* PTR TO CURRENT BUFFER            */
*      3  ZCRTBPTR PTR(31),      /* PTR TO TO-OR-TRANSLATE BUFFER    */
*      3  ZCRMLNG FIXED(16),     /* LENGTH TO MOVE         @ZA28610  */
*      3  ZCRDFRDA FIXED(15),    /* OFFSET FROM DATA ADDR IN FROM BUF*/
*         4  ZCRDTODA FIXED(15), /* OFFSET FROM DATA ADDR XLATE BUF  */
*      3  ZCRPCOD1 CHAR(1),      /* CODE BYTE FOR ALLOC/DISALLOC     */
*         4  ZCRPPG BIT(1),      /* GET PAGEABLE BUFF                */
*         4  ZCRPLNG BIT(1),     /* LENGTH OF BUFFER SPECIFIED       */
*         4  ZCRPFSB BIT(1),     /* GET FSB                          */
*         4  ZCRPLSBF BIT(1),    /* GET LSCB AND BUFFER              */
*            5 ZCRPLSBQ BIT(1),  /* PURGE LSCB QUEUE                 */
*         4  ZCRPLSCB BIT(1),    /* GET OR RELEASE LSCB              */
*         4  ZCRPBUF BIT(1),     /* GET OR RELEASE BUFFER            */
*         4  ZCRPCFTX BIT(1),    /* CONFIDENTIAL TEXT                */
*         4  ZCRPRES BIT(1),     /* RESERVED                         */
*      3  ZCRPCOD2 CHAR(1),      /* CODE BYTE FOR MOVE               */
*         4  ZCRPPG2 BIT(1),     /* GET PAGEABLE BUFFER              */
*         4  ZCRPFHDR BIT(1),    /* FROM BUFFER FDB TO BE USED       */
*         4  ZCRPMFGF BIT(1),    /* MOVE STARTS WIHT 1ST BUFF IN BLOCK*
*         4  ZCRPRES2 BIT(5),    /* RESERVED                         */
*      3  ZCRPCHAR CHAR(1),      /* TRANSLATE & TEST SEARCH CHARACTER*/
*      3  ZCRPSW   CHAR(1),      /* SWITCH FIELD                     */
*   2  ZCRCCWA PTR(31),          /* PTR TO CURRENT CCW (CCW 1 OR 2)  */
*   2  ZCRBFPTR PTR(31),         /* SAVE 1ST BUFF PTR IN TO-BUFF CHN
*                                   OR LAST BUFFER IN CHANNEL PGM    */
*   2  ZCRZLB PTR(31),           /* PTR TO CURR BUFF IN CHANNEL PGM  */
*   2  ZCRPVZB PTR(31),          /* PTR TO PREVIOUS BUFF IN CHAN PGM */
*   2  ZCRSVRTN BDY(WORD),       /* REG 14 SAVE AREAS                */
*      3  ZCRSVF1 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF2 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF3 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF4 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF5 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF6 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF7 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF8 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF9 PTR(31),       /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF10 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF11 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF12 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF13 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF14 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF15 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF16 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF17 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF18 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF19 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF20 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF21 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF22 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF23 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF24 PTR(31),      /* SAVE REQUIRED REGISTER           */
*      3  ZCRSVF25 PTR(31),      /* SAVE REQUIRED REGISTER           */
*   2  ZCRWKARA BDY(WORD),       /* TEMPORARY REG SAVE AREA          */
*      3  ZCRSVWK1 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK2 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK3 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK4 PTR(31),      /* SAVE REQUIRED REG                */
*      3  ZCRSVWK5 PTR(31),      /* SAVE REQUIRED REG                */
*   2  ZCRFSBSV PTR(31),         /* FSB CHAIN PTR SAVEAREA           */
*   2  ZCRFBPRC BIT(1),          /* FSB PROCESS SW                   */
*   2  ZCRMOREL BIT(1),          /* MORE ELEMENTS SW                 */
*   2  ZCRSCANQ BIT(1),          /* SCAN QUEUE SW                    */
*   2  ZCRNXTEL BIT(1),          /* NEXT ELEMENT SW                  */
*   2  ZCRXSCHD BIT(1),          /* EXIT SCHEDULE SW                 */
*   2  ZCRLSTFB BIT(1),          /* INBOUND PROC LAST FSB FOR ELEM SW*/
*   2  ZCRTOPQ  BIT(1),          /* QUEUE ELEMENT TO TOP SW          */
*   2  ZCRAWQSW BIT(1),          /* CHECK AWAITQ FOR MORE WORK =1    */
*                                /* CHECK WAITQ =0                   */
*   2  ZCRRCDSV CHAR(1),         /* RETURN CODE SAVEAREA             */
*   2  ZCRPRMTC CHAR(1),         /* PREEMPT COMPLETION PARAMETER BYTE*/
*   2  ZCROPCDE CHAR(1),         /* OP CODE TO BE TRANSFORMED         *
*   2  ZCRR2SV PTR(31),          /* ISTZBFDI REG 2 SAVE EREA         */
*   2  ZCRR13SV PTR(31),         /* ISTSBFDI REG 13 SAVE EREA        */
*   2  ZCRCIDSV BDY(WORD),       /* ISTZBFDI CID SAVE AREA           */
*      3  ZCRSAFSV CHAR(2),      /* ISTZBFDI SAF SAVE AREA           */
*      3  ZCRDAFSV CHAR(2),      /* ISTZBFDI DAF SAVE AREA           */
*   2  ZCRSAVEZ (6) BDY(WORD) CHAR(LENGTH(ISTZSAVE)),              2294
*                                /* SAVE/TRACE AREAS FOR TPIOS MODS  */
*   2  ZCRREMIC PTR(31),        /* POINTER TO REMOTE RN ICNCB        */
*   2  ZCRAUDIT CHAR(36),        /* TPIOS AUDIT TRAIL AREA           */
*      3  ZCRTID CHAR(1),        /* THREAD I.D.                      */
*      3  ZCRTNAME CHAR(4),      /* LAST 4 CHARS OF THREAD NAME      */
*      3  ZCRENTER BIT(248),     /* BIT ARRAY FOR MODULES ENTERED    */
*         4  ZCREAC1A BIT(1),    /* ISTZAC1A ENTERED                 */
*         4  ZCREAC0A BIT(1),    /* ISTZAC0A ENTERED                 */
*         4  ZCREAC0B BIT(1),    /* ISTZAC0B ENTERED                 */
*         4  ZCREAC1B BIT(1),    /* ISTZAC1B ENTERED                 */
*         4  ZCREBCAA BIT(1),    /* ISTZBCAA ENTERED                 */
*         4  ZCREBCAB BIT(1),    /* ISTZBCAB ENTERED                 */
*         4  ZCREBCAE BIT(1),    /* ISTZBCAE ENTERED                 */
*         4  ZCREBCAG BIT(1),    /* ISTZBCAG ENTERED                 */
*         4  ZCREBCAI BIT(1),    /* ISTZBCAI ENTERED                 */
*         4  ZCREBCAM BIT(1),    /* ISTZBCAM ENTERED                 */
*         4  ZCREBCBA BIT(1),    /* ISTZBCBA ENTERED                 */
*         4  ZCREBCBB BIT(1),    /* ISTZBCBB ENTERED                 */
*         4  ZCREBCBI BIT(1),    /* ISTZBCBI ENTERED                 */
*         4  ZCREBCCB BIT(1),    /* ISTZBCCB ENTERED                 */
*         4  ZCREBCDI BIT(1),    /* ISTZBCDI ENTERED                 */
*         4  ZCREBCEB BIT(1),    /* ISTZBCEB ENTERED                 */
*         4  ZCREBCFA BIT(1),    /* ISTZBCFA ENTERED                 */
*         4  ZCREBCFB BIT(1),    /* ISTZBCFB ENTERED                 */
*         4  ZCREBCGA BIT(1),    /* ISTZBCGA ENTERED                 */
*         4  ZCREBCGB BIT(1),    /* ISTZBCGB ENTERED                 */
*         4  ZCREBCHA BIT(1),    /* ISTZBCHA ENTERED                 */
*         4  ZCREBCHB BIT(1),    /* ISTZBCHB ENTERED                 */
*         4  ZCREBCIA BIT(1),    /* ISTZBCIA ENTERED                 */
*         4  ZCREBCIB BIT(1),    /* ISTZBCIB ENTERED                 */
*         4  ZCREBCID BIT(1),    /* ISTZBCID ENTERED                 */
*         4  ZCREBCJA BIT(1),    /* ISTZBCJA ENTERED                 */
*         4  ZCREBCJB BIT(1),    /* ISTZBCJB ENTERED                 */
*         4  ZCREBCKA BIT(1),    /* ISTZBCKA ENTERED                 */
*         4  ZCREBCKB BIT(1),    /* ISTZBCKB ENTERED                 */
*         4  ZCREBCLA BIT(1),    /* ISTZBCLA ENTERED                 */
*         4  ZCREBCLB BIT(1),    /* ISTZBCLB ENTERED                 */
*         4  ZCREBCMB BIT(1),    /* ISTZBCMB ENTERED                 */
*         4  ZCREBCND BIT(1),    /* ISTZBCND ENTERED                 */
*         4  ZCREBCNE BIT(1),    /* ISTZBCNE ENTERED                 */
*         4  ZCREBCOB BIT(1),    /* ISTZBCOB ENTERED                 */
*         4  ZCREBCPB BIT(1),    /* ISTZBCPB ENTERED                 */
*         4  ZCREBCQB BIT(1),    /* ISTZBCQB ENTERED                 */
*         4  ZCREBCRA BIT(1),    /* ISTZBCRA ENTERED                 */
*         4  ZCREBCRB BIT(1),    /* ISTZBCRB ENTERED                 */
*         4  ZCREBCSC BIT(1),    /* ISTZBCSC ENTERED                 */
*         4  ZCREBCXA BIT(1),    /* ISTZBCXA ENTERED                 */
*         4  ZCREBCX0 BIT(1),    /* ISTZBCX0 ENTERED                 */
*         4  ZCREBCY0 BIT(1),    /* ISTZBCY0 ENTERED                 */
*         4  ZCREBCZ0 BIT(1),    /* ISTZBCZ0 ENTERED                 */
*         4  ZCREBC0A BIT(1),    /* ISTZBC0A ENTERED                 */
*         4  ZCREBC0B BIT(1),    /* ISTZBC0B ENTERED                 */
*         4  ZCRECC0A BIT(1),    /* ISTZCC0A ENTERED                 */
*         4  ZCRECC0B BIT(1),    /* ISTZCC0B ENTERED                 */
*         4  ZCRECC1A BIT(1),    /* ISTZCC1A ENTERED                 */
*         4  ZCRECC1B BIT(1),    /* ISTZCC1B ENTERED                 */
*         4  ZCRECC2B BIT(1),    /* ISTZCC2B ENTERED                 */
*         4  ZCREDCA0 BIT(1),    /* ISTZDCA0 ENTERED                 */
*         4  ZCREDCB0 BIT(1),    /* ISTZDCB0 ENTERED                 */
*         4  ZCREDCC0 BIT(1),    /* ISTZDCC0 ENTERED                 */
*         4  ZCREDCD0 BIT(1),    /* ISTZDCD0 ENTERED                 */
*         4  ZCREDCE0 BIT(1),    /* ISTZDCE0 ENTERED                 */
*         4  ZCREDCF0 BIT(1),    /* ISTZDCF0 ENTERED                 */
*         4  ZCREDCH0 BIT(1),    /* ISTZDCH0 ENTERED                 */
*         4  ZCREDCI0 BIT(1),    /* ISTZDCI0 ENTERED                 */
*         4  ZCREDCJ0 BIT(1),    /* ISTZDCJ0 ENTERED                 */
*         4  ZCREDCKA BIT(1),    /* ISTZDCKA ENTERED                 */
*         4  ZCREDCKB BIT(1),    /* ISTZDCKB ENTERED                 */
*         4  ZCREDCL0 BIT(1),    /* ISTZDCL0 ENTERED                 */
*         4  ZCREDCMB BIT(1),    /* ISTZDCMB ENTERED                 */
*         4  ZCREECBA BIT(1),    /* ISTZECBA ENTERED                 */
*         4  ZCREECBB BIT(1),    /* ISTZECBB ENTERED                 */
*         4  ZCREECCA BIT(1),    /* ISTZECCA ENTERED                 */
*         4  ZCREECCB BIT(1),    /* ISTZECCB ENTERED                 */
*         4  ZCREECDA BIT(1),    /* ISTZECDA ENTERED                 */
*         4  ZCREECEA BIT(1),    /* ISTZECEA ENTERED                 */
*         4  ZCREECTA BIT(1),    /* ISTZECTA ENTERED                 */
*         4  ZCREFCEA BIT(1),    /* ISTZFCEA ENTERED                 */
*         4  ZCREFCEB BIT(1),    /* ISTZFCEB ENTERED                 */
*         4  ZCREGCAB BIT(1),    /* ISTZGCAB ENTERED                 */
*         4  ZCREGCBB BIT(1),    /* ISTZGCBB ENTERED                 */
*         4  *        BIT(1),    /* NOT USED                         */
*         4  ZCREGCDB BIT(1),    /* ISTZGCDB ENTERED                 */
*         4  ZCREGCEB BIT(1),    /* ISTZGCEB ENTERED                 */
*         4  ZCREGCLA BIT(1),    /* ISTZGCLA ENTERED                 */
*         4  ZCREGC0A BIT(1),    /* ISTZGC0A ENTERED                 */
*         4  ZCREGC0B BIT(1),    /* ISTZGC0B ENTERED                 */
*         4  ZCREHCAN BIT(1),    /* ISTZHCAN ENTERED                 */
*         4  ZCREICAA BIT(1),    /* ISTZICAA ENTERED                 */
*         4  ZCREICAB BIT(1),    /* ISTZICAB ENTERED                 */
*         4  ZCREICBB BIT(1),    /* ISTZICBB ENTERED                 */
*         4  ZCREICBI BIT(1),    /* ISTZICBI ENTERED                 */
*         4  ZCREICCB BIT(1),    /* ISTZICCB ENTERED                 */
*         4  ZCREICCI BIT(1),    /* ISTZICCI ENTERED                 */
*         4  ZCREICDB BIT(1),    /* ISTZICDB ENTERED                 */
*         4  ZCREICEB BIT(1),    /* ISTZICEB ENTERED                 */
*         4  ZCREICGB BIT(1),    /* ISTZICGB ENTERED                 */
*         4  ZCREICHB BIT(1),    /* ISTZICHB ENTERED                 */
*         4  ZCREICIB BIT(1),    /* ISTZICIB ENTERED                 */
*         4  ZCREICID BIT(1),    /* ISTZICID ENTERED                 */
*         4  ZCREICJB BIT(1),    /* ISTZICJB ENTERED                 */
*         4  ZCREICKB BIT(1),    /* ISTZICKB ENTERED                 */
*         4  ZCREICKE BIT(1),    /* ISTZICKE ENTERED                 */
*         4  ZCREICKG BIT(1),    /* ISTZICKG ENTERED                 */
*         4  ZCREICLB BIT(1),    /* ISTZICLB ENTERED                 */
*         4  ZCREICMB BIT(1),    /* ISTZICMB ENTERED                 */
*         4  ZCREICNA BIT(1),    /* ISTZICNA ENTERED                 */
*         4  ZCREICNB BIT(1),    /* ISTZICNB ENTERED                 */
*         4  ZCREICOA BIT(1),    /* ISTZICOA ENTERED                 */
*         4  ZCREICOB BIT(1),    /* ISTZICOB ENTERED                 */
*         4  ZCREICQA BIT(1),    /* ISTZICQA ENTERED                 */
*         4  ZCREICQB BIT(1),    /* ISTZICQB ENTERED                 */
*         4  ZCREICRB BIT(1),    /* ISTZICRB ENTERED                 */
*         4  ZCREICSB BIT(1),    /* ISTZICSB ENTERED                 */
*         4  ZCREICSC BIT(1),    /* ISTZICSC ENTERED                 */
*         4  ZCREICTB BIT(1),    /* ISTZICTB ENTERED                 */
*         4  ZCREICUB BIT(1),    /* ISTZICUB ENTERED                 */
*         4  ZCREICVB BIT(1),    /* ISTZICVB ENTERED                 */
*         4  ZCREICWB BIT(1),    /* ISTZICWB ENTERED                 */
*         4  ZCREICX0 BIT(1),    /* ISTZICX0 ENTERED                 */
*         4  ZCREIC0B BIT(1),    /* ISTZIC0B ENTERED                 */
*         4  ZCREIC1B BIT(1),    /* ISTZIC1B ENTERED                 */
*         4  ZCREJCAB BIT(1),    /* ISTZJCAB ENTERED                 */
*         4  ZCREJCBB BIT(1),    /* ISTZJCBB ENTERED                 */
*         4  ZCREJCCB BIT(1),    /* ISTZJCCB ENTERED                 */
*         4  ZCREJCDB BIT(1),    /* ISTZJCDB ENTERED                 */
*         4  ZCREJC0B BIT(1),    /* ISTZJC0B ENTERED                 */
*         4  ZCREKCBB BIT(1),    /* ISTZKCBB ENTERED                 */
*         4  ZCREKCBN BIT(1),    /* ISTZKCBN ENTERED                 */
*         4  ZCREKCCN BIT(1),    /* ISTZKCCN ENTERED                 */
*         4  ZCREDCWR BIT(1),    /* ISTZDCWR ENTERED                 */
*         4  ZCREDCWB BIT(1),    /* ISTZDCWB ENTERED                 */
*         4  ZCREDCXR BIT(1),    /* ISTZDCXR ENTERED                 */
*         4  ZCREBCBR BIT(1),    /* ISTZBCBR ENTERED                 */
*         4  ZCREBCDR BIT(1),    /* ISTZBCDR ENTERED                 */
*         4  ZCREBCAR BIT(1),    /* ISTZBCAR ENTERED                 */
*         4  ZCRECCBI BIT(1),    /* ISTZCCBI ENTERED                 */
*         4  ZCRECCAI BIT(1),    /* ISTZCCAI ENTERED                 */
*         4  ZCRECCCI BIT(1),    /* ISTZCCCI ENTERED                 */
*         4  ZCREAC1R BIT(1),    /* ISTZAC1R ENTERED                 */
*         4  ZCREBCSB BIT(1),    /* ISTZBCSB ENTERED                 */
*         4  ZCREDCPR BIT(1),    /* ISTZDCPR ENTERED                 */
*         4  ZCREDCQR BIT(1),    /* ISTZDCQR ENTERED                 */
*         4  ZCREBCAL BIT(1),    /* ISTZBCAL ENTERED                 */
*         4  ZCREBC0L BIT(1),    /* ISTZBC0L ENTERED                 */
*         4  ZCREBCNB BIT(1),    /* ISTZBCNB ENTERED                 */
*         4  ZCREICOE BIT(1),    /* ISTZICOE ENTERED                 */
*         4  ZCREDCNB BIT(1),    /* ISTZDCNB ENTERED                 */
*         4  ZCREKCCB BIT(1),    /* ISTZKCCB ENTERED                 */
*         4  ZCRECFY0 BIT(1),    /* ISTZCFY0 ENTERED                 */
*         4  ZCREDCK0 BIT(1),    /* ISTZDFK0 ENTERED                 */
*         4  ZCREICSG BIT(1),    /* ISTZICSG ENTERED                 */
*         4  ZCREBCIF BIT(1),    /* ISTZBCIF ENTERED                 */
*         4  ZCREDCMF BIT(1),    /* ISTZDCMF ENTERED                 */
*         4  ZCRELCAB BIT(1),    /* ISTZLCAB ENTERED                 */
*         4  ZCREAC2B BIT(1),    /* ISTZAC2B ENTERED                 */
*         4  ZCREIC2B BIT(1),    /* ISTZIC2B ENTERED                 */
*         4  ZCRRSV97 BIT(97),   /* RESERVED                         */
*   2  ZCRCMNRC CHAR(1),                /* PURGE MWOR RETURN CODE    */
*   2  ZCRWORDA CHAR(3),                /* RESERVED FOR LATER USE    */
*   2  ZCRLCPB  CHAR(LENGTH(ISTLCPB)),  /* 3270 S/R LCPB             */
*      3 ZCRRHRU,                       /* SAVEAREA FOR RH AND RU    */
*        4 ZCRRH    CHAR(3),            /* RH                        */
*        4 ZCRRU    CHAR(*);            /* RU                        */
*DCL ZCTYPE BIT(8) CONSTANT('00'X);   /* ZCR TYPE                   */
*DCL ZCLNG FIXED(15) CONSTANT(172);   /* ZCRR LENGTH                */
*DCL ZCRSAVNO BIT(8) CONSTANT('06'X); /* NUMBER OF SAVEAREAS IN ZCRR */
*DCL ZCRLSVNO BIT(8) CONSTANT('04'X); /* NUMBER OF SAVE AREAS IN   2298
*                                         LOCAL SUPPORT              */
*/* *** EQUATES FOR ZCRRCDSV *** */                                2299
*                                                                  2299
*DCL ZCRMRFSB BIT(8) CONSTANT('0C'X);  /* REQUEST COMPLETION MOVE FSB
*                                         TO PROCESS                 */
*DCL ZCRSRCHQ BIT(8) CONSTANT('10'X);  /* REQUEST COMPLETION SEARCH
*                                         REQUEST QUEUE              */
*DCL ZCREXIT  BIT(8) CONSTANT('14'X);  /* REQUEST COMPLETION EXIT    */
*DCL ZCRSFSB  BIT(8) CONSTANT('18'X);  /* REQUEST COMPLETION SINGLE
*                                         FSB                        */
*DCL ZCRDLFSB BIT(8) CONSTANT('1C'X);  /* REQUEST COMPLETION DUAL FSB *
*DCL ZCRNOSCH BIT (8) CONSTANT('20'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NONE                 */
*DCL ZCRNRSCH BIT (8) CONSTANT('24'X); /* REQUEST COMPLETION, EXIT WITH
*                                         SCHED NORM                 */
*DCL ZCRLGERR FIXED(8) CONSTANT(8);    /* LOGICAL ERROR              */
*DCL ZCPLSCB BIT(8) CONSTANT('08'X);   /* GET A RELEASE LSCB         */
*DCL ZCPBUF  BIT(8) CONSTANT('04'X);   /* GET A RELEASE BUFFER       */
*DCL ZCRTAC0A FIXED(8) CONSTANT(01);   /* LOCAL DEVICE SCHEDULER(OUT)*/
*DCL ZCRTAC0B FIXED(8) CONSTANT(02);   /* REMOTE DEVICE SCHEDLER(OUT)*/
*DCL ZCRTCC1A FIXED(8) CONSTANT(03);   /* LOCAL DIALOG SCHEDLER(IN)  */
*DCL ZCRTCC1B FIXED(8) CONSTANT(04);   /* REMOTE DIALOG SCHEDLER(IN) */
*DCL ZCRTDCE0 FIXED(8) CONSTANT(05);   /* NCP SLOWDOWN RECOVERY      */
*DCL ZCRTDCKA FIXED(8) CONSTANT(06);   /* LOCAL GENERAL FUNCTIONS    */
*DCL ZCRTDCKB FIXED(8) CONSTANT(07);   /* REMOTE GENERAL FUNCTIONS   */
*DCL ZCRTFCEB FIXED(8) CONSTANT(08);   /* REMOTE READ BUFFER ALLOC.  */
*DCL ZCRTGCLA FIXED(8) CONSTANT(09);   /* LCAL CTL & TEST FEEDBACK(IN)*
*DCL ZCRTGC0A FIXED(8) CONSTANT(10);   /* LOCAL REQ. COMPLETION(IN)  */
*DCL ZCRTGC0B FIXED(8) CONSTANT(11);   /* REMOTE REQ. COMPLETION(IN) */
*DCL ZCRTICWB FIXED(8) CONSTANT(12);   /* RESET CLEANUP (PHASE 5)    */
*DCL ZCRTIC0B FIXED(8) CONSTANT(13);   /* REMOTE REQ COMPLTION CTL(IN)*
*DCL ZCRTAC1B FIXED(8) CONSTANT(14);   /* ISTZAC1B THREAD ID         */
*DCL ZCRTIC1B FIXED(8) CONSTANT(15);   /* ISTZIC1B THREAD ID         */
*DCL ZCRTCCBI FIXED(8) CONSTANT(16);   /* ISTZCCBI THREAD ID         */
*DCL ZCRTAC1R FIXED(8) CONSTANT(17);   /* ISTZAC1R THREAD ID         */
*DCL ZCRTAC1A FIXED(8) CONSTANT(18);   /* ISTZAC1A THREAD ID         */
*DCL ZCRTLCAB FIXED(8) CONSTANT(19);   /* ISTZLCAB THREAD ID         */
*/* COMPONENT RECOVERY                                               */
*/*                                                                  */
*DCL 1 ISTASCRR BDY(WORD) BASED,        /* CRR FOR SMS               */
*     2  ASCPFCRR CHAR(LENGTH(ISTPFCRR)),                          2328
*     2  ASCFLAGS CHAR(7),              /* FLAGS                     */
*        3  ASCFLG1 CHAR(2),            /* MODULE TRACE FLAGS        */
*           4  ASCFBA BIT(1),           /* ALLOCATION IN PATH        */
*           4  ASCFBD BIT(1),           /* DE-ALLOCATION IN PATH     */
*           4  ASCFSR BIT(1),           /* FSR IN PATH               */
*           4  ASCPASTR BIT(13),        /* RESERVED PATH FLAGS       */
*        3  ASCFLG2 CHAR(2),            /* MODULE IN CONTROL FLAGS   */
*           4  ASCFBAIC BIT(1),         /* ALLOCATION IN CONTROL     */
*           4  ASCFBDIC BIT(1),         /* DE-ALLOCATION IN CONTROL  */
*           4  ASCFSRIC BIT(1),         /* FSR IN CONTROL            */
*           4  ASCICR BIT(13),          /* RESERVED IN CONTROL FLAGS */
*        3  ASCFLG3 CHAR(3),            /* AUDIT FLAGS               */
*           4  ASCFSRGT BIT(1),         /* FSR DOING GET PROCESSING  */
*           4  ASCFBDAL BIT(1),         /* FBD DOING ALLOCATION      */
*           4  ASCKEYF BIT(1),          /* KEY HAS BEEN ALTERED      */
*           4  ASCLLKF BIT(1),          /* LOCAL LOCK HELD           */
*           4  ASCFBDUD BIT(1),         /* FBD USING USER DATA       */
*           4  ASCAUDIT BIT(19),        /* RESERVED AUDIT BITS       */
*     2  ASCKEY CHAR(1),                /* ORIGINAL KEY              */
*     2  ASCETRYA PTR(31),              /* RETRY ADRS FOR CONTINUE 2328
*                                          OPTION                    */
*     2  ASCUSRGS CHAR(16),             /* SAVE AREA FOR USER REGS 2328
*                                          14 - 1                    */
*        3  ASCUSR14 CHAR(4),           /* REGISTER 14               */
*        3  ASCUSR15 CHAR(4),           /* REGISTER 15               */
*        3  ASCUSR00 CHAR(4),           /* REGISTER 0                */
*        3  ASCUSR01 CHAR(4),           /* REGISTER 1                */
*     2  ASCPSREG CHAR(16);             /* SAVE AREA FOR PSS       2328
*                                          REGS 1 - 4                */
*/*  INITIAL LEVEL                                      001 04/09/75 */
*DCL 1 ISTAPCRR BDY(WORD) BASED,                                   2329
*     2 APCHDRSV CHAR(LENGTH(ISTPFCRR)),  /* HEADER                  */
*     2  APCATFLG CHAR(2),              /* AUDIT TRACE FLAGS         */
*        3  APC51E BIT(1),              /* ISTAPC51 WAS ENTERED      */
*        3  APC52E BIT(1),              /* ISTAPC52  '     '         */
*        3  APC53E BIT(1),              /* ISTAPC53                  */
*        3  APC54E BIT(1),                                         2329
*        3  APC56E BIT(1),                                         2329
*        3  APC57E BIT(1),                                         2329
*        3  APC58E BIT(1),                                         2329
*        3  APC31E BIT(1),                                         2329
*        3 * BIT(8),                    /* RESERVED                  */
*     2  APCRFLG CHAR(2),               /* AUDIT TRACE FLAGS         */
*        3  APC51R BIT(1),              /* ISTAPCR1 IS RUNNING       */
*        3  APC52R BIT(1),              /* ISTAPC52 IS RUNNING       */
*        3  APC53R BIT(1),                                         2329
*        3  APC54R BIT(1),                                         2329
*        3  APC56R BIT(1),                                         2329
*        3  APC57R BIT(1),                                         2329
*        3  APC58R BIT(1),                                         2329
*        3  APC31R BIT(1),                                         2329
*        3  *      BIT(8),              /* RESERVED                  */
*     2  APCPSTA PTR(31),               /* PST@                      */
*     2  APCTCBA PTR(31),               /* TCB@                      */
*     2  APCRTRN PTR(31),               /*@ TO BR14 TO RTN TO SYSTEM */
*     2  APCPABSV PTR(31),              /*SAVED PAB@ TO REDISPATCH   */
*     2  APCQWFO PTR(31),               /* Q@ IN PST WORK AREA ON    */
*     2  APCFRRPM PTR(31),              /* WORKAREA@ RTN'D FROM SETFR*/
*     2  APCSAVE CHAR(72),                                         2329
*        3  APCESTAL CHAR(72),          /* ESTAE PARAMETER LIST AREA */
*     2  APCCOMF CHAR(4) BDY(HWORD),    /* FLAGS USED BY ALL PSS RTN */
*        3  APCCOMF1 CHAR(2),                                      2329
*           4  APCSSTSK BIT(1),         /* IRB TYPE WORK             */
*           4  APCUETSK BIT(1),         /* USER EXIT RUNNING UNDER IRB*
*           4  APCSMCR BIT(1),          /* SMA CRA BEING USED        */
*           4  APCIRB1 BIT(1),          /* IRB1 BEING USED           */
*           4  APCIRB2 BIT(1),          /* IRB2 BEING USED           */
*           4  APCRELR BIT(1),          /*CALL ISTAPC58 TO RLEASE CRA*/
*           4  APCEXIT BIT(1),          /* TELLS ISTAPC58 TO EXIT SYS*/
*           4  APCZLBER BIT(1),         /* ERR WHILE RUNNING ZLFAB PAB*
*           4  * BIT(8),                /* RESERVED                  */
*        3  APCRETCD FIXED(15),         /* RTN CODE FOR R15 FOR SYS  */
*     2  APCSAV1 PTR(31),               /* 1ST SAVE WORD             */
*     2  APCSAV2 PTR(31),               /* 2ND SAVE WORD             */
*     2  APCSWTWD CHAR(4),              /* SWITCH AREA FOR PSS RTN   */
*     2  APC31FLG CHAR(1),              /* ISTAPC31 FLAGS            */
*        3  APCTPXIT BIT(1),            /* TPEXIT IN PROGRESS        */
*        3  APCRESCH BIT(1),            /*PAB TPEXIT OCCURED  RESCHED*/
*        3  APCSORT BIT(1),       /* PAB SORTED TO PROPER PST/MPST   */
*        3  *       BIT(5),       /* RESERVED                        */
*     2  APC52FLG CHAR(1),        /* ISTAPC52 FLAGS                  */
*        3  APCCKRQ BIT(1),       /* CHECK RDY Q FOR WORK            */
*        3  APCSMSR BIT(1),       /* RETURNING SMS RPH               */
*        3  APCQENQ BIT(1),       /* ENQUEUEING PAB'S ON PST Q'S     */
*        3  APCRDQ BIT(1),        /* DEQUEING PAB'S FROM PST RDY Q   */
*        3  APCNWF BIT(1),        /* NO WORK FOUND                   */
*        3  APCWKF   BIT(1),      /* WORK FOUND                      */
*        3    *      BIT(2),      /* RESERVED                        */
*     2  APC53FLG CHAR(1),        /* ISTAPC53 FLAGS                  */
*        3  APCPR153 BIT(1),      /* USED PREALLOCATED CRA           */
*     2  APC54FLG CHAR(1),        /* ISTAPC54 FLAGS                  */
*        3  APCRLST BIT(1),       /* SMS BEING CALLED TO RELEASE UECB*/
*        3  * BIT(7),             /* RESERVED                        */
*     2  APC57FLG CHAR(1),        /* ISTAPC57 FLAGS                  */
*        3  APCRECRA BIT(1),      /* RELEASE CRA BEING DONE          */
*        3  APCNREL BIT(1),       /* DID NOT RELEASE CRA             */
*        3  *   BIT(6),           /* RESERVED                        */
*     2  * CHAR(15);              /* RESERVED                        */
*/*               COMPONENT RECOVERY AREA                            */
*/*  REVISIONS                                         005 04/09/75  */
*DCL 1  ISTCRA BASED BDY(DWORD),        /* COMPONENT RECOVERY AREA   */
*     2  CRABASIC BDY(WORD),            /* CRA WITHOUT PROCESS CRR   */
*      3 CRAHDR CHAR(8) BDY(WORD),      /* CRA HEADER                */
*        4  CRACRR PTR(31),             /* PTR TO ACTIVE CRR         */
*        4  CRAFRR PTR(31),             /* PTR TO ACTIVE FRR         */
*      3 CRALKACT BIT(32),              /* LOCK LEVEL AND          2330
*                                          OWNERSHIP FLAGS           */
*        4  CRALEV32 BIT(1),            /* 1 = LEVEL 32 LOCK HELD    */
*        4  CRALEV31 BIT(1),            /* 1 = LEVEL 31 LOCK HELD    */
*        4  CRALEV30 BIT(1),            /* 1 = LEVEL 30 LOCK HELD    */
*        4  CRALEV29 BIT(1),            /* 1 = LEVEL 29 LOCK HELD    */
*        4  CRALEV28 BIT(1),            /* 1 = LEVEL 28 LOCK HELD    */
*        4  CRALEV27 BIT(1),            /* 1 = LEVEL 27 LOCK HELD    */
*        4  CRALEV26 BIT(1),            /* 1 = LEVEL 26 LOCK HELD    */
*        4  CRALEV25 BIT(1),            /* 1 = LEVEL 25 LOCK HELD    */
*        4  CRALEV24 BIT(1),            /* 1 = LEVEL 24 LOCK HELD    */
*        4  CRALEV23 BIT(1),            /* 1 = LEVEL 23 LOCK HELD    */
*        4  CRALEV22 BIT(1),            /* 1 = LEVEL 22 LOCK HELD    */
*        4  CRALEV21 BIT(1),            /* 1 = LEVEL 21 LOCK HELD    */
*        4  CRALEV20 BIT(1),            /* 1 = LEVEL 20 LOCK HELD    */
*        4  CRALEV19 BIT(1),            /* 1 = LEVEL 19 LOCK HELD    */
*        4  CRALEV18 BIT(1),            /* 1 = LEVEL 18 LOCK HELD    */
*        4  CRALEV17 BIT(1),            /* 1 = LEVEL 17 LOCK HELD    */
*        4  CRALEV16 BIT(1),            /* 1 = LEVEL 16 LOCK HELD    */
*        4  CRALEV15 BIT(1),            /* 1 = LEVEL 15 LOCK HELD    */
*        4  CRALEV14 BIT(1),            /* 1 = LEVEL 14 LOCK HELD    */
*        4  CRALEV13 BIT(1),            /* 1 = LEVEL 13 LOCK HELD    */
*        4  CRALEV12 BIT(1),            /* 1 = LEVEL 12 LOCK HELD    */
*        4  CRALEV11 BIT(1),            /* 1 = LEVEL 11 LOCK HELD    */
*        4  CRALEV10 BIT(1),            /* 1 = LEVEL 10 LOCK HELD    */
*        4  CRALEV09 BIT(1),            /* 1 = LEVEL 9 LOCK HELD     */
*        4  CRALEV08 BIT(1),            /* 1 = LEVEL 8 LOCK HELD     */
*        4  CRALEV07 BIT(1),            /* 1 = LEVEL 7 LOCK HELD     */
*        4  CRALEV06 BIT(1),            /* 1 = LEVEL 6 LOCK HELD     */
*        4  CRALEV05 BIT(1),            /* 1 = LEVEL 5 LOCK HELD     */
*        4  CRALEV04 BIT(1),            /* 1 = LEVEL 4 LOCK HELD     */
*        4  CRALEV03 BIT(1),            /* 1 = LEVEL 3 LOCK HELD     */
*        4  CRALEV02 BIT(1),            /* 1 = LEVEL 2 LOCK HELD     */
*        4  CRALEV01 BIT(1),            /* 1 = LEVEL 1 LOCK HELD     */
*      3 CRAL1PTR PTR(31),              /* PTR TO LEVEL 1 LOCK       */
*      3 CRAL2PTR PTR(31),              /* PTR TO LEVEL 2 LOCK       */
*      3 CRAL3PTR PTR(31),              /* PTR TO LEVEL 3 LOCK       */
*      3 CRAL4PTR PTR(31),              /* PTR TO LEVEL 4 LOCK       */
*      3 CRAL5PTR PTR(31),              /* PTR TO LEVEL 5 LOCK       */
*      3 CRAL6PTR PTR(31),              /* PTR TO LEVEL 6 LOCK       */
*      3 CRAL7PTR PTR(31),              /* PTR TO LEVEL 7 LOCK       */
*      3 CRAL8PTR PTR(31),              /* PTR TO LEVEL 8 LOCK       */
*      3 CRAL9PTR PTR(31),              /* PTR TO LEVEL 9 LOCK       */
*      3 CRALAPTR PTR(31),              /* RESERVED                  */
*/*                                                                  */
*/*   VS1/VS2 EXTENSION                                              */
*/*                                                                  */
*     2  CRARPH CHAR(LENGTH(ISTRPH)),   /* RPH ASSOCIATED WITH     2330
*                                          THIS CRH                  */
*     2  CRAPSS CHAR(LENGTH(ISTAPCRR)), /* PSS CRR                   */
*     2  CRAPROCR CHAR(LENGTH(ISTZCRR)) BDY(DWORD), /* PROCESS CRR   */
*     2  CRASVC CHAR(72) BDY(WORD),     /* SERVICE RTN CRA           */
*        3  CRAASCRR CHAR(LENGTH(ISTASCRR)), /* CRR FOR SMS          */
*        3  CRAHSIZ  PTR(31),           /* HEADER SIZE QUED SMS REQ  */
*        3  CRAMASK  PTR(31),           /* PREFIX MASK QUED SMS REQ  */
*        3  CRABUFA  FIXED(31),         /* BUFF QUE FOR FBQ ALLOCATION*
*           4 CRABFTBA BIT(1),          /* NO BUFFERS ALLOCATED YET   *
*     2  CRARSV01 PTR(31),              /* RESERVED                  */
*     2  CRARSV02 PTR(31),              /* RESERVED                  */
*     2  CRACHAIN PTR(31);              /* CHAIN FIELD USED TO QUEUE
*                                          CRA TO PREALLOCATE QUEUE
*                                          WHEN NOT IN USE           */
*DCL CRALMS32 BIT(32) CONSTANT('80000000'X); /* 32ND LEVEL LOCK MASK */
*DCL CRALMS31 BIT(32) CONSTANT('40000000'X); /* 31ST LEVEL LOCK MASK */
*DCL CRALMS30 BIT(32) CONSTANT('20000000'X); /* 30TH LEVEL LOCK MASK */
*DCL CRALMS29 BIT(32) CONSTANT('10000000'X); /* 29TH LEVEL LOCK MASK */
*DCL CRALMS28 BIT(32) CONSTANT('08000000'X); /* 28TH LEVEL LOCK MASK */
*DCL CRALMS27 BIT(32) CONSTANT('04000000'X); /* 27TH LEVEL LOCK MASK */
*DCL CRALMS26 BIT(32) CONSTANT('02000000'X); /* 26TH LEVEL LOCK MASK */
*DCL CRALMS25 BIT(32) CONSTANT('01000000'X); /* 25TH LEVEL LOCK MASK */
*DCL CRALMS24 BIT(32) CONSTANT('00800000'X); /* 24TH LEVEL LOCK MASK */
*DCL CRALMS23 BIT(32) CONSTANT('00400000'X); /* 23RD LEVEL LOCK MASK */
*DCL CRALMS22 BIT(32) CONSTANT('00200000'X); /* 22ND LEVEL LOCK MASK */
*DCL CRALMS21 BIT(32) CONSTANT('00100000'X); /* 21ST LEVEL LOCK MASK */
*DCL CRALMS20 BIT(32) CONSTANT('00080000'X); /* 20TH LEVEL LOCK MASK */
*DCL CRALMS19 BIT(32) CONSTANT('00040000'X); /* 19TH LEVEL LOCK MASK */
*DCL CRALMS18 BIT(32) CONSTANT('00020000'X); /* 18TH LEVEL LOCK MASK */
*DCL CRALMS17 BIT(32) CONSTANT('00010000'X); /* 17TH LEVEL LOCK MASK */
*DCL CRALMS16 BIT(32) CONSTANT('00008000'X); /* 16TH LEVEL LOCK MASK */
*DCL CRALMS15 BIT(32) CONSTANT('00004000'X); /* 15TH LEVEL LOCK MASK */
*DCL CRALMS14 BIT(32) CONSTANT('00002000'X); /* 14TH LEVEL LOCK MASK */
*DCL CRALMS13 BIT(32) CONSTANT('00001000'X); /* 13TH LEVEL LOCK MASK */
*DCL CRALMS12 BIT(32) CONSTANT('00000800'X); /* 12TH LEVEL LOCK MASK */
*DCL CRALMS11 BIT(32) CONSTANT('00000400'X); /* 11TH LEVEL LOCK MASK */
*DCL CRALMS10 BIT(32) CONSTANT('00000200'X); /* 10TH LEVEL LOCK MASK */
*DCL CRALMS09 BIT(32) CONSTANT('00000100'X); /* 9TH LEVEL LOCK MASK  */
*DCL CRALMS08 BIT(32) CONSTANT('00000080'X); /* 8TH LEVEL LOCK MASK  */
*DCL CRALMS07 BIT(32) CONSTANT('00000040'X); /* 7TH LEVEL LOCK MASK  */
*DCL CRALMS06 BIT(32) CONSTANT('00000020'X); /* 6TH LEVEL LOCK MASK  */
*DCL CRALMS05 BIT(32) CONSTANT('00000010'X); /* 5TH LEVEL LOCK MASK  */
*DCL CRALMS04 BIT(32) CONSTANT('00000008'X); /* 4TH LEVEL LOCK MASK  */
*DCL CRALMS03 BIT(32) CONSTANT('00000004'X); /* 3RD LEVEL LOCK MASK  */
*DCL CRALMS02 BIT(32) CONSTANT('00000002'X); /* 2ND LEVEL LOCK MASK  */
*DCL CRALMS01 BIT(32) CONSTANT('00000001'X); /* 1ST LEVEL LOCK MASK  */
*DCL CRACRA   CHAR(4) CONSTANT('CRA ');      /* CHARACTER C.B. ID    */
*   DECLARE                                                        2364
*     EMCR0 PTR REG(0),                                            2364
*     EMCR1 PTR REG(1),                                            2364
*     EMCR2 PTR REG(2),                                            2364
*     EMCR3 PTR REG(3),                                            2364
*     EMCR4 PTR REG(4),                                            2364
*     EMCR5 PTR REG(5),                                            2364
*     EMCR6 PTR REG(6),                                            2364
*     EMCR7 PTR REG(7),                                            2364
*     EMCR8 PTR REG(8),                                            2364
*     EMCR9 PTR REG(9),                                            2364
*     EMCR10 PTR REG(10),                                          2364
*     EMCR11 PTR REG(11),                                          2364
*     EMCR12 PTR REG(12),                                          2364
*     EMCR13 PTR REG(13),                                          2364
*     EMCR14 PTR REG(14),                                          2364
*     EMCR15 PTR REG(15);                                          2364
*   DECLARE                                                        2365
*     ISTSDCCA ENTRY BASED(ATCCDADD) VALRG(*),/* CIDCTL ADD ROUTINE  */
*     ISTSDCCD ENTRY BASED(ATCCDDEL) VALRG(*),/* CIDCTL DELETE     2365
*                                      ROUTINE                       */
*     ISTSDCCF ENTRY BASED(ATCCDFND) VALRG(*),/* CIDCTL FIND ROUTINE */
*     ISTSDCCN ENTRY BASED(ATCCDFDN) VALRG(*),/* CIDCTL FIND NCB   2365
*                                      ROUTINE                       */
*     ISTSDCCR ENTRY BASED(ATCCDFIN) VALRG(*);/* CIDCTL FINISH     2365
*                                      ROUTINE                       */
*   DCL                                                            2366
*     CMZCIDM FIXED(15) DEFINED(ATCCIDM);/* CIDMASK ALIAS            */
*   DCL                                                            2367
*     ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*);/* RESET ROUTINE        */
*   DCL                                                            2368
*     ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*);/* TPQUE ROUTINE        */
*   DCL                                                            2369
*     ISTINCR5 ENTRY NONLOCAL EXT;                                 2369
*   GEN(PRINT ON);                                                 2370
*                                                                  2370
         PRINT ON
*/* END OF TPEPILOG                                                  */
*/* ATDSPLY   INVOKED.                                               */
*/********************************************************************/
*/* THE FOLLOWING ATBUILD INCLUSIONS HAVE BEEN MADE IN THIS          */
*/* COMPILATION:                                                     */
*/*             ISTPFX                                               */
*/*             ISTDEVCH                                             */
*/*             ISTLOK                                               */
*/*             ISTRDT                                               */
*/*             ISTPAB                                               */
*/*             ISTDYPAB                                             */
*/*             ISTRPH                                               */
*/*             ISTATCVT                                             */
*/*             ISTACDEB                                             */
*/*             ISTPOHD                                              */
*/*             ISTNCSPL                                             */
*/*             ISTPROCD                                             */
*/*             ISTFMCB                                              */
*/*             ISTNIB                                               */
*/*             ISTLDPRM                                             */
*/*             ISTCONFT                                             */
*/*             ISTNCB                                               */
*/*             ISTICNCB                                             */
*/*             ISTRH                                                */
*/*             ISTRU                                                */
*/*             ISTLDNCB                                             */
*/*             ISTLCCW                                              */
*/*             ISTLCPB                                              */
*/*             ISTGTNCS                                             */
*/*             ISTPFCRR                                             */
*/*             ISTCNSTA                                             */
*/*             ISTVYCRR                                             */
*/*             ISTZSAVE                                             */
*/*             ISTCFCRR                                             */
*/*             ISTZCRR                                              */
*/*             ISTASCRR                                             */
*/*             ISTAPCRR                                             */
*/*             ISTCRA                                               */
*/********************************************************************/
*/* END OF ATDSPLY.                                                  */
*                                                                  2371
*   END ISTINCVP                                                   2371
*                                                                  2371
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEZIOB  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                       */
*                                                                  2371
*       ;                                                          2371
@EL00001 DS    0H                                                  2371
@EF00001 DS    0H                                                  2371
@ER00001 LM    @14,@12,12(@13)                                     2371
         BR    @14                                                 2371
@DATA    DS    0H
@CH00086 DC    H'1'
@CH00169 DC    H'2'
@CH00091 DC    H'3'
@CH00133 DC    H'5'
@CH00089 DC    H'7'
@DATD    DSECT
         DS    0F
ISTINCVP CSECT
         DS    0F
@CF00099 DC    F'8'
@CH00099 EQU   @CF00099+2
@CF03436 DC    F'72'
@CF06661 DC    F'118'
@CF02817 DC    XL4'08000000'
@CF05903 DC    XL4'00FFFFFF'
@CF06675 DC    XL4'0000FFFF'
@CF06681 DC    BL4'00000000000000010000000000000000'
@CF06687 DC    BL4'00000000010000000000000000000000'
@CF06693 DC    BL4'00000000000000100000000000000000'
@DATD    DSECT
         DS    0D
CVPNCSPL DS    A
CVPWKPT1 DS    A
CVPWKPT3 DS    A
CVPPLNSV DS    F
CVPWTOSV DS    F
CVPCLSAV DS    F
CVPOPT   DS    F
CVPRID   DS    F
CVPWORKR DS    A
CVPSAVE6 DS    F
CVPLINSV DS    F
CVPLINAD DS    F
CVPDEASV DS    F
CVPHEDSV DS    F
CVPSUBSV DS    F
CVPSNA1S DS    F
CVPLUSV  DS    F
CVPIOSAV DS    F
CVPDISLK DS    A
CVPSUBRN DS    A
CVPBLDSV DS    F
CVPCRSV  DS    F
CVPEN1SV DS    F
CVPEN2SV DS    F
CVPNCPL2 DS    F
CVPSAVE2 DS    F
CVPSAVE5 DS    F
CVPSCLSV DS    F
CVPSWICH DS    CL2
         ORG   CVPSWICH
CVPQUIT  DS    BL1
CVPRDS   EQU   CVPSWICH+0
CVPSKPHD EQU   CVPSWICH+0
CVPNCSLP EQU   CVPSWICH+0
CVPREQSW EQU   CVPSWICH+0
CVPPR1LP EQU   CVPSWICH+0
CVPPEPLP EQU   CVPSWICH+0
CVPDISLP EQU   CVPSWICH+0
CVPSUBLP DS    BL1
CVPDEALF EQU   CVPSWICH+1
CVPSNA4F EQU   CVPSWICH+1
CVPSNA5F EQU   CVPSWICH+1
@NM00136 EQU   CVPSWICH+1
         ORG   CVPSWICH+2
CVPSNMSG DS    CL16
         ORG   CVPSNMSG
CVPMCONS DS    CL8
CVPMRID  DS    CL8
         ORG   CVPSNMSG+16
CVPMSGPL DS    CL16
CVPDARU  DS    CL4
         ORG   CVPDARU
CVPDAOP  DS    CL2
@NM00137 DS    CL2
         ORG   CVPDARU+4
CVPDCLRU DS    CL8
         ORG   CVPDCLRU
CVPDCLOP DS    CL3
CVPDCLDF DS    CL2
CVPDCLCD DS    CL3
         ORG   CVPDCLRU+8
CVPP2RU  DS    CL5
         ORG   CVPP2RU
CVPP2OP  DS    CL3
CVPP2DAF DS    CL2
         ORG   CVPP2RU+5
CVPP3RU  DS    CL3
         ORG   CVPP3RU
CVPP3OP  DS    CL1
CVPP3DAF DS    CL2
         ORG   CVPP3RU+3
CVPMSG#  DS    CL4
CVPSNCRU DS    CL8
         ORG   CVPSNCRU
CVPSNCOP DS    CL2
@NM00138 DS    CL6
         ORG   CVPSNCRU+8
CVPDELRU DS    CL4
         ORG   CVPDELRU
CVPDELOP DS    CL1
@NM00139 DS    CL3
         ORG   CVPDELRU+4
CVPDISRU DS    CL5
         ORG   CVPDISRU
CVPDISOP DS    CL3
CVPDSDAF DS    CL2
         ORG   CVPDISRU+5
CVPDLRU  DS    CL5
         ORG   CVPDLRU
CVPDLOP  DS    CL3
CVPDLDAF DS    CL2
         ORG   CVPDLRU+5
CVPPORU  DS    CL5
         ORG   CVPPORU
CVPPOOP  DS    CL3
CVPPODAF DS    CL2
         ORG   CVPPORU+5
CVPVBFSV DS    CL2
CVPVCDSV DS    BL1
ISTINCVP CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV05796 DC    V(ISTINCAV)
@CV05797 DC    V(ISTINCE2)
@CV05798 DC    V(ISTINCE3)
@CV05799 DC    V(ISTINCFS)
@CV05800 DC    V(ISTINCIO)
@CV05801 DC    V(ISTINCL7)
@CV05802 DC    V(ISTINCL8)
@CV05803 DC    V(ISTINCW5)
@CV05804 DC    V(ISTINCX9)
@CV05805 DC    V(ISTINCW6)
@CV05806 DC    V(ISTINCX7)
@CV06056 DC    V(ISTINCR5)
         DS    0D
CVPSAF   DC    A(0)
@CC05831 DC    C'105I'
@CC05842 DC    C'622I'
@CC05936 DC    C'158I'
@CC05945 DC    C'161I'
@CC05952 DC    C'159I'
@CC05954 DC    C'156I'
@CC05987 DC    C'681A'
@CC05992 DC    C'682I'
@CC06028 DC    C'157I'
@CB05942 DC    X'010303'
@CB05943 DC    X'010000'
@CB05944 DC    X'01020B'
@CB06034 DC    X'010202'
@CB06035 DC    X'010209'
@CB03551 DC    X'0800'
@CB03585 DC    X'0002'
@CB03599 DC    X'0032'
@CB03611 DC    X'0400'
@CB03688 DC    X'3023'
@CB03690 DC    X'F01A'
@CB03709 DC    X'D002'
@CB03713 DC    X'D004'
@CB03723 DC    X'3009'
@CB03739 DC    X'3011'
@CB03747 DC    X'9014'
@CB03755 DC    X'3018'
@CB03765 DC    X'301E'
@CB03769 DC    X'3020'
@CB03775 DC    X'FFFF'
@CB06027 DC    X'1201'
ISTINCVP CSECT
CVPRPL   RPL AM=VTAM
ISTINCVP CSECT
CVPNIB   NIB LISTEND=YES
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTINCVP CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CVPBASE1 EQU   @11
CVPBASE2 EQU   @12
CVPBASE3 EQU   @10
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR03P   EQU   @03
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR15P   EQU   @15
RPHPTR   EQU   @01
LDPRMPTR EQU   @01
CVPINPUT EQU   @01
CVPWKPTR EQU   @05
CVPSAVE  EQU   @13
CVPRTNAD EQU   @14
CVPRTNCD EQU   @15
CVPR0    EQU   @00
CVPR2    EQU   @02
REG1025  EQU   @01
EMCR13   EQU   @13
REG15025 EQU   @15
EMCR2    EQU   @02
EMCR3    EQU   @03
CMZ00045 EQU   @00
CMZ10045 EQU   @01
CMZ20045 EQU   @02
CMZ80045 EQU   @08
CMZC0045 EQU   @12
CMZD0045 EQU   @13
CMZE0045 EQU   @14
CMZF0045 EQU   @15
CMZK0103 EQU   @01
CMZK0104 EQU   @01
CMZ00105 EQU   @00
CMZ10105 EQU   @01
CMZ20105 EQU   @02
CMZ80105 EQU   @08
CMZC0105 EQU   @12
CMZD0105 EQU   @13
CMZE0105 EQU   @14
CMZF0105 EQU   @15
EMCR0    EQU   @00
EMCR1    EQU   @01
EMCR10   EQU   @10
EMCR11   EQU   @11
EMCR12   EQU   @12
EMCR14   EQU   @14
EMCR15   EQU   @15
EMCR4    EQU   @04
EMCR5    EQU   @05
EMCR6    EQU   @06
EMCR7    EQU   @07
EMCR8    EQU   @08
EMCR9    EQU   @09
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR03F   EQU   @03
GPR04F   EQU   @04
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR15F   EQU   @15
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
ATCLCPTR EQU   1032
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSENTR EQU   0
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
SRBSECT  EQU   0
SRBFLC   EQU   SRBSECT+12
IOSB     EQU   0
IOSFLA   EQU   IOSB
IOSACHN  EQU   IOSFLA
IOSFLB   EQU   IOSB+1
IOSFLC   EQU   IOSB+2
IOSDVALT EQU   IOSFLC
IOSPKEY  EQU   IOSB+12
IOSOPT   EQU   IOSB+14
IOSOPT2  EQU   IOSB+15
@NM00030 EQU   IOSB+20
IOSCSW   EQU   @NM00030+1
IOSTATUS EQU   IOSCSW+3
IOSIPIB  EQU   IOSB+44
IOSPATH  EQU   IOSB+86
IOSCHN   EQU   IOSPATH
IOSCKEY  EQU   IOSB+89
IOSEEKA  EQU   IOSB+100
IOSCCHH  EQU   IOSEEKA+3
IOSSKHH  EQU   IOSCCHH+2
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IOBPREFX EQU   0
IOBCFLG1 EQU   IOBPREFX
IOBSTDRD EQU   0
IOBFLAG1 EQU   IOBSTDRD
IOBCYCCK EQU   IOBFLAG1
IOBRSTRT EQU   IOBFLAG1
IOBFLAG2 EQU   IOBSTDRD+1
IOBPURGE EQU   IOBFLAG2
IOBRDHA0 EQU   IOBFLAG2
IOBSENS0 EQU   IOBSTDRD+2
IOBS0B7  EQU   IOBSENS0
IOBSENS1 EQU   IOBSTDRD+3
IOBECBPT EQU   IOBSTDRD+4
IOBFLAG3 EQU   IOBSTDRD+8
IOBFL3   EQU   IOBFLAG3
IOBCNC   EQU   IOBFL3
IOBICL   EQU   IOBFL3
IOBCSW   EQU   IOBSTDRD+9
IOBIOCSW EQU   IOBCSW
IOBSTBYT EQU   IOBIOCSW+3
IOBUSTAT EQU   IOBSTBYT
IOBCSTAT EQU   IOBSTBYT+1
IOBSTART EQU   IOBSTDRD+16
IOBDCBPT EQU   IOBSTDRD+20
IOBFLAG4 EQU   IOBDCBPT
IOBRESTR EQU   IOBSTDRD+24
IOBINCAM EQU   IOBSTDRD+28
IOBBTAMF EQU   IOBINCAM
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
ISTPFX   EQU   0
PFXID    EQU   ISTPFX
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVSUBND EQU   DEVCHAR
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00065 EQU   LOKCHNG+2
ISTRPRE  EQU   0
RPRNAME  EQU   ISTRPRE
RPRCOMID EQU   ISTRPRE+8
RPRDAF   EQU   RPRCOMID+2
RPRELEN  EQU   ISTRPRE+16
RPRPELEN EQU   ISTRPRE+18
RPRENTRY EQU   ISTRPRE+20
RPRFLAGA EQU   ISTRPRE+21
RPRENTED EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRLIVE  EQU   RPRFLAGA
RPRFLAGB EQU   ISTRPRE+22
RPRVIODN EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRCAUSE EQU   ISTRPRE+23
RPRCRCPT EQU   RPRCAUSE
RPRPEPCT EQU   ISTRPRE+24
RPRHDTYP EQU   ISTRPRE+27
RPRNSNEA EQU   ISTRPRE+36
RPRDEVCH EQU   ISTRPRE+44
RPRSWDAF EQU   ISTRPRE+58
RPRPTHCT EQU   ISTRPRE+60
RPRFLAGD EQU   ISTRPRE+61
RPRLTASN EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRINIMM EQU   RPRFLAGD
RPRFLAGC EQU   ISTRPRE+62
RPRCLVPD EQU   RPRFLAGC
RPRCONID EQU   ISTRPRE+63
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVPAB  EQU   ISTRDT+92
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNLCDIP EQU   RRNFLAG
RRNUCBAD EQU   RRNADR+1
RRNTRENT EQU   ISTRRN+148
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRBREM EQU   RRNRDFA
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNREMPO EQU   RRNCMFD
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRACAT EQU   RLNRACNT
RLNRACAN EQU   RLNRACNT
RLNPORT  EQU   RLNRDFA
RLNRAPEP EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNRATRN EQU   RLNRDFB
RLNCRFLG EQU   ISTRLN+102
RLNACTLN EQU   RLNCRFLG
RLNSWNCP EQU   RLNCRFLG
RLNLSCMD EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTLNDAF EQU   RPTLNCID+2
RPTCTNM  EQU   ISTRPT+120
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
RPTVRYPD EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTPEPCT EQU   ISTRPT+144
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCCUDIE EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCFLAGB EQU   ISTRCC+74
RCCFINAL EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCRTGOH EQU   RCCFLAGB
RCCCTELU EQU   ISTRCC+76
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCDPAB  EQU   ISTRCC+92
RCCCRFLG EQU   ISTRCC+108
RCCACTPU EQU   RCCCRFLG
RCCSWTOX EQU   ISTRCC+136
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUNDSES EQU   RLUFLAG
RLUCRFLG EQU   ISTRLU+126
RLUACTLU EQU   RLUCRFLG
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
DYPPAB   EQU   ISTDYPAB+16
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCVTMID EQU   ATCCOM+240
ATCCIDM  EQU   ATCCOM+266
ATCCDADD EQU   ISTATCVT+276
ATCCDDEL EQU   ISTATCVT+280
ATCCDFND EQU   ISTATCVT+284
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCMSGP  EQU   ISTATCVT+344
ATCHPGM  EQU   ISTATCVT+384
ATCAP33  EQU   ISTATCVT+444
ATCAP36  EQU   ISTATCVT+452
ATCCDFIN EQU   ISTATCVT+460
ATCCDFDN EQU   ISTATCVT+464
ATCVOCLK EQU   ISTATCVT+468
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCINCW3 EQU   ISTATCVT+832
ATCVTBAM EQU   ISTATCVT+908
@NM00082 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00084 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTACDEB EQU   0
ACDVTPRX EQU   ISTACDEB
ACDDBPFX EQU   ISTACDEB+16
ACDTBLOF EQU   ACDDBPFX+6
ACDBASIC EQU   ISTACDEB+24
ACDTCBAD EQU   ACDBASIC
ACDNMSUB EQU   ACDTCBAD
ACDDEBAD EQU   ACDBASIC+4
ACDUSRPG EQU   ACDBASIC+16
ACDACBAD EQU   ACDBASIC+24
ACDAPPAD EQU   ACDBASIC+28
ACDVTAM  EQU   ISTACDEB+56
ACDSSFLG EQU   ACDVTAM+80
ACDAPDAT EQU   ACDVTAM+83
ISTPOHD  EQU   0
POHSTAT  EQU   ISTPOHD+1
ISTNCSPL EQU   0
@NM00089 EQU   ISTNCSPL
NCSPFX   EQU   @NM00089
NCSPLVCD EQU   ISTNCSPL+17
NCSPLVBF EQU   ISTNCSPL+18
NCSVBF11 EQU   NCSPLVBF+1
NCSVBF12 EQU   NCSPLVBF+1
NCSPLVFL EQU   ISTNCSPL+20
NCSVDEL  EQU   NCSPLVFL
NCSVSTAT EQU   NCSPLVFL
NCSPLVF1 EQU   ISTNCSPL+21
NCSPRMRC EQU   ISTNCSPL+22
NCSIORC  EQU   ISTNCSPL+23
NCSPLRID EQU   ISTNCSPL+28
NCSCRCMD EQU   ISTNCSPL+50
NCSPLRPT EQU   ISTNCSPL+52
NCSPLCMD EQU   ISTNCSPL+60
NCSCMDA  EQU   NCSPLCMD
NCSCRFLG EQU   ISTNCSPL+67
NCSPLRAD EQU   ISTNCSPL+144
NCSIOCID EQU   ISTNCSPL+148
NCSPLCID EQU   NCSIOCID
NCSPLSAF EQU   NCSPLCID
NCSPLDAF EQU   NCSPLCID+2
NCSPLWKA EQU   ISTNCSPL+152
NCSPLCVT EQU   ISTNCSPL+156
NCSPLRPH EQU   ISTNCSPL+160
NCSPLFSB EQU   ISTNCSPL+168
NCSPLFL1 EQU   ISTNCSPL+176
NCSPL2IN EQU   NCSPLFL1
NCSPLFL2 EQU   ISTNCSPL+177
NCSPLRSF EQU   NCSPLFL2
NCSPLRIO EQU   NCSPLFL2
NCSPLVIS EQU   NCSPLFL2
NCSPLVIT EQU   NCSPLFL2
NCSPLFL3 EQU   ISTNCSPL+178
NCSPLFL4 EQU   ISTNCSPL+179
NCSPLVID EQU   NCSPLFL4
NCSPLFL5 EQU   ISTNCSPL+181
NCSPLOLN EQU   ISTNCSPL+182
NCSPLP1  EQU   ISTNCSPL+184
NCSPLSPL EQU   ISTNCSPL+196
NCSPLRUO EQU   ISTNCSPL+208
NCSPLRUI EQU   ISTNCSPL+212
NCSPLAPP EQU   ISTNCSPL+216
NCSPLNSN EQU   ISTNCSPL+240
NCSSENSE EQU   ISTNCSPL+244
NCSCRDTE EQU   ISTNCSPL+264
NCSCRMSK EQU   ISTNCSPL+268
NCSCHKPT EQU   NCSCRMSK
NCSACTV  EQU   NCSCHKPT
NCSPACTV EQU   NCSCHKPT
NCSCRMOD EQU   NCSCRMSK+2
NCSAIMOD EQU   NCSCRMOD
NCSPTMOD EQU   NCSCRMOD
NCSPLSID EQU   ISTNCSPL+271
NCSPLSTA EQU   NCSPLSID
NCSPLPHD EQU   NCSPLSID+1
NCSAPP   EQU   0
NCSAPBUE EQU   NCSAPP+88
NCSUSSRU EQU   0
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTFMCB  EQU   0
FMCSTAT  EQU   ISTFMCB+28
FMCDEVOF EQU   FMCSTAT
FMCSTAT1 EQU   ISTFMCB+29
FMCCMDFL EQU   ISTFMCB+31
FMCCMPS1 EQU   ISTFMCB+36
FMCSIPA  EQU   ISTFMCB+148
FMCNXOSQ EQU   ISTFMCB+152
FMCNXCFM EQU   FMCNXOSQ
FMCNXOSC EQU   FMCNXOSQ+2
FMCSSTAT EQU   ISTFMCB+159
FMCPACE  EQU   ISTFMCB+160
FMCPACEN EQU   FMCPACE
FMCPACEM EQU   FMCPACE+1
FMCPACPC EQU   FMCPACE+2
FMCCVAL  EQU   FMCPACE+3
FMCOBCE  EQU   FMCCVAL
FMCCLEXT EQU   ISTFMCB+164
FMCRPLA  EQU   FMCCLEXT
FMCFBA   EQU   FMCCLEXT+4
FMCCMPS2 EQU   FMCCLEXT+16
FMCFLGA  EQU   FMCCMPS2
FMCFLGCL EQU   FMCCMPS2+1
FMCPSCMD EQU   FMCCMPS2+2
FMCPSTAT EQU   FMCCMPS2+3
FMCSTAT2 EQU   ISTFMCB+186
FMCMODEB EQU   ISTFMCB+189
FMCCLSEQ EQU   ISTFMCB+190
FMCRRESP EQU   ISTFMCB+195
FMCSSEGQ EQU   ISTFMCB+200
FMCFBAS  EQU   ISTFMCB+216
FMCZV002 EQU   FMCFBAS
FMCSNCTL EQU   ISTFMCB+224
FMCSCFLG EQU   FMCSNCTL
FMCVS1   EQU   ISTFMCB+232
FMCZFLAG EQU   FMCVS1
FMCZF006 EQU   FMCZFLAG
FMCLBXM  EQU   FMCVS1+12
FMCSHEAQ EQU   FMCLBXM
FMCLCPBQ EQU   FMCVS1+16
FMCLCPAQ EQU   FMCVS1+20
FMCSEQ1  EQU   FMCVS1+34
FMCZFLG2 EQU   FMCVS1+35
FMCCVFLG EQU   FMCVS1+44
FMCFLAG  EQU   0
FMCFLGB  EQU   FMCFLAG
ISTNIB   EQU   0
NIBFLGS  EQU   ISTNIB+40
NIBFLG1  EQU   NIBFLGS
ISTLDPRM EQU   0
LDPFG    EQU   ISTLDPRM+20
LDPFB2   EQU   ISTLDPRM+21
ISTCONFT EQU   0
CONHALT  EQU   ISTCONFT+106
CONFLAGS EQU   ISTCONFT+110
CONDSFLG EQU   CONFLAGS
CONOPTFL EQU   CONFLAGS+1
CONSTAT  EQU   CONFLAGS+2
CONBUFF  EQU   CONFLAGS+3
CONFLG01 EQU   ISTCONFT+416
CONSCPID EQU   ISTCONFT+1356
CONSTAID EQU   CONSCPID+3
ISTNCB   EQU   0
NCBTYPE  EQU   ISTNCB
NCBFLAGS EQU   ISTNCB+24
NCBFRAS  EQU   NCBFLAGS+1
NCBFTRIO EQU   NCBFRAS
NCBFLAG1 EQU   NCBFLAGS+2
ISTICNCB EQU   0
@NM00116 EQU   ISTICNCB+53
ICNZPAB4 EQU   ISTICNCB+80
ICNCKFLD EQU   ISTICNCB+96
ICNFLAG  EQU   ISTICNCB+100
ICNZF006 EQU   ICNFLAG
ICNFFLAG EQU   ISTICNCB+101
ICNZFF69 EQU   ICNFFLAG
ICNZSWS  EQU   ISTICNCB+102
ICNFLAG2 EQU   ISTICNCB+236
ICNCLOSE EQU   ICNFLAG2+1
ICNZD001 EQU   ISTICNCB+288
ICNWSCCW EQU   ICNZD001
ICNZD002 EQU   ISTICNCB+296
ICNZD003 EQU   ISTICNCB+320
ICNRSCCW EQU   ICNZD003
ICNZD004 EQU   ISTICNCB+328
ICNZS1VR EQU   ISTICNCB+348
ICNSRV02 EQU   ICNZS1VR
ICNDIEWA EQU   ICNSRV02
ICNDCDEB EQU   ISTICNCB+480
ICNDIDEB EQU   ICNDCDEB+12
ICNZFLAG EQU   ISTICNCB+508
ICNZH002 EQU   ISTICNCB+509
ICNZS002 EQU   ICNZH002
ICNZS003 EQU   ICNZH002
ICNZS004 EQU   ICNZH002
ICNZS006 EQU   ICNZH002
ICNZS007 EQU   ICNZH002
ICNZS008 EQU   ICNZH002
ICNZS009 EQU   ICNZH002+1
ICNZS00A EQU   ICNZH002+1
ICNZCONS EQU   ISTICNCB+680
ISTRH    EQU   0
RHFLAGS  EQU   ISTRH
RH1      EQU   RHFLAGS
RH2      EQU   RHFLAGS+1
RHRETRY  EQU   RH2
RHRSVD1  EQU   RH2
RH3      EQU   RHFLAGS+2
ISTRU    EQU   0
RUDATA   EQU   ISTRU
ISTRUB   EQU   0
NSRUNA5  EQU   0
ISTLDNCB EQU   0
LDNCFLAG EQU   ISTLDNCB+54
LDNFLAGS EQU   ISTLDNCB+107
LDNCLOSD EQU   LDNFLAGS+2
LDNZFF69 EQU   LDNFLAGS+2
LDNFLAG2 EQU   ISTLDNCB+110
LDNZPAB1 EQU   ISTLDNCB+168
LDNZIOLK EQU   ISTLDNCB+184
LDNZERPF EQU   ISTLDNCB+185
LDNZCPAN EQU   LDNZERPF
LDNZEPIN EQU   LDNZERPF
LDNZLPC  EQU   ISTLDNCB+186
LDNDCDEB EQU   ISTLDNCB+304
LDNZSAV3 EQU   ISTLDNCB+376
LDNZSAV4 EQU   LDNZSAV3+8
LDNZH003 EQU   ISTLDNCB+577
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTGTNCS EQU   0
GTNCSAD  EQU   ISTGTNCS
GTNCSFLG EQU   ISTGTNCS+4
GTNCSREQ EQU   GTNCSFLG
GTNCSRQU EQU   GTNCSFLG
GTNCSWKA EQU   GTNCSFLG
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCNSTA EQU   0
CNSTFLDA EQU   ISTCNSTA+16
CNSTFLDB EQU   ISTCNSTA+19
ISTVYCRR EQU   0
VYCAUDIT EQU   ISTVYCRR+22
VYCNTRD  EQU   VYCAUDIT
NINCVP   EQU   VYCNTRD+1
VYCCRT   EQU   VYCAUDIT+12
CINCVP   EQU   VYCCRT+1
VYCRRSAV EQU   ISTVYCRR+46
VYCRRCW3 EQU   ISTVYCRR+118
AREASAVE EQU   0
CALLERAD EQU   AREASAVE+4
CALLSAVE EQU   0
CVPAREA  EQU   CALLSAVE+8
NXTAVPTR EQU   0
CVPWK    EQU   0
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRAL2PTR EQU   CRABASIC+16
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
@NM00141 EQU   0
CMZID025 EQU   @NM00141
@NM00142 EQU   @NM00141+4
CMZRL025 EQU   @NM00142
CMZRA025 EQU   @NM00142+1
CMZEA025 EQU   @NM00141+8
CMZVP025 EQU   @NM00141+12
CMZSA025 EQU   0
CMTA025  EQU   0
ISTSDCCF EQU   0
ISTAPC37 EQU   0
ISTSDCCR EQU   0
FMZL0077 EQU   0
FMZL0137 EQU   0
FMZL0167 EQU   0
FMZL0199 EQU   0
FMZL0204 EQU   0
FMZL0214 EQU   0
FMZL0222 EQU   0
FMZL0232 EQU   0
FMZL0242 EQU   0
ISTAPC34 EQU   0
ISTRPL   EQU   0
ISTSDCCA EQU   0
ISTSDCCD EQU   0
ISTSDCCN EQU   0
PSARSVTE EQU   PSARSVT
IOSATTSC EQU   IOSIPIB
IOSWTOWA EQU   IOSIPIB
IOSPCISC EQU   IOSIPIB
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
IOBORG01 EQU   IOBPREFX+8
IOBNIOBA EQU   IOBORG01
IOBNFLG1 EQU   IOBNIOBA
IOBPRTOV EQU   IOBNFLG1
IOBORG02 EQU   IOBPREFX+8
IOBDQADA EQU   IOBORG02
IOBDEQIN EQU   IOBDQADA
IOBORG03 EQU   IOBPREFX+12
IOBORG04 EQU   IOBINCAM
IOBORG12 EQU   IOBINCAM
IOBFL4   EQU   IOBORG12
IOBEXTEN EQU   IOBSTDRD+32
IOBSEEK  EQU   IOBEXTEN
IOBBB    EQU   IOBSEEK+1
IOBCC    EQU   IOBSEEK+3
IOBHH    EQU   IOBSEEK+5
IOBORG05 EQU   IOBEXTEN
IOBORG06 EQU   IOBEXTEN
IOBNXTPT EQU   IOBORG06+4
IOBSTATA EQU   IOBNXTPT
IOBORG07 EQU   IOBEXTEN+8
W1IEXTEN EQU   IOBORG07
IOBORG08 EQU   IOBEXTEN+8
IOBINDCT EQU   IOBORG08+4
IOBUNSQR EQU   IOBORG08+5
IOBFCHAD EQU   IOBORG08+8
IOBORG09 EQU   IOBEXTEN+8
IOBDPLAD EQU   IOBORG09+4
IOBDTYPE EQU   IOBORG09+8
IOBDTYP2 EQU   IOBORG09+9
IOBDSTAT EQU   IOBORG09+10
IOBSTAT1 EQU   IOBDSTAT
IOBORG10 EQU   IOBEXTEN+8
IOBSEEK2 EQU   IOBORG10
IOBORG11 EQU   IOBEXTEN
IOBERCT  EQU   IOBORG11
IOBUCBXV EQU   IOBERCT
IOBNAME  EQU   IOBORG11+4
IOBORG13 EQU   IOBEXTEN
IOBSKADR EQU   IOBORG13
ISTSENRU EQU   RUDATA
SRUSENSE EQU   ISTSENRU
SRUSENS1 EQU   SRUSENSE
SRUSENS2 EQU   SRUSENSE+2
ISTSRU   EQU   ISTRUB
SRUDATA  EQU   ISTSRU+1
SRUTYPE  EQU   SRUDATA
SRULDID  EQU   SRUDATA+1
SRUSPSN  EQU   SRULDID
ISTNSRU  EQU   ISTRUB
NSRUNETS EQU   ISTNSRU
NSRUID   EQU   NSRUNETS
NSRUSUB  EQU   NSRUNETS+1
NSRURCD  EQU   NSRUNETS+2
NSRUDATA EQU   ISTNSRU+3
NSRUHOOK EQU   NSRUDATA
NSSSVRU  EQU   NSRUDATA
NSSSVNOD EQU   NSSSVRU+3
NSSSVT3  EQU   NSSSVNOD
NSSSVT3C EQU   NSSSVT3+2
NSSSVT3G EQU   NSSSVT3+5
NSSSVT4  EQU   NSSSVNOD
NSSSVT5  EQU   NSSSVNOD
NSRUDAT1 EQU   NSRUDATA
NSRUDAF  EQU   NSRUDAT1
NSRUDAT2 EQU   NSRUDAT1+2
ISTTRRU  EQU   NSRUDAT2
TRRTYPE  EQU   ISTTRRU
ISTCTDRU EQU   NSRUDAT2
ISTINORU EQU   NSRUDAT2
SRUDAT1  EQU   SRUDATA
SRUDAT1L EQU   SRUDAT1+1
SRUDAT2  EQU   SRUDATA
ISTMRU   EQU   ISTRUB
SRUDATA3 EQU   SRUDATA
SRUDATA4 EQU   SRUDATA
NSRUDAT3 EQU   NSRUDAT2
NSRUDAT4 EQU   NSRUDAT2
NSRUDAT5 EQU   NSRUDAT2
NSRUDAT6 EQU   NSRUDAT2
NSRUDAT7 EQU   NSRUDAT2
NSRUDIL  EQU   NSRUDAT2
NSRUDILB EQU   NSRUDIL+1
NSRUNA   EQU   NSRUDAT2
NSRUNA1  EQU   NSRUNA
NSRUNA2  EQU   NSRUNA+1
NSRUNA3  EQU   NSRUNA2
NSRUCLSP EQU   NSRUDAT2
NSRUOH1  EQU   NSRUDAT2
NSRUDAT8 EQU   NSRUDATA
ISTUNBRU EQU   SRUTYPE
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
@NM00140 EQU   RPTLNCID
CVPRPDAF EQU   @NM00140+2
CMZCIDM  EQU   ATCCIDM
CVPNIBMP EQU   ISTNIB
CVPRPLMP EQU   IFGRPL
FLC      EQU   PSA
PARMRPHP EQU   RPHSRPRM
RTRDNCBA EQU   ISTRTR+40
SRB      EQU   SRBSECT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVPRPSAF EQU   @NM00140
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
UNBTYPE  EQU   ISTUNBRU
NSRUDA8T EQU   NSRUDAT8
NSRUOHID EQU   NSRUOH1
NSRULSV  EQU   NSRUCLSP
NSRUNA4  EQU   NSRUNA+2
NSRUDILF EQU   NSRUDIL+4
NSRUDILE EQU   NSRUDIL+3
NSRUDILD EQU   NSRUDIL+2
NSRUDILC EQU   NSRUDILB
@NM00129 EQU   NSRUDILB
NSRUDILA EQU   NSRUDIL
NSRUDA7T EQU   NSRUDAT7
NSRUDA6L EQU   NSRUDAT6+4
NSRUDA6S EQU   NSRUDAT6
NSRUDA5E EQU   NSRUDAT5
NSRUDA4T EQU   NSRUDAT4
NSRUDA3S EQU   NSRUDAT3
SRUDAT4D EQU   SRUDATA4
SRUDAT3I EQU   SRUDATA3
MRUDATA  EQU   ISTMRU+9
MRURESP  EQU   ISTMRU+7
MRUMODIF EQU   ISTMRU+6
MRUCMND  EQU   ISTMRU+5
MRUDAF   EQU   ISTMRU+3
MRUREQ   EQU   ISTMRU+2
MRUPREF  EQU   ISTMRU
SRUDAT2N EQU   SRUDAT2+1
SRUDAT2T EQU   SRUDAT2
SRUDAT1I EQU   SRUDAT1+2
SRUTSPRO EQU   SRUDAT1L
SRUFMPRO EQU   SRUDAT1L
SRUDAT1T EQU   SRUDAT1
INORUET  EQU   ISTINORU
CTDRUSTA EQU   ISTCTDRU
TRRDATA  EQU   ISTTRRU+4
TRRSTAT  EQU   ISTTRRU+3
TRRPEP   EQU   ISTTRRU+2
TRRTIME  EQU   ISTTRRU+1
@NM00128 EQU   TRRTYPE
TRRFMT2  EQU   TRRTYPE
@NM00127 EQU   TRRTYPE
NSSSVT5A EQU   NSSSVT5
NSSSVT4D EQU   NSSSVT4+3
NSSSVT4C EQU   NSSSVT4+2
NSSSVT4B EQU   NSSSVT4+1
NSSSVT4A EQU   NSSSVT4
NSSSVT3K EQU   NSSSVT3+8
NSSSVT3J EQU   NSSSVT3+7
NSSSVT3I EQU   NSSSVT3+6
@NM00126 EQU   NSSSVT3G
NSSSVT3H EQU   NSSSVT3G
NSSSVT3F EQU   NSSSVT3+4
NSSSVT3E EQU   NSSSVT3+3
@NM00125 EQU   NSSSVT3C
NSSSVT3D EQU   NSSSVT3C
NSSSVT3B EQU   NSSSVT3+1
NSSSVT3A EQU   NSSSVT3
NSSSVT   EQU   NSSSVRU+2
NSSSVDAF EQU   NSSSVRU
NSRUHKTY EQU   NSRUHOOK
SRURSV01 EQU   SRULDID+4
SRUPSSN  EQU   SRULDID+2
SRUDFCLV EQU   SRUSPSN
@NM00124 EQU   SRUTYPE
SRUPSAC  EQU   SRUTYPE
SRUSPAC  EQU   SRUTYPE
SRUQSREQ EQU   ISTSRU
SENRU    EQU   ISTSENRU+4
SRUSNS4  EQU   SRUSENS2+1
SRUSNS3  EQU   SRUSENS2
SRUSNST  EQU   SRUSENS1+1
SRUSNS1  EQU   SRUSENS1
IOBSKSS  EQU   IOBSKADR+3
IOBSK0   EQU   IOBSKADR+2
IOBSKTT  EQU   IOBSKADR+1
IOBSKRV  EQU   IOBSKADR
IOBCSWSV EQU   IOBORG11+17
IOBSENSV EQU   IOBORG11+16
IOBRCD   EQU   IOBORG11+12
IOBMDREC EQU   IOBORG11+8
IOBNAMEA EQU   IOBNAME+1
IOBNAMSZ EQU   IOBNAME
IOBERCTA EQU   IOBERCT+1
IOBRTYPE EQU   IOBUCBXV
IOBRDCHP EQU   IOBORG10+20
IOBNEXTA EQU   IOBORG10+16
IOBREADA EQU   IOBORG10+12
IOBBUFC  EQU   IOBORG10+8
IOBSK2R  EQU   IOBSEEK2+7
IOBSK2HH EQU   IOBSEEK2+5
IOBSK2CC EQU   IOBSEEK2+3
IOBSK2BB EQU   IOBSEEK2+1
IOBSK2M  EQU   IOBSEEK2
IOBCHNPR EQU   IOBORG09+40
IOBDNCRF EQU   IOBORG09+32
IOBRSV35 EQU   IOBORG09+24
IOBDQPTR EQU   IOBORG09+20
IOBRSV34 EQU   IOBORG09+18
IOBDBYTN EQU   IOBORG09+16
IOBDCPND EQU   IOBORG09+12
IOBSTAT2 EQU   IOBDSTAT+1
IOBSIORT EQU   IOBSTAT1
IOBADDVU EQU   IOBSTAT1
IOBBUFF  EQU   IOBSTAT1
IOBENQUE EQU   IOBSTAT1
IOBPASS2 EQU   IOBSTAT1
IOBSYNCH EQU   IOBSTAT1
IOBNEWVL EQU   IOBSTAT1
IOBABNRM EQU   IOBSTAT1
IOBRELEX EQU   IOBDTYP2
IOBADDTY EQU   IOBDTYP2
IOBTYPE  EQU   IOBDTYP2
IOBRQUST EQU   IOBDTYP2
IOBSUFFX EQU   IOBDTYP2
IOBSBLKL EQU   IOBDTYP2
IOBSKEY  EQU   IOBDTYP2
IOBRELBL EQU   IOBDTYPE
IOBRDEXC EQU   IOBDTYPE
IOBDYNBF EQU   IOBDTYPE
IOBACTAD EQU   IOBDTYPE
IOBFDBCK EQU   IOBDTYPE
IOBEXTSC EQU   IOBDTYPE
IOBOVFLO EQU   IOBDTYPE
IOBVERFY EQU   IOBDTYPE
IOBDPLB  EQU   IOBDPLAD+1
IOBDAYLI EQU   IOBDPLAD
IOBDIOBS EQU   IOBORG09+2
IOBDBYTR EQU   IOBORG09
IOBBCHAD EQU   IOBORG08+12
IOBFCHNB EQU   IOBFCHAD+1
IOBCOUNT EQU   IOBFCHAD
IOBASYN  EQU   IOBORG08+7
IOBAPP   EQU   IOBORG08+6
IOBRSV32 EQU   IOBUNSQR
IOBRSV31 EQU   IOBUNSQR
IOBRSV30 EQU   IOBUNSQR
IOBKNRWR EQU   IOBUNSQR
IOBKNWR  EQU   IOBUNSQR
IOBNTAV2 EQU   IOBUNSQR
IOBNTAV1 EQU   IOBUNSQR
IOBCPBSY EQU   IOBUNSQR
IOBCHNNL EQU   IOBINDCT
IOBRSV29 EQU   IOBINDCT
IOBRSV28 EQU   IOBINDCT
IOBRSV27 EQU   IOBINDCT
IOBKEYAD EQU   IOBINDCT
IOBOVPTR EQU   IOBINDCT
IOBUNSCH EQU   IOBINDCT
IOBDEQCP EQU   IOBINDCT
IOBCCWAD EQU   IOBORG08
W1OEXTEN EQU   W1IEXTEN
IOBCCW   EQU   IOBORG06+8
IOBNXTPB EQU   IOBNXTPT+1
IOBRSV26 EQU   IOBSTATA
IOBRSV25 EQU   IOBSTATA
IOBRSV24 EQU   IOBSTATA
IOBRSV23 EQU   IOBSTATA
IOBRSV22 EQU   IOBSTATA
IOBRSV21 EQU   IOBSTATA
IOBRSV20 EQU   IOBSTATA
IOBAVLFL EQU   IOBSTATA
IOBRSV37 EQU   IOBORG06+1
IOBUCBXG EQU   IOBORG06
IOBCPA   EQU   IOBORG05+32
IOBERINF EQU   IOBORG05+16
IOBERCCW EQU   IOBORG05+8
IOBSNDPT EQU   IOBORG05+7
IOBRCVPT EQU   IOBORG05+6
IOBWORK  EQU   IOBORG05+1
IOBUCBX  EQU   IOBORG05
IOBR     EQU   IOBSEEK+7
IOBHH2   EQU   IOBHH+1
IOBHH1   EQU   IOBHH
IOBCC2   EQU   IOBCC+1
IOBCC1   EQU   IOBCC
IOBBB2   EQU   IOBBB+1
IOBBB1   EQU   IOBBB
IOBM     EQU   IOBSEEK
IOBRSV46 EQU   IOBFL4
IOBRSV47 EQU   IOBFL4
IOBENT   EQU   IOBFL4
IOBEQP   EQU   IOBFL4
IOBBUS   EQU   IOBFL4
IOBDCK   EQU   IOBFL4
IOBREJ   EQU   IOBFL4
IOBOVR   EQU   IOBFL4
IOBCRILC EQU   IOBORG04+1
IOBCRDCC EQU   IOBORG04
IOBGQECB EQU   IOBORG03
IOBSWAP  EQU   IOBORG02+4
IOBDQADB EQU   IOBDQADA+1
IOBRSV13 EQU   IOBDEQIN
IOBRSV12 EQU   IOBDEQIN
IOBRSV11 EQU   IOBDEQIN
IOBRSV10 EQU   IOBDEQIN
IOBRSV09 EQU   IOBDEQIN
IOBRSV08 EQU   IOBDEQIN
IOBRSV07 EQU   IOBDEQIN
IOBDEQ   EQU   IOBDEQIN
IOBNECB  EQU   IOBORG01+4
IOBNIOBB EQU   IOBNIOBA+1
IOBFIRST EQU   IOBNFLG1
IOBUPERR EQU   IOBNFLG1
IOBSPAN  EQU   IOBNFLG1
IOBBKSPC EQU   IOBNFLG1
IOBUPDAT EQU   IOBNFLG1
IOBREAD  EQU   IOBNFLG1
IOBWRITE EQU   IOBNFLG1
IOBSEGMT EQU   IOBPRTOV
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
IOSPCIWA EQU   IOSPCISC+44
IOSPCIRS EQU   IOSPCISC+8
@NM00035 EQU   IOSPCISC+4
@NM00034 EQU   IOSPCISC
IOSWRNDR EQU   IOSWTOWA+4
IOSWTOPT EQU   IOSWTOWA+3
IOSWTOCP EQU   IOSWTOWA+2
IOSWTOCH EQU   IOSWTOWA
IOSATTWA EQU   IOSATTSC+40
@NM00033 EQU   IOSATTSC+24
IOSATTSN EQU   IOSATTSC
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRAPSS   EQU   ISTCRA+160
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00153 EQU   ISTAPCRR+137
@NM00152 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00151 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00150 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00149 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00148 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCRTRN  EQU   ISTAPCRR+28
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00147 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00146 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00145 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
ZCRMDATA EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00144 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00143 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
CVP1STAV EQU   CVPWK+8
CVPWKSIZ EQU   CVPWK+4
CVPNAV   EQU   CVPWK
@NM00135 EQU   CALLSAVE
@NM00134 EQU   AREASAVE
VYCRSV02 EQU   ISTVYCRR+128
VYCRSV04 EQU   ISTVYCRR+126
VYCRSV03 EQU   VYCCRT+11
CINCFE   EQU   VYCCRT+11
CINCE9   EQU   VYCCRT+11
CINCVO   EQU   VYCCRT+11
CINCR5   EQU   VYCCRT+11
CINCR3   EQU   VYCCRT+10
CINCE8   EQU   VYCCRT+10
CINCE7   EQU   VYCCRT+10
CINCE6   EQU   VYCCRT+10
CINCE5   EQU   VYCCRT+10
CINCE1   EQU   VYCCRT+10
CINCUQ   EQU   VYCCRT+10
CINCUB   EQU   VYCCRT+10
CINCUA   EQU   VYCCRT+9
CINCX9   EQU   VYCCRT+9
CINCX8   EQU   VYCCRT+9
CINCX7   EQU   VYCCRT+9
CINCX6   EQU   VYCCRT+9
CINCX3   EQU   VYCCRT+9
CINCX2   EQU   VYCCRT+9
CINCX1   EQU   VYCCRT+9
CINCX0   EQU   VYCCRT+8
CINCW9   EQU   VYCCRT+8
CINCW8   EQU   VYCCRT+8
CINCW7   EQU   VYCCRT+8
CINCW6   EQU   VYCCRT+8
CINCW5   EQU   VYCCRT+8
CINCW4   EQU   VYCCRT+8
CINCW2   EQU   VYCCRT+8
CINCW0   EQU   VYCCRT+7
CINCV9   EQU   VYCCRT+7
CINCV8   EQU   VYCCRT+7
CINCV7   EQU   VYCCRT+7
CINCV6   EQU   VYCCRT+7
CINCV5   EQU   VYCCRT+7
CINCV4   EQU   VYCCRT+7
CINCV3   EQU   VYCCRT+7
CINCV2   EQU   VYCCRT+6
CINCU8   EQU   VYCCRT+6
CINCU7   EQU   VYCCRT+6
CINCU6   EQU   VYCCRT+6
CINCU5   EQU   VYCCRT+6
CINCU4   EQU   VYCCRT+6
CINCU3   EQU   VYCCRT+6
CINCU2   EQU   VYCCRT+6
CINCU1   EQU   VYCCRT+5
CINCU0   EQU   VYCCRT+5
CINCUM   EQU   VYCCRT+5
CINCS1   EQU   VYCCRT+5
CINCL8   EQU   VYCCRT+5
CINCL7   EQU   VYCCRT+5
CINCL6   EQU   VYCCRT+5
CINCL5   EQU   VYCCRT+5
CINCL4   EQU   VYCCRT+4
CINCL3   EQU   VYCCRT+4
CINCL2   EQU   VYCCRT+4
CINCL1   EQU   VYCCRT+4
CINCL0   EQU   VYCCRT+4
CINCF4   EQU   VYCCRT+4
CINCF3   EQU   VYCCRT+4
CINCF1   EQU   VYCCRT+4
CINCFM   EQU   VYCCRT+3
CINCE4   EQU   VYCCRT+3
CINCE3   EQU   VYCCRT+3
CINCE2   EQU   VYCCRT+3
CINCE0   EQU   VYCCRT+3
CINCD9   EQU   VYCCRT+3
CINCD8   EQU   VYCCRT+3
CINCD7   EQU   VYCCRT+3
CINCD6   EQU   VYCCRT+2
CINCD5   EQU   VYCCRT+2
CINCD4   EQU   VYCCRT+2
CINCD3   EQU   VYCCRT+2
CINCD2   EQU   VYCCRT+2
CINCD1   EQU   VYCCRT+2
CINCIP   EQU   VYCCRT+2
CINCR2   EQU   VYCCRT+2
CINCMS   EQU   VYCCRT+1
CINCVN   EQU   VYCCRT+1
CINCVS   EQU   VYCCRT+1
CINCVX   EQU   VYCCRT+1
CINCFS   EQU   VYCCRT+1
CINCSM   EQU   VYCCRT+1
CINCR1   EQU   VYCCRT+1
CINCLF   EQU   VYCCRT
CINCVA   EQU   VYCCRT
CINCVI   EQU   VYCCRT
CINCMD   EQU   VYCCRT
CINCMY   EQU   VYCCRT
CINCDL   EQU   VYCCRT
CINCIO   EQU   VYCCRT
CINCCL   EQU   VYCCRT
VYCRSV01 EQU   VYCNTRD+11
NINCFE   EQU   VYCNTRD+11
NINCE9   EQU   VYCNTRD+11
NINCVO   EQU   VYCNTRD+11
NINCR5   EQU   VYCNTRD+11
NINCR3   EQU   VYCNTRD+10
NINCE8   EQU   VYCNTRD+10
NINCE7   EQU   VYCNTRD+10
NINCE6   EQU   VYCNTRD+10
NINCE5   EQU   VYCNTRD+10
NINCE1   EQU   VYCNTRD+10
NINCUQ   EQU   VYCNTRD+10
NINCUB   EQU   VYCNTRD+10
NINCUA   EQU   VYCNTRD+9
NINCX9   EQU   VYCNTRD+9
NINCX8   EQU   VYCNTRD+9
NINCX7   EQU   VYCNTRD+9
NINCX6   EQU   VYCNTRD+9
NINCX3   EQU   VYCNTRD+9
NINCX2   EQU   VYCNTRD+9
NINCX1   EQU   VYCNTRD+9
NINCX0   EQU   VYCNTRD+8
NINCW9   EQU   VYCNTRD+8
NINCW8   EQU   VYCNTRD+8
NINCW7   EQU   VYCNTRD+8
NINCW6   EQU   VYCNTRD+8
NINCW5   EQU   VYCNTRD+8
NINCW4   EQU   VYCNTRD+8
NINCW2   EQU   VYCNTRD+8
NINCW0   EQU   VYCNTRD+7
NINCV9   EQU   VYCNTRD+7
NINCV8   EQU   VYCNTRD+7
NINCV7   EQU   VYCNTRD+7
NINCV6   EQU   VYCNTRD+7
NINCV5   EQU   VYCNTRD+7
NINCV4   EQU   VYCNTRD+7
NINCV3   EQU   VYCNTRD+7
NINCV2   EQU   VYCNTRD+6
NINCU8   EQU   VYCNTRD+6
NINCU7   EQU   VYCNTRD+6
NINCU6   EQU   VYCNTRD+6
NINCU5   EQU   VYCNTRD+6
NINCU4   EQU   VYCNTRD+6
NINCU3   EQU   VYCNTRD+6
NINCU2   EQU   VYCNTRD+6
NINCU1   EQU   VYCNTRD+5
NINCU0   EQU   VYCNTRD+5
NINCUM   EQU   VYCNTRD+5
NINCS1   EQU   VYCNTRD+5
NINCL8   EQU   VYCNTRD+5
NINCL7   EQU   VYCNTRD+5
NINCL6   EQU   VYCNTRD+5
NINCL5   EQU   VYCNTRD+5
NINCL4   EQU   VYCNTRD+4
NINCL3   EQU   VYCNTRD+4
NINCL2   EQU   VYCNTRD+4
NINCL1   EQU   VYCNTRD+4
NINCL0   EQU   VYCNTRD+4
NINCF4   EQU   VYCNTRD+4
NINCF3   EQU   VYCNTRD+4
NINCF1   EQU   VYCNTRD+4
NINCFM   EQU   VYCNTRD+3
NINCE4   EQU   VYCNTRD+3
NINCE3   EQU   VYCNTRD+3
NINCE2   EQU   VYCNTRD+3
NINCE0   EQU   VYCNTRD+3
NINCD9   EQU   VYCNTRD+3
NINCD8   EQU   VYCNTRD+3
NINCD7   EQU   VYCNTRD+3
NINCD6   EQU   VYCNTRD+2
NINCD5   EQU   VYCNTRD+2
NINCD4   EQU   VYCNTRD+2
NINCD3   EQU   VYCNTRD+2
NINCD2   EQU   VYCNTRD+2
NINCD1   EQU   VYCNTRD+2
NINCIP   EQU   VYCNTRD+2
NINCR2   EQU   VYCNTRD+2
NINCMS   EQU   VYCNTRD+1
NINCVN   EQU   VYCNTRD+1
NINCVS   EQU   VYCNTRD+1
NINCVX   EQU   VYCNTRD+1
NINCFS   EQU   VYCNTRD+1
NINCSM   EQU   VYCNTRD+1
NINCR1   EQU   VYCNTRD+1
NINCLF   EQU   VYCNTRD
NINCVA   EQU   VYCNTRD
NINCVI   EQU   VYCNTRD
NINCMD   EQU   VYCNTRD
NINCMY   EQU   VYCNTRD
NINCDL   EQU   VYCNTRD
NINCIO   EQU   VYCNTRD
NINCCL   EQU   VYCNTRD
VYCCNS   EQU   ISTVYCRR
CNSRSV05 EQU   CNSTFLDB+2
CNSLOG0B EQU   CNSTFLDB+2
CNSACCTB EQU   CNSTFLDB+2
CNSFREEB EQU   CNSTFLDB+2
CNSGETSB EQU   CNSTFLDB+2
CNSSEARB EQU   CNSTFLDB+2
CNSQUEUB EQU   CNSTFLDB+2
CNSACONB EQU   CNSTFLDB+2
CNSTCONB EQU   CNSTFLDB+1
CNSCLAQB EQU   CNSTFLDB+1
CNSCLINB EQU   CNSTFLDB+1
CNSGBINB EQU   CNSTFLDB+1
CNSLGINB EQU   CNSTFLDB+1
CNSACINB EQU   CNSTFLDB+1
CNSPSINB EQU   CNSTFLDB+1
CNSRQRLB EQU   CNSTFLDB+1
CNSTRRLB EQU   CNSTFLDB
CNSDORLB EQU   CNSTFLDB
CNSRLINB EQU   CNSTFLDB
CNSQREQB EQU   CNSTFLDB
CNSXREQB EQU   CNSTFLDB
CNSAQINB EQU   CNSTFLDB
CNSAUTHB EQU   CNSTFLDB
CNSMRINB EQU   CNSTFLDB
CNSRSV01 EQU   CNSTFLDA+2
CNSLOG0A EQU   CNSTFLDA+2
CNSACCTA EQU   CNSTFLDA+2
CNSFREEA EQU   CNSTFLDA+2
CNSGETSA EQU   CNSTFLDA+2
CNSSEARA EQU   CNSTFLDA+2
CNSQUEUA EQU   CNSTFLDA+2
CNSACONA EQU   CNSTFLDA+2
CNSTCONA EQU   CNSTFLDA+1
CNSCLAQA EQU   CNSTFLDA+1
CNSCLINA EQU   CNSTFLDA+1
CNSGBINA EQU   CNSTFLDA+1
CNSLGINA EQU   CNSTFLDA+1
CNSACINA EQU   CNSTFLDA+1
CNSPSINA EQU   CNSTFLDA+1
CNSRQRLA EQU   CNSTFLDA+1
CNSTRRLA EQU   CNSTFLDA
CNSDORLA EQU   CNSTFLDA
CNSRLINA EQU   CNSTFLDA
CNSQREQA EQU   CNSTFLDA
CNSXREQA EQU   CNSTFLDA
CNSAQINA EQU   CNSTFLDA
CNSAUTHA EQU   CNSTFLDA
CNSMRINA EQU   CNSTFLDA
CNSTPFX  EQU   ISTCNSTA
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
@NM00133 EQU   GTNCSFLG
GTNCSAPP EQU   GTNCSFLG
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00132 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
LDNZS00F EQU   LDNZH003+1
LDNZS00E EQU   LDNZH003+1
LDNZS00D EQU   LDNZH003+1
LDNZS00C EQU   LDNZH003+1
LDNZS00B EQU   LDNZH003+1
LDNZS007 EQU   LDNZH003
LDNZS006 EQU   LDNZH003
LDNZS005 EQU   LDNZH003
LDNZS004 EQU   LDNZH003
LDNZS003 EQU   LDNZH003
LDNZS002 EQU   LDNZH003
LDNZS001 EQU   LDNZH003
LDNZS000 EQU   LDNZH003
LDNZX006 EQU   ISTLDNCB+576
LDNZC001 EQU   ISTLDNCB+569
LDNZX005 EQU   ISTLDNCB+568
LDNZV006 EQU   ISTLDNCB+564
LDNSRB   EQU   ISTLDNCB+520
LDNIOSB  EQU   ISTLDNCB+412
@NM00131 EQU   LDNZSAV3+28
LDNRSV06 EQU   LDNZSAV4+16
LDNZSAV6 EQU   LDNZSAV4+12
LDNZSAV5 EQU   LDNZSAV4
LDNZSAVE EQU   LDNZSAV3
LDNZSAV2 EQU   ISTLDNCB+368
LDNZSAV1 EQU   ISTLDNCB+352
LDNZ3RR  EQU   ISTLDNCB+348
LDNZ2RR  EQU   ISTLDNCB+344
LDNZ1RR  EQU   ISTLDNCB+340
LDNRSV0B EQU   ISTLDNCB+336
LDNRSV0A EQU   ISTLDNCB+332
LDNRSV09 EQU   ISTLDNCB+328
LDNRSV08 EQU   ISTLDNCB+324
LDNRSV07 EQU   ISTLDNCB+320
LDNDEAD  EQU   LDNDCDEB+12
LDNUCBAD EQU   LDNDCDEB+8
LDNAPPAD EQU   LDNDCDEB+5
LDNEXSCL EQU   LDNDCDEB+4
LDNDCBAD EQU   LDNDCDEB+1
LDNDEBID EQU   LDNDCDEB
LDNZRIND EQU   ISTLDNCB+300
LDNRPH   EQU   ISTLDNCB+192
LDNZTCP  EQU   ISTLDNCB+188
LDNZCHNC EQU   ISTLDNCB+187
LDNZLPC7 EQU   LDNZLPC
LDNZLPC6 EQU   LDNZLPC
LDNZLPC5 EQU   LDNZLPC
LDNZLPC4 EQU   LDNZLPC
LDNZLPC3 EQU   LDNZLPC
LDNZLPC2 EQU   LDNZLPC
LDNZLPC1 EQU   LDNZLPC
LDNZLPC0 EQU   LDNZLPC
LDNRSV05 EQU   LDNZERPF
LDNZCTOV EQU   LDNZEPIN
LDNZF001 EQU   LDNZEPIN
LDNZFRDW EQU   LDNZCPAN
LDNZFRD  EQU   LDNZCPAN
LDNZNARD EQU   LDNZCPAN
LDNRSV04 EQU   LDNZIOLK
LDNZATBF EQU   LDNZIOLK
LDNZERLK EQU   LDNZIOLK
LDNZDSIC EQU   LDNZIOLK
LDNZV005 EQU   ISTLDNCB+160
LDNZS1VR EQU   ISTLDNCB+136
LDNZS1RR EQU   ISTLDNCB+132
LDNZS1FC EQU   ISTLDNCB+128
LDNZS1BC EQU   ISTLDNCB+124
LDNZLOCK EQU   ISTLDNCB+120
LDNZFBUF EQU   ISTLDNCB+116
LDNZLAST EQU   ISTLDNCB+112
LDNRSV02 EQU   LDNFLAG2
LDNZFF04 EQU   LDNFLAG2
LDNTPBIO EQU   LDNFLAGS+2
LDNZFF03 EQU   LDNFLAGS+2
LDNZFF02 EQU   LDNFLAGS+2
LDNZFF01 EQU   LDNFLAGS+2
LDNZFF00 EQU   LDNFLAGS+2
LDNZENTR EQU   LDNFLAGS+2
LDNZICCW EQU   LDNFLAGS+1
LDNZREC  EQU   LDNFLAGS+1
LDNZCTXT EQU   LDNFLAGS+1
LDNZATLK EQU   LDNFLAGS+1
LDNZCHNE EQU   LDNFLAGS+1
LDNZATTP EQU   LDNFLAGS+1
LDNZIOBY EQU   LDNFLAGS+1
LDNZF00A EQU   LDNFLAGS+1
LDNZF009 EQU   LDNFLAGS
LDNZF008 EQU   LDNFLAGS
LDNZF007 EQU   LDNFLAGS
LDNZF006 EQU   LDNFLAGS
LDNZF005 EQU   LDNFLAGS
LDNZF004 EQU   LDNFLAGS
LDNZF003 EQU   LDNFLAGS
LDNZF002 EQU   LDNFLAGS
LDNZHDCC EQU   ISTLDNCB+106
LDNZARM  EQU   ISTLDNCB+104
LDNZRM   EQU   ISTLDNCB+102
LDNZRB   EQU   ISTLDNCB+100
LDNCPQ   EQU   ISTLDNCB+96
LDNSIOQ  EQU   ISTLDNCB+92
LDNZX002 EQU   ISTLDNCB+91
LDNZX001 EQU   ISTLDNCB+90
LDNZH002 EQU   ISTLDNCB+88
LDNZV001 EQU   ISTLDNCB+84
LDNZACSW EQU   ISTLDNCB+76
LDNZC002 EQU   ISTLDNCB+68
LDNCSWSV EQU   ISTLDNCB+60
LDNCHFLD EQU   ISTLDNCB+56
LDNRESRV EQU   ISTLDNCB+55
@NM00130 EQU   LDNCFLAG
LDNRMF   EQU   LDNCFLAG
LDNIBI   EQU   LDNCFLAG
LDNTSAF  EQU   ISTLDNCB+52
LDNCUUA  EQU   ISTLDNCB+48
LDNCB    EQU   ISTLDNCB
NSRUNA6  EQU   NSRUNA5
RUBDATA  EQU   ISTRUB
RHRSVD5  EQU   RH3
RHRSVD4  EQU   RH3
RHLOG    EQU   RH3
RHRSVD3  EQU   RH3
RHRCDIR  EQU   RH3
RHCDIR   EQU   RH3
RHEB     EQU   RH3
RHBB     EQU   RH3
RHPACE   EQU   RH2
RHRSVD2  EQU   RH2
RHINOP   EQU   RHRSVD1
RHBUSY   EQU   RHRETRY
RHEXCEPT EQU   RH2
RHRRN    EQU   RH2
RHPE     EQU   RH2
RHFME    EQU   RH2
RHCHAIN  EQU   RH1
RHSENSE  EQU   RH1
RHFORMAT EQU   RH1
RHDIRI   EQU   RH1
RHSCI    EQU   RH1
RHTYPE   EQU   RH1
RHQS     EQU   RH1
ICNZCON6 EQU   ICNZCONS+10
ICNZCON5 EQU   ICNZCONS+8
ICNZCON4 EQU   ICNZCONS+6
ICNZCON3 EQU   ICNZCONS+4
ICNZCON2 EQU   ICNZCONS+2
ICNZCON1 EQU   ICNZCONS
ICNZATSA EQU   ISTICNCB+676
ICNZX012 EQU   ISTICNCB+675
ICNZX011 EQU   ISTICNCB+674
ICNZX010 EQU   ISTICNCB+672
ICNSRB   EQU   ISTICNCB+628
ICNIOSB  EQU   ISTICNCB+520
ICNZC001 EQU   ISTICNCB+512
ICNZX013 EQU   ISTICNCB+511
ICNZS010 EQU   ICNZH002+1
ICNZS00F EQU   ICNZH002+1
ICNZS00E EQU   ICNZH002+1
ICNZS00D EQU   ICNZH002+1
ICNZS00C EQU   ICNZH002+1
ICNZS00B EQU   ICNZH002+1
ICNZS01A EQU   ICNZS00A
ICNZS019 EQU   ICNZS009
ICNZS018 EQU   ICNZS008
ICNZS017 EQU   ICNZS007
ICNZS016 EQU   ICNZS006
ICNZS005 EQU   ICNZH002
ICNZS014 EQU   ICNZS004
ICNZS013 EQU   ICNZS003
ICNZS012 EQU   ICNZS002
ICNZS001 EQU   ICNZH002
ICNZF028 EQU   ICNZFLAG
ICNZF027 EQU   ICNZFLAG
ICNZF026 EQU   ICNZFLAG
ICNZF025 EQU   ICNZFLAG
ICNZF024 EQU   ICNZFLAG
ICNZF023 EQU   ICNZFLAG
ICNZF022 EQU   ICNZFLAG
ICNZF021 EQU   ICNZFLAG
ICNWORD5 EQU   ISTICNCB+504
ICNMSIZE EQU   ISTICNCB+500
ICNLCVTA EQU   ISTICNCB+496
ICNDEBAD EQU   ICNDIDEB+1
ICNDCBIF EQU   ICNDIDEB
ICNUCBAD EQU   ICNDCDEB+8
ICNAPPAD EQU   ICNDCDEB+5
ICNEXSCL EQU   ICNDCDEB+4
ICNDCBAD EQU   ICNDCDEB+1
ICNDEBID EQU   ICNDCDEB
@NM00123 EQU   ISTICNCB+477
ICNERCNT EQU   ISTICNCB+476
ICNZX002 EQU   ISTICNCB+475
ICNZX001 EQU   ISTICNCB+474
ICNZH001 EQU   ISTICNCB+472
ICNZSW3R EQU   ISTICNCB+468
ICNZSW2R EQU   ISTICNCB+464
ICNZSW1R EQU   ISTICNCB+460
ICNZS4VR EQU   ISTICNCB+436
ICNZS4RR EQU   ISTICNCB+432
ICNZS4FC EQU   ISTICNCB+428
ICNZS4BC EQU   ISTICNCB+424
ICNZS3VR EQU   ISTICNCB+400
ICNZS3RR EQU   ISTICNCB+396
ICNZS3FC EQU   ISTICNCB+392
ICNZS3BC EQU   ISTICNCB+388
ICNZS1RC EQU   ICNZS1VR+36
ICNDIEW3 EQU   ICNDIEWA+8
ICNDIEW2 EQU   ICNDIEWA+4
ICNDIEW1 EQU   ICNDIEWA
ICNZS1RR EQU   ISTICNCB+344
ICNZS1FC EQU   ISTICNCB+340
ICNZS1BC EQU   ISTICNCB+336
ICNRSTIC EQU   ICNZD004
ICNRDCOD EQU   ICNRSCCW
ICNZD006 EQU   ISTICNCB+312
ICNZD005 EQU   ISTICNCB+304
ICNWSTIC EQU   ICNZD002
ICNWRCOD EQU   ICNWSCCW
ICNZV008 EQU   ISTICNCB+284
ICNZV007 EQU   ISTICNCB+280
ICNZV006 EQU   ISTICNCB+276
ICNZV005 EQU   ISTICNCB+272
ICNZV004 EQU   ISTICNCB+268
ICNLSTIT EQU   ISTICNCB+264
ICNLSTIF EQU   ISTICNCB+260
ICNZV002 EQU   ISTICNCB+256
ICNZV001 EQU   ISTICNCB+252
ICNZV00A EQU   ISTICNCB+249
ICNBUFF  EQU   ISTICNCB+248
ICNCPQ   EQU   ISTICNCB+244
ICNNICNA EQU   ISTICNCB+240
@NM00122 EQU   ICNFLAG2+2
ICNZF019 EQU   ICNFLAG2+2
ICNZF018 EQU   ICNFLAG2+2
ICNZF017 EQU   ICNFLAG2+2
ICNZF016 EQU   ICNFLAG2+2
ICNZF015 EQU   ICNFLAG2+2
ICNMSG   EQU   ICNFLAG2+1
ICNZF014 EQU   ICNFLAG2+1
ICNZF013 EQU   ICNFLAG2+1
ICNZF012 EQU   ICNFLAG2+1
ICNZF011 EQU   ICNFLAG2+1
ICNZF00D EQU   ICNFLAG2+1
ICNZF00B EQU   ICNFLAG2+1
ICNZF00A EQU   ICNFLAG2
ICNZF008 EQU   ICNFLAG2
ICNZF007 EQU   ICNFLAG2
ICNZF005 EQU   ICNFLAG2
ICNZF004 EQU   ICNFLAG2
ICNZF003 EQU   ICNFLAG2
ICNZF002 EQU   ICNFLAG2
ICNZF001 EQU   ICNFLAG2
ICNLOCK  EQU   ISTICNCB+232
ICNLICNA EQU   ISTICNCB+228
ICNRPH   EQU   ISTICNCB+120
ICNZV003 EQU   ISTICNCB+116
ICNLAST  EQU   ISTICNCB+112
ICNLSTBT EQU   ISTICNCB+108
ICNSIOQ  EQU   ISTICNCB+104
ICNFLAG1 EQU   ISTICNCB+103
ICNZSW08 EQU   ICNZSWS
ICNZSW07 EQU   ICNZSWS
ICNZSW06 EQU   ICNZSWS
ICNZSW05 EQU   ICNZSWS
ICNZSW04 EQU   ICNZSWS
ICNZSW03 EQU   ICNZSWS
ICNZSW02 EQU   ICNZSWS
ICNZSW01 EQU   ICNZSWS
@NM00121 EQU   ICNFFLAG
ICNZFF05 EQU   ICNFFLAG
ICNZFF04 EQU   ICNFFLAG
ICNZFF03 EQU   ICNFFLAG
ICNZFF02 EQU   ICNFFLAG
ICNZFF01 EQU   ICNFFLAG
ICNZFF00 EQU   ICNFFLAG
@NM00120 EQU   ICNFLAG
ICNZCRIT EQU   ICNFLAG
ICNSTART EQU   ICNFLAG
ICNSLOW  EQU   ICNFLAG
ICNZF010 EQU   ICNFLAG
ICNZF00F EQU   ICNFLAG
ICNZF00E EQU   ICNFLAG
ICNCONF  EQU   ICNZF006
ICNCKPAB EQU   ICNCKFLD+1
ICNRSV07 EQU   ICNCKFLD
ICNCKBIT EQU   ICNCKFLD
ICNZPAB1 EQU   ISTICNCB+64
ICNRSV01 EQU   ISTICNCB+60
@NM00119 EQU   ISTICNCB+56
@NM00118 EQU   ISTICNCB+54
@NM00117 EQU   @NM00116
ICNRRY   EQU   @NM00116
ICNLCLUS EQU   @NM00116
ICNROLN  EQU   @NM00116
ICNRNRY  EQU   @NM00116
ICNLNKMD EQU   ISTICNCB+52
ICNCUUA  EQU   ISTICNCB+48
ICNCB    EQU   ISTICNCB
NCBRSV01 EQU   ISTNCB+46
NCBSWDAF EQU   ISTNCB+44
NCBDEVCH EQU   ISTNCB+36
NCBFMCBP EQU   ISTNCB+32
NCBLTRC  EQU   ISTNCB+30
NCBRVPT1 EQU   ISTNCB+28
NCBNMLLN EQU   NCBFLAGS+3
@NM00115 EQU   NCBFLAG1
NCBFORCE EQU   NCBFLAG1
NCBTTF   EQU   NCBFLAG1
NCBRSYNC EQU   NCBFLAG1
NCBRSTRT EQU   NCBFLAG1
NCBCONF  EQU   NCBFLAG1
NCBSNAI  EQU   NCBFLAG1
NCBFLTIO EQU   NCBFTRIO
NCBCSTAT EQU   NCBFLAGS
NCBNCSL  EQU   ISTNCB+22
NCBNCBA  EQU   ISTNCB+20
NCBFMCBA EQU   ISTNCB+16
NCBNSNA  EQU   ISTNCB+12
NCBTSKID EQU   ISTNCB+8
NCBRDTE  EQU   ISTNCB+4
NCBDAF   EQU   ISTNCB+2
NCBLNGTH EQU   ISTNCB+1
CONUESBF EQU   ISTCONFT+1362
CONSTVAR EQU   CONSTAID+1
CONSTFIL EQU   CONSTAID
CONBLKNO EQU   CONSCPID+2
CONFILL  EQU   CONSCPID+1
CONFCNL  EQU   CONSCPID
CONF01SV EQU   ISTCONFT+1352
CONSDMLC EQU   ISTCONFT+1348
CONSDECB EQU   ISTCONFT+1344
CONUNITS EQU   ISTCONFT+1342
CONRVPT1 EQU   ISTCONFT+1341
CONGLBBH EQU   ISTCONFT+1340
CONRSV24 EQU   ISTCONFT+1312
CONFTTAT EQU   ISTCONFT+1284
CONFXXAT EQU   ISTCONFT+1256
CONFLDAT EQU   ISTCONFT+1228
CONFTRAT EQU   ISTCONFT+1200
CONFNSAT EQU   ISTCONFT+1172
CONCSCB  EQU   ISTCONFT+1168
CONRSV50 EQU   ISTCONFT+1166
CONLIST  EQU   ISTCONFT+1164
CONSTAFP EQU   ISTCONFT+1160
CONECDET EQU   ISTCONFT+1156
CONRECON EQU   ISTCONFT+1036
CONNTSOL EQU   ISTCONFT+916
CONTRACE EQU   ISTCONFT+796
CONTOLTP EQU   ISTCONFT+676
CONVVTAM EQU   ISTCONFT+556
CONVTHDR EQU   ISTCONFT+420
CONRSV01 EQU   ISTCONFT+417
CONNSNEC EQU   CONFLG01
CONFTPSA EQU   CONFLG01
CONFTTA  EQU   CONFLG01
CONFTNSA EQU   CONFLG01
CONFTNAC EQU   CONFLG01
CONFTEXS EQU   CONFLG01
CONFTTMR EQU   CONFLG01
CONFTSTM EQU   CONFLG01
CONCRPLD EQU   ISTCONFT+404
CONPPDBF EQU   ISTCONFT+392
CONNPDBF EQU   ISTCONFT+380
CONAPDBF EQU   ISTCONFT+368
CONWPDBF EQU   ISTCONFT+356
CONIODBF EQU   ISTCONFT+344
CONUEDBF EQU   ISTCONFT+332
CONVPDBF EQU   ISTCONFT+320
CONVFDBF EQU   ISTCONFT+308
CONLPDBF EQU   ISTCONFT+296
CONLFDBF EQU   ISTCONFT+284
CONSPDBF EQU   ISTCONFT+272
CONSFDBF EQU   ISTCONFT+260
CONCRPLS EQU   ISTCONFT+248
CONPPSBF EQU   ISTCONFT+236
CONNPSBF EQU   ISTCONFT+224
CONAPSBF EQU   ISTCONFT+212
CONWPSBF EQU   ISTCONFT+200
CONIOSBF EQU   ISTCONFT+188
CONVPSBF EQU   ISTCONFT+176
CONVFSBF EQU   ISTCONFT+164
CONLPSBF EQU   ISTCONFT+152
CONLFSBF EQU   ISTCONFT+140
CONSPSBF EQU   ISTCONFT+128
CONSFSBF EQU   ISTCONFT+116
CONRSV17 EQU   ISTCONFT+115
CONCRPL  EQU   CONBUFF+1
CONPPEX  EQU   CONBUFF+1
CONNPEX  EQU   CONBUFF+1
CONAPEX  EQU   CONBUFF+1
CONWPEX  EQU   CONBUFF+1
CONIOEX  EQU   CONBUFF
CONUECB  EQU   CONBUFF
CONVPEX  EQU   CONBUFF
CONVFEX  EQU   CONBUFF
CONLPEX  EQU   CONBUFF
CONLFEX  EQU   CONBUFF
CONSPEX  EQU   CONBUFF
CONSFEX  EQU   CONBUFF
CONACTV  EQU   CONSTAT
CONVRYIN EQU   CONSTAT
CONLODED EQU   CONSTAT
CONDSOPN EQU   CONSTAT
CONSTOR  EQU   CONSTAT
@NM00114 EQU   CONSTAT
@NM00113 EQU   CONSTAT
@NM00112 EQU   CONSTAT
CONIOTR  EQU   CONOPTFL
CONMODTR EQU   CONOPTFL
CONBTUTR EQU   CONOPTFL
CONBUFTR EQU   CONOPTFL
@NM00111 EQU   CONOPTFL
@NM00110 EQU   CONOPTFL
@NM00109 EQU   CONOPTFL
CONWRMST EQU   CONOPTFL
CONSYLST EQU   CONDSFLG
CONSYLIB EQU   CONDSFLG
CONSYOBJ EQU   CONDSFLG
@NM00108 EQU   CONDSFLG
@NM00107 EQU   CONDSFLG
@NM00106 EQU   CONDSFLG
CONMODFY EQU   ISTCONFT+109
CONDISPL EQU   ISTCONFT+108
CONVARY  EQU   ISTCONFT+107
CONHLTS  EQU   CONHALT
CONHLTQ  EQU   CONHALT
CONLAST  EQU   ISTCONFT+105
CONRES2  EQU   ISTCONFT+104
CONCID   EQU   ISTCONFT+102
CONBUFSZ EQU   ISTCONFT+100
CONRSV02 EQU   ISTCONFT+96
CONDCBBA EQU   ISTCONFT+92
CONDCBLA EQU   ISTCONFT+88
CONDCBOA EQU   ISTCONFT+84
CONLDPRM EQU   ISTCONFT+80
CONRDBUF EQU   ISTCONFT+76
CONSTCIB EQU   ISTCONFT+72
CONENDLA EQU   ISTCONFT+68
CONVARLA EQU   ISTCONFT+64
CONMODLA EQU   ISTCONFT+60
CONHLTLA EQU   ISTCONFT+56
CONNCSLA EQU   ISTCONFT+52
CONDISLA EQU   ISTCONFT+48
CONCIBAD EQU   ISTCONFT+44
CONACB   EQU   ISTCONFT+40
CONFBPNM EQU   ISTCONFT+32
CONDMNM  EQU   ISTCONFT+24
CONAPSNM EQU   ISTCONFT+16
CONAPINM EQU   ISTCONFT+8
CONCONFG EQU   ISTCONFT
LDPTCEP  EQU   ISTLDPRM+24
LDPRSV02 EQU   ISTLDPRM+22
LDPRSV01 EQU   LDPFB2
LDPACTIF EQU   LDPFB2
LDPATACH EQU   LDPFB2
LDPFLAST EQU   LDPFB2
LDPRSV03 EQU   LDPFG
LDPPB    EQU   LDPFG
LDPFX    EQU   LDPFG
LDPDCBA  EQU   ISTLDPRM+16
LDPPDS   EQU   ISTLDPRM+8
LDPMBR   EQU   ISTLDPRM
NIBRESV  EQU   ISTNIB+60
NIBNDAR  EQU   ISTNIB+56
NIBLMODE EQU   ISTNIB+48
NIBEXLST EQU   ISTNIB+44
NIBLIMIT EQU   ISTNIB+42
@NM00105 EQU   ISTNIB+41
@NM00104 EQU   NIBFLG1
@NM00103 EQU   NIBFLG1
@NM00102 EQU   NIBFLG1
@NM00101 EQU   NIBFLG1
NIBSHLTP EQU   NIBFLG1
NIBSDAPP EQU   NIBFLG1
NIBCON   EQU   NIBFLG1
NIBLAST  EQU   NIBFLG1
NIBPROCD EQU   ISTNIB+36
NIBDEVCH EQU   ISTNIB+28
NIBMODE  EQU   ISTNIB+20
NIBSYM   EQU   ISTNIB+12
NIBUSER  EQU   ISTNIB+8
NIBCID   EQU   ISTNIB+4
NIBLEN   EQU   ISTNIB+3
NIBCONDN EQU   ISTNIB+2
NIBRSV01 EQU   ISTNIB+1
NIBID    EQU   ISTNIB
FMCFLRSV EQU   FMCFLGB
FMCFLGA8 EQU   FMCFLGB
FMCCLRPH EQU   FMCVS1+45
FMCRSV0X EQU   FMCCVFLG
FMCVYRPH EQU   FMCCVFLG
FMCZV004 EQU   FMCVS1+40
FMCLOCK2 EQU   FMCVS1+36
@NM00100 EQU   FMCZFLG2
FMCZF027 EQU   FMCZFLG2
FMCZF026 EQU   FMCZFLG2
FMCSEQ1B EQU   FMCSEQ1
FMCSEQ1T EQU   FMCSEQ1
FMCZX006 EQU   FMCVS1+33
FMCZX005 EQU   FMCVS1+32
FMCZX004 EQU   FMCVS1+31
FMCZX003 EQU   FMCVS1+30
FMCZX002 EQU   FMCVS1+29
FMCZX001 EQU   FMCVS1+28
FMCZV001 EQU   FMCVS1+24
FMCAWATQ EQU   FMCLCPAQ+1
@NM00099 EQU   FMCLCPAQ
FMCLCPB2 EQU   FMCLCPBQ+1
FMCLCPB1 EQU   FMCLCPBQ
FMCASCDQ EQU   FMCSHEAQ+1
@NM00098 EQU   FMCSHEAQ
FMCSHEDQ EQU   FMCVS1+8
FMCZFCSQ EQU   FMCVS1+6
FMCZH001 EQU   FMCVS1+4
FMCZF025 EQU   FMCZFLAG+3
FMCZF024 EQU   FMCZFLAG+3
FMCZF023 EQU   FMCZFLAG+3
FMCZF022 EQU   FMCZFLAG+3
FMCZF021 EQU   FMCZFLAG+3
FMCZF020 EQU   FMCZFLAG+3
FMCZF019 EQU   FMCZFLAG+3
FMCZF018 EQU   FMCZFLAG+3
FMCZF017 EQU   FMCZFLAG+2
FMCZF016 EQU   FMCZFLAG+2
FMCZF015 EQU   FMCZFLAG+2
FMCZF014 EQU   FMCZFLAG+2
FMCZF013 EQU   FMCZFLAG+2
FMCZF012 EQU   FMCZFLAG+2
FMCZF011 EQU   FMCZFLAG+2
FMCZF010 EQU   FMCZFLAG+2
FMCZF00F EQU   FMCZFLAG+1
FMCZF00E EQU   FMCZFLAG+1
FMCZF00D EQU   FMCZFLAG+1
FMCZF00C EQU   FMCZFLAG+1
FMCZF00B EQU   FMCZFLAG+1
FMCRSV10 EQU   FMCZFLAG+1
FMCZF009 EQU   FMCZFLAG+1
FMCZFD06 EQU   FMCZF006+1
FMCZFC06 EQU   FMCZF006
FMCZFB06 EQU   FMCZF006
FMCZFA06 EQU   FMCZF006
FMCZF005 EQU   FMCZFLAG
FMCZF004 EQU   FMCZFLAG
FMCZF003 EQU   FMCZFLAG
FMCZF002 EQU   FMCZFLAG
FMCZF001 EQU   FMCZFLAG
FMCFRESA EQU   ISTFMCB+228
FMCSCSQN EQU   FMCSNCTL+2
FMCSCCTL EQU   FMCSNCTL+1
FMCSTCTL EQU   FMCSCFLG
FMCSCCLO EQU   FMCSCFLG
FMCAPRO  EQU   FMCSCFLG
FMCLURO  EQU   FMCSCFLG
FMCOBSAC EQU   FMCSCFLG
FMCIBSAC EQU   FMCSCFLG
FMCFBRE  EQU   ISTFMCB+220
FMCFBXM  EQU   FMCZV002
FMCASEGQ EQU   ISTFMCB+212
FMCRDTPT EQU   ISTFMCB+208
FMCLOCK  EQU   ISTFMCB+204
FMCSEGD  EQU   FMCSSEGQ
FMCRSPLM EQU   ISTFMCB+198
FMCPSTRS EQU   ISTFMCB+196
@NM00097 EQU   FMCRRESP
FMCTSLHA EQU   FMCRRESP
FMCFRRN  EQU   FMCRRESP
FMCFME   EQU   FMCRRESP
FMCFEX   EQU   FMCRRESP
FMCFPE   EQU   FMCRRESP
FMCCTLB  EQU   ISTFMCB+194
FMCBSQNO EQU   FMCCLSEQ+2
FMCTSQNO EQU   FMCCLSEQ
FMCOBPRG EQU   FMCMODEB
FMCIBPRG EQU   FMCMODEB
FMCRESOT EQU   FMCMODEB
FMCRSTSR EQU   FMCMODEB
FMCLUQ   EQU   FMCMODEB
FMCAPQ   EQU   FMCMODEB
FMCCLEAR EQU   FMCMODEB
FMCHOLD  EQU   FMCMODEB
FMCIPSEQ EQU   ISTFMCB+188
FMCLUSTR EQU   ISTFMCB+187
FMCRSV87 EQU   FMCSTAT2
FMCSEQI  EQU   FMCSTAT2
FMCCPIP  EQU   FMCSTAT2
FMCALIPR EQU   FMCSTAT2
FMCIAIO  EQU   FMCSTAT2
FMCZF00A EQU   FMCSTAT2
FMCVPIP  EQU   FMCSTAT2
FMCBHSET EQU   ISTFMCB+185
FMCPRMRC EQU   FMCCLEXT+20
FMCRSV89 EQU   FMCPSTAT
FMCPCLSD EQU   FMCPSTAT
FMCDDOCD EQU   FMCPSTAT
FMCIDVFD EQU   FMCPSTAT
FMCELKST EQU   FMCPSTAT
FMCRSV88 EQU   FMCPSCMD
FMCRDBLK EQU   FMCPSCMD
FMCDSEOC EQU   FMCPSCMD
FMCPURGE EQU   FMCPSCMD
FMCRESTI EQU   FMCPSCMD
FMCCNTCT EQU   FMCPSCMD
FMCINVT  EQU   FMCPSCMD
FMCFLGB7 EQU   FMCFLGCL
FMCFLGB6 EQU   FMCFLGCL
FMCFLGB5 EQU   FMCFLGCL
FMCFLGB4 EQU   FMCFLGCL
FMCFLGB3 EQU   FMCFLGCL
FMCFLGB2 EQU   FMCFLGCL
FMCFLGB1 EQU   FMCFLGCL
FMCFLGB0 EQU   FMCFLGCL
FMCFLGA7 EQU   FMCFLGA
FMCFLGA6 EQU   FMCFLGA
FMCFLGA5 EQU   FMCFLGA
FMCFLGA4 EQU   FMCFLGA
FMCFLGA3 EQU   FMCFLGA
FMCFLGA2 EQU   FMCFLGA
FMCFLGA1 EQU   FMCFLGA
FMCFLGA0 EQU   FMCFLGA
FMCDCLOK EQU   FMCCLEXT+12
FMCRAFM  EQU   FMCCLEXT+8
FMCFBPTR EQU   FMCFBA+1
FMCFBRSV EQU   FMCFBA
FMCRPLPT EQU   FMCRPLA+1
FMCRPLRS EQU   FMCRPLA
FMCPRCLS EQU   FMCCVAL
FMCIBCE  EQU   FMCCVAL
FMCONLY  EQU   FMCOBCE
FMCLAST  EQU   FMCOBCE
FMCMIDLE EQU   FMCOBCE
FMCFIRST EQU   FMCOBCE
FMCCPCNT EQU   FMCPACPC
FMCMPCNT EQU   FMCPACEM
FMCNPCNT EQU   FMCPACEN
FMCCONF  EQU   FMCSSTAT
FMCPURCH EQU   FMCSSTAT
FMCNSALU EQU   FMCSSTAT
FMCBIP   EQU   FMCSSTAT
FMCSDTR  EQU   FMCSSTAT
FMCUIPI  EQU   FMCSSTAT
FMCCIPI  EQU   FMCSSTAT
FMCSNBI  EQU   FMCSSTAT
FMCRVD01 EQU   ISTFMCB+158
FMCISSN  EQU   ISTFMCB+156
FMCOASN  EQU   FMCNXOSC
FMCOSSN  EQU   FMCNXCFM
FMCSIP   EQU   FMCSIPA
FMCEXLST EQU   ISTFMCB+144
FMCPAB5  EQU   ISTFMCB+128
FMCPAB4  EQU   ISTFMCB+112
FMCPAB3  EQU   ISTFMCB+96
FMCPAB2  EQU   ISTFMCB+80
FMCPAB1  EQU   ISTFMCB+64
FMCFASYA EQU   ISTFMCB+60
FMCMODE  EQU   ISTFMCB+52
FMCPROCD EQU   ISTFMCB+48
FMCVWT   EQU   ISTFMCB+44
FMCRPLH  EQU   ISTFMCB+40
FMCBUFNB EQU   FMCCMPS1+2
FMCBUFLM EQU   FMCCMPS1
FMCDEBA  EQU   ISTFMCB+32
@NM00096 EQU   FMCCMDFL
FMCSNA   EQU   FMCCMDFL
FMCVSNA  EQU   FMCCMDFL
FMCCMDR  EQU   FMCCMDFL
@NM00095 EQU   ISTFMCB+30
@NM00094 EQU   FMCSTAT1
FMCLTCLS EQU   FMCSTAT1
FMCHPURG EQU   FMCSTAT1
FMCVSP2  EQU   FMCSTAT1
FMCVSP1  EQU   FMCSTAT
FMCLTEAS EQU   FMCSTAT
FMCZF007 EQU   FMCSTAT
FMCDEDSC EQU   FMCSTAT
FMCDAPT  EQU   FMCSTAT
FMCPRMTE EQU   FMCSTAT
FMCPRMTR EQU   FMCSTAT
FMCUSFLD EQU   ISTFMCB+24
FMCFMCBA EQU   ISTFMCB+20
FMCDNCBA EQU   ISTFMCB+16
FMCDVTA  EQU   ISTFMCB+12
FMCTSKID EQU   ISTFMCB+8
FMCNXTCB EQU   ISTFMCB+4
FMCSAF   EQU   ISTFMCB+2
FMCLNGTH EQU   ISTFMCB+1
FMCTYPE  EQU   ISTFMCB
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PROCPUID EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
NCSRUITS EQU   NCSUSSRU+2
NCSRULEN EQU   NCSUSSRU
NCSAPPAB EQU   NCSAPP+608
NCSAPDAT EQU   NCSAPBUE+8
NCSAPRU  EQU   NCSAPBUE+3
NCSRSV04 EQU   NCSAPBUE
NCSAPEND EQU   NCSAPP+84
NCSAPTXT EQU   NCSAPP+76
NCSAPECB EQU   NCSAPP+72
NCSAPSA  EQU   NCSAPP
NCSPLPDB EQU   NCSPLSID+5
NCSPLNID EQU   NCSPLPHD
NCSPLPO  EQU   NCSPLSTA
NCSRSVD4 EQU   NCSPLSTA
NCSRSVD2 EQU   NCSCRMOD
NCSRSVD1 EQU   NCSCHKPT+1
NCSPTUSE EQU   NCSCHKPT+1
NCSRNME  EQU   NCSCHKPT+1
NCSCUA   EQU   NCSCHKPT+1
NCSANSMD EQU   NCSCHKPT+1
NCSLGMOD EQU   NCSCHKPT
NCSLGAPL EQU   NCSCHKPT
NCSDTRLM EQU   NCSCHKPT
NCSESLM  EQU   NCSCHKPT
NCSNRPL  EQU   NCSCHKPT
NCSPOLD  EQU   NCSCHKPT
NCSPLRTY EQU   ISTNCSPL+263
NCSPLRH  EQU   ISTNCSPL+260
NCSUFMCB EQU   ISTNCSPL+256
NCSMGLPT EQU   ISTNCSPL+252
NCSCPWPT EQU   ISTNCSPL+248
NCSSENS2 EQU   NCSSENSE+2
NCSSNS2  EQU   NCSSENSE+1
NCSSNS1  EQU   NCSSENSE
NCSPLMID EQU   ISTNCSPL+232
NCSPLPID EQU   ISTNCSPL+231
NCSPLGID EQU   ISTNCSPL+230
NCSPLSQN EQU   ISTNCSPL+228
NCSRNAME EQU   ISTNCSPL+220
NCSPLRRP EQU   ISTNCSPL+204
NCSPLWEL EQU   ISTNCSPL+200
NCSPLP3  EQU   ISTNCSPL+192
NCSPLP2  EQU   ISTNCSPL+188
@NM00093 EQU   NCSPLFL5
NCSFORCE EQU   NCSPLFL5
NCSSDLK  EQU   NCSPLFL5
NCSSCPPS EQU   NCSPLFL5
NCSDLRSN EQU   ISTNCSPL+180
NCSPL2AP EQU   NCSPLFL4
NCSDSPN  EQU   NCSPLFL4
NCSDSPI  EQU   NCSPLFL4
NCSDSPA  EQU   NCSPLFL4
NCSDSPE  EQU   NCSPLFL4
NCSPLRSO EQU   NCSPLFL4
NCSDLNID EQU   NCSPLFL4
NCSEND   EQU   NCSPLFL3
NCSFINAL EQU   NCSPLFL3
NCSANS   EQU   NCSPLFL3
NCSPID   EQU   NCSPLFL3
NCSGID   EQU   NCSPLFL3
NCSPLANS EQU   NCSPLFL3
NCSEPP   EQU   NCSPLFL3
NCSPLMOM EQU   NCSPLFL3
NCSREMPO EQU   NCSPLFL2
NCSPLDS  EQU   NCSPLFL2
NCSOUFMC EQU   NCSPLFL2
NCSPLVDP EQU   NCSPLFL2
NCSPLPOS EQU   NCSPLFL1
NCSPL2CN EQU   NCSPLFL1
NCSPLAPU EQU   NCSPLFL1
NCSPLNON EQU   NCSPLFL1
NCSPLREQ EQU   NCSPLFL1
NCSPLEBN EQU   NCSPLFL1
NCSPLSOM EQU   NCSPLFL1
NCSPLRCR EQU   ISTNCSPL+172
NCSPLECB EQU   ISTNCSPL+164
NCSPLRCD EQU   NCSPLRAD+1
NCSLSCMD EQU   NCSPLRAD
NCSPLWRF EQU   ISTNCSPL+72
NCSPLWRE EQU   ISTNCSPL+68
NCSSTCMD EQU   NCSCRFLG
NCSUSRNF EQU   NCSCRFLG
NCSOPRQU EQU   NCSCRFLG
NCSCRDSE EQU   NCSCRFLG
NCSFMERP EQU   NCSCRFLG
NCSFMCLD EQU   NCSCRFLG
NCSPLCLD EQU   NCSCRFLG
NCSPLWRM EQU   NCSCRFLG
NCSPLUAD EQU   ISTNCSPL+64
NCSMSGSP EQU   ISTNCSPL+63
NCSNCPEP EQU   ISTNCSPL+62
NCSCMDB  EQU   NCSPLCMD+1
@NM00092 EQU   NCSCMDA
NCSPLUFM EQU   NCSCMDA
NCSPLFLO EQU   NCSCMDA
NCSPLSYN EQU   NCSCMDA
NCSPLCTL EQU   NCSCMDA
NCSPLSYS EQU   NCSCMDA
NCSPLLPT EQU   ISTNCSPL+56
NCSCRPID EQU   ISTNCSPL+51
NCSDLID  EQU   ISTNCSPL+44
NCSPLLID EQU   ISTNCSPL+36
NCSRRNPT EQU   ISTNCSPL+24
NCSOVFMC EQU   NCSPLVF1
NCSRSV02 EQU   NCSPLVFL
NCSDACLK EQU   NCSPLVFL
NCSABCON EQU   NCSPLVFL
NCSDCONT EQU   NCSPLVFL
NCSVNCSA EQU   NCSPLVFL
NCSVBF16 EQU   NCSPLVBF+1
NCSVBF15 EQU   NCSPLVBF+1
NCSVBF14 EQU   NCSPLVBF+1
NCSVBF13 EQU   NCSPLVBF+1
NCSVBF10 EQU   NCSPLVBF+1
NCSVBF09 EQU   NCSPLVBF+1
NCSVBF08 EQU   NCSPLVBF
NCSVBF07 EQU   NCSPLVBF
NCSVBF06 EQU   NCSPLVBF
NCSVBF05 EQU   NCSPLVBF
NCSVBF04 EQU   NCSPLVBF
NCSVBF03 EQU   NCSPLVBF
NCSVBF02 EQU   NCSPLVBF
NCSVBF01 EQU   NCSPLVBF
@NM00091 EQU   ISTNCSPL+16
NCSCRWKA EQU   NCSPFX+12
@NM00090 EQU   NCSPFX
POHID    EQU   ISTPOHD+2
POHGEN   EQU   POHSTAT
POHRREQ  EQU   POHSTAT
POHRSVD2 EQU   POHSTAT
POHCNTRL EQU   POHSTAT
POHLBL   EQU   POHSTAT
POHDATA  EQU   POHSTAT
POHEND   EQU   POHSTAT
POHRSVD1 EQU   ISTPOHD
ACDREFQ  EQU   ISTACDEB+204
ACDASFQ  EQU   ISTACDEB+200
ACDSOP   EQU   ISTACDEB+184
ACDSIP   EQU   ISTACDEB+168
ACDRSV24 EQU   ACDVTAM+108
ACDRSV23 EQU   ACDVTAM+104
ACDRSV22 EQU   ACDVTAM+100
ACDOCWAD EQU   ACDVTAM+96
ACDRSV10 EQU   ACDVTAM+92
ACDAPDDT EQU   ACDAPDAT+1
ACDAPDLN EQU   ACDAPDAT
ACDRSV07 EQU   ACDVTAM+82
ACDRSV06 EQU   ACDVTAM+81
@NM00088 EQU   ACDSSFLG
ACDTSO   EQU   ACDSSFLG
ACDTPEND EQU   ACDSSFLG
ACDAICLS EQU   ACDSSFLG
ACDABEND EQU   ACDSSFLG
ACDCACB  EQU   ACDSSFLG
ACDRSV21 EQU   ACDVTAM+64
ACDSSPAB EQU   ACDVTAM+48
ACDNEPAB EQU   ACDVTAM+32
ACDRSV20 EQU   ACDVTAM+20
ACDRARQ  EQU   ACDVTAM+16
ACDRAFQ  EQU   ACDVTAM+12
ACDFMCB  EQU   ACDVTAM+8
ACDRDTE  EQU   ACDVTAM+4
ACDLOCK  EQU   ACDVTAM
ACDAPP   EQU   ACDAPPAD+1
ACDEXSCL EQU   ACDAPPAD
ACDACB   EQU   ACDACBAD+1
ACDDEBID EQU   ACDACBAD
ACDPROTG EQU   ACDACBAD
ACDECBAD EQU   ACDBASIC+20
ACDUSRPB EQU   ACDUSRPG+1
ACDNMEXT EQU   ACDUSRPG
ACDPRLEN EQU   ACDBASIC+15
ACDFLGS1 EQU   ACDBASIC+14
ACDQSCNT EQU   ACDBASIC+13
ACDOPATB EQU   ACDBASIC+12
ACDIRBAD EQU   ACDBASIC+8
ACDDEB   EQU   ACDDEBAD+1
ACDAMLNG EQU   ACDDEBAD
ACDTCB   EQU   ACDTCBAD+1
ACDOPNAD EQU   ACDNMSUB
ACDRSV03 EQU   ACDTBLOF+1
ACDRSV02 EQU   ACDTBLOF
ACDAMTYP EQU   ACDDBPFX+5
ACDLENG  EQU   ACDDBPFX+4
ACDDEBX  EQU   ACDDBPFX
ACDRSV08 EQU   ACDVTPRX+12
ACDTSKID EQU   ACDVTPRX+8
ACDCHN   EQU   ACDVTPRX+4
ACDSAF   EQU   ACDVTPRX+2
ACDLNGTH EQU   ACDVTPRX+1
ACDTYPE  EQU   ACDVTPRX
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00087 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00086 EQU   ATCAOSM+333
@NM00085 EQU   @NM00084
ATCSNUF  EQU   @NM00084
ATCOPKL  EQU   @NM00084
ATCABEN  EQU   @NM00084
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00083 EQU   @NM00082
ATCVTMAB EQU   @NM00082
@NM00081 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00080 EQU   ISTATCVT+819
@NM00079 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00078 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCDVTLK EQU   ISTATCVT+456
ATCAP35  EQU   ISTATCVT+448
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00077 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00076 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00075 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00074 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00073 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCVPAB  EQU   ISTRCC+88
@NM00072 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCNCNT EQU   ISTRCC+75
RCCBRKCN EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00071 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00070 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNRLDIP EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPANVPC EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00069 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00068 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00067 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRRSV05 EQU   RPRFLAGD
RPRCONP  EQU   RPRFLAGD
RPRACTP  EQU   RPRFLAGD
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRNCBA  EQU   ISTRPRE+40
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRTIOCT EQU   ISTRPRE+26
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRRLOCK EQU   ISTRPRE+12
RPRSAF   EQU   RPRCOMID
LOKXCL   EQU   @NM00065
LOKPRY   EQU   @NM00065
@NM00066 EQU   @NM00065
@NM00064 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
PFXBCK   EQU   ISTPFX+12
PFXFWD   EQU   ISTPFX+8
PFXLNG   EQU   ISTPFX+5
PFXPRTY  EQU   ISTPFX+4
PFXCBID  EQU   PFXID
RPLSEQNO EQU   RPLOF60+6
@NM00063 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00062 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00061 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00060 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00059 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00058 EQU   RPLRESP
@NM00057 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00056 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00055 EQU   RPLVTFL1
@NM00054 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00053 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00052 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00051 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00050 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00049 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00048 EQU   RPLOPT12
@NM00047 EQU   RPLOPT12
@NM00046 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00045 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00044 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00043 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00042 EQU   RPLRBAR+3
@NM00041 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00040 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00039 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00038 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
IOBERRCT EQU   IOBSTDRD+30
IOBRSV19 EQU   IOBINCAM+1
IOBOLTST EQU   IOBBTAMF
IOBRFTMG EQU   IOBBTAMF
IOBRSV17 EQU   IOBBTAMF
IOBRSV16 EQU   IOBBTAMF
IOBRSV15 EQU   IOBBTAMF
IOBRSV14 EQU   IOBBTAMF
IOBINUSE EQU   IOBBTAMF
IOBPRMER EQU   IOBBTAMF
IOBRSTRB EQU   IOBRESTR+1
IOBREPOS EQU   IOBRESTR
IOBDCBPB EQU   IOBDCBPT+1
IOBRSV44 EQU   IOBFLAG4
IOBJES3I EQU   IOBFLAG4
IOBRSV42 EQU   IOBFLAG4
IOBRSV41 EQU   IOBFLAG4
IOBRSV40 EQU   IOBFLAG4
IOBPMERR EQU   IOBFLAG4
IOBCC3WE EQU   IOBFLAG4
IOBGDPOL EQU   IOBFLAG4
IOBSTRTB EQU   IOBSTART+1
IOBSIOCC EQU   IOBSTART
IOBCSB7  EQU   IOBCSTAT
IOBCSB6  EQU   IOBCSTAT
IOBCSB5  EQU   IOBCSTAT
IOBCSB4  EQU   IOBCSTAT
IOBCSB3  EQU   IOBCSTAT
IOBCSB2  EQU   IOBCSTAT
IOBCSB1  EQU   IOBCSTAT
IOBCSB0  EQU   IOBCSTAT
IOBUSB7  EQU   IOBUSTAT
IOBUSB6  EQU   IOBUSTAT
IOBUSB5  EQU   IOBUSTAT
IOBUSB4  EQU   IOBUSTAT
IOBUSB3  EQU   IOBUSTAT
IOBUSB2  EQU   IOBUSTAT
IOBUSB1  EQU   IOBUSTAT
IOBUSB0  EQU   IOBUSTAT
IOBCMDA  EQU   IOBIOCSW
IOBLOG   EQU   IOBFL3
IOBJAM   EQU   IOBICL
IOBMSG   EQU   IOBFL3
IOBSDR   EQU   IOBCNC
IOBACU   EQU   IOBFL3
IOBCDC   EQU   IOBFL3
IOBICC   EQU   IOBFL3
IOBCCC   EQU   IOBFL3
IOBECBPB EQU   IOBECBPT+1
IOBECBCC EQU   IOBECBPT
IOBS1B7  EQU   IOBSENS1
IOBS1B6  EQU   IOBSENS1
IOBS1B5  EQU   IOBSENS1
IOBS1B4  EQU   IOBSENS1
IOBS1B3  EQU   IOBSENS1
IOBS1B2  EQU   IOBSENS1
IOBS1B1  EQU   IOBSENS1
IOBS1B0  EQU   IOBSENS1
IOBSNSC9 EQU   IOBS0B7
IOBS0B6  EQU   IOBSENS0
IOBS0B5  EQU   IOBSENS0
IOBS0B4  EQU   IOBSENS0
IOBS0B3  EQU   IOBSENS0
IOBS0B2  EQU   IOBSENS0
IOBS0B1  EQU   IOBSENS0
IOBS0B0  EQU   IOBSENS0
IOBPNCH  EQU   IOBFLAG2
IOBSTATO EQU   IOBFLAG2
IOBSKUPD EQU   IOBFLAG2
IOBALTTR EQU   IOBFLAG2
IOBRRT2  EQU   IOBRDHA0
IOBRRT3  EQU   IOBPURGE
IOBSENSE EQU   IOBFLAG2
IOBHALT  EQU   IOBFLAG2
IOBSPSVC EQU   IOBRSTRT
IOBUNREL EQU   IOBFLAG1
IOBIOERR EQU   IOBFLAG1
IOBFCREX EQU   IOBCYCCK
IOBRPSTN EQU   IOBFLAG1
IOBERRTN EQU   IOBFLAG1
IOBCMDCH EQU   IOBFLAG1
IOBDATCH EQU   IOBFLAG1
IOBCNOPA EQU   IOBPREFX+12
IOBCICB  EQU   IOBPREFX+8
IOBCECB  EQU   IOBPREFX+4
IOBCONOP EQU   IOBPREFX+3
IOBCINOP EQU   IOBPREFX+2
IOBRSV05 EQU   IOBPREFX+1
IOBPCI   EQU   IOBCFLG1
IOBRSTCH EQU   IOBCFLG1
IOBABAPP EQU   IOBCFLG1
IOBPTST  EQU   IOBCFLG1
IOBRSV04 EQU   IOBCFLG1
IOBRSV03 EQU   IOBCFLG1
IOBRSV02 EQU   IOBCFLG1
IOBRSV01 EQU   IOBCFLG1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00037 EQU   CVTFIX+248
@NM00036 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
IOSEND   EQU   IOSB+108
IOSSKR   EQU   IOSEEKA+7
IOSSKH2  EQU   IOSSKHH+1
IOSSKH1  EQU   IOSSKHH
IOSSKCC  EQU   IOSCCHH
IOSSKBB  EQU   IOSEEKA+1
IOSSKM   EQU   IOSEEKA
IOSEEK   EQU   IOSB+92
IOSMDM   EQU   IOSB+91
IOSMDB   EQU   IOSB+90
IOSCKEY7 EQU   IOSCKEY
IOSCKEY6 EQU   IOSCKEY
IOSCKEY5 EQU   IOSCKEY
IOSCKEY4 EQU   IOSCKEY
@NM00032 EQU   IOSCKEY
IOSFMSK  EQU   IOSB+88
IOSCUDEV EQU   IOSPATH+1
@NM00031 EQU   IOSCHN
IOSPATH3 EQU   IOSCHN
IOSPATH2 EQU   IOSCHN
IOSEXP   EQU   IOSCHN
IOSGDP   EQU   IOSCHN
IOSAFF   EQU   IOSB+85
IOSRSS1B EQU   IOSB+84
IOSDSID  EQU   IOSB+80
IOSVST   EQU   IOSB+76
IOSRST   EQU   IOSB+72
IOSDIE   EQU   IOSB+68
IOSABN   EQU   IOSB+64
IOSNRM   EQU   IOSB+60
IOSPCI   EQU   IOSB+56
IOSERP   EQU   IOSB+52
IOSPCHN  EQU   IOSB+48
IOSSNS   EQU   IOSB+42
IOSAPMSK EQU   IOSB+40
IOSRES4A EQU   IOSB+36
IOSUSE   EQU   IOSB+32
IOSSRB   EQU   IOSB+28
IOSCSWRC EQU   IOSCSW+5
IOSTSB   EQU   IOSTATUS+1
IOSTSA   EQU   IOSTATUS
IOSCSWCA EQU   IOSCSW
IOSCC    EQU   @NM00030
IOSUCB   EQU   IOSB+16
IOSOPT2X EQU   IOSOPT2
IOSHTP   EQU   IOSOPT2
IOSRELSE EQU   IOSOPT
IOSAPR   EQU   IOSOPT
IOSTSLL  EQU   IOSOPT
IOSNERP  EQU   IOSOPT
IOSPSLL  EQU   IOSOPT
IOSQISCE EQU   IOSOPT
IOSDEP   EQU   IOSOPT
IOSBYP   EQU   IOSOPT
IOSCOD   EQU   IOSB+13
IOSPKY7  EQU   IOSPKEY
IOSPGDPX EQU   IOSPKEY
IOSIDR   EQU   IOSPKEY
IOSLCL   EQU   IOSPKEY
@NM00029 EQU   IOSPKEY
IOSPGAD  EQU   IOSB+8
IOSASID  EQU   IOSB+6
IOSPRLVL EQU   IOSB+5
IOSDVRID EQU   IOSB+4
IOSPROC  EQU   IOSB+3
IOSFLC7  EQU   IOSFLC
IOSFLC6  EQU   IOSFLC
IOSRWAIT EQU   IOSFLC
IOSTP    EQU   IOSFLC
IOSCC3WE EQU   IOSFLC
IOSVERIF EQU   IOSDVALT
IOSDVMNT EQU   IOSFLC
IOSLOG   EQU   IOSFLB
IOSBDCST EQU   IOSFLB
IOSMSG   EQU   IOSFLB
IOSFLB4  EQU   IOSFLB
IOSFLB3  EQU   IOSFLB
IOSFLB2  EQU   IOSFLB
IOSSDR   EQU   IOSFLB
IOSDIESE EQU   IOSFLB
IOSIOSB  EQU   IOSFLA
IOSDOM   EQU   IOSFLA
IOSEX    EQU   IOSFLA
IOSSMDB  EQU   IOSFLA
IOSSMDA  EQU   IOSFLA
IOSERR   EQU   IOSFLA
IOSCCHN  EQU   IOSACHN
IOSDCHN  EQU   IOSACHN
@NM00028 EQU   SRBSECT+40
@NM00027 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPARM  EQU   SRBSECT+28
SRBRMTR  EQU   SRBSECT+24
SRBEP    EQU   SRBSECT+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
SRBFLNK  EQU   SRBSECT+4
SRBID    EQU   SRBSECT
FRRSPARM EQU   FRRSENTR+8
@NM00002 EQU   FRRSFLGS+1
@NM00001 EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSFRRA EQU   FRRSENTR
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
FRRSCURR EQU   FRRSHEAD+12
FRRSELEN EQU   FRRSHEAD+8
FRRSLAST EQU   FRRSHEAD+4
FRRSEMP  EQU   FRRSHEAD
@NM00026 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00025 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00024 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00023 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00022 EQU   FLCFSA
@NM00021 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00020 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00019 EQU   FLCIOA
@NM00018 EQU   FLCMCLA+15
@NM00017 EQU   FLCMCLA+14
@NM00016 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00015 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00014 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00013 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00012 EQU   FLCPER
@NM00011 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00010 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00009 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00008 EQU   FLCPIILC
@NM00007 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00006 EQU   FLCSVILC
@NM00005 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00004 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00003 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00805 EQU   @RC00803
@RC00935 EQU   @RC00929
@RC00968 EQU   @RC00952
@RC00953 EQU   @RC00952
@RF00981 EQU   @RC00952
@RC00990 EQU   @RC00988
@RF01003 EQU   @RC00988
@RC01052 EQU   @RC01050
@RC01260 EQU   @RC01254
@RC01287 EQU   @RC01254
CVPEPL3# EQU   @RC01320
@RC01343 EQU   @RC01332
CVPEPL2@ EQU   @EL00006
@RT01437 EQU   CVPLCEND
CVPSNA2# EQU   @RC01611
CVPSNA4# EQU   @RC01634
@RC01834 EQU   @RC01820
@RC01861 EQU   @RC01858
@RT01921 EQU   @RC01878
@RC02066 EQU   @RC02064
CVPDELG@ EQU   @PB00012
@RC01291 EQU   @RC01287
@RC02068 EQU   @RC02066
@ENDDATA EQU   *
         END   ISTINCVP,(C'PLS1846',0603,78152)
