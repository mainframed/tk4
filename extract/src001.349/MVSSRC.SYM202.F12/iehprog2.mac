 TITLE  'IEHPROG2-IEHPROGM ISSUE SVC, ANALYZE RETURN'             11482
**********************************************************************
*                                                                     *
* MODULE NAME -- IEHPROG2                                      YL026VC*
*                                                              YL026VC*
* DESCRIPTIVE NAME -- IEHPROGM ISSUE SVC, ANALYZE RETURN       YL026VC*
*                                                              YL026VC*
* COPYRIGHT -- NONE                                            YL026VC*
*                                                              YL026VC*
* STATUS -- 'IEHPROG2' OS/VS2 PROLOGUE MODIFICATION            YL026VC*
*    NOVEMBER 1972                                             YL026VC*
*                                                              YL026VC*
* FUNCTION -- THIS MODULE ISSUES ALL THE SVC'S FOR THE IEHPROGM       *
*    PROGRAM.  IT IS THE INTERFACING MODULE TO THE DATA MANAGEMENT    *
*    FUNCTIONS:                                                       *
*                                                                     *
*    SCRATCH                                                          *
*    RENAME                                                           *
*    ADD                                                              *
*    DELETEP                                                          *
*    REPLACE                                                          *
*    LIST                                                             *
*    IT ALSO CHECKS ALL OF THE RETURN CODES FROM THE ABOVE            *
*    INTERFACES AND INITIATES ERROR OR DIAGNOSTIC MESSAGES            *
*    WHERE APPLICABLE.                                                *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IEHPROG2 IS THE INITIAL ENTRY POINT OF THE MODULE           *
*    'IEHPROG2' AND IS ENTERED FROM THE MODULE 'IEHPROG5' IF ALL      *
*    VOLUME MOUNTING WAS RESOLVED NORMALLY.                           *
*         IEHPROG7 IS A SECONDARY ENTRY POINT TO THE MODULE           *
*    'IEHPROG2' AND IS USED IF THE VOLUME MOUNTING ROUTINE 'IEHPROG5' *
*    ENCOUNTERED A PROBLEM.  IT PROVIDES AN IMMEDIATE RETURN TO       *
*    THE MODULE 'IEHPROG1' TO THE POINT WHERE 'IEHPROG1' CALLED       *
*    'IEHPROG5'.                                                      *
*                                                                     *
* INPUT -- ALL INPUT INFORMATION IS CONTAINED IN THE COMMUNICATIONS   *
*    AND WORK AREA POINTED TO BY REGISTER 12 AND DESCRIBED BY THE     *
*    DSECT NAMED DSECT AND BEGINNING IEHECHAR.                        *
*                                                                     *
* OUTPUT -- THIS MODULE INITIATES THE OUTPUT OF ERROR AND             *
*    DIAGNOSTIC MESSAGES BY CALLING 'IEHPROG3'.  OTHER OUTPUT         *
*    IS THE RETURN CODE INFORMATION PASSED BACK FROM THE SVC          *
*    ROUTINES.                                                        *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         IEHPROG3 IS CALLED UPON TO PRINT ANY ERROR OR DIAGNOSTIC    *
*    MESSAGES NECESSARY.                                              *
*         IEHPROG1 IS THE RETURN POINT FOR BOTH NORMAL AND ERROR      *
*    CONDITION RETURNS FROM THE MODULE 'IEHPROG2'.                    *
*         IEHPROG5 CALLS THIS MODULE AFTER IT HAS PROCESSED THE       *
*    VOLUME MOUNTING INFORMATION.                                     *
*                                                                     *
* EXITS, NORMAL -- 'IEHPROG2' RETURNS TO 'IEHPROG1' VIA A BRANCH      *
*    ON REGISTER 15 WHICH CONTAINS THE ADDRESS OF ENTRY IEHPROG9.     *
*                                                                     *
* EXITS,ERROR -- AN ERROR RETURN IS EXECUTED EXACTLY AS A NORMAL      *
*    EXIT, HOWEVER 'IEHPROG3' WILL HAVE ALREADY BEEN CALLED UPON      *
*    TO ISSUE ANY MESSAGES NECESSARY TO INDICATE THE ERROR(S).        *
*                                                                     *
* TABLES/WORK AREAS--                                                 *
*    DSECT IS THE COMMON COMMUNICATIONS AND WORK AREA POINTED TO BY   *
*    REGISTER 12 AND DESCRIBED BY THE DSECT NAMED DSECT AND           *
*    BEGINNING IEHECHAR.                                              *
*    BRANTAB IS A BRANCH TABLE USED TO CONTROL PROGRAM FLOW BY        *
*    INTERPRETING THE RETURN CODES FROM THE DATA MANAGEMENT           *
*    ROUTINES.                                                        *
*    LISTS OF 'DC'S STARTING AT MEMBER WHICH ACT AS A CONTROL         *
*    FOR BUILDING THE APPROPRIATE MESSAGES.                           *
*                                                                     *
* ATTRIBUTES -- THIS MODULE OPERATES AS ONE LEG OF AN OVERLAY         *
*    STRUCTURE.                                                       *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- THIS MODULE MUST BE ASSEMBLED IN       *
*    EBCDIC AND RUN IN EBCDIC TO INSURE COLLATING SEQUENCE AND        *
*    INTERNAL REPRESENTATION OF CERTAIN CHARACTERS.                   *
*                                                                     *
* NOTES -- APPROXIMATELY 4000 BYTES OF STORAGE ARE NEEDED     @Z40RSDS*
*    FOR CODE.                                                @Z40RSDS*
*                                                                     *
* CHANGE ACTIVITY -- FOLLOWS PROLOGUE                          YL026VC*
*                                                              YL026VC*
***********************************************************************
         EJECT
IEHPROG2 CSECT                                                    M2838
*            VS2 SU32 DELETIONS                                @G32DSFS
*D041942-041944,194610-194710,239520,241850-242700,            @G32DSFS
*D253970-254070                                                @G32DSFS
*                                                              @G32DSFS
*A195240                                                         YM5077
*A140320,168300-168799,C55000,57800                              A57261
*A72570,88385-88530,C177000                                      YM5076
*C1800-13000                                                      M2838
*A120000-120100,123810-123910                                    A50977
*                                                                  I276
*2764                                                              BS0H
*2764                                                              3520
*2359                                                              DT0I
*2359117420                                                        WG0I
*                                                                  M737
*                                                                M2422
*                                                                A25564
*                                                                A28547
*                                                                A29705
*A700-784,1100,16100-16200                                      YL026VC
*C800-1000                                                      YL026VC
*D200-320,360                                                   YL026VC
*A 030602-030604                                                YA01695
*C 031300,041560                                                YA01695
*A90420-90500                                                   YM07026
*C106800                                                        YM07026
*A123995,124145                                                 YM04431
*C086800-087000,090420-090500,106800,115800,121600-121800,     @VS30028
*C122800-123200,124175-125000,176200,236200,239200-239600,     @VS30028
*C240800-241200,241800-242600,249600,251800,311200,311800      @VS30028
*C015800,176400-176600,239520,241840-241860,254000,254600,     @Z40RSDS
*C311450,311530,311560,311800                                  @Z40RSDS
*C114200                                                       @Z30AAAG
*D115000                                                       @Z30AAAG
*A114210,810,820                                               @Z30AAAG
*C128160                                                       @ZM30018
*D123995                                                       @ZM30018
*A123995,123999,124045                                         @ZM32753
*A 219900                                                      @ZA01695
*A 114100,114804,115700,117201-117345                          @ZA06552
*A123600-124100,121820-121840                                  @Z40CSJH
*D 120000,120200                                               @ZA07322
*C139000,141000,143000,145000                                  @Z40CSJH
*C147000,149000,152200,259400                                  @Z40CSJH
*A 044300,044520,047100-047140,223300,223320                   @ZA13801
*A 226900-226992,312740                                        @ZA13801
*C 044600,223200,223600                                        @ZA13801
*D 312400,312600                                               @ZA13801
*                   *****     REGISTER  USAGE     *****
ZERO     EQU   0        ----------------------------------------
R0       EQU   0                       EQUATE FOR REGISTER 0   @VS30028
R1       EQU   12
R2       EQU   2
R3       EQU   3             REGISTERS ZERO THROUGH
R4       EQU   4             TEN ARE WORK REGISTERS
R5       EQU   5
R6       EQU   6             REGESTERS ELEVEN AND
S        EQU   6                                                   WG0I
R7       EQU   7             TWELVE ARE BASE REGISTERS
R8       EQU   8             FOR THE PROGRAN AND THE
R        EQU   8                                                   WG0I
R9       EQU   9             DUMMY SECTION RESPECTIVELY
R10      EQU   10
RB       EQU   11            THIRTEEN POINTS TO A REGISTER
RBD      EQU   12
SAVEREG  EQU   13            SAVE AREA
RETURN   EQU   14
LINKREG  EQU   15            FIFTEEN AND FOURTEEN ARE LINK
PARAMREG EQU   0             AND RETURN REGISTERS RESPECTIVELY
LISTREG  EQU   1        -----------------------------------------
FOUR     EQU   4                  DECREMENT FOR TABLE            S21046
EIGHT    EQU   8                  CONDITION CODE OF 8            S21046
CODE12   EQU   12                 RETURN CODE OF 12              S21046
CODE16   EQU   16                 RETURN CODE OF 16              S21046
LISTMASK EQU   X'04'              LIST OPERATION MASK            S21046
WTORMASK EQU   X'10'              MASK FOR WTOR                  S21046
PW2MASK  EQU   X'04'              CHECKS FOR PASWORD2            S21046
PW1MASK  EQU   X'20'              CHECKS FOR PASWORD1            S21046
CONTROL  EQU   X'80'              CHECK FOR CONTROL PASSWORD     S21046
RW       EQU   X'01'              CHECK FOR READ/WRITE PROTECTIONS21046
FIXBYTE  EQU   X'F0'              FIX HIGH ORDER BYTE AFTER      S21046
*                                 UNPACK OPERATION               S21046
PROMASK  EQU   X'FF'              PROTECT INDICATION MASK        S21046
RTNREG   EQU   15                 RETURN CODE REGISTER           S21046
MSG60    EQU   60                 PRINT MESSAGE 60               S21046
*                                 MPDS DOES NOT EXIST            S21046
MSG61    EQU   61                 PRINT MESSAGE 61               S21046
*                                 TAPE DATA SET NOT PROTECTED    S21046
MSG62    EQU   62                 PRINT MESSAGE 62               S21046
*                                 DUPLICATE ENTRIES IN MPDS      S21046
MSG63    EQU   63                 PRINT MESSAGE 63               S21046
*                                 FIVE INVALID PASSWORDS         S21046
MSG64    EQU   64                 PRINT MESSGE 64                S21046
*                                 DSCB NOT UPDATED               S21046
MSG65    EQU   65                 PRINT MESSGE 65                S21046
*                                 I/O ERROR IN MPDS              S21046
MSG66    EQU   66                 PRINT MESSGE 66                S21046
*                                 MPDS FULL                      S21046
MOVE1    EQU   1                  MOVE CALL CODE                 S21046
MOVE2    EQU   2                  MOVE 2 CHAR. FOR UNPACK        S21046
MOVE3    EQU   3                  FOR UNPACK AND ADDR MOVES      S21046
MOVE4    EQU   4                  MOVE FOUR CHARACTERS           S21046
MOVE6    EQU   6                  MOVE ACCESS COUNT              S21046
MOVE8    EQU   8                  MOVE PASSWORDS, AND JOB, STEP, S21046
*                                 AND CARD NAMES                 S21046
MOVE9    EQU   9                  MOVE READ ONLY                 S21046
MOVE10   EQU   10                 MOVE READ/WRITE                S21046
MOVE12   EQU   12                 MOVE TYPE OF PASSWORD          S21046
MOVE19   EQU   19                 MOVE DATA FIELD HEADER         S21046
MOVE21   EQU   21                 MOVE MODE BYTE HEADER          S21046
MOVE24   EQU   24                 MOVE ACCESS COUNT HEADER       S21046
MOVE27   EQU   27                 MOVE MODE BYTE HEADER          S21046
MOVE36   EQU   36                 MOVE OPERATOR FAILURE MESSAGE  S21046
MOVE54   EQU   54                 MOVE OBTAIN FAILURE MESSAGE    S21046
MOVE77   EQU   77                 MOVE DATA FIELD AND LOCATE     S21046
*                                 FAILURE MESSAGE                S21046
OFFSET1  EQU   1                  OFFSET TO PW1MASK, UPDATE      S21046
*                                 POINTER TO TABLE, AND STEP     S21046
*                                 UP ONE BYTE IN PARAMETER LIST  S21046
OFFSET2  EQU   2                  OFFSET FOR ERROR CODE IN ERRFLDS21046
*                                 AND INTO PARMFLD               S21046
OFFSET3  EQU   3                  OFFSET TO CALL CODE AND OFFSET S21046
*                                 TO DATA FIELD IN MPDS RECORD   S21046
OFFSET4  EQU   4                  OFFSET TO ECB IN WTORLIST      S21046
OFFSET5  EQU   5                  OFFSET TO ACCESS COUNT         S21046
OFFSET6  EQU   6                  OFFSET TO LOCATE AND OBTAIN    S21046
*                                 RETURN CODES IN DBLWORD        S21046
OFFSET8  EQU   8                  OFFSET TO STEPNAME, AND        S21046
*                                 PARAM3 IN IEHEMAC1             S21046
OFFSET12 EQU   12                 OFFSET TO PARAM5 IN IEHEMAC1   S21046
*                                 FOR CPASWORD                   S21046
OFFSET16 EQU   16                 OFFSET INTO TIOT FOR STEPNAME  S21046
OFFSET19 EQU   19                 OFFSET FOR DATA IN MESSAGE     S21046
OFFSET20 EQU   20                 OFFSET INTO WTORLIST FOR       S21046
*                                 JOBNAME                        S21046
OFFSET21 EQU   21                 OFFSET INTO IEHEMAC1 FOR       S21046
*                                 PASSWORD ADDRESS               S21046
OFFSET24 EQU   24                 OFFSET TO ACCESS COUNT IN MSG  S21046
OFFSET27 EQU   27                 OFFSET INTO MSG TO PROTECT     S21046
*                                 MODE BYTE                      S21046
OFFSET29 EQU   29                 OFFSET TO FIX HIGH ORDER BYTE  S21046
*                                 OF PROTECT MODE                S21046
OFFSET30 EQU   30                 OFFSET INTO WTORLIST OF STEP   S21046
*                                 NAME                           S21046
OFFSET33 EQU   33                  OFFSET FOR PROTECT TYPE       S21046
OFFSET36 EQU   36                 OFFSET INTO MSG FOR PASSWORD   S21046
OFFSET40 EQU   40                 OFFSET INTO WTORLIST FOR CARD  S21046
*                                 NAME                           S21046
OFFSET51 EQU   51                 OFFSET TO LOCATE RETURN CODE   S21046
*                                 IN MESSAGE                     S21046
OFFSET52 EQU   52                 OFFSET TO HIGH ORDER BYTE      S21046
OFFSET61 EQU   61                 OFFSET INTO WTORLIST FOR       S21046
*                                 PASSWORD                       S21046
OFFSET74 EQU   74                 OFFSET INTO MSG FOR INDICES    S21046
OFFSET75 EQU   75                 OFFSET TO HIGH ORDER BYTE      S21046
OFFSET80 EQU   80                 OFFSET TO LOCATE CODES         A31333
ZERO4    EQU   4                  ZERO OUT FOUR BYTES OF IEHEMAC1S21046
DNWBBIT  EQU   X'08'              TURN ON THE DO NOT WRITE BACK  A38610
*                                 BIT IN THE JFCB                A38610
DWOFFSET EQU   52                 OFFSET TO DON'T WRITE BACK BIT A38610
CODEA    EQU   X'0A'              RENAME ERROR HANDLER RETURN  @VS30028X
                                  CODE CORRESPONDING TO STOW   @VS30028X
                                  ERROR X'14' (DCB NOT OPEN)   @VS30028
STATUS   EQU   13                 OFFSET TO STATUS CODE BYTE   @VS30028X
                                  IN SCRATCH/RENAME VOL LIST   @VS30028
PSWDERR  EQU   X'02'              SCRATCH/RENAME PASSWORD ERR  @VS30028
IOERROR  EQU   X'04'              SCRATCH/RENAME I/O ERROR     @VS30028
OPENDS   EQU   X'07'              SCRATCH/RENAME OPEN D/S ERR  @VS30028
SCRMASK  EQU   X'40'              SCRATCH OPTION BYTE 2 MASK   @Z40RSDS
*
*                   *****     SWITCH USAGE        *****
NDSWMSK  EQU   128       END SWITCH  BIT POS ZERO  SWITCH 1
COMMENTS EQU   64
CONTINUE EQU   32
FIRSTONE EQU   16
BIGSHIFT EQU   8
SHIFTLOC EQU   4
VOLSW    EQU   2
         SAVE  (14,12)            SAVE OLD REGS                   M2838
         BALR  R10,0
         USING *,R10
         L     RB,SCNDBASE                                     @ZA13801
         L     R10,CSECT2AD
         AR    RB,R10                                          @ZA13801
         USING IEHPROG2,R10,RB    ESTABLISH ADDRESSABILITY     @ZA13801
         USING IEHECHAR,RBD
         ST    SAVEREG,SAVEREG2+4 KEEP OLD SAVE REG               M2838
         LA    SAVEREG,SAVEREG2   ESTABLISH NEW SAVE AREA         M2838
         L     R3,DECB2                 GET ADDRESS OF ADCONS
         L     R3,24(R3)                GET RETURN ADDRESS
         ST    R3,DECB2+4               POST IT
         SR    R3,R3
         IC    R3,FINUSE+3        GET NUMBER OF REQUIRED TABLE
         SLL   R3,2
         EX    0,LATAB-4(R3)      GET ADDRESS OF THE TABLE
         ST    R3,FINUSE
         B     FDLD                    TABLE NUMBER
SCNDBASE DC    F'4096'               CONSTANT FOR SECOND BASE  @ZA13801
CSECT2AD DC    A(IEHPROG2)           ADDR OF MAIN ENTRY POINT  @ZA13801
MSGRTNAD DC    V(IEHPROG3)           ADDR OF MESSAGE ROUTINE   @ZA13801
IEHPROG7 BR    RETURN             RETURN TO POINT OF CALL         M2838
         ENTRY IEHPROG7                                           M2838
*   THE FOLLOWING INSTRUCTIONS LOAD THE ADDRESS OF THE CODE      S21046
*   TO BE EXECUTED DEPENDING UPON THE OPERATION SCANNED IN THE   S21046
*   FIRST MODULE. THE NUMBER TO THE RIGHT OF THE INSTRUCTION     S21046
*   REFERS TO THE CODE THAT CAUSES THAT LA TO BE EXECUTED.       S21046
*                                                                S21046
LATAB    LA    R3,CATALOG                    1
         LA    R3,UNCATLG                    2
         LA    R3,DELETEX                    3
         LA    R3,CONNECT                    4
         LA    R3,RELEASE                    5
         LA    R3,BUILDA                     6
         LA    R3,DELETEA                    7
         LA    R3,SCRATCH                    8
         LA    R3,BUILDX                     9
         LA    R3,RENAME                     10
         LA    R3,VTOCDCS                    11
         LA    R3,BLDG                       12
         LA    R3,MEMBER                     13
         LA    R3,ADD                        14                  S21046
         LA    R3,DELETEP                    15                  S21046
         LA    R3,REPLACE                    16                  S21046
         LA    R3,LIST                       17                  S21046
*
*
ENT2FDLD ST    LISTREG,FINUSE          SAVE ADDRESS OF LIST    @VS30028
FDLD     L     R9,FINUSE           GET ADDRESS OF LIST IN USE
         LA    R6,4(R9)
         ST    R6,FINUSE           UPDATE THE LIST ADDRESS
         SR    R2,R2
         IC    R2,0(R9)
         SLL   R2,2                SELECT THE ROUTINE TO BE PERFORMED
         LA    RETURN,FDLD              PROVIDE A RETURN
         EX    0,*+4(R2)           GO THERE
*
* ONE OF THESE BRANCH INSTRUCTIONS ARE EXECUTED AS DETERMINED FROM
*        THE FIRST BYTE OF THE  DATA LIST  FOR THE FUNCTION IN USE
         B     XCONTROL           EXECUTE FOR A ZERO OP
         B     *
         B     *
         B     *                   B TO *  ONLY TAKE UP SPACE
         B     LINKSAVE
         B     DCRETURN
         B     GETAMSG
         B     EXECUTE
         B     CLOSVTOC
         B     STTRESET
         B     WTORPAS1           BRANCH TO WTOR FOR PASWORD1    S21046
         B     WTORPAS2           BRANCH TO WTOR FOR PASWORD2    S21046
         B     PASSETUP           PUT CALL CODE IN IEHEMAC1      S21046
         B     LISTPARM           PUT ADDRESS OF RECIEVE AREA    S21046
FRECOVER MVC   FINUSE(4),FLSTADDR
         B     FDLD
XCONTROL L     R2,0(R9)
         BR    R2             GO TO LOCATION IN THE DATA LIST
LINKSAVE MVC   DCSAVEAD(4),FINUSE       SAVE LIST ADDRESS
         MVC   FINUSE(4),0(R9)          GET NEW LIST ADDRESS
         B     FDLD
DCRETURN MVC   FINUSE(4),DCSAVEAD
         B     FDLD
GETAMSG  L     PARAMREG,0(R9)
         L     LINKREG,MSGRTNAD
         BR    LINKREG
PASSETUP XC    IEHEMAC1(ZERO4),IEHEMAC1 ZERO OUT IEHEMAC1        S21046
         MVC   IEHEMAC1(MOVE1),OFFSET3(R9)  MOVE CALL CODE TO    S21046
*                                           IEHEMAC1             S21046
         B     FDLD               GO TO NEXT TABLE ENTRY         S21046
*                                                                S21046
*        13 OP PUT ADDRESS OF BUFFER IN THE PARAMETER FOR LIST   S21046
*                                                                S21046
LISTPARM LA    R6,PARAM4                LOAD ADDRESS OF BUFFER   S21046
         ST    R6,DUMMY                 STORE THE ADDRESS        S21046
         MVC   IEHEMAC1+OFFSET1(MOVE3),DUMMY+OFFSET1             S21046
*                                       MOVE ADDRESS TO PARAM    S21046
         B     FDLD                     GO TO NEXT ENTRY IN TAB  S21046
*                                                                S21046
*      FIRST PASS FOR WTOR FOR PASWORD1, IF SPECIFIED ON CARD    S21046
*      MOVE ON IF NOTINITIALIZE TO PROMPT OPERATOR FOR PASWORD1  S21046
*                                                                S21046
WTORPAS1 TM    DUPSW+OFFSET1,PW1MASK   WAS PASWORD1 SPECIFIED    S21046
*                                       ON CARD                  S21046
         BO    FDLD               THEN DO NOT NEED TO PROMPT     S21046
         IC    R4,TOTALPS         GET TOTAL WTOR COUNT           S21046
         LA    R4,OFFSET1(R4)           UP THE COUNT BY 1        S21046
         STC   R4,TOTALPS         STORE THE NEW COUNT            S21046
*                                                                S21046
*      RETURN CODE OF 8 FROM PROTECT. PASWORD1 GIVEN WAS         S21046
*      INVALID, INITIALIZE FOR WTOR                              S21046
*                                                                S21046
RTNCODE8 LA    R2,PARAM3          LOAD ADDRESS FOR PASWORD1      S21046
         ST    R2,IEHEMAC1+OFFSET8     STORE ADDR IN PARAM LIST  S21046
         LA    R6,PASWDCT1        LOAD ADDRESS FOR PASWORD1 CNT  S21046
         LA    R7,MSGE1           ADDRESS OF WTOR MESSAGE        S21046
         TM    DUPSW+OFFSET1,PW1MASK   WAS PSW SPECIF IN CARD   YA01695
         BO    BLNKPSWD              YES BRANCH TO MESSAGE      YA01695
         B     OPSETUP            GO SET UP THE WTOR             S21046
*                                                                S21046
*      IF PASWORD2 WAS NOT SPECIFIED ON CARD INITIALIZE FOR WTOR S21046
*                                                                S21046
WTORPAS2 TM    DUPSW+OFFSET1,PW2MASK  IS PASWORD2 IN PARAM LIST  S21046
         BO    FDLD               THEN DO NOT NEED TO PROMPT     S21046
         LA    R2,PARAM7          LOAD ADDRESS FOR PASWORD2      S21046
         ST    R2,DUMMY           STORE ADDRESS TO BE MOVED      S21046
         MVC   IEHEMAC1+OFFSET21(MOVE3),DUMMY+OFFSET1            S21046
*                                 MOVE THE ADDRESS TO PARM       S21046
         LA    R7,MSGE2           ADDRESS OF WTOR MESSAGE        S21046
         B     WRITE              GO WRITE TO OPERATOR           S21046
*                                                                S21046
*      EITHER CPASWORD WAS NOT SPECIFIED ON CARD OR IT WAS       S21046
*      INVALID, INITIALIZE FOR WTOR                              S21046
*                                                                S21046
RTNCOD12 LA    R2,PARAM5          LOAD ADDRESS FOR CPASWORD      S21046
         ST    R2,IEHEMAC1+OFFSET12 STORE ADDRESS IN PARM LIST   S21046
         LA    R6,PASWDCT3        LOAD ADDRESS OF CPASWORD CNT   S21046
         LA    R7,MSGE3           ADDRESS OF WTOR MESSAGE        S21046
*                                                                S21046
*      RETRIEVE THE COUNTER FOR THE PASSWORD TO BE PROMPTED FOR  S21046
*                                                                S21046
OPSETUP  SR    R3,R3              ZERO OUT REG 3                 S21046
         IC    R3,ZERO(R6)        GET THE COUNTER TO BE UPDATED  S21046
         BCT   R3,GOWTOR          UPDATE COUNTER BRANCH NOT 0    S21046
*                                                                S21046
*      IF THE OPERATOR DID NOT SUPPLY A PASSWORD OR IF THE       S21046
*      NUMBER OF ATTEMPTS FOR A PARTICULAR PASSWORD EXCEEDED THE S21046
*      MAXIMUM PERMISSIBLE INITIALIZE TO PRINT ERROR MESSAGE     S21046
*                                                                S21046
BLNKPSWD EQU   *                  OPERATOR DID NOT SUPPLY A      S21046
*                                 PASSWORD                       S21046
         MVC   MSGOUT(MOVE36),OPFAIL MOVE FIRST PART OF MSG      S21046
         MVC   MSGOUT+OFFSET16(MOVE8),ZERO(R7)                  YA01695
*                                 WHICH PASSWORD TO MSG AREA     S21046
         SR    PARAMREG,PARAMREG  ZERO REG 0                     S21046
         B     MSGRTN             WRITE MSG FOR OPERATOR FAILURE S21046
*                                                                S21046
*      IF MORE THAN FIVE INVALID PASSWORDS WRER GIVEN IN THIS    S21046
*      JOB INITIALIZE TO PRINT ERROR MESSAGE AND TERMINATE       S21046
*                                                                S21046
GOWTOR   STC   R3,ZERO(R6)        STORE THE UPDATED COUNTER      S21046
         IC    R3,TOTALPS         UPDATE TOTAL WTOR COUNT        S21046
         BCT   R3,NXTWTOR         HAS COUNTER REACHED ZERO       S21046
         LA    PARAMREG,MSG63     MESSAGE 63 FOR TOO AMNY        S21046
         MVI   ERRFLD+OFFSET2,CODE16 OPERATOR FAILED MAX TIMES   S21046
         B     MSGRTN             PRINT MESSAGE                  S21046
*                                                                S21046
*      STORE UPDATED TOTAL WTOR COUNT, CHECK TO SEE IF           S21046
*      LIST FORM OF WTOR HAS BEEN MOVED, INITIALIZE FOR AND ISSUES21046
*      PROTECT MACRO                                             S21046
*                                                                S21046
NXTWTOR  STC   R3,TOTALPS         NO STORE NEW COUNT             S21046
WRITE    TM    IEHESW2,WTORMASK   IS WTOR LIST MOVED             S21046
         BC    EIGHT,WTORINIT     GO MOVE WTOR LIST              S21046
WTORFNSH MVC   ZERO(MOVE8,R2),UPPERFLD                           S21046
*                                 BLANK OUT OPERATOR REPLY FIELD S21046
         MVC   WTORLIST+OFFSET61(MOVE8),ZERO(R7)                 S21046
*                                 MOVE THE PROPER PASSWORD       S21046
         MVC   WTORLIST+OFFSET40(MOVE8),CCNAME                   S21046
*                                 MOVE CONTROL CARD NAME         S21046
         MVI   WTORECB,ZERO       ZERO OUT ECB                   S21046
         WTOR  ,(R2),8,WTORECB,MF=(E,WTORLIST)                   S21046
         WAIT  ECB=WTORECB        WAIT FOR OPERATOR RESPONSE     S21046
         CLC   ZERO(MOVE8,R2),UPPERFLD                           S21046
*                                 DID OPERATOR REPLY WITH BLANKS S21046
         BE    BLNKPSWD           IF SO PRINT MESSAGE            S21046
         OC    ZERO(MOVE8,R2),UPPERFLD FOLD ALL OF REPLY TO CAPS S21046
         B     FDLD               GO TO NEXT ENTRY IN TABLE      S21046
*                                                                S21046
*      MOVE IN THE LIST FORM OF WTOR AND GET THE JOBNAME AND     S21046
*      STEPNAME WITH THE EXTRACT MACRO                           S21046
*                                                                S21046
WTORINIT MVC   WTORLIST(WTORSTOP-WTORLFRM),WTORLFRM              S21046
*                                 MOVE THE LIST FOR WTOR         S21046
         LA    R3,WTORECB         LOAD ADDRESS OF ECB FOR WTOR   S21046
         ST    R3,WTORLIST+OFFSET4 STORE THE ADDRESS OF THE ECB  S21046
         MVC   EXTRACTO(EXSTP-EXTRACT1),EXTRACT1                 S21046
         LA    R8,TIOTADRS        ADDRESS TO RETURN TIOT ADDRESS S21046
*  MOVE THE EXTRACT PARAMETER LIST TO GET MAIN AREA              S21046
         EXTRACT (8),'S',FIELDS=(TIOT),MF=(E,EXTRACTO)           S21046
*   GET ADDRESS OF TIOT TO GET JOBNAME AND STEP NAME             S21046
         L     R8,TIOTADRS        GET ADDRESS OF TIOT            S21046
         CLC   UPPERFLD(MOVE8),OFFSET16(R8)                      S21046
*                                 IS THIS A PROCEDURE            S21046
         BE    ALLBLANK           NO  BRANCH                     S21046
         MVC   WTORLIST+OFFSET30(MOVE8),OFFSET16(R8)             S21046
*                                 MOVE THE STEP NAME FOR THE JOB S21046
         B     MVCMSG             SET UP REST OF MESSAGE         S21046
ALLBLANK MVC   WTORLIST+OFFSET30(MOVE8),OFFSET8(R8)              S21046
*                                 MOVE THE STEP NAME FOR JOB     S21046
MVCMSG   MVC   WTORLIST+OFFSET20(MOVE8),ZERO(R8)                 S21046
*                                 MOVE THE JOBNAME FOR MSG       S21046
         B     WTORFNSH           GO FINISH WTOR SETUP           S21046
EXECUTE  L     LINKREG,0(R9)
         EX    0,0(LINKREG)
         B     FDLD
MVECT    MVC   IEHEMAC1+3(1),PARAM4+1  NUMBER OF ENTRIES TO LST    4621
CLOSVTOC CLOSE ((R3))             CLOSE THE VTOC HERE
         ORG   *-18
         LA    1,FULLWORD
         LA    R3,DCB4VTOC
         ORG
         B     FDLD
STTRESET EQU   *
         L     SAVEREG,SAVEREG2+4 GET OLD SAVE AREA ADDRESS       M2838
         LM    14,12,12(13)       RESTORE REGS                    M2838
         L     15,DECB2
         L     15,4(15)                 GET ADDRESS OF IEHRESET
         BR    15                       RETURN TO THE FIRST LOAD
*                                                                S21046
*      INITIALIZE FOR AND ISSUE THE PROTECT MACRO                S21046
*                                                                S21046
SVCPRO   EQU   *                                                 S21046
         PROTECT  IEHEMAC1        ISSUE THE PROTECT SVC          S21046
         MVI   ERRFLD,PROMASK     INDICATE PROTECT RETURN        S21046
         STC    RTNREG,ERRFLD+OFFSET1 STORE RETURN CODE          S21046
DECODE   EX    ZERO,PROTAB(RTNREG) INTERPRET THE RETURN CODE     S21046
MSGRTN   L     LINKREG,MSGRTNAD   LOAD ADDRESS OF MESSAGE WRITER S21046
         BALR  RETURN,LINKREG     GO TO MSG WRITER               S21046
         B     STTRESET           RETURN                         S21046
*                                                                S21046
*      THIS BRANCH TABLE IS USED TO INTERPRET THE RETURN CODE    S21046
*      FROM THE PROTECT MACRO                                    S21046
*                                                                S21046
PROTAB   B     OKPROTCT           NORMAL END FOR PROTECT         S21046
         LA    PARAMREG,MSG62     DUPLICATE KEYS IN MPDS         S21046
         B     DSNOTFD            PASWORD1 NOT FOUND IN MPDS     S21046
         B     CPASWD             NEED A CONTROL PASSWORD        S21046
         B     UNKERR             PRINT UNKNOWN ERROR MESSAGE    S21046
*                                 AN INVALID PARAMETER LIST WAS  S21046
*                                 PASSED TO PROTECT              S21046
         B     IOMPDS             I/O ERROR IN MPDS              S21046
         LA    PARAMREG,MSG66     THE MPDS IS FULL               S21046
         B     UNKERR             PRINT UNKNOWN ERROR MESSAGE    S21046
*                                 VALIDITY CHECK FOR BUFFER AREA S21046
*                                 FAILED                         S21046
         B     LOCATFAL           LOCATE MACRO FAILED            S21046
         B     OBTANFAL           OBTAIN MACRO FAILED            S21046
         LA    PARAMREG,MSG64     UNABLE TO UPDATE DSCB          S21046
         LA    PARAMREG,MSG60     MPDS DOES NOT EXIST            S21046
         LA    PARAMREG,MSG61     TAPE DATA SET NOT PROTECTED    S21046
         LA    PARAMREG,MSG64     ENQ FAILURE IN SCV98           S21046
*                                                                S21046
*      PROTECT WORKED, IF THE REQUEST WAS A LIST MOVE THE DATA   S21046
*      RECIEVED TO THE PROPER MESSAGE AND HAVE THE MESSAGES      S21046
*      PRINTED.                                                  S21046
*                                                                S21046
OKPROTCT CLI   IEHEMAC1,LISTMASK  IS THIS RETURN FOR LIST OP     S21046
         BNE   OKEND              DO NOT PRINT LISTING           S21046
         SR    R5,R5              ZERO REGISTER 5                S21046
         LH    R5,PARAM4          LOAD THE ACCESS COUNT          S21046
         CVD   R5,DBLWORD         CONVERT IT TO PACKED DECIMAL   S21046
         MVC   MSGOUT(MOVE24),ACCESSCT                           S21046
*                                 MOVE HEADING FOR ACCESS CNT    S21046
         UNPK  MSGOUT+OFFSET24(MOVE6),DBLWORD+OFFSET5(MOVE3)     S21046
*                                 UNPACK THE ACCESS COUNT        S21046
         OI    MSGOUT+OFFSET29,FIXBYTE FIX LAST BYTE OF COUNT    S21046
         SR    PARAMREG,PARAMREG  ZERO OUT REGISTER 0            S21046
         L     LINKREG,MSGRTNAD   ADDRESS OF MESSAGE WRITER      S21046
         BALR  RETURN,LINKREG     BRANCH TO THE MESSAGE WRITER   S21046
         MVC   MSGOUT(MOVE21),MODEBYTE MOVE HEADER FOR MOBE BYTE S21046
         TM    PARAM4+OFFSET2,CONTROL                            S21046
*                                 IS THIS A CONTROL PASSWORD     S21046
         BC    1,CONBIT           GO PUT IN CONTROL              S21046
         MVC   MSGOUT+OFFSET21(MOVE12),SECNDRY                   S21046
*                                 MOVE SECONDARY TO MESSAGE      S21046
         B     TESTNEXT           SKIP NEXT INSTRUCTION          S21046
CONBIT   MVC   MSGOUT+OFFSET21(MOVE12),CONTRL                    S21046
*                                 MOVE CONTROL TO MESSAGE        S21046
TESTNEXT TM    PARAM4+OFFSET2,RW  READ WRITE PROTECTION          S21046
         BC    1,RWBIT            IF SO GO MOVE READ/WRITE       S21046
         MVC   MSGOUT+OFFSET33(MOVE9),READ                       S21046
*                                 MOVE READ TO MESSAGE           S21046
         B     SR                 SKIP NEXT INSTRUCTION          S21046
RWBIT    MVC   MSGOUT+OFFSET33(MOVE10),READWRT                   S21046
*                                 MOVE READ/WRITE TO MESSAGE     S21046
SR       EQU   *                                                 S21046
         SR    PARAMREG,PARAMREG  ZERO OUT REGISTER 0            S21046
         L     LINKREG,MSGRTNAD   ADDRESS OF MESSAGE WRITER      S21046
         BALR  RETURN,LINKREG     BRANCH TO THE MESSAGE WRITER   S21046
         MVC   MSGOUT(MOVE19),DATAFILD MOVE DATA AREA HEADER     S21046
         MVC   MSGOUT+OFFSET19(MOVE77),PARAM4+OFFSET3            S21046
*                                 MOVE THE DATA TO MSGOUT        S21046
         SR    PARAMREG,PARAMREG  ZERO OUT REGISTER 0            S21046
         L     LINKREG,MSGRTNAD   ADDRESS OF MESSAGE WRITER      S21046
         BALR  RETURN,LINKREG     BRANCH TO THE MESSAGE WRITER   S21046
         B     OKEND              GO TO NORMAL END ROUTINE       S21046
*                                                                S21046
*      LOCATE MACRO FAILED DURING PROTECT, MOVE THE RETURN CODES S21046
*      TO THE ERROR MESSAGE AND HAVE MESSAGE PRINTED             S21046
*                                                                S21046
LOCATFAL MVC   MSGOUT(MOVE77),LOCATMSG MOVE THE LOCATE FAILMSG   S21046
         CVD   LISTREG,DBLWORD    CONVERT THE RETURN CODE TO DEC S21046
         UNPK  MSGOUT+OFFSET51(MOVE2),DBLWORD+OFFSET6(MOVE2)     S21046
*                                 UNPACK CODE TO BE PRINTED      S21046
         OI    MSGOUT+OFFSET52,FIXBYTE FIX LAST BYTE FOR PRINT   S21046
         CVD   ZERO,DBLWORD       CONVERT NUMBER INDEX SEARCHED  S21046
         UNPK  MSGOUT+OFFSET74(MOVE2),DBLWORD+OFFSET6(MOVE2)     S21046
*                                 UNPACK INDICES TO PRINT        S21046
         OI    MSGOUT+OFFSET75,FIXBYTE FIX NUMBER TO PRINT       S21046
MSGWRT   SR    PARAMREG,PARAMREG  ZERO OUT REG 0                 S21046
MSGRTNA  L     LINKREG,MSGRTNAD   LOAD ADDR OF MESSAGE WRITER  @VS30028
         BALR  RETURN,LINKREG     GO TO MESSAGE WRITER         @VS30028
         LA    PARAMREG,MSG64     UNABLE TO UPDATE DSCB        @VS30028
         B     MSGRTN             ISSUE MESSAGE                 YM07026
*                                                                S21046
*      OBTAIN MACRO FAILED DURING PROTECT, MOVE RETURN CODE TO   S21046
*      ERROR MESSAGE AND HAVE MESSAGE PRINTED                    S21046
*                                                                S21046
OBTANFAL MVC   MSGOUT(MOVE54),OBTANMSG MOVE MSG FOR OBTAIN FAILU S21046
         CVD   LISTREG,DBLWORD    CONVERT THE RETURN CODE TO DEC S21046
         UNPK  MSGOUT+OFFSET51(MOVE2),DBLWORD+OFFSET6(MOVE2)     S21046
*                                 UNPACK CODE TO BE PRINTED      S21046
         OI    MSGOUT+OFFSET52,FIXBYTE  SET UP LAST BYTE TO PRIN S21046
         B     MSGWRT             GET READY FOR WRITING OF MSG   S21046
*                                                                S21046
*      AN I/O ERROR OCCURRED WHILE ACCESSING PASSWORD DATA SET   S21046
*      ISSUE ERROR MESSAGE                                       S21046
*                                                                S21046
IOMPDS   LA    PARAMREG,MSG65     PRINT I/O ERROR MPDS MESSAGE   S21046
         MVI   ERRFLD+OFFSET1,CODE12  RETURN CODE OF 12          S21046
         B     MSGRTN             GO ISSUE MESSAGE               S21046
*                                                                S21046
*   KEY NOT FOUND IN PASSWORD DATA SET , INITIALIZE TO REISSUE   S21046
*   WTOR IF MAX ATTEMPTS NOT YET REACHED                         S21046
*                                                                S21046
DSNOTFD  LA    R5,RTNCODE8        WTOR FOR PASWORD2              S21046
         B     DOWNTABL           SET ADDRESS IN TABLE CORRECT   S21046
*                                                                S21046
*      EITHER THE CONTROL PASSWORD WAS NOT GIVEN WHEN REQUIRED   S21046
*      OR WAS INVALID, PREPARE TO ISSUE WTOR                     S21046
*                                                                S21046
CPASWD   LA    R5,RTNCOD12        WTOR FOR CPASWORD              S21046
DOWNTABL L     R9,FINUSE          LOAD ADDRESS IN TABLE          S21046
         LA    R6,FOUR            AMOUNT TO DECREMENT TABLE ADD  S21046
         SR    R9,R6              DECREMENT TABLE TO CALL SVC    S21046
*                                 WHEN WE ARE AT FDLD            S21046
         ST    R9,FINUSE          STORE THE NEW ADD IN FINUSE    S21046
         BR    R5                 GO WTOR FOR THE NECESSARY PASW S21046
*
SVCSCR   EQU   *
         BAL   RETURN,DEVCHECK         GO TO ADJUST DEVICETYPE @ZA06552
         SR    R0,R0                   ZERO WORK REG           @Z30AAAG
         ICM   R0,3,UCBAD1             GET UCB ADDR            @Z30AAAG
         SCRATCH  IEHEMAC1        SCRATCH A DATA SET
         B     SVCRET
SVCRENAM EQU   *
         BAL   RETURN,DEVCHECK         GO TO ADJUST DEVICETYPE @ZA06552
         SR    R0,R0                   ZERO WORK REG           @Z30AAAG
         ICM   R0,3,UCBAD1             GET UCB ADDR            @Z30AAAG
         RENAME  IEHEMAC1         RENAME A DATA SET
         B     SVCRET
SVCMEMB  EQU   *                  VERIFY THAT DATA SET EXISTS      1513
         BAL   RETURN,DEVCHECK         GO TO ADJUST DEVICETYPE @ZA06552
         SR    R0,R0                   CLEAR THE UCB REGISTER  @VS30028X
                                       SINCE NO VOL TO MOUNT   @VS30028
         RENAME IEHEMAC1          ISSUE RENAME TO SEE IF DATA SET  1513
         LA    R2,8               EXISTS                           1513
         CR    R2,15              IS RETURN CODE 8                 1513
         BNE   SVCRET             NO,BR TO STORE ERROR CODE        1513
         CLI   PARAM4+13,X'03'    DOES DATA SET EXIST              1513
         BNE   SVCRET             NO,BR TO STORE ERROR CODE        1513
         B     MEMBERET           BYPASS STORING ERROR CODE        1513
DEVCHECK STM   R3,R5,REGSAVE           SAVE REGISTERS          @ZA06552
         L     R2,IEHEMAC1+12          GET ADDR OF VOLLIST     @ZA06552
         SR    R3,R3                   ZERO REG 3              @ZA06552
         LH    R3,0(R2)                NUMBER OF VOLUMES       @ZA06552
         LTR   R3,R3                   ANY VOLUMES?            @ZA06552
         BZ    GG                      NO, RETURN              @ZA06552
         LA    R2,2(R2)         GET ADDR OF FIRST VOLUME ENTRY @ZA06552
AA       CLC   2(2,R2),USERASS   DIRECT ACC, USER ASSIGN NAME? @ZA06552
         BNE   FF                  NO, TEST NEXT VOLUME ENTRY  @ZA06552
         L     R4,16               GET ADDR TO CVT             @ZA06552
         L     R4,40(R4)           GET ADDR OF UCB LOOKUP TBL  @ZA06552
BB       SR    R5,R5               ZERO REG 5                  @ZA06552
         ICM   R5,3,0(R4)          GET UCB ADDR                @ZA06552
         TM    0(R4),X'FF'         END OF UCB LOOKUP TBL       @ZA06552
         BNO   CC                  NO, BRANCH                  @ZA06552
         TM    1(R4),X'FF'       REAL END OF UCB LOOKUP TBL?   @ZA06552
         BO    FF                  YES, TEST NEXT VOLUME ENTRY @ZA06552
CC       LTR   R5,R5               IS THIS A ZERO ENTRY        @ZA06552
         BZ    DD                  YES, BRANCH TO NEXT ENTRY   @ZA06552
         CLI   18(R5),X'20'        UCB A DIRECT ACCESS ?       @ZA06552
         BNE   DD                 NO, BRANCH TO NEXT UCB ENTRY @ZA06552
         CLC   28(6,R5),4(R2)     THE RIGHT VOLUME ?           @ZA06552
         BE    EE                  YES,BRANCH                  @ZA06552
DD       LA    R4,2(R4)            UPDATE TO NEXT UCB ENTRY    @ZA06552
         B     BB                  GO TO CHECK THIS UCB        @ZA06552
EE       MVC   0(4,R2),16(R5)  MOVE DEVICETYPE TO VOLUME ENTRY @ZA06552
FF       LA    R2,12(R2)           UPDATE TO NEXT VOLUME ENTRY @ZA06552
         BCT   R3,AA    BRANCH IF NOT ALL VOLUME ENTRY CHECKED @ZA06552
GG       LM    R3,R5,REGSAVE       RESTORE REGISTERS           @ZA06552
         BCR   15,RETURN           RETURN                      @ZA06552
REGSAVE  DS    3F                  SAVE AREA                   @ZA06552
USERASS  DC    X'2000'           LAST TWO BYTES OF DEVICETYPE  @ZA06552
SVCLNKX  LA    R3,PARAM4+2                                         UC0H
         ST    R3,IEHEMAC1+12
SVCCAT   EQU   *
         MVI   PARAM2+44,X'40'     PROVIDE BLANK DELIM FOR CATLG   3520
SVCINDX  EQU   *
         MVC   IEHERSAV(44),PARAM2  SAVE INDEX OR DSNAME
      CATALOG  IEHEMAC1     SVC TO BUILDX OR CATALOG
         MVC   PARAM2(44),IEHERSAV  RESTORE THE INDEX OR DSNAME
AFTERCAT EQU   *                                                 A25564
         CLC   FNSA+1(7),UNCATCON      IS REQUEST UNCATLG?       A25564
         BNE   SVC26RET                NO, STORE RETURN CODE FROMA25564
*                                      CATALOG SVC               A25564
         LA    R2,8                                              A25564
         CR    R2,15                   RETURN CODE FROM CATALOG  A25564
*                                      AN 8?                     A25564
         BE    MEMBERET                YES, BYPASS STORING CODE  A25564
         LA    R2,16                                             A25564
         CR    R2,15                   RETURN CODE FROM CATALOG  A25564
*                                      16?                       A25564
         BE    MEMBERET                YES,BYPASS STORING CODE @VS30028
SVC26RET EQU   *                                               @VS30028
         STC   RTNREG,ERRFLD           SAVE SVC RETURN CODE    @VS30028
MEMBERET SRL   RTNREG,2                XLATE ERROR RETURN CODE @VS30028
         L     R2,FINUSE               FROM CATALOG AND INDEX  @VS30028
         IC    RTNREG,0(RTNREG,R2)     TO MORE SPECIFIC CODES  @VS30028
         C     RTNREG,=F'9'             IS CATLGD D/S MISSNG   @Z40CSJH
         BNE   SHIFT                    BR IF NOT              @Z40CSJH
         C     R0,=F'56'                A SECURITY FAILURE?    @Z40CSJH
         BNE   SHIFT                    NO,BRANCH              @Z40CSJH
         LA    RTNREG,X'13'             PRINT MORE APPROP MSG  @Z40CSJH
SHIFT    SLL   RTNREG,2                FOR THIS OPERATION      @Z40CSJH
         EX    0,BRANTAB(RTNREG)       TAKE THE PROPER BRANCH  @VS30028
*                                                              @VS30028
SVCRET   EQU   *                                                 A25564
         EX    15,*+4                  POST THE ERROR RETURN     A25564
         OI    ERRFLD,X'00'            FROM THE SVC              A25564
         B     MEMBERET                CONTINUE PROCESSING       A25564
INDEX8   EQU   *                                                 A25564
         LA    RTNREG,OFFSET80(LISTREG) REG 15 = (REG 1) + 80  @Z40CSJH
         B     MEMBERET                 GO TRANSLATE CODE      @Z40CSJH
EXTRACT1 EXTRACT ,'S',FIELDS=(TIOT),MF=L                         S21046
EXSTP    EQU   *                  ADDRESSABILITY FOR END OF LIST S21046
*                                                                S21046
*      PROTECT MESSAGES                                          S21046
*                                                                S21046
*   THE FOLLOWING SEVEN MESSAGES ARE PARTS OF THE FORMATTED      S21046
*   LISTING OF THE USER DATA FIELD OF THE PASSWORD DATA SET      S21046
*                                                                S21046
ACCESSCT DC    CL24' DECIMAL ACCESS COUNT = '                    S21046
MODEBYTE DC    CL21' PROTECT MODE BYTE = '                       S21046
CONTRL   DC    CL12'CONTROL   , '                                S21046
SECNDRY  DC    CL12'SECONDARY , '                                S21046
READWRT  DC    CL10'READ/WRITE'                                  S21046
READ     DC    CL9'READ ONLY'                                    S21046
DATAFILD DC    CL19' USER DATA FIELD = '                         S21046
*   THIS WTOR IS ISSUED WHEN EITHER A PASSWORD IS FOUND TO BE    S21046
*   INCORRECT OR WAS NOT SUPPLIED ON A CONTROL CARD              S21046
*                                                                S21046
WTORLFRM WTOR  'IEH220A JOBNAMES, STEPNAME, CARDNAME, REPLY WITH PASSWOR
               RD',,8,ROUTCDE=(9),DESC=2,MF=L                    S21046
WTORSTOP EQU   *                                                 S21046
*                                                                S21046
*   THE FOLLOWING THREE MESSAGE PARTS ARE USED IN MESSAGES       S21046
*   IEH228I AND IEH220A TO INDICATE WHICH PASSWORD IS EITHER     S21046
*   INCORRECT OR WAS NOT SUPPLIED                                S21046
MSGE1    DC    C'PASWORD1'                                       S21046
MSGE2    DC    C'PASWORD2'                                       S21046
MSGE3    DC    C'CPASWORD'                                       S21046
*                                                                S21046
*   THIS DATA AREA IS USED TO FOLD ALL OPERATOR REPLIES TO       S21046
*   CAPITAL LETTERS                                              S21046
*                                                                S21046
UPPERFLD DC    X'4040404040404040'                               S21046
*                                                                S21046
*   THE FOLLOWING THREE MESSAGES ARE ISSUED WHEN THE OPERATOR    S21046
*   FAILS TO SUPPLY A CORRECT PASSWORD, THE LOCATE MACRO FAILS , S21046
*   OR THE OBTAIN MACRO FAILS RESPECTIVELY                       S21046
*                                                                S21046
OPFAIL   DC    C'IEH228I INVALID PASSWORD SPECIFIED  '          YA01695
LOCATMSG DC    C' IEH226I LOCATE MACRO FAILED.  LOCATE RETURN CODE'
         DC    C' =XX.  INDEXES SEARCHED =XX.'                   S21046
OBTANMSG DC    C' IEH227I OBTAIN MACRO FAILED.  OBTAIN RETURN CODE'
         DC    C' =XX.'                                          S21046
*
*                                 ----- MEMBER -----
*
MEMBER   DS    0F
         DC    A(SVCMEMB)                                          1513
         DC    X'00101200'                                         1513
*
*                                 ----- CATALOG -----
*
CATALOG  DS    0F
         DC    A(SVCCAT)
         DC    X'0102030005060708'
         DC    FL4'0'
         DC    FL4'0'                                            A31333
         DC    X'00001400'
         DC    X'0902050A0B0C0800'
*
*                        -----UNCATALOG-----
*
UNCATLG  DS    0F
         DC    A(SVCCAT)
         DC    X'010203000E000008'
         DC    FL4'0'
         DC    FL4'0'                                            A31333
         DC    X'00001400'                                       A31333
         DC    X'13020E0A0E0C0800'                             @Z40CSJH
*
*                           -----DELETE INDEX-----
*
DELETEX  DS    0F
         DC    A(SVCINDX)
         DC    X'010203040F060008'
         DC    FL4'0'
         DC    FL4'0'                                            A31333
         DC    X'00001400'                                       A31333
         DC    X'13020F000B0C0800'                             @Z40CSJH
*
*                            -----CONNECT -----
*
CONNECT  DS    0F
         DC    AL4(SVCLNKX)
         DC    X'0102030000060008'
         DC    FL4'0'
         DC    FL4'0'                                            A31333
         DC    X'00001400'                                       A31333
         DC    X'1302000A0B0C0800'                             @Z40CSJH
*
*                            ------ RELEASE ------
*
RELEASE  DS    0F
         DC    AL4(SVCINDX)
         DC    X'010203000F000008'
         DC    FL4'0'
         DC    FL4'0'                                            A31333
         DC    X'00001400'                                       A31333
         DC    X'13020F0A0C0C0800'                             @Z40CSJH
*
*                                 ----- BUILD ALIAS -----
*
BUILDA   DS    0F
         DC    AL4(SVCINDX)
         DC    X'010203000F060008'
         DC    FL4'0'
         DC    FL4'0'                                            A31333
         DC    X'00001400'                                       A31333
         DC    X'13020F130C0C0800'                             @Z40CSJH
*
*                                 ----- DELETE ALIAS -----
*
DELETEA  DS    0F
         DC    AL4(SVCINDX)
         DC    X'010203000F060008'
         DC    FL4'0'
         DC    FL4'0'                                            A31333
         DC    X'00001400'                                       A31333
         DC    X'13020F0A0C0C0800'                             @Z40CSJH
*
*                            ----- SCRATCH -----
*
SCRATCH  DS    0F
         DC    AL4(SVCSCR)
         DC    X'0110101500'                                     A57261
*
*                            ----- BUILDX -----
*
BUILDX   DS    0F
         DC    AL4(SVCINDX)
BLDXERRS DC    X'0102030005060008'
         DC    FL4'0'             RESERVED FOR EXPANSION
         DC    FL4'0'                                            A31333
         DC    X'00001400'        ENTRY NUMBER 14 IN BRANTAB     A31333
         DC    X'1302050A0B0C0800'                             @Z40CSJH
*
*                            ----- RENAME -----
*
RENAME   DS    0F
         DC    AL4(SVCRENAM)
         DC    X'0110101500'                                     A57261
*
*                                                                S21046
*                            ----- ADD -----                     S21046
*                                                                S21046
ADD      DS    0F                                                S21046
         DC    FL1'12'            PUT CODE IN PARM               S21046
         DC    FL3'1'             ADD CODE                       S21046
         DC    X'0B'              IS PASWORD2 IN PARAM LIST      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    A(SVCPRO)          ISSUE PROTECT SVC (SVC 98)     S21046
*                                                                S21046
*                            ----- DELETEP -----                 S21046
*                                                                S21046
DELETEP  DS    0F                                                S21046
         DC    FL1'12'            PUT CODE IN PARM               S21046
         DC    FL3'3'             DELETEP CODE                   S21046
         DC    X'0A'              IS PASWORD1 IN PARAM LIST      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    A(SVCPRO)          ISSUE PROTECT SVC (SVC 98)     S21046
*                                                                S21046
*                            ----- REPLACE -----                 S21046
*                                                                S21046
REPLACE  DS    0F                                                S21046
         DC    FL1'12'            PUT CODE IN PARM               S21046
         DC    FL3'2'             REPLACE CODE                   S21046
         DC    X'0A'              IS PASWORD1 IN PARAM LIST      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    X'0B'              IS PASWORD2 IN PARAM LIST      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    A(SVCPRO)          ISSUE PROTECT SVC (SVC 98)     S21046
*                                                                S21046
*                            ----- LIST -----                    S21046
*                                                                S21046
LIST     DS    0F                                                S21046
         DC    FL1'12'            PUT CODE IN PARM               S21046
         DC    FL3'4'             LIST CODE                      S21046
         DC    FL1'13'            FILL IN ADDRESS FOR LIST BUFF  S21046
         DC    FL3'0'             FILLER                         S21046
         DC    X'0A'              IS PASWORD1 IN PARAM LIST      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    A(SVCPRO)          ISSUE PROTECT SVC (SVC 98)     S21046
BADSCR   EQU   *
         DC    FL1'6'
         DC    FL1'1'
         DC    FL2'14'
         DC    FL1'6'
         DC    FL2'35'
         DC    FL1'15'
ABEOJ    DC    FL1'6'
         DC    FL1'1'
         DC    FL2'16'
         DC    FL1'6'
         DC    FL1'2'
         DC    FL2'17'
         DC    X'09000000'
OKEND    BAL   LISTREG,ENT2FDLD
NORMEND  EQU   *
         DC    FL1'6'              SELECT A MESSAGE
         DC    FL1'1'              SUPPRESS PRINT
         DC    FL2'9'              MSG NUM   = 9
         DC    FL1'6'
         DC    FL2'33'             INSERT FUNCTION NAME
         DC    FL1'5'              AND WRITE THE MSG
         DC    X'09000000'
         DS    0F
NOVOL    BAL   LISTREG,ENT2FDLD
VOLREM   EQU   *
         DC    FL1'6'
         DC    FL1'1'              SELECT AND SUPPRESS
         DC    FL2'11'             MESSAGE 11
         DC    FL1'6'
         DC    X'0200'             TACK ON MSG 17 AND  WRITE IT
         DC    FL1'17'
         DC    X'09000000'
*
*        FOR THE HANDLING OF UNKNOWN ERRORS......
*
         DS    0F
UNKERR   BAL   LISTREG,ENT2FDLD
OVERSIZE EQU   *
         DC    FL1'6'
         DC    FL3'12'            INFORM THE USER OF AN ERROR
         DC    FL1'6'             AND THE UNDEFINED CODE
         DC    FL1'1'
         DC    FL2'4'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)
INTERR8  EQU   *
         BALR  R7,0
         USING *,R7
         L     R10,CSECT2AD
         DROP  R7
         NC    PARAM4(2),PARAM4
         BZ    ENDERR
         LA    R3,12
         LH    R4,PARAM4          NUMBER OF VOLUMES
         MR    R2,R4              MULTIPLIED BY TWELVE
         BCTR  R4,ZERO
         STH   R4,PARAM4          DECREASE THE VOLUME COUNT
         LA    R3,PARAM4-6(R3)    POINT AT A VOLUME I.D.
         MVC   MSGOUT+12(6),0(R3) PUT THE VOL I.D. INTO MESSAGE
         MVI   MSGOUT+93,C'*'
         MVC   MSGOUT+94(2),MSGOUT+93
         IC    R2,7(R3)
         SLL   R2,2
         EX    0,*+4(R2)          GO TO THE PROPER ERROR ROUTINE
*                                                              @VS30028
* THE FOLLOWING BRANCH TABLE IS USED TO HANDLE VOLUME LIST     @VS30028
* RETURN CODES FROM RENAME AND SCRATCH AND THE INTERPRETED     @VS30028
* (VIA THE TABLE LABELED 'STOWTAB') STOW ERROR RETURN CODES.   @VS30028
*                                                              @VS30028
SCRESTBL EQU   *                       SCRATCH/RENAME/STOW     @VS30028X
                                       BRANCH TABLE            @VS30028
         B     NOERR
         B     ERR1
         B     ERR2
         B     ERR3
         B     IOERR
         B     NOVOLUME
         B     NOVOLUME
         B     DSOPEN                  SCRATCH/RENAME ISSUED   @VS30028X
                                       WHILE DATA SET WAS OPEN @VS30028
         B     RC8TEST                 GO TEST RETURN CODE     @Z40RSDSX
                                       FROM SCRATCH OR RENAME  @Z40RSDS
         DC    F'0'                    RESERVED FOR CODE X'09' @G32DSFS
         B     DSNOTOP                 DATA SET NOT OPENED     @VS30028
         B     PDSFULL                 DIRECTORY IS FULL       @Z40RSDS
         B     NOCORE                  GETMAIN FAILED IN STOW  @Z40RSDS
*                                                              @VS30028
NOERR    MVC   MSGOUT+91(6),MSGOUT+90
         CNOP  0,4
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL1'1'
         DC    FL1'28'
         DC    FL1'5'
         DC    FL1'6'
         DC    FL2'43'
         DC    FL1'23'
         DC    A(INTERR8)
         DS    0F
ERR1     EQU   *
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL1'1'
         DC    FL1'28'
         DC    FL1'28'
         DC    FL1'6'
         DC    FL2'43'
         DC    FL1'24'
         DC    A(INTERR8)
         DS    0F
ERR2     EQU   *
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL1'1'
         DC    FL1'28'
         DC    FL1'28'
         DC    FL1'6'
         DC    FL2'43'
         DC    FL1'25'
         DC    A(INTERR8)
         DS    0F
ERR3     EQU   *
         TM    IEHEMAC1+2,X'40'
         BO    SCR4
REN4     BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL1'1'
         DC    FL1'28'
         DC    FL1'28'
         DC    FL1'6'
         DC    FL2'43'
         DC    FL1'27'
         DC    A(INTERR8)
         DS    0F
SCR4     EQU   *
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL1'1'
         DC    FL1'28'
         DC    FL1'28'
         DC    FL1'6'
         DC    FL2'43'
         DC    FL1'26'
         DC    A(INTERR8)
         DS    0F
IOERR    BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL1'1'
         DC    FL1'28'
         DC    FL1'28'
         DC    FL1'6'
         DC    FL2'43'
         DC    FL1'29'
         DC    A(INTERR8)
         DS    0F
NOVOLUME EQU   *
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL1'1'
         DC    FL1'28'
         DC    FL1'28'
         DC    FL1'6'
         DC    FL2'43'
         DC    FL1'50'
         DC    A(INTERR8)
         DS    0F
DSOPEN   EQU   *                       SCR/RENAME RTN CODE 7   @VS30028
         BAL   LISTREG,ENT2FDLD        GET NEXT ENTRY IN TABLE @VS30028
         DC    FL1'6'                  PRINT A MESSAGE         @VS30028
         DC    FL1'1'                  SUPRESS PRINT           @VS30028
         DC    FL1'28'                 PRINT POSITION 28       @VS30028
         DC    FL1'28'                 MESSAGE NUMBER 28       @VS30028
         DC    FL1'6'                  PRINT A MESSAGE         @VS30028
         DC    FL2'43'                 PRINT POSITION 43       @VS30028
         DC    FL1'75'                 MESSAGE NUMBER 75       @VS30028
         DC    A(INTERR8)              ROUTINE ADDRESS         @VS30028
         DS    0F                      ALIGN TO FULLWORD       @VS30028
DSNOTOP  EQU   *                                                 A33374
         BAL   LISTREG,ENT2FDLD                                  A33374
         DC    FL1'6'                  PRINT A MESSAGE           A33374
         DC    FL1'1'                  SUPRESS PRINT             A33374
         DC    FL1'28'                 PRINT POSITION 28         A33374
         DC    FL1'28'                 MESSAGE NUMBER 28         A33374
         DC    FL1'6'                  PRINT A MESSAGE           A33374
         DC    FL2'43'                 PRINT POSITION 43         A33374
         DC    FL1'70'                 MESSAGE NO 70             A33374
         DC    A(INTERR8)                                        A33374
         DS    0F                      GET BOUNDRY ALIGNMENT     A33374
NOCORE   EQU   *                                                 A33374
         BAL   LISTREG,ENT2FDLD                                  A33374
         DC    FL1'6'                  PRINT A MESSAGE           A33374
         DC    FL1'1'                  SUPRESS PRINT             A33374
         DC    FL1'28'                 PRINT POSITION 28         A33374
         DC    FL1'28'                 MESSAGE NUMBER 28         A33374
         DC    FL1'6'                  PRINT A MESSAGE           A33374
         DC    FL2'43'                 PRINT POSITION 43         A33374
         DC    FL1'71'                 MESSAGE NO 71             A33374
         DC    A(INTERR8)                                        A33374
         DS    0F                      GET BOUNDRY ALIGNMENT     A33374
SCRERR8  EQU   *                       SCRATCH RAC ERROR       @Z40RSDS
         BAL   LISTREG,ENT2FDLD        GET NEXT ENTRY IN TABLE @Z40RSDS
         DC    FL1'6'                  PRINT A MESSAGE         @Z40RSDS
         DC    FL1'1'                  SUPRESS PRINT           @Z40RSDS
         DC    FL1'28'                 PRINT POSITION 28       @Z40RSDS
         DC    FL1'28'                 MESSAGE NUMBER 28       @Z40RSDS
         DC    FL1'6'                  PRINT A MESSAGE         @Z40RSDS
         DC    FL2'43'                 PRINT POSITION 43       @Z40RSDS
         DC    FL1'77'                 MESSAGE NUMBER 77       @Z40RSDS
         DC    A(INTERR8)              ROUTINE ADDRESS         @Z40RSDS
         DS    0F                      ALIGN TO FULLWORD       @Z40RSDS
PDSFULL  EQU   *                                                 YM5076
         BAL   LISTREG,ENT2FDLD                                  YM5076
         DC    FL1'6'                  PRINT A MESSAGE           YM5076
         DC    FL1'1'                  SUPRESS PRINT             YM5076
         DC    FL1'28'                 PRINT POSITION 28         YM5076
         DC    FL1'28'                 MESSAGE NUMBER 28         YM5076
         DC    FL1'6'                  PRINT A MESSAGE           YM5076
         DC    FL2'43'                 PRINT POSITION 43         YM5076
         DC    FL1'73'                 MESSAGE NUMBER 73         YM5076
         DC    A(INTERR8)                                        YM5076
         DS    0F                                                YM5076
*                                                              @Z40RSDS
* THE FOLLOWING CODE TRIES TO DETERMINE IF THE RETURN CODE OF  @Z40RSDS
* 8 WAS RETURNED BY SCRATCH OR RENAME.  IF THE FIRST 3 BYTES   @Z40RSDS
* OF IEHEMAC1 ARE EITHER X'410040' OR X'410050', THEN THE 8    @Z40RSDS
* WAS RETURNED BY SCRATCH.  IF THE FIRST 3 BYTES OF IEHEMAC1   @Z40RSDS
* ARE X'C10020', THEN THE 8 WAS RETURNED BY RENAME.            @Z40RSDS
*                                                              @Z40RSDS
RC8TEST  EQU   *                       TEST RETURN CODE OF 8   @Z40RSDS
         TM    IEHEMAC1+D2,SCRMASK     TEST IF SCRATCH OPTION  @Z40RSDS
         BO    SCRERR8                 BRANCH IF SCRATCH       @Z40RSDS
         CNOP  0,4                     ALIGN TO FULLWORD       @Z40RSDS
RENERR8  EQU   *                       RENAME RAC ERROR        @Z40RSDS
         BAL   LISTREG,ENT2FDLD        GET NEXT ENTRY IN TABLE @Z40RSDS
         DC    FL1'6'                  PRINT A MESSAGE         @Z40RSDS
         DC    FL1'1'                  SUPRESS PRINT           @Z40RSDS
         DC    FL1'28'                 PRINT POSITION 28       @Z40RSDS
         DC    FL1'28'                 MESSAGE NUMBER 28       @Z40RSDS
         DC    FL1'6'                  PRINT A MESSAGE         @Z40RSDS
         DC    FL2'43'                 PRINT POSITION 43       @Z40RSDS
         DC    FL1'78'                 MESSAGE NUMBER 78       @Z40RSDS
         DC    A(INTERR8)              ROUTINE ADDRESS         @Z40RSDS
         DS    0F                      ALIGN TO FULLWORD       @Z40RSDS
ENDERR   EQU   *
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL1'1'
         DC    FL2'30'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)
         DS    0F
RESCR8   EQU   *
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL1'1'
         DC    FL2'20'
         DC    FL1'6'
         DC    FL1'3'
         DC    FL2'5'
         DC    FL1'6'
         DC    FL1'3'
         DC    FL2'21'
         DC    FL1'6'
         DC    FL1'2'
         DC    FL2'7'
         DC    FL1'6'
         DC    FL2'10'
         DC    FL1'22'
         DC    A(INTERR8)
VTOCDCS  DS    0F                 ALLIGN THE LIST
         DC    A(TST4VTOC)
         DC    A(OPENVTOC)
         DC    FL1'6'
         DC    FL1'1'
         DC    FL2'36'                 PRINT MSG36
         DC    FL1'6'
         DC    FL1'2'
         DC    FL2'33'
         DC    FL1'6'
         DC    FL1'1'
         DC    FL1'30'
         DC    FL1'22'
         DC    FL1'6'
         DC    FL2'17'
         DC    FL1'32'
RPTVTOC  DC    A(GETADSCB)        GO GET A DSNAME
         DC    FL1'6'              PUT THE DATA SET
         DC    FL1'1'              NAME INTO THE
         DC    FL2'7'              MSG OUTPUT AREA
         DC    A(SVCSCR)          GO SCRATCH THE DATA SET
         DC    X'11001100'
TST4VTOC EQU   *
         BALR  R7,0
         USING *,R7
         L     R10,CSECT2AD
         DROP  R7
         TM    IEHEMAC1,X'40'      VOLUME PRESENT
         BZ    *+16                NO... BRANCH
         CLI   PARAM4+1,X'01'
         BH    TRUNCVOL            TOO MANY VOLUMES TRUNCATE THE LIST
         BE    VOLOK
         LA    LISTREG,BADSCR      NO VOLUME --- TERMINATE
         B     ENT2FDLD
TRUNCVOL LA    R3,1
         STH   R3,PARAM4
         LA    ZERO,35             INFORM THE USER
         L     LINKREG,MSGRTNAD    THAT THE VOLUME LIST
         BALR  RETURN,LINKREG      IS TRUNCATED
         OI    ERRFLD,X'08'            STORE RETURN CODE OF 8    A25564
VOLOK    B     FDLD
MEMBEROK CLI   PARAM4+13,X'03'    DOES THE DATA SET EXIST
         BNE   RESCR8             NO ..... BRANCH
OPENVTOC EQU   *
         BALR  R7,0
         USING *,R7
         L     R10,CSECT2AD
         DROP  R7
         MVI   JFCB,X'04'
         MVC   JFCB+1(43),JFCB    VTOC NAME TO THE JFCB
         MVI   JFCB+44,C' '
         MVI   JFCB+45,X'00'
         MVC   JFCB+46(147),JFCB+45         BUILD A JFCB
         MVC   JFCBVOL(6),PARAM4+6      PUT VOLUME ID IN JFCB
         MVI   JFCBVOL+6,C' '      BLANK IN THE NEXT VOL I.D.
         MVC   JFCBVOL-1(1),PARAM4+1    PUT VOLUME COUNT IN JFCB
         OI    JFCB+DWOFFSET,DNWBBIT   TURN ON THE 'DO NOT WRITE A38610
*                                      BACK' BIT IN THE JFCB     A38610
         LA    R3,DBLWORD
         IC    R4,EXLST2
         ST    R3,EXLST2
         STC   R4,EXLST2
         LA    R3,JFCB            FOR OPENJ
         ST    R3,DBLWORD
         MVI   DBLWORD,X'87'      MAKE IT THE LAST ENTRY
         TM    DUPSW,X'08'        WAS MEMBER SPECIFIED
         BZ    DOOPEN             NO ..... BRANCH
         MVC   JFCB(44),PARAM2    PUT DATA SET NAME IN THE JFCB
DOOPEN   OPEN  ((R3),INOUT),TYPE=J     OPEN VTOC OR DATA SET
         ORG   *-18
         LA    1,FULLWORD
         LA    R3,DCB4VTOC
         ORG
         TM    DCB4VTOC+48,X'10'       IS DCB OPEN               A43352
         BNZ   GOODOPEN                BRANCH AROUND ERROR       A43352
         LA    RTNREG,CODEA            SET  CODE TO X'0A' TO   @VS30028X
                                       CORRESPOND TO STOWTAB   @VS30028
         B     STOWCODE                GO TO ERROR ROUTINE       A43352
GOODOPEN EQU   *                                                 A43352
         OI    CTRLWORD,X'10'          INDICATE VTOC OPENED    @ZA01695
         LA    R2,VTOCERR
         XC    57(3,R3),57(R3)         PRESERVE                  M2422
*                                         IOB LENGTH BYTE WHEN   M2422
         O     R2,56(R3)                 RESETING                M2422
*                                          SYNAD IN THE DCB      M2422
         ST    R2,56(R3)               STORE SYNAD
         LA    R2,VTOCEND
         ST    R2,FULLWORD
         MVC   33(3,R3),FULLWORD+1     STORE EODAD
         TM    DUPSW,X'08'        WAS A MEMBER SPECIFIED
         BZ    FDLD               NO ..... BRANCH
DOSTOW   MVC   EOCORE+8(8),PARAM3  PUT NEWNAME IN PARAMETER LIST
         LA    1,DCB4VTOC         SET THE DCB ADDRESS
         LA    0,EOCORE           SET THE PARAMETER LIST ADDRESS
         LCR   0,0                SET DELETE ON
         TM    DUPSW,X'20'        WAS NEWNAME SPECIFIED
         BZ    STOW               NO ..... BRANCH              @ZA13801
         CLI   PARAM3-1,X'07'          NEWNAME EXCEEDS 8 CHAR  @ZA13801
         BH    INVALID                 YES, GIVE ERROR MSG     @ZA13801
         LCR   1,1                SET RENAME ON
STOW     STOW  (1),(0),A          STOW WITH DELETE OR CHANGE
         ST    15,DBLWORD         SAVE THE RETURN FROM STOW
         CLOSE ((R3))
         ORG   *-18
         LA    1,FULLWORD
         LA    R3,DCB4VTOC
         ORG
         L     15,DBLWORD          RESTORE THE ERROR CODE
         SRA   15,2               DID THE OPERATION COMPLETE OK
         BZ    OKEND              YES ..... BRANCH
         IC    15,STOWTAB(15)     TRANSLATE THE ERROR TO BE
STOWCODE EQU   *                                                 A33374
         STC   15,PARAM4+13       COMPATIBLE WITH RENAME RETURNS
         STC   15,ERRFLD               STORE RETURN CODE FOR       M737
*                                      PROG1 ANALYSIS ROUTINE      M737
         B     RESCR8             GO TO RENAME ERROR HANDLER
*
INVALID  CLOSE ((R3))                                          @ZA13801
         CLI   ERRFLD+2,X'08'          CC HIGHER OR EQUAL 8 ?  @ZA13801
         BNL   EQMORE                  WES,BRANCH              @ZA13801
         MVI   ERRFLD+2,X'08'          SET COND CODE TO 8.     @ZA13801
EQMORE   BAL   LISTREG,ENT2FDLD        PRINT MSG               @ZA13801
         DC    FL1'6'                                          @ZA13801
         DC    FL3'59'                 MSG 59.                 @ZA13801
         DC    X'09000000'                                     @ZA13801
*
*
GETADSCB EQU   *
         BALR  R7,0
         USING *,R7
         L     R10,CSECT2AD
         DROP  R7
         READ  VTOCDECB,SF,DCB4VTOC,PARAM2,'S',MF=E
         CHECK VTOCDECB
         OI    FORMATID,X'F0'
         TM    VTOCSW,X'01'
         BO    PAST4
         CLC   PARAM2(44),JFCB    SEARCH FOR 44HEX' 04'S '
         BNE   GETADSCB
         OI    VTOCSW,X'01'       SET VTOC SW
         B     GETADSCB
PAST4    CLI   FORMATID,X'F1'     CHECK FOR  A FORMAT 1
         BNE   GETADSCB
         TM    IEHESW5,X'02'       IS THIS A 'SYS' OPTION REQUEST
         BZ    NOTSYS                IF NOT---
         CLC   PARAM2(36),BADNAME  CHECK FOR NAME TO SCRATCH
         BE    NOTSYS                                              000E
         CLC   PARAM2(3),SYSNAME       DOES DSNAME BEGIN WITH SYS. 000E
         BNE   GETADSCB             IF NOT---
         CLI   PARAM2+D25,BLANK        IS COL 26 BLANK             WG0I
         BE    GETADSCB                BRANCHH IF YES.             000E
*                                                                  WG0I
*        CHECK FOR NUMERICS IN NNNNN AND .T OF SYSNNNNN.T          WG0I
*                                                                  WG0I
         LA    R,5                     INDEX THRU NNNNN FIELD      WG0I
NUMCHK   LA    S,PARAM2+2(R)           S PTS TO LAST IN FIELD      WG0I
         CLI   D0(S),CZERO             CHECK FOR LOW FOR NUMERIC   WG0I
         BL    GETADSCB                TOO LOW FOR NUMERIC         WG0I
         CLI   D0(S),C9                CHECK FOR HIGH FOR NUMERIC  WG0I
         BH    GETADSCB                TOO HIGH FOR NUMERIC        WG0I
         BCT   R,NUMCHK                LOOP THRU FIVE TIMES        WG0I
*                                                                  WG0I
         CLC   PARAM2+D8(L2),DOTTEE                                WG0I
         BNE   GETADSCB                NOT SYSTEM NAME             WG0I
*                                                                  WG0I
         CLI   PARAM2+18,C'A'          WAS DSCB CREATED BY VS2. YL026VC
         BE    NOTSYS                 NEW SYSTEM GENERATED NAME.   000E
         CLI   PARAM2+18,C'F'         WAS DSCB CREATED BY MFT.     000E
         BE    NOTSYS                  NEW SYSTEM GENERATED NAME   WG0I
         CLI   PARAM2+D18,VEE          WAS DSCB CREATED BY MVT     WG0I
         BNE   GETADSCB                BRANCH IF NOT.              000E
NOTSYS   EQU   *                       SYSTEM GENERATED NAME   @VS30028
         MVI   PARAM2-1,L43            SET THE LENGTH TO 43    @VS30028
         B     FDLD                    GO SCRATCH THE DATA SET @VS30028
DOTTEE   DC    C'.T  '                 TEMPORARY DS NAME           WG0I
D0       EQU   0                                                   WG0I
D2       EQU   2                                                   WG0I
D8       EQU   8                                                   WG0I
D18      EQU   18                                                  WG0I
D25      EQU   25                                                  WG0I
FIVE     EQU   5                                                   WG0I
CZERO    EQU   X'F0'                                               WG0I
C9       EQU   X'F9'                                               WG0I
L2       EQU   2                                                   WG0I
L43      EQU   43                      LENGTH OF 43            @VS30028
VEE      EQU   C'V'                                                WG0I
SYSNAME  DC    C'SYS '                                             000E
BADNAME  DC    CL18'AAAAAAAA.AAAAAAAA.'
         DC    CL18'AAAAAAAA.AAAAAAAA.'
*                                                              @VS30028
* THE FOLLOWING ROUTINE ANALYZES THE RETURN CODE IN THE        @VS30028
* SCRATCH VOLUME LIST.  THE POSSIBLE RETURN CODES ARE -        @VS30028
*                                                              @VS30028
*        X'01' - DATA SET NOT FOUND                            @VS30028
*        X'02' - PASSWORD ERROR OR                             @VS30028
*                TRIED TO SCRATCH A VSAM DATA SPACE            @VS30028
*        X'03' - PURGE DATE NOT PAST                           @VS30028
*        X'04' - I/O ERROR                                     @VS30028
*        X'05' - VOLUME NOT VERIFIED AS MOUNTED                @VS30028
*        X'06' - OPERATOR UNABLE TO MOUNT THE VOLUME           @VS30028
*        X'07' - DATA SET WAS OPEN                             @VS30028
*        X'08' - INVALID RAC AUTHORIZATION                     @Z40RSDS
*                                                              @Z40RSDS
VTOCRET  EQU   *
         BALR  R7,0
         USING *,R7
         L     R10,CSECT2AD
         DROP  R7
         CLI   PARAM4+STATUS,ZERO      TEST IF SUCCESSFUL      @VS30028
         BE    DSCBGONE                BRANCH IF SUCCESSFUL    @VS30028
         MVI   MSGOUT+113,C'*'
         MVC   MSGOUT+114(2),MSGOUT+113
         CLI   PARAM4+STATUS,PSWDERR   TEST IF D/S NOT FOUND   @VS30028X
                                       OR WRONG PASSWORD ERROR @VS30028
         BL    NOTFNDDS                BRANCH IF D/S NOT FOUND @VS30028
         BE    VTOC2                   BRANCH IF BAD PASSWORD  @VS30028
         CLI   PARAM4+STATUS,IOERROR   TEST IF PURGE DATE NOT  @VS30028X
                                       PAST OR I/O ERROR       @VS30028
         BL    VTOC3                   BR IF PURGE DATE ERROR  @VS30028
         BE    VTOC4                   BRANCH IF I/O ERROR     @VS30028
         CLI   PARAM4+STATUS,OPENDS    TEST IF NO DEVICE ERROR @VS30028X
                                       OR DATA SET WAS OPEN    @VS30028
         BL    VTOC56                  BRANCH IF NO DEVICE ERR @VS30028
         BE    VTOC7                   BRANCH IF DATA SET OPEN @Z40RSDS
         B     VTOC8                   INVALID RACF AUTHORITY  @G32DSFS
         DS    0F
DSCBGONE EQU   *
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'             SELECT A MESSAGE
         DC    FL1'1'             SUPPRESS THE WRITE
         DC    FL1'48'            PLACE IT IN PRINT POS. 48
         DC    FL1'5'             MESSAGE NUMBER 5
         DC    FL1'6'             SELECT A MESSAGE
         DC    FL2'63'            PLACE IT IN PRINT POS. 63
         DC    FL1'23'            MESSAGE NUMBER 23
         DC    FL1'4'
         DC    AL3(RPTVTOC)
NOTFNDDS EQU   *                                                 A50977
         BAL   LISTREG,ENT2FDLD                                  A50977
         DC    FL1'6'             SELECT A MESSAGE               A50977
         DC    FL1'1'             SUPPRESS THE WRITE             A50977
         DC    FL1'48'            PLACE IT IN PRINT POS 48       A50977
         DC    FL1'28'            USE MESSAGE NUMBER 28          A50977
         DC    FL1'6'             SELECT A MESSAGE               A50977
         DC    FL2'63'            PLACE IT IN PRINT POS 63       A50977
         DC    FL1'72'            USE MESSAGE NUMBER 72          A50977
         DC    FL1'4'                                            A50977
         DC    AL3(RPTVTOC)                                      A50977
VTOC2    EQU   *
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'             SELECT A MESSAGE
         DC    FL1'1'             SUPPRESS THE WRITE
         DC    FL1'48'            PLACE IT IN PRINT POS. 48
         DC    FL1'28'            WE ARE AFTER MSG NUMBER 28
         DC    FL1'6'             SELECT A MESSAGE
         DC    FL2'63'            PLACE IT IN PRINT POS. 63
         DC    FL1'25'            MSG NUMBER 25
         DC    FL1'4'
         DC    AL3(RPTVTOC)
VTOC3    EQU   *                       RETURN CODE OF X'03'    @VS30028
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'             SELECT A MESSAGE
         DC    FL1'1'             SUPPRESS THE WRITE
         DC    FL1'48'            PLACE IT IN PRINT POS. 48
         DC    FL1'28'            WE ARE AFTER MSG NUMBER 28
         DC    FL1'6'             SELECT A MESSAGE
         DC    FL2'63'            PLACE IT IN PRINT POS. 63
         DC    FL1'26'            MSG NUMBER 26
         DC    FL1'4'
         DC    AL3(RPTVTOC)
VTOC4    EQU   *                       RETURN CODE OF X'04'    @VS30028
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'             SELECT A MESSAGE
         DC    FL1'1'             SUPPRESS THE WRITE
         DC    FL1'48'            PLACE IT IN PRINT POS. 48
         DC    FL1'28'            WE ARE AFTER MSG NUMBER 28
         DC    FL1'6'             SELECT A MESSAGE
         DC    FL2'63'            PLACE IT IN PRINT POS. 63
         DC    FL1'29'            MSG NUMBER 29
         DC    FL1'4'
         DC    AL3(RPTVTOC)
VTOC56   EQU   *                       CODE OF X'05' OR X'06'  @VS30028
         BAL   LISTREG,ENT2FDLD        GET NEXT ENTRY IN TABLE @VS30028
         DC    FL1'6'                  SELECT A MESSAGE        @VS30028
         DC    FL1'1'                  SUPPRESS THE WRITE      @VS30028
         DC    FL1'48'                 PRINT POSITION 48       @VS30028
         DC    FL1'28'                 MESSAGE NUMBER 28       @VS30028
         DC    FL1'6'                  SELECT A MESSAGE        @VS30028
         DC    FL2'63'                 PRINT POSITION 63       @VS30028
         DC    FL1'76'                 MESSAGE NUMBER 76       @VS30028
         DC    FL1'4'                  FLAG BYTE               @VS30028
         DC    AL3(RPTVTOC)            ROUTINE ADDRESS         @VS30028
VTOC7    EQU   *                       RETURN CODE OF X'07'    @VS30028
         BAL   LISTREG,ENT2FDLD        GET NEXT ENTRY IN TABLE @VS30028
         DC    FL1'6'                  SELECT A MESSAGE        @VS30028
         DC    FL1'1'                  SUPPRESS THE WRITE      @VS30028
         DC    FL1'48'                 PRINT POSITION 48       @VS30028
         DC    FL1'28'                 MESSAGE NUMBER 28       @VS30028
         DC    FL1'6'                  SELECT A MESSAGE        @VS30028
         DC    FL2'63'                 PRINT POSITION 63       @VS30028
         DC    FL1'75'                 MESSAGE NUMBER 75       @VS30028
         DC    FL1'4'                  FLAG BYTE               @VS30028
         DC    AL3(RPTVTOC)            ROUTINE ADDRESS         @VS30028
VTOC8    EQU   *                       RETURN CODE OF X'08'    @Z40RSDS
         BAL   LISTREG,ENT2FDLD        GET NEXT ENTRY IN TABLE @Z40RSDS
         DC    FL1'6'                  SELECT A MESSAGE        @Z40RSDS
         DC    FL1'1'                  SUPPRESS THE WRITE      @Z40RSDS
         DC    FL1'48'                 PRINT POSITION 48       @Z40RSDS
         DC    FL1'28'                 MESSAGE NUMBER 28       @Z40RSDS
         DC    FL1'6'                  SELECT A MESSAGE        @Z40RSDS
         DC    FL2'63'                 PRINT POSITION 63       @Z40RSDS
         DC    FL1'77'                 MESSAGE NUMBER 77       @Z40RSDS
         DC    FL1'4'                  FLAG BYTE               @Z40RSDS
         DC    AL3(RPTVTOC)            ROUTINE ADDRESS         @Z40RSDS
VTOCERR  EQU   *                                                 A25564
         OI    ERRFLD,X'12'            STORE RETURN CODE OF 12   A25564
         CNOP  0,4                     ALIGN TO FULLWORD       @Z40RSDS
         BAL   LISTREG,ENT2FDLD
         DC    X'08000000'
         DC    FL1'6'
         DC    FL1'1'
         DC    FL2'29'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)
VTOCEND  BAL   LISTREG,ENT2FDLD
         DC    X'08000000'
         DC    FL1'6'             SELECT A MESSAGE
         DC    FL3'34'            EXIT THROUGH HERE
*
*        WE NEED AN INSERT HERE TO CLOSE THE DCB FOR THE VTOC
*
         DC    X'09000000'
BLDG     DS    0F
         DC    FL1'7'                  BRANCH TO EXECUTE           4621
         DC    AL3(MVECT)              MOVE ENTRIES TO LST         4621
         DC    A(SVCINDX)
         DC    X'0102030005060008'
         DC    FL4'0'
         DC    FL4'0'                                            A31333
         DC    X'00001400'                                       A31333
         DC    X'1302050A0B0C0800'                             @Z40CSJH
*
*        THE FOLLOWING BRANCH TABLE IS USED TO INTERPRET THE
*        ERROR RETURNS FROM CATALOG AND INDEX  BY CONTROLLING
*        THE PROGRAM FLOW UPON RETURN FROM THE SUPERVISOR
*                                 CODE      AFTER TRANSLATION
BRANTAB  B     UNKERR              00       UNDEFINED ERROR
         B     OKEND               01       NORMAL E.O.J.
         B     NOVOL               02       CVOL IS NOT AVAILIBLE
         B     INDEX8              03       CHECK CODE IN REG 1
         B     IXNOTMT             04       INDEX NOT EMPTY
         B     NEEDINDX            05       HAVE TO BUILD AN INDEX
         B     NOSPACE             06       RAN OUT OF SPACE
         B     GDGNAME             07       BAD NAME FOR A GENERATION
         B     IOERRCAT            08       I/O ERROR IN SYSCATLG
         B     DSFOUNDX            09       NAME IS A DATA SET
         B     IXFOUNDX            0A       WE FOUND AN INDEX
         B     NOTIXSTR            0B       NOT AN INDEX STRUCTURE
         B     SYNTAX              0C       ERROR IN SYNTAX
         B     SCANIT              0D       BUILD ANOTHER INDEX
         B     DSNOTCAT            0E       DATA SET NOT CATALOGED
         B     XNOTHERE            0F       INDEX DOES NOT EXIST
         B     RESCR8              10       ERROR FROM SVC 29 OR 30
         B     VTOCRET             11       RETURN FROM SCRATCH VTOC
         B     MEMBEROK            12       OK TO PROCESS MEMBER
         B     APROBLEM            13       UNDETERMINABLE ERROR
         B     VTOCDOS             14       VTOC IS DOS          A31333
         B     BADVOLST            15       RC=12 FROM SVC29,30  A57261
*
*
APROBLEM DS    0F
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'              INFORM THE USER THAT
         DC    FL3'37'             EITHER HIS REQUEST IS NOT
         DC    FL1'6'              PROPER OR THAT IT CANNOT
         DC    FL1'1'              BE SERVICED WITHIN THE
         DC    FL2'54'             PRESENT CATALOG STRUCTURE
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        TAKE THE ABNORMAL EXIT
*
*
DSFOUNDX DS    0F                 FOR ALLIGNMENT
         BAL   LISTREG,ENT2FDLD     BEGONE...TO DECODE THIS LIST
         DC    FL1'6'
         DC    FL3'37'            INFORM THE USER THAT
         DC    FL1'6'             A DATA SET HAVING
         DC    FL1'1'             THIS NAME IS CATALOGED
         DC    FL2'7'             AND THIS INDEX CANNOT
         DC    FL1'6'             BE BUILT FOR HIM
         DC    FL1'3'
         DC    FL2'38'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)       TAKE THE ABNORMAL EXIT
*
*
IXNOTMT  DS    0F                  FOR ALLIGNMENT
         BAL   LISTREG,ENT2FDLD    BE GONE.....TO DECODE THIS LIST
         DC    FL1'6'
         DC    FL3'37'             INFORM THE USER THAT
         DC    FL1'6'              THE SPECIFIED INDEX
         DC    FL1'1'              IS NOT EMPTY OR HAS
         DC    FL2'39'             AN ALIAS.
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        TAKE THE ABNORMAL EXIT
*
*
NOSPACE  DS    0F
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL3'37'             INFORM THE USER THAT
         DC    FL1'6'              SYSCATLG DATA SET
         DC    FL1'1'              HAS RUN OUT OF SPACE
         DC    FL2'40'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        TAKE THE ABNORMAL EXIT
*
*
IXFOUNDX DS    0F
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL3'37'             INFORM THE USER THAT
         DC    FL1'6'              THE NAME THAT IS
         DC    FL1'1'              SPECIFIED IS CURRENTLY
         DC    FL2'7'              AN EXISTING INDEX LEVEL
         DC    FL1'6'
         DC    FL1'3'
         DC    FL2'43'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        ABNORMAL EXIT
*
*
SYNTAX   DS    0F
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL3'37'             INFORM THE USER THAT A
         DC    FL1'6'              SYNTAX ERROR EXISTS IN
         DC    FL1'1'              THE SPECIFIED NAME
         DC    FL2'46'
         DC    XL4'06030007'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        ABNORMAL EXIT
*
*
GDGNAME  DS    0F                       ALLIGN THE LIST
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'              INFORM THE USER THAT
         DC    FL3'37'
         DC    FL1'6'              HE HAS ATTEMPTED TO
         DC    FL1'1'              CATALOG A DATA SET
         DC    FL2'7'              NAME THAT IS NOT
         DC    FL1'6'              VALID...
         DC    FL1'3'
         DC    FL2'41'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        TAKE THE ABNORMAL EXIT
*
*
IOERRCAT DS    0F
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'              INFORM THE USER THAT
         DC    FL3'37'
         DC    FL1'6'              A PERMANENT ERROR
         DC    FL1'1'              WAS ENCOUNTERED IN
         DC    FL2'29'             THE SYSCTLG DATA SET
         DC    FL1'6'
         DC    FL1'3'
         DC    FL2'42'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        ABNORMAL EXIT
*
*
DSNOTCAT DS    0F
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL3'37'             INFORM THE USER THAT
         DC    FL1'6'              THE SPECIFIED DATA
         DC    FL1'1'              SET NAME IS NOT
         DC    FL2'7'              CATALOGED.
         DC    FL1'6'
         DC    FL1'3'
         DC    FL2'47'
         DC    FL1'4'              TAKE THE ABNORMAL EXIT
         DC    AL3(ABEOJ+4)
*
*
XNOTHERE DS    0F                  INFORM THE USER THAT
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'              THE INDEX THAT HE
         DC    FL3'37'             HAS SPECIFIED DOES
         DC    FL1'6'              NOT EXIST.
         DC    FL1'1'
         DC    FL2'44'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        ABNORMAL EXIT
*
*
NOTIXSTR DS    0F
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL3'37'
         DC    FL1'6'              NO SUCH INDEX CAN
         DC    FL3'44'             EXIST  THE  NECESSARY
         DC    FL1'6'              INDEX STRUCTURE  IS
         DC    FL1'1'              TERMINATED WITH A DATA
         DC    FL2'45'             SET.
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        ABNORMAL EXIT
*                                                                A31333
*     VTOC NOT CONVERTED FROM DOS TO OS , ISSUE MESSAGE IEH230I  A31333
*                                                                A31333
VTOCDOS  DS    0F                                                A31333
         BAL   LISTREG,ENT2FDLD                                  A31333
         DC    FL1'6'                                            A31333
         DC    FL3'37'            PRINT MESSAGE 37               A31333
         DC    FL1'6'                                            A31333
         DC    FL3'68'            PRINT MESSAGE 68               A31333
         DC    FL1'6'                                            A31333
         DC    FL1'1'             SUPRESS PRINT                  A31333
         DC    FL2'69'            PRINT MESSAGE 69               A31333
         DC    FL1'4'                                            A31333
         DC    AL3(ABEOJ+4)                                      A31333
*
BADVOLST EQU   *                                                 A57261
         BAL   LISTREG,ENT2FDLD                                  A57261
         DC    FL1'6'             PRINT A MESSAGE                A57261
         DC    FL1'1'             SUPRESS THE PRINT              A57261
         DC    FL2'20'            MESSAGE NUMBER 20              A57261
         DC    FL1'6'             PRINT A MESSAGE                A57261
         DC    FL1'3'                                            A57261
         DC    FL2'5'             MESSAGE NUMBER 5               A57261
         DC    FL1'6'             PRINT A MESSAGE                A57261
         DC    FL1'3'                                            A57261
         DC    FL2'21'            MESSAGE NUMBER 21              A57261
         DC    FL1'6'             PRINT A MESSAGE                A57261
         DC    FL1'2'                                            A57261
         DC    FL2'7'             MESSAGE NUMBER 7               A57261
         DC    FL1'6'             PRINT A MESSAGE                A57261
         DC    FL2'10'            PRINT POSITION                 A57261
         DC    FL1'22'            MESSAGE NUMBER 22              A57261
         DC    A(VOLERMSG)                                       A57261
VOLERMSG EQU   *                                                 A57261
         BALR  R7,0                                              A57261
         USING *,R7                                              A57261
         L     R10,CSECT2AD                                      A57261
         DROP  R7                                                A57261
         MVI   MSGOUT+93,C'*'                                    A57261
         MVC   MSGOUT+94(2),MSGOUT+93                            A57261
         BAL   LISTREG,ENT2FDLD                                  A57261
         DC    FL1'6'             PRINT A MESSAGE                A57261
         DC    FL1'1'             SUPRESS PRINT                  A57261
         DC    FL1'28'            PRINT POSITION 28              A57261
         DC    FL1'28'            MESSAGE NUMBER 28              A57261
         DC    FL1'6'             PRINT A MESSAGE                A57261
         DC    FL2'43'            PRINT POSITION 43              A57261
         DC    FL1'74'            MESSAGE NUMBER 74              A57261
         DC    A(ENDERR)                                         A57261
*
*        THIS ROUTINE IS USED TO BUILD THE NECCESSARY INDECIES
*        THAT ARE REQUIRED TO SERVICE A REQUEST FOR CATALOGING
*        A DATA SET UNDER AN INDEX STRUCTURE THAT DOES NOT PRESENTLY
*        EXIST ON THE CONTROL VOLUME BEING ACTED UPON.
*
NEEDINDX ST    R9,FLSTADDR        SAVE THE ORIGINAL SVC LOCATION
         LA    R3,PARAM2          START ADDRESS
         LA    R4,1               INCREMENT
         LA    R5,PARAM2+43       STOPADDRESS
         STM   R3,R5,IEHESTT      STORE SEARCH DATA
SCANIT   LM    R3,R5,IEHESTT      RETRIEVE SEARCH DATA
         BXH   R3,R4,FRECOVER     TEST FOR END OF SEARCH
         ST    R3,IEHESTT         STORE SEARCH DATA
         MVC   IEHECODE(1),0(R3)  SAVE THE CHARACTER
         CLI   0(R3),C'.'         IS IT A PERIOD
         BNE   CHKPAREN           NO .... BRANCH
         MVI   0(R3),C' '         REPLACE WITH A BLANK
         MVC   IEHEMAC2(4),BLDXBITS
         B     BUILDIT            GO BUILD THE INDEX
CHKPAREN CLI   0(R3),C'('         IS IT A LEFT PARENTHESIS
         BNE   SCANIT             NO .... BRANCH
         B     GDGNAME       DO NOT BUILD A GENERATION INDEX
         MVC   IEHEMAC2(4),BLDGBITS
BUILDIT  EQU   *
         MVC   IEHEMAC2+4(12),IEHEMAC1+4
         TM    IEHEMAC1,X'80'     ARE WE USING A CONTROL VOLUME
         BZ    *+8                NO ..... BRANCH
         OI    IEHEMAC2,X'80'     BUILDX ON A CONTROL VOLUME
         MVC   IEHERSAV(44),PARAM2      SAVE THE INDEX NAME
      CATALOG  IEHEMAC2                 SVC TO BUILD THE INDEX
         MVC   PARAM2(44),IEHERSAV      RESTORE THE INDEX NAME
         MVC   0(1,R3),IEHECODE    RESTORE THE DELIMITER
         LA    R3,BXMATRIX
         ST    R3,FINUSE          POINT AT THE MATRIX TO BE USED
         B     AFTERCAT                FOR ERROR ANALYSIS..BEGONEA25564
UNCATCON DC    C'UNCATLG'                                        A25564
BXMATRIX DC    X'0D02030000060008'
         DC    FL4'0'             RESERVED FOR EXPANSION
         DC    FL4'0'                                            A31333
         DC    X'00001400'                                       A31333
         DC    X'0902050D0B0C0800'
*
* CONSTANTS AND ADDRESSES                                      @VS30028
*
*                                                              @VS30028
*        THE FOLLOWING TABLE INTERPRETS THE STOW ERROR RETURN  @VS30028
*        CODES TO CORRESPOND TO THE SCRATCH/RENAME ERROR CODE  @VS30028
*        BRANCH TABLE LABELED 'SCRESTBL'. THE INTERPRETED      @VS30028
*        CODES X'0A' - X'0C' ARE USED BY STOW ALONE.           @Z40RSDS
*                                                              @VS30028
*        STOW                              CORRESPONDING       @VS30028
*        RETURN                            ERROR CODE IN       @VS30028
*        CODE    EXPLANATION               COMMON TABLE        @VS30028
*                                                              @VS30028
*        X'04'   NEW NAME ALREADY EXISTS   X'03'               @VS30028
*        X'08'   NAME NOT FOUND            X'01'               @VS30028
*        X'0C'   DIRECTORY IS FULL         X'0B'               @Z40RSDS
*        X'10'   I/O ERROR OCCURRED        X'04'               @VS30028
*        X'14'   DCB NOT OPENED            X'0A'               @VS30028
*        X'18'   GETMAIN UNSUCCESSFUL      X'0C'               @Z40RSDS
*                                                              @VS30028
STOWTAB  EQU   *-1
         DC    X'03010B040A0C'    INTERPRET STOW RETURN CODE   @Z40RSDS
BLDXBITS DC    X'04400000'        BUILD INDEX
BLDGBITS DC    X'04200005'        BUILD GENERATION - FIVE ENTRIES
DUMP     DCB   DDNAME=DUMPIT,DSORG=PS,RECFM=VBA,BLKSIZE=1632,          X
               LRECL=125,MACRF=(W)
         LTORG                                                 @ZA13801
         EJECT                                                 @VS30028
DSECT    DSECT
IEHECHAR DS    C         CHARACTER TO BE SCANNED FOR
IEHECOND DS    C         CONDITION CODE TO STOP ON
IEHECODE DS    C
IEHEARGL DS    C
IEHESTT  DS    F
IEHESTP  DS    F
IEHEFND  DS    F
IEHETBL  DS    F
IEHEFUN  DS    F
IEHESCNX DS    3F
IEHEMAC1 DS    7F                 PARAMETER LIST                 S21046
IEHEMAC2 DS    6F
IEHESTIN DS    F
IEHENDIN DS    F
IEHECCNT DS    2C
IEHESW1  DS    C
DUPSW    DS    2C                 SWITCHES FOR TEST OF DUPLICATE S21046
*                                 PARAMETERS                     S21046
PPARAMSW DS    CL2
IEHESW5  DS    C
IEHESW6  DS    C
IEHECALL DS    F
         DS    0D
DBLWORD  DS    F
FULLWORD DS    F
         DS    0D
DECB1    DS    24X
DECB2    DS    24X
VOLISTAD DS    F
MATRIXIU DS    F
VDTIU    DS    F
VOLPAREN DS    FL2
VSRCM    DS    2X
VDSA     DS    X
DFLG     DS    X                                                   BS0H
DFLAG    DS    X                                                   BS0H
         DS    0F
FLSTADDR DS    F
FNSA     DS    12X
KWSA     DS    12X
SCANRET  DS    F
MARESAR  DS    72X
IEHESPC  DS    XL20
         DS    XL20
IEHERSAV DS    64X
PASSUNIT DS    5X                                                  DT0I
MOUNTSW  DS    X                                                   DT0I
TABLEAD  DS    F                  ADDRESS OF DEVICE NAME TABLE     I276
IEHESW2  DS    X                  PROTECT SWITCHES               S21046
*                                 BIT 1=1 IF WE ARE TO PRINT     S21046
*                                        CONTROL CARDS           S21046
*                                 BIT 3=1 INDICATES FIRST QUOTE  S21046
*                                        IN SCAN FOR DATA        S21046
*                                        OPERATION IS FOUND      S21046
*                                 BIT 4= 1 IF WTOR SETUP IS DONE S21046
*                                 BIT 6 =1 IF FIRST PARM ENTRY   S21046
*                                 WAS VALID                      S21046
*                                 BIT 7 =1 IF INVALID ENTRY MSG  S21046
*                                 HAS BEEN PRINTED               S21046
PASWDCT1 DS    1X                 NUMBER OF PROMPTS FOR PASWORD1 S21046
PASWDCT3 DS    1X                 NUMBER OF PROMPTS FOR CPASWORD S21046
TOTALPS  DS    1X                 TOTAL NO OF OPERATOR REPLIES   S21046
WTORECB  DS    1F                 EVENT CONTROL BLOCK FOR WTOR   S21046
TIOTADRS DS    1F                 TIOT ADDRESS FOR WTOR          S21046
CCNAME   DS    8C                 NAME OFF CONTROL CARD          S21046
WTORLIST WTOR  'IEH220A JOBNAMES, STEPNAME, CARDNAME, REPLY WITH PASSWOX
               RD',,8,WTORECB,ROUTCDE=(9),DESC=2,MF=L            S21046
EXTRACTO EXTRACT ,'S',FIELDS=(TIOT),MF=L                         S21046
DCBAREA  DS    0F
UTINDCB  DCB   DSORG=PS,MACRF=(GM)
CODELIST DC    C'.,=()   '        SPECIAL CHARACTERS CODED BY SCAN
MAXLINES DC    FL2'45'             MAXIMUM LINES PER PAGE
LINECNT  DC    FL2'0'              LINE COUNT FIELD
SKIP21   DC    X'8B'               SKIP TO 1 COMMAND
WRITEHDR DC    X'19'               SPACE 3 AFTER PRINT
HEADER   DC    CL30'MODIFY....VERSION BETA-1......'
         DC    CL30'LAST UPDATED....JULY 11  10 PM'
         DC    CL30'                              '
         DC    CL30'               PAGE 001       '
PAGENUM  EQU   HEADER+110
DDNAMES  DS    3CL8                     FOR THREE DD NAMES
UTOUTDCB DCB   DSORG=PS,MACRF=(PM)
         DS    2F
CTRLWORD DS    0F       REG 13 SAVED, SWITCHES FOR VOLUME MOUNTING
IEHESAT  DS    150X
READBASE DC    F'0'
ERRFLD   DS    0CL8          FOR POSTING OF ERROR RETURN CODES
PARAM1   DS    44X
         DS    F              FOR  LENGTH OF  PARAM2
PARAM2   DS    44X
         DS    F                   FOR LENGTH OF PARAM3
PARAM3   DS    44X
PARAM5   DS    2F                 CPASWORD PARAMETER             S21046
PARAM6   DS    151F               VOL IDS PARAMETER              S21046
PARAM7   DS    2F                 PASSWORD2 PARAMETER            S21046
PARAM8   DS    80X                DATA PARAMETER                 S21046
DUMMY    DS    1F                 TEMPORARY STORAGE FIELD        S21046
PROTCTAD DS    1F                 ADDRESS OF WHERE TO PUT NEXT   S21046
*                                 VOL ID IN PARAM6 FOR PROTECT   S21046
FINUSE   DS    F                   ADDR OF DC LIST IN USE
DCSAVEAD DS    F                   SAVE AREA FOR ADDR OF DC LIST
INPUT    DS    40F                 TWO CARD INPUT AREA
MSGOUT   DS    30F                 MSG OUTPUT AREA
         DS    F
         DS    0D
PARAM4   DS    151F                FOR A VOLUME LIST
EOCORE   EQU   *-12
         ORG   PARAM4+20
VTOCDCB2 DS    0F
DCB4VTOC DCB   DDNAME=VTOC,                                            .
               DSORG=PS,                                               .
               MACRF=R,                                                .
               KEYLEN=44,                                              .
               BLKSIZE=1,                                              .
               RECFM=U,                                                .
               EODAD=VTOCEND,                                          .
               SYNAD=VTOCERR,                                          .
               EXLST=VTOCEND
JFCB     DS    24D
*        THE FOLLOWING ORG STATEMENT IS FLAGGED                  YM5077
         ORG
SAVEREG2 DS    72X                SECONDARY SAVE AREA             M2838
SAVEREG3 DS    72X                THIRD LEVEL SAVE AREA           M2838
         ORG
VTOCSW   EQU   JFCB+50
VTOCDECB EQU   JFCB+60
JFCBVOL  EQU   JFCB+118
EXLST2   EQU   DCB4VTOC+36
FORMATID EQU   PARAM2+44
BLANK    EQU   64
READTOO  EQU   INPUT+72
COL16    EQU   READTOO+15
COL72    EQU   READTOO+71
MIDDLE   EQU   READTOO-1
WARE2PUT EQU   IEHEMAC1-4
UCBAD1   EQU   IEHESAT+16
         END
