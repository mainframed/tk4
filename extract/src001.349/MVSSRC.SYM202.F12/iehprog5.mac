* /* START OF SPECIFICATIONS ***                                      *
*01* PROCESSOR = ASSEM;                                               *
**** END OF SPECIFICATIONS ***/                                       *
   TITLE  'IEHPROGM - IEHPROG5  VOLUME MOUNTING INTERFACE'
**********************************************************************
*                                                                     *
* MODULE NAME -- IEHPROG5                                      YL026VC*
*                                                              YL026VC*
* DESCRIPTIVE NAME -- IEHPROGM VOLUME MOUNTING INTERFACE       YL026VC*
*                                                              YL026VC*
* COPYRIGHT -- NONE                                            YL026VC*
*                                                              YL026VC*
* STATUS -- 'IEHPROG5' OS/VS2 PROLOGUE MODIFICATION            YL026VC*
*    NOVEMBER 1972                                             YL026VC*
*                                                              YL026VC*
* FUNCTION -- THIS MODULE INTERFACES THE ROOT SEGMENT 'IEHPROG1'      *
*    WITH THE VOLUME MOUNTING ROUTINE 'IEHMVSSF'.  IT CREATES THE     *
*    DCB THAT IS USED TO READ THE VTOC WHEN APPLICABLE OR THE         *
*    DCB TO READ THE DIRECTORY OF A PDS WHEN 'SCRATCH' OR 'RENAME'    *
*    MEMBER HAS BEEN SPECIFIED.  THIS MODULE PASSES CONTROL TO THE    *
*    MODULE 'IEHPROG2'.  IF THE VOLUME MOUNTING ROUTINE HAS           *
*    ENCOUNTERED NO PROBLEMS CONTROL GOES TO ENTRY POINT IEHPROG2     *
*    OTHERWISE CONTROL GOES TO IEHPROG7.  IEHPROG7 BRANCHES           *
*    IMMEDIATELY TO THE POINT OF CALL IN 'IEHPROG1'.                  *
*                                                                     *
* ENTRY POINTS --                                                     *
*         IEHPROG5 IS THE ENTRY TO THIS MODULE FROM 'IEHPROG1'.       *
*         RETURNAD IS THE ENTRY POINT BACK FROM A BRANCH TO THE       *
*    MODULE 'IEHMVSSF'.                                               *
*                                                                     *
* INPUT -- INPUT TO 'IEHPROG5' CONSISTS OF A COMMON COMMUNICATIONS    *
*    AND WORK AREA POINTED TO BY REGISTER 12 AND DESCRIBED BY THE     *
*    DSECT NAMED DSECT.                                               *
*                                                                     *
* OUTPUT -- OUTPUT OF IEHPROG5 CONSISTS OF MODIFICATIONS TO THE       *
*    COMMUNICATIONS AREA THAT WAS INPUT TO THE MODULE.                *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         IEHMVSSF IS CALLED TO MOUNT THE REQUIRED VOLUMES.           *
*         IEHPROG2 IS THE ENTRY REFERENCED IN 'IEHPROG2' IF THE       *
*    VOLUME MOUNTING ROUTINE HAS ENCOUNTERED NO PROBLEMS.             *
*         IEHPROG7 IS THE ENTRY REFERENCED IN 'IEHPROG2' IF THE       *
*    VOLUME MOUNTING ROUTINE ENCOUNTERED PROBLEMS.                    *
*                                                                     *
* EXITS, NORMAL -- 'IEHPROG5' BRANCHES TO 'IEHPROG2' VIA A BRANCH     *
*    ON REGISTER 15 WHCIH CONTAINS THE ADDRESS OF ENTRY IEHPROG2.     *
*                                                                     *
* EXITS, ERROR -- 'IEHPROG5' BRANCHES TO 'IEHPROG2' VIA A BRANCH      *
*    ON REGISTER 15 WHICH CONTAINS THE ADDRESS OF ENTRY IEHPROG7.     *
*                                                                     *
* TABLES/WORK AREA --                                                 *
*    DSECT IS THE COMMON COMMUNICATIONS AND WORK AREA POINTED         *
*    TO BY REGISTER 12.                                               *
*                                                                     *
* ATTRIBUTES -- THIS MODULE OPERATES AS ONE LEG OF AN OVERLAY         *
*    STRUCTURE.                                                       *
*                                                                     *
* CHARACTER CODE DEPENDENCY -- THIS MODULE MUST BE ASSEMBLED IN       *
*    EBCDIC AND RUN IN EBCDIC TO INSURE COLLATING SEQUENCE AND        *
*    INTERNAL REPRESENTATION OF CERTAIN CHARACTERS.                   *
*                                                                     *
* NOTES -- APPROXIMATELY 500 BYTES OF STORAGE ARE REQUIRED            *
*    FOR CODE.                                                        *
*                                                                     *
* CHANGE ACTIVITY -- FOLLOWS PROLOGUE                          YL026VC*
*                                                              YL026VC*
***********************************************************************
IEHPROG5 CSECT                                                    M2838
*A50820                                                          YM5077
*C200,10800                                                       M2838
*                                                                  I276
*0052                                                              BS0H
*2349025000,025600,026700                                          DT0I
* 016700                                                         A23466
*A700-784,1100,10900-10920                                      YL026VC
*C800-1000                                                      YL026VC
*C 031600                                                      @ZA01241
*A029020-029160                         (ORG)@YA14026-@XA16033-@ZA13784
*C028600-029000                         (ORG)@YA14026-@XA16033-@ZA13784
*                   *****     REGISTER  USAGE     *****
ZERO     EQU   0        ----------------------------------------
R1       EQU   12
R2       EQU   2
R3       EQU   3             REGISTERS ZERO THROUGH
R4       EQU   4             TEN ARE WORK REGISTERS
R5       EQU   5
R6       EQU   6             REGESTERS ELEVEN AND
R7       EQU   7             TWELVE ARE BASE REGISTERS
R8       EQU   8             FOR THE PROGRAN AND THE
R9       EQU   9             DUMMY SECTION RESPECTIVELY
R10      EQU   10
RB       EQU   11            THIRTEEN POINTS TO A REGISTER
RBD      EQU   12
SAVEREG  EQU   13            SAVE AREA
RETURN   EQU   14
LINKREG  EQU   15            FIFTEEN AND FOURTEEN ARE LINK
PARAMREG EQU   0             AND RETURN REGISTERS RESPECTIVELY
LISTREG  EQU   1        -----------------------------------------
AA       EQU   34
ZEROOUT  EQU   254                                               A23466
*
         USING IEHECHAR,R1
         SAVE  (14,12)            SAVE REGISTERS                  M2838
         BALR  RB,0                ESTABLISH ADDRESSABILITY
         USING *,RB
         ST    SAVEREG,SAVEREG2+4 KEEP OLD SAVE AREA              M2838
      GETMAIN  R,LV=176                GET CORE FOR VOLUME MOUNT
         LR    13,1
         LA    RETURN,RETURNAD     ESTABLISH A POINT OF RETURN
         L     LINKREG,MOUNTRTN    GET ADDRESS OF THE MOUNT ROUTINE
         NI    MOUNTSW,ZEROOUT         RESET SWITCH TO ZERO      A23466
         TM    CTRLWORD,X'08'      FIRST ENTRY TO ROUTINE
         BO    DDOK                NO .... BRANCH
         OI    CTRLWORD,X'08'      POST FIRST ENTRY
         TM    CTRLWORD,X'04'      WERE DDNAMES PASSED TO THIS JOB
         BO    PICKUPDD            YES ... BRANCH
         LA    R2,DDNAMES          SET ADDRESS OF DD NAMES
         ST    R2,DDNAMEAD         INTO THE TABLE
         MVI   DDNUMBER,X'02'      SET NUMBER OF DD NAMES
         B     DDOK
PICKUPDD L     R3,CTRLWORD         POINT AT ORIGINAL SAVE AREA
         L     R2,24(R3)           PICK UP REGISTER1
         L     R2,4(R2)            PICK UP LIST OF DDNAMES
         LH    R3,0(R2)            PICK UP LENGTH OF DD FIELD
         CH    R3,EIGHTY           TEN OR LESS DDNAMES
         BNH   TINYLIST            YES .... BRANCH
INSERTDD TM    CTRLWORD,X'02'      WAS SYSIN PASSED IN LIST
         BO    *+10                YES .... BRANCH
         MVC   AA(8,R2),DDNAMES    PUT SYSIN IN THE LIST
         TM    CTRLWORD,X'01'      WAS SYSOUT PASSED IN LIST
         BO    *+10                YES .... BRANCH
         MVC   AA+8(8,R2),DDNAMES+8     &UT SYSOUT IN LIST
         LA    R2,2(R2)            POINT PAST COUNT FIELD
         ST    R2,DDNAMEAD         ADDRESS OF LIST TO TABLE
         SRL   R3,3                DEVIDE BY EIGHT...LENGTH OF NAME
         STC   R3,DDNUMBER         STORE COUNT OF DDNAMES
         B     DDOK
TINYLIST EQU   *
         XC    DDLIST(80),DDLIST   CLEAR LIST AREA
         BCT   R3,*+10             DECREMENT LENGTH FIELD
         MVC   DDLIST(1),2(R2)     MOVE DDNAMES TO NORMAL LIST
         EX    R3,*-6              WITH THIS EXECUTE
         LA    R2,DDLIST-2         RESET REG 2
         LA    R3,80               SET COUNT FIELD FOR TEN
         B     INSERTDD
EIGHTY   DC    FL2'80'
DDOK     EQU   *
         LA    LISTREG,DDNUMBER   POINT TO NUMBER OF DD NAMES
         MVI   MOUNTNUM,X'01'      REQUEST 1 VOLUME MOUNT
         TM    IEHEMAC1,X'01'      TEST FOR TYPE OF OPERATION
         BO    MNTAVOL             BRANCH IF SCRATCH OR RENAME
         TM    IEHEMAC1,X'80'     WAS A CONTROL VOLUME PASSED
         BZ    NORMAL   NO...........BRANCH
         MVC   DEVTYPE1(10),PARAM3      SET CVOL INTO THE TABLE
         MVC   UNIT(5),PASSUNIT        MOVE IN SPECIFIC UNIT NAME  DT0I
*                                        IF SPECIFIED              DT0I
         MVI   REQUEST,X'80'       ASK FOR A MOUNT TO BE PERFORMED
         OI    MOUNTSW,X'01'           INDICATE CTLG SPECIFIED     DT0I
NOCTLG   BR    LINKREG                 GO TO VOLUME MOUNT RTN      DT0I
MNTAVOL  LA    R2,DEVTYPE1         ADDR OF VOL LIST DATA MGMT  @ZA13784
         LA    R3,PARAM4+2         ADDR OF VOL REQ LIST        @ZA13784
         LA    R4,UNIT             UNIT INFO IN VOL REQ LIST   @ZA13784
         LH    R5,PARAM4           NO OF ENTRIES AS LOOP COUNT @ZA13784
         STC   R5,MOUNTNUM         STORE NO INTO VOL REQ LIST  @ZA13784
MOVELOOP MVC   ZERO(10,R2),ZERO(R3) MOVE DEVTYPE, VOLSER AND   @ZA13784
         MVC   ZERO(5,R4),PASSUNIT UNIT TO VOL REQ LIST        @ZA13784
         LA    R2,17(R2)           NEXT ENTRY VOL REQ LIST     @ZA13784
         LA    R3,12(R3)           NXT ENT. VOL LST DATA MGMT  @ZA13784
         LA    R4,17(R4)           UNIT FIELD NEXT ENTRY       @ZA13784
         BCT   R5,MOVELOOP         BRANCH IF MORE ENTRIES      @ZA13784
         MVI   REQUEST,X'00'       ASK FOR NO MOUNTING
         BR    LINKREG
RETURNAD TM    REQUEST,X'02'       WAS THE VOLUME MOUNTED
         BO    NOMOUNT             NO BRANCH
         L     R2,DECB2                 GET SDDRESS OF ADCONS
         MVC   DECB2+4(4),28(R2)        SWITCH RETURN TO THE SECOND
         L     R2,TABADDR          POINT TO TABLE
         AH    R2,RTA1             ADD DISPLACEMENT
         L     R2,0(R2)            POINT TO DDNAME IN TIOT
         MVC   UCBAD1(2),14(R2)    PICK UP ADDR OF UCB
         TM    PPARAMSW,X'01'      TEST IF SCRATCH VTOC
         BZ    *+16               NO .... BRANCH
         MVC   VTOCDCB2(88),VTOCDCB       MOVE THE DCB         @ZA01241
         MVC   DCB4VTOC+40(8),0(R2)   PUT DD NAME IN DCB
NOMOUNT  L     1,TABADDR               GET ADDRESS OF CORE TO FREE
         LA    1,0(1)              CLEAR HIGH ORDER BYTE
         LH    0,0(1)              GET LENGTH TO BE FREED
         FREEMAIN  R,LV=(0),A=(1)  FREE CORE
         DELETE EP=DEVMASKT             DELETE DEVICE MASK TABLE   I276
         B     FREECORE
NORMAL   L     15,DECB2                NO MOUNTING NEEDED NOW
         MVC   DECB2+4(4),28(15)       SET RETURN ADDRESS TO UP1A
FREECORE LR    1,13
         FREEMAIN  R,LV=176,A=(1)      RELEASE THE SAVE AREA
         L     SAVEREG,SAVEREG2+4 RESTORE OLD SAVE AREA           M2838
         LM    14,12,12(13)       RESTORE REGISTERS               M2838
         L     15,DECB2+4              GET V ADCON OF RETURN
         BR    15                      RETURN OR GO TO SECOND LOAD
VTOCDCB  DS    0F                 NAME THE FIRST ITEM IN DCB
         DCB   DSORG=PS,MACRF=R,KEYLEN=44,BLKSIZE=1,RECFM=U
MOUNTRTN DC    V(IEHMVESF)         ADCON OF VOLUME MOUNTING ROUTINE
DSECT    DSECT
IEHECHAR DS    C         CHARACTER TO BE SCANNED FOR
IEHECOND DS    C         CONDITION CODE TO STOP ON
IEHECODE DS    C
IEHEARGL DS    C
IEHESTT  DS    F
IEHESTP  DS    F
IEHEFND  DS    F
IEHETBL  DS    F
IEHEFUN  DS    F
IEHESCNX DS    3F
IEHEMAC1 DS    7F                 PARAMETER LIST                 S21046
IEHEMAC2 DS    6F
IEHESTIN DS    F
IEHENDIN DS    F
IEHECCNT DS    2C
IEHESW1  DS    C
DUPSW    DS    2C                 SWITCHES FOR TEST OF DUPLICATE S21046
*                                 PARAMETERS                     S21046
PPARAMSW DS    CL2
IEHESW5  DS    C
IEHESW6  DS    C
IEHECALL DS    F
         DS    0D
DBLWORD  DS    F
FULLWORD DS    F
         DS    0D
DECB1    DS    24X
DECB2    DS    24X
VOLISTAD DS    F
MATRIXIU DS    F
VDTIU    DS    F
VOLPAREN DS    FL2
VSRCM    DS    2X
VDSA     DS    X
DFLG     DS    X                                                   BS0H
DFLAG    DS    X                                                   BS0H
         DS    0F
FLSTADDR DS    F
FNSA     DS    12X
KWSA     DS    12X
SCANRET  DS    F
MARESAR  DS    72X
IEHESPC  DS    XL20
         DS    XL20
IEHERSAV DS    64X
PASSUNIT DS    5X                                                  DT0I
MOUNTSW  DS    X                                                   DT0I
TABLEAD  DS    F                  ADDRESS OF DEVICE NAME TABLE     I276
IEHESW2  DS    X                  PROTECT SWITCHES               S21046
*                                 BIT 1=1 IF WE ARE TO PRINT     S21046
*                                        CONTROL CARDS           S21046
*                                 BIT 3=1 INDICATES FIRST QUOTE  S21046
*                                        IN SCAN FOR DATA        S21046
*                                        OPERATION IS FOUND      S21046
*                                 BIT 4= 1 IF WTOR SETUP IS DONE S21046
*                                 BIT 6=1 IF FIRST PARM ENTRY    S21046
*                                 WAS VALID                      S21046
*                                 BIT 7=1 IF INVALID PARM ENTRY  S21046
*                                 MSG HAS BEEN PRINTED           S21046
PASWDCT1 DS    1X                 NUMBER OF PROMPTS FOR PASWORD1 S21046
PASWDCT3 DS    1X                 NUMBER OF PROMPTS FOR CPASWORD S21046
TOTALPS  DS    1X                 TOTAL NO OF OPERATOR REPLIES   S21046
WTORECB  DS    1F                 EVENT CONTROL BLOCK FOR WTOR   S21046
TIOTADRS DS    1F                 TIOT ADDRESS FOR WTOR          S21046
CCNAME   DS    8C                 NAME OFF CONTROL CARD          S21046
WTORLIST WTOR  'IEH220A JOBNAMES, STEPNAME, CARDNAME, REPLY WITH PASSWOX
               RD',,8,WTORECB,ROUTCDE=(9),DESC=2,MF=L            S21046
EXTRACTO EXTRACT ,'S',FIELDS=(TIOT),MF=L                         S21046
DCBAREA  DS    0F
UTINDCB  DCB   DSORG=PS,MACRF=(GM)
CODELIST DC    C'.,=()   '        SPECIAL CHARACTERS CODED BY SCAN
MAXLINES DC    FL2'45'             MAXIMUM LINES PER PAGE
LINECNT  DC    FL2'0'              LINE COUNT FIELD
SKIP21   DC    X'8B'               SKIP TO 1 COMMAND
WRITEHDR DC    X'19'               SPACE 3 AFTER PRINT
HEADER   DC    CL30'MODIFY....VERSION BETA-1......'
         DC    CL30'LAST UPDATED....JULY 11  10 PM'
         DC    CL30'                              '
         DC    CL30'               PAGE 001       '
PAGENUM  EQU   HEADER+110
DDNAMES  DS    3CL8                FOR THREE  8 BYTE DDNAMES
UTOUTDCB DCB   DSORG=PS,MACRF=(PM)
         DS    2F
IEHESAT  DS    150X
         ORG   IEHESAT
CTRLWORD DS    F                   SWITCHES AND SAVE REG 13
DDNUMBER EQU   *                   NUMBER OF DDNAMES
DDNAMEAD DS    F                   ADDRESS OF DDNAMES
REQUEST  EQU   *                   REQUEST SWITCH
TABADDR  DS    F                   ADDRESS OF TABLE BUILT
         DS    XL3                 BY THE VOLUME MOUNTING ROUTINE
MOUNTNUM DS    X                   NUMBER OF MOUNT REQUESTS
UCBAD1   EQU   *                   ADDRESS OF A UCB
DEVTYPE1 DS    F                   DEVICE CODE
VOLSER1  DS    CL6                 VOLUME SERIAL NUMBER
RTA1     DS    XL2                 TABLE DISPLACEMENT TO DDNAME ADDR
UNIT     DS    XL5                                                 DT0I
DDLIST   DS    20F                 FOR TEN DDNAMES
         ORG
READBASE DC    F'0'
PARAM1   DS    44X
         DS    F              FOR  LENGTH OF  PARAM2
PARAM2   DS    44X
         DS    F                   FOR LENGTH OF PARAM3
PARAM3   DS    44X
PARAM5   DS    2F                 CPASWORD PARAMETER             S21046
PARAM6   DS    151F               VOL IDS PARAMETER              S21046
PARAM7   DS    2F                 PASSWORD2 PARAMETER            S21046
PARAM8   DS    80X                DATA PARAMETER                 S21046
DUMMY    DS    1F                 TEMPORARY STORAGE FIELD        S21046
PROTCTAD DS    1F                 ADDRESS OF WHERE TO PUT NEXT   S21046
*                                 VOL ID IN PARAM6 FOR PROTECT   S21046
FINUSE   DS    F                   ADDR OF DC LIST IN USE
DCSAVEAD DS    F                   SAVE AREA FOR ADDR OF DC LIST
INPUT    DS    40F                 TWO CARD INPUT AREA
MSGOUT   DS    30F                 MSG OUTPUT AREA
         DS    F
         DS    0D
PARAM4   DS    151F                FOR A VOLUME LIST
EOCORE   EQU   *-12
         ORG   PARAM4+20
VTOCDCB2 DS    0F
DCB4VTOC DCB   DDNAME=VTOC,                                            .
               DSORG=PS,                                               .
               MACRF=R,                                                .
               KEYLEN=44,                                              .
               BLKSIZE=1,                                              .
               RECFM=U
JFCB     DS    24D
*        THE FOLLOWING ORG STATEMENT IS FLAGGED                  YM5077
         ORG
SAVEREG2 DS    72X                SECONDARY SAVE AREA             M2838
SAVEREG3 DS    72X                THIRD LEVEL SAVE AREA           M2838
         ORG
VTOCSW   EQU   JFCB+50
VTOCDECB EQU   JFCB+60
JFCBVOL  EQU   JFCB+118
EXLST2   EQU   DCB4VTOC+36
FORMATID EQU   PARAM2+44
BLANK    EQU   64
READTOO  EQU   INPUT+72
COL16    EQU   READTOO+15
COL72    EQU   READTOO+71
MIDDLE   EQU   READTOO-1
WARE2PUT EQU   IEHEMAC1-4
SYSINEND EQU   *
         END
