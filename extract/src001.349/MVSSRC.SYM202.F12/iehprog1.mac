* /* START OF SPECIFICATIONS ***                                      *
*01* PROCESSOR = ASSEM;                                               *
**** END OF SPECIFICATIONS ***/                                       *
 TITLE 'IEHPROG1-IEHPROGM ROOT, PARAM LIST BUILDER, VOL LOOKUP'
***********************************************************************
*                                                              YL026VC*
*  MODULE NAME -- IEHPROG1                                     YL026VC*
*                                                              YL026VC*
*  DESCRIPTIVE NAME -- IEHPROGM ROOT, PARAM LIST BUILDER, VOL  YL026VC*
*     LOOKUP                                                   YL026VC*
*                                                              YL026VC*
*  COPYRIGHT -- NONE                                           YL026VC*
*                                                              YL026VC*
*  STATUS -- 'IEHPROG1'  OS/VS2 PROLOGUE  MODIFICATION         YL026VC*
*     SEPTEMBER 1975                                          @Z40CSJH*
*                                                              YL026VC*
*  FUNCTION -- THIS MODULE IS THE FIRST LOAD OF 'MODIFY'.             *
*     IT SAVES THE SYSTEMS REGISTERS, AND ISSUES A GETMAIN            *
*     FOR 2048 BYTES WHICH WILL SERVE AS A WORK AREA FOR              *
*     THE PROGRAM.  ON INITIAL ENTRY IT WILL CALL ON IEHPROG4         *
*     A SEPARATE CSECT THAT WILL ANALYZE THE PARAMETER LIST           *
*     PASSED BY THE INVOCER AND RETURN WITH DCB'S OPENED              *
*     FOR SYSIN AND SYSPRINT.  IT WILL THEN READ SYSIN FOR            *
*     THE UTILITY CONTROL STATEMENTS, ANALYZE THE CONTENTS            *
*     OF THESE STATEMENTS, BUILD REQUIRED PARAMETER LIST              *
*     AND CALL ON IEHPROG5 TO MOUNT REQUIRED VOLUMES.  IF THE         *
*     INPUT CONTROL STATEMENT IS IN ERROR OR IF THE REQUIRED          *
*     VOLUMES CANNOT BE MOUNTED A DIAGNOSTIC MESSAGE WILL BE          *
*     WRITTEN ON 'SYSPRINT' AND THE PROGRAM WILL CONTINUE BY          *
*     READING THE NEXT CONTROL STATEMENT.  IF THE STATEMENT           *
*     IS VALID AND THE VOLUMES ARE (OR CAN BE) MOUNTED THEN           *
*     THIS MODULE WILL XCTL TO IEHPROG2, A MODULE WHICH WILL          *
*     ISSUE THE APPROPRIATE SVC'S AND ANALYZE THEIR RETURNS.          *
*                                                                     *
*     THE FOLLOWING OS CVOL (CONTROL VOLUME) FUNCTIONS        @Z40CSJH*
*     HAVE BEEN REACTIVATED FOR MVS EXTENDED CVOL SUPPORT     @Z40CSJH*
*         BLDG,BLDX,DLTX,BLDA,DLTA                            @Z40CSJH*
*         CONNECT AND RELEASE                                 @Z40CSJH*
*     ALSO REACTIVATED FOR ARE THE FOLLOWING                  @Z40CSJH*
*     KEYWORD PARAMETERS ASSOCIATED WITH THE ABOVE FUNCTIONS  @Z40CSJH*
*         INDEX,ALIAS,DELETE,ENTRIES,EMPTY                    @Z40CSJH*
*                                                                     *
*  ENTRY POINTS --                                                    *
*          IEHPROG6 IS ALWAYS THE INITIAL ENTRY POINT FOR THIS        *
*     MODULE.  ENTRY IS FROM THE SUPERVISOR AS A RESULT OF AN         *
*     EXECUTE CARD IN THE JOB STREAM OR AN XCTL OR LINK FROM          *
*     ANY OTHER PROGRAM.                                              *
*          IEHPROG9 IS THE SECOND ENTRY POINT AND IS ENTERED          *
*     ONLY BY A RETURN FROM THE SECOND LOAD OF MODIFY.                *
*                                                                     *
*  INPUT -- INPUT DATA TO THIS MODULE IS 80 CHARACTER BLOCKED         *
*     CARD IMAGES READ FROM 'SYSIN'.  THE FORMAT OF THESE             *
*     CONTROL STATEMENTS IS DESCRIBED IN THE FORM 'OPERATING          *
*     SYSTEM / 360 UTILITIES'.                                        *
*                                                                     *
*  OUTPUT -- OUTPUT TO 'SYSPRINT' CONSISTS OF MESSAGES WHICH          *
*     IDENTIFY PARTICULAR CONTROL STATEMENT ERRORS PLUS A LIST        *
*     OF CONTROL STATEMENTS.  OUTPUT TO THE SECOND LOAD OF            *
*     MODIFY CONSISTS OF THE ADDRESS OF THE COMMON WORK AREA          *
*     CONTAINED IN REGISTER 12.                                       *
*                                                                     *
*  EXTERNAL REFERENCES --                                             *
*          IEHPROG4 IS CALLED UPON TO INTERPRET THE PARAMETERS        *
*     PASSED BY AN INVOKER.                                           *
*          IEHPROG5 IS CALLED UPON TO MOUNT THE REQUIRED VOLUMES.     *
*          IEHPROG3 IS CALLED UPON TO WRITE ALL MESSAGES.             *
*          IEHPROG2 IS CALLED UPON TO PERFORM THE SECOND LOAD         *
*     OF MODIFY.                                                      *
*                                                                     *
*  EXITS,NORMAL -- THIS ROUTINE RESTORES THE SYSTEMS REGISTERS        *
*     AND EXITS THROUGH REGISTER 14.  REGISTER 15 WILL EQUAL 0        *
*     INDICATING THAT ALL REQUESTS WERE SERVICED AND NO ERROR         *
*     WAS ENCOUNTERED.                                                *
*                                                                     *
*  EXITS,ERROR -- THIS ROUTINE RESTORES THE SYSTEMS REGISTERS         *
*     AND EXITS THROUGH REGISTER 14.  REGISTER 15 CONTAINS THE        *
*     ERROR CODE AS FOLLOWS:                                          *
*     REGISTER 15 = 8         SOME REQUEST(S) NOT SERVICED            *
*     REGISTER 15 = 12        PERMANENT ERROR ON SYSIN                *
*     REGISTER 15 = 12        PERMANENT ERROR ON SYSPRINT             *
*     REGISTER 15 = 16        PROGRAM INTERRUPT                       *
*                                                                     *
*  TABLES/WORK AREAS --                                               *
*     VCONLIST - A LIST OF ADDRESS CONSTANTS USED TO PROVIDE          *
*     LINKAGE TO MODULES WHEN THE PROGRAM IS USED IN OVERLAY          *
*     MODE.                                                           *
*     PPARAMSW - A TWO BYTE BIT STRING FOR EACH OPTION WITH           *
*     BITS SET TO ONE TO INDICATE THE VALID PARAMETERS.               *
*     TABLEN1 THRU TABLEN9 - TABLES USED FOR CHECKING THE             *
*     VALIDITY OF OPERATIONS AND OPERANDS AND CONTAINING THE          *
*     ADDRESS OF CODE TO PROCESS THE SAME.                            *
*     NAMEX - DSECT OF THE WORK AREA OBTAINED BY GETMAIN AND          *
*     USED BY ALL MODULES OF THE PROGRAM.                             *
*                                                                     *
*  ATTRIBUTES -- READ ONLY, REENTRANT, REUSABLE, PROBLEM PROGRAM,     *
*     ENABLED.                                                        *
*                                                                     *
*  CHARACTER CODE DEPENDENCY -- THIS MODULE MUST BE ASSEMBLED         *
*     IN EBCDIC AND RUN IN EBCDIC TO INSURE COLLATING SEQUENCE        *
*     AND INTERNAL REPRESENTATION OF CERTAIN CHARACTERS.              *
*                                                                     *
*  NOTES -- STORAGE OF APPROXIMATELY 6000 BYTES FOR CODE AND          *
*    ANOTHER 5390 BYTE WORK AREA.                                     *
*                                                                     *
*  CHANGE ACTIVITY -- FOLLOWS PROLOGUE                         YL026VC*
*                                                              YL026VC*
***********************************************************************
*
*
********************************************************************
*                                                                  *
*                                                                  *
*              -----IEHPROG1 THE STEM OF MODIFY-----              M2838
*                                                                  *
IEHPROG1 CSECT                                                    M2838
*A500-588,1100,17100-17200                                      YL026VC
*C600-1000                                                      YL026VC
*C313600,315600-316000,317400-322200,323000,324400-324800       YL026VC
*C327000-329200                                                 YL026VC
*A295240                                                         YM5077
*A278900                                                        YA01672
*C400,13200                                                       M2838
*277200,277400                                                     I276
*2480068000,265600                                                 8429
*0233171600,276600                                                 DT0I
*2359047000                                                     PTM1623
* 082800,083200,262400,262600                                    A23466
*                                                                A24144
*                                                                A24020
*                                                                A25564
*                                                                A28552
*                                                                A31430
*A 073100-073120,073701-073703,073728-073732,073773-073775      YA01678
*C 073618,073699,073753                                         YA01678
*D 073627                                                       YA01678
*C 145060                                                       YA01707
*A 202700,202720,205601-205740                                 @ZA01655
*C 145000,203600,224200                                        @ZA01655
*C 437800                                                      @30AAAG
*C 145000                                                      @ZM33351
*A 437920,940                                                  @30AAAG
*C 1000,4520-4592,313600,315600-316000                         @Z40CSJH
*C 317400-320400,321200-322200                                 @Z40CSJH
*C 323100,324400-324800,325600                                 @Z40CSJH
*C 327000-327400,328200-329200                                 @Z40CSJH
*A 422300                                                      @ZA11944
*C 415400                                                      @ZA13755
         USING *,15                                                *
         SAVE  (14,12)    THIS SAVE INCLUDES R9
         L     9,VCONLIST                                          *
         L     15,VCON1                                            *
         BR    15                                                  *
VCON1    DC    V(IEHPROG6)        THIS LIST OF ADCONS             M2838
VCON2    DC    V(IEHPROG9)        IS USED THROUGHOUT THE          M2838
VCON3    DC    V(IEHPROG3)        PROGRAM TO PROVIDE THE          M2838
VCON4    DC    V(IEHPROG5)        LINKAGE REQUIREMENTS OF         M2838
VCON5    DC    V(IEHPROG4)        MODIFY IN AN OVERLAY            M2838
VCON6    DC    V(IEHPROG8)        STRUCTURE.                      M2838
VCON7    DC    V(IEHPROG7)        THROUGHOUT EXECUTION OF         M2838
VCON8    DC    V(IEHPROG2)        THE PROGRAM THE ADDRESS         M2838
VCON9    DC    V(IEHPROGA)        OF THIS LIST IS MAINTAINED      M2838
VCONLIST DC    A(VCON1)                 IN THE WORKAREA AT A       *
*                                       LOCATION KNOWN AS DECB2    *
*                                       FOR USE BY THE ENTIRE      *
*                                       PROGRAM AS REQUIRED.       *
*                                                                  *
********************************************************************
*
*
IEHPROG6 CSECT                                                    M2838
*                   *****     REGISTER  USAGE     *****
ZERO     EQU   0        ----------------------------------------
R1       EQU   12
ARGREG   EQU   1                       ARGUMENT ADDRESS FROM TRT A28552
R2       EQU   2
R3       EQU   3             REGISTERS ZERO THROUGH
R4       EQU   4             TEN ARE WORK REGISTERS
R5       EQU   5
R6       EQU   6             REGESTERS ELEVEN AND
R7       EQU   7             TWELVE ARE BASE REGISTERS
R8       EQU   8             FOR THE PROGRAN AND THE
R9       EQU   9             DUMMY SECTION RESPECTIVELY
NAMEPTR  EQU   9                       POINTS TO NAME TO CHECK   A28552
*                                      INDEX LENGTH , ALPHA 1ST  A28552
*                                      AND ALPHAMERIC CHARACTERS A28552
RB2      EQU   10                 SECONDARY BASE REGISTER        S21046
OFFSET1K EQU   4095               OFFSET FOR BASE REG 2          S21046
KPLUS2   EQU   4097               2ND BASE OFFSET FROM IEHESCAN  S21046
QUOTECHR EQU   X'7D'              QUOTE CHARACTER                S21046
TWO      EQU   2                  CONSTANT 2                     S21046
OFFSET2  EQU   4097               OFFSET 2 FOR BASE REG 2        S21046
DSECTSZE EQU   2695               HALF DSECT SIZE FOR GETMAIN     M2838
MULTPBY2 EQU   1                  SHIFT TO MULT BY 2             S21046
ONEBYTE  EQU   1                  ONE BYTE                       S21046
CNTTOTAL EQU   6                  TOTAL COUNT FOR ALL WTOR'S     S21046
CNT1PAS  EQU   3                  TOTAL WTOR'S ALLOWED FOR PSWD  S21046
SIXTEEN  EQU   16                 RETURN CODE OF 16 COMPARE      S21046
INCRMNT1 EQU   1                  INCREMENT OF 1                 S21046
MOVE55   EQU   55                 BLANK OUT MESSAGE AFTER PARM   S21046
*                                 ERROR MESSAGE PRINTED          S21046
PRORTNCD EQU   X'FF'              MASK TO SHOW PROTECT RETURN    S21046
NUMFLD   EQU   X'F0'              F FIELD OF EBCDIC NUMERALS     S21046
TWELVE   EQU   X'12'              RETURN CODE OF 12              S21046
ZERORTN  EQU   0                  ZERO RETURN CODE               S21046
PRNTBIT  EQU   X'80'              MASK TO TEST PRINT OR NOPRINT  S21046
CVOLBIT  EQU   X'08'              TURN ON THE CVOL BIT           S21046
CVOLOFF  EQU   X'F7'              TURN OFF THE CVOL BIT          S21046
SKIP3    EQU   49                 FORCE THREE SPACES             S21046
BLANKBYT EQU   X'40'              BLANK CHAR IN HEX              S21046
SEVEN    EQU   7                  CONSTANT OF 7                  S21046
ONEWORD  EQU   4                  FOUR BYTE CONSTANT             S21046
ZEROBYTE EQU   0                  CONSTANT OF 0                  S21046
MNTVOL   EQU   X'40'              IEHESW2 MASK TO CAUSE VOL MNT  S21046
VOLMNT   EQU   X'01'              IEHEMAC1 VOL MOUNT             S21046
EIGHT    EQU   8                  CONSTANT OF 8                  S21046
PSWD1MSK EQU   X'20'              PPARMSW MASK FOR PASWORD1      S21046
PSWD1DUP EQU   X'20'              DUP MASK TEST FOR PASWORD1     S21046
PSWD1PRM EQU   8                  DISPLACEMENT FOR PASWORD1      S21046
PSWD2MSK EQU   X'40'              PPARMSW MASK FOR PASWORD2      S21046
PSWD2DUP EQU   X'04'              DUP MASK TEST FOR PASWORD2     S21046
PSWD2PRM EQU   21                 DISPLACEMENT FOR PASWORD2      S21046
CPSWDMSK EQU   X'04'              PPARMSW MASK FOR CPASWORD      S21046
CPSWDDUP EQU   X'10'              DUP MASK TEST FOR CPASWORD     S21046
CODE4    EQU   4                  RETURN CODE OF 4               S21046
MSG67    EQU   67                 PRINT PARM ERROR MESSAGE       S21046
MSGPRINT EQU   X'02'              CHECK FOR PARMFIELD ERROR      S21046
CPSWDPRM EQU   12                 DISPLACEMENT FOR CPASWORD      S21046
TYPEMSK  EQU   X'10'              PPARAMSW MASK FOR TYPE         S21046
TYPEDUP  EQU   X'08'              DUP MASK TEST FOR TYPE         S21046
TYPEPRM  EQU   20                 DISPLACEMENT FOR TYPE          S21046
UCBADDR  EQU   X'02'              ARG LENGTH OF UCB ADDRESS      A35899
TYPECODE EQU   X'03'              HIGHEST TYPE CODE PERMISSIBLE  S21046
DATAMSK  EQU   X'08'              PPARMSW MASK FOR DATA          S21046
DATADUP  EQU   X'02'              DUP MASK TEST FOR DATA         S21046
DATAPRM  EQU   24                 DISPLACEMENT FOR DATA          S21046
THREEBYT EQU   3                  3 BYTE DISPLACEMENT            S21046
ZERODSP  EQU   0                  DISPLACEMENT OF 0              S21046
DROPZONE EQU   X'0F'              MASK TO DROP ZONE              S21046
HALFWD   EQU   2                  ONE HALF WORD                  S21046
QUOTEMSK EQU   X'01'              CODE FOR QUOTE FROM SCAN       S21046
ONEQUOTE EQU   X'20'              ONE QUOTE HAS BEEN FOUND       S21046
LNGTHCHK EQU   X'07'              LENGTH COMPARE                 S21046
MULTBY4  EQU   2                  SHIFT TO MULT BY 4             S21046
VOLPRM   EQU   16                 DISPLACEMENT FOR VOL           S21046
SIX      EQU   6                  CONSTANT OF 6                  S21046
NINETEEN EQU   19                 ZERO OUT PARAMETER LIST        S21046
DATALGTH EQU   76                 MAX LENGTH OF DATA FIELD       S21046
RB       EQU   11            THIRTEEN POINTS TO A REGISTER
RBD      EQU   12
SAVEREG  EQU   13            SAVE AREA
RETURN   EQU   14
LINKREG  EQU   15            FIFTEEN AND FOURTEEN ARE LINK
PARAMREG EQU   0             AND RETURN REGISTERS RESPECTIVELY
LISTREG  EQU   1        -----------------------------------------
*
*                   *****     SWITCH USAGE        *****
NDSWMSK  EQU   128       END SWITCH  BIT POS ZERO  SWITCH 1
COMMENTS EQU   64
CONTINUE EQU   32
FIRSTONE EQU   16
BIGSHIFT EQU   8
SHIFTLOC EQU   4
VOLSW    EQU   2
CLEAROUT EQU   253                     AFFECTS THE 7TH BIT OF    A23466
*                                      MOUNTSW                   A23466
ERRSW    EQU   2                       USED TO TEST FOR ERROR    A23466
*                                      IN CONTINUATION           A23466
ERRSW2   EQU   4                       USED TO TEST FOR ERROR    A24020
*                                      ENCOUNTERED IN NAME FIELD A24020
CLEARSW  EQU   251                     AFFECTS THE 6TH BIT OF    A24020
*                                      MOUNTSW                   A24020
COMMENCE SAVE  (14,8),T,MODIFY   THIS SAVE DOES NOT INCLUDE R9
         STM   10,12,60(13)   SAVE R 10 THRU R 12
         BALR  RB,0
         USING *,RB                                              S21046
         USING *+OFFSET1K,RB2                                    S21046
         LA    RB2,OFFSET1K(RB)   SET UP BASE REG DISPLACEMENT   S21046
         B     IEHEREAD
IEHESCAN BALR  RB,0
         USING *,RB                                              S21046
         USING *+OFFSET1K,RB2                                    S21046
         LA    RB2,OFFSET1K(RB)   SET UP BASE REG DISPLACEMENT   S21046
         USING IEHECHAR,R1
*
         TM    IEHESW1,NDSWMSK     TEST FOR END OF PARAMETERS
         BZ    NOTEND
         OI    IEHESW1,COMMENTS        TURN ON THE COMMENTS SWITCH
         TM    IEHESW1,CONTINUE        CONTINUE CARDS PRESENT
         BZ    GETMORE                 YES     BRANCH
ENDCALL  L     R2,IEHECALL         GET ADDRESS OF CALLING SEQUENCE
         CLI   VOLPAREN+1,X'00'         IF PAREN COUNT IS ZERO
         BCR   8,2                      GO HONOR THE REQUEST
         MVI   VOLPAREN+1,X'00'         OTHERWISE GO TO
         B     BADSYN                   THE ERROR ROUTINE
NOTEND   LM    R2,R3,IEHESTT       AREA TO BE SCANNED DEFINED BY
         SR    R5,R5               THE ADDRESSES IN REGISTERS TWO,THREE
         ST    RETURN,SCANRET          SAVE RETURN ADDRESS
         LR    R4,R5                   CLEAR  REG 4
         CR    R2,R3
         BH    DOWNLNTH-2
         IC    R4,IEHECOND        LOAD MASK FOR THE BRANCH CONDITION
         LA    R6,MIDDLE
         CR    R2,R6         TEST IF WE ARE SCANNING THE READ IN ARED
         BNH   COMPAGN            BRANCH IF WE ARE NOT
         TM    IEHESW1,CONTINUE+SHIFTLOC    CAN WE SHIFT
         BNE   COMPAGN                      NO    BRANCH
         TM    IEHESW1,BIGSHIFT   TEST FOR A LONG SHIFT
         BZ    LONGONE
         MVC   INPUT+15(57),MIDDLE       TAKE A SHORT SHIFT
         LA    R6,56
         SR    R2,R6              RESET THE START ADDRESS
         ST    R2,IEHESTT
         B     GETMORE
LONGONE  OI    IEHESW1,BIGSHIFT     TURN OFF THE BIG SHIFT SWITCH
         MVC   INPUT(72),READTOO
         LA    R6,72
         SR    R2,R6
         ST    R2,IEHESTT
         B     GETMORE
COMPAGN  EQU   *                                                 A25564
         L     RETURN,SCANRET          RESTORE THE RETURN ADDRESSA25564
TRYAGAIN EQU   *                                                 A25564
         LTR   R2,R2                   IF REG 2 IS ZERO          A42333
         BZ    BADSYN                  INVALID SYNTAX            A42333
         CLC   0(1,R2),IEHECHAR        CHARACTER BEING SCANNED   A25564
*                                      FOR IS COMPARED TO A      A25564
*                                      CHARACTER IN THE AREA     A25564
*                                      BEING SCANNED             A25564
         NOP   CKBLANK                SCAN IS TERMINATED IF THE
         EX    R4,*-4              CONDITION SPECIFIED IS MET
ENTAGN   LA    R5,1(R5)
         LA    R2,1(R2)            UPDATE POINTER TO SCAN AREA
         CR    R2,R3               COMPARE START TO STOP ADDRESS
         BNH   TRYAGAIN                NO FIND--THEN LOOK AGAIN  A25564
*
*                                  ARRIVING HERE MEANS NO FIND
*                                  IN THE AREA THAT WAS SCANNED
*                                     THE POINTER TO THE FOUND
*                                  CHARACTER IS SET TO ZERO
         SR    R2,R2
*                                  ***LENGTH OF SCAN AND FOUND
DOWNLNTH BCTR  R5,0                ***ADDRESS STORED IN SCANLIST
         STC   R5,IEHEARGL         STORE LENGTH
         ST    R2,IEHEFND          STORE ADDRESS
*
*                                  CHECK TO SEE IF THERE WAS A FIND
*                                  BY TESTING THE 'FOUND'ADDRESS
         LTR   R2,R2               FOR A NOT ZERO
         BNE   GETCODE
         STC   R2,IEHECODE         NOFIND- ZERO THE CODE IN SCANLIST
         ST    R2,IEHEFUN          ZERO THE FUNCTION ADDRESS
         BR    RETURN              SCRAMETH BACK.
*
*                                 AT THIS POINT SCAN HAS STOPED FOR
*                                 A FIND CONDITION.  AND WE WILL PLACE
*                                 A CODE INTO SCANLIST  DESCRIBING THE
*                                 CHARACTER FOUND AS FOLLOWS
*
*                                 TYPE OF CHARACTER         CODE
*                                       .                     1
*                                       ,                     2
*                                       =                     3
*                                       (                     4
*                                       )                     5
*                                       BLANK                 6
*                                       ALL OTHERS            0
*
*
*
GETCODE  LA    R3,CODELIST+5       CHARACTER THAT STOPED THE SCAN
         LA    R4,6                IS COMPARED TO A CHARACTER
NEXTCODE CLC   0(1,R2),0(R3)       IN THE CODELIST.
         BE    PUTCODE
         BCTR  R3,0                GET NEXT CHARACTER
         BCT   R4,NEXTCODE         CHECK FOR LAST AND MODIFY CODE
         CLC   NOTBLANK(2),IEHECHAR
         BE    PUTCODE
         LM    2,5,MARESAR        RESTORE THE REGISTERS
         B     ENTAGN             AND SCAN SOME MORE
CHKBLNK  BCTR  R2,0                    BACK UP                  PTM1623
         CLI   0(R2),X'4B'             CHECK FOR PERIOD         PTM1623
         LA    R2,1(R2)                                         PTM1623
         BE    BADSYN                  BRANCH ON YES            PTM1623
         B     CONSCAN                                          PTM1623
PUTCODE  STC   R4,IEHECODE         PUT CODE INTO SCANLIST
*
*
*                                  AT THIS POINT  SCAN IS COMPLETE
*                                  AND THE FOUND ADDRESS,LENGTH OF
*                                  THE SCAN, AND CODE HAVE BEEN
*                                  PLACED INTO THE SCANLIST
*                                  NOW WE WILL TEST THE TLU SW.
         CLI   IEHECODE,X'06'          WAS DELIMITER A BLANK    PTM1623
         BE    CHKBLNK                 BRANCH ON YES            PTM1623
         CLI   IEHECODE,X'02'          CHECK FOR COMMA          PTM1623
         BE    CHKBLNK                 BRANCH ON YES            PTM1623
CONSCAN  L     R2,IEHETBL                                       PTM1623
         LTR   R2,R2
         BCR   8,RETURN            RETURN IF NO TLU IS REQUESTED
*
*                                  A TLU IS REQUIRED.  WE WILL
*                                  NOW SELECT THE ADDRESS OF THE
*                                  PROPER TABLE TO BE SEARCHED
*                                  BY USING THE LENGTH IN SCANLIST
*
SPTABAD  CLI   IEHEARGL,X'08'     TESTING FOR MAX AND MIN VALUES
         BH    NOTABLE            OF ARGUMENT LENGTH TO INSURE
         CLI   IEHEARGL,X'01'     COMPATIBILITY WITH OUR TABLES
         BNH   NOTABLE            BRANCH IF NOT COMPATIBLE
         SR    R2,R2
         IC    R2,IEHEARGL         PUT LENGTH INTO REG.
         SLA   R2,2                MULTIPLY BY FOUR
         LA    R2,TABLEADS(R2)     ADD TO TABLE ADDRESS
         MVC   IEHETBL(4),0(R2)    PUT TABLE ADDRESS INTO SCANLIST
         B     IEHETLU             GO TO TABLE LOOK UP ROUTINE
NOTABLE  SR    R2,R2               ARGUMENT LENGTH IS ZERO
         ST    R2,IEHEFUN          ZERO THE FUNCTION
         BR    RETURN              RETURN
CKBLANK  CLI   0(R2),C' '          SEE IF A BLANK STORE THE SCAN
         STM   2,5,MARESAR
         BNE   DOWNLNTH            IF NOT; FORGET IT
         LTR   R5,R5                   *  CHECK LENGTH OF
         BZ    ZEROLNTH                *  SCAN FOR ZERO
         OI    IEHESW1,NDSWMSK     NOT ZERO TURN ON END SWITCH
         B     DOWNLNTH
*
*                                  SCAN HAS STOPED FOR A BLANK
*                                  LENGTH OF SCAN WAS ZERO
*                                  CHECK FOR ') ' OR ', '
*
ZEROLNTH LR    R6,R2               GET ADDRESS OF PRECEEDING CHARACTER
         BCTR  R6,0                BY DECREASING FOUND ADDRESS BY ONE
         CLI   0(R6),C','          CHECK FOR COMMA
         BE    SKIPCARD
         CLI   0(R6),C')'          CHECK FOR RIGHT PARENTHESIS
         BE    ENDCALL             IF EQUAL GO GET THE MACRO REQUIRED
         CLI   0(R6),QUOTECHR     CHECK FOR QUOTE                S21046
         BE    ENDCALL            IF EQUAL GET THE MACRO REQUIRE S21046
         LA    PARAMREG,1
         L     LINKREG,SEVER8          GO TO CONDITION           A25564
         BALR  RETURN,LINKREG          CODE HANDLER              A25564
         B     GOAGAIN
*
SKIPCARD LA    R6,MIDDLE               --------------------------
         ST    R6,IEHESTT              SKIP OVER COMMENTS IN THIS
         CR    R6,R2                   CARD... IF THIS IS LAST
         BH    NOTEND                  CARD GGO CALL THE MACRO
         B     BADSYN   HAVE FOUND ', ' WITH NO CONTIN PUNCH      10859
*
*
*
*
*                        ***** USE OF REGISTERS FOR TLU *****
*
*                        REGISTER NO.              CONTENTS.
*                            2                 ADDRESS OF SEARCH ARG
*                            3                 LENGTH -1 OF THE ARG
*                            4                 ADDRESS OF THE TABLE ARG
*                            5                 NUMBER OF ELEMENTS
*                            6                 LENGTH OF ELEMENTS
*                            7--10             VARIOUS WORK
*
*
*
IEHETLU  L     R2,IEHESTT
         L     R4,IEHETBL
         SR    R3,R3
         LR    R5,R3                  SET UP REGISTERS
         LR    R6,R3                     AS SPECIFIED
         IC    R3,IEHEARGL                 ABOVE
         IC    R5,0(R4)
         IC    R6,1(R4)
         LA    R4,2(R4)
*
*                                  COMPARISON OF ARGUMENTS MADE BY
*                                  EXECUTE 'CLC' TO USE THE
*                                  LENGTH IS REG 3
*
*
EXCLC    EX    R3,TLUCLC           COMPARE  ARGUMENTS
         BE    ARGFOUND            BRANCH ON FIND
         BCT   R5,ARG              DECREASE ARG COUNT --EXIT IF ZERO
         ST    R5,IEHEFUN          STORE ZEROS FOR NO FIND
         BR    RETURN
ARG      AR    R4,R6               GET NEXT TABLE ARGUMENT.
         B     EXCLC               REPEAT
ARGFOUND LA    R4,1(R4,R3)         FUNCTION ADDRESS =ARG LENTH + 1
         ST    R4,IEHEFUN          +TABLE POINTER,  STORE IT
         BR    RETURN
TLUCLC   CLC   0(1,R2),0(R4)
GOAGAIN  ST    PARAMREG,IEHESPC        SAVE MESSAGE NUMBER
         OI    IEHESW1,NDSWMSK         SET END SW. ON
         LA    R2,GORETURN
         ST    R2,IEHECALL        GIVE SCAN A WAY BACK
         BALR  RETURN,RB          READ ANY COMMENTS CARDS
GORETURN L     PARAMREG,IEHESPC
         L     LINKREG,MSGRTNAD        GO WRITE THE SAVED MESSAGE
         BALR  RETURN,LINKREG
         B     STTRESET
IEHPROG8 BR    RETURN             RETURN TO CALLING POINT         M2838
         ENTRY IEHPROG8                                           M2838
IEHEREAD BALR  RB,0                --------------------
         USING *,RB                                              S21046
         USING *+OFFSET1K,RB2                                    S21046
         LA    RB2,OFFSET1K(RB)   SET UP BASE REG DISPLACEMENT   S21046
         L     RB,SCANBASE
         LA    RB2,OFFSET1K(RB)   SET UP BASE REG DISPLACEMENT   S21046
         USING IEHESCAN+TWO,RB                                   S21046
         USING IEHESCAN+OFFSET2,RB2                              S21046
         LA    ZERO,DSECTSZE      SET UP REG 0 TO GET            S21046
         SLL   ZERO,MULTPBY2      5390 BYTES OF MAIN STORAGE      M2838
         GETMAIN R,LV=(0)                                          8429
         LR    RBD,LISTREG
         USING IEHECHAR,RBD
         ST    R9,DECB2                 SAVE ADDRESS OF THE VCONS
         LOAD  EP=DEVNAMET              LOAD DEVICE NAME TABLE     I276
         ST    ZERO,TABLEAD       SAVE ADDRESS OF TABLE            I276
         L     0,20(R9)                 GET ADDRESS OF IEHRET01
         ST    0,DECB2+4                SAVE IT
         L     LISTREG,24(13)      RESTORE REG 1
         ST    13,IEHESAT          SAVE  13
         XC    MOUNTSW(1),MOUNTSW      CLEAR MOUNTSW             A23466
         XC    IEHESW2(ONEBYTE),IEHESW2     ZERO IEHESW2         S21046
         LA    R3,CNTTOTAL        LOAD DECREMENT FOR TOTAL WTOR  S21046
         STC   R3,TOTALPS         STORE DECREMENT FOR TOTAL WTOR S21046
         ST    SAVEREG,MARESAR+4  SAVE OLD SAVE AREA LOCATION     M2838
         LA    13,MARESAR          POINT AT NEW SAVE AREA
         L     LINKREG,INVOCRTN    GO TO THE
         BALR  RETURN,LINKREG      INVOKE ROUTINE
*
*                        ----- AT THIS POINT -----
*        CONTROL HAS JUST PASSED TO 'IEHINVOC' A ROUTIN USED TO
*        SCAN THE PARAMETER LIST THAT THE PROGRAM RECEIVES UPON
*        INVOCATION. UPON RETURN THERE WILL BE A DCB OPENED FOR
*        INPUT AT 'UTINDCB' AND A DCB OPEN FOR OUTPUT AT 'UTOUTDCB'
*        SWITCHES WILL BE SET AT 'IEHESAT' TO INDICATE WHETHER OR
*        NOT A LIST OF DDNAMES WAS PASSED AND WHETHER OR NOT IT
*        INCLUDED REPLACEMENT NAMES FOR SYSIN AND SYSPRINT.
*        THIS INFORMATION WILL BE USED LATER BY THE VOLUME MOUNTING
*        ROUTINE TO INSURE THAT REQUIRED VOLUMES ARE NOT DISMOUNTED
*
*
         TM    UTOUTDCB+48,X'10'       TEST IF SYSPRINT IS OPEN    8687
         BO    TESTFLG                  YES IT IS OPEN             BS0H
         OI    DFLG,X'01'                                       YA01678
         B     ERCLOS2                                          YA01678
CODERTN  LA    LINKREG,16               RETURN CODE OF 16          BS0H
         STC   LINKREG,ERRFLD+2        SAVE RETURN CODE            8687
         B     FREEMAIN                QUIT                        8687
TESTFLG  TM    DFLG,X'10'               CHECK FOR BLKSIZE ERROR    BS0H
         BO    ERCLOS2                 YES BRANCH               YA01678
TESTIN   TM    UTINDCB+48,X'10'         TEST IF SYSIN IS OPEN      BS0H
         BO    TESTFLAG                 YES IT IS OPEN             BS0H
         LA    PARAMREG,56                                         BS0H
ERMESG   MVI   MSGOUT,C' '              CLEAR MESSAGE AREA         BS0H
         MVC   MSGOUT+1(119),MSGOUT                                BS0H
         L     LINKREG,MSGRTNAD                                    BS0H
ERCLOS1  TM    DFLG,X'01'                                       YA01678
         BO    CODERTN                                          YA01678
         LA    R5,CLOSE                                         YA01678
         LA    R2,UTOUTDCB                                         BS0H
         BALR  R4,R5                    GO TO CLOSE ROUTINE        BS0H
         B     CODERTN                  SET ERROR CODE             BS0H
ERCLOS2  TM    UTINDCB+48,X'10'        TEST  IF SYSIN OPEN      YA01678
         BO    ERCLOS3                 YES                      YA01678
         B     ERCLOS1                 NO                       YA01678
TESTFLAG TM    DFLAG,X'10'                                         BS0H
         BC    8,MESSAGE                PUT OUT HEADER             BS0H
ERCLOS3  LA    R5,CLOSE                                         YA01678
         LA    R2,UTINDCB                                          BS0H
         BALR  R4,R5                    CLOSE SYSIN DCB            BS0H
         TM    DFLG,X'11'              TEST IF BLKSIZE ERROR    YA01678
         BNZ   ERCLOS1                 YES GO TO SYSPRINT CLOSE YA01678
         LA    PARAMREG,55              WRITE ERROR MESSAGE --     BS0H
         B     ERMESG                   INVALID BLOCKSIZE          BS0H
MESSAGE  MVI   MSGOUT,C' '             CLEAR MESSAGE OUTPUT AREA   8687
         MVC   MSGOUT+1(119),MSGOUT
         LA    PARAMREG,48
         L     LINKREG,MSGRTNAD        SKIP TO ONE
         BALR  RETURN,LINKREG          AND WRITE A HEADER
         XC    ERRFLD(8),ERRFLD    RESET ERROR RETURN CODES
         TM    IEHESW2,MSGPRINT   IS PARM ERROR MSG TO BE PRINT  S21046
         BC    1,PARMERR          IF YES GO PRINT IT             S21046
         B     STARTAGN
*                                                                S21046
*   AN ERROR WAS ENCOUNTERED IN THE PARM FIELD OF THE            S21046
*   EXEC CARD , PRINT MESSAGE 67 AND SET A RETURN CODE OF 4      S21046
*                                                                S21046
PARMERR  EQU   *                  PRINT PARM ERROR MESSAGE       S21046
         LA    PARAMREG,MSG67     MESSAGE 67                     S21046
         L     LINKREG,MSGRTNAD   ADDRESS OF MESSAGE ROUTINE     S21046
         BALR  RETURN,LINKREG     GO TO MESSAGE ROUTINE          S21046
         MVI   ERRFLD+TWO,CODE4   SET RETURN CODE OF 4           S21046
         MVI   MSGOUT,BLANK       BLANK OUT THE MESSAGE AREA     S21046
         MVC   MSGOUT+INCRMNT1(MOVE55),MSGOUT                    S21046
         LA    PARAMREG,SKIP3     FORCE THREE SPACES             S21046
         L     LINKREG,MSGRTNAD        ADDR OF MESSAGE ROUTINE   S21046
         BALR  RETURN,LINKREG     GO SPACE THREE LINES           S21046
         B     STARTAGN           BEGIN ANEW                     S21046
IEHPROG9 EQU   *                                                  M2838
         ENTRY IEHPROG9                                           M2838
         BALR  15,0
         USING *,15
         DROP  RB2                DON'T WANT RB2 USED AS BASE    S21046
*                                 REG ON THE LOAD OF SCANBASE    S21046
         L     RB,SCANBASE        RESET OUR BASE REGISTR
         LA    RB2,OFFSET1K(RB)   SET UP BASE REG DISPLACEMENT   S21046
         L     15,DECB2
         L     15,20(15)
         ST    15,DECB2+4               STORE RETURN ADDRESS
         DROP  15
         USING IEHESCAN+OFFSET2,RB2                              S21046
         CLI   ERRFLD+TWO,SIXTEEN IS RETURN CODE 16              S21046
         BE    IEHPROGD           YES BRANCH TO SYSIN END         M2838
STTRESET LA    PARAMREG,49        FORCE A TRIPLE SPACE
         L     LINKREG,MSGRTNAD        EXIT TO THE
         BALR  RETURN,LINKREG          MESSAGE WRITER
         CLI   ERRFLD,PRORTNCD    IS THIS RETURN FOR PROTECT     S21046
         BE    PRORETRN           YES BRANCH                     S21046
         OC    ERRFLD+1(1),ERRFLD  POST THE RETURN CODE
         BZ    STARTAGN                NO ERROR--RESET SWITCHES  A25564
         CLI   ERRFLD,X'12'            WAS IO ERROR ENCOUNTERED  A25564
         BNE   SVCERROR                NO, GO POST ERROR FOR SVC A25564
SVR12    L     LINKREG,SEVER12    GO TO CONDITION CODE           S21046
         BALR  RETURN,LINKREG          HANDLER                   A25564
         B     STARTAGN                GO TO CLEAR SWITCHES      A25564
PRORETRN CLI   ERRFLD+ONEBYTE,TWELVE   IS RETURN I/O ERROR       S21046
         BE    SVR12              YES GO TO SEVERITY 12 RETURN   S21046
         CLI   ERRFLD+ONEBYTE,ZERORTN  IS RETURN CODE 0          S21046
         BE    STARTAGN           YES THEN START AGAIN           S21046
         B     SVCERROR           POST RETURN FOR SEVERITY 8     S21046
SVCERROR EQU   *                                                 A25564
         L     LINKREG,SEVER8          GO TO CONDITION CODE      A25564
         BALR  RETURN,LINKREG          HANDLER TO POST CODE OF 8 A25564
STARTAGN XC    IEHECHAR(DECB1-IEHECHAR),IEHECHAR     CLEAR SWITCHES
         XC    VOLISTAD(IEHERSAV-VOLISTAD),VOLISTAD    AND WORK AREA
         XC    ERRFLD(2),ERRFLD        CLEAR 1ST TWO BYTES OF    A25564
*                                      ERRFLD                    A25564
         MVC   CODELIST(8),SPECIALS  RESET SPECIAL CHARACTERS      9660
         NI    IEHESW2,PRNTBIT    INITIALIZE IEHESW2             S21046
*
*              THE MACRO PARAMETER LIST IS PARTIALLY CONSTRUCTED
*              HERE BY STORING INTO IT THE ADDRESSES THAT WILL
*              EVENTUALLY CONTAIN THE PARAMETERS THAT THE MACRO
*              REQUIRES FOR PROPER OPERATION
*
         LA    R2,PARAM2
         LA    R3,PARAM3
         LA    R4,PARAM4
         STM   R2,R4,IEHEMAC1+4
         LA    SAVEREG,MARESAR
GETMORE  GET   UTINDCB,READTOO
         TM    IEHESW2,PRNTBIT    ARE WE TO PRINT CONTROL CARDS  S21046
         BC    8,CHECKPRT         NO THEN BRANCH                 S21046
         MVC   MSGOUT(80),READTOO
         SR    ZERO,ZERO          GO TO MSG WRITER
         L     LINKREG,MSGRTNAD   WITH A REQUEST TO WRITE
         BALR  RETURN,LINKREG     FROM THE OUTPUT  AREA
CHECKPRT CLC   READTOO(TWO),SLASHAST   CHECK INPUT STREAM FOR    S21046
         BNE   *+10                     A '/*' IN COLUMN 1 AND 2
         L     LINKREG,UTINDCB+32       EXIT ON A FIND
         BR    LINKREG
         CLI   COL72,BLANK        CHECK IF CONTINUE CARD
         BC    7,TURNSW                BRANCH IF CONTINUATION IS A23466
*                                      EXPECTED                  A23466
         OI    IEHESW1,CONTINUE    END OF CONTINUE CARDS SET BIT 2 SW 1
         NI    MOUNTSW,CLEAROUT        TURN ERROR SWITCH         A23466
*                                      INDICATOR OFF             A23466
         BC    15,COMMENT              BRANCH TO TEST FOR COMMENTA23466
*                                      IS ON                     A23466
TURNSW   EQU   *                                                 A23466
         OI    MOUNTSW,X'02'           TURN ERROR SWITCH         A23466
*                                      INDICATOR ON              A23466
COMMENT  EQU   *                                                 A23466
         TM    IEHESW1,COMMENTS        TEST IF COMMENT SWITCH    A23466
         BZ    CARDONE
         TM    IEHESW1,CONTINUE    CHECK IF CONTINUE CARD
         BZ    GETMORE           BRANCH IF A COMMENT AND CONTINUE CARD
         TM    IEHESW1,NDSWMSK         TEST FOR END OF SCAN
         BO    ENDCALL                 BRANCH IF END
         B     COMPAGN           GO BACK TO THE SCAN ROUTINE
CHECK16  CLI   COL16,BLANK        TEST IF COL 16 IS BLANK
         BNE   *+8                BRANCH IF IT IS NOT
         OI    IEHESW1,COMMENTS    TURN ON THE COMMENTS SWITCH
         MVC   MIDDLE(57),COL16   BUTT THIS CARD TO PREVIOUS CARD
         B     COMPAGN            GO BACK TO THE SCAN ROUTINE
CARDONE  TM    IEHESW1,FIRSTONE    TEST IF THIS IS FIRST CARD
         BNE   CHECK16           BRANCH IF IT IS NOT
         OI    IEHESW1,FIRSTONE     TURN OFF THE FIRST CARD SW.
         LA    R2,READTOO
         LA    R3,71(R2)
         STM   R2,R3,IEHESTIN     STORE STT AND STP FOR SCAN
         B     FNDECODE
ENDATA   DC    F'0'
*              THIS ROUTINE SCANS OFF A KEYWORD OR AN OPTION,
*              PERFORMS A TABLE LOOK UP ON THE FIELD SCANNED
*              OUT, AND FROM THE TABLE SELECTS THE ADDRESS
*              OF A ROUTINE TO WHICH IT THEN PASSES CONTROL
KODECODE BALR  RB,0
         USING *,RB                                              S21046
         USING *+OFFSET1K,RB2                                    S21046
         LA    RB2,OFFSET1K(RB)   SET UP BASE REG DISPLACEMENT   S21046
         L     RB,SCANBASE
         LA    RB2,OFFSET1K(RB)   SET UP BASE REG DISPLACEMENT   S21046
         USING IEHESCAN+TWO,RB                                   S21046
         USING IEHESCAN+OFFSET2,RB2                              S21046
         MVC   IEHECHAR(2),ANYSPEC      STOP ON ANY SPECIAL CHARACTER
         MVI   IEHETBL,X'F0'            REQUEST A TLU.
         BALR  RETURN,RB               ROUTINE
         NI    IEHEARGL,X'07'
         LM    R2,R3,0(RBD)        PLACE THE KEYWORD
         STC   R2,KWSA             AND ITS LENGTH
         EX    R2,MOVEKEY          INTO KEYWORD SAVE AREA
         L     R7,IEHEFUN          ADDRESS OF FUNCTION TO REG 7
         LTR   R7,R7               TEST FOR A FIND IN THE TLU
         BZ    BADSYN              BRANCH IF NO FIND
         SR    R8,R8
         IC    R8,IEHECODE         GET THE DELIMITER CODE
         SLL   R8,2                4 TIMES THE CODE FOR INDEXING
         EX    0,DOSMTHIN(R8)
         BNE   BADSYN         BRANCH IF ERROR IN STATEMENT SYNTAX
*                   IF WE HAVE NOT BRANCHED AS A RESULT OF THE
*              PREVIOUS EXECUTE AND BNE INSTRUCTIONS THEN IT IS
*              ESTABLISHED THAT A COMMA OR BLANK DELIMITED A VALID
*              OPTION. OR  A AN EQUAL SIGN DELIMITED A VALID KEYWORD
*                   WE WILL THERFORE SELECT THE ADDRESS OF THE ROUTINE
*              WHICH HANDLES THIS KEYWORD OR OPTION AND GO TO IT.
*                   FIRST WE MUST UPDATE  THE START ADDRESS FOR SCAN.
         L     R4,IEHEFND
         LA    R4,1(R4)            UPDATE THE START
         ST    R4,IEHESTT          ADDRESS FOR SCAN
         SPACE 2
         MVC   FULLWORD(4),2(R7)   ALLIGN THE REQUIRED ADDRESS
         L     R4,FULLWORD         PUT IT IN A REGISTER
         BR    R4                  GO THERE
MOVEKEY  MVC   KWSA+1(1),0(R3)
BADSYN   EQU   *                                                 A25564
         L     LINKREG,SEVER8          GO TO CONDITION CODE      A25564
         BALR  RETURN,LINKREG          HANDLER                   A25564
         LA    PARAMREG,3              PUT MSG# INTO REGISTER    A25564
         B     GOAGAIN
DOSMTHIN B     BADSYN
         B     BADSYN              ONE OF THESE INSTRUCTIONS IS
         CLI   0(R7),X'02'         EXECUTED TO PROVIDE A CHECK
         CLI   0(R7),X'01'        ON CONTROL CARD SYNTAX WHICH
         B     BADSYN              ONE IS DETERMINED BY THE DELIMITER
         B     BADSYN              FOUND BY THE LAST SCAN.
         CLI   0(R7),X'02'
         SPACE 2
****     ****       FUNCTION  NAME  DECODING       ****    ****    ****
         SPACE 2
*        THE PURPOSE OF THIS ROUTINE IS TO OBTAIN THE ADDRESS OF
*        ANOTHER ROUTINE WHICH WILL BE USED LATER TO CALL THE MACRO
*        WHICH WILL PROVIDE THE REQUESTED FUNCTION.
         SPACE 1
*             TO THIS END IT WILL TEST CONTROL STATEMENT FOR THE
*        PRESENCE OF A NAME FIELD.  IF ONE IS PRESENT IT WILL    A24020
*        SCAN OVER IT FOR SYNTAX ERRORS.  BLANKS PRECEEDING THE  A24020
*        OPERAND FIELD WILL BE SKIPPED.  THE ROUTINE WILL THEN   A24020
*        SCAN OUT THE FUNCTIONS NAME, PERFORM A TABLE LOOK UP    A24020
*        WITH IT AND MOVE THE ASSOCIATED ADDRESS TO A KNOWN      A24020
*        LOCATION FOR FUTURE REFERENCE.                          A24020
FNDECODE LA    R3,IEHESTIN         START AND STOP ADDRESSES
         LM    R3,R4,0(R3)         ARE PLACED IN THE
         STM   R3,R4,IEHESTT       SCANLIST
         MVI   CCNAME,BLANKBYT    BLANK OUT CCNAME IN DSECT      S21046
         MVC   CCNAME+ONEBYTE(SEVEN),CCNAME                      S21046
         CLI   0(R3),C' '     TEST FOR A BLANK NAME FIELD
         BE    NONAME
         CLI   0(R3),C'A'              TEST TO SEE IF 1ST CHAR   A24020
*                                      IS AN ALPHABETIC          A24020
         BC    4,SETERROR              IF LOW GO SET ERROR SWITCHA24020
         CLI   0(R3),C'Z'              TEST TO SEE IF 1ST CHAR @ZM33351
*                                      IS AN ALPHABETIC          A24020
         BC    2,SETERROR              IF HIGH GO TO SET ERROR SWA24020
CONTSCAN EQU   *                                                 A24020
         LA    R3,1(R3)                GO TO NEXT BYTE           A24020
         ST    LISTREG,AREAONE         SAVE REGISTER 1           A24020
         ST    R2,AREATWO              SAVE REGISTER 2           A24020
         ST    R5,AREAFIVE             SAVE REGISTER 5           A24020
         ST    R6,AREASIX              SAVE REGISTER 6           A24020
         XR    LISTREG,LISTREG         CLEAR OUT REGISTER 1      A24020
         XR    R2,R2                   CLEAR OUT REGISTER 2      A24020
         TRT   0(8,R3),TRTTABLE        SCAN NAME FIELD OF        A24020
*                                      CONTROL STATEMENT         A24020
SCAN     EQU   *                                                 A24020
         LR    R6,LISTREG              PUT ADDRESS OF LAST BYTE  A24020
*                                      SCANNED INTO REGISTER 6   A24020
         BC    8,TOOLONG               BRANCH IF NAME IS TOO LONGA24020
BRNCHTAB BC    15,BRNCHTAB(R2)         TAKE BRANCH DEPENDENT UPONA24020
*                                      CONTENTS OF REGISTER 2    A24020
         BC    15,INVALID              CC=4 BRANCH TO INVALID RTNA24020
ENDSCAN  EQU   *                                                 A24020
         ST    R6,IEHEFND              PUT ADDRESS OF BLANK      A24020
*                                      FOUND INTO IEHEFND        A24020
         L     R2,IEHESTT         LOAD ADDRESS OF CONTROL CARD N S21046
         SR    R6,R2              GET NAME FIELD LENGTH          S21046
         EX    R6,CCMOVE          MOVE THE NAME TO SAVE IT       S21046
         L     LISTREG,AREAONE         RESTORE                   A24020
         L     R2,AREATWO                REGISTERS               A24020
         L     R5,AREAFIVE                 TO ORGINAL            A24020
         L     R6,AREASIX                    STATUS              A24020
         TM    MOUNTSW,ERRSW2     WAS SYNTAX ERROR FOUND         S21046
         BC    8,SCANOPRD              NO, SYNTAX ERROR WAS NOT  A24020
*                                      FOUND, GO TO CONTINUE SCANA24020
*                                      OF CONTROL STATEMENT      A24020
         NI    MOUNTSW,CLEARSW         TURN ERROR SWITCH OFF     A24020
         LA    PARAMREG,58             PUT ERROR MESG NUMBER     A24020
*                                      INTO REG 0                A24020
         MVI   MSGOUT,C' '             CLEAR                     A24020
         MVC   MSGOUT+1(119),MSGOUT    MESSAGE AREA              A24020
         L     LINKREG,MSGRTNAD        PUT ADDRESS OF MSG RTN    A24020
*                                      INTO REG 15               A24020
         BALR  RETURN,LINKREG          GO WRITE MESSAGE          A24020
         L     LINKREG,SEVER4          GO TO CONDITION CODE      A24020
         BALR  RETURN,LINKREG          HANDLER                   A24020
         BC    15,SCANOPRD             CONTINUE TO SCAN CONTROL  A24020
*                                      STATEMENT                 A24020
SETERROR EQU   *                                                 A24020
         OI    MOUNTSW,X'04'           NO, POST ERROR CODE OF 4  A24020
         BC    15,CONTSCAN             BRANCH TO CONTINUE SCAN OFA24020
*                                      NAME FIELD                A24020
TOOLONG  EQU   *                                                 A24020
         OI    MOUNTSW,X'04'           POST ERROR CODE OF 4      A24020
         LA    R6,8(R3)                GO TO NEXT BYTE           A24020
TESTAGAN EQU   *                                                 A24020
         CLI   0(R6),X'40'             IS THIS BYTE BLANK        A24020
         BC    8,ENDSCAN               YES, GO TO END OF SCAN    A24020
         LA    R6,1(R6)                GO TO NEXT BYTE           A24020
         BC    15,TESTAGAN             NO, TEST NEXT BYTE        A24020
INVALID  EQU   *                                                 A24020
         OI    MOUNTSW,X'04'           POST ERROR CODE OF 4      A24020
         LA    R5,7(R3)                PUT ADDRESS OF LAST BYTE  A24020
*                                      TO BE SCANNED INTO REG 5  A24020
         SR    R5,R6                   FIND OUT HOW MANY BYTES   A24020
*                                      ARE LEFT TO BE SCANNED    A24020
         LA    R8,1(R6)                GO TO NEXT BYTE           A24020
         BCTR  R5,0                    TAKE ONE FROM REGISTER 5  A24020
         XR    LISTREG,LISTREG         CLEAR REGISTER 1          A24020
         XR    R2,R2                   CLEAR REGISTER 2          A24020
         EX    R5,NEXTTEST             INSERT NUMBER OF BYTES TO A24020
*                                      BE SCANNED INTO TRT INSTR A24020
         BC    15,SCAN                 GO TO SCAN ANALYSIS RTN   A24020
CCMOVE   MVC   CCNAME(ONEBYTE),ZERODSP(R2)                       S21046
*                                 MOVE FOR NAME FIELD            S21046
NEXTTEST TRT   0(0,R8),TRTTABLE        USED FOR SCAN OF NAME     A24020
*                                      FIELD                     A24020
SCANOPRD EQU   *                                                 A24020
         NI    IEHESW1,ENDSWOFF
*        AT THIS POINT THE NAME FIELD HAS BEEN SCANNED FOR THESE A24020
*        SYNTAX ERRORS:                                          A24020
*        1.  THE FIRST CHARACTER NOT BEING AN ALPHABETIC.        A24020
*        2.  THE NAME FIELD BEING LONGER THAN 8 CHARACTERS.      A24020
*        3.  CHARACTERS 2-8 CONTAINING ANYTHING OTHER THAN       A24020
*            ALPHAMERIC OR NATIONAL CHARACTERS                   A24020
*        IF ANY OF THE ABOVE CONDITIONS ARE FOUND AN ERROR       A24020
*        MESSAGE IS WRITTEN AND A CONDITION CODE OF 4 IS         A24020
*        POSTED.  THE SEARCH IS NOW CONTINUED FROM THE FIRST     A24020
*        BLANK COLUMN TO THE FIRST NONBLANK COLUMN (THE START OF A24020
*        THE OPERATION FIELD.)                                   A24020
         MVC   IEHESTT(4),IEHEFND       START ADDRESS ALONG WITH
NONAME   MVC   IEHECHAR(2),NOTBLANK     CHARACTER AND CODE ARE
*                                       INSERTED INTO THE SCANLIST
         L     RB,SCANAD          GO TO THE SCAN
         LA    RB2,OFFSET1K(RB)   SET UP BASE REG DISPLACEMENT   S21046
         BALR  RETURN,RB               ROUTINE
         USING *,RETURN            SCAN RETURNS WITH THE ADDRESS
         DROP  RB2                DON'T WANT RB2 USED AS BASE    S21046
*                                 REG ON THE LOAD OF SCANBASE    S21046
         L     RB,SCANBASE         OF THE BEGINING OF THE OPERATION
         LA    RB2,OFFSET1K(RB)   SET UP BASE REG                S21046
         DROP  RETURN              FIELD
         USING IEHESCAN+OFFSET2,RB2                              S21046
*             I WILL NOW SCAN ACROSS THE OPERATION FIELD AND HAVE
*        A TABLE LOOK UP PERFORMED ON THE OPERATION SCANNED OUT.
*        IF THE OPERATION IS NOT FOUND IN THE TABLE OR IS FOUND BUT
*        IS NOT A FUNCTION NAME A DIAGNOSTIC MESSAGE WILL BE
*        WRITTEN AND THE REQUEST IGNORED
         MVC   IEHESTT(4),IEHEFND       RESET START ADDRESS
         MVC   IEHECHAR(2),BLANKEQU     RESET CHARACTER AND CODE
         MVI   IEHETBL,X'FF'            ISSUE REQUEST FOR TLU
         L     RB,SCANAD          GO TO THE SCAN
         BALR  RETURN,RB               ROUTINE
         NI    IEHEARGL,X'07'      PLACE FUNCTION NAME
         LM    R2,R3,0(RBD)        AND ITS LENGTH
         STC   R2,FNSA             INTO FUNCTION NAME
         EX    R2,*+8              SAVE AREA
         B     *+10
         MVC   FNSA+1(1),0(R3)
         NI    IEHESW1,ENDSWOFF
         L     R4,IEHEFUN          R4 GETS ADDRESS OF TABLE FUNCTION
         LTR   R4,R4
         BZ    NOTINTAB            BRANCH IF NO FIND FROM TLU ROUTINE
         CLI   0(R4),X'03'         TEST FOR A VALID REQUEST NAME.
         BNE   NOTINTAB            BRANCH IF NOT VALID
         MVC   FINUSE(4),2(R4)         ----------FDLD INSERT-------
*             AT THIS POINT THE ADDRESS OF THE ROUTINE WHICH PROVIDES
*        THE REQUESTED FUNCTION HAS BEEN STORED. WE WILL NOW SCAN OVER
*        BLANKS WHICH PRECEED THE OPERAND FIELD, AND SET UP SCANLIST
*        BEFORE GOING TO THE KEYWORD AND OPTION DECODER.
         MVC   IEHESTT(4),IEHEFND      RESET THE START ADDRESS
         MVC   IEHECHAR(2),NOTBLANK    RESET CHARACTERS AND CODE
         SR    R6,R6
         ST    R6,IEHETBL               NO TLU WANTED
         L     RB,SCANAD          GO TO THE SCAN
         BALR  RETURN,RB               ROUTINE
         MVC   IEHESTT(4),IEHEFND       RESET START ADDRESS
*-----------------GENERAL FUNCTION ROUTINE-----------------
FDLD     L     R9,FINUSE           GET ADDRESS OF LIST IN USE
         LA    R5,ONEWORD(R9)                                    S21046
         ST    R5,FINUSE          UPDATE THE ADDRESS OF LIST     S21046
         SR    R2,R2
         IC    R2,0(R9)
         SLL   R2,2                SELECT THE ROUTINE TO BE PERFORMED
         LA    RETURN,FDLD              PROVIDE A RETURN
         EX    0,*+4(R2)           GO THERE
*
* ONE OF THESE BRANCH INSTRUCTIONS ARE EXECUTED AS DETERMINED FROM
*        THE FIRST BYTE OF THE  DATA LIST  FOR THE FUNCTION IN USE
         B     XCONTROL           EXECUTE FOR A ZERO OP
         B     LISTECII           EXECUTE FOR A ONE  OP
         B     TESTDUP            EXECUTE FOR A TWO  OP
         B     SETDUP
         B     LINKSAVE
         B     DCRETURN
         B     GETAMSG
         B     EXECUTE
         B     READALL
         B     STTRESET
         B     XCTL
         B     SETCCODE                GO SET CONDITION CODE     A25564
         B     INIT               INITIALIZE PARAMETER LIST      S21046
         B     DSLNGTH            PUT DSNAME LENGTH IN PARAMETER S21046
*                                 LIST FOR PROTECT               S21046
*                                 FOR LIST OPERATION             S21046
FRECOVER MVC   FINUSE(4),FLSTADDR
         B     FDLD
*    ZERO IN FIRST BYTE WE WILL PASS CONTROL TO THE LOCATION SPECIFIED
XCONTROL L     R2,0(R9)
         BR    R2             GO TO LOCATION IN THE DATA LIST
*    A ONE  OP CODE CAUSES SETTING OF PAIAMSW, MAC1, CALL,ETC.
*        INITIALIZE  THE FUNCTION ---A ONE IN FIRST BYTE----
*                                                                S21046
*   SET UP TO ANALYZE OPERANDS                                   S21046
*                                                                S21046
LISTECII MVC   PPARAMSW(2),2(R9)
         MVC   IEHEMAC1(4),4(R9)
         LA    R2,FRECOVER
         ST    R2,IEHECALL
         LA    R5,ONEWORD(R5)                                    S21046
         ST    R5,FLSTADDR                                       S21046
         B     KODECODE
*                                                                S21046
*   TEST FOR MINIMUM PARAMETERS                                  S21046
*                                                                S21046
TESTDUP  IC    R2,3(R9)           2 OP  TEST A SWITCH
         SLL   R2,4
         IC    R3,2(R9)
         SR    R4,R4
         IC    R4,1(R9)
         LA    R4,DUPSW(R4)
         EX    R3,TESTSW
         EX    R2,BOC
         LA    R5,ONEWORD(R5)                                    S21046
        ST    R5,FINUSE                                          S21046
         B     FDLD
TESTSW   TM    0(R4),ZERO
BOC      BC    0,FDLD
*   SET THE DUPSW  A 3 OP    MASK IS LAST BYTE
SETDUP   L     R2,0(R9)
         EX    R2,DUPSET
         B     FDLD
DUPSET   OI    DUPSW,ZERO
*                                                                S21046
*   PICK UP ROUTING TABLE FOR MESSAGES TO BE PRINTED             S21046
*                                                                S21046
LINKSAVE L     R2,0(R9)
         ST    R2,FINUSE
         ST    R5,DCSAVEAD                                       S21046
         B     FDLD
*        5 OP   RETURN TO OLD DC LIST IN DCSAVEAD
DCRETURN MVC   FINUSE(4),DCSAVEAD
         B     FDLD
*        6 OP  SET REG ZERO AND GO TO THE MSG WRITER
GETAMSG  L     PARAMREG,0(R9)
         L     LINKREG,MSGRTNAD
         BR    LINKREG
*        7  OP  EXECUTE A REMOTE INSTRUCTION  OP  ADDR
EXECUTE  L     LINKREG,0(R9)
         EX    0,0(LINKREG)
         B     FDLD
SETCCODE EQU   *                       SET CONDITION CODE        A25564
         ST    RETURN,IEHECALL                                   A25564
         L     LINKREG,SEVER8          GO TO CONDITION           A25564
         BALR  RETURN,LINKREG          CODE HANDLER              A25564
         L     RETURN,IEHECALL         RESTORE REGISTER 14       A25564
         OI    IEHESW1,NDSWMSK                                   A25564
         BR    RB                      GO BACK TO IEHESCAN       A25564
*                                                                S21046
*       12 OP     INITIALIZE FOR PROTECT COMMANDS                S21046
*                                                                S21046
INIT     XC    IEHEMAC1+EIGHT(NINETEEN),IEHEMAC1+EIGHT ZERO OUT  S21046
*                                 MOVE ZEROES TO PARAMETER LIST  S21046
         LA    R3,CNT1PAS         LOAD DECREMENT FOR ONE WTOR    S21046
         STC   R3,PASWDCT1        STORE DECREMENT FOR PASWORD1   S21046
         STC   R3,PASWDCT3        STORE DECREMENT FOR CPASWORD   S21046
         B     FDLD               GO TO NEXT ENTRY OF TABLE      S21046
*                                                                S21046
*        13 OP PUT DSNAME LENGTH INTO PARAMETER FOR PROTECT      S21046
*                                                                S21046
DSLNGTH  IC    R2,PARAM2-ONEBYTE  PUT THE DSNAME LNGTH IN PARM   S21046
         LA    R2,ONEBYTE(R2)                                    S21046
         STC   R2,IEHEMAC1+ONEWORD                               S21046
         B     FDLD               GO TO NEXT ENTRY OF TABLE      S21046
*        8 OP  READ ALL CARD ASSOCIATED WITH THIS JOB NOW
READALL  OI    IEHESW1,NDSWMSK
         ST    RETURN,IEHECALL
         BR    RB                      GO BACK TO IEHESCAN       A25564
XCTL     L     R2,0(R9)                GET NUMBER OF THE LIST IN USE
         TM    DUPSW,X'08'        WAS MEMBER SPECIFIED
         BZ    NOMEMBER           NO ..... BRANCH
         OI    PPARAMSW,X'01'     SO VOL MOUNT WILL MOVE A DCB
         MVC   IEHEMAC1+8(4),IEHEMAC1+4
         MVI   IEHEMAC1,X'C1'
         MVI   IEHEMAC1+2,X'20'   SET UP A MEMBER OPERATOON
         CLI   PARAM4+1,X'01'     IS THERE MORE THAN 1 VOLUME
         BNE   XTRAKEY            YES .... BRANCH   (ERROR)
         LA    R2,13              POINT TO THE MEMBER LIST
NOMEMBER EQU   *
         ST    R2,FINUSE               STORE IT FOR THE SECOND LOAD
         TM    IEHESW2,MNTVOL     IS VOL PRESENT FOR PROTECT     S21046
         BZ    NOPROTCT           NO BRANCH                      S21046
         OI    IEHEMAC1,VOLMNT    CAUSE VOL MOUNTING             S21046
NOPROTCT EX    ZERO,GETAVOL       HAVE REQUIRED VOLUMES MOUNTED  S21046
         L     15,DECB2                GET ADDRESS OF V ADCONS
         L     15,28(15)               GET V ADCON OF SECOND LOAD
         BR    15                      GO THERE
NOTINTAB EQU   *                                                 A25564
         L     LINKREG,SEVER8          GO TO CONDITION CODE      A25564
         BALR  RETURN,LINKREG          HANDLER                   A25564
         LA    PARAMREG,2                                        A25564
         B     GOAGAIN
*        THIS ROUTINE WILL HANDLE THE MOVING OF PARAMETERS THAT
*        DO NOT REQUIRE ANY THING OTHER THAN MOVING  THAT IS
*        THEY DO NOT NEED ANY CONVERSTION OR UNPACKING ETC.
JUSTMOVE EQU   *
         MVC   CODELIST(8),COMBLANK    SET SCAN FOR A COMMA OR BLANK
         XC    IEHETBL(4),IEHETBL      REQUEST NO TQBLE LOOK UP
         BALR  RETURN,RB                GO TO SCAN ROUTINE
         MVC   CODELIST(8),SPECIALS     RESET SPECIAL CHARACTERS
         SPACE 1
*              ON RETURNING FROM SCAN WE HAVE ALL THE INFO NEEDED
*          TO MOVE THE ITEM JUST SCANNED OFF. THE ADDRESS AND LENGTH
*          OF THE ITEM ARE IN THE SCANLIST. THE RECEIVE LOCATION CAN
*          BE DETERMINED FROM THE 2ND BYTE OF THE FUNCTION POINTED TO
*          BY THE SCANLIST THIS FUNCTION IS ASSOCIATED  WITH THE
*          KEYWORD WHICH CAUSED ENTRY TO THIS ROUTINE.
         SPACE 1
         CLI   IEHEARGL,X'2B'           CHECK LENGTH OF THE SCAN
         BH    CODERR                  BRANCH IF DSNAME IS LONGER M1607
*                                      THAN 44 CHARACTERS         M1607
         TM    PPARAMSW+1,X'02'        MEMBERNAME SCANNED?     @ZA01655
         BO    MEMBLNG            YES.CHECK LGTH OF MEMBERNAME @ZA01655
*                                                                A28552
*     CHECK NAME , ALIAS , OR INDEX GIVEN FOR INDEX LEVEL <= 8 CHARS
*  ALPHABETIC FIRST CHARACTERS , AND ALPHAMERIC CHARACTERS .     A28552
*                                                                A28552
CHECKS   TM    PPARAMSW+1,X'01'        CHECK 1ST CHARS ?       @ZA01655
         BZ    DONTCHCK                NO CHECK REQUIRED         A28552
         L     NAMEPTR,IEHESTT         GET ADDRESS OF NAME       A28552
         STM   LISTREG,R2,AREAONE      SAVE REGISTERS            A28552
         XR    LISTREG,LISTREG         ZERO OUT REGISTERS USED   A28552
*                                      IN TRT INSTRUCTION        A28552
         TM    PPARAMSW+1,X'02'        IS THIS A MEMBER NAME ?   A28552
         BZ    NXTFRST                 IF NOT BRANCH             A28552
         NI    PPARAMSW+1,X'FD'        TURN OFF THE MEMBER BIT   A28552
         B    CHCKLNG                  DON'T CHECK FOR ALPHABETICA28552
*                                      FIRST CHARACTER           A28552
MEMBLNG  NI    PPARAMSW+1,X'FD'        TURN OFF THE MEMBER BIT @ZA01655
         CLI   IEHEARGL,X'07'          MEMBERNAME > 8.         @ZA01655
         BH    CODERR                  YES... ERROR MSG        @ZA01655
         B     CHECKS                  NO.. GO ON TESTING      @ZA01655
NXTFRST  EQU   *                       CHECK FIRST CHARACTER OF  A28552
*                                      INDEX LEVEL TO BE SURE    A28552
         CLI   0(NAMEPTR),C'$'         IT IS BETWEEN $ AND Z     A28552
         BL    CODERR                                            A28552
         CLI   0(NAMEPTR),C'Z'                                   A28552
         BH    CODERR                                            A28552
CHCKLNG  EQU   *                                                 A28552
         TRT   0(9,NAMEPTR),TRTTABLE   CHECK CHAR VALIDITY       A28552
         BC    8,CODERR                BRANCH IF TOO LONG        A28552
         CLC   0(1,ARGREG),SPECIALS+1  DELIMITED BY A COMMA ?    A28552
         BE    LOADREG                 IF SO MOVE ON             A28552
         CLC   0(1,ARGREG),SPECIALS+6  DELIMITED BY A BLANK ?    A28552
         BE    LOADREG                 IF SO MOVE ON             A28552
         CLC   0(1,ARGREG),SPECIALS    DELIMITED BY A PERIOD ?   A28552
         BNE   CODERR                  IF NOT BRANCH TO ERROR RTNA28552
         LA    NAMEPTR,1(ARGREG)       UPDATE POINTER            A28552
         B     NXTFRST                 CHECK 1ST CHAR OF NEXT    A28552
*                                      INDEX LEVEL               A28552
CODERR   EQU   *                                                 A28552
         L     LINKREG,SEVER8          GO SET CONDITION CODE     A28552
         BALR  RETURN,LINKREG                                    A28552
         LA    PARAMREG,59             MESSAGE NUMBER 59         A28552
         B     GOAGAIN                 BRANCH TO LINK ROUTINE    A28552
LOADREG  EQU   *                                                 A28552
         LM    LISTREG,R2,AREAONE      RESTORE REGISTERS         A28552
         TM    IEHEMAC1+2,X'20'         IS THIS RENAME           A42349
         BZ    DONTCHCK                IF NOT DONT TURN OFF BIT  A42349
         NI    PPARAMSW+1,X'FE'        TURN OFF TEST BIT         A42349
DONTCHCK EQU   *                                                 A28552
         L     R2,IEHEFUN              FUNCTION ADDRESS TO R2
         SR    R3,R3
         IC    R3,1(R2)       NUMBER OF RECEIVE AREA TO REG 3
         LA    R4,256             PUT A BIT IN REG FOUR
         SRL   R4,0(R3)           BUILD A MASK WITH IT
         EX    R4,DUPTEST         TEST FOR DUPLICATE PARAMETERS
         BO    XTRAKEY                 BRANCH IF DUPLICATED      A25564
         EX    R4,SETDUPSW        NO DUPLICATE   THEN TURN ON SWITCH
         SLL   R3,2           4 TIME THE NUMBER FOR INDEXING
         L     R4,WARE2PUT(R3)     ADDR OF RECEIVE AREA TO REG 4
         MVI   0(R4),C' '
         MVC   1(43,R4),0(R4)           CLEAR RECEIVE AREA TO BLANKS
         L     R5,IEHESTT               ADDRESS OF DATA TO REG 5
         IC    R3,IEHEARGL              LENGTH OF DATA TO REG 3
         EX    R3,MOVEDATA    MOVE THE PARAMETER TO ITS AREA
         BCTR  R4,0                INTO THE RECEIVE AREA -1
         STC   R3,0(R4)            STORE THE LENGTH
         L     R6,IEHEFND
         LA    R6,1(R6)           1 UP START ADDRESS FOR SCAN
         ST    R6,IEHESTT
         B     KODECODE
MOVEDATA MVC   0(1,R4),0(R5)  MOVES DATA TO RECEIVE AREA WHEN EXECUTED
DUPTEST  TM    DUPSW,X'00'        TESTS FOR DUPLICATE PARAMETERS
SETDUPSW OI    DUPSW,X'00'        RECORDS PARAMETERS PRESENCE
INDEX    TM    PPARAMSW,X'80'          TEST TO SEE IF INDEX SHOULD BE
         BO    JUSTMOVE                PRESENTIF YES GO MOVE IT
XTRAKEY  EQU   *                                                 A25564
         LA    LISTREG,XTRADATA                                  A25564
ENT2FDLD ST    LISTREG,FINUSE
         B     FDLD
EMPTY    TM    PPARAMSW+1,X'80'   IS EMPTY ALLOWED
         BZ    XTRAKEY            NO ..... BRANCH
         OI    IEHEMAC1+2,X'08'   RECORD THE PRESENCE OF EMPTY
         B     KODECODE
DELETE   TM    PPARAMSW+1,X'80'   IS DELETE ALLOWED
         BZ    XTRAKEY            NO ..... BRANCH
         OI    IEHEMAC1+2,X'40'   RECORD DELETE
         B     KODECODE
ENTRIES  TM    PPARAMSW+1,X'80'   IS ENTRIES ALLOWED
         BZ    XTRAKEY            NO ..... BRANCH
         TM    DUPSW,X'02'
         BO    XTRAKEY       BRANCH IF ENTRIES IS SPECIFIED TWICE
         OI    DUPSW,X'02'        RECORD ENTRIES
         XC    IEHETBL(4),IEHETBL   PREVENT A TLU
         BALR  RETURN,RB          SCAN OFF THE NUMBER
         MVC   VOLISTAD(4),IEHEMAC1+12
         B     DSSEQ              UNPACK,CONVERT,STORE AT PARAM4+1
CVOL     TM    PPARAMSW,X'40'          TEST TO SEE IF CVOL SHOULD BE
         BZ    XTRAKEY
         OI    IEHEMAC1,X'80'
         TM    DUPSW,X'20'
         BO    XTRAKEY            BRANCH IF DUPLICATE ENTRY
         OI    DUPSW,X'20'
         LA    R3,PARAM3
         ST    R3,VOLISTAD
         LA    R4,VMATRIX1
         ST    R4,MATRIXIU
         LA    R3,PARAM3+4
         ST    R3,IEHEMAC1+8
         OI    IEHESW2,CVOLBIT    TURN ON THE CVOL BIT           S21046
         B     VOLSCAN
MEMBER   TM    IEHEMAC1,X'01'     SHOLUD MEMBER BE PRESENT
         BZ    XTRAKEY            NO ..... BRANCH
         OI    PPARAMSW+1,X'02'        TURN ON BIT TO HAVE     @ZA01655
*                                      MEMBER CHECKED FOR        A28552
*                                      LENGTH AND ALPHAMERICS    A28552
         LA    0,EOCORE
         ST    0,IEHEMAC1+16
DSNAME   TM    PPARAMSW,X'10'     SHOULD DSNAME BE HERE ?
         BZ    XTRAKEY             NO... BRANCH
         NI    PPARAMSW,X'FE'
         B     JUSTMOVE
*                                                                S21046
*      CHECK TO BE SURE PASWORD1 IS VALID HERE, IF IT IS A       S21046
*      DUPLICATE, AND INITIALIZE TO MOVE IT TO THE PROTECT       S21046
*      PARAMETER LIST                                            S21046
*                                                                S21046
PASWORD1 TM    PPARAMSW+ONEBYTE,PSWD1MSK SHOULD PASWORD1 BE HERE S21046
         BZ    XTRAKEY            NO IT IS REDUNDANT             S21046
         TM    DUPSW+ONEBYTE,PSWD1DUP  HAS PASWORD1 BEEN HERE    S21046
         BO    XTRAKEY            YES IT IS A DUPLICATE          S21046
         OI    DUPSW+ONEBYTE,PSWD1DUP  INDICATE PASWORD1 PRESENT S21046
         LA    R3,PARAM3          GET ADDRESS FOR PASWORD1       S21046
         ST    R3,IEHEMAC1+PSWD1PRM    STORE AD IN PARAMETERS    S21046
         B     MOVPASWD           GO MOVE PASWORD1 TO ITS AREA   S21046
*                                                                S21046
*      CHECK TO BE SURE PASWORD2 IS VALID HERE, IF IT IS A       S21046
*      DUPLICATE, AND INITIALIZE TO MOVE IT TO THE PROTECT       S21046
*      PARAMETER LIST.                                           S21046
*                                                                S21046
PASWORD2 TM    PPARAMSW+ONEBYTE,PSWD2MSK SHOULD PASWORD2 BE HERE S21046
         BZ    XTRAKEY            NO IT IS REDUNDANT             S21046
         TM    DUPSW+ONEBYTE,PSWD2DUP  HAS PASWORD2 BEEN HERE    S21046
         BO    XTRAKEY            YES IT IS A DUPLICATE          S21046
         OI    DUPSW+ONEBYTE,PSWD2DUP  INDICATE PASWORD2 PRESENT S21046
         LA    R3,PARAM7          GET ADDRESS FOR PASWORD2       S21046
         ST    R3,DUMMY           STORE ADDRESS IN TEMPORARY     S21046
         MVC   IEHEMAC1+PSWD2PRM(THREEBYT),DUMMY+ONEBYTE         S21046
*                                 MOVE PASWORD2 TO PARAM LIST    S21046
         B     MOVPASWD                 GO MOVE PASWORD2         S21046
*                                                                S21046
*      CHECK TO BE SURE CPASWORD IS VALID HERE, IF IT IS A       S21046
*      DUPLICATE, AND INITIALIZE TO MOVE IT TO THE PROTECT       S21046
*      PARAMETER LIST.                                           S21046
*                                                                S21046
CPASWORD TM    PPARAMSW+ONEBYTE,CPSWDMSK SHOULD CPASWORD BE HERE S21046
         BZ    XTRAKEY            NO IT IS REDUNDANT             S21046
         TM    DUPSW+ONEBYTE,CPSWDDUP  HAS CPASWORD BEEN HERE    S21046
         BO    XTRAKEY            YES IT IS A DUPLICATE          S21046
         OI    DUPSW+ONEBYTE,CPSWDDUP  INDICATE CPASWORD PRESENT S21046
         LA    R3,PARAM5          GET ADDRESS FOR CPASWORD       S21046
         ST    R3,IEHEMAC1+CPSWDPRM    STORE AD IN PARAMETERS    S21046
         B     MOVPASWD           GO MOVE CPASWORD TO ITS AREA   S21046
*                                                                S21046
*      CHECK TO BE SURE TYPE SHOULD BE HERE, CHECK FOR DUPLICATE S21046
*      SCAN FOR THE NUMERIC TYPE, AND MOVE NUMBER SCANNED        S21046
*      TO THE PROTECT PARAMETER LIST.                            S21046
*                                                                S21046
TYPE     TM    PPARAMSW+ONEBYTE,TYPEMSK SHOULD TYPE BE HERE      S21046
         BZ    XTRAKEY            NO IT IS REDUNDANT             S21046
         TM    DUPSW+ONEBYTE,TYPEDUP   HAS TYPE BEEN HERE        S21046
         BO    XTRAKEY            YES IT IS A DUPLICATE          S21046
         OI    DUPSW+ONEBYTE,TYPEDUP   INDICATE TYPE PRESENT     S21046
         MVC   CODELIST(EIGHT),COMBLANK SCAN FOR , OR BLANK      S21046
         XC    IEHETBL(ONEWORD),IEHETBL NO TABLE LOOKUP WANTED   S21046
         BALR  RETURN,RB                GO TO SCAN ROUTINE       S21046
         MVC   CODELIST(EIGHT),SPECIALS RESET CODELIST           S21046
         CLI   IEHEARGL,ZEROBYTE  CHECK LENGTH OF SCAN           S21046
         BH    BADSYN             BRANCH IF LENGTH GREATER TWO   S21046
         L     R3,IEHESTT         LOAD ADDRESS OF TYPE FIELD     S21046
         TM    ZERODSP(R3),NUMFLD EBCDIC CHARACTER               S21046
         BNO   BADSYN             BRANCH IF NOT NUMERAL          S21046
         NI    ZERODSP(R3),DROPZONE    DROP THE ZONE             S21046
         CLI   ZERODSP(R3),TYPECODE   IS TYPE GREATER THAN 3     S21046
         BH    BADSYN             IF SO IT IS INVALID            S21046
         MVC   IEHEMAC1+TYPEPRM(ONEBYTE),ZERODSP(R3)             S21046
*                                 MOVE TYPE TO PARAMETER LIST    S21046
         L     R6,IEHEFND         UP THE START                   S21046
         LA    R6,ONEBYTE(R6)     ADDRESS                        S21046
         ST    R6,IEHESTT         BY ONE FOR NEXT SCAN AND       S21046
         B     KODECODE           GO GET ANOTHER KEYWORD         S21046
*                                                                S21046
*      CHECK TO BE SURE 'DATA' SHOULD BE HERE, CHECK FOR         S21046
*      DUPLICATES, PUT ADDRESS OF DATA INTO PROTECT              S21046
*      PARAMETER LIST, AND GO SCAN FOR BEGINNING AND END         S21046
*      OF THE CHARACTER STRING.                                  S21046
*                                                                S21046
DATA     TM    PPARAMSW+ONEBYTE,DATAMSK SHOULD DATA BE HERE      S21046
         BZ    XTRAKEY            NO IT IS REDUNDANT             S21046
         TM    DUPSW+ONEBYTE,DATADUP   HAS DATA BEEN HERE        S21046
         BO    XTRAKEY            YES IT IS A DUPLICATE          S21046
         OI    DUPSW+ONEBYTE,DATADUP   INDICATE DATA IS PRESENT  S21046
         LA    R3,PARAM8          LOAD ADDRESS FOR DATA          S21046
         ST    R3,IEHEMAC1+DATAPRM     STORE AD IN PARAMETER     S21046
         MVC   CODELIST(EIGHT),QUOTE   SET CODE LIST FIND QUOTE  S21046
         MVC   IEHECHAR(HALFWD),AQUOTE SCAN FOR ONLY A QUOTE     S21046
         XC    IEHETBL(ONEWORD),IEHETBL NO TABLE LOOKUP          S21046
AGN      BALR  RETURN,RB          GO TO SCAN                     S21046
         CLI   IEHECODE,QUOTEMSK  WAS A QUOTE FOUND              S21046
         BNE   BADSYN             NO BRANCH                      S21046
         L     R6,IEHEFND         SET UP SCAN TO FIND QUOTE      S21046
         LA    R6,ONEBYTE(R6)     UP THE START ADDRESS FOR SCAN  S21046
         L     R5,IEHESTT         THE START FOR THE DATA AREA    S21046
         ST    R6,IEHESTT         STORE NEW START FOR SCAN       S21046
         TM    IEHESW2,ONEQUOTE   WAS ONE QUOTE FOUND BEFORE     S21046
         BO    MOVE               YES BRANCH                     S21046
         OI    IEHESW2,ONEQUOTE   INDICATE ONE QUOTE IS FOUND    S21046
         B     AGN                GO FIND SECOND QUOTE           S21046
*                                                                S21046
*      CHECK DATA CHARACTER STRING LENGTH FOR GREATER THAN       S21046
*      77 CHARACTERS, IF LEGAL PUT DATA LENGTH INTO PROTECT      S21046
*      PARAMETER LIST, IF NOT LEGAL INITIALIZE TO PRINT          S21046
*      ERROR MESSAGE                                             S21046
*                                                                S21046
MOVE     IC    R4,IEHEARGL        GET LENGTH OF ARGUMENT         S21046
         LA    R4,ONEBYTE(R4)     LENGTH IS ONE GREATER          S21046
         CLI   IEHEARGL,DATALGTH  DATA LENGTH GREATER THAN 77    S21046
         BH    BADSYN             IF YES, BAD SYNTAX             S21046
         STC   R4,IEHEMAC1+DATAPRM     STOR DATA LENGTH          S21046
         LA    R3,PARAM8          LOAD ADDRESS FOR PARAMETER     S21046
         EX    R4,PROTCTMV        MOVE THE PARAMETER TO AREA     S21046
         MVC   IEHECHAR(HALFWD),ANYSPEC                          S21046
*                                 SCAN FOR ANY SPECIAL CHAR      S21046
         MVC   CODELIST(EIGHT),COMBLANK                          S21046
*                                 SEARCH FOR COMMA OR BLANK      S21046
         BALR  RETURN,RB          GO TO SCAN ROUTINE             S21046
         MVC   CODELIST(EIGHT),SPECIALS                          S21046
*                                 RESTORE THE CODELIST           S21046
         L     R6,IEHEFND         UP THE START ADDRESS           S21046
         LA    R6,ONEBYTE(R6)                                    S21046
         ST    R6,IEHESTT         STORE THE NEW START ADDRESS    S21046
         B     KODECODE           GO GET ANOTHE KEYWORD          S21046
*                                                                S21046
*      SCAN FOR A PASSWORD, CHECK LENGTH FOR GREATER THAN 8      S21046
*      CHARACTERS AND MOVE THE PASSWORD TO THE PROTECT           S21046
*      PARAMETER LIST IF IT IS LEGAL. IF THE PASSWORD IS LONGER  S21046
*      THAN EIGHT INITIALIZE TO PRINT ERROR MESSAGE              S21046
*                                                                S21046
MOVPASWD MVC   CODELIST(EIGHT),COMBLANK                          S21046
*                                 SEARCH FOR COMMA OR BLANK      S21046
         XC    IEHETBL(ONEWORD),IEHETBL                          S21046
*                                 NO TABLE LOOKUP WANTED         S21046
         BALR  RETURN,RB          GO TO SCAN ROUTINE             S21046
         MVC   CODELIST(EIGHT),SPECIALS                          S21046
*                                 RESTORE THE CODELIST           S21046
         CLI   IEHEARGL,LNGTHCHK  IS LENGTH GREATER THAN 8       S21046
         BH    BADSYN             GO PRINT MESSAGE               S21046
         L     R2,IEHEFUN         LOAD FUNCTION TABLE            S21046
         IC    R5,ONEBYTE(R2)     LOAD PARAMETER WORD NUMBER     S21046
         SLL   R5,MULTBY4         MULT BY 4 TO GET WORD          S21046
         L     R3,WARE2PUT(R5)    LOAD ADDRESS TO PUT PAR&M      S21046
         MVI   ZERODSP(R3),BLANKBYT    BLANK OUT RECIEVE AREA    S21046
         MVC   ONEBYTE(SEVEN,R3),ZERODSP(R3)                     S21046
         LM    R4,R5,IEHECHAR     GET LENGTH AND START FOR MVC   S21046
         EX    R4,PROTCTMV        MOVE THE PARAMETER TO ITS AREA S21046
         L     R6,IEHEFND         UP THE START ADDRESS           S21046
         LA    R6,ONEBYTE(R6)                                    S21046
         ST    R6,IEHESTT         STORE THE NEW START ADDRESS    S21046
         B     KODECODE           GO GET ANOTHER KEYWORD         S21046
PROTCTMV MVC   ZERODSP(ONEBYTE,R3),ZERODSP(R5)                   S21046
*                                 MOVE FOR PROTECT OPERATIONS    S21046
SYS      TM    PPARAMSW,X'01'      SHOULD 'SYS' BE PRESANT
         BZ    XTRAKEY              NO---
         NI    PPARAMSW,X'EF'      TURN OF DSNAME SW
         OI    IEHESW5,X'02'       TURN ON 'SYS' SWITCH
         B     KODECODE
VTOC     TM    PPARAMSW,X'01'      SHOULD  VTOC   BE  PRESENT
         BZ    XTRAKEY             NO .....BRANCH
         NI    PPARAMSW,X'EF'      TURN OFF DSNAME BIT
         MVC   FLSTADDR(4),ADVTOCDC
         MVC   PARAM2-1(5),KWSA
         B     STT1UP
NEWNAME  TM    PPARAMSW,X'08'
         BZ    XTRAKEY
         OI    IEHEMAC1,X'80'
         OI    PPARAMSW+1,X'01'        TURN ON NAME TEST BIT     A42349
         B     JUSTMOVE
ALIAS    TM    PPARAMSW,X'02'      SHOULD ALIAS BE HERE
         BZ    XTRAKEY             NO.....BRANCH
         B     JUSTMOVE
PURGE    TM    PPARAMSW,X'04'
         BZ    XTRAKEY
         OI    IEHEMAC1+2,X'10'
         B     KODECODE
*
*  THIS ROUTINE TESTS TO SEE IF THE VOLUME STATEMENT IS PERMITTED
*  UNDER THE PRESENT FUNCTION  INSURES THAT IT IA NOT ENCOUNTERED
*  MORE THAN ONCE. AND SETS UP MATRIX ONE TO CONTROLTHE SCAN OPERATION
*
*
VOL      TM    PPARAMSW,X'20'
         BZ    XTRAKEY                 BRANCH IF VOL SHOULD NOT  A25564
*                                      BE PRESENT                A25564
         TM    DUPSW,X'10'
         BO    XTRAKEY                 BRANCH IF DUPLICATE ENTRY A25564
         OI    DUPSW,X'10'
         TM    IEHEMAC1,PRORTNCD  IS THIS PROTECT OPERATION      S21046
         BC    7,NOTPRO           NO BRANCH                      S21046
         OI    IEHESW2,MNTVOL     CAUSE VOL TO BE MOUNTED        S21046
NOTPRO   OI    IEHEMAC1,BLANKBYT  RECORD THE PRESENCE OF VOL     S21046
         LA    R4,VMATRIX1
         ST    R4,MATRIXIU
         LA    R3,PARAM4+2
         ST    R3,VOLISTAD        SETADDRESS OF THE VOL LIST
         LA    R8,PARAM6          LOAD ADDRESS OF VOL PARAMETER  S21046
         ST    R8,IEHEMAC1+VOLPRM STORE ADDRESS IN PARM LIST     S21046
         ST    R8,PROTCTAD        STORE ADDRESS OF VOL FOR       S21046
*                                 CURRENT VOL ID STORE           S21046
         XC    PARAM4(2),PARAM4
         OI    IEHESW1,VOLSW      SET VOL SWITCH ON
*
*  HERE WE HAVE A SCAN PERFORMED AND DECODE THE RETURNSFROM SCAN
*  BY REFERANCING THE MATRIX IN USE...THIS WILL BE MATRIX ONE FOR
*  THE INITIAL ENTRY AND WILL BECOME MATRIX TWO ONLY AFTER A DEVICE
*  TYPE HAS BEEN FOUND...............................................
*
*
VOLSCAN  XC    IEHETBL(4),IEHETBL
         BALR  RETURN,RB          NO TLU AND GO TO SCAN
         CLI   IEHECODE,X'02'     CHECK TYPE OF DELIMITER FOUND
         BL    VLISTERR           BRANCH IF PERIOD OR INVALID
         SR    R3,R3              ------------------------------------
         IC    R3,IEHECODE
         CLI   IEHEARGL,X'FF'     THE TYPE OF DELIMITER AND THE LENGTH
         BE    *+8                OF SCAN IS TRANSLATED TO THE ADDRESS
         LA    R3,5(R3)           OF A ROUTINE BY CROSS REFERANCE OF
         L     R4,MATRIXIU        A MATRIX AND AN ADDRESS TEBLE
         IC    R3,0(R3,R4)
         SLL   R3,2
         L     R3,VOLDECAD(R3)    SELECT THE ADDRESS NEEDED
         BR    R3                 --------------GO THERE --------------
*
*
SELECTOR XC    VSRCM+1,VSRCM
         BZ    VOLID
*
DSSEQ    XC    DBLWORD(8),DBLWORD
         CLI   IEHEARGL,X'03'      IS VOL SEQ NUMBER TO LONG       9760
         BH    BADSYN              IF SO PUT OUT THE MESSAGE       9760
         L     R5,IEHESTT          GET THE ADDRESS OF THE ARGUMENT 9760
         SR    R4,R4                 AND THE LENGTH OF THE ARGUMENT9760
         IC    R4,IEHEARGL             INTO REGISTERS R5 AND R4    9760
         LA    R3,1(R4)            --SET UP THE                    9760
         AR    R5,R3                    LOOP CONTROL--             9760
TESTZONE BCTR  R5,0                THIS LOOP CHECKS EACH           9760
         TM    0(R5),X'F0'            BYTE OF THE VOL SEQ NUMBER   9760
         BNO   BADSYN                    FOR A NUMERIC ZONE,       9760
         BCT   R3,TESTZONE                 THAT IS, AN 'F'         9760
         LA    R3,1(R4)            IF THE ZONES WERE VALID, SET    9760
         AR    R5,R3                 UP LOOP CONTROL AGAIN         9760
TESTNMRC BCTR  R5,0                ---AND TEST FOR VALID DECIMAL   9760
         CLI   0(R5),X'F9'             DIGITS BY COMPARING BYTES   9760
         BH    BADSYN                    OF VOL SEQ NUMBER TO AN   9760
         BCT   R3,TESTNMRC                'F9'.  IF SEQ NO'S.  OK, 9760
         LA    R3,DBLWORD+7        SET UP POINTER FOR MVC, RIGHT   9760
         SR    R3,R4                 JUSTIFIED, INTO WORK AREA     9760
         EX    R4,MVCSEQ          PUT SEQ NO. IN THE DOUBLE WORD
         PACK  DBLWORD(8),DBLWORD(8)        PACK IT
         CVB   R6,DBLWORD         CONVERT IT TO BINARY
SEQ2LIST ST    R6,FULLWORD         STORE IT
         L     R3,VOLISTAD
         MVC   0(2,R3),FULLWORD+2      PUT IT IN THE VOL LIST
         LA    R3,2(R3)
         ST    R3,VOLISTAD        SET POINTER TO NEXT VOL I.D.
         B     EOVLTEST
*
*
VOLID    L     R3,VOLISTAD
         CLI   IEHEARGL,X'05'      IS VOLUME ID TO LONG            9760
         BH    BADSYN              IF SO, PUT OUT MESSAGE          9760
         MVC   0(4,R3),VDTIU      PUT DEVICE CODE INTO VOL LIST
         MVC   4(8,R3),VCBPAD     FORMAT THE ENTRY
         LM    R4,R5,IEHECHAR
         EX    R4,MVCVOL          PUT VOLUME I.D. INTO VOL LIST
         TM    IEHESW2,CVOLBIT    IS THIS A CVOL                 S21046
         BC    1,NOTVOL           IF SO SKIP NEXT                S21046
         L     R8,PROTCTAD        LOAD ADDRESS OF VOL ID LIST    S21046
         MVC   0(6,R8),VCBPAD     MOVE BLANKS TO VOL ID LIST    YA01672
         EX    R4,PRTCTVOL        MOVE VOL ID TO THIS AREA       S21046
         LA    R8,SIX(R8)         UPDATE ADDRESS FOR             S21046
         ST    R8,PROTCTAD        NEXT VOL ID                    S21046
         IC    R7,IEHEMAC1+VOLPRM UPDATE THE COUNT               S21046
         LA    R7,ONEBYTE(R7)     OF THE                         S21046
         STC   R7,IEHEMAC1+VOLPRM NUMBER OF VOL ID'S             S21046
NOTVOL   EQU   *                  ENTER IF NOT VOL               S21046
         NI    IEHESW2,CVOLOFF    TURN OFF THE CVOL SWITCH       S21046
         TM    IEHESW1,VOLSW
        BZ    CVOLTEST
         LH    R7,PARAM4
         LA    R7,1(R7)           COUNT THE ENTRIES IN THE LIST
         STH   R7,PARAM4
         CLI   VSRCM,X'00'        DIRECT ACCESS DEVICE?
         BE    DATYPE             YES....BRANCH
         LA    R3,10(R3)
         ST    R3,VOLISTAD        SET POINTER TO DS SEQ NO.
         B     EOVLTEST
CVOLTEST TM   VSRCM,X'01'
        BZ    STT1UP
        LA    LISTREG,BADCVOL
        B     ENT2FDLD
DATYPE  MVI   11(R3),X'00'
        LA    R3,12(R3)
         ST    R3,VOLISTAD        SET POINTER TOO NEXT VOL I.D.
*
EOVLTEST LH    R5,VOLPAREN
         LTR   R5,R5              TEST FOR END OF VOLUME LIST
         BNE   UPSTART            NOT END...BRANCH
         NI    IEHESW1,X'FD'       RESET THE VOL SWITCH
        L     R2,IEHEFND
        CLI   1(R2),C','
        BNE   STT1UP
        LA    R2,2(R2)
         ST    R2,IEHESTT
        B     KODECODE
STT1UP   L     R5,IEHEFND
         LA    R5,1(R5)           UP THE START ADDRESS FOR SCAN
         ST    R5,IEHESTT
         B     KODECODE           GO GET A KEYWORD
*
VOLDTTLU LM    R2,R3,IEHECHAR
         EX    R2,MVCTYPE          PAD DEVICE TYPE WITH BLANKS
         LA    R2,MSGOUT+4              POINT AT WORK AREA FOR TLU
         MVC   20(4,R2),DECB2+4        SET UP RETURN V ADCON       DT0I
         L     15,TLUADDR               GET ADDRESS OF TLU ROUTINE
         BALR  14,15                    BE GONE
         OC    8(4,R2),8(R2)            TEST FOR A FIND
         BZ    BADTYPE                 BAD GENERIC TYPE CODE     A35899
         MVC   PASSUNIT(5),12(R2)      PASS SPECIFIC UNIT TO       DT0I
*                                      VOLUME MOUNTING ROUTINE     DT0I
VOLDTFND MVC   VDTIU(4),8(R2)      SAVE THE DEVICE CODE
         LA    R2,VMATRIX2
         ST    R2,MATRIXIU         SWITCH THE CONTROLLING MATRIX
         MVI   VSRCM,X'01'        SET CONTROL BYTE TO
         MVI   VSRCM+1,X'01'      INDICATE A SEQUENTIAL DEVICE
         TM    VDTIU+2,X'20'      IS IT DIRECT ACCESS
         BZ    *+10               NO.....BRANCH
         XC    VSRCM(2),VSRCM     SET CONTROL TO DIRECT ACCESS
         MVC   MSGOUT+1(119),MSGOUT     CLEAR THE PRINT AREA
UPSTART  L     R2,IEHEFND                   GENERSTE
         LA    R2,1(R2)           A NEW START ADDRESS FOR SCAN
         ST    R2,IEHESTT                   PASS IT
         MVC   VDSA(1),IEHECODE
         B     VOLSCAN
*
VRPAREN  LH    R4,VOLPAREN
         BCTR  R4,0               DECREASE PAREN COUNT
         STH   R4,VOLPAREN
         LTR   R4,R4
         BM    VLISTERR           ERROR IF COUNT IS NEGATIVE
         CLI   IEHEARGL,X'FF'
         BE    VRPARZL            BRANCH IF LENGTH IS ZERO
         CLI   VDSA,X'04'   WAS THE LAST DELIMITER A (
         BE    SELECTOR
         CLI   VDSA,X'02'         WAS PREVIOUS DELIMITER A ,
         BNE   VLISTERR           NO.....BRANCH
         B     SELECTOR
VRPARZL  CLI   VDSA,X'05'         WAS PREVIOUS DELIMITER A )
         BE    EOVLTEST           YES....BRANCH
         CLI   VDSA,X'02'         WAS PREVIOUS DELIMITER A COMMA
         BNE   VLISTERR           NO.....BRANCH
         B     SEQNUM1
VCOMZL   CLI   VDSA,X'05'         WAS PREVIOUS DELIMITER A )
         BE    UPSTART            YES....BRANCH
         CLI   VDSA,X'02'         WAS PREVIOUS DELIMITER A ,
         BNE   VLISTERR                 NO.....BRANCH
SEQNUM1  EX    0,SELECTOR         IS IT A VOLUME ID MISSING
         BZ    VLISTERR            YES....BRANCH
         LA    R6,1                ASSUME A SEQUENCE NO. OF 1
         B     SEQ2LIST            GO PUT IT INTO THE LIST
*
*
AD2PAREN LH    R4,VOLPAREN
         LA    R4,1(R4)           ADD ONE TO PAREN COUNT
         STH   R4,VOLPAREN
         B     UPSTART
*
*
VLISTERR LA    PARAMREG,10
         L     LINKREG,SEVER8          GO TO CONDITION CODE      A25564
         BALR  RETURN,LINKREG          HANDLER                   A25564
         B     GOAGAIN
GETAVOL  BAL   R8,*+4
         TM    IEHESW5,X'01'       TEST SW5 FOR PREVIOUS
         BCR   1,R8                ENTRY TO THIS ROUTINE
         OI    IEHESW5,X'01'       TO PREVENT MULTIPLE OVERLAYS
         L     LINKREG,MOUNTRTN    GO GET REQUIRED
         BALR  RETURN,LINKREG      VOLUMES MOUNTED
BADTYPE  EQU   *                       ENTER FOR BAD GENERIC TYPEA35899
         L     LINKREG,SEVER8          GO TO CONDITION CODE      A25564
         BALR  RETURN,LINKREG          HANDLER                   A25564
         CNOP  0,4
         BAL   LISTREG,ENT2FDLD
         DC    FL1'6'
         DC    FL3'37'             INFORM THE USER
         DC    FL1'6'              THAT THE REQUIRED
         DC    FL1'1'              VOLUMES COULD NOT
         DC    FL2'50'             BE MOUNTED
         DC    FL1'4'
         DC    AL3(ABEOJ+4)        EXIT
         DS    0F
VOLDECAD EQU   *-4
         DC    A(VLISTERR)
         DC    A(VOLDTTLU)
         DC    A(AD2PAREN)
         DC    A(VRPAREN)
         DC    A(SELECTOR)
         DC    A(VCOMZL)
MVCVOL   MVC   4(1,R3),0(R5)
PRTCTVOL MVC   ZERODSP(ONEBYTE,R8),ZERODSP(R5)                   S21046
*                                 MOVE FOR PROTECT VOL ID        S21046
MVCSEQ   MVC   0(1,R3),0(R5)
MVCTYPE  MVC   MSGOUT+4(1),0(R3)        PUT NAME IN WORK AREA
VCBPAD   DC    CL6' '
        DC    FL2'1'
VMATRIX1 EQU   *-2
         DC    X'01010301010102010101'
VMATRIX2 EQU   *-2
         DC    X'06010304010502010405'
COMBLANK DC    CL8' ,      '
QUOTE    DC    X'7D40404040404040'      CODELIST FOR QUOTE       S21046
AQUOTE   DC    XL2'7D80'          SCAN FOR ONLY A QUOTE          S21046
SLASHAST DC    CL2'/*'                  '...SLASH ASTERICK...'
BLDXBITS DC    XL4'04400000'
BLANKEQU DC    XL2'4080'
NOTBLANK DC    XL2'4070'
ANYSPEC  DC    XL2'7FD0'
ENDSWOFF EQU   127
         DS    0F
TABLEADS EQU   *-8
         DC    A(TABLEN3)          ADDRESSES OF TABLES USED
         DC    A(TABLEN4)          BY THE TLU ROUTINE
         DC    A(TABLEN5)
         DC    A(TABLEN6)
         DC    A(TABLEN7)
         DC    A(TABLEN8)
         DC    A(TABLEN9)
TLUADDR  DC    V(IEHPROGA)        ADDRESS OF TLU ROUTINE          M2838
DLTASWAP MVC   PARAM2-1(45),PARAM4-1   CORRECT POSITION OF ALIAS NAME
IEHPROGB CSECT                                                    M2838
TABLEN1  DS    0F                  THIS TABLE FOR TESTING ONLY
TABLEN2  DS    0F
TABLEN3  DC    X'0309'            THREE ENTRIES IN TABLE         S21046
         DC    C'ADD'             ADD OPERATION                  S21046
         DC    X'0300'            INDICATES OPERATION            S21046
         DC    AL4(ADD)           ADDRESS OF ADD CODE            S21046
         DC    C'VOL'
         DC    X'0104'
         DC    AL4(VOL)
         DC    C'SYS'
         DC    X'0200'
         DC    AL4(SYS)
TABLEN4  DC    X'0A0A'            TEN ENTRIES IN TABLE         @Z40CSJH
         DC    C'LIST'            SEARCH ARGUMENT FOR LIST       S21046
         DC    X'0300'            INDICATES OPERATION            S21046
         DC    AL4(LIST)          ADDRESS OF THE LIST CODE       S21046
         DC    C'TYPE'            SEARCH ARGUMENT FOR TYPE       S21046
         DC    X'0100'            INDICATES OPERAND              S21046
         DC    AL4(TYPE)          ADDRESS OF TYPE CODE           S21046
         DC    C'DATA'            SEARCH ARGUMENT FOR DATA       S21046
         DC    X'0100'            INDICATES OPERAND              S21046
         DC    AL4(DATA)          ADDRESS OF DATA CODE           S21046
         DC    C'BLDG'                                         @Z40CSJH
         DC    X'0300'                                         @Z40CSJH
         DC    AL4(BLDG)                                       @Z40CSJH
         DC    C'CVOL'
         DC    X'0103'
         DC    AL4(CVOL)
         DC    C'VTOC'
         DC    X'0202'
         DC    AL4(VTOC)
         DC    C'BLDX'                                         @Z40CSJH
         DC    X'0300'                                         @Z40CSJH
         DC    AL4(BUILDX)                                     @Z40CSJH
         DC    C'DLTX'                                         @Z40CSJH
         DC    X'0300'                                         @Z40CSJH
         DC    AL4(DELETEX)                                    @Z40CSJH
         DC    C'BLDA'                                         @Z40CSJH
         DC    X'0300'                                         @Z40CSJH
         DC    AL4(BUILDA)                                     @Z40CSJH
         DC    C'DLTA'                                         @Z40CSJH
         DC    X'0300'                                         @Z40CSJH
         DC    AL4(DELETEA)                                    @Z40CSJH
TABLEN5  DC    X'050B'             FIVE ENTRIES IN TABLE       @Z40CSJH
         DC    C'EMPTY'                                        @Z40CSJH
         DC    X'0200'                                         @Z40CSJH
         DC    AL4(EMPTY)                                      @Z40CSJH
         DC    C'CATLG'                                         YL026VC
         DC    X'0300'                                          YL026VC
         DC    AL4(CATALOG)                                     YL026VC
         DC    C'INDEX'                                        @Z40CSJH
         DC    X'0102'                                         @Z40CSJH
         DC    AL4(INDEX)                                      @Z40CSJH
         DC    C'ALIAS'                                        @Z40CSJH
         DC    X'0104'                                         @Z40CSJH
         DC    AL4(ALIAS)                                      @Z40CSJH
         DC    C'PURGE'
         DC    X'0200'
         DC    AL4(PURGE)
TABLEN6  DC    X'040C'            FOUR  ENTRIES IN TABLE       @Z40CSJH
         DC    C'MEMBER'
         DC    X'0105'
         DC    AL4(MEMBER)
         DC    C'DSNAME'
         DC    X'0102'
         DC    AL4(DSNAME)
         DC    C'DELETE'                                       @Z40CSJH
         DC    X'0200'                                         @Z40CSJH
         DC    AL4(DELETE)                                     @Z40CSJH
         DC    C'RENAME'
         DC    X'0300'
         DC    AL4(RENAME)
TABLEN7  DC    X'080D'            EIGHT ENTRIES IN TABLE       @Z40CSJH
         DC    C'REPLACE'         SEARCH ARGUMENT FOR REPLACE    S21046
         DC    X'0300'            INDICATES OPERATION            S21046
         DC    AL4(REPLACE)       ADDRESS OF REPLACE CODE        S21046
         DC    C'DELETEP'         SEARCH ARGUMENT FOR DELETEP    S21046
         DC    X'0300'            INDICATES OPERATION            S21046
         DC    AL4(DELETEP)       ADDRESS OF DELETEP CODE        S21046
         DC    C'ENTRIES'                                      @Z40CSJH
         DC    X'0104'                                         @Z40CSJH
         DC    AL4(ENTRIES)                                    @Z40CSJH
         DC    C'UNCATLG'                                       YL026VC
         DC    X'0300'                                          YL026VC
         DC    AL4(UNCATLG)                                     YL026VC
         DC    C'CONNECT'                                      @Z40CSJH
         DC    X'0300'                                         @Z40CSJH
         DC    AL4(CONNECT)                                    @Z40CSJH
         DC    C'RELEASE'                                      @Z40CSJH
         DC    X'0300'                                         @Z40CSJH
         DC    AL4(RELEASE)                                    @Z40CSJH
         DC    C'SCRATCH'
         DC    X'0300'
         DC    AL4(SCRATCH)
         DC    C'NEWNAME'
         DC    X'0103'
         DC    AL4(NEWNAME)
TABLEN8  DC    X'030E'            THREE ENTRIES                  S21046
         DC    C'PASWORD1'        SEARCH ARGUMENT FOR PASWORD1   S21046
         DC    X'0103'            INDICATES OPERAND              S21046
         DC    AL4(PASWORD1)      ADDRESS OF PASWORD1 CODE       S21046
         DC    C'PASWORD2'        SEARCH ARGUMENT FOR PASWORD2   S21046
         DC    X'0106'            INDICATES OPERAND              S21046
         DC    AL4(PASWORD2)      ADDRESS OF PASWORD2 CODE       S21046
         DC    C'CPASWORD'        SEARCH ARGUMENT FOR CPASWORD   S21046
         DC    X'0104'            INDICATES OPERAND              S21046
         DC    AL4(CPASWORD)      ADDRESS OF CPASWORD CODE       S21046
TABLEN9  EQU   TABLEN1
CATALOG DS    0F
        DC    FL2'256'           LIST INITIALIZE
         DC    BL2'0111000000000001'   CVOL,VOL,DSNAME,ALPHABET  A28552
        DC    BL4'00100100000000000000000000000000'      CATALOG
*
*             THIS IS FOR TEST BEFORE WE CALL THE MACRO
*
        DC    FL1'2'             TEST DUP SWITCH FOR
         DC    FL1'0'
        DC    BL1'01010000'      DSNAME - VOLUME LIST
         DC    FL1'12'            BRANCH CONDITION ZERO OR ONE
         DC    FL1'4'
         DC    AL3(BADCAT)
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'1'
*
*                        -----UNCATALOG-----
*
UNCATLG  DS    0F
         DC    FL1'1'
         DC    FL1'0'
         DC    BL2'0101000000000000'    ALLOW DSNAME AND CVOL
         DC    BL4'00001100000000000000000000000000'
         DC    FL1'2'
         DC    FL1'0'
         DC    BL1'01000000'
         DC    FL1'8'
         DC    FL1'4'
         DC    AL3(BADCAT)
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'2'
IEHPROGC CSECT                                                    M2838
*
*                           -----DELETE INDEX-----
*
DELETEX  DS    0F
         DC    FL1'1'
         DC    FL1'0'
         DC    BL2'1100000000000000'
         DC    BL4'00000100000001000000000000000000'
         DC    FL1'2'              TEST DUP SWITCH
         DC    FL1'0'
         DC    BL1'01000000'       FOR INDEX
         DC    FL1'8'
         DC    FL1'4'
         DC    AL3(BADINDX)        EXIT IF INDEX NOT SUPPLIED
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'3'
*
*                            -----CONNECT -----
*
CONNECT  DS    0F
         DC    FL1'1'
         DC    FL1'0'
         DC    BL2'1110000000000000'
         DC    BL4'00000100000010000000000000000000'
         DC    FL1'2'
         DC    FL1'0'
         DC    BL1'01010000'
         DC    FL1'12'
         DC    FL1'4'
         DC    AL3(BADINDX)
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'4'
*
*                            ------ RELEASE ------
*
RELEASE  DS    0F
         DC    FL1'1'
         DC    FL1'0'
         DC    BL2'1100000000000000'
         DC    BL4'00000100000000001000000000000000'
         DC    FL1'2'
         DC    FL1'0'
         DC    BL1'01000000'            TEST FOR INDEX
         DC    FL1'12'
         DC    FL1'4'
         DC    AL3(BADINDX)
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'5'
*
*                                 ----- BUILD ALIAS -----
*
BUILDA   DS    0F
         DC    FL1'1'
         DC    FL1'0'
         DC    BL2'1100001000000001'   INDEX,CVOL,ALIAS,ALPHABET A28552
         DC    BL4'01000100000100000000000000000000'
         DC    FL1'2'
         DC    FL1'0'
         DC    BL1'01010000'
         DC    FL1'12'
         DC    FL1'4'
         DC    AL3(BADINDX)
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'6'
*
*                                 ----- DELETE ALIAS -----
*
DELETEA  DS    0F
         DC    FL1'1'
         DC    FL1'0'
         DC    BL2'0100001000000000'
         DC    BL4'00000100000000010000000000000000'
         DC    FL1'7'
         DC    AL3(DLTASWAP)
         DC    FL1'2'
         DC    FL1'0'
         DC    BL1'00010000'
         DC    FL1'8'
         DC    FL1'4'
         DC    AL3(BADINDX)
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'7'
*
*                            ----- SCRATCH -----
*
SCRATCH  DS    0F
         DC    FL2'256'            ONE OP
         DC    BL2'0011010100000000'    DSNAME VTOC VOL PURGE
         DC    BL4'00000001000000000100000000000000'        SET SCRATCH
         DC    FL1'2'
         DC    FL1'0'
         DC    BL1'01010000'       TEST 4  DSNAME & VOLUME
         DC    FL1'12'
         DC    FL1'4'
         DC    AL3(BADSCR)
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'8'
*
*                            ----- BUILDX -----
*
BUILDX   DS    0F
         DC    FL2'256'            OP CODE 1
         DC    BL2'1100000000000001'   INDEX,CVOL,CHECK ALPHA    A28552
         DC    BL4'00000100010000000000000000000000'   SET BUILDX
         DC    FL1'2'              TEST DUP SWITCH
         DC    FL1'0'
         DC    BL1'01000000'       FOR INDEX
         DC    FL1'8'
         DC    FL1'4'
         DC    AL3(BADINDX)
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'9'
*
*                            ----- RENAME -----
*
RENAME   DS    0F
         DC    FL1'1'
         DC    FL1'0'
         DC    BL2'0011100000000000'   DSNAME, NEWNAME, VOL      A42349
         DC    BL4'00000001000000000010000000000000'       RENAME
         DC    FL1'2'
         DC    FL1'0'
         DC    BL1'01110000'
         DC    FL1'12'
         DC    FL1'4'
         DC    AL3(BADRENAM)
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'10'
         DC    FL3'10'
*                                                                S21046
*        ---- ADD ----                                           S21046
*                                                                S21046
ADD      DS    0F                                                S21046
         DC    FL1'12'            INITIALIZE PARAMETER LIST      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    FL2'256'           SET PPARAMSW AND IEHEMAC1      S21046
*   ALLOW TYPE, DATA, VOL, DSNAME, PASWORD2, CPASWORD            S21046
         DC    BL2'0011000001011101'                             S21046
         DC    BL4'00000000000000000000000000000000' IEHEMAC1    S21046
         DC    FL1'13'            PUT DSNAME LENGTH IN PARM      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    FL1'2'             TEST FOR DUPLICATE PARMS       S21046
         DC    FL1'0'             FILLER                         S21046
         DC    BL1'01000000'      MASK FIELD                     S21046
         DC    FL1'12'            SET CONDITION CODE             S21046
         DC    FL1'4'             FOR BAD ADD OPERATION          S21046
         DC    AL3(BADADD)        ADDRESS OF ERROR ROUTINE       S21046
         DC    X'08000000'        READ ALL CONTINUE CARDS        S21046
         DC    FL1'10'            BRANCH TO CALL PROPER ROUTINE  S21046
         DC    FL3'14'            TABLE NUMBER 14                S21046
*                                                                S21046
*        ---- DELETEP ----                                       S21046
*                                                                S21046
DELETEP  DS    0F                                                S21046
         DC    FL1'12'            INITIALIZE PARAMETER LIST      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    FL2'256'           SET PPARAMSW AND IEHEM&C       S21046
*  ALLOW PASWORD1, CPASWORD, VOL AND DSNAME                      S21046
         DC    BL2'0011000000100100'   PPARAMSW                  S21046
         DC    BL4'00000000000000000000000000000000' IEHEMAC1    S21046
         DC    FL1'13'            PUT DSNAME LENGTH IN PARM      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    FL1'2'             TEST FOR DUPLICATE PARMS       S21046
         DC    FL1'0'             FILLER                         S21046
         DC    BL1'01000000'      MASK FIELD                     S21046
         DC    FL1'12'            SET CONDITION CODE             S21046
         DC    FL1'4'             FOR BAD DELETEP OPERATION      S21046
         DC    AL3(BADDEL)        BAD DELETEP OPERATION          S21046
         DC    X'08000000'        READ ALL CONTINUE CARDS        S21046
         DC    FL1'10'            BRANCH TO CALL PROPER ROUTINE  S21046
         DC    FL3'15'            TABLE NUMBER 15                S21046
*                                                                S21046
*        ---- REPLACE ----                                       S21046
*                                                                S21046
REPLACE  DS    0F                                                S21046
         DC    FL1'12'            INITIALIZE PARAMETER LIST      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    FL2'256'           SET PPARAMSW AND IEHEM&C       S21046
*   ALLOW TYPE, DATA, VOL, DSNAME, PASWORD2, CPASWORD, AND PASWO S21046
*   AND DSNAME                                                   S21046
         DC    BL2'0011000001111101'                             S21046
         DC    BL4'00000000000000000000000000000000' IEHEMAC1    S21046
         DC    FL1'13'            PUT DSNAME LENGTH IN PARM      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    FL1'2'             TEST FOR DUPLICATE PARMS       S21046
         DC    FL1'0'             FILLER                         S21046
         DC    BL1'01000000'      MASK FIELD                     S21046
         DC    FL1'12'            SET THE CONDITION CODE         S21046
         DC    FL1'4'             CODE WILL BE FOUR              S21046
         DC    AL3(BADREP)        BAD REPLACE OPERATION          S21046
         DC    X'08000000'        READ ALL CONTINUE CARDS        S21046
         DC    FL1'10'            BRANCH TO CALL PROPER ROUTINE  S21046
         DC    FL3'16'            TABLE NUMBER 16                S21046
*                                                                S21046
*        ---- LIST ----                                          S21046
*                                                                S21046
LIST     DS    0F                                                S21046
         DC    FL1'12'            INITIALIZE PARAMETER LIST      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    FL2'256'           SET PPARAMSW AND IEHEM&C       S21046
*  ALLOW  PASWORD1, DSNAME                                       S21046
         DC    BL2'0001000000100000'   PPARAMSW                  S21046
         DC    BL4'00000000000000000000000000000000' IEHEMAC1    S21046
         DC    FL1'13'            PUT DSNAME LENGTH IN PARM      S21046
         DC    FL3'0'             FILLER                         S21046
         DC    FL1'2'             TEST FOR DUPLICATE PARMS       S21046
         DC    FL1'0'             FILLER                         S21046
         DC    BL1'01000000'      MASK FIELD                     S21046
         DC    FL1'12'            GO SET THE CONDITION CODE      S21046
         DC    FL1'4'             CODE WILL BE FOUR FOR A        S21046
         DC    AL3(BADLIST)       BAD LIST OPERATION             S21046
         DC    X'08000000'        READ ALL CONTINUE CARDS        S21046
         DC    FL1'10'            BRANCH TO CALL PROPER ROUTINE  S21046
         DC    FL3'17'            TABLE NUMBER 17                S21046
*
IEHPROG6 CSECT                                                    M2838
XTRADATA DS    0F
         DC    X'0B000000'             SET CONDITION CODE AND    A25564
*                                      READ ALL CONTINUE CARDS   A25564
         DC    FL1'6'             WRITE REDUNDANT INFO MSG
         DC    FL3'14'
         DC    FL1'4'
         DC    AL3(ABEOJ)
*
TRTTABLE EQU   *                                                 A24020
         DC    64X'04'                                           A24020
BLANKS   DC      X'08'                                           A24020
         DC    15X'04'                                           A24020
ANDSIGN  DC      X'00'                                           A24020
         DC    10X'04'                                           A24020
DOLLAR   DC      X'00'                                           A24020
         DC     4X'04'                                           A24020
DASH     DC      X'00'                                           A24020
         DC    26X'04'                                           A24020
LBSIGN   DC      X'00'                                           A24020
ATSIGN   DC      X'00'                                           A24020
         DC    67X'04'
TWLVZERO DC      X'00'
ALPHA1   DC     9X'00'                                           A24020
         DC     7X'04'                                           A24020
ALPHA2   DC     9X'00'                                           A24020
         DC     8X'04'                                           A24020
ALPHA3   DC     8X'00'                                           A24020
         DC     6X'04'                                           A24020
NUMBERS  DC    10X'00'                                           A24020
         DC     6X'04'                                           A24020
VOLTEST  TM    IEHEMAC1,X'40'     TEST IF VOL PARM IS PRESENT
         BO    FDLD               YES, GO GET NEXT PARM
         BAL   LISTREG,ENT2FDLD
BADINDX  DS    0F
BADCAT   DS    0F
BADSCR   DS    0F
BADRENAM DS    0F
BADADD   DS    0F                 BAD ADD TABLE                  S21046
BADDEL   DS    0F                 BAD DELETE TABLE               S21046
BADREP   DS    0F                 BAD REPLACE TABLE              S21046
BADLIST  DS    0F                 BAD LIST TABLE                 S21046
         DC    X'0B000000'             SET CONDITION CODE AND    A25564
*                                      READ ALL CONTINUE CARDS   A25564
         DC    FL1'6'
         DC    FL1'1'
         DC    FL2'14'
         DC    FL1'6'
         DC    FL2'45'
         DC    FL1'15'
ABEOJ    DC    FL1'6'
         DC    FL1'1'
         DC    FL2'16'
         DC    FL1'6'
         DC    FL1'2'
         DC    FL2'17'
         DC    X'09000000'
BADCVOL  EQU   *                                                 A25564
         DC    X'0B000000'             SET CONDITION CODE AND    A25564
*                                      READ ALL CONTINUE CARDS   A25564
        DC    FL1'6'
        DC    FL2'0'
        DC    FL1'19'
        DC    FL1'4'
        DC    AL3(ABEOJ)
         DS    0F
OKEND    BAL   LISTREG,ENT2FDLD
NORMEND  EQU   *
         DC    FL1'6'              SELECT A MESSAGE
         DC    FL1'1'              SUPPRESS PRINT
         DC    FL2'9'              MSG NUM   = 9
         DC    FL1'6'
         DC    FL2'33'             INSERT FUNCTION NAME
         DC    FL1'5'              AND WRITE THE MSG
         DC    X'09000000'
         DS    0F
NOVOL    BAL   LISTREG,ENT2FDLD
VOLREM   EQU   *
         DC    X'0B000000'             SET CONDITION CODE AND    A25564
*                                      READ ALL CONTINUE CARDS   A25564
         DC    FL1'6'
         DC    FL1'1'              SELECT AND SUPPRESS
         DC    FL2'11'             MESSAGE 11
         DC    FL1'6'
         DC    FL2'54'             ADD MSG 17 AND WRITE
         DC    FL1'17'
         DC    X'09000000'
*
*        FOR THE HANDLING OF UNKNOWN ERRORS......
*
         DS    0F
UNKERR   BAL   LISTREG,ENT2FDLD
OVERSIZE EQU   *
         DC    X'0B000000'             SET CONDITION CODE AND    A25564
*                                      READ ALL CONTINUE CARDS   A25564
         DC    FL1'6'
         DC    FL3'12'            INFORM THE USER OF AN ERROR
         DC    FL1'6'             AND THE UNDEFINED CODE
         DC    FL1'1'
         DC    FL2'4'
         DC    FL1'4'
         DC    AL3(ABEOJ+4)
IEHPROGE EQU   *                                                  M2838
         BALR  R2,0
         USING *,R2
         DROP  RB2                DON'T WANT RB2 USED AS BASE    S21046
*                                 REG ON THE LOAD OF SCANBASE    S21046
         L     RB,SCANBASE             RESET THE BASE REGISTER
         LA    RB2,OFFSET1K(RB)   SET UP BASE REGISTER           S21046
         DROP  R2
         USING IEHESCAN+KPLUS2,RB2 SET UP ADDRESSABILITY         S21046
         LA    R2,UTOUTDCB        TEST FOR THE DCB THAT
         CR    1,R2               CAUSED THIS ENTRY
         BL    SYNAD002           SYNAD FROM SYSIN
         BE    SYNAD003           SYNAD FROM SYSPRINT
         BH    SYNAD004           SYNAD FROM THE VTOC
SYNAD002 EQU   *                                                 A25564
         L     LINKREG,SEVER12         GO TO CONDITION CODE      A25564
         BALR  RETURN,LINKREG          HANDLER                   A25564
         LA    PARAMREG,53        WRITE SYSIN ERROR MSG
         B     EOJ
SYNAD003 EQU   *                                                 A25564
         L     LINKREG,SEVER12         GO TO CONDITION CODE      A25564
         BALR  RETURN,LINKREG          HANDLER                   A25564
         LA    PARAMREG,51        WTO SYSPRINT ERROR MSG
         B     EOJ
SYNAD004 CLOSE ((R2))             CLOSE THE VTOC
         ORG   *-18
         LR    R2,1               R2 POINT AT THE DCB
         LA    1,DBLWORD          REG 1 POINT AT A WORD
         NOPR  0
         ORG
         NI    CTRLWORD,X'EF'     RESET OPEN VTOC SWITCH
         L     LINKREG,SEVER12         GO TO CONDITION CODE      A25564
         BALR  RETURN,LINKREG          HANDLER                   A25564
         LA    PARAMREG,54        WRITE SYNAD ON VTOC            A25564
         B     GOAGAIN            GET THE NEXT REQUEST           A25564
*THE FOLLOWING CODE DEALS WITH ERROR CONDITION CODES.  THE CODE  A25564
*INSURES THAT A HIGHER CONDITION CODE WILL NOT BE OVERRIDDEN BY  A25564
* LOWER CONDITION CODE.                                          A25564
CODEOF4  EQU   *                                                 A25564
         CLI   ERRFLD+2,X'04'          PRESENT CONDITION CODE    A25564
*                                      HIGHER THAN OR EQUAL TO 4 A25564
         BC    11,EXIT                 YES, RETURN               A25564
         MVI   ERRFLD+2,X'04'          NO, POST ERROR CODE OF 4  A25564
         BR    RETURN                                            A25564
CODEOF8  EQU   *                                                 A25564
         CLI   ERRFLD+2,X'08'          PRESENT CONDITION CODE    A25564
*                                      HIGHER THAN OR EQUAL TO 8?A25564
         BC    11,EXIT                 YES, RETURN               A25564
         MVI   ERRFLD+2,X'08'          NO, POST ERROR CODE OF 8  A25564
EXIT     EQU   *                                                 A25564
         BR    RETURN                                            A25564
CODEOF12 EQU   *                                                 A25564
         CLI   ERRFLD+2,X'12'          PRESENT CONDITION CODE    A25564
*                                      HIGHER THAN OR EQUAL TO 12A25564
         BC    11,EXIT                 YES, RETURN               A25564
         MVI   ERRFLD+2,X'0C'       NO, POST ERROR CODE OF 12  @ZA13755
         BR    RETURN                                            A25564
         B     GOAGAIN            GET THE NEXT REQUEST
IEHPROGD EQU   *                                                  M2838
         TM    MOUNTSW,ERRSW           IS CONTINUATION CARD      A23466
*                                      EXPECTED                  A23466
         BC    8,VALIDEND              NO, GO WRITE FINAL        A23466
*                                      MESSAGE                   A23466
         NI    MOUNTSW,CLEAROUT        TURN ERROR INDICATION     A23466
*                                      OFF                       A23466
         LA    PARAMREG,57             PUT MESSAGE NUMBER INTO   A23466
*                                      REGISTER 0                A23466
         MVI   MSGOUT,C' '             CLEAR MESSAGE AREA        A23466
         MVC   MSGOUT+1(119),MSGOUT                              A23466
         L     LINKREG,MSGRTNAD                                  A23466
         BALR  RETURN,LINKREG          WRITE ERROR MESSAGE       A23466
         L     LINKREG,SEVER8          GO TO CONDITION CODE      A25564
         BALR  RETURN,LINKREG          HANDLER                   A25564
VALIDEND EQU   *                                                 A23466
         LA    PARAMREG,31             WRITE UTILITY END         A23466
EOJ      EQU   *                                                 A23466
         L     LINKREG,MSGRTNAD                                  A23466
         BALR  RETURN,LINKREG     GO WRITE OUR FINAL MSG
         DELETE EP=DEVNAMET       DELETE DEVICE NAME TABLE         I276
         LA    R5,CLOSE
         LA    R2,UTINDCB         CLOSE SYSIN
         BALR  R4,R5
         LA    R2,UTOUTDCB        CLOSE SYSPRINT
         BALR  R4,R5
         FREEPOOL UTOUTDCB             FREE UNUSED BUFFER SPACE  A34996
         TM    CTRLWORD,X'10'     IS THE VTOC OPEN
         BZ    FREEMAIN           NO .... BRANCH
         LA    R2,DCB4VTOC
         BALR  R4,R5              CLOSE THE VTOC
FREEMAIN L     13,CTRLWORD        POINT TO ORIGINAL SAVE AREA
         LA    13,0(13)            CLEAR HIGH ORDER BYTE       @ZA11944
         SR    R2,R2
         IC    R2,ERRFLD+2
         LR    1,RBD
         LA    ZERO,DSECTSZE                                     S21046
         SLL   ZERO,1                                              8429
       FREEMAIN R,LV=(0),A=(1)  RETURN OUR CORE TO THE SUPERVISOR  8429
         LR    15,R2
         RETURN (14,12),RC=(15)   BACK TO THE CALLING PROGRAM
CLOSE    CLOSE ((R2))
         ORG   *-18
         LA    1,DBLWORD          CLOSE THE DCB IN R2
         NOP   0
         ORG
         BR    R4                 RETURN
*
AREAONE  DS    F                       SAVEAREA OF REGISTER 1    A24020
AREATWO  DS    F                       SAVEAREA OF REGISTER 2    A24020
AREAFIVE DS    F                       SAVEAREA OF REGISTER 5    A24020
AREASIX  DS    F                       SAVEAREA OF REGISTER 6    A24020
SCANAD   DC    A(IEHESCAN)
SEVER4   DC    A(CODEOF4)              ADCON TO RET CODE OF 4    A25564
*                                      HANDLING ROUTINE          A25564
SEVER8   DC    A(CODEOF8)              ADCON TO RET CODE OF 8    A25564
*                                      HANDLING ROUTINE          A25564
SEVER12  DC    A(CODEOF12)             ADCON TO RET CODE OF 12   A25564
*                                      HANDLING ROUTINE          A25564
SCANBASE DC    A(IEHESCAN+2)
ADVTOCDC DC    A(VTOCDCS)
NOTVALID EQU   5
MSGRTNAD DC    V(IEHPROG3)        LOC OF MESSAGE ROUTINE          M2838
INVOCRTN DC    V(IEHPROG4)        LOC OF RTN TO OPEN INPUT/OUTPUT M2838
MOUNTRTN DC    V(IEHPROG5)        LOC OF VOLUME MOUNTING RTN      M2838
SPECIALS DC    C'.,=()   '
*
*
VTOCDCS  DS    0F                 ALLIGN THE LIST
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    A(VOLTEST)         GO TEST IF VOL PARM IS PRESENT
         DC    FL1'10'
         DC    FL3'11'
BLDG     DS    0F
         DC    FL1'1'
         DC    FL1'0'
         DC    BL2'1100000010000001'   INDEX,CVOL,CHECK ALPHA    A28552
         DC    BL4'00000100001000000000000000000000'
         DC    X'08000000'        READ ALL CONTINUE CARDS
         DC    FL1'2'
         DC    FL1'0'             TEST FOR MINIMUM REQUIREMENTS
         DC    BL1'01000010'      INDEX AND ENTRIES
         DC    FL1'12'
         DC    FL1'4'             IF NOT BOTH PRESENT
         DC    AL3(BADINDX)       GO TO BAD INDX
         DC    FL1'10'
         DC    FL3'12'
         ENTRY IEHPROGD                                           M2838
         ENTRY IEHPROGE                                           M2838
IEHPROGA CSECT                                                    M2838
         USING *,15
         USING NAME,2
         STM   3,5,REGSAVE              SAVE THE REGISTERS
         L     3,TABLEAD                GET ADDRESS OF TABLE
         L     4,0(3)                   GET NUMBER OF TABLE ENTRIES
         LA    3,4(3)                   POINT AT THE FIRST ENTRY
         XC    DEVICE(4),DEVICE         INDICATE A NO FIND CONDITION
         XC    UNIT(5),UNIT            CLEAR SPECIFIC UNIT NAME    DT0I
LOOKUP   CLC   NAME(8),0(3)             COMPARE THE NAMES
         BNE   CHECKEND                 BRANCH .... NO FIND
         MVC   DEVICE(4),8(3)           POST THE FOUND DEVICE CODE
         LA    4,1                      FORCE AN END OF LOOP
CHECKEND LA    3,12(3)                 POINT AT THE NEXT ENTRY
         BCT   4,LOOKUP
         CLC   DEVICE(4),ZEROCON       HAS DEVICE BEEN FOUND       DT0I
         BC    7,DEVFOUND                 BRANCH ON YES            DT0I
         CLI   IEHEARGL,UCBADDR         IS ARG LENGTH EQUAL 3    A35899
         BNE   DEVFOUND                IF NOT GET OUT            A35899
         L     R3,16                   GET UCBLUT PTR              DT0I
         L     R3,40(R3)                                           DT0I
UCB      EQU   *                                               @30AAAG
         SR    R4,R4                   ZERO WORK REG           @30AAAG
         ICM   R4,3,0(R3)              GET UCB PTR             @30AAAG
         TM    0(R3),X'FF'             TEST FOR END OF TABLE       DT0I
         BC    14,NXTENTRY               GO TO NXTENTRY IF NOT END DT0I
         TM    1(R3),X'FF'                                         DT0I
         BC    1,DEVFOUND               SET UP AND RETURN TO CALLERDT0I
NXTENTRY LTR   R4,R4                   IS THIS A ZERO ENTRY        DT0I
         BZ    UP                         BRANCH ON YES            DT0I
         CLC   13(3,R4),NAME           IS THIS THE SPECIFIC NAME   DT0I
         BE    FOUND                      BRANCH ON YES            DT0I
UP       LA    R3,2(R3)                POINT TO NEXT UCBLUT ENTRY  DT0I
         B     UCB                     BRANCH TO CHECK NEXT ENTRY  DT0I
FOUND    MVC   DEVICE(4),16(R4)        MOVE IN DEVICE TYPE FROM UCBDT0I
         MVC   UNIT(5),NAME            SAVE SPECIFIC DEVICE NAME   DT0I
DEVFOUND LM    R3,R5,REGSAVE           RESTORE THE REGISTERS       DT0I
         L     15,GOBACK2               PICK UP THE RETURN ADDRESS
         BR    15                       RETURN
ZEROCON  DC    F'0'                                                DT0I
NAMEX    DSECT
NAME     DC    CL8'-DEVICE-'            NAME OF REQUIRED DEVICE
DEVICE   DC    CL4'TYPE'                4 BYTE DEVICE TYPE CODE
UNIT     DC    XL5'00'                 SPEC UNIT NAME IF SPECIFIED DT0I
GOBACK2  DC    A(0)                     RETURN ADDRESS
REGSAVE  DC    3F'0'                    USED TO SAVE THE REGISTERS
DSECT    DSECT
IEHECHAR DS    C         CHARACTER TO BE SCANNED FOR
IEHECOND DS    C         CONDITION CODE TO STOP ON
IEHECODE DS    C
IEHEARGL DS    C
IEHESTT  DS    F
IEHESTP  DS    F
IEHEFND  DS    F
IEHETBL  DS    F
IEHEFUN  DS    F
IEHESCNX DS    3F
IEHEMAC1 DS    7F                 PARAMETER LIST                 S21046
IEHEMAC2 DS    6F
IEHESTIN DS    F
IEHENDIN DS    F
IEHECCNT DS    2C
IEHESW1  DS    C
DUPSW    DS    2C                 SWITCHES FOR TEST OF DUPLICATE S21046
*                                 PARAMETERS                     S21046
PPARAMSW DS    CL2
IEHESW5  DS    C
IEHESW6  DS    C
IEHECALL DS    F
         DS    0D
DBLWORD  DS    F
FULLWORD DS    F
         DS    0D
DECB1    DS    24X
DECB2    DS    24X
VOLISTAD DS    F
MATRIXIU DS    F
VDTIU    DS    F
VOLPAREN DS    FL2
VSRCM    DS    2X
VDSA     DS    X
DFLG     DS    X                                                   BS0H
DFLAG    DS    X                                                   BS0H
         DS    0F
FLSTADDR DS    F
FNSA     DS    12X
KWSA     DS    12X
SCANRET  DS    F
MARESAR  DS    72X
IEHESPC  DS    XL20
         DS    XL20
IEHERSAV DS    64X
PASSUNIT DS    5X                                                  DT0I
MOUNTSW  DS    X                                                   DT0I
TABLEAD  DS    F                  ADDRESS OF DEVICE NAME TABLE     I276
IEHESW2  DS    X                  PROTECT SWITCHES               S21046
*                                 BIT 1=1 IF WE ARE TO PRINT     S21046
*                                        CONTROL CARDS           S21046
*                                 BIT 3=1 INDICATES FIRST QUOTE  S21046
*                                        IN SCAN FOR DATA        S21046
*                                        OPERATION IS FOUND      S21046
*                                 BIT 4= 1 IF WTOR SETUP IS DONE S21046
*                                 BIT 6=1 IF FIRST PARM ENTRY    S21046
*                                 WAS VALID                      S21046
*                                 BIT 7=1 IF INVALID PARM ENTRY  S21046
*                                 MSG HAS BEEN PRINTED           S21046
PASWDCT1 DS    1X                 NUMBER OF PROMPTS FOR PASWORD1 S21046
PASWDCT3 DS    1X                 NUMBER OF PROMPTS FOR CPASWORD S21046
TOTALPS  DS    1X                 TOTAL NUMBER OF INVALID PWS    S21046
WTORECB  DS    1F                 EVENT CONTROL BLOCK FOR WTOR   S21046
TIOTADRS DS    1F                 TIOT ADDRESS FOR WTOR          S21046
CCNAME   DS    8C                 NAME OFF CONTROL CARD          S21046
WTORLIST WTOR  'IEH220A JOBNAMES, STEPNAME, CARDNAME, REPLY WITH PASSWOX
               RD',,8,WTORECB,ROUTCDE=(9),DESC=2,MF=L            S21046
EXTRACTO EXTRACT ,'S',FIELDS=(TIOT),MF=L                         S21046
DCBAREA  DS    0F
UTINDCB  DCB   DSORG=PS,MACRF=(GM)
CODELIST DC    C'.,=()   '        SPECIAL CHARACTERS CODED BY SCAN
MAXLINES DC    FL2'45'             MAXIMUM LINES PER PAGE
LINECNT  DC    FL2'0'              LINE COUNT FIELD
SKIP21   DC    X'8B'               SKIP TO 1 COMMAND
WRITEHDR DC    X'19'               SPACE 3 AFTER PRINT
HEADER   DC    CL30'MODIFY....VERSION BETA-1......'
         DC    CL30'LAST UPDATED....JULY 11  10 PM'
         DC    CL30'                              '
         DC    CL30'               PAGE 001       '
PAGENUM  EQU   HEADER+110
DDNAMES  DS    3CL8                     FOR THREE DD NAMES
UTOUTDCB DCB   DSORG=PS,MACRF=(PM)
         DS    2F
CTRLWORD DS    0F       REG 13 SAVED, SWITCHES FOR VOLUME MOUNTING
IEHESAT  DS    150X
READBASE DC    F'0'
ERRFLD   DS    0CL8          FOR POSTING OF ERROR RETURN CODES
PARAM1   DS    44X
         DS    F              FOR  LENGTH OF  PARAM2
PARAM2   DS    44X
         DS    F                   FOR LENGTH OF PARAM3
PARAM3   DS    44X
PARAM5   DS    2F                 CPASWORD PARAMETER             S21046
PARAM6   DS    151F               VOL IDS PARAMETER              S21046
PARAM7   DS    2F                 PASSWORD2 PARAMETER            S21046
PARAM8   DS    80X                DATA PARAMETER                 S21046
DUMMY    DS    1F                 TEMPORARY STORAGE FIELD        S21046
PROTCTAD DS    1F                 ADDRESS OF WHERE TO PUT NEXT   S21046
*                                 VOL ID IN PARAM6 FOR PROTECT   S21046
FINUSE   DS    F                   ADDR OF DC LIST IN USE
DCSAVEAD DS    F                   SAVE AREA FOR ADDR OF DC LIST
INPUT    DS    40F                 TWO CARD INPUT AREA
MSGOUT   DS    30F                 MSG OUTPUT AREA
         DS    F
         DS    0D
PARAM4   DS    151F                FOR A VOLUME LIST
EOCORE   EQU   *-12
         ORG   PARAM4+20
VTOCDCB2 DS    0F
DCB4VTOC DCB   DDNAME=VTOC,                                            .
               DSORG=PS,                                               .
               MACRF=R,                                                .
               KEYLEN=44,                                              .
               BLKSIZE=1,                                              .
               RECFM=U
JFCB     DS    24D
*        THE FOLLOWING ORG STATEMENT IS FLAGGED                  YM5077
         ORG
SAVEREG2 DS    72X                SECONDARY SAVE AREA             M2838
SAVEREG3 DS    72X                THIRD LEVEL SAVE AREA           M2838
         ORG
VTOCSW   EQU   JFCB+50
VTOCDECB EQU   JFCB+60
JFCBVOL  EQU   JFCB+118
EXLST2   EQU   DCB4VTOC+36
FORMATID EQU   PARAM2+44
BLANK    EQU   64
READTOO  EQU   INPUT+72
COL16    EQU   READTOO+15
COL72    EQU   READTOO+71
MIDDLE   EQU   READTOO-1
WARE2PUT EQU   IEHEMAC1-4
UCBAD1   EQU   IEHESAT+16
         END   COMMENCE
