         TITLE 'IEBGENS3-VARIABLE SPANNED RECORD PROCESSOR (RLS 17)'
***********************************************************************
*                                                                     *
*                        * * * I E B G E N S 3 * * *                  *
*                              ***************                        *
*                                                                     *
*      THIS IS THE MODULE OF THE IEBGENER DATASET UTILITY, THAT       *
*      PROCESSES VARIABLE SPANNED RECORD DATASETS                     *
*      IT GETS CONTROL AFTER IEBGENR3 HAS OPENED THE DATASETS FOR     *
*      INPUT AND OUTPUT, AND FOUND THAT AT LEAST ONE OF THE DATASET   *
*      HAS A RECFM=VS OR RECFM=VBS                                    *
*      THIS MODULE USES THE BSAM ACCESS METHOD IF THERE IS NO CHANGE  *
*      IS REQUIRED OF ANY KIND IN BLOCKSIZE,LRECL OR RECFM            *
*      IN ALL OTHER CASES THE QSAM ACCESS METHOD IS USED              *
*      IT CONTROLS LINKAGE TO EDIT AND CONVERSION ROUTINES FOR        *
*      SPECIAL PROCESSING DICTATED BY THE IEBGENER CONTROL CARDS      *
*      AFTER PROCESSING IS COMPLETED IT WILL RETURN CONTROL TO        *
*      IEBGENR3                                                       *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             E N T R Y                               *
*                                                                     *
*      THE SUBROUTINE HAS ONE EXTERNALLY REFERENCABLE ENTRY POINT     *
*      WHOSE SYMBOLIC NAME IS:                                        *
*                            H G E N P S 3
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             I N P U T                               *
*                                                                     *
*      THE SUBROUTINE IS ENTERED WITH OP REGISTER 1  POINTING TO      *
*      A LIST IN WHICH ARE THE ADDRESSES OF TABLES CONSTRUCTED BY     *
*      THE I E B G S C A N SUBROUTINE ACCORDING TO THE PARAMETERS     *
*      SPECIFIED IN THE UTILITY CONTROL CARDS. MAIN  STORAGE  FOR     *
*      THESE TABLES IS GOTTEN AND RELEASED OUTSIDE THIS ROUTINE.      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                             E X T R N                               *
*                                                                     *
*      THE SUBROUTINE REFERENCES THESE EXTERNALLY DEFINED  VALUES     *
*      OR SUBROUTINE NAMES:                                           *
*                             H M O V E                               *
*              A CLOSED SUBROUTINE USED BY THIS ROUTINE               *
*              TO MOVE RECORDS OF ANY SIZE IN CORE                    *
*                                                                     *
*                             H E D I T                               *
*              A CLOSED SUBROUTINE USED BY THIS ROUTINE               *
*              TO EXECUTE THE EDITING SPECIFIED BY THE                *
*              UTILITY CONTROL CARDS.                                 *
*                                                                     *
*                              H P R L                                *
*              A CLOSED SUBROUTINE USED BY THIS ROUTINE               *
*              TO ESTABLISH THE LENGTH OF AN OUTPUT RE-               *
*              CORD ACCORDING TO THE EDIT PARAMETERS.                 *
*                                                                     *
*                            H W R M S G                              *
*                                                                     *
*              A CLOSED SUBROUTINE USED BY THIS ROUTINE               *
*              TO WRITE MESSAGES ISSUED BY THIS ROUTINE               *
*              ON THE DEVICE SPECIFIED BY SYSPRINT  DD-               *
*              NAME.                                                  *
*                                                                     *
*                          D D E R R O R 1                            *
*                                                                     *
*              A MESSAGE USED AS A DIAGNOSTIC WHEN DATA               *
*              DEFINITION STATEMENT NAMES ARE IMPROPER-               *
*              LY SPECIFIED TO THE PROGRAM.                           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                   E R R O R   C O N D I T I O N                     *
*                                                                     *
*      THE SUBROUTINE WILL TERMINATE PROCESSING, CAUSE AN APPROP-     *
*      RIATE DIAGNOSTIC MESSAGE TO BE PRINTED AND RETURN VIA REG-     *
*      ISTER 14 UPON RECOGNITION OF THE FOLLOWING TYPES OF ERROR:     *
*                                                                     *
*              1.PERMANENT I/O ERROR ON EITHER INPUT OR               *
*                OUTPUT DATA SET.                                     *
*              2.ANY CONTROL STATEMENT ERROR UNABLE  TO               *
*                BE DETERMINED AT CONTROL CARD  PROCES-               *
*                SING TIME,I.E.-PARAMETERS WHICH ARE AT               *
*                VARIANCE WITH INCOMING DATA.                         *
*             3.DATA FORMAT ERRORS NOT APPRENT TO THE                 *
*               QSAM ACCESS METHOD                                    *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             N O T E S                               *
*                                                                     *
*      THIS SUBROUTINE IS 'ONLY LOADABLE'.IT IS NOT RE-ENTRANT;IT     *
*      IS NOT RE-USABLE.                                              *
*                                                                     *
***********************************************************************
         EJECT
IEBGENS3 CSECT
* THIS MODULE WAS CREATED IN RELEASE 17 FOR SUPPORT OF VRE            *
*561500,580700,820500                                            A22671
* 108800,110300                                                   M2461
* 382100                                                         A25958
* 552700-564700,588300-598300                                    A27717
*                                                                A33312
* 135600-138600                                                  A35449
*166100-167100,171100-172100,173100,623300-635300               PTM5314
*A626300-627100,629800-630700                                    A45131
*D403100,626300,626800,629800-631300                             A45131
*A173100-174700,176600-177080,623900                             A45145
*D173100,174100                                                  A45145
*C177100,840200                                                  A45145
*A283100,283600,533900                                           A48738
*D283100                                                         A48738
*A441600-442100,443100-443500,456700,458300,624500,              A48746
*A631100-633800,840250                                           A48746
*D443100,456700,458300,631000-633300                             A48746
*A578000,578800-579000                                           A48809
*C573500,575100                                                  A48809
*D591300                                                         A48809
*D443400-443460                                                @ZA03375
*   REGISTER ASSIGNMENT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
HGENPS3  SAVE  (14,12)
         LR    R2,R15
         USING HGENPS3,R2
         LA    R3,HGENPRS               LOAD WORK AREA ADDRESS
         ST    R3,8(R13)                AND STORE IT
         STM   R13,R14,HSAVE13
         LA    R13,HGENPRS
         L     R3,0(R1)                 LOAD EXIT TABLE ADDRESS
         ST    R3,HEXITTA               STORE EXIT TABLE ADDRESS
         MVC   HMDTCUR(16),64(R3)       STOER SWITCHES
         MVC   HMDTCUR+16(1),93(R3)     STORE PO SWITCH
         MVC   HPOID(1),94(R3)
         MVC   LABPOLAT(8),80(R3)      MOVE LABEL POOL ADDRESSES
         MVC   TOTLAREA+12(4),88(R3)   MOVE TOTALING AREA ADDRESS  UL0I
         MVC   LABPROSW(1),92(R3)      MOVE LABEL PROCESSING SWITC
         L     R12,HDCBINA             LOAD SYSUT1DCB ADDRESS
         MVC   EODADOFS(3,R12),HEODAD+1 MOVE EODAD ROUT.ADD AND
         MVC   SYNADOFS+1(3,R12),HINERAD+1  PUT SYNAD ADDR IN DCB M2461
         L     R4,HDCBOUTA             STORE SYNAD ROUT,ADDRESS
         MVC   SYNADOFS+1(3,R4),HOUERAD+1  PUT SYNAD ADDR IN DCB  M2461
         ST    R4,TOTLAREA+4           STORE DCB ADDRESS IN LIST
         CLI   0(R3),X'40'             TOTALING SPECFIED
         BE    HGENP5A                 NO-BRANCH
         OI    TOTLEXSW,X'80'          SET TOTALING EXIT SWITCH
         LR    R10,R3
         LOAD  EPLOC=(10)              LOAD USER ROUTINE
         LOAD  EPLOC=(R10)             LOAD USER ROUTINE
         ST    R0,ADTOTEXR             STORE ADDRESS
HGENP5A  TM    HPOID,X'02'             PDS?
         BZ    HGENP5B                 NO-BRANCH
         L     R10,HDCBOUTA            LOAD SYSUT2 DCB ADDRESS
         TM    RECFM(R10),X'48'        IS SYSUT2 VS
         BNO   HGENP5B                 NO-BRANCH
         LA    R1,29                   YES-SET ERROR OFFSET
         SLL   R1,8                    AND
         LA    R4,29                   MSESAGE ID.
         B     ERRORPNT                AND BRANCH
HGENP5B  L     R1,GENCOPAD
         TM    0(R1),X'80'             STRAIGHT COPY?
         BZ    S3COLDAT                NO-BRANCH
         MVC   EODADOFS(3,R5),STHEODAD+1 MOVE EODAD TO DCB
         LH    R6,BLKSI(R5)            LOAD BLOCKSIZE
         SR    R10,R10                 ADJUST BLOCK LENGTH
         IC    R10,16(R5)              FOR
         AR    R6,R10                  POSSIBLE KEYS
         LR    R10,R6                  MULTIPLY
         SLL   R10,1                   BLOCKSIZE WITH THREE
         AR    R10,R6                  TO GET TOTAL BUFFER AREA
         ST    R10,LNGTHBFS            SAVE TOTAL LENGTH OF BUFFER UL0I
         GETMAIN  R,LV=(R10)              GET STORAGE
         ST    R1,FIRSTBUF             STORE ADDRESS OF 1ST BUFFER
         AR    R1,R6
         ST    R1,SECNDBUF             STORE ADDRESS OF 2ND BUFFER
         AR    R1,R6
         ST    R1,THIRDBUF             STORE ADDRESS OF 3RD BUFFER
         L     R6,HDCBOUTA             LOAD OUTPUT DCB ADDRESS
         OI    BCNTRLSW,X'FF'          RESET BRANCH CONTROL SWITCHS
         L     R5,FIRSTBUF             LOAD INPUT BUFF ADDRESS
         BAL   R12,HREAD               LINK TO READ
STRCOP1  SR    R4,R4
         CHECK HDECBIN                 CHECK READ
         TM    BCNTRLSW,X'01'          BRANCH REQUIRED
         BO    STRCOP3                 YES BRANCH
         TM    BCNTRLSW,X'02'          BRANCH REQUIRED
         BO    STRCOP2
         CHECK HDECBOUT
STRCOP2  NI    BCNTRLSW,X'FD'          RESET 2ND BRANCH BIT
         CALL  HMOVE,(THIRDBUF,SECNDBUF,LNGTHBF2)
         MVC   LNGTHBF3(4),LNGTHBF2    MOVE LENGTH OF DATA
STRCOP3  NI    BCNTRLSW,X'FE'          RESET 1ST BRANCH BIT
         L     R9,HDECBIN+8       GET SYSUT1 DCB ADDRESS         A35449
         L     R10,HDECBIN+16     GET SYSUT1 IOB ADDRESS         A35449
         LH    R10,14(R10)        GET RESIDUAL COUNT             A35449
         LH    R9,62(R9)           GET BLKSIZE FROM DCB          A35449
         SR    R9,R10             CALCULATE LENGTH LAST BLOCK    A35449
         ST    R9,LNGTHBF1        SAVE THIS LENGTH               A35449
         CALL  HMOVE,(SECNDBUF,FIRSTBUF,LNGTHBF1)
         MVC   LNGTHBF2(4),LNGTHBF1    MOVE LENGTH
         TM    BCNTRLSW,X'04'          BRANCH REQUIRED
         BO    STRCOP4                 YES-BRANCH
         L     R6,THIRDBUF
         BAL   R12,CHTOTEXT            TOTALING?
         BAL   R12,HWRITE              WRITE
STRCOP4  NI    BCNTRLSW,X'FB'          RESET THIRD BRANCH BIT
         L     R5,FIRSTBUF             LOAD INPUT BUFF ADDRESS
         BAL   R12,HREAD
         L     R5,SECNDBUF
         BAL   R12,TSTDATAX            TEST DATA EXIT
         B     STRCOP1
         LA    R1,HMSGTDR
         SLL   R1,8
         LA    R4,7
         B     HOUP2J
********
STRCPEOD L     R15,LNGTHBF1            LOAD LENGTH OF READ DATA
         LTR   R15,R15                 TEST FOR ZERO
         BZ    OKMESG                  NO DATA READ - RETURN
         L     R15,LNGTHBF3            LOAD LENGTH OF WRITTEN DATA
         LTR   R15,R15                 TEST FOR ZERO
         BZ    EODMVBF2                NO WRITES DONE - BRANCH
         CHECK  HDECBOUT               CHECK LATEST WRITE
EODMVBF2 CALL  HMOVE,(THIRDBUF,SECNDBUF,LNGTHBF2)
         MVC   LNGTHBF3(4),LNGTHBF2
         L     R6,THIRDBUF
         BAL   R12,CHTOTEXT            CHECK TOTALING EXIT
         BAL   R12,HWRITE              WRITE LAST BLOCK
         CHECK HDECBOUT                CHECK THE WRITE
         L     R0,LNGTHBFS             LOAD TOTAL LENGTH OF BUFFER UL0I
         FREEMAIN  R,LV=(0),A=FIRSTBUF FREE BUFFER SPACE           UL0I
         B     OKMESG                  WRITE EOD MSG AND RETURN
*
HWRITE   L     R10,LNGTHBF3
         WRITE HDECBOUT,SF,HDCBOUT,(6),(10)
         BR    R12
GENCOPAD DC    V(GENS3COP)
FIRSTBUF DC    F'0'
SECNDBUF DC    F'0'
THIRDBUF DC    F'0'
LNGTHBF1 DC    F'0'
LNGTHBF2 DC    F'0'
LNGTHBF3 DC    F'0'
LNGTHBFS DC    F'0'                    TOTAL BUFFER LENGTH         UL0I
BCNTRLSW DC    X'FF'
********
S3COLDAT BAL   R14,INOUTSET
HINP1    L     R5,HIN1AD           PREPARE REGS FOR PROCESSING
         L     R6,HOU2AD           RECORDS BY LOADING BUFFER ADDRS
HINP1A   ST    R6,HOU2AD                INITIALIZE OUTPUT XR
         MVC   CPYSWSAV(1),HCOPYSW
         TM    HCOPYSW,X'FF'            EDITING WITH IDENT
         BO    HINP1A1
         BM    HINP1A1
         L     R9,HRDTCUR               YES
         TM    0(R9),X'20'              EDITING THIS RECORD
         BO    HINP1A1                  YES
         OI    HCOPYSW,HCOPYMSK         NO, SET COPY SWITCH
HINP1A1  L     R1,HDCBINA
         L     R5,HIN1AD                LOAD INPUT ADDRESS
         GET   (1),(5)
         L     R11,HDCBINA   LOAD SYSUT1 DCB ADDRESS            PTM5314
         TM    RECFM(R11),X'80'    RECFM FIXED OR UNDEFINED ?   PTM5314
         BZ    GETVARLE           NO, GET LRECL OUT OF BLK.     PTM5314
         LH    R10,LRECL(R11)          FROM DCB
         B     HINP3N
GETVARLE LH    R10,0(R5)               FOR U AND V GET LRECL FROM
         LA    R5,4(,R5)     UPDATE POINTER TO REC.             PTM5314
HINP3N   ST    R10,HBLIN               WORK AREA AND STOR
         STH   R10,HRLIN                STORE RECORD LENGTH
         LH    R7,HRLIN                 RESET INPUT ARS
         STH   R7,HWK2
HINP7A   L     R12,HDCBINA             LOAD INPUT DCB ADDRESS
         CLC    HWK2(2),LRECLINP   IS REC CNT GR. THAN INL REC ? A45145
         BH    HINER2              YES--PERM INPUT ERROR         A45145
         TM    RECFM(12),X'80'     RECFM EQ. F OR U ?            A45145
         BO    TESTFU              YES, SKIP V TEST              A45145
         CLC   HWK2(2),HH4              IS REC CT LESS THAN 4
         BNH   HINER2                   YES--PERM INPUT ERROR
         B     HINP7A3             SKIP U TEST                   A45145
TESTFU   CLC   HWK2(2),HH0         LRECL EQ ZERO ?               A45145
         BE    TESTU               YES, TEST RECFM               A45145
         B     HINP7A3             CONT NORM PROCCESS.           A45145
TESTU    TM    HINORG,X'20'        INPUT RECFM=U ?               A45145
         BNO   HINER2              NO, PERM. INP. ERROR          A45145
         TM    17(12),X'50'        INPUT DEV. IS PAPER TAPE ?    A45145
         BNO   HINER2              NO, PERM. INP. ERROR          A45145
         B     HINP1A1             YES, GET NEXT RECORD          A45145
HINP7A3  TM    HCOPYSW,HCOPYMSK    PREDICT 1ST OUTPUT REC LENGTH A45145
         BZ    HINP8                    IF COPY,
         BAL   R12,ANYBODY              SET HRLPRE
HINP7B   NOP   HOUP1
         OI    HINP7B+1,X'F0'           FIRST TIME THROUGH,
HINP7C   LA    R8,0
         TM    HOUORG,X'80'             IF F-TYPE , DO NOT ADJUST
         BO    HOUP1                    XR AND ARS
         LA    R8,4(,R8)                ADJUST XR AND ARS
         MVC   2(2,R6),HH0         ZERO THE RECORD BB FIELD
         B     HINP7B                   BEFORE OUTPUT
HINP8    NOP   HOUP1                    IF EDIT,GO TO HPRL
         BAL   R12,HPREDLEN             PREDICT LENGTH OF FIRST REC GRP
         OI    HINP8+1,X'F0'
         B     HINP7B
HOUP1    BAL   R12,ANYBODY              SET HRLPRE
HOUP1A   B     HOUP4                   BYPASS PUT RTN 1ST TIME   A33312
         AH    R8,HRLPRE               ADD DATA COUNT            A33312
         B     HOUP2C
HOUP2J   AR    R1,R4
         L     R15,HWRMSGA
         BALR  R14,R15
         B     HTERMU                   TERMINATE
HOUP2C   TM    HOUORG,X'80'             IF F-TYPE LOAD RECORD
         BO    HOUP2E                   LENGTH IN DCB
         B     HOUP3
HOUP2E   TM    HOUORG,X'80'
         BZ    HOUP3
         L     R10,HDCBOUTA            MODIFY DCB LENGTH
         LTR   R8,R8
         BC    8,NOWRITE
         STH   R8,LRECL(R10)
         B     HOUP3
HOUP3    ST    R8,HBLOUAC
         L     R6,HOU2AD                SET XR TO OUTPUT AREA
         BAL   R12,CHTOTEXT
         B     HOUP3B3
CHTOTEXT TM    TOTLEXSW,X'80'          TEST TOTALING EXIT
         BZ    HOUP3B2                 NO EXT - BRANCH
         ST    R6,TOTLAREA             POINTTOTAL ROUT. TO BUFFER  UL0I
         LA    R1,TOTLAREA             LOAD ADDRESS OF PARAMETERS
         L     R15,ADTOTEXR            LOAD ADDRESS OF USER ROUT.
         BALR  R14,R15
         CH    R15,HCONCODE            UPDATE HIGHEST COND.CODE
         BL    HOUP3B1                 IF
         STH   R15,HCONCODE            NESSECARY
HOUP3B1  CH    R15,SIXTEEN             RETRN CODE = SIXTEEN?
         BE    TOTMSG1                 YES-TERMINATE
         CH    R15,EIGHT               RETURN CODE=EIGHT?
         BE    TOTMSG2                 YES-GO TO END OF DATA
         CH    R15,FOUR                RETRNCODE=FOUR
         BE    HOUP3B2                 YES-BRANCH
         B     TOTMSG3
HOUP3B2  BR    R12
HOUP3B3  DS    0H
         L     R1,HDCBOUTA
         PUT   (1),(6)
         L     R10,HMDTCUR              LOAD MEMBER TRUE NAME
         MVC   HSTOWAR(8),2(R10)        LOAD MEMBER TRUE NAME
         XC    HSTOWAR+8(4),HSTOWAR+8   ZERO OUT C BYTE
NOWRITE  EQU   *
         TM    HSTOWSW,X'FF'           DISC OR TAPE ?
         BZ    HOUP3F                  NO STOW, GO TO HOUP3F
HOUP3C   BAL   R12,HSTOW                STOW TRUE NAME
         LH    R11,0(R10)               LOAD ALIAS COUNT
         LA    R10,10(,R10)             UPDATE MDT XR
         LTR   R11,R11
         BZ    HOUP3E
HOUP3D   MVI   HSTOWAR+11,X'80'         SET ALIAS BIT IN C BYTE
         MVC   HSTOWAR(8),0(R10)        LOAD ALIAS
         BAL   R12,HSTOW                STOW ALIAS
         LA    R10,8(,R10)              UPDATE MDT XR
         BCT   R11,HOUP3D
HOUP3E   ST    R10,HMDTCUR              STORE UPDATED MDT ADDRESS
         NI    HSTOWSW,X'00'            TURN OFF STOW SWITCH
HOUP3F   NOP   HOUP4F                   SWITCH FOR EOD
         L     R6,HOU2AD                RESET OUTPUT XR
         LA    R8,0                    RESET OUTPUT ARS
         TM    HOUORG,X'80'            IF V OR U
         BO    HOUP4B                  ADJUST
         LA    R8,4(,R8)                AND ARS
HOUP4    NOP   HOUP4F             BRANCH WHEN EOD IS REACHED     A48738
         NI    HOUP1A+1,X'0F'     RESET FIRST TIME SWITCH        A48738
         TM    HOUORG,X'80'             IF F-TYPE DO NOT
         BO    HOUP4B                   ADJUST XR AND ARS
HOUP4A   LH    R9,HRLPRE                LET RECORD COUNT
         LA    R9,4(,R9)                FIELD REFLECT
         STH   R9,HALFWORK              PLACE LENGTH IN STORAGE
         MVC   0(2,R6),HALFWORK         MOVE LENGTH INTO CT FIELD
         MVC   2(2,R6),HH0         ZERO BLOCK BB FIELD
         LA    R6,4(,R6)                DISPLACE PAST RECORD COUNT
HOUP4B   ST    R6,HIXOUT                STORE CURR REC ADDR FOR SYSUT1
         ST    R5,HIXIN                 AND SYSUT2
         BAL   R12,TSTDATAX
         B     HOUP4C1
TSTDATAX L     R9,HEXITTA              LOAD USER EXIT TABLE ADDRESS
         ST    R12,SAVER12
         LTR   R9,R9                    IF NO EXITS,
         BZ    HOUP4C                   SKIP TEST
         CLI   40(R9),X'40'
         BE    HOUP4C                   IF USER DATA EXIT,LINK
         LA    R9,40(R9)               SET UP ADDERSS
         L     R12,HDCBINA
         LR    R11,R5                   USER EXIT TABLE
         LINK  EPLOC=(9),PARAM=((11),(12))
         SR    R1,R1
         BAL   R12,HTSTTRM              TEST FOR TERMINATION REQ
         B     HOUP4C                   NO
         LA    R1,HMSGTDR               YES
         SLL   R1,8
         LA    R4,7                     MESSAGE ID 7
         B     HOUP2J                   WRITE MESSAGE AND TERMINATE
HOUP4C   L     R12,SAVER12
         BR    R12
HOUP4C1  TM    HCOPYSW,HCOPYMSK        TEST COPY SWITCH
         BZ    HOUP4D
HOUP4M   BAL   R12,HRIDTST
         MVC   HWK4+2(2),HRLPRE
         CALL  HMOVE,(HIXOUT,HIXIN,HWK4) SYSUT1 BUFF2 TO SYSUT2 BUFF2
         B     HOUP4E
HOUP4D   BAL   R12,HRIDTST              MOVE REC WITH EDITING
         MVC   HWK2(2),HRLPRE           HWK2=DATA COUNT
HOUP4X   CALL  HEDIT,(HEDCUR,HIXOUT,HIXIN,HWK2,HLITTA)
         B     HOUP4E                   NORMAL RETURN FROM EDITOR
         B     HPREDLN2                 ERROR RETURN FROM EDITOR
HOUP4E   AH    R6,HRLPRE                UPDATE XR
HOUP4F   TM    HEODSW,HEODMSK           IF PROCESSING TO END AT EOD,
         BO    HOUP5A                   OMIT LAST RECORD CHECK
         CLI   HRIDSW,X'FF'             TEST FOR LAST REC OF GROUP
         BE    HOUP5B
HOUP5A   NOP   HOUP9              GO CLOSE AT EOD
         B     HINP1A1
HOUP5B   L     R9,HRDTCUR
         ST    R9,HRDTSAV
         TM    HPOID,X'02'              PDS?
         BZ    HOUP5D                   NO
         TM    HMEMBYT(R9),X'0F'        END OF MEMBER?
         BZ    HOUP5F                   NO
         OI    HSTOWSW,X'FF'            SET STOW SWITCH
HOUP5D   TM    0(R9),X'9F'              IF PDS,IS LAST CNTRL
         BZ    HOUP5D1                  CARD A MEMBER CARD
         BM    HOUP5D1
         OI    HEODSW,HEODMSK           YES, PROCESS TO EOD
         B     HINP1A1
HOUP5D1  TM    0(R9),X'8F'              SET UP
         BZ    HOUP5F                   FOR
         BM    HOUP5F                   END OF
         OI    HEODSW,HEODMSK           DATA ROUTINES
HOUP5E   NOP   HOUP9
         OI    HOUP5E+1,X'F0'
         LA    R1,HMSGPELR              WRITE MESSAGE PROCESSING ENDED
         SLL   R1,8                     AT LAST REC ID
         ST    R6,SIXSV                 SAVE REG6
         L     R6,AST                   LOAD **** IN REG6
         L     R15,HWRMSGA              WRITE
         BALR  R14,R15                  MESSAGE
         L     R6,SIXSV                 RESTORE REG6
       SR   R4,R4
         B     HEOD
HOUP5F   LA    R9,12(,R9)               UPDATE RDT XR
         ST    R9,HRDTCUR               AND STORE
         CLI   CPYSWSAV,X'00'           EDITING WITH IDENT
         BNE   HOUP5F1                  NO
         B     HOUP5F2                  YES, CHECK LAST RECORD
HOUP5F1  TM    HCOPYSW,HCOPYMSK         EDITING
         BO    HINP1A1
         B     HOUP5G
HOUP5F2  L     R9,HRDTSAV               CHECK LAST RECORD
         TM    0(R9),X'4F'              LAST IDENT
         BZ    HOUP5F3
         BM    HOUP5F3
         L     R9,HEDCUR                YES
HCHKFLD  TM    0(R9),X'80'              LAST FIELD THIS RECORD
         BO    HLSTFLD                  YES
         LA    R9,8(,R9)                NO, INCREMENT IX
         B     HCHKFLD                  CHECK AGAIN
HLSTFLD  TM    0(R9),X'81'              LAST RECORD FIELD
         BM    HCPYREV                  NO
RAUNCH   OI    HEODSW,HEODMSK           YES,SET TO PROCESS EOD
         B     HOUP5E                   DO LAST WRITE
HCPYREV  MVI   CPYSWSAV,X'FF'           RESET SWITCHES
         OI    HEODSW,HEODMSK           PROCESS TO EOD
         B     HOUP5G
HOUP5F3  L     R9,HRDTCUR               GET NEXT RECORD
         TM    0(R9),X'20'              EDITING
         BO    HRESET1                  YES
         OI    HCOPYSW,HCOPYMSK         NO,SET COPY SWITCH
         B     HRESET2
HRESET1  MVI   HCOPYSW,X'00'            SET FOR EDITING
HRESET2  L     R9,HRDTSAV               GET LAST RECORD
         TM    0(R9),X'20'              WAS THERE EDITING
         BO    HOUP5G                   YES
         L     R9,HRDTCUR               RELOAD RDT IX
         B     HINP1A1
HOUP5G   MVC   HEDCUR(4),HEDSV          GET NEXT EDT
         L     R9,HRDTCUR               RELOAD RDT IX
         BAL   R12,HPREDLEN
         B     HINP1A1
HOUP9    L     R0,REGSAV               GET BUFFER CORE LENGTH AND
         LTR   R0,R0               WAS BUFFER CORE GOTTEN
         BZ    DONTFREE            IF NOT, BRANCH AROUN FREEMAIN
         L     R1,HIN1AD             BUFFER CORE ADDRESS FOR FREEMA
       FREEMAIN R,LV=(0),A=(1)
DONTFREE CLI   HTERMSW,X'FE'       USER TERMINATION REQUEST
         BNE   HOUP10                   NO,RETURN
         B     HGENP4A                  YES,TERMINATE
HOUP10   CLI   TYPMSG,X'10'
         BE    OKMESG
CLOSAFTR LM    R13,R14,HSAVE13
         LH    R15,HCONCODE             LOAD CONDITION CODE IN REG15
         RETURN (2,12)
*
*
HSTOW    L     R1,HDCBOUTA
         STOW  (1),HSTOWAR,A
         SLL   R15,20
         SRL   R15,20
         LTR   R15,R15                  TEST FOR ERROR
         BCR   8,R12                    NO,RETURN
         LA    R15,12                   YES,CONCODE 12
         STH   R15,HCONCODE             SAVE ERROR CONCODE
         LA    R1,HMSGERS               WRITE MESSAGE
         SLL   R1,8                     AND TERMINATE
         LA    R4,10              MESSAGE ID FOR STOW ERROR
HSTOW3   AR    R1,R4
         L     R15,HWRMSGA
         BALR  R14,R15
         B     HOUP9
*
HREAD    READ  HDECBIN,SF,HDCBIN,(5),'S'
         BR    R12
*
HPREDLEN CALL  HPRL,(TOTEDIT,HEDCUR,HEDSV)
ANYBODY  TM    HCOPYSW,HCOPYMSK         IS EDIT REQUESTED
         BO    NOEDIT                   NO
         CLC   TOTEDIT(2),HRLOU         YES-DOES EDIT EXCEED OUTLRECL
         BH    HPREDLN2                 YES--INVALID,TERMINATE
         TM    HOUORG,X'80'             NO-IS OUTPUT FIXED FORMAT
         BO    HABLE                    YES
         LH    R9,TOTEDIT          NO, EDIT COUNT BECOMES LRECL
         TM    HOUORG,X'40'       OUTPUT VARIABLE ?              A48746
         BNO   COMMON             NO, UNDEFINED                  A48746
         LA    R9,4(R9)           YES, LOAD TOTAL EDIT PLUS FOUR A48746
         CH    R9,HRLOU           ED. PL. FOUR EXC. OUTP. LRCL.? A48746
         BH    HPREDLN2           YES, PERM OUTPUT ERROR         A48746
         LH    R9,TOTEDIT         NO, CONTINUE                   A48746
         B     COMMON              GO STORE LRECL AND RETURN
NOEDIT   CLC   HWK2(2),LRECLOUT   INP. REC. EXC. OUTP. LRECL ?   A48746
         BH    HPREDLN2           YES, PRINT MSG IEB309I         A48746
         TM    HINORG,X'40'       INPUT RECFM = V / VS ?         A48746
         BO    NOEDIT2            YES, CHECK OUTPUT              A48746
NOEDIT2  TM    HOUORG,X'40'       OUTPUT RECFM VARIABLE ?        A48746
         BO    AROUND              TES, GO PREPARE COUNT
         TM    HOUORG,X'80'        IS OUTPUT FIXED FORMAT
         BO    HABLE               YES, GO GET LRECL
         LH    R9,HRLIN            NOT V OR F, FORMAT IS U
COMMON   STH   R9,HRLPRE           DATA COUNT TO HRLPRE
         BR    R12                 RETURN TO CALLER
AROUND   LH    R9,HWK2             RECORD COUNT
         TM    HINORG,X'40'        IS INPUT RECFM V OR VB
         BC    14,COMMON           IF NOT, BRANCH
         SH    R9,HH4              IF INPUT IS V, ADJUST LRECL
         B     COMMON              GO STORE RECORD COUNT AND RETURN
HABLE    LH    R9,HRLOU            OUTPUT LRECL BECOMES COUNT
         B     COMMON              GO STORE COUNT AND RETURN
         BR    R12                      RETURN
HPREDLN2 LA    R15,12                   LOAD CONCODE 12 IN REG15
         STH   R15,HCONCODE             AND STORE
         LA    R1,HMSGUOE         LOAD MSG IEB309I TEXT DISPL.   A48746
         SLL   R1,8
         LA    R4,9               LOAD MSG IEB309I NUMBER        A48746
         B     HSTOW3
*
HRIDTST  TM    HEODSW,HEODMSK           TEST FOR LAST REC OF GROUP
         BCR   1,R12                    CHECK
         NI    HRIDSW,X'00'
         L     R9,HRDTCUR               FOR
         LH    R10,HRIDL(R9)            IDENT FIELD
         BCTR  R10,0                    IN RECORDS
         STC   R10,HRIDTST2+1
         LH    R11,HRIDST(R9)
         AR    R11,R5
HRIDTST2 CLC   HRID(1,R9),0(R11)
         BCR   7,R12
         OI    HRIDSW,X'FF'
         BR    R12
*
HTERMU   LH    R15,HCONCODE
         B     HOUP9
*
*    THIS SUBROUTINE CHECKS CONDITION CODES TO DETERMINE WHICH CODE
*    WILL BE PASSED BACK TO THE CALLING PROGRAM.
*
HTSTTRM  SLL   R15,20                   TEST FOR 16 IN R15
         SRL   R15,20
         LTR   R1,R1
         BZ    HTSTTRM4
         LA    R0,16
         CR    R0,R15
         BNE   HTSTTRM2
HTSTTRM1 LA    R12,4(,R12)
         LTR   R1,R1
         BZ    HTSTTRM2
         BR    R12
HTSTTRM2 SRL   R15,2                    ROUND DOWN
         SLL   R15,2
         LH    R0,HCONCODE
         CR    R0,R15                   IF OLD CONCODE IS HIGH
         BCR   10,R12                   OR EQUAL,RETURN
         LA    R0,16
         CR    R15,R0
         BNH   HTSTTRM3
         LR    R15,R0
HTSTTRM3 STH   R15,HCONCODE             OTHERWISE STORE NEW CONCODE
         BR    R12                      BEFORE RETURNING
HTSTTRM4 LA    R0,12
         CR    R0,R15
       BH     HTSTTRM2
         B     HTSTTRM1
*
TOTMSG1  LA    R1,30                   LOAD MSG INDICATION
         BAL   R14,TOTMSG4             LINK TO WRITE ROUTINE
         B     HTERMU                  BRANCH TO TERMINATE
TOTMSG2  LA    R1,31                   LOAD MSG INDICATION
         BAL   R14,TOTMSG4             LINK TO WRITE ROUTINE
         B     HOUP9                   BRANCH TO END OF PROCESSING UL0I
TOTMSG3  LA    R1,32                   LOAD MSG INDICATION
         BAL   R14,TOTMSG4             LINK TO WRITE ROUTINE
         NI    TOTLEXSW,X'7F'
         B     HOUP3B2                 CONTINUE
TOTMSG4  STM   R14,R15,R14SAVE         SAVE REG 14 & 15
         LR    R4,R1                   LOAD MSG INDICATION IN REG4
         SLL   R1,8
         AR    R1,R4
         L     R15,HWRMSGA             LOAD WRITER ROUTINE ADDRESS
         BALR  R14,R15                 LINK
         L     R5,R14SAVE+4            LOAD RETURNCODE
         SR    R4,R4
         LA    R1,10                   DETERMINE FIRST
         DR    R4,R1                   AND SECOND DIGIT
         L     R1,VADDR3               LOAD ADDRESS OF MESSAGE
         LA    R4,240(R4)              MAKE
         LA    R5,240(R5)              EBDIC-CODE
         STC   R5,21(R1)               STORE FIRST DIGIT
         STC   R4,22(R1)               STORE SECOND DIGIT          UL0I
         LA    R1,25                   LOAD MSG CODE
         SLL   R1,8                    AND
         LA    R4,25                   OFFSET
         AR    R1,R4
         L     R15,HWRMSGA             LOAD ADDRESS OF MSG WRITER  UL0I
         BALR  R14,R15                 LINK
         LM    R14,R15,R14SAVE         RESTORE REG 14 & 15
         BR    R14                     RETURN
HGENP4A  LA    R1,HMSGTLR
         SLL   R1,8
         LA    R4,5
ERRORPNT AR    R1,R4
         L     R15,HWRMSGA
         BALR  R14,R15
         B     HTERMU
*
HEOD     DS    0H
         TM    HSTOWSW,X'FF'
         BC    5,HOUP3C
         BP    HOUP3C                   PROCESSING SWITCHES
     OI    HOUP3F+1,X'F0'
         OI    HOUP4+1,X'F0'      SET EOD SWITCH                 A48738
         OI    HOUP5A+1,X'F0'
         TM    HOUP5E+1,X'F0'           DO NOT WRITE EOD MESS IF LAST
         BO    HEODA                    REC ID MESS ALREADY WRITTEN
     NI  HRIDSW,X'00'
         ST    R6,SIXSV
         MVI   TYPMSG,X'10'
         B     HEODA
OKMESG   LA    R1,HMSGPEOD
         SLL   R1,8
         L     R6,AST
         L     R15,HWRMSGA
         BALR  R14,R15
         B     CLOSAFTR
HEODA    S     R8,HKEYLOU               END OF DATA
         TM    HPOID,X'02'              ROUTINE FOR
         BZ    HEOD1                    PDS
         OI    HSTOWSW,X'FF'
HEOD1    TM    HOUORG,X'40'             END OF DATA
         BZ    HEOD2                    FOR VARIABLE
         AH    R8,HH4
HEOD2    B     HOUP1A                                            A33312
*
HINER    EQU   *                        INPUT SYNAD ROUTINE
         ST    R10,SYNADSAV            SAVE REG 10               A22671
         STM   R3,R4,SYNADSAV+4        SAVE REGS 3AND4           A22671
         ST    R12,SYNADSAV+12         SAVE REG 12               A22671
         ST    R14,HSAVE14             SAVE REG14                A22671
         BAL   R14,SYNADAFR            LINK TO SYNADAF ROUTINE   A27717
         B     HOUER1                  TEST USER ERROR EXIT      A27717
HINER2   LA    R15,12                   LOAD CONCODE 12 IN REG 15
         STH   R15,HCONCODE             AND STORE
         LA    R1,HMSGUIE               WRITE ERROR MSG AND TERMINATE
         SLL   R1,8
         LA    R4,8                     MESSAGE ID 8
         B     HSTOW3
HINER3   LA    R15,12                  LOAD CON CODE 12 IN REG 15A27717
         STH   R15,HCONCODE            AND STORE                 A27717
         B     HOUP9                                             A27717
*
HOUER    EQU   *                        OUTPUT SYNAD ROUTINE
         ST    R10,SYNADSAV            SAVE REG 10               A22671
         STM   R3,R4,SYNADSAV+4        SAVE REGS 3AND4           A22671
         ST    R12,SYNADSAV+12         SAVE REG 12               A22671
         ST    R14,HSAVE14             SAVE REG14                A22671
         BAL   R14,SYNADAFR            LINK TO SYNADAF ROUTINE   A27717
         TM    TOTLEXSW,X'80'          TOTALING EXIT ACTIVE        UL0I
         BZ    HOUER1                  NO - BRANCH                 UL0I
         ST    R0,TOTLAREA+8           STORE STATUS INFO ADDRESS   UL0I
         MVI   TOTLAREA+8,X'80'         SET FLAG BYTE              UL0I
         STM   R0,R1,SAVER01           SAVE REGS 0 AND 1           UL0I
         LA    R1,TOTLAREA             PARM LIST FOR TOTALING      UL0I
         L     R15,ADTOTEXR            LOAD ROUTINE ADDRESS AND    UL0I
         BALR  R14,R15                 LINK                        UL0I
         LM    R0,R1,SAVER01           RESTORE REGISTERS           UL0I
HOUER1   L     R10,HEXITTA             EXIT LIST                   UL0I
         LTR   R10,R10
         BZ    HINER3A                 SKIP TO SYNADRLS          A48809
         CLI   56(R10),X'40'           TEST FOR USER EXIT
         BE    HINER3A                 SKIP TO SYNADRLS          A48809
         LA    R10,56(R10)             YES-LINK TO USER
         LR    R4,R0
         LR    R3,R1
         OI    IOERREXI,X'F0'     SET IOERREXI  BYTE             A48809
         LINK  EPLOC=(10),PARAM=((4),(3))
HINER3A  SYNADRLS                 FRMAIN WORKAR AND REST REG 13  A48809
         TM    IOERREXI,X'F0'     USER EXIT ?                    A48809
         BNO   HINER3             NO, END PROCESSING             A48809
         SR    R1,R1
         BAL   R12,HTSTTRM              TEST TERMINATION REQUEST
         B     RETFSYN                 RETURN TO SYSTEM          A22671
         LA    R1,HMSGTER               WRITE ERROR MSG AND TERMINATE
         SLL   R1,8
          LA   R4,12
         B     HOUP2J
SYNADAFR STM   R14,R1,SAVER141          SAVE SYNAD PARAMETERS    A27717
         L     R10,GENCOPAD                                      A27717
         TM    0(R10),X'80'            TEST STRAIGHT COPY SWITCH A27717
         BZ      QSYNADAF              SWITCH NOT ON -QSAM-BRANCHA27717
         SYNADAF  ACSMETH=BSAM                                   A27717
         B     SYNAFR1                 BRANCH AROUND QSAM        A27717
QSYNADAF SYNADAF  ACSMETH=QSAM                                   A27717
SYNAFR1  L     R10,SYNADMSA            LOAD ADDRESS OF MSG       A27717
         MVC   10(79,R10),49(R1)        MOVE SYNAD INFO TO MSG   A27717
         LA    R1,50                   LOAD MSG OFFSET           A27717
         SLL   R1,8                                              A27717
         LA    R1,51(R1)               ADD MSG ID                A27717
         L     R15,HWRMSGA             LOAD WRITER ADDRESS       A27717
         BALR  R14,R15                 LINK TO WRITER            A27717
         LM    R14,R1,SAVER141         RESTORE SYNAD PARAMETRS   A27717
         BR    R14                     RETURN                    A27717
*                                                                A27717
SAVER141 DS    4F                                                A27717
SYNADMSA DC    V(SYNADMSG)                                       A27717
*                                                                A27717
* THIS ROUTINE RETURNS CONTROL TO THE SYSTEM IF THE USERS EXIT   A22671
* ACCEPTS THE BAD RECORD , AND RETURNS A RETURN CODE OF LESS     A22671
* THAN TWELVE                                                    A22671
RETFSYN  L     R10,SYNADSAV            RESTORE REG10             A22671
         LM    R3,R4,SYNADSAV+4        RESTORE REGS 3 AND 4      A22671
         L     R12,SYNADSAV+12         RESTORE REG12             A22671
         L     R14,HSAVE14             RESTORE REG 14            A22671
         RETURN  ,                                               A22671
*
INOUTSET L     R3,HEXITTA               EXIT LIST
         CLI   48(R3),X'40'            TEST FOR KEY EXIT
         BZ    TSTDEV2                  NO KEY EXIT
         LA    R1,27                   LOAD MSG OFFSET
         SLL   R1,8                    AND
         LA    R1,27(R1)               MSG ID.
         L     R15,HWRMSGA
         BALR  R14,R15                 AND WRITE MSG.
         LA    R15,4                   LOAD RETURN CODE = 4
         STH   R15,HCONCODE            STORE RETURN CODE
TSTDEV2  SR    R4,R4               SET UP TO DETERMINE
         SR    R5,R5                   BUFFER LENGTH
         L     R12,HDCBOUTA
         TM    17(R12),X'20'           IS UT2 DEVICE=DA
         BZ    TSTDEV1             IF NOT, BRANCH
         OI    KEYOUTSW,X'02'       SET UT2 EQUALS DA SWITCH
TSTDEV1  AH    R5,62(R12)              ADD OUTPUT BLKSI TO KEYLEN
         L     R12,HDCBINA
         TM    17(R12),X'20'           IS UT1 DEVICE=DA
         BZ    NOINKEY             IF NOT, BRANCH
         OI    KEYOUTSW,X'04'      SET UT1 EQUALS DA SWITCH
NOINKEY  L     R1,HDCBOUTA   LOAD SYSUT2 DCB ADDRESS            PTM5314
         LH    R4,LRECL(R12) LOAD LRECL SYSUT1                  PTM5314
         STH   R4,LRECLINP   STORE INPUT LRECL(BLKSI WHEN U)     A45145
         LH    R5,LRECL(R1)  LOAD LRECL SYSUT2                  PTM5314
         STH   R5,LRECLOUT        STORE OUTPUT LRECL             A48746
         TM    HCOPYSW,HCOPYMSK   IS IT STRAIGHT COPY   ?       PTM5314
         BZ    GETMAIN1      NO, DO NOT CHECK FOR INCONS.LRECL. PTM5314
         CR    R5,R4         LRECL UT2 GREATER UT1 LRECL  ?  L. PTM5314
         BE    GETMAIN1           NO, EQUAL                      A45131
         TM    RECFM(R1),X'80'    INPUT RECFM=U/F ?              A45131
         BO    SKWARNIN           YES, SKIP WARNING MESSAGE      A45131
         TM    RECFM(R12),X'80'   OUTPUT RECFM=U/F ?             A45131
         BO    SKWARNIN           YES, SKIP WARNING MESSAGE      A45131
         STM   R14,R0,SAVEPRI          WARNING                  PTM5314
         LA    R1,WARNING              MESSAGE                  PTM5314
          L    R15,HCDWRA              FOR INCONSISTENT         PTM5314
         BALR  R14,R15                 LRECL'S                  PTM5314
         LM    R14,R0,SAVEPRI                * GETMAIN          PTM5314
SKWARNIN CR    R5,R4              OUTP. LRECL GREATER            A45131
         BH    *+6                THEN INPUT LRECL ?             A45131
         LR    R5,R4              NO, SET GETM FOR UT1=UT2 LRECL A45131
         LR    R4,R5              YES, SET GETM FOR UT2=UT1 LRCL A45131
GETMAIN1 AR    R5,R4              ADD INPUT AND OUTPUT LRECL     A48746
         LA    R5,32(R5)          ADD 32 TO TOTAL                A48746
         ST    R5,REGSAV          STORE TOTAL BUFF. LENGTH       A48746
         GETMAIN R,LV=(5)         GETMAIN INPUT + OUTPUT BUFF.   A48746
         ST    R1,HIN1AD          STORE INPUT BUFFER ADDRESS     A48746
         AR    R1,R4              ACCOUNT   OUTPUT               A48746
         LA    R1,16(R1)          BUFFER ADDRESS                 A48746
         ST    R1,HOU2AD          STORE OUTPUT BUFFER ADDRESS    A48746
         NI    HOU2AD+3,X'F8'     ROUND DOWN TO ASS DBLW. BOUN.  A48746
OMPREREC L      R4,HDCBINA              ADDR OF SYSUT1 DCB
         L     R5,HDCBOUTA             ADDR OF SYSUT2 DCB
         MVC   HINORG(1),RECFM(R4)      MOVE SYSUT1 RECFM
         MVC   HOUORG(1),RECFM(R5)      MOVE SYSUT2 RECFM
         NI    HINORG,X'D8'            LEAVE ATTRIBUTES
         NI    HOUORG,X'D8'            LEAVE ATTRIBUTES
         CLC   HINORG(1),HOUORG         COMPARE RECFM'S
         BNE   CMPREBLK                 RECFM'S NOT EQUAL
         OI    KEYOUTSW,X'08'           TURN ON EQUAL RECFM BIT
CMPREBLK CLC   BLKSI(2,R4),BLKSI(R5)    COMPARE B1KSIZES
         BNE   BUFFMV                  BLKSIZES NOT EQUAL
         OI    KEYOUTSW,X'10'           TURN ON EQUAL BLKSIZE BIT
BUFFMV   MVC   HBLIN+2(2),LRECL(R4)   MOVE INPUT AREA LENGTH
         MVC   HBLOU(2),LRECL(R5)      MOVE IUTPUT AREA LENGTH
         TM    KEYOUTSW,X'08'      ARE THE RECFM'S EQUAL
         BZ    UNEQREC             BRANCH IF UNEQUAL
         TM    HINORG,X'40'        IS SYSUT1 RECFM V,VB, OR U
         BO    OUTVARBL            YES, GO COMPARE BLKSIZE'S
INFOUTF  TM    HCOPYSW,HCOPYMSK    IS EDITING REQUESTED
         BZ    CKLRECL             YES, GO STORE LRECLS
         CLC   LRECL(2,R4),LRECL(R5)
         BNE   ERROR                    LRECL'S NOT EQUAL
         B     CKLRECL
OUTVARBL TM    HCOPYSW,HCOPYMSK         TEST IF FIELD SPECIFIED
         BZ    CKLRECL             YES, GO SET UP LRECL FIELD
         TM    HOUORG,X'48'            SYSUT2 SPANNED
         BO    CKLRECL                 YES-BRANCH
         CLC   BLKSI(2,R5),LRECL(R4)   COMP. SUT2 BLOCK TO SUT1
         BL    ERROR                   LRECL-LOW-BRANCH
         B     CKLRECL
         BH    ERROR                    SYSUT2 BLKSIZE TOO SMALL
         BZ    CKLRECL             YES, GO SET UP LRECL FIELD
UNEQREC  TM    HINORG,X'10'             TEST IF SYSUT1 BLOCKED
         BZ    INNOTBLK                 SYSUT1 NOT BLOCKED
         TM    HINORG,X'40'             TEST UT1 FOR VAR BLOCK
         BZ    TSTUT2                   SYSUT1 IS FIX BLOCK
         OI    RECFMSW,X'30'            TURN ON UT1 EQUAL TO VB
INNOTBLK TM    HINORG,X'C0'             TEST UT1 FOR U TYPE
         BM    FIXORVAR                 UT1 IS FIXED OR VAR
         OI    RECFMSW,X'10'            TURN ON UT1 EQUAL TO U TYPE
FIXORVAR TM    HINORG,X'80'             TEST UT1 FOR FIXED
         BO    TSTUT2                   UT1 IS FIXED
         OI    RECFMSW,X'20'            TURN ON UT1 EQUAL TO VAR
TSTUT2   TM    HOUORG,X'10'             TEST SYSUT2 FOR BLOCKED
         BZ    OTNOTBLK                 SYSUT2 NOT BLOCKED
         TM    HOUORG,X'40'             TEST UT2 FOR VAR BLK
         BZ    SWSET
         OI    RECFMSW,X'03'           UT2 IS A VARIBLE
         B     SWSET
OTNOTBLK TM    HOUORG,X'C0'             TEST UT2 FOR U TYPE
         BM    OFXORVAR                 SYSUT2 IS FIXED OR VAR     6597
         OI    RECFMSW,X'01'            TURN ON UT2 EQUAL TO U TYPE
         B     SWSET
OFXORVAR TM    HOUORG,X'80'             TEST UT2 FOR FIXED
         BO    SWSET
         OI    RECFMSW,X'02'            TURN ON UT2 EQUAL TO VAR
SWSET    SR    R6,R6
         IC    R6,RECFMSW
*                  RECFM SW   1 BYTE
*        INPUT                            OUTPUT
*        (HALF BYTE)                     (HALF BYTE)
*        0       FIXED OR FIXED BLK     0
*         1       UNDEFINED TYPE        1
*        2        VARIBLE TYPE          2
*        3       VARIBLE BLK TYPE       3
         SRDL  R6,4                     MOVE SYSUT2 BITS TO REG 7
         SRL   R7,28                    RIGHT ALIGN UT2 BITS
         LTR   R6,R6                    TST UT1 FOR F OR FB
         BNE   VARIN                    UT1 IS A VARIBLE
         LTR   R7,R7                    TEST UT2 FOR F OR FB
         BZ    INFOUTF                  UT1 AND UT2 ARE F OR FB
         B     FINVOUT                  UT1 IS F OR FB - UT2 IS VAR
VARIN    TM    HCOPYSW,HCOPYMSK         TEST IF FIELD SPECIFIED
         BZ    CKLRECL             YES, GO SET UP LRECL FIELD
         LTR   R7,R7                    TEST UT2 FOR F OR FB
         BZ    ERROR                    VAR IN, F OR FB OUT
         LH    R4,LRECL(R4)            LOAD  SYSUT1 LRECL
         LH    R5,BLKSI(R5)            SUSUT2 BLKSOZE
FIXGOOD  AR    R6,R7                    ADD UT2 RECFM TO UT1 RECFM
         SH    R6,THREE
         SRL   R7,1
         CR    R6,R7
         BE    TST7ZRO                  UT1 IS R,V (0),OR U,VB (1)
*  REG6     REG7   REG7(SHIFT)   REG6+REG7
*   0  F,FB 0        0         (6 NOT EQUAL 7)
*   1   U   1        0              1   F,FB TO U  OR U TO F,FB
*   2   V   2        1              2   F,FB TO V  OR V TO F,FB
*   3  VB   3        1              3   F,FB TO VB OR VB TOF,FB
*                                   4   U TO VB OR VB TO U
*                                   5   V TO VB OR VB TO V
*
         BH    TST7ONE
         B     ADD8                UT1 IS U, AND UT2 IS V
TST7ZRO  LTR   R7,R7               TEST REG 7 FOR ZERO
         BZ    MINUS8              UT1 IS V AND UT2 IS U
ADD8     LA    R4,4(R4)                BUMP SYSUT1 LRECL
         B     COMPARE
MINUS8  LA    R5,4(R5)                BUMP SYSUT2 BLOVKSIZE
         B     COMPARE
TST7ONE  LTR   R7,R7                    TEST 7 FOR ZERO
         BZ    MINUS8                   SYSUT1 IS VB - SYSUT2 IS U
         B     COMPARE             GO COMPARE BLKSIZES
FINVOUT  TM    HCOPYSW,HCOPYMSK        TEST IF FIELD SPECIFIED
         BZ    CKLRECL
         LH    R5,BLKSI(R5)            SYSUT2 BLKSIZE
         LH    R4,LRECL(R4)            SYSUT1 LRECL
         BCT   R7,ADD8             BRANCH IF UT2  IS V OR VB
COMPARE  TM    HOUORG,X'48'            IS OUTPUT SPANNED
         BO    CKLRECL                 YES-BR ANCH
         CR    R5,R4                   COMPARE UT2 BLKSI-UT1 LRECL
         BL    ERROR                   LOW-BRANCH
CKLRECL  L     R12,HDCBINA
         LH    R4,82(R12)              INPUT LRECL
         L     R12,HDCBOUTA
         LH    R5,82(R12)              OUTPUT LRECL
         LTR   R4,R4               IS INPUT LRECL ZERO
         BNE   CKLRECL2            IF NOT, STORE LRECL
         L     R12,HDCBINA
         LH    R4,62(R12)              INPUT BLOCKSIZE
         TM    36(R12),X'40'           INPUT RECFM  V
         BC    14,CKLRECL2         IF NOT, STRE BLKSIZE
         SH    R4,HH4              DECREMENT BLKSIZE BY 4 FOR LRECL
CKLRECL2 STH   R4,HRLIN            STORE INPUT LRECL
         LTR   R5,R5               IS OUTPUT LRECL ZERO
         BNE   CKLRECL4            IF NOT, GO STORE LRECL
         L     R12,HDCBOUTA
         LH    R5,62(R12)              OUTPUT BLOCKSIZE
         TM    36(R12),X'40'           OUTPUT RECFM V
         BC    14,CKLRECL4         IF NOT, STORE BLKSIZE
         SH    R5,HH4              DECREMENT BLKSI BY 4 FOR V
CKLRECL4 STH   R5,HRLOU            STORE LRECL
         TM    HINORG,X'C0'             TEST IF U TYPE
         BC    12,NEXT                  BRANCH NOT U TYPE
         NI    HINORG,X'1F'        TURN OFF U AND TRKOVRFL BITS
         OI    HINORG,X'20'             TURN ON 2 BIT FOR U TYPE
NEXT     TM    HOUORG,X'C0'             TEST IF U TYPE
         BC    12,GOBACK                BRANCH NOT U TYPE
         NI    HOUORG,X'1F'        TURN OFF U AND TRK OVRFL BITS
         OI    HOUORG,X'20'             TURN ON 2 BIT FOR U TYPE   6598
GOBACK   BR    R14                                                 6598
ERROR    LA    R1,HMSGDCB              MESSAGE CODE                6598
         SLL   R1,8
         LA    R4,11                   MESSAGE ID                  6598
         LA    R15,12                                              6598
         STH   R15,HCONCODE            RETURN CODE OF 12           6598
         B     ERRORPNT                PRINT MESSAGE               6598
* FOR A CHANGE IN RECFM'S AND NO FIELD SPECIFIED, THE FOLLOWING HOLDS *
*  THE SYSUT2 BLKSIZE AND LRECL IS DEPENDENT ON SYSUT1 AND THE RECFM'S*
*  INPUT        OUTPUT    OUTPUT BLOCK                                *
* 1 F/FB        VS
* 2  F/FB       VBS
* 3  VS         VS
* 4  VBS        VBS
* 5  U          VS
* 6  U          VBS
* 8  VS         VBS
* 9  VBS        U       EQAUL OR GREATER THAN SYSUT1LRECL
* A  VBS        VS
* B  VS         V       EQUAL OR GREATER THEN SYSUT1 LRECL
* C  VBS        V       EQAUL OR GREATER THAN SYSUT1 LRECL
* D  VS         VB      EQAUL OR GREATER THAN SYSUT1 LRECL
* E  VBS        VB      EQAUL OR GREATER THAN SYSUT1 LRECL
* F  V          VS
*10  V          VBS
*11  VB         VS
*12  VB         VBS
HINTB    DC    3F'0'                   INPUT BUFFER- WORK AREA     6598
HKEYL    EQU   HINTB
HBLIN    EQU   HINTB+4
HRLIN    EQU   HINTB+8
HINORG   EQU   HINTB+10
HOUTB    DC    3F'0'                    OUTPUT BUFFER- WORK AREA
HKEYLOU  EQU   HOUTB
HBLOU    EQU   HOUTB+4
HRLOU    EQU   HOUTB+8
HOUORG   EQU   HOUTB+10
HPOID    EQU   HOUTB+11
*
         DS    0D
         DC    CL8'SUP.AREA'            SUPERZAP DEBUGGING
         DC    18F'0'                   AREA
HGENPRS  DS    18F                      WORK AREA
HSAVE13  DS    2F                      R13,R14 SAVE AREA         A22671
HSAVE14  DS    1F                       REG 14 SAVE AREA
HSTOWAR  DS    3F
SAVEPRI  DS    4F            SAVE REG BEFORE PR. A MESS.        PTM5314
HIN1AD   DS    1F                       SYSUT1 BUFF1 ADDR SAVE AREA
HIN2AD   DS    1F                       SYSUT1 BUFF2 ADDR SAVE AREA
HOU1AD   DS    1F                       SYSUT2 BUFF1 ADDR SAVE AREA
HOU2AD   DS    1F                       SYSUT2 BUFF2 ADDR SAVE AREA
HEDSV    DS    1F
HIXIN    DS    1F
HIXOUT   DS    1F
HBLOUAC  DS    1F
HWK4     DC    F'0'
HRDTSAV  DC    F'0'
HRLPRE   DS    1H
HWK2     DS    1H
HKEYA    DS    1F
LABPOLAT DS    2F                      LABEL POOL ADDRESSES
TOTLAREA DC    4F'0'                   TOTALING PARM LIST          UL0I
SAVER01  DC    2F'0'                                               UL0I
SYNADSAV DS    4F                      AREA TO SAVE REGS IN SYNADA22671
HEXITTA  DS    1F                       USER EXIT TABLE ADDR LOC
HMDTCUR  DS    1F
HEDCUR   DS    1F
HRDTCUR  DS    1F
HLITTA   DS    1F
HCOPYSW  DS    0C                       COPY SWITCH
HEODSW   DS    1C                       END OF DATA SWITCH
LRECLINP DS    1H         INPUT LRECL(BLKSI WHEN RECFM=U)        A45145
LRECLOUT DC    H'0'               OUTPUT LRECL                   A48746
WARNING DC CL120'WARNING:INPUT AND OUTPUT LRECL ARE INCONSISTENT' M5314
         EXTRN HDCBOUT
         EXTRN HDCBIN
HDCBOUTA DC    V(HDCBOUT)
VADDR3   DC    V(HMSGRETC)
HDCBINA  DC    V(HDCBIN)
STHEODAD DC    A(STRCPEOD)
HEODAD   DC    A(HEOD)
HINERAD  DC    A(HINER)                                           M2461
HOUERAD  DC    A(HOUER)                                           M2461
ADTOTEXR DC    F'0'
SIXTEEN  DC    H'16'
FOUR     DC    H'4'
EIGHT    DC    H'8'
R14SAVE  DS    2F
SAVER12  DC    F'0'
TOTLEXSW DC    X'00'
LABPROSW DS    1C                      LABEL PROCESSING SWITCH
KEYOUTSW DC    X'00'                    ATTRIBUTE SWITCH           6598
THREE    DC    H'3'                     CONSTANT                   6598
RECFMSW  DC    X'00'                                               6598
HSTOWSW  DC    X'00'                    STOW SWITCH
HRIDSW   DC    X'00'
HTERMSW  DC    X'00'                    TERMINATION SWITCH
HWRMSGA  DC    V(HWRMSG)                MSG WRITER SUBR ADDR LOC
HCDWRA   DC    V(HCDWR)      ADDRESS  MESSAGE  ROUTINE          PTM5314
HCONCODE DC    H'0'                     CONDITION CODE SAVE AREA
HH0      DC    H'0'
HH2      DC    H'2'
HH4      DC    H'4'
TOTEDIT  DC    H'0'
HALFWORK DS    1H
SIXSV    DS    1F                       REG6 SAVE AREA
REGSAV   DC    F'0'                SAVES LENGTH FOR BUFFER FREEMAIN3599
AST       DC   C'****'
HCOPYMSK EQU   X'F0'                    COPY MASK
HEODMSK  EQU   X'0F'                    END OF DATA MASK
HPTRMSK  EQU   X'00'
BLANKS   DC    X'4040'
CPYSWSAV DC    X'00'
TYPMSG   DC    X'00'
IOERREXI DC    X'00'              IOERROR EXIT BYTE              A48809
HRIDL    EQU   0
HRIDST   EQU   2
HRID    EQU   4
HMEMBYT  EQU   0
HMSGIIP  EQU   1                        MESSAGE CODES
HMSGECC  EQU   2
HMSGBNA  EQU   4
HMSGTLR  EQU   5
HMSGTKR  EQU   6
HMSGTDR  EQU   7
HMSGTER  EQU   8
HMSGERS  EQU   9
HMSGUOE  EQU   10
HMSGUIE  EQU   11
HMSGDCB  EQU   12                                                  6598
HMSGPELR EQU   13
HMSGPEOD EQU   14
HMSGBLK1 EQU   17                      NO INPUT BLKSIZE SPECIFIED
HMSGBLK2 EQU   18                      NO OUTPUT BLKSIZE SPECIFIED
HINDD    EQU   24
HOUDD    EQU   32
         ENTRY HGENPS3
         DCBD  DSORG=PS
DDNAM    EQU   DCBDDNAM-IHADCB
OFLGS    EQU   DCBOFLGS-IHADCB
DSORG    EQU   DCBDSORG-IHADCB
BLKSI    EQU   DCBBLKSI-IHADCB
KEYLE    EQU   DCBKEYLE-IHADCB
BUFL     EQU   DCBBUFL-IHADCB
RECFM    EQU   DCBRECFM-IHADCB
LRECL    EQU   DCBLRECL-IHADCB
EODADOFS EQU   DCBEODAD+1-IHADCB
SYNADOFS EQU   DCBSYNAD-IHADCB
         END
