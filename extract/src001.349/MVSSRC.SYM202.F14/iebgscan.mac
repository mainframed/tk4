***********************************************************************
*                                                                     *
*                    * * * I E B G S C A N * * *                      *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*      THIS SUBROUTINE IS EXECUTED IN CONJUNCTION  WITH THE  CARD     *
*      SCAN ROUTINE I E B C C S 0 2. IT ANALYZES PARAMETERS WHICH     *
*      ARE PASSED BY THE SCAN ROUTINE, DIAGNOSES INVALID PARAMET-     *
*      ERS, SETS SWITCHES AND CREATES TABLES TO BE  USED  BY  THE     *
*      PROCESSING ROUTINE I E B G E N 0 3.                            *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             E N T R Y                               *
*                                                                     *
*      THIS ROUTINE HAS EXTERNALLY REFERENCABLE VALUES  OR  NAMES     *
*      WHOSE SYMBOLS AND FUNCTIONS ARE:                               *
*                                                                     *
*                               C C A                                 *
*                                                                     *
*              THE COMMON ENTRY POINT TO THE PROGRAM TO               *
*              BE USED IN A C A L L.                                  *
*                                                                     *
*                             D D R T N                               *
*                                                                     *
*              THE ENTRY POINT TO A CLOSED SUBROUTINE WHOSE FUNC-     *
*              TION IS THE PRINTING OF A DIAGNOSTIC MESSAGE:          *
*                      'DDNAME      CANNOT BE OPENED'                 *
*                                                                     *
*                          B L K R T N                           * BS0H
*                                                                * BS0H
*              THE ENTRY POINT TO A SUBROUTINE WHOSE FUNCTION IS * BS0H
*              THE PRINTING OF A DIAGNOSTIC MESSAGE              * BS0H
*                      'INVALID SYSIN BLOCKSIZE'                 * BS0H
*                         * * * * * * * * *                           *
*                                                                     *
*                             I N P U T                               *
*                                                                     *
*      INPUT TO THIS ROUTINE IS PROVIDED BY THE CARD SCAN ROUTINE     *
*      ONE CARD FIELD AT A TIME. THE ADDRESS OF A WORK AREA WHICH     *
*      CONTAINS SWITCHES SET BY THE CARD  SCAN  ROUTINE  AND  THE     *
*      PARAMETER TO BE ANALYZED IS PASSED IN A LIST POINTED TO BY     *
*      GP REGISTER 1.                                                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                            O U T P U T                              *
*                                                                     *
*      THE OUTPUT FROM THIS ROUTINE IS  A  GROUP  OF  TABLES  AND     *
*      SWITCHES, THE ADDRESSES OF WHICH ARE CONTAINED IN  A  LIST     *
*      POINTED TO BY GP REGISTER 1 AT EXIT TIME. THESE TABLES AND     *
*      SWITCHES PROVIDE THE PROCESSING ROUTINE OF  THE   GENERATE     *
*      UTILITY WITH THE PARAMETERS SPECIFIED IN THE UTILITY  CON-     *
*      TROL CARDS IN A USABLE FORMAT.                                 *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             E X T R N                               *
*                                                                     *
*      THE SUBROUTINE REFERENCES THESE EXTERNALLY DEFINED  VALUES     *
*      OR SUBROUTINE NAMES:                                           *
*                            A C T C C S                              *
*                                                                     *
*              THE ENTRY POINT OF THE CARD SCAN ROUTINE               *
*                                                                     *
*                            H W R M S G                              *
*                                                                     *
*              ENTRY TO SUBROUTINE USED BY THIS ROUTINE               *
*              TO WRITE MESSAGES ON THE DEVICE  DEFINED               *
*              BY DDNAME S Y S P R I N T.                             *
*                                                                     *
*                             H C D W R                               *
*                                                                     *
*              ENTRY TO SUBROUTINE USED BY THIS ROUTINE               *
*              TO WRITE CONTROL CARD IMAGES  ON  DEVICE               *
*              DEFINED BY DDNAME S Y S P R I N T.                     *
*                                                                     *
*                          GENLABEL                              * UL0H
*                                                                * UL0H
*             THIS IS A SWITCH IN IEBCCS02,WHICH IS SET          * UL0H
*             BY IEBGSCAN,AS SOON AS IT IS DETERMINED THAT       * UL0H
*             THE NEXT CARD FROM SYSIN IS A LABEL DATA CARD,     * UL0H
*             AND DOES NOT NEED TO BE SCANNED.                   * UL0H
*             THIS SWITCH IS RESET WHEN RESUMING OF SCANNING     * UL0H
*             IS REQUIRED.                                       * UL0H
*                                                                * UL0H
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                   E R R O R   C O N D I T I O N                     *
*                                                                     *
*      THE SUBROUTINE WILL TERMINATE PROCESSING, CAUSE AN APPROP-     *
*      RIATE DIAGNOSTIC MESSAGE TO BE PRINTED AND RETURN VIA REG-     *
*      ISTER 12 UPON ALL SUBSEQUENT ENTRIES UPON  RECOGNITION  OF     *
*      THE FOLLOWING TYPES OF ERROR:                                  *
*                                                                     *
*              1.PERMANENT I/O ERROR   READING  CONTROL               *
*                STATEMENTS.                                          *
*      UPON RECOGNITION OF AN ERROR IN A CONTROL STATEMENT, AN    *SA0I
*      EXPLANATORY ERROR MESSAGE IS PRINTED IMMEDIATELY FOLLOWING *SA0I
*      THE CARD CONTAINING THE ERROR.  PROCESSING IS TERMINATED   *SA0I
*      WHEN ALL CARDS HAVE BEEN SCANNED FOR ERRORS.               *SA0I
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                     FUNCTION/OPERATION                         * UL0H
*                                                                * UL0H
*             IEBGSCAN REQUIRES A RECORD STATEMENT INDICATING    * UL0H
*             THAT LABEL INFORMATION IS FOLLOWING IN SYSIN,      * UL0H
*             IT CHECK WHETHER THIS STATEMENT APPEARS LEGALLY    * UL0H
*             AND THEN IT GETS A SAVE AREA FOR AS MANY LABELS AS * UL0H
*             INDICATED IN THE RECORD STATEMENT,AND IT SETS THE  * UL0H
*             GENLABEL SWITCH IN CCS02.                          * UL0H
*             AFTER ALL LABELS ARE READ GENLABEL IS RESET        * UL0H
*                                                                * UL0H
*                     * * * * * * * * *                          * UL0H
*                             N O T E S                               *
*                                                                     *
*      THIS SUBROUTINE IS 'ONLY LOADABLE'.IT IS NOT RE-ENTRANT.IT     *
*      NOT RE-USABLE.                                                 *
*                                                                     *
***********************************************************************
         EJECT
IEBGSCAN CSECT
*1825018810-018910,024800,038800,054200,056440-056480,074300,089400UL0H
*1725124000                                                        BSOH
*1725086800                                                        9430
*0871022800-023200,028200-028800,029000,030600,032600-033000,034400SA0I
*035200,036400-037000,037800,038400,039200,039700-039820,039910,   SA0I
*042600-042800,043800-044000,045000-045200,045800-046200,047400-   SA0I
*047600,048600-048800,049800-050000,051000-051200,052200-052400,   SA0I
*053400-053600,054360,054600-054840,055400-055800,056640-056680,   SA0I
*057200-057600,058800,059200,060600,061000-062600,063400,064000,   SA0I
*065200,065640-065700,067000,069000,071400,072800,074400,074600-   SA0I
*074800,076400,077350,078480,081400,082000,083400,083800-084000,   SA0I
*084800,087200,090200-091000,091800,092200,093200-094000,094600,   SA0I
*095000,095600,096200-096600,101600-101800,102800,104200-104800,   SA0I
*105600-107800,109000,109800-110200,111000-111900,112350,112390,   SA0I
*112450,112510,112570,112610-112630,112670,112700-112710,112780,   SA0I
*112820-112860,112900-112920,113070-113080,118280,119000-121000,   SA0I
*124900                                                            SA0I
*0871059400-059600                                                 0492
*                                                                A36072
*                                                                A36129
* 098100,110950                                                   M0171
*                                                                A27695
*                                                                A27717
*                                                                A28288
*A066900,068900,071300,072700                                    A41800
*D067120,069120,071520,072920                                    A41800
*A125160,125180,139440-139560                                    A45131
*C125230                                                         A45131
*D128800-129400                                                  A45131
*A103920,103940                                                 YA01701
*C103830                                                        YA01701
*C058700                                                        YA01699
*A039602,071700,117902-117916                                   YA01703
*C117920                                                        YA01703
*C140600                                              VS08565 = OZ00131
*A125700-125760                                                @ZA01696
*C125800                                                       @ZA01696
*D104450-104550                                                @ZA07330
*A119260                                                       @ZA28787
*C063400                                                       @ZA28787
* REGISTER ASSIGNMENTS                                             BS0H
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RETREG   EQU   14                                                  BS0H
GOREG    EQU   15                                                  BS0H
CCA      SAVE  (14,12),T,IEBGSCAN-OZ28787                      @ZA28787
         ENTRY CCA
         TM    0(R1),X'80'              DD PARAMETER PRESENT?
         BCR   1,R14                    NO, EXIT
         LR    R2,R15                   YES,INITIALIZE BASE REG 2
         USING CCA,R2
         STM   R13,R14,CSAVE13          SAVE REGS 13-14
         L     R1,0(R1)                 GET SYSIN DD NAME ADDR
         MVC   CSIDDA(8),0(R1)          SAVE SYSIN DD NAME
         LA    R13,CREGSAVE             LOAD REG SAVE ARE ADDR
         LA    R12,CSCAN                LOAD SCAN SUBROUTINE ADDR
         LA    R10,CCNVRT               LOAD CONVERSION SUBROUTINE ADDR
         NI    CERRSW,X'0F'             RESET CODING SWITCHES      SA0I
         OI    CCOMM1+1,X'F0'
         OI    CCOMM3+1,X'F0'
         OI    CCOMM5+1,X'F0'
     OI   CKEYWD0+1,X'F0'
         OI    CPARAC1+1,X'F0'
         XC    CCOMMSW(5),CCOMMSW       RESET ITEM SWITCHES
         MVC   CPX(2),CH1               RESET P(X)
         MVC   HEXITT(64),HEXITT-1     BLANK OUT EXIT TABLE        UL0H
       XC   HMDTAD(19),HMDTAD    ZERO OUT SWITCHES
         SR    R4,R4                    ZERO OUT TABLE XRS
         SR    R5,R5
         LA    R6,HEDCBAD
         SR    R7,R7
         MVI   CWORK,X'00'
CSCAN    CALL  ACTCCS,(CWORK,CSIDDA)    CALL CONTROL CARD SCANNER SUBRT
         CLI   CWRSW,X'02'              IO ERROR?
         BE    CIPERR                   YES
         CLI   CWRSW,X'01'              NO,NEW CARD?
         BNE   CTEST                    NO
         STM   R0,R1,CSAVE1             SAVE  REGS 0-1
         LA    R1,CWORK+1               YES,WRITE CARD ON SYSPRINT
         L     R15,CCDWRA               LOAD CTRL CARD WRITER SUBR ADDR
         BALR  R14,R15
         LM    R0,R1,CSAVE1             RESTORE  REGS 0-1
*                                                                 *SA0I
*                  ANALYSIS OF ERROR BITS SET BY CCS02            *SA0I
*                                                                 *SA0I
CTEST    TM    CWORK,X'80'              ERROR                      SA0I
         BO    CA                       YES,DETERMINE ERROR        SA0I
         TM    CWORK,X'40'              BYPASS SWITCH ON           SA0I
         BO    MOREPARM                 YES,TEST FOR MORE          SA0I
*                                       PARAMETERS                 SA0I
         TM    CWORK,X'20'              EOF SWITCH ON              SA0I
         BO    CEOF                     YES,EOF                    SA0I
CLAB     TM    LABINPUT,X'80'           LABEL GENERATION           SA0I
         BO    LABGENER                 YES,BRANCH                 SA0I
         TM    CWORK,X'08'              NO,COMMAND?
         BO    CCOMM                    YES
         TM    CWORK,X'04'              NO,KEYWORD?
         BO    CKEYW                    YES
         TM    CWORK,X'02'              NO,PARAMETER?
         BO    CPARA                    YES
         BR    R12                      NO,SCAN FURTHER
MOREPARM TM    CWORK,X'01'              END OF PARAMETERS          SA0I
         BO    CLAB                     YES,ANALYZE                SA0I
         BR    R12                      NO,SCAN FURTHER            SA0I
CA       TM    CWORK+130,X'02'          ARE PARENTHESES CLOSED     SA0I
         BO    CODE46                   NO,WRITE ERROR MSG 46      SA0I
         TM    CWORK,X'08'              IS COMMAND SWITCH ON       SA0I
         BZ    CB                       NO,BRANCH                  SA0I
         TM    CWORK,X'06'              IS KEYWORD OR PARAMETER    SA0I
*                                       SWITCH ON                  SA0I
         BC    5,CODE39                 YES,WRITE ERROR MSG 39     SA0I
         B     CODE36                   WRITE ERROR MSG 36         SA0I
CB       TM    CWORK,X'04'              IS KEYWORD SWITCH ON       SA0I
         BC    5,CODE37                 WRITE ERROR MSG 37 IF YES  SA0I
         TM    CWORK,X'02'              IS PARAMETER SWITCH ON     SA0I
         BC    5,CODE38                 WRITE ERROR MSG 38 IF YES  SA0I
         TM    CWORK+81,X'02'           IS KEYWORD REQUIRED        SA0I
*                                       SWITCH ON                  SA0I
         BC    5,CODE40                 WRITE ERROR MSG 40 IF YES  SA0I
         TM    CWORK+81,X'01'           IS PARAMETER REQ SWITCH ON SA0I
         BC    5,CODE41                 WRITE ERROR MSG 41 IF YES  SA0I
         TM    CWORK,X'40'              BYPASS SWITCH ON           SA0I
         BZ    CODE44                   NO,WRITE ERROR MSG 44      SA0I
         B     CODE45                   WRITE ERROR MSG 45         SA0I
*                                                                  SA0I
*                                                                 *SA0I
*                         ANALYSIS OF COMMANDS                    *SA0I
*                                                                 *SA0I
CCOMM    TM    CCOMMSW,X'10'            RECORD SWITCH SET?
         BZ    CCOMM2
CCOMM1   B     CCOMM2                   FIRST-TIME SWITCH
         OI    0(R6),X'80'              SET LST-FLD BIT IN PREC EDCB
CCOMM2   NI    CCOMM1+1,X'0F'           TURN OFF SWITCH
         NI    CCOMMSW,X'00'            TURN OFF COMMAND SWITCHES
         CLC   0(8,R1),CCGENERA         COMMAND=GENERATE?
         BNE   CCOMM5                   NO
         CH    R0,CH8
         BC    8,CCOMM3                 YES,BRANCH                 SA0I
         B     CODE36                   WRITE ERROR MSG 36         SA0I
CCOMM3   B     CCOMM4                   FIRST-TIME SWITCH          SA0I
         B     CODE36                   WRITE ERROR MSG 36         SA0I
CCOMM4   NI    CCOMM3+1,X'0F'           TURN OFF SWITCH
         NI    CCOMM5+1,X'0F'           TURN OFF SWITCH
         OI    CCOMMSW,X'80'            SET GENERATE SWITCH
         BR    R12                      SCAN FURTHER
CCOMM5   B     CCOMM6                   FIRST TIME SWITCH
         B     CCOMM7
CCOMM6   B     CODE36                   WRITE ERROR MSG 36         SA0I
CCOMM7   CLC   0(5,R1),CCEXITS          COMMAND=EXITS?
         BNE   CCOMM8                   NO
         CH    R0,CH5
         BC    7,CODE36                 BRANCH IF NOT 5            SA0I
         OI    CCOMMSW,X'40'            YES,SET EXITS SWITCH
         BR    R12                      SCAN FURTHER
CCOMM8   CLC   0(6,R1),CCMEMBER         COMMAND=MEMBER?
         BNE   CCOMM9                   NO
         CH    R0,CH6
         BC    7,CODE36                 NO,WRITE ERROR MSG 36      SA0I
         OI    CCOMMSW,X'20'            SET MEMBER SWITCH          SA0I
         MVI   HPOID,X'02'              SET PDS SWITCH
         MVC   CPX(2),CH1               RESET P(X)
    CLI   CIDSW,X'00'
         BC    7,CODE48                 WRITE ERROR MSG 48         SA0I
      MVI   CIDSW,X'01'
         MVI   CIDSW2,X'00'
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,SETKEY                 YES,BRANCH AROUND          SA0I
*                                       ERROR MESSAGE              SA0I
         LTR   R4,R4                    TABLE SPACE ALLOTTED       SA0I
         BC    8,CODE42                 NO,WRITE ERROR MSG 42      SA0I
SETKEY   OI    CWORK+81,X'02'           TURN KEYWORD REQ SW ON     SA0I
         BR    R12                      SCAN FURTHER               SA0I
CCOMM9   CLC   0(6,R1),CCRECORD         COMMAND=RECORD?
         BNE   CCOMM10                 NO                          UL0H
         CH    R0,CH6
         BC    7,CODE36                 NO,WRITE ERROR MSG 36      SA0I
         MVI   CRCDSW,X'00'             SET RECORD SWITCH
         OI    CCOMMSW,X'10'            YES,SET RECORD SWITCH
         OI    CWORK+141,X'0E'    SET RECORD SW                @YA01703
         BR    R12                      SCAN FURTHER
CCOMM10  CLC   0(6,R1),CCLABELS        COMMAND=LABELS?             UL0H
         BC    7,CODE36                 NO,WRITE ERROR MSG 36      SA0I
         CH    R0,CH6                   IS LENGTH EQ 6             SA0I
         BC    7,CODE36                 NO,WRITE ERROR MSG 36      SA0I
         TM    FIRSTLAB,X'01'           LABELS CARD PROCESSED YET  SA0I
         BC    1,CODE36                 YES,WRITE ERROR MSG 36     SA0I
         OI    FIRSTLAB,X'01'          SET FIRST TIME SWITCH       UL0H
         OI    CCOMMSW,X'08'            YES-SET LABELS SWITCH      UL0H
         OI    CWORK+81,X'02'           TURN KEYWORD REQ SW ON     SA0I
         BR    R12                                                 SA0I
*                     ANALYSIS OF KEYWORDS                        *SA0I
*                                                                 *SA0I
*
CKEYW    XC    CMAXEXSW(2),CMAXEXSW     TURN OFF KEYWORD SWITCHES
         NI    CWORK+81,X'FD'           TURN KEYWORD REQ SW OFF    SA0I
         TM    CCOMMSW,X'80'            GENERATE SWITCH SET?
         BO    CKEYWA                   YES
         TM    CCOMMSW,X'40'            NO,EXITS SWITCH SET?
         BO    CKEYWB                   YES
         TM    CCOMMSW,X'20'            NO,MEMBER SWITCH SET?
         BO    CKEYWC                   YES
         B     CKEYWD                   NO
*
CKEYWA   CLC   0(8,R1),CCMAXNAM         KEYWORD=MAXNAME?         A28288
         BNE   CKEYWA2                  NO
         OI    CMAXEXSW,X'80'           SET MAXNAME SWITCH         SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER
CKEYWA2  CLC   0(8,R1),CCMAXFLD        KEYWORD=MAXFLDS?          A28288
         BNE   CKEYWA3                  NO
         OI    CMAXEXSW,X'40'           SET MAXFLDS SWITCH         SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER
CKEYWA3  CLC   0(7,R1),CCMAXGPS        KEYWORD=MAXGPS?           A28288
         BNE   CKEYWA4                  NO
         OI    CMAXEXSW,X'20'           SET MAXGPS SWITCH          SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER
CKEYWA4  CLC   0(8,R1),CCMAXLIT        KEYWORD=MAXLITS?          A28288
         BC    7,CODE37                 NO,WRITE ERROR MSG 37      SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      YES,SCAN FURTHER
*
CKEYWB   CLC   0(6,R1),CCEXIT1          KEYWORD=INHDR?           A28288
         BNE   CKEYWB2                  NO
         TM    CEXITSSW,X'20'           IS INHDR SWITCH ON         SA0I
         BNZ   CODE47                   YES,WRITE ERROR MSG 47     SA0I
         OI    CEXITSSW,X'20'           SET INHDR SWITCH           SA0I
         MVI   EXITNAME,X'20'          INDICATE INHDR KEYWORD      SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER
CKEYWB2  CLC   0(7,R1),CCEXIT2          KEYWORD=OUTHDR?          A28288
         BNE   CKEYWB3                  NO
         TM    CEXITSSW,X'10'           IS OUTHDR SWITCH ON        SA0I
         BNZ   CODE47                   YES,WRITE ERROR MSG 47     SA0I
         OI    CEXITSSW,X'10'           SET OUTHDR SWITCH          SA0I
         MVI   EXITNAME,X'10'          INDICATE OUTHDR KEYWORD     SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER
CKEYWB3  CLC   0(6,R1),CCEXIT3          KEYWORD=INTLR?           A28288
         BNE   CKEYWB4                  NO
         TM    CEXITSSW,X'08'           IS INTLR SWITCH ON         SA0I
         BNZ   CODE47                   YES,WRITE ERROR MSG 47     SA0I
         OI    CEXITSSW,X'08'           SET INTLR SWITCH           SA0I
         MVI   EXITNAME,X'08'          INDICATE INTTLR KEYWORD     SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER
CKEYWB4  CLC   0(7,R1),CCEXIT4          KEYWORD=OUTTLR?          A28288
         BNE   CKEYWB5                  NO
         TM    CEXITSSW,X'04'           IS OUTTLR SWITCH ON        SA0I
         BNZ   CODE47                   YES,WRITE ERROR MSG 47     SA0I
         OI    CEXITSSW,X'04'           SET OUTTLR SWITCH          SA0I
         MVI   EXITNAME,X'04'          INDICATE OUTTLR KEYWORD     SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER
CKEYWB5  CLC   0(5,R1),CCDATA           KEYWORD=DATA?            A28288
         BNE   CKEYWB6                  NO
         TM    CEXITSSW,X'02'           IS DATA SWITCH ON          SA0I
         BNZ   CODE47                   YES,WRITE ERROR MSG 47     SA0I
         OI    CEXITSSW,X'02'           SET DATA SWITCH            SA0I
         MVI   EXITNAME,X'02'          INDICATE DATA KEYWORD       SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER
CKEYWB6  CLC   0(4,R1),CCKEY            KEYWORD=KEY?             A28288
         BNE   CKEYWB7                  NO
         TM    CEXITSSW,X'01'           IS KEY SWITCH ON           SA0I
         BNZ   CODE47                   YES,WRITE ERROR MSG 47     SA0I
         OI    CEXITSSW,X'01'           SET KEY SWITCH             SA0I
         MVI   EXITNAME,X'01'         INDICATE KEY KEYWORD         SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER
CKEYWB7  CLC   0(8,R1),CCIOERRO         KEYWORD=IOERROR?         A28288
         BNE   CKEYWB8                 NO                          UL0H
         TM    CEXITSSW,X'80'           IS IOERROR SWITCH ON       SA0I
         BNZ   CODE47                   YES,WRITE ERROR MSG 47     SA0I
         OI    CEXITSSW,X'80'           SET IOERROR SWITCH         SA0I
         MVI   EXITNAME,X'00'          INDICATE IOERROR KEYWORD    SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      YES,SCAN FURTHER
CKEYWB8  CLC   0(6,R1),CCTOTAL          KEYWORD=TOTAL?           A28288
         BC    7,CODE37                 NO,WRITE ERROR MSG 37      SA0I
         TM    CEXITSSW,X'40'           IS TOTAL SWITCH ON         SA0I
         BNZ   CODE47                   YES,WRITE ERROR MSG 47     SA0I
         OI    CEXITSSW,X'40'           SET TOTAL SWITCH           SA0I
         MVI   EXITNAME,X'40'          INDICATE TOTAL KEYWORD      SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                                                 UL0H
*
CKEYWC   CLC   0(5,R1),CCNAME           KEYWORD=NAME?            A28288
         BC    7,CODE37                 NO,WRITE ERROR MSG 37      SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         OI    COTHSW,X'80'             YES,SET NAME SWITCH
         BR    R12                      SCAN FURTHER
*
CKEYWD   TM    CCOMMSW,X'08'           COMMAND IS LABELS?          UL0H
         BO    CKEYWD3                                             UL0H
         CLC   0(7,R1),CCLABELS         KEYWORD=LABELS?          A28288
         BNE   CKEYWDA                                             UL0H
         OI    LABINPUT,X'08'           SET LABEL SWITCH           SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                                                 UL0H
CKEYWDA  CLC   0(6,R1),CCIDENT          KEYWORD=IDENT?           A28288
         BNE   CKEYWD2                  NO
*                                       LENGTH INVALID             SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,SKIP1                 YES, SKIP PAST PROCESSING   SA0I
*                                      OF THIS PARAMETER           SA0I
         LTR   R5,R5                    TABLE SPACE ALLOTTED       SA0I
         BC    8,CODE42                 WRITE ERROR MSG 42 IF NOT  SA0I
CKEYWD0   B   CKEYWD1
         LA    R5,12(,R5)
CKEYWD1  NI    CKEYWD0+1,X'0F'
         S     R5,HRDTAD
         CH    R5,CMAXG
         BNL   CODE42                   WRITE ERROR MSG 42 IF   YA01699
*                                       GT MAX                     SA0I
         A     R5,HRDTAD
SET1     OI    CRDTSW,X'FF'             SET RDT SWITCH             SA0I
         TM    CRCDSW,X'F0'            WAS THERE A PREVIOUS FIELD  0492
         BZ    NOFIELD                 NO, DO NOT SET FIELD BIT    0492
         MVI   0(R5),X'20'             SET BIT IN IDENT AREA       0492
         B     SKIP1                   CONTINUE PROCESSING         0492
NOFIELD  MVI   0(R5),X'00'             SET FIELD BIT TO ZERO       0492
SKIP1    OI    CRDTSW2,X'FF'            SET IDENT SWITCH           0492
         OI    CRCDSW,X'0F'             SET IDENT SWITCH           0492
         OI    COTHSW,X'40'             SET IDENT SWITCH
         MVI   CIDSW,X'00'
         MVI   CIDSW2,X'01'
         MVC   CPX(2),CH1               RESET P(X)
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER               SA0I
CKEYWD2   CLC   0(6,R1),CCFIELD         KEYWORD=FIELD?           A28288
         BC    7,CODE37                 NO,WRITE ERROR MSG 37      SA0I
         CLI   6(R1),X'4D'   IS AN LEFT PARENT. PRESENT?         A36072
         BNE   CODE46        NO, WRITE ERROR MESSAGE             A36072
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,SKIP                   YES,BRANCH AROUND          5052
*                                       PROCESSING                 5052
         LTR   R6,R6                    TABLE SPACE ALLOTTED       SA0I
         BC    8,CODE42                 NO,WRITE ERROR MSG 42      SA0I
         TM    CRCDSW,X'0F'            WAS THERE A PREVIOUS IDENT  0492
         BZ    SKIP                    NO, DO NOT SET BIT          0492
SETSW    MVI   0(R5),X'20'              SET FIELD SWITCH IN TABLE  0492
SKIP     OI    CRCDSW,X'F0'             SET FIELD SWITCH           0492
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,SET2                   YES,BRANCH AROUND          SA0I
*                                       PROCESSING                 SA0I
         LA    R6,8(,R6)                UPDATE EDCB XR
         S     R6,HEDCBAD               TABLE OVERFLOW?
         CH    R6,CMAXF
         BC    11,CODE42A               YES,WRITE ERROR MSG 42 @ZA28787
         A     R6,HEDCBAD               NO,RESTORE XR
         MVC   0(8,R6),CSTEDCB          MOVE IN STANDARD EDCB
SET2     OI    COTHSW,X'20'             YES,SET FIELD SWITCH       SA0I
     OI   CEDITSW,X'FF'
         MVC   CPX(2),CH1               RESET P(X)
         CLI   CIDSW2,X'01'
         BNE   CHANGE
BBKK     MVI   CIDSW2,X'00'
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                      SCAN FURTHER               SA0I
CHANGE   NI    CRDTSW,X'00'    CLEAR RDT SWITCH
         B    BBKK
CKEYWD3  CLC   0(5,R1),CCDATA           KEYWORD=DATA?            A28288
         BC    7,CODE37                 NO,WRITE ERROR MSG 37      SA0I
         OI    LABINPUT,X'04'           SET SWITCH FOR LABELS      SA0I
         OI    CWORK+81,X'01'           TURN PARAMETER REQ SW ON   SA0I
         BR    R12                     PARAMETER PROCESSING AND    UL0H
*                                      CONTINUE SCANNING           UL0H
CIDSW2   DC    X'00'
*                                                                 *SA0I
*                      ANALYSIS OF PARAMETERS                     *SA0I
*                                                                 *SA0I
CPARA    TM    CCOMMSW,X'80'            GENERATE SWITCH SET?
         BZ    CPARAB                   NO
         TM    CMAXEXSW,X'80'           YES,MAXNAME SWITCH SET?
         BZ    CPARAA2                  NO
         NI    CWORK+81,X'FE'           TURN PARAMETER REQ SW OFF  SA0I
         BALR  R9,R10                   CONVERT PARAM TO BINARY  A41800
         LTR   R0,R0                    IS LENGTH EQ 0             SA0I
         BC    8,CODE38                 YES,WRITE ERROR MSG 38     SA0I
       ST    R0,MXNAMK
         MH    R0,CH10                  MULTIPLY NUMBER BY 10 BYTES
         STH   R0,CMAXN                 STORE TABLE SIZE
         GETMAIN R,LV=(R0)
         ST    R1,HMDTAD                STORE ADDRESS OF MDT
         LR    R4,R1
         BR    R12                      SCAN FURTHER
CPARAA2  TM    CMAXEXSW,X'40'           MAXFLDS SWITCH SET?
         BZ    CPARAA3                  NO
         NI    CWORK+81,X'FE'           TURN PARAMETER REQ SW OFF  SA0I
         BALR  R9,R10                   CONVERT PARAM TO BINARY  A41800
         LTR   R0,R0                    IS LENGTH EQ 0             SA0I
         BC    8,CODE38                 YES,WRITE ERROR MSG 38     SA0I
         MH    R0,CH8                   MULTIPLY NUMBER BY 8  BYTES
         STH   R0,CMAXF                 STORE TABLE SIZE
         AH    R0,CH8
         GETMAIN R,LV=(R0)
         AH    R1,CH8
         ST    R1,HEDCBAD               STORE ADDRESS OF EDCBS
         LR    R6,R1                    LOAD REG6 WITH ADDR OF EDCBS
         SH    R6,CH8                   AND SUBTRACT 8 FROM THE ADDR
         BR    R12                      SCAN FURTHER
CPARAA3  TM    CMAXEXSW,X'20'           MAXGPS SWITCH SET?
         BZ    CPARAA4                  NO
         NI    CWORK+81,X'FE'           TURN PARAMETER REQ SW OFF  SA0I
         BALR  R9,R10                   CONVERT PARAM TO BINARY  A41800
         LTR   R0,R0                    IS LENGTH EQ 0             SA0I
         BC    8,CODE38                 YES,WRITE ERROR MSG 38     SA0I
         MH    R0,CH12                  MULTIPLY NUMBER BY 12 BYTES
         AH    R0,CH12            FOR RECORD STMT WITHOUT PARAM YA01703
         STH   R0,CMAXG                 STORE TABLE SIZE
         GETMAIN R,LV=(R0)
         ST    R1,HRDTAD                STORE ADDRESS OF RDT
         LR    R5,R1                    LOAD ADDR OF RDT IN REG 5
         BR    R12                      SCAN FURTHER
CPARAA4  NI    CWORK+81,X'FE'           TURN PARAMETER REQ SW OFF  SA0I
         BALR  R9,R10                   CONVERT PARAM TO BINARY  A41800
         LTR   R0,R0                    IS LENGTH EQ 0             SA0I
         BC    8,CODE38                 YES,WRITE ERROR MSG 38     SA0I
         STH   R0,CMAXL                 STORE TABLE SIZE
         GETMAIN R,LV=(R0)
         ST    R1,HLITTAD               STORE ADDRESS OF LITT
         LR    R7,R1                    LOAD ADDR OF LITT IN REG 7
         BR    R12                      SCAN FURTHER
*
CPARAB   TM    CCOMMSW,X'40'            EXITS SWITCH SET?
         BZ    CPARAF                                              UL0H
         NI    CWORK+81,X'FE'           TURN PARAMETER REQ SW OFF  SA0I
         LTR   R0,R0                    IS LENGTH EQ 0             SA0I
         BC    8,CODE38                 YES,WRITE ERROR MSG 38     SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,COMP2                  YES,BRANCH AROUND          SA0I
*                                       PROCESSING                 SA0I
         TM    CMAXEXSW,X'80'          AREA LENGTH PARAMETER       SA0I
         BO    CPARAB6                 YES -GET TOTALING AREA      UL0H
COMP2    LA    R9,8                     LENGTH GT 8                SA0I
         CR    R0,R9                                               SA0I
         BC    2,CODE38                 WRITE ERROR MSG 38 IF GT 8 SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BCR   1,R12                    YES,SCAN FURTHER           SA0I
         LA    R3,HEXITT
         SR    R9,R9                    YES,STORE LABEL IN
         LA    R8,8                                                UL0H
         MVI   CPARAB2+1,X'40'                                     UL0H
         B     CPARAB2
CPARAB1  LA    R3,8(,R3)
CPARAB2  TM    EXITNAME,X'40'          WHICH EXIT KEYWORD SET      SA0I
         BZ    CPARAB5
CPARAB3  BCTR  R0,0
         STC   R0,CPARAB4+1
CPARAB4  MVC   0(1,R3),0(R1)
          CLI  CPARAB2+1,X'40'          TOTALING?                  UL0H
         BCR   7,R12                   NO                          UL0H
         OI    CMAXEXSW,X'80'          SET AREA LENGTH BIT         SA0I
         OI    CWORK+81,X'01'          TURN PARAMETER REQ. SW. ON  UL0I
         BR    R12
CPARAB5  IC    R9,CPARAB2+1
         SRL   R9,1
         STC   R9,CPARAB2+1
         BCT   R8,CPARAB1
         B     CPARAB3
CPARAB6  BALR  R9,R10                  CONVERT TO BINARY           UL0H
         ST    R0,TOTLAREA             SAVE LENGTH                 UL0H
         CH    R0,TW15M1               COMPARE TO MAXIMUM          UL0H
         BC    2,CODE42                 WRITE ERROR MSG 42 IF      SA0I
*                                       GT MAX                     SA0I
         GETMAIN R,LV=(R0)             GET TOTALING AREA           UL0H
         L     R0,TOTLAREA             LOAD LENGTH                 UL0H
         ST    R1,TOTLAREA             STORE TOALING AREA ADDRESS  UL0H
         STH   R0,0(R1)                STORE LENGTH IN TOT. AREA   UL0I
         BR    R12                                                 UL0H
*
**********************************************************************
*               REG1 HAS THE POINTER TO THE PARAMETER OF THE MEMBER  *
*                NAME STATEMENT, FROM CCS02.                         *
*                                                                    *
*               REG0 HAS THE LENGTH OF THE MEMBER NAME, FROM CCS02   *
*                                                                    *
*               MDT IS THE TABLE FOR THE MEMBER NAMES                *
*                                                                    *
**********************************************************************
*
CPARAC   TM    COTHSW,X'80'             NAME SWITCH SET?
         BZ    CPARAD                   NO
         LTR   R0,R0
         BC    8,CODE41                 WRITE ERROR MSG 41 IF 0    SA0I
         LA    R9,8                     LEGAL LENGTH?
         CR    R0,R9
         BC    2,CODE38                 WRITE ERROR MSG 38 IF GT 8 SA0I
         CLC   CPX(2),CH1               YES,PARAMETER 1?
         BNE   CPARAC2                  NO
         NI    CWORK+81,X'FE'           TURN PARAMETER REQ SW OFF  SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,SET3                   YES,BRANCH AROUND          SA0I
*                                       PROCESSING                 SA0I
         ST    R4,CSAVEMDT
         LA    R4,2(,R4)
CPARAC1  B     CPARAC2                  FIRST-TIME SWITCH
         LTR   R5,R5
         BC    8,CODE42                 WRITE ERROR MSG 42 IF 0    SA0I
         OI    0(R5),X'0F'              ENTER EOM INDICATOR
SET3     OI    CPDSSW,X'FF'             INDICATE NAME CARD         SA0I
CPARAC2  TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,SET4                   YES,BRANCH AROUND          SA0I
*                                       PROCESSING                 SA0I
         NI    CPARAC1+1,X'0F'          TURN OFF SWITCH            SA0I
         ST    R4,FOURSVK
         L     R4,MXNAMK
         LTR   R4,R4
         BC    8,CODE42                 WRITE ERROR MSG 42 IF 0    SA0I
      BCTR   R4,0    DECREASE COUNT
     ST    R4,MXNAMK
        L    R4,FOURSVK
         BCTR  R0,0
         STC   R0,CPARAC3+1
         MVI   0(R4),X'40'              BLANK OUT NAME AREA
         MVC   1(7,R4),0(R4)
CPARAC3  MVC   0(8,R4),0(R1)            STORE NAME IN MDT
         LA    R4,8(,R4)                INCREMENT XR
         TM    CWORK,X'21'              LAST PARAMETER             9430
         BM    CPARAC4                 YES
SET4     LA    R8,1                     NO,INCREMENT P(X)          SA0I
         AH    R8,CPX
         STH   R8,CPX
         BR    R12                      SCAN FURTHER
CPARAC4  LH    R8,CPX
         BCTR  R8,0
         L     R9,CSAVEMDT
         STH   R8,0(R9)                 INSERT ALIAS COUNT
         BR    R12                      SCAN FURTHER
*
CPARAD   TM    COTHSW,X'40'             IDENT SWITCH SET?
         BZ    CPARAG                                              UL0H
         CLC   CPX(2),CH1               YES,PARAMETER 1?
         BNE   CPARAD2                  NO
         MVI   CPDSSW,X'00'             INDICATE NAME & IDENT COMB.
         TM    CERRSW,X'F0'            WAS THERE A PREVIOUS ERROR  SA0I
         BO    SET5                    YES, SKIP PROCESSING        SA0I
COMP3    LTR   R0,R0                                               SA0I
         BC    8,CODE41                 WRITE ERROR MSG 41 IF 0    SA0I
         TM    CWORK,X'01'              MORE PARAMETERS            SA0I
         BC    1,CODE41                 WRITE ERROR MSG 41 IF NO   SA0I
*                                       MORE                       SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,SET5                   YES,BRANCH AROUND          SA0I
*                                       PROCESSING                 SA0I
         CLI   0(R1),X'F0'              IS PARAMETER EQ 0          SA0I
         BC    8,CODE38                 YES,WRITE ERROR MSG 38     SA0I
         BALR  R9,R10                   YES,CONVERT TO BINARY
         LA    R9,8                     LEGAL LENGTH?
         CR    R0,R9
         BC    2,CODE38                 WRITE ERROR MSG 38 IF GT 8 SA0I
         STC   R0,1(R5)                 STORE IN RDT
SET5     MVC   CPX(2),CH2               UPDATE P(X)                SA0I
         BR    R12                      SCAN FURTHER
CPARAD2  CLC   CPX(2),CH2               PARAMETER 2?
         BNE   CPARAD3                  NO
         LTR   R0,R0
         BC    8,CODE41                 WRITE ERROR MSG 41 IF 0    SA0I
         CLI   0(R1),X'7D'              FIRST BYTE A QUOTE         SA0I
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT  SA0I
         TM    CWORK,X'01'              MORE PARAMETERS            SA0I
         BC    1,CODE41                 WRITE ERROR MSG 41 IF NOT  SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,SET6                   YES,BRANCH AROUND          SA0I
*                                       PROCESSING                 SA0I
         SH    R0,CH2                   YES,CONSISTENT PARAM LENGTH?
         STC   R0,IDLENG               COMPARE ACTUAL LENGTH TO    SA0I
         CLC   IDLENG(1),1(R5)         STATED LENGTH               SA0I
         BC    7,CODE49                 WRITE ERROR MSG 49 IF NOT  SA0I
*                                       CONSISTENT                 SA0I
         MVC   4(8,R5),1(R1)            YES,MOVE TO RDT
SET6     MVC   CPX(2),CH3               UPDATE P(X)                SA0I
         BR    R12                      SCAN FURTHER
CPARAD3  CLC   CPX(2),CH3               PARAMETER 3?
         BC    7,CODE38                 NO,WRITE ERROR MSG 38      SA0I
         NI    CWORK+81,X'FE'          TURN OFF PARAMETER REQ BIT  SA0I
         MVC   CPX(2),CH4               YES,UPDATE P(X)
         LTR   R0,R0
         BC    8,CODE41                 WRITE ERROR MSG 41 IF 0    SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BCR   1,R12                    YES,SCAN FURTHER           SA0I
         BALR  R9,R10                   CONVERT TO BINARY
         BCTR  R0,0                     SUBTRACT 1
         STH   R0,2(R5)                 STORE IN RDT
         BR    R12                      SCAN FURTHER
*
CPARAE   CLC   CPX(2),CH1               PARAMETER 1?
         BNE   CPARAE2                  NO
         NI    CWORK+81,X'FE'          TURN OFF PARAMETER REQ BIT M0171
         LTR   R0,R0
         BZ    CPARAE1
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,CPARAE1                YES,BRANCH AROUND          SA0I
*                                       PROCESSING                 SA0I
         STM   R0,R1,CSAVE1             SAVE PARAMETER REGS      A27695
CKNUM    CLI   0(R1),X'F0'              IS PARAMETER = 0         A27695
         BL    CODE38                   LESS THAN F0             A27695
         CLI   0(R1),X'F9'              IS PARAMETER = 9         A27695
         BH    CODE38                   GREATER THAN F9          A27695
         LA    R1,1(R1)                 INCREMENT POINTER        A27695
         BCT   R0,CKNUM                 WAS ENTIRE LENGTH CHECK  A27695
          LM   R0,R1,CSAVE1             RESTORE REGS
         BALR  R9,R10                   CONVERT TO BINARY
         STH   R0,4(R6)                 STORE IN EDCB
CPARAE1  MVC   CPX(2),CH2               UPDATE P(X)
         BR    R12                      SCAN FURTHER
CPARAE2  CLC   CPX(2),CH2               PARAMETER 2?
         BNE   CPARAE6                  NO
         LTR   R0,R0
         BZ    CPARAE3
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,CPARAE3                YES,BRANCH AROUND          SA0I
*                                       PROCESSING                 SA0I
         CLI   0(R1),X'7D'              LITERAL?
         BE    CPARAE4                  YES
         CLI   0(R1),X'F0'             CHECK TO SEE IF THE CHAR    1284
         BL    CODE38                  IS A NUMERAL- IF NOT WRITE  1284
         CLI   0(R1),X'F9'             AN ERROR MSG INDICATING     1284
         BH    CODE38                  AN INVALID PARAMETER        1284
         BALR  R9,R10                   NO,CONVERT TO BINARY
         BCTR  R0,0                     SUBTRACT 1
         STH   R0,2(R6)                 STORE IN EDCB
CPARAE3  MVC   CPX(2),CH3               UPDATE P(X)
         BR    R12                      SCAN FURTHER
CPARAE4  LTR   R7,R7                   TABLE SPACE ALLOTTED        SA0I
         BC    8,CODE42                 WRITE ERROR MSG 42 IF NOT  SA0I
         S     R7,HLITTAD
         AR    R7,R0
         SH    R7,CH2
         CH    R7,CMAXL
         BC    2,CODE42                 WRITE ERROR MSG 42 IF IS   SA0I
         A     R7,HLITTAD               NO,RESTORE XR
         SR    R7,R0
         AH    R7,CH2
         OI    0(R6),X'40'              SET LITERAL BIT
         SH    R0,CH2                   SHORT LENGTH?
         CH    R0,4(R6)                IS STATED LENGTH OF LITERAL SA0I
*                                      EQ TO ACTUAL LENGTH         SA0I
         BNE   CODE49                  NO,WRITE ERR MSG 49      YA01701
         SR    R11,R11                  ZERO OUT REGISTER          8206
         LA    R9,40                    PUT CONSTANT 40 IN REG     SA0I
         CH    R9,4(R6)           IS LIT. GREATER THAN 40?      YA01701
         BL    CODE50             YES,WRITE ERROR MSG           YA01701
         LA    R1,1(R1)                 ADD 1 TO LITERAL POINTER   8206
CPARAE5  MVC   0(1,R7),0(R1)            MOVE ONE BYTE OF LITERAL   8206
*                                       TO TABLE                   8206
         LA    R11,1(R11)               INCREASE LITERAL LENGTH    8206
         CR    R11,R9                  IS LITERAL LENGTH GREATER   SA0I
         BH    CODE50                   THAN 40 - YES WRITE ERR    SA0I
*                                       MESSAGE                    SA0I
         CLI   0(R1),X'7D'              COMPARE FOR QUOTE          8206
         BNE   NOTQUOTE                 NOT A QUOTE,BRANCH AROUND  8206
         LA    R1,1(R1)                 ADD 1 TO LITERAL POINTER   8206
NEXTQUOT CLI   0(R1),X'7D'              IS NEXT BYTE QUOTE         8206
         BNE   CODE38                   NO,WRITE ERROR MSG 38      8206
NOTQUOTE LA    R1,1(R1)                 ADD 1 TO LITERAL POINTER   8206
         LA    R7,1(R7)                 ADD 1 TO TABLE POSITION    8206
*                                       POINTER                    8206
         BCT   R0,CPARAE5               SUBTRACT 1 FROM LENGTH     8206
*                                       BRANCH IF NOT 0            8206
         LR    R8,R7
         SR    R8,R11                   POINT TO BEGIN OF LITERAL  SA0I
         S     R8,HLITTAD
         STH   R8,2(R6)                 STORE POSITION IN EDCB
         B     CPARAE3
CPARAE6  CLC   CPX(2),CH3               PARAMETER 3?
         BNE   CPARAE10                 NO
         MVC   CPX(2),CH4               YES,UPDATE P(X)
         LTR   R0,R0
         BZ    CPARAE7
         CLC   0(2,R1),CCHE
         BNE   CPARAE8                  NO
         CH    R0,CH2
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT 2SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BCR   1,R12                    YES,SCAN FURTHER           SA0I
         OI    0(R6),X'20'              YES,SET HE BIT
CPARAE7  BR    R12                      SCAN FURTHER
CPARAE8  CLC   0(2,R1),CCPZ             PZ CONVERSION?
         BNE   CPARAE9                  NO
         CH    R0,CH2
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT 2SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BCR   1,R12                    YES,SCAN FURTHER           SA0I
         OI    0(R6),X'10'              YES,SET PZ BIT
         BR    R12                      SCAN FURTHER
CPARAE9  CLC   0(2,R1),CCZP             ZP CONVERSION?
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT  SA0I
         CH    R0,CH2                   IS LENGTH EQ 2             SA0I
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT 2SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BCR   1,R12                    YES,SCAN FURTHER           SA0I
         OI    0(R6),X'08'             YES-SET ZP BIT
         BR    R12                     SCAN FURTHER
CPARAE10 CLC   CPX(2),CH4               PARAMETER 4?
         BC    7,CODE38                 WRITE ERROR MSG 38         SA0I
         MVC   CPX(2),CH5               UPDATE P(X)                SA0I
         LTR   R0,R0                    IS LENGTH EQ 0             SA0I
         BCR   8,R12                    SCAN FURTHER               SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BCR   1,R12                    YES,SCAN FURTHER           SA0I
         BALR  R9,R10                   CONVERT TO BINARY
         BCTR  R0,0
         STH   R0,6(R6)                 STORE IN EDCB
         BR    R12                      SCAN FURTHER
CPARAF   TM    CCOMMSW,X'08'           COMMAND IS LABELS           UL0H
         BZ    CPARAC                                              UL0H
         NI    CWORK+81,X'FE'           TURN PARAMETER REQ SW OFF  SA0I
         LTR   R0,R0                    IS LENGTH EQ 0             SA0I
         BC    8,CODE38                 YES,WRITE ERROR MSG 38     SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,SET7                   YES,BRANCH AROUND          SA0I
*                                       PROCESSING                 SA0I
         TM    LABINPUT,X'04'          TEST LABELS PAR SWITCH      UL0H
         BZ    CPARAF5                                             UL0H
SET7     NI    LABINPUT,X'00'           SET SWITCH OFF             SA0I
         CLC   0(3,R1),CCYES           PARAMETER=YES?              UL0H
         BNE   CPARAF1                 NO                          UL0H
         CH    R0,CH3                                              UL0H
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT 3SA0I
         OI    LABPROSW,X'80'          SET LABELPROC SWITCH=YES    UL0H
         BR    R12                     SCAN FURTHER                UL0H
CPARAF1  CLC   0(2,R1),CCNO            PARAMETER=NO?               UL0H
         BNE   CPARAF2                 NO                          UL0H
 CH      R0,CH2                                                    UL0H
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT 2SA0I
         OI    LABPROSW,X'40'          SET LABEL PROC SWITCH=NO    UL0H
         BR    R12                     SCAN FURTHER                UL0H
CPARAF2  CLC   0(4,R1),CCONLY          PARAMETER=ONLY?             UL0H
         BNE   CPARAF3                 NO                          UL0H
         CH    R0,CH4                                              UL0H
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT 4SA0I
         OI    LABPROSW,X'20'          SET LABEL PROS SWITCH=ONLY  UL0H
         BR    R12                     SCAN FURTHER                UL0H
CPARAF3   CLC  0(3,R1),CCALL            PARAMETER=ALL?             UL0H
         BNE   CPARAF4                 NO                          UL0H
         CH    R0,CH3                                              UL0H
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT 3SA0I
         OI    LABPROSW,X'10'          SET LABEL PROC SWITCH=ALL   UL0H
         BR    R12                     SCAN FURTHER                UL0H
CPARAF4   CLC  0(5,R1),CCINPUT          PARAMETER=INPUT?           UL0H
         BC    7,CODE38                 WRITE ERROR MSG 38 IF      SA0I
*                                       NOT INPUT                  SA0I
         CH    R0,CH5                   IS LENGTH EQ 5             SA0I
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT 5SA0I
         OI    LABPROSW,X'08'          SET LABEL PROC SWITCH=INPUT UL0H
         BR    R12                     SCAN FURTHER                UL0H
CPARAF5  NI    LABINPUT,X'00'                                      UL0H
         B     CODE40                   WRITE ERROR MSG 40         SA0I
CPARAG   TM    LABINPUT,X'08'          RECORD LABELS=N STAT.       UL0H
         BZ    CPARAE                  NO                          UL0H
         NI    CWORK+81,X'FE'           TURN PARAMETER REQ SW OFF  SA0I
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    14,LAB                   NO,BRANCH                  SA0I
         TM    LABPROSW,X'08'           LABELS DATA=INPUT SPECIFIEDSA0I
         BC    8,CODE42                 WRITE ERROR MSG 42 IF NOT  SA0I
         XI    LABINPUT,X'88'           SET INPUTLABELSW TO X'80'  SA0I
         BR    R12                      SCAN FURTHER               SA0I
LAB      TM    LABPROSW,X'08'           LABELS DATA=INPUT SPECIFIEDSA0I
         BC    8,CODE42                 WRITE ERROR MSG 42 IF NOT  SA0I
         TM    LABCTSW,X'08'            FIRST LABEL CARD           UL0H
         BZ    CPARAG3                  YES INITIALIZE AND PROCESS UL0H
         L     R9,LPADTAD              ADDRESS NE LABELNNNL ADDRESSUL0H
         LA    R9,4(R9)                TABLE                       UL0H
         ST    R9,LPADTAD              STORE ADDRESS OF NEXT ENTRY UL0H
         TM    LABCTSW,X'80'            SECOND LABEL CARD          UL0H
         BO    CODE43                   WRITE ERROR MSG 43 IF      SA0I
*                                       3RD CARD                   SA0I
         OI    LABCTSW,X'80'            TURN ON SECOND CARD READ SWUL0H
CPARAG3  OI    LABCTSW,X'08'            TURN ON FIRST CARD READ SW UL0H
         CH    R0,=H'1'                ONLY ONE DIGIT              UL0H
         BC    7,CODE38                 WRITE ERROR MSG 38 IF NOT  SA0I
         CLI   0(R1),X'F0'              LESS THAN DIGIT 0          SA0I
         BC    4,CODE38                 WRITE ERROR MSG 38 IF IS   SA0I
         CLI   0(R1),X'F9'              MORE THAN DIGIT 9          SA0I
         BC    2,CODE38                 WRITE ERROR MSG 38 IF IS   SA0I
         BALR  R9,R10                  CONVERT TO BINARY           UL0H
         LA    R9,8                                                UL0H
         CR    R0,R9                   CONSTANT GREATER THEN 8?    UL0H
         BC    2,CODE38                 WRITE ERROR MSG 38 IF GT 8 SA0I
         LTR   R0,R0                                               SA0I
         BC    4,CODE38                 WRITE ERROR MSG 38 IF      SA0I
*                                       NEGATIVE                   SA0I
         BZ    CPARAG4                                            M1180
         L     R9,LPADTAD              GET ADDRESS OF LABELADDRESS UL0H
         STC   R0,0(R9)                TABLE,STORE NUMBER OF LABELSUL0H
         LA    R1,640                                              UL0H
         GETMAIN R,LV=(R1)             GET STORAGE FOR LABELS      UL0H
         AL    R1,0(R9)                                            UL0H
         ST    R1,0(R9)                                            UL0H
         XI    LABINPUT,X'88'          SET INPUTLABELSW TO X'80'   UL0H
         LA    R0,X'F0'                SET THE GENLABEL SWITCH     UL0H
         L     R1,GLABADR              IN CCS02 TO X'F0'           UL0H
         ST    R0,0(R1)                                            UL0H
         MVC   SAVLABIF(4),0(R9)       SAVE LABEL INFORMATION      UL0H
         BR    R12                     SCAN FURTHER                UL0H
CPARAG4  NI    LABINPUT,X'00'           RESET LABELS SWITCH       M1180
         BR    R12                      GO TO SCAN ROUTINE        M1180
*                                                                  UL0H
*                                                                 *SA0I
*                  END OF FILE ANALYSIS                           *SA0I
*                                                                 *SA0I
CEOF     TM    CWORK+81,X'4A'    CONTINUATION BIT ON  ?          A36129
         BO    CODE45A       YES, PRINT ERROR MESSAGE            A36129
         TM    CWORK+127,X'04'   CONTINUATION BIT ON ?           A36129
         BO    CODE45A       YES, PRINT ERROR MESSAGE            A36129
         TM    CERRSW,X'F0'  WAS AN ERROR MSG ALR. GIVEN         A36129
         BO    CEOF7                   YES - BRANCH                SA0I
         CLI   CEDITSW,X'FF'           EDITING                     ULOH
         BE    CEOF2                    YES
         OI    HCOPYSW,X'F0'            NO, SET COPY SWITCH
         B     CEOF3
CEOF2    CLI   CRDTSW2,X'FF'            CHECK FOR IDENT
         BNE   CEOF4                    NO
         CLI   CPDSSW,X'FF'             LAST CARD = MEMBER
         BNE   CEOF2A                   NO
         OI    0(R5),X'5F'              YES, SET LAST ID IN RDT
         B     CEOF2B                   AND INDIC. TO PROC. TO EOD
CEOF2A   OI    0(R5),X'4F'              SET LAST IDENT IN RDT
CEOF2B   OI    0(R6),X'81'              SET LAST FIELD IN EDCB
         B     CEOF5
CEOF3    CLI   CRDTSW2,X'FF'            CHECK FOR IDENT
         BNE   CEOF4                    NO
         CLI   CPDSSW,X'FF'             LAST CARD = MEMBER
         BNE   CEOF3A                   NO
         OI    0(R5),X'9F'              YES, SET LAST ID IN RDT
         B     CEOF5                    AND INDICATE PROC. TO EOD
CEOF3A   OI    0(R5),X'8F'              SET LAST IDENT IN RDT
         B     CEOF5
CEOF4    OI    HCOPYSW,X'0F'            SET COPY SWITCH
         CLI   CEDITSW,X'FF'            CHECK FOR EDITING
         BNE   CEOF5                    NO
         OI    0(R6),X'80'              YES, SET LAST FIELD IN EDCB
CEOF5    TM    CWORK+141,X'0F'    A RECORD STMT WITHOUT PARAM?  YA01703
         BNO   AROUND             NO,SKIP THIS FUNCTION         YA01703
         NI    CWORK+141,X'F0'    YES,CLEAR SWITCH              YA01703
         TM    0(R5),X'10'        DOES RDT INDICATE PROC TO EOD YA01703
         BO    AROUND             YES,SKIP THIS FUNCTION        YA01703
         NI    0(R5),X'20'        CLEAR END OF TABLE SWITCH     YA01703
         LA    R5,12(R5)          UPDATE POINTER TO NEXT ENTRY  YA01703
         OI    0(R5),X'9F'        SET PROCESS TO END OF DATA    YA01703
AROUND   TM    LABPROSW,X'08'     LABELS DATA=INPUT             YA01703
         BZ    CEOF6               NO-CONTINUE                     UL0H
         L     R0,LABPOLAT             HEADER LABELS SPECIFIED     UL0H
         LTR   R0,R0                                               UL0H
         BC    7,CEOF6                 YES CONTINUE                UL0H
         L     R0,LABPOLAT+4           TRAILER LABELS SPECIFIED    UL0H
         LTR   R0,R0                                               UL0H
         BC    7,CEOF6                 YES-CONTONUE                UL0H
         LA    R1,NRLSTER              NO LABELS SPECIFIED         UL0H
         SLL   R1,8                    WRITE MSG                   UL0H
         LA    R1,33(R1)                                           UL0H
         L     R15,CWRMSGA             LOAD ADDRESS OF MSG WRITER  UL0H
         BALR  R14,R15                                             UL0H
         TM    CERRSW,X'F0'             IS ERROR MSG GIVEN         SA0I
         BO    CEOF6                   YES-BRANCH
         L     R15,CSAVE13+4           INCREASE RETURN ADDRESS     UL0H
         LA    R15,4(R15)              FOR ERROR                   UL0H
         ST    R15,CSAVE13+4                                       UL0H
CEOF6    LA    R1,HEXITT               LOAD EXIT TABLE ADDRESS     UL0H
         LM    R13,R14,CSAVE13          RESTORE REGS 13-14
         RETURN (2,12)                  RESTORE REGS 2-12 AND REURN
CEOF7    L     R15,CSAVE13+4                                       SA0I
         L     R15,CSAVE13+4                                       SA0I
         LA    R15,4(R15)               INCREASE RETURN ADDRESS FORSA0I
*                                       ERRORS                     SA0I
         ST    R15,CSAVE13+4                                       SA0I
         B     CEOF6                                               SA0I
*
*                                                                 *SA0I
*           THE FOLLOWING CODE ASSIGNS CODES FOR ERROR MESSAGES   *SA0I
*                                                                 *SA0I
CODE36   LA    R11,36                   SET ID EQ 36               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE37   LA    R11,37                   SET ID EQ 37               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE38   LA    R11,38                   SET ID EQ 38               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE39   LA    R11,39                   SET ID EQ 39               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE40   LA    R11,40                   SET ID EQ 40               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE41   LA    R11,41                   SET ID EQ 41               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE42A  LA    R12,CEOF7    RET.TO GENRT AFT WRITING A MESSAGE @ZA28787
CODE42   LA    R11,42                   SET ID EQ 42               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE43   LA    R11,43                   SET ID EQ 43               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE44   LA    R11,44                   SET ID EQ 44               SA0I
         B     CERR+8                   WRITE ERROR MSG            SA0I
*                                       NO NOT SET ERROR SW        SA0I
CODE45A  LA    R12,CEOF7     RET.TO GENRT AFT WRITING A MESSAGE  A36129
CODE45   LA    R11,45                   SET ID EQ 45               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE46   LA    R11,46                   SET ID EQ 46               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE47   LA    R11,47                   SET ID EQ 47               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE48   LA    R11,48                   SET ID EQ 48               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE49   LA    R11,49                   SET ID EQ 49               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
CODE50   LA    R11,50                   SET ID EQ 50               SA0I
         B     CERR                     WRITE ERROR MSG            SA0I
*                                                                  SA0I
*                                                                  SA0I
*                                                                 *SA0I
*  THE FOLLOWING CODE TAKES THE ERROR MESSAGE CODE AND  CONVERTS  *SA0I
*  IT TO A CODE TO BE PASSED TO THE MESSAGE WRITER. IT ALSO MOVES *SA0I
*  COLUMN NUMBERS INTO THE ERROR MESSAGES.                        *SA0I
*                                                                 *SA0I
CERR     OI    CERRSW,X'F0'             SET ERROR SWITCH           SA0I
         OI    CWORK,X'40'              TURN ON BYPASS SWITCH      SA0I
         NI    CWORK+81,X'FC'           TURN SWITCHES OFF          SA0I
         LR    R0,R11                   LOAD ID INTO REG.          SA0I
         BCTR  R0,0                     SUBTRACT 1 TO GET CODE     SA0I
         SLL   R0,8                     POSITION ID IN REG.        SA0I
         AR    R0,R11                   ADD ID TO CODE             SA0I
         LA    R15,42                                              SA0I
         CR    R11,R15                  IS ID GT OR EQ 42          SA0I
         BNL   NOCOL                    BRANCH ON GT OR EQ 42      SA0I
         LA    R15,CWORK                GET FIRST COL. OF CARD-1   SA0I
         SR    R1,R15                   SUBTRACT THIS FROM LOC.PTR SA0I
         L     R15,AHSMGMDL             LOAD ADDR OF ADDR OF       SA0I
*                                       FIRST MSG                  SA0I
         BCTR  R11,0                    SUBTRACT 1 FROM ID         SA0I
         SLL   R11,2                    MULTIPLY BY 4              SA0I
         AR    R15,R11                  GET MSG ADDR               SA0I
         L     R15,0(R15)                                          SA0I
         CVD   R1,COLDEC                CONVERT COL. NO. TO        SA0I
*                                       DECIMAL                    SA0I
         OI    COLDEC+7,X'0F'           CHANGE SIGN TO F           SA0I
         UNPK  COL(2),COLDEC(8)         UNPACK COL. NO.            SA0I
         MVC   30(2,R15),COL            PUT COL. NO. INTO LAST 2   SA0I
*                                       BYTES OF MSG               SA0I
NOCOL    LR    R1,R0                                               SA0I
         L     R15,CWRMSGA              WRITE MESSAGE              SA0I
         BALR  R14,R15                                             SA0I
         BR    R12                      SCAN MORE                  SA0I
*
CIPERR   L     R9,SYNADMSA             LOAD ADDRESS OF SYNAD INFOA27717
         MVC   10(79,R9),0(R1)         MOVE INFO TO MSG          A27717
         FREEMAIN   R,LV=79,A=(1)      FREE GOTTEN CORE          A27717
         LA    R1,50                   LOAD MSG OFFSET           A27717
         SLL   R1,8                    AND ADD                   A27717
         LA    R1,51(R1)               MSG ID                    A27717
         L     R15,CWRMSGA              LOAD MSG WRITER SUBROUTINE  ADR
         BALR  R14,R15                  WRITE MESSAGE
FROMDDER LA    R15,12                   LOAD CONCODE
         LM    R13,R14,CSAVE13          RESTORE REGS 13-14
         LA    R14,4(,R14)              SET VARIABLE EXIT FOR ERROR
         RETURN (2,12)                  RESTORE REGS 2-12 AND RETURN
BLKRTN   LA    R1,BLKERROR              INVALID BLKSIZE  CODE 18   BS0H
         SLL   R1,8                                                BS0H
         LA    R4,19                                               BS0H
         B     ERRTN                    SET UP MESSAGE             BS0H
DDRTN    LA    R1,DDERROR1              UNABLE TO OPEN SYSIN
         SLL   R1,8                      MSG CODE 15
         LA    R4,16    MSG NUMBER
ERRTN    AR    R1,R4                    R1=MSG CODE AND MSG ID     BS0H
         L     R15,CWRMSGA   MSG WRITER ADDRESS
         BALR  R14,R15   WRITE MSG
         B     FROMDDER
*                                                                  UL0H
LABGENER DS    0H                                                  UL0H
         SR    R8,R8                    ZERO OUT REG 8             UL0H
         IC    R8,SAVLABIF             LOAD NUMBER OF LABELS       UL0H
         L     R9,SAVLABIF             FOLLOWING+ADDRESS           UL0H
         LA    R9,0(R9)                                            UL0H
         TM    CERRSW,X'F0'             HAS ERROR OCCURRED         SA0I
         BC    1,LABNUM                 YES,DECREASE LABEL NUMBER  SA0I
         MVC   0(80,R9),CWORK+1        MOVE LABEL TO LABELPOOL     UL0H
         LA    R9,80(R9)               INCREASE INDEX IN           UL0H
         ST    R9,SAVLABIF             LABELPOOL(SAVED ONE)        UL0H
LABNUM   BCTR  R8,0                     DECREASE NUMBER OF LABELS  SA0I
         STC   R8,SAVLABIF                                         UL0H
         LTR   R8,R8                   NUMBER OF LABELS =0?        UL0H
         BCR   7,R12                   NO : NEXT ONE               UL0H
         NI    LABINPUT,X'00'          YES  RESET SWITCHES         UL0H
         SR    R0,R0                   LABINPUT & GENLABEL         UL0H
         L     R1,GLABADR                                          UL0H
         ST    R0,0(R1)                                            UL0H
         MVI   CWORK+72,X'40'           CLEAR CONTINUATION COLUMN M1177
         BR    R12                     SCAN FURTHER                UL0H
CCNVRT   LTR   R0,R0            LENGTH OF PARAM ZERO ?           A45131
         BE    CODE38           YES, PRINT MSG IEB338I           A45131
         BCTR  R0,0
         STC   R0,CCNVRT1+1
         OI    CCNVRT1+1,X'70'
CCNVRT1  PACK  CCNVRTWK(8),0(1,R1)
         TM    CCNVRTWK+7,X'0F'         VALID SIGN             @ZA01696
         BO    VALSIGN                  YES-BRANCH             @ZA01696
         MVI   CWORK+129,X'00'          RESET PARENTHESIS COUNT@ZA01696
         B     CODE38                                          @ZA01696
VALSIGN  CVB   R0,CCNVRTWK                                     @ZA01696
         BR    R9
*
*CONSTANTS
*
CCNVRTWK DS    1D                       WORK AREA TO UNPACK  A NUMBER
CSAVE13  DS    2F                       REG 13-14 SAVE AREA
CSAVE1   DS    2F                       REG 0-1 SAVE AREA
SYNADMSA DC    V(SYNADMSG)             ADDRESS OF SYNADAF MSG    A27717
CWRMSGA  DC    V(HWRMSG)                LOC. CONT MSG WRITER SUBR ADDR
CCDWRA   DC    V(HCDWR)                 LOC. CONT CTL CARD WRTR SUB ADR
GLABADR  DC    V(GENLABEL)                                         UL0H
LPADTAD  DC    A(LABPOLAT)                                         UL0H
COL      DS    CL2                                                 SA0I
COLDEC   DS    D                                                   SA0I
AHSMGMDL DC    V(HMSGMDL)                                          SA0I
SAVLABIF DS    1F                                                  UL0H
CSIDDA   DS    2F                       SYSIN DD NAME SAVE AREA
CREGSAVE DS    18F                      REG SAVE AREA
CSAVEMDT DS    1F                       MDT SAVE AREA
CSOBUF   DS    1F
CSYSOUTA DS    1F
CPX      DC    H'1'
CCOMMSW  DC    X'00'                    SWITCHES
CERRSW   DC    X'00'                                               SA0I
CEXITSSW DC    X'00'                                               SA0I
IDLENG   DC    X'00'                                               SA0I
EXITNAME DC    X'00'
CMAXEXSW DC    X'00'
COTHSW   DC    X'00'
CEDITSW  DC    X'00'
CRDTSW   DC    X'00'
LABCTSW  DC    X'00'                    LABEL CARD COUNT SWITCH    UL0H
FIRSTLAB DC    X'00'                                               UL0H
LABINPUT DC    X'00'                                               UL0H
TW15M1   DC    H'32767'                                            UL0H
CCGENERA DC    C'GENERATE'              CONSTANTS
CCEXITS  DC    C'EXITS'
CCMEMBER DC    C'MEMBER'
CCRECORD DC    C'RECORD'
CCMAXNAM DC    C'MAXNAME='                                       A28288
CCMAXFLD DC    C'MAXFLDS='                                       A28288
CCMAXGPS DC    C'MAXGPS='                                        A28288
CCMAXLIT DC    C'MAXLITS='                                       A28288
CCEXIT1  DC    C'INHDR='                                         A28288
CCEXIT2  DC    C'OUTHDR='                                        A28288
CCEXIT3  DC    C'INTLR='                                         A28288
CCEXIT4  DC    C'OUTTLR='                                        A28288
CCDATA   DC    C'DATA='                                          A28288
CCKEY    DC    C'KEY='                                           A28288
CCIOERRO DC    C'IOERROR='                                       A28288
CCNAME   DC    C'NAME='                                          A28288
CCIDENT  DC    C'IDENT='                                         A28288
CCFIELD  DC    C'FIELD='                                         A28288
CCLABELS DC    C'LABELS='                                        A28288
CCTOTAL  DC    C'TOTAL='                                         A28288
CCYES    DC    C'YES'                                              UL0H
CCNO     DC    C'NO'                                               UL0H
CCONLY   DC    C'ONLY'                                             UL0H
CCALL    DC    C'ALL'                                              UL0H
CCINPUT  DC    C'INPUT'                                            UL0H
CCHE     DC    C'HE'
CCPZ     DC    C'PZ'
CCZP     DC    C'ZP'
CSTEDCB  DC    X'0000'
         DC    X'0000'
         DC    X'0050'
         DC    X'0000'
CH1      DC    H'1'
CH2      DC    H'2'
CH3      DC    H'3'
CH4      DC    H'4'
CH5      DC    H'5'
CH6      DC    H'6'
CH7      DC    H'7'
CH8      DC    H'8'
CH10     DC    H'10'
CH12     DC    H'12'
         DC    F'64'
HEXITT   DS    16F                                                 UL0H
HMDTAD   DS    1F                       SWITCHES
HEDCBAD  DC    F'0'
HRDTAD   DS    1F
HLITTAD  DS    1F
LABPOLAT DC    2F'0'                   LABELPOOL ADDRESSES         UL0H
TOTLAREA DC    F'0'                    TOTALING AREA ADDRESS       UL0H
LABPROSW DC    X'00'                   LABEL PROCESS SWITCH        UL0H
HCOPYSW  DC    X'00'
HPOID    DC    X'00'
CIDSW    DC  X'00'
CMAXN    DC    H'0'               MAXNAME CORE LENGTH            A45131
CMAXF    DC    H'0'               MAXFLDS CORE LENGTH            A45131
CMAXG    DC    H'0'               MAXGPS CORE LENGTH             A45131
CMAXL    DC    H'0'               MAXLITS CORE LENGTH            A45131
CRDTSW2  DC    X'00'
CRCDSW   DC    X'00'
CPDSSW   DC    X'00'
FOURSVK   DC   F'0'
MXNAMK    DC   F'0'
CWORK    DC    36F'0'                   WORK AREA               OZ00131
CWRSW    DS    1C
CMSGECC  EQU   2
CMSGUSE  EQU   3
NRLSTER  EQU   33                                                  UL0H
DDERROR1 EQU   15
BLKERROR EQU   19                                                  BS0H
         ENTRY BLKRTN                                              BS0H
         ENTRY DDRTN
         END
