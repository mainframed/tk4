*                   TITLE 'GENERATE UTILITY- MOVE SUBROUTINE'
*
* THIS SUBROUTINE MOVES ANY NUMBER OF BYTES OF DATA FROM ONE AREA OF
* MAIN STORAGE TO ANOTHER. IT IS EXECUTED EVERY TIME DATA IS MOVED FROM
* ONE INPUT BUFFER TO THE OTHER, ONE OUTPUT BUFFER TO THE OTHER, OR
* FROM INPUT TO OUTPUT. THE MOVE IS MADE 256 BYTES AT A TIME UNTIL THE
* FIELD IS EXHAUSTED.
*
*
*                   CALL  HMOVE,(OUTAREA,INAREA,LENGTH)
*                        OUTAREA IS A POINTER TO OUTPUT AREA
*                        INAREA  IS A POINTER TO INPUT AREA
*                        LENGTH CONTAINS THE INPUT RECORD LENGTH
*
*
IEBMOVE2 CSECT
HMOVE    SAVE  (14,12)                 SAVE REGS 14-12
         LR    2,15                    INITIALIZE BASE REG 2
         USING HMOVE,2
         SR    15,15
         L     4,8(1)                  LOAD LENGTH FIELD
         L     5,0(4)                  IN R5
         LTR   5,5                     LENGTH GR THAN 0?
         BP    HMOVE2                  YES
         B     HMOVE5                  NO
HMOVE2   LR    15,5                    LOAD LENGTH IN REG 5
         LM    6,7,0(1)                GET OUTPUT AND INPUT AREA POINTR
         L     9,0(6)                  LOAD OUTPUT AREA ADDR IN R9
         L     8,0(7)                  LOAD INPUT AREA ADDR IN R8
HMOVE3   CH    5,HH256                 LENGTH GR THAN 256 BYTES?
         BH    HMOVE6                  YES
         BCTR  5,0                     NO- REDUCE LENGTH BY 1
         STC   5,HMOVE4+1              INSER EXACT LNGTH IN MOVE INSTR
HMOVE4   MVC   0(1,9),0(8)             MOVE EXACT NO OF BYTES
HMOVE5   RETURN (2,12)                 RESTORE REGS 2-12 AND RETURN
HMOVE6   MVC   0(256,9),0(8)           MOVE 256 BYTES
         SH    5,HH256                 REDUCE LENGTH BY 256 BYTES
         AH    8,HH256                 ADVANCE INPUT ADDR BY 256 BYTES
         AH    9,HH256                 ADVANCE OUTPUT ADDR BY 256 BYTES
         B     HMOVE3                  CONTINUE MOVE
*
* CONSTANTS
*
HH256    DC    H'256'
         ENTRY HMOVE
         END
