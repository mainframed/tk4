 TITLE  'IEBGEN03-IEBGENER MAIN PROCESSOR'                        10696
***********************************************************************
*                                                                     *
*                    * * * I E B G E N 0 3 * * *                      *
*                         * * * * * * * * *                           *
*                                                                     *
*      THIS IS THE PROCESSING MODULE FOR NON-SPANNED DATASETS      UL0H
*      IT GETS CONTROL AFTER IEBGENR3 HAS OPENED THE INPUT AND     UL0H
*      OUTPUT DATASETS                                             UL0H
*      IT CONTROLS LINKAGE TO EDIT AND CONVERSION ROUTINES FOR     UL0H
*      SPECIAL PROCESSING DICTATED BY IEBGENER CONTROL STATEMEBT   UL0H
*      IT USES THE BSAM ACCESS METHOD AND DOUBLR BUFFERING         UL0H
*      AFTER PROCESSING IS COMPLETED IT RETURNS TO IEBGENR3        UL0H
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             E N T R Y                               *
*                                                                     *
*      THE SUBROUTINE HAS ONE EXTERNALLY REFERENCABLE ENTRY POINT     *
*      WHOSE SYMBOLIC NAME IS:                                        *
*                             H G E N P                               *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             I N P U T                               *
*                                                                     *
*      THE SUBROUTINE IS ENTERED WITH OP REGISTER 1  POINTING TO      *
*      A LIST IN WHICH ARE THE ADDRESSES OF TABLES CONSTRUCTED BY     *
*      THE I E B G S C A N SUBROUTINE ACCORDING TO THE PARAMETERS     *
*      SPECIFIED IN THE UTILITY CONTROL CARDS. MAIN  STORAGE  FOR     *
*      THESE TABLES IS GOTTEN AND RELEASED OUTSIDE THIS ROUTINE.      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                             E X T R N                               *
*                                                                     *
*      THE SUBROUTINE REFERENCES THESE EXTERNALLY DEFINED  VALUES     *
*      OR SUBROUTINE NAMES:                                           *
*                             H M O V E                               *
*              A CLOSED SUBROUTINE USED BY THIS ROUTINE               *
*              TO MOVE RECORDS OF ANY SIZE IN CORE                    *
*                                                                     *
*                             H E D I T                               *
*              A CLOSED SUBROUTINE USED BY THIS ROUTINE               *
*              TO EXECUTE THE EDITING SPECIFIED BY THE                *
*              UTILITY CONTROL CARDS.                                 *
*                                                                     *
*                              H P R L                                *
*              A CLOSED SUBROUTINE USED BY THIS ROUTINE               *
*              TO ESTABLISH THE LENGTH OF AN OUTPUT RE-               *
*              CORD ACCORDING TO THE EDIT PARAMETERS.                 *
*                                                                     *
*                            H W R M S G                              *
*                                                                     *
*              A CLOSED SUBROUTINE USED BY THIS ROUTINE               *
*              TO WRITE MESSAGES ISSUED BY THIS ROUTINE               *
*              ON THE DEVICE SPECIFIED BY SYSPRINT  DD-               *
*              NAME.                                                  *
*                                                                     *
*                          D D E R R O R 1                            *
*                                                                     *
*              A MESSAGE USED AS A DIAGNOSTIC WHEN DATA               *
*              DEFINITION STATEMENT NAMES ARE IMPROPER-               *
*              LY SPECIFIED TO THE PROGRAM.                           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                   E R R O R   C O N D I T I O N                     *
*                                                                     *
*      THE SUBROUTINE WILL TERMINATE PROCESSING, CAUSE AN APPROP-     *
*      RIATE DIAGNOSTIC MESSAGE TO BE PRINTED AND RETURN VIA REG-     *
*      ISTER 14 UPON RECOGNITION OF THE FOLLOWING TYPES OF ERROR:     *
*                                                                     *
*              1.PERMANENT I/O ERROR ON EITHER INPUT OR               *
*                OUTPUT DATA SET.                                     *
*              2.ANY CONTROL STATEMENT ERROR UNABLE  TO               *
*                BE DETERMINED AT CONTROL CARD  PROCES-               *
*                SING TIME,I.E.-PARAMETERS WHICH ARE AT               *
*                VARIANCE WITH INCOMING DATA.                         *
*              3.DATA FORMAT ERRORS NOT APPARENT TO THE               *
*                BSAM ACCESS METHOD.                                  *
*              4.NO BLKSIZE SPECIFIED FOR EITHER INPUT            10696
*                OR OUTPUT DATA SET.                              10696
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             N O T E S                               *
*                                                                     *
*      THIS SUBROUTINE IS 'ONLY LOADABLE'.IT IS NOT RE-ENTRANT;IT     *
*      IS NOT RE-USABLE.                                              *
*                                                                     *
***********************************************************************
         EJECT
IEBGEN03 CSECT
*                                                                A36114
*047000                                                          A23810
*102100                                                          F25211
*135000,139800,167000                                            A22671
*151910,155200-155270                                            F21533
* 0219700,021900                                                  M2461
* 088800                                                         A25958
* 132800-135800,140800-141800                                    A27717
* 038000-039200,039800,040000                                    A35449
* 118600-119000,119600-122000                                    A35448
*A092750,092907-092942                                           A45131
*D092750                                                         A45131
*A046720-047040,047500-047592,147690,169900                      A45145
*D046730,046760,046800,046880,046960,047040,047120               A45145
*C047600,147590                                                  A45145
*A139100,139300-139340,175300                                    A48809
*C138000,138400                                                  A48809
*D141100                                                         A48809
*A037500,062100,063100,063460,063520,641000,65100,082200,        A50939
*A092400-092670,098250,127460,127520,175330,175360               A50939
*D064400-064800,082200,092400,092500                             A50939
*A092911                                                       @ZA03366
*C092914                                                       @ZA03366
*D092928                                                       @ZA03366
*A062966-062990                                                @ZA01743
*A100220-100280                                                @ZA04424
*A100292-100296                                                @ZA07363
*A100100-100200                                                @ZA10940
*C100300                                                       @ZA10940
*A100284-100288                                                @ZA13747
*C047400                                                       @ZA16476
*A147271,173100                                                @ZA24341
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
HGENP    SAVE  (14,12),T,GEN03                                 @ZA24341
         LR    2,15
         USING HGENP,2
         LA    3,HGENPRS                LOAD WORK AREA ADDRESS
         ST    3,8(13)                  AND STORE IT
         STM   13,14,HSAVE13
         LA    13,HGENPRS
         L     3,0(1)                   LOAD EXIT TABLE ADDRESS
         ST    3,HEXITTA                STORE EXIT TABLE ADDRESS
         MVC   HMDTCUR(16),64(3)        STOER SWITCHES             UL0H
         MVC   HMDTCUR+16(1),93(3)      STORE PO SWITCH            UL0H
         MVC   HPOID(1),94(3)                                      UL0H
         MVC   LABPOLAT(8),80(3)       MOVE LABEL POOL ADDRESSES   UL0H
         MVC   TOTLAREA+12(4),88(R3)   MOVE TOTALING AREA ADDRESS  UL0I
         MVC   LABPROSW(1),92(3)       MOVE LABEL PROCESSING SWITC UL0H
         L     12,HDCBINA              LOAD SYSUT1DCB ADDRESS
         MVC   EODADOFS(3,12),HEODAD+1 MOVE EODAD ROUT.ADD AND
         MVC   SYNADOFS+1(3,R12),HINERAD+1 PUT SYNAD ADDR IN DCB  M2461
         L     4,HDCBOUTA              STORE SYNAD ROUT,ADDRESS
         MVC   SYNADOFS+1(3,R4),HOUERAD+1  PUT SYNAD ADDR IN DCB  M2461
         ST    4,TOTLAREA+4            STORE DCB ADDRESS IN LIST
         CLI   0(3),X'40'              TOTALING SPECFIED
         BE    HGENP5A                 NO-BRANCH
         OI    TOTLEXSW,X'80'          SET TOTALING EXIT SWITCH
         LR    10,3
         LOAD  EPLOC=(10)              LOAD USER ROUTINE
         ST    0,ADTOTEXR              STORE ADDRESS
HGENP5A  BAL   14,INOUTSET             DATA SET ATTRIBUTES         6598
*                                                                  7653
*  GO TO THE MESSAGE WRITER TO SPACE SYSPRINT ONE LINE IN CASE     7653
*  SYSUT2 AND SYSPRINT ARE THE SAME DATA SET.                      7653
*                                                                  7653
         LA    0,1                 INDICATE MSG LENGTH OF 1        7653
         LA    1,BLANKS            POINT TO BLANKS AS THE MSG      7653
         L     15,HCDWRA           ADDR OF ENTRY PT TO WTR ROUTINE 7653
         BAL   14,4(15)            ENTER 4 PAST ENTRY PT TO SKP LA 7653
         SR    0,0                                                 7653
         C     0,HKEYLOU                IF KEYS,GET SAVE AREA
         BE    HINP1
         L     0,HKEYLOU                LOAD KEY LENGTH
         GETMAIN R,LV=(0)               GET CORE TO SAVE KEY
         ST    1,HKEYA                  STORE CORE ADDR
         L     0,HKEYLOU                LOAD KEY LENGTH
         BCTR  0,0                      REDUCE KEY LENGTH BY 1
         STC   0,HGENP6+1               STORE EXACT KEY LNGTH IN XC INS
HGENP6   XC    0(1,1),0(1)              ZERO OUT KEY AREA
HINP1    L     5,HIN1AD            PREPARE REGS FOR PROCESSING     3599
         L     6,HOU2AD            RECORDS BY LOADING BUFFER ADDRS 3599
HINP1A   ST    6,HOU2AD                 INITIALIZE OUTPUT XR
         MVC   CPYSWSAV(1),HCOPYSW
         TM    HCOPYSW,X'FF'            EDITING WITH IDENT
         BO    HINP1A1
         BM    HINP1A1
         L     9,HRDTCUR                YES
         TM    0(9),X'20'               EDITING THIS RECORD
         BO    HINP1A1                  YES
         OI    HCOPYSW,HCOPYMSK         NO, SET COPY SWITCH
HINP1A1  BAL   12,HREAD
         B     HINP3
HINP2    C     7,HBLIN                  TEST FOR END OF BUFFER
         BL    HINP6                    IF NOT,GO TO UPDATE XR AND ARS
HINP3     SR    4,4
         NI    CHECKINP,X'00'      MARK INP CHECK ISSUED         A50939
         CHECK HDECBIN                  CHECK SYSUT1
         XC    REDANY(1),REDANY        RCD(S) IN SYSUT1 DATASET    6291
HINP3X   NOP   HEOD
         L     9,HDECBIN+8        GET SYSUT1 DCB ADDRESS         A35449
         L     10,HDECBIN+16      GET SYSUT1 IOB ADDRESS         A35449
         LH    10,14(0,10)        GET RESIDUAL COUNT             A35449
         LH    9,62(0,9)          GET BLOCKSIZE FROM DCB         A35449
         SR    9,10               CALCULATE LENGTH LAST BLOCK    A35449
         TM    HINORG,X'10'  INPUT BLOCKED ?                     A35449
         BO    SKIPKEYL      YES, IGNORE KEYLENGTH               A35449
         A     9,HKEYL       ADD  KEYLENGTH                      A35449
SKIPKEYL ST    9,HBLIN    STORE RECORD LENGTH                    A35449
         L     10,HDECBIN+8  GET SYSUT1 DCB ADDRESS              A36114
         TM   36(10),X'80'   IS RECFM VARIABLE                   A36114
         BNZ   CONTIN        NO                                  A36114
         L     10,ACINAREA   LOAD ACT INP. BUFFER ADDRESS        A36114
         LH    10,0(0,10)    LOAD BDW NUMBER OF VAR RECORD       A36114
         CR    10,9          BDW NUMBER SMALLER TH PH. REC.      A36114
         BNL   CONTIN        NO                                  A36114
         ST    10,HBLIN      YES,SAVE TRUE BLKLENGTH             A36114
CONTIN   EQU   *                                                 A36114
         TM    HINORG,X'20'             U-TYPE REC?
         BZ    HINP3N                   NO
         S     9,HKEYL            CALCULATE RECORD LENGTH        A35449
         STH   9,HRLIN            SAVE THIS LENGTH               A35449
HINP3N   CALL  HMOVE,(HIN2AD,HIN1AD,HBLIN) MOVE SYSUT1 BUFF1 TO BUFF2
         L     5,HIN1AD                 SET XR FOR READ
         CLI   HKEYLOU+3,X'00'          IS THERE A KEY?
         BE    HINP4                    NO
         L     10,HKEYLOU               YES
         BCTR  10,0                     LOAD
         STC   10,HINP3A+1              KEY
         L     10,HKEYA                 IN REG10
HINP3A   MVC   0(1,10),0(5)             MOVE KEY TO SAVE AREA
HINP4    BAL   12,HREAD                 READ SYSUT1 INTO BUFF1
         L     5,HIN2AD                 RESET INPUT XR
         LH    7,HRLIN                  RESET INPUT ARS
         STH   7,HWK2
         A     5,HKEYL                  ADD KEY LENGTH TO XR
         TM    HINORG,X'40'             TEST FOR V
         BZ    HINP5                    IF V,
         LA    5,4(0,5)                 ADJUST XR FOR COUNT FIELD,
         MVC   HWK2(2),0(5)             SET ARS TO LENGTH OF FIRST
         LA    5,4(0,5)                 DISPLACE PAST RECORD COUNT
HINP4A   LH    7,HWK2                   RECORD AND ADJUST FOR
         LA    7,4(0,7)                 COUNT FIELD
HINP5    A     7,HKEYL
         B     HINP7A
HINP6    LR    5,7
         A     5,HIN2AD
         TM    HINORG,X'40'             TEST FOR F OR U
         BO    HINP7
         MVC   HWK2(2),HRLIN
         AH    7,HRLIN                  UPDATE ARS FOR U OR F TYPE
         B     HINP7A
HINP7    MVC   HWK2(2),0(5)             UPDATE ARS FOR V TYPE
         LA    5,4(0,5)                 DISPLACE PAST RECORD COUNT
         AH    7,HWK2
HINP7A   L     12,HDCBINA              LOAD INPUT DCB ADDRESS
         CLC   HWK2(2),LRECLINP    LRECL/BLKSI GREATER TH.SPEC.  A45145
         BH    HINER2              YES,PERM. INP. ERROR          A45145
         TM    RECFM(12),X'80'     RECFM F OR U ?                A45145
         BO    TESTFU              YES, SKIP V TEST              A45145
         CLC   HWK2(2),HH4              IS REC CT LESS THAN 4
         BL    HINER2              YES--PERM INPUT ERROR       @ZA16476
TESTFU   CLC   HWK2(2),HH0         LRECL/BLKSIZE ZERO   ?        A45145
         BE    TESTU               YES, TEST RECFM FOR U         A45145
         B     HINP7A3             SKIP U TEST                   A45145
TESTU    TM    HINORG,X'20'        RECFM=U ?                     A45145
         BNO   HINER2              NO, PERM. INP. ERROR          A45145
         TM    17(12),X'50'        INPUT DEV. PAPER TAPE ?       A45145
         BNO   HINER2              NO, PERM. INP. ERROR          A45145
         B     HINP3               YES, READ NEXT RECORD         A45145
HINP7A3  TM    HCOPYSW,HCOPYMSK    PREDICT 1ST OUTPUT REC LENGTH A45145
         BZ    HINP8                    IF COPY,
         BAL   12,ANYBODY               SET HRLPRE
HINP7B   NOP   HOUP1
         OI    HINP7B+1,X'F0'           FIRST TIME THROUGH,
HINP7C   L     8,HKEYLOU                INITIALIZE OUTPUT ARS
         BAL   12,HMVKEY                MOVE KEY TO OUTPUT
         A     6,HKEYLOU                ADJUST OUTPUT XR FOR KEY LENGTH
         TM    HOUORG,X'40'
         BZ    HOUP1                    IF V TYPE,
         LA    8,4(0,8)                 ADJUST XR AND ARS
         MVC   2(2,6),HH0          ZERO THE RECORD BB FIELD        4028
         LA    6,4(0,6)
         B     HINP7B                   BEFORE OUTPUT
HINP8    NOP   HOUP1                    IF EDIT,GO TO HPRL
         BAL   12,HPREDLEN              PREDICT LENGTH OF FIRST REC GRP
         OI    HINP8+1,X'F0'
         B     HINP7B
HOUP1    BAL   12,ANYBODY               SET HRLPRE
         AH    8,HRLPRE                 ADD DATA COUNT TO OUTCOUNT
         TM    HOUORG,X'40'
         BZ    HOUP1A                   IF V EDIT,
         LA    8,4(0,8)                 ADJUST ARS FOR RECORD COUNT FLD
HOUP1A   TM    HOUORG,X'10'             IF UNBLOCKED OUTPUT,
HOUP1B   B     HOUP4
         BZ    HOUP2A                   SKIP OVERFLOW TEST
         CH    8,HBLOU                  WILL NEXT RECORD OVERFLOW?
         BH    HOUP2A                   IF SO,WRITE BLOCK
         TM    HPOID,X'02'              TEST FOR PDS
         BZ    HOUP4
         TM    HSTOWSW,X'FF'            TEST FOR END OF MEMBER
         BZ    HOUP4                    IF END,WRITE ANYWAY
HOUP2A   SH    8,HRLPRE                 ADJUST ARS
         S     8,HKEYLOU
HOUP2B   L     9,HOU2AD                 MOVE KEY,IF ANY
         CLI   HKEYLOU+3,X'00'          IF OUTPUT KEYS,
         BE    HOUP2C                   LINK TO USER EXIT
         L     10,HEXITTA
         LTR   10,10                    IF NO EXIT LIST,
         BZ    HOUP2K                   SKIP TEST
         CLI   48(10),X'40'
         BE    HOUP2K
         LA    10,48(10)               LOAD ROUTINE NAME LOC.
         L     11,HOU2AD                LOAD SYSUT2 BUFF2 ADDR
         L     12,HDCBOUTA             LOAD SYSUT2 DCB ADDRESS
         LINK  EPLOC=(10),PARAM=((11),(12))
         SR    1,1
         BAL   12,HTSTTRM               TEST FOR TERMINATION REQUEST
         B     HOUP2K                   NO
         LA    1,HMSGTKR                YES,WRITE MESSAGE
         SLL   1,8
         LA    4,6                      MESSAGE ID 6
HOUP2J   AR    1,4
         L     15,HWRMSGA
         BALR  14,15
         B     HTERMU                   TERMINATE
HOUP2K   A     9,HKEYLOU
HOUP2C   TM    HOUORG,X'40'             IF V,
         BZ    HOUP2E                   ENTER BLOCK LENGTH
         SH    8,HH4
         STH   8,HALFWORK          STORE BLKSIZE IN WORKAREA       000G
         MVC   0(2,9),HALFWORK     MOVE BLKSIZE TO BLOCK LL FIELD  000G
         B     HOUP3
HOUP2E   TM    HOUORG,X'80'
         BZ    HOUP2F
         L     10,HDCBOUTA             MODIFY DCB LENGTH
         LTR   8,8
         BC    8,NOWRITE
         STH   8,BLKSI(10)
         B     HOUP3
HOUP2F   LR    10,8                     STORE U-TYPE LENGTH
HOUP3    A     8,HKEYLOU
         ST    8,HBLOUAC                STORE ACTUAL BLOCK LENGTH
HOUP3A   B     HOUP3B                   DO NOT CHECK 1ST TIME THROUGH
         NI    CHECKOUT,X'00'      MARK OUTP CHECK ISSUED        A50939
         CHECK HDECBOU                  CHECK SYSUT2
HOUP3B   NI    HOUP3A+1,X'0F'           MOVE SYSUT2 BUFF2
         CALL  HMOVE,(HOU1AD,HOU2AD,HBLOUAC)  TO BUFF1
         L     6,HOU1AD                SET XR TO WRITE             UL0H
         TM    TOTLEXSW,X'80'          TEST TOTALING EXIT          UL0H
         BZ    HOUP3B2                 NO EXT - BRANCH             UL0H
         ST    R6,TOTLAREA             POINTTOTAL ROUT. TO BUFFER  UL0I
         LA    1,TOTLAREA              LOAD ADDRESS OF PARAMETERS  UL0H
         L     15,ADTOTEXR             LOAD ADDRESS OF USER ROUT.  UL0H
         BALR  14,15                                               UL0H
         CH    15,HCONCODE             UPDATE HIGHEST COND.CODE    UL0H
         BL    HOUP3B1                 IF                          UL0H
         STH   15,HCONCODE             NESSECARY                   UL0H
HOUP3B1  CH    15,SIXTEEN              RETRN CODE = SIXTEEN?       UL0H
         BE    TOTMSG1                 YES-TERMINATE               UL0H
         CH    15,EIGHT                RETURN CODE=EIGHT?          UL0H
         BE    TOTMSG2                 YES-GO TO END OF DATA       UL0H
         CH    15,FOUR                 RETRNCODE=FOUR              UL0H
         BE    HOUP3B2                 YES-BRANCH                  UL0H
         B     TOTMSG3                                             UL0H
HOUP3B2  DS    0H
         L     1,HDCBOUTA           GET DCB ADDRESS            @ZA01743
         TM    36(1),X'80'          IS OUTPUT F OR U           @ZA01743
         BO    *+14                 BRANCH IF YES              @ZA01743
         CLC   4(2,6),82(1)         IS RDW GREATER THAN LRECL  @ZA01743
         BH    ERROR                YES ERROR                  @ZA01743
         WRITE HDECBOU,SF,HDCBOUT,(6),(10) WRITE SYSUT2 FROM BUFF1
         OI    CHECKOUT,X'F0'      MARK OUTP WRITE ISSUED        A50939
         L     10,HDCBOUTA             RESTORE DCB BLOCKSIZE
         MVC   BLKSI(2,10),HBLOU
NOWRITE  TM    HSTOWSW,X'FF'       MUST STOW BE ISSUED ?         A50939
         BZ    HOUP3F              NO, SKIP CHECK ETC.           A50939
         L     10,HMDTCUR               LOAD MEMBER TRUE NAME
         MVC   HSTOWAR(8),2(10)         LOAD MEMBER TRUE NAME
         XC    HSTOWAR+8(4),HSTOWAR+8   ZERO OUT C BYTE
         NI    CHECKOUT,X'00'      MARK OUTP CHECK ISSUED        A50939
         CHECK HDECBOU                  CHECKS BEFORE STOW
         LA    4,1
         NI    CHECKINP,X'00'      MARK INP CHECK ISSUED         A50939
         CHECK HDECBIN
HOUP3C   BAL   12,HSTOW                 STOW TRUE NAME
         LH    11,0(10)                 LOAD ALIAS COUNT
         LA    10,10(0,10)              UPDATE MDT XR
         LTR   11,11
         BZ    HOUP3E
HOUP3D   MVI   HSTOWAR+11,X'80'         SET ALIAS BIT IN C BYTE
         MVC   HSTOWAR(8),0(10)         LOAD ALIAS
         BAL   12,HSTOW                 STOW ALIAS
         LA    10,8(0,10)               UPDATE MDT XR
         BCT   11,HOUP3D
HOUP3E   ST    10,HMDTCUR               STORE UPDATED MDT ADDRESS
         NI    HSTOWSW,X'00'            TURN OFF STOW SWITCH
HOUP3F   NOP   HOUP4F                   SWITCH FOR EOD
         L     6,HOU2AD                 RESET OUTPUT XR
         BAL   12,HMVKEY                MOVE KEY TO OUTPUT
         A     6,HKEYLOU                ADJUST FOR KEY
         LH    8,HRLPRE                 RESET OUTPUT ARS
         A     8,HKEYLOU                ADJUST FOR KEY
         TM    HOUORG,X'40'
         BZ    HOUP4B                   IF V,
         LA    6,4(0,6)                 ADJUST XR
         LA    8,4(0,8)                 AND ARS
         LA    8,4(0,8)                 ADJUST ARS
HOUP4    NI    HOUP1B+1,X'0F'
         TM    HOUORG,X'40'
         BZ    HOUP4B
HOUP4A   LH    9,HRLPRE                 LET RECORD COUNT
         LA    9,4(0,9)                 FIELD REFLECT
         STH   9,HALFWORK               PLACE LENGTH IN STORAGE
         MVC   0(2,6),HALFWORK          MOVE LENGTH INTO CT FIELD
         MVC   2(2,6),HH0          ZERO BLOCK BB FIELD             4028
         LA    6,4(0,6)                 DISPLACE PAST RECORD COUNT
HOUP4B   ST    6,HIXOUT                 STORE CURR REC ADDR FOR SYSUT1
         ST    5,HIXIN                  AND SYSUT2
         L     9,HEXITTA                LOAD USER EXIT TABLE ADDR
         LTR   9,9                      IF NO EXITS,
         BZ    HOUP4C                   SKIP TEST
         CLI   40(9),X'40'
         BE    HOUP4C                   IF USER DATA EXIT,LINK
         LA    9,40(9)                 SET UP ADDERSS
         L     12,HDCBINA
         LR    11,5                     USER EXIT TABLE
         LINK  EPLOC=(9),PARAM=((11),(12))
         SR    1,1
         BAL   12,HTSTTRM               TEST FOR TERMINATION REQ
         B     HOUP4C                   NO
         LA    1,HMSGTDR                YES
         SLL   1,8
         LA    4,7                      MESSAGE ID 7
         B     HOUP2J                   WRITE MESSAGE AND TERMINATE
HOUP4C   TM    HCOPYSW,HCOPYMSK         TEST COPY SWITCH
         BZ    HOUP4D
HOUP4M   BAL   12,HRIDTST
         MVC   HWK4+2(2),HRLPRE
         CALL  HMOVE,(HIXOUT,HIXIN,HWK4) SYSUT1 BUFF2 TO SYSUT2 BUFF2
         B     HOUP4E
HOUP4D   BAL   12,HRIDTST               MOVE REC WITH EDITING
         MVC   HWK2(2),HRLPRE           HWK2=DATA COUNT
HOUP4X   CALL  HEDIT,(HEDCUR,HIXOUT,HIXIN,HWK2,HLITTA)
         B     HOUP4E                   NORMAL RETURN FROM EDITOR
         B     HPREDLN2                 ERROR RETURN FROM EDITOR
HOUP4E   AH    6,HRLPRE                 UPDATE XR
HOUP4F   TM    HEODSW,HEODMSK           IF PROCESSING TO END AT EOD,
         BO    HOUP5A                   OMIT LAST RECORD CHECK
         CLI   HRIDSW,X'FF'             TEST FOR LAST REC OF GROUP
         BE    HOUP5B
HOUP5A   NOP   HOUP9              GO CLOSE AT EOD                  7342
         B     HINP2
HOUP5B   L     9,HRDTCUR
         ST    9,HRDTSAV
         TM    HPOID,X'02'              PDS?
         BZ    HOUP5D                   NO
         TM    HMEMBYT(9),X'0F'         END OF MEMBER?
         BZ    HOUP5F                   NO
         OI    HSTOWSW,X'FF'            SET STOW SWITCH
HOUP5D   TM    0(9),X'9F'               IF PDS,IS LAST CNTRL
         BNO   HOUP5D1                 CARD A MEMBER CARD          7653
         OI    HEODSW,HEODMSK           YES, PROCESS TO EOD
         B     HINP2
HOUP5D1  TM    0(9),X'8F'               SET UP
         BZ    HOUP5F                   FOR
         BM    HOUP5F                   END OF
         OI    HEODSW,HEODMSK           DATA ROUTINES
HOUP5E   NOP   HOUP9               SWITCH FOR LAST RECORD        A50939
         OI    HOUP5E+1,X'F0'
         OI    TYPMSG,X'30'        SET LAST RECORD ID MSG SW       7653
         SR    4,4
         B     HEOD
HOUP5F   LA    9,12(0,9)                UPDATE RDT XR
         ST    9,HRDTCUR                AND STORE
         CLI   CPYSWSAV,X'00'           EDITING WITH IDENT
         BNE   HOUP5F1                  NO
         B     HOUP5F2                  YES, CHECK LAST RECORD
HOUP5F1  TM    HCOPYSW,HCOPYMSK         EDITING
         BO    HINP2                    NO
         B     HOUP5G
HOUP5F2  L     9,HRDTSAV                CHECK LAST RECORD
         TM    0(9),X'4F'               LAST IDENT
         BZ    HOUP5F3
         BM    HOUP5F3
         L     9,HEDCUR                 YES
HCHKFLD  TM    0(9),X'80'               LAST FIELD THIS RECORD
         BO    HLSTFLD                  YES
         LA    9,8(0,9)                 NO, INCREMENT IX
         B     HCHKFLD                  CHECK AGAIN
HLSTFLD  TM    0(9),X'81'               LAST RECORD FIELD
         BM    HCPYREV                  NO
RAUNCH   OI    HEODSW,HEODMSK           YES,SET TO PROCESS EOD
         B     HOUP5E                   DO LAST WRITE
HCPYREV  MVI   CPYSWSAV,X'FF'           RESET SWITCHES
         OI    HEODSW,HEODMSK           PROCESS TO EOD
         B     HOUP5G
HOUP5F3  L     9,HRDTCUR                GET NEXT RECORD
         TM    0(9),X'20'               EDITING
         BO    HRESET1                  YES
         OI    HCOPYSW,HCOPYMSK         NO,SET COPY SWITCH
         B     HRESET2
HRESET1  MVI   HCOPYSW,X'00'            SET FOR EDITING
HRESET2  L     9,HRDTSAV                GET LAST RECORD
         TM    0(9),X'20'               WAS THERE EDITING
         BO    HOUP5G                   YES
         L     9,HRDTCUR                RELOAD RDT IX
         B     HINP2                    NO, CONTINUE
HOUP5G   MVC   HEDCUR(4),HEDSV          GET NEXT EDT
         L     9,HRDTCUR                RELOAD RDT IX
         BAL   12,HPREDLEN
         B     HINP2
HOUP9    TM    CHECKINP,X'F0'      MUST CHECK BE ISS. FOR INP ?  A50939
         BNO   CHKOUT              NO, SKIP INP CHECK            A50939
         NI    CHECKINP,X'00'      MARK INP CHECK ISSUED         A50939
         LH    4,THREE             SET R4=3, TO MARK RETURN PNT  A50939
         CHECK HDECBIN             CHECK LAST READ               A50939
CHKOUT   TM    CHECKOUT,X'F0'      MUST CHECK BE ISS. FOR OUTP ? A50939
         BNO   FRMAIN              NO, SKIP OUTP CHECK           A50939
         NI    CHECKOUT,X'00'      MARK OUTP CHECK ISSUED        A50939
         CHECK HDECBOU             CHECK LAST WRITE              A50939
FRMAIN   L     0,REGSAV            LOAD LGTH OF INP + OUTP BUFF. A50939
         LTR   0,0                 WAS BUFFER CORE GOTTEN          3599
         BZ    TSTKEYFR           IF NOT, TEST FOR KEY FREEMAIN  A45131
         XC    REGSAV(4),REGSAV    CLEAR REGSAV                    3599
         L     1,HIN1AD              BUFFER CORE ADDRESS FOR FREEMA3599
       FREEMAIN R,LV=(0),A=(1)                                     3599
TSTKEYFR L     R10,HKEYLOU        LOAD KEY LENGTH                A45131
         L     1,HKEYA            LOAD KEYSAVE ADDRESS         @ZA03366
         LTR   R1,R1              KEY PRESENT ?                @ZA03366
         BZ    DONTFREE           NO, RETURN TO GENR3            A45131
         LR    R0,R10             LOAD KEY LENGTH IN REG 0       A45131
         FREEMAIN R,LV=(0),A=(1)  FREEMAIN KEY SAVE AREA         A45131
DONTFREE CLI   HTERMSW,X'FE'       USER TERMINATION REQUEST        3599
         BNE   HOUP10                   NO,RETURN
         B     HGENP4A                  YES,TERMINATE
HOUP10   TM    TYPMSG,X'30'        TEST FOR EOD MSG NEEDED         7653
         BNM   HLSTID              GO TEST FOR LAST ID IF          7653
         LA    1,HMSGPEOD              PROCESSING END AT EOD MSG   7653
HLSTMSG  SLL   1,8                                                 7653
         L     6,AST                                               7653
         L     15,HWRMSGA                                          7653
         BALR  14,15                                               7653
CLOSAFTR LM    13,14,HSAVE13
         LH    15,HCONCODE              LOAD CONDITION CODE IN REG15
         RETURN (2,12)
HLSTID   BNO   CLOSAFTR            GO BACK IF NO MSG NEEDED        7653
         LA    1,HMSGPELR          PROCESSING END AT LAST ID MSG   7653
         B     HLSTMSG                                             7653
*
HMVKEY   CALL  HMOVE,(HOU2AD,HKEYA,HKEYLOU)
         BR    12
*
HSTOW    L     1,HDCBOUTA
         STOW  (1),HSTOWAR,A
         SLL   15,20
         SRL   15,20
         LTR   15,15                    TEST FOR ERROR
         BCR   8,12                     NO,RETURN
         LA    15,12                    YES,CONCODE 12
         STH   15,HCONCODE              SAVE ERROR CONCODE
         LA    1,HMSGERS                WRITE MESSAGE
         SLL   1,8                      AND TERMINATE
         LA    4,10               MESSAGE ID FOR STOW ERROR        6598
HSTOW3   AR    1,4
         L     15,HWRMSGA
         BALR  14,15
         B     HOUP9
*
HREAD    READ  HDECBIN,SF,HDCBIN,(5),'S'
         OI    CHECKINP,X'F0'      MARK INP READ ISSUED          A50939
         ST    5,ACINAREA    SAVE ACTUAL INP BUFFER ADDRESS      A36114
         BR    12
*
HPREDLEN CALL  HPRL,(TOTEDIT,HEDCUR,HEDSV)
ANYBODY  TM    HCOPYSW,HCOPYMSK         IS EDIT REQUESTED
         BO    NOEDIT                   NO
         CLC   TOTEDIT(2),HRLOU         YES-DOES EDIT EXCEED OUTLRECL
         BH    HPREDLN2                 YES--INVALID,TERMINATE
         TM    HOUORG,X'80'             NO-IS OUTPUT FIXED FORMAT
         BO    HABLE                    YES
         TM    HOUORG,X'20'        NO RECFM=U                  @ZA10940
         BO    RECFMU              YES                         @ZA10940
         LH    R9,TOTEDIT          NO--GET EDIT COUNT          @ZA04424
         AH    R9,HH4              ADJUST FOR RDW              @ZA04424
         CH    R9,HRLOU            DOES EDIT EXCEED RECORD CNT @ZA04424
         BH    HPREDLN2            YES--INVALID,TERMINATE      @ZA04424
         TM    HINORG,X'40'        IS INPUT V OR VB ?          @ZA13747
         BNO   RECFMU              NO, BRANCH                  @ZA13747
         TM    HOUORG,X'40'        YES, IS OUTPUT V OR VB ?    @ZA07363
         BO    AROUND              YES GO TO PREPARE COUNT     @ZA07363
RECFMU   LH    9,TOTEDIT           NO,EDIT COUNT BECOMES LRECL @ZA10940
         B     COMMON              GO STORE LRECL AND RETURN       3599
NOEDIT   TM    HOUORG,X'40'        IS OUTPUT RECFM VARIABLE FORMAT 3599
         BO    AROUND              TES, GO PREPARE COUNT           3599
         TM    HOUORG,X'80'        IS OUTPUT FIXED FORMAT          3599
         BO    HABLE               YES, GO GET LRECL               3599
         B     AROUND                  FORMAT IS U               F25211
COMMON   STH   9,HRLPRE            DATA COUNT TO HRLPRE            3599
         BR    12                  RETURN TO CALLER                3599
AROUND   LH    9,HWK2              RECORD COUNT                    3599
         TM    HINORG,X'40'        IS INPUT RECFM V OR VB          3599
         BC    14,COMMON           IF NOT, BRANCH                  3599
         SH    9,HH4               IF INPUT IS V, ADJUST LRECL     3599
         B     COMMON              GO STORE RECORD COUNT AND RETURN3599
HABLE    LH    9,HRLOU             OUTPUT LRECL BECOMES COUNT      3599
         B     COMMON              GO STORE COUNT AND RETURN       3599
         BR    12                       RETURN
HPREDLN2 LA    15,12                    LOAD CONCODE 12 IN REG15
         STH   15,HCONCODE              AND STORE
         LA    1,HMSGECC                WRITE MESSAGE AND TERMINATE
         SLL   1,8
         LA    4,3
         B     HSTOW3
*
HRIDTST  TM    HEODSW,HEODMSK           TEST FOR LAST REC OF GROUP
         BCR   1,12                     CHECK
         NI    HRIDSW,X'00'
         L     9,HRDTCUR                FOR
         LH    10,HRIDL(9)              IDENT FIELD
         BCTR  10,0                     IN RECORDS
         STC   10,HRIDTST2+1
         LH    11,HRIDST(9)
         AR    11,5
HRIDTST2 CLC   HRID(1,9),0(11)
         BCR   7,12
         OI    HRIDSW,X'FF'
         BR    12
*
HTERMU   LH    15,HCONCODE
         B     HOUP9
*
*    THIS SUBROUTINE CHECKS CONDITION CODES TO DETERMINE WHICH CODE
*    WILL BE PASSED BACK TO THE CALLING PROGRAM.
*
HTSTTRM  SLL   15,20                    TEST FOR 16 IN R15
         SRL   15,20
         LTR   1,1
         BZ    HTSTTRM4
         LA    0,16
         CR    0,15
         BNE   HTSTTRM2
HTSTTRM1 LA    12,4(0,12)
         LTR   1,1
         BZ    HTSTTRM2
         BR    12
HTSTTRM2 SRL   15,2                     ROUND DOWN
         SLL   15,2
         LH    R0,HCONCODE
         CR    0,15                     IF OLD CONCODE IS HIGH
         BCR   10,12                    OR EQUAL,RETURN
         LA    0,16
         CR    15,0
         BNH   HTSTTRM3
         LR    15,0
HTSTTRM3 STH   15,HCONCODE              OTHERWISE STORE NEW CONCODE
         BR    12                       BEFORE RETURNING
HTSTTRM4 LA    0,12
         CR    0,15
         BH    HTSTTRM2
         B     HTSTTRM1
*
TOTMSG1  LA    1,30                    LOAD MESSAGE ID .           UL0H
         BAL   14,TOTMSG4              LINK TO WRITE ROUTINE       UL0H
         B     HTERMU                  BRANCH TO TERMINATE         UL0H
TOTMSG2  LA    1,31                    LOAD MESSAGE ID.            UL0H
         BAL   14,TOTMSG4              LINK TO WRITE ROUTINE       UL0H
         B     HOUP9                   BRANCH TO END OF PROCESSING UL0I
TOTMSG3  LA    1,32                    LOAD MESSAGE ID.            UL0H
         BAL   14,TOTMSG4              LINK TO WRITE ROUTINE       UL0H
         NI    TOTLEXSW,X'7F'                                      UL0H
         B     HOUP3B2                 CONTINUE                    UL0H
TOTMSG4  STM   14,15,R14SAVE           SAVE REG 14 & 15            UL0H
         LR    R15,R1             ***                            A35448
         SLL   R1,8               * CALCULATE MESSAGE ID         A35448
         AR    R1,R15             ***                            A35448
         L     15,HWRMSGA              LOAD WRITER ROUTINE ADDRESS UL0H
         BALR  14,15                   LINK                        UL0H
         L     R15,R14SAVE+4      GET RETURN CODE OF TOT ROUT.   A35448
         SR    R14,R14            ***                            A35448
         LA    R1,10              * CALCULATE ALPHA NUMERIC      A35448
         DR    R14,R1             *     EQUVALENT AND            A35448
         LA    R14,240(0,R14)     *    UPDATE MESSAGE TEXT       A35448
         LA    R15,240(0,R15)     *                              A35448
         L     R1,VADDR3          *                              A35448
         STC   R14,22(R1)         *                              A35448
         STC   R15,21(R1)         ***                            A35448
         LA    R1,25              ***                            A35448
         SLL   R1,8               * CALCULATE MEESAGE ID         A35448
         LA    R1,25(0,R1)        ***                            A35448
         L     R15,HWRMSGA             LOAD ADDRESS OF MSG WRITER  UL0I
         BALR  14,15                   LINK                        UL0H
         LM    14,15,R14SAVE           RESTORE REG 14 & 15         UL0H
         BR    14                      RETURN                      UL0H
HGENP4A  LA    1,HMSGTLR
         SLL   1,8
         LA    4,5
ERRORPNT AR    1,4
         L     15,HWRMSGA
         BALR  14,15
         B     HTERMU
*
HEOD     OI    HINP3X+1,X'F0'           SET UP
         CH    4,THREE             FINAL CHECK ?                 A50939
         BE    CHKOUT              YES, RETURN                   A50939
         LTR   4,4                      END OF DATA
         BP    HOUP3C                   PROCESSING SWITCHES
         OI    HOUP3F+1,X'F0'
         OI    HOUP5A+1,X'F0'
         TM    HOUP5E+1,X'F0'           DO NOT WRITE EOD MESS IF LAST
         BO    HEODA                    REC ID MESS ALREADY WRITTEN
         NI    HRIDSW,X'00'
         ST    6,SIXSV
         OI    TYPMSG,X'10'        SET SW FOR EOD MSG              7653
         CLI   REDANY,X'FF'            ANY RCDS IN SYSUT1 DATASET  6291
         BE    HOUP9                   NO, GO CLOSE DATASETS       6291
HEODA    S     8,HKEYLOU                END OF DATA
         TM    HPOID,X'02'              ROUTINE FOR
         BZ    HEOD1                    PDS
         OI    HSTOWSW,X'FF'
HEOD1    TM    HOUORG,X'40'             END OF DATA
         BZ    HEOD2                    FOR VARIABLE
         AH    8,HH4
HEOD2    B     HOUP2B
*
HINER    EQU   *                        INPUT SYNAD ROUTINE
         ST    R10,SYNADSAV            SAVE REG 10               A22671
         STM   R3,R4,SYNADSAV+4        SAVE REGS 3AND4           A22671
         ST    R12,SYNADSAV+12         SAVE REG 12               A22671
         ST    R14,HSAVE14             SAVE REG14                A22671
         BAL   R14,SYNADAFR            LINK TO SYNADAF ROUTINE   A27717
         B     HOUER1                  TEST USER ERROR EXIT      A27717
HINER2   LA    15,12                    LOAD CONCODE 12 IN REG 15
         STH   15,HCONCODE              AND STORE
         LA    1,HMSGUIE                WRITE ERROR MSG AND TERMINATE
         SLL   1,8
         LA    4,8                      MESSAGE ID 8
         B     HSTOW3
HINER3   LA    R15,12                  LOAD CON CODE 12 IN REG 15A27717
         STH   R15,HCONCODE            AND STORE                 A27717
         B     HOUP9                                             A27717
*
HOUER    EQU   *                        OUTPUT SYNAD ROUTINE
         ST    R10,SYNADSAV            SAVE REG 10               A22671
         STM   R3,R4,SYNADSAV+4        SAVE REGS 3AND4           A22671
         ST    R12,SYNADSAV+12         SAVE REG 12               A22671
         ST    R14,HSAVE14             SAVE REG14                A22671
         BAL   R14,SYNADAFR            LINK TO SYNADAF ROUTINE   A27717
         TM    TOTLEXSW,X'80'          TOTALING EXIT ACTIVE        UL0I
         BZ    HOUER1                  NO - BRANCH                 UL0I
         ST    R0,TOTLAREA+8           STORE STATUS INFO ADDRESS   UL0I
         MVI   TOTLAREA+8,X'80'         SET FLAG BYTE              UL0I
         STM   R0,R1,SAVER01           SAVE REGS 0 AND 1           UL0I
         LA    R1,TOTLAREA             PARM LIST FOR TOTALING      UL0I
         L     R15,ADTOTEXR            LOAD ROUTINE ADDRESS AND    UL0I
         BALR  R14,R15                 LINK                        UL0I
         LM    R0,R1,SAVER01           RESTORE REGISTERS           UL0I
HOUER1   L     R10,HEXITTA             EXIT LIST                   UL0I
         LTR   10,10
         BZ    HINER3A            NO EXIT LIST                   A48809
         CLI   56(10),X'40'            TEST FOR USER EXIT
         BE    HINER3A            NO EXIT, END PROCESSING        A48809
         LA    10,56(10)               YES-LINK TO USER
         LR    4,0
         LR    3,1
         OI    IOERREXI,X'F0'     SET IOERREXI  BYTE             A48809
         LINK  EPLOC=(10),PARAM=((4),(3))
HINER3A  SYNADRLS                 FRMAIN WORKAR AND REST REG 13  A48809
         TM    IOERREXI,X'F0'     USER EXIT ?                    A48809
         BNO   HINER3             NO, END PROCESSING             A48809
         SR    1,1
         BAL   12,HTSTTRM               TEST TERMINATION REQUEST
         B     RETFSYN                 RETURN TO SYSTEM          A22671
         LA    1,HMSGTER                WRITE ERROR MSG AND TERMINATE
         SLL   1,8
         LA    4,12
         B     HOUP2J
SYNADAFR STM   R14,R1,SAVER141          SAVE SYNAD PARAMETERS    A27717
         SYNADAF  ACSMETH=BSAM                                   A27717
SYNAFR1  L     R10,SYNADMSA            LOAD ADDRESS OF MSG       A27717
         MVC   10(79,R10),49(R1)       MOVE SYNAD INFO TO MSG    A27717
         LA    R1,50                   LOAD MSG OFFSET           A27717
         SLL   R1,8                                              A27717
         LA    R1,51(R1)               ADD MSG ID                A27717
         L     R15,HWRMSGA             LOAD WRITER ADDRESS       A27717
         BALR  R14,R15                 LINK TO WRITER            A27717
         LM    R14,R1,SAVER141         RESTORE SYNAD PARAMETRS   A27717
         BR    R14                     RETURN                    A27717
*                                                                A27717
SAVER141 DS    4F                                                A27717
SYNADMSA DC    V(SYNADMSG)                                       A27717
*                                                                A27717
* THIS ROUTINE RETURNS CONTROL TO THE SYSTEM IF THE USERS EXIT   A22671
* ACCEPTS THE BAD RECORD , AND RETURNS A RETURN CODE OF LESS     A22671
* THAN TWELVE                                                    A22671
RETFSYN  L     R10,SYNADSAV            RESTORE REG10             A22671
         LM    R3,R4,SYNADSAV+4        RESTORE REGS 3 AND 4      A22671
         L     R12,SYNADSAV+12         RESTORE REG12             A22671
         L     R14,HSAVE14             RESTORE REG 14            A22671
         RETURN  ,                                               A22671
*
INOUTSET L     3,HEXITTA                EXIT LIST                  6598
         CLI   48(3),X'40'             TEST FOR KEY EXIT
         BZ    TSTDEV2                  NO KEY EXIT                6598
         OI    KEYOUTSW,X'01'           TURN ON KEY EXIT           6598
TSTDEV2  SR    4,4                 SET UP TO DETERMINE             4028
         SR    5,5                     BUFFER LENGTH               4028
         L     12,HDCBOUTA                                         UL0H
         TM    17(12),X'20'            IS UT2 DEVICE=DA            UL0H
         BZ    TSTDEV1             IF NOT, BRANCH                  4028
         IC    5,16(12)                GET KEYLENGTH FOR OUTPUT
         STC   5,HKEYLOU+3         SAVE THE OUTPUT KEYLENGTH       4028
         OI    KEYOUTSW,X'02'       SET UT2 EQUALS DA SWITCH       4028
TSTDEV1  AH    5,62(12)                ADD OUTPUT BLKSI TO KEYLEN  UL0H
         L     12,HDCBINA                                          UL0H
         TM    17(12),X'20'            IS UT1 DEVICE=DA            UL0H
         BZ    NOINKEY             IF NOT, BRANCH                  4028
         IC    4,16(12)                GET KEYLENGTH FOR INPUT     UL0H
         STC   4,HKEYL+3           SAVE THE INPUT KEYLENGTH        4028
         OI    KEYOUTSW,X'04'      SET UT1 EQUALS DA SWITCH        4028
NOINKEY  AH    4,62(12)                ADD INP BLKSI TO KEYLEN     UL0H
         STH   4,24(12)                STORE INPUT BUFF LEN IN DCB UL0H
         L     12,HDCBOUTA                                         UL0H
         STH   5,24(12)                STORE OTPUT BUFF LEN IN DCB
         LR    0,4                COMPUTE TOTAL BUFFER SPACE NEEDED4028
         AR    0,5                 BY ADDING INPUT AND OUTPUT BUFFE4028
         SLL   0,1                 LENGTHS AND SHIFTING ONE TO MULT4028
         AH    0,HH2000            ADD 2000 BYTES              @ZA24341
         ST    0,REGSAV            BY 2 FOR DOUBLE BUFFS.          4028
*                                                                  4028
*        SAVE LENGTH OF GET MAIN IN REGSAV FOR THE FREEMAIN LATER  4028
*                                                                  4028
       GETMAIN R,LV=(0)                                            4028
         ST    1,HIN1AD            INPUT BUFF 1 ADDR               4028
         AR    1,4                 ADD IN BUFL FOR INPUT BUFF 2 ADD4028
         ST    1,HIN2AD            SAVE INPUT BUFF 2 ADDR          4028
         AR    1,4                 ADD IN BUFL FOR OUTPUT BUFF 1 AD4028
         ST    1,HOU1AD            SAVE OUTPUT BUFF1 ADDR          4028
         AR    1,5                 ADD OUTPUT BUFL FOR OUTPUT FUFF 4028
         ST    1,HOU2AD              2  ADDR AND SAVE IT.          4028
OMPREREC L      4,HDCBINA               ADDR OF SYSUT1 DCB
         L     5,HDCBOUTA              ADDR OF SYSUT2 DCB        A45145
         MVC   LRECLINP(2),LRECL(R4)   SAVE INPUT LRECL(BLKSI)   A45145
         MVC   HINORG(1),RECFM(4)       MOVE SYSUT1 RECFM          6598
         MVC   HOUORG(1),RECFM(5)       MOVE SYSUT2 RECFM          6598
         NI    HINORG,X'D0'            LEAVE ATTRIBUTES            6598
         NI    HOUORG,X'D0'            LEAVE ON ATTRIBUTES         6598
         CLC   HINORG(1),HOUORG         COMPARE RECFM'S            6598
         BNE   CMPREBLK                 RECFM'S NOT EQUAL          6598
         OI    KEYOUTSW,X'08'           TURN ON EQUAL RECFM BIT    6598
CMPREBLK CLC   BLKSI(2,4),BLKSI(5)      COMPARE B1KSIZES           6598
         BNE   TSTKEYL                  BLKSIZE NOT EQUAL          6598
         OI    KEYOUTSW,X'10'           TURN ON EQUAL BLKSIZE BIT  6598
TSTKEYL  TM    KEYOUTSW,X'06'           TST IF UT1 AND UT2 DA      6598
         BC    12,KEYUT2          UT1 AND UT2 NIT BOTH DA          6598
         CLC   KEYLE(1,4),KEYLE(5)      COMPARE KEYLENGTHS         6598
         BNE   KEYUT2                   UT1 AND UT2 KEYS NOT EQUAL 6598
         OI    KEYOUTSW,X'20'          TURN ON EQUAL KEY           6598
KEYUT2   TM    KEYOUTSW,X'02'           TEST UT2 FOR DA            6598
         BZ    NOKEYOUT                 SYSUT2 IS NOT DA           6598
         TM    KEYLE(5),X'FF'           TEST UT2 KEYLENGTH FOR ZERO6598
         BZ    NOKEYOUT                 SYSUT1 KEY IS ZERO         6598
         OI    KEYOUTSW,X'40'          TURN ON NOT ZERO            6598
NOKEYOUT TM    KEYOUTSW,X'04'           TEST SYSUT1 FOR DA         6598
         BZ    OTKEYVAL                 SYSUT1 NOT DA              6598
         TM    KEYLE(4),X'FF'           TEST UT1 KEYLENGTH FOR ZERO6598
         BZ    OTKEYVAL                 SYSUT1 KEY IS ZERO         6598
         OI    KEYOUTSW,X'80'          TURN ON KEY NOT ZERO        6598
OTKEYVAL TM    KEYOUTSW,X'43'          TEST FOR VALID KEYS         6598
         BO    BUFFMV              OUTPUT KEYS ARE VALID           4028
         TM    KEYOUTSW,X'FE'      TEST FOR VALID KEYS, NO EXIT    4028
         BO    BUFFMV              OUTPUT KEYS ARE VALID           4028
         TM    KEYOUTSW,X'42'      IS UT2 DA AND KEYLEN NOT ZERO   4028
         BO    ERROR               UT2 KEYS ARE NOT VALID
BUFFMV   MVC   HBLIN+2(2),BUFL(4)      MOVE SYSUT1 BUFFER LENGTH   6598
         MVC   HBLOU(2),BUFL(5)        MOVE SYSUT2 BUFFER LENGTH   6598
         TM    KEYOUTSW,X'08'      ARE THE RECFM'S EQUAL           3599
         BZ    UNEQREC             BRANCH IF UNEQUAL               3599
         TM    HINORG,X'40'        IS SYSUT1 RECFM V,VB, OR U      3599
         BO    OUTVARBL            YES, GO COMPARE BLKSIZE'S       3599
INFOUTF  TM    HCOPYSW,HCOPYMSK    IS EDITING REQUESTED            3599
         BZ    CKLRECL             YES, GO STORE LRECLS            3599
         CLC   LRECL(2,4),LRECL(5) ARE LRECLS EQUAL                3599
         BNE   ERROR                    LRECL'S NOT EQUAL          6598
         LH    8,LRECL(5)               SYSUT2 LRECL               6598
         LH    7,BLKSI(5)               SYSUT2 BLKSIZE             6598
         SR    6,6                                                 6598
         DR    6,8                                                 6598
         LTR   6,6                      CHECK REMAINDER            6598
         BZ    CKLRECL             NO REMAINDER, BRANCH            3599
         B     ERROR                   NOT A MULTIPLE              6598
OUTVARBL TM    HCOPYSW,HCOPYMSK         TEST IF FIELD SPECIFIED    6598
         BZ    CKLRECL             YES, GO SET UP LRECL FIELD      3599
         TM    HINORG,X'C0'            INPUT IS U-TYPE           F21533
         BO    INPUTU                  YES- BRANCH               F21533
         LH    8,LRECL(4)              LOAD INPUT LRECL          F21533
         AH    8,HH4                   ADD 4 FOR VB              F21533
OUTVAR1  CH    8,BLKSI(5)              COMPARE IN LRECL AND      F21533
*                                      OUTPUT BLKSIZE            F21533
         BH    ERROR                   SYSUT2 BLOCK TOOSMALL     F21533
         BZ    CKLRECL                 GO SET UP LRECL FIELD     F21533
         B     UNEQREC                                           F21533
INPUTU   CLC   BLKSI(2,4),BLKSI(5)     COMPARE SYSUT1 AND SYSUT2 F21533
         BH    ERROR                    SYSUT2 BLKSIZE TOO SMALL   6598
         BZ    CKLRECL             YES, GO SET UP LRECL FIELD      3599
UNEQREC  TM    HINORG,X'10'             TEST IF SYSUT1 BLOCKED     6598
         BZ    INNOTBLK                 SYSUT1 NOT BLOCKED         6598
         TM    HINORG,X'40'             TEST UT1 FOR VAR BLOCK     6598
         BZ    TSTUT2                   SYSUT1 IS FIX BLOCK        6598
         OI    RECFMSW,X'30'            TURN ON UT1 EQUAL TO VB    6598
INNOTBLK TM    HINORG,X'C0'             TEST UT1 FOR U TYPE        6598
         BM    FIXORVAR                 UT1 IS FIXED OR VAR        6598
         OI    RECFMSW,X'10'            TURN ON UT1 EQUAL TO U TYPE6598
FIXORVAR TM    HINORG,X'80'             TEST UT1 FOR FIXED         6598
         BO    TSTUT2                   UT1 IS FIXED               6598
         OI    RECFMSW,X'20'            TURN ON UT1 EQUAL TO VAR   6598
TSTUT2   TM    HOUORG,X'10'             TEST SYSUT2 FOR BLOCKED    6598
         BZ    OTNOTBLK                 SYSUT2 NOT BLOCKED         6598
         TM    HOUORG,X'40'             TEST UT2 FOR VAR BLK       6598
         BZ    SWSET                                               6598
         OI    RECFMSW,X'03'           UT2 IS A VARIBLE            6598
         B     SWSET                                               6598
OTNOTBLK TM    HOUORG,X'C0'             TEST UT2 FOR U TYPE        6598
         BM    OFXORVAR                 SYSUT2 IS FIXED OR VAR     6597
         OI    RECFMSW,X'01'            TURN ON UT2 EQUAL TO U TYPE6598
         B     SWSET                                               6598
OFXORVAR TM    HOUORG,X'80'             TEST UT2 FOR FIXED         6598
         BO    SWSET                                               6598
         OI    RECFMSW,X'02'            TURN ON UT2 EQUAL TO VAR   6598
SWSET    SR    6,6                                                 6598
         IC    6,RECFMSW                                           6598
*                  RECFM SW   1 BYTE                               6598
*        INPUT                            OUTPUT                   6598
*        (HALF BYTE)                     (HALF BYTE)               6598
*        0       FIXED OR FIXED BLK     0                          6598
*         1       UNDEFINED TYPE        1                          6598
*        2        VARIBLE TYPE          2                          6598
*        3       VARIBLE BLK TYPE       3                          6598
         SRDL  6,4                      MOVE SYSUT2 BITS TO REG 7  6598
         SRL   7,28                     RIGHT ALIGN UT2 BITS       6598
         LTR   6,6                      TST UT1 FOR F OR FB        6598
         BNE   VARIN                    UT1 IS A VARIBLE           6598
         LTR   7,7                      TEST UT2 FOR F OR FB       6598
         BZ    INFOUTF                  UT1 AND UT2 ARE F OR FB    6598
         B     FINVOUT                  UT1 IS F OR FB - UT2 IS VAR6598
VARIN    TM    HCOPYSW,HCOPYMSK         TEST IF FIELD SPECIFIED    6598
         BZ    CKLRECL             YES, GO SET UP LRECL FIELD      3599
         LTR   7,7                      TEST UT2 FOR F OR FB       6598
         BZ    ERROR                    VAR IN, F OR FB OUT        6598
         CH    6,HH2                   INPUT IS V OR VB          F21533
         BNL   VIN1                    YES - BRANCH              F21533
         LH    4,BLKSI(4)              LOAD BLKSIZE FOR U -TYPE  F21533
         B     VOUT1                                             F21533
VIN1 LH 4,LRECL(4)                     LOAD LRECL FOR V OR VB    F21533
         AH    4,HH4                   ADD 4 TO LRECL            F21533
VOUT1    LH    5,BLKSI(5)              LOAD OUTPUT BLOCKSIZE     F21533
FIXGOOD  AR    6,7                      ADD UT2 RECFM TO UT1 RECFM 6598
         SH    6,THREE                                             6598
         SRL   7,1                                                 6598
         CR    6,7                                                 6598
         BE    TST7ZRO                  UT1 IS R,V (0),OR U,VB (1) 6598
*  REG6     REG7   REG7(SHIFT)   REG6+REG7                         6598
*   0  F,FB 0        0         (6 NOT EQUAL 7)                     6598
*   1   U   1        0              1   F,FB TO U  OR U TO F,FB    6598
*   2   V   2        1              2   F,FB TO V  OR V TO F,FB    6598
*   3  VB   3        1              3   F,FB TO VB OR VB TOF,FB    6598
*                                   4   U TO VB OR VB TO U         6598
*                                   5   V TO VB OR VB TO V         6598
*                                                                  6598
         BH    TST7ONE                                             6598
         B     ADD8                UT1 IS U, AND UT2 IS V          3599
TST7ZRO  LTR   7,7                 TEST REG 7 FOR ZERO             3599
         BZ    MINUS8              UT1 IS V AND UT2 IS U           3599
ADD8     LA    4,8(4)              BUMP SYSUT1 LRECL OR BLKSIZE    3599
         B     COMPARE                                             3599
MINUS8   LA    5,8(5)              BUMP SYSUT2 BLKSIZE             3599
         B     COMPARE                                             3599
TST7ONE  LTR   7,7                      TEST 7 FOR ZERO            6598
         BZ    MINUS8                   SYSUT1 IS VB - SYSUT2 IS U 6598
         B     COMPARE             GO COMPARE BLKSIZES             3599
FINVOUT  TM    HCOPYSW,HCOPYMSK        TEST IF FIELD SPECIFIED     6598
         BZ    CKLRECL                                             3599
         LH    5,BLKSI(5)              SYSUT2 BLKSIZE              6598
         LH    4,LRECL(4)              SYSUT1 LRECL                6598
         BCT   7,ADD8              BRANCH IF UT2  IS V OR VB       3599
COMPARE  CR    5,4                                                 6598
         BL    ERROR                                               6598
CKLRECL  L     12,HDCBINA                                          UL0H
         LH    4,82(12)                INPUT LRECL                 UL0H
         L     12,HDCBOUTA                                         UL0H
         LH    5,82(12)                OUTPUT LRECL                UL0H
         LTR   4,4                 IS INPUT LRECL ZERO             3599
         BNE   CKLRECL2            IF NOT, STORE LRECL             3599
         L     12,HDCBINA                                          UL0H
         LH    4,62(12)                INPUT BLOCKSIZE             UL0H
         TM    36(12),X'40'            INPUT RECFM  V              UL0H
         BC    14,CKLRECL2         IF NOT, STRE BLKSIZE            3599
         SH    4,HH4               DECREMENT BLKSIZE BY 4 FOR LRECL3599
CKLRECL2 STH   4,HRLIN             STORE INPUT LRECL               3599
         LTR   5,5                 IS OUTPUT LRECL ZERO            3599
         BNE   CKLRECL4            IF NOT, GO STORE LRECL          3599
         L     12,HDCBOUTA                                         UL0H
         LH    5,62(12)                OUTPUT BLOCKSIZE            UL0H
         TM    36(12),X'40'            OUTPUT RECFM V              UL0H
         BC    14,CKLRECL4         IF NOT, STORE BLKSIZE           3599
         SH    5,HH4               DECREMENT BLKSI BY 4 FOR V      3599
CKLRECL4 STH   5,HRLOU             STORE LRECL                     3599
         TM    HINORG,X'C0'             TEST IF U TYPE             6598
         BC    12,NEXT                  BRANCH NOT U TYPE          6598
         NI    HINORG,X'1F'        TURN OFF U AND TRKOVRFL BITS    3599
         OI    HINORG,X'20'             TURN ON 2 BIT FOR U TYPE   6598
NEXT     TM    HOUORG,X'C0'             TEST IF U TYPE             6598
         BC    12,GOBACK                BRANCH NOT U TYPE          6598
         NI    HOUORG,X'1F'        TURN OFF U AND TRK OVRFL BITS   3599
         OI    HOUORG,X'20'             TURN ON 2 BIT FOR U TYPE   6598
GOBACK   BR    14                                                  6598
ERROR    LA    1,HMSGDCB               MESSAGE CODE                6598
         SLL   1,8                                                 6598
         LA    4,11                    MESSAGE ID                  6598
         LA    15,12                                               6598
         STH   15,HCONCODE             RETURN CODE OF 12           6598
         B     ERRORPNT                PRINT MESSAGE               6598
* FOR A CHANGE IN RECFM'S AND NO FIELD SPECIFIED, THE FOLLOWING HOLDS *
*  THE SYSUT2 BLKSIZE AND LRECL IS DEPENDENT ON SYSUT1 AND THE RECFM'S*
*  INPUT        OUTPUT    OUTPUT BLOCK                                *
*1 F OR FB      F OR FB     MULTIPLE OF LRECL AND LRECL'S EQUAL       *
*2 F OR FB        U        EQUAL OR GREATER THAN LRECL                *
*3 F OR FB        V        EQUAL OR GREATER THAN LRECL PLUS 4         *
*4 F OR FB        VB       EQUAL OR GREATER THAN LRECL PLUS 8         *
*5 U,V,UB       F OR FB    ILLEGAL                                    *
*6  U             U        EQUAL OR GREATER THAN INPUT BLKSIZE        *
*7  V             V              SAME AS ABOVE                        *
*   VB            VB             SAME AS ABOVE                        *
*7  U             V        EQUAL OR GREATER THAN INPUT BLK PLUS 4     *
*8  U             VB       EQUAL OR GREATER THAN INPUT BLK PLUS 8     *
*9  V             U        EQUAL OR GREATER THAN INPUT BLK MINUS 4    *
*A  V             VB       EQUAL OR GREATER THAN INPUT BLK PLUS 4     *
*B  VB            U        EQUAL OR GREATER THAN INPUT BLK MINUS 8    *
*C  VB            V        EQUAL OR GREATER THAN INPUT BLK MINUS 4    *
HINTB    DC    3F'0'                   INPUT BUFFER- WORK AREA     6598
HKEYL    EQU   HINTB
HBLIN    EQU   HINTB+4
HRLIN    EQU   HINTB+8
HINORG   EQU   HINTB+10
HOUTB    DC    3F'0'                    OUTPUT BUFFER- WORK AREA
HKEYLOU  EQU   HOUTB
HBLOU    EQU   HOUTB+4
HRLOU    EQU   HOUTB+8
HOUORG   EQU   HOUTB+10
HPOID    EQU   HOUTB+11
*
HGENPRS  DS    18F                      WORK AREA
HSAVE13  DS    2F                      REG 13 ,14 SAVE AREA      A22671
HSAVE14  DS    1F                       REG 14 SAVE AREA
HSTOWAR  DS    3F
ACINAREA DS    1F            ACTUAL INP. BUFF ADDRESS            A36114
HIN1AD   DS    1F                       SYSUT1 BUFF1 ADDR SAVE AREA
HIN2AD   DS    1F                       SYSUT1 BUFF2 ADDR SAVE AREA
HOU1AD   DS    1F                       SYSUT2 BUFF1 ADDR SAVE AREA
HOU2AD   DS    1F                       SYSUT2 BUFF2 ADDR SAVE AREA
HEDSV    DS    1F
HIXIN    DS    1F
HIXOUT   DS    1F
HBLOUAC  DS    1F
HWK4     DC    F'0'
HRDTSAV  DC    F'0'
HRLPRE   DS    1H
HWK2     DS    1H
LRECLINP DS    1H                      INITIAL INP. LRECL        A45145
HKEYA    DS    1F
LABPOLAT DS    2F                      LABEL POOL ADDRESSES
TOTLAREA DC    4F'0'                   TOTALING PARM LIST          UL0I
SAVER01  DC    2F'0'                                               UL0I
SYNADSAV DS    4F                      AREA TO SAVE REGS IN SYNADA22671
HEXITTA  DS    1F                       USER EXIT TABLE ADDR LOC   UL0H
HMDTCUR  DS    1F
HEDCUR   DS    1F
HRDTCUR  DS    1F
HLITTA   DS    1F
HCOPYSW  DS    0C                       COPY SWITCH
HEODSW   DS    1C                       END OF DATA SWITCH
         EXTRN HDCBOUT
         EXTRN HDCBIN
HDCBOUTA DC    V(HDCBOUT)
VADDR3   DC    V(HMSGRETC)
HDCBINA  DC    V(HDCBIN)
ADTOTEXR DC    F'0'
SIXTEEN  DC    H'16'
FOUR     DC    H'4'
EIGHT    DC    H'8'
R14SAVE  DS    2F
TOTLEXSW DC    X'00'
LABPROSW DS    1C                      LABEL PROCESSING SWITCH
KEYOUTSW DC    X'00'                    ATTRIBUTE SWITCH           6598
THREE    DC    H'3'                     CONSTANT                   6598
RECFMSW  DC    X'00'                                               6598
HSTOWSW  DC    X'00'                    STOW SWITCH
HRIDSW   DC    X'00'
HTERMSW  DC    X'00'                    TERMINATION SWITCH
HEODAD   DC    A(HEOD)
HINERAD  DC    A(HINER)                                           M2461
HOUERAD  DC    A(HOUER)                                           M2461
HWRMSGA  DC    V(HWRMSG)                MSG WRITER SUBR ADDR LOC
HCDWRA   DC    V(HCDWR)                 ALT ENTRY PT TO MSG WTR    7653
HCONCODE DC    H'0'                     CONDITION CODE SAVE AREA
HH0      DC    H'0'
HH2      DC    H'2'
HH4      DC    H'4'
HH2000   DC    H'2000'                                         @ZA24341
TOTEDIT  DC    H'0'
HALFWORK DS    1H
SIXSV    DS    1F                       REG6 SAVE AREA
REGSAV   DC    F'0'                SAVES LENGTH FOR BUFFER FREEMAIN3599
AST       DC   C'****'
HCOPYMSK EQU   X'F0'                    COPY MASK
HEODMSK  EQU   X'0F'                    END OF DATA MASK
HPTRMSK  EQU   X'00'
BLANKS   DC    X'4040'
CPYSWSAV DC    X'00'
TYPMSG   DC    X'00'
IOERREXI DC    X'00'              IOERROR EXIT BYTE              A48809
CHECKINP DC    X'00'               INPUT CHECK TESTBYTE          A50939
CHECKOUT DC    X'00'               OUTPUT CHECK TESTBYTE         A50939
HRIDL    EQU   0
HRIDST   EQU   2
HRID     EQU   4
REDANY   DC    X'FF'    IF ANY RCDS IN SYSUT1 DATASET-TURN SW OFF  6291
HMEMBYT  EQU   0
HMSGIIP  EQU   1                        MESSAGE CODES
HMSGECC  EQU   2
HMSGBNA  EQU   4
HMSGTLR  EQU   5
HMSGTKR  EQU   6
HMSGTDR  EQU   7
HMSGTER  EQU   8
HMSGERS  EQU   9
HMSGUOE  EQU   10
HMSGUIE  EQU   11
HMSGDCB  EQU   12                                                  6598
HMSGPELR EQU   13
HMSGPEOD EQU   14
HMSGBLK1 EQU   17                      NO INPUT BLKSIZE SPECIFIED 10696
HMSGBLK2 EQU   18                      NO OUTPUT BLKSIZE SPECIFIED10696
HINDD    EQU   24
HOUDD    EQU   32
         ENTRY HGENP
         DCBD  DSORG=PS
DDNAM    EQU   DCBDDNAM-IHADCB
OFLGS    EQU   DCBOFLGS-IHADCB
DSORG    EQU   DCBDSORG-IHADCB
BLKSI    EQU   DCBBLKSI-IHADCB
KEYLE    EQU   DCBKEYLE-IHADCB
BUFL     EQU   DCBBUFL-IHADCB
RECFM    EQU   DCBRECFM-IHADCB
LRECL    EQU   DCBLRECL-IHADCB
EODADOFS EQU   DCBEODAD+1-IHADCB
SYNADOFS EQU   DCBSYNAD-IHADCB
         END
