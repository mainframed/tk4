***********************************************************************
*                                                                     *
*                   * * *  I E B G E N E R  * * *                     *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*      THIS ROUTINE IS THE ROOT SEQMENT OF THE GENERATE UTILITY.      *
*      IT INITIALIZES SWITCHES, PROCESSES OR STORES INTERNAL PAR-     *
*      AMETERS, STORES OVERLAY PARAMETERS, WRITES HEADER, CONTROL     *
*      CARDS AND ERROR MESSAGES FOR ANALYSIS AND PROCESSING SEG-      *
*      MENTS AND GOVERNS FLOW OF CONTROL BETWEEN SEGMENTS.IT CON-     *
*      SISTS OF THE FOLLOWING FOUR SUBROUTINES:                       *
*                                                                     *
*              1.INITIALIZATION SUBROUTINE                            *
*              2.INTERNAL PARAMETER ANALYZER SUBROUTINE               *
*              3.MESSAGE WRITER SUBROUTINE                            *
*              4.CONTROL CARD WRITER SUBROUTINE                       *
*                                                                     *
*      A DETAILED DESCRIPTION OF EACH  SUBROUTINE PRECEDES  CODE      *
*      FOR THAT SUBROUTINE AS IT OCCURS IN THE CSECT.                 *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             E N T R Y                               *
*                                                                     *
*      THIS ROUTINE HAS EXTERNALLY REFERENCABLE VALUES  OR  NAMES     *
*      WHOSE SYMBOLS AND FUNCTIONS ARE:                               *
*                                                                     *
*                          I E B G E N E R                            *
*                                                                     *
*              THE ENTRY POINT TO THE UTILITY AND NAME                *
*              BY WHICH IT MAY BE CALLED FROM  LIBRARY.               *
*                                                                     *
*                          G E N E R A T E                            *
*                                                                     *
*              A SYNONYM FOR I E B G E N E R  AFTER THE               *
*              UTILITY IS LOADED IN MAIN STORAGE.                     *
*                                                                     *
*                            H W R M S G                              *
*                                                                     *
*              ENTRY TO THE MESSAGE WRITER SUBROUTINE.                *
*                                                                     *
*                             H C D W R                               *
*                                                                     *
*              ENTRY TO CONTROL CARD WRITER SUBROUTINE.               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                             I N P U T                               *
*                                                                     *
*              TO BE CALLED FROM LIBRARY AND  EXECUTED,               *
*              THE  FOLLOWING  PARAMETERS  AND POINTERS               *
*              MUST BE SET UP BY THE INVOKING PROGRAM:                *
*                                                                     *
*              1.REGISTER 1 POINTS TO A THREE WORD LIST               *
*                                                                     *
*              2.THREE WORD LIST SET UP WITH HIGH ORDER               *
*                BYTE OF EACH WORD X'00'   EXCEPT  LAST               *
*                VALID POINTER WHICH IS X'80' AND WHERE               *
*                                                                     *
*                WORD 1 POINTS TO PARAMETER LIST---(NOT               *
*                USED)                                                *
*                WORD 2 POINTS TO DDNAME LIST OF DOUBLE               *
*                WORD ENTRIES POSITIONALLY DEPENDENT:                 *
*                                                                     *
*                          1.NOT USED                                 *
*                          2.NOT USED                                 *
*                          3.NOT USED                                 *
*                          4.NOT USED                                 *
*                          5.SYSIN                                    *
*                          6.SYSPRINT                                 *
*                          7.NOT USED                                 *
*                          8.SYSUT1                                   *
*                          9.SYSUT2                                   *
*                                                                     *
*                WORD 3 PERTAINS TO HEADER INFORMATION.               *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                             E X T R N                               *
*                                                                     *
*      THE ROOT SEGMENT REFERENCES THESE EXTERNALLY DEFINED NAMES     *
*      OR VALUES:                                                     *
*                               C C A                                 *
*                                                                     *
*              ENTRY TO THE CONTROL CARD ANALYZER SEG-                *
*              MENT (SEGMENT1).                                       *
*                                                                     *
*                            I E B G E N R 3                       VS0H
*                                                                     *
*              ENTRY TO THE PROCESSING SEGMENT (SEGMENT               *
*              2).                                                    *
*                           H M S G M D L                             *
*                                                                     *
*              THE ADDRESS OF THE STANDARD HEADER LINE.               *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                   E R R O R   C O N D I T I O N                     *
*                                                                     *
*      ERRORS IN THE FORMAT OF THE INPUT PARAMETER  LISTS  RESULT     *
*      IN THE PRINTING OF A DIAGNOSTIC MESSAGE AND TERMINATION OF     *
*      PROCESSING AND RETURN VIA REGISTER 14.                         *
*                                                                     *
*                         * * * * * * * * *                           *
*                                                                     *
*                             N O T E S                               *
*                                                                     *
*      THIS ROUTINE, AND THE GENERATE UTILITY IN GENERAL,IS 'ONLY     *
*      LOADABLE'.IT IS NOT RE-ENTRANT.IT IS NOT RE-USABLE.            *
*                                                                     *
***********************************************************************
         EJECT
*                   INITIALIZATION ROUTINE
*
* THIS ROUTINE IS EXECUTED EVERY TIME THE GENERATE PROGRAM IS EXECUTED.
* IT SETS SWITCHES, ASSIGNS DATA AREAS, ANALYZES LINKAGE PARAMETERS,
* OPENS SYSPRINT AND WRITES THE HEADER LINE WITH A USER SUPPLIED
* INITIAL NUMBER (IF ANY) ON SYSPRINT.
*
IEBGENER CSECT
*A49604-49608,77320                                             YM00576
*C49620                                                         YM00576
*0000034200,073400-073600,077600-077800                            BS0H
*0000037000,039200,045400-046000,046400-046600,0469-047100,        UL0H
*0000047500,047700                                                 UL0H
*0000039600                                                        VS0H
*                                                                A23819
*                                                                A27717
*                                                                A28753
*                                                                A29000
*                                                                A30296
*A034101,034102,034103                                          YA01223
*056440,059350                                                   A38715
*A040102-040168,043100,077300                                    A45131
*C037000,039200,050400                                           A45131
*A034106-034142                                                  A48746
*C035400                                                         A48746
*A028700-028720                                                @ZA13753
R0       EQU   0                                                   BS0H
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4                                                   BS0H
R5       EQU   5                                                   BS0H
R6       EQU   6                                                   BS0H
R7       EQU   7                                                   BS0H
R8       EQU   8                                                   BS0H
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
RETREG   EQU   14                                                  BS0H
R14      EQU   14
R15      EQU   15
GENERATE SAVE  (14,12)
         BALR  R2,0
         USING IHADCB,8
         USING *,R2
HROOT    STM   R13,R14,HRSAVE13         SAVE 13 AND 14
         LA    R13,HGENRS               LOAD SAVE AREA ADDR
         MVI   ZZCTRL,X'00'
         XC    HDDNAMES(40),HDDNAMES    ZERO OUT USER DD NAME TABLE
         L     R3,0(R1)      LOAD ADDR OF PARM LIST              PTM36A
         CLI   0(R1),X'80'              TEST FOR DD PARAMETER
         BE    HROOT4                   NO
         L     R4,4(R1)      YES,LOAD DDNMLIST ADDR              PTM36A
         LTR   R4,R4                   TEST FOR OMITTED DDNAME   A23819
         BZ   HROOT2                   PARAMETER,IF ABSENT-BRANCHA23819
         LH    R8,0(R4)                 YES,STORE DD NAMES IN TABLE
         LTR   R8,R8                    CHECK IF LENGTH GR THAN ZERO?
         BC    12,HROOT2                IF 0 OR NEG LENGTH,SKIP
         LA    R9,72                    SET REG9=72
         CR    R8,R9                    REG 8= 72?
         BL    HROOT1                   IF R8 LESS THAN 72, BRANCH
         LR    R8,R9                    OTHERWISE SET R8= LENGTH OF 72
HROOT1   LA    R9,32                    SET REG9=32
         CR    R8,R9         IS LIST SHORTER OR EQUAL TO 32?   @ZA13753
         BNH   HROOT2        YES,OMITT DDNAME LIST             @ZA13753
         SR    R8,R9                    REG8= LENGTH-32
         BCTR  R8,R0                   DECREMENT REG8 BY 1
         STC   R8,HROOT1A+1             STORE EXACT LENGTH IN MOVE INST
HROOT1A  MVC   HDDNAMES(40),34(R4)      MOVE USER DD NAME IN TABLE
         SR    R8,R8
         C     R8,HSODD                 TEST FOR NONSTAND DD NAME
         BE    HROOT2                   FOR SYSOUT
         LA    R8,HSYSOUT               STORE NON-STANDARD
         MVC   DCBDDNAM(8),HSODD       SYSOUT DD NAME
HROOT2   CLI   4(R1),X'80'              TEST FOR HDR PARAMETER
         BE    HROOT4                   NO
         L     R5,8(R1)      YES,LOAD HEADER ADDR                PTM36A
         LH    R8,0(R5)                 YES,STORE HEADER ADDR
         LA    R9,4                     TEST FOR LENGTH LT 4
         CR    R8,R9
         BL    HROOT4                   YES,USE STANDARD PAGE NO
         MVC   HHDR+103(4),2(R5)        NO,MOVE USER PAGE NO
         B     HROOT5
HROOT4   MVC   HHDR+103(4),HC0001       MOVE STANDARD PAGE NO
HROOT5   LA    R8,HMSGHDR               SET REG8=0
         SLL   R8,2
         A     R8,HMSGMDLA              GET STANDARD HEADER
         L     R8,0(R8)                 ADDRESS IN REG 8
         MVC   HHDR(40),0(R8)           MOVE STANDARD HEADER
         OPEN  (HSYSOUT,OUTPUT)         OPEN SYSPRINT
         LA    R14,HSYSOUT      ADDRR OF SYSPRINT DCB
         TM    OFLGS(R14),X'10'     IS DCB OPEN
         LA    R12,12                                            A29000
         BZ    HROOTX-2       NO IT IS NOT
         TM    DFLG,X'10'               CHECK FOR INVALID BLKSIZE  BS0H
         BC    8,CONTWORK               IF NOT --                  BS0H
         LA    R0,HEADER          LOAD HEADER ADDRESS           YA01223
         LA    R1,HHDR            LOAD PRINT ROUTINE ADDRESS    YA01223
         BAL   R14,ZZPR           PRINT HEADER                  YA01223
         LA    R1,19              GET ERR MSG TEXT OF IEB319I    A48746
         SLL   R1,8               SHIFT LEFT                     A48746
         LA    R9,19              GET MSG IEB319I ID.            A48746
         AR    R1,R9              SET MAG CODE + ID              A48746
         LA    R15,HWRMSG         LOAD ERR MSG ID                A48746
         BALR  R14,R15            BRANCH TO ERROR PRINT          A48746
         LA    R12,12             LOAD CONDITION CODE IN R12     A48746
         CLOSE (HSYSOUT)                CLOSE SYSPRINT DCB         BS0H
         FREEPOOL  HSYSOUT                                         BS0H
         B     HROOTX-2                 RESTORE REGS AND RETURN    BS0H
CONTWORK LA    R0,HEADER                                           BS0H
         LA    R1,HHDR
         BAL   R14,ZZPR
         SR    R4,R4
         LH    R8,0(R3)                 LOAD PARAM LIST LENGTH IN R8
         CR    R4,R8                    AND CHECK IF IT IS LESS THAN 0?
         B     HROOT6                   BRANCH                   A48746
         LA    R1,HMSGIIP               YES,GET ERROR MSG CODE NO.
         SLL   R1,8
         LA    R9,2                    GET MSG ID.                 0037
         AR    R1,R9                    SET MSG CODE+ MSG ID
         LA    R15,HWRMSG               LOAD ERROR MSG ADDR IN REG 15
         BALR  R14,R15                  BRANCH TO ERROR MESSAGE
         B     HRTERMP                  GO TO TERMINATE PROCESSING
HROOT6   GETMAIN R,LV=104         GET 104 BYTE TABLE AREA        A45131
         ST    R1,HRTABA                SAVE TABLE ADDR
         LA    R4,2                     SET REG 4=2
         CR    R8,R4                    PARAM LIST LENGTH LESS THAN 2?
         BL    HROOT7                   YES, BRANCH
         CLC   2(2,R3),HCIN             TEST FOR INTERNAL PARAMETERS
         BE    HROOT9                   IF INTERNAL PRAM PRESENT,BRANCH
HROOT7   CALL  CCA,(HSIDD)              ANALYZE INT.PRAM ON CTRL CARD
         B     HROOT7A                  NORMAL RETURN
         B     HRTERMP                  ERROR RETURN
HROOT7A  L     R3,HRTABA
         MVC   0(104,R3),0(R1)    MOVE TABLE BUILD BY IEBGSCAN   A45131
HROOT8   LA    R1,HRTABA
         CALL  IEBGENR3                                            VS0H
         LR    R12,R15
         CLOSE (HSYSOUT)                CLOSE SYSPRINT
         FREEPOOL  HSYSOUT                                         BS0H
         L     R3,HRTABA          LOAD TABLE ADDRESS             A45131
         LTR   R3,R3              DOES TABLE EXIST ?             A45131
         BZ    HROOTX-2           NO, RETURN TO SYSTEM           A45131
         TM    INPARM,X'FF'       INTERNAL PARAM PROC. ?         A45131
         BO    FRHRTABL           YES, DON'T TEST FOR TBL FREEM. A45131
         LH    R5,96(R3)          LOAD MAXNAME RESERVED CORE     A45131
         LTR   R5,R5              IS IT ZERO ?                   A45131
         BZ    TSTCMAXF           YES, TEST FOR MAXFLDS CORE     A45131
         L     R1,64(R3)          NO, GET ADDR. OF MAXNAME CORE  A45131
         LR    R0,R5              LOAD CORE LENGTH               A45131
         FREEMAIN R,LV=(0),A=(1)  MAXNAME CORE                   A45131
TSTCMAXF LH    R5,98(R3)          LOAD MAXFLDS RESERVED CORE     A45131
         LTR   R5,R5              IS IT ZERO ?                   A45131
         BZ    TSTCMAXG           YES, TEST MAXGPS CORE          A45131
         L     R1,68(R3)          NO, GET ADDRESSS PLUS FOUR     A45131
         LA    R4,8               CALCULATE                      A45131
         SR    R1,R4              RIGHT ADDRESS                  A45131
         LA    R0,8(R5)           LOAD GETMAIN LENGTH            A45131
         FREEMAIN R,LV=(0),A=(1)  MAXFLDS CORE                   A45131
TSTCMAXG LH    R5,100(R3)         LOAD MAXGPS RESERVED CORE      A45131
         LTR   R5,R5              IS IT ZERO ?                   A45131
         BZ    TSTCMAXL           YES, TEST MAXLITS RESER. CORE  A45131
         L     R1,72(R3)          NO, GET ADDRESS                A45131
         LR    R0,R5              LOAD CORE LENGTH               A45131
         FREEMAIN R,LV=(0),A=(1)  MAXGPS CORE                    A45131
TSTCMAXL LH    R5,102(R3)         LOAD MAXLITS RESERVED CORE     A45131
         LTR   R5,R5              IS IT ZERO ?                   A45131
         BZ    FRHRTABL           YES, FREE TABLE                A45131
         L     R1,76(R3)          NO, LOAD MAXLITS ADDRESS       A45131
         LR    R0,R5              LOAD LENGTH                    A45131
         FREEMAIN R,LV=(0),A=(1)  MAXLITS CORE                   A45131
FRHRTABL LR    R1,R3              LOAD TABLE ADDRESS             A45131
         LA    R0,104             LOAD TABLE LENGTH              A45131
         FREEMAIN R,LV=(0),A=(1)  TABLE CORE                     A45131
         LR    R15,R12
HROOTX   LM    R13,R14,HRSAVE13         RESTORE REGS 13-14
         RETURN (2,12)                  RESTORE REGS 2-12 AND RETURN
*                                                                  BS0H
*                  DCB EXIT ROUTINE                                BS0H
*                                                                  BS0H
DCBOEXIT LA    R8,HSYSOUT         LOAD ADDRESS OF SYSPRINT DCB     BS0H
         LH    R5,DCBBLKSI              LOAD BLKSIZE               BS0H
         LTR   R5,R5                                               BS0H
         BC    8,FIXBLK                 IF NONE SPECIFIED --       BS0H
         SR    R4,R4                                               BS0H
         LH    R6,DCBLRECL                                       A28753
         DR    R4,R6                    TEST FOR MODULAR BLKSIZE   BS0H
         LTR   R4,R4                                               BS0H
         BCR   8,RETREG                 IF MODULAR --              BS0H
         MVI   DFLG,X'10'               SET BLKSIZE ERROR FLAG     BS0H
         MVC   DCBBLKSI(2),DCBLRECL     MOVE LRECL TO BLKSIZE      BS0H
         RETURN
FIXBLK   MVI   DCBBLKSI+1,X'79'         INSERT BLKSIZE -- 121      BS0H
         RETURN
*
*
*                   INTERNAL PARAMETER ANALYZER ROUTINE
*
* THIS ROUTINE IS EXECUTED WHEN THE INVOKING ROUTINE SPECIFIES INTERNAL
* PARAMETERS. IT STORES AND INSPECTS THE PARAMETER TABLES SUPPLIED BY
* THE INVOKING ROUTINE. BASED ON THE PARAMETERS, IT SETS SWITCHES FOR
* PROCESSING.
*
*
HROOT9   CALL  CCA,(HSIDD),VL           DUMMY CALL
         L     R4,HRTABA
         OI    INPARM,X'FF'       SET INTERNAL PARAM. SWITCH     A45131
         LA    R9,8                     INTERNAL TABLE PROCESSING
         CR    R9,R8                    IF NO TABLES,TAKE
         BE    HROOT14                  STANDARD OPTIONS
         LA    R3,10(,R3)               INCREMENT XR
         SR    R8,R8
         C     R8,0(R3)
         BNE   HROOT9A                  IF THERE IS NO EXIT TABLE,
         MVI   0(R4),X'40'              BLANK OUT EXIT AREA
         MVC   1(63,R4),0(R9)
         B     HROOT10
HROOT9A  L     R9,0(R3)                 IF THERE IS AN EXIT TABLE,
         MVC   0(64,R4),0(R9)          MOVE IT TO EXIT AREA        UL0H
HROOT10  MVC   64(16,R4),4(R3)                                     UL0H
         XC    93(2,R4),93(R4)                                     UL0H
HROOT11  C     R8,64(R4)                                           UL0H
         BE    HROOT12                  IF THERE IS AN MDT ADDR,
         MVI   94(R4),X'02'            SET PO SWITCH               UL0H
HROOT12  C     R8,72(R4)                                           UL0H
         BNE   HROOT13                  IF THERE IS NO EDCB ADDR,
         OI    93(R4),X'F0'            SET COPY SWITCH             UL0H
HROOT13  C     R8,68(R4)                                           UL0H
         OI    93(R4),X'0F'            SET EOD SWITCH              UL0H
         BNE   HROOT8                   IF THERE IS NO RDT ADDR,
         MVC   1(63,R4),0(R4)          ZERO OUT ADDRESSES          UL0H
         XC    64(16,R4),64(R4)        AND                         UL0H
         XC    93(2,R4),93(R4)         SWITCHES                    UL0H
         B     HROOT8
HROOT14  MVI   0(R4),X'40'              BLANK OUT EXITS
         SR    R8,R8
         B     HROOT11
*
HRTERMP  CLOSE (HSYSOUT)                CLOSE SYSPRINT
         FREEPOOL  HSYSOUT                                         BS0H
         LA    R15,12                   LOAD CONCODE
         B     HROOTX
SYSIOERR L     R2,ADDHROOT              ESTAB ADDRESSABILITY    YM00576
         USING HROOT,R2                                         YM00576
         SYNADAF ACSMETH=QSAM                                   YM00576
         MVC   IOERR1+23(26),49(R1)     MSG TO BUFFER            A27717
         MVC   IOERR2+12(53),75(R1)     PART 2 MSG TO BUFFER     A27717
         SYNADRLS                                                A27717
         LA    R1,IOERR1                                         A27717
         WTO   MF=(E,(1))                                        A27717
         LA    R1,IOERR2                                         A27717
         WTO   MF=(E,(1))                                        A27717
         B     HROOTX                   RETURN TO CALLER         A27717
*
         DS    0F
OPTL     DC    X'85'                                               BS0H
         DC    AL3(DCBOEXIT)                                       BS0H
DFLG     DC    X'00'                                               BS0H
HRSAVE13 DS    2F
HGENRS   DS    18F
HRTABA   DC    F'0'               TABLE ADDRESS                  A45131
HDDNAMES DS    10F
HHDR     DS    2C
         DC    3CL32' '
         DC    CL22'PAGE 0001'
         DC    AL1(55)
HCIN     DC    C'IN'
HC0001   DC    C'0001'
IOERR1   WTO   'IEB351I I/O ERROR                            ',MF=L,   C
               ROUTCDE=11,DESC=7                                 A27717
IOERR2   WTO   'IEB351I                                                C
                     ',MF=L,ROUTCDE=11,DESC=7                    A27717
HSIDD    EQU   HDDNAMES
HSODD    EQU   HDDNAMES+8
HMSGHDR  EQU   0
HMSGIIP  EQU   1
*
*
*
*                   MESSAGE WRITER SUBROUTINE
*
* THIS SUBROUTINE IS EXECUTED EVERY TIME AN ERROR MESSAGE IS TO BE
* WRITTEN ON SYSPRINT. IT LOCATES THE PROPER MESSAGE IN THE MESSAGE
* MODULE AND WRITES IT.
*
*
         USING HWRMSG,15
HWRMSG   LR    R0,R1
         SLL   R0,24
         SRL   R0,24
         SRL   R1,6
         A     R1,HMSGMDLA              MESS ADDR IN R1
         L     R1,0(R1)
         MVC   HMSGAREA+8(62),0(R1)    MOVE MESSAGE                UL0H
         CH    R0,HW51                 TEST FOR SYNAD MSG        A27717
         BNE   NORMMSG                 NO - NORMAL MSG           A27717
         MVI   SYNADIND,X'80'          SET SYNAD SWITCH          A27717
         MVC   HMSGAREA+70(27),62(R1)  MOVE REST OF SYNAD INF.   A38715
NORMMSG  C     R6,AST                  EOD MSG                   A27717
         BE    INAST
         LA    R1,HMSGAREA              INSERT ID INTO PREFIX
         CVD   R0,HMDW                  CONVERT ID TO DECIMAL
         UNPK  HMSGAREA+4(2),HMDW+6(2)  UNPACK DECIMAL ID
         OI    HMSGAREA+5,X'F0'         REMOVE ZONE
         CLI   SYNADIND,X'80'          SYNAD SWITCH SET          A27717
         BE    SYNMSG                  YES - BRANCH              A27717
         LA    R0,69                   LOAD LENGTH MINUS ONE       UL0H
         B     ZZPR                     BRANCH TO SUBROUTINE ZZPR
SYNMSG   MVI   SYNADIND,X'00'          RESET SYNAD SWITCH        A27717
         LA    R0,97                   LOAD PROPER MSG LENGTH    A27717
         B     ZZPR                    WRITE MSG                 A27717
INAST     LA    R1,HMSGAREA+8
         LA    R0,61                   LOAD LENGTH MINUS ONE       UL0H
         B     ZZPR                     BRANCH TO SUBROUTINE ZZPR
HMDW     DS    1D
HW51     DC    H'51'                   NUMBER OF SYNAD MSG       A27717
HMSGMDLA DC    V(HMSGMDL)
HMSGAREA DC    C'IEB300I '
         DS    62C                     MESSAGE AREA                UL0H
         DS    27C      EXTENSION FOR SYNAD MESSAGE              A38715
SYNADIND DC    X'00'                   SYNAD SWITCH              A27717
         DS    0H
         DROP  15
*
*                   CONTROL CARD WRITER SUBROUTINE-
*
* THIS SUBROUTINE IS EXECUTED EVERY TIME A CONTROL CARD IS READ BY THE
* CONTROL CARD SCANNER SUBROUTINE - IEBGSCAN. IT WRITES THE CONTROL
* CARDS ON SYSPRINT.
*
*
         USING *,R15                   ESTABLISH BASE
HCDWR    LA    R0,79
         B     ZZPR
         DROP  15
*
ZZPR     BALR  R15,0
         USING *,R15                   ESTABLISH BASE
          STM  R14,R3,ZZSAVE            SAVE REGISTERS
         BALR  R2,R0                   LOAD BASE
         USING *,R2
         DROP  15
          TM   ZZSW,X'02'               SHOULD WE SET UP HEADER
          BO   ZZHEAD                   YES
          TM   ZZSW,X'01'               SHOULD WE SKIP TO NEXT PAGE
          BO   ZZSKIP                   YES
          CLC  ZZLINES(1),ZZLINCNT      IS THIS END OF PAGE
          BL   FULLPAGE                 YES
          B    ZZCLEAR                  CLEAR PRINT BUFFER AND PRINT
PRNTRTRN  LM   R14,R3,ZZSAVE            RESTORE REGISTERS
          BR   R14                      RETURN
ZZHEAD    MVC  ZZHDSAVE(121),0(R1)      MOVE HEADER AND LINE COUNT TO
*                                        SAVE AREA
          BAL  R3,ZZPG                  GO TO ADD ONE TO PAGE NUMBER
*                                        AND PRINT HEADER
          B    PRNTRTRN
*
ZZSKIP    CLI  ZZCTRL,C'-'              IS NEXT PRINT A TRIPLE SPACE
          BE   PRNTRTRN                 YES   RETURN WITHOUT PRINT
          BAL  R3,ZZPG                  GO TO PRINT HEADER
          B    PRNTRTRN
FULLPAGE  BAL  R3,ZZPG                  GO PRINT HEADER
          B    ZZCLEAR                  GO PRINT LINE
*                           THIS ROUTINE ADDS ONE TO PAGE NO. AND
*                           PRINTS HEAD  SET CONTROL CHAR FOR NEXT PRNT
ZZPG     TM    ZZCTRL,X'FF'
         BZ    ZZNOADD
         PACK  ZZCONVRT(8),ZZPGNO(4)   ADD ONE
          CVB  R15,ZZCONVRT               TO
          LA   R15,1(R15)                   PAGE
          CVD  R15,ZZCONVRT                   NUMBER
         UNPK  ZZPGNO(4),ZZCONVRT(8)         IN
         OI    ZZPGNO+3,X'F0'                  HEADER
ZZNOADD  MVI   ZZCTRL,C'1'
          MVI  ZZLINCNT,X'04'           INITIALIZE LINE COUNT TO 4
          MVC  ZZPRINT(120),ZZHDSAVE   MOVE HEADER INTO PRINT BUFFER
          ST   R3,SAVE3                 SAVE REGISTER 3
          BAL  R3,ZZWRITE               GO TO WRITE HEADER
          MVI  ZZCTRL,C'-'              SET CONTROL TO TRIPLE SPACE
          L    R3,SAVE3
          BR   R3
ZZCLEAR   IC   R14,ZZLINCNT             THIS ROUTINE WILL
          LA   R14,1(R14)                  ADD ONE
          STC  R14,ZZLINCNT             STORE NEW LINE COUNT
          MVI  ZZPRINT,C' '
         MVC   ZZPRINT+1(119),ZZPRINT      CLEAR PRINT BUFFER
          LM   R14,R15,ZZSAVE+8              TO BLANKS
          EX   R14,ZZMOVE                  MOVE LINE TO BE PRINTED
          BAL  R3,ZZWRITE                    INTO BUFFER
          MVI  ZZCTRL,C' '                 SET CONTROL CHAR FOR NEXT
          B    PRNTRTRN                 PRINT LINE AND  RETURN
ZZMOVE    MVC  ZZPRINT(1),0(R15)        MOVE MESSAGE TO PRINT BUFFER
ZZWRITE  PUT   ZZDCB,ZZCTRL                                        BS0H
          BR   R3
          DS   0D
ZZSAVE    DS   10X
ZZSW      DS   10X
          DS    4X
SAVE3     DS    4X
ZZCTRL   DS    1X                       LOC FOR PRINTER CTRL CHAR
ZZPRINT  DS    121X                     PRINT BUFFER
ZZHDSAVE DS    120X                     HEADER SAVE AREA
ZZCONVRT EQU   ZZSAVE+32                8 BYTE AREA ADDR TO CONVERT NO
ZZLINES  DS    1X                       LOC COUNTER FOR LINES PRINTED
ZZLINCNT DS    1X                       LOC FOR LINE COUNT
ZZDECB   DS    24X                      AREA FOR DECB
SKIP     EQU   256                      CODE FOR SKIP A PAGE
HEADER   EQU   512                      CODE FOR HEADER
ZZPGNO   EQU   ZZHDSAVE+103             LOC OF PAGE NO
         DS    0F
AST      DC    C'****'
INPARM   DC    X'00'              INTERNAL PARAM. SWITCH         A45131
ADDHROOT DC    A(HROOT)                                         YM00576
*
HSYSOUT  DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,                BS0H*
               RECFM=FBA,EXLST=OPTL,SYNAD=SYSIOERR,LRECL=121     A30296
*
ZZDCB    EQU   HSYSOUT
         ENTRY GENERATE
         ENTRY HWRMSG
         ENTRY HCDWR
         DCBD  DSORG=PS
OFLGS    EQU   DCBOFLGS-IHADCB
         END   GENERATE
