         MACRO
&MNEM    OP    &IOP,                    INT OPCODE - OMITTED FOR ASMOPS*
               &INPC=YES,               INITIATE PRIVATE CODE          *
               &INHB=NO,                START,DSECT,CSECT,COM HAVE'YES'*
               &DEF=YES,                STMT MAY AFFECT STOR ASS OR ESD*
               &REF=YES,                OPND MAY CONTAIN SYMBOL REF    *
               &REQOP=NO                OPERAND SCAN REQUIRED
.*
         GBLA  &SHIFT(8)                USED IN FOLDING MNEMONIC
         GBLA  &CHAIN(71)               STATISTICS FOR EACH CHAIN
         GBLC  &SEARCH(71)              CHAINS - FOR DOCUMENTATION ONLY
         GBLC  &TABLE(71)               NAME OF PREVIOUS ENTRY IN CHAIN
         GBLC  &CHARVAL                 VALID CHARACTERS FOR MNEMONICS
.*
         LCLA  &HASHVAL                 HASH VALUE
         LCLA  &COUNT,&INDEX            SCRATCHPADS
         LCLA  &TYP                     TYPE OF OP
         LCLB  &FLAGA(8)                FLAGA
         LCLC  &STRING                  SCRATCHPAD
         LCLC  &COMMENT                 USED FOR GENERATING VAR CMTS
         LCLC  &MI                      MNEMONIC IN INTERNAL CODE
.*
.* CHECK PARAMETERS
.*
         AIF   ('&IOP' EQ '').IOPOK     GO IF IOP OMITTED
         AIF   (T'&IOP EQ 'N' AND '&IOP'(1,1) EQ 'X' AND K'&IOP LT     *
               8 ).IOPOK                GO IF MACHINE OP
         MNOTE '***  ERROR  *** - &IOP'
         MEXIT
.IOPOK   AIF   ('&INPC' EQ 'YES' OR '&INPC' EQ 'NO').INPCOK
         MNOTE '***  ERROR  *** - INPC=&INPC'
         MEXIT
.INPCOK  AIF   ('&INHB' EQ 'YES' OR '&INHB' EQ 'NO').INHBOK
         MNOTE '***  ERROR  *** - INHB=&INHB'
         MEXIT
.INHBOK  AIF   ('&DEF' EQ 'YES' OR '&DEF' EQ 'NO').DEFOK
         MNOTE '***  ERROR  *** - DEF=&DEF'
         MEXIT
.DEFOK   AIF   ('&REF' EQ 'YES' OR '&REF' EQ 'NO').REFOK
         MNOTE '***  ERROR  *** - REF=&REF'
         MEXIT
.REFOK   AIF   ('&REQOP' EQ 'YES' OR '&REQOP' EQ 'NO').REQOPOK
         MNOTE '***  ERROR  *** - REQOP=&REQOP'
         MEXIT
.REQOPOK ANOP
.*********************************************************************.
.*                                                                   *.
.* CALCULATE HASH NUMBER,GENERATE CHAIN POINTER AND UPDATE HASH TABLE*.
.*                                                                   *.
.*********************************************************************.
.*
.*   CALCULATE HASH NUMBER (AND BUILD MNEM IN INT CODE CONCURRENTLY)
.*
.HOUT    ANOP                           OUTER LOOP FOR HASHING
&COUNT   SETA  &COUNT+1                 POINT TO NEXT CHAR IN MNEMONIC
&MI      SETC  '&MI,J'.'&MNEM'(&COUNT,1) APPEND ',J' AND NEXT CHAR
&INDEX   SETA  1                        POINT TO FIRST CHAR IN CHARVAL
.HIN     AIF   ('&MNEM'(&COUNT,1) EQ '&CHARVAL'(&INDEX,1)).HFOUND
&INDEX   SETA  &INDEX+1                 NO MATCH - TRY NEXT CHAR
         AIF   (&INDEX LE K'&CHARVAL).HIN  ... IF THERE IS ONE
&STRING  SETC  '&MNEM'(&COUNT,1)        EXTRACT CHARACTER IN ERROR
         MNOTE '***  ERROR  *** - INVALID CHARACTER &STRING IN &MNEM'
         MEXIT
.HFOUND  ANOP
&HASHVAL SETA  &HASHVAL+(&INDEX+9)*&SHIFT(&COUNT) ADD WEIGHTED VALUE
         AIF   (&COUNT LT K'&MNEM).HOUT GO IF SCAN OF MNEM NOT COMPLETE
&HASHVAL SETA  &HASHVAL-&HASHVAL/71*71+1     HERE IS THE HASH NUMBER
&CHAIN(&HASHVAL) SETA &CHAIN(&HASHVAL)+1 COLLECT STATISTICS
.*
.*   GENERATE CHAIN POINTER
.*
&STRING  SETC  '&TABLE(&HASHVAL)-JOPTABLE'
&COMMENT SETC  (20-K'&STRING)' '.'PTR TO PREV ENTRY IN CHAIN &HASHVAL'
&MNEM    DC    AL2(&STRING)&COMMENT
.*
.*   UPDATE HASH TABLE
.*
&TABLE(&HASHVAL) SETC '&MNEM'           REMEMBER THIS ENTRY
&SEARCH(&HASHVAL) SETC '->&MNEM'.'&SEARCH(&HASHVAL)'   BUILD CHAIN
.*********************************************************************.
.*                                                                   *.
.* FIND TYPE OF OP BY LOOKING AT IOP,WHICH MUST BE SPECIFIED AS      *.
.* X'HH' OR X'HHHH' FOR MACHINE OPS, X'HHM' FOR EXTENDED MNEMONICS,  *.
.* AND OMITTED FOR ASSEMBLER OPS.THE TYPE IS SET TO                  *.
.*       0 - MACHINE OP, 1-BYTE OPCODE                               *.
.*       1 - EXTENDED MNEMONIC                                       *.
.*       2 - MACHINE OP, 2-BYTE OPCODE                               *.
.*       3 - ASSEMBLER OP                                            *.
.*                                                                   *.
.*********************************************************************.
&TYP     SETA  K'&IOP/K'&IOP            0 IF OMITTED,1 IF NOT
&TYP     SETA  &TYP*(K'&IOP-5)+(1-&TYP)*3 SET TYPE AS IN BOX ABOVE
.*********************************************************************.
.*                                                                   *.
.* GENERATE 'FLAGS' BYTE                                             *.
.*                                                                   *.
.*********************************************************************.
&INDEX   SETA  &TYP*(3-&TYP)+1          SHOWS THAT INDEX IS REDUNDANT
&COUNT   SETA  K'&MNEM-1                LENGTH OF MNEM -1
&STRING  SETC  'XL.2''&INDEX'',XL.2''&TYP'',XL.1''0'',XL.3''&COUNT'''
         DC    &STRING                            FLAGS
.*********************************************************************.
.*                                                                   *.
.* GENERATE MNEMONIC IN INTERNAL CODE                                *.
.*                                                                   *.
.*********************************************************************.
&STRING  SETC  '&MI'(2,K'&MI-1)         REMOVE FIRST COMMA
         DC    AL1(&STRING)                       MNEMONIC IN INT CODE
.*********************************************************************.
.*                                                                   *.
.* GENERATE FLAGA                                                    *.
.*                                                                   *.
.*********************************************************************.
&FLAGA(1) SETB (&TYP EQ 3)              1 FOR ASM OPS
&FLAGA(3) SETB ('&INPC' EQ 'YES')       INITIATE PRIVATE CODE
&FLAGA(4) SETB ('&INHB' EQ 'YES')       INHIBIT PRIVATE CODE
&FLAGA(5) SETB ('&DEF' EQ 'YES')        STMT MAY AFFECT STOR ASS OR ESD
&FLAGA(6) SETB ('&REF' EQ 'YES')        OPND MAY CONTAIN SYMBOL REF
         AIF   (NOT &FLAGA(1)).MOP      GO IF NOT ASM OP
&FLAGA(2) SETB ('&MNEM' EQ 'EXTRN' OR '&MNEM' EQ 'WXTRN' OR            *
               '&MNEM' EQ 'ENTRY')
&FLAGA(7) SETB ('&REQOP' EQ 'YES')      OPND SCAN REQUIRED
&FLAGA(8) SETB ('&MNEM' EQ 'DC' OR '&MNEM' EQ 'DS' OR '&MNEM' EQ 'DXD')
         AGO   .FLAGA
.MOP     ANOP
&FLAGA(2) SETB (&TYP NE 0)              1 FOR EXT MNEM OR 2-BYTE OPCODE
.*   CALCULATE INSTRUCTION LENGTH FROM FIRST TWO BITS OF OPCODE
&COUNT   SETA  &IOP/B'1000000'          SHIFT RIGHT 6 BITS
         AIF   (&TYP EQ 0).MOPL         GO IF 1-BYTE OPCODE
&COUNT   SETA  &COUNT/B'10000'          SHIFT ANOTHER 4 BITS
         AIF   (&TYP EQ 1).MOPL         GO IF EXT MNEMONIC
&COUNT   SETA  &COUNT/B'10000'          2-BYTE OPCODE - SHIFT 4 MORE
.MOPL    ANOP
&FLAGA(7) SETB (&COUNT EQ 3)            INSTR LENGTH IS 6 BYTES
&FLAGA(8) SETB (&COUNT EQ 1 OR &COUNT EQ 2)  INSTR LENGTH IS 4 BYTES
.FLAGA   ANOP
&STRING  SETC  '&FLAGA(1)&FLAGA(2)&FLAGA(3)&FLAGA(4)&FLAGA(5)&FLAGA(6)&*
               FLAGA(7)&FLAGA(8)'       SET FLAGA
         DC    B'&STRING'                         FLAGA
.*********************************************************************.
.*                                                                   *.
.* GENERATE INTERNAL OPCODE (INCLUDING MASK FOR EXT MNEMONICS)       *.
.*                                                                   *.
.*********************************************************************.
         AIF   (&TYP NE 3).T012
&STRING  SETC  'AL1(JT&MNEM)'           ASM OP - SET INTERNAL OPCODE
         AGO   .IOP
.T012    ANOP                           MACHINE OP
&COUNT   SETA  4*(&TYP+2)               SET BIT LENGTH
&STRING  SETC  'XL.&COUNT'.'&IOP'(2,K'&IOP-1)
.IOP     ANOP
         DC    &STRING                            INTERNAL OPCODE
         SPACE
         MEND
