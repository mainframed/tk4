         MACRO
&ID      XEVAL &DUMMY,&TESTRAN=NO,&DIAG=NO,&LEVEL=1,&LOGERR=NO
         GBLC  &COMPNM
         LCLC  &NM
         JHEAD 'EXPRESSION EVALUATION SUBROUTINE',                     ,
               PHASEID=&ID,                                            ,
               LEVEL=&LEVEL
&NM      SETC  '&COMPNM&ID'
*TITLE-  ASSEMBLER EXPRESSION EVALUATION SUBROUTINE                   *
*                                                                     *
*FUNCTION/OPERATION-                                                  *
*        EVALUATE EXPRESSIONS                                         *
*        CONVERT SELF-DEFINING TERMS                                  *
*        DETECT ERRORS IN EXPRESSIONS                                 *
*             SYNTACTIC ERRORS-                                       *
*                  ILLEGAL CHARACTER IN EXPRESSION                    *
*                  ILLEGAL COMBINATION OF OPERATORS                   *
*                  MORE THAN TWENTY TERMS IN EXPRESSION               *
*                  MORE THAN SIX LEVELS OF PARENTHESES IN EXPRESSION  *
*                  PREMATURE END OF EXPRESSION                        *
*             NON-SYNTACTIC ERRORS-                                   *
*                  SELF-DEFINING TERM TOO LARGE                       *
*                  SELF-DEFINING TERM CONTAINS TOO MANY CHARACTERS    *
*                  RELOCATABLE TERM IN A MULTIPLY OR DIVIDE OPERATION *
*                  ARITHMETIC OVERFLOW ON AN INTERMEDIATE VALUE       *
*                  UNDEFINED SYMBOL IN EXPRESSION                     *
*                  INVALID SYMBOL                                     *
*                                                                     *
*ENTRY POINT-                                                         *
         ENTRY &NM.01                                                 *
*                                                                     *
*INPUT-                                                               *
*        REGISTERS-                                                   *
*             R5-       REGISTER CONTAINING THE ADDRESS OF THE FIRST  *
*                       CHARACTER OF THE EXPRESSION TO BE EVALUATED   *
*        PARAMETERS-                                                  *
*             SELFDEFN- A BYTE IN STORAGE, WHEN SET TO ZERO, CAUSES   *
*                       ONE DECIMAL SELF-DEFINING TERM TO BE          *
*                       CONVERTED ONLY                                *
*             ELCTR-    A FULLWORD IN STORAGE CONTAINING THE VALUE OF *
*                       THE CURRENT LOCATION COUNTER                  *
*             EESDI-    A HALFWORD IN STORAGE CONTAINING THE CURRENT  *
*                       ESDID                                         *
*             CLCLNG-   A HALFWORD IN STORAGE CONTAINING THE LENGTH   *
*                       ATTRIBUTE OF THE CURRENT LOCATION COUNTER     *
*             SUBLIST-  A BIT IN STORAGE, WHEN SET TO ONE, INDICATES  *
*                       THAT THE LOGICAL END OF THE EXPRESSION IS     *
*                       WHEN THE PARENTHESES LEVEL GOES FROM ONE TO   *
*                       ZERO                                          *
*                                                                     *
*OUTPUT-                                                              *
*        CONDITION CODE SETTING-                                      *
*             0-        VALUE OF THE EXPRESSION IS ABSOLUTE           *
*             1-        IF 'EVALSW1' IS 0, VALUE OF THE EXPRESSION IS *
*                       COMPLEXLY RELOCATABLE.  IF 'EVALSW1' IS NOT   *
*                       0, ONE OR MORE NON-SYNTACTIC ERROR WAS        *
*                       ENCOUNTERED IN THE EVALUATION.                *
*             2-        VALUE OF THE EXPRESSION IS SIMPLY RELOCATABLE *
*             3-        A SYNTATIC ERROR WAS ENCOUNTERED              *
*        REGISTERS-                                                   *
*             R10-      REGISTER CONTAINING THE ESDID OF THE          *
*                       EXPRESSION, IF THE VALUE OF THE EXPRESSION IS *
*                       ABSOLUTE OR SIMPLY RELOCATABLE.  THE ESDID IN *
*                       COMPLEMENT FORM, IF THE VALUE OF THE          *
*                       EXPRESSION IS COMPLEXLY RELOCATABLE WITH ONLY *
*                       ONE RELOCATION FACTOR.                        *
*             R11-      REGISTER CONTAINING THE VALUE OF THE          *
*                       EXPRESSION                                    *
*             R14-      REGISTER CONTAINING THE ADDRESS OF THE FIRST  *
*                       CHARACTER FOLLOWING THE CHARACTER WHICH       *
*                       LOGICALLY TERMINATED THE EXPRESSION           *
*        PARAMETERS-                                                  *
*             IMPLNG-   A HALFWORD IN STORAGE CONTAINING THE LENGTH   *
*                       ATTRIBUTE OF THE EXPRESSION                   *
*             LOCCTREF- A BIT IN STORAGE, WHEN SET TO ONE, INDICATES  *
*                       THAT AT LEAST ONE LOCATION COUNTER REFERENCE  *
*                       HAD BEEN MADE                                 *
*             RELOCTR-  A BYTE IN  STORAGE CONTAINING THE NUMBER OF   *
*                       ESDID(S) ASSOOCIATED WITH THE VALUE OF THE    *
*                       EXPRESSION                                    *
*             RLIST-    A LIST OF HALFWORDS IN STORAGE CONTAINING     *
*                       THE ESDID(S) ASSOCIATED WITH THE VALUE OF THE *
*                       EXPRESSION, THE ESDID IS STORED IN COMPLEMENT *
*                       FORM IF THE RELOCATION FACTOR IS APPLIED      *
*                       NEGATIVLY.                                    *
*                                                                     *
*EXITS, NORMAL-                                                       *
*        EXITS TO THE CALLER.                                         *
*                                                                     *
*EXITS, ERROR-                                                        *
*        EXITS TO THE CALLER.                                         *
*                                                                     *
*TABLES/WORK AREAS-                                                   *
*        EVALWORK-                                                    *
*        OPRNS-    UP TO 20 ENTRIES OF ONE BYTE EACH, AN ENTRY IS     *
*                  MADE FOR EACH OPERATOR ENCOUNTERED.                *
*        RLIST-    UP TO 20 ENTRIES OF ONE HALFWORD EACH, AN ENTRY IS *
*                  MADE FOR THE ESDID OF EACH TERM ENCOUNTERED.       *
*        TERMS-    UP TO 15 ENTRIES OF TWO FULLWORDS EACH, AN ENTRY   *
*                  IS MADE FOR EACH TERM ENCOUNTERED.                 *
*                                                                     *
*ATTRIBUTES-                                                          *
*        REFRESHABLE.                                                 *
*                                                                     *
*NOTES-                                                               *
*                                                                     *
         EJECT
         COPY  JCOMMON
         AIF   ('&ID' NE 'X4V').NOTX4V
         EJECT
         COPY  ICOMMON
         EJECT
&NM.00   CSECT
* VS1 REL 2.6 CHANGES
*A585500-585900                                                 OX00106
* VS1 RELEASE 3.1 CHANGES
*C643000,645000                                                 OX02675
         JMODID
         USING &NM.01,R8                BASE REGISTER
&NM.01   BALR  R14,R7                   SAVE REGISTERS
         LR    R8,R12                   BASE REGISTER
         AGO   .X4V
.NOTX4V  EJECT
         COPY  X5COM
         EJECT
DSECT10  DSECT
         COPY  RSYMRCD
         EJECT
         COPY  BMDSECTS                 GET POST PROCESSOR RECORD DSECT
         EJECT
         COPY  JERMSGCD                 DEFINE ERROR CODES AND SEVERITY
         EJECT
* VS1 RELEASE 3.1 CHANGES
*C625000,631000                                                 OX02953
*C648000                                                       @OY08064
*A648100-648200                                                @OY08064
*A589100,589200                                                @VM05316
&NM.00   CSECT
         JMODID
&NM.01   JSAVE
EVAL     EQU   &NM.01                   LABEL
         USING DSECT2,R2
         USING DSECT3,R3
         USING JTEXT,R4
         USING DSECT5,R5
         USING X5COM,R7
         USING DSECT10,R11              DEFINITION FILE USING
         USING DSECT14,R14
         LR    R5,R10                   INPUT COLUMN POINTER
.X4V     XC    EVALWORK,EVALWORK        INITIALIZE WORK AREA
         LM    R2,R4,EVALREGS           INITIAL SETTING OF REGISTERS
         SPACE
*                        SCAN EXPRESSION                              *
         SPACE
SCAN     ST    R5,ERRPTR                SAVE FOR ERROR DIAGNOSTICS
         AIF   ('&ID' EQ 'X5V').X5V1
         CLI   CHAR1,JBLANK             SEE IF A BLANK
         BH    SYNTAXER                 ILLEGAL CHARACTER IN EXPRESSION
         CLI   CHAR1,JEQUAL             SEE IF AN EQUAL SIGN
         BE    SYNTAXER                 ILLEGAL CHARACTER IN EXPRESSION
         AGO   .X4V1
.X5V1    CLI   CHAR1,JBLANK             SEE IF A BLANK
         BH    SYNERR1                  ILLEGAL CHARACTER IN EXPRESSION
         CLI   CHAR1,JEQUAL             SEE IF AN EQUAL SIGN
         BE    SYNERR1                  ILLEGAL CHARACTER IN EXPRESSION
.X4V1    ANOP
         BL    ALPHANUM                 TERM
         SPACE
*                        GO TO SPECIAL CHARACTER HANDLING             *
         SPACE
         SR    R14,R14                  ZERO REGISTER FOR INDEX
         IC    R14,CHAR1                GET NEXT CHARACTER
         STC   R14,NEWOP                ENTER IN OPERATOR STACK
         IC    R14,GOTOTBL-JLPARN(R14)  INDEXED ADDRESS FETCH
         GOIF  STATUS1,ELSE=GOTO(R14)   GO TO ROUTINE, PASS STATUS
         EJECT
*                        (1)  PLUS OR MINUS SIGN                      *
         SPACE
GOTO     BH    BINARYOP           2/3 - BINARY OPERATOR
         SPACE
*                        (2)  UNARY OPERATOR                          *
         SPACE
         AIF   ('&ID' EQ 'X5V').X5V2
         GOIF  LNGQUOTE,ON=SYNTAXER     ILLEGAL L'ATTRIBUTE REFERENCE
         AGO   .X4V2
.X5V2    GOIF  LNGQUOTE,ON=SYNERR2      ILLEGAL L'ATTRIBUTE REFERENCE
.X4V2    ANOP
         GOIF  ADD1,EQUAL=CALC3   '+' - UNARY PLUS, IGNORE
         SET   UNY1               '-' - SET UNARY MINUS CODE
         GOIF  UNY0,EQUAL=CALC5,ELSE=CALC2   CHECK PREVIOUS OPERATOR
         SPACE
*                        (3)  SLASH                                   *
         SPACE
         AIF   ('&ID' EQ 'X5V').X5V3
SLASH    BNH   SYNTAXER           0/1 - TWO CONSECUTIVE OPERATORS
         AGO   .X4V3
.X5V3    ANOP
SLASH    BNH   SYNERR3            0/1 - TWO CONSECUTIVE OPERATORS
.X4V3    ANOP
         SPACE
*                        (4)  BINARY OPERATOR                         *
         SPACE
BINARYOP SET   STATUS1              1 - PLUS OR MINUS SIGN
         B     CALC1                    GO CALCULATE
         SPACE
*                        (5)  ASTERISK                                *
         SPACE
ASTERISK BH    BINARYOP             2 - MULTIPLICATION SIGN
         SPACE
*                        (6)  LOCATION COUNTER REFERENCE              *
         SPACE
         SET   LOCTREF,ON               LOCATION COUNTER REFERENCED
         LA    R5,CHAR2                 ADVANCE COLUMN POINTER
         GOIF  LNGQUOTE,ON=LOCCTR1      SEE IF LENGTH ATTRIBUTE
         SPACE
*                        (7)  LOCATION COUNTER                        *
         SPACE
         SET   DLOCTREF,ON              LOCATION COUNTER REFERENCED
         LH    R15,CLCLNG               LENGTH ATTRIBUTE
         AIF   ('&ID' NE 'X4V').X5V41
         LH    R0,EESDI                 CURRENT ESDID
         L     R1,ELCTR                 CURRENT LOCATION COUNTER
         B     CLEANUP1                 GO TO CLEANUP
         AGO   .X4X5V
.X5V41   GOIF  LITRSW,ON=SKIPLITR       BRANCH AROUND IF NOT PROC. LITR
         LH    R0,EESDI                 GET CURRENT ESDID
         L     R1,ELCTR                 GET CURRENT LOCATION CTR
         B     CLEANUP1                 GO TO CLEANUP
SKIPLITR EQU   *                        BRANCH LABEL
         LH    R0,LITRSD                GET LITR ESDID
         L     R1,LITRLC                GET LITR LOCATION CTR
         B     CLEANUP1                 GO TO CLEANUP
.X4X5V   ANOP
         SPACE
*                        (8)  L - QUOTE ASTERISK                      *
         SPACE
LOCCTR1  LH    R1,CLCLNG                GET CURRENT LOCATION LENGTH
         B     ABSOLUTE                 CLEANUP
         SPACE
*                        (9)  LEFT PARENTHESIS                        *
         SPACE
LFPAREN  BH    BLANK1             2/3 - MAY BE END OF EXPRESSION
         AIF   ('&ID' EQ 'X5V').X5V4
         GOIF  MAXPARN,NOTLOW=SYNTAXER  TOO MMNY LEVELS OF PARENS
         AGO   .X4V4
.X5V4    GOIF  MAXPARN,NOTLOW=SYNERR4   TOO MANY LEVELS OF PARENS
.X4V4    ANOP
         LH    R14,PARENCNT             GET PARENTHESES COUNT
         LA    R14,D1(,R14)             BUMP IT BY ONE
         STH   R14,PARENCNT             AND SAVE
         B     CALC2                    EXIT
         SPACE
*                        (10) RIGHT PARENTHESIS                       *
         SPACE
         AIF   ('&ID' EQ 'X5V').X5V5
RTPAREN  BNH   SYNTAXER           0/1 - INVALID SYNTAX
         AGO   .X4V5
.X5V5    ANOP
RTPAREN  BNH   SYNERR6            0/1 - INVALID SYNTAX
.X4V5    ANOP
         GOIF  NOPAREN,EQUAL=BLANK2,ELSE=CALC     MAY BE END OF OPERAND
         SPACE
*                        (11) BLANK OR COMMA                          *
         SPACE
         AIF   ('&ID' EQ 'X5V').X5V6
BLANK    BNH   SYNTAXER           0/1 - PREMATURE END OF EXPRESSION
BLANK1   GOIF  NOPAREN,HIGH=SYNTAXER    UNBALENCED PARENTHESES
         AGO   .X4V6
.X5V6    ANOP
BLANK    BNH   SYNERR6                  PREMATURE END OF EXPRESSION
BLANK1   GOIF  NOPAREN,HIGH=SYNERR6     OR UNBALANCED PARENTHESIS
.X4V6    ANOP
BLANK2   SET   ENDOFEXP,ON              SET END-OF-EXPRESSION INDICATOR
         EJECT
*                        ARITHMETIC CALCULATION                       *
         SPACE
CALC     SET   DEL1                     FORCE COMPUTATION
CALC1    CL    R4,AOPTR                 READY TO GO TO WORK
         BH    CALC6                    YEAH
         GOIF  ENDOFEXP,ON=FINIS1       LEAVE IF FINISHED
CALC2    LA    R4,NEWOP                 BUMP OPERATOR STACK POINTER
CALC3    LA    R5,CHAR2                 POINT TO NEXT CHARACTER
         B     SCAN                     LOOK FOR NEXT TERM OR OPERATOR
CALC4    GOIF  DEL0,HIGH=WORK           GO TO WORK
         LH    R14,PARENCNT             GET PARENTHESES LEVEL
         BCT   R14,CALC41               SEE IF WITHOUT
         GOIF  SUBLIST,ON=FINIS         PROCESSING MODIFIER EXPRESSIONS
CALC41   STH   R14,PARENCNT             SAVE PARENTHESES LEVEL COUNTER
CALC5    BCTR  R4,0                     POP OPERATOR STACK
         B     CALC3                    GO SCAN SOME MORE
CALC6    CLC   NEWOP,OLDOP              DO WE HAVE TO GO
         BNH   CALC4                    MAYBE NOT
         SPACE
*                        REDUCE HIERARCHY TO THREE LEVELS             *
         SPACE
         GOIF  SUB1,NOTEQ=CALC7   '-' - SUBTRACTION
         GOIF  ADD0,EQUAL=WORK    '+' - ADDITION
CALC7    GOIF  DIV1,NOTEQ=CALC2   '/' - DIVISION
         GOIF  MUL0,NOTEQ=CALC2   '*' - MULTIPLICATION
         SPACE
*                        PERFORM ARITHMETIC OPERATION ON LAST 2 TERMS *
         SPACE
WORK     LA    R14,TERM2+L'TERM2-TERM1CNT    GET LENGTH OF TWO TERMS
         SR    R2,R14                   POINT TO FIRST OF TWO TERMS
         L     R1,TERM2                 GET THE SECOND TERM
         LR    R11,R3                   SAVE POINTER
         LR    R10,R3                   SAVE POINTER
         SH    R3,TERM2CNT+2            POINT TO BEGINNING FOR RLIST2
         LR    R15,R3                   SAVE POINTER
         GOIF  UNY0,EQUAL=UNARY         UNARY
         LR    R0,R3                    SAVE
         SH    R3,TERM1CNT+2            POINT TO BEGINNING OF RLIST1
         SR    R11,R3                   GET LENGTH OF ENTIRE LIST
         STH   R11,TERM1CNT+2           FOR NEW LENGTH
         GOIF  SUB0,HIGH=MULTDIV,EQUAL=SUBTRACT   +,- VS *,/
         SPACE
*                        ADJUST RELOCATION INFORMATION                *
         SPACE
RELOC    LH    R11,ESDID                GET NEXT ESDID FROM RLIST
         GOIF  (R11),ZERO=RELOC4        SKIP TEST IF ZERO
         AH    R11,ESDID-ESDID(,R15)    SEE IF MATCH FOUND
         BZ    RELOC2                   THIS PAIR CANCELS
RELOC1   LA    R15,NEXTESD-ESDID(,R15)  POINT TO NEXT ESDID IN RLIST2
         GOIF  (R15),(R10),NOTEQ=RELOC,ELSE=RELOC3     END OF LIST
RELOC2   STH   R11,ESDID                INDICATE CANCELLED
         STH   R11,ESDID-ESDID(,R15)    INDICATE CANCELLED
         IC    R15,RELOCTR              GET COUNT OF RELOCATABLE TERMS
         BCTR  R15,0                    DECREMENT COUNT BY 2
         BCTR  R15,0                    X
         STC   R15,RELOCTR              SAVE
RELOC3   LR    R15,R0                   POINT TO BEGINNING OF RLIST2
RELOC4   LA    R3,NEXTESD               POINT TO NEXT ESDID IN RLIST1
         GOIF  (R3),(R0),NOTEQ=RELOC    END OF LIST
         SPACE
*                        ADDITION                                     *
         SPACE
         A     R1,TERM1                 ADD THE TWO TERMS
         BNO   STORE                    GO IF NO OVERFLOW
OVERFLOW SET   OVERFLO,ON               SET OVERFLOW BIT
         AIF   ('&ID' NE 'X5V').X4VO
         X5ERRL 235,CLMPTR              ARITHMETIC OVERFLOW
.X4VO    ANOP
STORE    ST    R1,TERM1                 STORE RESULT
         LA    R2,TERM2CNT              POINT TO NEXT TERM ENTRY SPACE
         LR    R3,R10                   POINT TO NEXT RLIST ENTRY SPACE
         MVC   OLDOP,NEWOP              REDUCE STACK
         BCTR  R4,0                     DECREMENT OPERATOR STACK
         B     CALC1                    ALL DONE FOR NOW
         SPACE
*                        MULTIPLICATION OR DIVISION                   *
         SPACE
MULTDIV  BCTR  R11,0                    GET MACHINE LENGTH
         EX    R11,ABSCHECK             ABSCHECK NC    ESDID(0),ESDID
         BZ    MULTDIV1                 NO RELOCATABLE TERMS
         SET   RELOCER,ON               RELOCATABLE TERM IN OPERATION
         AIF   ('&ID' NE 'X5V').X4VR
         X5ERRL 217,CLMPTR              RELOCATION ERROR
.X4VR    ANOP
MULTDIV1 GOIF  (R1),ZERO=STORE          RESULT IS ZERO IF TERM2 IS ZERO
         L     R14,TERM1                GET FIRST TERM
         SRDA  R14,32                   PROPAGATE SIGN
         GOIF  MUL0,EQUAL=MULTIPLY      MULTIPLICATION OR DIVISION
         SPACE
*                        DIVISION                                     *
         SPACE
         DR    R14,R1                   DIVISION
         LR    R1,R15                   PASS RESULT
         B     STORE                    STORE RESULT
         SPACE
*                        MULTIPLICATION                               *
         SPACE
MULTIPLY MR    R14,R1                   PERFORM MULTIPLICATION
         LTR   R1,R15                   TEST AND PASS RESULT
         BNL   SIGNCHK                  SKIP COMPLEMENT IF POSITIVE
         LCR   R14,R14                  COMPLEMENT
         BCTR  R14,0                    MAKE ZERO
SIGNCHK  GOIF  (R14),ZERO=STORE,NOTZERO=OVERFLOW  TEST FOR OVERFLOW
         EJECT
*                        SUBTRACTION                                  *
         SPACE
UNARY    LA    R2,TERM2CNT              GOT NOTHING TO DO WITH TERM 1
SUBTRACT LCR   R1,R1                    COMPLEMENT TERM2
         BO    OVERFLOW                 CHECK FOR OVERFLOW
LESS     LH    R11,ESDID-ESDID(,R15)    GET NEXT ESDID FROM RLIST2
         LCR   R11,R11                  COMPLEMENT IT
         STH   R11,ESDID-ESDID(,R15)    AND PUT IT BACK
         LA    R15,NEXTESD-ESDID(,R15)  CONTINUE WITH REST OF RLIST2
         GOIF  (R15),(R10),LOW=LESS     NOT DONE YET
         LR    R15,R0                   RESTORE TO BEGINNING OF RLIST2
         GOIF  UNY0,NOTEQ=RELOC,ELSE=STORE   ALL DONE IF UNARY
         SPACE
*                        CHECK FOR SELF DEFINING VALUES               *
         SPACE
ALPHANUM GOIF  STATUS1,HIGH=BLANK1      MAY BE END OF EXPRESSION
         CLI   CHAR1,JA                 SEE IF CHARACTER 'A'
         BL    DECIMAL            0-9 - DECIMAL SELF DEFINING VALUE
         LR    R14,R5                   SAVE COLUMN POINTER
         CLI   CHAR2,JQUOTE             IS NEXT CHARACTER A '
         BNE   SYM                      MAYBE WE'VE HIT UPON A SYMBOL
         AIF   ('&ID' EQ 'X5V').X5V7
         GOIF  LNGQUOTE,ON=SYNTAXER     L' FOLLOWED BY ANYTHING IS BAD
         AGO   .X4V7
.X5V7    GOIF  LNGQUOTE,ON=SYNERR2      INVALID LENGTH ATTR REFERENCE
.X4V7    ANOP
         LA    R5,CHAR3                 ADVANCE COLUMN POINTER
         GOIF  BQUOTE,EQUAL=BINARY      PROCESS IF BINARY TYPE
         GOIF  CQUOTE,EQUAL=CHARACTR    PROCESS IF CHARACTER TYPE
         GOIF  XQUOTE,EQUAL=HEXADEC     PROCESS IF HEXADECIMAL TYPE
         AIF   ('&ID' EQ 'X5V').X5V8
         GOIF  LQUOTE,NOTEQ=SYNTAXER    ILLEGAL CHARACTER IN EXPRESSION
         AGO   .X4V8
.X5V8    GOIF  LQUOTE,NOTEQ=SYNERR1     ILLEGAL CHARACTER IN EXPRESSION
.X4V8    ANOP
         SET   LNGQUOTE,ON              INDICATE ATTRIBUTE REFERENCE
         B     SCAN                     LOOK FOR SYMBOL
         EJECT
*                        DECIMAL SELF-DEFINING VALUE                  *
         SPACE
DECOFLO  SET   SDVSIZE,ON               SELF DEFINING VALUE TOO LARGE
         AIF   ('&ID' EQ 'X5V').X5V9
DECIMAL  GOIF  LNGQUOTE,ON=SYNTAXER     DECIMAL AFTER L' ISN'T KOSHER
         AGO   .X4V9
.X5V9    ANOP
         X5ERRL 235,CLMPTR              OVERFLOW ERROR
DECIMAL  GOIF  LNGQUOTE,ON=SYNERR2      INVALID LENGTH ATTR REFERENCE
.X4V9    ANOP
         SR    R1,R1                    SR    R1,R1
         LR    R0,R1                    ZERO DIGIT VALUE
         LR    R10,R1                   ZERO DIGIT COUNT
         LA    R15,MAXDEC               GET MAXIMUM DIGIT COUNT
DECIMAL1 CLI   CHAR1,J9                 SEE IF CHARACTER '9'
         BH    DIGITCHK                 NOT NUMERIC
         LA    R10,D1(,R10)             COUNT DIGIT
         LR    R14,R1                   SAVE CURRENT TOTAL
         SLA   R1,3                     MULTIPLY BY EIGHT
         BO    DECOFLO                  OVERFLOW ONE FULLWORD
         IC    R0,CHAR1                 GET DIGIT
         AR    R14,R14                  DOUBLE
         AR    R14,R0                   PLUS NEXT DIGIT
         AR    R1,R14                   GRAND TOTAL
         BO    DECOFLO                  SELF DEFINING VALUE TOO LARGE
         LA    R5,CHAR2                 POINT TO NEXT DIGIT
         B     DECIMAL1                 GO SOME MORE
         SPACE
*                        BINARY SELF-DEFINING VALUE                   *
         SPACE
BINARY   LA    R14,SHIFTB               GET BINARY SHIFT VALUE
         GOTO  SDVEVAL                  GO EVALUATE SELF DEFINING TERM
         LA    R15,MAXBIT               GET MAXIMUM NUMBER OF BITS
         B     DELIMCHK                 PERFORM VALIDITY TESTS
         SPACE
*                        CHARACTER SELF-DEFINING VALUE                *
         SPACE
CHARACTR LA    R14,SHIFTC               GET CHARACTER SHIFT VALUE
         GOTO  SDVEVAL                  GO EVALUATE SELF DEFINING TERM
         LA    R15,MAXCHAR              GET MAXIMUM NUMBER OF CHARACTER
         ST    R1,JFWORD1               PUT VALUE IN STORAGE
         TR    JFWORD1,JTRTABLE         TRANSLATE TO EBCDIC
         L     R1,JFWORD1               PASS RESULT IN REGISTER
         B     DELIMCHK                 PERFORM VALIDITY TESTS
         SPACE
*                        HEXADECIMAL SELF-DEFINING VALUE              *
         SPACE
HEXADEC  LA    R14,SHIFTH               GET HEXADECIMAL SHIFT VALUE
         GOTO  SDVEVAL                  GO EVALUATE SELF DEFINING TERM
         LA    R15,MAXHEX               GET MAXIMUM NUMBER OF HEX DIGIT
         EJECT
*                        VALIDITY TESTS                               *
         SPACE
         AIF   ('&ID' EQ 'X5V').X5V10
DELIMCHK CLI   CHAR1,JQUOTE             SEE IF CHARACTER '''
         BNE   SYNTAXER                 INVALID DELIMITER
         AGO   .X4V10
.X5V10   ANOP
DELIMCHK CLI   CHAR1,JQUOTE             SEE IF CHARACTER '''
         BNE   SYNERR8                  INVALID DELIMITER
.X4V10   ANOP
         LA    R5,CHAR2                 ADVANCE COLUMN POINTER
         GOIF  (R10),ZERO=EMPTYSDV      NULL BETWEEN QUOTES
DIGITCHK GOIF  (R10),(R15),NOTHIGH=ABSOLUTE  CHECK FOR MAXIMUM DIGITS
EMPTYSDV SET   SDVSIZE,ON               ERROR
         AIF   ('&ID' NE 'X5V').X4V16
         X5ERRL 169,CLMPTR              INVALID SELF-DEFINING TERM
.X4V16   ANOP
ABSOLUTE SR    R0,R0                    ESDID
         SET   LNGQUOTE,OFF             NOT APPLICABLE FROM NOW ON
         SPACE
*                        CLEANUP                                      *
         SPACE
CLEANUP  LA    R15,D1                   LENGTH ATTRIBUTE OF TERM
CLEANUP1 CL    R3,EVALREGS              SEE IF MAXIMUM TERMS
         AIF   ('&ID' EQ 'X5V').X5V11
         BNL   SYNTAXER                 OF 20 EXCEEDED
         AGO   .X4V11
.X5V11   BNL   SYNERR9                  TOO MANY TERMS
.X4V11   ANOP
         STH   R0,ESDID                 SAVE ESDID
         ST    R1,TERM1                 VALUE TO TERM1
         MVI   TERM1CNT+D3,L'RLIST      COUNT IS LENGTH OF ONE ENTRY
         LA    R2,TERM2CNT              ADVANCE POINTER TO NEXT ENTRY
         LA    R3,NEXTESD               ADVANCE POINTER TO NEXT ENTRY
         SET   STATUS2              2 - TERM
         GOIF  (R0),ZERO=CLEANUP2       SEE IF ABSOLUTE TERM
         IC    R14,RELOCTR              GET COUNT OF RELOCATABLE TERMS
         LA    R14,1(,R14)              BUMP THE COUNT BY 1
         STC   R14,RELOCTR              SAVE THE COUNT
CLEANUP2 TS    FIRST                    SEE IF THIS IS THE FIRST TERM
         BNZ   SCAN                     GO ON IF NOT
         STH   R15,IMPLNG               LENGTH ATTRIBUTE OF EXPRESSION
         TS    SELFDEFN                 SDV EXPECTED
         BNZ   SCAN                     NOT PARTICULAR, GO ON
         B     FINIS1                   YES, MY JOB IS DONE
         EJECT
*                        SELF-DEFINING VALUE EVALUATION               *
         SPACE
SDVEVAL  STC   R14,SHIFTN               SAVE SHIFT VALUE
         IC    R11,SDVLIMIT-D1(R14)     GET VALID HIGH LIMIT
         SR    R15,R15                  ZERO REGISTERS
         LR    R10,R15                  ZERO DIGIT COUNTER
         LR    R1,R15                   ZERO ACCUMULATOR
         GOIF  SHIFTC,NOTEQ=SDVEVAL1    SHIFT
         L     R1,BCDZEROS              GET EXTERNAL ZEROS
SDVEVAL1 EX    R11,CHAR1CLI             CLI   CHAR1,0
         BHR   R9                       EXIT ON HIGH
         IC    R15,CHAR1                GET NEXT CHARACTER
         GOIF  SHIFTC,NOTEQ=SDVEVAL4    CHARACTER SELF DEFINING TERM
         CLI   CHAR1,JQUOTE             SEE IF CHARACTER '''
         BNE   SDVEVAL2                 NO, SEE IF CHARACTER '&'
         CLI   CHAR2,JQUOTE             SEE IF CHARACTER ''''
         BE    SDVEVAL3                 YES, TREAT AS ONE
         BR    R9                       OR ELSE IT COULD BE END OF TERM
SDVEVAL2 CLI   CHAR1,JAMPER             SEE IF CHARACTER '&'
         BNE   SDVEVAL4                 NO, JUST ANY OTHER CHARACTER
         AIF   ('&ID' EQ 'X5V').X5V12
         CLI   CHAR2,JAMPER             SEE IF CHARACTER '&&'
         BNE   SYNTAXER                 NO, ILLEGAL USE OF AMPERSAND
         AGO   .X4V12
.X5V12   CLI   CHAR2,JAMPER             SEE IF CHARACTER '&&'
         BNE   SYNERR10                 NO, ILLEGAL USE OF AMPERSAND
.X4V12   ANOP
SDVEVAL3 LA    R5,CHAR2                 ADVANCE COLUMN POINTER
SDVEVAL4 SLL   R1,D0(R14)               SHIFT BY SPECIFIED VALUE
         ALR   R1,R15                   ADD TO ACCUMULATOR
         LA    R10,D1(,R10)             KEEP COUNT OF DIGITS
         LA    R5,CHAR2                 POINT TO NEXT CHARACTER
         B     SDVEVAL1                 LOOP
         SPACE
*                        SYNTAX ERROR IN EXPRESSION                   *
         SPACE
SYNTAXER SET   FATALER,ON               SYNTAX ERRORS ARE FATAL
         EJECT
*                        SET RETURN CONDITION CODE                    *
         SPACE
FINIS    LA    R5,CHAR2                 POINT PAST CHARACTER
FINIS1   L     R11,TERMS+TERM1-TERM1CNT PASS RESULT IN PARAMETER REG
         SET   (SUBLIST,DCOP),OFF       RESET
         TS    SELFDEFN                 RESET
         SR    R10,R10                  ABSOLUTE TERM IF EVALUATION ERR
         GOIF  FATALER,ON=FINIS3    3 - SYNTAX ERROR
         TM    EVALSW1,BITFF            ANY ERROR IN EXPRESSION
         BM    FINIS3               1 - ERROR IN EXPRESSION
         GOIF  NORELOC,EQUAL=FINIS3 0 - ABSOLUTE EXPRESSION
         TM    RELOCTR,BITFF-1          MORE THAN ONE RELOCATABLE TERM
         BM    FINIS3                   NO, COMPLEXLY RELOCATABLE
         LA    R3,RLIST-L'RLIST         START AT HEAD OF LIST
FINIS2   LA    R3,NEXTESD               POINT TO NEXT ITEM
         LH    R10,ESDID                PICK IT UP
         GOIF  (R10),ZERO=FINIS2    0 - NOT RELOCATABLE TERM
         SPACE
*NOTES-  WHEN THE ONE AND ONLY RELOCATABLE TERM IS FOUND, WHETHER IT  *
*   IS SIMPLY OR COMPLEXLY RELOCATABLE, IT WILL FALL THROUGH THIS     *
*   POINT AND RETURN TO THE CALLER WITH THE PROPER CONDITION CODE     *
*   SETTING.                                                          *
         SPACE
FINIS3   LR    R14,R5                   RETURN COLUMN POINTER
         B     EXIT                     EXIT
         EJECT
*                        SPECIAL CHARACTER GO TO TABLE                *
         SPACE
GOTOTBL  EQU   *                        ORIGIN OF GO-TO TABLE
         DC    YL1(LFPAREN-GOTO)              ( - LEFT PARENTHESIS
         DC    YL1(PLUS-GOTO)                 + - PLUS SIGN
         DC    YL1(MINUS-GOTO)                - - MINUS SIGN
         DC    YL1(ASTERISK-GOTO)             * - ASTERISK
         DC    YL1(SLASH-GOTO)                / - SLASH
         DC    YL1(RTPAREN-GOTO)              ) - RIGHT PARENTHESIS
         DC    YL1(COMMA-GOTO)                , - COMMA
         DC    YL1(BLANK-GOTO)                  - BLANK
         SPACE
PLUS     EQU   GOTO                     X
MINUS    EQU   GOTO                     X
COMMA    EQU   BLANK                    X
         SPACE
*                        CONSTANTS                                    *
         SPACE
         LTORG
BCDZEROS DC    C'0000'                  PAD
ABSCHECK NC    ESDID(0),ESDID           EXECUTED INSTRUCTION
CHAR1CLI CLI   CHAR1,D0                 EXECUTED INSTRUCTION
SDVLIMIT DC    X'0100000F000000FF'      LIMITS OF VALID CHARACTERS FOR-
*                /     /       /............ CHARACTER
*               /     /..................... HEXADECIMAL
*              /............................ BINARY
         EJECT
*                        LOOKUP SYMBOL                                *
         SPACE
DEFNERR  SET   NOTDEFN,ON               UNDEFINED SYMBOL
         SR    R1,R1                    DEFAULT VALUE TO ZERO
         B     ABSOLUTE                 GO ON
SYM      LA    R5,CHAR2                 POINT TO NEXT CHARACTER
         CLI   CHAR1,JEQUAL             SEE IF ALPHAMERIC
         BL    SYM                      LOOK FOR DELIMITER
         LR    R15,R5                   GET ADDRESS OF DELIMITER
         SR    R15,R14                  MINUS FIRST CHARACTER ADDRESS
         BCTR  R15,D0                   YIELD LENGTH OF SYMBOL
         CH    R15,=H'7'                SYMBOL TOO LONG
         AIF   ('&ID' NE 'X4V').NOTX4V1
         BH    SYNTAXER                 SYMBOL LENGTH GREATER THAN 8
         MVC   XNAME,=8AL1(JBLANK)      PAD
         EX    R15,NAMEMOVE             PASS SYMBOL
         GOIF  DCOP,OFF=SYM0            SKIP IF NOT DC
         LH    R14,SYMCOUNT             GET SYMBOL COUNT
         LA    R14,D1(,R14)             INCREMENT IT BY 1
         STH   R14,SYMCOUNT             SAVE
         GOIF  LTORGSCN,OFF=SYM0        SKIP IF NOT PROCESSING LTORG
         GOTO  REFER                    GO GENERATE A REFERENCE RECORD
SYM0     LA    R10,XWORK                ADDRESS OF SYMBOL
         GOTO  FIND                     LOOKUP IN SYMBOL TABLE
         BNZ   SYM2                     NOT FOUND
         GOIF  ESW,OFF=SYM05            CHECK EXTRN/EQU FLAG    OX00106
         LA    R10,XWORK                MAKE SURE R10 POINTS OK OX00106
         OI    XESDI-XWORK(R10),ESW     TRANSFER EXTRN/EQU FLAG OX00106
SYM05    EQU   *                                                OX00106
         GOIF  ENTRYSW,ON=DEFNERR       NOT DEFINED
         LA    R1,D1                    LENGTH ATTRIBUTE
         GOIF  ESDNRSW,ON=SYM1          FOR EXTERNAL SYMBOLS
         LH    R1,SLNGQ                 LENGTH ATTRIBUTE FOR OTHERS
         SLL   R1,16                    MAY BE A 16 BIT        @VM05316
         SRL   R1,16                    POSITIVE NUMBER        @VM05316
SYM1     GOIF  LNGQUOTE,ON=SYM4         LENGTH ATTRIBUTE REFERENCE
         LR    R15,R1                   PASS LENGTH ATTRIBUTE
         LH    R0,SESDI                 ESDID
         L     R1,SLCTR                 VALUE
         B     CLEANUP1                 CLEANUP
SYM4     GOIF  LNGDEF,OFF=ABSOLUTE      ILLEGAL LENGTH ATTRIBUTE
SYM2     GOIF  LTORGSCN,ON=DEFNERR      UNDEFINED
         GOIF  IOFLO,OFF=DEFNERR        UNDEFINED
         GOIF  INOTE,OFF=SYM5           SEE IF REWIND NECESSARY
         LH    R10,JINFILE              INPUT FILE ADDRESS
         JPOINT  FILE=(R10),ADDR=INOTEVAL,NEXT=GET     REPOSITION FILE
SYM5     LH    R10,JINFILE              GET INPUT FILE ADDRESS
         JGETL FILE=(R10)               READ NEXT RECORD
         GOIF  INOTE,ON=SYM6            SEE IF ALREADY NOTED
         SET   INOTE,ON                 INDICATE FILE NOTED
         ST    R11,INOTEVAL             SAVE RECORD POINTER
         LH    R10,JINFILE              GET INPUT FILE ADDRESS
         JNOTE FILE=(R10)               NOTE FILE POSITION
         L     R11,INOTEVAL             GET RECORD POINTER
         MVC   INOTEVAL,JNOTEVAL        SAVE NOTED ADDRESS
SYM6     CLC   XNAME,XNAME-XWORK(R11)   SEE IF CORRESPONDING RECORD
         BNE   SYM5                     IF NOT, TRY AGAIN
SYM3     TM    XFLDI-XWORK(R11),DEFINED
DEFINED  EQU   BIT1
         BZ    DEFNERR                  UNDEFINED
         GOIF  LTCALL,OFF=SYM7          SEE IF PROCESSING LITERAL
         LR    R10,R11                  PASS TO ENTER
         ST    R10,JFWORD1              SAVE
         GOTO  ENTER                    ENTER IN SYMBOL TABLE
         L    R11,JFWORD1               RESTORE POINTER
SYM7     LH    R1,XLNGQ-XWORK(,R11)     LENGTH
         GOIF  LNGQUOTE,ON=ABSOLUTE     THAT'S ALL WE'RE INTERESTED IN
         LR    R15,R1                   LENGTH ATTRIBUTE
         LH    R0,XESDI-XWORK(,R11)     ESDID
         L     R1,XLCTR-XWORK(,R11)     VALUE
         B     CLEANUP1                 FINIS
NAMEMOVE MVC   XNAME(0),CHAR1-CHAR1(R14)     EXECUTED INSTRUCTION
         MEXIT
.NOTX4V1 BH    SYNERR1                  SYMBOL LENGTH > 8
         GOIF  (JXREF,JLIST),NOTALL=SYM01  CHECK IF CROSS-REFERENCE
         GOIF  XRFNO,OFF=SYM01          IS XREF TO BE MADE
         LH    R10,JOUTFILE             GET OUTPUT FILE NUMBER
         JPUTL FILE=(R10),BUFREQ=XRFND  GET BUFFER
         LR    R6,R11                   SAVE BUFFER POINTER
SYM01    EQU   *                        BRANCH LABEL
         LH    R10,JINFILE              GET FILE NUMBER
         JGETL FILE=(R10)               GET FROM FILE
         GOIF  NOTEWL,OFF=SYM02         SHOULD WE NOTE SYMBOL LOCATION
         ST    R11,JFWORD1              SAVE SYMBOL FILE PTR    OX02953
         SET   NOTEHS,ON                YES, FIRST SET POINT INDICATOR
         SET   NOTEWL,OFF               SET NOTE SWITCH OFF
         LH    R10,JINFILE              POINT INPUT FILE
         JNOTE FILE=(R10)               NOTE SYMBOL LOCATION FOR RESCAN
         MVC   NOTEVAL,JNOTEVAL         SAVE NOTE VALUE
         L     R11,JFWORD1              RESTORE SYMBOL FILE PTR OX02953
SYM02    EQU   *                        BRANCH LABEL
         USING XRFIN,R6                 CREATE
         GOIF  XRFNO,OFF=SYM03          XREF NECESSARY
         GOIF  (JXREF,JLIST),NOTALL=SYM03 !OTH OPTIONS MUST BE ON
         SET   JXREFCHK,ON              THEY ARE SET XREF SWITCH ON
         MVC   XRECLN(D6),=AL2(XRFND,0,XRFTYPE*256) CROSS REFERENCE
         MVC   XRFSYM,RNAME               RECORD
         MVI   XRFFLG,REF                   NAME, TYPE
         MVC   XRFSTM,STMTN+D2                AND STATEMENT NUMBER
SYM03    EQU   *                        BRANCH LABEL
         L     R6,SYMXRF                GET NUMBER  THUS FAR    OX02675
         LA    R6,D1(,R6)               ADD 1
         ST    R6,SYMXRF                SAVE NEW CNT THIS CARD  OX02675
         GOIF  (PRIORDEF,DEFINED),ALL=SYM1,NONE=SYMR1  IS IT DEFINED
         GOIF  PRDEFREQ,ON=SYMR2        PRIOR DEFINITION REQUIRED
SYM1     EQU   *                                               @OY08064
         GOIF  EQUF1,ON=SYNERR2         LENGTH ATTR ERROR      @OY08064
         XC    JFWORD1,JFWORD1          ALIGN LENGTH ATTR      @OY08064
         MVC   JFWORD1+D2(D2),RLNGQ     A FULLWORD AREA
         L     R1,JFWORD1               GET LENGTH ATTRIBUTE
         GOIF  LNGQUOTE,ON=ABSOLUTE     LENGTH ATTRIBUTE REFERENCE
         LR    R15,R1                   LENGTH ATTRIBUTE OF SYMBOL
         LH    R0,RESDI                 ESDID OF SYMBOL
         L     R1,RLCTR                 VALUE OF SYMBOL
         B     CLEANUP1                 GO BACK
SYNERR1  X5ERRL 236,CLMPTR,SYNTAXER     ILLEGAL CHARACTER
SYNERR2  X5ERRL 120,CLMPTR,SYNTAXER     INVALID LENGTH ATTR REFERENCE
SYNERR3  X5ERRL 170,CLMPTR,SYNTAXER     CONSECUTIVE OPERATOR
SYNERR4  X5ERRL 233,CLMPTR,SYNTAXER     TOO MANY LEVELS OF PARENS
SYNERR6  X5ERRL 234,CLMPTR,SYNTAXER     PREMATURE END OF EXPRESSION
SYNERR8  X5ERRL 240,0,SYNTAXER          MISSING QUOTE
SYNERR9  X5ERRL 168,0,SYNTAXER          TOO MANY TERMS
SYNERR10 X5ERRL 238,CLMPTR,SYNTAXER     ILLEGAL USE OF &
SYNERR11 X5ERRL 187,CLMPTR,SYNTAXER     SYMBOL LENGTH > 8
SYMR1    ST    R11,ERRPTR
         X5ERRL 188,DTAPTR,DEFNERR      UNDEFINED SYMBOL
         JEXTRN (X5L01=LOGERR)          DEFINE EXTERNAL SYMBOL
SYMR2    ST    R11,ERRPTR
         X5ERRL 231,DTAPTR,DEFNERR      SYMBOL NOT PREVIOUSLY DEFINED
EXIT     JRETURN
         MEND
