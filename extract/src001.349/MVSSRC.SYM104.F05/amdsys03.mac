         TITLE 'AMDSYS03 - SYSM FORMAT APPENDAGE                       *
                        '
AMDSYS03 CSECT ,                                                   0001
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @07,0                                               0001
@PSTART  LA    @11,4095(,@07)                                      0001
         USING @PSTART,@07                                         0001
         USING @PSTART+4095,@11                                    0001
       USING   @DATD,WORKPTR      COMPILER WORK AREA
*   PREG=REG1;                      /* SAVE PARM PTR IN PREG         */
         LR    PREG,REG1                                           0118
*   WORKPTR=WKAPTR;                 /* SET UP COMPILER WORK AREA     */
         L     WORKPTR,WKAPTR(,PREG)                               0119
*   GEN;                                                           0120
*                                                                  0120
*                 /* GENERATE REMAINING LINKAGE CONVENTIONS  */
     ST   @13,@SA00001+4
     LA   @15,@SA00001
     ST   @15,8(0,@13)
     LR   @13,@15
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP TO TEST EID OF CURRENT RECORD TO DETERMINE WHICH ROUTINE */
*   /* SHOULD FORMAT                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0121
*   DO I=1 TO 18;                                                  0121
         LA    I,1                                                 0121
@DL00121 DS    0H                                                  0122
*     IF RTNEID(I)=EID THEN                                        0122
         LR    @12,I                                               0122
         SLA   @12,3                                               0122
         L     @06,EIDPTR(,PREG)                                   0122
         LA    @04,RTNEID-8(@12)                                   0122
         CLC   0(2,@04),EID(@06)                                   0122
         BNE   @RF00122                                            0122
*       DO;                                                        0123
*         GO TO RTNADDR(I);         /* MATCH ON EID - PICK UP      0124
*                                      ASSOCIATED ADDRESS AND BRANCH
*                                      TO ROUTINE                    */
         L     @12,RTNADDR-8(@12)                                  0124
         BR    @12                                                 0124
*       END;                                                       0125
*   END;                            /* END LOOP TO TEST EID VALUE    */
*                                                                  0126
@RF00122 AL    I,@CF00046                                          0126
         C     I,@CF00323                                          0126
         BNH   @DL00121                                            0126
*   /*****************************************************************/
*   /*                                                               */
*   /* FALL OUT MEANS INVALID EID - SET RETURN CODE 8 AND EXIT       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0127
*SETRET8:                                                          0127
*   REG15=8;                                                       0127
SETRET8  LA    REG15,8                                             0127
*   RETURN;                                                        0128
@EL00001 L     @13,4(,@13)                                         0128
@EF00001 DS    0H                                                  0128
@ER00001 L     @14,12(,@13)                                        0128
         LM    @00,@12,20(@13)                                     0128
         BR    @14                                                 0128
*IORTN:                                                            0129
*   REG3=ADDR(IO);                  /* POINT TO I/O SECTION OF     0129
*                                      AMDPRTAB                      */
*                                                                  0129
IORTN    LA    REG3,IO(,AEDITCBR)                                  0129
*   /*****************************************************************/
*   /*                                                               */
*   /* BRANCH HERE TO TEST IF RECORD SHOULD BE FORMATTED, FIRST TEST */
*   /* CHECK FOR ALL SYSM RECORDS OR ALL OF EITHER I/O OR SIO RECORDS*/
*   /* BEING PRINTER                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0130
*FMTTEST:                                                          0130
*   IF SYSM='1'B×ALL='1'B THEN                                     0130
FMTTEST  TM    SYSM(AEDITCBR),B'00010000'                          0130
         BO    @RT00130                                            0130
         TM    ALL(REG3),B'10000000'                               0130
         BNO   @RF00130                                            0130
@RT00130 DS    0H                                                  0131
*TESTERR1:                                                         0131
*     DO;                           /* VERIFY THAT RECORD IS OK    0131
*                                      BEFORE BRANCH TO PATTERN    0131
*                                      SELECTION                     */
*                                                                  0131
TESTERR1 DS    0H                                                  0132
*       /*************************************************************/
*       /*                                                           */
*       /* IF RECORD CONTAINS ERROR CODE, DUMP IN HEX                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0132
*       IF DATA(1:2)='EEEE'X THEN                                  0132
         L     @12,DATAPTR(,PREG)                                  0132
         CLC   DATA(2,@12),@CB00606                                0132
         BNE   @RF00132                                            0132
*CALLHEX:                                                          0133
*         DO;                                                      0133
CALLHEX  DS    0H                                                  0134
*           REG15=12;               /* INDICATE HEX DUMP ROUTINE     */
         LA    REG15,12                                            0134
*           RETURN;                 /* RECORD TO BE PRINTED IN HEX   */
         B     @EL00001                                            0135
*         END CALLHEX;                                             0136
*       ELSE                                                       0137
*         GO TO IOSPLIT;            /* GO SELECT APPROPRIATE FORMAT
*                                      PATTERN                       */
*     END TESTERR1;                                                0138
*                                                                  0138
*   /*****************************************************************/
*   /*                                                               */
*   /* NOT ALL OF THIS TYPE OF RECORD BEING PRINTED, CHECK FOR       */
*   /* SELECTION BY PARTICULAR                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0139
*   IF SELECT='0'B THEN                                            0139
@RF00130 TM    SELECT(REG3),B'01000000'                            0139
         BZ    @RT00139                                            0139
*     GO TO SETRET8;                /* NO SELECTION AT ALL - RETURN
*                                      WITH CODE 8 FOR NO PRINTING   */
*   IF DATA(1:2)='EEEE'X THEN       /* VERIFY RECORD IS CLEAN BEFORE
*                                      DEVICE SEARCH                 */
         L     @12,DATAPTR(,PREG)                                  0141
         CLC   DATA(2,@12),@CB00606                                0141
         BE    @RT00141                                            0141
*     GO TO CALLHEX;                /* IN CASE OF BAD RECORD, ASSUME
*                                      NOT SELECTED AND SET RETURN 0142
*                                      CODE 8                        */
*                                                                  0142
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING ROUTINE SEARCHES DEVICE ADDR TABLE, ADDRESSED BY*/
*   /* THE DEVSRCH1 INCLUDE AND REG3. THE IDENTIFIER IODEV IS USED AS*/
*   /* A SEARCH ARGUMENT.                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0143
*   DO I=1 TO 50;                   /* LOOP THROUGH ALL ENTRIES IN 0143
*                                      DEV ADDR TABLE                */
*                                                                  0143
         LA    I,1                                                 0143
@DL00143 DS    0H                                                  0144
*     /***************************************************************/
*     /*                                                             */
*     /* IF TABLE ENTRY IS BLANK, MEANS END OF ADDRESSES AND SEARCH  */
*     /* HAS FAILED                                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0144
*     IF DEVTAB(I)='  ' THEN                                       0144
         LR    @12,I                                               0144
         ALR   @12,@12                                             0144
         ST    @12,@TF00001                                        0144
         ALR   @12,REG3                                            0144
         CLC   DEVTAB-2(2,@12),@CC00611                            0144
         BE    @RT00144                                            0144
*       GOTO SETRET8;                                              0145
*     IF DEVTAB(I)=IODEVA THEN                                     0146
         L     @12,DATAPTR(,PREG)                                  0146
         LR    @06,REG3                                            0146
         AL    @06,@TF00001                                        0146
         CLC   DEVTAB-2(2,@06),IODEVA(@12)                         0146
         BE    @RT00146                                            0146
*       GOTO EXIT;                                                 0147
*   END;                                                           0148
*                                                                  0148
         AL    I,@CF00046                                          0148
         C     I,@CF00104                                          0148
         BNH   @DL00143                                            0148
*   /*****************************************************************/
*   /*                                                               */
*   /* FALL OUT MEANS NOT FOUND                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0149
*   GOTO SETRET8;                                                  0149
         B     SETRET8                                             0149
*EXIT:                                                             0150
*   ;                               /* EXIT TO NSI, SEARCH SUCCESSFUL*/
*                                                                  0150
EXIT     DS    0H                                                  0151
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST EID AGAIN TO DETERMINE TYPE IO RECORD BEING PROCESSED:   */
*   /* FIRST STEP IN SELECTING PROPER FORMAT PATTERN                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0151
*IOSPLIT:                                                          0151
*   IF EID=IMDMIO2 THEN                                            0151
IOSPLIT  L     @12,EIDPTR(,PREG)                                   0151
         CLC   EID(2,@12),@CB00210                                 0151
         BNE   @RF00151                                            0151
*     DO;                                                          0152
*       LABPT=ADDR(IOLAB);          /* POINT TO IO LABELS            */
         L     @12,ABDPLPTR(,PREG)                                 0153
         LA    @06,IOLAB                                           0153
         ST    @06,LABPT(,@12)                                     0153
*       GOTO IODATA;                                               0154
         B     IODATA                                              0154
*     END;                                                         0155
*   IF EID=IMDMEOS                  /* EOS EVENT                     */
*     THEN                                                         0156
@RF00151 L     @12,EIDPTR(,PREG)                                   0156
         CLC   EID(2,@12),@CB00224                                 0156
         BNE   @RF00156                                            0156
*     LABPT=ADDR(EOSLAB);           /* POINT TO EOS LABELS           */
         L     @12,ABDPLPTR(,PREG)                                 0157
         LA    @06,EOSLAB                                          0157
         ST    @06,LABPT(,@12)                                     0157
*   ELSE                                                           0158
*     LABPT=ADDR(PCILAB);           /* POINT TO PCI LABELS           */
         B     @RC00156                                            0158
@RF00156 L     @12,ABDPLPTR(,PREG)                                 0158
         LA    @06,PCILAB                                          0158
         ST    @06,LABPT(,@12)                                     0158
*IODATA:                                                           0159
*   IF IOSENSE=ASTERR               /* EBCIDIC DATA                  */
*     THEN                                                         0159
@RC00156 DS    0H                                                  0159
IODATA   L     @12,DATAPTR(,PREG)                                  0159
         CLC   IOSENSE(2,@12),@CC00339                             0159
         BNE   @RF00159                                            0159
*     DO;                                                          0160
*       REG0=ADDR(IOERRF1);         /* POINT TO EBCIDIC FMT          */
         LA    REG0,IOERRF1                                        0161
*       GO TO FORMAT;                                              0162
         B     FORMAT                                              0162
*     END;                                                         0163
*   IF IOTCB=UNAVAL                 /* EBCIDIC DATA                  */
*     THEN                                                         0164
@RF00159 L     @12,DATAPTR(,PREG)                                  0164
         CLC   IOTCB(4,@12),@CC00343                               0164
         BNE   @RF00164                                            0164
*     DO;                                                          0165
*       REG0=ADDR(IOERRF0);         /* POINT TO EBCIDIC FMT          */
         LA    REG0,IOERRF0                                        0166
*       GO TO FORMAT;                                              0167
         B     FORMAT                                              0167
*     END;                                                         0168
*   IF IOSENSE=NOTAPP THEN                                         0169
@RF00164 L     @12,DATAPTR(,PREG)                                  0169
         CLC   IOSENSE(2,@12),@CC00341                             0169
         BNE   @RF00169                                            0169
*     DO;                           /* N/ IN SENSE                   */
*       REG1=ABDPLPTR;              /* ABDUMP PARM LIST              */
         L     @12,ABDPLPTR(,PREG)                                 0171
         LR    REG1,@12                                            0171
*       DATAPT=ADDR(NOTAPP);        /* N/A INTO SENSE                */
         LA    @06,@CC00341                                        0172
         ST    @06,DATAPT(,@12)                                    0172
*       REG0=ADDR(IOSNSNA);         /* FMTPTRN ADDR                  */
         LA    REG0,IOSNSNA                                        0173
*       CALL AMDPRFMT;              /* FORMAT SENSE                  */
         L     @15,ADPLFRMT(,@12)                                  0174
         BALR  @14,@15                                             0174
*     END;                                                         0175
*   ELSE                                                           0176
*     DO;                           /* SENSE                         */
         B     @RC00169                                            0176
@RF00169 DS    0H                                                  0177
*       REG1=ABDPLPTR;              /* ABDUMP PARM LIST              */
         L     @12,ABDPLPTR(,PREG)                                 0177
         LR    REG1,@12                                            0177
*       DATAPT=ADDR(IOSENSE);       /* SENSE                         */
         L     @06,DATAPTR(,PREG)                                  0178
         LA    @06,IOSENSE(,@06)                                   0178
         ST    @06,DATAPT(,@12)                                    0178
*       REG0=ADDR(IOSNSOK);         /* FMTPTRN ADDR                  */
         LA    REG0,IOSNSOK                                        0179
*       CALL AMDPRFMT;              /* FORMAT SENSE                  */
         L     @15,ADPLFRMT(,@12)                                  0180
         BALR  @14,@15                                             0180
*     END;                                                         0181
*   IF IOASCB=ASTERR THEN                                          0182
@RC00169 L     @12,DATAPTR(,PREG)                                  0182
         CLC   IOASCB(4,@12),@CC00339                              0182
         BNE   @RF00182                                            0182
*     DO;                           /* **** IN ASCB ?                */
*       IF IOTCB=ASTERR THEN        /* **** IN TCB TOO ?             */
         CLC   IOTCB(4,@12),@CC00339                               0184
         BNE   @RF00184                                            0184
*         REG0=ADDR(IOERRF2);       /* USE THIS FORMAT               */
         LA    REG0,IOERRF2                                        0185
*       ELSE                                                       0186
*         DO;                                                      0186
         B     @RC00184                                            0186
@RF00184 DS    0H                                                  0187
*           DATAPT=ADDR(IOTCB);     /* POINT AT TCB ADDR IN RECORD   */
         L     @12,ABDPLPTR(,PREG)                                 0187
         L     @06,DATAPTR(,PREG)                                  0187
         LA    @04,IOTCB(,@06)                                     0187
         ST    @04,DATAPT(,@12)                                    0187
*           REG1=ABDPLPTR;          /* PARM LIST                     */
         LR    REG1,@12                                            0188
*           IF IOTCB=NOTAPP THEN    /* N/A IN TCB                    */
         CLC   IOTCB(4,@06),@CC00341                               0189
         BNE   @RF00189                                            0189
*             REG0=ADDR(IOTCBNA);   /* POINT TO RIGHT FORMAT         */
         LA    REG0,IOTCBNA                                        0190
*           ELSE                                                   0191
*             REG0=ADDR(IOTCBOK);   /* NORMAL TCB ADDR               */
         B     @RC00189                                            0191
@RF00189 LA    REG0,IOTCBOK                                        0191
*           CALL AMDPRFMT;          /* CALL FORMAT ROUTINE           */
@RC00189 L     @12,ABDPLPTR(,PREG)                                 0192
         L     @15,ADPLFRMT(,@12)                                  0192
         BALR  @14,@15                                             0192
*           REG0=ADDR(IOERRF3);     /* **** ONLY IN ASCB             */
         LA    REG0,IOERRF3                                        0193
*         END;                                                     0194
*       GO TO FORMAT;                                              0195
         B     FORMAT                                              0195
*     END;                                                         0196
*   IF IOTCB=ASTERR THEN            /* **** ONLY IN TCB ?            */
@RF00182 L     @12,DATAPTR(,PREG)                                  0197
         CLC   IOTCB(4,@12),@CC00339                               0197
         BNE   @RF00197                                            0197
*     REG0=ADDR(IOERRF4);           /* USE THIS FORMAT               */
         LA    REG0,IOERRF4                                        0198
*   ELSE                                                           0199
*     DO;                                                          0199
         B     @RC00197                                            0199
@RF00197 DS    0H                                                  0200
*       DATAPT=ADDR(IOTCB);         /* POINT AT TCB ADDR IN RECORD   */
         L     @12,ABDPLPTR(,PREG)                                 0200
         L     @06,DATAPTR(,PREG)                                  0200
         LA    @04,IOTCB(,@06)                                     0200
         ST    @04,DATAPT(,@12)                                    0200
*       REG1=ABDPLPTR;              /* PARM LIST                     */
         LR    REG1,@12                                            0201
*       IF IOTCB=NOTAPP THEN        /* N/A IN TCB                    */
         CLC   IOTCB(4,@06),@CC00341                               0202
         BNE   @RF00202                                            0202
*         REG0=ADDR(IOTCBNA);       /* POINT TO RIGHT FORMAT         */
         LA    REG0,IOTCBNA                                        0203
*       ELSE                                                       0204
*         REG0=ADDR(IOTCBOK);       /* NORMAL TCB ADDR               */
         B     @RC00202                                            0204
@RF00202 LA    REG0,IOTCBOK                                        0204
*       CALL AMDPRFMT;              /* CALL FORMAT ROUTINE           */
@RC00202 L     @12,ABDPLPTR(,PREG)                                 0205
         L     @15,ADPLFRMT(,@12)                                  0205
         BALR  @14,@15                                             0205
*       REG0=ADDR(IOF);             /* POINT TO STND FORMAT          */
         LA    REG0,IOF                                            0206
*     END;                                                         0207
*                                                                  0207
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL AMDPRFMT, PASS FMTPATRN ADDR IN REG0, AND EXIT           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0208
*FORMAT:                                                           0208
*   DATAPT=DATAPTR;                 /* POINT TO DATA                 */
@RC00197 DS    0H                                                  0208
FORMAT   L     @12,ABDPLPTR(,PREG)                                 0208
         L     @06,DATAPTR(,PREG)                                  0208
         ST    @06,DATAPT(,@12)                                    0208
*   REG1=ABDPLPTR;                  /* POINT R1 TO EXIT LIST         */
         LR    REG1,@12                                            0209
*   CALL AMDPRFMT;                  /* CALL REENTRANT FORMAT RTN     */
         L     @15,ADPLFRMT(,@12)                                  0210
         BALR  @14,@15                                             0210
*EXITRTN:                                                          0211
*   REG15=4;                        /* SET RETURN CODE TO PRINT A  0211
*                                      LINE WITH NO RECALL OF      0211
*                                      AMDSYS03                      */
EXITRTN  LA    REG15,4                                             0211
*   RETURN;                         /* RETURN TO CALLER , AMDPRAPP OR
*                                      IGCOFO5A                      */
         B     @EL00001                                            0212
*/* POINT TO SIO SECTION IN AMDPRTAB                                 */
*                                                                  0213
*SIORTN:                                                           0213
*   REG3=ADDR(SIF);                 /* POINT TO SIO PARMS IN AMDPRTAB*/
SIORTN   LA    REG3,SIF(,AEDITCBR)                                 0213
*/* BRANCH HERE TO TEST IF RECORD SHOULD BE FORMATTED, FIRST       0214
*   TEST CHECK FOR ALL SYSM RECORDS OR  SIO                        0214
*   RECORDS BEING PRINTER                                            */
*                                                                  0214
*   IF SYSM='1'B×ALL='1'B THEN                                     0214
         TM    SYSM(AEDITCBR),B'00010000'                          0214
         BO    @RT00214                                            0214
         TM    ALL(REG3),B'10000000'                               0214
         BNO   @RF00214                                            0214
@RT00214 DS    0H                                                  0215
*TESTERR2:                                                         0215
*     DO;                           /* VERIFY THAT RECORD IS OK    0215
*                                      BEFORE BRANCH TO PATTERN    0215
*                                      SELECTION                     */
*                                                                  0215
TESTERR2 DS    0H                                                  0216
*       /*************************************************************/
*       /*                                                           */
*       /* IF RECORD CONTAINS ERROR CODE, DUMP IN HEX                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0216
*       IF DATA(1:2)='EEEE'X THEN                                  0216
         L     @12,DATAPTR(,PREG)                                  0216
         CLC   DATA(2,@12),@CB00606                                0216
         BE    @RT00216                                            0216
*         GO TO CALLHEX;                                           0217
*       ELSE                                                       0218
*         GO TO SIOFMT;             /* GO SELECT APPROPRIATE FORMAT
*                                      PATTERN                       */
         B     SIOFMT                                              0218
*     END TESTERR2;                                                0219
*                                                                  0219
*   /*****************************************************************/
*   /*                                                               */
*   /* NOT ALL OF THIS TYPE OF RECORD BEING PRINTED, CHECK FOR       */
*   /* SELECTION BY PARTICULAR                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0220
*   IF SELECT='0'B THEN                                            0220
@RF00214 TM    SELECT(REG3),B'01000000'                            0220
         BZ    @RT00220                                            0220
*     GO TO SETRET8;                /* NO SELECTION AT ALL - RETURN
*                                      WITH CODE 8 FOR NO PRINTING   */
*   IF DATA(1:2)='EEEE'X THEN       /* VERIFY RECORD IS CLEAN BEFORE
*                                      DEVICE SEARCH                 */
         L     @12,DATAPTR(,PREG)                                  0222
         CLC   DATA(2,@12),@CB00606                                0222
         BE    @RT00222                                            0222
*     GO TO CALLHEX;                /* IN CASE OF BAD RECORD, ASSUME
*                                      NOT SELECTED AND SET RETURN 0223
*                                      CODE 8                        */
*                                                                  0223
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE SEARCHES THE DEVICE ADDRESS TABLE, ADDRESSED BY  */
*   /* THE DEVSRCH1 INCLUDE AND REG3. THE IDENTIFIER SIODEV IS USED  */
*   /* AS SEARCH ARGUMENT.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0224
*   DO I=1 TO 50;                   /* LOOP THROUGH ALL ENTRIES IN 0224
*                                      DEVICE ADDRESS TABLE          */
*                                                                  0224
         LA    I,1                                                 0224
@DL00224 DS    0H                                                  0225
*     /***************************************************************/
*     /*                                                             */
*     /* IF TABLE ENTRY IS BLANK, MEANS END OF ADDRESSES AND SEARCH  */
*     /* HASFAILED                                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0225
*     IF DEVTAB(I)='  ' THEN                                       0225
         LR    @12,I                                               0225
         ALR   @12,@12                                             0225
         ST    @12,@TF00001                                        0225
         ALR   @12,REG3                                            0225
         CLC   DEVTAB-2(2,@12),@CC00611                            0225
         BE    @RT00225                                            0225
*       GOTO SETRET8;                                              0226
*     IF DEVTAB(I)=SIODEVA THEN                                    0227
         L     @12,DATAPTR(,PREG)                                  0227
         LR    @06,REG3                                            0227
         AL    @06,@TF00001                                        0227
         CLC   DEVTAB-2(2,@06),SIODEVA(@12)                        0227
         BE    @RT00227                                            0227
*       GOTO EXIT1;                                                0228
*   END;                            /* LOOP TO INCREMENT TO NEST   0229
*                                      DEVICE                        */
         AL    I,@CF00046                                          0229
         C     I,@CF00104                                          0229
         BNH   @DL00224                                            0229
*/*   FALL OUT MEANS NOT FOUND                                       */
*                                                                  0230
*   GOTO SETRET8;                   /* EXIT TO NSI, SEARCH SUCCESSFUL*/
         B     SETRET8                                             0230
*EXIT1:                                                            0231
*   ;                                                              0231
EXIT1    DS    0H                                                  0232
*SIOFMT:                                                           0232
*   IF SIOCPA=ASTERR THEN                                          0232
SIOFMT   L     @12,DATAPTR(,PREG)                                  0232
         CLC   SIOCPA(4,@12),@CC00339                              0232
         BNE   @RF00232                                            0232
*     DO;                                                          0233
*       REG0=ADDR(SIOERRF2);        /* **** ERROR FORMAT             */
         LA    REG0,SIOERRF2                                       0234
*       GO TO FORMAT;               /* FORMAT LINE                   */
         B     FORMAT                                              0235
*     END;                                                         0236
*   IF SIOCPA=UNAVAL THEN                                          0237
@RF00232 L     @12,DATAPTR(,PREG)                                  0237
         CLC   SIOCPA(4,@12),@CC00343                              0237
         BNE   @RF00237                                            0237
*     REG0=ADDR(SIOERRF);           /* POINT TO ERROR SIO FMT        */
         LA    REG0,SIOERRF                                        0238
*   ELSE                                                           0239
*     DO;                                                          0239
         B     @RC00237                                            0239
@RF00237 DS    0H                                                  0240
*       RFY                                                        0240
*         N RSTD;                                                  0240
*       N=SIOCC1;                   /* GET ILC AND CC FROM RECORD    */
         L     @12,DATAPTR(,PREG)                                  0241
         ICM   N,12,SIOCC1(@12)                                    0241
         SRA   N,16                                                0241
*       SLL(N,18);                  /* SHIFT OUT ILC                 */
         SLL   N,18                                                0242
*       SRL(N,22);                  /* MOVE CC BACK TO NEXT BYTE     */
         SRL   N,22                                                0243
*       SIOCC1=N;                   /* PUT BACK IN RECORD (+1 BYTE)
*                                      TO EDIT                       */
         STCM  N,3,SIOCC1(@12)                                     0244
*       RFY                                                        0245
*         N UNRSTD;                                                0245
*       REG0=ADDR(SIOF);            /* POINT TO STND FORMAT          */
         LA    REG0,SIOF                                           0246
*     END;                                                         0247
*   GOTO FORMAT;                    /* EXIT RTN                      */
         B     FORMAT                                              0248
*/* POINT TO IO SECTION IN AMDPRTAB                                  */
*                                                                  0249
*UIORTN:                                                           0249
*   REG3=ADDR(IO);                  /* POINT TO IO PARMS IN AMDPRTAB */
UIORTN   LA    REG3,IO(,AEDITCBR)                                  0249
*/* BRANCH HERE TO TEST IF RECORD SHOULD BE FORMATTED, FIRST       0250
*   TEST CHECK FOR ALL SYSM RECORDS OR ALL UIO RECORDS BEING PRINTED */
*                                                                  0250
*   IF SYSM='1'B×ALL='1'B THEN                                     0250
         TM    SYSM(AEDITCBR),B'00010000'                          0250
         BO    @RT00250                                            0250
         TM    ALL(REG3),B'10000000'                               0250
         BNO   @RF00250                                            0250
@RT00250 DS    0H                                                  0251
*TESTERR3:                                                         0251
*     DO;                           /* VERIFY THAT RECORD IS OK    0251
*                                      BEFORE BRANCH TO PATTERN    0251
*                                      SELECTION                     */
*                                                                  0251
TESTERR3 DS    0H                                                  0252
*       /*************************************************************/
*       /*                                                           */
*       /* IF RECORD CONTAINS ERROR CODE, DUMP IN HEX                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0252
*       IF DATA(1:2)='EEEE'X THEN                                  0252
         L     @12,DATAPTR(,PREG)                                  0252
         CLC   DATA(2,@12),@CB00606                                0252
         BE    @RT00252                                            0252
*         GO TO CALLHEX;                                           0253
*       ELSE                                                       0254
*         GO TO UIOFMT;             /* GO SELECT APPROPRIATE FORMAT
*                                      PATTERN                       */
         B     UIOFMT                                              0254
*     END TESTERR3;                                                0255
*                                                                  0255
*   /*****************************************************************/
*   /*                                                               */
*   /* NOT ALL OF THIS TYPE OF RECORD BEING PRINTED, CHECK FOR       */
*   /* SELECTION BY PARTICULAR                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0256
*   IF SELECT='0'B THEN                                            0256
@RF00250 TM    SELECT(REG3),B'01000000'                            0256
         BZ    @RT00256                                            0256
*     GO TO SETRET8;                /* NO SELECTION AT ALL - RETURN
*                                      WITH CODE 8 FOR NO PRINTING   */
*   IF DATA(1:2)='EEEE'X THEN       /* VERIFY RECORD IS CLEAN BEFORE
*                                      DEVICE SEARCH                 */
         L     @12,DATAPTR(,PREG)                                  0258
         CLC   DATA(2,@12),@CB00606                                0258
         BE    @RT00258                                            0258
*     GO TO CALLHEX;                /* IN CASE OF BAD RECORD, ASSUME
*                                      NOT SELECTED AND SET RETURN 0259
*                                      CODE 8                        */
*                                                                  0259
*   /*****************************************************************/
*   /*                                                               */
*   /* THE DEVSRCH ROUTINE SEARCHES THE DEVICE ADDRESS TABLE         */
*   /* ADDRESSED BY THE DEVSRCH1 TABLE AND REG3. THE IDENTIFIER      */
*   /* UIODEV IS USED AS A SEARCH ARGUMENT.                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0260
*   DO I=1 TO 50;                   /* LOOP THROUGH ALL ENTRIES IN 0260
*                                      DEVICE ADDR TABLE             */
         LA    I,1                                                 0260
@DL00260 DS    0H                                                  0261
*/*   IF TABLE ENTRY IS BLANK , MEANS END OF ADDRESSES AND SEARCH HAS
*    FAILED                                                          */
*                                                                  0261
*     IF DEVTAB(I)='  ' THEN                                       0261
         LR    @12,I                                               0261
         ALR   @12,@12                                             0261
         ST    @12,@TF00001                                        0261
         ALR   @12,REG3                                            0261
         CLC   DEVTAB-2(2,@12),@CC00611                            0261
         BE    @RT00261                                            0261
*       GOTO SETRET8;                                              0262
*     IF DEVTAB(I)=UIODEVA THEN                                    0263
         L     @12,DATAPTR(,PREG)                                  0263
         LR    @06,REG3                                            0263
         AL    @06,@TF00001                                        0263
         CLC   DEVTAB-2(2,@06),UIODEVA(@12)                        0263
         BE    @RT00263                                            0263
*       GOTO EXIT2;                                                0264
*   END;                            /* LOOP TO INCREMENT TO NEXT   0265
*                                      DEVICE                        */
*                                                                  0265
         AL    I,@CF00046                                          0265
         C     I,@CF00104                                          0265
         BNH   @DL00260                                            0265
*   /*****************************************************************/
*   /*                                                               */
*   /* FALL OUT MEANS NOT FOUND                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0266
*   GOTO SETRET8;                   /* EXIT TO NSI, SEARCH SUCCESSFUL*/
         B     SETRET8                                             0266
*EXIT2:                                                            0267
*   ;                                                              0267
EXIT2    DS    0H                                                  0268
*UIOFMT:                                                           0268
*   REG0=ADDR(UIOF);                /* POINT TO UIO FMTPATRN         */
UIOFMT   LA    REG0,UIOF                                           0268
*   GOTO FORMAT;                    /* EXIT RTN                      */
         B     FORMAT                                              0269
*                                                                  0270
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR NOT FORMATING ALL SYSM RECORDS AND NOT DSP - IF SO,  */
*   /* BRANCH TO SET CODE 8 SO THAT RECORD IS NOT PRINTED            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0270
*DSPRTN:                                                           0270
*   IF SYSM='0'B&DSP='0'B THEN                                     0270
DSPRTN   TM    SYSM(AEDITCBR),B'01010000'                          0270
         BZ    @RT00270                                            0270
*     GO TO SETRET8;                                               0271
*                                                                  0271
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RECORD CONTAINS ERROR INDICATOR, BRANCH TO DUMP RECORD IN  */
*   /* HEX FORMAT                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0272
*   IF DATA(1:2)='EEEE'X THEN                                      0272
@RF00270 L     @12,DATAPTR(,PREG)                                  0272
         CLC   DATA(2,@12),@CB00606                                0272
         BE    @RT00272                                            0272
*     GO TO CALLHEX;                                               0273
*   IF EID=IMDMDSP4                 /* SVC EXIT DISPATCH EVENT       */
*     THEN                                                         0274
         L     @12,EIDPTR(,PREG)                                   0274
         CLC   EID(2,@12),@CB00239                                 0274
         BNE   @RF00274                                            0274
*     LABPT=ADDR(SDSPLAB);                                         0275
         L     @12,ABDPLPTR(,PREG)                                 0275
         LA    @06,SDSPLAB                                         0275
         ST    @06,LABPT(,@12)                                     0275
*   IF EID=IMDMDSP2                 /* LSR EVENT                     */
*     THEN                                                         0276
@RF00274 L     @12,EIDPTR(,PREG)                                   0276
         CLC   EID(2,@12),@CB00236                                 0276
         BNE   @RF00276                                            0276
*     LABPT=ADDR(LSRLAB);                                          0277
         L     @12,ABDPLPTR(,PREG)                                 0277
         LA    @06,LSRLAB                                          0277
         ST    @06,LABPT(,@12)                                     0277
*   ELSE                                                           0278
*     LABPT=ADDR(DSPLAB);                                          0278
         B     @RC00276                                            0278
@RF00276 L     @12,ABDPLPTR(,PREG)                                 0278
         LA    @06,DSPLAB                                          0278
         ST    @06,LABPT(,@12)                                     0278
*   IF DSPTCB=NOTAPP                /* NO TCB IN LSR                 */
*     THEN                                                         0279
@RC00276 L     @12,DATAPTR(,PREG)                                  0279
         CLC   DSPTCB(4,@12),@CC00341                              0279
         BNE   @RF00279                                            0279
*     DO;                                                          0280
*       IF DSPR15=ASTERR            /* REGISTER ERROR                */
*         THEN                                                     0281
         CLC   DSPR15(4,@12),@CC00339                              0281
         BNE   @RF00281                                            0281
*         REG0=ADDR(DSPELSR);                                      0282
         LA    REG0,DSPELSR                                        0282
*       ELSE                                                       0283
*         REG0=ADDR(DSPLSRF);       /* POINT TO EBCIDIC FMTPATRN     */
         B     @RC00281                                            0283
@RF00281 LA    REG0,DSPLSRF                                        0283
*     END;                                                         0284
*   ELSE                                                           0285
*     DO;                                                          0285
         B     @RC00279                                            0285
@RF00279 DS    0H                                                  0286
*       IF DSPR15=ASTERR            /* REGISTER ERROR                */
*         THEN                                                     0286
         L     @12,DATAPTR(,PREG)                                  0286
         CLC   DSPR15(4,@12),@CC00339                              0286
         BNE   @RF00286                                            0286
*         REG0=ADDR(DSPERRF);                                      0287
         LA    REG0,DSPERRF                                        0287
*       ELSE                                                       0288
*         REG0=ADDR(DSPF);          /* POINT TO STD DSP FMT          */
         B     @RC00286                                            0288
@RF00286 LA    REG0,DSPF                                           0288
*     END;                                                         0289
*   GOTO FORMAT;                                                   0290
         B     FORMAT                                              0290
*SRBRTN:                                                           0291
*   IF SYSM='0'B&DSP='0'B THEN                                     0291
SRBRTN   TM    SYSM(AEDITCBR),B'01010000'                          0291
         BZ    @RT00291                                            0291
*     GO TO SETRET8;                                               0292
*                                                                  0292
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RECORD CONTAINS ERROR INDICATOR, BRANCH TO DUMP RECORD IN  */
*   /* HEX FORMAT                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0293
*   IF DATA(1:2)='EEEE'X THEN                                      0293
@RF00291 L     @12,DATAPTR(,PREG)                                  0293
         CLC   DATA(2,@12),@CB00606                                0293
         BE    @RT00293                                            0293
*     GO TO CALLHEX;                                               0294
*   IF SRBSRB=NOTAPP THEN                                          0295
         CLC   SRBSRB(4,@12),@CC00341                              0295
         BNE   @RF00295                                            0295
*     DO;                                                          0296
*       LABPT=ADDR(SRBSLAB);        /* POINT TO GLOBAL SRB FMT       */
         L     @12,ABDPLPTR(,PREG)                                 0297
         LA    @06,SRBSLAB                                         0297
         ST    @06,LABPT(,@12)                                     0297
*       REG0=ADDR(SRBSUPF);         /* POINT TO FMT FOR SUSPENDED SRB*/
         LA    REG0,SRBSUPF                                        0298
*       GOTO FORMAT;                                               0299
         B     FORMAT                                              0299
*     END;                                                         0300
*   IF SRBTYPE='G' THEN                                            0301
@RF00295 L     @12,DATAPTR(,PREG)                                  0301
         CLI   SRBTYPE(@12),C'G'                                   0301
         BNE   @RF00301                                            0301
*     LABPT=ADDR(GLOBLAB);          /* POINT TO GLOBAL SRB FMT       */
         L     @12,ABDPLPTR(,PREG)                                 0302
         LA    @06,GLOBLAB                                         0302
         ST    @06,LABPT(,@12)                                     0302
*   ELSE                                                           0303
*     LABPT=ADDR(LOCLAB);           /* POINT TO LOCAL SRB FMT        */
         B     @RC00301                                            0303
@RF00301 L     @12,ABDPLPTR(,PREG)                                 0303
         LA    @06,LOCLAB                                          0303
         ST    @06,LABPT(,@12)                                     0303
*   IF SRBR15=ASTERR THEN           /* ERROR FORMAT          @YM01892*/
@RC00301 L     @12,DATAPTR(,PREG)                                  0304
         CLC   SRBR15(4,@12),@CC00339                              0304
         BNE   @RF00304                                            0304
*     REG0=ADDR(SRBERRF);           /* YES                   @YM01892*/
         LA    REG0,SRBERRF                                        0305
*   ELSE                                                           0306
*     REG0=ADDR(SRBF);              /* NORMAL                @YM01892*/
         B     @RC00304                                            0306
@RF00304 LA    REG0,SRBF                                           0306
*   GOTO FORMAT;                                                   0307
         B     FORMAT                                              0307
*                                                                  0308
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR FORMATING ALL SYSM RECORDS OR ALL SVC RECORDS        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0308
*SVCRTN:                                                           0308
*   IF SYSM='1'B×ALLV='1'B THEN                                    0308
SVCRTN   TM    SYSM(AEDITCBR),B'00010000'                          0308
         BO    @RT00308                                            0308
         TM    ALLV(AEDITCBR),B'10000000'                          0308
         BNO   @RF00308                                            0308
@RT00308 DS    0H                                                  0309
*TSTSVCER:                                                         0309
*     DO;                           /* IF SO, TEST FOR ERROR RECORD  */
*                                                                  0309
TSTSVCER DS    0H                                                  0310
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR ERROR INDICATOR, IN WHICH CASE DUMP RECORD IF HEX*/
*       /* FORMAT                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0310
*       IF DATA(1:2)='EEEE'X THEN                                  0310
         L     @12,DATAPTR(,PREG)                                  0310
         CLC   DATA(2,@12),@CB00606                                0310
         BE    @RT00310                                            0310
*         GO TO CALLHEX;                                           0311
*       ELSE                                                       0312
*         GO TO SVCSELPT;           /* NOT ERROR RECORD - GO FORMAT  */
         B     SVCSELPT                                            0312
*     END TSTSVCER;                                                0313
*                                                                  0313
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR SELECTIVE PRINTING OF SVC RECORDS, IF NOT, SET RETURN*/
*   /* CODE 8 SO THAT RECORD IS NOT PRINTED                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0314
*   IF SELV='0'B THEN                                              0314
@RF00308 TM    SELV(AEDITCBR),B'01000000'                          0314
         BZ    @RT00314                                            0314
*     GO TO SETRET8;                /* BRANCH TO EXIT WITH CODE 8    */
*                                                                  0315
*   /*****************************************************************/
*   /*                                                               */
*   /* VERIFY THAT RECORD IS NOT ERROR RECORD BEFORE ENTERING        */
*   /* SELECTION PROCESS                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*   IF DATA(1:2)='EEEE'X THEN                                      0316
         L     @12,DATAPTR(,PREG)                                  0316
         CLC   DATA(2,@12),@CB00606                                0316
         BE    @RT00316                                            0316
*     GO TO CALLHEX;                /* DUMP ERROR RECORD IN HEX -  0317
*                                      CAN-T RELIE ON SVC NUMBER     */
*                                                                  0318
*   /*****************************************************************/
*   /*                                                               */
*   /* SVC SELECTION SUBROUTINE                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0318
*   RFY                                                            0318
*     N RSTD;                       /* N IS REG 4                    */
*   N=255-SVCCODE;                  /* SVCNUMB BASE ON DATA POINTER
*                                      SO THAT IT IS INTERRUPT CODE
*                                      OF OLD PSW                    */
*                                                                  0319
         LA    N,255                                               0319
         ICM   @12,12,SVCCODE(@12)                                 0319
         SRA   @12,16                                              0319
         SLR   N,@12                                               0319
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP TO COMPUTE 2 EXP 255-SVCNUMB, WHICH GIVES MASK TO AND    */
*   /* WITH SVC SELECTIVITY INDICATORS                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0320
*   DO I=8 TO 1 BY-1;               /* LOOP FOR RIGHT TO LEFT IN 8 0320
*                                      WORD AREA REQUIRED TO HOLD  0320
*                                      RESULT                        */
         LA    I,8                                                 0320
@DL00320 DS    0H                                                  0321
*     IF N=<31&N=>0 THEN            /* TEST FOR N IN WHICH SHIFT CAN
*                                      HANDLE POWER                  */
         C     N,@CF00036                                          0321
         BH    @RF00321                                            0321
         LTR   N,N                                                 0321
         BM    @RF00321                                            0321
*       DO;                         /* IN THIS CASE,                 */
*         REG3=1;                   /* START WITH 2 EXP 0            */
         LA    REG3,1                                              0323
*         GEN(SLL  REG3,0(N));      /* COMPUTE 2 EXP N               */
         SLL  REG3,0(N)
*       END;                                                       0325
*     ELSE                                                         0326
*       REG3=0;                     /* OTHERWISE CLEAR WORD IN RESULT*/
         B     @RC00321                                            0326
@RF00321 SLR   REG3,REG3                                           0326
*     TWOEXPN(I)=REG3;              /* STORE WORD OF RESULT          */
@RC00321 LR    @12,I                                               0327
         SLA   @12,2                                               0327
         ST    REG3,TWOEXPN-4(@12)                                 0327
*     N=N-32;                       /* REDUCE EXPONENT BY 1 WORD     */
         SL    N,@CF00092                                          0328
*   END;                            /* END 2 EXP N COMPUTATION       */
         BCTR  I,0                                                 0329
         LTR   I,I                                                 0329
         BP    @DL00320                                            0329
*   RFY                                                            0330
*     N UNRSTD;                                                    0330
*   SVCIND=SVCIND&SVCNUMBR;         /* AND CURRENT SVC MASK WITH   0331
*                                      SELECTION STRING              */
*                                                                  0331
         NC    SVCIND(32),SVCNUMBR(AEDITCBR)                       0331
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THROUGH WORDS OF RESULT - RESULT ZERO MEANS CURRENT      */
*   /* RECORD NOT TO BE FORMATED, ONE BIT WILL ON IF RECORD IS TO BE */
*   /* PRINTED                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0332
*   DO I=8 TO 1 BY-1;                                              0332
         LA    I,8                                                 0332
@DL00332 DS    0H                                                  0333
*     IF TWOEXPN(I)^=0 THEN         /* TEST WORD FOR NOT ZERO        */
         LR    @12,I                                               0333
         SLA   @12,2                                               0333
         L     @12,TWOEXPN-4(@12)                                  0333
         LTR   @12,@12                                             0333
         BNZ   @RT00333                                            0333
*       GO TO SVCSELPT;             /* FOUND BIT ON GO SELECT PATTERN
*                                      FOR FORMATING RECORD          */
*   END;                                                           0335
*                                                                  0335
         BCTR  I,0                                                 0335
         LTR   I,I                                                 0335
         BP    @DL00332                                            0335
*   /*****************************************************************/
*   /*                                                               */
*   /* FALL OUT MEANS SVC NOT TO BE PRINTED - SET CODE 8 AND RETURN  */
*   /* TO AMDPRAPP                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0336
*   GO TO SETRET8;                                                 0336
         B     SETRET8                                             0336
*SVCSELPT:                                                         0337
*   REG0=ADDR(SVCF);                                               0337
SVCSELPT LA    REG0,SVCF                                           0337
*   GO TO FORMAT;                   /* GO FORMAT RECORD              */
         B     FORMAT                                              0338
*                                                                  0339
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR NOT FORMATING ALL SYSM RECORDS AND NOT EXTERNAL INT  */
*   /* RECORDS, IN WHICH CASE SET RETURN CODE 8 SO THE RECORD IS NOT */
*   /* PRINTED                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0339
*EXTRTN:                                                           0339
*   IF SYSM='0'B&EXT='0'B THEN                                     0339
EXTRTN   TM    SYSM(AEDITCBR),B'10010000'                          0339
         BZ    @RT00339                                            0339
*     GO TO SETRET8;                                               0340
*                                                                  0340
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR ERROR RECORD                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0341
*TSTEXTER:                                                         0341
*   IF DATA(1:2)='EEEE'X THEN                                      0341
@RF00339 DS    0H                                                  0341
TSTEXTER L     @12,DATAPTR(,PREG)                                  0341
         CLC   DATA(2,@12),@CB00606                                0341
         BE    @RT00341                                            0341
*     GO TO CALLHEX;                /* GO DUMP RECORD IN HEX         */
*   IF EXTTCB=NOTAPP THEN                                          0343
         CLC   EXTTCB(4,@12),@CC00341                              0343
         BNE   @RF00343                                            0343
*     REG0=ADDR(EXTERRF);           /* EBCIDIC TCB FMT               */
         LA    REG0,EXTERRF                                        0344
*   ELSE                                                           0345
*     REG0=ADDR(EXTSTDF);           /* STND EXT FMT                  */
         B     @RC00343                                            0345
@RF00343 LA    REG0,EXTSTDF                                        0345
*   DATAPT=DATAPTR;                                                0346
@RC00343 L     @12,ABDPLPTR(,PREG)                                 0346
         L     @06,DATAPTR(,PREG)                                  0346
         ST    @06,DATAPT(,@12)                                    0346
*   REG1=ABDPLPTR;                  /* POINT TO EXIT LIST            */
         LR    REG1,@12                                            0347
*   CALL AMDPRFMT;                  /* CALL REENTRANT FMT RTN        */
         L     @15,ADPLFRMT(,@12)                                  0348
         BALR  @14,@15                                             0348
*   IF EXTINT=CCINT THEN                                           0349
         L     @12,DATAPTR(,PREG)                                  0349
         CLC   EXTINT(2,@12),@CB00345                              0349
         BNE   @RF00349                                            0349
*     DO;                           /* CLK COMPARATOR                */
*       IF EXTVAR=ASTERR×EXTVAR=UNAVAL/* EBCIDIC DATA                */
*         THEN                                                     0351
         CLC   EXTVAR(4,@12),@CC00339                              0351
         BE    @RT00351                                            0351
         CLC   EXTVAR(4,@12),@CC00343                              0351
         BNE   @RF00351                                            0351
@RT00351 DS    0H                                                  0352
*         REG0=ADDR(EXTCCERF);      /* EBCIDIC EXT FMT               */
         LA    REG0,EXTCCERF                                       0352
*       ELSE                                                       0353
*         REG0=ADDR(EXTCCF);        /* STD EXT FMT                   */
         B     @RC00351                                            0353
@RF00351 LA    REG0,EXTCCF                                         0353
*EXTEXIT:                                                          0354
*       DATAPT=ADDR(EXTVAR);        /* UPDATE DATA PTR               */
@RC00351 DS    0H                                                  0354
EXTEXIT  L     @12,ABDPLPTR(,PREG)                                 0354
         L     @06,DATAPTR(,PREG)                                  0354
         LA    @06,EXTVAR(,@06)                                    0354
         ST    @06,DATAPT(,@12)                                    0354
*       REG1=ABDPLPTR;              /* POINT TO EXIT LIST            */
         LR    REG1,@12                                            0355
*       CALL AMDPRFMT;              /* CALL FORMATING RTN            */
         L     @15,ADPLFRMT(,@12)                                  0356
         BALR  @14,@15                                             0356
*       GOTO EXITRTN;               /* EXIT                          */
         B     EXITRTN                                             0357
*     END;                                                         0358
*   IF EXTINT(1:2)=SIGPINT          /* SIGNAL PROCESSOR INTERRUPT    */
*     THEN                                                         0359
@RF00349 L     @12,DATAPTR(,PREG)                                  0359
         CLI   EXTINT(@12),X'12'                                   0359
         BNE   @RF00359                                            0359
*     DO;                                                          0360
*       IF EXTVAR=ASTERR THEN                                      0361
         CLC   EXTVAR(4,@12),@CC00339                              0361
         BNE   @RF00361                                            0361
*         REG0=ADDR(EXTSGPEF);                                     0362
         LA    REG0,EXTSGPEF                                       0362
*       ELSE                                                       0363
*         REG0=ADDR(EXTSGPF);       /* STND EXT VAR FLD FMT          */
         B     @RC00361                                            0363
@RF00361 LA    REG0,EXTSGPF                                        0363
*       GOTO EXTEXIT;               /* GOTO FORMAT                   */
         B     EXTEXIT                                             0364
*     END;                                                         0365
*   GO TO EXITRTN;                  /* GO REQUEST LINE BE PRINTED    */
         B     EXITRTN                                             0366
*                                                                  0367
*/* TEST FOR ALL SYSM RECORDS OR ALL PI RECORDS BEING PRINTED        */
*                                                                  0367
*PIRTN:                                                            0367
*   IF SYSM='1'B×ALLP='1'B THEN                                    0367
PIRTN    TM    SYSM(AEDITCBR),B'00010000'                          0367
         BO    @RT00367                                            0367
         TM    ALLP(AEDITCBR),B'10000000'                          0367
         BNO   @RF00367                                            0367
@RT00367 DS    0H                                                  0368
*TSTPIER:                                                          0368
*     DO;                           /* IN THIS CASE, TEST FOR ERROR
*                                      RECORD                        */
*                                                                  0368
TSTPIER  DS    0H                                                  0369
*       /*************************************************************/
*       /*                                                           */
*       /* TEST FOR ERROR RECORD INDICATOR                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0369
*       IF DATA(1:2)='EEEE'X THEN                                  0369
         L     @12,DATAPTR(,PREG)                                  0369
         CLC   DATA(2,@12),@CB00606                                0369
         BE    @RT00369                                            0369
*         GO TO CALLHEX;            /* DUMP ERROR RECORD IN HEX      */
*       ELSE                                                       0371
*         GO TO SELPIPAT;           /* IF RECORD IS CLEAN GO SELECT
*                                      APPROPRIATE FORMAT PATTERN    */
         B     SELPIPAT                                            0371
*     END TSTPIER;                                                 0372
*                                                                  0372
*   /*****************************************************************/
*   /*                                                               */
*   /* TEST FOR NOT FORMATING PI EVENTS                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0373
*   IF SELP='0'B THEN                                              0373
@RF00367 TM    SELP(AEDITCBR),B'01000000'                          0373
         BZ    @RT00373                                            0373
*     GO TO SETRET8;                /* IF SO, GO SET RETURN CODE 8 SO
*                                      THAT RECORD IS NOT PRINTED    */
*                                                                  0374
*   /*****************************************************************/
*   /*                                                               */
*   /* BEFORE ENTERING SELECTION PROCESS, VERIFY RECORD IS CLEAN     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0375
*   IF DATA(1:2)='EEEE'X THEN                                      0375
         L     @12,DATAPTR(,PREG)                                  0375
         CLC   DATA(2,@12),@CB00606                                0375
         BE    @RT00375                                            0375
*     GO TO CALLHEX;                /* IF ERROR RECORD, GO DUMP IT IN
*                                      HEX FORMAT                    */
*                                                                  0376
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF PICODES 17, 18, OR 19 HAVE BEEN SELECTED         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0377
*   RFY                                                            0377
*     N RSTD;                                                      0377
*   IF INTCODE=17 THEN              /* 17 INTERRUPT CODE             */
         CLC   INTCODE(2,@12),@CH00658                             0378
         BNE   @RF00378                                            0378
*     IF PICODEA='80'X THEN         /* FORMATTING THIS INTERRUPT   0379
*                                      CODE?                         */
         CLI   PICODEA(AEDITCBR),X'80'                             0379
         BE    @RT00379                                            0379
*       GOTO SELPIPAT;              /* GO TO FORMAT RECORD           */
*     ELSE                                                         0381
*       GOTO SETRET8;               /* SKIP RECORD                   */
         B     SETRET8                                             0381
*   IF INTCODE=18 THEN              /* 18 INTERRUPT CODE             */
@RF00378 L     @12,DATAPTR(,PREG)                                  0382
         CLC   INTCODE(2,@12),@CH00323                             0382
         BNE   @RF00382                                            0382
*     IF PICODEA='40'X THEN         /* FORMATTING THIS INTERRUPT   0383
*                                      CODE?                         */
         CLI   PICODEA(AEDITCBR),X'40'                             0383
         BE    @RT00383                                            0383
*       GOTO SELPIPAT;              /* GO TO FORMAT RECORD           */
*     ELSE                                                         0385
*       GOTO SETRET8;               /* SKIP RECORD                   */
         B     SETRET8                                             0385
*   IF INTCODE=19 THEN              /* 19 INTERRUPT CODE             */
@RF00382 L     @12,DATAPTR(,PREG)                                  0386
         CLC   INTCODE(2,@12),@CH00595                             0386
         BNE   @RF00386                                            0386
*     IF PICODEA='20'X THEN         /* FORMATTING THIS INTERRUPT   0387
*                                      CODE?                         */
         CLI   PICODEA(AEDITCBR),X'20'                             0387
         BE    @RT00387                                            0387
*       GOTO SELPIPAT;              /* GO TO FORMAT RECORD           */
*     ELSE                                                         0389
*       GOTO SETRET8;               /* SKIP RECORD                   */
*                                                                  0389
         B     SETRET8                                             0389
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPUTE 2 EXP (16 - INT CODE) TO USE AS MASK WITH PI          */
*   /* SELECTIVITY FLAGS                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0390
*COMPPMSK:                                                         0390
*   REG3=16-INTCODE;                /* GET PI INT CODE               */
@RF00386 DS    0H                                                  0390
COMPPMSK L     @12,DATAPTR(,PREG)                                  0390
         LA    REG3,16                                             0390
         SLR   @06,@06                                             0390
         ICM   @06,3,INTCODE(@12)                                  0390
         SLR   REG3,@06                                            0390
*   N=1;                            /* GET CONSTANT TO RAISE TO POWER*/
         LA    N,1                                                 0391
*   GEN(SLL  N,0(REG3));            /* COMPUTE 2 EXP (16 - INT CODE) */
         SLL  N,0(REG3)
*   SHFTIND=N;                      /* STORE RESULT                  */
         ST    N,SHFTIND                                           0393
*   RFY                                                            0394
*     N UNRSTD;                                                    0394
*                                                                  0394
*   /*****************************************************************/
*   /*                                                               */
*   /* BRANCH HERE TO MAKE PI SELECTION - AND SELECTION MASK WITH PI */
*   /* STRING IN AMDPRTAB                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0395
*TESTSTNG:                                                         0395
*   PIIND=PIIND&PICODES;                                           0395
TESTSTNG NC    PIIND(2),PICODES(AEDITCBR)                          0395
*   IF PIIND='0000'X THEN           /* IF RESULT IS ZERO,            */
         CLC   PIIND(2),@CB00214                                   0396
         BE    @RT00396                                            0396
*     GO TO SETRET8;                /* THIS RECORD IS NOT TO BE    0397
*                                      FORMATED, GO SET CODE 8 AND 0397
*                                      RETURN TO AMDPRAPP            */
*SELPIPAT:                                                         0398
*   IF PITCB=NOTAPP THEN            /* N/A IN TCB ?                  */
SELPIPAT L     @12,DATAPTR(,PREG)                                  0398
         CLC   PITCB(4,@12),@CC00341                               0398
         BNE   @RF00398                                            0398
*     REG0=ADDR(PGMERRF);           /* USE THIS FORMAT               */
         LA    REG0,PGMERRF                                        0399
*   ELSE                                                           0400
*     REG0=ADDR(PGMF);              /* POINT TO PGM SYS FMTPTRN      */
         B     @RC00398                                            0400
@RF00398 LA    REG0,PGMF                                           0400
*   GO TO FORMAT;                   /* RTN CALLS FORMAT RTN          */
         B     FORMAT                                              0401
*RNIORTN:                                                          0402
*   IF SYSM='0'B&                   /* ALL EVENTS FORMATTED?         */
*       RNIO='0'B THEN              /* RNIO EVENTS FORMATTED?        */
RNIORTN  TM    SYSM(AEDITCBR),B'00011000'                          0402
         BZ    @RT00402                                            0402
*     GOTO SETRET8;                 /* NO, THEN SKIP RECORD          */
*                                                                  0403
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR RECORD ? BRANCH TO DUMP IN HEX                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0404
*   IF DATA(1:2)='EEEE'X THEN                                      0404
@RF00402 L     @12,DATAPTR(,PREG)                                  0404
         CLC   DATA(2,@12),@CB00606                                0404
         BE    @RT00404                                            0404
*     GOTO CALLHEX;                                                0405
*   IF RNIOBTU(1:4)=ASTERR          /* ERROR IN BTU FLD              */
*     THEN                                                         0406
         CLC   RNIOBTU(4,@12),@CC00339                             0406
         BNE   @RF00406                                            0406
*     DO;                                                          0407
*       IF RNIOASCB=ASTERR          /* ASCB ERROR                    */
*         THEN                                                     0408
         CLC   RNIOASCB(4,@12),@CC00339                            0408
         BNE   @RF00408                                            0408
*         REG0=ADDR(RNIOERR2);                                     0409
         LA    REG0,RNIOERR2                                       0409
*       ELSE                                                       0410
*         REG0=ADDR(RNIOERRF);      /* POINT TO ERR FMT              */
         B     @RC00408                                            0410
@RF00408 LA    REG0,RNIOERRF                                       0410
*     END;                                                         0411
*   ELSE                                                           0412
*     DO;                                                          0412
         B     @RC00406                                            0412
@RF00406 DS    0H                                                  0413
*       IF RNIOASCB=ASTERR THEN     /* ASCB ERROR            @ZM30923*/
         L     @12,DATAPTR(,PREG)                                  0413
         CLC   RNIOASCB(4,@12),@CC00339                            0413
         BNE   @RF00413                                            0413
*         IF RNIOR0=0 THEN          /*                       @Z40KI3O*/
         ICM   @06,15,RNIOR0(@12)                                  0414
         BNZ   @RF00414                                            0414
*           REG0=ADDR(BTU00E);      /*                       @Z40KI3O*/
         LA    REG0,BTU00E                                         0415
*         ELSE                                                     0416
*           IF RNIOR0>=20 THEN      /*                       @Z40KI3O*/
         B     @RC00414                                            0416
@RF00414 L     @12,DATAPTR(,PREG)                                  0416
         CLC   RNIOR0(4,@12),@CF00130                              0416
         BL    @RF00416                                            0416
*             REG0=ADDR(BTU20E);    /*                       @Y30AI3P*/
         LA    REG0,BTU20E                                         0417
*           ELSE                                                   0418
*             REG0=BTUEPTR(RNIOR0); /*                       @Z40KI3O*/
         B     @RC00416                                            0418
@RF00416 L     @12,DATAPTR(,PREG)                                  0418
         ICM   @06,15,RNIOR0(@12)                                  0418
         SLL   @06,2                                               0418
         L     REG0,BTUEPTR-4(@06)                                 0418
*       ELSE                                                       0419
*         IF RNIOR0=0 THEN          /*                       @Z40KI3O*/
         B     @RC00413                                            0419
@RF00413 L     @12,DATAPTR(,PREG)                                  0419
         ICM   @06,15,RNIOR0(@12)                                  0419
         BNZ   @RF00419                                            0419
*           REG0=ADDR(BTU00);       /*                       @Z40KI3O*/
         LA    REG0,BTU00                                          0420
*         ELSE                                                     0421
*           IF RNIOR0>=20 THEN      /*                       @Z40KI3O*/
         B     @RC00419                                            0421
@RF00419 L     @12,DATAPTR(,PREG)                                  0421
         CLC   RNIOR0(4,@12),@CF00130                              0421
         BL    @RF00421                                            0421
*             REG0=ADDR(BTU20);     /*                       @Y30AI3P*/
         LA    REG0,BTU20                                          0422
*           ELSE                                                   0423
*             REG0=BTUPTR(RNIOR0);  /*                       @Z40KI3O*/
         B     @RC00421                                            0423
@RF00421 L     @12,DATAPTR(,PREG)                                  0423
         ICM   @06,15,RNIOR0(@12)                                  0423
         SLL   @06,2                                               0423
         L     REG0,BTUPTR-4(@06)                                  0423
*     END;                                                         0424
@RC00421 DS    0H                                                  0424
@RC00419 DS    0H                                                  0424
@RC00413 DS    0H                                                  0425
*   IF EID=IMDMTP2                  /* EVENT BTU OUT?        @YM01487*/
*     THEN                                                         0425
@RC00406 L     @12,EIDPTR(,PREG)                                   0425
         CLC   EID(2,@12),@CB00232                                 0425
         BNE   @RF00425                                            0425
*     LABPT=ADDR(OUTLAB);           /* FORMAT WITH OUT LABEL         */
         L     @12,ABDPLPTR(,PREG)                                 0426
         LA    @06,OUTLAB                                          0426
         ST    @06,LABPT(,@12)                                     0426
*   ELSE                                                           0427
*     LABPT=ADDR(INLAB);            /* FORMAT WITH IN LABEL          */
         B     @RC00425                                            0427
@RF00425 L     @12,ABDPLPTR(,PREG)                                 0427
         LA    @06,INLAB                                           0427
         ST    @06,LABPT(,@12)                                     0427
*   GOTO FORMAT;                    /* RTN WHICH FORMATS RECORD      */
         B     FORMAT                                              0428
*SRMRTN:                                                           0429
*   IF SYSM='0'B&                   /* SELECT ALL EVENTS ?           */
*       SRM='0'B THEN               /* SELECT SRM EVENTS ?           */
SRMRTN   TM    SYSM(AEDITCBR),B'00010100'                          0429
         BZ    @RT00429                                            0429
*     GOTO SETRET8;                 /* NO, THEN SKIP RECORD          */
*                                                                  0430
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RECORD CONTAINS ERROR INDICATOR, BRANCH TO DUMP RECORD IN  */
*   /* HEX FORMAT                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0431
*   IF DATA(1:2)='EEEE'X THEN                                      0431
@RF00429 L     @12,DATAPTR(,PREG)                                  0431
         CLC   DATA(2,@12),@CB00606                                0431
         BE    @RT00431                                            0431
*     GO TO CALLHEX;                                               0432
*   IF SRMASCB=ASTERR               /* ASCB CONTAINS ASTERISKS       */
*     THEN                                                         0433
         CLC   SRMASCB(4,@12),@CC00339                             0433
         BNE   @RF00433                                            0433
*     REG0=ADDR(SRMERRF);           /* ERROR FMT                     */
         LA    REG0,SRMERRF                                        0434
*   ELSE                                                           0435
*     REG0=ADDR(SRMF);              /* STND SRM FMT                  */
         B     @RC00433                                            0435
@RF00433 LA    REG0,SRMF                                           0435
*   GOTO FORMAT;                    /* GO FORMAT RECORD              */
         B     FORMAT                                              0436
*RRRTN:                                                            0437
*   IF SYSM='0'B&                   /* SELECT ALL EVENTS             */
*       RR='0'B THEN                /* SELECT RECOVERY RTN EVENTS    */
RRRTN    TM    SYSM(AEDITCBR),B'00010010'                          0437
         BZ    @RT00437                                            0437
*     GOTO SETRET8;                 /* NO, THEN SKIP RECORD          */
*                                                                  0438
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ERROR RECORD, DUMP IN HEX                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0439
*   IF DATA(1:2)='EEEE'X THEN                                      0439
@RF00437 L     @12,DATAPTR(,PREG)                                  0439
         CLC   DATA(2,@12),@CB00606                                0439
         BE    @RT00439                                            0439
*     GOTO CALLHEX;                                                0440
*   IF EID=IMDMSTAE THEN                                           0441
         L     @12,EIDPTR(,PREG)                                   0441
         CLC   EID(2,@12),@CB00226                                 0441
         BE    @RT00441                                            0441
*     GO TO STAERTN;                /* TEST FOR STAE                 */
*                                                                  0442
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS RTN FORMATS FRR EVENTS                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0443
*FRRRTN:                                                           0443
*   IF FRRPSW(1:4)=ASTERR THEN                                     0443
FRRRTN   L     @12,DATAPTR(,PREG)                                  0443
         CLC   FRRPSW(4,@12),@CC00339                              0443
         BNE   @RF00443                                            0443
*     DO;                           /* ERROR IN RTCA FLDS            */
*       REG0=ADDR(FRRERRF);         /* POINT TO ERR EBCIDIC FMT      */
         LA    REG0,FRRERRF                                        0445
*       GOTO FORMAT;                                               0446
         B     FORMAT                                              0446
*     END;                                                         0447
*   IF FRRETRY=NOTAPP               /* RETRY NOT APP                 */
*     THEN                                                         0448
@RF00443 L     @12,DATAPTR(,PREG)                                  0448
         CLC   FRRETRY(4,@12),@CC00341                             0448
         BNE   @RF00448                                            0448
*     REG0=ADDR(FRRNAF);            /* NOT APP RET FMT               */
         LA    REG0,FRRNAF                                         0449
*   ELSE                                                           0450
*     REG0=ADDR(FRRSTDF);           /* STND FRR FMT                  */
         B     @RC00448                                            0450
@RF00448 LA    REG0,FRRSTDF                                        0450
*   DATAPT=ADDR(FRRETRY);           /* SET UP DATA PTR               */
@RC00448 L     @12,ABDPLPTR(,PREG)                                 0451
         L     @06,DATAPTR(,PREG)                                  0451
         LA    @06,FRRETRY(,@06)                                   0451
         ST    @06,DATAPT(,@12)                                    0451
*   REG1=ABDPLPTR;                  /* POINT TO EXIT LIST            */
         LR    REG1,@12                                            0452
*   CALL AMDPRFMT;                  /* CALL FORMATTING RTN           */
         L     @15,ADPLFRMT(,@12)                                  0453
         BALR  @14,@15                                             0453
*   IF FRRASCB=ASTERR               /* ASCB ERROR                    */
*     THEN                                                         0454
         L     @12,DATAPTR(,PREG)                                  0454
         CLC   FRRASCB(4,@12),@CC00339                             0454
         BNE   @RF00454                                            0454
*     REG0=ADDR(FRRERR1);                                          0455
         LA    REG0,FRRERR1                                        0455
*   ELSE                                                           0456
*     REG0=ADDR(FRRF);              /* FORMAT STND PART OF REC       */
         B     @RC00454                                            0456
@RF00454 LA    REG0,FRRF                                           0456
*   GOTO FORMAT;                                                   0457
         B     FORMAT                                              0457
*STAERTN:                                                          0458
*   IF STAEPSW=UNAVAL               /* RTCA DATA HAS U/A             */
*     THEN                                                         0458
STAERTN  L     @12,DATAPTR(,PREG)                                  0458
         CLC   STAEPSW(4,@12),@CC00343                             0458
         BNE   @RF00458                                            0458
*     DO;                                                          0459
*       REG0=ADDR(STAR10F);         /* WHEN R1=0 FORMAT              */
         LA    REG0,STAR10F                                        0460
*       GOTO FORMAT;                /* FORMAT RECORD                 */
         B     FORMAT                                              0461
*     END;                                                         0462
*   IF RTCAPTR>0                    /* COMPLEMENTED RTCA             */
*     THEN                                                         0463
@RF00458 L     @12,DATAPTR(,PREG)                                  0463
         ICM   @06,15,RTCAPTR(@12)                                 0463
         BNP   @RF00463                                            0463
*     DO;                           /* ESTAE TYPE FORMATTING         */
*                                                                  0464
*       /*************************************************************/
*       /*                                                           */
*       /* FORMAT ESTAE RECORD                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0465
*       IF STAEPSW(1:4)=ASTERR      /* ERROR IN PSW FLD              */
*         THEN                                                     0465
         CLC   STAEPSW(4,@12),@CC00339                             0465
         BNE   @RF00465                                            0465
*         DO;                                                      0466
*           REG0=ADDR(ESTAERF);     /* ERROR ESTAE FMT               */
         LA    REG0,ESTAERF                                        0467
*           GOTO FORMAT;                                           0468
         B     FORMAT                                              0468
*         END;                                                     0469
*       IF STARTYA=NOTAPP           /* RETRY FLD HAS N/A             */
*         THEN                                                     0470
@RF00465 L     @12,DATAPTR(,PREG)                                  0470
         CLC   STARTYA(4,@12),@CC00341                             0470
         BNE   @RF00470                                            0470
*         REG0=ADDR(ESTANAF);       /* POINT TO N/A FMT ESTAE        */
         LA    REG0,ESTANAF                                        0471
*       ELSE                                                       0472
*         REG0=ADDR(ESTASTDF);      /* POINT TO STD FMT ESTAE        */
         B     @RC00470                                            0472
@RF00470 LA    REG0,ESTASTDF                                       0472
*       GOTO FORMAT;                /* FMT NON-ERROR ESTAE FMT       */
         B     FORMAT                                              0473
*     END;                                                         0474
*   IF STAEPSW(1:4)=ASTERR THEN                                    0475
@RF00463 L     @12,DATAPTR(,PREG)                                  0475
         CLC   STAEPSW(4,@12),@CC00339                             0475
         BNE   @RF00475                                            0475
*     REG0=ADDR(STAEERF);           /* ERROR STAE FMT                */
         LA    REG0,STAEERF                                        0476
*   ELSE                                                           0477
*     REG0=ADDR(STAF);              /* REGULAR STAE FMT              */
         B     @RC00475                                            0477
@RF00475 LA    REG0,STAF                                           0477
*   DATAPT=DATAPTR;                                                0478
@RC00475 L     @12,ABDPLPTR(,PREG)                                 0478
         L     @06,DATAPTR(,PREG)                                  0478
         ST    @06,DATAPT(,@12)                                    0478
*   REG1=ABDPLPTR;                                                 0479
         LR    REG1,@12                                            0479
*   CALL AMDPRFMT;                                                 0480
         L     @15,ADPLFRMT(,@12)                                  0480
         BALR  @14,@15                                             0480
*   IF STARTYA=NOTAPP THEN                                         0481
         L     @12,DATAPTR(,PREG)                                  0481
         CLC   STARTYA(4,@12),@CC00341                             0481
         BNE   @RF00481                                            0481
*     REG0=ADDR(STANAF);            /* POINT TO N/A FMT STAE         */
         LA    REG0,STANAF                                         0482
*   ELSE                                                           0483
*     REG0=ADDR(STASTDF);           /* POINT TO STD FMT STAE         */
         B     @RC00481                                            0483
@RF00481 LA    REG0,STASTDF                                        0483
*   DATAPT=ADDR(STARTYA);                                          0484
@RC00481 L     @12,ABDPLPTR(,PREG)                                 0484
         L     @06,DATAPTR(,PREG)                                  0484
         LA    @06,STARTYA(,@06)                                   0484
         ST    @06,DATAPT(,@12)                                    0484
*   REG1=ABDPLPTR;                                                 0485
         LR    REG1,@12                                            0485
*   CALL AMDPRFMT;                                                 0486
         L     @15,ADPLFRMT(,@12)                                  0486
         BALR  @14,@15                                             0486
*   GOTO EXITRTN;                                                  0487
         B     EXITRTN                                             0487
*   END AMDSYS03                                                   0488
*                                                                  0488
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                       */
*                                                                  0488
*       ;                                                          0488
@DATA    DS    0H
@CH00658 DC    H'17'
@CH00595 DC    H'19'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@TF00001 DS    F
AMDSYS03 CSECT
         DS    0F
@CF00046 DC    F'1'
@CF00323 DC    F'18'
@CH00323 EQU   @CF00323+2
@CF00130 DC    F'20'
@CF00036 DC    F'31'
@CF00092 DC    F'32'
@CF00104 DC    F'50'
@DATD    DSECT
         DS    0D
WKAREA   DS    CL36
         ORG   WKAREA
TWOEXPN  DS    8F
SHFTIND  DS    CL4
         ORG   SHFTIND
@NM00004 DS    CL2
PIIND    DS    CL2
         ORG   WKAREA+36
AMDSYS03 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00339 DC    C'****'
@CC00341 DC    C'N/A '
@CC00343 DC    C'U/A '
@CC00611 DC    C'  '
@CB00210 DC    X'5200'
@CB00214 DC    X'0000'
@CB00224 DC    X'5101'
@CB00226 DC    X'4002'
@CB00232 DC    X'8200'
@CB00236 DC    X'0002'
@CB00239 DC    X'0004'
@CB00345 DC    X'1004'
@CB00606 DC    X'EEEE'
S03PTCH  DC    CL200'S03PTCH'
ROUTSEL  DS    CL8
         ORG   ROUTSEL+0
RTNEID   DC    X'5201'
         DS    CL2
RTNADDR  DC    AL4(UIORTN)
         ORG   ROUTSEL+8
         ORG   ROUTSEL+8
         DC    X'5200'
         DS    CL2
         DC    AL4(IORTN)
         ORG   ROUTSEL+16
         ORG   ROUTSEL+16
         DC    X'2100'
         DS    CL2
         DC    AL4(IORTN)
         ORG   ROUTSEL+24
         ORG   ROUTSEL+24
         DC    X'5100'
         DS    CL2
         DC    AL4(SIORTN)
         ORG   ROUTSEL+32
         ORG   ROUTSEL+32
         DC    X'5101'
         DS    CL2
         DC    AL4(IORTN)
         ORG   ROUTSEL+40
         ORG   ROUTSEL+40
         DC    X'0001'
         DS    CL2
         DC    AL4(SRBRTN)
         ORG   ROUTSEL+48
         ORG   ROUTSEL+48
         DC    X'0002'
         DS    CL2
         DC    AL4(DSPRTN)
         ORG   ROUTSEL+56
         ORG   ROUTSEL+56
         DC    X'0003'
         DS    CL2
         DC    AL4(DSPRTN)
         ORG   ROUTSEL+64
         ORG   ROUTSEL+64
         DC    X'0004'
         DS    CL2
         DC    AL4(DSPRTN)
         ORG   ROUTSEL+72
         ORG   ROUTSEL+72
         DC    X'1000'
         DS    CL2
         DC    AL4(SVCRTN)
         ORG   ROUTSEL+80
         ORG   ROUTSEL+80
         DC    X'6101'
         DS    CL2
         DC    AL4(PIRTN)
         ORG   ROUTSEL+88
         ORG   ROUTSEL+88
         DC    X'6200'
         DS    CL2
         DC    AL4(PIRTN)
         ORG   ROUTSEL+96
         ORG   ROUTSEL+96
         DC    X'8100'
         DS    CL2
         DC    AL4(RNIORTN)
         ORG   ROUTSEL+104
         ORG   ROUTSEL+104
         DC    X'8200'
         DS    CL2
         DC    AL4(RNIORTN)
         ORG   ROUTSEL+112
         ORG   ROUTSEL+112
         DC    X'6201'
         DS    CL2
         DC    AL4(EXTRTN)
         ORG   ROUTSEL+120
         ORG   ROUTSEL+120
         DC    X'4001'
         DS    CL2
         DC    AL4(SRMRTN)
         ORG   ROUTSEL+128
         ORG   ROUTSEL+128
         DC    X'4002'
         DS    CL2
         DC    AL4(RRRTN)
         ORG   ROUTSEL+136
         ORG   ROUTSEL+136
         DC    X'4003'
         DS    CL2
         DC    AL4(RRRTN)
         ORG   ROUTSEL+144
BTUPTR   DC    AL4(BTU01)
         DC    AL4(BTU02)
         DC    AL4(BTU03)
         DC    AL4(BTU04)
         DC    AL4(BTU05)
         DC    AL4(BTU06)
         DC    AL4(BTU07)
         DC    AL4(BTU08)
         DC    AL4(BTU09)
         DC    AL4(BTU10)
         DC    AL4(BTU11)
         DC    AL4(BTU12)
         DC    AL4(BTU13)
         DC    AL4(BTU14)
         DC    AL4(BTU15)
         DC    AL4(BTU16)
         DC    AL4(BTU17)
         DC    AL4(BTU18)
         DC    AL4(BTU19)
BTUEPTR  DC    AL4(BTU01E)
         DC    AL4(BTU02E)
         DC    AL4(BTU03E)
         DC    AL4(BTU04E)
         DC    AL4(BTU05E)
         DC    AL4(BTU06E)
         DC    AL4(BTU07E)
         DC    AL4(BTU08E)
         DC    AL4(BTU09E)
         DC    AL4(BTU10E)
         DC    AL4(BTU11E)
         DC    AL4(BTU12E)
         DC    AL4(BTU13E)
         DC    AL4(BTU14E)
         DC    AL4(BTU15E)
         DC    AL4(BTU16E)
         DC    AL4(BTU17E)
         DC    AL4(BTU18E)
         DC    AL4(BTU19E)
AMDSYS03 CSECT
***  FORMAT FOR ERROR IO FORMAT
IOERRF0  FMTPTRN (LBL),3,,0                            LABEL
         FMTPTRN (LBL,LBLP,DTAC,DTA,DTAE),4,4,5,10,IOGENLAB  ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,57        TCB
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892
      FMTPTRN  (DTAC,DTA),,4,,94                CSW
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,2,104,108           SENSE
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75              DEV ADD
         FMTPTRN  (DTAP,DTAC,DTA,DTAE),,2,,109,,SLASHA,LAST /A IN SENSE
IOERRF1  FMTPTRN (LBL),3,,0                            LABEL
         FMTPTRN (LBL,LBLP,DTAC,DTA,DTAE),4,4,5,10,IOGENLAB  ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,57        TCB
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892
      FMTPTRN  (DTAC,DTA),,4,,94                CSW
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,2,104,108           SENSE
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD
IOERRF2  FMTPTRN (LBL),3,,0                            LABEL
         FMTPTRN (LBL,LBLP,DTAC,DTA,DTAE),4,4,5,10,IOGENLAB  ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,57        TCB
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892
      FMTPTRN  (DTAC,DTA),,4,,94                CSW
         FMTPTRN (LBL,DTAC,DTA),3,2,104,75   SKIP  SENSE
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD
IOERRF3  FMTPTRN (LBL),3,,0                            LABEL
         FMTPTRN (LBL,LBLP,DTAC,DTA,DTAE),4,4,5,10,IOGENLAB  ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,94        SKIP TCB,LABEL ONLY
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892
      FMTPTRN  (DTAC,DTA),,4,,94                CSW
         FMTPTRN (LBL,DTAC,DTA),3,2,104,75    SKIP  SENSE
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD
IOERRF4  FMTPTRN (LBL),3,,0                            LABEL
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,IOGENLAB  ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24              CPU
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,94    SKIP TCB, LABEL ONLY
         FMTPTRN  (LBL,DTAC,DTA),3,4,81,85      CSW            @YM01892
      FMTPTRN  (DTAC,DTA),,4,,94                CSW
         FMTPTRN (LBL,DTAC,DTA),3,2,104,75    SKIP  SENSE
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD
***  FORMAT FOR SIO RECORD
SIOF     FMTPTRN (LBL,LBLP),3,,0,,SIOLAB               LABEL
         FMTPTRN (LBL,DTAC,DTA),4,4,5,10               ASCB
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             CPA
         FMTPTRN  (DTAC,DTA),,4,,43             CPA
         FMTPTRN  (LBL,DTAC,DTA),2,1,94,96       CC
         FMTPTRN  (LBL,DTAC,DTA),1,1,96,75   SKIP BYTE AND BLANK ILC
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75             DEV ADD
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             CAW
         FMTPTRN  (LBL,DTAC,DTA),6,2,81,88,,,LAST      STATUS
SIOERRF  FMTPTRN (LBL,LBLP),3,,0,,SIOLAB               LABEL
         FMTPTRN (LBL,DTAC,DTAE,DTA),4,4,5,10               ASCB
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU
         FMTPTRN  (LBL,DTAC,DTAE,DTA),3,8,30,34             CPA
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,1,94,97             CC
         FMTPTRN  (DTA,DTAC),,1,,75         SKIP A BYTE
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75             DEV ADD
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             CAW
         FMTPTRN  (LBL,DTAC,DTA),6,2,81,88             STATUS
         FMTPTRN  (DTAE,DTAP,DTAC,DTA),,2,,98,,SLASHA,LAST '/A' IN CC
SIOERRF2 FMTPTRN (LBL,LBLP),3,,0,,SIOLAB               LABEL
         FMTPTRN (LBL,DTAC,DTAE,DTA),4,4,5,10               ASCB
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU
         FMTPTRN  (LBL,DTAC,DTAE,DTA),3,8,30,34             CPA
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,1,94,97             CC
         FMTPTRN  (DTA,DTAC),,1,,75         SKIP A BYTE
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75             DEV ADD
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             CAW
         FMTPTRN  (LBL,DTAC,DTA),6,2,81,88,,,LAST     STATUS
***  FORMAT FOR UIO RECORD.
UIOF  FMTPTRN  (LBLP,LBL),3,,0,,UIOLAB                 LABEL
      FMTPTRN  (LBL,DTAC,DTA,DTAE),4,4,5,10            ASCB
      FMTPTRN  (LBL,DTAC,DTA),3,2,20,24                CPU
      FMTPTRN  (LBL,DTAC,DTA),3,4,30,34                PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
      FMTPTRN  (LBL,DTAC,DTA),3,4,67,71         CSW
      FMTPTRN  (DTAC,DTA),,4,,80         CSW
     FMTPTRN  (DTA,DTAE,DTAC),,2,,61    SKIP 2 BYTES OF DATA
      FMTPTRN  (LBL,DTAC,DTA),7,2,53,61,,,LAST         DEVICE ADDR
***  FORMAT FOR IO RECORD
IOTCBNA FMTPTRN (DTA,DTAC,DTAE),,4,,57,,,LAST  N/A OR **** TCB
IOTCBOK FMTPTRN (DTA,DTAC),,4,,57,,,LAST  TCB
IOSNSNA FMTPTRN (DTA,DTAC,DTAE),,3,,108,,,LAST  N/A SENSE
IOSNSOK FMTPTRN (DTA,DTAC),,2,,108,,,LAST  SENSE
IOF  FMTPTRN (LBL),3,,0                                LABEL
     FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,IOGENLAB     ASCB
     FMTPTRN (LBL,DTAC,DTA),3,2,20,24                 CPU
     FMTPTRN (LBL,DTAC,DTA),3,4,30,34                  PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
     FMTPTRN (LBL,DTAC,DTA),3,4,53,94          SKIP TCB, LABEL ONLY
    FMTPTRN (LBL,DTAC,DTA),3,4,81,85     CSW                 @YM04519
      FMTPTRN  (DTAC,DTA),,4,,94                CSW
       FMTPTRN  (DTAE,DTAC,DTA,LBL),3,2,104,75     SENSE     @YM04519
         FMTPTRN  (LBL,DTAC,DTA),7,2,67,75,,,LAST       DEV ADD
EXTERRF  FMTPTRN (LBLP,LBL),3,,0,,EXTLAB         LABEL
         FMTPTRN (LBL,DTAC,DTA),4,4,5,10         ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24        CPU
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34        PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,53,57,,,LAST   TCB
EXTSTDF  FMTPTRN (LBLP,LBL),3,,0,,EXTLAB         LABEL
         FMTPTRN (LBL,DTAC,DTA),4,4,5,10         ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24        CPU
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34        PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN (LBL,DTAC,DTA),3,4,53,57,,,LAST   TCB
EXTCCERF FMTPTRN (LBLP,LBL,DTA,DTAC,DTAE),7,4,67,75,CLKCLAB,,LAST
EXTCCF   FMTPTRN (LBLP,LBL,DTA,DTAC),7,4,67,75,CLKCLAB,,LAST
EXTSGPEF FMTPTRN  (LBLP,LBL,DTA,DTAC,DTAE),7,2,67,75,SIGPLAB,,LAST
EXTSGPF  FMTPTRN  (LBLP,LBL,DTA,DTAC),7,2,67,75,SIGPLAB,,LAST
SVCF     FMTPTRN  (LBLP,LBL),3,,0,,SVCLAB     LABEL
         FMTPTRN  (LBL,DTAC,DTA),4,4,5,10              ASCB
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             TCB
         FMTPTRN  (LBL,DTAC,DTA),3,4,67,71             R15
         FMTPTRN  (LBL,DTAC,DTA),2,4,81,84             RO
         FMTPTRN  (LBL,DTAC,DTA),2,4,94,97,,,LAST      R1
PGMF     FMTPTRN  (LBL,LBLP),2,,0,,PILAB        LABEL
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10        ASCB
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24       CPU
         FMTPTRN  (LBL,DTA,DTAC),3,4,30,34       PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN  (LBL,DTA,DTAC),3,4,53,57       TCB
         FMTPTRN  (LBL,DTA,DTAC),3,4,67,71         /* VPA   @YM06815 */
         FMTPTRN  (LBL,DTA,DTAC),3,4,81,85         /* R15   @YM06815 */
         FMTPTRN  (LBL,DTA,DTAC),2,4,95,98,,,LAST  /* R1    @YM06815 */
PGMERRF     FMTPTRN  (LBL,LBLP),2,,0,,PILAB        LABEL
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10        ASCB
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24       CPU
         FMTPTRN  (LBL,DTA,DTAC),3,4,30,34       PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,4,53,57       TCB
         FMTPTRN  (LBL,DTA,DTAC),3,4,67,71         /* VPA   @YM06815 */
         FMTPTRN  (LBL,DTA,DTAC),3,4,81,85         /* R15   @YM06815 */
         FMTPTRN  (LBL,DTA,DTAC),2,4,95,98,,,LAST  /* R1    @YM06815 */
*   RNIO BTU HAS ASTERISKS
RNIOERRF FMTPTRN  (LBL,DTA,DTAC),9,4,0,10 /* HEADER AND ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24    /*  CPU        @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC,DTAE),7,14,43,51,,,LAST /*BTU@Z40KI3O*/
*   RNIO ASCB AND BTU HAVE ASTERISKS
RNIOERR2 FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10 /* HDR & ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24    /*  CPU        @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC,DTAE),7,14,43,51,,,LAST /*BTU@Z40KI3O*/
* RNIO ASCB HAS **** AND 00 BYTES OF BTU DATA
BTU00E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL),7,,43,,,,LAST             /*  BTU    @Z40KI3O*/
* RNIO NORMAL WITH 00 BYTES OF BTU DATA
BTU00    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL),7,,43,,,,LAST             /*  BTU    @Z40KI3O*/
* RNIO ASCB HAS **** AND 01 BYTES OF BTU DATA
BTU01E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,1,43,51,,,LAST /*  BTU    @Z40KI3O*/
* RNIO NORMAL WITH 01 BYTES OF BTU DATA
BTU01    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,1,43,51,,,LAST /*  BTU    @Z40KI3O*/
* RNIO ASCB HAS **** AND 02 BYTES OF BTU DATA
BTU02E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,2,43,51,,,LAST /*  BTU    @Z40KI3O*/
* RNIO NORMAL WITH 02 BYTES OF BTU DATA
BTU02    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,2,43,51,,,LAST /*  BTU    @Z40KI3O*/
* RNIO ASCB HAS **** AND 03 BYTES OF BTU DATA
BTU03E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,3,43,51,,,LAST /*  BTU    @Z40KI3O*/
* RNIO NORMAL WITH 03 BYTES OF BTU DATA
BTU03    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,3,43,51,,,LAST /*  BTU    @Z40KI3O*/
* RNIO ASCB HAS **** AND 04 BYTES OF BTU DATA
BTU04E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,LAST /*  BTU    @Z40KI3O*/
* RNIO NORMAL WITH 04 BYTES OF BTU DATA
BTU04    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,LAST /*  BTU    @Z40KI3O*/
* RNIO ASCB HAS **** AND 05 BYTES OF BTU DATA
BTU05E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,1,,60,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 05 BYTES OF BTU DATA
BTU05    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,1,,60,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 06 BYTES OF BTU DATA
BTU06E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,2,,60,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 06 BYTES OF BTU DATA
BTU06    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,2,,60,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 07 BYTES OF BTU DATA
BTU07E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,3,,60,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 07 BYTES OF BTU DATA
BTU07    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,3,,60,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 08 BYTES OF BTU DATA
BTU08E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 08 BYTES OF BTU DATA
BTU08    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 09 BYTES OF BTU DATA
BTU09E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,1,,69,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 09 BYTES OF BTU DATA
BTU09    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,1,,69,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 10 BYTES OF BTU DATA                  @Z40KI3O
BTU10E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,2,,69,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 10 BYTES OF BTU DATA                        @Z40KI3O
BTU10    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,2,,69,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 11 BYTES OF BTU DATA                  @Z40KI3O
BTU11E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,3,,69,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 11 BYTES OF BTU DATA                        @Z40KI3O
BTU11    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,3,,69,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 12 BYTES OF BTU DATA                  @Z40KI3O
BTU12E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 12 BYTES OF BTU DATA                        @Z40KI3O
BTU12    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 13 BYTES OF BTU DATA                  @Z40KI3O
BTU13E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,1,,78,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 13 BYTES OF BTU DATA                        @Z40KI3O
BTU13    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,1,,78,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 14 BYTES OF BTU DATA                  @Z40KI3O
BTU14E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,2,,78,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 14 BYTES OF BTU DATA                        @Z40KI3O
BTU14    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,2,,78,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 15 BYTES OF BTU DATA                  @Z40KI3O
BTU15E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,3,,78,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 15 BYTES OF BTU DATA                        @Z40KI3O
BTU15    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,3,,78,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 16 BYTES OF BTU DATA                  @Z40KI3O
BTU16E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 16 BYTES OF BTU DATA                        @Z40KI3O
BTU16    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 17 BYTES OF BTU DATA                  @Z40KI3O
BTU17E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,1,,87,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 17 BYTES OF BTU DATA                        @Z40KI3O
BTU17    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,1,,87,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 18 BYTES OF BTU DATA                  @Z40KI3O
BTU18E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,2,,87,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 18 BYTES OF BTU DATA                        @Z40KI3O
BTU18    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,2,,87,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 19 BYTES OF BTU DATA                  @Z40KI3O
BTU19E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,3,,87,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 19 BYTES OF BTU DATA                        @Z40KI3O
BTU19    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,3,,87,,,LAST        /*         @Z40KI3O*/
* RNIO ASCB HAS **** AND 20 BYTES OF BTU DATA                  @Z40KI3O
BTU20E   FMTPTRN  (LBL,DTA,DTAC,DTAE),9,4,0,10,,, /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,87,,,LAST        /*         @Z40KI3O*/
* RNIO NORMAL WITH 20 BYTES OF BTU DATA                        @Z40KI3O
BTU20    FMTPTRN  (LBL,DTA,DTAC),9,4,0,10,,,      /*HDR&ASCB @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24,,,     /*  CPUID  @Z40KI3O*/
         FMTPTRN  (LBL,DTA,DTAC),7,4,43,51,,,     /*  BTU    @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,60,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,69,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,78,,,            /*         @Z40KI3O*/
         FMTPTRN  (DTA,DTAC),,4,,87,,,LAST        /*         @Z40KI3O*/
SRMF   FMTPTRN (LBL,LBLP),3,,0,,SRMLAB         LABEL
         FMTPTRN (LBL,DTAC,DTA),4,4,5,10     ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24    CPU
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34    R15
         FMTPTRN (LBL,DTAC,DTA),2,4,44,47    R0
         FMTPTRN (LBL,DTAC,DTA),2,4,57,60,,,LAST  R1
SRMERRF   FMTPTRN (LBL,LBLP),3,,0,,SRMLAB         LABEL
         FMTPTRN (LBL,DTAC,DTA,DTAE),4,4,5,10     ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24    CPU
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34    R15
         FMTPTRN (LBL,DTAC,DTA),2,4,44,47    R0
         FMTPTRN (LBL,DTAC,DTA),2,4,57,60,,,LAST  R1
DSPF     FMTPTRN (LBL),4,,0                                 LABEL
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,DSPGNLAB      ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24                   CPU
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34                   PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN (LBL,DTAC,DTA),3,4,53,57                   TCB
         FMTPTRN (LBL,DTAC,DTA),3,4,67,71                   R15
         FMTPTRN (LBL,DTAC,DTA),2,4,81,84                   R0
         FMTPTRN (LBL,DTAC,DTA),2,4,94,97,,,LAST            R1
DSPLSRF     FMTPTRN (LBL),4,,0                                 LABEL
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,DSPGNLAB      ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24                   CPU
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34                   PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,53,57                   TCB
         FMTPTRN (LBL,DTAC,DTA),3,4,67,71                   R15
         FMTPTRN (LBL,DTAC,DTA),2,4,81,84                   R0
         FMTPTRN (LBL,DTAC,DTA),2,4,94,97,,,LAST            R1
DSPERRF   FMTPTRN (LBL),4,,0                                 LABEL
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,DSPGNLAB      ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24                   CPU
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34                   PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN (LBL,DTAC,DTA),3,4,53,57                   TCB
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,67,71                   R15
         FMTPTRN (LBL,DTAC,DTA,DTAE),2,4,81,84                   R0
         FMTPTRN (LBL,DTAC,DTA,DTAE),2,4,94,97,,,LAST            R1
DSPELSR     FMTPTRN (LBL),4,,0                                 LABEL
         FMTPTRN (LBL,LBLP,DTAC,DTA),4,4,5,10,DSPGNLAB      ASCB
         FMTPTRN (LBL,DTAC,DTA),3,2,20,24                   CPU
         FMTPTRN (LBL,DTAC,DTA),3,4,30,34                   PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,53,57                   TCB
         FMTPTRN (LBL,DTAC,DTA,DTAE),3,4,67,71                   R15
         FMTPTRN (LBL,DTAC,DTA,DTAE),2,4,81,84                   R0
         FMTPTRN (LBL,DTAC,DTA,DTAE),2,4,94,97,,,LAST            R1
SRBSUPF  FMTPTRN (LBL),3,,0                            LABEL
         FMTPTRN (LBL,DTA,DTAC),4,4,5,10,                   ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,20,24                   CPU
         FMTPTRN (LBL,DTA,DTAC),3,4,30,34                   PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN (LBL,DTA,DTAC),3,4,67,71                   R15
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,53,57              SRB =N/A
         FMTPTRN (LBL,DTA,DTAC),2,4,81,84                   R1
         FMTPTRN   (LBL),4,,94,,,,LAST                 TYPE
SRBF     FMTPTRN  (LBL),6,,99                          G OR L
         FMTPTRN  (LBL,LBLP),3,,0,,SRBSLAB    LABEL
         FMTPTRN  (LBL,DTAC,DTA),4,4,5,10              ASCB
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW
         FMTPTRN  (DTAC,DTA),,4,,43             PSW
         FMTPTRN  (LBL,DTAC,DTA),3,4,67,71             R15
         FMTPTRN  (LBL,DTAC,DTA),3,4,53,57             SRB
         FMTPTRN  (LBL,DTAC,DTA),2,4,81,84             R1
         FMTPTRN   (LBL),4,,94,,,,LAST                 TYPE
SRBERRF    FMTPTRN  (LBL),6,,99                    G OR L      @YM01892
         FMTPTRN  (LBL,LBLP),3,,0,,SRBSLAB    LABEL            @YM01892
         FMTPTRN  (LBL,DTAC,DTA),4,4,5,10              ASCB    @YM01892
         FMTPTRN  (LBL,DTAC,DTA),3,2,20,24             CPU     @YM01892
         FMTPTRN  (LBL,DTAC,DTA),3,4,30,34             PSW     @YM01892
         FMTPTRN  (DTAC,DTA),,4,,43             PSW            @YM01892
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,67,71      R15       @YM01892
         FMTPTRN  (LBL,DTAC,DTA,DTAE),3,4,53,57       SRB      @YM01892
         FMTPTRN  (LBL,DTAC,DTA,DTAE),2,4,81,84       R1       @YM01892
         FMTPTRN   (LBL),4,,94,,,,LAST                 TYPE    @YM01892
FRRERRF  FMTPTRN  (LBL,LBLP),3,,0,,FRRLAB              FRR **** FMT
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,5,10         ASCB
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24             CPUID
         FMTPTRN (LBL,DTAE,DTA,DTAC),3,8,30,34         PSW
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,4,54,57        CC
         FMTPTRN  (LBL,DTA,DTAC,DTAE),4,4,67,72        ERRT
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,2,82,86        FLAGS
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,1,94,97        RC
         FMTPTRN  (LBL,DTA,DTAC,DTAE),5,4,101,107,,,LAST   RETRY
STAEERF  FMTPTRN  (LBLP,LBL),4,,0,,STAELAB        STAE ERROR FMT
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10         ASCB
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24        CPU
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,8,30,34   PSW
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,4,54,57   CC
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,67,71   FLAGS
         FMTPTRN  (LBL,DTA,DTAC),2,1,79,82,,,LAST   RC
STAF     FMTPTRN  (LBLP,LBL),4,,0,,STAELAB        STAE STANDARD FMT
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10         ASCB
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24        CPU
         FMTPTRN  (LBL,DTA,DTAC),3,4,30,34        PSW
         FMTPTRN  (DTA,DTAC),,4,,43               PSW
         FMTPTRN  (LBL,DTA,DTAC),2,4,54,57        CC
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,67,71        FLAGS
         FMTPTRN  (LBL,DTA,DTAC),2,1,79,82,,,LAST RC
STANAF   FMTPTRN  (LBLP,LBL,DTAC,DTA,DTAE),5,4,86,92,STA2LAB EBCDC RTRY
         FMTPTRN  (LBL,DTAC,DTA),4,4,102,107,,,LAST     RTCA
STASTDF  FMTPTRN  (LBLP,LBL,DTAC,DTA),5,4,86,92,STA2LAB HEXRETRY ADDR
         FMTPTRN  (LBL,DTAC,DTA),4,4,102,107,,,LAST     RTCA
STAR10F  FMTPTRN  (LBLP,LBL),4,,0,,STAELAB        RTCA DATA IS U/A
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10         ASCB
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24        CPU
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,8,30,34   PSW       EBCIDIC PSW
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,4,54,57   CC        EBCIDIC
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,67,71   FLG       EBCIDID
         FMTPTRN  (LBL,DTA,DTAC),2,1,79,82        RC        HEX
         FMTPTRN  (LBL,DTA,DTAC),5,4,86,92                  RETRY HEX
         FMTPTRN  (LBL,DTA,DTAC),4,4,102,107,,,LAST         RTCA  HEX
ESTAERF  FMTPTRN  (LBLP,LBL),4,,0,,STAELAB        ESTAE ERROR FMT
         FMTPTRN  (LBL,DTA,DTAC),4,4,5,10         ASCB
         FMTPTRN  (LBL,DTA,DTAC),3,2,20,24        CPU
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,8,30,34   PSW       EBCIDIC PSW
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,4,54,57   CC        EBCIDIC
         FMTPTRN  (LBL,DTA,DTAC,DTAE),3,3,67,71   FLG       EBCIDIC
         FMTPTRN  (LBL,DTA,DTAC,DTAE),2,1,79,82    RC      EB
         FMTPTRN  (LBL,DTA,DTAC,DTAE),5,4,86,92    RETRY
         FMTPTRN  (LBL,DTA,DTAC),4,4,102,107,,,LAST  RTCA
ESTANAF  FMTPTRN (LBLP,LBL),4,,0,,STAELAB     N/A ESTAE FMT
         FMTPTRN (LBL,DTA,DTAC),4,4,5,10               ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,20,24              CPUID
         FMTPTRN (LBL,DTA,DTAC),3,4,30,34              PSW
         FMTPTRN (DTA,DTAC),,4,,43                 PSW
         FMTPTRN (LBL,DTA,DTAC),2,4,54,57              COMPLETION CODE
         FMTPTRN (LBL,DTA,DTAC),3,3,67,71              FLG
         FMTPTRN (LBL,DTA,DTAC),2,1,79,82              RETURN CODE
         FMTPTRN (LBL,DTA,DTAC,DTAE),5,4,86,92          RETRY IS N/A
         FMTPTRN (LBL,DTA,DTAC),4,4,105,110,,,LAST    RTCA
ESTASTDF FMTPTRN (LBLP,LBL),4,,0,,STAELAB      ESTAE FMT
         FMTPTRN (LBL,DTA,DTAC),4,4,5,10               ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,20,24              CPUID
         FMTPTRN (LBL,DTA,DTAC),3,4,30,34              PSW
         FMTPTRN (DTA,DTAC),,4,,43                 PSW
         FMTPTRN (LBL,DTA,DTAC),2,4,54,57              COMPLETION CODE
         FMTPTRN (LBL,DTA,DTAC),3,3,67,71              FLG
         FMTPTRN (LBL,DTA,DTAC),2,1,79,82              RETURN CODE
         FMTPTRN (LBL,DTA,DTAC),5,4,86,92            RETRY IS HEX ADDR
         FMTPTRN (LBL,DTA,DTAC),4,4,105,110,,,LAST    RTCA
FRRNAF FMTPTRN   (LBL,LBLP,DTA,DTAC,DTAE),5,4,101,108,RETLAB,,LAST
FRRSTDF FMTPTRN (LBL,LBLP,DTA,DTAC),5,4,101,108,RETLAB,,LAST
FRRF FMTPTRN (LBL,LBLP),3,,0,,FRRLAB          FRR STND FMT
         FMTPTRN    (LBL,DTA,DTAC),4,4,5,10   ASCB
         FMTPTRN    (LBL,DTA,DTAC),3,2,20,24 CPUID
         FMTPTRN    (LBL,DTA,DTAC),3,4,30,34 PSW
         FMTPTRN    (DTA,DTAC),,4,,43        PSW
         FMTPTRN    (LBL,DTA,DTAC),2,4,54,57 CC
         FMTPTRN    (LBL,DTA,DTAC),4,4,67,72  ERRT
         FMTPTRN    (LBL,DTA,DTAC),3,2,82,86  FLAGS
         FMTPTRN    (LBL,DTA,DTAC),2,1,94,97,,,LAST   RC
FRRERR1 FMTPTRN (LBL,LBLP),3,,0,,FRRLAB          FRR STND FMT
         FMTPTRN    (LBL,DTA,DTAC,DTAE),4,4,5,10   ASCB
         FMTPTRN    (LBL,DTA,DTAC),3,2,20,24 CPUID
         FMTPTRN    (LBL,DTA,DTAC),3,4,30,34 PSW
         FMTPTRN    (DTA,DTAC),,4,,43        PSW
         FMTPTRN    (LBL,DTA,DTAC),2,4,54,57 CC
         FMTPTRN    (LBL,DTA,DTAC),4,4,67,72  ERRT
         FMTPTRN    (LBL,DTA,DTAC),3,2,82,86  FLAGS
         FMTPTRN    (LBL,DTA,DTAC),2,1,94,97,,,LAST   RC
UIOLAB   DC    C'UIOASCBCPUPSWCSWDEV ADD'
IOLAB    DC    C'IO '
PCILAB   DC    C'PCI'
EOSLAB   DC    C'EOS'
IOGENLAB DC    C'ASCBCPUPSWTCBCSWSNSDEV ADD'
SIOLAB   DC    C'SIOASCBCPUCPACC DEV ADDCAWSTATUS'
EXTLAB   DC    C'EXTASCBCPUPSWTCBR15R1'
CLKCLAB  DC    C'TQE TCB'
SIGPLAB  DC    C'INT CPU'
SVCLAB   DC    C'SVCASCBCPUPSWTCBR15R0R1'
PILAB    DC    C'PIASCBCPUPSWTCBVPAR15R1'          /*       @YM06815 */
OUTLAB   DC    C'RNIO ASCBCPU    OUTR0'           /*         @Z40KI3O*/
INLAB    DC    C'RNIO ASCBCPU     INR0'           /*         @Z40KI3O*/
SRMLAB   DC    C'SRMASCBCPUR15R0R1'
SDSPLAB  DC    C'SDSP'
LSRLAB   DC    C'LSR '
DSPLAB   DC    C'DSP '
DSPGNLAB DC    C'ASCBCPUPSWTCBR15R0R1'
SRBSLAB  DC    C'SRBASCBCPUPSWR15SRBR1TYPE SUSPENDED'
GLOBLAB  DC    C'GLOBAL'
LOCLAB   DC    C'LOCAL '
FRRLAB   DC    C'FRRASCBCPUPSWCCERRTFLGRCRETRY'
RETLAB   DC    C'RETRY'
STAELAB  DC    C'STAEASCBCPUPSWCCFLGRCRETRYRTCA'
STA2LAB  DC    C'RETRYRTCA'
SLASHA  DC   C'/A'
DTAE     EQU   32
DTAC     EQU   16
DTAP     EQU   8
DTA      EQU   4
LBLP     EQU   2
LBL      EQU   1
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
AMDSYS03 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
AEDITCBR EQU   @09
REG0     EQU   @00
REG1     EQU   @01
I        EQU   @05
REG3     EQU   @03
WORKPTR  EQU   @10
PREG     EQU   @08
N        EQU   @04
REG15    EQU   @15
         ENTRY S03PTCH
AMDPRTAB EQU   0
DEBGFLGS EQU   AMDPRTAB+8
PTHFLGS1 EQU   DEBGFLGS
PTHFLGS2 EQU   DEBGFLGS+1
INRFCFGS EQU   DEBGFLGS+2
IOFLGS   EQU   DEBGFLGS+3
STARTIME EQU   AMDPRTAB+40
STOPTIME EQU   AMDPRTAB+52
NAMES    EQU   AMDPRTAB+64
ADS      EQU   AMDPRTAB+104
AADS     EQU   ADS
SIF      EQU   AMDPRTAB+124
SIOFLGS  EQU   SIF
DVADS1   EQU   AMDPRTAB+128
IO       EQU   AMDPRTAB+228
IOFLGS2  EQU   IO
DVADS2   EQU   AMDPRTAB+232
VCF      EQU   AMDPRTAB+332
SVCFLGS  EQU   VCF
ALLV     EQU   SVCFLGS
SELV     EQU   SVCFLGS
SVCNUMS  EQU   AMDPRTAB+336
USR      EQU   AMDPRTAB+368
USRFLGS  EQU   USR
USRTAB   EQU   AMDPRTAB+372
PI       EQU   AMDPRTAB+452
PIFLGS   EQU   PI
ALLP     EQU   PIFLGS
SELP     EQU   PIFLGS
PGMNGEN  EQU   AMDPRTAB+456
PICODES  EQU   PGMNGEN
PICODEA  EQU   PGMNGEN+2
GENFLAGS EQU   PGMNGEN+3
EXT      EQU   GENFLAGS
DSP      EQU   GENFLAGS
SYSM     EQU   GENFLAGS
RNIO     EQU   GENFLAGS
SRM      EQU   GENFLAGS
RR       EQU   GENFLAGS
GENFLGS1 EQU   AMDPRTAB+460
ESTARTME EQU   AMDPRTAB+500
ESTOPTME EQU   AMDPRTAB+509
ABDPL    EQU   0
ADPLFLAG EQU   ABDPL+7
ADPLFRMT EQU   ABDPL+24
ADPLFMT1 EQU   ABDPL+44
ADPLFMT2 EQU   ABDPL+48
IOSIOTAB EQU   0
@NM00003 EQU   IOSIOTAB
ALL      EQU   @NM00003
SELECT   EQU   @NM00003
DEVTAB   EQU   IOSIOTAB+4
EID      EQU   0
DATA     EQU   0
AMDPRFMT EQU   0
PLIST    EQU   0
EIDPTR   EQU   PLIST+12
DATAPTR  EQU   PLIST+16
WKAPTR   EQU   PLIST+24
SNAPARM  EQU   PLIST+28
DSPREC   EQU   0
DSPTCB   EQU   DSPREC+14
DSPR15   EQU   DSPREC+18
SRBREC   EQU   0
SRBR15   EQU   SRBREC+14
SRBSRB   EQU   SRBREC+18
SRBTYPE  EQU   SRBREC+26
PIREC    EQU   0
PIOPSW   EQU   PIREC+6
PIINT    EQU   PIOPSW+2
PITCB    EQU   PIREC+14
EXTREC   EQU   0
EXTPSW   EQU   EXTREC+6
EXTINT   EQU   EXTPSW+2
EXTTCB   EQU   EXTREC+14
EXTVAR   EQU   EXTREC+18
SVCREC   EQU   0
SVCPSW   EQU   SVCREC+6
SVCINT   EQU   SVCPSW+2
IOREC    EQU   0
IOASCB   EQU   IOREC
IOTCB    EQU   IOREC+14
IODEV    EQU   IOREC+26
IOSENSE  EQU   IODEV
IODEVA   EQU   IODEV+2
SIOREC   EQU   0
SIOCPA   EQU   SIOREC+6
SIODEV   EQU   SIOREC+14
SIOCC    EQU   SIODEV
SIODEVA  EQU   SIODEV+2
UIOREC   EQU   0
UIODEV   EQU   UIOREC+22
UIODEVA  EQU   UIODEV+2
RNIOREC  EQU   0
RNIOASCB EQU   RNIOREC
RNIOBTU  EQU   RNIOREC+6
RNIOR0   EQU   RNIOREC+26
SRMREC   EQU   0
SRMASCB  EQU   SRMREC
FRRREC   EQU   0
FRRASCB  EQU   FRRREC
FRRPSW   EQU   FRRREC+6
FRRFLG2  EQU   FRRREC+22
FRRETRY  EQU   FRRREC+25
STAEREC  EQU   0
STAEPSW  EQU   STAEREC+6
STARF    EQU   STAEREC+18
STAFLGS  EQU   STARF
STARTYCA EQU   STAEREC+22
STARTYA  EQU   STARTYCA
STARTCA  EQU   STARTYCA+4
PRECM    EQU   0
ABDPLPTR EQU   SNAPARM
SVCIND   EQU   TWOEXPN
SVCNUMBR EQU   SVCNUMS
LABPT    EQU   ADPLFMT1
DATAPT   EQU   ADPLFMT2
SVCCODE  EQU   SVCINT
SIOCC1   EQU   SIOCC
RTCAPTR  EQU   STARTCA
INTCODE  EQU   PIINT
*                                      START UNREFERENCED COMPONENTS
PRECPUID EQU   PRECM+4
PREASCB  EQU   PRECM
STARCDE  EQU   STARF+3
STAACF2  EQU   STAFLGS+2
STAMCHD  EQU   STAFLGS+1
STAERRA  EQU   STAFLGS
STAECC   EQU   STAEREC+14
@NM00016 EQU   STAEREC
FRRRC    EQU   FRRFLG2+2
FRRACF   EQU   FRRFLG2+1
FRRMCHD  EQU   FRRFLG2
FRRFLG1  EQU   FRRREC+18
FRRCC    EQU   FRRREC+14
FRRCPU   EQU   FRRREC+4
SRMROR1  EQU   SRMREC+10
SRMR15   EQU   SRMREC+6
SRMCPUID EQU   SRMREC+4
RNIOCPU  EQU   RNIOREC+4
@NM00015 EQU   UIODEV
UIOCSW   EQU   UIOREC+14
UIOPSW   EQU   UIOREC+6
UIOCPUID EQU   UIOREC+4
UIOASCB  EQU   UIOREC
SIOSTS   EQU   SIOREC+22
SIOCAW   EQU   SIOREC+18
SIOCPUID EQU   SIOREC+4
SIOASCB  EQU   SIOREC
IOCSW    EQU   IOREC+18
IOPSW    EQU   IOREC+6
IOCPUID  EQU   IOREC+4
SVCROR1  EQU   SVCREC+22
SVCR15   EQU   SVCREC+18
SVCTCB   EQU   SVCREC+14
@NM00014 EQU   SVCPSW+4
@NM00013 EQU   SVCPSW
@NM00012 EQU   SVCREC
@NM00011 EQU   EXTPSW+4
@NM00010 EQU   EXTPSW
@NM00009 EQU   EXTREC
PIR1     EQU   PIREC+26
PIR15    EQU   PIREC+22
PIVPA    EQU   PIREC+18
@NM00008 EQU   PIOPSW+4
@NM00007 EQU   PIOPSW
PICPUID  EQU   PIREC+4
PIASCB   EQU   PIREC
SRBR1    EQU   SRBREC+22
SRBPSW   EQU   SRBREC+6
@NM00006 EQU   SRBREC
DSPROR1  EQU   DSPREC+22
DSPPSW   EQU   DSPREC+6
@NM00005 EQU   DSPREC
FMTPTR   EQU   PLIST+20
OPTS     EQU   PLIST+8
OUTBUF   EQU   PLIST+4
INREC    EQU   PLIST
RESBIT   EQU   @NM00003
ADPLEXT  EQU   ABDPL+52
ADPLCOM4 EQU   ABDPL+40
ADPLCOM3 EQU   ABDPL+36
ADPLCOM2 EQU   ABDPL+32
ADPLCOM1 EQU   ABDPL+28
ADPLMEMA EQU   ABDPL+20
ADPLCVT  EQU   ABDPL+16
ADPLPRNT EQU   ABDPL+12
ADPLBUF  EQU   ABDPL+8
@NM00002 EQU   ADPLFLAG
ADPLSYTM EQU   ADPLFLAG
ADPLSNPR EQU   ADPLFLAG
ADPLSBPL EQU   ABDPL+6
ADPLASID EQU   ABDPL+4
ADPLTCB  EQU   ABDPL
RESERVED EQU   AMDPRTAB+522
CVTTZONE EQU   AMDPRTAB+518
ESPSEC   EQU   ESTOPTME+7
ESPMIN   EQU   ESTOPTME+5
ESPHR    EQU   ESTOPTME+3
ESPDAY   EQU   ESTOPTME
ESSEC    EQU   ESTARTME+7
ESMIN    EQU   ESTARTME+5
ESHR     EQU   ESTARTME+3
ESDAY    EQU   ESTARTME
ADTSBUF  EQU   AMDPRTAB+496
OFSTDATA EQU   AMDPRTAB+494
OFSTEID  EQU   AMDPRTAB+492
AFRMAD   EQU   AMDPRTAB+488
REENTWKA EQU   AMDPRTAB+484
PRFMTADD EQU   AMDPRTAB+480
AEIOCT   EQU   AMDPRTAB+476
EXITADDR EQU   AMDPRTAB+472
EXITNM   EQU   AMDPRTAB+464
RECDLL   EQU   AMDPRTAB+461
@NM00001 EQU   GENFLGS1
FIRSTHSW EQU   GENFLGS1
TSFOUND  EQU   GENFLGS1
EOFINPRO EQU   GENFLGS1
TS       EQU   GENFLGS1
EOF      EQU   GENFLAGS
SYS      EQU   GENFLAGS
Q        EQU   PI+1
P01R     EQU   PIFLGS
USRNGTAB EQU   USRTAB
O        EQU   USR+1
N01R     EQU   USRFLGS
SELU     EQU   USRFLGS
ALLU     EQU   USRFLGS
M        EQU   VCF+1
L        EQU   SVCFLGS
IODVADS  EQU   DVADS2
K01RES   EQU   IO+1
JJ       EQU   IOFLGS2
SELI     EQU   IOFLGS2
ALLI     EQU   IOFLGS2
SIODVADS EQU   DVADS1
II       EQU   SIF+1
H        EQU   SIOFLGS
NOEQU    EQU   SIOFLGS
EQUIV    EQU   SIOFLGS
SELS     EQU   SIOFLGS
ALLS     EQU   SIOFLGS
ASCBADDR EQU   AADS
JOBNAMES EQU   NAMES
DAY2     EQU   STOPTIME+10
F        EQU   STOPTIME+8
TIME2    EQU   STOPTIME
DAY      EQU   STARTIME+10
D        EQU   STARTIME+8
TIME     EQU   STARTIME
DDNAME   EQU   AMDPRTAB+32
USEREXIT EQU   AMDPRTAB+24
GTFWDPTR EQU   AMDPRTAB+20
C        EQU   DEBGFLGS+4
B        EQU   IOFLGS
GETEOF   EQU   IOFLGS
DMDFMT   EQU   INRFCFGS
EDITSTOP EQU   INRFCFGS
EXTTRC   EQU   INRFCFGS
RET      EQU   INRFCFGS
FMT      EQU   INRFCFGS
SPIE     EQU   INRFCFGS
TERM     EQU   INRFCFGS
FLMODE   EQU   INRFCFGS
REMAIN   EQU   PTHFLGS2
APP      EQU   PTHFLGS2
REXT     EQU   PTHFLGS1
FRM      EQU   PTHFLGS1
FLT      EQU   PTHFLGS1
HEX      EQU   PTHFLGS1
CON      EQU   PTHFLGS1
GET      EQU   PTHFLGS1
SCN      EQU   PTHFLGS1
ROOT     EQU   PTHFLGS1
CURREC   EQU   AMDPRTAB+4
AFMG     EQU   AMDPRTAB
*                                      END UNREFERENCED COMPONENTS
@RF00132 EQU   IOSPLIT
@RT00139 EQU   SETRET8
@RT00141 EQU   CALLHEX
@RT00144 EQU   SETRET8
@RT00146 EQU   EXIT
@RC00184 EQU   FORMAT
@RT00216 EQU   CALLHEX
@RF00216 EQU   SIOFMT
@RT00220 EQU   SETRET8
@RT00222 EQU   CALLHEX
@RT00225 EQU   SETRET8
@RT00227 EQU   EXIT1
@RC00237 EQU   FORMAT
@RT00252 EQU   CALLHEX
@RF00252 EQU   UIOFMT
@RT00256 EQU   SETRET8
@RT00258 EQU   CALLHEX
@RT00261 EQU   SETRET8
@RT00263 EQU   EXIT2
@RT00270 EQU   SETRET8
@RT00272 EQU   CALLHEX
@RC00279 EQU   FORMAT
@RC00286 EQU   FORMAT
@RT00291 EQU   SETRET8
@RT00293 EQU   CALLHEX
@RC00304 EQU   FORMAT
@RT00310 EQU   CALLHEX
@RF00310 EQU   SVCSELPT
@RT00314 EQU   SETRET8
@RT00316 EQU   CALLHEX
@RT00333 EQU   SVCSELPT
@RT00339 EQU   SETRET8
@RT00341 EQU   CALLHEX
@RC00361 EQU   EXTEXIT
@RF00359 EQU   EXITRTN
@RT00369 EQU   CALLHEX
@RF00369 EQU   SELPIPAT
@RT00373 EQU   SETRET8
@RT00375 EQU   CALLHEX
@RT00379 EQU   SELPIPAT
@RF00379 EQU   SETRET8
@RT00383 EQU   SELPIPAT
@RF00383 EQU   SETRET8
@RT00387 EQU   SELPIPAT
@RF00387 EQU   SETRET8
@RT00396 EQU   SETRET8
@RC00398 EQU   FORMAT
@RT00402 EQU   SETRET8
@RT00404 EQU   CALLHEX
@RC00408 EQU   @RC00406
@RC00416 EQU   @RC00413
@RC00414 EQU   @RC00413
@RC00425 EQU   FORMAT
@RT00429 EQU   SETRET8
@RT00431 EQU   CALLHEX
@RC00433 EQU   FORMAT
@RT00437 EQU   SETRET8
@RT00439 EQU   CALLHEX
@RT00441 EQU   STAERTN
@RC00454 EQU   FORMAT
@RC00470 EQU   FORMAT
@RC00281 EQU   @RC00279
@ENDDATA EQU   *
         END   AMDSYS03,(C'PLS0933',0701,77255)
