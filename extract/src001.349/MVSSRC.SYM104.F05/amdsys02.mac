         TITLE 'AMDSYS02 FORMAT APPENDAGE FOR AHLTPID                  *
                        '
AMDSYS02 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'AMDSYS02  73.283'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         EQUATES
*   PLISTSAV=PLISTPTR;              /* SAVE OUR PARMLIST @           */
         LR    PLISTSAV,PLISTPTR                                01S0035
*   GMAINPTR=GTMPTR;                /* GET POINTER TO GETMAINED AREA */
         L     GMAINPTR,GTMPTR(,PLISTSAV)                       01S0036
*   RFY                                                         01S0037
*     RTN14 UNRSTD;                                             01S0037
*   BACKPTR=R13SAVE;                /* SAVE CALLERS SAVE AREA   01S0038
*                                                            @YM03672*/
         ST    R13SAVE,BACKPTR(,GMAINPTR)                       01S0038
*   R13SAVE=ADDR(REGSAV);           /* SET UP SAVEAREA FOR AMDPRFMT  */
         LR    R13SAVE,GMAINPTR                                 01S0039
*   RECREG=DTAPTR;                  /* SET UP POINTER TO THE RECORD
*                                      TO BE FORMATTED               */
         L     RECREG,DTAPTR(,PLISTSAV)                         01S0040
*   PLISTPTR=FPLPTR;                /* GET ADDRESS OF PARMLIST FOR
*                                      AMDPRFMT                 01S0041
*                                                                    */
         L     PLISTPTR,FPLPTR(,PLISTSAV)                       01S0041
*                                                               01S0042
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THIS IS THE FIRST ENTRY FOR THE RECORD           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0042
*   IF ENTRYCNT=0 THEN              /* CHECK TO SEE IF THIS IS 1ST   */
         CLI   ENTRYCNT(GMAINPTR),0                             01S0042
         BNE   @RF00042                                         01S0042
*     DO;                           /* ENTRY FOR THE RECORD          */
*                                                               01S0043
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR ERROR RECORD                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0044
*       IF ERRASCB=CATERR THEN                                  01S0044
         CLC   ERRASCB(2,RECREG),@CH00366                       01S0044
         BNE   @RF00044                                         01S0044
*         DO;                                                   01S0045
*           RTRNCODE=RCHEXDMP;      /* TELL CALLER TO DUMP RECORD IN
*                                      HEX                           */
         L     @08,BACKPTR(,GMAINPTR)                           01S0046
         MVC   RTRNCODE(4,@08),@CF00073                         01S0046
*           GO TO S02EXIT;          /* GO TO RETURN LOGIC            */
         B     S02EXIT                                          01S0047
*         END;                                                  01S0048
*       ELSE                                                    01S0049
*                                                               01S0049
*         /***********************************************************/
*         /*                                                         */
*         /* DETERMINE TYPE OF RECORD                                */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0049
*         DO;                                                   01S0049
@RF00044 DS    0H                                               01S0050
*           RFY                                                 01S0050
*             EIDREG RSTD;                                      01S0050
*           EIDREG=EIDPTR;          /* GET POINTER TO EID            */
         L     EIDREG,EIDPTR(,PLISTSAV)                         01S0051
*           IF EID=IEATINT×EID=IEAPINT THEN/* CHECK FOR PI RECORD    */
         CLC   EID(2,EIDREG),@CH00200                           01S0052
         BE    @RT00052                                         01S0052
         CLC   EID(2,EIDREG),@CH00196                           01S0052
         BNE   @RF00052                                         01S0052
@RT00052 DS    0H                                               01S0053
*             DO;                                               01S0053
*               RFY                                             01S0054
*                 EIDREG UNRSTD;                                01S0054
*                                                               02S0055
*               /*****************************************************/
*               /*                                                   */
*               /* FORMAT THE FIRST PI RECORD                        */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0055
*               ;                                               02S0055
*                                                               02S0055
*               /*****************************************************/
*               /*                                                   */
*               /* MAKE SURE THAT THE RECORD SHOULD BE FORMATTED     */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0056
*               IF SYS=OFF&ALLP=OFF THEN/* CHECK FOR SYS OVERRIDE NOT
*                                      EMPLOYED AND FOR ALL PI EVENTS
*                                      NOT SELECTED                  */
         TM    SYS(AEDITCBR),B'00100000'                        02S0056
         BNZ   @RF00056                                         02S0056
         TM    ALLP(AEDITCBR),B'10000000'                       02S0056
         BNZ   @RF00056                                         02S0056
*                 DO;                                           02S0057
*                                                               02S0057
*                   /*************************************************/
*                   /*                                               */
*                   /* CHECK FOR THIS PI CODE SELECTED FOR PRINTING  */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0058
*                   RFY                                         02S0058
*                    (CODEREG,                                  02S0058
*                     MASKREG) RSTD;                            02S0058
*                   CODEREG=PICODER-ONE;/* GET INTERRUPT CODE - 1    */
         SLR   CODEREG,CODEREG                                  02S0059
         IC    CODEREG,PICODER(,RECREG)                         02S0059
         BCTR  CODEREG,0                                        02S0059
*                   MASKREG=CODEMASK;/* GET ADJUSTABLE BIT MASK      */
         L     MASKREG,@CF00384                                 02S0060
*                   GEN SETS(MASKREG) REFS(CODEREG,IGNORE,PGMNGEN) EXIT
*                       SEQFLOW NOFLOWS;                        02S0061
            SRL   MASKREG,0(CODEREG)      ADJUST THE MASK   @YM03650
            N     MASKREG,PGMNGEN(,AEDITCBR) TEST THE PI CODE BIT
            BZ    IGNORE               IF OFF IGNORE THE RECORD
*                   RFY                                         02S0062
*                     MASKREG UNRSTD;                           02S0062
*                 END;                                          02S0063
*                                                               02S0063
*               /*****************************************************/
*               /*                                                   */
*               /* CONVERT PI CODE TO PRINTABLE DECIMAL AND PLACE IN */
*               /* OUTPUT BUFFER                                     */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0064
*               CODEREG=PICODER;    /* GET INTERRUPT CODE            */
@RF00056 SLR   CODEREG,CODEREG                                  02S0064
         IC    CODEREG,PICODER(,RECREG)                         02S0064
*               RFY                                             02S0065
*                 R8WORK RSTD;                                  02S0065
*               R8WORK=ADPLBUF;                                 02S0066
         L     R8WORK,ADPLBUF(,ABDPLPTR)                        02S0066
*               GEN SETS(CVDWORK,DECPI) REFS(R8WORK,CODEREG,GMAINPTR)
*                   NOEXIT SEQFLOW NOFLOWS;                     02S0067
      CVD CODEREG,CVDWORK(,GMAINPTR)     CONVERT PI CODE TO DECIMAL
      UNPK DECPI(3,R8WORK),CVDWORK+5(3,GMAINPTR)
      OI DECPI+2(R8WORK),X'F0'
*               RFY                                             02S0068
*                (R8WORK,                                       02S0068
*                 CODEREG) UNRSTD;                              02S0068
*               ;                                               02S0069
*                                                               02S0069
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP PARM LIST FOR AMDPRFMT                     */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0070
*               ADPLFMT2=ADDR(PIREC);/* ADDR OF DATA                 */
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0070
*               IF PIINTTCB=NOTAPP THEN/* CHECK FOR EBCDIC TCB FIELD */
         CLC   PIINTTCB(4,RECREG),NOTAPP                        02S0071
         BNE   @RF00071                                         02S0071
*                 FMTPTR=ADDR(FMT002);/* SET UP ADDR OF FMT PATTERN
*                                      WITH EBCDIC TCB FIELD         */
         LA    FMTPTR,FMT002                                    02S0072
*               ELSE                                            02S0073
*                 FMTPTR=ADDR(FMT001);/* SET UP ADDR OF FMT PATTERN
*                                      WITH HEX TCB FIELD            */
         B     @RC00071                                         02S0073
@RF00071 LA    FMTPTR,FMT001                                    02S0073
*               ;                                               02S0074
@RC00071 DS    0H                                               02S0075
*               CALL AMDPRFMT;      /* FORMAT THE LINE               */
         L     @15,FMTRTN(,PLISTSAV)                            02S0075
         BALR  @14,@15                                          02S0075
*               ;                                               02S0076
*               ENTRYCNT=SECOND;    /* INDICATE FIRST RECORD COMPLETE*/
         MVI   ENTRYCNT(GMAINPTR),X'01'                         02S0077
*               ;                                               02S0078
*               RTRNCODE=RCRETURN;  /* TELL CALLER TO PRINT RECORD
*                                      AND RETURN TO FORMAT ANOTHER  */
         L     @08,BACKPTR(,GMAINPTR)                           02S0079
         SLR   @02,@02                                          02S0079
         ST    @02,RTRNCODE(,@08)                               02S0079
*               GO TO S02EXIT;      /* GO TO RETURN LOGIC       02S0080
*                                                                    */
         B     S02EXIT                                          02S0080
*             END;                                              01S0081
*           ELSE                                                01S0082
*             DO;                                               01S0082
@RF00052 DS    0H                                               01S0083
*               RFY                                             01S0083
*                 EIDREG RSTD;                                  01S0083
*               IF SYS=OFF&DSP=OFF THEN/* CHECK FOR SYS OVERRIDE NOT
*                                      EMPLOYED AND FOR DISPATCHER
*                                      EVENTS NOT SELECTED           */
         TM    SYS(AEDITCBR),B'01100000'                        01S0084
         BZ    @RT00084                                         01S0084
*                 GOTO IGNORE;      /* IGNORE THE RECORD             */
*               IF EID=IEADISP3 THEN/* CHECK FOR DSP RECORD          */
@RF00084 CLC   EID(2,EIDREG),@CH00184                           01S0086
         BNE   @RF00086                                         01S0086
*                 DO;                                           01S0087
*                   RFY                                         01S0088
*                     EIDREG UNRSTD;                            01S0088
*                                                               02S0089
*                   /*************************************************/
*                   /*                                               */
*                   /* FORMAT THE DSP RECORD                         */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0089
*                   ;                                           02S0089
*                                                               02S0089
*                   /*************************************************/
*                   /*                                               */
*                   /* SET UP PARMLIST FOR THE FORMATTING ROUTINE    */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0090
*                   ADPLFMT2=ADDR(DSPREC);/* ADDR OF DATA            */
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0090
*                   FMTPTR=ADDR(FMT003);/* ADDR OF FORMAT PATTERN    */
         LA    FMTPTR,FMT003                                    02S0091
*                   ;                                           02S0092
*                   CALL AMDPRFMT;  /* FORMAT THE LINE               */
         L     @15,FMTRTN(,PLISTSAV)                            02S0093
         BALR  @14,@15                                          02S0093
*                   ;                                           02S0094
*                   RTRNCODE=RCCOMP;/* TELL CALLER TO PRINT RECORD
*                                      AND GET A NEW ONE             */
         L     @08,BACKPTR(,GMAINPTR)                           02S0095
         MVC   RTRNCODE(4,@08),@CF00097                         02S0095
*                   GO TO S02EXIT;  /* GO TO RETURN LOGIC       02S0096
*                                                                    */
         B     S02EXIT                                          02S0096
*                 END;                                          01S0097
*               ELSE                                            01S0098
*                 DO;                                           01S0098
@RF00086 DS    0H                                               01S0099
*                   RFY                                         01S0099
*                     EIDREG RSTD;                              01S0099
*                   IF EID=IEADISP2 THEN/* CHECK FOR LSR RECORD      */
         CLC   EID(2,EIDREG),@CH00214                           01S0100
         BNE   @RF00100                                         01S0100
*                     DO;                                       01S0101
*                       RFY                                     01S0102
*                         EIDREG UNRSTD;                        01S0102
*                                                               02S0103
*                       /*********************************************/
*                       /*                                           */
*                       /* FORMAT THE LSR RECORD                     */
*                       /*                                           */
*                       /*********************************************/
*                                                               02S0103
*                       ;                                       02S0103
*                                                               02S0103
*                       /*********************************************/
*                       /*                                           */
*                       /* SET UP PARMLIST FOR THE FORMATTING ROUTINE*/
*                       /*                                           */
*                       /*********************************************/
*                                                               02S0104
*                       ADPLFMT2=ADDR(LSRREC);/* ADDR OF DATA        */
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0104
*                       IF LSRTCB=NOTAPP THEN/* CHECK FOR EBCDIC TCB
*                                      FIELD                         */
         CLC   LSRTCB(4,RECREG),NOTAPP                          02S0105
         BNE   @RF00105                                         02S0105
*                         FMTPTR=ADDR(FMT005);/* SET UP ADDR OF FMT
*                                      PATTERN WITH EBCDIC TCB FIELD */
         LA    FMTPTR,FMT005                                    02S0106
*                       ELSE                                    02S0107
*                         FMTPTR=ADDR(FMT004);/* SET UP ADDR OF FMT
*                                      PATTERN WITH HEX TCB FIELD    */
         B     @RC00105                                         02S0107
@RF00105 LA    FMTPTR,FMT004                                    02S0107
*                       ;                                       02S0108
@RC00105 DS    0H                                               02S0109
*                       CALL AMDPRFMT;/* FORMAT THE LINE             */
         L     @15,FMTRTN(,PLISTSAV)                            02S0109
         BALR  @14,@15                                          02S0109
*                       ;                                       02S0110
*                       RTRNCODE=RCCOMP;/* TELL CALLER TO PRINT 02S0111
*                                      RECORD AND GET A NEW ONE      */
         L     @08,BACKPTR(,GMAINPTR)                           02S0111
         MVC   RTRNCODE(4,@08),@CF00097                         02S0111
*                       GO TO S02EXIT;/* GO TO RETURN LOGIC     02S0112
*                                                                    */
         B     S02EXIT                                          02S0112
*                     END;                                      01S0113
*                   ELSE                                        01S0114
*                     DO;                                       01S0114
@RF00100 DS    0H                                               01S0115
*                       RFY                                     01S0115
*                         EIDREG RSTD;                          01S0115
*                       IF EID=IEADISP1 THEN/* CHECK FOR SRB RECORD  */
         CLC   EID(2,EIDREG),@CH00212                           01S0116
         BNE   @RF00116                                         01S0116
*                         DO;                                   01S0117
*                           RFY                                 01S0118
*                             EIDREG UNRSTD;                    01S0118
*                                                               02S0119
*                           /*****************************************/
*                           /*                                       */
*                           /* FORMAT THE SRB RECORD                 */
*                           /*                                       */
*                           /*****************************************/
*                                                               02S0119
*                           ;                                   02S0119
*                                                               02S0119
*                           /*****************************************/
*                           /*                                       */
*                           /* SET UP PARMLIST FOR THE FORMATTING    */
*                           /* ROUTINE                               */
*                           /*                                       */
*                           /*****************************************/
*                                                               02S0120
*                           ADPLFMT2=ADDR(SRBREC);/* ADDR OF DATA    */
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0120
*                           IF SRBTYPE=TYPES THEN/* CHECK FOR   02S0121
*                                      SUSPENDED SRB                 */
         CLI   SRBTYPE(RECREG),C'S'                             02S0121
         BNE   @RF00121                                         02S0121
*                             DO;                               02S0122
*                               IF SRBSRB=ERRIND THEN/* CHECK FOR
*                                      EBCDIC SRB AND PARM FIELDS    */
         CLC   SRBSRB(4,RECREG),ERRIND                          02S0123
         BNE   @RF00123                                         02S0123
*                                 FMTPTR=ADDR(FMT009);/* SET UP ADDR
*                                      OF FMT PATTERN WITH EBCDIC SRB
*                                      FIELD                         */
         LA    FMTPTR,FMT009                                    02S0124
*                               ELSE                            02S0125
*                                 FMTPTR=ADDR(FMT007);/* SET UP ADDR
*                                      OF FMT PATTERN WITH HEX SRB
*                                      AND PARM FIELDS               */
         B     @RC00123                                         02S0125
@RF00123 LA    FMTPTR,FMT007                                    02S0125
*                             END;                              02S0126
*                           ELSE                                02S0127
*                             DO;                               02S0127
         B     @RC00121                                         02S0127
@RF00121 DS    0H                                               02S0128
*                               FMTPTR=ADDR(FMT006);/* SET UP ADDR OF
*                                      FMT PATTERN WITH HEX SRB FIELD*/
         LA    FMTPTR,FMT006                                    02S0128
*                               IF SRBTYPE=TYPEG THEN/* CHECK FOR
*                                      GLOBAL SRB                    */
         CLI   SRBTYPE(RECREG),C'G'                             02S0129
         BNE   @RF00129                                         02S0129
*                                 ADPLFMT1=ADDR(GLOBALT);/* LABEL
*                                      POINTER -> 'GLOBAL'           */
         LA    @08,GLOBALT                                      02S0130
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0130
*                               ELSE                            02S0131
*                                 ADPLFMT1=ADDR(LOCALT);/* LABEL
*                                      POINTER -> 'LOCAL'            */
         B     @RC00129                                         02S0131
@RF00129 LA    @08,LOCALT                                       02S0131
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0131
*                             END;                              02S0132
@RC00129 DS    0H                                               02S0133
*                           ;                                   02S0133
@RC00121 DS    0H                                               02S0134
*                           CALL AMDPRFMT;/* FORMAT THE LINE         */
         L     @15,FMTRTN(,PLISTSAV)                            02S0134
         BALR  @14,@15                                          02S0134
*                           RTRNCODE=RCCOMP;/* TELL CALLER TO PRINT
*                                      RECORD AND GET A NEW ONE      */
         L     @08,BACKPTR(,GMAINPTR)                           02S0135
         MVC   RTRNCODE(4,@08),@CF00097                         02S0135
*                           GO TO S02EXIT;/* GO TO RETURN LOGIC 02S0136
*                                                                    */
         B     S02EXIT                                          02S0136
*                         END;                                  01S0137
*                       ELSE                                    01S0138
*                         RFY                                   01S0138
*                           EIDREG RSTD;                        01S0138
@RF00116 DS    0H                                               01S0139
*                       IF EID=IEADISP4 THEN/* CHECK FOR SDSP RECORD */
         CLC   EID(2,EIDREG),@CH00217                           01S0139
         BNE   @RF00139                                         01S0139
*                         DO;                                   01S0140
*                           RFY                                 01S0141
*                             EIDREG UNRSTD;                    01S0141
*                                                               02S0142
*                           /*****************************************/
*                           /*                                       */
*                           /* FORMAT THE SDSP RECORD                */
*                           /*                                       */
*                           /*****************************************/
*                                                               02S0142
*                           ;                                   02S0142
*                                                               02S0142
*                           /*****************************************/
*                           /*                                       */
*                           /* SET UP PARMLIST FOR THE FORMATTING    */
*                           /* ROUTINE                               */
*                           /*                                       */
*                           /*****************************************/
*                                                               02S0143
*                           ADPLFMT2=ADDR(DSPREC);/* ADDR OF DATA    */
         ST    RECREG,ADPLFMT2(,ABDPLPTR)                       02S0143
*                           FMTPTR=ADDR(FMT010);/* ADDR OF FORMAT
*                                      PATTERN                       */
         LA    FMTPTR,FMT010                                    02S0144
*                           ;                                   02S0145
*                           CALL AMDPRFMT;/* FORMAT THE LINE         */
         L     @15,FMTRTN(,PLISTSAV)                            02S0146
         BALR  @14,@15                                          02S0146
*                           ;                                   02S0147
*                           RTRNCODE=RCCOMP;/* TELL CALLER TO PRINT
*                                      RECORD AND GET A NEW ONE      */
         L     @08,BACKPTR(,GMAINPTR)                           02S0148
         MVC   RTRNCODE(4,@08),@CF00097                         02S0148
*                           GO TO S02EXIT;/* GO TO RETURN LOGIC 02S0149
*                                                                    */
         B     S02EXIT                                          02S0149
*                         END;                                  01S0150
*                       ELSE                                    01S0151
*                         GOTO IGNORE;                          01S0151
*                     END;                                      01S0152
*                 END;                                          01S0153
*             END;                                              01S0154
*         END;                                                  01S0155
*     END;                                                      01S0156
*                                                               01S0157
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THIS IS THE SECOND OR THIRD ENTRY FOR THE REC    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0157
*   ELSE                                                        01S0157
*     DO;                                                       01S0157
@RF00042 DS    0H                                               01S0158
*       IF ENTRYCNT=SECOND THEN     /* CHECK FOR SECOND RECORD       */
         CLI   ENTRYCNT(GMAINPTR),1                             01S0158
         BNE   @RF00158                                         01S0158
*         DO;                                                   01S0159
*                                                               02S0160
*           /*********************************************************/
*           /*                                                       */
*           /* FORMAT THE SECOND PI RECORD                           */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0160
*           ;                                                   02S0160
*                                                               02S0160
*           /*********************************************************/
*           /*                                                       */
*           /* SET UP PARMLIST FOR THE FORMATTING ROUTINE            */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0161
*           ADPLFMT1=ADDR(LBL005);  /* ADDR OF LABEL LIST            */
         LA    @08,LBL005                                       02S0161
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0161
*           ADPLFMT2=ADDR(PIREGS1); /* ADDR OF DATA (REGS 0-7)       */
         LA    @08,PIREGS1(,RECREG)                             02S0162
         ST    @08,ADPLFMT2(,ABDPLPTR)                          02S0162
*           FMTPTR=ADDR(FMT008);    /* ADDR OF FORMAT PATTERN        */
         LA    FMTPTR,FMT008                                    02S0163
*           ;                                                   02S0164
*           CALL AMDPRFMT;          /* FORMAT THE LINE               */
         L     @15,FMTRTN(,PLISTSAV)                            02S0165
         BALR  @14,@15                                          02S0165
*           ;                                                   02S0166
*           ENTRYCNT=THIRD;         /* INDICATE SECOND RECORD   02S0167
*                                      COMPLETE                      */
         MVI   ENTRYCNT(GMAINPTR),X'02'                         02S0167
*           RTRNCODE=RCRETURN;      /* TELL CALLER TO PRINT RECORD
*                                      AND RETURN TO FORMAT ANOTHER
*                                                                    */
         L     @08,BACKPTR(,GMAINPTR)                           02S0168
         SLR   @02,@02                                          02S0168
         ST    @02,RTRNCODE(,@08)                               02S0168
*         END;                                                  01S0169
*       ELSE                                                    01S0170
*         IF ENTRYCNT=THIRD THEN    /* CHECK FOR THIRD RECORD        */
         B     @RC00158                                         01S0170
@RF00158 CLI   ENTRYCNT(GMAINPTR),2                             01S0170
         BNE   @RF00170                                         01S0170
*           DO;                                                 01S0171
*                                                               02S0172
*             /*******************************************************/
*             /*                                                     */
*             /* FORMAT THE THIRD PI RECORD                          */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0172
*             ;                                                 02S0172
*                                                               02S0172
*             /*******************************************************/
*             /*                                                     */
*             /* SET UP PARMLIST FOR THE FORMATTING ROUTINE          */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0173
*             ADPLFMT1=ADDR(LBL006);/* ADDR OF LABEL LIST            */
         LA    @08,LBL006                                       02S0173
         ST    @08,ADPLFMT1(,ABDPLPTR)                          02S0173
*             ADPLFMT2=ADDR(PIREGS2);/* ADDR OF DATA (REGS 8-15)     */
         LA    @08,PIREGS2(,RECREG)                             02S0174
         ST    @08,ADPLFMT2(,ABDPLPTR)                          02S0174
*             FMTPTR=ADDR(FMT008);  /* ADDR OF FMT PATTERN           */
         LA    FMTPTR,FMT008                                    02S0175
*             ;                                                 02S0176
*             CALL AMDPRFMT;        /* FORMAT THE LINE               */
         L     @15,FMTRTN(,PLISTSAV)                            02S0177
         BALR  @14,@15                                          02S0177
*             ;                                                 02S0178
*             RTRNCODE=RCCOMP;      /* TELL CALLER TO PRINT RECORD
*                                      AND GET A NEW ONE        02S0179
*                                                                    */
         L     @08,BACKPTR(,GMAINPTR)                           02S0179
         MVC   RTRNCODE(4,@08),@CF00097                         02S0179
*           END;                                                01S0180
*         ELSE                                                  01S0181
*           DO;                                                 01S0181
         B     @RC00170                                         01S0181
@RF00170 DS    0H                                               01S0182
*IGNORE:                                                        01S0182
*             RTRNCODE=RCIGNORE;    /* TELL CALLER TO IGNORE RECORD  */
IGNORE   L     @08,BACKPTR(,GMAINPTR)                           01S0182
         MVC   RTRNCODE(4,@08),@CF00041                         01S0182
*           END;                                                01S0183
*     END;                                                      01S0184
@RC00170 DS    0H                                               01S0184
@RC00158 DS    0H                                               01S0185
*S02EXIT:                                                       01S0185
*   R13SAVE=BACKPTR;                /* RESTORE CALLERS SAVE AREA
*                                                            @YM03672*/
S02EXIT  L     R13SAVE,BACKPTR(,GMAINPTR)                       01S0185
*   END AMDSYS02                    /* RETURN TO CALLER         01S0186
*                                                                    */
*                                                               01S0186
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (PROLOG  )                                       */
*/*%INCLUDE SYSUT5  (DECLS   )                                       */
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                       */
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */
*/*%INCLUDE SYSUT5  (AMDPI   )                                       */
*/*%INCLUDE SYSUT5  (AMDDSP  )                                       */
*/*%INCLUDE SYSUT5  (AMDLSR  )                                       */
*/*%INCLUDE SYSUT5  (AMDSRB  )                                       */
*/*%INCLUDE SYSUT5  (AMDSDSP )                                       */
*/*%INCLUDE SYSUT5  (AMDSEC  )                                       */
*/*%INCLUDE SYSUT5  (AMDTHRD )                                       */
*                                                               01S0186
*       ;                                                       01S0186
@EL00001 DS    0H                                               01S0186
@EF00001 DS    0H                                               01S0186
@ER00001 LM    @14,@12,12(@13)                                  01S0186
         BR    @14                                              01S0186
@DATA    DS    0H
@CH00184 DC    XL2'0003'
@CH00196 DC    XL2'6101'
@CH00200 DC    XL2'6200'
@CH00212 DC    XL2'0001'
@CH00214 DC    XL2'0002'
@CH00217 DC    XL2'0004'
@CH00366 DC    XL2'EEEE'
@DATD    DSECT
         DS    0F
AMDSYS02 CSECT
         DS    0F
@CF00097 DC    F'4'
@CF00041 DC    F'8'
@CF00073 DC    F'12'
@CF00384 DC    XL4'80000000'
@DATD    DSECT
         DS    0D
AMDSYS02 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
NOTAPP   DC    CL4'N/A '
ERRIND   DC    CL4'****'
GLOBALT  DC    CL6'GLOBAL'
LOCALT   DC    CL6'LOCAL '
LBL001   DC    CL32'PGMASCBCPUJOBNOLD PSWTCBVPAMODN'
LBL005   DC    CL24'R0R1 R2 R3 R4 R5 R6 R7'
LBL006   DC    CL24'R8R9R10R11R12R13R14R15'
LBL002   DC    CL30'DSPASCBCPUJOBNDSP PSWTCBMODN'
LBL007   DC    CL30'SDSPASCBCPUJOBNDSP PSWTCBMODN'
LBL003   DC    CL46'SRBASCBCPUJOBNSRB PSWSRBPARMTYPE SUSPENDED'
LBL004   DC    CL26'LSRASCBCPUJOBNLSR PSWTCB'
AMDSYS02 CSECT
*  F O R M A T   P A T T E R N S
*  PI - ALL FIELDS NORMAL
FMT001   FMTPTRN (LBL,LBLP),3,,0,,LBL001,             HEADER
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          TCB
         FMTPTRN (LBL,DTA,DTAC),3,4,106,110,,,        VPA
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,91,96,,,LAST   MOD NAME
*  PI - TCB FIELD 'N/A', MODNAME 'N/A'
FMT002   FMTPTRN (LBL,LBLP),3,,0,,LBL001,             HEADER
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,77,81,,,     TCB
         FMTPTRN (LBL,DTA,DTAC),3,4,106,110,,,        VPA
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,3,91,96,,,LAST   MOD NAME
*  PI SECOND AND THIRD RECORDS - ALL FIELDS NORMAL
FMT008   FMTPTRN (LBL,DTA,DTAC),2,4,10,13,,,          RO AND R8
         FMTPTRN (LBL,DTA,DTAC),2,4,23,26,,,          R1 AND R9
         FMTPTRN (LBL,DTA,DTAC),3,4,35,39,,,          R2 AND R10
         FMTPTRN (LBL,DTA,DTAC),3,4,48,52,,,          R3 AND R11
         FMTPTRN (LBL,DTA,DTAC),3,4,61,65,,,          R4 AND R12
         FMTPTRN (LBL,DTA,DTAC),3,4,74,78,,,          R5 AND R13
         FMTPTRN (LBL,DTA,DTAC),3,4,87,91,,,          R6 AND R14
         FMTPTRN (LBL,DTA,DTAC),3,4,100,104,,,LAST    R7 AND R15
*  DSP RECORD - ALL FIELDS NORMAL
FMT003   FMTPTRN (LBL,LBLP),3,,0,,LBL002,             HEADER
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          TCB
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,91,96,,,LAST MODNAME
*  SDSP RECORD _ ALL FIELDS NORMAL
FMT010   FMTPTRN (LBL,LBLP),4,,0,,LBL007,             HEADER
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          TCB
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,91,96,,,LAST MODNAME
*  LSR RECORD - ALL FIELDS NORMAL
FMT004   FMTPTRN (LBL,LBLP),3,,0,,LBL004,             HEADER
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,LAST      TCB
*  LSR RECORD - TCB FIELD 'N/A'
FMT005   FMTPTRN (LBL,LBLP),3,,0,,LBL004              HEADER
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,77,81,,,LAST TCB
*  SRB RECORD - GLOBAL OR LOCAL SRB
FMT006   FMTPTRN (LBL),6,,111,,,,                     'GLOBAL'/'LOCAL'
         FMTPTRN (LBL,LBLP),3,,0,,LBL003,             HEADER
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          SRB
         FMTPTRN (LBL,DTA,DTAC),4,4,91,96,,,          PARM
         FMTPTRN (LBL),4,,106,,,,LAST                 TYPE
* SRB RECORD - SUSPENDED SRB, ALL FIELDS NORMAL
FMT007   FMTPTRN (LBL,LBLP),3,,0,,LBL003,             HEADER
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW
         FMTPTRN (LBL,DTA,DTAC),3,4,77,81,,,          SRB
         FMTPTRN (LBL,DTA,DTAC),4,4,91,96,,,          PARM
         FMTPTRN (LBL),14,,106,,,,LAST                TYPE SUSPENDED
* SRB RECORD - SUSPENDED SRB, SRB AND PARM FIELDS '****'
FMT009   FMTPTRN (LBL,LBLP),3,,0,,LBL003,             HEADER
         FMTPTRN (LBL,DTA,DTAC),4,4,10,15,,,          ASCB
         FMTPTRN (LBL,DTA,DTAC),3,2,25,29,,,          CPU ID
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,35,40,,,     JOBNAME
         FMTPTRN (LBL,DTA,DTAC),7,4,50,58,,,          PSW
         FMTPTRN (DTA,DTAC),,4,,67,,,                 PSW
         FMTPTRN (LBL,DTA,DTAC,DTAE),3,4,77,81,,,     SRB
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,4,91,96,,,     PARM
         FMTPTRN (LBL),14,,106,,,,LAST                TYPE SUSPENDED
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
AMDSYS02 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
AEDITCBR EQU   @09
ABDPLPTR EQU   @01
FMTPTR   EQU   @00
PLISTPTR EQU   @01
CODEREG  EQU   @02
PLISTSAV EQU   @03
GMAINPTR EQU   @04
RECREG   EQU   @05
EIDREG   EQU   @06
MASKREG  EQU   @06
R8WORK   EQU   @08
R13SAVE  EQU   @13
RTN14    EQU   @14
AMDPRTAB EQU   0
DEBGFLGS EQU   AMDPRTAB+8
PTHFLGS1 EQU   DEBGFLGS
PTHFLGS2 EQU   DEBGFLGS+1
INRFCFGS EQU   DEBGFLGS+2
IOFLGS   EQU   DEBGFLGS+3
STARTIME EQU   AMDPRTAB+40
STOPTIME EQU   AMDPRTAB+52
NAMES    EQU   AMDPRTAB+64
ADS      EQU   AMDPRTAB+104
AADS     EQU   ADS
SIF      EQU   AMDPRTAB+124
SIOFLGS  EQU   SIF
DVADS1   EQU   AMDPRTAB+128
IO       EQU   AMDPRTAB+228
IOFLGS2  EQU   IO
DVADS2   EQU   AMDPRTAB+232
VCF      EQU   AMDPRTAB+332
SVCFLGS  EQU   VCF
USR      EQU   AMDPRTAB+368
USRFLGS  EQU   USR
USRTAB   EQU   AMDPRTAB+372
PI       EQU   AMDPRTAB+452
PIFLGS   EQU   PI
ALLP     EQU   PIFLGS
PGMNGEN  EQU   AMDPRTAB+456
GENFLAGS EQU   PGMNGEN+3
DSP      EQU   GENFLAGS
SYS      EQU   GENFLAGS
GENFLGS1 EQU   AMDPRTAB+460
ESTARTME EQU   AMDPRTAB+500
ESTOPTME EQU   AMDPRTAB+509
ABDPL    EQU   0
ADPLFLAG EQU   ABDPL+7
ADPLBUF  EQU   ABDPL+8
ADPLFMT1 EQU   ABDPL+44
ADPLFMT2 EQU   ABDPL+48
OURPLIST EQU   0
EIDPTR   EQU   OURPLIST+12
DTAPTR   EQU   OURPLIST+16
FMTRTN   EQU   OURPLIST+20
GTMPTR   EQU   OURPLIST+24
FPLPTR   EQU   OURPLIST+28
GMAREA   EQU   0
REGSAV   EQU   GMAREA
BACKPTR  EQU   REGSAV+4
CVDWORK  EQU   GMAREA+72
ENTRYCNT EQU   GMAREA+84
OUTBUF   EQU   0
DECPI    EQU   OUTBUF+6
PIREC    EQU   0
PIPSW    EQU   PIREC+14
PIINT    EQU   PIPSW+2
PICODER  EQU   PIINT+1
PIINTTCB EQU   PIREC+22
PICDENAM EQU   PIREC+30
PIREGS   EQU   PIREC+38
PIREGS1  EQU   PIREGS
PIREGS2  EQU   PIREGS+32
DSPREC   EQU   0
DSPCDNAM EQU   DSPREC+26
SRBREC   EQU   0
SRBREGS  EQU   SRBREC+22
SRBSRB   EQU   SRBREGS
SRBTYPE  EQU   SRBREC+30
LSRREC   EQU   0
LSRTCB   EQU   LSRREC+22
HISSAVE  EQU   0
RTRNCODE EQU   HISSAVE+16
EID      EQU   0
AMDPRFMT EQU   0
ERRASCB  EQU   0
*                                      START UNREFERENCED COMPONENTS
@NM00010 EQU   HISSAVE
LSRPSW   EQU   LSRREC+14
LSRJBNM  EQU   LSRREC+6
LSRCPUID EQU   LSRREC+4
LSRASCB  EQU   LSRREC
@NM00009 EQU   SRBREGS+4
SRBPSW   EQU   SRBREC+14
SRBJBNM  EQU   SRBREC+6
SRBCPUID EQU   SRBREC+4
@NM00008 EQU   SRBREC
DSPNMCHK EQU   DSPCDNAM
DSPTCB   EQU   DSPREC+22
DSPPSW   EQU   DSPREC+14
DSPJBNM  EQU   DSPREC+6
DSPCPUID EQU   DSPREC+4
DSPASCB  EQU   DSPREC
PINMCHK  EQU   PICDENAM
PIVPA    EQU   PIREC+26
@NM00007 EQU   PIINT
@NM00006 EQU   PIPSW
PIJBNM   EQU   PIREC+6
PICPUID  EQU   PIREC+4
PIASCB   EQU   PIREC
@NM00005 EQU   OUTBUF+9
@NM00004 EQU   OUTBUF
SVR14NRM EQU   GMAREA+80
@NM00003 EQU   REGSAV
OPTPTR   EQU   OURPLIST+8
BUFPTR   EQU   OURPLIST+4
RECPTR   EQU   OURPLIST
ADPLEXT  EQU   ABDPL+52
ADPLCOM4 EQU   ABDPL+40
ADPLCOM3 EQU   ABDPL+36
ADPLCOM2 EQU   ABDPL+32
ADPLCOM1 EQU   ABDPL+28
ADPLFRMT EQU   ABDPL+24
ADPLMEMA EQU   ABDPL+20
ADPLCVT  EQU   ABDPL+16
ADPLPRNT EQU   ABDPL+12
@NM00002 EQU   ADPLFLAG
ADPLSYTM EQU   ADPLFLAG
ADPLSNPR EQU   ADPLFLAG
ADPLSBPL EQU   ABDPL+6
ADPLASID EQU   ABDPL+4
ADPLTCB  EQU   ABDPL
RESERVED EQU   AMDPRTAB+522
CVTTZONE EQU   AMDPRTAB+518
ESPSEC   EQU   ESTOPTME+7
ESPMIN   EQU   ESTOPTME+5
ESPHR    EQU   ESTOPTME+3
ESPDAY   EQU   ESTOPTME
ESSEC    EQU   ESTARTME+7
ESMIN    EQU   ESTARTME+5
ESHR     EQU   ESTARTME+3
ESDAY    EQU   ESTARTME
ADTSBUF  EQU   AMDPRTAB+496
OFSTDATA EQU   AMDPRTAB+494
OFSTEID  EQU   AMDPRTAB+492
AFRMAD   EQU   AMDPRTAB+488
REENTWKA EQU   AMDPRTAB+484
PRFMTADD EQU   AMDPRTAB+480
AEIOCT   EQU   AMDPRTAB+476
EXITADDR EQU   AMDPRTAB+472
EXITNM   EQU   AMDPRTAB+464
RECDLL   EQU   AMDPRTAB+461
@NM00001 EQU   GENFLGS1
FIRSTHSW EQU   GENFLGS1
TSFOUND  EQU   GENFLGS1
EOFINPRO EQU   GENFLGS1
TS       EQU   GENFLGS1
EOF      EQU   GENFLAGS
RR       EQU   GENFLAGS
SRM      EQU   GENFLAGS
RNIO     EQU   GENFLAGS
SYSM     EQU   GENFLAGS
EXT      EQU   GENFLAGS
PICODEA  EQU   PGMNGEN+2
PICODES  EQU   PGMNGEN
Q        EQU   PI+1
P01R     EQU   PIFLGS
SELP     EQU   PIFLGS
USRNGTAB EQU   USRTAB
O        EQU   USR+1
N01R     EQU   USRFLGS
SELU     EQU   USRFLGS
ALLU     EQU   USRFLGS
SVCNUMS  EQU   AMDPRTAB+336
M        EQU   VCF+1
L        EQU   SVCFLGS
SELV     EQU   SVCFLGS
ALLV     EQU   SVCFLGS
IODVADS  EQU   DVADS2
K01RES   EQU   IO+1
JJ       EQU   IOFLGS2
SELI     EQU   IOFLGS2
ALLI     EQU   IOFLGS2
SIODVADS EQU   DVADS1
II       EQU   SIF+1
H        EQU   SIOFLGS
NOEQU    EQU   SIOFLGS
EQUIV    EQU   SIOFLGS
SELS     EQU   SIOFLGS
ALLS     EQU   SIOFLGS
ASCBADDR EQU   AADS
JOBNAMES EQU   NAMES
DAY2     EQU   STOPTIME+10
F        EQU   STOPTIME+8
TIME2    EQU   STOPTIME
DAY      EQU   STARTIME+10
D        EQU   STARTIME+8
TIME     EQU   STARTIME
DDNAME   EQU   AMDPRTAB+32
USEREXIT EQU   AMDPRTAB+24
GTFWDPTR EQU   AMDPRTAB+20
C        EQU   DEBGFLGS+4
B        EQU   IOFLGS
GETEOF   EQU   IOFLGS
DMDFMT   EQU   INRFCFGS
EDITSTOP EQU   INRFCFGS
EXTTRC   EQU   INRFCFGS
RET      EQU   INRFCFGS
FMT      EQU   INRFCFGS
SPIE     EQU   INRFCFGS
TERM     EQU   INRFCFGS
FLMODE   EQU   INRFCFGS
REMAIN   EQU   PTHFLGS2
APP      EQU   PTHFLGS2
REXT     EQU   PTHFLGS1
FRM      EQU   PTHFLGS1
FLT      EQU   PTHFLGS1
HEX      EQU   PTHFLGS1
CON      EQU   PTHFLGS1
GET      EQU   PTHFLGS1
SCN      EQU   PTHFLGS1
ROOT     EQU   PTHFLGS1
CURREC   EQU   AMDPRTAB+4
AFMG     EQU   AMDPRTAB
*                                      END UNREFERENCED COMPONENTS
@RT00084 EQU   IGNORE
@RC00123 EQU   @RC00121
@RF00139 EQU   IGNORE
@ENDDATA EQU   *
         END   AMDSYS02
