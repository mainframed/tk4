         TITLE 'AMDSYS00 - EDIT FORMATTING ROUTINE, SIO-IO RECORDS     *
                        '
AMDSYS00 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'AMDSYS00  76.153'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @10,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@10                                      01S0001
*/********************************************************************/
*/*                                                                  */
*/*                             AMDSYS00                             */
*/*                                                                  */
*/********************************************************************/
* R11=R1;                          /* MOVE PARM ADDRESS TO R11       */
         LR    R11,R1                                           01S0039
* R12=WKAREADD;                    /* R12 IS BASE FOR 200 BYTE WORK  */
         L     R12,WKAREADD(,R11)                               01S0040
*                                  /* AREA USED FOR DSECT            */
* GEN SETS(R13,R15);               /* SET UP USING, SAVE AREA REG    */
         USING @DATD,R12
         ST    R13,@SA00001+4
         LA    R15,@SA00001
         ST    R15,8(R13)
         LR    R13,R15
*/********************************************************************/
*/*                                                                  */
*/*  THIS SEGMENT CHECKS THE INPUT RECORD TO SEE IF IT SHOULD BE     */
*/*  PRINTED OR NOT, AND IF SO, WHETHER THE RECORD IS TO BE DUMPED   */
*/*  IN HEX, FORMATTED IN 2 LINES, OR FORMATTED IN 1 LINE. THE       */
*/*  APPROPRIATE RETURN CODE IS SET UP FOR EACH CASE.                */
*/*                                                                  */
*/********************************************************************/
* IF RECERR='EEEE'X THEN           /* IF RECORD WAS IN ERROR,        */
         L     @14,DATAPTR(,R11)                                02S0042
         CLC   RECERR(2,@14),@CB00622                           02S0042
         BNE   @RF00042                                         02S0042
*   RC=HEXDUMP;                    /* DUMP IT IN HEX                 */
         LA    RC,12                                            02S0043
* ELSE                                                          02S0044
*   DO;                                                         02S0044
         B     @RC00042                                         02S0044
@RF00042 DS    0H                                               02S0045
*     IF TIME2SW=ON × RECEID=IMDMIO1 THEN /* IF 2ND TIME THRU, OR    */
         TM    TIME2SW,B'10000000'                              02S0045
         BO    @RT00045                                         02S0045
         L     @14,EIDPTR(,R11)                                 02S0045
         CLC   RECEID(2,@14),@CB00208                           02S0045
         BNE   @RF00045                                         02S0045
@RT00045 DS    0H                                               02S0046
*                                  /* IF UIO RECORD, THEN ONLY       */
*       RC=PRNTLAST;               /* 1 LINE NEEDED                  */
         LA    RC,4                                             02S0046
*     ELSE                                                      02S0047
*       DO;                                                     02S0047
         B     @RC00045                                         02S0047
@RF00045 DS    0H                                               02S0048
*         DO CTR=1 TO DIM(MYEIDTAB) WHILE LOOPDONE=OFF;         02S0048
         LA    CTR,1                                            02S0048
@DL00048 TM    LOOPDONE,B'01000000'                             02S0048
         BNZ   @DC00048                                         02S0048
*           IF RECEID=MYEIDTAB(CTR) THEN /* IF 2 LINE EID FOUND,     */
         L     @14,EIDPTR(,R11)                                 02S0049
         LR    @08,CTR                                          02S0049
         ALR   @08,@08                                          02S0049
         LA    @07,MYEIDTAB-2(@08)                              02S0049
         CLC   RECEID(2,@14),0(@07)                             02S0049
         BNE   @RF00049                                         02S0049
*             LOOPDONE=ON;         /* FORCE LOOP EXIT                */
         OI    LOOPDONE,B'01000000'                             02S0050
*         END;                                                  02S0051
@RF00049 AL    CTR,@CF00044                                     02S0051
         C     CTR,@CF00098                                     02S0051
         BNH   @DL00048                                         02S0051
@DC00048 DS    0H                                               02S0052
*         IF LOOPDONE=ON THEN      /* IF EXIT WAS FORCED, THEN       */
         TM    LOOPDONE,B'01000000'                             02S0052
         BNO   @RF00052                                         02S0052
*           DO;                    /* EID WAS FOUND                  */
*             LOOPDONE=OFF;        /* RESET SWITCH, AND INDICATE     */
         NI    LOOPDONE,B'10111111'                             02S0054
*             RC=PRNTFRST;         /* LINE 1 OF 2 TO BE PROCESSED    */
         SLR   RC,RC                                            02S0055
*           END;                                                02S0056
*         ELSE                     /* NO EID FOUND,                  */
*           RC=RECSKIP;            /* SKIP RECORD                    */
         B     @RC00052                                         02S0057
@RF00052 LA    RC,8                                             02S0057
*       END;                                                    02S0058
@RC00052 DS    0H                                               02S0059
*   END;                                                        02S0059
@RC00045 DS    0H                                               02S0060
* IF RC=PRNTFRST × RC=PRNTLAST THEN  /* IF RECORD IS FORMATTED BY    */
@RC00042 LTR   RC,RC                                            01S0060
         BZ    @RT00060                                         01S0060
         C     RC,@CF00098                                      01S0060
         BNE   @RF00060                                         01S0060
@RT00060 DS    0H                                               01S0061
*                                  /* THIS ROUTINE,                  */
*   DO;                            /* THEN FORMAT IT                 */
*/********************************************************************/
*/*                                                                  */
*/*  THIS SEGMENT FORMATS THE INPUT RECORD AFTER DECIDING WHICH      */
*/*  FORMAT TO USE.                                                  */
*/*                                                                  */
*/********************************************************************/
* R4=SNAPPARM->ADPLBUF;            /* LOAD ADDR OF LOCAL BUFFER      */
         L     @14,SNAPPARM(,R11)                               02S0062
         L     R4,ADPLBUF(,@14)                                 02S0062
* IF RECEID=IMDMIO1 THEN           /* IF UIO RECORD, FORMAT IT       */
         L     @14,EIDPTR(,R11)                                 02S0063
         CLC   RECEID(2,@14),@CB00208                           02S0063
         BNE   @RF00063                                         02S0063
*   DO;                                                         02S0064
*/********************************************************************/
*/*                                                                  */
*/*  THIS SEGMENT FORMATS THE UIO RECORD INTO 1 OUTPUT LINE.         */
*/*                                                                  */
*/********************************************************************/
* CALL CHECKDEV (UIODEV,IO);       /* SEE IF DEVICE IS BEING TRACED  */
         L     @14,DATAPTR(,R11)                                03S0065
         LA    @14,UIODEV(,@14)                                 03S0065
         ST    @14,@AL00001                                     03S0065
         LA    @14,IO(,AEDITCBR)                                03S0065
         ST    @14,@AL00001+4                                   03S0065
         LA    @01,@AL00001                                     03S0065
         BAL   @14,CHECKDEV                                     03S0065
* IF R15=0 THEN                    /* IF DEVICE IS BEING TRACED,     */
         LTR   R15,R15                                          03S0066
         BNZ   @RF00066                                         03S0066
*   DO;                            /* FORMAT THE RECORD              */
*     R0=ADDR(UIOPTRN);            /* SET UP PATTERN ADDRESS         */
         LA    R0,UIOPTRN                                       03S0068
*     R1=SNAPPARM;                 /* POINT TO PARM FOR FORMAT       */
         L     R1,SNAPPARM(,R11)                                03S0069
*     ADPLFMT1=ADDR(UIOLBLS);      /* INITIALIZE LABEL POINTER       */
         LA    @14,UIOLBLS                                      03S0070
         ST    @14,ADPLFMT1(,R1)                                03S0070
*     ADPLFMT2=DATAPTR;            /* INITIALIZE DATA POINTER        */
         L     @14,DATAPTR(,R11)                                03S0071
         ST    @14,ADPLFMT2(,R1)                                03S0071
*     CALL FRMT;                   /* FORMAT THE LINE                */
         L     @15,FRMADDR(,R11)                                03S0072
         BALR  @14,@15                                          03S0072
*   END;                                                        03S0073
* ELSE                             /* DEVICE IS NOT BEING TRACED     */
*   RC=RECSKIP;                    /* SKIP RECORD                    */
         B     @RC00066                                         03S0074
@RF00066 LA    RC,8                                             03S0074
*   END;                                                        02S0075
* ELSE                                                          02S0076
*   DO;                                                         02S0076
         B     @RC00063                                         02S0076
@RF00063 DS    0H                                               02S0077
*     IF RECEID=IMDMSIO THEN       /* IF SIO RECORD, FORMAT 1 LINE   */
         L     @14,EIDPTR(,R11)                                 02S0077
         CLC   RECEID(2,@14),@CB00212                           02S0077
         BNE   @RF00077                                         02S0077
*       DO;                                                     02S0078
*/********************************************************************/
*/*                                                                  */
*/*  THIS SEGMENT FORMATS A LINE OF THE SIO RECORD.                  */
*/*                                                                  */
*/********************************************************************/
* IF TIME2SW=OFF THEN              /* IF THIS IS THE FIRST TIME FOR  */
         TM    TIME2SW,B'10000000'                              03S0079
         BNZ   @RF00079                                         03S0079
*                                  /* THIS RECORD,                   */
*   DO;                            /* FORMAT THE FIRST LINE          */
*     CALL CHECKDEV (SIODEV,SIF);  /* ARE WE FORMATTING THIS DEVICE  */
         L     @14,DATAPTR(,R11)                                03S0081
         LA    @14,SIODEV(,@14)                                 03S0081
         ST    @14,@AL00001                                     03S0081
         LA    @14,SIF(,AEDITCBR)                               03S0081
         ST    @14,@AL00001+4                                   03S0081
         LA    @01,@AL00001                                     03S0081
         BAL   @14,CHECKDEV                                     03S0081
*     IF R15=0 THEN                                             03S0082
         LTR   R15,R15                                          03S0082
         BNZ   @RF00082                                         03S0082
*       DO;                        /* YES, FORMAT LINE ONE           */
*         R1=SNAPPARM;             /* SET UP PARM FOR FORMAT         */
         L     R1,SNAPPARM(,R11)                                03S0084
*         R0=ADDR(SIOPTRN1);       /* POINT TO FIRST PATTERN         */
         LA    R0,SIOPTRN1                                      03S0085
*         ADPLFMT1=ADDR(SIOLBLS);  /* INITIALIZE LABEL POINTER       */
         LA    @14,SIOLBLS                                      03S0086
         ST    @14,ADPLFMT1(,R1)                                03S0086
*         ADPLFMT2=DATAPTR;        /* INITIALIZE DATA POINTER        */
         L     @14,DATAPTR(,R11)                                03S0087
         ST    @14,ADPLFMT2(,R1)                                03S0087
*         CALL FRMT;               /* FORMAT PART OF LINE            */
         L     @15,FRMADDR(,R11)                                03S0088
         BALR  @14,@15                                          03S0088
*         R0=ADDR(SIOPTRN2);       /* SET UP 2ND PATTERN             */
         LA    R0,SIOPTRN2                                      03S0089
*         ADPLFMT2=ADDR(SIODEV);   /* POINT TO REST OF DATA          */
         L     @14,DATAPTR(,R11)                                03S0090
         LA    @14,SIODEV(,@14)                                 03S0090
         ST    @14,ADPLFMT2(,R1)                                03S0090
*         CALL FRMT;               /* FORMAT REST OF LINE            */
         L     @15,FRMADDR(,R11)                                03S0091
         BALR  @14,@15                                          03S0091
*/********************************************************************/
*/*                                                                  */
*/*  THIS SEGMENT CHECKS CERTAIN FIELDS IN THE SIO RECORD FOR        */
*/*  'U/A' OR ASTERISKS. IF THE FIELD CONTAINS EITHER INDICATOR, THE */
*/*  FORMATTED LINE IN THE OUTPUT BUFFER IS MODIFIED TO REFLECT THE  */
*/*  INDICATION.                                                     */
*/*                                                                  */
*/********************************************************************/
* IF SIOASCB=UA(1:LENGTH(SIOASCB)) THEN  /* CHECK ASCB FIELD         */
         L     @14,DATAPTR(,R11)                                04S0092
         CLC   SIOASCB(4,@14),UA                                04S0092
         BNE   @RF00092                                         04S0092
*   BUFFER(16:23)=UA;                                           04S0093
         MVC   BUFFER+15(8,R4),UA                               04S0093
* ELSE                                                          04S0094
*   IF SIOASCB=ASTER(1:LENGTH(SIOASCB)) THEN                    04S0094
         B     @RC00092                                         04S0094
@RF00092 L     @14,DATAPTR(,R11)                                04S0094
         CLC   SIOASCB(4,@14),ASTER                             04S0094
         BNE   @RF00094                                         04S0094
*     BUFFER(16:23)=ASTER;                                      04S0095
         MVC   BUFFER+15(8,R4),ASTER                            04S0095
* IF SIOCPA=UA THEN                /* CHECK CPA FIELD                */
@RF00094 DS    0H                                               04S0096
@RC00092 L     @14,DATAPTR(,R11)                                04S0096
         CLC   SIOCPA(8,@14),UA                                 04S0096
         BNE   @RF00096                                         04S0096
*   DO;                                                         04S0097
*     BUFFER(59:66)=UA;                                         04S0098
         MVC   BUFFER+58(8,R4),UA                               04S0098
*     BUFFER(68:75)='';                                         04S0099
         MVI   BUFFER+67(R4),C' '                               04S0099
         MVC   BUFFER+68(7,R4),BUFFER+67(R4)                    04S0099
*   END;                                                        04S0100
* ELSE                                                          04S0101
*   IF SIOCPA=ASTER THEN                                        04S0101
         B     @RC00096                                         04S0101
@RF00096 L     @14,DATAPTR(,R11)                                04S0101
         CLC   SIOCPA(8,@14),ASTER                              04S0101
         BNE   @RF00101                                         04S0101
*     DO;                                                       04S0102
*       BUFFER(59:66)=ASTER;                                    04S0103
         MVC   BUFFER+58(8,R4),ASTER                            04S0103
*       BUFFER(68:75)=ASTER;                                    04S0104
         MVC   BUFFER+67(8,R4),ASTER                            04S0104
*     END;                                                      04S0105
* IF SIODSID=UA(1:LENGTH(SIODSID)) THEN  /* CHECK DSID FIELD         */
@RF00101 DS    0H                                               04S0106
@RC00096 L     @14,DATAPTR(,R11)                                04S0106
         CLC   SIODSID(4,@14),UA                                04S0106
         BNE   @RF00106                                         04S0106
*   BUFFER(97:104)=UA;                                          04S0107
         MVC   BUFFER+96(8,R4),UA                               04S0107
* ELSE                                                          04S0108
*   IF SIODSID=ASTER(1:LENGTH(SIODSID)) THEN                    04S0108
         B     @RC00106                                         04S0108
@RF00106 L     @14,DATAPTR(,R11)                                04S0108
         CLC   SIODSID(4,@14),ASTER                             04S0108
         BNE   @RF00108                                         04S0108
*     BUFFER(97:104)=ASTER;                                     04S0109
         MVC   BUFFER+96(8,R4),ASTER                            04S0109
*         TIME2SW=ON;              /* SET SWITCH TO FORMAT LINE 2    */
@RF00108 DS    0H                                               03S0110
@RC00106 OI    TIME2SW,B'10000000'                              03S0110
*       END;                                                    03S0111
*     ELSE                         /* IF DEVICE IS NOT BEING DONE,   */
*       RC=RECSKIP;                /* SKIP THE RECORD                */
         B     @RC00082                                         03S0112
@RF00082 LA    RC,8                                             03S0112
*   END;                                                        03S0113
* ELSE                             /* IF THIS IS THE 2ND TIME FOR    */
*                                  /* THIS RECORD,                   */
*   DO;                            /* FORMAT THE SECOND LINE         */
         B     @RC00079                                         03S0114
@RF00079 DS    0H                                               03S0115
*     R1=SNAPPARM;                 /* SET UP PARM FOR FORMAT         */
         L     R1,SNAPPARM(,R11)                                03S0115
*     R0=ADDR(SIOPTRN3);           /* SET UP 3RD PATTERN     @ZA09664*/
         LA    R0,SIOPTRN3                                      03S0116
*     SIOCC=SIOCC&'30'X;           /*  CONDITION CODE        @ZA09664*/
         L     @14,DATAPTR(,R11)                                03S0117
         NI    SIOCC(@14),X'30'                                 03S0117
*     ADPLFMT2=ADDR(SIOCC);        /* POINT TO DATA                  */
         LA    @14,SIOCC(,@14)                                  03S0118
         ST    @14,ADPLFMT2(,R1)                                03S0118
*     CALL FRMT;                   /* FORMAT PART OF LINE 2          */
         L     @15,FRMADDR(,R11)                                03S0119
         BALR  @14,@15                                          03S0119
*     BLNKCC=' ';               /* BLANK OUT SECOND BYTE CC  @YM09151*/
         MVI   BLNKCC(R4),C' '                                  03S0120
*     R0=ADDR(SIOPTRN4);           /* SET UP 4TH PATTERN             */
         LA    R0,SIOPTRN4                                      03S0121
*     ADPLFMT2=ADDR(SIOSTS);       /* DATA FOR LAST PATTERN          */
         L     @14,DATAPTR(,R11)                                03S0122
         LA    @14,SIOSTS(,@14)                                 03S0122
         ST    @14,ADPLFMT2(,R1)                                03S0122
*     CALL FRMT;                   /* FORMAT REST OF RECORD          */
         L     @15,FRMADDR(,R11)                                03S0123
         BALR  @14,@15                                          03S0123
*/********************************************************************/
*/*                                                                  */
*/*  THIS SEGMENT CHECKS CERTAIN FIELDS IN THE SIO RECORD FOR        */
*/*  'U/A' OR ASTERISKS. IF THE FIELD CONTAINS EITHER INDICATOR, THE */
*/*  FORMATTED LINE IN THE OUTPUT BUFFER IS MODIFIED TO REFLECT THE  */
*/*  INDICATION.                                                     */
*/*                                                                  */
*/********************************************************************/
* IF SIOFLAGS=UA(1:LENGTH(SIOFLAGS)) THEN  /* CHECK FLAGS FIELD      */
         L     @14,DATAPTR(,R11)                                04S0124
         CLC   SIOFLAGS(6,@14),UA                               04S0124
         BNE   @RF00124                                         04S0124
*   DO;                                                         04S0125
*     BUFFER(16:23)=UA;                                         04S0126
         MVC   BUFFER+15(8,R4),UA                               04S0126
*     BUFFER(25:28)='';                                         04S0127
         MVI   BUFFER+24(R4),C' '                               04S0127
         MVC   BUFFER+25(3,R4),BUFFER+24(R4)                    04S0127
*   END;                                                        04S0128
* ELSE                                                          04S0129
*   IF SIOFLAGS=ASTER(1:LENGTH(SIOFLAGS)) THEN                  04S0129
         B     @RC00124                                         04S0129
@RF00124 L     @14,DATAPTR(,R11)                                04S0129
         CLC   SIOFLAGS(6,@14),ASTER                            04S0129
         BNE   @RF00129                                         04S0129
*     DO;                                                       04S0130
*       BUFFER(16:23)=ASTER;                                    04S0131
         MVC   BUFFER+15(8,R4),ASTER                            04S0131
*       BUFFER(25:28)=ASTER(1:4);                               04S0132
         MVC   BUFFER+24(4,R4),ASTER                            04S0132
*     END;                                                      04S0133
* IF SIOSEEK=UA THEN               /* CHECK FLAGS FIELD              */
@RF00129 DS    0H                                               04S0134
@RC00124 L     @14,DATAPTR(,R11)                                04S0134
         CLC   SIOSEEK(8,@14),UA                                04S0134
         BNE   @RF00134                                         04S0134
*   DO;                                                         04S0135
*     BUFFER(59:66)=UA;                                         04S0136
         MVC   BUFFER+58(8,R4),UA                               04S0136
*     BUFFER(68:75)='';                                         04S0137
         MVI   BUFFER+67(R4),C' '                               04S0137
         MVC   BUFFER+68(7,R4),BUFFER+67(R4)                    04S0137
*   END;                                                        04S0138
* ELSE                                                          04S0139
*   IF SIOSEEK=ASTER THEN                                       04S0139
         B     @RC00134                                         04S0139
@RF00134 L     @14,DATAPTR(,R11)                                04S0139
         CLC   SIOSEEK(8,@14),ASTER                             04S0139
         BNE   @RF00139                                         04S0139
*     DO;                                                       04S0140
*       BUFFER(59:66)=ASTER;                                    04S0141
         MVC   BUFFER+58(8,R4),ASTER                            04S0141
*       BUFFER(68:75)=ASTER;                                    04S0142
         MVC   BUFFER+67(8,R4),ASTER                            04S0142
*     END;                                                      04S0143
* IF SIOCC=UA(1) THEN              /* CHECK CC FIELD                 */
@RF00139 DS    0H                                               04S0144
@RC00134 L     @14,DATAPTR(,R11)                                04S0144
         CLC   SIOCC(1,@14),UA                                  04S0144
         BNE   @RF00144                                         04S0144
*   BUFFER(81:83)=UA(1:3);    /*                             @YM09151*/
         MVC   BUFFER+80(3,R4),UA                               04S0145
* ELSE                                                          04S0146
*   IF SIOCC=ASTER(1) THEN                                      04S0146
         B     @RC00144                                         04S0146
@RF00144 L     @14,DATAPTR(,R11)                                04S0146
         CLC   SIOCC(1,@14),ASTER                               04S0146
         BNE   @RF00146                                         04S0146
*     BUFFER(81:82)=ASTER(1:2);       /*                     @YM09151*/
         MVC   BUFFER+80(2,R4),ASTER                            04S0147
*     TIME2SW=OFF;                 /* RESET SECOND TIME SWITCH       */
@RF00146 DS    0H                                               03S0148
@RC00144 NI    TIME2SW,B'01111111'                              03S0148
*   END;                                                        03S0149
*       END;                                                    02S0150
*     ELSE                                                      02S0151
*       DO;                                                     02S0151
         B     @RC00077                                         02S0151
@RF00077 DS    0H                                               02S0152
*         IF RECEID=IMDMIO2 ×      /* IF IO RECORD OR                */
*            RECEID=IMDMPCI ×      /* PCI RECORD OR                  */
*            RECEID=IMDMEOS THEN   /* EOS RECORD, FORMAT 1 LINE      */
         L     @14,EIDPTR(,R11)                                 02S0152
         CLC   RECEID(2,@14),@CB00210                           02S0152
         BE    @RT00152                                         02S0152
         CLC   RECEID(2,@14),@CB00202                           02S0152
         BE    @RT00152                                         02S0152
         CLC   RECEID(2,@14),@CB00224                           02S0152
         BNE   @RF00152                                         02S0152
@RT00152 DS    0H                                               02S0153
*           DO;                                                 02S0153
*/********************************************************************/
*/*                                                                  */
*/*  THIS SEGMENT FORMATS A LINE OF THE IO, PCI, AND EOS RECORDS.    */
*/*                                                                  */
*/********************************************************************/
* IF TIME2SW=OFF THEN              /* IF THIS IS THE FIRST TIME FOR  */
         TM    TIME2SW,B'10000000'                              03S0154
         BNZ   @RF00154                                         03S0154
*                                  /* THIS RECORD,                   */
*   DO;                            /* FORMAT THE FIRST LINE          */
*     CALL CHECKDEV (IODEV,IO);    /* ARE WE FORMATTING THIS DEVICE  */
         L     @14,DATAPTR(,R11)                                03S0156
         LA    @14,IODEV(,@14)                                  03S0156
         ST    @14,@AL00001                                     03S0156
         LA    @14,IO(,AEDITCBR)                                03S0156
         ST    @14,@AL00001+4                                   03S0156
         LA    @01,@AL00001                                     03S0156
         BAL   @14,CHECKDEV                                     03S0156
*     IF R15=0 THEN                                             03S0157
         LTR   R15,R15                                          03S0157
         BNZ   @RF00157                                         03S0157
*       DO;                        /* YES, FORMAT LINE ONE           */
*         IF RECEID=IMDMIO2 THEN   /* CHECK FOR IO RECORD            */
         L     @14,EIDPTR(,R11)                                 03S0159
         CLC   RECEID(2,@14),@CB00210                           03S0159
         BNE   @RF00159                                         03S0159
*           BUFFER(1:3)='IO ';     /* PUT RECORD TYPE IN LINE        */
         MVC   BUFFER(3,R4),@CC00637                            03S0160
*         IF RECEID=IMDMPCI THEN   /* CHECK FOR PCI RECORD           */
@RF00159 L     @14,EIDPTR(,R11)                                 03S0161
         CLC   RECEID(2,@14),@CB00202                           03S0161
         BNE   @RF00161                                         03S0161
*           BUFFER(1:3)='PCI';     /* PUT RECORD TYPE IN LINE        */
         MVC   BUFFER(3,R4),@CC00638                            03S0162
*         IF RECEID=IMDMEOS THEN   /* CHECK FOR EOS RECORD           */
@RF00161 L     @14,EIDPTR(,R11)                                 03S0163
         CLC   RECEID(2,@14),@CB00224                           03S0163
         BNE   @RF00163                                         03S0163
*           BUFFER(1:3)='EOS';     /* PUT RECORD TYPE IN LINE        */
         MVC   BUFFER(3,R4),@CC00639                            03S0164
*         R1=SNAPPARM;             /* SET UP PARM FOR FORMAT         */
@RF00163 L     R1,SNAPPARM(,R11)                                03S0165
*         R0=ADDR(IOPTRN1);        /* POINT TO FIRST PATTERN         */
         LA    R0,IOPTRN1                                       03S0166
*         ADPLFMT1=ADDR(IOLBLS);   /* INITIALIZE LABEL POINTER       */
         LA    @14,IOLBLS                                       03S0167
         ST    @14,ADPLFMT1(,R1)                                03S0167
*         ADPLFMT2=DATAPTR;        /* INITIALIZE DATA POINTER        */
         L     @14,DATAPTR(,R11)                                03S0168
         ST    @14,ADPLFMT2(,R1)                                03S0168
*         CALL FRMT;               /* FORMAT PART OF LINE            */
         L     @15,FRMADDR(,R11)                                03S0169
         BALR  @14,@15                                          03S0169
*         R0=ADDR(IOPTRN2);        /* SET UP 2ND PATTERN             */
         LA    R0,IOPTRN2                                       03S0170
*         ADPLFMT2=ADDR(IODEV);    /* POINT TO REST OF DATA          */
         L     @14,DATAPTR(,R11)                                03S0171
         LA    @14,IODEV(,@14)                                  03S0171
         ST    @14,ADPLFMT2(,R1)                                03S0171
*         CALL FRMT;               /* FORMAT REST OF LINE            */
         L     @15,FRMADDR(,R11)                                03S0172
         BALR  @14,@15                                          03S0172
*/********************************************************************/
*/*                                                                  */
*/*  THIS SEGMENT CHECKS CERTAIN FIELDS IN THE IO RECORD FOR 'N/A',  */
*/*  'U/A' OR ASTERISKS. IF THE FIELD CONTAINS ANY INDICATOR, THE    */
*/*  FORMATTED LINE IN THE OUTPUT BUFFER IS MODIFIED TO REFLECT THE  */
*/*  INDICATION.                                                     */
*/*                                                                  */
*/********************************************************************/
* IF IOASCB=UA(1:LENGTH(IOASCB)) THEN  /* CHECK ASCB FIELD           */
         L     @14,DATAPTR(,R11)                                04S0173
         CLC   IOASCB(4,@14),UA                                 04S0173
         BNE   @RF00173                                         04S0173
*   BUFFER(16:23)=UA;                                           04S0174
         MVC   BUFFER+15(8,R4),UA                               04S0174
* ELSE                                                          04S0175
*   IF IOASCB=ASTER(1:LENGTH(IOASCB)) THEN                      04S0175
         B     @RC00173                                         04S0175
@RF00173 L     @14,DATAPTR(,R11)                                04S0175
         CLC   IOASCB(4,@14),ASTER                              04S0175
         BNE   @RF00175                                         04S0175
*     BUFFER(16:23)=ASTER;                                      04S0176
         MVC   BUFFER+15(8,R4),ASTER                            04S0176
* IF IOTCB=UA(1:LENGTH(IOTCB)) THEN  /* CHECK TCB FIELD              */
@RF00175 DS    0H                                               04S0177
@RC00173 L     @14,DATAPTR(,R11)                                04S0177
         CLC   IOTCB(4,@14),UA                                  04S0177
         BNE   @RF00177                                         04S0177
*   BUFFER(82:89)=UA;                                           04S0178
         MVC   BUFFER+81(8,R4),UA                               04S0178
* ELSE                                                          04S0179
*   IF IOTCB=ASTER(1:LENGTH(IOTCB)) THEN                        04S0179
         B     @RC00177                                         04S0179
@RF00177 L     @14,DATAPTR(,R11)                                04S0179
         CLC   IOTCB(4,@14),ASTER                               04S0179
         BNE   @RF00179                                         04S0179
*     BUFFER(82:89)=ASTER;                                      04S0180
         MVC   BUFFER+81(8,R4),ASTER                            04S0180
*   ELSE                                                        04S0181
*     IF IOTCB=NA(1:LENGTH(IOTCB)) THEN                         04S0181
         B     @RC00179                                         04S0181
@RF00179 L     @14,DATAPTR(,R11)                                04S0181
         CLC   IOTCB(4,@14),NA                                  04S0181
         BNE   @RF00181                                         04S0181
*       BUFFER(82:89)=NA;                                       04S0182
         MVC   BUFFER+81(8,R4),NA                               04S0182
* IF IODSID=UA(1:LENGTH(IODSID)) THEN  /* CHECK DSID FIELD           */
@RF00181 DS    0H                                               04S0183
@RC00179 DS    0H                                               04S0183
@RC00177 L     @14,DATAPTR(,R11)                                04S0183
         CLC   IODSID(4,@14),UA                                 04S0183
         BNE   @RF00183                                         04S0183
*   BUFFER(97:104)=UA;                                          04S0184
         MVC   BUFFER+96(8,R4),UA                               04S0184
* ELSE                                                          04S0185
*   IF IODSID=ASTER(1:LENGTH(IODSID)) THEN                      04S0185
         B     @RC00183                                         04S0185
@RF00183 L     @14,DATAPTR(,R11)                                04S0185
         CLC   IODSID(4,@14),ASTER                              04S0185
         BNE   @RF00185                                         04S0185
*     BUFFER(97:104)=ASTER;                                     04S0186
         MVC   BUFFER+96(8,R4),ASTER                            04S0186
*         TIME2SW=ON;              /* SET SWITCH TO FORMAT LINE 2    */
@RF00185 DS    0H                                               03S0187
@RC00183 OI    TIME2SW,B'10000000'                              03S0187
*       END;                                                    03S0188
*     ELSE                         /* IF DEVICE IS NOT BEING DONE,   */
*       RC=RECSKIP;                /* SKIP THE RECORD                */
         B     @RC00157                                         03S0189
@RF00157 LA    RC,8                                             03S0189
*   END;                                                        03S0190
* ELSE                             /* IF THIS IS THE 2ND TIME FOR    */
*                                  /* THIS RECORD,                   */
*   DO;                            /* FORMAT THE SECOND LINE         */
         B     @RC00154                                         03S0191
@RF00154 DS    0H                                               03S0192
*     R1=SNAPPARM;                 /* SET UP PARM FOR FORMAT         */
         L     R1,SNAPPARM(,R11)                                03S0192
*     R0=ADDR(IOPTRN3);            /* SET UP 3RD PATTERN             */
         LA    R0,IOPTRN3                                       03S0193
*     ADPLFMT2=ADDR(IOCSW);        /* POINT TO DATA                  */
         L     @14,DATAPTR(,R11)                                03S0194
         LA    @14,IOCSW(,@14)                                  03S0194
         ST    @14,ADPLFMT2(,R1)                                03S0194
*     CALL FRMT;                   /* FORMAT PART OF LINE 2          */
         L     @15,FRMADDR(,R11)                                03S0195
         BALR  @14,@15                                          03S0195
*     R0=ADDR(IOPTRN4);            /* SET UP 4TH PATTERN             */
         LA    R0,IOPTRN4                                       03S0196
*     ADPLFMT2=ADDR(IOFLA);        /* DATA FOR LAST PATTERN          */
         L     @14,DATAPTR(,R11)                                03S0197
         LA    @14,IOFLA(,@14)                                  03S0197
         ST    @14,ADPLFMT2(,R1)                                03S0197
*     CALL FRMT;                   /* FORMAT REST OF RECORD          */
         L     @15,FRMADDR(,R11)                                03S0198
         BALR  @14,@15                                          03S0198
*/********************************************************************/
*/*                                                                  */
*/*  THIS SEGMENT CHECKS CERTAIN FIELDS IN THE IO RECORD FOR 'N/A',  */
*/*  'U/A' OR ASTERISKS. IF THE FIELD CONTAINS ANY INDICATOR, THE    */
*/*  FORMATTED LINE IN THE OUTPUT BUFFER IS MODIFIED TO REFLECT THE  */
*/*  INDICATION.                                                     */
*/*                                                                  */
*/********************************************************************/
* IF IOSNS=UA(1:LENGTH(IOSNS)) THEN  /* CHECK SNS FIELD              */
         L     @14,DATAPTR(,R11)                                04S0199
         CLC   IOSNS(2,@14),UA                                  04S0199
         BNE   @RF00199                                         04S0199
*   BUFFER(41:44)=UA(1:4);                                      04S0200
         MVC   BUFFER+40(4,R4),UA                               04S0200
* ELSE                                                          04S0201
*   IF IOSNS=ASTER(1:LENGTH(IOSNS)) THEN                        04S0201
         B     @RC00199                                         04S0201
@RF00199 L     @14,DATAPTR(,R11)                                04S0201
         CLC   IOSNS(2,@14),ASTER                               04S0201
         BNE   @RF00201                                         04S0201
*     BUFFER(41:44)=ASTER(1:4);                                 04S0202
         MVC   BUFFER+40(4,R4),ASTER                            04S0202
*   ELSE                                                        04S0203
*     IF IOSNS=NA(1:LENGTH(IOSNS)) THEN                         04S0203
         B     @RC00201                                         04S0203
@RF00201 L     @14,DATAPTR(,R11)                                04S0203
         CLC   IOSNS(2,@14),NA                                  04S0203
         BNE   @RF00203                                         04S0203
*       BUFFER(41:44)=NA(1:4);                                  04S0204
         MVC   BUFFER+40(4,R4),NA                               04S0204
* IF IOCPA=UA THEN                 /* CHECK CPA FIELD                */
@RF00203 DS    0H                                               04S0205
@RC00201 DS    0H                                               04S0205
@RC00199 L     @14,DATAPTR(,R11)                                04S0205
         CLC   IOCPA(8,@14),UA                                  04S0205
         BNE   @RF00205                                         04S0205
*   DO;                                                         04S0206
*     BUFFER(59:66)=UA;                                         04S0207
         MVC   BUFFER+58(8,R4),UA                               04S0207
*     BUFFER(68:75)='';                                         04S0208
         MVI   BUFFER+67(R4),C' '                               04S0208
         MVC   BUFFER+68(7,R4),BUFFER+67(R4)                    04S0208
*   END;                                                        04S0209
* ELSE                                                          04S0210
*   IF IOCPA=ASTER THEN                                         04S0210
         B     @RC00205                                         04S0210
@RF00205 L     @14,DATAPTR(,R11)                                04S0210
         CLC   IOCPA(8,@14),ASTER                               04S0210
         BNE   @RF00210                                         04S0210
*     DO;                                                       04S0211
*       BUFFER(59:66)=ASTER;                                    04S0212
         MVC   BUFFER+58(8,R4),ASTER                            04S0212
*       BUFFER(68:75)=ASTER;                                    04S0213
         MVC   BUFFER+67(8,R4),ASTER                            04S0213
*     END;                                                      04S0214
* IF IOFLAGS(1:4)=UA(1:4) THEN     /* CHECK 1ST PART OF FLAGS FIELD  */
@RF00210 DS    0H                                               04S0215
@RC00205 L     @14,DATAPTR(,R11)                                04S0215
         CLC   IOFLAGS(4,@14),UA                                04S0215
         BNE   @RF00215                                         04S0215
*   BUFFER(82:89)=UA;                                           04S0216
         MVC   BUFFER+81(8,R4),UA                               04S0216
* ELSE                                                          04S0217
*   IF IOFLAGS(1:4)=ASTER(1:4) THEN                             04S0217
         B     @RC00215                                         04S0217
@RF00215 L     @14,DATAPTR(,R11)                                04S0217
         CLC   IOFLAGS(4,@14),ASTER                             04S0217
         BNE   @RF00217                                         04S0217
*     BUFFER(82:89)=ASTER;                                      04S0218
         MVC   BUFFER+81(8,R4),ASTER                            04S0218
* IF IOFLAGS(5:9)=ASTER(1:5) THEN  /* CHECK 2ND PART OF FLAGS FIELD  */
@RF00217 DS    0H                                               04S0219
@RC00215 L     @14,DATAPTR(,R11)                                04S0219
         CLC   IOFLAGS+4(5,@14),ASTER                           04S0219
         BNE   @RF00219                                         04S0219
*   DO;                                                         04S0220
*     BUFFER(92:99)=ASTER;                                      04S0221
         MVC   BUFFER+91(8,R4),ASTER                            04S0221
*     BUFFER(101:102)=ASTER(1:2);                               04S0222
         MVC   BUFFER+100(2,R4),ASTER                           04S0222
*   END;                                                        04S0223
*     TIME2SW=OFF;                 /* RESET SECOND TIME SWITCH       */
@RF00219 NI    TIME2SW,B'01111111'                              03S0224
*   END;                                                        03S0225
*           END;                                                02S0226
@RC00154 DS    0H                                               02S0227
*       END;                                                    02S0227
@RF00152 DS    0H                                               02S0228
*   END;                                                        02S0228
@RC00077 DS    0H                                               02S0229
*   END;                                                        01S0229
@RC00063 DS    0H                                               01S0230
* RETURN CODE(RC);                 /* RETURN CODE HAS BEEN SET UP    */
@RF00060 LR    @15,RC                                           01S0230
         L     @13,4(,@13)                                      01S0230
         L     @14,12(,@13)                                     01S0230
         LM    @00,@12,20(@13)                                  01S0230
         BR    @14                                              01S0230
*/********************************************************************/
*/*                                                                  */
*/*  THIS SUBROUTINE DETERMINES WHETHER THE DEVICE IN THE TRACE      */
*/*  RECORD IS TO BE TRACED OR NOT, AND PASSES A RETURN CODE BACK    */
*/*  IN REGISTER 15.                                                 */
*/*                                                                  */
*/********************************************************************/
*CHECKDEV:                                                      02S0231
* PROC (DEV,TABL);                                              02S0231
CHECKDEV STM   @14,@12,12(@13)                                  02S0231
         MVC   @PC00002(8),0(@01)                               02S0231
* DCL DEV CHAR(2);                 /* DEVICE TO BE CHECKED           */
* DCL 1 TABL,                      /* TABLE TO CHECK WITH            */
*       3 * BIT(32),                                            02S0233
*         5 ALL BIT(1),            /* ALL DEVICES ACCEPTABLE         */
*         5 SEL BIT(1),            /* DEVICES IN LIST ACCEPTABLE     */
*       3 DVCS(50) CHAR(2);        /* LIST OF ACCEPTABLE DEVICES     */
* DCL DELIM CHAR(2) CONSTANT('  '); /* LIST DELIMITER                */
* IF ALL=ON THEN                   /* IF ALL DEVICES ARE OK,         */
         L     @14,@PC00002+4                                   02S0235
         TM    ALL(@14),B'10000000'                             02S0235
         BNO   @RF00235                                         02S0235
*   R15=0;                         /* SET GOOD RETURN CODE           */
         SLR   R15,R15                                          02S0236
* ELSE                             /* IF ALL ARE NOT OK,             */
*   DO;                            /* CHECK FOR SOME OK              */
         B     @RC00235                                         02S0237
@RF00235 DS    0H                                               02S0238
*     IF SEL=ON THEN               /* IF SOME DEVICES ARE OK,        */
         L     @14,@PC00002+4                                   02S0238
         TM    SEL(@14),B'01000000'                             02S0238
         BNO   @RF00238                                         02S0238
*       DO;                        /* CHECK FOR SPECIFIC DEVICE      */
*         DO CTR=1 TO DIM(DVCS) WHILE DEVFOUND=OFF;             02S0240
         LA    CTR,1                                            02S0240
@DL00240 TM    DEVFOUND,B'00100000'                             02S0240
         BNZ   @DC00240                                         02S0240
*           IF DVCS(CTR)=DEV THEN  /* IF DEVICE MATCH FOUND,         */
         LR    @14,CTR                                          02S0241
         ALR   @14,@14                                          02S0241
         L     @08,@PC00002+4                                   02S0241
         L     @07,@PC00002                                     02S0241
         ALR   @08,@14                                          02S0241
         CLC   DVCS-2(2,@08),DEV(@07)                           02S0241
         BNE   @RF00241                                         02S0241
*             DEVFOUND=ON;         /* INDICATE SO                    */
         OI    DEVFOUND,B'00100000'                             02S0242
*           ELSE                                                02S0243
*             IF DVCS(CTR)=DELIM THEN /* IF DELIMITER REACHED,       */
         B     @RC00241                                         02S0243
@RF00241 LR    @14,CTR                                          02S0243
         ALR   @14,@14                                          02S0243
         L     @08,@PC00002+4                                   02S0243
         ALR   @08,@14                                          02S0243
         CLC   DVCS-2(2,@08),@CC00658                           02S0243
         BNE   @RF00243                                         02S0243
*               CTR=DIM(DVCS);     /* SET CTR TO LEAVE LOOP          */
         LA    CTR,50                                           02S0244
*         END;                                                  02S0245
@RF00243 DS    0H                                               02S0245
@RC00241 AL    CTR,@CF00044                                     02S0245
         C     CTR,@CF00103                                     02S0245
         BNH   @DL00240                                         02S0245
@DC00240 DS    0H                                               02S0246
*         IF DEVFOUND=ON THEN      /* IF DEVICE WAS OK TO TRACE,     */
         TM    DEVFOUND,B'00100000'                             02S0246
         BNO   @RF00246                                         02S0246
*           DO;                    /* RESET SWITCH, SET RETURN CODE  */
*             DEVFOUND=OFF;                                     02S0248
         NI    DEVFOUND,B'11011111'                             02S0248
*             R15=0;                                            02S0249
         SLR   R15,R15                                          02S0249
*           END;                                                02S0250
*         ELSE                     /* IF DEVICE MATCH NOT FOUND,     */
*           R15=4;                 /* SET BAD RETURN CODE            */
         B     @RC00246                                         02S0251
@RF00246 LA    R15,4                                            02S0251
*       END;                                                    02S0252
*     ELSE                         /* IF NO DEVICES ARE BEING TRACED, *
*       R15=4;                     /* SET BAD RETURN CODE            */
         B     @RC00238                                         02S0253
@RF00238 LA    R15,4                                            02S0253
*   END;                                                        02S0254
@RC00238 DS    0H                                               02S0255
* RETURN CODE(R15);                                             02S0255
@RC00235 L     @14,12(,@13)                                     02S0255
         LM    @00,@12,20(@13)                                  02S0255
         BR    @14                                              02S0255
* END CHECKDEV;                                                 02S0256
* END AMDSYS00                                                  01S0257
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSUT5  (SYSPROLG)                                        *
*/*%INCLUDE SYSUT5  (MACROS  )                                        *
*/*%INCLUDE SYSUT5  (DECLARES)                                        *
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                        *
*/*%INCLUDE SYSLIB  (IHAABDPL)                                        *
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                        *
*/*%INCLUDE SYSUT5  (CHECKREC)                                        *
*/*%INCLUDE SYSUT5  (FMTREC  )                                        *
*/*%INCLUDE SYSUT5  (FMTUIO  )                                        *
*/*%INCLUDE SYSUT5  (FMTSIO  )                                        *
*/*%INCLUDE SYSUT5  (CKSIOL1 )                                        *
*/*%INCLUDE SYSUT5  (CKSIOL2 )                                        *
*/*%INCLUDE SYSUT5  (FMTIO   )                                        *
*/*%INCLUDE SYSUT5  (CKIOL1  )                                        *
*/*%INCLUDE SYSUT5  (CKIOL2  )                                        *
*/*%INCLUDE SYSUT5  (CHECKDEV)                                        *
*;                                                              01S0257
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00002 DS    2F
@AL00001 DS    2A
AMDSYS00 CSECT
         DS    0F
@CF00044 DC    F'1'
@CF00098 DC    F'4'
@CF00103 DC    F'50'
@DATD    DSECT
         DS    0D
SWITCHES DS    BL1
         ORG   SWITCHES
TIME2SW  DS    BL1
LOOPDONE EQU   SWITCHES+0
DEVFOUND EQU   SWITCHES+0
@NM00003 EQU   SWITCHES+0
         ORG   SWITCHES+1
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
AMDSYS00 CSECT
         NOPR  ((@ENDDATD-@DATD)/201*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00637 DC    C'IO '
@CC00638 DC    C'PCI'
@CC00639 DC    C'EOS'
@CC00658 DC    C'  '
@CB00202 DC    X'2100'
@CB00208 DC    X'5201'
@CB00210 DC    X'5200'
@CB00212 DC    X'5100'
@CB00224 DC    X'5101'
@CB00622 DC    X'EEEE'
UA       DC    CL8'U/A'
NA       DC    CL8'N/A'
ASTER    DC    CL8'********'
         DS    CL1
UIOPTRN  DS    CL37
         ORG   UIOPTRN
@NM00004 DC    AL1(55)
@NM00005 DC    AL1(51)
@NM00006 DC    AL1(10)
@NM00007 DC    AL1(15)
@NM00008 DC    AL4(UIOLBLS)
@NM00009 DC    AL1(21)
@NM00010 DC    AL1(33)
@NM00011 DC    AL1(25)
@NM00012 DC    AL1(29)
@NM00013 DC    AL1(53)
@NM00014 DC    AL1(55)
@NM00015 DC    AL1(35)
@NM00016 DC    AL1(40)
@NM00017 DC    AL1(21)
@NM00018 DC    AL1(99)
@NM00019 DC    AL1(50)
@NM00020 DC    AL1(58)
@NM00021 DC    AL1(20)
@NM00022 DC    AL1(3)
@NM00023 DC    AL1(0)
@NM00024 DC    AL1(67)
@NM00025 DC    AL1(21)
@NM00026 DC    AL1(35)
@NM00027 DC    AL1(77)
@NM00028 DC    AL1(81)
@NM00029 DC    AL1(20)
@NM00030 DC    AL1(3)
@NM00031 DC    AL1(0)
@NM00032 DC    AL1(90)
@NM00033 DC    AL1(21)
@NM00034 DC    AL1(33)
@NM00035 DC    AL1(0)
@NM00036 DC    AL1(5)
@NM00037 DC    AL1(0)
         ORG   UIOPTRN+37
UIOLBLS  DC    CL24'ASCBCPUJOBNOLD PSWCSWUIO'
         DS    CL3
SIOPTRN1 DS    CL29
         ORG   SIOPTRN1
@NM00038 DC    AL1(23)
@NM00039 DC    AL1(51)
@NM00040 DC    AL1(10)
@NM00041 DC    AL1(15)
@NM00042 DC    AL4(SIOLBLS)
@NM00043 DC    AL1(21)
@NM00044 DC    AL1(33)
@NM00045 DC    AL1(25)
@NM00046 DC    AL1(29)
@NM00047 DC    AL1(53)
@NM00048 DC    AL1(55)
@NM00049 DC    AL1(35)
@NM00050 DC    AL1(40)
@NM00051 DC    AL1(21)
@NM00052 DC    AL1(99)
@NM00053 DC    AL1(50)
@NM00054 DC    AL1(58)
@NM00055 DC    AL1(20)
@NM00056 DC    AL1(3)
@NM00057 DC    AL1(0)
@NM00058 DC    AL1(67)
@NM00059 DC    AL1(21)
@NM00060 DC    AL1(51)
@NM00061 DC    AL1(91)
@NM00062 DC    AL1(96)
@NM00063 DC    AL1(0)
         ORG   SIOPTRN1+29
SIOLBLS  DS    CL45
         ORG   SIOLBLS
@NM00099 DC    CL22'ASCBCPUJOBNR/V CPADSID'
@NM00100 DC    CL6'SIOCAW'
@NM00101 DC    CL2'CC'
@NM00102 DC    CL15'STATSK ADDRFLGS'
         ORG   SIOLBLS+45
         DS    CL2
SIOPTRN2 DS    CL9
         ORG   SIOPTRN2
@NM00064 DC    AL1(21)
@NM00065 DC    AL1(33)
@NM00066 DC    AL1(0)
@NM00067 DC    AL1(5)
@NM00068 DC    AL1(21)
@NM00069 DC    AL1(35)
@NM00070 DC    AL1(77)
@NM00071 DC    AL1(81)
@NM00072 DC    AL1(0)
         ORG   SIOPTRN2+9
         DS    CL3
SIOPTRN3 DS    CL5
         ORG   SIOPTRN3
@NM00073 DC    AL1(21)
@NM00074 DC    AL1(16)
@NM00075 DC    AL1(77)
@NM00076 DC    AL1(80)
@NM00077 DC    AL1(0)
         ORG   SIOPTRN3+5
         DS    CL3
SIOPTRN4 DS    CL21
         ORG   SIOPTRN4
@NM00078 DC    AL1(21)
@NM00079 DC    AL1(49)
@NM00080 DC    AL1(35)
@NM00081 DC    AL1(40)
@NM00082 DC    AL1(21)
@NM00083 DC    AL1(99)
@NM00084 DC    AL1(50)
@NM00085 DC    AL1(58)
@NM00086 DC    AL1(20)
@NM00087 DC    AL1(3)
@NM00088 DC    AL1(0)
@NM00089 DC    AL1(67)
@NM00090 DC    AL1(21)
@NM00091 DC    AL1(51)
@NM00092 DC    AL1(10)
@NM00093 DC    AL1(15)
@NM00094 DC    AL1(20)
@NM00095 DC    AL1(1)
@NM00096 DC    AL1(0)
@NM00097 DC    AL1(24)
@NM00098 DC    AL1(0)
         ORG   SIOPTRN4+21
         DS    CL3
IOPTRN1  DS    CL29
         ORG   IOPTRN1
@NM00103 DC    AL1(23)
@NM00104 DC    AL1(51)
@NM00105 DC    AL1(10)
@NM00106 DC    AL1(15)
@NM00107 DC    AL4(IOLBLS)
@NM00108 DC    AL1(21)
@NM00109 DC    AL1(33)
@NM00110 DC    AL1(25)
@NM00111 DC    AL1(29)
@NM00112 DC    AL1(53)
@NM00113 DC    AL1(55)
@NM00114 DC    AL1(35)
@NM00115 DC    AL1(40)
@NM00116 DC    AL1(21)
@NM00117 DC    AL1(99)
@NM00118 DC    AL1(50)
@NM00119 DC    AL1(58)
@NM00120 DC    AL1(20)
@NM00121 DC    AL1(3)
@NM00122 DC    AL1(0)
@NM00123 DC    AL1(67)
@NM00124 DC    AL1(21)
@NM00125 DC    AL1(35)
@NM00126 DC    AL1(77)
@NM00127 DC    AL1(81)
@NM00128 DC    AL1(0)
         ORG   IOPTRN1+29
IOLBLS   DS    CL41
         ORG   IOLBLS
@NM00176 DC    CL21'ASCBCPUJOBNOLD PSWTCB'
@NM00177 DC    CL4'DSID'
@NM00178 DC    CL13'CSWR/V CPASNS'
@NM00179 DC    CL3'FLG'
         ORG   IOLBLS+41
         DS    CL2
IOPTRN2  DS    CL9
         ORG   IOPTRN2
@NM00129 DC    AL1(20)
@NM00130 DC    AL1(1)
@NM00131 DC    AL1(0)
@NM00132 DC    AL1(5)
@NM00133 DC    AL1(21)
@NM00134 DC    AL1(51)
@NM00135 DC    AL1(91)
@NM00136 DC    AL1(96)
@NM00137 DC    AL1(0)
         ORG   IOPTRN2+9
         DS    CL3
IOPTRN3  DS    CL21
         ORG   IOPTRN3
@NM00138 DC    AL1(21)
@NM00139 DC    AL1(35)
@NM00140 DC    AL1(10)
@NM00141 DC    AL1(15)
@NM00142 DC    AL1(20)
@NM00143 DC    AL1(3)
@NM00144 DC    AL1(0)
@NM00145 DC    AL1(24)
@NM00146 DC    AL1(21)
@NM00147 DC    AL1(99)
@NM00148 DC    AL1(50)
@NM00149 DC    AL1(58)
@NM00150 DC    AL1(20)
@NM00151 DC    AL1(3)
@NM00152 DC    AL1(0)
@NM00153 DC    AL1(67)
@NM00154 DC    AL1(21)
@NM00155 DC    AL1(33)
@NM00156 DC    AL1(35)
@NM00157 DC    AL1(40)
@NM00158 DC    AL1(0)
         ORG   IOPTRN3+21
         DS    CL3
IOPTRN4  DS    CL17
         ORG   IOPTRN4
@NM00159 DC    AL1(21)
@NM00160 DC    AL1(35)
@NM00161 DC    AL1(77)
@NM00162 DC    AL1(81)
@NM00163 DC    AL1(20)
@NM00164 DC    AL1(1)
@NM00165 DC    AL1(0)
@NM00166 DC    AL1(91)
@NM00167 DC    AL1(20)
@NM00168 DC    AL1(0)
@NM00169 DC    AL1(0)
@NM00170 DC    AL1(100)
@NM00171 DC    AL1(20)
@NM00172 DC    AL1(1)
@NM00173 DC    AL1(0)
@NM00174 DC    AL1(95)
@NM00175 DC    AL1(0)
         ORG   IOPTRN4+17
MYEIDTAB DC    X'2100'
         DC    X'5200'
         DC    X'5100'
         DC    X'5101'
         DS    CL3
SYS00PCH DC    25F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CTR      EQU   @06
RC       EQU   @06
AEDITCBR EQU   @09
R0       EQU   @00
R1       EQU   @01
R4       EQU   @04
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R15      EQU   @15
R10      EQU   @10
R14      EQU   @14
R2       EQU   @02
R3       EQU   @03
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
AMDPRTAB EQU   0
DEBGFLGS EQU   AMDPRTAB+8
PTHFLGS1 EQU   DEBGFLGS
PTHFLGS2 EQU   DEBGFLGS+1
INRFCFGS EQU   DEBGFLGS+2
IOFLGS   EQU   DEBGFLGS+3
STARTIME EQU   AMDPRTAB+40
STOPTIME EQU   AMDPRTAB+52
NAMES    EQU   AMDPRTAB+64
ADS      EQU   AMDPRTAB+104
AADS     EQU   ADS
SIF      EQU   AMDPRTAB+124
SIOFLGS  EQU   SIF
DVADS1   EQU   AMDPRTAB+128
IO       EQU   AMDPRTAB+228
IOFLGS2  EQU   IO
DVADS2   EQU   AMDPRTAB+232
VCF      EQU   AMDPRTAB+332
SVCFLGS  EQU   VCF
USR      EQU   AMDPRTAB+368
USRFLGS  EQU   USR
USRTAB   EQU   AMDPRTAB+372
PI       EQU   AMDPRTAB+452
PIFLGS   EQU   PI
PGMNGEN  EQU   AMDPRTAB+456
GENFLAGS EQU   PGMNGEN+3
GENFLGS1 EQU   AMDPRTAB+460
ESTARTME EQU   AMDPRTAB+500
ESTOPTME EQU   AMDPRTAB+509
ABDPL    EQU   0
ADPLFLAG EQU   ABDPL+7
ADPLBUF  EQU   ABDPL+8
ADPLFMT1 EQU   ABDPL+44
ADPLFMT2 EQU   ABDPL+48
PARMLIST EQU   0
EIDPTR   EQU   PARMLIST+12
DATAPTR  EQU   PARMLIST+16
FRMADDR  EQU   PARMLIST+20
WKAREADD EQU   PARMLIST+24
SNAPPARM EQU   PARMLIST+28
RECEID   EQU   0
BUFFER   EQU   0
FRMT     EQU   0
DATAREC  EQU   0
ASCBPTR  EQU   DATAREC
RECERR   EQU   ASCBPTR
SIOREC   EQU   0
SIOASCB  EQU   SIOREC
SIOCPA   EQU   SIOREC+14
SIODSID  EQU   SIOREC+22
SIOCC    EQU   SIOREC+26
SIODEV   EQU   SIOREC+27
SIOSTS   EQU   SIOREC+33
SIOSEEK  EQU   SIOREC+35
SIOFLAGS EQU   SIOREC+43
IOREC    EQU   0
IOASCB   EQU   IOREC
IOTCB    EQU   IOREC+22
IOCSW    EQU   IOREC+26
IOCPA    EQU   IOREC+34
IOSNS    EQU   IOREC+42
IODEV    EQU   IOREC+44
IODSID   EQU   IOREC+46
IOFLAGS  EQU   IOREC+50
IOFLA    EQU   IOFLAGS
UIOREC   EQU   0
UIODEV   EQU   UIOREC+30
DEV      EQU   0
TABL     EQU   0
@NM00180 EQU   TABL
ALL      EQU   @NM00180
SEL      EQU   @NM00180
DVCS     EQU   TABL+4
ABDPLPTR EQU   SNAPPARM
BLNKCC   EQU   BUFFER+81
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
UIOCSW   EQU   UIOREC+22
UIOPSW   EQU   UIOREC+14
UIOJOBN  EQU   UIOREC+6
UIOCPUID EQU   UIOREC+4
UIOASCB  EQU   UIOREC
IOCHAN   EQU   IOFLAGS+7
IOCPU    EQU   IOFLAGS+6
IOSFLS   EQU   IOFLAGS+4
IODVRID  EQU   IOFLAGS+3
IOFMSK   EQU   IOFLAGS+2
IOOPT    EQU   IOFLAGS+1
IOPSW    EQU   IOREC+14
IOJOBN   EQU   IOREC+6
IOCPUID  EQU   IOREC+4
SIODVRID EQU   SIOFLAGS+5
SIOFMSK  EQU   SIOFLAGS+4
SIOOPT   EQU   SIOFLAGS+3
SIOPATH  EQU   SIOFLAGS+1
SIOAFF   EQU   SIOFLAGS
SIOCAW   EQU   SIOREC+29
SIOJOBN  EQU   SIOREC+6
SIOCPUID EQU   SIOREC+4
JOBNAME  EQU   DATAREC+6
CPUID    EQU   DATAREC+4
GTFOPTR  EQU   PARMLIST+8
BUFPTR   EQU   PARMLIST+4
RECPTR   EQU   PARMLIST
ADPLEXT  EQU   ABDPL+52
ADPLCOM4 EQU   ABDPL+40
ADPLCOM3 EQU   ABDPL+36
ADPLCOM2 EQU   ABDPL+32
ADPLCOM1 EQU   ABDPL+28
ADPLFRMT EQU   ABDPL+24
ADPLMEMA EQU   ABDPL+20
ADPLCVT  EQU   ABDPL+16
ADPLPRNT EQU   ABDPL+12
@NM00002 EQU   ADPLFLAG
ADPLSYTM EQU   ADPLFLAG
ADPLSNPR EQU   ADPLFLAG
ADPLSBPL EQU   ABDPL+6
ADPLASID EQU   ABDPL+4
ADPLTCB  EQU   ABDPL
RESERVED EQU   AMDPRTAB+522
CVTTZONE EQU   AMDPRTAB+518
ESPSEC   EQU   ESTOPTME+7
ESPMIN   EQU   ESTOPTME+5
ESPHR    EQU   ESTOPTME+3
ESPDAY   EQU   ESTOPTME
ESSEC    EQU   ESTARTME+7
ESMIN    EQU   ESTARTME+5
ESHR     EQU   ESTARTME+3
ESDAY    EQU   ESTARTME
ADTSBUF  EQU   AMDPRTAB+496
OFSTDATA EQU   AMDPRTAB+494
OFSTEID  EQU   AMDPRTAB+492
AFRMAD   EQU   AMDPRTAB+488
REENTWKA EQU   AMDPRTAB+484
PRFMTADD EQU   AMDPRTAB+480
AEIOCT   EQU   AMDPRTAB+476
EXITADDR EQU   AMDPRTAB+472
EXITNM   EQU   AMDPRTAB+464
RECDLL   EQU   AMDPRTAB+461
@NM00001 EQU   GENFLGS1
FIRSTHSW EQU   GENFLGS1
TSFOUND  EQU   GENFLGS1
EOFINPRO EQU   GENFLGS1
TS       EQU   GENFLGS1
EOF      EQU   GENFLAGS
RR       EQU   GENFLAGS
SRM      EQU   GENFLAGS
RNIO     EQU   GENFLAGS
SYSM     EQU   GENFLAGS
SYS      EQU   GENFLAGS
DSP      EQU   GENFLAGS
EXT      EQU   GENFLAGS
PICODEA  EQU   PGMNGEN+2
PICODES  EQU   PGMNGEN
Q        EQU   PI+1
P01R     EQU   PIFLGS
SELP     EQU   PIFLGS
ALLP     EQU   PIFLGS
USRNGTAB EQU   USRTAB
O        EQU   USR+1
N01R     EQU   USRFLGS
SELU     EQU   USRFLGS
ALLU     EQU   USRFLGS
SVCNUMS  EQU   AMDPRTAB+336
M        EQU   VCF+1
L        EQU   SVCFLGS
SELV     EQU   SVCFLGS
ALLV     EQU   SVCFLGS
IODVADS  EQU   DVADS2
K01RES   EQU   IO+1
JJ       EQU   IOFLGS2
SELI     EQU   IOFLGS2
ALLI     EQU   IOFLGS2
SIODVADS EQU   DVADS1
II       EQU   SIF+1
H        EQU   SIOFLGS
NOEQU    EQU   SIOFLGS
EQUIV    EQU   SIOFLGS
SELS     EQU   SIOFLGS
ALLS     EQU   SIOFLGS
ASCBADDR EQU   AADS
JOBNAMES EQU   NAMES
DAY2     EQU   STOPTIME+10
F        EQU   STOPTIME+8
TIME2    EQU   STOPTIME
DAY      EQU   STARTIME+10
D        EQU   STARTIME+8
TIME     EQU   STARTIME
DDNAME   EQU   AMDPRTAB+32
USEREXIT EQU   AMDPRTAB+24
GTFWDPTR EQU   AMDPRTAB+20
C        EQU   DEBGFLGS+4
B        EQU   IOFLGS
GETEOF   EQU   IOFLGS
DMDFMT   EQU   INRFCFGS
EDITSTOP EQU   INRFCFGS
EXTTRC   EQU   INRFCFGS
RET      EQU   INRFCFGS
FMT      EQU   INRFCFGS
SPIE     EQU   INRFCFGS
TERM     EQU   INRFCFGS
FLMODE   EQU   INRFCFGS
REMAIN   EQU   PTHFLGS2
APP      EQU   PTHFLGS2
REXT     EQU   PTHFLGS1
FRM      EQU   PTHFLGS1
FLT      EQU   PTHFLGS1
HEX      EQU   PTHFLGS1
CON      EQU   PTHFLGS1
GET      EQU   PTHFLGS1
SCN      EQU   PTHFLGS1
ROOT     EQU   PTHFLGS1
CURREC   EQU   AMDPRTAB+4
AFMG     EQU   AMDPRTAB
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00066 EQU   @RC00063
@RC00079 EQU   @RC00077
@RC00157 EQU   @RC00154
@RC00246 EQU   @RC00238
@RC00082 EQU   @RC00079
@ENDDATA EQU   *
         END   AMDSYS00,(C'PLS2309',0603,76153)
