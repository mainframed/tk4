         TITLE 'IGC0306F-1060 TERMINAL TEST MODULE.'
IGC0306F CSECT
         SPACE 2
         SPACE 2
* STATUS -          CHANGE LEVEL 001    MARCH 18,1968
         SPACE 2
*
*
* FUNCTION -        GENERATE CHANNEL PROGRAM FOR 1060 ON LINE TESTS
*
*
* ENTRY POINT -     ENTRY IS TO FIRST INSTRUCTION FROM HEADER ANALYSIS
*                   MODULE
*
*
* INPUT -           REGISTER 1 - ADDRESS OF IOB
*                   REGISTER 14 - RETURN ADDRESS
*
*
* OUTPUT -          1.  GENERATED CHANNEL PROGRAM
*                   2.  UPDATED USAGE COUNT AND POINTER IN
*                       TERMINAL TEST MODULE (IGG019MR)
*
*
* EXTERNAL ROUTINE -SVC 4 ROUTINE (GETMAIN)
*
*
* EXIT -            RETURN TO ADDRESS IN REGISTER 14
*
*
* INLINE ROUTINES -THE INPUT MESSAGE IS LOCATED THROUGH THE PARAMETER
*                   LIST AND IS ANALYZED FOR TYPE OF REQUEST.  CCW'S
*                   FOR THE PROPER DATA AND CONTROL PURPOSES ARE FORMED
*                   IN THE CCW AREA OF THE IOB.  IF THE REQUESTED DATA
*                   PATTERN IS NOT IN USE, CORE WILL BE OBTAINED AND
*                   THE PATTERN MOVED INTO THE NEW AREA.  IF NO CORE IS
*                   AVAILABLE, THE TEST REQUEST WILL BE SWITCHED TO THE
*                   TERMINAL SPECIFIED IN THE TEST REQUEST.
*                   A SUB-ROUTINE--
*
*                        A.  SETS UP THE ADDRESS FOR THE CHANNEL
*                            PROGRAM.
*                        B.  MOVES THE BASIC CCW'S INTO THE CCW AREA OF
*                            THE IOB.
*
*
* ATTRIBUTES -      THIS ROUTINE IS EXECUTED IN THE SVC TRANSIENT AREA
*                   AS A TYPE 4 SVC ROUTINE, ENABLED,PRIVILEGED AND
*                   REENTRANT.
*
         EJECT
         EJECT
*
*
         BALR  BASEREG,0
         USING *,BASEREG
         USING IHADCB,DCBREG
         USING IECTIOB,IOBREG
         USING IECTDECB,DECBREG
         USING PARMLIST,PARREG
*
         LR    IOBREG,1                 LOAD IOB ADDRESS
         L     PARREG,IOBPARM           LOAD PARAMETER LIST ADDRESS
         L     IOREG,IOBAREA            LOAD I/O AREA ADDRESS
         CLI   6(IOREG),X'02'           BRANCH IF
         BE    MSGSWTCH                           SWITCH TEST (1)
         CLI   6(IOREG),X'0B'           BRANCH IF
         BE    MSGSWTCH                     COMPARE TEST (5)
         SR    TESTREG,TESTREG          CLEAR TEST REGISTER
         IC    TESTREG,6(IOREG)         INSERT TEST SEL. CHARACTER
         SRA   TESTREG,1                SHIFT OUT PARITY BIT
         IC    TESTREG,TESTCODE-2(TESTREG)   SET UP INDEXING
         L     PATRNREG,PATTERN         GET ADDRESS OF PATTERN NAME TBL
         LA    WORKREG,0(TESTREG,PATRNREG)
         CLI   0(WORKREG),X'00'         BRANCH IF THIS PATTERN
         BE    NOTINUSE                                   IS NOT IN USE
         SR    WORKREG,WORKREG          CLEAR WORKING REGISTER
         IC    WORKREG,0(TESTREG,PATRNREG)   1-UP
         LA    WORKREG,1(WORKREG)             USAGE
         STC   WORKREG,0(TESTREG,PATRNREG)     COUNT
*
SETCCWS  EQU   *
         BAL   LINKREG,SETCCWRG
         L     WORKREG,0(TESTREG,PATRNREG)
         SR    WORKREG3,WORKREG3       CLEAR REGISTER
         IC    WORKREG3,0(WORKREG)     INSERT PATTERN AREA COUNT
         LA    WORKREG,1(WORKREG)       ADDRESS OF DATA TO BE SENT
         ST    WORKREG,32(CCWREG)       PUT IN CCW
         MVI   32(CCWREG),X'01'         RESTORE OP CODE
         SR    WORKREG,WORKREG          CLEAR WORKING REGISTER
         IC    WORKREG,0(TESTREG,PATRNREG)   CHARACTER COUNT
         BCTR  WORKREG3,0              REDUCE BY ONE
         STC   WORKREG3,39(CCWREG)     PUT IN CCW
         STC   TESTREG,8(DECBREG)       PUT DISPLACEMENT
*
FINCCWS  EQU   *
         L     WORKREG,NLIDLES
         LA    WORKREG,24(WORKREG)      ADDRESS OF CIRCLE Y, C, S.
         ST    WORKREG,0(CCWREG)        PUT IN CCW
         MVI   0(CCWREG),X'01'          RESTORE OP CODE
*
         LA    WORKREG,33(IOBREG)       ADDRESS OF ADDRESSING CHARS
         ST    WORKREG,8(CCWREG)        PUT IN CCW
         MVI   8(CCWREG),X'01'          RESTORE OP CODE
*
         LA    WORKREG,26(DECBREG)      ADDRESS OF RESPONSE AREA
         ST    WORKREG,16(CCWREG)       PUT IN CCW
         MVI   16(CCWREG),X'02'         RESTORE OP CODE
*
         MVC   25(3,CCWREG),NLIDLES+1   ADDRESS OF NL-IDLES FOR  CCW
*
         LA    WORKREG,27(DECBREG)      ADDRESS OF LRC RESPONSE AREA
         ST    WORKREG,40(CCWREG)       PUT IN CCW
         MVI   40(CCWREG),X'02'         RESTORE OP CODE
*
         L     IOREG,IOBAREA            RE-ESTABLISH I/O POINTER
         CLI   6(IOREG),X'0B'           BRANCH IF
         BE    CMPISON1                           COMPARE TEST (5)
         SR    WORKREG,WORKREG          CLEAR RESULT REGISTER
         CLI   8(IOREG),X'15'           TEST TENS FOR ZERO
         BE    TESTUNIT
         SR    WORKREG2,WORKREG2        CLEAR SECOND WORK REGISTER
         IC    WORKREG2,8(IOREG)        TENS ADDRESSING CHARACTER
         SRA   WORKREG2,1               DROP PARITY
         BZ    RESTART                  NO TEST--INVALID CHARACTER
         SLA   WORKREG2,1               TIMES TWO
         AR    WORKREG,WORKREG2         TO RESULT REGISTER
         SLA   WORKREG2,2               TIMES FOUR MORE
         AR    WORKREG,WORKREG2         TIMES TEN IN RESULT REGISTER
TESTUNIT CLI   9(IOREG),X'15'           TEST UNITS FOR ZERO
         BE    TESTRSLT
         SR    WORKREG2,WORKREG2        CLEAR SECOND WORKING REGISTER
         IC    WORKREG2,9(IOREG)        UNITS ADDRESSING CHARACTER
         SRA   WORKREG2,1               DROP PARITY
         BZ    RESTART                  NO TEST--INVALID CHARACTER
         CH    WORKREG2,=H'9'           UNITS CHARACTER MUST BE NUMERIC
         BH    RESTART                  BRANCH IF NOT
         AR    WORKREG,WORKREG2         DEVELOP FINAL RESULT
TESTRSLT CH    WORKREG,=H'26'           TEST RESULT FOR 26
         BH    RESTART                  OVER 26 IS ILLEGAL
         SR    WORKREG2,WORKREG2        CLEAR SECOND WORK REGISTER
         IC    WORKREG2,ADDRCHAR(WORKREG)   ADDRESSING CHARACTER
         STC   WORKREG2,33(IOBREG)      PUT IN IOB
         NR    WORKREG2,WORKREG2        TEST REGISTER
         BZ    RESTART                  ZERO IS AN INVALID ADDRESS
         MVC   34(1,IOBREG),10(IOREG)  MOVE 1062 ADDRESSING CHARACTER
         CLI   6(IOREG),X'02'          TEST FOR MESSAGE SWITCH
         BE    GETEOA                  EQUAL MEANS MESSAGE SWITCH
         BR    RETURN                  RETURN TO SEND TEST MESSAGE
GETEOA   BCTR  IOREG,0                 POINT TO EOA
         MVC   0(13,IOREG),1(IOREG)    SHIFT DATA
         AR    WORKREG,IOREG           STORE
         LA    WORKREG,10(WORKREG)          THE
         MVI   13(IOREG),X'75'                 RESTORE CHAR.
         MVI   14(IOREG),X'3D'                              AND EOB
         ST    IOREG,32(CCWREG)         ADDRESS OF DATA TO CCW
         MVI   32(CCWREG),X'01'         RESTORE OP CODE
GOBACK   BR    RETURN                   RETURN
*
MSGSWTCH EQU   *
         BAL   LINKREG,SETCCWRG         SET UP CCW AREA POINTER + DIAL
         LH    WORKREG,6(DECBREG)       USED IF NOT DYNAMIC BUFFERING
         TM    32(DCBREG),X'08'         TEST IF DYNAMIC BUFFERING USED
         BZ    *+12
         L     WORKREG,24(DCBREG)       USED WITH DYNAMIC BUFFERING
         SH    WORKREG,=H'4'            ADJUST FOR TIC
         STH   WORKREG,38(CCWREG)       IN CASE NO EOT FOUND
         B     FINCCWS                  CONTINUE CCW PROCESSING
*
NOTINUSE L     GETMAIN,0(PATRNREG)      ADDRESS OF GETMAIN CONSTANTS
         EX    0,DATAADDR-X'18'(TESTREG)     ADDRESS OF DATA TO MOVE
         LA    TOREG,0(TESTREG,PATRNREG)     ADDRESS OF THE TABLY ENTRY
         ST    TOREG,4(GETMAIN)         PUT IN GETMAIN CONSTANTS
         SR    WORKREG,WORKREG          CLEAR WORKING REGISTER
         IC    WORKREG,0(FROMREG)       CHARACTER COUNT OF DATA
         ST    WORKREG,0(GETMAIN)       PUT IN GETMAIN CONSTANTS
         SVC   4                        ISSUE GETMAIN SVC
         SLL   15,24                    ELIMINATE HIGH ORDER BITS
         NR    15,15                    TEST FOR ZERO RETURN CODE
         BNE   MSGSWTCH                 NON-ZERO IS NO CORE AVAILABLE
         MVI   0(TOREG),X'01'           SET USAGE COUNT TO ONE
         L     TOREG,0(TOREG)           GET ADRESS OF DATA AREA
         BCTR  WORKREG,0                ADJUST COUNT FOR MVC INST
         EX    WORKREG,EXMVC            MOVE THE DATA
         B     SETCCWS
*
CMPISON1 L     ADREG,36(DECBREG)       LOAD ADDR. OF LAST POLL CHAR.
         MVC   33(1,IOBREG),0(ADREG)   MOVE ADDRESSING CHARACTER
         CLI   1(ADREG),X'0D'          BRANCH IF
         BC    8,FIRST62                       FIRST 1062
         MVI   34(IOBREG),X'07'        SELECT SECOND 1062 PRINTER
         B     CMPISON3                BRANCH TO COMPARE DATA
FIRST62  MVI   34(IOBREG),X'02'        SELECT FIRST 1062 PRINTER
CMPISON3 CLC   5(7,IOREG),CMPDATA      BRANCH IF
         BC    8,GOODCMP                        VALID COMPARISON
         B     GETEOA                  RETURN DATA
GOODCMP  MVC   0(9,IOREG),VALIDMSG     LOAD VALID COMPARE MESSAGE
         B     GETEOA                  SEND VALID MESSAGE
*
RESTART  EQU   *
         NI    IOBINCAM,NOTEST          SET NOTEST SWITCH
         BR    RETURN
*
*
SETCCWRG EQU   *
         L     DECBREG,IOBECBPT         ADDRESS OF DECB
         L     DCBREG,DECDCBAD          ADDRESS OF DCB
         LA    CCWREG,56(IOBREG)        ADDRESS OF CCW AREA
         ST    CCWREG,16(IOBREG)       RESET CCW AREA POINTER
         MVC   0(48,CCWREG),CHANPROG    MOVE CCW'S TO CCW AREA
         BR    LINKREG                  RETURN
*
EXMVC    MVC   0(1,TOREG),0(FROMREG)
         EJECT
*
*  PATTERN OF DATA FOR 1060 TESTS
TILT     DC    AL1(TILTEND-TILT)
         DC    X'6123294F2C4A702664327637732567'
         DC    X'312A4C2F4962585B5E5E5E5E5E5E40'           * TILT *
         DC    X'1508680D6D51104504571652134607'           * TEST *
         DC    X'0B6B0E6E4302755E5E5E5E5E5E3D'
TILTEND  EQU   *
*
ROTATE   DC    AL1(ROTATEND-ROTATE)
         DC    X'61622C2A647343400B0D524523584A'
         DC    X'4C322502156B6D5B5E5E5E5E5E5E13'           * ROTATE *
         DC    X'046E680710164F492631370E084651'           *  TEST  *
         DC    X'57292F706776755E5E5E5E5E5E3D'
ROTATEND EQU   *
*
TWIST    DC    AL1(TWISTEND-TWIST)
         DC    X'6115234029684F082C6D4A0D701026'
         DC    X'516404324576165B5E5E5E5E5E5E02'           * TWIST *
         DC    X'6243586E2F0E496B2A0B4C07674631'           * TEST  *
         DC    X'137352253757755E5E5E5E5E5E3D'
TWISTEND EQU   *
*
ALLCHAR  DC    AL1(ALLCHARX-ALLCHAR)
         DC    X'15020407080B0D0E1013626467686B6D'    * ALL CHARACTER *
         DC    X'6E7073434546494A4C4F51522526292A'
         DC    X'2C2F3132755E5E5E5E5E5E3D'            * TEST  MESSAGE *
ALLCHARX EQU   *
*
ANALYZER DC    AL1(ANALYZEX-ANALYZER)
         DC    X'02010401070108010B010D010E011367'    *SELECTRIC*
         DC    X'010101254F62676B5B01010101010101'    * ANALYZER*
         DC    X'01010101010101010101675B5E5E5E46'    *  TEST   *
         DC    X'6D3B5E5E023B5E5E043B5E5E07753D'
ANALYZEX EQU   *
         EJECT
*
*  CCW'S
*
CHANPROG CCW   X'01',0,X'A0',4          WRITE CIRCLE Y, C'S, S
         CCW   X'01',0,X'60',2          WRITE ADDRESSING CHARACTERS
         CCW   X'02',0,X'60',1          READ ADDRESSING RESPONSE
         CCW   X'01',0,X'A0',20         WRITE CARRIAGE RETURN AND IDLES
         CCW   X'01',0,X'60',0          WRITE THE TEST MESSAGE
         CCW   X'02',0,X'20',1          READ THE LRC RESPONSE
*
*  ADDRESSES OF DATA TO BE MOVED TO PATTERN BUFFER
*
DATAADDR EQU   *
         LA    FROMREG,TILT
         LA    FROMREG,ROTATE
         LA    FROMREG,TWIST
         LA    FROMREG,ALLCHAR
         LA    FROMREG,ANALYZER
*
VALIDMSG DC    X'67494F012A4668753D'   VALID COMPARE MESSAGE
CMPDATA  DC    X'0D0B0708040215'       COMPARISON DATA
TESTCODE DC    X'181C20002428'
ADDRCHAR DC    X'00626467686B6D6E7073434546494A4C4F51522526292A2C2F31'
         DC    X'32'
         EJECT
*
*  EQUATES
*
GETMAIN  EQU   1
WORKREG2 EQU   1
LINKREG  EQU   2
PARREG   EQU   3
ADREG    EQU   4
WORKREG  EQU   4
MULTEVEN EQU   4
MULTODD  EQU   MULTEVEN+1  5
IOBREG   EQU   5
BASEREG  EQU   6
FROMREG  EQU   7
IOREG    EQU   7
TESTREG  EQU   8
PATRNREG EQU   9
CCWREG   EQU   10
DCBREG   EQU   11
DECBREG  EQU   12
TOREG    EQU   13                                                  000D
WORKREG3 EQU   13
RETURN   EQU   14
NOTEST   EQU   X'FE'
         EJECT
         DCBD  DSORG=BX,DEVD=BS
         EJECT
         IECTIOBX
         SPACE 2
IOBNAME  EQU   IOBERCCW
IOBAREA  EQU   IOBNAME+8
IOBPARM  EQU   IOBNAME+12
         EJECT
         IECTDECB
         EJECT
PARMLIST DSECT
PATTERN  DS    F
NLIDLES  DS    F
         END
