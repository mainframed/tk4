 TITLE 'IGG0194N  BTAM LINE GROUP OPEN EXECUTOR - LOAD 2'
***********************************************************************
*                                                                     *
* MODULE NAME: IGG0194N  (OS/VS)                                      *
*                                                                     *
* DESCRIPTIVE NAME: BTAM LINE GROUP OPEN EXECUTOR - LOAD 2            *
*                                                                     *
* COPYRIGHT: NONE                                                     *
*                                                                     *
* STATUS: RELEASE 2                                                   *
*                                                                     *
* FUNCTION/OPERATION: THIS LOAD ANALYZES DEVICE TYPE INFORMATION      *
*   PROVIDED IN THE UNIT CONTROL BLOCK TO DETERMINE WHAT TYPE OF      *
*   TERMINAL DEVICES ARE ATTACHED TO THE GROUP OF LINES THAT MAKE UP  *
*   THIS LINE GROUP AND ALSO BUILDS A BUFFER POOL IF SO INDICATED     *
*   BY THE DCB FIELDS.                                                *
*                                                                     *
* ENTRY POINT: ENTRY WILL BE TO THE FIRST BYTE OF THE MODULE BY AN    *
*  'XCTL' TO IGG0194N THE SECOND BTAM LOAD. CONTROL WILL BE TRANSFERED*
*   FROM LOAD 1. IT MAY ALSO BE RE-ENTERED FROM THE RELOOP PORTION OF *
*   THIS ROUTINE IF IT DETERMINES THAT THERE IS ANOTHER DATA CONTROL  *
*   BLOCK TO BE OPENED.                                               *
*                                                                     *
* INPUT:  THE REGISTERS 5, 6, 7, AND 8 ARE THE INPUT, AS FOLLOWS,     *
*   5- THE ADDRESS OF THE FIRST ENTRY IN THE COPIED DCB PARAMETER LIST*
*   6- THE ADDRESS OF THE BEGINNING OF THE WHERE-TO-GO TABLE,         *
*   7- THE ADDRESS OF THE CURRENT ENTRY IN THE COPIED DCB PARAMETER   *
*      LIST.                                                          *
*   8- THE ADDRESS OF THE CURRENT EXECUTOR'S ENTRY IN THE WHERE-TO-GO *
*      TABLE.                                                         *
*                                                                     *
* OUTPUT:  THE REGISTERS 7 AND 8 WILL BE POSITIONED AT THE NEXT       *
*   ENTRIES IN THE COPIED DCB PARAMETER LIST AND THE WHERE-TO TABLE.  *
*   IF NECESSARY, A BUFFER POOL WILL HAVE BEEN CONSTRUCTED IN THE     *
*   USER KEY IN SUBPOOL 250.                                          *
*   SOME OF THE DCB FIELDS WILL HAVE BEEN INITIALIZED.                *
*   THIS EXECUTOR'S ENTRY (OR ENTRIES) IN THE WHERE - TO -            *
*   GO TABLE WILL HAVE BEEN UPDATED TO IDENTIFY LOAD 3 (IGG0193Q).    *
*                                                                     *
* EXTERNAL ROUTINES:  NONE                                            *
*                                                                     *
* EXITS-NORMAL:  THIS ROUTINE EXITS VIA AN XCTL TO THE MODULE         *
*   IDENTIFIED BY THE NEXT NON-ZERO ENTRY IN THE WHERE-TO-GO TABLE,   *
*   NAMELY IGG0193Q (BTAM OPEN EXECUTOR - LOAD 3).                    *
*                                                                     *
*     -ERRORS-  THIS ROUTINE EXITS VIA ABEND FOR THE FOLLOWING        *
*   ERROR CONDITIONS-                                                 *
*   ABEND CODE ERROR CONDITION                                        *
*   00096000    THERE WAS NO BUFFER POOL OR NO BUFFERING              *
*               TECHNIQUE DEFINED FOR THIS LINE GROUP.                *
*   00099000    DYNAMIC BUFFERING SPECIFIED FOR A V=V APPLICATION     *
*                                                                     *
* TABLES/WORK AREAS: THE WHERE-TO-GO TABLE CONTAINS THE ID AND TTR    *
*       OF THE OPEN EXECUTOR LOAD 3. THE DCB PARAMETER LIST CONTAINS  *
*       THE ADDRESS OF EACH DCB SPECIFIED IN THE OPEN MACRO. THE      *
*       COMMUNICATION VECTOR TABLE IS A RESIDENT VECTOR LIST USED     *
*       TO LOCATE THE TIOT,WHICH IS NEEDED IN DEB CONSTRUCTION.       *
*                                                                     *
*                                                                     *
* ATTRIBUTES: THIS ROUTINE IS EXECUTED IN THE DATA MANAGEMENT KEY OF  *
*       5 AS ENABLED, PRIVILEGED, AND REENTRANT.                      *
*                                                                     *
* NOTES: FOR SECURITY AND INTEGRITY PURPOSES, OPEN PROCESSING WILL    *
*  BE ONLY ON THE COPIED DCB AND COPIED DCB PARAMETER LIST. BTAM      *
*  OPEN LOADS MUST KEEP THE USER DCB AND COPIED DCB SYNCHRONIZED.     *
*  THIS MODULE (IF NEED BE) WILL CONSTRUCT A BUFFER POOL IN THE       *
*  KEY OF THE USER IN SUBPOOL 250. THE ID OF THE NECESSARY I/O        *
*  MODULE WILL BE STORED IN THE WORKAREA FOR LOAD 4 OF OPEN. UPON     *
*  COMPLETION OF THIS MODULE, CONTROL IS PASSED TO THE THIRD          *
*  OPEN MODULE THROUGH THE WHERE-TO-GO TABLE ENTRY.                   *
*                                                                     *
* CHANGE ACTIVITY AS FOLLOWS:                                         *
*            APARS                           PTMS                     *
*       YA03255  (2/1/74)                YM4085  (10/29/73)           *
*       ZA03550  (03/18/75)              YM5663  (12/11/73) PROLOG    *
*       AZ10016  (03/30/76)                                           *
*       AZ26035  (09/16/77)                                           *
***********************************************************************
         EJECT
IGG0194N CSECT
         SPACE 5
RE       EQU   0                       WORK/PARAMREG
RF       EQU   1                       WORK/PARAMREG
RW1      EQU   2                        WORK REGISTER 1
RW2      EQU   3                        WORK REGISTER 2
WAREG    EQU   RW2                      ADDR OF OPEN WORK AREA   Y02947
RB       EQU   4                        WORK REGISTER 3
RPAR     EQU   5                        ADDRESS OF COPIED DCB    Y02947
*                                       PARAMETER LIST           Y02947
RWTG     EQU   6                        ADDRESS OF WTG TABLE
RPARC    EQU   7                       ADDRESS OF CURRENT COPIED Y02947
*                                       DCB ENTRY                Y02947
RWTGC    EQU   8                        ADDRESS OF CURRENT WTG ENTRY
RTIOT    EQU   9                        ADDRESS OF TASK I/O TABLE
RDCB     EQU   10                       ADDRESS OF COPIED DCB    Y02947
RDEB     EQU   11                       ADDRESS OF DEB
RBASE    EQU   12                       BASE REGISTER
RC       EQU   13                      WORK REG
RUCB     EQU   14                       NO. OF UCB'S/ADDRESS OF UCB
RJ       EQU   15                      WORK/PARAMREG
RW3      EQU   RB
         BALR  RBASE,0                  SET UP BASE REGISTER
         USING *,RBASE
         USING IHADCB,RDCB
         USING IECTDEB,RDEB
         SPACE 4
         B     AROUND                   BRANCH AROUND ID         Y02947
         DC    C'IGG0194N'              OPEN ID                  Y02947
         DC    C'UZ14509'                                      @ZA14509
         DS    0F                                                Y02947
PATCH    DC    XL50'00'                 PATCH AREA               Y02947
         SPACE 4                                                 Y02947
AROUND   L     RDCB,0(RPARC)            LOAD COPY DCB ADDRESS    Y02947
         L     RDEB,DCBDEBAD            LOAD DEB ADDRESS           000D
         L     RDEB,28(RDEB)            LOAD DEB START FOR DSECT   000D
         L     RUCB,DEBUCBAD           GET UCB ADDRESS
         L     WAREG,4(RWTGC)           ADDR OF OPEN WORK AREA   Y02947
         USING WORKAREA,WAREG                                    Y02947
*                                       GET DEVICE OFFSET
         SR    RW1,RW1
         IC    RW1,DCBDEVTP
         IC    RW1,OFFSETAB(RW1)
         SPACE 4
ENDLOD1  STC   RW1,DCBDEVTP            STORE DEVICE OFFSET
         SPACE 2                                                 YM4085
*        THE FOLLOWING DETERMINES IF ABEND 099 SHOULD BE ISSUED  YM4085
*        DUE TO DYNAMIC BUFFERING BEING SPECIFIED AND THE        YM4085
*        APPLICATION RUNNING V=V.                                YM4085
         TM    DCBBFTEK,DYNBUF         DYNAMIC BUFFERING?        YM4085
         BNO   CHKBUF                  NO, CHECK BUFFER POOL     YM4085
         L     RTIOT,DEBTCBAD-DISP1    LOAD TCB ADDRESS          YM4085
         USING TCB,RTIOT               TCB ADDRESSABILITY        YM4085
         TM    TCBFLGS6,TCBRV          V=R?                      YM4085
         BO    CHKBUF                  YES, CHECK BUFFER POOL    YM4085
         DROP  RTIOT                   DROP TCB ADDRESS          YM4085
         L     RF,ERR9                 DYNAMIC BUFFERING, BUT    YM4085
         ABEND (RF),DUMP               FOR A V=V APPLICATION     YM4085
         SPACE 2                                                 YM4085
CHKBUF   EQU   *                                                 YM4085
         SPACE 2                                                 Y02947
*    THE FOLLOWING SECTION OF CODE BUILDS A BUFFER POOL IF BUFNO AND
*    BUFL ARE SPECIFIED AND THE PROBLEM PROGRAM HAS NOT PROVIDED ITS
*    OWN BUFFER POOL.
         SPACE 1                                                 Y02947
         CLI   DCBDEVTP,TYPE2F
         BE    NODYNBFF
         CLI   DCBDEVTP,TYPE30
         BNE   BUFFTEST
NODYNBFF NI    DCBBFTEK,ALLON-DYNBUF                             A26916
BUFFTEST EQU   *
         L     RDCB,0(RPARC)            RE-INITIALIZE DCB REGISTER.
         CLI   DCBBUFCB+3,X'01'         TEST FOR THE ABSENCE OF A
         BE    TSTBUFNO     BUFFER POOL CONTROL BLOCK.  IF NOT  YA03255
*                           EQUAL, THE USER HAS PROVIDED A POOL YA03255
         L     RC,DCBBUFCB              GET DCB ADDRESS         YA03255
         MODESET KEYADDR=DXUKEY,WORKREG=15  ASSUME USER KEY L5 @ZA03550
         ICM   RJ,ONE,DISP5(RC)  GET NUMBER OF BUFFERS      L5 @ZA03550
         MODESET EXTKEY=DATAMGT        KEY OF 5             L5 @ZA03550
         STCM  RJ,ONE,DCBBUFCB  INTO BYTE 0 OF CNTRL BLK PTRS  @ZA03550
         B     ENDLOD2                                          YA03255
TSTBUFNO EQU   *                                                YA03255
         CLI   DCBBUFNO,X'00'           TEST FOR NUMBER OF BUFFERS.
         BE    TESTDYNB            IF NO BUFFERS REQUESTED, BRANCH.
         CLC   DCBBUFL(2),IOBPOOL+2     IS BUFFER LNGTH EQUAL TO   000E
         BNE   GETPOOL             ZERO.  IF NOT EQUAL, BRANCH.
TESTDYNB TM    DCBBFTEK,DYNBUF          TEST FOR DYNAMIC BUFFERING.  IF
         BZ    ENDLOD2             NOT SPECIFIED, BRANCH.  IF DYNAMIC
         SPACE 1                                                Y02947
*    BUFFERING IS SPECIFIED, TERMINATE VIA ABEND.
         L     1,ERR6                   DYNAMIC BUFFERING IS SPECIFIED,
         ABEND (1),DUMP            BUT NO BUFFER POOL HAS BEEN PROVIDED
*                                  OR REQUESTED.
GETPOOL  SR    RB,RB
         IC    RB,DCBBUFNO              GET NUMBER OF BUFFERS.
         LH    RC,DCBBUFL               GET BUFFER LENGTH.
         LA    RC,3(RC)                 ROUND TO
         SRL   RC,2                     NEXT HIGHEST
         SLL   RC,2                               FULL WORD.
         STH   RC,DCBBUFL               STORE ROUNDED BUFFER LENGTH IN
*                                  DCB.
         LR    RE,RB                    SAVE NUMBER OF BUFFERS.
         LR    RF,RC                    SAVE BUFFER LENGTH.
         MR    RE,RE                    COMPUTE SIZE OF BUFFER AREA.
         LA    RE,8(RF)                 ADD 8 FOR BUFFER CONTROL BLOCK.
         O     RE,IOBPOOL               PLACE SUBPOOL NMBR IN HIGH 000E
*                                  ORDER BYTE OF PARAMETER REGISTER.
         SPACE 2                                                 Y02947
         MODESET KEYADDR=DXUKEY,WORKREG=15    ASSUME USER KEY    Y02947
         EJECT                                                   Y02947
*    GET CORE FOR BUFFER POOL FROM SUBPOOL 250                   Y02947
         GETMAIN R,LV=(0)
         SPACE 2                                                 Y02947
*
         LR    RE,RF               SAVE ADDRESS OF BUFFCB        Y02947
         STH   RB,4(RF)                 STORE NUMBER OF BUFFERS IN
*                                  BUFFER CONTROL BLOCK.
         STH   RC,6(RF)                 STORE BUFFER LENGTH IN BUFFER
*                                  CONTROL BLOCK.
         LR    RUCB,RF                  GET START ADDRESS IN WORK REG.
*
*    THE NEXT SEQUENCE OF INSTRUCTIONS FORMS THE BUFFER CHAIN.
*
         LA    RUCB,8(RUCB)             POINT TO FIRST BUFFER.
         ST    RUCB,0(RF)               STORE ADDRESS OF FIRST BUFFER
*                                  IN BUFFER CONTROL BLOCK.
         LR    RF,RUCB                  SAVE ADDRESS OF FIRST BUFFER.
TESTBUFC BCT   RB,NEXTBUF               IF THERE ARE MORE BUFFERS,
*                                  BRANCH.
         ST    RB,0(RF)                 ZERO LAST LINK FIELD.
         SPACE 2                                                 Y02947
         MODESET EXTKEY=DATAMGT    DATAMGT KEY OF 5              Y02947
         SPACE 2                                                 Y02947
         STCM RE,SEVEN,DCBBUFCB+DISP1   PLACE BUFFER CONTROL     Y02947
*                                       BLOCK ADDR IN DCB        Y02947
         OI    DCBMACRF,X'04'           INDICATE TO CLOSE THAT THE
*                                  BUFFER POOL SHOULD BE FREED.
         B     ENDLOD2
NEXTBUF  ALR   RUCB,RC                  CALCULATE ADDRESS OF NEXT
*                                  BUFFER.
         ST    RUCB,0(RF)               STORE NEXT BUFFER ADDRESS IN
*                                  LINK FIELD OF CURRENT BUFFER.
         ALR   RF,RC                    CALCULATE ADDRESS OF NEXT LINK
*                                  FIELD.
         B     TESTBUFC
*    *    *    *    *    *    *    *    *    *    *    *    *    *    *
         SPACE 2                                                   000M
ENDLOD2  EQU   *                                                   000M
         SPACE 1                                                   000M
         SPACE 1                                                   000M
         SR    RTIOT,RTIOT              CLEAR REGERSTER            000M
         IC    RTIOT,DCBDEVTP           GET OFFSET                 000M
         IC    RTIOT,DEVTABLE(RTIOT)    GET MODULE NUMBER          000M
         STC   RTIOT,DISP0(WAREG)       STORE MODULE NUMBER ID   Y02947
         MH    RTIOT,SIX                6 BYTE IDTTRL FIELDS       000M
         LA    RB,CHNIDTBL                                         000M
         AR    RB,RTIOT                 POINT TO SELECTED MODULE ID000M
         MVC   WORKTTRL(6,WAREG),0(RB)  STORE ID                 Y02947
         SPACE 2                                                   000M
EXIT     MVC   0(5,RWTGC),BTAMLOD3      SET UP ID FOR LOAD 3 OF BTAM
*                                  EXECUTOR.
         L     RJ,4(RWTGC)
RELOOP   LA    RWTGC,WGOFF(0,RWTGC)     INCREMENT CURRENT WTG REGISTER.
         LA    RPARC,PLOFF(0,RPARC)     INCREMENT CURRENT PARAMETER
*                                  LIST REGISTER TO NEXT ENTRY.
         CLC   0(2,RWTGC),AMIDCNST      IF THE NEXT WTG ENTRY CALLS FOR
         BCR   8,RBASE             THIS EXECUTOR, RETURN TO BEGINNING.
         CLC   0(2,RWTGC),OPIDCNST      IF NOT, TEST FOR END OF TABLE.
         BNE   RELOOP              NOT END OF TABLE, RETURN TO CHECK
*                                  NEXT ENTRY.
         LR    RPARC,RPAR               REINITIALIZE CURRENT WTG REG
         LA    RWTGC,WAOFF(0,RWTG) AND CURRENT PARAMETER LIST REG.
ZCHECK   CLI   0(RWTGC),X'00'
         BNE   XCTLRTNE            IF NOT ZERO, GO TO TRANSFER CONTROL
         LA    RWTGC,WGOFF(0,RWTGC) IF ZERO, GET NEXT ENTRY AND RETURN
         LA    RPARC,PLOFF(0,RPARC) TO ZCHECK.
         B     ZCHECK
         SPACE 3
XCTLRTNE EQU   *
         LA    RJ,DXCCW12           POINT TO DOUBLE WORD LIST.   Y02947
         MVC   6(2,RWTG),0(RWTGC)       MOVE ID TO NAME FIELD.
         MVC   14(3,RWTG),2(RWTGC)      MOVE TTR TO WTG TABLE.
         L     RW1,SIXT                 CVT ADDRESS              Y02947
         USING CVT,RW1                  CVT ADDRESSABILITY       Y02947
         L     RW1,CVTSVDCB             SYS1.SVCLIB DCB          Y02947
         DROP  RW1                      DROP CVT ADDRESS         Y02947
         XCTL  DE=(RWTG),SF=(E,(15)),DCB=(RW1)                   Y02947
         EJECT
OFFSETAB EQU   *              NOTE: THIS TABLE IS IN PARRALLEL WITH
*                                       TYPETAB AND SPFETAB
         DC    X'00'          1050
         DC    X'03'          1050 A
         DC    X'01'          1050 P
         DC    X'04'          1050 D
         DC    X'02'          1050 AD
         DC    X'17'          1060
         DC    X'18'          1060 P
         DC    X'31'          2470C CS
         DC    X'32'          2740C ACS
         DC    X'32'          2740C CDS
         DC    X'32'          2740C ACDS
         DC    X'05'          2740
         DC    X'15'          2740 S
         DC    X'07'          2740 A
         DC    X'0D'          2740 AT
         DC    X'16'          2740 C
         DC    X'13'          2740 CS
         DC    X'2D'          2740 CO
         DC    X'10'          2740 AC
         DC    X'0A'          2740 ACT
         DC    X'2E'          2740 ACO
         DC    X'14'          2740 PS
         DC    X'12'          2740 CPS
         DC    X'08'          2740 D
         DC    X'0E'          2740 DT
         DC    X'06'          2740 AD
         DC    X'0C'          2740 ADT
         DC    X'11'          2740 CD
         DC    X'0B'          2740 CDT
         DC    X'2E'          2740 CDO
         DC    X'0F'          2740 ACD
         DC    X'09'          2740 ACDT
         DC    X'2E'          2740 ACDO
         DC    X'2B'          2741P
         DC    X'2C'          2741P A
         DC    X'2B'          2741C
         DC    X'2C'          2741C A
         DC    X'2C'          2741C AD                         @ZA10016
         DC    X'2F'          1050X
         DC    X'30'          1050X A
         DC    X'30'          1050X D
         DC    X'30'          1050X AD
         DC    X'31'          2740X CS
         DC    X'32'          2740X ACS
         DC    X'32'          2740X CDS
         DC    X'32'          2740X ACDS
         DC    X'16'          2740B C                              00MC
         DC    X'19'          1030
         DC    X'1A'          1030P
         DC    X'00'          1050
         DC    X'03'          1050 A
         DC    X'01'          1050 P
         DC    X'04'          1050 D
         DC    X'02'          1050 AD
         DC    X'2F'          1050X
         DC    X'30'          1050X A
         DC    X'30'          1050X D
         DC    X'30'          1050 X AD
         DC    X'1B'          83B3
         DC    X'1D'          115A
         DC    X'1F'          TWX                              @ZA26035
         DC    X'20'          TWX A
         DC    X'21'          TWX D
         DC    X'1F'          TWX AD
         DC    X'2A'          WTTA
         DC    X'22'          2848
         DC    X'25'          BSC1
         DC    X'25'          BSC1  DUAL CODE
         DC    X'25'          BSC1  DUAL INTERFACE
         DC    X'25'          BSC1  DUAL CODE,DUAL INTERFACE
         DC    X'26'          BSC2  A
         DC    X'26'          BSC2  A,DUAL CODE
         DC    X'26'          BSC2  A,DUAL INTERFACE
         DC    X'26'          BSC2  A,DUAL CODE,DUAL INTERFACE
         DC    X'26'          BSC2  D
         DC    X'26'          BSC2  D,DUAL CODE
         DC    X'26'          BSC2  AD
         DC    X'26'          BSC2  AD,DUAL CODE
         DC    X'26'          BSC2  D,DUAL INTERFACE
         DC    X'26'          BSC2  D,DUAL INTERFACE,DUAL CODE
         DC    X'26'          BSC2  AD,DUAL INTERFACE
         DC    X'26'          BSC2  AD,DUAL INTERFACE,DUAL CODE
         DC    X'27'          BSC3  P
         DC    X'27'          BSC3  P,DUAL CODE
         DC    X'27'          BSC3  P,DUAL INTERDACE
         DC    X'27'          BSC3  P,DUAL INTERFACE,DUAL CODE
         EJECT
         DS    0F
ERR6     DC    X'00096000'              ABEND CODE INDICATING THAT
*                                       NO BUFFER POOL OR        Y02947
*                                       BUFFERING TECHNIQUE WAS  Y02947
*                                       DEFINED FOR THE LINE     Y02947
*                                       GROUP.                   Y02947
ERR9     DC    X'00099000'              ABEND CODE INDICATING    YM4085
*                                       THAT DYNAMIC BUFFERING   YM4085
*                                       WAS SPECIFIED FOR A V=V  YM4085
*                                       APPLICATION.             YM4085
IOBPOOL  DC    X'FA000000'              SUBPOOL 250 FOR BUFFER   Y02947
*                                       POOL.                    Y02947
TYPE2F   EQU   X'2F'
TYPE30   EQU   X'30'
SEVEN    EQU  7                         MASK FOR STCM            Y02947
*                                       INSTR (3 BYTES)          Y02947
SIXT     EQU   16                       OFFSET TO CVT            Y02947
DISP0    EQU   0                        ZERO DISPLACEMENT        Y02947
DISP1    EQU   1                        DISPLACEMENT OF ONE      Y02947
DISP5    EQU   5                        DISPLACEMENT OF 5       YA03255
ONE      EQU   1                       FOR ICM AND STCM     L5 @ZA03550
         EJECT
DEVTABLE EQU   *
*        MODULE NUMB  ID     OFFSET     DEVICE
         DC    X'00'  MD        0       1050
         DC    X'01'  ME        1       1050 P
         DC    X'02'  MF        2       1050 AD
         DC    X'02'  MF        3       1050 A
         DC    X'02'  MF        4       1050 D
         DC    X'03'  MT        5       2740
         DC    X'04'  MU        6       2740 AD
         DC    X'04'  MU        7       2740 A
         DC    X'04'  MU        8       2740 D
         DC    X'05'  MV        9       2740 ACDX
         DC    X'05'  MV        A       2740 ACX
         DC    X'05'  MV        B       2740 CDX
         DC    X'06'  MW        C       2740 ADX
         DC    X'06'  MW        D       2740 AX
         DC    X'06'  MW        E       2740 DX
         DC    X'07'  MX        F       2740 ACD
         DC    X'07'  MX        10      2740 AC
         DC    X'07'  MX        11      2740 CD
         DC    X'08'  M1        12      2740 CPS
         DC    X'09'  MY        13      2740 CS
         DC    X'0A'  M2        14      2740 PS
         DC    X'0B'  MZ        15      2740 S
         DC    X'0C'  M0        16      2740 C
         DC    X'0D'  MI        17      1060
         DC    X'0E'  M4        18      1060 P
         DC    X'0F'  MJ        19      1030
         DC    X'10'  MK        1A      1030 P
         DC    X'11'  ML        1B      83B3
         DC    X'11'            1C                NCS
         DC    X'12'  MN        1D      115A
         DC    X'12'            1E                NCS
         DC    X'13'  MP        1F      TWX  AD
         DC    X'13'  MP        20      TWX  A
         DC    X'13'  MP        21      TWX  D
         DC    X'14'  M3        22      2848
         DC    X'15'            23
         DC    X'16'            24
         DC    X'15'  M5        25      BSC1
         DC    X'16'  M6        26      BSC2
         DC    X'17'  PC        27      BSC3
         DC    X'17'            28
         DC    X'17'            29
         DC    X'18'  PB        2A      WTTA
         DC    X'19'  PE        2B      2741
         DC    X'1A'  PF        2C      2741 A
         DC    X'1B'  PL        2D      2740 CO
         DC    X'1C'  PM        2E      2740 ACO/DCO/ADCO
         DC    X'1D'  PN        2F      1050X
         DC    X'1E'  PO        30      1050X A/D/AD
         DC    X'1F'  PP        31      2740X CS
         DC    X'20'  PQ        32      2740X AC/CD/ACD
         EJECT
DYNBUF   EQU   X'08'                   CODE FOR BFTEK=0  IN DCB
OPIDCNST DC    C'0S'                    ID OF LAST OPEN LOAD.
SIX      DC    H'06'                                               000M
ALLON     EQU   X'FF'                                              000M
AMIDCNST  DC    C'4N'                   ID OF THIS MODULE
WAOFF    EQU   32                       OFFSET OF FIRST WTG ENTRY FROM
*                                  START OF WTG.
PLOFF    EQU   4                        OFFSET OO DCB ENTRIES.
WGOFF    EQU   8                        OFFSET OF WTG ENTRIES.
         SPACE 3                                                 Y02947
BTAMLOD3 DC    C'3Q'                   ID FOR THIRD OPEN LOAD MODULE
         DC    X'00000000'             TTR AND L
CHNIDTBL DC    C'MD',XL4'0'   00       1050                        000M
         DC    C'ME',XL4'0'   01       1050 P                      000M
         DC    C'MF',XL4'0'   02       1050 AD                     000M
         DC    C'MT',XL4'0'   03       2740                        000M
         DC    C'MU',XL4'0'   04       2740 AD                     000M
         DC    C'MV',XL4'0'   05       2740 ACDT                   000M
         DC    C'MW',XL4'0'   06       2740 ADT                    000M
         DC    C'MX',XL4'0'   07       2740                        000M
         DC    C'M1',XL4'0'   08       2740 CPS                    000M
         DC    C'MY',XL4'0'   09       2740 CS                     000M
         DC    C'M2',XL4'0'   0A       2740 PS                     000M
         DC    C'MZ',XL4'0'   0B       2740 S                      000M
         DC    C'M0',XL4'0'   0C       2740 C                      000M
         DC    C'MI',XL4'0'   0D       1060                        000M
         DC    C'M4',XL4'0'   0E       1060 P                      000M
         DC    C'MJ',XL4'0'   0F       1030                        000M
         DC    C'MK',XL4'0'   10       1030 P                      000M
         DC    C'ML',XL4'0'   11       83B3                        000M
         DC    C'MN',XL4'0'   12       115A                        000M
         DC    C'MP',XL4'0'   13       TWX  AD                     000M
         DC    C'M3',XL4'0'   14       2848                        000M
         DC    C'M5',XL4'0'   15        BSC1    CONTENTION         000M
         DC    C'M6',XL4'0'   16        BSC2    SWITCHED  (AD)     000M
         DC    C'PC',XL4'0'   17        BSC3    POLLED  (P)        000M
         DC    C'PB',XL4'0'   18        WTTA                       000M
         DC    C'PE',XL4'0'   19        2741                       000M
         DC    C'PF',XL4'0'   1A        2741 A                     000M
         DC    C'PL',XL4'0'   1B        2740 CO                    000M
         DC    C'PM',XL4'0'   1C        2740 COD                   000M
         DC    C'PN',XL4'0'   1D        1050X                      000M
         DC    C'PO',XL4'0'   1E        1050X AD                   000M
         DC    C'PP',XL4'0'   1F        2740X C                    000M
         DC    C'PQ',XL4'0'   20        2740X ACD                  000M
         EJECT                                                   Y02947
         DCBD  DSORG=BX,DEVD=BS
        IECTDEBX
         EJECT                                                   Y02947
CVT      DSECT                                                   Y02947
         CVT   LIST=NO                                           Y02947
         EJECT                                                   Y02947
WORKAREA DSECT                                                   Y02947
         IECDSECT                                                Y02947
WORKTTRL EQU   2             DISPLACEMENT INTO WORKAREA  TO      Y02947
*                            SAVE I/O MODULE ID                  Y02947
         EJECT                                                   YM4085
         IKJTCB DSECT=YES,LIST=YES                               YM4085
         END
