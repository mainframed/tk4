         TITLE 'IGG019PK - 2741 BREAK ROUTINE '
IGG019PK CSECT
*                        ROUTINE TO TEST FOR 2741 BREAK
*                             BY  1. ISSUING PREPARE COMMAND
*                                 2. ISSUING HALT I/O
*                             SCHEDUALED FROM IGG019MB - CHANNEL END
*                             RESULTS ANALYZED BY CHENNEL END APPENDAGE
***********************************************************************
*                                                                     *
*                      MAINTENANCE ACTIVITY                           *
*                                                                     *
*                      ZA08045   (02/27/76)                           *
*                                                                     *
***********************************************************************
         USING IHADCB,DCBREG
         USING IECTDECB,DECBREG
         USING IECTIOB,IOBREG
         USING *,BASEREG
         LR    BASEREG,15
         B     START   BRANCH AROUND ID AND PATCH AREA
         DC    C'IGG019PK'    TO LOCATE IN DUMP
         DC    C'** MVS *'
         DC    C'&SYSDATE'    ASSEMBLY DATE
PATCH    DC    48XL1'00'      PATCH AREA
START    DS    0H
         LR    IOBREG,PARMREG         LOAD ADDRESS OF IOB
         L     DECBREG,IOBECBPT       LOAD ADDRESS OF ECB
         L     CCWREG,IOBSTART      LOAD ADDRESS OF IOBSTART
         L     DCBREG,IOBDCBPT        LOAD ADDRESS OF DCB
         MVC   0(8,CCWREG),PREPARE  MOVE PREPARE CCW INTO IOB
         L     RZERO,GETPARM    GET 8 BYTES                    @ZA08045
         GETMAIN R,LV=(0)       GET AREA FOR DUMMY DECB        @ZA08045
         LR    ECBSAVE,PARMREG  GET ADDRESS OF DUMMY DECB      @ZA08045
         ST    DECBREG,FOUR(ECBSAVE) SAVE ECB IN DUMMY + 4     @ZA08045
         MVI   FOUR(ECBSAVE),XFF     INDICATE DUMMY            @ZA08045
         STCM  ECBSAVE,MASK7,IOBECBPT+ONE PUT DUMMY INTO IOB   @ZA08045
         LR    PARMREG,IOBREG   GET IOB ADDRESS                @ZA08045
         LR    WREG,ECBSAVE     GET ADDRESS OF DUMMY DECB      @ZA08045
         SVC   0                   EXCP
         STCM  DECBREG,MASK7,IOBECBPT+ONE  UPDATE DUMMY ADDR   @ZA08045
         TM    ZERO(ECBSAVE),POSTBIT   IS DUMMY POSTED?        @ZA08045
         BNO   NOPOST                      NO                  @ZA08045
         L     RZERO,ZERO(ECBSAVE)  GET ECB ADDRESS            @ZA08045
         POST  (DECBREG),(RZERO)    POST ECB                   @ZA08045
NOPOST   EQU   *                                               @ZA08045
         L     RZERO,GETPARM        RELEASE 8 BYTES            @ZA08045
         FREEMAIN  R,LV=(0),A=(ECBSAVE)  RELEASE DUMMY AREA    @ZA08045
         L     WREG,DCBDEBAD    LOAD ADDRESS OF DEB
         SR    PARMREG,PARMREG    ZERO PARMREG
         IC    PARMREG,IOBUCBX    PUT RLN INTO PARMREG
         SLL   PARMREG,2      GET DISPLACEMENT INTO UCB ADD LIST
         L     PARMREG,DEBUCBAD(PARMREG,WREG) LOAD ADD OF LINE UCB
         IOHALT (1)
         SVC   3                        RETURN
*
PREPARE  DC    X'0600000020230001'
         DS    0F                                              @ZA08045
GETPARM  DC    X'FA000008'                                     @ZA08045
ZERO     EQU   0                                               @ZA08045
RZERO    EQU   0                                               @ZA08045
ONE      EQU   1                                               @ZA08045
PARMREG  EQU   1
IOBREG   EQU   2
CCWREG   EQU   3
FOUR     EQU   4                                               @ZA08045
WREG     EQU   4
DECBREG  EQU   5
DCBREG   EQU   6
ECBSAVE  EQU   7                                               @ZA08045
MASK7    EQU   7                                               @ZA08045
BASEREG  EQU   12
DEBUCBAD EQU   32
POSTBIT  EQU   X'40'                                           @ZA08045
XFF      EQU   X'FF'                                           @ZA08045
*
         CNOP  0,8
         EJECT
         DCBD  DSORG=BX
         EJECT
         IECTDECB
         EJECT
         IECTIOBX
         EJECT
         END
