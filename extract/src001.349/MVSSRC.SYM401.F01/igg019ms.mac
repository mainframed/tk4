 TITLE 'IGG019MS - BTAM REQUEST/RELEASE BUFFER ROUTINE'
IGG019MS CSECT
         SPACE 2
*    STATUS         CHANGE LEVEL 001,   JUNE 2, 1967
         SPACE 2
* FUNCTION -
*                   TO PROVIDE OR RELEASE A BUFFER FROM OR TO
*                   THE BUFFER POOL ASSOCIATED WITH A DESIGNATED DCB.
         SPACE 2
* ENTRY POINT -
*                   ENTRY IS TO THE 1ST EXECUTABLE INSTRUCTION
         SPACE 2
* INPUT -
*                   REQUEST
*                        REGISTER O CONTAINS THE REQUEST COUNT IN THE
*                        LEFTMOST BYTE WITH (0) IN THE RIGHT 3  BYTES
*
*                   RELEASE
*                        REGISTER O CONTAINS THE ADDRESS OF THE FIRST
*                        BUFFER BEING RELEASED BY THE CALLING PROGRAM.
*
*                   REGISTER 1 CONTAINS A POINTER TO THE CURRENT DCB
         SPACE 2
* OUTPUT -
*                   REQUEST
*                        REGISTER 15 WILL CONTAIN THE ADDRESS OF THE
*                        FIRST REQUESTED BUFFER IN THE THREE RIGHTHAND
*                        BYTES.
*
*                        THE LEFT MOST BYTE WILL CONTAIN -
*                        0 - IF ALL REQUESTED BUFFERS ARE AVAILABLE.
*                        4 - IF THE NUMBER OF AVAILABLE BUFFERS
*                            IS LESS THAN THE REQUESTED NUMBER. THOSE
*                            AVAILABLE WILL HAVE BEEN PROVIDED.
*                        8 - IF NO BUFFERS ARE AVAILABLE.
*                       12 - IF THE BUFFER CONTROL BLOCK ADDRESS IS
*                            INVALID (THE ADDRESS IS ZERO OR HAS
*                            IMPROPER BOUNDARY ALIGNMENT).
*
*
*                   RELEASE
*                        REGISTER 15 WILL CONTAIN ZEROS IN THE RIGHT
*                        HAND THREE BYTES.
*
*                        THE LEFT MOST BYTE WILL CONTAIN -
*                        0 - IF ALL BUFFERS HAVE BEEN RETURNED.
*                        8 - IF NO BUFFERS WERE RETURNED BECAUSE THE
*                            THE FIRST BUFFER IN THE CHAIN HAD BEEN
*                            RETURNED PREVIOUSLY (IS THE FIRST BUFFER
*                            ON THE QUEUE OF AVAILABLE BUFFERS).
*                       12 - IF THE BUFFER CONTROL BLOCK ADDRESS IS
*                            INVALID (THE ADDRESS IS ZERO OR HAS
*                            IMPROPER BOUNDARY ALIGNMENT).
*                       20 - IF THE COUNT OF BUFFERS BEING
*                            RELEASED IS GREATER THAN THE TOTAL
*                            BUFFERS OBTAINED OR THE MAX (256)
*
         SPACE 2
* EXTERNAL -
*                   NONE
         SPACE 2
* EXIT -
*                   RETURN IS TO THE CALLING ROUTINE, THE RETURN
*                   ADDRESS BEING IN REGISTER 14.
         SPACE 2
* IN-LINE ROUTINES -
*                   ENTRY IS FOR A REQUEST OR RELEASE OF A BUFFER.
*                   WHICH ONE IS DETERMINED BY LOOKING AT THE
*                   INPUT IN REGISTER O, (SEE INPUT ABOVE)
*
*                   RELEASE
*                        BUFFERS ARE RETURNED TO THE BUFFER POOL.
*
*                   REQUEST
*                        BUFFERS ARE ASSIGNED TO THE REQUEST IF THEY
*                        ARE AVAILABLE.  A COUNT OF THE NUMBER OF
*                        AVAILABLE BUFFERS IS MAINTAINED IN BUFFER
*                        CONTROL BLOCK...
         SPACE 2
***********************************************************************
*          AZ11413  (05/26/76) IGG019MS MODULE WAS REWRITTEN TO CORRECT
*                   THE MVS NON-DISABLED PROBLEM OF UPDATING THE BUFFER
*                   CONTROL BLOCK (ADDRESS OF 1ST AVAIL BUFFER AND THE
*                   NUMBER OF AVAIL BUFFERS)..........................
***********************************************************************
         EJECT
***********************************************************************
*
*         REGISTER AND MISCELLANEOUS EQUATIONS
*
***********************************************************************
         SPACE 2
ZEROREG  EQU   0                        CNT OR PTR TO BFR PASSED AS PAR
DCBREG   EQU   1                        PTR TO DATA CONTROL BLOCK
TCBREG   EQU   2                        PTR TO TCB
CNTREG   EQU   4                        WORK REGISTER
BCBREG   EQU   5                        PTR TO BUFFER CONTROL BLOCK
BUFREG   EQU   7                        PTR BUFFER
BUF2REG  EQU   8                        PTR TO NEXT BUFFER
WORKREG  EQU   11                       WORK REGISTER
CVTREG   EQU   11                       PTR TO CVT
BASEREG  EQU   12                       BASE REGISTER
BRREG    EQU   15                       RETRUN DATA TO REQUESTOR
         SPACE 5
DEBNMEXT EQU   16                       OFFSET TO NUMBER OF IOB
DEBUCBAD EQU   32                       OFFSET TO PTR TO UCB ADRS
DCBBUFCB EQU   20                       OFFSET TO BCB ADRS
DCBBUFNO EQU   20                       OFFSET TO NO. OF BUFFERS IN BCB
DCBBFTEK EQU   32                       OFFSET TO BUFFER TECHNIQUE CODE
DCBDEBAD EQU   44                       OFFSET TO DEB ADDRESS
DEBTCBAD EQU   0           OFFSET FROM DEB BASIC OF TCB ADDR.
ZERO     EQU   0
BCB      EQU   X'03'
         EJECT
         USING *,BASEREG
         USING CVTMAP,CVTREG
         USING TCB,TCBREG
         SAVE  (14,12),,*               SAVE REGISTERS
         LR    BASEREG,BRREG            LOAD BASE REGISTER
         SPACE 3
*        IGG019MS WILL RUN UNDER THE USER'S KEY
         SPACE 3
***********************************************************************
*                                                                     *
* PERFORM BASIC CHECKS ON BUFFER RELEASE/REQUEST. VERIFY THAT BASIC   *
* REQUEST CAN BE SERVICED UNDER PRESENT BCB CONDITIONS....            *
*                                                                     *
***********************************************************************
         L     CVTREG,DCBDEBAD(DCBREG)  GET DEB ADDR
         L     CVTREG,DEBTCBAD(CVTREG)  GET TCB ADDR
         LA    TCBREG,ZERO(CVTREG)      CLEAR HI BYTE
         DROP  CVTREG
         MODESET EXTKEY=TCB,WORKREG=11   GET USER'S KEY
         SPACE 3
         SR    BRREG,BRREG              CLEAR RETURN REG
         TM    DCBBUFCB+3(DCBREG),BCB   TEST FOR VALID BCB ADDRESS
         BNZ   NOBCB                    IF NOT VALID BRANCH
         L     BCBREG,DCBBUFCB(DCBREG)   LOAD PTR TO BUFFER CTRL BLOCK
         LA    BCBREG,0(BCBREG)         CLEAR HIGH ORDER BYTE.
         LTR   BCBREG,BCBREG            TEST FOR BUFFER CONTROL BLOCK
         BZ    NOBCB               ADDRESS OF ZERO.  IF SO, EXIT.
         LR    BUFREG,ZEROREG           LOAD PTR TO BFR
         LA    BUFREG,0(BUFREG)         ZERO OUT LEFT BYTE
         LTR   BUFREG,BUFREG            TEST BUFFER ADDRESS
         BZ    BUFREQ                   IF REQUEST
         EJECT
***********************************************************************
*                                                                     *
* REQUEST FOR RELEASING BUFFERS BACK TO POOL. VERIFY BASIC RELEASE    *
* LIMITATIONS AND PROCEED ....                                        *
*                                                                     *
***********************************************************************
         SR    ZEROREG,ZEROREG          GET MAX BUFR CNT FROM DCB
         ICM   ZEROREG,1,DCBBUFNO(DCBREG) ***
         LA    CNTREG,1                 DEFAULT TO REL ONE BUFFER
         LR    BUF2REG,BUFREG           ***
         L     WORKREG,0(BUFREG)        NXT BUF ADDR OR END
CKNXTBUF LA    WORKREG,0(WORKREG)       CLR HI ORDER BYTE
         ST    WORKREG,0(BUF2REG)       CLR HI ORDER BYTE OF BUFFER
         LTR   WORKREG,WORKREG          CHK FOR LAST BUFFER
         BZ    CHNDONE                  REL CHAIN COMPLETE
         LA    CNTREG,1(CNTREG)         INCR REL BUFR CNTR
         CR    CNTREG,ZEROREG           CK FOR BUFR LIMIT
         BNH   INLIMIT                  BUFR CNT WITHIN LIMITS
         ICM   BRREG,8,INVBUF           INVALID REL CNT ERROR
         B     EXIT                     RETURN TO REQUESTOR
INLIMIT  LR    BUF2REG,WORKREG          LOAD NXT BUFR ADDR
         L     WORKREG,0(BUF2REG)       CK FOR END OF CHAIN
         B     CKNXTBUF                 CHK INPUT CHAIN
CHNDONE  L     WORKREG,0(BCBREG)        GET NXT ADDR FROM BCB
TRYAGAIN LA    WORKREG,0(WORKREG)       CLR HI ORDER BYTE
         ST    WORKREG,0(BUF2REG)       SETUP NEW CHAING PTR
***********************************************************************
*                                                                     *
* THE COMPARE&SWAP WILL UPDATE THE BCB NEXT BUFFER ADDR AREA OR WILL  *
* CAUSE THE LOGIC TO START THE BCB CHAIN UPDATE OVER...               *
*                                                                     *
***********************************************************************
         CS    WORKREG,BUFREG,0(BCBREG) UPDATE BCB CHAIN
         BNE   TRYAGAIN                 BCB ALTERED, RSTRT UPDATE
***********************************************************************
*                                                                     *
* THE BCB AVAILABLE BUFFER COUNT MUST NOW BE UPDATED TO REFLECT THE   *
* ADDITIONAL BUFFERS ADDED TO THE CHAIN...                            *
*                                                                     *
***********************************************************************
         L     WORKREG,4(BCBREG)        GET CURRENT BUFR CNT
         SLL   CNTREG,16                SETUP TO INCR BCB CNT
TRYCNTR  LR    BUF2REG,CNTREG           SETUP CNT IN TEMP REG
         AR    BUF2REG,WORKREG          INCR CNT IN TEMP REG
***********************************************************************
*                                                                     *
* THE COMPARE&SWAP WILL CAUSE THE LOGIC TO UPDATE THE BCB AVAILABLE   *
* BUFFER COUNT FIELD OR START THE COUNT UPDATE OVER...                *
*                                                                     *
***********************************************************************
         CS    WORKREG,BUF2REG,4(BCBREG) UPDATE CNT IN BCB AREA
         BNE   TRYCNTR                  CNT ALTERED, START AGAIN
         B     EXIT                     RELEASE COMPLETED, RETURN
         EJECT
***********************************************************************
*                                                                     *
* REQUEST TO OBTAIN BUFFERS FROM POOL. VALIDATE THE BASIC REQUEST AND *
* PROCESS IF VERIFIED...                                              *
*                                                                     *
***********************************************************************
BUFREQ   LTR   ZEROREG,ZEROREG          ANY BUFFERS REQUESTED
         BZ    EXITA                    NO, NONE MADE AVAILABLE
         SRL   ZEROREG,8                SETUP REQ CNT FOR COMPARE
         L     WORKREG,4(BCBREG)        CHK BCB FOR AVAILABILITY
         C     WORKREG,GTLNGTH          ***
         BNH   EXITA                    NO BUFFERS AVAILABLE
TRYUPDCT LR    CNTREG,WORKREG           CK REQ CNT AGAINST BCB CNT
         SR    CNTREG,ZEROREG           ***
         BM    NOTENUF                  INSUFFICIENT BUFFERS
***********************************************************************
*                                                                     *
* THE COMPARE & SWAP WILL ATTEMPT TO UPDATE THE BCB BUFFER COUNT      *
* FIELD WITH THE NEW COUNT AFTER SERVICING THIS GETBUFFER REQUEST...  *
*                                                                     *
***********************************************************************
         CS    WORKREG,CNTREG,4(BCBREG) SETUP NEW BCB CNT VALUE
         BNE   TRYUPDCT                 BCB CNT ALTERED, TRY AGAIN
         SRL   ZEROREG,16               SETUP REQ CNT AS CONTROL
TRYUPBFR LR    CNTREG,ZEROREG           SETUP REQ CNT IN CTRL LOOP
         L     BUFREG,0(BCBREG)         GET FIRST BCB BUFFER ADDR
         ICM   BRREG,7,1(BCBREG)        PUT BUFR ADDR IN RC REG
         LR    BUF2REG,BUFREG           DEFAULT TO SINGLE BUFR
DECRCNTR BCT   CNTREG,NEXTBUFR          LOOP TO GET ALL BUFFERS
         L     WORKREG,0(BUF2REG)       GET BCB BUFR ADDR FOR C&S
***********************************************************************
*                                                                     *
* THE COMPARE & SWAP WILL ATTEMP TO REMOVE THE REQUESTED BUFFERS FROM *
* THE BCB NEXT BUFFER ADDR...                                         *
*                                                                     *
***********************************************************************
         CS    BUFREG,WORKREG,0(BCBREG) SETUP NEW BCB BUFFER ADDR
         BNE   TRYUPBFR                 BCB BUFR ALTERED,TRY AGAIN
         SR    WORKREG,WORKREG          SETUP LAST ADDR IN CHAIN
         ST    WORKREG,0(BUF2REG)       ***
         B     EXIT                     REQUEST SERVICED, RETURN
NEXTBUFR L     BUF2REG,0(BUF2REG)       CONTINUE ALONG BUFR CHAIN
         LTR   BUF2REG,BUF2REG          TEST FOR ALL ZEROS IN BUFR PTR
         BZ    TRYUPBFR                 START OVER
         B     DECRCNTR                 ***
***********************************************************************
*
* IF INSUFFICIENT BUFFERS ARE AVAILABLE FOR THIS REQUEST, THE AVAILABLE
* BUFFERS WILL BE GIVEN TO THE REQUESTOR....
*
***********************************************************************
NOTENUF  SR    BRREG,BRREG              CLEAR RC REG
         C     WORKREG,GTLNGTH          ***
         BNH   EXITA                    NO BUFFERS AVAILABLE NOW
         LR    ZEROREG,WORKREG          GET AVAILABLE BUFFER CNT
         SRL   ZEROREG,16               SETUP FOR BCB CNT ONLY
         SLL   ZEROREG,16               ***
         ICM   BRREG,8,PARTBUF          INDICATE PARTIAL RC
         B     TRYUPDCT                 ATTEMPT TO UPDATE CNT
         EJECT
NOBCB    ICM   BRREG,8,NOBCBLK          NO BUFFER CONTROL BLOCK
         B     EXIT                     RETURN TO REQUESTOR
EXITA    ICM   BRREG,8,NOBUFR           CODE NO BUFFER AVAILABLE
EXIT     EQU   *
         MODESET EXTKEY=ZERO
         RETURN (2,12)                  RESTORE REGISTERS
         SPACE 3
         DC    C'&SYSDATE'
PATCH    DC    20F'0'
         SPACE 3
***********************************************************************
*                    PROGRAMING CONSTANTS                             *
***********************************************************************
GTLNGTH  DC    X'0000FFFF'              TST FOR BUFR CNT EQ ZERO
PARTBUF  DC    X'04'                    RC = SOME BUFERS AVAILABLE
NOBUFR   DC    X'08'                    RC = NO BUFERS AVAILABLE
NOBCBLK  DC    X'0C'                    RC = INVALID BCB ADDR
INVBUF   DC    X'14'                    RC FOR INV BUFR REL CNT
         EJECT
CVT      DSECT
         CVT   LIST=YES
         EJECT
         IKJTCB DSECT=YES,LIST=YES
         SPACE 5
         CNOP  0,8
         END
