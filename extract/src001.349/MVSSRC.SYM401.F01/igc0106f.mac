         TITLE 'IGC0106F-1030 TERMINAL TEST MODULE.'
IGC0106F CSECT
         SPACE 2
         SPACE 2
* STATUS -          CHANGE LEVEL 001    MARCH 18,1968
         SPACE 2
*
*
* FUNCTION -        GENERATE CHANNEL PROGRAM FOR 1030 ON LINE TESTS
*
*
* ENTRY POINT -     ENTRY IS TO FIRST INSTRUCTION FROM HEADER ANALYSIS
*                   MODULE
*
*
* INPUT -           REGISTER 1 - ADDRESS OF IOB
*                   REGISTER 14 - RETURN ADDRESS
*
*
* OUTPUT -          1.  GENERATED CHANNEL PROGRAM
*                   2.  UPDATED USAGE COUNT AND POINTER IN
*                       TERMINAL TEST MODULE (IGG019MR)
*
*
* EXTERNAL ROUTINE -SVC 4 ROUTINE (GETMAIN)
*
*
* EXIT -            RETURN TO ADDRESS IN REGISTER 14
*
*
* INLINE ROUTINES -THE INPUT MESSAGE IS LOCATED THROUGH THE PARAMETER
*                   LIST AND IS ANALYZED FOR TYPE OF REQUEST.  CCW'S
*                   FOR THE PROPER DATA AND CONTROL PURPOSES ARE FORMED
*                   IN THE CCW AREA OF THE IOB.  IF THE REQUESTED DATA
*                   PATTERN IS NOT IN USE, CORE WILL BE OBTAINED AND
*                   THE PATTERN MOVED INTO THE NEW AREA.  IF NO CORE IS
*                   AVAILABLE, THE TEST REQUEST WILL BE SWITCHED TO THE
*                   TERMINAL SPECIFIED IN THE TEST REQUEST.
*                   A SUB-ROUTINE--
*
*                        A.  SETS UP THE ADDRESS FOR THE CHANNEL
*                            PROGRAM.
*                        B.  DETERMINES IF DIAL CCW'S ARE REQUIRED AND
*                            PREPARES THEM IF NEEDED.
*                        D.  MOVES THE BASIC CCW'S INTO THE CCW AREA OF
*                            THE IOB.
*
*
* ATTRIBUTES -      THIS ROUTINE IS EXECUTED IN THE SVC TRANSIENT AREA
*                   AS A TYPE 4 SVC ROUTINE, ENABLED,PRIVILEGED AND
*                   REENTRANT.
*
         EJECT
         EJECT
*
*
         BALR  BASEREG,0
         USING *,BASEREG
         USING IHADCB,DCBREG
         USING IECTIOB,IOBREG
         USING IECTDECB,DECBREG
         USING PARMLIST,PARREG
*
         LR    IOBREG,1                 LOAD IOB ADDRESS
         L     PARREG,IOBPARM           LOAD PARAMETER LIST ADDRESS
         L     IOREG,IOBAREA            LOAD I/O AREA ADDRESS
         L     PATRNREG,PATTERN         GET ADDRESS OF PATTERN NAME TBL
         CLI   6(IOREG),X'02'           BRANCH IF
         BE    MSGSWTCH                           SWITCH TEST (1)
         CLI   7(IOREG),X'0B'           CHECK FOR MANUAL ENTRY OR BADGE
         BE    *+20                     READER
         CLI   6(IOREG),X'0B'           BRANCH IF
         BE    MSGSWTCH                           COMPARE TEST (5)
         CLI   6(IOREG),X'68'           BRANCH IF
         BE    MSGSWTCH                           VALID COMPARE (D)
         SR    TESTREG,TESTREG          CLEAR TEST REGISTER
         IC    TESTREG,6(IOREG)         INSERT TEST SEL. CHARACTER
         SRA   TESTREG,1                SHIFT OUT PARITY BIT
         IC    TESTREG,TESTCODE-2(TESTREG)   SET UP INDEXING
         LA    WORKREG,0(TESTREG,PATRNREG)
         CLI   0(WORKREG),X'00'         BRANCH IF THIS PATTERN
         BE    NOTINUSE                                   IS NOT IN USE
         SR    WORKREG,WORKREG          CLEAR WORKING REGISTER
         IC    WORKREG,0(TESTREG,PATRNREG)   1-UP
         LA    WORKREG,1(WORKREG)             USAGE
         STC   WORKREG,0(TESTREG,PATRNREG)     COUNT
*
SETCCWS  EQU   *
         BAL   LINKREG,SETCCWRG         SET UP CCW ADDRESSES IN IOB
         STC   TESTREG,8(DECBREG)       PUT DISPLACEMENT IN DECB
         L     WORKREG,0(TESTREG,PATRNREG)   GET ADDRESS OF DATA
         SR    WORKREG2,WORKREG2        CLEAR WORKING REGISTER 2
         IC    WORKREG2,0(WORKREG)      GET COUNT OF DATA
         SH    WORKREG2,=H'4'           REDUCE BY FOUR
         STC   WORKREG2,39(CCWREG)      PUT IN CCW
         LA    WORKREG,4(WORKREG)       ADDRESS OF DATA TO BE SENT
FINCCWS  EQU   *
         ST    WORKREG,32(CCWREG)       PUT IN CCW
         MVI   32(CCWREG),X'01'         RESTORE OP CODE
*
         L     WORKREG,NLIDLES
         LA    WORKREG,24(WORKREG)      ADDRESS OF CIRCLE Y, C, S.
         ST    WORKREG,0(CCWREG)        PUT IN CCW
         MVI   0(CCWREG),X'01'          RESTORE OP CODE
*
         LA    WORKREG,33(IOBREG)       ADDRESS OF ADDRESSING CHARS
         ST    WORKREG,8(CCWREG)        PUT IN CCW
         MVI   8(CCWREG),X'01'          RESTORE OP CODE
         MVI   1(WORKREG),X'02'         INSERT SECOND ADDRESSING CHAR
*
         LA    WORKREG,26(DECBREG)      ADDRESS OF RESPONSE AREA
         ST    WORKREG,16(CCWREG)       PUT IN CCW
         MVI   16(CCWREG),X'02'         RESTORE OP CODE
*
         MVC   25(3,CCWREG),NLIDLES+1   ADDRESS OF NL-IDLES FOR  CCW
*
         LA    WORKREG,27(DECBREG)      ADDRESS OF LRC RESPONSE AREA
         ST    WORKREG,40(CCWREG)       PUT IN CCW
         MVI   40(CCWREG),X'02'         RESTORE OP CODE
*
         L     IOREG,IOBAREA            RE-ESTABLISH I/O POINTER
         CLI   7(IOREG),X'0B'           CHECK FOR MANUAL ENTRY OR BADGE
         BCR   7,RETURN                 READER--EXIT IF NOT
         SR    WORKREG,WORKREG          CLEAR RESULT REGISTER
         CLI   8(IOREG),X'20'           TEST TENS FOR ZERO
         BE    TESTUNIT
         SR    WORKREG2,WORKREG2        CLEAR SECOND WORK REGISTER
         IC    WORKREG2,8(IOREG)        TENS ADDRESSING CHARACTER
         SRA   WORKREG2,1               DROP PARITY
         BZ    RESTART                  NO TEST--INVALID CHARACTER
         SLA   WORKREG2,1               TIMES TWO
         AR    WORKREG,WORKREG2         TO RESULT REGISTER
         SLA   WORKREG2,2               TIMES FOUR MORE
         AR    WORKREG,WORKREG2         TIMES TEN IN RESULT REGISTER
TESTUNIT CLI   9(IOREG),X'20'           TEST UNITS FOR ZERO
         BE    TESTRSLT
         SR    WORKREG2,WORKREG2        CLEAR SECOND WORKING REGISTER
         IC    WORKREG2,9(IOREG)        UNITS ADDRESSING CHARACTER
         SRA   WORKREG2,1               DROP PARITY
         BZ    RESTART                  NO TEST--INVALID CHARACTER
         CH    WORKREG2,=H'9'           UNITS CHARACTER MUST BE NUMERIC
         BH    RESTART                  BRANCH IF NOT
         AR    WORKREG,WORKREG2         DEVELOP FINAL RESULT
TESTRSLT CH    WORKREG,=H'26'           TEST RESULT FOR 26
         BH    RESTART                  OVER 26 IS INVALID
         SR    WORKREG2,WORKREG2        CLEAR SECOND WORK REGISTER
         IC    WORKREG2,ADDRCHAR(WORKREG)   ADDRESSING CHARACTER
         STC   WORKREG2,33(IOBREG)      PUT IN IOB
         NR    WORKREG2,WORKREG2        TEST REGISTER
         BZ    RESTART                  ZERO IS AN INVALID ADDRESS
         BR    RETURN                   RETURN
*
NOTINUSE EQU   *
         EX    0,DATAADDR-X'2C'(TESTREG)     ADDRESS OF DATA TO MOVE
         SR    COUNTREG,COUNTREG        CLEAR REGISTER FOR COUNT
         IC    COUNTREG,0(FROMREG)      GET COUNT
         LA    TOREG,0(TESTREG,PATRNREG)     ADDRESS OF TABLE ENTRY
         BAL   LINKREG,GETCORE          GET STORAGE, MOVE DATA, ETC.
         LA    WORKREG,0(TESTREG,PATRNREG)   ADDRESS OF TABLE ENTRY
         MVI   0(WORKREG),X'01'         SET USAGE COUNT TO 1
         L     WORKREG,0(WORKREG)       DATA AREA ADDRESS
         IC    WORKREG2,3(WORKREG)      COUNT WAS PADDED
         STC   WORKREG2,0(WORKREG)      PUT IN CORRECT PLACE
         B     SETCCWS                  SETUP CCW'S
*
MSGSWTCH EQU   *
         BAL   LINKREG,SETCCWRG         SET UP CCW ADDRESSES IN IOB
         LH    WORKREG,6(DECBREG)       USED IF NOT DYNAMIC BUFFERING
         TM    32(DCBREG),X'08'         TEST IF DYNAMIC BUFFERING USED
         BZ    *+12
         L     WORKREG,24(DCBREG)       USED WITH DYNAMIC BUFFERING
         SH    WORKREG,=H'4'            ADJUST FOR TIC
         BCTR  WORKREG,0                BYPASS EOA CHAR
         BCTR  WORKREG,0                BYPASS TRANSACTION CODE
         STH   WORKREG,38(CCWREG)       TEMP SAVE
         CLI   0(IOREG),X'3D'           LOOK FOR EOB
         BE    FOUNDEOB
         LA    IOREG,1(IOREG)           UP CORE POINTER
         BCT   WORKREG,*-12             LOOP ON COUNT
         BCTR  IOREG,0                  ADJUST TO POINT TO LAST POS.
         MVI   0(IOREG),X'3D'           PUT IN EOB AT LAST POSITION
SETDATA  EQU   *
         L     FROMREG,IOBAREA          GET 'FROM' ADDRESS OF DATA
         LH    COUNTREG,38(CCWREG)      COUNT OF DATA TO BE MOVED
         SLA   COUNTREG,2
         LA    TOREG,36(IOBREG)         ADDRESS TO STORE CORE ADDRESS
         TM    38(CCWREG),X'FF'        TEST FOR ILLEGAL COUNT
         BNZ   RESTART                 NOT ZERO MEANS ILLEGAL
         CLI   39(CCWREG),X'63'        TEST FOR ILLEGAL COUNT
         BH    RESTART                 HIGH MEANS ILLEGAL COUNT
         BAL   LINKREG,GETCORE          GET STORAGE, MOVE DATA, ETC.
         LH    WORKREG,2(GETMAIN)       SIZE OF DATA AREA
         BCTR  WORKREG,0                REDUCE BY ONE
         STH   WORKREG,38(CCWREG)       PUT IN CCW
         L     WORKREG,36(IOBREG)       ADDRESS OF DATA AREA
         MVC   0(1,WORKREG),3(GETMAIN)  MOVE COUNT TO BEGINNING OF AREA
         LA    WORKREG,1(WORKREG)       UP ADDRESS PAST COUNT
         MVI   8(DECBREG),X'FF'
         B     FINCCWS                  FINISH CCW'S
*
FOUNDEOB EQU   *
         S     IOREG,IOBAREA            COMPUTE NUMBER OF CHARACTERS
         LA    IOREG,1(IOREG)           UP COUNT TO INCLUDE EOB
         STH   IOREG,38(CCWREG)         SAVE COUNT TEMPORARILY
         B     SETDATA
*
GETCORE  EQU   *
         L     GETMAIN,0(PATRNREG)      ADDRESS OF GETMAIN CONSTANTS
         ST    TOREG,4(GETMAIN)         PUT ADDRESS IN GETMAIN CONSTANT
         ST    COUNTREG,0(GETMAIN)      COUNT TO GETMAIN CONSTANTS
         SVC   4                        ISSUE GETMAIN SVC
         SLL   15,24                    ELIMINATE HIGH ORDER BITS
         NR    15,15                    TEST FOR ZERO RETURN CODE
         BNE   NOCORE                   NON-ZERO IS NO CORE AVAILABLE
         L     TOREG,0(TOREG)           GET ADDRESS OF BUFFER
         L     WORKREG,=X'DFDFDFDF'     INITIALIZE PADDING REGISTER
         SRA   COUNTREG,2               DIVIDE COUNT BY 4
         IC    WORKREG,0(FROMREG)       GET A CHARACTER
         ST    WORKREG,0(TOREG)         STORE A WORD WITH PADS AND CHAR
         LA    FROMREG,1(FROMREG)       UP POINTERS
         LA    TOREG,4(TOREG)
         BCT   COUNTREG,*-16            LOOP ON COUNT
         BR    LINKREG                  RETURN
*
NOCORE   EQU   *
         NI    IOBINCAM,NOTEST          SET NOTEST SWITCH
         BR    RETURN                   EXIT
*
SETCCWRG EQU   *
         L     DECBREG,IOBECBPT         ADDRESS OF DECB
         L     DCBREG,DECDCBAD          ADDRESS OF DCB
         LA    CCWREG,56(IOBREG)        ADDRESS OF CCW AREA
         ST    CCWREG,16(IOBREG)       RESET CCW AREA POINTER
         MVC   0(48,CCWREG),CHANPROG    MOVE CCW'S TO CCW AREA
         BR    LINKREG                  RETURN
*
*
*
*  PATTERN OF DATA FOR 1030 TESTS
*
TILT     DC    AL1(4*(TILTEND-TILT))
         DC    X'62026B0B701064046D0D765BDFDFDFDF167313680861156E0E68'
         DC    X'075BDF3D'
TILTEND  EQU   *
*
ROTATE   DC    AL1(4*(ROTATEND-ROTATE))
         DC    X'62766E686143574F49405BDFDFDFDF23372F292002160E08155B'
         DC    X'DF3D'
ROTATEND EQU   *
*
TWIST    DC    AL1(4*(TWISTEND-TWIST))
         DC    X'62160276700410646B0D0B6D5BDFDFDFDF43322352512531454A'
         DC    X'2C2A4C5BDF3D'
TWISTEND EQU   *
*
ALLCHAR  DC    AL1(4*(ALLCHARX-ALLCHAR))
         DC    X'15020407080B0D0E1013626467686B6D6E7073434546494A4C4F'
         DC    X'51522526292A2C2F31325BDF3D'
ALLCHARX EQU   *
*
ANALYZER DC    AL1(4*(ANALYZEX-ANALYZER))
         DC    X'25014F01620167016B5B0101010101010167015BDFDF466D3BDF'
         DC    X'023BDF045BDF3D'
ANALYZEX EQU   *
*
*  CCW'S
*
CHANPROG CCW   X'01',0,X'A0',5          WRITE CIRCLE Y, C'S, S
         CCW   X'01',0,X'60',2          WRITE ADDRESSING CHARACTERS
         CCW   X'02',0,X'60',1          READ ADDRESSING RESPONSE
         CCW   X'01',0,X'A0',20         WRITE CARRIAGE RETURN AND IDLES
         CCW   X'01',0,X'60',0          WRITE THE TEST MESSAGE
         CCW   X'02',0,X'20',1          READ THE LRC RESPONSE
*
         EJECT
*  ADDRESSES OF DATA TO BE MOVED TO PATTERN BUFFER
*
DATAADDR EQU   *
         LA    FROMREG,TILT
         LA    FROMREG,ROTATE
         LA    FROMREG,TWIST
         LA    FROMREG,ALLCHAR
         LA    FROMREG,ANALYZER
*
TESTCODE DC    X'2C303400383C'
ADDRCHAR DC    X'00006467686B6D6E7073004546494A4C4F51522526292A2C2F31'
         DC    X'32'
*
*  EQUATES
*
NOTEST   EQU   X'FE'
RESTART  EQU   NOCORE
WORKREG2 EQU   1
GETMAIN  EQU   1
LINKREG  EQU   2
PARREG   EQU   3
WORKREG  EQU   4
MULTEVEN EQU   4
MULTODD  EQU   MULTEVEN+1  5
IOBREG   EQU   5
IOREG    EQU   7
BASEREG  EQU   6
FROMREG  EQU   7
TESTREG  EQU   8
PATRNREG EQU   9
CCWREG   EQU   10
TOREG    EQU   11
DCBREG   EQU   11
DECBREG  EQU   12
COUNTREG EQU   13
RETURN   EQU   14
         EJECT
         DCBD  DSORG=BX,DEVD=BS
         EJECT
         IECTIOBX
         SPACE 2
IOBNAME  EQU   IOBERCCW
IOBAREA  EQU   IOBNAME+8
IOBPARM  EQU   IOBNAME+12
         EJECT
         IECTDECB
         EJECT
PARMLIST DSECT
PATTERN  DS    F
NLIDLES  DS    F
         END
