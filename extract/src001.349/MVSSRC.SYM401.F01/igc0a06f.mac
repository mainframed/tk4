         TITLE 'IGC0A06F-2741 TERMINAL TEST MODULE. PTTC'
IGC0A06F CSECT
         SPACE 2
* STATUS -          CHANGE LEVEL 000    21 NOVEMBER 1968
         SPACE 2
*
*
* FUNCTION -        GENERATE CHANNEL PROGRAM FOR 2741 ON LINE TESTS
*
*
* ENTRY POINT -     ENTRY IS TO FIRST INSTRUCTION FROM HEADER ANALYSIS
*                   MODULE
*
*
* INPUT -           REGISTER 1 - ADDRESS OF IOB
*                   REGISTER 14 - RETURN ADDRESS
*
*
* OUTPUT -          1.  GENERATED CHANNEL PROGRAM
*                   2.  UPDATED USAGE COUNT AND POINTER IN
*                       TERMINAL TEST MODULE (IGG019MR)
*
*
* EXTERNAL ROUTINE -SVC 4 ROUTINE (GETMAIN)
*
*
* EXIT -            RETURN TO ADDRESS IN REGISTER 14
*
*
* INLINE ROUTINES -THE INPUT MESSAGE IS LOCATED THROUGH THE PARAMETER
*                   LIST AND IS ANALYZED FOR TYPE OF REQUEST.  CCW'S
*                   FOR THE PROPER DATA AND CONTROL PURPOSES ARE FORMED
*                   IN THE CCW AREA OF THE IOB.  IF THE REQUESTED DATA
*                   PATTERN IS NOT IN USE, CORE WILL BE OBTAINED AND
*                   THE PATTERN MOVED INTO THE NEW AREA.  IF NO CORE IS
*                   AVAILABLE, THE TEST REQUEST WILL BE SWITCHED TO THE
*                   TERMINAL SPECIFIED IN THE TEST REQUEST.
*                   A SUB-ROUTINE--
*
*                        A.  SETS UP THE ADDRESS FOR THE CHANNEL
*                            PROGRAM.
*                        B.  MOVES THE BASIC CCW'S INTO THE CCW AREA OF
*                            THE IOB.
*
*
* ATTRIBUTES -      THIS ROUTINE IS EXECUTED IN THE SVC TRANSIENT AREA
*                   AS A TYPE 4 SVC ROUTINE, ENABLED,PRIVILEGED AND
*                   REENTRANT.
*
         EJECT
*
*
*
         BALR  BASEREG,0
         USING *,BASEREG
         USING IHADCB,DCBREG
         USING IECTIOB,IOBREG
         USING IECTDECB,DECBREG
         USING PARMLIST,PARREG
         USING CPA,CCWREG
*
         LR    IOBREG,1                 LOAD IOB ADDRESS
         L     PARREG,IOBPARM           LOAD PARAMETER LIST ADDRESS
         L     IOREG,IOBAREA            LOAD I/O AREA ADDRESS
         L     DECBREG,IOBECBPT         ADDRESS OF DECB
         L     DCBREG,DECDCBAD          ADDRESS OF DCB
SETCCWRG EQU   *
         LA    CCWREG,IOBCPA            ADDRESS OF CCW AREA
         ST    CCWREG,IOBSTART         RESET CCW AREA POINTER
         MVC   0(16,CCWREG),CHANPROG     MOVE TWO CCWS
SETADCCW L     WORKREG2,NLIDLES         GET ADDRESS OF NL, PADS
         ST    WORKREG2,CCW1           STORE IN CCW
         MVI   CCW1,X'01'               RESTORE OP CODE
         CLI   6(IOREG),X'02'           BRANCH IF
         BE    MSGSWTCH                           SWITCH TEST (1)
         CLI   6(IOREG),X'0B'           BRANCH IF
         BE    COMPARE                            COMPARE TEST (5)
         SR    TESTREG,TESTREG          CLEAR TEST REGISTER
         IC    TESTREG,6(IOREG)         INSERT TEST SEL. CHARACTER
         SRA   TESTREG,1                SHIFT OUT PARITY BIT
         IC    TESTREG,TESTCODE-2(TESTREG)   SET UP INDEXING
         L     PATRNREG,PATTERN         GET ADDRESS OF PATTERN NAME TBL
         LA    WORKREG,0(TESTREG,PATRNREG)
         CLI   0(WORKREG),X'00'         BRANCH IF THIS PATTERN
         BE    NOTINUSE                                   IS NOT IN USE
         IC    WORKREG,0(TESTREG,PATRNREG)   1-UP
         LA    WORKREG,1(WORKREG)             USAGE
         STC   WORKREG,0(TESTREG,PATRNREG)     COUNT
*
SETCCWS  EQU   *
         L     WORKREG,0(TESTREG,PATRNREG)
         IC    WORKREG3,0(WORKREG)     INSERT PATTERN AREA COUNT
         LA    WORKREG,1(WORKREG)       ADDRESS OF DATA TO BE SENT
         ST    WORKREG,CCW2             PUT IN CCW
         MVI   CCW2,X'01'               RESTORE OP CODE
         SR    WORKREG,WORKREG          CLEAR WORKING REGISTER
         IC    WORKREG,0(TESTREG,PATRNREG)   CHARACTER COUNT
         BCTR  WORKREG3,0              REDUCE BY ONE
         STC   WORKREG3,CCW2+7         PUT IN CCW
         STC   TESTREG,DECONLTT         PUT DISPLACEMENT
*
*
RETURN1  BR    RETURN
*
NOTINUSE L     GETMAIN,0(PATRNREG)      ADDRESS OF GETMAIN CONSTANTS
         EX    0,DATAADDR-4(TESTREG)         ADDRESS OF DATA TO MOVE
         LA    TOREG,0(TESTREG,PATRNREG)     ADDRESS OF THE TABLY ENTRY
         ST    TOREG,4(GETMAIN)         PUT IN GETMAIN CONSTANTS
         SR    WORKREG,WORKREG          CLEAR WORKING REGISTER
         IC    WORKREG,0(FROMREG)       CHARACTER COUNT OF DATA
         ST    WORKREG,0(GETMAIN)       PUT IN GETMAIN CONSTANTS
         SVC   4                        ISSUE GETMAIN SVC
         SLL   15,24                    ELIMINATE HIGH ORDER BITS
         NR    15,15                    TEST FOR ZERO RETURN CODE
         BNE   MSGSWTCH                 NON-ZERO IS NO CORE AVAILABLE
         MVI   0(TOREG),X'01'           SET USAGE COUNT TO ONE
         L     TOREG,0(TOREG)           GET ADRESS OF DATA AREA
         BCTR  WORKREG,0                ADJUST COUNT FOR MVC INST
         EX    WORKREG,EXMVC            MOVE THE DATA
         B     SETCCWS
*
*
COMPARE  EQU   *
         LH    WORKREG,DECLNGTH         INPUT AREA LENGTH
         SH    WORKREG,IOBCSW+6         - RESIDUAL COUNT
         SH    WORKREG,HA
         BM    NOCHAR
         CH    WORKREG,MAXLNG           IS LENGTH TOO GREAT?
         BNH   CMPTST                   NO
         LH    WORKREG,MAXLNG           YES, SUBSTITUTE MAX LENGTH
CMPTST   EX    WORKREG,EXCOMP
         BNE   MSGSWTCH                 BAD COMPARE, MSG SWITCH
LOADMSG  MVC   0(LN,IOREG),CMPVALD      GOOD, LOAD COMPARE VALID MSG.
         LA    WORKREG,COMPDATA(WORKREG) FIND LAST CHARACTER
         MVC   8(1,IOREG),0(WORKREG)    INSERT IN MSG
RETURN2  ST    IOREG,CCW2
         MVI   CCW2,X'01'               RESTORE OP CODE
         MVI   CCW2+7,LN
         BR    RETURN
NOCHAR   MVC   0(LN,IOREG),CMPVALD      LOAD COMPARE VALID MSG
         B     RETURN2
*
*
MSGSWTCH EQU   *
         ST    IOREG,CCW2               ADDRESS OF DATA TO CCW
         MVI   CCW2,X'01'               RESTORE OP CODE
         LH    WORKREG,DECLNGTH         USED IF NOT DYNAMIC BUFFERING
         TM    DCBBFTEK,X'08'           TEST IF DYNAMIC BUFFERING USED
         BZ    *+12
         LH    WORKREG,DCBBUFL          USED WITH DYNAMIC BUFFERING
         SH    WORKREG,=H'4'            ADJUST FOR TIC
         BCTR  WORKREG,0                BYPASS EOA CHAR
         STH   WORKREG,CCW2+6           IN CASE NO EOT FOUND
         CLI   0(IOREG),X'1F'           LOOK FOR EOT
         BE    FOUNDEOT
         LA    IOREG,1(IOREG)           UP CORE POINTER
         BCT   WORKREG,*-12             LOOP ON COUNT
         BR    RETURN
*
FOUNDEOT EQU   *
         S     IOREG,IOBAREA            COMPUTE NUMBER OF CHARACTERS
         STH   IOREG,CCW2+6             STORE COUNT
         BR    RETURN
*
*  CONSTANTS
*
TESTCODE DC    X'04080C001014'
EXMVC    MVC   0(1,TOREG),0(FROMREG)
         EJECT
*
*  PATTERN OF DATA FOR 2740 TESTS
*
TILT     DC    AL1(TILTEND-TILT)
         DC    X'622367266B2A6E2F70316120642568296D2C733276375B5E5E5E'
         DC    X'5E5E5E573452134C0D49084504401551104F0E4A0B460743025B'
         DC    X'5E5E5E5E5E5E'
TILTEND  EQU   *
*
ROTATE   DC    AL1(ROTATEND-ROTATE)
         DC    X'62766B6D706443574A4C514523372A23312502340B0D5B5E5E5E'
         DC    X'5E5E5E100407130E081526322F292046524F494067736E68615B'
         DC    X'5E5E5E5E5E5E'
ROTATEND EQU   *
*
TWIST    DC    AL1(TWISTEND-TWIST)
         DC    X'E234A357E713A652EB0DAA4CEE08AF49F004B145E1155B5E5E5E'
         DC    X'5E5E5E8276C3378773C6328B6DCA2C8E68CF299064D125A0405B'
         DC    X'5E5E5E5E5E5E'
TWISTEND EQU   *
*
ALLCHAR  DC    AL1(ALLCHARX-ALLCHAR)
         DC    X'15020407080B0D0E1013626467686B6D6E7073434546494A4C4F'
         DC    X'51522526292A2C2F31325B5E5E5E5E5E5EE2E4E7E8EBEDEEF0F3'
         DC    X'C3C5C6C9CACCCFD1D2A5A6A9AAACAFB1B25B5E5E'
ALLCHARX EQU   *
*
ANALYZER DC    AL1(ANALYZEX-ANALYZER)
         DC    X'020407080B016701130101250162016B616445254F5D5D5D5D5D'
         DC    X'5D5D5D5D5D5D5D155D5D5D105D5D5D0D0101010101014F01675B'
         DC    X'01010101010101675E5B5E5E5E466D3B5E5E023B5E5E043B5E5E'
         DC    X'075B'
ANALYZEX EQU   *
*
*  ADDRESSES OF DATA TO BE MOVED TO PATTERN BUFFER
*
         DS    0H
DATAADDR EQU   *
         LA    FROMREG,TILT
         LA    FROMREG,ROTATE
         LA    FROMREG,TWIST
         LA    FROMREG,ALLCHAR
         LA    FROMREG,ANALYZER
*
*
COMPDATA DC    X'15020407080B0D0E1013626467686B' STORED
         DC    X'6D6E7073434546494A4C4F51522526'       COMPARISON
         DC    X'292A2C2F3132'                                   DATA
*
CMPVALD  DC    X'67494F012A466840235B'   VALID COMPARE MESSG
*
LN       EQU   L'CMPVALD                LENGTH ATTRIBUTE OF VALID MSG
HA       DC    H'10'
MAXLNG   DC    H'35'
EXCOMP   CLC   8(*-*,IOREG),COMPDATA
*
*  CCW'S
*
CHANPROG DS    0D
         CCW   X'01',0,X'A0',15         WRITE CARRIAGE RETURN AND IDLES
         CCW   X'01',0,X'20',0          WRITE THE TEST MESSAGE
         EJECT
*
*  EQUATES
*
WORKREG2 EQU   1
GETMAIN  EQU   1
WORKREG  EQU   2
PARREG   EQU   3
FROMREG  EQU   4
IOBREG   EQU   5
BASEREG  EQU   6
IOREG    EQU   7
TESTREG  EQU   8
PATRNREG EQU   9
CCWREG   EQU   10
DCBREG   EQU   11
DECBREG  EQU   12
TOREG    EQU   13
WORKREG3 EQU   13
RETURN   EQU   14
LINKREG  EQU   15
         EJECT
         DCBD  DSORG=BX,DEVD=BS
         EJECT
         IECTIOBX
         SPACE 2
IOBNAME  EQU   IOBERCCW
IOBAREA  EQU   IOBNAME+8
IOBPARM  EQU   IOBNAME+12
         EJECT
         IECTDECB
         EJECT
PARMLIST DSECT
PATTERN  DS    F
NLIDLES  DS    F
         SPACE 5
CPA      DSECT
CCW1     DS    D                        WRITE EOA
CCW2     DS    D                        WRITE NL,PADS
         END
