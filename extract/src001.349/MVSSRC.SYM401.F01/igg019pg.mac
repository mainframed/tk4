         TITLE 'IGG019PG - BTAM LOCAL 3270 SECOND LEVEL ATTN RTN'
IGG019PG CSECT
*
* A035100,A058980-058999,D059000-060000,A064100,             LD YA02143
* C065500-069000,D069500-072000,D075000-077000,              LD YA02143
* C081000-081500,A084100,A100600-100700                      LD YA02143
* C058998,A059498                                            LD YA03270
* D064100,A065020-065200,D067600-067700                      LD YA03953
*
***********************************************************************
*
* STATUS - CHANGE LEVEL 000
*
* FUNCTION - STARTS A READ OF MODIFIED DATA TO A 3270 WHICH HAS GIVEN
*    AN ATTENTION INTERRUPT. SCHEDULED BY THE FIRST LEVEL ATTENTION
*    ROUTINE IF NEEDED.  ENTERED FROM THE THIRD STAGE OF THE
*    ASYNCHRONOUS EXIT EFFECTOR (AEE3).
*
* ENTRY POINT - THIS ROUTINE IS ENTERED AT IGG019PG FROM AEE3.
*
* INPUT - REGISTER 1 CONTAINS THE ADDRESS OF THE UCB OF THE DEVICED
*    WHICH CAUSED AN ATTENTION INTERRUPT.
*
* OUTPUT - AN IOB IS INITIALIZED TO DO A READ MODIFIED AND EXCP IS
*    ISSUED.  THE UCB ATTENTION HANDLING FIELDS ARE UPDATED AS NEEDED.
*
* EXTERNAL ROUTINES - EXCP (SVC 0)
*
* EXITS, NORMAL - WHEN FINISHED, THIS ROUTINE RETURNS TO AEE3.
*
* EXITS, ERROR - RETURN TO AEE3 WITHOUT ISSUING EXCP.
*
* TABLES/WORK AREAS - THE UCB EXTENSIONS OF THE INTERRUPTING DEVICE
*    AND RELATIVE LINE 1 OF THE LINE GROUP.  THE IOB INITIALIZED BY
*    READ INITIAL AND THE IOB FOR THE INTERRUPTING DEVICE.
*
* ATTRIBUTES - THIS ROUTINE IS LOADED BY OPEN. IT EXECUTES ENABLED,
*    SUPERVISOR PROTECT KEY, PRIVILEDGED, AND REENTRANT.
*
***********************************************************************
         EJECT
*/*IGG019PG: CHART */
*/* HEADER
*/*BTAM SECOND LEVEL ATTENTION ROUTINE FOR 3270                     */
*/* E ENTRY FROM AEE3 */
*/* M ESTABLISH CSECT ADDRESSABILITY AND SAVE RETURN ADDR */
*/* M ESTABLISH BASES FOR DEVICE AND MASTER UCB DSECTS */
*/* M ESTABLISH ADDRESSABILITY FOR DEB AND DCB */
*/* P OBTAIN ADDRESS OF INITIALIZED IOB */
*/* D (YES,EXCP,NO,GETIOB) RLN OF DEVICE IS RLN OF INIALIZED IOB? */
*/*GETIOB: P OBTAIN ADDRESS OF DEVICE'S IOB */
*/* P COPY ECB POINTER AND CHANNEL PROGRAM TO DEVICE'S IOB */
*/*EXCP: P SAVE ECB CONTENTS IN A NON-VOLATILE REGISTER */
*/* L INVOKE EXCP TO START I/O OPERATION ON DEVICE */
*/* P CLEAR INITIALIZED RLN FIELD IN UCB */
*/* P RESTORE PRE-EXCP STATUS OF ECB */
*/* P MOVE RLN OF DEVICE BEING USED TO DECPOLPT */
*/* R RETURN TO AEE3 */
*/*IGG019PG: END */
         EJECT
         USING MSTRUCB,MTRBASE
         USING UCB,UCBBASE
         USING DEBNMSUB,DEBREG
         USING IECTIOB,IOBDVC      ADDRESSABILITY FOR IOB    LD YA02143
         BALR  BASEREG,0           ESTABLISH ADDRESSABILITY FOR CSECT
         USING *,BASEREG
         B     A
         DC    CL8'IGG019PG'       MODULE IDENTIFIER
         DC    XL2'4072'           DATE OF REVIOSION
PATCH    DS    CL48                PATCH AREA
A        DS    0H
         LR    SAVE14,RTRNREG      SAVE REG 14 (RETURN ADDRESS)
         LR    UCBBASE,PARMREG     GET ADDRESS OF UCB IN DSECT BASE REG
         CLI   UCBRLN,ONE          RLN = 1
         BE    RLN1                YES, BRANCH
         L     MTRBASE,UCBCTLNK    NO, GET ADDRESS OF MASTER UCB
         B     GETDEB              BR TO GET ADDR OF DEB
RLN1     EQU   *
         LR    MTRBASE,UCBBASE
GETDEB   EQU   *
         L     DEBREG,MTRDEBAD     GET ADDR OF DEB FROM MASTER UCB
         L     DCBREG,ZERO(DEBREG)   POINT TO TCB
         USING TCB,DCBREG
         MODESET EXTKEY=TCB,WORKREG=4                           YA01891
         DROP  DCBREG
         USING IHADCB,DCBREG
         L     DCBREG,DEBDCBAD-1   GET ADDR OF DCB FROM DEB
         L     IOBDVC,DCBIOBAD     GET BASE OF IOB POOL
         SR    RW3,RW3
         IC    RW3,DCBEIOBX        GET LENGTH OF IOB
         SR    RODD,RODD
         IC    RODD,MTRINRLN       GET RLN OF INITIALIZED IOB
         MR    REVN,RW3            GET DISPLACEMENT INTO IOB POOL
         LA    IOBRDTI,0(RODD,IOBDVC)  ADD BASE TO GET ADDR OF
*                                  INITIALIZED IOB
         CLC   UCBRLN(ONE),MTRINRLN  RLN FOR INITIALIZED IOB =
*                                  RLN OF INTERRUPTING DEVICE
         BNE   GETIOB              NO, GET ADDRESS OF OTHER IOB
         LR    IOBDVC,IOBRDTI      YES, IOB FOR DEVICE IS INITIALIZED
         B     EXCP                IOB.  START I/O
GETIOB   EQU   *
         SR    RODD,RODD           GET RLN OF INTERRUPTING DEVICE
         IC    RODD,UCBRLN
         MR    REVN,RW3            GET DISP INTO IOB POOL
         AR    IOBDVC,RODD         ADD BASE OF POOL TO GET ADDRESS OF
*                                  IOB
         MVC   ECBPT(FOUR,IOBDVC),ECBPT(IOBRDTI)  MOVE ECB ADDR
         MVC   CPA(CPALNGTH,IOBDVC),CPA(IOBRDTI)  MOVE CHANNEL PROGRAM
         LA    REVN,CPA(IOBDVC)    GET ADDR OF CPA
         ST    REVN,START(IOBDVC)  AND STORE IN IOB
EXCP     DS    0H                                            LD YA02143
**********
*
*    NOTE-- EXCP DESTROYS THE CONTENTS OF THE ECB.  SINCE WAIT MAY
*    HAVE BEEN ISSUED, THE ECB CONTENTS MUST BE SAVED IF THE WAIT IS
*    TO BE SATISFIED. THIS IS DONE BY NOT USING THE USER'S DECB FOR
*    THE EXCP, SINCE IT COULD BE PART OF A MULTIPLE WAIT AND ANOTHER
*    EVENT MAY COMPLETE AND PROCESS THE DECB DURING THE EXCP.
*    IGG019PA AND IGG019LP HAVE BEEN CHANGED TO RECOGNIZE THIS
*    CASE AND GET ADDRESS OF REAL DECB FROM THE WORD AFTER
*    THE ECB. THIS IS RECOGNIZED BY A X'FF' IN THE FOURTH BYTE WHICH
*    IS NORMALLY THE DECTYPE FIELD.
*
**********
         L     RZERO,GETPARM       SET SUBPOOL AND LENGTH    LD YA02143
         GETMAIN R,LV=(0)          GET 8 BYTES FOR AN ECB    LD YA02143
         LR    ECBSAVE,PARMREG     SAVE ADDRS OF NEW ECB     LD YA02143
         L     REVN,IOBECBPT       GET ADDRS OF DECB         LD YA02143
         ST    REVN,FOUR(ECBSAVE)  POINT NEW ECB TO DECB     LD YA02143
         MVI   FOUR(ECBSAVE),ALLON FLAG AS NOT A REAL DECB   LD YA02143
         STCM  ECBSAVE,MASKA,IOBECBPT+ONE    SET NEW AREA    LD YA03270
*                                            AS ECB          LD YA03270
         LR    PARMREG,IOBDVC      SET FOR EXCP              LD YA02143
         EXCP  (1)                 START I/O OPERATION
         MODESET EXTKEY=ZERO                                    YA01891
         MVI   MTRINRLN,ZERO       CLEAR INITIALIZED RLN
         L     REG3,DEBNMSUB       LOAD TCB ADDRSS           LD YA03953
         USING TCB,REG3            ADDRESSABILITY FOR TCB    LD YA03953
         MODESET EXTKEY=TCB,WORKREG=14  ASUME USER'S KEY     LD YA03953
         STCM  REVN,MASKA,IOBECBPT+ONE REPOINT IOB TO DECB   LD YA03953
         MODESET EXTKEY=ZERO                                 LD YA03953
         TM    ZERO(ECBSAVE),POSTBIT  WAS ECB POSTED ?       LD YA02143
         BNO   NOPOST                 NO, SKIP POST          LD YA02143
         L     RZERO,ZERO(ECBSAVE) YES, REPOST USER          LD YA02143
         POST  (REVN),(RZERO)      WITH SAME POST CODE       LD YA02143
NOPOST   EQU   *                                             LD YA02143
         MODESET EXTKEY=TCB,WORKREG=3 USER KEY FOR FREEMAIN  LD YA02143
         DROP  REG3                                          LD YA02143
         L     RZERO,GETPARM       SETUP FOR FREEMAIN        LD YA02143
         FREEMAIN R,LV=(0),A=(ECBSAVE) FREE THE ECB AREA     LD YA02143
         MODESET EXTKEY=ZERO                                 LD YA02143
         XC    POLPT(FOUR,REVN),POLPT(REVN)  CLEAR POLPT FIELD
         MVC   POLPT+3(ONE,REVN),UCBRLN   MOVE RLN OF DEVICE BEING USED
*                                  INTO DECB
         LR    RTRNREG,SAVE14      GET RETURN ADDR BACK IN REG 14
         BR    RTRNREG             RETURN TO AEE3
         EJECT
**********
*
*        CONSTANTS
*
**********
         DS    0F                  GET ON WORD BOUNDARY         YA02050
GETPARM  DC    X'FA000008'         SUBPOOL 250 FOR 8 BYTES   LD YA02143
POSTBIT  EQU   X'40'               DEFINE BIT IN ECB         LD YA02143
**********
*
*        REGISTER DEFINITIONS
*
**********
RZERO    EQU   0                                             LD YA02143
PARMREG  EQU   1                   PARAMETER REGISTER
REVN     EQU   2                   WORK REGISTERS- EVEN/ODD PAIR
RODD     EQU   3                       FOR MULTIPLICATION
REG3     EQU   3                   WORK REG                  LD YA02143
ECBSAVE  EQU   4                   REG TO SAVE ECB CONTENTS
RW3      EQU   4                   WORK REGISTER
MTRBASE  EQU   5                   ADDR OF UCB FOR RLN 1
UCBBASE  EQU   6                   ADDR OF UCB FOR INTERRUPTING DEVICE
IOBDVC   EQU   7                   ADDR OF IOB FOR DEVICE
IOBRDTI  EQU   8                   ADDR OF INITIALIZED IOB
DEBREG   EQU   9                   ADDRESS OF DEB
DCBREG   EQU   10                  ADDRESS OF DCB
SAVE14   EQU   11                  REGISTER TO SAVE RETURN PT.
BASEREG  EQU   12                  BASE REGISTER
RTRNREG  EQU   14                  RETURN REGISTER
**********
*
*        MISCELLANEOUS EQUATES
*
**********
ALLON    EQU   X'FF'
CPA      EQU   X'40'               DISP TO START OF CPA IN IOB
CPALNGTH EQU   24                  LENGTH OF 3270 CPA
DCBPT    EQU   X'14'               DISP TO DCB ADDR IN IOB
ECBPT    EQU   4                   DISP TO ECB ADDR IN IOB
FOUR     EQU   4
INCAM    EQU   X'1C'               DISP TO IOBINCAM
IOBBUSY  EQU   X'40'               IOBINCAM BUSY BIT
ONE      EQU   X'01'
POLPT    EQU   36                  DISP TO DECPOLPT FIELD IN DECB
START    EQU   X'10'               DISP OF PTR TO CPA IN IOB
TWO      EQU   2
UCBX     EQU   X'20'               DISP TO UCB INDEX IN IOB
ZERO     EQU   0
MASKA    EQU   7                   MASK FOR ADDRS PORTION... LD YA02143
*                                  OF FULL WORD              LD YA02143
         EJECT
         DCBD  DSORG=BX,DEVD=BS
         EJECT
         IECTDEBX
         EJECT
         IECTIOBX
         EJECT
         IECTUCBX
         EJECT
         IKJTCB DSECT=YES,LIST=YES                              XA01891
         END
