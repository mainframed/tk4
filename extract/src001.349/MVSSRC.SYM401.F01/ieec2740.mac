         TITLE 'IEEC2740 - BTAM CONSOLE PROCESSOR FOR THE 2740 '
IEEC2740 CSECT
         ENTRY IGCXX07B
***********************************************************************
*
* MODULE NAME:
*    IEEC2740
*
* DESCRIPTIVE NAME:
*    BTAM CONSOLE PROCESSOR FOR THE 2740
*
* COPYRIGHT:
*    NONE
*
* FUCTION:
*    PERFORM THE BASIC FUNCTIONS FOR A 2740 IN A MULTIPLE CONSOLE
*    ENVIRONMENT:
*        OPEN
*        WRITE
*        READ
*        CLOSE
*
* NOTES:
*    DEPENDENCIES:
*        THIS MODULE HAS CPU MODEL DEPENDENT TIMING LOOPS.
*    RESTRICTIONS:
*        THIS MODULE IS FOR A 2740 CONSOLE IN MCS ONLY.
*    REGISTER CONVENTIONS:
*        SEE 'REGISTER DEFINITION' BELOW.
*    NOTES:
*        THIS MODULE HAS HARD CODED MODEL CONTROL BLOCKS.
*
* PATCH LABEL:
*    PACHAREA (420 BYTES)
*
* MODULE TYPE:
*    PROCEDURE
*    PROCESSOR:
*        BAL
*    MODULE SIZE:
*        4272 BYTES
*    ATTRIBUTES:
*        REENTRANT, ENABLED, KEY 0, SUPERVISOR STATE, LOCAL AND
*        CMS LOCKS HELD.
*
* ENTRY POINT:
*    IEEC2740
*    IGCXX07B
*    PURPOSE:
*        SEE 'FUNCTION'
*    LINKAGE:
*        FROM THE COMMUNICATIONS TASK VIA SVC 72
*    INPUT:
*        REG 1 = ADDRESS OF CXSA
*    OUTPUT:
*        FOR OPEN
*            A DEB IS ADDED TO THE DEB CHAIN OF THE COMM TASK TCB.
*            THE UCM ENTRY AND ITS CONTROL BLOCKS (DEB,DCB,ETC.)
*            ARE INITIALIZED FOR THE 2740.
*            THE EIL (EVENT INDICATOR LIST) IS MODIFIED TO POINT TO AN
*            ECB FOR THE 2740.
*            BTAM MODULES ARE LOADED, IGG019MA, IGG019MB, AND IGG019M0,
*            AND IGG019MR.
*            THE LINE TO THE 2740 IS INITIALIZED USING EXCP.
*        FOR WRITE
*            IF THE LINE TO THE 2740 HAS BEEN 'PREPARED' FOR
*            A PREVIOUS 'READ', IT IS RESET USING 'HALT I/O'.
*            A MESSAGE IS FOUND ON THE OUTPUT QUEUE, TRANSLATED
*            TO 2740 CODE, AND SENT TO THE 2740 USING THE BTAM
*            ROUTINE 'IGG019MA'.
*        FOR READ
*            THE LINE TO THE 2740 IS 'PREPARED' FOR INPUT.
*            WHEN THE COMPLETE MESSAGE IS RECEIVED, IT IS
*            TRANSLATED TO EBCDIC AND SENT TO SVC 34.
*        FOR CLOSE
*            ALL OUTSTANDING MESSAGES ARE SENT.
*            ALL OUTSTANDING REPLIES ARE RECEIVED.
*            THE UCM ENTRY AND ITS CONTROL BLOCKS ARE DE-INITIALIZED.
*            THE DEB IS REMOVED FROM THE DEB CHAIN OF THE COMM
*            TASK'S TCB.
*            THE UCB IS SET SO IT CAN BE ALLOCATED TO ANOTHER
*            TASK IF REQUESTED.
*            THE BTAM MODULES ARE DELETED.
*
* EXITS-NORMAL:
*    RETURN VIA BR REG 14
*
* EXITS-ERROR:
*    TO CONSOLE SWITCH BY BRANCH
*
* EXTERNAL REFERENCES:
*    ROUTINES:
*        IGG019MA (BTAM 'READ/WRITE')
*        SVC 34 (SYSTEM COMMAND HANDLER)
*        SVC 16 (IOS PURGE I/O ROUTINE)
*        SVC 10 (GETMAIN/FREEMAIN)
*        SVC 8 (LOAD)
*        SVC 9 (DELETE)
*        SVC 43 (CIRB)
*    DATA AREAS:
*        ASMTRTAB - TO GENERATE TRANSLATE TABLES FOR 2740
*            INPUT AND OUTPUT.
*    CONTROL BLOCKS:
*        DCB   (MAPPED BY DCBD)
*        DECB  (MAPPED BY IHADECB)
*        DEB   (MAPPED BY IEZDEB)
*        UCM   (MAPPED BY IEECUCM)
*        WQE   (MAPPED BY IHAWQE)
*        TCB   (MAPPED BY IKJTCB)
*        UCB   (MAPPED BY IEFUCBOB)
*        CQE   (MAPPED BY IHACTM)
*        CXSA  (MAPPED BY IHACTM)
*        IOB   (MAPPED BY IEZIOB)
*        IQE   (MAPPED BY IHAIQE)
*        IRB   (MAPPED BY IKJRB)
*        CVT PREFIX
*
* TABLES AND WORKAREAS:
*    DYNAMICALLY GOTTEN BUFFERS FOR READ AND WRITE DATA AREAS
*    DYNAMICALLY GOTTEN BUFFERS FOR I/O CONTROL BLOCKS
*
* MACROS:
*    GETMAIN
*    LOAD
*    CIRB
*    WRITE
*    NIL
*    DELETE
*    FREEMAIN
*    READ
*    SETLOCK
*
* CHANGE ACTIVITY:
*    YA01058  (IN BASE)
*    YA01059  (IN BASE)
*    YA01063  (IN BASE)
*    YA01247  (IN BASE)
*    YA00837  (IN BASE)
*    YM02593  (9/25/73)
*    YM04057  (10/1/73)
*    YM04091  (11/7/73)
*    YA02125  (11/7/73)
*    YA02443  (11/7/73)
*    YA02444  (COVERED BY YM04057 AND YM04091)
*    YA02445  (11/7/73)
*    YM04095  (11/15/73)
*    YM04096  (11/15/73)
*    YM05650  (2/7/74)
*    YM05695  (2/28/74)
*    YM07708  (3/26/74)
*    ZA00515  (7/02/74)
*    ZA00517  (8/13/74)
*    AZ04651  (07/14/75)          AZ04667  (07/01/75)
*    AZ14029  (09/14/76)          AZ17703  (03/15/77)
*    AZ17713  (03/18/77)          G51CK02  (05/20/77)
***********************************************************************
         EJECT
IGCXX07B EQU   *
         LR    RBASE,RCODE         PROGRAM BASE
         USING IEEC2740,RBASE
         B     BEGIN               BRANCH AROUD ID
         DC    C'IEEC2740'         MODULE ID
         DC    C'010579'           PTF NUMBER
         DC    C'** MVS *'
         DC    C'&SYSDATE'         DATE LAST ASSEMBLY
         DS    0H
BEGIN    EQU   *
         LA    RBASE2,CONSTS       SET BASE FOR CONSTANT    LD @ZA00515
         USING CONSTS,RBASE2       CONSTANT ADDRESSABILITY  LD @ZA00515
         LR    RCXSATCB,RPARM      SAVE ADDR OF EXTENDED SAVE AREA
         USING CXSA,RCXSATCB
*                                                                     *
*        CSAXA WILL BE USED TO SAVE RETURN ADDRESS (BYTES 1,2,3)      *
*        HIGH ORDER BYTE OF CASXA (BYTE 0) WILL BE USED AS A FLAG     *
*        FOR GETLOCK AND SETFRR IN THE FOLLOWING MANNER:              *
*        CASXA+0 = X'80' LOCAL LOCK OBTAINED                          *
*                  X'40' CMS LOCK OBTAINED                            *
*                  X'20' FRR OBTAINED                                 *
*                                                                     *
         XC    CSAXA(L1),CSAXA     CLEAR LOCKS & FRR FLAGS  LD @ZA00515
         STCM  RLINK,L7,CSAXA+L1   SAVE RETURN ADDRESS      LD @ZA00515
         L     RUCME,CSAUCM        UCM ENTRY BASE
         USING UCMLIST,RUCME
         L     RUCM,CSACTLM        UCM BASE BASE
         USING UCM,RUCM                                         YM05695
         USING IHADCB,RDCB
         USING UCBOB,RUCB
         USING DEBBASIC,RDEB
         USING WQE,RWQE
*                                                                     *
*        SET UP ESTAE ENVIROMENT                                      *
*                                                                     *
         ICM   RWORK1,L15,CSANPTR  GET RECOVERY AREA        LD @ZA00515
         BZ    NOESTAE             NOT THERE, BYPASS        LD @ZA00515
         USING PARMLIST,RWORK1     PARMLIST ADDRESSABILITY  LD @ZA00515
         LA    RWORK2,ERRORTRY     GET 2740 RECOVERY ADDR   LD @ZA00515
         C     RWORK2,PARMRTAD     OUR RETRY IN STACK       LD @ZA00515
         BE    NOESTAE             YES, LEAVE IT            LD @ZA00515
         MVC   CSANAME(L8),PARMRTAD SAVE RETRY & REGSAVE    LD @ZA00515
         ST    RWORK2,PARMRTAD     SAVE RETRY ADDRESS       LD @ZA00515
         DROP  RWORK1                                       LD @ZA00515
         USING UCBOB,RUCB          RE-BASE UCB              LD @ZA00515
NOESTAE  EQU   *                                            LD @ZA00515
*                                                                     *
*        ESTAE OR FRR RECOVERY WILL ENTER HERE FOR AN                 *
*        OPEN RETRY                                                   *
*                                                                     *
OPNRTRY  EQU   *                                            LD @ZA00515
         BAL   RCODE,GETLOCK       OBTAIN LOCAL AND CMS LOCKS   YM02593
         L     RUCB,UCMUCB         BASE UCB                     YM02593
         L     RDCB,UCMDCB         BASE DCB AND COMMON DSECT    YM04096
*                                  IF ZERO, IT WILL BE SET BY   YM04096
*                                  OPEN ROUTINE.                YM04096
         TM    UCMSTS,UCMTA        IS THIS AN OPEN REQUEST      YM02593
         BO    OPEN                YES                          YM02593
         LA    RDEB,CBDEB          BASE DEB                     YM02593
         BAL   RCODE,FREELOCK      RELEASE CMS AND LOCAL LOCKS  YM02593
         TM    UCMSTS,UCMCF        IS THIS A CLOSE REQUEST      YM02593
         BO    CLOSE               YES                          YM02593
         B     OTHER               CHECK FOR OTHER FUNCTIONS    YM02593
OPEN     EQU   *
         NC    UCMDCB(L4),UCMDCB   CONSOLE ALREADY OPEN         YM02593
         BNZ   OPENEND             YES, DON'T OPEN AGAIN        YM02593
         BAL   RCODE,FREELOCK      RELEASE CMS AND LOCAL LOCKS  YM02593
         ICM   RWORK,L15,CSANPTR   GET RECOVERY AREA        LD @ZA00515
         BZ    NORCVRY             IF NONE, SKIP SET UP     LD @ZA00515
         USING PARMLIST,RWORK      PARMLIST ADDRESSABILITY  LD @ZA00515
         OI    PARMFTPT,OPENREQ    THIS IS AN OPEN REQUEST  LD @ZA00515
NORCVRY  EQU   *                                            LD @ZA00515
         GETMAIN R,LV=CBSIZ,SP=SUBPOOL
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY1            IF NONE, SKIP SET UP     LD @ZA00515
         ST    RPARM,UCMDCB        SAVE DCB ADDR FOR RCVRY  LD @ZA00515
         OI    PARMFTPT,GTMAINON   INDICATE GETMAIN DONE    LD @ZA00515
NORCVRY1 EQU   *                                            LD @ZA00515
         LR    RDCB,RPARM          ADDRESS OF AREA OBTAINED
         MVC   IHADCB(CBLEN1),DCB401   COPY MODEL CONTROL       YM02593
         MVC   IOBSTDRD(CBLEN2),IOB401   BLOCKS TO
         MVC   SAVEAREA(CBLEN3),XSAVE   THIS NEW AREA           YM02593
         LA    RDEB,CBDEB          BASE DEB
         LA    RWORK,DECB          POINTER TO DECB              YM02593
         ST    RWORK,IOBECBPT      STORE DECB ADDRESS
         ST    RDCB,IOBDCBPT       STORE DCB ADDRESS
         LA    RLINK,IOBCPA        POINT TO CHANNEL PROGRAM AREA
         ST    RLINK,IOBSTART      AND STORE IN IOB
         ST    RDEB,DCBDEBAD       INITIALIZE DEB ADDRESS
         LA    RLINK,IOBLNTH       GET MY IOB LENGTH
         LA    RPARM,IOBSTDRD      POINT TO IOB
         SR    RPARM,RLINK         SUBTRACT FROM IOB ADDRESS
         IC    RLINK,DCBIOBAD      SAVE DCBDEVTP
         ST    RPARM,DCBIOBAD      STORE IOB ADDRESS-LENGTH IN DCB
         STC   RLINK,DCBIOBAD      SAVE DCBDEVTP
         ST    RDCB,DECDCBAD       INITIALIZE DCB ADDRESS IN DECB
         LA    RLINK,CBIRB         INITIALIZE IRB POINTER SLOT
         ST    RLINK,DEBIRBAD      IN DEB
         LA    RLINK,APPVTAB       INITIALIZE AVT               YM02593
         IC    RPARM,DEBAPPAD      SAVE BYTE                    YM05695
         ST    RLINK,DEBAPPAD      IN DEB
         STC   RPARM,DEBAPPAD      SAVE BYTE                    YM05695
         LA    RPARM,MESSAGE       ADDRESS OF MSG AREA          YM02593
         ST    RPARM,DECAREA       DATA AREA FOR DECB
         L     RPARM,CVTPTR        POINT TO CVT                 YM04057
         USING CVTMAP,RPARM                                     YM04057
         L     RPARM,CVTSVDCB      GET SVCLIB DCB ADDR          YM04057
         DROP  RPARM                                            YM04057
         LOAD  EPLOC=MA,DCB=(1)    LOAD IGG019MA                YM04057
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY2            IF NONE, SKIP SET UP     LD @ZA00515
         OI    PARMFTPT,LOADMAON   INDICATE LOAD FOR        LD @ZA00515*
                                   IGG019MA IS DONE         LD @ZA00515
NORCVRY2 EQU   *                                            LD @ZA00515
         IC    RPARM,DCBOFLGS      SAVE FLAGS
         ST    RZERO,DCBREAD       STORE MA ADDRESS
         STC   RPARM,DCBOFLGS      RESTORE FLAGS
         L     RPARM,CVTPTR        POINT TO CVT                 YM04057
         USING CVTMAP,RPARM                                     YM04057
         L     RPARM,CVTSVDCB      GET SVCLIB DCB ADDR          YM04057
         DROP  RPARM                                            YM04057
         LOAD  EPLOC=MB,DCB=(1)    LOAD IGG019MB                YM04057
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY3            IF NONE, SKIP SET UP     LD @ZA00515
         OI    PARMFTPT,LOADMBON   INDICATE LOAD FOR        LD @ZA00515*
                                   IGG019MB WAS DONE        LD @ZA00515
NORCVRY3 EQU   *                                            LD @ZA00515
         L     RPARM,DEBAPPAD      BASE VECTOR TABLE
         USING DEBAVT,RPARM
         ST    RZERO,DEBCEA        STORE CHANNEL END APPENDAGE ADDR
         ST    RZERO,DEBXCEA       STORE ABNORMAL END APPENDAGE ADDR
         DROP RPARM
         L     RPARM,CVTPTR        POINT TO CVT                 YM04091
         USING CVTMAP,RPARM                                     YM04091
         L     RPARM,CVTSVDCB      POINT TO SVCLIB DCB          YM04091
         DROP  RPARM                                            YM04091
         LOAD EPLOC=MR,DCB=(1)     LOAD IGG019MR                YM04091
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY4            IF NONE, SKIP SET UP     LD @ZA00515
         OI    PARMFTPT,LOADMRON   INDICATE LOAD FOR        LD @ZA00515*
                                   IGG019MR WAS DONE        LD @ZA00515
NORCVRY4 EQU   *                                            LD @ZA00515
         CIRB  EP=(RZERO),KEY=SUPR,MODE=SUPR,STAB=(RE),WKAREA=5
         USING RBSECT,RPARM
         USING IQESECT,RLNTH
         LA    RLNTH,RBIQEWRK      ADDRESS OF IQE
         ST    RLNTH,TEMP2         SAVE ADDRESS OF IQE
         ST    RLNTH,RBNEXAV       SET POINTER TO IQE IN IRB
         XC    IQELNK(L8),IQELNK   ZERO IQELINK AND IQEPARM
         ST    RPARM,IQEIRB        IRB ADDRESS IN THIRD WORD
         MVI   IQESTAT2,ZERO       ZERO THESE FLAG BYTES
         MVI   IQEFLAGS,ZERO       DITTO
         MVC   IQEDCB(L16),IQELNK   DUPLICATE SECOND 16 BYTES
         LA    RLNTH,IQEDCB        BASE SECOND 16
         ST    RLNTH,RBIQEWRK      STORE IN IRB
         DROP  RLNTH
         L     RLNTH,DEBIRBAD      ADDRESS OF IRB POINTER
         ST    RPARM,ZERO(RLNTH)   STORE IRB ADDRESS
         DROP  RPARM
         LOAD  EPLOC=M0            LOAD IGG019M0
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY5            IF NONE, SKIP SET UP     LD @ZA00515
         OI    PARMFTPT,LOADM0ON   INDICATE LOAD FOR        LD @ZA00515*
                                   IGG019M0 WAS DONE        LD @ZA00515
NORCVRY5 EQU   *                                            LD @ZA00515
         L     RPARM,DCBREAD       PUT IGG019M0 IN THE
         LA    RPARM,DEVIODIR(RPARM)
         ST    RPARM,CSAXB         'DEVICE I/O DIRECTORY' (IN
         USING IODIRECT,RPARM      BTAM R/W ROUTINE)
OPENA    EQU   *
         TM    IODEVTP,IOFULL      IS THE DIRECTORY FULL
         BO    ERRC1               YES, ERROR                 LD YM7708
         NC    IODEVTP(L4),IODEVTP   IS THIS ENTRY IN USE
         BZ    OPENB               NO, USE IT
         CLC   IODEVTP,DCBDEVTP    DOES 2740 HAVE THE CHECKING FEATURE
         BE    OPENC               YES, USE IT AS IT IS
         LA    RPARM,IONEXT        POINT TO NEXT ENTRY
         B     OPENA               CHECK IT
OPENB    EQU   *
         ST    RZERO,IODEVMOD      SET FOR 2740 WITH CHECKING FEATURE
         MVC   IODEVTP,DCBDEVTP    INITIALIZE ENTRY
OPENC    EQU   *
         S     RPARM,CSAXB         FIND ENTRY DISPLACEMENT
         SRL   RPARM,DIVIDE4       COMPUTE TOTAL
         STC   RPARM,DCBDEVTP      STORE IN DCB
         BAL   RCODE,GETLOCK       OBTAIN LOCAL AND CMS LOCKS
         SR    RLNTH,RLNTH         CLEAR REG                    YM05650
         IC    RLNTH,UCMID         GET MY CONSOLE NUMBER        YM05650
         BCTR  RLNTH,ZERO          REDUCE BY ONE                YM05650
         SLL   RLNTH,MULT4         MULTIPLY BY EIL ENTRY SIZE   YM05650
         DROP  RPARM
         L     RPARM,UCMLSTP       POINT TO EIL
         USING UCMEIL,RPARM
         LA    RPARM,UCMIECBA      POINT TO FIRST EIL ENTRY     YM05650
         DROP  RPARM
         AR    RPARM,RLNTH         POINT TO CORRECT ENTRY       YM05650
         LA    RWORK,DECB          POINTER TO DECB              YM02593
         IC    RZERO,ZERO(RPARM)   SAVE STOPPER
         ST    RWORK,ZERO(RPARM)   YES, STORE ECB IN EIL
         STC   RZERO,ZERO(RPARM)   SAVE STOPPER
OPEND    EQU   *
         ST    RCXSATCB,TEMP1      SAVE XSA ADDRESS
         DROP  RCXSATCB
         L     RCXSATCB,UCMPXA     ADDRESS OF TCB
         USING TCB,RCXSATCB
         ST    RCXSATCB,DEBTCBAD   SET THE DEB TCB ADDRESS
         L     RPARM,TCBDEB        POINT TO DEB CHAIN
         ST    RDEB,TCBDEB         PUT THE DEB ON THE CHAIN
         IC    RZERO,DEBAMLNG      SAVE FLAGS
         ST    RPARM,DEBDEBAD      SET FORWARD POINTER
         STC   RZERO,DEBAMLNG      RESTORE FLAGS
         IC    RZERO,DEBDCBAD      SAVE BYTE                    YM05695
         ST    RDCB,DEBDCBAD       PUT DCB ADDRESS IN DEB
         STC   RZERO,DEBDCBAD      SAVE BYTE                    YM05695
         ST    RUCB,DEBSUCBA       PUT UCB ADDRESS IN DEB
         MVC   DEBPRIOR,TCBDSP     SET DEB PRIORITY
         MVZ   DEBPROTG,TCBPKF     SET DEB PROTECT KEY
         L     RLNTH,TEMP2         PICK UP ADDRESS OF IQE
         ST    RCXSATCB,L12(RLNTH)   PUT TCB ADDRESS IN IQE
         DROP  RCXSATCB
         USING CXSA,RCXSATCB
         L     RCXSATCB,TEMP1      RE-ESTABLISH BASE FOR XSA
         ST    RDCB,UCMDCB         SET THE DCB ADDR IN UCM
         LA    RWORK,DECB          GET ADDRESS OF DECB          YM02593
         ST    RWORK,UCMECB        PUT IT IN THE UCM
         OI    UCMATR,UCMUF        SET 2740 AS ACTIVE
         NI    UCMDEVC,ONES-UCMDEVB   PREPARE IS NOT IN PROGRESS
         OI    DCBOFLGS,OPENFL     SET DCB OPEN FOR 'LOPEN'
         MVI   DCBIFLGS,ZERO       ZERO IFLGS FOR 'LOPEN'
         NI    IOBINCAM,X7F        CLEAR SAD/ENABLE FAIL
         TM    IOBINCAM,IOBINUSE   IS IOB BUSY
         BO    ERRC                YES, SWITCH
         BAL   RCODE,FREELOCK      RELEASE CMS & LOCAL LOCKS
         OI    IOBINCAM,IOBINUSE   SET IOB AS BUSY
         LA    RMSG,IOBCPA         POINT TO CHANNEL PGM AREA
         MVC   ZERO(L8,RMSG),DISABLE   MOVE IN DISABLE CCW
         LA    RMSG,L8(RMSG)       POINT TO NEXT CCW SLOT
         TM    UCBTYP+L3,CU0103    IS CONTROL UNIT 2701 OR 2703
         BO    OPENF               YES, DO NOT ISSUE SAD
         SR    RLNTH,RLNTH         CLEAR REG
         IC    RLNTH,UCBTYP+L1     INSERT SAD CODE
         N     RLNTH,ANDMASK       CLEAR UNUSED BITS
         IC    RLNTH,SADCODE(RLNTH)   GET SAD COMMAND CODE
         STC   RLNTH,ZERO(RMSG)    STORE IN CCW
         MVC   L1(L7,RMSG),CCWCONST   MOVE IN REMAINDER OF CCW
         LA    RMSG,L8(RMSG)       POINT TO NEXT CCW SLOT
OPENF    EQU   *
         MVC   ZERO(L8,RMSG),ENABLE   MOVE IN ENABLE
         NI    DECSDECB,ONES-X7E   CLEAR ECB
         LA    RPARM,IOBSTDRD      POINT TO IOB FOR EXCP
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY6            IF NONE, SKIP SET UP     LD @ZA00515
         OI    PARMFTPT,IOSTART    INDICATE START I/O       LD @ZA00515
NORCVRY6 EQU   *                                            LD @ZA00515
         EXCP  (1)
         TIME  DEC
         L     RCODE,CVTPTR        POINT TO CVT
         SH    RCODE,HSIX          POINT TO CPU MODEL ID
         CLC   ZERO(L2,RCODE),MOD145   MODEL 145
         BE    IS145               YES
         CLC   ZERO(L2,RCODE),MOD155   MODEL 155
         BE    IS155               YES
         CLC   ZERO(L2,RCODE),MOD158   MODEL 158            LD @ZA00517
         BE    IS158               YES                      LD @ZA00517
         CLC   ZERO(L2,RCODE),MOD165   MODEL 165
         BE    IS165               YES
         CLC   ZERO(L2,RCODE),MOD168   MODEL 168            LD @ZA00517
         BE    IS168               YES                      LD @ZA00517
         CLC   ZERO(L2,RCODE),MOD3031  MODEL 3031              @G51CK02
         BE    IS3031              YES                         @G51CK02
         CLC   ZERO(L2,RCODE),MOD3032  MODEL 3032              @G51CK02
         BE    IS3032              YES                         @G51CK02
         CLC   ZERO(L2,RCODE),MOD3033  MODEL 3033              @G51CK02
         B     IS3033              YES OR ASSUME 3033          @G51CK02
  SPACE 1
*                                  NEW MODEL TESTS SHOULD BE INSERTED
*                                  HERE
  SPACE 2
IS145    EQU   *
         L     RCODE,TIME145       LOAD LOOP COUNT
         B     TIMELOOP            DO LOOP
IS155    EQU   *
IS158    EQU   *                                            LD @ZA00517
         L     RCODE,TIME155       LOAD LOOP COUNT
         B     TIMELOOP            DO LOOP
IS165    EQU   *
IS168    EQU   *                                            LD @ZA00517
         L     RCODE,TIME165       LOAD LOOP COUNT
         B     TIMELOOP            DO LOOP
IS3031   EQU   *                                               @G51CK02
         L     RCODE,TIME3031      LOAD LOOP COUNT             @G51CK02
         B     TIMELOOP            DO LOOP                     @G51CK02
IS3032   EQU   *                                               @G51CK02
         L     RCODE,TIME3032      LOAD LOOP COUNT             @G51CK02
         B     TIMELOOP            DO LOOP                     @G51CK02
IS3033   EQU   *                                               @G51CK02
         L     RCODE,TIME3033      LOAD LOOP COUNT             @G51CK02
         B     TIMELOOP            DO LOOP                     @G51CK02
  SPACE 2
TIMELOOP EQU   *
         TM    DECSDECB,X7E        I/O COMPLETED            LD @ZA00515
         BO    OPENK               YES, EXIT LOOP
         BCT   RCODE,TIMELOOP      LOOP 5 SECONDS
         B     OPENK               EXIT
  SPACE 2
OPENK    EQU   *
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY7            IF NONE, SKIP SET UP     LD @ZA00515
         NI    PARMFTPT,IOEND      INDICATE I/O WAS         LD @ZA00515*
                                   SUCCESSFUL               LD @ZA00515
NORCVRY7 EQU   *                                            LD @ZA00515
         BAL   RCODE,GETLOCK       OBTAIN LOCAL & CMS LOCKS
         NI    UCMSTS,ONES-UCMBF   THE 2740 IS NOT BUSY
         TM    DECSDECB,X7E        GOOD COMPLETION
         BNO   ERRC                NO, SWITCH
         NI    UCMDEVC,ONES-UCMDEVE   RESET I/O COMPLETE
         MVI   DECTYPE+L1,ONES     INDICATE BREAK
         NI    UCMSTS,ONES-UCMTA   OPEN HAS BEEN PERFORMED
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY8            IF NONE, SKIP SET UP     LD @ZA00515
         NI    PARMFTPT,OPENOFF    SAME IN PARMLIST         LD @ZA00515
NORCVRY8 EQU   *                                            LD @ZA00515
         B     OTHER1              CHECK FOR OTHER FUNCTIONS
OPENEND  EQU   *
         NI    UCMSTS,ONES-UCMTA   OPEN HAS BEEN PERFORMED
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY9            IF NONE, SKIP SET UP     LD @ZA00515
         NI    PARMFTPT,OPENOFF    SAME IN PARMLIST         LD @ZA00515
         DROP  RWORK                                        LD @ZA00515
NORCVRY9 EQU   *                                            LD @ZA00515
         B     RET                 RETURN
OTHER    EQU   *
         BAL   RCODE,GETLOCK       OBTAIN LOCAL AND CMS LOCKS
OTHER1   EQU   *
         TM    UCMDEVC,UCMDEVE     HAS AN I/O OPERATION JUST COMPLETED
         BNO   OUTP                NO, CHECK FOR OTHER FUNCTIONS
         NI    UCMSTS,ONES-UCMBF   THE 2740 IS NOT BUSY
         NI    UCMDEVC,ONES-UCMDEVE   TURN OFF I/O COMPLETE
         TM    DCBTIOT,TRMRESET    IOCMP ON RESET MESSAGE
         BO    ERRA                YES
         TM    UCMDEVC,UCMDEVB+UCMDEVG   IS IT I/O FROM A WRITE
         BZ    WRITE               YES, MIXED FALLS THROUGH
         BO    READ                CHECK OTHER FUNCTIONS
         TM    UCMDEVC,UCMDEVB     IS IT I/O FROM READ
         BO    READA               YES
READ     EQU   *
         NI    UCMDEVC,ONES-UCMDEVG-UCMDEVB  RESET PREPARE AND HALTIO
         B     OUTP                OUTPUT AFTER HALTIO
READA    EQU   *
         NI    UCMDEVC,ONES-UCMDEVB   RESET PREPARE IN PROGRESS
         TM    DECSDECB,X7E        GOOD COMPLETION
         BNO   ERR                 NO, SWITCH
         NI    DCBTIOT,ONES-BIDHIT-RETRIED    RESET DCB FLAGS
         TR    MESSAGE,IECTRC40    TRANSLATE INPUT TO EBCDIC
         MVI   MESSAGE+L'MESSAGE-L1,EOB   FORCE EOB
         LA    RPARM,MESSAGE       POINT TO MESSGAE
         LR    RZERO,RPARM         AGAIN
READB    EQU   *
         CLI   ZERO(RPARM),EOT     EOT FOUND
         BE    OUTP                YES
         CLI   ZERO(RPARM),BSP     BACKSPACE FOUND
         BNE   READC               NO, CHECK FOR EOB
         CLI   L1(RPARM),RTRN      YES, IS IT FOR A CANCEL FUNCTION
         BE    OUTP                YES, CHECK FOR OUTPUT
         LR    RLINK,RPARM         NO, BACKSPACE MESSAGE
         BCTR  RLINK,ZERO
         CR    RLINK,RZERO         START OF MESSAGE AREA
         BL    OUTP                YES, CANCEL MESSAGE
         SR    RPARM,RZERO         CALCULATE THE
         LNR   RPARM,RPARM         REMAINING BUFFER LENGTH
         LA    RPARM,PARTLNTH(RPARM)
         EX    RPARM,BKSPCMVC      BACKSPACE 2 SPACES
         LR    RPARM,RLINK         RESET THE SCAN POINTER
         B     READB               LOOK AT NEXT CHARACTER
READC    EQU   *
         CLI   ZERO(RPARM),EOB     ARE WE AT THE END OF MSG
         BE    READF               YES
         CLI   ZERO(RPARM),RTRN    IS THE CHAR CARRIAGE RETURN
         BNE   READE               NO
         MVI   ZERO(RPARM),BLANK   CHANGE IT TO BLANK
READE    EQU   *
         LA    RPARM,L1(RPARM)     BUMP TO NEXT CHARACTER
         B     READB               LOOK AT THE NEXT CHARACTER
READF    EQU   *
         MVI   ZERO(RPARM),BLANK   CHANGE IT TO BLANK
         SR    RPARM,RZERO         COMPUTE LENGTH
         LA    RPARM,L4(RPARM)     OF MESSAGE
         STH   RPARM,MESSLNTH      PREPARE THE MSG FOR
         SR    RZERO,RZERO         CLEAR REG
         IC    RZERO,UCMID         TELL SVC 34 ITS FROM ME
         LA    RPARM,MSG           BASE PARAMETER LIST          YM02593
         BAL   RCODE,FREELOCK      RELEASE CMS & LOCAL LOCKS
         SVC   34                  GIVE COMMAND TO SYSTEM
         B     OUTPB               CONTINUE TERMINAL OPERATIONS
WRITE    EQU   *
         L     RPARM,UCMWLAST      POINT TO QUEUE ENTRY WRITTEN
         USING CQEWQE,RPARM
         TM    DECSDECB,X7E        GOOD COMPLETION
         BNO   ERRB                NO, SWITCH
         NI    DCBTIOT,ONES-RETRIED-WREOT   RESET DCB FLAGS
         CLI   DECTYPE+L1,WRRESET   COMPLETE ON WR EOT
         BNE   WRITA               NO, SET WQE USED
         MVI   DECTYPE+L1,ONES     SET BREAK
         B     OUTPB               CONTINUE OPERATIONS
WRITA    EQU   *
         TM    CQEFLAG,CQEMAJOR    WAS WRITE PERFORMED ON MLWTO
         BO    WRITD               YES
WRITB    EQU   *
         OI    CQEFLAG,CQEAVAIL    DEQUEUE FROM THIS CONSOLE
         NI    CQEFLAG,ONES-CQEENTR   NO LONGER VALID
         OI    UCMSTS,UCMTB        DEQUEUE WORK TO BE DONE
WRITC    EQU   *
         CLI   DECRESPN+1,SPACE    OPERATOR ATTENTION
         BNE   OUTPB               NO, WRITE ANOTHER
         OI    DCBTIOT,BIDHIT      OPERATOR WANTS IN
         B     PREP                SET UP FOR READ
WRITD    EQU   *
         NC    UCMMLAST(L4),UCMMLAST   MINOR JUST WRITTEN
         BNZ   WRITG               YES
         L     RWQE,CQEWQE         MAJOR POINTER
         TM    WMJMLTYP,WMJMLTYD   END INDICATOR IN MAJOR
         BO    WRITJ               YES, SET UP FOR PURGE
         TM    WMJMMLW,WMJMMLWF    MINOR QUEUEING IN PROCESS
         BO    WRITK               YES, WAIT FOR IT
WRITF    EQU   *
         L     RWQE,CQEWQE         MAJOR POINTER                YA02445
         TM    WMJMMLW,WMJMMLWH    ANY MINOR TEXT EXISTS
         BO    WRITK               NO
         NI    CQEFLAG,ONES-CQEATTOP   STARTING NEW MINOR CHAIN
         MVC   UCMMLAST(L4),WMJMMIN   NEXT LINE TO BE WRITTEN
         B     WRITC               CHECK ATTN
WRITG    EQU   *
         L     RWQE,UCMMLAST       POINT TO MINOR WRITTEN
         SR    RLNTH,RLNTH         CLEAR REG
         IC    RLNTH,WMNMUC1       GET USE COUNT
         BCTR  RLNTH,RZERO         REDUCE BY ONE
         STC   RLNTH,WMNMUC1       STORE USE COUNT
         LTR   RLNTH,RLNTH         USE COUNT = 0
         BNZ   WRITH               NO
         L     RLNTH,CQEWQE        MAJOR POINTER
         OI    L4(RLNTH),WMJMMLWG   TELL DEQ TO CHECK CHAIN
         OI    UCMSTS,UCMTB        TELL DEQ TO CHECK MY QUEUE
WRITH    EQU   *
         TM    WMNMLT1,WMNMLT1D    END INDICATOR IN THIS LINE
         BO    WRITJ               YES, PURGE
WRITI    EQU   *
         NC    WMNMNX1(L3),WMNMNX1   NEXT LINE EXIST
         BZ    WRITK               NO
         L     RLNTH,WMNMUC1       POINT TO NEXT MINOR
         LA    RLNTH,ZERO(RLNTH)   CLEAR OUT USE COUNT
         NC    L5(L2,RLNTH),L5(RLNTH)   NEXT LINE TYPE FILLED IN
         BZ    WRITK               NO, WAIT FOR IT
         MVC   UCMMLAST+L1(L3),WMNMNX1   NEXT LINE TO WRITE
         B     WRITC               CHECK ATTN
WRITJ    EQU   *
         NI    UCMSTS,ONES-UCMTC   NO LONGER WORKING ON MLWTO
         B     WRITB               COMPLETE PURGE
WRITK    EQU   *
         NI    UCMSTS,ONES-UCMPF   NO MORE OUTPUT UNTIL WE RECEIVE
*                                  ANOTHER MLWTO LINE
         OI    UCMSDS5,UCMSDS5A    WAITING ON AN MLWTO
         B     PREP                PUT UP READ
WRITL    EQU   *
         L     RPARM,UCMWLAST      CURRENT OUTQ ENTRY
         NI    UCMSDS5,ONES-UCMSDS5A   TURN OFF WAITING BIT
         NC    UCMMLAST(L4),UCMMLAST   WAS LAST WRITE FOR MINOR
         BZ    WRITM               NO
         TM    CQEFLAG,CQEATTOP    HAS MINOR CHAIN BEEN RORDERED
         BO    WRITF               YES, START WITH FIRST MINOR
         L     RWQE,UCMMLAST       BASE WQE
         B     WRITI               GET NEW LINE PTR
WRITM    EQU   *
         L     RWQE,CQEWQE         CURRENT WQE
         B     WRITF               GET NEXT LINE
OUTP     EQU   *
         TM    UCMSTS,UCMPF        IS THERE OUTPUT PENDING
         BNO   PREP                NO, SET UP FOR READ
         TM    DCBTIOT,PURGE       IS PURGE IN PROCESS
         BNO   OUTPA               NO, CONTINUE
         CLI   DECSDECB,X48        IS PURGE COMPLETE
         BNE   RET                 NO, EXIT
OUTPA    EQU   *
         TM    UCMDEVC,UCMDEVB     YES, IS PREPARE IN PROGRESS
         BO    HALT                YES, HALT PREPARE
OUTPB    EQU   *
         TM    UCMSDS5,UCMSDS5A    WERE WE WAITING ON AN MLWTO
         BO    WRITL               YES, CONTINUE WITH WRITE
         TM    UCMSTS,UCMTC        WORKING ON MLWTO
         BO    OUTPQ               YES, WRITE LINE
         L     RPARM,UCMOUTQ       IS THERE ANYTHING
         LTR   RPARM,RPARM         IN THE OUTPUT QUEUE
         BZ    PREP                NO, SET UP FOR READ
OUTPC    EQU   *
         TM    CQEFLAG,CQEENTR     VALID ENTRY
         BO    OUTPG               YES, SET UP FOR WRITE
OUTPD    EQU   *
         TM    CQEFLAG,CQEEOB      POINTER TO NEXT BLOCK
         BO    OUTPE               YES
         BZ    OUTPF               THIS IS A NULL ENTRY
         NI    UCMSTS,ONES-UCMPF   TURN OFF OUTPUT PENDING
         B     PREP                SET UP FOR READ
OUTPE    EQU   *
         L     RPARM,CQEWQE        POINT TO NEXT BLOCK
         LA    RPARM,ZERO(RPARM)   CLEAR OUT FLAGS
         B     OUTPC               TRY THE NEXT ENTRY
OUTPF    EQU   *
         LA    RPARM,CQEWQE+L4     POINT TO NEXT ENTRY
         B     OUTPC               CHECK IT
OUTPG    EQU   *
         L     RWQE,CQEWQE         GET WQE
         TM    CQEFLAG,CQEMLQHC    IS IT QUEUED FOR HARDCOPY
         BNO   OUTPH               NO
         TM    WQEXA,WQEPURGE      PURGE BIT OFF
         BNO   OUTPI               YES, PUT IT OUT
         TM    WQEAVAIL,WQEBUFC    NO, BUT IS IT READY FOR HARDCOPY
         BO    OUTPI               YES, PUT IT OUT
         B     OUTPP               NO, DEQUEUE IT
OUTPH    EQU   *
         TM    WQEXA,WQEPURGE      IS THIS MSG TO BE PURGED
         BO    OUTPP               YES - DON'T WRITE IT
         OI    WQEAVAIL,WQEBUFC    SHOW MSG READY FOR HARDCOPY
OUTPI    EQU   *
         ST    RPARM,TEMP2         SAVE THAT ENTRY POINTER FOR MSG
         TM    CQEFLAG,CQEMAJOR    IS THIS ENTRY AN MLWTO
         BO    OUTPQ               YES, GO WRITE IT
         L     RLNTH,WQENBR        PICK UP MSG LENTH
         BCTR  RLNTH,ZERO          REDUCE FOR EXECUTE
         TM    CQEFLAG,CQEMLQHC    REQUEST FOR HARDCOPY FORMAT
         BNO   OUTPJ               NO
         LA    RLNTH,L23(RLNTH)    BUMP FOR HARDCOPY TEXT
         LA    RPARM,WQERR         POINT TO HARDCOPY TEXT
         B     OUTPR               MOVE TEXT
OUTPJ    EQU   *
         TM    UCMDISP2,UCMDISPI   HASP TIMESTAMP AND JOBNAME
         BO    HASPBOTH            YES
         TM    UCMDISP2,UCMDISPJ   HASP JOBNAME ONLY
         BO    HASPONE             YES
         LA    RPARM,WQETXT        POINT TO TEXT
         B     OUTPR               MOVE IT
HASPBOTH EQU   *
         LA    RLNTH,L18(RLNTH)    BUMP FOR BOTH
         LA    RPARM,WQETS         POINT TO TEXT
         B     OUTPR               MOVE IT
HASPONE  EQU   *
         LA    RLNTH,L9(RLNTH)     BUMP FOR NAME
         LA    RPARM,WQEJOBNM      POINT TO TEXT
         B     OUTPR               MOVE IT
OUTPK    EQU   *
         LA    RLNTH,ZERO(RLNTH)
         LA    RPARM,L127          MAX CHARS 127
         CR    RPARM,RLNTH         IF MSG LESS THAN 127
         BH    OUTPL               BRANCH
         LR    RLNTH,RPARM         MSG GREATER THAN 127
OUTPL    EQU   *
         LA    RPARM,MESSAGE(RLNTH)   SET RETURN EOB
         MVC   ZERO(L'RETRNEOB,RPARM),RETRNEOB
         TM    DECTYPE+L1,RST      IS BREAK NECESSARY
         BO    OUTPM               CHECK UCB
         MVI   DECTYPE+L1,WRCONT   NO, WRITE CONTINUE
         B     OUTPO
OUTPM    EQU   *
         CLI   UCBTYP,T2740B       DO WE NEED BREAK
         BE    OUTPN               YES, SET UP WRITE BREAK
         MVI   DECTYPE+L1,WRINIT   NO, SET UP WR INITIAL
         B     OUTPO
OUTPN    EQU   *
         MVI   DECTYPE+L1,WRBREAK   WRITE BREAK
OUTPO    EQU   *
         BAL   RCODE,FREELOCK      RELEASE CMS AND LOCAL LOCKS
         LA    ROPEN,SAVEAREA      REG SAVE AREA
         LA    RLNTH,DECB          POINT TO DECB            LD @ZA00515
         WRITE (RLNTH),T,MF=E                               LD @ZA00515
         LR    RLNTH,RCODE
         BAL   RCODE,GETLOCK       OBTAIN LOCAL & CMS LOCKS
         LTR   RLNTH,RLNTH         TEST R/W RETURN CODE
         BNZ   ERRC                BAD CODE, SWITCH
         OI    UCMSTS,UCMBF        THE 2740 IS BUSY
         TM    DCBTIOT,TRMRESET+WREOT   AVOID STORING WQE ADDR
         BNZ   RET                 YES, DIDN'T USE WQE
         L     RPARM,TEMP2         GET SAVED WQE POINTER
         ST    RPARM,UCMWLAST      SAVE CURRENT MSG  POINTER ENTRY
         B     RET                 RETURN
OUTPP    EQU   *
         OI    UCMSTS,UCMTB        DEQUEUE REQUIRED
         NI    CQEFLAG,ONES-CQEENTR   NO LONGER VALID
         OI    CQEFLAG,CQEAVAIL    WQE IS TO BE DEQUEUED
         B     OUTPD               CHECK FOR END OF Q BLOCK
OUTPQ    EQU   *
         SR    RLNTH,RLNTH         CLEAR REG
         TM    UCMSTS,UCMTC        WORKING ON MLWTO
         BO    OUTPT               YES, OLD WRITE
         XC    UCMMLAST(L4),UCMMLAST   ZERO LAST MINOR POINTER
         OI    UCMSTS,UCMTC        NOW WORKING ON MLWTO
         IC    RLNTH,WMJMTXTL+L1   GET TEXT LENGTH
         BCTR  RLNTH,RZERO         REDUCE FOR EXECUTE
         TM    CQEFLAG,CQEMLQHC    MLWTO FOR HARDCOPY
         BO    OUTPS               YES, INCLUDE HARDCOPY TEXT
         TM    UCMDISP2,UCMDISPI   HASP TS AND JN
         BO    HASMBOTH            YES
         TM    UCMDISP2,UCMDISPJ   HASP JN ONLY
         BO    HASMONE             YES
         LA    RPARM,WMJMTXT       POINT TO TEXT
         B     OUTPR               MOVEIT
HASMBOTH EQU   *
         LA    RLNTH,L18(RLNTH)    BUMP FOR BOTH
         LA    RPARM,WMJMTS        POINT TO TEXT
         B     OUTPR               MOVE IT
HASMONE  EQU   *
         LA    RLNTH,L9(RLNTH)     BUMP FOR NAME
         LA    RPARM,WMJMJBNM      POINT TO TEXT
OUTPR    EQU   *
         EX    RLNTH,MOVETXT       MOVE TEXT TO MESSAGE AREA
         LA    RLNTH,L1(RLNTH)     RESTORE LENGTH
         TR    MESSAGE,MODTABLE    TRANSLATE EBCDIC TO 2740
         B     OUTPK               COMPLETE SET UP
OUTPS    EQU   *
         LA    RLNTH,L23(RLNTH)    ADD TO LENGTH FOR HCTXT
         LA    RPARM,WMJMRR        POINT TO TEXT
         B     OUTPR               MOVE IT
OUTPT    EQU   *
         L     RPARM,UCMWLAST      CURRENT OUTQ ENTRY
         L     RWQE,UCMMLAST       POINT MINOR HALF
         IC    RLNTH,WMNMTL1       GET LENGTH
         LTR   RLNTH,RLNTH         LENGTH ZERO
         BZ    WRITG               YES, HANDLE AS LAST OR END
         TM    CQEFLAG,CQEMLQHC    MLWTO FOR HARDCOPY
         BO    OUTPU               YES
         BCTR  RLNTH,RZERO         REDUCE FOR EXECUTE
         LA    RPARM,WMNMTXT1      POINT TO TEXT
         B     OUTPR               MOVE IT
OUTPU    EQU   *
         LA    RPARM,WMNMHCT1      TEXT POINTER
         LA    RLNTH,L3(RLNTH)     ADD TO TEXT LENGTH FOR HCTXT
         B     OUTPR               MOVE IT
         DROP  RPARM
CLOSE    EQU   *
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NORCVRY0            IF NONE, SKIP SET UP     LD @ZA00515
         USING PARMLIST,RWORK      PARMLIST ADDRESSABILITY  LD @ZA00515
         OI    PARMFTPT,CLOSEREQ   THIS IS A CLOSE REQUEST  LD @ZA00515
         DROP  RWORK                                        LD @ZA00515
NORCVRY0 EQU   *                                            LD @ZA00515
         TM    DCBTIOT,PURGE       IS PURGE IN PROCESS
         BNO   CLOSA               NO, CONTINUE
         CLI   DECSDECB,X48        IS PURGE COMPLETE
         BNE   RET                 NO, EXIT
CLOSA    EQU   *
         TM    UCMDEVC,UCMDEVB     PREPARE IN PROGRESS
         BO    HALT1               YES                        LD YM7708
         TM    UCBFL1,UCBPOST      OPERATION IN PROGRESS
         BO    RET                 YES, INTERRUPT EXPECTED
         TM    IOBFLAG1,IOBERRTN   ERP IN CONTROL
         BO    RET                 YES, ALLOW TO FINISH
         L     RPARM,UCMOUTQ       ARE THERE ANY MSGS OR REPLIES
         LTR   RPARM,RPARM         OUTSTANDING
         BZ    CLOSD               NO, CLOSE THE 2740
CLOSB    EQU   *
         USING CQEWQE,RPARM
         TM    CQEFLAG,CQEENTR     VALID ENTRY
         BNO   CLOSB1              NO, CHECK FURTHER
         OI    CQEFLAG,CQEAVAIL    DEQUEUE FROM THIS CONSOLE
         NI    CQEFLAG,ONES-CQEENTR   NO LONGER VALID
         OI    UCMSTS,UCMTB        DEQUEUE WORK TO BE DONE
CLOSB1   EQU   *
         TM    CQEFLAG,CQEEOB      POINTER TO NEXT BLOCK
         BM    CLOSD               NO, CLOSE THE 2740
         BO    CLOSC               YES
         LA    RPARM,CQEWQE+L4     BUMP TO NEXT ENTRY
         B     CLOSB               CHECK IT
CLOSC    EQU   *
         L     RPARM,CQEWQE        POINT TO NEXT BLOCK
         B     CLOSB               TRY THE NEXT ENTRY
         DROP  RPARM
CLOSD    EQU   *
         NI    UCMATR,ONES-UCMUF   THIS 2740 IS INACTIVE
         SR    RLNTH,RLNTH         CLEAR REG                    YM05650
         IC    RLNTH,UCMID         GET MY CONSOLE ID            YM05650
         BCTR  RLNTH,ZERO          REDUCE BY ONE                YM05650
         SLL   RLNTH,MULT4         MULTIPLY BY EIL ENTRY SIZE   YM05650
         L     RPARM,UCMLSTP       POINT TO EIL
         USING UCMEIL,RPARM
         LA    RPARM,UCMIECBA      POINT TO FIRST EIL ENTRY     YM05650
         DROP  RPARM
         AR    RPARM,RLNTH         POINT TO CORRECT ENTRY       YM05650
         IC    RZERO,ZERO(RPARM)   SAVE FLAGS
         ST    RUCME,ZERO(RPARM)   RESET ENTRY
         STC   RZERO,ZERO(RPARM)   RESTORE FLAGS
CLOSF    EQU   *
         TM    UCBSTAT,UCBCHGS     DEVICE GOING TO OFFLINE
         BNO   CLOSH               NO
         NIL   UCBSTAT,X'00',REF=UCBOB,WREGS=(RZERO,RLINK,RCODE)
         B     CLOSI               CONTINUE
CLOSH    EQU   *
         NIL   UCBSTAT,X'80',REF=UCBOB,WREGS=(RZERO,RLINK,RCODE)
CLOSI    EQU   *
         ST    RCXSATCB,TEMP1                                   YM04095
         DROP  RCXSATCB                                         YM04095
         L     RCXSATCB,UCMPXA     POINT TO TCB                 YM04095
         USING TCB,RCXSATCB                                     YM04095
         LA    RDEB,CBDEB          POINT TO OUR DEB             YM02593
         L     RPARM,TCBDEB        POINT TO DEB OFF TCB QUEUE   YM04095
         LA    RPARM,0(RPARM)      CLEAR HI-ORDER BYTE         @ZA17703
         CR    RPARM,RDEB          IS OUR DEB FIRST             YM04095
         BNE   CLOSJ               NO                           YM04095
         MVC   TCBDEB(L4),DEBDEBAD   MAKE SECOND DEB FIRST DEB  YM04095
         B     CLOSK               CONTINUE                     YM04095
CLOSJ    EQU   *                                                YM04095
         DROP  RDEB                                             YM04095
         USING DEBBASIC,RPARM                                   YM04095
         LR    RCXSATCB,RPARM      SAVE THIS DEB POINTER        YM04095
         ICM   RPARM,L7,DEBDEBB    POINT TO NEXT DEB           @ZA04651
         CR    RPARM,RDEB          IS THIS OUR DEB              YM04095
         BNE   CLOSJ               NO, TRY THE NEXT DEB         YM04095
         MVC   L5(L3,RCXSATCB),DEBDEBAD+L1   RECHAIN DEB QUEUE  YM04095
CLOSK    EQU   *                                                YM04095
         DROP  RPARM                                            YM04095
         USING DEBBASIC,RDEB                                    YM04095
         DROP  RCXSATCB                                         YM04095
         USING CXSA,RCXSATCB                                    YM04095
         L     RCXSATCB,TEMP1      BASE CXSA
         NI    UCMSTS,ONES-UCMCF-UCMBF   CLOSE PERFORMED, BUSY OFF
         SR    RLINK,RLINK         CLEAR DCB AND DECB ADDRESSES
         ST    RLINK,UCMDCB        IN UCM ENTRY
         ST    RLINK,UCMECB
         BAL   RCODE,FREELOCK      RELEASE CMS & LOCAL LOCKS
DELETEM0 EQU   *                                            LD @ZA00515
         DELETE EPLOC=M0           DELETE IGG019MA
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NOESTAE0            IF NONE, SKIP SET UP     LD @ZA00515
         USING PARMLIST,RWORK      PARMLIST ADDRESSABILITY  LD @ZA00515
         NI    PARMFTPT,LOADM0OF   IGG019M0 DELETED         LD @ZA00515
NOESTAE0 EQU   *                                            LD @ZA00515
DELETEMR EQU   *                                            LD @ZA00515
         DELETE EPLOC=MR           DELETE 1GG019MB
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NOESTAE1            IF NONE, SKIP SET UP     LD @ZA00515
         NI    PARMFTPT,LOADMROF   IGG019MR DELETED         LD @ZA00515
NOESTAE1 EQU   *                                            LD @ZA00515
DELETEMB EQU   *                                            LD @ZA00515
         DELETE EPLOC=MB           DELETE IGG019M0
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NOESTAE2            IF NONE, SKIP SET UP     LD @ZA00515
         NI    PARMFTPT,LOADMBOF   IGG019MB DELETED         LD @ZA00515
NOESTAE2 EQU   *                                            LD @ZA00515
DELETEMA EQU   *                                            LD @ZA00515
         DELETE EPLOC=MA           DELETE IGG019MR
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NOESTAE3            IF NONE, SKIP SET UP     LD @ZA00515
         NI    PARMFTPT,LOADMAOF   IGG019MA DELETED         LD @ZA00515
NOESTAE3 EQU   *                                            LD @ZA00515
FREEMAIN EQU   *                                            LD @ZA00515
         FREEMAIN R,LV=CBSIZ,A=(RDCB),SP=SUBPOOL   FREE BUFFER
         ICM   RWORK,L15,CSANPTR   GET PTR TO RECOVERY AREA LD @ZA00515
         BZ    NOESTAE4            IF NONE, SKIP SET UP     LD @ZA00515
         NI    PARMFTPT,GTMAINOF   FREEMAIN DONE            LD @ZA00515
         DROP  RWORK                                        LD @ZA00515
NOESTAE4 EQU   *                                            LD @ZA00515
         B     RETA                LEAVE
PREP     EQU   *
         MVI   MESSAGE,X01         BLANK MESSAGE AREA PRIOR
         MVC   MESSAGE+1(L139),MESSAGE   TO READ
         CLI   UCBTYP,T2740B       DO WE HAVE BREAK
         BNE   PREPA               NO, ISSUE RD INITIAL
         TM    DECTYPE+L1,RST      IS BREAK NECESSARY
         BO    PREPB               YES
         TM    DCBTIOT,BIDHIT      OPERATOR WANTS IN
         BO    PREPA               YES, DON'T USE BREAK
         MVI   DECTYPE+L1,WRRESET   WRITE EOT OP TYPE
         OI    DCBTIOT,WREOT       WE ARE WRITING EOT
         B     OUTPO               GO TO ISSUE WRITE
PREPA    EQU   *
         MVI   DECTYPE+L1,RDINIT   READ INITIAL
         B     PREPC
PREPB    EQU   *
         MVI   DECTYPE+L1,RDBREAK   READ INITIAL BREAK
PREPC    EQU   *
         BAL   RCODE,FREELOCK      RELEASE CMS & LOCAL LOCKS
         LA    ROPEN,SAVEAREA      REG SAVE AREA
         LA    RLNTH,DECB          POINT TO DECB            LD @ZA00515
         READ  (RLNTH),T,MF=E                               LD @ZA00515
         LR    RLNTH,RCODE
         BAL   RCODE,GETLOCK       OBTAIN LOCAL & CMS LOCKS
         LTR   RLNTH,RLNTH         TEST R/W RETURN CODE
         BNZ   ERRC                BAD CODE, SWITCH
         OI    UCMSTS,UCMBF        THE 2740 IS BUSY
         OI    UCMDEVC,UCMDEVB     PREPARE IS IN PROGRESS
         TM    DCBTIOT,BIDHIT      OPERATOR ATTN
         BNO   RET                 NO
         MVI   DECRESPN,ZERO       YES, BLOCK WRITE
         B     RET                 LEAVE
HALT1    EQU   *                                              LD YM7708
         BAL   RCODE,GETLOCK       OBTAIN LOCAL AND CMS LOCKS LD YM7708
HALT     EQU   *
         CLI   UCBID,ONES          VALID UCB
         BNE   ERRC                NO, SWITCH
         CLI   DECRESPN,ZERO       IS DATA BEING TRANSFERRED
         BE    RET                 YES, RETURN
         OI    DCBTIOT,PURGE       SHOW PURGE IN PROCESS
         NI    UCMDEVC,ONES-UCMDEVB   TURN OFF PREPARE
         OI    UCMSTS,UCMBF        DEVICE IS BUSY
         OI    UCMDEVC,UCMDEVG     INDICATE HALT I/O IN PROCESS
         NI    IOBINCAM,ONES-IOBINUSE   IOB BUSY BIT OFF
         NI    IOBFLAG1,ONES-IOBERRTN-IOBIOERR   TURN OFF ERP FLAGS
         MVI   DECTYPE+L1,ONES     INDICATE BREAK
         BAL   RCODE,FREELOCK      RELEASE CMS & LOCAL LOCKS
         LA    RPARM,CBPURGE       PURGE PARM LIST
         LA    RDEB,CBDEB          POINT TO DEB
         ST    RDEB,ZERO(RPARM)    DEB ADDRESS TO PARM LIST
         MVI   ZERO(RPARM),XE0     PURGE OPTIONS
         L     RLINK,UCMPXA        PICK UP TCB ADDRESS
         ST    RLINK,L4(RPARM)     AND PUT IT IN PARM LIST
         LA    RLNTH,IOBSTDRD      POINT TO IOB                 YM05650
         IC    RZERO,DEBUSRPG      SAVE EXLIST                  YM05695
         ST    RLNTH,DEBUSRPG      PUT IT IN PURGE SLOT         YM05650
         STC   RZERO,DEBUSRPG      SAVE EXLIST                  YM05695
         MVC   IOBRSTRB(L3),FOXFOX   SET AS LAST IOB            YM05650
         LA    RLNTH,DEBUSRPG      PURGE IOB CHAIN POINTER
         ST    RLNTH,L8(RPARM)     STORE IT
         MVI   L8(RPARM),L1        SET FOR ONE I/O TO PURGE     YM05650
         SVC   16                  PURGE SVC
         NI    IOBINCAM,ONES-IOBINUSE   IOB BUSY BIT OFF
         NI    IOBFLAG1,ONES-IOBERRTN-IOBIOERR   TURN OFF ERP FLAGS
         XC    IOBRSTRB(L3),IOBRSTRB   RESTORE IOBRSTR
         MVI   DECTYPE+L1,ONES     INDICATE BREAK
         NI    DCBTIOT,ONES-PURGE   SHOW PURGE COMPLETE
         B     RETA                LEAVE
RET      EQU   *
         BAL   RCODE,FREELOCK      RELEASE CMS & LOCAL LOCKS
RETA     EQU   *
         L     RLINK,CSAXA         RESTORE RETURN ADDRESS
RETURN   EQU   *
         ICM   RWORK1,L15,CSANPTR  GET RECOVERY AREA        LD @ZA00515
         BZ    NOESTAE5            NOT THERE, BYPASS        LD @ZA00515
         USING PARMLIST,RWORK1     PARMLIST ADDRESSABILITY  LD @ZA00515
         MVC   PARMRTAD(L8),CSANAME RESTORE RETRY & REGSAVE LD @ZA00515
NOESTAE5 EQU   *                                            LD @ZA00515
         NI    PARMFTPT,CLOSEOFF   INDICATE CLOSE DONE      LD @ZA00515
         DROP  RWORK1
         USING UCBOB,RUCB          RE-BASE UCB              LD @ZA00515
*                                                                     *
*        ADDRESS OF END-OF-EXTEND APPENDAGE RTN FOR AVR               *
*                                                                     *
DEBEOEAP EQU   *                                            LD @ZA00515
*                                                                     *
*        ADDRESS OF START I/O APPENDAGE RTN FOR AVT                   *
*                                                                     *
DEBSIOAP EQU   *                                            LD @ZA00515
*                                                                     *
*        ADDRESS OF PCI APPENDAGE RTN FOR AVT                         *
*                                                                     *
DEBPCIAP EQU   *                                            LD @ZA00515
         BR    RLINK               VIA THE ADDRESS IN REG 14
GETLOCK  EQU   *
         STM   RUCME,RLINK,CSAXC   SAVE REGS USED BY SETLOCK
         TM    CSAXA,LOCALON       DO WE HAVE LOCAL LOCK    LD @ZA00515
         BNZ   TESTCMS             YES, DONT GET IT         LD @ZA00515
GETLOCL  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X
               RELATED=(WQE,IEEC2740(FREELOCL))
         OI    CSAXA,LOCALON       SET LOCAL LOCK FLAG ON   LD @ZA00515
TESTCMS  EQU   *                                            LD @ZA00515
         TM    CSAXA,CMSON         DO EW HAVE CMS LOCK      LD @ZA00515
         BNZ   TESTFRR             YES, DONT GET IT         LD @ZA00515
GETCMS   SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                          X
               RELATED=(UCM,IEEC2740(FREECMS))
         OI    CSAXA,CMSON         SET CMS LOCK FLAG ON     LD @ZA00515
TESTFRR  EQU   *                                            LD @ZA00515
         TM    CSAXA,FRRON         DO EW HAVE FRR           LD @ZA00515
         BNZ   RESTORE1            YES, DONT GET IT         LD @ZA00515
         L     RFRRADD,UCMFRRAD    GET ADDR OF COMM FRR RTN LD @ZA00515
         USING PSA,RZERO           BASE THE PSA (ADDR=0)    LD @ZA00515
GETFRR   SETFRR A,FRRAD=(14),PARMAD=(13),WRKREGS=(12,13),              *
               RELATED=(CMS-LOCK,IEEC2740(FREEFRR))         LD @ZA00515
         ST    RPARMADD,CSADCBP    SAVE FRR PARMLIST PTR    LD @ZA00515
         USING PARMLIST,RPARMADD   PARMLIST ADDRESSABILITY  LD @ZA00515
         ICM   RWORK3,L15,CSANPTR  GET ESTAE PARMLIST ADD   LD @ZA00515
         BZ    NOESTAE6            NO THERE, BYPASS         LD @ZA00515
         MVC   PARMLIST(PARMSIZE),ZERO(RWORK3) COPY ESTAE PARMLIST TO  *
                                              FRR PARMLIST  LD @ZA00515
NOESTAE6 EQU   *                                            LD @ZA00515
         MVC   PARMID,SVC72ID      MOVE ID IN FOR RECOVERY  LD @ZA00515
         DROP  RPARMADD                                        @ZA14029
         OI    CSAXA,FRRON         SET FRR FLAD ON          LD @ZA00515
RESTORE1 EQU   *                                            LD @ZA00515
         LM    RUCME,RLINK,CSAXC   RESTORE REGS AFTER SETLOCK
         BR    RCODE               RETURN TO CALLER
FREELOCK EQU   *
         STM   RUCME,RLINK,CSAXC   SAVE REGS USED BY SETLOCK
         TM    CSAXA,FRRON         DO WQ HAVE FRR           LD @ZA00515
         BZ    CHECKCMS            NO, DONT FREE IT         LD @ZA00515
         USING PSA,RZERO           BASE THE PSA (ADDR=0)    LD @ZA00515
FREEFRR  SETFRR D,WRKREGS=(12,13),                                     *
               RELATED=(CMS-LOCK,IEEC2740(GETFRR))          LD @ZA00515
         XC    CSADCBP,CSADCBP     ZERO PTR                 LD @ZA00515
         NI    CSAXA,FRROFF        SET FRR FLAG OFF         LD @ZA00515
CHECKCMS EQU   *                                            LD @ZA00515
         TM    CSAXA,CMSON         DO WE HAVE CMS LOCK      LD @ZA00515
         BZ    CHECKLCL            NO, DONT FREE IT         LD @ZA00515
FREECMS  SETLOCK RELEASE,TYPE=CMS,                                     X
               RELATED=(UCM,IEEC2740(GETCMS))
         NI    CSAXA,CMSOFF        SET CMS FLAG OFF         LD @ZA00515
CHECKLCL EQU   *                                            LD @ZA00515
         TM    CSAXA,LOCALON       DO WE HAVE LOCAL LOCK    LD @ZA00515
         BZ    RESTORE2            NO, RETURN TO CALLER     LD @ZA00515
FREELOCL SETLOCK RELEASE,TYPE=LOCAL,                                   X
               RELATED=(WQE,IEEC2740(GETLOCL))
         NI    CSAXA,LOCALOFF      SET LOCAL LOCK FLAG OFF  LD @ZA00515
RESTORE2 EQU   *                                            LD @ZA00515
         LM    RUCME,RLINK,CSAXC   RESTORE REGS AFTER SETLOCK
         BR    RCODE               RETURN TO CALLER
ERR      EQU     *
         CLI   UCBTYP,T2740B       DO WE HAVE BREAK
         BNE   ERRC                NO, SWITCH
         TM    DECSENS0,TIMEOUT    READ TIMEOUT
         BNO   ERRB                NO, CHECK RETRY
         MVC   MESSAGE(L34),TOERMSG   MOVE IN TIMEOUT MESSAGE
         OI    DCBTIOT,TRMRESET
         B     OUTPN               GO TO WRITE IT
ERRA     EQU   *
         NI    DCBTIOT,ONES-TRMRESET   AFTER IO COMPLETE ON WRITE
         TM    DECSDECB,X7E        GOOD COMPLETION
         BNO   ERRC                NO, SWITCH
         B     OUTP
ERRB     EQU   *
         CLI   UCBTYP,T2740B       DO WE HAVE BREAK
         BNE   ERRC                NO, SWITCH
         TM    DECSENS0,RETRYMSK   SHOULD WE RETRY AFTER
         BNZ   ERRC                THIS ERROR
         TM    DCBTIOT,RETRIED     HAVE WE RETRIED
         BO    ERRC                YES, SWITCH
         MVI   DECTYPE+L1,ONES     NO, SET BREAK
         OI    DCBTIOT,RETRIED     AND RETRY
         OC    UCMMLAST,UCMMLAST   IS UCMLAST ZERO?            @ZA17713
         BNZ   OUTP                NO BRANCH                   @ZA17713
         NI    UCMSTS,ONES-UCMTC   TURN OFF INLINE WTO         @ZA17713
         B     OUTP
ERRC1    EQU   *                                              LD YM7708
         BAL   RCODE,GETLOCK       OBTAIN LOCAL AND CMS LOCKS LD YM7708
ERRC     EQU   *
         OI    UCMDEVC,UCMDEVCC    INDICATE CONSOLE SWITCH
         NI    UCMDEVC,ONES-UCMDEVCC-UCMDEVE-UCMDEVB   RESET ALL
         NI    UCMSTS,ONES-UCMTA-UCMBF   CNSLE FLGS FOR NO QUICK REOPEN
         BAL   RCODE,FREELOCK      RELEASE LOCKS              LD YM7708
         LR    RPARM,RCXSATCB      POINT TO CXSA
         L     RLINK,CSAXA         SET RETURN ADDRESS
         ICM   RWORK1,L15,CSANPTR  GET RECOVERY AREA        LD @ZA00515
         BZ    NOESTAE7            BOT THERE, BYPASS        LD @ZA00515
         USING PARMLIST,RWORK1     PARMLIST ADDRESSABILITY  LD @ZA00515
         MVC   PARMRTAD(L8),CSANAME RESTORE RETRY & REGSAVE LD @ZA00515
         DROP  RWORK1                                       LD @ZA00515
NOESTAE7 EQU   *                                            LD @ZA00515
         L     RCODE,UCMSWCH       ADDRESS OF CONSOLE SWITCH
         BR    RCODE               GO TO CONSOLE SWITCH
         EJECT
*                                                                     *
*                                                                     *
*        ESTAE RETRY ROUTINE FOR 2740'S                     LD @ZA00515
*                                                                     *
*                                                                     *
         SPACE 3
ERRORTRY DS    0H                                           LD @ZA00515
         BALR  RTRYBASE,RZERO      SET SUBROUTINE BASE      LD @ZA00515
         USING *,RTRYBASE                                   LD @ZA00515
         L     RBASE,ADDR2740      RESET MAINLINE BASE      LD @ZA00515
         L     RBASE2,ADDRCONS     RESET CONSTANT BASE      LD @ZA00515
         USING PSA,RZERO           BASE PSA ON LOCATION 0   LD @ZA00515
         L     RWORK,PSATOLD       GET PTR TO MY TCB        LD @ZA00515
         DROP  RZERO                                        LD @ZA00515
         USING TCB,RWORK           TCB ADDRESSABILITY       LD @ZA00515
         L     RWORK,TCBRBP        GET PTR TO MY SVRB       LD @ZA00515
         DROP  RWORK                                        LD @ZA00515
         USING RBSECT,RWORK        RB ADDRESSABILITY        LD @ZA00515
         LA    RCXSATCB,RBEXSAVE   TELOAD CXSA BASE         LD @ZA00515
         DROP  RWORK                                        LD @ZA00515
         L     RLINK,FREERTN       ADDR OF FREELOCK RTN     LD @ZA00515
         BALR  RCODE,RLINK         GO FREE LOCKS IF ANY AND LD @ZA00515*
                                   DELETE FRR               LD @ZA00515
         L     RWORK,CSANPTR       GET REVOVERY PARMLIST    LD @ZA00515
         USING PARMLIST,RWORK      PARMLIST ADDRESSABILITY  LD @ZA00515
         TM    PARMFTPT,OPENREQ    IS OPEN PENDING          LD @ZA00515
         BO    OPNRCVRY            YES GO TO SET UP RETRY   LD @ZA00515
         TM    PARMFTPT,CLOSEREQ   IS CLOSE PENDING         LD @ZA00515
         BO    CLSRCVRY            YES GO SET UP RETRY      LD @ZA00515
         SPACE 2
*                                                                     *
*        ADDITIONAL RECOVERY WILL GO HERE                   LD @ZA00515
*                                                                     *
         SPACE 2
SWTCHCSL EQU   *                                            LD @ZA00515
         L     RRTRN,SWTCHADR      SET FOR CONSOLE SWITCH   LD @ZA00515
         B     RETRY                                        LD @ZA00515
         EJECT
*                                                                     *
*                                                                     *
*        OPEN RECOVERY SETUP SUBROUTINE                               *
*                                                                     *
*                                                                     *
         SPACE 2
OPNRCVRY EQU   *                                            LD @ZA00515
         TM    PARMFTPT,IOSTART    I/O SUCCESSFUL?          LD @ZA00515
         BO    SWTCHCSL            NO SWITCH CONSOLE        LD @ZA00515
         TM    PARMFTPT,GTMAINON   WAS GETMAIN DONE         LD @ZA00515
         BO    CHECKLD             YES CHECK IF LOADS       LD @ZA00515*
                                   WERE DONE                LD @ZA00515
         L     RRTRN,RTRYOPN       SET OPEN RETRY ADDREES   LD @ZA00515*
                                   FROM BEGINNING           LD @ZA00515
         B     RETRY               GO TO RETRY              LD @ZA00515
         EJECT
*                                                                     *
*                                                                     *
*        CLOSE RECOVERY SETUP SUBROUTINE                              *
*                                                                     *
*                                                                     *
         SPACE 2
CLSRCVRY EQU   *                                            LD @ZA00515
         TM    PARMFTPT,GTMAINON   WAS FREEMAIN DONE        LD @ZA00515
         BO    CHECKLD1            NO, CHECK IF DELETES     LD @ZA00515*
                                   DONE                     LD @ZA00515
         L     RRTRN,RTRYCLS       SET CLOSE RETRY ADDRESS  LD @ZA00515
         B     RETRY               GO TO RETRY              LD @ZA00515
         EJECT
*                                                                     *
*                                                                     *
*        THIS SUBROUTINE WILL CHECK HOW MANY LOADS OR DELETES HAS     *
*        BEEN DONE. ACCORDINGLY WILL SET UP THE RETRY                 *
*                                                                     *
*                                                                     *
         SPACE 2
CHECKLD  EQU   *                                            LD @ZA00515
         MVC   CSAXC,CSAXA         SAVE RTN ADDR FROM       LD @ZA00515*
                                   MAINLINE                 LD @ZA00515
         LA    RLINK,RTNENTRY      SET NEW RETURN ADDR      LD @ZA00515
         ST    RLINK,CSAXA         FOR MAINLINE             LD @ZA00515
CHECKLD1 EQU   *                                            LD @ZA00515
         TM    PARMFTPT,LOADM0ON   IS IGG019M0 LOAD DONE    LD @ZA00515
         BZ    CHECKMR             NO, CHECK NEXT           LD @ZA00515
         L     RRTRN,M0DELETE      SET RETRY ADDR           LD @ZA00515
         B     RETRY1              RETRY                    LD @ZA00515
         SPACE 2
CHECKMR  EQU   *                                            LD @ZA00515
         TM    PARMFTPT,LOADMRON   IS IGG019MR LOAD DONE    LD @ZA00515
         BZ    CHECKMB             NO, CHECK NEXT           LD @ZA00515
         L     RRTRN,MRDELETE      SET RETRY ADDRESS        LD @ZA00515
         B     RETRY1              GO TO RETRY              LD @ZA00515
         SPACE 2
CHECKMB  EQU   *                                            LD @ZA00515
         TM    PARMFTPT,LOADMBON   IS IGG019MB LOAD DONE    LD @ZA00515
         BZ    CHECKMA             NO, CHECK NEXT           LD @ZA00515
         L     RRTRN,MBDELETE      SET RETRY ADDRESS        LD @ZA00515
         B     RETRY1              GO TO RETRY              LD @ZA00515
         SPACE 2
CHECKMA  EQU   *                                            LD @ZA00515
         TM    PARMFTPT,LOADMAON   IS IGG019MA LOAD DONE    LD @ZA00515
         BZ    CONTINUE            NO, CONTINUE             LD @ZA00515
         L     RRTRN,MADELETE      SET RETRY ADDRESS        LD @ZA00515
         B     RETRY1              GO TO RETRY              LD @ZA00515
         SPACE 2
CONTINUE EQU   *                                            LD @ZA00515
         L     RRTRN,FRMADDR       SET RETRY ADDRESS        LD @ZA00515
         B     RETRY1              GO TO RETRY              LD @ZA00515
         SPACE 2
RTNENTRY EQU   *                                            LD @ZA00515
         MVC   CSAXA,CSAXC         RESTORE RETURN ADDREES   LD @ZA00515*
                                   FOR MAINLINE             LD @ZA00515
         L     RRTRN,RTRYOPN       SET RETRY ADDRESS FOR    LD @ZA00515*
                                   OPEN                     LD @ZA00515
         B     RETRY               GO TO RETRY              LD @ZA00515
         EJECT
*                                                                     *
*                                                                     *
*        EXIT ROUTINE                                       *
*                                                                     *
*                                                                     *
         SPACE 2
RETRY    EQU   *                                            LD @ZA00515
         XC    PARMFTPT,PARMFTPT   CLEAR FOOTPRINTS         LD @ZA00515
RETRY1   EQU   *                                            LD @ZA00515
         L     RUCME,CSAUCM        RELOAD UCME PTR          LD @ZA00515
         L     RUCM,CSACTLM        RELOAD UCM BASE          LD @ZA00515
         L     RDCB,UCMDCB         RELOAD DCB BASE          LD @ZA00515
         L     RUCB,UCMUCB         RELOAD UCB BASE          LD @ZA00515
         LA    RDEB,CBDEB          RELOAD DEB BASE          LD @ZA00515
         XC    UCMECB,UCMECB       CLEAR ECB FIELD IN UCM   LD @ZA00515
         XC    UCMDCB,UCMDCB       CLEAR DCB FIELD IN UCM   LD @ZA00515
         DROP  RTRYBASE                                     LD @ZA00515
         USING IEEC2740,RBASE      MAIN LINE ADDRESSABILITY LD @ZA00515
         BR    RRTRN               GO TO RETRY              LD @ZA00515
         DROP  RWORK                                        LD @ZA00515
         EJECT
*                                                                     *
*                                                                     *
*        CONSTANTS AND EQUATION FOR ESTAE RETRY ROUTINE               *
*                                                                     *
*                                                                     *
         SPACE 2
ADDR2740 DC    A(IEEC2740)         ADDR OF MAINLINE         LD @ZA00515
ADDRCONS DC    A(CONSTS)           ADDR OF MAINLINE CONST.  LD @ZA00515
RTRYOPN  DC    A(OPNRTRY)          ADDR OF OPEN RETRY       LD @ZA00515
FREERTN  DC    A(FREELOCK)         ADDR OF FREELOCKS RTN    LD @ZA00515
RTRYCLS  DC    A(RETA)             ADDR OF CLOSE RETRY      LD @ZA00515
FRMADDR  DC    A(FREEMAIN)         ADDR OF FREEMAIN RETRY   LD @ZA00515
SWTCHADR DC    A(ERRC1)            ADDR OF SWITCH CONSOLE   LD @ZA00515
*                                                                     *
*        ADDRESSES OF DELETES RETRY                                   *
*                                                                     *
M0DELETE DC    A(DELETEM0)                                  LD @ZA00515
MRDELETE DC    A(DELETEMR)                                  LD @ZA00515
MBDELETE DC    A(DELETEMB)                                  LD @ZA00515
MADELETE DC    A(DELETEMA)                                  LD @ZA00515
         SPACE 4
GTMAINON EQU   B'10000000'                                  LD @ZA00515
GTMAINOF EQU   B'01111111'                                  LD @ZA00515
OPENREQ  EQU   B'01000000'                                  LD @ZA00515
OPENOFF  EQU   B'10111111'                                  LD @ZA00515
CLOSEREQ EQU   B'00100000'                                  LD @ZA00515
CLOSEOFF EQU   B'11011111'                                  LD @ZA00515
IOSTART  EQU   B'00010000'                                  LD @ZA00515
IOEND    EQU   B'11101111'                                  LD @ZA00515
LOADMAON EQU   B'00001000'                                  LD @ZA00515
LOADMAOF EQU   B'11110111'                                  LD @ZA00515
LOADMBON EQU   B'00000100'                                  LD @ZA00515
LOADMBOF EQU   B'11111011'                                  LD @ZA00515
LOADMRON EQU   B'00000010'                                  LD @ZA00515
LOADMROF EQU   B'11111101'                                  LD @ZA00515
LOADM0ON EQU   B'00000001'                                  LD @ZA00515
LOADM0OF EQU   B'11111110'                                  LD @ZA00515
**********
*
*        EXECUTED INSTRUCTIONS
*
**********
MOVETXT  EQU   *
         MVC   MESSAGE(ZERO),ZERO(RPARM)
BKSPCMVC EQU   *
         MVC   ZERO(L1,RLINK),L2(RLINK)
         EJECT
CONSTS   EQU   *                                            LD @ZA00515
         SPACE 3
**********
*
*        CONSTANTS
*
**********
MOD145   DC    XL2'0145'           CPU ID
MOD155   DC    XL2'0155'           CPU ID
MOD158   DC    XL2'0158'           CPU ID                   LD @ZA00517
MOD165   DC    XL2'0165'           CPU ID
MOD168   DC    XL2'0168'           CPU ID                   LD @ZA00517
MOD3031  DC    XL2'3031'           CPU ID                      @G51CK02
MOD3032  DC    XL2'3032'           CPU ID                      @G51CK02
MOD3033  DC    XL2'3033'           CPU ID                      @G51CK02
ANDMASK  DC    F'3'
SVC72ID  DC    CL4'VCTR'           RECOVERY IDENTIFIER      LD @ZA00515
TIME145  DC    XL4'0011B39F'       5 SECONDS
TIME155  DC    XL4'002753A8'       5 SECONDS
TIME165  DC    XL4'005971BC'       5 SECONDS
TIME3031 DC    XL4'00381936'       5 SECONDS                   @G51CK02
TIME3032 DC    XL4'0069F6BC'       5 SECONDS                   @G51CK02
TIME3033 DC    XL4'00BA1532'       5 SECONDS                   @G51CK02
DISABLE  DC    X'2F00000060010001'
ENABLE   DC    X'2700000020240001'
MA       DC    CL8'IGG019MA'       NAME OF BTAM R/W ROUTINE
MB       DC    CL8'IGG019MB'       NAME OF BTAM CEA ROUTINE
M0       DC    CL8'IGG019M0'       NAME OF BTAM DEV  I/O ROUTINE
MR       DC    CL8'IGG019MR'       NAME OF OLT CONTROL MODULE
HSIX     DC    H'6'                CONSTANT
SADCODE  DC    X'13171B1F'
*                   I E E X X X X   T I M E O U T   -
TOERMSG  DC    XL18'F3EBEB020715F301A6F3C9EBCCA9A6014001'
*                   T E R M I N A L   R E S E T
         DC    XL16'A6EBD2C9F3CAE2C601D2EBA5EBA65B3D'
         ASMTRTAB RC40
MODTABLE EQU   *
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'01011601010101010101010101010101' 0
         DC    X'01010101010101010101010101010101' 1
         DC    X'01010101010101010101010101010101' 2
         DC    X'01010101010101010101010101010188' 3
         DC    X'01010101010101010101A0768493E1B7' 4
         DC    X'61010101010101010101D757909587F6' 5
         DC    X'4023010101010101010101378BC08EA3' 6
         DC    X'010101010101010101018816208D8296' 7
         DC    X'01626467686B6D6E7073010101010101' 8
         DC    X'01434546494A4C4F5152010101010101' 9
         DC    X'01012526292A2C2F3132010101010101' A
         DC    X'01010101010101010101010101010101' B
         DC    X'01E2E4E7E8EBEDEEF0F3010101010101' C
         DC    X'01C3C5C6C9CACCCFD1D2010101010101' D
         DC    X'0101A5A6A9AAACAFB1B2010101010101' E
         DC    X'15020407080B0D0E1013010101010101' F
CCWCONST DC    X'00000060240001'   CCW SKELETON
RETRNEOB DC    0XL10'0'
         DC    AL1(RTRN2740)
         DC    8AL1(IDLE)
         DC    AL1(EOB2740)
FOXFOX   DC    X'FFFFFF'           STOPPER FOR PURGE            YM05650
PACHAREA EQU   *
         DC    100X'00'            PATCH AREA FOR MAINTENANCE  @ZA17713
         EJECT
**********
*
*        REGISTER DEFINITION
*
**********
RZERO    EQU   0                   WORK REG
RPARM    EQU   1                   CXSA BASE/WORK REG/EIL BASE/CQE BASE
*                                  AVT BASE/IO DIRECTORY BASE
RUCM     EQU   2                   UCM BASE
RUCB     EQU   3                   UCB BASE
RWORK1   EQU   RUCB                WORK REGISTER            LD @ZA00515
RMSG     EQU   4                   WORK REG/CURRENT MESSAGE BASE
RTRYBASE EQU   RMSG                BASE FOR RETRY RTN       LD @ZA00515
RBASE    EQU   5                   PROGRAM BASE
RWQE     EQU   6                   WQE BASE/WORK REG
RBASE2   EQU   7                   BASE REG FOR CONSTANT    LD @ZA00515
RDCB     EQU   8                   DCB BASE/COMMON DSECT BASE
RWORK2   EQU   RDCB                WORK REGISTER            LD @ZA00515
RWORK4   EQU   RDCB                                         LD @ZA00515
RCXSATCB EQU   9                   CXSA BASE/TCB BASE/WORK REG
RDEB     EQU   10                  DEB BASE
RUCME    EQU   11                  UCM ENTRY BASE
RLNTH    EQU   12                  LENGTH OF TEXT/WORK REG
RWORK3   EQU   RLNTH               WORK REGISTER            LD @ZA00515
RRTRN    EQU   RLNTH                                        LD @ZA00515
ROPEN    EQU   13                  WORK REG
RPARMADD EQU   ROPEN               PARM ADD FROM SETFRR     LD @ZA00515
RWORK    EQU   ROPEN               WORK REGISTER            LD @ZA00515
RLINK    EQU   14                  LINK REG/WORK REG
RFRRADD  EQU   RLINK               ADDR OF COMM FRR RTN     LD @ZA00515
RCODE    EQU   15                  LINK REG/WORK REG
         EJECT
**********
*
*        MISCELLANEOUS EQUATES
*
**********
DEVTP40  EQU   X'0C'               2740 CODE FOR 'DCBDEVTP'
CU0103   EQU   X'02'
MULT4    EQU   2                   TO MULTIPLY BY 4, SHIFT BY 2
DIVIDE4  EQU   2                   TO DIVIDE BY 4, SHIFT BY 2
IDLE     EQU   X'5E'
RTRN2740 EQU   X'5B'               2740 CARR RETN-NEW LINE
EOB2740  EQU   X'3D'               2740 EOB
RTRN     EQU   X'15'               2740 CARRIAGE RETURN
BSP      EQU   X'16'               2740 BACKSPACE
EOB      EQU   X'26'               EOB CHARACTER
EOT      EQU   X'37'               END-OF-TRANSMISSION CHARACTER
DEVIODIR EQU   12                  DISPLACEMENT OF THE 'DEVICE I/O
*                                  DIRECTORY' FROM THE BEGINNING OF
*                                  THE 'BTAM R/W ROUTINE' (IGG019MA)
IOFULL   EQU   X'FF' I             INDICATOR OF THE 'FULL' CONDITION OF
*                                  THE DEVICE I/O DIRECTORY
ZERO     EQU   0                   LENGTH AND DISPLACEMENT
L1       EQU   1                   LENGTH AND DISPLACEMENT
L2       EQU   2                   LENGTH AND DISPLACEMENT
L3       EQU   3                   LENGTH AND DISPLACEMENT
L4       EQU   4                   LENGTH AND DISPLACEMENT
L5       EQU   5                   LENGTH AND DISPLACEMENT
L7       EQU   7                   LENGTH AND DISPLACEMENT
L8       EQU   8                   LENGTH AND DISPLACEMENT
L9       EQU   9                   LENGTH AND DISPLACEMENT
L12      EQU   12                  LENGTH AND DISPLACEMENT
L15      EQU   15                  MASK FOR ICM INSTR.      LD @ZA00515
L16      EQU   16                  LENGTH AND DISPLACEMENT
L18      EQU   18                  LENGTH AND DISPLACEMENT
L23      EQU   23                  LENGTH AND DISPLACEMENT
L34      EQU   34                  LENGTH AND DISPLACEMENT
L40      EQU   40                  LENGTH AND DISPLACEMENT
L127     EQU   127                 LENGTH AND DISPLACEMENT
L139     EQU   139                 LENGTH AND DISPLACEMENT
X01      EQU   X'01'               MASK
X80      EQU   X'80'               MASK
X48      EQU   X'48'               MASK
X7E      EQU   X'7E'               MASK
X7F      EQU   X'7F'               MASK
XE0      EQU   X'E0'               MASK
ONES     EQU   X'FF'               AND MASK
SUBPOOL  EQU   255                 COMM TASK SUBPOOL
RETRYMSK EQU   X'88'
BLANK    EQU   C' '                BLANK
RST      EQU   X'80'
SPACE    EQU   X'01'               2740 TRANSCODE SPACE
WRINIT   EQU   X'02'
T2740B   EQU   X'59'
WRCONT   EQU   X'04'               WR CONTINUE OP TYPE
WRBREAK  EQU   X'16'               WR BREAK OP TYPE
WRRESET  EQU   X'0A'               WRITE EOT OP TYPE
RDINIT   EQU   X'81'               READ INITIAL OP TYPE
RDBREAK  EQU   X'95'               READ BREAK OP TYPE
TIMEOUT  EQU   X'01'               TIMEOUT BIT IN SENSE FIELD
UCBPOST  EQU   X'20'               UCBFL1 POST BIT
TRMRESET EQU   X'01'
BIDHIT   EQU   X'02'
RETRIED  EQU   X'04'
WREOT    EQU   X'08'               WRITING EOT INDICATOR
PURGE    EQU   X'10'               PURGE IN PROCESS INDICATOR
OPENFL   EQU   X'10'               DCB IS OPEN
LOCALON  EQU   X'80'               MASK FOR LOCAL LCK IND.  LD @ZA00515
LOCALOFF EQU   X'7F'                                        LD @ZA00515
CMSON    EQU   X'40'               MASK FOR CMS LCK IND.    LD @ZA00515
CMSOFF   EQU   X'BF'                                        LD @ZA00515
FRRON    EQU   X'20'               MASK FOR FRR IND.        LD @ZA00515
FRROFF   EQU   X'DF'                                        LD @ZA00515
         EJECT
**********
*
*        MODEL BTAM CONTROL BLOCKS FOR 2740 CONSOLE
*
**********
*
*              **********
*              *        *
*              *  DCB   *
*              *        *
*              **********
*
DCB401   DS    0D
         ORG   *+20                MOVE FORWARD PAST THE UNUSED SPACE
*                                  COMMON INTERFACE
         DC    AL1(0),AL3(0),AL2(0)   DCBBUFNO,DCBBUFCB,DCBBUFL
         DC    X'1000'             DCBDSORG = CX
         DC    AL1(DEVTP40),AL3(IOB401-IOBLNTH)   DCBDEVTP,DCBIOBAD
*                                  FOUNDATION EXTENSION
         DC    AL1(0),X'16',AL2(0)   DCBBFTEK,DCBERROP = (R,W,E)
         DC    AL1(IOBLNTH),AL3(0)   DCBIOBX,DCBEXLST
*                                  FOUNDATION SEGMENT (AFTER OPEN)
         DC    AL2(0),X'2020',AL1(0),AL3(DEB401)   DCBTIOT,DCBMACRF,
*                                  DCBIFLGS,DCBDEBAD
         DC    AL1(0),AL3(0)       DCBOFLGS,DCBREAD/DCBWRITE
         DC    A(0)                DCBLERB
*                                                               YM02593
*              **********                                       YM02593
*              *        *                                       YM02593
*              *  AVT   *                                       YM02593
*              *        *                                       YM02593
*              **********                                       YM02593
*                                                               YM02593
APP2740  DC    A(DEBEOEAP,DEBSIOAP,DEBPCIAP,0,0)   AVT      LD @ZA00515
*
*
*              **********
*              *        *
*              *  DECB  *
*              *        *
*              **********
*
         DS    0D                  TO MATCH COMMON DSECT ALIGNMENT
         READ DECB401,T,DCB401,,L'MESSAGE,,1,MF=L
*              **********
*              *        *
*              *  IOB   *
*              *        *
*              **********
*
IOB401   DS    0D
*                                  STANDARD FIELDS
         DC    X'C2',AL1(0,0,0,0),AL3(DECB401)   IOBFLAG1,IOBFLAG2,
*                                  IOBSENS0,IOBSENS1,IOBECBPT
         DC    AL1(0),AL3(IOB401),XL4'00',AL1(0),AL3(CP401)   IOBFLAG3,
*                                  IOBCSW,IOBSIOCC,IOBSTART
         DC    A(DCB401,0),AL2(0,0)   IOBDCBPT,IOBRESTR,IOBINCAM,
*                                  IOBERRCT
*                                  BTAM EXTENSION SEGMENT
         DC    AL1(0),XL7'00',XL8'00',XL16'00'   IOBUCBX,IOBWORK,
*                                  IOBERCCW,IOBERINF
CP401    DC    28F'0'              CHANNEL PROGRAM AREA         YA02125
         DC    2F'0'               ERP EXTENSION               @ZA04667
*
*
*              **********
*              *        *
*              *  DEB   *
*              *        *
*              **********
*
*                                  PREFIX SECTION
         DC    A(0),AL1((DEBEND1-DEB401)/8+1),AL3(0)  DEBDCBMK,DEBLNGTH
*                                  BASIC SECTION
DEB401   DC    AL1(0),AL3(0)       DEBNMSUB,DEBTCBAD
         DC    AL1(4),AL3(0)       DEBAMLNG,DEBDEBAD
         DC    AL1(0),AL3(DEBIRB1),AL1(0),AL3(0)   DEBOFLGS,DEBIRBAD,
*                                  DEBOPATB,DEBSYSPG
         DC    AL1(1),AL3(0),AL1(0),AL3(0)   DEBNMEXT = 1,
*                                  DEBUSPRG,DEBPRIOR,DEBECBAD
         DC    X'0F',AL3(DCB401),AL1(2),AL3(APP2740)   DEBPROTG/
*                                  DEBDEBID,DEBDCBAD,DEBEXSCL = 2,
*                                  DEBAPPAD
*                                  DEVICE DEPENDENT SECTION
         DC    A(0)                DEBSUCBA
DEBEND1  EQU   *                   END OF DEB
DEBIRB1  DC    A(0)
PURGE1   DC    3F'0'               PARM LIST FOR PURGE
*
*              **********
*              *        *
*              *  SAVE  *
*              *  AREA  *
*              *        *
*              **********
*
XSAVE    DC    20F'0'
*
*              **********
*              *        *
*              *  MSG   *
*              *  BUFFR *
*              *        *
*              **********
*
XMSGAREA DC    XL144'00'
*
**********
*
*        END OF CONTROL BLOCKS
*
**********
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  XXXXX    XXXXX    X   X    X   X    XXXXX    X   X
*  X        X   X    XX XX    XX XX    X   X    XX  X
*  X        X   X    X X X    X X X    X   X    X X X
*  X        X   X    X   X    X   X    X   X    X  XX
*  X        X   X    X   X    X   X    X   X    X   X
*  XXXXX    XXXXX    X   X    X   X    XXXXX    X   X
*
*
*  XXX     XXXXX   XXXXX   XXXXX   XXXXX
*  X  X    X       X       X         X
*  X   X   XXXXX   XXXXX   X         X
*  X   X       X   X       X         X
*  X  X        X   X       X         X
*  XXX     XXXXX   XXXXX   XXXXX     X
*
*
**********                                                      YM02593
*                                                               YM02593
*        DSECT FOR GETMAINED AREA FOR MODEL CONTROL             YM02593
*        BLOCKS IN THE FOLLOWING SEQUENCE:                      YM02593
*              DCB                 ADDRESSING LABEL = IHADCB    YM02593
*              AVT                 ADDRESSING LABEL = APPVTAB   YM02593
*              DECB                ADDRESSING LABEL = DECB      YM02593
*              IOB                 ADDRESSING LABEL = IOBSTDRD  YM02593
*              DEB                 ADDRESSING LABEL = CBDEB     YM02593
*              SAVEAREA            ADDRESSING LABEL = SAVEAREA  YM02593
*              MESSAGEAREA         ADDRESSING LABEL = MSG       YM02593
*        NOTE-THE DEB IS NOT MAPPED WITHIN THE COMMON DSECT     YM02593
*             BECAUSE THE MACRO DOES NOT ACCEPT DSECT=NO        YM02593
*                                                               YM02593
*                                                               YM02593
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         DS    0D                  FOR ALIGNMENT                YM02593
         DCBD  DSORG=BX                                         YM02593
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 5
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         ORG   DCBLERB+4                                        YM02593
APPVTAB  DS    5F                  APPENDAGE VECTOR TABLE       YM02593
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 5
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         IHADECB DSECT=NO                                       YM02593
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 5
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**********                                                      YM02593
*                                                               YM02593
*        THE FOLLOWING ORG IS 16 LESS THAN THE SIZE OF THE      YM02593
*        DECB SO THE IOBSTDRD FIELD OF THE IOB (NOT THE IOB     YM02593
*        PREFIX) WILL BE THE FIRST LOGICAL PORTION OF THE IOB   YM02593
*                                                               YM02593
         ORG   DECB+24                                          YM02593
         IEZIOB DSECT=NO                                        YM02593
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 5
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         ORG   IOBSTDRD+176                                     YA02125
IOBLNTH  EQU   *-IOBSTDRD          LENGTH OF THIS IOB           YM02593
ERPEXT   DS    2F              INCREASE GETMAIN FOR THE        @ZA04667
*                              ERPEXT BY 2 FULL WORDS          @ZA04667
CBLEN1   EQU   IOBSTDRD-IHADCB     LENGTH OF DCB AND DECB       YM02593
CBDEBP   DS    2F
CBDEB    DS    9F
CBIRB    DS    F
CBPURGE  DS    3F
CBLEN2   EQU   *-IOBSTDRD                                       YM02593
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 5
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
SAVEAREA DS    18F                                              YM02593
TEMP1    DS    F                                                YM02593
TEMP2    DS    F                                                YM02593
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 5
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                  DSECT FOR AN INPUT MESSAGE   YM02593
MCSFLAGS EQU   0                   SVC 34 FLAGS FOR MCS SUPPORT
MSGLNTH  EQU   144                 LENGTH OF INPUT MESSAGE
PARTLNTH EQU   MSGLNTH-6           THE PARTIAL LENGTH USED IN EDITING A
*                                  MESSAGE
MSG      EQU   *                                                YM02593
MESSLNTH DS    XL2                 LENGTH OF THIS MESSAGE
MESSFLGS DS    XL2                 IGNORED BY SVC 34
MESSAGE  DS    CL(MSGLNTH-4)       THE MESSAGE CONTENT
CBLEN3   EQU   *-SAVEAREA                                     LD YM7713
CBSIZ    EQU   *-IHADCB                                         YM02593
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  XXXXX   X   X   XXX
*  X       XX  X   X  X
*  XXXXX   X X X   X   X
*  X       X  XX   X   X
*  X       X   X   X  X
*  XXXXX   X   X   XXX
*
*
*  XXXXX    XXXXX    X   X    X   X    XXXXX    X   X
*  X        X   X    XX XX    XX XX    X   X    XX  X
*  X        X   X    X X X    X X X    X   X    X X X
*  X        X   X    X   X    X   X    X   X    X  XX
*  X        X   X    X   X    X   X    X   X    X   X
*  XXXXX    XXXXX    X   X    X   X    XXXXX    X   X
*
*
*  XXX     XXXXX   XXXXX   XXXXX   XXXXX
*  X  X    X       X       X         X
*  X   X   XXXXX   XXXXX   X         X
*  X   X       X   X       X         X
*  X  X        X   X       X         X
*  XXX     XXXXX   XXXXX   XXXXX     X
*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IEZDEB LIST=YES
         EJECT
         IKJTCB
         EJECT
CVT      DSECT
         CVT
         EJECT
UCBSET   DSECT
         IEFUCBOB
         EJECT
         IHACTM CQE
         EJECT
         IHACTM CXSA
         EJECT
         IHACTM FTPT
         EJECT
         IHAFRRS
         EJECT
         IHAPSA
         EJECT
         IHAIQE
         EJECT
         IKJRB
         EJECT
*                                  MACRO CALL CHANGE            YM05695
         IEECUCM FORMAT=NEW
         EJECT
         IHAWQE
         EJECT
IODIRECT DSECT
IODEVTP  DS    0XL1                CODE SAVED HERE FROM 'DCBDEVTP'
IODEVMOD DS    F                   ADDRESS DEVICE I/O MODULE
IONEXT   DS    0F                  NEXT DIRECTORY ENTRY
         END
