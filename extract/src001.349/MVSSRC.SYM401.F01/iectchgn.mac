         TITLE 'AUTOPOLL CHANGE ENTRY SUBROUTINE.'
IECTCHGN CSECT
* STATUS -          CHANGE LEVEL 000    APRIL 26, 1967
*
* FUNCTION -        THIS ROUTINE PERFORMS THE FUNCTION OF PHYSICALLY  *
*                   RESTRUCTURING A POLLING LIST IN ORDER TO CAUSE AN *
*                   ENTRY TO BE SKIPPED OR REACTIVATED.               *
*                                                                     *
* ENTRY POINT -     FIRST EXECUTABLE INSTRUCTION                      *
*                                                                     *
* INPUT -           REGISTER ZERO CONTAINS THE POSITION (NUMERICAL    *
*                     VALUE) OF THE ENTRY TO BE CHANGED IN THE        *
*                     POLLING LIST.                                   *
*                   REGISTER ONE CONTAINS THE ADDRESS OF THE POLLING  *
*                     LIST.                                           *
*                                                                     *
* OUTPUT -          THE TERMINAL LIST WITH THE INDICATED ENTRY SKIPPED*
*                     OR ACTIVATED.                                   *
*                                                                     *
* EXTERNAL ROUTINES- NONE                                             *
*                                                                     *
* EXITS -           VIA REGISTER 14 WITH ONE OF THE FOLLOWING RETURN  *
*                     CODES -                                         *
*                                                                     *
*                     X'00'- REQUESTED ACTION WAS PERFORMED           *
*                     X'04'- REQUESTED ACTION WAS NOT PERFORMED       *
*                            BECAUSE THE LIST WAS IN USE              *
*                     X'08'- REQUESTED ACTION WAS NOT PERFORMED       *
*                            BECAUSE THE OPERAND SPECIFYING THE       *
*                            POSITION OF THE ENTRY WAS TOO LARGE.     *
*                                                                     *
* ATTRIBUTES -      THIS ROUTINE IS REENTRANT.                        *
*                                                                     *
***********************************************************************
RINDX  EQU   0
RLSB   EQU   1
RWKE   EQU   2
RWKO   EQU   3
RTE    EQU   4
RAE    EQU   5
RNNN   EQU   6
RLST   EQU   7
RMVP   EQU   8
RBASE  EQU   9
RNPC   EQU   10
*
       SAVE  (0,10)
       BALR  RBASE,0
       USING *,RBASE
       SH    RLSB,HDR
*                             CLEAR RETURN CODE
       SR    15,15
*                                  TEST USAGE COUNT
       TM    2(RLSB),X'0F'
       BNZ   EXIT4
*                                  CLEAR REGESTERS
       SR    RTE,RTE
       SR    RAE,RAE
       SR    RNNN,RNNN
*                                  INITIALIZE REGESTERS
       STC   RINDX,INDEX
       IC    RTE,0(RLSB)
       CR    RTE,RINDX
       BL    EXIT8
       IC    RAE,1(RLSB)
       IC    RNNN,2(RLSB)
       SRL   RNNN,5
       CH    RNNN,ONE              IF NNN 0 OR 1, IT MEANS      YA01016
       BH    COUNT1                8 OR 9, CONVERT IT TO THE    YA01016
       LA    RNNN,8(RNNN)          TRUE VALUE                   YA01016
COUNT1 EQU   *                                                  YA01016
       LR    RNPC,RNNN
       BCTR  RNPC,0
       LTR   RLST,RLSB
       BM    ACTIVATE
*
*                             SKIP ENTRY
       LTR   RAE,RAE
       BZ    EXIT
*                                  SCAN FOR SUBJECT ENTRY
SCAN1  AR    RLST,RNNN
       CLC   INDEX(1),2(RLST)
       BE    HOLD1
       BCT   RAE,SCAN1
       B     EXIT
HOLD1  BCT   RAE,SAVE1
       B     INCR
*                                  SAVE ENTRY
SAVE1  SR    RLST,RNNN
       EX    RNPC,MOVE1
       LA    RMVP,0(RNNN,RLST)
*                                  MOVE REMAINDER OF ACTIVE ENTRIES
SHIFT1 EX    RNPC,MOVE2
       AR    RLST,RNNN
       AR    RMVP,RNNN
       BCT   RAE,SHIFT1
*                                  STORE SUBJECT ENTRY IN SKIP LIST
       EX    RNPC,MOVE3
INCR   IC    RAE,1(RLSB)
*                                  DECREMENT ACTIVE COUNT
       BCTR  RAE,0
       B     OUT
*
*
*                             ACTIVATE ENTRY
*
ACTIVATE  DS 0H
       CR    RAE,RTE
       BE    EXIT
*                                  FIND START OF SKIP LIST
       LR    RWKO,RAE
       MR    RWKE,RNNN
       LA    RLST,0(RWKO,RLSB)
       LR    RWKE,RTE
       SR    RWKE,RAE
*                                  FIND SUBJECT ENTRY
SCAN2  AR    RLST,RNNN
       CLC   INDEX(1),2(RLST)
       BE    SAVE2
       BCT   RWKE,SCAN2
*
       B     EXIT
*                                  SAVE SUBJECT ENTRY
SAVE2  SR    RLST,RNNN
       EX    RNPC,MOVE1
*
       LR    RMVP,RLST
       AR    RLST,RNNN
       AR    RWKE,RAE
       LCR   RWKE,RWKE
       AR    RWKE,RTE
       BZ    SHIFT3
*                                  MOVE HIGHER SKIP ENTRYS
SHIFT2 SR    RLST,RNNN
       SR    RMVP,RNNN
       EX    RNPC,MOVE2
       BCT   RWKE,SHIFT2
*                                  MOVE ACTIVE ENTRYS AND TEST INDEX
SHIFT3 LA    RWKE,1(RAE)
LOOP   SR    RLST,RNNN
       CLC   INDEX(1),2(RMVP)
       BH    STORE
       SR    RMVP,RNNN
       EX    RNPC,MOVE2
       BCT   RWKE,LOOP
*                                  STORE SUBJECT ENTRY IN ACTIVE LIST
STORE  EX    RNPC,MOVE3
*                                  INCREMENT ACTIVE COUNT
       AH    RAE,ONE
*
OUT    STC   RAE,1(RLSB)
*
EXIT   RETURN (0,10)
*
*                        ERROR RETURNS
*                             IN USE, RETURN 4
EXIT4  LA    15,4
       B     EXIT
*                             INVALID INDEX, RETURN 8
EXIT8  LA    15,8
       B     EXIT
*
MOVE1  MVC   HOLD(*-*),3(RLST)
*
MOVE2  MVC   3(*-*,RLST),3(RMVP)
*
MOVE3  MVC   3(*-*,RLST),HOLD
*
ONE    DC    H'1'
*
HDR    DC    H'3'
*
HOLD     DS    9X                                                  3131
*
INDEX  DS    C
*
         END
