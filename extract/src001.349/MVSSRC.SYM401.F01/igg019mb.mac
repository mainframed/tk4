         TITLE 'IGG019MB - BTAM CHANNEL END/ABNORMAL END APPENDAGE'
***********************************************************************
*                                                                     *
* MODULE NAME: IGG019MB   (OS/VS)                                     *
*                                                                     *
* DESCRIPTIVE NAME: BTAM CHANNEL END/ABNORMAL END APPENDAGE           *
*                                                                     *
* COPYRIGHT: NONE                                                     *
*                                                                     *
* STATUS: RELEASE 2                                                   *
*                                                                     *
* FUNCTION:         SERVICE BTAM DEPENDENT I/O INTERRUPTS             *
*                        1.  PROVIDE CHANNEL PROGRAM RESTARTS         *
*                        2.  POST BUFFERS FOR DYNAMIC BUFFERING       *
*                        3.  UPDATE THE USER'S DECB                   *
*                                                                     *
* ENTRY POINT:      ENTRY IS TO 1ST EXECUTABLE INSTRUCTION FROM IOS   *
*                                                                     *
* INPUT:            REGISTER  2 - ADDRESS OF THE IOB                  *
*                   REGISTER  3 - ADDRESS OF THE DEB                  *
*                   REGISTER  4 - ADDRESS OF THE DCB                  *
*                   REGISTER  7 - ADDRESS OF THE UCB                  *
*                   REGISTER 14 - RETURN ADDRESS                      *
*                                                                     *
* OUTPUT:           1.  CHANNEL PROGRAM RESTARTS - UPDATED DECB AND   *
*                        IOB FIELDS.                                  *
*                   2.  BUFFER POSTS - COMPLETION CODE IN THE BUFFER. *
*                   3.  UPDATED SENSE, COMMAND AND STATUS FIELDS IN   *
*                        THE DECB                                     *
*                                                                     *
* EXTERNAL ROUTINES:1.  REQUEST-RELEASE BUFFER ROUTINE                *
*                   2.  SUPERVISOR POST ROUTINE                       *
*                   3.  PAGE SERVICES ROUTINE (DYNAMIC                *
*                       BUFFERING ONLY)                               *
*                                                                     *
* EXIT:             RETURN TO IOS VIA REGISTER 14+0 NORMALLY,         *
*                                                +4 FOR ON-LINE TEST  *
*                                                   OR WHEN A SAD OR  *
*                                                   ENABLE ERROR      *
*                                                   OCCURS            *
*                                                +8 FOR RESTART OF CP *
*                                                                     *
* IN LINE ROUTINES: THE TP OP CODE IS USED AS AN INDEX TO BRANCH TO   *
*                        THE APPROPIATE ROUTINE WITHIN THE CHANNEL    *
*                        END APPENDAGE.  THE SEQUENCE OF PROCESSING   *
*                        IS INITIALIZATION AND CHECKING FOR ANY       *
*                        ERRORS, TP OP CODE ROUTINE, AND THEN EXITING.*
*                        THE VARIOUS ROUTINES ARE -                   *
*                        1.  POLLING RESTART - TO RESTART POLLING     *
*                             AFTER A NEGATIVE RESPONSE.              *
*                        2.  ADDRESSING RESTART - TO RESTART          *
*                             ADDRESSING AFTER A NEGATIVE RESPONSE.   *
*                        3.  READ OR WRITE DATA - TO RELEASE A BUFFER *
*                             OR PURGE A BUFFER REQUEST ON A READ     *
*                             WITH DYNAMIC BUFFERING, AND POST THE    *
*                             LAST BUFFER FOR READS AND WRITES.       *
*                        4.  ENABLE COMPLETE - TO RESTART THE CHANNEL *
*                             PROGRAM AFTER AN ENABLE HAS COMPLETED.  *
*                        5.  COMPARE TWX IDENT - TO CHECK THE TWX     *
*                             IDENTIFICATION.                         *
*                        6.  READ SKIP - TO SET APPROPRIATE ERROR     *
*                             INDICATION FOR LOST DATA.               *
*                        7.  READ RESPONSE, RESET - TO ASSURE THAT    *
*                             THE LAST BUFFER WAS POSTED.             *
*                        8.  TPXX - TO FIND THE DATA CCW.             *
*                        9.  POST BUFFER ROUTINE - TO SET UP THE      *
*                             PARAMETERS TO POST AND LINK TO THE      *
*                             SUPERVISOR POST ROUTINE.                *
*                       10.  READ INQUIRY - RESTART CHANNEL PROGRAM   *
*                             WHEN INQ IS RECEIVED.  RESET ACK        *
*                             POINTERS.                               *
*                       11.  READ RESPONSE TO INQUIRY - RESTART       *
*                             CHANNEL PROGRAM AND RESET ACK POINTERS. *
*                       12.  READ RESPONSE TO TEXT - TEST FOR PROPER  *
*                             RESPONSE AND UPDATE ACK POINTERS.       *
*                                                                     *
* ATTRIBUTES:       THIS ROUTINE IS REENTERANT, ENABLED, AND          *
*                   RUNS IN SUPERVISOR STATE WITH THE LOCAL           *
*                   LOCK HELD BY IOS.                                 *
*                                                                     *
* CHANGE ACTIVITY AS FOLLOWS:                                         *
*            APARS                           PTMS                     *
*       YA02157  (10/1/73)               YM4057  (10/3/73) NO CODE    *
*       YA02469  (10/1/73)               YM4063  (10/3/73)            *
*       YA01017  (10/19/73)              YM5663  (12/11/73) PROLOG    *
*       YA01019  (10/19/73)                                           *
*       YA01020  (10/19/73)                                           *
*       YA01026  (10/19/73)                                           *
*       YA01027  (10/19/73)                                           *
*       YA01030  (10/19/73)                                           *
*       YA01239  (10/19/73)                                           *
*       YA01275  (10/22/73)                                           *
*       YA01553  (10/22/73)                                           *
*       YA02161  (10/22/73)                                           *
*       YA02162  (10/23/73)                                           *
*       YA02163  (10/23/73)                                           *
*       YA02164  (10/23/73)                                           *
*       YA02165  (10/23/73)                                           *
*       YA02448  (10/23/73)                                           *
*       YA02453  (10/23/73)                                           *
*       YA02472  (10/24/73)                                           *
*       YA03238  (2/2/74)                                             *
*       YA03243  (2/2/74)                                             *
*       YA03266  (2/4/74)                                             *
*       YA03275  (2/7/74)                                             *
*                                                                     *
*       ZA00529  (11/14/74) REMOVED BY AZ03588                        *
*       ZA00536  (11/14/74)                                           *
*       ZA02312  (11/14/74)                                           *
*       ZA02313  (11/14/74)                                           *
*       ZA02314  (11/14/74)                                           *
*       ZA02315  (11/14/74)                                           *
*       ZA02316  (11/14/74)                                           *
*       ZA02317  (11/14/74)                                           *
*       ZA02318  (11/14/74)                                           *
*       ZA02319  (11/14/74)                                           *
*       ZA02320  (11/14/74)                                           *
*       ZA02321  (11/14/74)                                           *
*       ZA02322  (11/14/74)                                           *
*       ZA02323  (11/14/74)                                           *
*       ZA02324  (11/14/74)                                           *
*       ZA02325  (11/14/74)                                           *
*       ZA02327  (11/14/74)                                           *
*       ZA02339  (11/22/74)                                           *
*       ZA02814  (01/16/75)                                           *
*       ZA02845  (02/28/75)                                           *
*       AZ03588  (07/02/75)                                           *
*       AZ03598  (04/30/75)                                           *
*       AZ03966  (04/09/75)                                           *
*       AZ03967  (04/09/75)                                           *
*       AZ04157  (07/15/75)                                           *
*       AZ04190  (07/02/75)                                           *
*       AZ04192  (07/15/75)                                           *
*       AZ04195  (07/15/75)                                           *
*       AZ04196  (07/16/75)                                           *
*       AZ04650  (07/14/75)                                           *
*       AZ04679  (10/20/75)                                           *
*       AZ04852  (10/21/75)                                           *
*       AZ04873  (10/21/75)                                           *
*       AZ04877  (10/21/75)                                           *
*       AZ06398  (11/05/75)                                           *
*       AZ06404  (10/21/75)                                           *
*       AZ07638  (11/05/75)                                           *
*       AZ08045  (03/10/76)        AZ11419  (07/21/76)                *
*       AZ14067  (11/01/76)        AZ14068  (11/01/76)                *
*       AZ14069  (11/01/76)        AZ14070  (11/01/76)                *
*       AZ14071  (11/01/76)        AZ13190  (11/01/76)                *
*       AZ14130  (11/01/76)        AZ15402  (05/03/77)                *
*       AZ15430  (11/30/76)        AZ24728  (09/27/77)                *
*       AZ31078  (03/16/78)        AZ31183  (04/03/78)                *
***********************************************************************
         EJECT
IGG019MB CSECT
         SPACE 5
ZREG     EQU   0                        PARAMTER REGISTER
ICREG    EQU   1                        SINGLE BYTE WORK REGISTER
VSLREG   EQU   1                   VIRTUAL SUBAREA LIST ADDR     Y02947
IOBREG   EQU   2                        INPUT/OUTPUT BLOCK ADDRESS
DEBREG   EQU   3                        DATA EXTENT BLOCK ADDRESS
DCBREG   EQU   4                        DATA CONTROL BLOCK ADDRESS
CCWREG   EQU   5                        CHANNEL COMMAND WORD ADDRESS
CCW2REG  EQU   6                        CHANNEL COMMAND WORD ADDRESS
UCBREG   EQU   7                        UNIT CONTROL BLOCK ADDRESS
WREG     EQU   8                        ADDRESS WORK REGISTER
TCBREG   EQU   8                        TCB ADDR                 Y02947
W2REG    EQU   9                        ADDRESS WORK REGISTER
ECBREG   EQU   10                       EVENT CONTROL BLOCK ADDRESS
BUFREG   EQU   11                       BUFFER ADDRESS
SAVEREG  EQU   11                       WORK REGISTER
BASEREG  EQU   12                       BASE REGISTER
SAVEAREA EQU   13                       SAVE AREA ADDRESS        Y02947
RETREG   EQU   14                       RETURN ADDRESS
BAS2REG  EQU   14                       SECOND BASE              Y02947
BRREG    EQU   15                       ENTRY POINT ADDRESS
         SPACE 3
         USING IECTDECB,ECBREG
         USING IECTIOB,IOBREG
         USING IHADCB,DCBREG
         USING *,BASEREG,BAS2REG
         STM   RETREG,SAVEAREA,DISP0(SAVEAREA)  SAVE REGISTERS   Y02947
         LR    BASEREG,BRREG
         LA    BAS2REG,2048(BASEREG)    SET UP SECOND
         LA    BAS2REG,2048(BAS2REG)         BASE REGISTER
         B     LOADECB
         DC    C'IGG019MB'                                       Y20947
         DC    C',VS2/R2, '                                     YA03243
         DC    XL3'017827'              PTF NUMBER
         DC    CL8'&SYSDATE'
         DS    0F                                                Y02947
PATCH    DC    XL250'00'           PATCH AREA                    Y02947
FOURK    DC    F'4096'                                           Y02947
LOADECB  DS    0H
         L     ECBREG,IOBECBPT          LOAD ADDRESS OF DECB
         LA    ECBREG,0(ECBREG)         CLEAR HI ORDER BYTE    @ZA08045
         LTR   ECBREG,ECBREG            IS THERE A DECB        @ZA08045
         BZ    EXITREST                 NO                     @ZA08045
         CLI   DECTYPE,XFF              IS IT A DUMMY DECB     @ZA08045
         BNE   DECBOK                   NO                     @ZA08045
         L     ECBREG,DISP4(ECBREG)      GET REAL DECB         @ZA08045
         LA    ECBREG,0(ECBREG)         CLEAR HI ORDER BYTE    @ZA08045
DECBOK   L     CCWREG,IOBCSW            LOAD CCW ADDRESS       @ZA08045
         LA    CCWREG,0(CCWREG)         INSURE VALID ADDRESS     A33189
         TM    IOBFLAG1,IOBEXE          IS ERP IN CONTROL          000B
         BO    EXITREST                 RETURN TO IOS              000B
         TM    IOBINCAM,X'80'           SAD OR ENABLE ERROR OCCUR
         BO    ERREXIT                  YES, EXIT
         TM    IOBINCAM,SENSTA          HAS 3270 SENSE/STATUS  @ZA14130
*     MESSAGE BEEN PROCESSED? (SOH % R)                        @ZA14130
         BO    SOHRCOMP            YES, GO TURN OFF BIT AND
*                                  GET OUT
         CLI   IOBWORK+ONE,SPFLAG  CHECK SPCAL FLAG FROM 504C  @ZA04679
         BNE   SUBTR8                   NOT ON SO BRANCH       @ZA04679
         MVI   IOBWORK+ONE,K0           ZERO OUT SPECIAL FLAG  @ZA04679
         B     REXIT1                                          @ZA04679
*
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                    *
*  THIS ROUTINE IS USED TO RESET THE UCBINHIO BIT IN THE UCB COMMON  *
*  EXTENTION X'05', WHICH INHIBITS HIO WHEN IN RECEIVE MODE.         *
*                                                                    *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*
SUBTR8   TM    IOBINCAM,ONLTT          IS ONLINE TEST IN USE   @ZA24728
         BO    NOCLR                   YES DO NOT CLEAR        @ZA24728
         XC    IOBERINF(4),IOBERINF    CLEAR WORK AREA         @ZA24728
NOCLR    EQU   *                                               @ZA24728
         L     W2REG,UCBEXTPT(UCBREG)  GET ADDRESS OF UCB EXT  @ZA15402
         TM    5(W2REG),X'10'          IS UCBINHIO BIT ON?     @ZA15402
         BNO   NOHIOBIT                NO, BRANCH              @ZA15402
         L     WREG,4(W2REG)           GET 4 BYTES OF UCB EXT  @ZA15402
TRYRESET LR    IOBREG,WREG             LOAD SAME 4 BYTES       @ZA15402
         N     IOBREG,RESETMSK         RESET THE UCBHINHIO BIT @ZA15402
         CS    WREG,IOBREG,4(W2REG)    RESET BIT, IF OK        @ZA15402
         BNE   TRYRESET                IF NOT, TRY AGAIN       @ZA15402
         L     IOBREG,DISP16(SAVEAREA) RESTORE IOBREG          @ZA15402
*
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*
NOHIOBIT SH    CCWREG,K8               SUBTRACT 8 TO LAST CCW  @ZA15402
         BP    LDTP
         TM    IOBSIOCC,X'30'           TEST FOR OPERATIONAL SIO
         BO    SIOCC1                   IF NOT, BRANCH
         OI    DECERRST,SNO             SET ON SHOULD NOT OCCUR BIT
         B     CSWADR                                              000A
LDTP     IC    ICREG,5(CCWREG)          LOAD TPOP CODE
         N     ICREG,TPMSK              AND OF BITS 0-3
         SLL   ICREG,3                  MULTIPLY BY 8
         TM    IOBCSW+4,X'F2'           TEST FOR ERROR IN CSW STATUS
         BNZ   SIOCC                    BRANCH IF SO
         TM    IOBCSW+5,X'3F'           TEST CSW STATUS, 2ND BYTE
         BZ    NORMAL                   BRANCH IF NO ERRORS
SIOCC    TM    IOBSIOCC,X'30'           TEST SIO COMPLETION CODE
         BNO   SIOCC10                  BRANCH IF OPERATIONAL SIO
SIOCC1   OI    DECERRST,X'80'           SET ON BIT 0 IN ERROR STATUS
         B     CSWADR
SIOCC10  TM    IOBSIOCC,X'10'           TEST FOR CSW STORED
         BZ    ABNORMAL                 BRANCH IF NOT
CSWADR   MVC   IOBCSW+1(3),IOBSTART+1   MOVE START ADDRESS
         L     WREG,IOBCSW              LOAD IT,
         AH    WREG,K8                  ADD 8
         ST    WREG,IOBCSW              AND STORE
         L     CCWREG,IOBSTART
         B     TPXX
ABNORMAL AH    ICREG,K4                 ADD 4 FOR ABNORMAL ENTRIES
NORMAL   TM    5(CCWREG),X'30'          DETERMINE BRANCH TABLE FOR
         BZ    TP0X(ICREG)              NORMAL ENTRIES
         BO    BSC2ONLT              3X TP FOR ERROR RECOVERY   YA02472
*                                    AND 3275 DIAL ON-LINE TEST YA02472
         TM    5(CCWREG),X'20'
         BZ    TP1X(ICREG)
         B     TP2X(ICREG)
         EJECT
TP0X     B     TP00                               00
         B     TP00AB                   MAL
         B     TP01           DIS,DIAL,ENABLE     01
         B     TPXX                ABNORMAL
         B     TP02           EOT SEQUENCE        02               000A
         B     TP02AB              ABNORMAL                        000A
         B     TP03           POLL,ADRS CHAR      03               000A
         B     TP03AB              ABNORMAL                        000A
         B     TPXX           SPACE,SHIFT,ETC     04
         B     TPXX                ABNORMAL
         B     TP05           RD RESPONSE TO POLL 05
         B     TP05AB              ABNORMAL
         B     TP06           RD RESPONSE TO ADRS 06
         B     TPXX                ABNORMAL
         B     TP07           RD TWX              07
         B     TPXX                ABNORMAL
         B     TPXX           EOA CHARACTER       08
         B     TPXX                ABNORMAL
         B     TP09           AUTOPOLL NOP        09               000A
         B     TP09AB              ABNORMAL                        000A
         B     TP0A           AUTOPOLL READ INDEX 0A             A25689
         B     TP0AAB                   ABNORMAL                   000C
         B     TP0B           RD RESPONSE TO PREP 0B               000B
         B     TPXX                ABNORMAL                    @ZA14130
         B     TP0C           RD RESPONSE TO ENQ  0C               000B
         B     TPXX                          ABNORMAL              000B
TP1X     B     TP10           LINE ADDRESS        10
         B     TP10AB              ABNORMAL
         B     TP10           TEXT                11
         B     TP10AB              ABNORMAL
         B     TP12           READ SKIP           12
         B     TP12AB              ABNORMAL
         B     TPXX           WRT END XPARENT BLK 13               000B
         B     TPXX                ABNORMAL                        000B
         B     EXIT                  RESERVED    14            @ZA14130
         B     EXIT                  RESERVED    14            @ZA14130
TP2X     B     TP2A           READ RESPONSE       20
         B     TP2A                ABNORMAL
         B     TP2A           RESET               21
         B     TP21AB              ABNORMAL                        000A
         B     EXIT           READ SKIP           22
         B     EXIT                ABNORMAL
         B     BRKTST        BREAK                23               000I
         B     BRKTST              ABNORMAL                        000I
         B     EXIT           SAD, DISABLE        24
         B     EXIT                ABNORMAL
         B     TP25           RD RESPONSE TO TXT  25               000B
         B     TP25                ABNORMAL                        000B
         EJECT
*                             TP OP CODE = 00     ON LINE TERMINAL TEST
         SPACE 3
TP00     TM    UCBTYP+3(UCBREG),BISYNCH IS THIS BISYNCH            000D
         BO    TSTOLT                  CHECK FOR ONLINE TEST     A43784
         TM    IOBFLAG1,IOBEX           IS IOB EXCEPTION FLAG ON   000D
         BZ    EXITONLT                                            000D
         TM    IOBCSW+4,CSWUE          IS UNIT EXCEPTION STATUS ON
         BZ    RSTEX
         CLI   0(CCWREG),READ          IS FAILING CCW A READ
         BE    RSTEX
TP00AB   TM    UCBTYP+3(UCBREG),BISYNCH IS THIS BISYNCH            000D
         BO    TSTOLT                  CHECK FOR ONLINE TEST     A43784
         TM    IOBINCAM,ONLTT           IS THIS ONLINE TEST        000D
         BZ    SETERRCC
         CLI   IOBERRCT,RETRYCNT       DOES RETRY COUNT EQUAL MAXIMUM
         BE    SETERRCC                 IF SO, BRANCG
         IC    ICREG,IOBERRCT          IF NOT , LOAD COUNT
         LA    ICREG,1(ICREG)          ADD U,
         STC   ICREG,IOBERRCT          STORE
         B     EXITONLT                                            000D
TSTOLT   TM    IOBINCAM,ONLTT          IS ONLINE TEST IN CTL?    A43784
         BO    EXITONLT                YES                       A43784
         TM    DECDCBAD,ONLTRFT        ONLINE TEST MACRO ISSUED? A49681
         BO    EXITONLT                YES                       A49681
         OI    DECERRST,SNO            SET SHOULD NOT OCCUR      A43784
         MVI   IOBECBPT,CCPER          INDICATE PERM ERROR       A43784
         B     EXIT                                             YA03243
         SPACE
SETERRCC MVI   IOBECBPT,CCPER
RSTEX    L     ICREG,IOBCPA             DATA ADDRESS OF FIRST CCW  000K
         CLC   0(3,ICREG),DPREO         WRITE TO 2760              000K
         BE    EXITONLT                 YES,UE IS GOOD             000K
         NI    IOBFLAG1,MASKALL-IOBEX                              000K
         B     EXIT                                             YA03243
         SPACE 3
*                           TP OP CODE # 02     EOT SEQUENCE       000A
*                                        OR                        000A
*                                       #03     POLL COMMAND -     000A
*                                          NORMAL ENTRY ONLY       000A
         SPACE 1
TP02     EQU   *                                                   000A
TP02AB   EQU   *                                                   000A
TP03     TM    DECTYPE,AUTOPOLL         AUTOPOLL COMPLETION?       000A
         BZ    TPXX                IF NOT, EXIT.                   000A
         CLI   0(CCWREG),POLL           DID OPERATION TERMINATE ON 000A
         BNE   TP03NEXT            POLL COMMAND?  IF NOT, BRANCH.  000A
         CLI   5(CCWREG),X'03'          IS THE TPOP CODE 3         000E
         BNE   TP03NEXT                 IF NOT, BRANCH             000E
         L     CCW2REG,0(CCWREG)   IF SO, LOAD ENTRY ADDRESS FROM  000A
         B     TP03UPDT            POLL COMMAND AND BRANCH.        000A
TP03NEXT CLI   8(CCWREG),POLL           IS THE NEXT COMMAND A POLL 000A
         BNE   TPXX                COMMAND?  IF NOT, EXIT.  IF SO, 000A
         L     CCW2REG,8(CCWREG)   OPERATION TERMINATED ON WRITE   000A
*    COMMAND.  LOAD ENTRY ADDRESS FROM POLL COMMAND AND PROCEED.   000A
*                                                                  000A
TP03UPDT L     WREG,DECPOLPT            LOAD ADDRESS OF FIRST      000A
         BCTR  WREG,0         ENTRY IN LIST AND ADJUST TO FLAG     000A
         IC    ICREG,0(WREG)  BYTE.  THEN GET FLAG BYTE AND SHIFT  000A
         SRL   ICREG,5        OUT ALL BUT ENTRY WIDTH.             000A
         CH    ICREG,K1            IF NNN IS 0 OR 1, THAT MEANS YA01016
         BH    TP03STOR            8 OR 9, ADD 8 TO MAKE IT     YA01016
         LA    ICREG,8(ICREG)      CORRECT                      YA01016
TP03STOR EQU   *                                                 A35727
         TM    UCBTYP+DISP3(UCBREG),BISYNCH TEST FOR BSC    LD @ZA02319
         BNO   TP03STOE            BR NOT BSC               LD @ZA02319
         CLC   0(1,CCW2REG),DCBBSEOT
         BNE   TP03STOE
TP03STPP EQU   *                                                 A35727
         L     CCW2REG,DECPOLPT
TP03STOE   EQU   *
         BCTR  ICREG,0                 DECREMENT ENTRY WIDTH BY  A35727
*   ONE TO GET THE NUMBER OF POLLING CHARACTERS PER ENTRY        A35727
         IC    ICREG,0(ICREG,CCW2REG)   GET INDEX BYTE FROM LIST   000A
         STC   ICREG,DECPOLPT      ENTRY AND STORE IN DECPOLPT.    000A
         ST    CCW2REG,DECENTRY         STORE LIST ENTRY ADDRESS   000A
*                                  IN DECENTRY.                    000A
         SPACE 1
*    *    *    *    *    *    *    *    *    *    *    *    *    *    *
         MVI   EXITAP+1,BRANCH          CHANGE NOP TO AN           000A
*    UNCONDITIONAL BRANCH TO BYPASS UPDATING DECENTRY AND POLPT.   000A
*    *    *    *    *    *    *    *    *    *    *    *    *    *    *
         SPACE 1
         B     TPXX                                                000A
         SPACE 3
*                           TP OP CODE # 03     POLL COMMAND -     000A
*                                          ABNORMAL ONLY           000A
         SPACE 1
TP03AB   TM    DECTYPE,AUTOPOLL         AUTOPOLL COMPLETION?       000A
         BZ    TPXX                IF NOT, EXIT.                   000A
         SR    ICREG,ICREG         CLEAR REG                LD @ZA02814
         L     WREG,DECPOLPT            LOAD ADDRESS OF FIRST      000A
         BCTR  WREG,0         ENTRY IN LIST AND ADJUST TO FLAG     000A
         IC    ICREG,0(WREG)  BYTE.  THEN GET FLAG BYTE AND SHIFT  000A
         SRL   ICREG,5        OUT ALL BUT ENTRY WIDTH.             000A
         CH    ICREG,K1            IF NNN IS 0 OR 1, THAT MEANS YA01016
         BH    TP03AB1             8 OR 9, SO ADD 8 TO MAKE IT  YA01016
         LA    ICREG,8(ICREG)      CORRECT                      YA01016
TP03AB1  EQU   *                                                YA01016
         BCTR  WREG,DISP0          GET # OF ACT. ENTRY      LD @ZA02814
         SR    SAVEREG,SAVEREG     CLEAR REG                LD @ZA02319
         IC    SAVEREG,DISP0(WREG) TOTAL ACTIVE ENTRIES        @ZA14130
         L     W2REG,DISP0(CCWREG) LOAD ENTRY ADDR          LD @ZA02814
*                                  FROM POLL                LD @ZA02319
         LR    CCW2REG,W2REG       LOAD REG                 LD @ZA02814
         AH    CCW2REG,DISP6(CCWREG) ADD ORIG COUNT         LD @ZA02319
         SH    CCW2REG,IOBCSW+DISP6 SUB RESIDUAL CT.        LD @ZA02814
TP03AB2  EQU   *                                            LD @ZA02814
         SR    CCW2REG,W2REG       SUB ENTRY ADDRESS        LD @ZA02814
         CR    CCW2REG,ICREG       IS DIFF. GR OR EQ WIDTH  LD @ZA02814
         BH    TP03AB3             BR HIGH                  L5 @ZA02845
         B     TP03AB4             BR ON LOW OR EQUAL          @ZA14130
TP03AB3  EQU   *                                            LD @ZA02814
         AR    CCW2REG,W2REG       RESTORE REG              LD @ZA02814
         AR    W2REG,ICREG         ADD WIDTH                LD @ZA02814
         BCT   SAVEREG,TP03AB2     LOOP UNTIL FINISH        LD @ZA02814
         B     TP03STPP            NO COMPARE-USE DECPOLPT  LD @ZA02814
TP03AB4  EQU   *                                            LD @ZA02814
         TM    UCBTYP+DISP3(UCBREG),BISYNCH  TEST FOR BSC   LD @ZA02814
         BNO   TP03AB5             BR NOT BSC               LD @ZA02814
         CLC   DISP0(ONE,W2REG),DCBBSEOT  IS CHAR EOT       LD @ZA02814
         BNE   TP03AB5             CONTINUE                 LD @ZA02814
         SR    W2REG,ICREG         USE LAST NON EOT ENTRY   LD @ZA02814
TP03AB5  EQU   *                                            LD @ZA02814
         LR    CCW2REG,W2REG       RESTORE REG              LD @ZA02814
         B     TP03STOE                                     LD @ZA02814
         EJECT
*
*                           TP OP CODE = 05     POLLING RESTART
         SPACE 3
TP05     SH    CCWREG,K8                BACK UP 1 CCW
         CLI   5(CCWREG),TPWPA          IS THIS WRITE POLLING CHARACTER
         BNE   TP05                     IF NOT, LOOP
         LH    ICREG,6(CCWREG)          LOAD COUNT OF POLLING CHARACTER
         L     WREG,0(CCWREG)           LOAD CURRENT POLLING ADDRESS
         LA    WREG,0(WREG,ICREG)       INCREMENT TO THE CONTROL BYTE
         MVC   WA,ZERO                  RESET POLLING WRAP DECREMENT
TPL      TM    0(WREG),FORMAT+EOL       ARE FORMAT & EOL BITS ON
         BZ    TPR                      IF NOT, BRANCH
         TM    0(WREG),FORMAT           TEST FORMAT BIT
         BO    TPF                      IF ON, BRANCH
         B     POST1ER                  IF NOT THIS IS EOL, GO POST
TPR      TM    IOBFLAG2,RESETPL         TEST RESET P/L
         BO    POST0ER                  IF ON, BRANCH TO POST
STEP1    LA    WREG,1(WREG,ICREG)       STEP TO NEXT ENTRY CONTROL BYTE
         TM    0(WREG),SKIP             TEST SKIP BIT
         BO    TPL                      IF ON, GO TEST EOL & FORMAT
         SR    WREG,ICREG               BACK UP TO POLLING CHARACTERS
         ST    WREG,0(CCWREG)           ST ADDRESS IN CCW
         MVI   0(CCWREG),WRITE          RESTORE WRITE COMMAND
         ST    WREG,DECPOLPT            UPDATE DECB
         CLI   19(UCBREG),TWNTY260      IS DEVICE A 2260
         BNE   REXIT                    IF NOT, RESTART NOW
         SH    CCWREG,K8                IF SO, BACK UP TO WRITE CRCLE C
         B     REXIT                    GO TO RESTART EXIT
POST0ER  LA    WREG,1(WREG,ICREG)       STEP TO NEXT ENTRY
POST1ER  SR    WREG,ICREG               BACK UP TO POLLING CHARACTERS
         TM    17(UCBREG),X'90'         IS THIS DIAL LINE        A25694
         BNZ   POST2ER                  YES, DON'T UPDATE        A25694
         MVC   DECENTRY+1(3),DECPOLPT+1 IF NOT, UPDATE
POST2ER  ST    WREG,DECPOLPT            UPDATE CURRENT POLLING ADDRESS
         OI    DECFLAGS,NEGRESPN        SET ON NEGATIVE RESPONSE BIT
         NI    IOBFLAG1,MASKALL-IOBEX   SET OFF IOB EXCEPTION FLAG
         B     TPXX
TPF      CLC   WA,ZERO                  IS WORK AREA ZERO
         BNE   POST1ER                  IF NOT, ALL ENTRIES ARE SKIP
         LR    W2REG,WREG               SAVE THIS ENTRY ADRS
         MVC   WA,1(WREG)               MOVE LIST DECREMENT TO WA
         AH    WREG,WA                  SET ADDRESS TO START OF LIST -1
         TM    0(W2REG),EOL             WAS LAST ENTRY EOL
         BO    POST0ER                  IF SO, GO POST
         TM    IOBFLAG2,RESETPL         IF NOT, WAS RESET P/L ON
         BO    POST0ER                  IF SO, GO POST
         B     STEP1                    LOOP
TP05AB   TM    17(UCBREG),X'90'         IS THIS DIAL LINE        A25694
         BNZ   TPXX                     YES, DON'T UPDATE        A25694
         MVC   DECENTRY+1(3),DECPOLPT+1 UPDATE DECENTRY
         B     TPXX
         EJECT
*                             TP OP CODE = 06     ADDRESSING RESTART
         SPACE
TP06     CLI   0(CCWREG),X'03'          IS THIS ENTRY FROM ERP     1263
         BNE   CHK2740                  NO, CHECK FOR A 2740       1263
         MVI   0(CCWREG),X'02'          CHANGE NOP TO READ         1263
         MVI   IOBECBPT,CCPER          INDICATE PERM ERROR       A41139
         OI    IOBCSW+4,X'01'           SET ON UNIT EXCEPTION      1263
         B     NOT2740                                             1263
CHK2740  TM    UCBTYP+3(UCBREG),X'E0'   IS THIS TYPE I ADAPTER     1263
         BNZ   NOT2740                  NO, CAN'T BE 2740          1263
         TM    UCBTYP(UCBREG),X'09'    IS THIS 2740B               00MC
         BO    A2740                   YES, TREAT AS 2740          00MC
         TM    UCBTYP(UCBREG),X'0B'     IS THIS 2740 TERMINAL      1263
         BNZ   NOT2740                  NO, NOT A 2740             1263
A2740    EQU   *                                                   00MC
         CLI   DECRESPN,X'76'           IS THIS A CIRCLE Y         1263
         BE    REXITB                   YES, RESTART CHANNEL PROGRA1263
         CLI   DECRESPN,X'40'           THIS A CIRCLE N            1263
         BE    NOT2740                  YES, NORMAL PROCESSING     1263
         CLC   DECRESPN(2),SPACEY       THIS A SPACE + CR Y        1263
         BE    REXITB                   YES, RESTART CHANNEL PROG  1263
         CLC   DECRESPN(2),SPACEN       THIS A SPACE + CR N        1263
         BE    NOT2740                  YES, NORMAL PROCESSING     1263
         CLI   DECRESPN+1,X'40'         CIRCLE N RESPONSE        A27619
         BNE   NOTACK0                  NO, WRITE ERROR MESSAGE  A27619
         TM    DECRESPN,X'F0'           IS STATUS 1, 2, OR 4     A27619
         BZ    NOT2740                  YES, NO MESSAGE REQUIRED A27619
         B     NOTACK0                  NO, WRITE ERROR MESSAGE    1263
NOT2740  TM    IOBCSW+4,X'01'           IF UNIT EXCEPTION          1263
         BZ    NOTUNEX                  NO, BRANCH TO BISYNC    YA03266
         TM    UCBTYP+3(UCBREG),BISYNCH  TEST FO BSC           @ZA03598
         BO    BSCEOT               BRANCH IF BSC              @ZA03598
* TWENTY TWO INSTRUCTIONS REMOVED BY APAR OZ11419              @ZA11419
         B     POST2                                           @ZA03598
BSCEOT   CLC   DECRESPN(1),DCBBSEOT       BSC EOT              @ZA03598
         BE    NOIQE                    YES, SHOULD NOT OCCUR   YA03266
         B     POST2                                        LD @ZA02327
NOTUNEX  EQU   *                                                YA03266
         TM    UCBTYP+3(UCBREG),BISYNCH TEST FOR BSC               000B
         BO    BSCADRS                                             000B
         LR    CCW2REG,CCWREG           SAVE ADDRESS OF READ RESP  000B
TPA8     SH    CCWREG,K8                STEP BACK 1 CCW
         CLI   5(CCWREG),X'03'          IS THIS WRITE ADDRESSING CHAR
         BNE   TPA8                     NO, LOOP
         LH    ICREG,6(CCWREG)          LOAD COUNT OF ADDRESSING CHAR
         L     WREG,0(CCWREG)           LOAD ADRS OF ADDRESSING CHAR
         AR    WREG,ICREG               STEP TO CONTROL BYTE
STEP2    LA    WREG,1(WREG,ICREG)       STEP TO NEXT ENTRY'S CONTROL
         TM    0(WREG),X'40'            TEST SKIP BIT
         BZ    TPL2                     IF OFF, GO SETUP ADRS RESTART
         TM    0(WREG),X'80'            TEST END OF LIST BIT
         BZ    STEP2                    IF OFF LOOP TO NEXT ENTRY
         L     CCWREG,IOBCSW            RESTART CHNL PROG - WRITE DATA
         B     REXIT
BSCADRS  CLC   DECRESPN(1),DCBBSNAK     WAS RESPONSE NAK           000B
         BE    POST2                    IF YES, BRANCH             000B
         CLC   DECRESPN(2),DCBBSSAK     WAS RESPONSE A WACK
         BE    ISWACK
         CLC   DECRESPN(2),DCBBSRVI     WAS RESPONSE RVI           000M
         BE    BSCADRS1            YES INDICATE RVI RECVD   LD @ZA02316
         CLC   DECRESPN(1),DCBBSENQ   TEST FOR ENQ CHAR.    LD @ZA13190
         BNE   CHACK               IF NOT, CHECK FOR ACK    LD @ZA02316
BSCADRS1 EQU   *                                            LD @ZA02316
         NI    DECFLAGS,NEGRESPN   TURN OFF EVERYTHING,     LD @ZA02316
*                                  EXCEPT NEG. RESP. FLAG.  LD @ZA02316
         OI    DECERRST,SNO        SET SHOULD NOT OCCUR     LD @ZA02316
         OI    DECFLAGS,RVIRCV          INDICATE RVI RECEIVED      000M
         NI    IOBFLAG1,MASKALL-IOBEX   TURN OFF IOB EXCEPTION     000M
         B     EXIT
CHACK    EQU   *
         CLC   DECRESPN(2),DCBBSAK0     WAS RESPONSE ACK0          000B
         BNE   NOTACK0                  BRANCH IF NOT ACK0         000B
         MVI   IOBRCVPT,ACK1PT          RESET RCV ACK PTR          000B
         MVI   IOBSNDPT,ACK0PT          RESET SND ACK PTR          000B
         B     REXITA                   RESTART CHANNEL PROGRAM    000B
NOTACK0  OI    IOBCSW+4,CSWUE           SET ON UNIT EXCEPTION      000B
         OI    IOBFLAG1,IOBEX           SET ON IOB EXCEPTION       000B
         B     EXIT                                                000B
TPL2     SR    WREG,ICREG               GET ADDRESS OF ADRS CHARACTERS
         ST    WREG,0(CCWREG)           STORE IN CCW
         MVI   0(CCWREG),X'01'          RESTORE WRITE COMMAND
         ST    WREG,DECADRPT            UPDATE POINTER IN DECB
         AR    WREG,ICREG               ADD BACK FOR CONTROL BYTE
         TM    0(WREG),X'80'            TEST END OF LIST BIT
         BO    TPCC                     IF ON
STEP2A   LA    WREG,1(WREG,ICREG)       STEP TO NEXT ENTRY CTRL BYTE
         TM    0(WREG),X'40'            TEST SKIP BIT
         BZ    REXIT                    IF OFF, EXIT
         TM    0(WREG),X'80'            TEST END OF LIST BIT
         BZ    STEP2A                   IF OFF, LOOP TO NEXT ENTRY
TPCC     TM    UCBTYP+3(UCBREG),BISYNCH TEST FOR BSC               000B
         BO    REXIT1                   IF SO, EXIT                000B
         OI    4(CCW2REG),X'40'         SET ON CC FLAG             000B
         B     REXIT
POST2    OI    DECFLAGS,NEGRESPN        SETON NEG RESPONSE BIT
         NI    IOBFLAG1,MASKALL-IOBEX   SET OFF IOB EXCEPTION FLAG
         B     TPXX
ISWACK   EQU   *
         OI    DECFLAGS,WACKRCV         INDICATE WACK WAS RECEIVED
         B     TPXX
         SPACE 3
*                           TP OP CODE # 09     AUTOPOLL NOP       000A
TP09AB   EQU   *                                                   000A
TP09     LR    CCW2REG,CCWREG                                      000A
         SH    CCW2REG,K8               SUBTRACT 8 TO GET ADDRESS  000A
         L     WREG,0(CCW2REG)     OF POLL COMMAND AND LOAD POLL   000A
*                                  ADDRESS.                        000A
         AH    WREG,6(CCW2REG)          ADD COUNT FROM POLL        000A
*    COMMAND - WREG WILL NOW POINT AT THE BYTE FOLLOWING THE LAST  000A
*    ACTIVE ENTRY IN THE LIST.                                     000A
         L     W2REG,DECPOLPT           LOAD POLLING LIST ADDRESS. 000A
         BCTR  W2REG,0                  SUBTRACT ONE TO POINT AT   000A
*                                  FLAG BYTE.                      000A
         IC    ICREG,0(W2REG)           PICK UP FLAG BYTE AND      000A
         SRL   ICREG,5             SHIFT OUT ALL BUT ENTRY WIDTH.  000A
         CH    ICREG,K1            IF NNN IS 0 OR 1, THAT MEANS YA01016
         BH    TP09AB1             8 OR 9, SO ADD 8 TO MAKE IT  YA01016
         LA    ICREG,8(ICREG)      CORRECT                      YA01016
TP09AB1  EQU   *                                                YA01016
         SR    WREG,ICREG               SUBTRACT ENTRY WIDTH TO    000A
*                             GET ADDRESS OF LAST ENTRY IN LIST.   000A
         TM    UCBTYP+3(UCBREG),BISYNCH  TEST FOR BSC            000J
         BNO   TP09BA                         NO,  PROCEED         000J
         BCTR  WREG,0                    SUBTRACT ONE TO ALLOW FOR 000J
*            EOT OF DUMMY ENTRY  // PTS TO LAST ACTIVE ENTRY       000J
TP09BA   EQU   *                                                   000J
         ST    WREG,DECENTRY            UPDATE DECENTRY.           000A
         BCTR  ICREG,0                  DECREMENT ENTRY WIDTH TO   000A
*                             GET NUMBER OF POLLING CHARACTERS.    000A
         TM    UCBTYP+3(UCBREG),BISYNCH  TEST FOR BSC          @ZA14130
         BNO   TP09ABC                   NOT BSC, BRANCH       @ZA14130
         L     WREG,DECPOLPT
TP09ABC   EQU   *
         IC    ICREG,0(ICREG,WREG)      GET INDEX BYTE AND SAVE IN 000A
         STC   ICREG,DECPOLPT      HIGH ORDER BYTE OF DECPOLPT.    000A
         OI    DECFLAGS,NEGRESPN   SET ON NEGATIVE RESPONSE BIT.   000A
         SPACE 1
*    *    *    *    *    *    *    *    *    *    *    *    *    *    *
         MVI   EXITAP+1,BRANCH          CHANGE NOP TO AN           000A
*    UNCONDITIONAL BRANCH TO BYPASS UPDATING DECENTRY AND POLPT.   000A
*    *    *    *    *    *    *    *    *    *    *    *    *    *    *
         SPACE 1
         B     TPXX                                                000A
         SPACE 2
*                                       TP OP CODE = 0A READ INDEX
TP0A     EQU   *                                                 A25689
         SPACE 2
TP0AAB   L     WREG,0(CCWREG)           LOAD ADDRESS OF MESSAGE    000C
         MVC   DECPOLPT(1),0(WREG)      SAVE INDEX BYTE            000C
         B     TPXX                                                000C
         EJECT
*                             TP OP CODE = 0B READ INQUIRY
         SPACE 1
TP0B     CLC   DECRESPN(1),DCBBSENQ     TEST FOR INQ CHAR          000B
         BNE   RESETST                  IF NOT, BRANCH             000B
         CLI   DECTYPE+1,RDINQ          OPERATION READ INQUIRY     000B
         BE    ACKSET                YES, SET ACKS AND EXIT    @ZA04196
         CLI   DECTYPE+1,RDINQMON       RD INQUIRY MONITOR       S99245
         BE    ACKSET                YES, SET ACKS AND EXIT    @ZA04196
         CLI   DECTYPE+1,WRWBT          WRITE WAIT BEFORE XMIT     000B
         BE    EXIT                     IF SO, EXIT                000B
         MVI   IOBRCVPT,ACK1PT          RESET RCV ACK POINTER      000B
         MVI   IOBSNDPT,ACK0PT          RESET SND ACK POINTER      000B
         NI    11(CCWREG),FULWORD      CCW ADDRES S TO ACK-0       000B
         CLI   DECTYPE+1,RDININQ        OPERATION READ INIT INQ    000B
         BE    EXIT                     IF SO, EXIT                000B
         CLI   DECTYPE+1,WRRST                                     000B
         BNE   NOWRRST                  NO, CONTINUE            YA02453
         NI    IOBINCAM,STRVIRPT        RESET RVI SWITCH        YA02453
         B     EXIT                     EXIT                    YA02453
ACKSET   EQU   *                                               @ZA04196
         TM    UCBTYP+ONE(UCBREG),BSC2      BSC2 ?             @ZA04196
         BNO   EXIT                     EXIT                   @ZA04196
         MVI   IOBRCVPT,ACK1PT         RESET RCV ACK           @ZA04196
         MVI   IOBSNDPT,ACK0PT          RESET SEND ACK         @ZA04196
         B     EXIT                     EXIT                   @ZA04196
NOWRRST  EQU   *                                                YA02453
         CLI   DECTYPE+1,WRRSTMON       WRT RESET MONITOR        S99245
         BE    EXIT                     IF SO, EXIT              S99245
*
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*                                                                    *
*  THIS ROUTINE IS USED TO SET THE UCBINHIO BIT IN THE UCB COMMON    *
*  EXTENTION X'05', WHICH INHIBITS HIO WHEN IN RECEIVE STATUS        *
*                                                                    *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*
RSTRT    EQU   *                                                 Y02947
         L     W2REG,UCBEXTPT(UCBREG)   GET ADD OF UCB EXT     @ZA15402
         L     WREG,4(W2REG)            GET 4 BYTES OF UCB EXT @ZA15402
TRYSET   LR    IOBREG,WREG              GET SAME 4 BYTES       @ZA15402
         O     IOBREG,SETMSK            SET MSK UCBINHIO BIT   @ZA15402
         CS    WREG,IOBREG,4(W2REG)     SET UCBINHIO BIT IF OK @ZA15402
         BNE   TRYSET                   TRY AGAIN              @ZA15402
         L     IOBREG,DISP16(SAVEAREA)  RESTORE IOBREG         @ZA15402
*                                                                    *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
*
         B     REXITA                                              000B
RESETST  EQU   *
         CLI   DECTYPE+1,RDINQMON       RD INQ. MON. (TQM)     @ZA15430
         BE    RESETST1                 YES, CHECK EOT RESP.   @ZA15430
         CLI   DECTYPE+1,RDINQ          READ INQ.  (TQ)        @ZA15430
         BE    RESETST1                 YES, CHECK EOT RESP.   @ZA15430
         CLI   DECTYPE+1,WRWBT                                   A26901
         BE    RESETST1                                          A26901
         CLI   DECTYPE+1,WRRSTMON       WRT RESET MONITOR        S99245
         BE    RESETST1                 YES, CHECK FOR RESP      S99245
         CLI   DECTYPE+1,WRRST                                   A26901
         BNE   SETINQER                                          A26901
RESETST1 NI    IOBFLAG1,MASKALL-IOBEX  SET OFF IOB EXCEPTION     A26901
         CLC   DECRESPN(1),DCBBSEOT     WAS EOT RECEIVED IN RESP   000B
         BNE   DLEEOTST                 IF NOT, BRANCH             000B
         MVI   IOBRCVPT,ACK0PT          RESET RECEIVE ACK POINTER  000B
         MVI   IOBSNDPT,ACK0PT          RESET SEND ACK POINTER     000B
         B     EXIT                                                000B
DLEEOTST CLC   DECRESPN(2),DCBBSDLE                                000B
         BE    EXIT                                                000B
SETINQER OI    IOBCSW+4,CSWUE           SET ON UNIT EXCEPTION      000B
         OI    IOBFLAG1,IOBEX           SET ON IOB EXCEPTION       000B
         B     EXIT                                                000B
         SPACE 2
*   TWO LINES OF CODE REMOVED BY APAR------------------------->@ZA14130
         SPACE 3
*                             TP OP CODE = 0C READ RESP TO INQ
         SPACE 1
TP0C     CLC   DECRESPN(2),DCBBSAK0     TEST FOR ACK0              000B
         BNE   AORESP                   IF NOT, BRANCH             000B
         NI    IOBINCAM,STRVIRPT        RESET RVI SWITCH
         MVI   IOBRCVPT,ACK1PT          RESET RCV ACK POINTER      000B
         MVI   IOBSNDPT,ACK0PT          RESET SND ACK POINTER      000B
         TM    5(CCWREG),X'80'          IS THIS LAST CCWIN CH.PGM  000H
         BO    EXIT                     YES, EXIT TO POST          000H
         B     REXITA                   RESTART THE NXT CCW    @ZA14130
AORESP   CLC   DECRESPN(2),DCBBSSAK     CHECK FOR WACK
         BE    SETIMPRP                                            000B
         CLC   DECRESPN(1),DCBBSEOT     CHECK FOR EOT              000B
         BE    EOTRESP                                             000B
         CLC   DECRESPN(1),DCBBSENQ    CHECK FOR ENQ             A43796
         BE    ENQON                                             A43796
NOENQ    OI    IOBCSW+4,CSWUE          SET ON UNIT EXCEPTOON     A43796
         OI    IOBFLAG1,IOBEX           SET ON IOB EXCEPTION       000B
         B     EXIT                                                000B
ENQON    TM    DCBXCODE,DCBMASTA       THIS THE MASTER STATION?  A43796
         BNO   NOENQ                                             A43796
         OI    DECFLAGS,SLVCONT        INDICATE CONTENTION       A43796
         MVI   IOBECBPT,CCPER                                    A43796
         B     NOENQ                                             A43796
EOTRESP  NI    IOBFLAG1,MASKALL-IOBEX   SET OFF IOB EXCEPTION      000B
SETIMPRP OI    DECFLAGS,WACKRCV         INDICATE WACK RECEIVED
         B     EXIT                     EXIT                       000B
         EJECT
*                             TP OP CODE = 10,11  READ OR WRITE DATA
         SPACE
TP10     CLI   0(CCWREG),X'01'          IS COMMAND WRITE
         BNE   NOTWRT                   NO, BRANCH             @ZA14130
         TM    UCBTYP+3(UCBREG),X'E0'   ADAPTER TYPE I           A26916
         BNZ   WRITDATA                 NO, BRANCH             @ZA14130
         TM    UCBTYP(UCBREG),X'04'     IS IT A 2740 OR 2741?  @ZA14130
         BZ    WRITDATA                 NO, BRANCH             @ZA14130
         TM    UCBTYP(UCBREG),X'03'     IS IT A 2740?          @ZA14130
         BNM   WRITDATA                 NO ITS A 2741, BRANCH  @ZA14130
         TM    IOBCSW+4,X'01'           UNIT EXCEPTION           A26916
         BZ    WRITDATA                                          A26916
         NI    IOBINCAM,MASKALL-BUSY    SET OFF BUSY BIT         A26916
         MVI   IOBECBPT,CCPER           SET ERROR COMPLETION     A26916
         NI    IOBFLAG1,MASKALL-IOBEX   TURN OFF IOB EXCEPTION   A26916
         OI    DECFLAGS,X'02'                                    A26916
         B     EXIT                                              A26916
NOTWRT   EQU   *                                                 A26916
         NI    IOBFLAG1,X'FB'           AND OFF IOB EXCEPTION FLAG
TP10AB   EQU   *                                                   000I
*                                       TEST FOR 2741              000I
         TM    UCBTYP+3(UCBREG),X'E0'   ADAPTER TYPE 1?
         BNZ   BSCTST                   NO, BRANCH             @ZA14130
*                                                           LD @ZA02322
*              2 LINES REMOVED FOR ----->                   LD @ZA02322
*                                                           LD @ZA02322
         TM    UCBTYP(UCBREG),X'04'     IS IT A 2740 OR 2741?  @ZA14130
         BZ    BSCTST                   NO, BRANCH             @ZA14130
         TM    UCBTYP(UCBREG),X'03'     IS IT A 2740?          @ZA14130
         BNM   BSCTST                   NO ITS A 2741,BRANCH   @ZA14130
         TM    IOBSENS0,X'40'           INTERVENTION REQUIRED      000I
         BO    EXITBRK                  SCHEDULE 2741 BREAK ROUTINE000I
*                                                                  000I
BSCTST   EQU   *                                                   000I
         CLI   0(CCWREG),X'01'          IS COMMAND WRITE           000I
         BE    TPXX                                                000I
         TM    UCBTYP+3(UCBREG),BISYNCH TEST FOR BSC               000B
         BNO   TSTDYNBF                 IF NOT, BRANCH             000B
         LH    W2REG,6(CCWREG)          GET ORIGINAL CCW COUNT
         CH    W2REG,IOBCSW+6           COMPARE TO RESIDUAL COUNT
         BE    CKENDETX                                          A30765
BSCTST1  L     WREG,DECAREA            LOAD THE AREA ADDRESS     A43780
         TM    DCBBFTEK,DYNBF           TEST FOR DYNAMIC BUFFERING 0143
         BZ    CHKEOT                                              0143
         AH    WREG,K4                  ADD FOUR                   0143
CHKEOT   CLI   IOBCPA,POLL             MULTIPOINT RD INITIAL?    A38573
         BE    CHKEOT1                 YES, CHECK FOR EOT        A38573
         CLC   0(1,WREG),DCBBSEOT      IS 1ST CHARACTER EOT?     A38573
         BE    EOTRCV                  IF SO, BRANCH               0143
         CLC   0(2,WREG),DCBBSDLE       ARE FIRST CHARS DLE-EOT    0143
         BE    EOTRCV                   IF SO, BRANCH              0143
IBCTEST  EQU   *                                                YA01239
         TM    DCBBFTEK,DYNBF           DYNAMIC BUFFERING?      YA01239
         BZ    NOTEOT                   BRANCH AROUND IBC TEST  YA01239
         TM    DCBXMODE,INTBLCHK        IBC MODE?               YA01239
         BZ    NOTEOT                   NO, BRANCH OUT          YA01239
         BCTR  W2REG,0                  SUBTRACT ONE            YA01239
         CH    W2REG,IOBCSW+6           ARE COUNTS EQUAL?       YA01239
         BE    CKENDETX                 YES, CHECK FOR END      YA01239
NOTEOT   EQU   *                                                   000M
         BAL   W2REG,FINDADDR           FIND RESPONSE ADDR         0143
         TM    DCBXMODE,INTBLCHK        INTERMED BLOCK CHK         0143
         BZ    CHKETB                   NO, BRANCH                 0143
         BCTR  WREG,0                   BACK UP ONE BYTE           0143
CHKETB   CLC   1(1,WREG),DCBBSETB       ENDING CHAR ETB            0143
         BE    UPDACK                   YES, UPDATE ACK POINTERS   0143
         CLC   1(1,WREG),DCBBSETX       ENDING CHAR ETX            0143
         BE    UPDACK                   YES, UPDATE ACK POINTERS   0143
CNTERR   OI    IOBCSW+4,CSWUE           SET ON UNIT EXCEPTION
         OI    IOBFLAG1,IOBEX           SET ON IOB EXCEPTION       000B
         B     TSTDYNBF                                            000B
CHKEOT1  CLC   1(1,WREG),DCBBSEOT      2ND BYTE EOT?             A38573
         BNE   IBCTEST                  NO, CONTINUE            YA01239
EOTRCV   MVI   IOBRCVPT,ACK0PT          RESET RCV ACK POINTER      000B
         MVI   IOBSNDPT,ACK0PT          RESET SND ACK POINTER      000B
         B     TSTDYNBF                                            000B
CKENDETX EQU   *                   END OF READ TEST             YA01026
         LR    W2REG,CCWREG        GET CCW ADDR                 YA02164
         TM    DCBBFTEK,DYNBUF     DYNAMIC BUFFERING?           YA01026
         BO    DYNBFETX            YES, GOHECK OPERATION        YA01026
         SH    W2REG,K8            BACK UP ONE CCW              YA01026
         CLI   5(W2REG),RDRESP     READ RESPONSE                YA01026
         BE    SEEIFETX            YES, NOW CHECK FOR ETX       YA01026
         AH    W2REG,K8            RESTORE CCW PTR              YA01026
         B     CNTERR              GO SET ERROR FLAGS           YA01026
DYNBFETX EQU   *                   DYNAMIC BUFFERING            YA01026
         CLI   5(W2REG),RDTEXT1    FIRST READ TEXT              YA01026
         BNE   NORMDNBF            NO, PROCESS NORMALLY         YA01026
         SH    W2REG,K8            YES, BACK UP ONE CCW         YA01026
         CLI   5(W2REG),RDRESP     READ RESPOSE?                YA01026
         BE    SEEIFETX            YES, GO SEE IF ETX           YA01026
*                        ONE LINE OF CODE REMOVED BY---------->@ZA14130
NORMDNBF EQU   *                   NOT READ RESPONSE            YA01026
         L     W2REG,8(CCWREG)     ADR OF PREVIOUS              YA01026
SEEIFETX EQU   *                   CHECK FOR ETX                YA01026
         LH    WREG,6(W2REG)           COUNT OF PREVIOUS CCW     A30765
         L     W2REG,0(W2REG)          ADDRESS OF PREVIOUS BUFFERA30765
         AR    W2REG,WREG              ADJUST TO END OF BUFFER   A30765
         BCTR  W2REG,0                 POINT TO LAST CHARACTER   A30765
         TM    DCBXMODE,INTBLCHK       INTERMEDIATE BL CHECK     A30765
         BZ    CKEDETX2                                          A30765
         BCTR  W2REG,0                 YES, ADJUST POINTER       A30765
CKEDETX2 CLC   0(1,W2REG),DCBBSETX     ETX IS LAST               A30765
         BE    UPDACK                  UPDATE ACK POINTER        A30765
         CLC   0(1,W2REG),DCBBSETB     ETB IS LAST               A30765
         BNE   CNTERR                  NO, ERROR                 A30765
UPDACK   TM    IOBFLAG1,IOBEX           IS IOB EXCEPTION ON        000F
         BO    TSTDYNBF                 YES, BRANCH                000F
         XI    IOBSNDPT,FLIP            UPDATE ACK POINTER         000F
         NI    DECFLAGS,FOXE       TURN OFF STX-ENQ IF ON   LD @ZA02314
         CLI   DECTYPE+1,X'16'          WRITE INQUIRY ?        @ZA31183
         BE    FLIPRCV                  UPDATE ACK POINTER     @ZA31183
         TM    DECTYPE+1,WRTIV          WRITE INITIAL CONVERS      000B
         BNO   TSTDYNBF                 IF NOT, BRANCH             000B
FLIPRCV  EQU   *
         XI    IOBRCVPT,FLIP            UPDATE ACK POINTER         000B
FLAGOFF  NI    DECFLAGS,OKACK           TURN OFF WRONG RESP      A38550
TSTDYNBF TM    DCBBFTEK,DYNBF           TEST DYNAMIC BUFFERING     000B
         BZ    CHKONLT                  IF NOT, CHECK ONLINE TEST  000D
         IC    ICREG,DEBNMEXT(DEBREG)   LOCATE POINTER TO BUFFER ROUT
         SLL   ICREG,2
         LA    BRREG,DEBUCBAD(ICREG,DEBREG) GET BUFFER ROUTINE @ZA14130
*                           ADDRESS FROM DEB                   @ZA14130
         SR    ICREG,ICREG                                         000B
         CLI   8(CCWREG),READ           HAS NEXT BUFFER BEEN       000B
         BE    TPPR                ASSIGNED?  IF NOT, BRANCH.      000B
         CLI   8(CCWREG),TICCMND        IS CCW TIC COMMAND       A27615
         BNE   CHKONLT                  CK FOR ONLINE TST      12121212
         L     BRREG,0(BRREG)           LOAD ADRS OF BUFFER ROUTINE
         L     CCW2REG,8(CCWREG)        IF SO RELEASE THE BUFFER
         CLC   1(3,CCW2REG),K4-1        HAS BUFFER ALREADY BEEN RELEASD
         BE    CHKONLT                  TST FOR ONLINE TST     12121212
         L     ZREG,0(CCW2REG)          LOAD THE BUFFER ADDRESS
         MVC   1(3,CCW2REG),K4-1        MOVE 4 OTHER CCW RD ADRS
         N     ZREG,MASKDB
         SH    ZREG,K4
         LR    ICREG,DCBREG             LOAD DCB ADRE INTO REG 1
         LR    WREG,SAVEAREA            SAVE IOS SAVEAREA ADDR   YM4063
         LA    SAVEAREA,SAVE19MS        SAVE AREA ADDR FOR 19MS  YM4063
         BALR  RETREG,BRREG             LINK TO RELEASE BUFFER ROUTINE
         LR    SAVEAREA,WREG         RESTORE IOS SAVEAREA ADDR   YM4063
         L     BAS2REG,DISP4(SAVEAREA)  RESTORE                  Y02947
         A     BAS2REG,FOURK                    SECOND BASE      Y02947
         SR    ICREG,ICREG                                         000A
         B     CHKONLT                  TST FOR ONLINE TST     12121212
WRITDATA TM    4(CCWREG),PCI            IS THERE A WRITE TIC LOOP  3712
         BZ    TPXX                     IF NOT, GO POST            3712
         LR    CCW2REG,CCWREG           SAVE CCW POINTER           3712
         SH    CCW2REG,K16              POINT BACK TWO CCWS        3712
         CLI   8(CCW2REG),TICCMND       IS CCW A TIC               3712
         BE    CHKOTHER                 IF SO, BRANCH              3712
         TM    29(CCWREG),TPEOCP        END OF CHANNEL PROGRAM     3712
         BO    TPXX                     IF SO, POST                3712
         B     LOADCCW                                             3712
CHKOTHER TM    13(CCWREG),TPEOCP        END OF CHANNEL PROGRAM     3712
         BO    TPXX                     IF SO, POST                3712
LOADCCW  L     CCWREG,8(CCWREG)         GET ADDRESS OF CCW         3712
         B     REXIT                    POST FROM LAST CCW         3712
TPPR     L     WREG,8(CCWREG)           LOAD ADRS OF NEXT RD COMMAND
         C     WREG,4(BRREG)            IS IT 1ST IN QUEUE
         BNE   NOT1ST
         MVC   4(4,BRREG),0(WREG)       IF SO, PLACE NEXT RD AS 1ST
         B     TP4POST
NOT1ST   L     W2REG,4(BRREG)           IF NOT 1ST, LOAD ADRS OF 1ST
NXTCMP   C     W2REG,ZERO               IS IT ZERO
         BNE   NXTCMP1             IF NOT, BRANCH.                 1838
         TM    5(CCWREG),TPFPCI         FIRST TIME PCI ON          3712
         BZ    NXTCMP2                  NO, BRANCH               A32477
         TM    IOBINCAM,ONLTT           ONLTT REQUESTED          A32477
         BZ    TP4POST                  NO, BRANCH               A32477
NXTCMP2  EQU   *                                                 A32477
         TM    15(CCWREG),X'01'        CHECK FOR PREVIOUS PCI      1265
         BO    TP4POST                 IF SO, DO NOT POST BUFFER   1265
         LR    CCW2REG,CCWREG           SAVE CCW ADDRESS           3712
         L     CCWREG,8(CCW2REG)        LOAD ADDRESS PREVIOUS READ 3712
         BAL   UCBREG,BFRPOST           POST BUFFER                3712
         LR    CCWREG,CCW2REG           RESTORE CCW ADDRESS        3712
         L     WREG,8(CCWREG)           ADDRESS OF NEXT READ       3712
         B     TP4POST                                             3712
NXTCMP1  C     WREG,0(W2REG)            IS NEXT ENRY MATCH         1838
         BE    FOUND                    IF SO, BRANCH
         L     W2REG,0(W2REG)           IF NOT, LOAD THE NEXT ENTRY
         B     NXTCMP                   CONTINUE LOOP
FOUND    MVC   0(4,W2REG),0(WREG)       REMOVE ENTRY FROM QUEUE
         C     WREG,8(BRREG)            WAS IT LAST ENTRY
         BNE   TP4POST                  IF NOT, BRANCH
         ST    W2REG,8(BRREG)           IF SO, UPDATE LAST ENTRY ADRS
TP4POST  MVC   1(3,WREG),K4-1           MOVE 4 TO OTHER CCW RD ADRS
         L     UCBREG,IOBCSW           LOAD CSW                  A32477
         SH    UCBREG,K8               BACK UP TO FAILING CCW    A32477
         TM    5(UCBREG),X'12'         IS THIS READ SKIP CCW     A32477
         BNO   CHKONLT                 NO TST FOR ONLINE TST   @ZA14130
*                ONE LINE DELETED BY-------------------------->@ZA14130
TP3POST1 BAL   UCBREG,BFRPOST           POST CURRENT BUFFER    @ZA14130
         TM    IOBCSW+4,X'F2'           ANY ERRORS                 3712
         BNZ   ABNORM                   IF SO, BRANCH              3712
         TM    IOBFLAG1,IOBEX           IS IOB EXCEPTION ON        000D
         BO    EXIT                     IF SO, EXIT                000D
         TM    DECTYPE+1,RESET          WAS RESET SPECIFIED        000D
         BZ    EXIT                                              A32477
DIS      LA    CCWREG,8(CCWREG)        STEP TO NEXT CCW
         TM    5(CCWREG),TPRESET       IS THIS A RESET COMMAND
         BO    TESTEOT                 YES, BRANCH TO TEST FOR EOT
         TM    5(CCWREG),X'80'          IS THIS LAST CCW
         BO    EXIT                     YES, EXIT
         B     DIS
TESTEOT  TM    IOBCSW+4,CSWUE          WAS AN EOT RECEIVED
         BZ    REXIT                   NO, BRANCH TO RESTART
         TM    5(CCWREG),TPEOCP        IS THIS LAST CCW
         BO    EXIT                    YES, EXIT
         LA    CCWREG,8(CCWREG)        STEP TO NEXT CCW (DISABLE
         B     REXIT                   COMMAND), AND BRANCH TO RESTART
ABNORM   OI    IOBFLAG1,IOBEX          SET ON IOB EXCEPTION        3712
         B     EXIT                                                3712
         SPACE 3
*                             TP OP CODE = 01     ENABLE COMPLETE
         SPACE
TP01     TM    UCBTYP+3(UCBREG),BISYNCH IS IT BSC OPERATION        000B
         BO    TPXX                    YES, EXIT                   000B
         CLI   0(CCWREG),X'27'          ENABLE CCW                 000B
         BNE   TPXX                     IF NOT, BRANCH
         CLI   IOBECBCC,X'48'           IS INTERRUPT FROM HIO
         BNE   HIO                      NO, RESTART CHANNEL PROGRAM
         B     TPXX                     POST BUFFER
HIO      EQU   *                                                 Y02947
         LA    CCWREG,8(CCWREG)
         B     REXIT
*---------------------------------------------------------------------
         SPACE 3
*                             TP OP CODE = 07     COMPARE TWX IDENT
         SPACE
TP07     LH    ICREG,6(CCWREG)          LOAD IDENT COUNT
         L     WREG,0(CCWREG)           LOAD ADDRESS OF IDENT CHAR
         L     SAVEREG,DECENTRY         LOAD LIST ADDRESS          000L
         L     UCBREG,REG7(SAVEAREA)  PRIME UCB REG              Y02947
         TM    UCBTYP+THREE(UCBREG),BISYNCH     BSC ?          @ZA04195
         BNO   NOACKSET                 NO DON'T SET ACKS      @ZA04195
         MVI   IOBRCVPT,ACK1PT          RESET RCV ACK          @ZA04195
         MVI   IOBSNDPT,ACK0PT          RESET SEND ACK         @ZA04195
NOACKSET EQU   *                                               @ZA04195
         CLI   0(SAVEREG),SWLST         IS THIS A SWLST            000L
         BE    SWITCH                                              000L
         CLI   0(SAVEREG),FOXE                                     000L
         BNE   NOTSW                                               000L
         MVI   0(SAVEREG),SWLST                                    000L
         B     TURNON                                              000L
SWITCH   EQU   *                                                   000L
         SR    SAVEREG,SAVEREG          CLEAR REGISTER             000L
         SH    WREG,K8                  SUBTRACT 8 FROM AREA ADDR  000L
         MVC   1(3,WREG),ZERO3          RESET ADDRESS FIELD        000L
         LA    W2REG,8(WREG,ICREG)      POINT TO DIAL DIGITS       000L
         IC    ICREG,7(WREG)            GET DIAL COUNT             000L
         AR    W2REG,ICREG              ADD TO LENGTH OF HEADER    000L
         IC    ICREG,0(W2REG)           GET ID COUNT               000L
         LA    W2REG,1(ICREG,W2REG)     POINT TO AUTHORIZED SEQ    000L
         SH    CCWREG,K8                POINT TO PREVIOUS CCW      000L
         CLI   5(CCWREG),TPWIDENQ       IS THIS WRITE ID ENQ       000L
         BE    WRTC                                                000L
         AH    CCWREG,K8                POINT BACK TO CURRENT CCW  000L
         IC    SAVEREG,4(WREG)          GET NO. OF LIST ENTRIES    000L
COMPR    EQU   *                                                   000L
         LH    ICREG,6(CCWREG)          LOAD RD-IN-AREA LENGTH     000L
         SH    ICREG,IOBCSW+6           SUBTRACT RESIDUAL COUNT    000L
         BCTR  ICREG,0                  SUBTRACT ONE FROM COUNT    000L
         EX    ICREG,COMSEQ             COMPARE SEQUENCES          000L
         BE    GOODID                                              000L
         IC    ICREG,5(WREG)            GET ENTRY LENGTH           000L
         LA    W2REG,0(ICREG,W2REG)     POINT TO NEXT SEQUENCE     000L
         BCT   SAVEREG,COMPR                                       000L
         CLC   8(1,WREG),DCBBSENQ       WAS ENQ RECEIVED           000L
         BE    EXIT                                                000L
DLEEOTCK EQU   *                                                   000L
         CLC   8(2,WREG),DCBBSDLE       WAS DLEEOT RECEIVED        000L
         BE    ISDLEEOT                                            000L
         OI    DECFLAGS,NOCOMPAR        INDICATE INVALID ID        000L
         B     NOMATCH                                             000L
ISDLEEOT EQU   *                                                   000L
         OI    DECFLAGS,EOTRCVD         INDICATE DLE EOT RECEIVED  000L
         CLI   DECTYPE+ONE,WRTTC        WRITE CONNECT ?        @ZA04190
         BNE   TPXX                     NO ,BRANCH             @ZA04190
         NI    IOBFLAG1,MASKALL-IOBEX   TURN OFF IOB EXECPTION @ZA04190
         B     TPXX                                                000L
COMSEQ   CLC   8(0,WREG),0(W2REG)                                  000L
GOODID   EQU   *                                                   000L
         ST    W2REG,0(WREG)            STORE ENTRY ADDRESS        000L
         MVI   0(WREG),SWLST            INDICATE SWLST             000L
         BAL   SAVEREG,IDMOVE           SAVE ID OF BSC2        @ZA04192
***         FIVE LINES OF CODE DELETED                         @ZA04192
         IC    ICREG,5(WREG)            GET ENTRY LENGTH           000L
         BCTR  ICREG,0                  SUBTRACT ONE FROM LENGTH   000L
         LA    W2REG,0(ICREG,W2REG)     POINT TO CONTROL BYTE      000L
         CLI   0(W2REG),ONE             IS CONTROL BYTE 1          000L
         BNE   NOTONE                                              000L
         MVC   1(3,WREG),ZERO3          ZERO OUT ADDRESS FIELD     000L
***           TWO LINES REMOVED BY---------------------------->@ZA14130
         LA    CCWREG,24(CCWREG)        DISCONNECT LINE            000L
         B     REXIT                                               000L
NOTONE   EQU   *                                                   000L
         CLI   0(W2REG),TWO             IS CONTROL BYTE VALUE 2    000L
         BNE   REXITB                                              000L
         B     EXIT                                                000L
WRTC     EQU   *                                                   000L
         AH    CCWREG,K8                POINT BACK TO PRESENT CCW  000L
         CLC   8(2,WREG),DCBBSSAK       WAS WACK RECEIVED          000L
         BNE   NOTWACK                  IF NOT, BRANCH             000L
         OI    DECFLAGS,WACKRCV         INDICATE WACK              000L
TURNON   EQU   *                                                   000L
         MVI   IOBCPA+5,CONNECT         INDICATE LINE CONNECTION   000L
         B     TPXX                                                000L
NOTWACK  EQU   *                                                   000L
         CLC   8(2,WREG),DCBBSAK0       WAS ACK0 RECEIVED          000L
         BNE   NOACK0                                              000L
*           TWO LINES OF CODE DELETED                          @ZA04195
         B     EXIT                                                000L
NOACK0   EQU   *                                                   000L
         CLC   8(1,WREG),DCBBSNAK       WAS NAK RECEIVED           000L
         BNE   NOTNAK                                              000L
         OI    DECFLAGS,IMPRESP         INDICATE NOT ACK           000L
         B     TURNON                                              000L
NOTNAK   EQU   *                                                   000L
         LA    CCW2REG,8(WREG)          GET ADDR OF READ-IN-AREA   000L
         AH    CCW2REG,6(CCWREG)        ADD ORIGINAL COUNT         000L
         SH    CCW2REG,IOBCSW+6         SUBTRACT RESIDUAL COUNT    000L
         BCTR  CCW2REG,0                SUBTRACT ONE TO PT TO CHAR 000L
         CLC   0(1,CCW2REG),DCBBSNAK    IS THIS ID-NAK             000L
         BE    IDNAK                                               000L
         BCTR  CCW2REG,0                                           000L
         CLC   0(2,CCW2REG),DCBBSAK0    IS THIS ID-ACK0 SEQUENCE   000L
         BNE   DLEEOTCK                                            000L
IDNAK    EQU   *                                                   000L
         LA    ICREG,8(WREG)            GET ADDR OF READ-IN-AREA   000L
       SR      CCW2REG,ICREG            GET LENGTH OF ID           000L
         BCTR  CCW2REG,0                SUBTRACT ONE               000L
         SR    ICREG,ICREG              CLEAR REGISTER             000L
*             5 LINES DELETED FOR THE FOLLOWING APAR            YA02448
         IC    SAVEREG,4(WREG)          GET NO. OF LIST ENTRIES    000L
COMPAGIN EQU   *                                                   000L
         EX    CCW2REG,COMSEQ           COMPARE SEQUENCES          000L
         BE    GOODSEQ                                             000L
         IC    ICREG,5(WREG)            GET ENTRY LENGTH           000L
         LA    W2REG,0(ICREG,W2REG)     POINT TO NEXT SEQUENCE     000L
         BCT   SAVEREG,COMPAGIN                                    000L
         OI    DECFLAGS,NOCOMPAR                                   000L
NOMATCH  OI    IOBCSW+4,CSWUE           SET UNIT EXCEPTION         000L
         OI    IOBFLAG1,IOBEX          SET IOB EXCEPTION           000L
         B     TPXX                                                000L
GOODSEQ  LA    SAVEREG,DONTSAVE         SET RET REG            @ZA04192
IDMOVE   TM    UCBTYP+DISP1(UCBREG),BSC2 IS THIS BSC2?         @ZA04192
         BNO   NOSAVE                   NO, DO NOT SAVE ID     @ZA04192
         SR    UCBREG,UCBREG            CLEAR WORK REG         @ZA04192
         IC    UCBREG,DCBEIOBX          GET IOB LENGTH         @ZA04192
         SH    UCBREG,K8                DISP FOR SAVE AREA     @ZA04192
         AR    UCBREG,IOBREG            ID SAVE AREA           @ZA04192
         MVC   K0(ID4BYTES,UCBREG),IDDISP(WREG)                @ZA04192
*                     SAVE 1ST 4 CHARACTERS OF TERMINAL ID     @ZA04192
         L     UCBREG,REG7(SAVEAREA)    RESTORE UCB REG        @ZA04192
NOSAVE   BR    SAVEREG                 RETURN                  @ZA04192
DONTSAVE EQU   *                                                YA02448
         ST    W2REG,0(WREG)            STORE ADDRESS OF ENTRY     000L
         MVI   0(WREG),SWLST            INDICATE SWLST             000L
         LA    W2REG,8(WREG)            LOAD ADDRESS OF RD-IN-AREA 000L
         AR    CCW2REG,W2REG                                       000L
         LA    CCW2REG,1(CCW2REG)                                  000L
         CLC   0(1,CCW2REG),DCBBSNAK    WAS IT ID-NAK              000L
         BE    GETLEN                                              000L
         MVI   IOBRCVPT,ACK1PT          RESET RCV ACK POINTER      000L
         MVI   IOBSNDPT,ACK0PT          RESET SND ACK POINTER      000L
         B     EXIT                                                000L
GETLEN   EQU   *                                                   000L
         OI    DECFLAGS,IMPRESP         INDICATE NOT ACK           000L
         IC    ICREG,5(WREG)            GET ENTRY LENGTH           000L
         BCTR  ICREG,0                  SUBTRACT ONE               000L
         LA    W2REG,0(ICREG,W2REG)     POINT TO CONTROL BYTE      000L
         CLI   0(W2REG),ONE             IS CONTROL BYTE VALUE 1    000L
         BNE TURNON                     IF NOT ,ASSUME 0           000L
         MVI   0(WREG),FOXE                                        000L
         B     NOMATCH                                             000L
NOTSW    EQU   *                                                   000L
         LA    W2REG,0(WREG,ICREG)      LOAD ADDRESS OF COMPARE CHAR
         BCTR  ICREG,0                  SUB 1 FROM COUNT
         EX    ICREG,IDCMP              COMPARE IDENTIFICATION
         BE    IDGOOD                   IF GOOD, BRANCH            000B
NOT      OI    DECFLAGS,NOCOMPAR        SET FLAG INDICATING TWX    000B
         B     TPXX                ID DID NOT COMPARE.             000B
IDCMP    CLC   0(0,WREG),0(W2REG)       COMPARE IDENT INSTRUCTION
IDGOOD   NI    DECFLAGS,MASKALL-NOCOMPAR                           000B
         TM    UCBTYP+3(UCBREG),BISYNCH TEST FOR BSC               000B
         BNO   REXITA                   IF NOT, EXIT               000B
         TM    UCBTYP+1(UCBREG),BSC2    IS IT BSC2?              S99245
         BNO   SAVENOT                  NO, DON'T SAVE ID        S99245
         SR    SAVEREG,SAVEREG            CLEAR REGISTER       @ZA04192
         IC    SAVEREG,DCBEIOBX      GET IOB LENGTH            @ZA04192
         SH    SAVEREG,K8                SAVE AREA DISP        @ZA04192
         AR    SAVEREG,IOBREG          POINT TO ID SAVE AREA   @ZA04192
         MVC   K0(ID4BYTES,SAVEREG),DISPID(WREG)               @ZA04192
*                                SAVE 1ST 4 CHARS OF TERM ID   @ZA04192
SAVENOT  EQU   *                                                 S99245
*                TWO LINES OF CODE DELETED                     @ZA04195
         TM    5(CCWREG),TPEOCP         CHK FOR LAST CCW
         BO    EXIT                     IF SO, DON'T RESTART
         B     REXITA                                              000B
         EJECT
         SPACE 3
*                             TP OP CODE = 12     READ SKIP
         SPACE
TP12AB   TM    4(CCWREG),X'10'         TEST SKIP BIT
         BO    TP12ALL                  IF ON, THIS IS READ-SKIP
         TM    DISP3(CCWREG),TICBIT INVALID TIC ADDR ?      LD @ZA02320
         BO    POSTBUFR            YES, PCI APP HAS NOT SET LD @ZA02320
*                                  UP NEXT WRITE YET        LD @ZA02320
         TM    IOBCSW+DISP5,PROGCHK  PROG. CHECK ?          LD @ZA02320
         BZ    TP12AC              BR IF NOT                LD @ZA02320
         CLI   DISP0(CCWREG),TICCMND  TIC COMMAND           LD @ZA02320
         BNE   TP12AC              BR IF NOT TIC            LD @ZA02320
         L     CCWREG,DISP0(CCWREG)  GET NEXT CCW           LD @ZA02320
         LA    CCWREG,DISP0(CCWREG)  CLEAR HI BYTE          LD @ZA02320
         B     REXIT               RESTART CHANNEL PROGRAM  LD @ZA02320
TP12AC   EQU   *                                            LD @ZA02320
         TM    IOBCSW+DISP4,MASKALL  ANY STATUS BUT PCI/CPC LD @ZA02320
         BNZ   POSTBUFC            YES, POST IT             LD @ZA02320
         TM    IOBCSW+DISP5,X1F    ANY STATUS BUT PCI/CPC   LD @ZA02320
         BNZ   POSTBUFC            YES, POST IT             LD @ZA02320
         L     CCWREG,DISP0(CCWREG)  SET UP RESTART ON WRT  LD @ZA02320
         B     REXIT               GO TO CHANNEL RESTART    LD @ZA02320
POSTBUFR EQU   *                                            LD @ZA02320
         MVI   CODEMSK,CCNORM      GOOD COMPLETION FOR BUFS LD @ZA02320
         SH    CCWREG,K8           BACK UP ONE CCW          LD @ZA02320
         TM    DISP5(CCWREG),WRT1ST  FIRST WRITE ?          LD @ZA02320
         BO    POSTBUF1            YES, POST BUFFER         LD @ZA02320
         LA    CCWREG,DISP16(CCWREG)  BUMP TWO CCW          LD @ZA02320
         CLI   DISP5(CCWREG),WRTTEXT  WRITE TEXT ?          LD @ZA02320
         BE    POSTBUF1            YES, POST IT             LD @ZA02320
         SH    CCWREG,K32          GO BACK 4 CCW'S          LD @ZA02320
POSTBUF1 EQU   *                                            LD @ZA02320
         CLC   DISP1(THREE,CCWREG),K4-ONE IS A BUF ADDR     LD @ZA02320
         BE    POSTBUF2            YES,DON'T POST           LD @ZA02320
         BAL   UCBREG,OKPOST       POST IT                  LD @ZA02320
         MVC   DISP1(THREE,CCWREG),K4-ONE WIPE OUT BUF ADDR LD @ZA02320
POSTBUF2 EQU   *                                            LD @ZA02320
         L     CCWREG,DISP8(CCWREG)  ADDRESS OF NEXT WRT    LD @ZA02320
         N     CCWREG,MASKDB       ADJUST TO BEGINNING      LD @ZA02320
POSTBUF4 EQU   *                                            LD @ZA02320
         CLC   DISP3(THREE,CCWREG),K4-ONE IS A BUF ADDRSS   LD @ZA02320
         BE    POSTBUF3            YES, DON'T POST          LD @ZA02320
         BAL   UCBREG,OKPOST       POST IT                  LD @ZA02320
POSTBUF3 EQU   *                                            LD @ZA02320
         LA    CCWREG,DISP16(CCWREG)  BUMP 2 CCW'S             @ZA04650
         CLI   DISP5(CCWREG),A0     TP-OP OF LAST CCW          @ZA04650
         BE    REXIT                 YES, RESTART ON NEXT CCW  @ZA04650
         OI    IOBFLAG1,IOBEX      SET ABNORMAL COMP        LD @ZA02320
         MVI   IOBECBPT,CCPER      COMPLETION CODE          LD @ZA02320
         B     EXIT                                         LD @ZA02320
POSTBUFC EQU   *                                            LD @ZA02320
         MVI   CODEMSK,CCNORM      GOOD COMPLETION CODE     LD @ZA02320
         SH    CCWREG,K8           ONLY PREVIOUS BUFFER     LD @ZA02320
*                                  SHOULD BE POSTED         LD @ZA02320
         B     POSTBUF4            POST IT                  LD @ZA02320
TP12     NI    IOBFLAG1,MASKALL-IOBEX   SET OFF IOB EXCEPTION FLAG
TP12ALL  TM    4(CCWREG),X'08'          TEST FOR PCI BIT
         BO    RS1                      IF ON, THIS IS 1ST R-S COMMAND
         SH    CCWREG,K8                IF NOT BACK UP 1 CCW
         B     RSERR
RS1      CLC   IOBCSW+6(2),6(CCWREG)    DOES RESIDUAL COUNT = CCW COUNT
         BE    RSP                      IF SO, NO DATA WAS LOST
RSERR    OI    DECFLAGS,X'08'           SET ERROR BIT FOR LOST DATA
RSP      SH    CCWREG,K8                BACK UP TO READ DATA CCW
RSP1     CLI   0(CCWREG),X'02'     IS THIS A READ COMMAND        A41134
         BNE    NOTREAD                NO, BRANCH OUT              2725
         L     UCBREG,8(CCWREG)        POINT TO NEXT READ DATA     2725
         CLC   1(3,UCBREG),K4-1        TEST IF BUFF REQ PURGED     2725
         BNE   PURGE                                               2725
NOTREAD  BAL   UCBREG,BFRPOST          GO TO POST BUFFER           2725
         B     EXIT                                                1838
         SPACE 3
PURGE    IC    ICREG,DEBNMEXT(DEBREG)  PTR TO BUFFER ROUTINE       2725
         SLL   ICREG,2                                             2725
         LA    BRREG,DEBUCBAD(ICREG,DEBREG)                        2725
         B     TPPR                                                2725
         SPACE   2
*                             TP OP CODE = 20,21  RD RESPONSE, RESET
         SPACE
TP2A     TM    DCBBFTEK,X'08'           TEST FOR DYNAMIC BUFFERING
         BZ    CHKONLTS                 IF NOT, EXIT               000D
         LA    UCBREG,EXIT              SET UP E/                  1838
TP2AA    EQU   *                                                 A32454
         LA    CCWREG,0(CCWREG)         CLEAR 1ST BYTE OF REGISTER
         LA    CCW2REG,IOBCPA           LOAD ADRS OF START OF CHNL PROG
BKP      CR    CCW2REG,CCWREG           ARE WE BACKED UP TO START OF CP
         BL    BACKUP                   NO, BACKUP 0NE CCW     @ZA06404
         CLI   0(CCWREG),X'01'          IS THIS WRITE CIRCLE C   A30746
         BNE EXIT                       IF NOT, EXIT             A30746
         CLI   IOBECBCC,X'48'           IS INTERRUPT FROM HIO    A30746
         BE    FINDRW                   YES, POST RD TEXT BUFFER A30746
         CLI   IOBECBCC,X'41'           IS ECB POSTED WITH ERROR A30746
         BE    FINDRW                   YES, POST RD TEXT BUFFER A30746
         B     EXIT                     IF NOT, EXIT             A30746
BACKUP   SH    CCWREG,K8                BACK UP ONE CCW          A30746
         CLI   5(CCWREG),X'11'          IS THIS DATA CCW
         BNE   BKP                      IF NOT, LOOP
         CLI   0(CCWREG),X'02'          IS COMMAND READ
         BE    EXIT                     IF SO, EXIT
         TM    4(CCWREG),DATAC          IS THIS LAST WRITE CCW
         BZ    RRR                      IF SO, DATA CHAINING BIT IS OFF
         SH    CCWREG,K16               IF NOT, BACK UP 2 MORE CCW'S
RRR      SH    ICREG,K8                 SUBTRACT 8 FROM MULTIPLIED OFST
         BM    BFRPOST                  IF MINUS THIS IS READ RESPONSE
         MVI   CODEMSK,X'7F'            IF NOT, POST WITH 7F
         B     BFRPOSTA
TP21AB   CLI   DECTYPE+1,OPTPWTN        WRITE TN?  IF NOT,         000A
         BE    CHKEOCP                  DO NOT BRANCH              000C
         CLI   DECTYPE+1,OPTPWTD        WRITE TD    IF NOT,        000C
         BNE   TP2A                BRANCH.                         000A
CHKEOCP  TM    5(CCWREG),TPEOCP         END OF CHANNEL PROGRAM     000C
         BO    TP2A                IF SO, BRANCH.  IF NOT, GET     000A
         LA    CCWREG,8(CCWREG)    ADDRESS OF NEXT CCW AND GO TO   000A
         B     REXIT               RESTART CHANNEL PROGRAM ON NEXT 000A
*                                  CCW (DISABLE COMMAND).          000A
*              ONE LINE DELETED BY---------------------------->@ZA14130
*        SPACE 3
*              TP OP CODE = 23  WRITE BREAK OR 2740 BREAK TEST
         SPACE 2                                                   000I
*                                                                  000I
BRKTST   CLI   0(CCWREG),PREP           2741 BREAK TEST            000I
         BNE   EXIT                     NO                         000I
PWROFF   NI    IOBFLAG1,MASKALL-IOBEX   TURN OFF IOBEXCEPTION      000I
         NI    IOBINCAM,MASKALL-BUSY    SET OFF BUSY BIT           000I
         MVI   IOBECBPT,CCPER           SET ERROR RETURN CODE      000I
         TM    IOBCSW+4,CSWUC                                      000I
         BZ    BREAK                                               000I
         OI    DECFLAGS,X'04'                                      000I
         B     EXITREST                                            000I
BREAK    OI    DECFLAGS,X'02'                                      000I
         B     EXITREST                                            000I
         SPACE 2                                                   000I
*                             TP OP CODE = 25  READ RESP TO TEXT
         SPACE 1
TP25     SR    ICREG,ICREG              CLEAR REGISTER             000B
         NI    IOBFLAG1,MASKALL-IOBEX   SET OFF IOB EXCEPTION FLG  000B
         LA    WREG,DECRESPN            LOAD ADDR OF RESP FIELD    000B
         LH    W2REG,6(CCWREG)         GET ORIGINAL COUNT         23134
*
*        5 LINES REMOVED FOR ----->                         LD @ZA02317
*
         CH    W2REG,IOBCSW+DISP6  IS COUNT GREATER THAN 2  LD @ZA02317
         BE    SETUE                                        LD @ZA02317
         IC    ICREG,IOBRCVPT                               LD @ZA02317
         LA    ICREG,DCBBSAK0(ICREG)                        LD @ZA02317
         CH    W2REG,K2+TWO                                 LD @ZA02317
         BH    MOVERESP            MOVE RESP TO DECRESPN    LD @ZA02317
         CLI   IOBCSW+DISP7,ONE    1 BYTE RCVD IF CNT 1     LD @ZA02317
         BNE   DECRRESP            MUST BE TWO BYTES        LD @ZA02317
         B     NOTACK                                       LD @ZA02317
MOVERESP EQU   *                                            LD @ZA02317
         SH    W2REG,IOBCSW+RESIDCNT  SUBTRACT RSIDUAL COUNT    YA02162
         CH    W2REG,K1                 IS COUNT = 1?           YA02162
         BH    GETADDR                  NO, BRANCH              YA02162
         L     WREG,DECAREA           ADDR OF READ IN AREA  LD @ZA02317
         TM    DCBBFTEK,DYNBF           DYNAMIC BUFFERING?      YA02162
         BZ    CLRRESP                  NO, BRANCH              YA02162
         AH    WREG,K4                  INCR FOR BUFFER LINK    YA02162
CLRRESP  EQU   *                                                YA02162
         XC    DECRESPN(RESPNLNG),DECRESPN CLEAR RESP FIELD     YA02162
         MVC   DECRESPN(ONECHAR),DISP0(WREG) MOVE IN RESP       YA02162
*
*        3 LINES REMOVED FOR ----->                         LD @ZA02317
*
         B     NOTACK                                       LD @ZA02317
GETADDR  EQU   *                                                YA02162
         BAL   W2REG,FINDADDR           FIND ADDR OF RESP FIELD    000B
*
*        2 LINES DELETED FOR ----->                         LD @ZA02317
*
         MVC   DECRESPN(2),0(WREG)      PUT RESPONSE IN RESP FIELD 000F
DECRRESP EQU   *                                            LD @ZA02317
*                2 LINES DELETED BY THE FOLLOWING APAR          YA02161
*        1 LINE DELETED FOR ----->                          LD @ZA02317
*
         CLC   0(2,WREG),0(ICREG)       TEST FOR PROPER RESP       000E
         BE    RCVFLIP                  BRANCH IF SO               000F
         CLC   0(2,WREG),DCBBSSAK       CHECK FOR WACK             000J
         BNE   CHKRVI                   IF NOT, BRANCH             000F
         OI    DECFLAGS,WACKRCV         INDICATE WACK     RECVD    000J
         B     TP25A                    GO CHECK FOR CONVERSAT   A32454
CHKRVI   CLC   0(2,WREG),DCBBSRVI       CHECK FOR REVERSE INTERRUPT000F
         BNE   CHKACK                   IF NOT, CHECK OTHER ACK    000F
         OI    DECFLAGS,RVIRCV          INDICATE REVERSE INTERRUPT 000F
         XI    IOBINCAM,CKRVIRPT   TURN ON SWITCH IF PROPER RVI;   000J
*   SWITCH WAS TURNED OFF BY "RCVFLIP";  TURN OFF IF INPROPER      000J
         TM    IOBINCAM,CKRVIRPT   PROPER RVI? PROPER ONLY IF      000J
*                                        INTERVENING  ACK0-1       000J
         BO    RCVFLIP1            IN PLACE OF ACK PTR             000J
         B     SETUE               NO, SET UE FOR ERP              000J
RCVFLIP  NI    IOBINCAM,STRVIRPT   TURN OFF RVI SWITCH; PROPER     000J
         NI    DECFLAGS,OKACK                                      000J
RCVFLIP1 XI    IOBRCVPT,FLIP       UPDATE ACK POINTER              000J
         NI    IOBFLAG1,MASKALL-IOBEX   SET OFF IOB EXCEPTION      000E
         TM    5(CCWREG),TPEOCP         IS THIS LAST CCW           000E
         BO    CHKONLT1                 COMPLETE PROCESSING        000F
         TM    13(CCWREG),TPRESET       IS NEXT CCW RESET OPERATION000F
         BO    REXITB                   YES, EXECUTE               000F
CHKONLT1 TM    DECDCBAD,ONLTRFT        WAS ONLTST MACRO USED     A28612
         BZ    TP25A                    IF NOT, BRANCH           A32454
         L     WREG,DECAREA             GET ADDR OF TEXT AREA      000D
         TM    DCBBFTEK,DYNBF           IS DYNAMIC BUFFERING USED  000D
         BZ    STOREREG                 NO, STORE ADDR IN IOB      000D
         AH    WREG,K4                  INCREMENT FOR BUFFER LINK  000D
STOREREG ST    WREG,IOBERINF                                       000D
         TM    DECTYPE+1,ONLTTSTW       IS THE OPERATION WR TI     000D
         BZ    EXITONLT                 IF SO, GO SCHEDULE ONLT    000D
         NI    DECDCBAD,MASKALL-ONLTRFT   TURN ONLTST BIT OFF    A28612
         B     TP25A                    GO CHECK FOR CONVERSAT   32454
CHKACK   X     ICREG,K2                 POINT TO OTHER ACK         000B
         CLC   0(2,WREG),0(ICREG)       TEST FOR WRONG ACK         000E
         BNE   NOTACK                   IF NOT, IT'S SOMETHING ELSE000B
         OI    DECFLAGS,WRONGACK        SETON WRONG ACK BIT        000B
         B     SETUE                                               000B
*
*        2 LINES DELETED FOR ----->                         LD @ZA02317
*
NOTACK   EQU   *                                            LD @ZA02317
         OI    DECFLAGS,IMPRESP         SET NO ACK RECEIVED BIT YA02161
         CLC   0(1,WREG),DCBBSEOT       CHECK FOR EOT              000B
         BNE   TP25CONV                 BRANCH IF NOT            A32454
RESETACK EQU   *                                                 A32454
         NI    IOBRCVPT,ACK0PT          RESET ACK POINTER        A25664
         B     TP25A                                             A32454
TP25CONV CLC   1(1,WREG),DCBBSEOT       CHECK EOT ON CONVERSAT   A32454
         BE    RESETACK                 BRANCH IF YES            A32454
         TM    DCBXMODE,INTBLCHK        INTERMEDIATE BLOCK CHECK A32454
         BZ    CKETXETB                 NO, BRANCH               A32454
         BCTR  WREG,0                   YES, ADJUST POINTER      A32454
CKETXETB CLC   1(1,WREG),DCBBSETX       CHECK FOR ETX            A32454
         BE    TP25A                    YES, BRANCH              A32454
         CLC   1(1,WREG),DCBBSETB       CHECK FOR ETB            A32454
         BE    TP25A                    YES, BRANCH              A32454
SETUE    OI    IOBCSW+4,CSWUE           SET ON UNIT EXCEPTION      000B
         OI    IOBFLAG1,IOBEX           SET IOB EXCEPTION          000B
TP25A    EQU   *                                                 A32454
         CLI   DECTYPE+DISP1,X84   WRT CONT RESET(TTR)      LD @ZA02321
         BE    TP25B                                        LD @ZA02321
         CLI   DECTYPE+DISP1,X82   WRT INIT RESET(TIR)      LD @ZA02321
         BE    TP25B                                        LD @ZA02321
TP25C    EQU   *                                            LD @ZA02321
         CLI   DECTYPE+1,X'16'          WRITE ENQ                A32454
         BE    TP25CC                   YES, BRANCH            @ZA04852
         TM    DECTYPE+1,WRTIV          WRITE CONVERSATIONAL     A32454
         BNO   TP2A                                              A32454
SNDFLIP  CLC   DISP0(TWO,WREG),DCBBSSAK  WAS WACK RECEIVED?    @ZA04852
         BE    CHKDB               YES, DON'T UPDATE ACK PTRS   YA01027
*               ONE LINE DELETED FOR THE FOLLOWING APAR         YA02163
         CLC   ONE(ONE,WREG),DCBBSETX    CHECK FOR ETX         @ZA07638
         BNE   CHKDB            NO BRANCH                      @ZA07638
         XI    IOBSNDPT,FLIP         UPDATE SND ACK PRT        @ZA07638
         XI    IOBRCVPT,FLIP         UPDATE RCV ACK PRT        @ZA07638
CHKDB    EQU   *                                                YA01027
         TM    DCBBFTEK,X'08'      DYNAMIC BUFFER                A32454
         BZ    CHKONLTS                 NO, BRANCH               A32454
         LA    UCBREG,TP25AA                                     A32454
         B     TP2AA                                             A32454
TP25CC   LH    W2REG,DISP6(CCWREG) GET ORG COUNT 2 OR 20       @ZA04852
         CH    W2REG,IOBCSW+DISP6  IS COUNT GREATER THAN 2     @ZA04852
         BNH   TPXX                                            @ZA04852
* WREG POINTS TO END OF DATA-2 ( OR DATA-3 IF ITB)             @ZA04852
         CLC   ONE(ONE,WREG),DCBBSETX    ETX ?                 @ZA04852
         BE    SNDFLIP                                         @ZA04852
         CLC   ONE(ONE,WREG),DCBBSETB        ETB ?             @ZA04852
         BE    SNDFLIP                                         @ZA04852
         B     TPXX                                            @ZA04852
TP25B    EQU   *                                            LD @ZA00536
         SR    ICREG,ICREG         CLEAR REG                L5 @ZA03966
         IC    ICREG,IOBRCVPT      GET ACK POINTER          L5 @ZA03966
         LA    ICREG,DCBBSAK0(ICREG)  GET EXPECTED ACK      L5 @ZA03966
         CLC   0(2,WREG),0(ICREG)  CORRECT ACK              L5 @ZA03966
         BE    TP25BA              YES,CHECK FOR RESET      L5 @ZA03966
         B     CHKDB               NO, DON'T WRITE EOT      L5 @ZA03966
TP25BA   EQU   *                                            L5 @ZA03966
         TM    DISP13(CCWREG),TPRESET  IS NXT CCW RESET OP  LD @ZA00536
         BO    REXITB              YES                      LD @ZA02321
         B     TP25C               NO, CHK WRT ENQ          LD @ZA02321
TP25AA   EQU   *                                                 A32454
         L     CCWREG,IOBCSW            LOAD CCW ADDRESS         A32454
         SH    CCWREG,K8                ADJUST TO PROPER CCW     A32454
         B     TPXX                     BRANCH TO POST RD BUFFER A32454
         SPACE 3
FINDADDR L     WREG,0(CCWREG)           LOAD ADDRESS OF I/O AREA   000B
         AH    WREG,6(CCWREG)           ADD MESSAGE LENGTH         000B
         SH    WREG,IOBCSW+6            SUBTRACT RESIDUAL COUNT    000B
         SH    WREG,K2+2                SUBTRACT TWO               000B
         BR    W2REG                    RETURN                     000B
         SPACE 3
TPXX     TM    DCBBFTEK,X'08'           TEST FOR DYNAMIC BUFFERING
         BZ    EXIT                     NO
         LA    UCBREG,EXIT                                         1838
FINDRW   TM    5(CCWREG),X'10'          FIND 1ST R/W DATA COMMAND
         BO    BFRPOST                  IF 1ST PCI BIT FOUND
         TM    5(CCWREG),TPEOCP         TEST FOR END OF CHNL PROGRAM
         BO    EXIT                     IF SO, EXIT
         LA    CCWREG,8(CCWREG)         STEP TO NEXT CCW
         B     FINDRW
         EJECT
         SPACE 3
*                             POST BUFFER ROUTINE
         SPACE
BFRPOST  MVC   CODEMSK(1),IOBECBPT
BFRPOSTA TM    IOBFLAG1,X'04'           IS IOB EXCEPTION FLAG ON
         BZ    OKPOST                   IF NOT, BRANCH TO POST
         CLI   IOBECBPT,X'7F'           CHECK FOR NOMRAL COMPLETION
         BE    EXIT
         CLI   5(CCWREG),X'13'          IS THIS WR DLE STX       A32465
         BNE   OKPOST                   NO, BRANCH               A32465
         TM    DCBBFTEK,X'08'           DYNAMIC BUFFERING        A32465
         BZ    WRTEXT1                  NO, BRANCH               A32465
         LA    CCWREG,0(CCWREG)         ZERO HI-ORDER BYTE       A32465
         LR    BUFREG,CCWREG            LOAD INTO BUFREG         A32465
WRTEXT   SH    BUFREG,K8                BACKUP TO PREV CCW       A32465
         L     UCBREG,0(BUFREG)         LOAD DATA AREA           A32465
         LA    UCBREG,0(UCBREG)         ZERO HI-ORDER BYTE       A32465
         CR    UCBREG,CCWREG            IS THIS TIC CCW          A32465
         BNE   WRTEXT                   NO, BRANCH               A32465
         LR    CCWREG,BUFREG            LOAD WR DATA CCW         A32465
         LA    UCBREG,EXIT              LOAD EXIT REG            A32465
WRTEXT1  SH    CCWREG,K8                BACK UP TO WR TEXT       A32465
OKPOST   L     BUFREG,0(CCWREG)         LOAD BUFFER ADDRESS
         LA    BUFREG,0(BUFREG)        CLEAR OUT HIGH ORDER BYTE A27621
         LTR   BUFREG,BUFREG           TEST FOR ADDRESS OF ZERO  A27621
         BCR   8,UCBREG                BRANCH IF YES             A27621
         SH    CCWREG,K8           SUB 8 PREV CCW           LD @ZA02312
         TM    DISP5(CCWREG),RDRESP CHK RD RESP TXT OP-CODE LD @ZA02312
         BNO   NOT25               IF NOT BRANCH            LD @ZA02312
         L     BUFREG,DISP8(CCWREG)  LOAD DATA RD TXT       LD @ZA02312
         SH    BUFREG,TWENTY       SUB CNT RD RESP CCW      LD @ZA02312
         CL    BUFREG,0(CCWREG)    EQ DATA ADD OF RESP      LD @ZA04157
         BNE   NOT25               TEST CCW ? IF NOT BR     LD @ZA02312
         AH    CCWREG,K8           RESTORE CCWREG           LD @ZA02312
         B     TWENTY5             AND CONTINUE             LD @ZA02312
NOT25    EQU   *                                            LD @ZA02312
         AH    CCWREG,K8                                    LD @ZA02312
         L     BUFREG,0(CCWREG)        LOAD BUFFER ADDRESS       A27621
TWENTY5  EQU   *                                            LD @ZA02312
         N     BUFREG,MASKDB            AND TO WORD BOUNDARY
         SH    BUFREG,K4                SUB TO LINK FIELD
         TM    15(CCWREG),X'01'        CHECK FOR PREVIOUS PCI      1265
         BO    ECBREG0                 YES, DON'T POST AGAIN       1265
         CLI   0(CCWREG),WRITE
         BNE   NORMPOST
         TM    4(CCWREG),DATAC
         BO    NORMPOST
ECBREG0  L     ECBREG,ZERO                                         1265
         B     ORCC
NORMPOST L     ECBREG,8(CCWREG)         LOAD NEXT TEXT CCW       A38543
         N     ECBREG,MASKDB            AND TO WORD BOUNDARY
         L     ECBREG,0(ECBREG)         LOAD ADDRESS OF NEXT BUF A38543
         SH    ECBREG,K4                SUB TO LINK FIELD        A38543
         N     ECBREG,MASKDB            AND OFF COMMAND CODE
ORCC     O     ECBREG,CODEMSK           OR IN COMPLETION CODE
         LR    ZREG,BASEREG             SAVE BASE REGISTER.        000B
         LR    ICREG,BAS2REG           SAVE 2ND BASE REGISTER    A41115
         L     BASEREG,DEBTCBAD(DEBREG) LOAD ADDRESS OF TCB        000D
         L     WREG,SIXT                LOAD OFFSET TO POST ROUTINE
         USING CVT,WREG                 ESTABLISH CVT ADDR       Y02947
         L     BRREG,CVT0PT01           ADRS OF SUPVR POST RT    Y02947
         DROP  WREG                     DROP CVT ADDRESSABILITY  Y02947
         BALR  RETREG,BRREG             LINK TO POST ROUTINE
         LR    BASEREG,ZREG             RESTORE BASE REGISTER.     000B
         LR    BAS2REG,ICREG           RESTORE 2ND BASE REGISTER A41115
         L     ECBREG,IOBECBPT          RESTORE ADDRESS OF DECB
         BR    UCBREG                                              1838
         EJECT
CHKONLT  EQU   *                                                   000L
         CLI   DECTYPE+1,RCONTONE       READ CONNECT WITH TONE     000L
         BE    LDUCB                                               000L
         TM    DECTYPE+1,X'01'          IS OPERATION READ        A24931
         BNO   EXIT2                    NO,EXIT                  A32477
LDUCB    EQU   *                                                   000L
         L     UCBREG,REG7(SAVEAREA)    PRIME UCB REGISTER       Y02947
         TM    UCBTYP+3(UCBREG),BISYNCH IS THIS BI-SYNCH           000D
         BNO   CHKONLTS                 CHECK START STOP           000D
         L     WREG,DECAREA             LOAD ADDRESS OF AREA       000M
         TM    DCBBFTEK,DYNBF           DYNAMIC BUFFERING SPECIFIED 00M
         BZ    NODYNBF                  NO, BRANCH                 000M
         LA    WREG,4(WREG)             INCREMENT PAST LINK FIELD  000M
NODYNBF  TM    UCBTYP+1(UCBREG),X'40'   MULTIPOINT LINE            000M
         BZ    PONTPT                   NO, BRANCH                 000M
         TM    DECTYPE+1,ONLTTSTR       IS THIS READ INITIAL       000M
         BNZ   PONTPT                   NO, BRANCH                 000M
         LA    WREG,1(WREG)             INCREMENT PAST INDEX BYTE  000M
PONTPT   CLC   0(2,WREG),DCBBSONL       ARE FIRST 2 CHARS SOH %    000M
         BNE   EXIT2                    NO, BYPASS               A32477
         TM    DCBXCODE,X'0C'           EBCDIC TRANSMISSION        000M
         BNZ   CHKASCII                 NO, CHECK UNASCII          000M
         CLI   MSGTYPE(WREG),EBSLASH    IS THIRD CHAR / ?
         BE    SETRVI                   GO SET UP TO CLEAR GEN POLL
         CLI   MSGTYPE(WREG),EBR        IS THIRD CHAR R ?
         BE    RMSGEBA             SENSE/STATUS MSG RCVD       @ZA14067
         CLC   2(1,WREG),EBS            THIRD CHAR S ?             000M
         BNE   CHKEC                    NO, CHECK FURTHER          000M
SETSTMSG OI    DECFLAGS,SMSG            SET ON STATUS MSG BIT      000M
         B     EXIT2                    BRANCH OUT               A32477
CHKEC    EQU   *                                                   000M
         CLC   2(1,WREG),EBE            THIRD CHARACTER E          000M
         BE    ERRMSG                   ERROR MESSAGE RECEIVED     000M
         CLC   2(1,WREG),EBC            CHARACTER C                000M
         BE    ERRMSG                   YES, HANDLE            @ZA04877
         TM    MSGTYPE(WREG),XF0       EBCDIC NUMERIC ?        @ZA04877
         BNO   EXIT2  NO, CAN'T BE AN RFT OR RECOGNIZED SENSE/ @ZA04877
*                        STATUS MESSAGE, SO TREAT AS DATA      @ZA04877
         B     TSTONLT                 YES, BRANCH             @ZA04877
CHKASCII TM    DCBXCODE,X'04'           USASCII TRANSMISSION       000M
         BNO   TSTONLT                  6-BIT, CHECK ONLT          000M
         CLI   MSGTYPE(WREG),USSLASH    IS THIRD CHAR / ?
         BE    SETRVI                   GO SET UP TO CLEAR GEN POLL
         CLI   MSGTYPE(WREG),USR        IS THIRD CHAR R ?
         BE    RMSGASC             SENSE/STATUS MSG RCVD
         CLC   2(1,WREG),USS           THIRD CHAR S?               000M
         BE    SETSTMSG
CHKUCE   CLC   2(1,WREG),USE           THIRD CHAR E?               000M
         BE    ERRMSG                  YES, INDICATE ERROR MSG REC'D
         CLC   2(1,WREG),USC            ERROR MSG                  000M
*                               ONE LINE CODE DELETED BY------>@ZA14068
         BE    ERRMSG                   YES, HANDLE            @ZA04877
         TM    MSGTYPE(WREG),X30      ASCII NUMERIC ?          @ZA04877
         BNO   EXIT2 NO CAN'T BE AN RFT OR RECOGNIZED AS SENSE @ZA04877
*                 /STATUS MESSAGE, SO TREAT AS DATA.           @ZA04877
         B     TSTONLT                 YES, BRANCH             @ZA04877
ERRMSG   ST    WREG,IOBERINF            STORE AREA ADDRESS         000M
         OI    IOBCSW+4,CSWUE           SET ON UNIT EXCEPTION      000M
         OI    IOBFLAG1,IOBEX           SET ON IOB EXCEPTION       000M
         B     EXIT2                                             A32477
TSTONLT  EQU   *                                                   000M
         TM    DCBERROP,ONLT            ARE TERMINAL TESTS SPEC'D  000D
         BZ    EXIT2                    IF NOT, DON'T TEST RFT   A32477
         B     TSTONLT2                 CHECK OPERATIONS         S99245
DIAL3270 EQU   *                                                 S99245
         MVC   MSGTYPE(DLRFTLNG,WREG),MSGSTART(WREG)             S99245
*                            CONVERT 3270 DIAL RFT TO BTAM STD   S99245
TSTONLT2 EQU   *
         CLI   DECTYPE+1,RDINIT         IS THIS A READ INITIAL?
         BE    SETONLT
         CLI   DECTYPE+1,RDCONECT       IS THIS A READ CONNECT
         BE    SETONLT
         CLI   DECTYPE+1,RDCONT         IS THIS A READ CONTINUE ?
         BE    SETONLT             YES,CONTINUE OLT SET UP      YA01030
         CLI   DECTYPE+1,RCONTONE       READ CONNECT WITH TONE
         BNE   EXIT2                                             A32477
         B     SETONLT                                             000M
SETRVI   EQU   *
         TM    DCBERROP,ONLT       ARE TERM TESTS SPEC'D
         BZ    EXIT2               NO  DON'T CONVERT
         OI    IOBINCAM,RFTBIT     SET RFT REC'D FROM GEN POL CU
         TM    UCBTYP+1(UCBREG),BSC2    IS THIS BSC2?            S99245
         BO    DIAL3270          YES, GO CONVERT DIAL 3270 RFT   S99245
         MVC   MSGTYPE(MSGLNGTH,WREG),MSGSTART(WREG)  CONVERT
*                                       TO STANDARD BTAM RFT
         B     TSTONLT2                 CONTINUE CHECKING
RMSGEBA  EQU   *                                            LD @ZA02315
         TM    UCBTYP+ONE(UCBREG),BSC2  IS THIS BSC2 ?      LD @ZA02315
         BNO   RMSGEBC             BR IF NOT                LD @ZA02315
         NI    DECFLAGS,SOHRBIT1                            LD @ZA02315
         OI    DECFLAGS,SOHRBIT2                            LD @ZA02315
         CLC   DISP4(STATLNG,WREG),DEEBC  DVC END ALONE     LD @ZA02315
         BE    EXIT2               PROCESS NORMALLY         LD @ZA02315
         CLC   DISP4(TWO,WREG),DBEBC  DVC BUSY ALONE        LD @ZA02315
         BE    EXIT2               PROCESS NORMALLY         LD @ZA02315
         CLC   DISP4(TWO,WREG),DBOCEBC OP CK AND BUSY ALONE LD @ZA02315
         BNE   ERRMSG              NO,SCHEDULE ERP          LD @ZA02315
         B     EXIT2               PROCESS NORMALLY         LD @ZA02315
RMSGEBC  EQU   *
         NI    DECFLAGS,SOHRBIT1   INDICATE SOH%R MSG RCVD
         OI    DECFLAGS,SOHRBIT2
         CLC   STAT(STATLNG,WREG),DEEBC DVC END ALONE
         BE    EXIT2               YES, PROCESS NORMALLY
         CLC   STAT(STATLNG,WREG),DBEBC DVC BUSY ALONE
         BE    EXIT2               YES, PROCESS NORMALLY
         CLC   STAT(STATLNG,WREG),DBOCEBC OP CHECK AND BUSY ALONE
         BNE   ERRMSG              NO, SCHEDULE ERP
         B     EXIT2               PROCESS NORMALLY
RMSGASC  EQU   *
         NI    DECFLAGS,SOHRBIT1   INDICATE SOH%R RCVD
         OI    DECFLAGS,SOHRBIT2
         CLC   STAT(STATLNG,WREG),DEASC DVC END ALONE
         BE EXIT2                  YES,PROCESS NORMALLY
         CLC   STAT(STATLNG,WREG),DBASC DVC BUSY ALONE
         BE    EXIT2               YES, PROCESS NORMALLY
         CLC   STAT(STATLNG,WREG),DBOCASC OP CHECK AND BUSY ALONE
         BNE   ERRMSG              NO,SCHEDULE ERP
         B     EXIT2               PROCESS NORMALLY
CHKONLTS TM    DCBERROP,ONLT            ARE TERMINAL TESTS SPEC'D  000D
         BZ    EXIT2                    IF NOT, BYPASS ONLT TESTSA32477
         CLI   DECTYPE+1,RDINIT        IS THIS A READ INITIAL     M3962
         BE    CHKDECAR                YES, BRANCH                M3962
         TM    3(UCBREG),X'02'         IS DEVICE A 2740 CONSOLE
         BO    CHKDECAR                YES, ACCEPT ONLINE TEST
         CLI   DECTYPE+1,RDCONV        IS THIS A READ CONVERSATIONM3962
         BNE   EXIT2                    NO, BRANCH TO EXIT       A32477
CHKDECAR EQU   *                                                  M3962
         L     WREG,DECAREA             GET ADDRESS OF 1ST DATA    000D
         TM    DCBBFTEK,DYNBF           TEST FOR DYNAMIC BFR       000D
         BZ    CHK2260                                             000D
         AH    WREG,K4                  ADD 4 IF D.B. FOR LINK FLD 000D
CHK2260  CLI   19(UCBREG),TWNTY260      TEST FOR 2260              000D
         BNE   CHKCORR                                             000I
         CLC   2(5,WREG),NINE2260       COMPARE FOR 5 USASCII 9'S  000D
         BNE   EXIT2                    IF NOT, BRANCH OUT       A32477
         LA    WREG,2(WREG)            POINT TO FIRST CHAR OF MESSG
         B     SETONLT                                             000I
CHKCORR  CLI   16(UCBREG),C2741         TEST MODEL CODE            000I
         BNE   CHKNINE                                             000I
         CLC   0(5,WREG),CNINES         TEST FOR RFT (99999)       000I
         BE    SETONLT                                             000I
         B     EXIT2                                             A32477
CHKNINE  CLC   0(5,WREG),NINES          COMPARE FOR FIVE NINES     000D
         BE    SETONLT                  IF EQUAL, GO SET ONLT BIT  000D
         CLI   0(WREG),CIRCLED         IS FIRST CHAR CIRCLE D    A28625
         BE    CHK5NINE                YES, CHECK FOR 5 9'S      A28625
         TM    UCBTYP+1(UCBREG),AUTOPOL IS THIS AUTOPOLL         A28625
         BNO   EXIT2                    IF NO EXIT NO ONLT       A32477
CHK5NINE LA    WREG,1(WREG)            ADD 1 TO WORK REG         A28625
         CLC   0(5,WREG),NINES          CHECK POSITIONS 1 THRU 6   000D
         BE    SETONLT                 IF YES, SET ONLT           M2925
         TM    19(UCBREG),X'20'        TEST ADAPTER FOR 1030
         BNO   EXIT2                    IF NOT, EXIT             A32477
         TM    16(UCBREG),X'01'        TEST MODEL FOR 1030
         BNO   EXIT2                    IF NOT, EXIT             A32477
         LA    WREG,1(WREG)            ADD 1 TO WORK REG          M2925
         CLC   0(5,WREG),NINES         CHECK POSITIONS 2 THRU 7   M2925
         BNE   EXIT2                    NOT 1030 ONLT REQUEST    A32477
SETONLT  EQU   *                                                 A35733
         TM    IOBFLAG1,IOBEX           IS IOB EXCEPTION ON ?    A35733
         BO    EXIT2                    YES, BRANCH              A35733
         OI    IOBINCAM,ONLTT           SETON ONLT IN PROGRESS   A35733
         ST    WREG,IOBERINF            STORE AREA ADDRESS         000D
*                ONE LINE DELETED BY-------------------------->@ZA14130
EXIT2    EQU   *                                                 A32477
         TM    DCBBFTEK,DYNBUF          DYN BUF SPECIFIED        A32477
         BZ    EXIT                     NO, EXIT                 A32477
         TM    IOBINCAM,ONLTT           ONLT IN PROGRESS         A32477
         BO    EXIT3                    YES,BRANCH               A32477
         TM    5(CCWREG),X'2E'         TP OPCODE NOT ''11'       A32477
         BNZ   EXIT                     NO, EXIT                 A32477
         TM    5(CCWREG),X'10'          TP OPCODE 10 OR 11       A32477
         BO    TP3POST1                 YES, POST BUFFER         A32477
         B     EXIT                     NO, EXIT                 A32477
EXIT3    EQU   *
         TM    IOBCSW+4,X'F2'           ANY ERRORS               A32477
         BNZ   NOTONLT1                 IF SO, BRANCH            A32477
         TM    IOBFLAG1,IOBEX           IS IOB EXCEPTION ON      A32477
         BO    NOTONLT1                 YES, BRANCH              A32477
         TM    DECTYPE+1,RESET          WAS RESET SPECIFIED      A32477
         BO    NOTONLT1                 YES, BRANCH              A32477
         B     EXIT                                              A32477
NOTONLT1 EQU   *                                                 A32477
         NI    IOBINCAM,X'FE'           TURN OFF ONLT BIT        A32477
         B     TP3POST1                                          A32477
BSC2ONLT EQU   *                   CHECK 3X TP OP CODE FOR ONLT  S99245
         TM    UCBTYP+3(UCBREG),BISYNCH  IS THIS BSC2?         @ZA06398
         BNO   EXIT                     NO, BRANCH               S99245
         TM    IOBINCAM,ONLTT      IS ON-LINE TEST IN PROGRESS   S99245
         BO    EXITONLT                 YES, SCHED ON-LINE TEST  S99245
         EJECT
*    *    *    *    *    *    *    *    *    *    *    *    *    *    *
*                TWO LINES DELETED BY------------------------->@ZA14130
EXIT     TM    DECTYPE,AUTOPOLL         IS THIS AN AUTOPOLL    @ZA14130
         BZ    BYPASS1             COMPLETION?  IF NOT, BRANCH.    000A
         L     WREG,DECPOLPT            LOAD POLLING LIST ADDRESS  000A
         LA    WREG,0(WREG)             CLEAR HIGH ORDER BYTE.     000A
         SH    WREG,K2+2                SUBTRACT TWO TO POINT AT   000B
*                                  NUMBER OF ACTIVE ENTRIES.       000A
         SR    ICREG,ICREG                                         000C
         IC    ICREG,1(WREG)            PICK UP FLAG BYTE.         000A
         TM    IOBFLAG1,IOBEX           IS IOB EXCEPTION ON?       000A
         BZ    UPDATCNT            IF NOT, UPDATE USER COUNT.      000A
         CLI   IOBECBPT,CCNORM          NORMAL COMPLETION CODE?    000A
         BE    EXITAP              IF SO, BYPASS UPDATING USER     000A
UPDATCNT TM    IOBINCAM,ONLTT                                      000D
         BO    APOFF                                               000D
*    COUNT UNTIL THE ERROR ROUTINES HAVE COMPLETED THEIR RECOVERY  000A
*    PROCEDURES.                                                   000A
         TM    1(WREG),X'0F'       IF ALREADY 0                 YA01017
         BZ    APOFF               DON'T MAKE 15                YA01017
         BCTR  ICREG,0                  SUBTRACT ONE FROM FLAG     000D
         STC   ICREG,1(WREG)       BYTE AND STORE WITH DECREMENTED 000A
*                                  USER COUNT.                     000A
APOFF    NI    DECTYPE,MASKALL-AUTOPOLL TURN OFF AUTOPOLL          000D
*                                  OPERATION IN PROGRESS' FLAG.    000A
EXITAP   NOP   BYPASS              THIS IS A NOP/BRANCH SWITCH -   000A
*    IT WILL BE A NOP UNLESS THE CURRENT OPERATION IS AN AUTOPOLL  000A
*    OPERATION WHICH TERMINATED PRIOR TO THE READ INDEX COMMAND.   000A
*    *    *    *    *    *    *    *    *    *    *    *    *    *    *
         SPACE 2
         L     CCWREG,DECAREA           LOAD ADDRESS OF MESSAGE.   000A
         TM    DCBBFTEK,DYNBUF          IS DYNAMIC BUFFERING       000A
         BO    UPDAT1              SPECIFIED?  IF SO, BYPASS       000A
*    MOVING THE INDEX BYTE FROM THE MESSAGE AREA INTO DECPOLPT.    000A
*    THE PCI APPENDAGE(IGG019MC) WILL PERFORM THIS FUNCTION ON THE 000A
*    FIRST PCI INTERRUPT.                                          000A
*
         CLI   IOBCPA+8,POLL            IS THIS AN AUTOPOLL        000A
         BNE   UPDAT1              OPERATION?  IF NOT, BRANCH.     000A
*    IT COULD BE A READ REPEAT OPERATION INITIATED BY THE ERROR    000A
*    RECOVERY ROUTINES.                                            000A
         MVC   DECPOLPT(1),0(CCWREG)    SAVE INDEX BYTE.           000A
UPDAT1   EQU   *
         SRL   ICREG,5                  SHIFT OUT ALL BUT ENTRY    000A
*                                  WIDTH FROM FLAG BYTE.           000A
         SR    UCBREG,UCBREG                                       000A
         IC    UCBREG,0(WREG)           PICK UP NUMBER OF ACTIVE   000A
*                                  ENTRIES TO USE AS MULTIPLICAND. 000A
         MR    CCW2REG,ICREG            MULTIPLY ENTRY WIDTH BY    000A
*                                  NUMBER OF ACTIVE ENTRIES.       000A
         LA    WREG,1(WREG)             ADJUST PNTR. TO FLAG BYTE. 000A
         LR    CCW2REG,WREG             LOAD FLAG BYTE ADDRESS     000A
         AR    CCW2REG,UCBREG      AND ADD ACTIVE ENTRIES BYTE     000A
*    COUNT TO POINT AT INDEX BYTE IN LAST ACTIVE ENTRY.            000A
         LR    CCWREG,WREG              LOAD ADDRESS OF FLAG BYTE. 000A
         IC    W2REG,DECPOLPT           PICK UP INDEX BYTE.        000A
LOOPINDX CR    WREG,CCW2REG        END OF ACTIVE ENTRY LIST?       000A
         BE    UPDAT2              IF SO, BRANCH.                  000A
         AR    CCWREG,ICREG             ADJUST INDEX POINTER TO    000A
*                                  NEXT INDEX BYTE.                000A
         EX    W2REG,COMPARE            COMPARE INDEX TO ENTRY     000A
         BE    STORE               INDEX.  IF EQUAL, BRANCH.       000A
         AR    WREG,ICREG               ADJUST 'ENTRY MINUS ONE'   000A
*                                  POINTER TO NEXT ENTRY MINUS ONE.000A
         B     LOOPINDX                                            000A
COMPARE  CLI   0(CCWREG),0                                         000A
UPDAT2   OI    DECFLAGS,NOCOMPAR        SET FLAG INDICATING THAT   000A
*    THE INDEX DID NOT EQUAL THE INDEX BYTE IN ANY OF THE          000A
*    ACTIVE ENTRIES IN THE LIST.  THIS COULD BE CAUSED BY A CONTROL000A
*    UNIT FAILURE WHICH GARBLED THE INDX, OR BY A PROGRAM ERROR    000A
*    WHICH CLOBBERED THE LIST ADDRESS(DECPOLPT), THE INDEX ITSELF  000A
*    (THE MESSAGE AREA), OR WHICH SPECIFIED AN INVALID LIST(E.G.,  000A
*    THE WRONG NUMBER OF POLLING CHARACTERS PER ENTRY).            000A
*                                                                  000A
         B     BYPASS1                                             000A
STORE    LA    WREG,1(WREG)             ADJUST 'ENTRY MINUS ONE'   000A
*                                  TO BEGINNING OF ENTRY.          000A
         ST    WREG,DECENTRY            UPDATE DECENTRY.           000A
         NI    DECFLAGS,MASKALL-NOCOMPAR                           000B
BYPASS   MVI   EXITAP+1,NOP             CHANGE BRANCH TO A NOP.    000A
BYPASS1  TM    IOBFLAG1,IOBEX           IS IOB EXCEPTION ON?       000A
         BO    EXIT0                    IF SO, EXIT
         TM    IOBINCAM,ONLTT           IS ONLINE TEST FLAG ON     000D
         BO    EXITONLT                                            000D
         TM    DCBERROP,LERCNT          ARE LINE ERROR COUNTS SPECIFIED
         BZ    EXIT1                    IF NOT, EXIT
         SR    ICREG,ICREG              RESET REGISTER 1
         IC    ICREG,IOBUCBX            LOAD LINE NUMBER
         LA    W2REG,20                 MULTIPLY BY SIZE OF ERROR BLK
         MR    WREG,ICREG
         A     W2REG,DCBLERB            ADD ERROR BLOCK START ADDRESS
         IC    ICREG,CNT(W2REG)         LOAD TRANSMISSION COUNT
         LA    ICREG,1(ICREG)           ADD 1
         STC   ICREG,CNT(W2REG)         UPDATE TRANSMISSION COUNT
         SR    WREG,WREG                CLEAR W REG.          @ZA14069
         IC    WREG,CNTT(W2REG)
         CR    ICREG,WREG               COMPARE TO THRESHHOLD COUNT
         BNE   EXIT1
         A     WREG,CTNT(W2REG)         IF EQUAL, UPDATE TOTALS
         ST    WREG,CTNT(W2REG)
         SR    WREG,WREG
         IC    WREG,CDC(W2REG)          UPDATE TOTAL DATA CHECKS,
         SLL   WREG,16
         IC    WREG,CIR(W2REG)                       INTERVENTIONS REQ,
         A     WREG,CTDC(W2REG)
         ST    WREG,CTDC(W2REG)
         SR    WREG,WREG
         IC    WREG,CTO(W2REG)                       TIME OUTS
         AH    WREG,CTTO(W2REG)
         STH   WREG,CTTO(W2REG)
         XC    CNT(4,W2REG),CNT(W2REG)               RESET COUNTERS
         B     EXIT1
*                47 LINES DELETED BY (D/B V=V)---------------->@ZA14130
SOHRCOMP EQU   *
         TM    DECTYPE,AUTOPOLL    AUTOPOLL OPERATION?          YA01020
         BZ    GOONOUT             NO, NO USER COUNT            YA01020
         L     WREG,DECPOLPT       LOAD POLLING LIST ADR        YA01020
         LA    WREG,0(WREG)        CLEAR HIGH BYTE              YA01020
         SH    WREG,K2+2           SUB 2 TO POINT AT            YA01020
*                                  NUMBER OF ACTIVE ENTRIES     YA01020
         SR    ICREG,ICREG         CLEAR A WORK REG             YA01020
         IC    ICREG,1(WREG)       PICK UP FLAG BYTE            YA01020
         TM    1(WREG),X'0F'       IF ALREADY ZERO,             YA01020
         BZ    GOONOUT             DON'T MAKE IT NEGATIVE       YA01020
         TM    IOBFLAG1,IOBEX      IOB EXCEPTION?               YA01020
         BZ    SOHRCMP1            NO, GO AHEAD AND DECREMENT   YA01020
         CLI   IOBECBPT,CCNORM     NORMAL COMPLETION?           YA01020
         BE    GOONOUT             YES, NO NEED TO DECREMENT    YA01020
SOHRCMP1 EQU   *                   DECREMENT USER COUNT         YA01020
         BCTR  ICREG,0             SUB 1 FROM FLAG              YA01020
         STC   ICREG,1(WREG)       BYTE AND STORE WITH          YA01020
*                                  DECREMENTED USER COUNT       YA01020
GOONOUT  EQU   *                                                YA01020
         NI    IOBINCAM,SOHRBUSY   TURN OFF SOH%R PROCESSING
*                                  COMPLETE AND BUSY BITS
         NI    DECTYPE,X'FF'-AUTOPOLL TURN OFF DECB AUTOPOLL    YA03238
         TM    UCBTYP+DISP1(UCBREG),BSC2 IS THIS DIAL (BSC2)?   YA01275
         BNO   EXIT1                    NO, RETURN              YA01553
         L     WREG,DECAREA             GET ADDR OF SOH%R MSG   YA01275
         ST    WREG,IOBERINF            SAVE IN IOB             YA01275
         B     EXIT1                    GO CLEAN UP & RETURN    YA01553
EXIT0    CLI   IOBECBPT,CCNORM          TEST FOR NAMAL COMPLETION
         BE    EXITREST                 IF NORMAL, BRANCH
EXIT1    NI    IOBINCAM,MASKALL-BUSY    SET OFF BUSY BIT
         L     CCWREG,IOBCSW            LOAD ADDRESS INTO REG
         SH    CCWREG,K8                SUBTRACT 8
         MVC   DECCMCOD,0(CCWREG)       MOVE COMMAND CODE,
         MVC   DECTPCOD,5(CCWREG)            TP OP CODE,
         MVC   DECSENS0(2),IOBSENS0          SENSE BYTES,
         MVC   DECCOUNT(2),IOBCSW+6          RESIDUAL COUNT AND
*              TEN LINES OF CODE REMOVED BY AZ03588            @ZA03588
*              THE CODE REMOVED WAS FOR ZA00529                @ZA03588
EXITBRK1 MVC   DECCSWST(2),IOBCSW+4          CSW STATUS TO DECB
         MVI   DECDCBAD,X'00'           RESET BUFFER COUNTER
         L     WREG,REG7(SAVEAREA)      GET ADDRESS OF UCB       Y02947
         CLI   DECTYPE+1,WRRSTMON       WRT RESET MONITOR ?    @ZA31078
         BNE   EXITREST                 IF NOT BRANCH          @ZA31078
         CLI   5(CCWREG),X'08'          WRT EOT CCW ?          @ZA31078
         BNE   EXITREST                 IF NOT BRANCH          @ZA31078
         LA    CCWREG,8(CCWREG)         GET ADD OF NEXT CCW    @ZA31078
         ST    CCWREG,IOBSTART          STORE CCW START ADD    @ZA31078
         TM    IOBFLAG2,RESETPL         RESETPL ISSUED ?       @ZA31078
         BNO   REXIT                    CONTINUE CHANNEL PROG  @ZA31078
         MVI   IOBECBPT,X'48'           INDICATE HIO COMP CODE @ZA31078
*                 6 LINES REMOVED BY-------------------------->@ZA14070
EXITREST LM    RETREG,SAVEAREA,DISP0(SAVEAREA) RESTORE REGS      Y02947
         BR    RETREG                   RETIRN TO IOS
         SPACE 3
REXITA   XC    DECRESPN(2),DECRESPN     CLEAR DECB RESPONSE FIELD  000E
REXITB   LA    CCWREG,8(CCWREG)         UPDATE CCW POINTER         000E
REXIT    ST    CCWREG,IOBSTART          STORE CCW START ADDRESS
REXIT1   NI    IOBFLAG1,MASKALL-IOBEX   SET OFF IOB EXCEPTION FLAG
         LM    RETREG,SAVEAREA,DISP0(SAVEAREA)  RESTORE REGS     Y02947
         B     8(RETREG)                RETURN TO IOS+8
ERREXIT  LM    RETREG,SAVEAREA,DISP0(SAVEAREA)  RESTORE REGS     Y02947
         B     4(RETREG)                RETURN TO IOS + 4
EXITONLT L     UCBREG,DEBIRBAD(DEBREG)  GET ADDRS OF POINTER TO IRB000E
         L     UCBREG,0(UCBREG)         GET ONLT IRB ADDRESS       000E
         BAL   WREG,IQESETUP            BRANCH TO SET UP IQE'S     000E
         B     ONLTEXIT                 ASYNCH                     000E
*                    4 LINES REMOVED BY----------------------->@ZA14070
NOIQE    OI    DECERRST,SNO            SET SHOULD NOT OCCUR      A43784
         MVI   IOBECBPT,CCPER          INDICATE PERM ERROR       A43784
*                   2 LINES REMOVED BY------------------------>@ZA14070
         B     EXIT1                                             A43784
IQESETUP EQU   *                                                 A43784
*             TWO LINES DELETED FOR THE FOLLOWING APAR          YA02165
         L     ICREG,96(UCBREG)        LOAD 1ST IQE ADDRESS      A43784
         LA    ICREG,0(ICREG)           CLEAR HIGH ORDER BYTE  @ZA14071
         LTR   ICREG,ICREG             IS THERE AN IQE ADDR?    YA02165
         BZ    NOIQE                   NO, FLAG AS AN ERROR     YA02165
         MVC   96(4,UCBREG),0(ICREG)    DEQUEUE                    000E
         XC    0(4,ICREG),0(ICREG)      ZERO LINK FIELD            000D
         ST    IOBREG,4(ICREG)          STORE IOB ADRS AS PARM     000D
*                 1 LINE REMOVED BY--------------------------->@ZA14071
         LCR   ICREG,ICREG              COMPLEMENT THE ADDRESS     000D
         L     BRREG,SIXT               LOAD CVT ADDRESS           000D
         USING CVT,BRREG                ESTABLISH CVT ADDR       Y02947
         L     BRREG,CVT0EF00           LOAD ASYNCH RT ADDRESS   Y02947
         DROP  BRREG                  DROP CVT ADDRESSABILITY    Y02947
         BALR  RETREG,BRREG             LINK TO SCHEDULE ROUTINE   000E
         L     BAS2REG,DISP4(SAVEAREA) RESTORE                   Y02947
         A     BAS2REG,FOURK                   SECOND BASE       Y02947
         BR    WREG                                                000E
*                                                                  000I
EXITBRK  EQU   *                                                   000I
         CLI   0(CCWREG),X'01'          IS COMMAND WRITE           000I
         BNE   PWROFF                                              000I
         MVC   DECCMCOD,0(CCWREG)       MOVE COMMAND CODE,       A33942
         MVC   DECTPCOD,5(CCWREG)       TP OP CODE,              A33942
         MVC   DECSENS0(2),IOBSENS0     SENSE BYTES,             A33942
         MVC   DECCOUNT(2),IOBCSW+6     RESIDUAL COUNT,          A33942
         MVC   DECCSWST(2),IOBCSW+4     AND CSW STATUS TO DECB   A33942
         L     UCBREG,DEBIRBAD(DEBREG)  GET ADDRS OF POINTER TO IRB
         LA    UCBREG,DISP0(UCBREG)  CLEAR HI BYTE          LD @ZA02324
         LTR   UCBREG,UCBREG       TEST FOR ZERO ADDRESS    LD @ZA02324
         BZ    NOIQE               BR IF ZERO ADDRESS       LD @ZA02324
         L     UCBREG,8(UCBREG)         GET 2741 BREAK IRB ADDRESS
         BAL   WREG,IQESETUP            BRANCH TO SET UP IQE'S
*                                                                  000I
ONLTEXIT LM    RETREG,SAVEAREA,DISP0(SAVEAREA)  RESTORE REGS     Y02947
         B     4(RETREG)                RETURN TO IOS + 4          000D
         EJECT
K2       DC    F'2'                     TWO                        000B
CODEMSK  DC    F'0'
MASKDB   DC    X'00FFFFFC'
TPMSK    DC    X'0000000F'
SETMSK   DC    X'00100000'                                     @ZA15402
RESETMSK DC    X'FFEFFFFF'                                     @ZA15402
ZERO     DC    F'0'
ZERO3    DC    X'000000'                                           000L
K4       DC    H'4'                     MUST FOLLOW A ZERO FIELD
K1       DC    H'1'                     ONE                        000B
WA       DC    H'0'
K8       DC    H'8'
K16      DC    H'16'
K32      DC    H'32'                                        LD @ZA02320
NINES    DC    5X'13'                   CODE FOR NINES             000D
TWENTY   DC    H'20'                                        LD @ZA02312
NINE2260 DC    5X'59'                   2260 CODE FOR NINES        000D
SPACEY   DC    X'0176'                                             1263
SPACEN   DC    X'0140'                                             1263
CNINES   DC    X'1616161616'            CORRESPONDENCE CODE        000I
C2741    EQU   X'55'                    2741 CORRS                 000I
DPREO    DC    X'163E4C'                CIRCLE D PRE O (2760)      000K
         DS    0F                                               YA03265
LIST     DC    X'80000000'              LIST FORM                Y02947
THREE20  DC    H'320'                   LENGTH OF BOTH IDALS     Y02947
SAVE19MS DC    18F'0'                   SAVEAREA FOR BUFFER      YM4063
*                                       ROUTINE (IGG019MS)       YM4063
A0       EQU   X'A0'                                           @ZA04650
SPFLAG   EQU   X'9F'          SPECIAL FLAG SET BY 504C         @ZA04679
DEBIRBAD EQU   8                        OFSET TO IRB ADDRESS       000D
DEBTCBAD EQU   0                        OFFSET TO TCB ADDRESS      000D
DEBNMEXT EQU   16
DEBUCBAD EQU   32
UCBFL1   EQU   6                        UCB FLAG 1
CTNT     EQU   0                        TOTAL NUMBER TRANSMISSIONS
CTDC     EQU   4                        TOTAL NUMBER DATA CHECKS
CTIR     EQU   6                        TOTAL NUMBER INTERVENTIONS REQ
CTTO     EQU   8                        TOTAL NUMBER TIME OUTS
CNT      EQU   10                       NUMBER TRANSMISSIONS
CDC      EQU   11                       DATA CHECKS
CIR      EQU   12                       INTERVENTIONS REQUIRED
CTO      EQU   13                       TIME OUTS
CNTT     EQU   14                       THRESHHOLD TOTAL
FOXE     EQU   X'FE'
CONNECT  EQU   X'DD'                                               000L
K0       EQU   X'00'                                               000L
RDINIT   EQU   X'01'                                               000L
RDCONV   EQU   X'05'                                              M3962
TPWIDENQ EQU   X'03'                                               000L
ONE      EQU   X'01'                                               000L
TWO      EQU   X'02'                                               000L
SWLST    EQU   X'FF'                                               000L
RCONTONE EQU   X'1E'                                               000L
RDCONECT EQU   X'11'
OPTPWTD  EQU   X'10'                                               000C
BRANCH   EQU   X'F0'                                               000A
NOP      EQU   X'00'                                               000A
AUTOPOLL EQU   X'80'                                               000A
DYNBUF   EQU   X'08'                                               000A
ARMSEEK  EQU   X'02'                    ARM SEEKING FLAG
SIXT     EQU   X'10'
RESETPL  EQU   X'01'                    RESET P/L BIT IN IOB FLAG 2
WRITE    EQU   X'01'                    WRITE COMMAND CODE
EOTRCVD  EQU   X'40'
RVIRCV   EQU   X'42'
WACKRCV  EQU   X'C0'
POLL     EQU   X'09'                                               000A
TPWPA    EQU   X'03'                    TP OP CODE FOR WRITE POLL/ADRS
NOCOMPAR EQU   X'10'                                               000A
SLVCONT  EQU   X'10'                                           @ZA04873
DCBMASTA EQU   X'80'                                             A43796
NEGRESPN EQU   X'04'                    NEGATIVE RESP OR ALL ENTRYS SKP
FORMAT   EQU   X'20'                    FORMAT IN LIST CONTROL BYTE
DISABLE  EQU   X'2F'                    DISABLE COMMAND CODE
SKIP     EQU   X'40'                    SKIP BIT IN TERM LIST CTRL BYTE
EOL      EQU   X'80'                    EOL BIT IN TERM LIST CTRL BYTE
SNO      EQU   X'40'                    SHOULD NOT OCCUR ERROR
BUSY     EQU   X'40'                    BUSY BIT
LERCNT   EQU   X'08'
CCNORM   EQU   X'7F'                    NORMAL COMPLETION CODE
IOBEX    EQU   X'04'                    IOB EXCEPTION FLAG
IOBEXE   EQU   X'24'
SENSTA   EQU   X'04'                    SENSE STATUS DONE      @ZA14130
WRWBT    EQU   X'1A'                                               000B
CSWUE    EQU   X'01'                    UNIT EXCEPTION STATUS
READ     EQU   X'02'                    READ COMMAND CODE
ONLTT    EQU   X'01'                    ON-LINE TERMINAL TEST BIT
AUTOPOL  EQU   X'40'                                             A28625
CIRCLED  EQU   X'16'                                             A28625
PCI      EQU   X'08'
PCIPC    EQU   X'A0'
TICCMND  EQU   X'08'                                               3712
RETRYCNT EQU   2                        MAXIMUM RETRY COUNT
MASKALL  EQU   X'FF'                    ALL 1'S
CCPER    EQU   X'41'                    PERMANENT ERROR COMPLETION CODE
TPRESET  EQU   X'21'                    TP-OP CODE FOR ALL RESET CCW'S
TPFPCI   EQU   X'40'                    TP-OP CODE FOR FIRST PCI   1838
TPEOCP   EQU   X'80'                   TP-OP CODE FOR END OF  CHANNEL
UCBTYP   EQU   16                                                  000B
UCBEXTPT EQU   X'14'                                           @ZA15402
INTBLCHK EQU   X'40'                                               000B
FLIP     EQU   X'02'                                               000B
DYNBF    EQU   X'08'                                               000B
IMPRESP  EQU   X'40'                                               000B
BISYNCH  EQU   X'90'                                               000B
LSTCCW   EQU   X'80'                                               000B
WRRST    EQU     X'0A'                                             000B
ACK0PT   EQU   X'00'                                               000B
ACK1PT   EQU   X'02'                                               000B
FULWORD  EQU   X'FC'                                               000B
RDIDENT  EQU   X'03'                                               000B
WRTIV    EQU   X'0D'                                               000B
RDINQ    EQU   X'15'                                               000B
RDININQ  EQU   X'19'                                               000B
RDCONT   EQU   X'03'                    READ CONTINUE
RDRESP   EQU   X'25'               READ RESPONSE TP CODE        YA01026
RDTEXT1  EQU   X'51'               FIRST READ TEXT TP CODE      YA01026
WRONGACK EQU   X'20'                                               000B
OKACK    EQU   X'9F'                                               000B
*                                  PROGRAM
OPTPWTN  EQU   X'0A'                    WRITE TN TYPE CODE         000A
TWNTY260 EQU   X'82'                    2260 DEVICE CODE
DATAC    EQU   X'80'                    CHANNEL PROGRAM DATA CHAINING
INLTTSTW EQU   X'1D'                    MASKALL-WRITE TI OPER      000D
ONLT     EQU   X'10'                                               000D
ONLTRFT  EQU   X'80'                                             A28612
ONLTTSTR EQU   X'1E'                    MASKALL-READ TI            000D
ONLTTSTW EQU   X'0D'                    MASKALL-WRITE TI OPER      000D
CKRVIRPT EQU   X'20'               BIT 2                           000J
STRVIRPT EQU   X'DF'               ALL BITS ON EXCEPT BIT 2        000J
RESET    EQU   X'80'                    RESET BIT                  000D
PREP     EQU   X'06'                                               000I
CSWUC    EQU   X'02'                                               000I
EBC      DC    X'C3'                   EBCDIC C                    000M
EBE      DC    X'C5'                   EBCDIC E                    000M
EBS      DC    X'E2'                   EBCDIC S                    000M
USC      DC    X'43'                   USASCII C                   000M
USE      DC    X'45'                   USASCII E                   000M
USS      DC    X'53'                   USASCII S                   000M
EBSLASH  EQU   X'61'                    EBCDIC /
EBR      EQU   X'D9'                    EBCDIC R
USSLASH  EQU   X'2F'                    USASCII /
USR      EQU   X'52'                    USASCII R
SMSG     EQU   X'80'                    3270 STATUS MSG FLAG
RFTBIT   EQU   X'10'                    RFT RCVD FROM GEN POLL CU
SOHRBIT1 EQU   X'BF'                    THESE 2 BITS INDICATE AN
SOHRBIT2 EQU   X'02'                    SOH%R MSG WAS RCVD
DBOCEBC  DC    X'C8C1'             BUSY, OP CHECK
DBEBC    DC    X'C840'             DEVICE BUSY
DEEBC    DC    X'C240'             DEVICE END
SOHRBUSY EQU   X'BB'               SOH%R PROCESSING COMPLETE
TIMEOUT  EQU   X'01'               TIMEOUT                      YA01019
MSGTYPE  EQU   2                        DISP IN SOH% MSGS OF TYPE
MSGLNGTH EQU   10                       LENGTH OF STD 3270 RFT  YA02157
*                                       MINUS HEADER            YA02157
MSGSTART EQU   4                        LENGTH OF 3270 RFT HEADER
STAT     EQU   6                        DISP OF S/S IN SOH%R MSG
STATLNG  EQU   2                        # OF S/S BYTES IN SOH%R MSG
*                                  AND BUSY BITS
DBOCASC  DC    X'4841'             BUSY OP CHECK
DBASC    DC    X'4820'             DEVICE BUSY
DEASC    DC    X'4220'             DEVICE END
DISP0    EQU   0                   DISPLACEMENT OF 0             Y02947
DISP1    EQU   1                   DISPLACEMENT OF 1             Y02947
DISP3    EQU   3                   DISPLACEMENT OF 3        LD @ZA02319
DISP4    EQU   4                   DISPLACEMENT OF 4             Y02947
DISP5    EQU   5                   DISPLACEMENT OF 5        LD @ZA02320
DISP6    EQU   6                   DISPLACEMENT OF 6        LD @ZA02319
DISP7    EQU   7                   DISPLACEMENT OF 7             Y02947
DISP8    EQU   8                   DISPLACEMENT OF 8             Y02947
DISP12   EQU   12                  DISPLACEMENT OF 12            Y02947
DISP13   EQU   13                  DISPLACEMENT OF 13       LD @ZA00536
DISP16   EQU   16                  DISPLACEMENT OF 16       LD @ZA02320
PGFREE   EQU   X'20'               PAGE FREE FUNCTION            Y02947
LASTVSL  EQU   X'80'               LAST VSL ENTRY                Y02947
REG7     EQU   36                  DISP INTO SAVE AREA OF REG 7  S99245
BSC2     EQU   X'90'               BSC2 FEATURE IN UCB           S99245
IDBEGIN  EQU   64             DISP PAST IOBCPA OF BSC2 TERM ID   S99245
ID4BYTES EQU   4                   LENGTH OF BSC2 TERM ID SAVED  S99245
IDDISP   EQU   8                   DISP INTO SWLIST OF TERM ID   S99245
DISPID   EQU   0                   DISP INTO NON-SWLIST OF ID    S99245
DLRFTLNG EQU   7               # OF PARMS IN DIAL 3270 RFT  LD @ZA02313
RDINQMON EQU   X'09'               READ INQUIRY MONITOR          S99245
WRRSTMON EQU   X'0B'               WRITE RESET MONITOR           S99245
RESIDCNT EQU   6                  DISP INTO CCW OF RESIDUAL CNT YA02162
RESPNLNG EQU   2                   LENGTH OF DECRESPN           YA02162
ONECHAR  EQU   1                   ONE CHAR RESPONSE LENGTH     YA02162
DISP20   EQU   20                  DISPLACEMENT OF 20            Y02947
EOTCHAR  EQU   X'37'               EOT CHARACTER                YA03266
CHKMOD   EQU   X'01'                                           @ZA03598
CKWTTA   EQU   X'60'                                           @ZA03598
CK115A   EQU   X'40'                                           @ZA03598
X10      EQU   X'10'                                        LD @ZA02319
X30      EQU   X'30'                                           @ZA04877
X82      EQU   X'82'                                        LD @ZA02321
X84      EQU   X'84'                                        LD @ZA02321
X1F      EQU   X'1F'                                        LD @ZA02320
XF0      EQU   X'F0'                                           @ZA04877
THREE    EQU   3                                            LD @ZA02320
TEN      EQU   10                                           LD @ZA02319
TICBIT   EQU   X'01'                                        LD @ZA02320
PROGCHK  EQU   X'20'                                        LD @ZA02320
WRT1ST   EQU   X'40'                                        LD @ZA02320
WRTTEXT  EQU   X'11'                                        LD @ZA02320
WRTTC    EQU   X'1C'               WRITE CONNECT               @ZA04190
XFF      EQU   X'FF'                                           @ZA08045
         CNOP  0,8
         EJECT
         IECTDECB
         EJECT
         IECTIOBX
         EJECT
         DCBD  DSORG=BX,DEVD=BS                                    000B
         EJECT
         IKJTCB DSECT=YES,LIST=YES
         EJECT
CVT      DSECT
         CVT    LIST=NO
         END
