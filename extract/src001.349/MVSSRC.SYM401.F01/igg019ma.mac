         TITLE 'IGG019MA - BTAM READ/WRITE ROUTINE'
***********************************************************************
*                                                                     *
* MODULE NAME: IGG019MA   (OS/VS)                                     *
*                                                                     *
* DESCRIPTIVE NAME: BTAM READ/WRITE ROUTINE                           *
*                                                                     *
* COPYRIGHT: NONE                                                     *
*                                                                     *
* STATUS: RELEASE 3                                                   *
*                                                                     *
* FUNCTION:         GENERATE TELECOMMUNICATION CHANNEL PROGRAMS       *
*                                                                     *
* ENTRY POINT:      ENTRY IS TO 1ST EXECUTABLE INSTRUCTION FROM USER  *
*                   PROGRAM READ/WRITE MACRO OR QTAM OR ERP           *
*                                                                     *
* INPUT:            REGISTER  1 - ADDRESS OF DECB                     *
*                   REGISTER 14 - RETURN ADDRESS                      *
*                                                                     *
* OUTPUT:           1.  UPDATED IOB AND DECB FIELDS                   *
*                   2.  GENERATED CHANNEL PROGRAM                     *
*                   3.  RETURN CODE IN REGISTER 15                    *
*                       0 - NORMAL RETURN                             *
*                       4 - CHANNEL BUSY                              *
*                       8 - INVALID RELATIVE LINE NUMBER              *
*                       C - INVALID COMMAND                           *
*                      10 - ALL TERMINALS SKIP BIT ON                 *
*                      14 - LINE ERROR                                *
*                      18 - NO BUFFER AVAILABLE                       *
*                      1C - NO BUFFER POOL                            *
*                      20 - NO BUFFER ROUTINE                         *
*                      24 - READ FROM POSITION WITH NO SBA            *
*                      28 - INVALID CONTROL BLOCK FOUND               *
*                      2C - OLTEP IS EXECUTING                        *
*                                                                     *
* EXTERNAL ROUTINES: 1.  REQUEST/RELEASE BUFFER ROUTINE (IGG019MS)    *
*                    2.  DEVICE I/O MODULE FOR SPECIFIED DEVICE       *
*                    3.  IOS SVC 0 ROUTINE (EXECUTE CHANNEL PROGRAM)  *
*                                                                     *
* EXIT:             RETURN TO CALLING PROGRAM ADDRESS IN REGISTER 14  *
*                                                                     *
* IN LINE ROUTINES: THE READ/WRITE ROUTINE FINDS THE IOB, FINDS THE   *
*                   DEVICE I/O MODULE, OBTAINS THE AREA ADDRESS AND   *
*                   LENGTH, LOOPS ON THE CCW COUNT UNTIL ALL CCWS     *
*                   HAVE BEEN MOVED AND COMPLETED IN THE CHANNEL      *
*                   PROGRAM AREA OF THE IOB, AND ISSUES EXCP.         *
*                                                                     *
*                   THE CCW'S IN THE DEVICE I/O MODULE ARE COMPLETE   *
*                   EXCEPT FOR AREA ADDRESS AND COUNT.  AN INDEX IN   *
*                   THE 2ND AND 7TH BYTES OF THE CCW DETERMINES WHICH *
*                   SUBROUTINE IS BRANCHED TO TO COMPLETE THE AREA    *
*                   ADDRESS AND COUNT RESPECTIVELY.  WHERE OFFSETS    *
*                   TO THE NORMAL ADRS OR COUNT OCCUR THEY ALREADY    *
*                   EXIST IN THE CCW. THE SUB-ROUTINES ARE-           *
*                                                                     *
*                        A.  DATAREA - COMPLETES THE AREA ADDRESS FOR *
*                                      A READ/WRITE DATA OR READ RESP.*
*                                      INTO AREA COMMAND.             *
*                                                                     *
*                        B.  RESPAREA - PROVIDES THE RESPONSE ADDRESS *
*                                       IN THE DECB.                  *
*                                                                     *
*                        C.  SPECCHAR - PROVIDES THE CONTROL CHAR.    *
*                                       ADDRESS.  THE CONTROL CHARAC- *
*                                       TERS ARE DEFINED AS CONSTANTS *
*                                       AT THE END OF THE DEVICE I/O  *
*                                       MODULE.                       *
*                                                                     *
*                        D.  LIST - PROVIDES THE ADDRESS OF THE DIAL  *
*                                   DIGITS AND THEIR COUNT            *
*                                                                     *
*                        E.  PA1050D - SEE PALIST                     *
*                                                                     *
*                        F.  PALIST - FINDS THE 1ST NONSKIP POLLING   *
*                                     OR ADDRESSING ENTRY AND PLACES  *
*                                     ITS ADDRESS IN THE CCW.         *
*                                                                     *
*                        G.  TWXIDENT - PROVIDES THE ADDRESS AND      *
*                                       COUNT OF THE TWX OR BSC       *
*                                       IDENTIFICATION CHARACTERS.    *
*                                                                     *
*                        H.  DISABLE - DETERMINES TYPE OF DIALING     *
*                                       LIST AND INSERTS ENABLE       *
*                                       COMMAND IF IT IS AN ANSWER    *
*                                       LIST.                         *
*                                                                     *
*                        I.  DATALNG -  FOR READ/WRITE DATA IT        *
*                                       OBTAINS THE AREA LENGTH FROM  *
*                                       THE DECB.                     *
*                                                                     *
*                        J.  AUTOPOLL - SETS UP CHANNEL PROGRAMS      *
*                                       FOR AUTOPOLL OPERATIONS       *
*                                                                     *
*                        K.  BSCCHARS - PROVIDES THE CONTROL          *
*                                       CHARACTER ADDRESS.  THE       *
*                                       CONTROL CHARACTERS ARE IN     *
*                                       THE DCB.                      *
*                                                                     *
*                        L.  BSCDIAL - PROVIDES THE ADDRESS AND COUNT *
*                                      OF DIAL CHARACTERS FOR BSC.    *
*                                                                     *
*                        M.  BSCIDENT - PROVIDES THE ADDRESS AND      *
*                                       COUNT OF THE TERMINAL ID      *
*                                       CHARACTERS.                   *
*                                                                     *
*                        N.  BSCRESP - PROVIDES THE ADDRESS OF THE    *
*                                      PROPER RESPONSE FOR BSC.       *
*                                                                     *
*                        O.  BSCWAREA - COMPLETES THE AREA ADDRESS    *
*                                       FOR WRITE DATA FROM THE WRITE *
*                                       AREA.                         *
*                                                                     *
*                        P.  BSCGRAPH - PROVIDES THE ADDRESS OF       *
*                                       LEADING GRAPHICS FOR BSC.     *
*                                                                     *
*                        Q.  BSCWLNG - OBTAINS THE WRITE AREA LENGTH  *
*                                      FROM THE DECB.                 *
*                                                                     *
*                        R.  WTTAWRU - PROVIDES THE ADDRESS OF A WRU  *
*                                      BYTE IF WRU IS CODED YES IN    *
*                                      THE DCB, OTHERWISE THE ADDRESS *
*                                      OF A LETTER SHIFT CHARACTER    *
*                                      FOR WTTA.                      *
*                                      PROVIDES THE PAD CHARACTERS    *
*                                      ADDR AND THE COUNT IF IT IS A  *
*                                      WRITE PAD CHARACTERS.          *
*                                                                     *
*                        S.  WTTASNS - PUT X'FF' IN THE RESPONSE      *
*                                      FIELD OF THE DECB, WHEN A READ *
*                                      INITIAL OPERATION IS INDICATED *
*                                      FOR WTTA.                      *
*                                                                     *
*                        T.  CNTCHARS- POINTS DATA FIELD OF           *
*                                      WRITE FRAME CHANGE CCW TO      *
*                                      AREA POINTED TO BY ENTRY       *
*                                      FIELD OF DECB.                 *
*                                                                     *
*                        U.  FRAMECH - POINTS DATA AREA FIELD OF      *
*                                      WRITE FRAME CHANGE CCW PAST    *
*                                      DIAL CHARS IN TERMINAL LIST    *
*                                      TO POINT TO FRAME CHANGE       *
*                                      CHARACTERS.                    *
*                                                                     *
*                   DBDATA - THIS ROUTINE IS ENTERED FROM 'DATAREA'   *
*                   WHEN DYNAMIC BUFFERING IS SPECIFIED.  IT PROVIDES *
*                   THE ADDITIONAL CCW'S NEEDED AND MODIFIES THE      *
*                   APPROPIATE FIELDS (AREA ADDRESS, FLAGS, TP/OP     *
*                   CODE, COUNT).                                     *
*                                                                     *
*                        V.   SWIDREC - PUTS THE ADDRESS OF THE       *
*                                       READ-IN-AREA FIELD OF THE     *
*                                       SWLST TERMINAL LIST IN THE    *
*                                       AREA FIELD OF THE CCW AND     *
*                                       THE READ-IN-AREA WIDTH IN     *
*                                       THE COUNT FIELD OF THE CCW.   *
*                                                                     *
*                        W.   SWIDSENT- PUTS THE ADDRESS OF THE       *
*                                       IDSENT FIELD OF THE SWLST     *
*                                       TERMINAL LIST IN THE AREA     *
*                                       FIELD OF THE CCW AND THE      *
*                                       IDCOUNT IN THE COUNT FIELD    *
*                                       OF THE CCW.                   *
*                                                                     *
*                        X.   SWLSTTIC- PUTS THE ADDRESS OF CCW 1.    *
*                                       IN THE AREA FIELD OF THE      *
*                                       CCW.                          *
*                        Y.  RDFRPOS - USED FOR READ BUFFER FROM      *
*                                      POSITION AND READ MODIFIED     *
*                                      FROM POSITION. TESTS FOR       *
*                                      AN SBA ORDER.                  *
*                                                                     *
* ATTRIBUTES:       THIS ROUTINE IS REENTRANT                         *
*                                                                     *
* CHANGE ACTIVITY AS FOLLOWS:                                         *
***********************************************************************
*            APARS                          PTMS                      *
*        YA01260  (10/19/73)            YM4057  (10/3/73) NO CODE     *
*        YA01016  (10/19/73)            YM4072  (10/15/73) DELETE     *
*        YA01028  (10/19/73)            YM5663  (12/11/73) PROLOG     *
*        YA01029  (10/19/73)            YM7701  (2/20/74)             *
*        YA01018  (10/19/73)                                          *
*        YA01856  (10/22/73)                                          *
*        YA02057  (10/22/73)                                          *
*        YA02153  (10/22/73)                                          *
*        YA02462  (10/22/73) FIX 1856                                 *
*        YA02128  (10/22/73)                                          *
*        YA03267  (2/4/74)                                            *
*        YA03268  (2/4/74)                                            *
*        YA03952  (3/19/74)                                           *
*        YA00542  (10/30/74)                                          *
*        YA02302  (10/30/74)                                          *
*        ZA02800  (12/20/74)          AZ04152  (09/24/75)             *
*        AZ07653  (12/08/75)          AZ07657  (12/08/75)             *
*        AZ07658  (12/09/75)          AZ09336  (03/11/76)             *
*        AZ10035  (05/10/76)          AZ11032  (05/11/76)             *
*        AZ11036  (05/12/76)          AZ11038  (07/23/76)             *
***********************************************************************
         EJECT
IGG019MA CSECT
         SPACE 5
CCWTBLRG EQU   0                        ADDRESS OF TBL OF ALL CCW'S
PARMREG0 EQU   0                        PARAMETER FOR SVC       YA02128
REG0     EQU   0                   USED IN BCTR FOR NO BRANCH    Y02947
DECBREG  EQU   1                        PTR TO DEC
PARMREG1 EQU   1                        PARAMETER FOR SVC       YA02128
IOBREG   EQU   2                        PTR TO IOB
AREAREG  EQU   3                        ADDRESS OF READ-WRITE AREA
TCBREG   EQU   3                        PTR TO TCB               Y02947
DCBREG   EQU   4                        PTR TO DCB
CCWREG   EQU   5                        PTR TO CHANNEL COMMAND WORDS
CHPRGREG EQU   6                        ADDRESS OF MODEL CHNL PROGRAM
ZEROREG  EQU   7                        COUNT OF CCW'S COMPLETED.
DEBREG   EQU   7                        PTR TO DEB               Y02947
ICSREG   EQU   8                        WORK REGISTER
ICREG    EQU   9                        1 CHARACTER WORK REGISTER
ONEREG   EQU   10                       CONTAINS 1 FOR COUNT
UCBPTREG EQU   10                                                Y02947
UCBREG   EQU   11                       PTR TO UCB               Y02947
TOTREG   EQU   11                       CONTAINS NO OF CCW'S IN CHNL PG
BASEREG  EQU   12                       BASE REGISTER
SAVEREG  EQU   13                       SAVE REGISTER
RETREG   EQU   14                       RETURN REGISTER
BRREG    EQU   15
         EJECT                                                   Y02947
L0       EQU   0                                               @ZA10035
L1       EQU   1                                               @ZA10035
L3       EQU   3                                               @ZA10035
L6       EQU   6                                               @ZA11038
L7       EQU   7                                               @ZA10035
L8       EQU   8                                               @ZA11038
L15      EQU   15                                              @ZA06399
L16      EQU   16                                              @ZA06399
L23      EQU   23
L24      EQU   24
NMEXT    EQU   16                  OFFSET TO NO. OF RLNS
BTAMSVC  EQU   116                 SVC FOR IECTSVC              YA02128
ERROR8   EQU   8                   BAD RETURN CODE              YA02128
MASKALL  EQU   X'FF'
ERP      EQU   X'24'
SADEN    EQU   X'80'
BUSY     EQU   X'40'                    BUSY BIT
CCFLAG   EQU   X'40'                                               000B
ZERO     EQU   X'00'                                               000B
ANDOFF   EQU   X'10'                                             A32468
WRTMASK  EQU   X'0D'                                               000H
ONLTST   EQU   X'40'                                               000H
ANSLST   EQU   X'7F'                                               000H
WTLIST   EQU   X'80'                                               000H
MASKBITS EQU   X'0F'                                               000H
EOTWTFLG EQU   X'04'                    WTTA EOT FLAG              000G
WRUWTFLG EQU   X'40'                    WTTA WRU FLAG              000G
RLNGTH   EQU   1                   RLN IS 1 BYTE LONG
SAVE15   EQU   19                  DISP OF REG 15 IN SAVE AREA
OLTEPROG EQU   X'2C'               OLTEP IN PROGRESS CODE
TWOBITS  EQU   2                   USED IN SLA TO MULT BY 4
PREFIX   EQU   28                  LENGTH OF DEB PREFIX
INVALCB  EQU   X'28'               INVALID CTL BLOCK CODE
NOSBA    EQU   X'24'               NO SBA ORDER CODE
GOODRTN  EQU   X'00'               GOOD RETURN CODE
NEXTNTRY EQU   4                   DISP OF NEXT ADDR IN UCB LIST
POLPTLNG EQU   4                   LENGTH OF DECPOLPT FIELD
ECBPT    EQU   4                   DISP OF ECB ADDR IN IOB
ECBPTLNG EQU   4                   LENGTH OF ECB ADDR
CPAPT    EQU   64                  DISP OF CHAN PGM IN IOB
CPALNG   EQU   24                  LENGTH OF BSC3 CHAN PGM
STARTPT  EQU   16                  DISP OF START IN IOB
FLAG1LNG EQU   1                   LENGTH OF IOBFLAG1 FIELD
CC       EQU   X'40'                    COMMAND CHAINING FLAG      000G
SWLST    EQU   X'FF'                                               000L
GCB      EQU   27                  OFFSET IN UCB TO ATTN HANDLING FLAGS
GRAF     EQU   X'1C'               OFFSET TO GRAPHIC STATUS     YA02128
ATTN     EQU   X'01'               ATTENTION BIT
OLTEPSKP EQU   X'82'               OLTEP EXECUTING, SKIP BITS
READRLN  EQU   36                  OFFSET IN UCB OF RLN OF DVC TO BE RD
OLTEP    EQU   X'80'               UCB GCB OLTEP FLAG
RDINIT   EQU   X'01'               CMD CODE FOR READ INIT
LCL3270  EQU   X'FE'               FIRST BYTE OF LOCAL 3270 @ IN
XFE      EQU   X'FE'               MASK FOR HEX FE           LD YA03952
*                                   DVC I/O MODULE
RDTI     EQU   X'08'               READ INITIAL ACTIVE      LD @ZA02800
*
*        THE ABOVE CHANGE WILL AFFECT INSTRUCTION IN SEQ # 457148
*
RDYBIT   EQU   X'20'               DEVICE HAS COME READY        YA02128
RDYDEVIC EQU   X'F0'               DECFLAGS FOR READY DEVICE    YA02128
SBA      EQU   X'11'               HEX VALUE OF SBA ORDER
SBABYTE  EQU   1                   SBA SHOULD BE BYTE1 OF 4 BYTE DATA
*                                   AREA (RD FROM POSITION INSTR'S)
         EJECT
         SR    BRREG,BRREG
         STM   RETREG,BASEREG,12(SAVEREG) SAVE REGISTERS
         BALR  BASEREG,0
         USING *,BASEREG
         USING IECTDECB,DECBREG
         USING IECTIOB,IOBREG
         USING IHADCB,DCBREG
         B     LOADCBAD
         SPACE 3
IOD      DS    0F
         DC    34F'0'                   ADDRESSES OF DEVICE I/O MODULES
         DC    X'FF'                    END OF DEVICE I/O ADDRESSES000A
         DC    C'IGG019MA'                                       Y02947
         DC    C'** MVS *'
         DC    C'&SYSDATE'         DATE LAST ASSEMBLY
         DS    0F                                                Y02947
PATCH    DC    XL150'00'           PATCH AREA                    Y02947
         SPACE 3
*                                       MAIN ROUTINE
         SPACE 2
LOADCBAD EQU   *                                            LD @ZA02302
         CLI   DISP4(DECBREG),XFF    DUMMY DECB ?           LD @ZA02302
         BNE   BTAMDECB            NO, CONTINUE             LD @ZA02302
         L     DECBREG,DISP4(DECBREG)  GET BTAM DECB        LD @ZA02302
         LA    DECBREG,DISP0(DECBREG)  CLEAR HI BYTE        LD @ZA02302
BTAMDECB EQU   *                                            LD @ZA02302
         L     DCBREG,DECDCBAD     LOAD DCB ADDR            LD @ZA02302
         LA    DCBREG,ZERO(DCBREG)   CLEAR HIGH BYTE           @ZA09336
         L     AREAREG,DCBDEBAD         LOAD ADDRESS OF DEB
         CLC   NMEXT(RLNGTH,AREAREG),DECRLN IS RLN GOOD
         BL    BADRLN                   IF NOT, BRANCH
         CLI   DECRLN,X'00'             IS RLN ZERO                2064
         BE    BADRLN                   IF SO, BRANCH              2064
         SR    IOBREG,IOBREG            CALCULATE PTR TO IOB
         IC    IOBREG,DCBEIOBX          SIZE
         SR    ICSREG,ICSREG            CLEAR WORK REGISTER
         SR    ICREG,ICREG              CLEAR WORK REGISTER
         IC    ICREG,DECRLN             PICK UP REL LINE NUMBER
         MR    ICSREG,IOBREG            IOB SIZE TIMES RLN
         LR    IOBREG,ICREG             RESULT IN IOBREG
         A     IOBREG,DCBIOBAD          PTR TO 1ST IOB
         LA    IOBREG,DISP0(IOBREG)     CLEAR HI ORDER BYTE     YA01856
         USING IECTDEB+X24,AREAREG      DEB ADDRESSABILITY     @ZA11032
         L     UCBREG,DEBUCBAD          GET 1ST. UCB ADDR      @ZA11032
         DROP  AREAREG                                         @ZA11032
         NI    DECCMCOD,X00  RESET CMD CODE / SWLST FLAG       @ZA11032
         TM    X13(UCBREG),X90  IS IT BSC                      @ZA11032
         BNO   NOTSWLST         NO BRANCH                      @ZA11032
         TM    X10(UCBREG),X07    IS IT BSC3                   @ZA11032
         BO    NOTSWLST           YES BRANCH                   @ZA11032
         TM    X10(UCBREG),X06    IS IT BCS2                   @ZA11032
         BNO   NOTSWLST           BRANCH NOT BCS2              @ZA11032
         L     AREAREG,DECENTRY   GET LIST ADDRESS             @ZA11032
         LA    AREAREG,ZERO(AREAREG)  CLEAR HIGH BYTE          @ZA11032
         LTR   AREAREG,AREAREG       IF NO ADDRESS             @ZA11032
         BZ    NOTSWLST              NO TERMINAL LIST          @ZA11032
         CLI   ZERO(AREAREG),SWLST   IS THIS SWLST             @ZA11032
         BNE   NOTSWLST              NO                        @ZA11032
         OI    DECCMCOD,XF0       SET SWLST FLAG               @ZA11032
NOTSWLST EQU   *                                               @ZA11032
         TM    IOBINCAM,BUSY            IS THE LINE BUSY
         BZ    SADTEST                  IF NOT, GO TO NEXT TEST
         TM    IOBFLAG1,ERP             IS ERP IN PROCESS
         BNO   CHPBUSY             IF NOT, EXIT
         TM    IOBINCAM,X'08'           ERP FLAG ON              A23900
         BNO   CHPBUSY             NO, EXIT WITH BUSY
SADTEST  TM    IOBINCAM,SADEN           WAS SAD OR ENABLE COMPLETED
         BZ    TESTOLT                  NO BRANCH             LD YM7701
         CLI   DECTYPE+ONE,RDINIT       READ INITIAL?         LD YM7701
         BNE   SADENER                  NO SET C. C. 14       LD YM7701
*        THREE LINES OF CODE DELETED BY APAR --------->        @ZA11032
         CLI   UCBTBYT3(UCBREG),UCB3DISP IS IT 3270?          LD YM7701
         BNE   SADENER                  NO SET C.C. 14        LD YM7701
TESTOLT  EQU   *                                              LD YM7701
         OI    IOBINCAM,BUSY            SET BUSY BIT
         TM    IOBINCAM,ONLT            IS ONLT IN CONTROL         000D
         BO    DEVMOD                                              000D
         NI    IOBFLAG2,X'FE'           TURN OFF RESET FLAG
DEVMOD   SR    ICSREG,ICSREG            RESET REG                  000D
         IC    ICSREG,DCBDEVTP          LOAD DEVICE TYPE
         SLA   ICSREG,2                 MULTIPLY BY 4
         L     CHPRGREG,IOD(ICSREG)     ADD TO DIRECTORY BASE AND LOAD
         LA    CCWREG,0(CHPRGREG)       SAVE ADRS OF START OF MODULE
         IC    ICSREG,DECTYPE+1         LOAD TYPE I/O OPERATION
         N     ICSREG,OFFMSK            AND OFF RST & INIBIT BITS (3F)
         IC    ICSREG,0(CHPRGREG,ICSREG) LOAD CHNL PROG OFFSET
         CH    ICSREG,FFCODE            IS IT VALID
         BE    INVALID                  NO
         SR    ICREG,ICREG             CLEAR WORK REG           YA01260
         IC    ICREG,DCBEIOBX          IOB SIZE                 YA01260
         LR    ONEREG,IOBREG           ADR OF IOB               YA01260
         AR    ONEREG,ICREG            POINT TO END OF IOB      YA01260
*        13   LINES OF CODE DELETED   BY APAR ---------------> @ZA11036
         BCTR  ONEREG,0                BACK UP ONE BYTE
         MVI   0(ONEREG),X'00'         CLEAR TOTAL CNT OF CHARS
         AR    CHPRGREG,ICSREG          ADD OFFSET; REG ADRS=CHAL PROG
*        ONE   LINE OF CODE DELETED BY APAR -------------->    @ZA11032
         STC   BRREG,DECTPCOD           RESET TP-OP CODE
         STC   BRREG,DECERRST           RESET ERROR STATUS
         ST    DECBREG,IOBECBPT         ST DECB PTR IN IOB
         TM    DECTYPE,X'02'            IS 'S' AREA SPECIFIED
         BZ    AREAOK                   NO                     @ZA11036
         NI    DECTYPE,X'FD'            AND OFF 'S' AREA BIT
         OI    DECTYPE,X'01'            OR ON 'S' LENGTH        YA01018
         CLI   DECTYPE+1,RCONTONE       IS THIS READ TCW           000L
         BE    LOAD                                                000L
         TM    DECTYPE+1,X'01'          IS COMMAND READ
         BZ    AREAOK                   NO
LOAD     EQU   *                                                   000L
*        11    LINES OF CODE DELETED BY APAR ------------>     @ZA11036
         L     CCWTBLRG,REQONE        LOAD REQ COUNT IN REG 0
         LR    DECBREG,DCBREG         LOAD DCB PTR INTO REG 1
         REQBUF (1),AREAREG,(0)         REQUEST DESIRED NUMBER   Y02947
*                                       OF BUFFERS               Y02947
         LTR   BRREG,BRREG              TEST IF BUFFER GRANTED
         BZ    BUFOK                    O.K.
         LA    BRREG,16(BRREG)          ADD 16 TO RETURN CODE
         B     NOBUF                    RETURN
*        30    LINES OF CODE DELETED BY APAR -------------->   @ZA11036
         B     AREAOK
BUFOK    L     DECBREG,24(SAVEREG)      RESTORE DECB ADDRESS
         ST    AREAREG,DECAREA          STORE BUFFER ADRS IN DECB
AREAOK   TM    DECTYPE,X'01'            TEST FOR 'S' LENGTH
         BZ    LNGOK                    NO
         NI    DECTYPE,X'FE'            AND OFF 'S' LENGTH BIT
         MVC   DECLNGTH(2),DCBBUFL      MOVE LENGTH FROM DCB TO DECB
LNGOK    MVC   DECRESPN(2),FULL4        RESET RESPONSE FIELD TO ZERO
         SR    CCWTBLRG,CCWTBLRG        RESET REGISTER
         IC    CCWTBLRG,24(CCWREG)      INSERT OFFSET TO CCW'S     000B
         AR    CCWTBLRG,CCWREG          ADD MODULE START ADRS
         LA    CCWREG,IOBCPA            LOAD ADRS OF CHANNEL PROG AREA
         ST    CCWREG,IOBSTART
         SR    TOTREG,TOTREG
         SR    ICREG,ICREG
         LA    ONEREG,1                 LOAD CONSTANT 1
         BAL   RETREG,RSTENTRY
         B     ENDCCW
RSTENTRY LR    ZEROREG,ONEREG           RESET REGISTERS
         IC    TOTREG,0(CHPRGREG)       LOAD COUNT OF CCW'S IN CHNL PRG
         N     TOTREG,OFFMSK            AND OF RESET BIT IF PRESENT
         CLI   DECTYPE+1,WCON           IS THIS A WRITE CONNECT    000L
         BNE   MOVECCW                                             000L
         CLI   IOBCPA+5,CONNECT         IS THE LINE CONNECTED      000L
         BNE   MOVECCW                                             000L
         MVI   IOBCPA+5,DISCON          RESET TP OP CODE           000L
         LA    CCWREG,8(CCWREG)         POINT TO SECOND CCW        000L
         ST    CCWREG,IOBSTART          STORE ADDRESS              000L
         B     SETLAST2                                            000L
MOVECCW  SR    ICSREG,ICSREG
         IC    ICSREG,0(ZEROREG,CHPRGREG) LOAD OFFSET TO CCW WANTED
         SLA   ICSREG,3                 MULTIPLY BY SIZE OF CCW'S
         AR    ICSREG,CCWTBLRG          ADD TABLE STARTING ADDRESS
         MVC   0(8,CCWREG),0(ICSREG)    MOVE CCW TO CHNL PROS AREA
         SR    ICREG,ICREG              CLEAR REG FOR IC INSTR  YA03267
         IC    ICREG,1(CCWREG)          LOAD AREA INDEX
         MVI   1(CCWREG),X'00'          ZERO INDEX IN CCW
         L     AREAREG,DECENTRY
         B     BTBL1(ICREG)             GO TO AREA ROUTINE
TESTLNG  IC    ICREG,6(CCWREG)          LOAD LNGTH INDEX
         CLI   DECTYPE+1,RDCON          IS THIS READ CONNECT       000L
         BE    SWLSTTST                                          A38568
         CLI   DECTYPE+1,RCONTONE       IS THIS A READ TCW         000L
         BE    SWLSTTST                                          A38568
         CLI   DECTYPE+DISP1,WINIT      WRITE INITIAL          @ZA04152
         BE    TESTLNGA                 YES CK SWLST           @ZA04152
         CLI   DECTYPE+1,WCON           IS THIS WRITE CONNECT      000L
         BNE   NOSWLST                  NO                         000L
TESTLNGA TM    DECCMCOD,XF0            IS THIS A SWLIST?       @ZA10032
         BNO   NOSWLST                   NO                    @ZA11032
         CLI   7(AREAREG),ZERO          IS THIS AN AUTO-DIAL LIST  000L
         BE    NOAD                                                000L
         MVI   0(CCWREG),DIAL           PUT DIAL COMMAND IN CCW    000L
         MVC   7(1,CCWREG),7(AREAREG)   MOVE DIAL COUNT TO CCW     000L
         SR    ICSREG,ICSREG            CLEAR REGISTER             000L
         IC    ICSREG,6(AREAREG)        GET READ-IN-AREA LENGTH    000L
         LA    AREAREG,7(AREAREG)                                  000L
         AR    AREAREG,ICSREG           POINT TO DIAL CHARACTERS   000L
         A     AREAREG,0(CCWREG)        ADD COMMAND AND OFFSET     000L
         ST    AREAREG,0(CCWREG)        STORE IN CCW               000L
         TM    DECCMCOD,XF0             IS THIS SWLIST         @ZA11032
         BO    TESTLAST           YES                          @ZA11032
NOAD     EQU   *                                                   000L
         LA    ZEROREG,3(ZEROREG)       SKIP UNUSED CCWS           000L
         B     UPDATE                                              000L
SWLSTTST EQU   *                                            LD @ZA00542
         SR    ICSREG,ICSREG       CLEAR REGISTER              @ZA07653
         IC    ICSREG,DCBDEVTP  LOAD INDEX TO DEVICE I/O TABLE @ZA07653
         SLA   ICSREG,TWOBITS         MULTIPLY BY 4            @ZA07653
         LA    ICSREG,IOD(ICSREG)     GET ADDRESS OF TABLE     @ZA07653
         CLI   ZERO(ICSREG),LCL3270    LOCAL 3270?             @ZA07653
         BE    NOSWLST                                         @ZA07653
         TM    DECCMCOD,XF0        IS THIS A SWLIST?           @ZA11032
         BO    TESTLAST       GO CHECK FOR LAST CCW            @ZA11032
NOSWLST  EQU   *                                                   000L
         B     BTBL2(ICREG)             GO TO LENGTH ROUTINE
SETRC    SR    BRREG,BRREG              SET RETURN CODE = ZERO  YA02153
         BR    RETREG                   RETURN                  YA02153
TESTLAST BXH   ZEROREG,ONEREG,SETRC IS CHANNEL PROGRAM COMPLETE YA02153
         LA    CCWREG,8(CCWREG)         INCREMENT CCW ADDRESS
         B     MOVECCW                  GO TO MOVE IN NEXT CCW
TSTOLTEP EQU   *
         NI    IOBINCAM,MASKALL-BUSY  TURN OFF IOB BUSY FLAG
         MVI   SAVE15(SAVEREG),OLTEPROG SET OLTEP IN PROGRESS
         B     RESTREG             RESTORE & RETURN TO USER
         EJECT
CHPBUSY  MVI   19(SAVEREG),X'04'        SET CHANNEL BUSY CODE
         B     RESTREG
BADRLN   MVI   19(SAVEREG),X'08'        SET CODE FOR TOO HIGH RLN
         B     RESTREG
INVALID  MVI   19(SAVEREG),X'0C'        SET INVALID COMMAND CODE
         B     RST
FULLUSE  EQU   *                                                 A43797
         NI    DECTYPE,X'FF'-AP TURN OFF AUTOPOLL IN PROGRESS    A43797
INVALADR EQU   *                                                 A43797
ALLSKIP  MVI   19(SAVEREG),X'10'        SET ALL DEVICES SKIP CODE
         B     RST
SADENER  MVI   19(SAVEREG),X'14'        SET SAD ENABLE ERROR
         B     RESTREG
NOBUF    STC   BRREG,19(SAVEREG)        SET NO BUFFER CODE
         B     RST
ENDCCW   TM    DECTYPE+1,X'80'          IS RESET SPECIFIED
         BZ    SETLAST                  NO
         AR    CHPRGREG,ZEROREG         RESET TO START OF RESET PROGRAM
         TM    0(CHPRGREG),X'80'        TEST TO SEE IF RESET POSSIBLE
         BZ    SETLAST                  BRANCH IF NOT
         CLI   5(CCWREG),X'25'          THIS A READ RESP           000C
         BE    SETLAST1                 BYPASS SETTING CC FLAG     000C
         OI    4(CCWREG),X'40'          SET CC FLAG IN CCW
SETLAST1 EQU   *                                                   000C
         LA    CCWREG,8(CCWREG)         STEP CCW REGISTER
         BAL   RETREG,RSTENTRY
SETLAST  OI    5(CCWREG),X'80'          SET LAST CCW BIT IN TP OP CODE
SETLAST2 EQU   *                                                   000L
         TM    IOBFLAG1,ERP             TEST FOR ERROR RCVY IN PROCESS
         BO    RESTREG
         NI    DECTYPE,X'F7'            RESET WRITE ENQ FLAG     A38557
         NI    DECFLAGS,X'00'          RESET FLAGS               A26916
         SR    ICSREG,ICSREG       RESET REG
         IC    ICSREG,DCBDEVTP     LOAD INDEX TO DEVICE I/O TABLE
         SLA   ICSREG,TWOBITS      MULTIPLY BY 4
         LA    ICSREG,IOD(ICSREG)  GET @ OF TABLE
         CLI   0(ICSREG),LCL3270   IS IT A LOCAL 3270
         BNE   EXCP                NO, EXCP
         L     DEBREG,DCBDEBAD     GET ADDR OF DEB
         L     DEBREG,PREFIX(DEBREG) POINT PAST PREFIX
         USING IECTDEB,DEBREG
         SR    ICSREG,ICSREG       CLEAR REGISTER
         IC    ICSREG,IOBUCBX      GET UCB INDEX FROM IOB
         SLA   ICSREG,TWOBITS      & MULTIPLY BY FOUR
         L     UCBREG,DEBUCBAD(ICSREG) GET ADDRESS OF UCB BY
*                                  INDEXING INTO DEB UCB TABLE
         TM    GCB(UCBREG),OLTEP   OLTEP EXECUTING ON DEVICE
         BO    TSTOLTEP            YES, EXIT AFTER SETTING RC
         CLI   DECTYPE+1,RDINIT    WAS COMMAND A READ INITIAL
         BNE   RESETATN            NO, RESET ATTENTION FLAGS
         MVI   DECSDECB,ZERO       CLEAR COMP CODE              YA02128
         CLC   IOBDCBPT+DISP1(LEN3),DEBDCBAD ARE CHAINS GOOD    YA02128
         BNE   DEBBAD              NO, ERROR                    YA02128
         LR    PARMREG1,UCBREG     YES, SET FOR SVC             YA02128
         SR    PARMREG0,PARMREG0   CLEAR REG 0                  YA02128
         SR    BRREG,BRREG         ROUTE CODE FOR READ TI       YA02128
         SVC   BTAMSVC             TO IECTSVC                   YA02128
SVCDONE  B     BTBL3(BRREG)        BRANCH ON RETURN CODE        YA02128
DEBBAD   LA    BRREG,ERROR8        SET ERROR RETURN CODE        YA02128
         B     BADCB               READY FOR RETURN             YA02128
RESETATN SR    UCBREG,UCBREG       CLEAR REG
         IC    UCBREG,IOBUCBX      GET UCB INDEX
         SLL   UCBREG,2            MULTIPLY BY 4
         L     UCBREG,DEBUCBAD(UCBREG) GET UCB ADDRESS
         LR    PARMREG1,UCBREG     SET FOR SVC                  YA02128
         SR    PARMREG0,PARMREG0   CLEAR REG 0                  YA02128
         LA    BRREG,ONE           SET ROUTING FOR ATNR         YA02128
         SVC   BTAMSVC             TO IECTSVC                   YA02128
         B     BTBL4(BRREG)            CK RETURN CODE       L5 @ZA03567
BTBL4    B     EXCP              IF X'0',EXCP               L5 @ZA03567
         B     INVALUCB     IF X'04' INVALID ICB            L5 @ZA03567
         B     FINDRDY      IF X'08' DEV RDY                L5 @ZA03567
INVALUCB MVI   SAVE15(SAVEREG),INVALCB  SET INVALID UCB CODE
         B     RESTREG             RESET AND RETURN TO USER
EXCP     EQU   *
         LR    DECBREG,IOBREG
         EXCP  (1)                      EXECUTE CHANNEL PROGRAM
         B     LOADM                                             A26916
RST      NI    IOBINCAM,MASKALL-BUSY    TURN OFF BUSY BIT
RESTREG  EQU   *
         L     DECBREG,24(SAVEREG)     RESTORE DECB ADDRESS
         NI    DECSDECB,X'80'      CLEAR COMPLETION CODE        YA01028
         NI    DECTYPE,X'F7'            RESET WRITE ENQ FLAG     A38557
         NI    DECFLAGS,X'00'          RESET FLAGS
LOADM    L     DECBREG,L24(SAVEREG)     RESTORE DECB ADDRESS   @ZA11032
         NI    DECCMCOD,X00          RESET SWLST FLAG          @ZA11032
         LM    RETREG,BASEREG,12(SAVEREG)   RESTORE REGISTERS    A26916
         BR    RETREG                   RETURN TO USER
         EJECT
*                                       BRANCHING TABLE
         SPACE 2
BTBL1    B     TESTLNG               00 NO AREA, PRESET ADDRESS
         B     DATAREA               04 I/0 TO/FM DATA AREA + INCREMENT
         B     RESPAREA              08 READ INTO FIRST DATA AREA BYTE
         B     SPECCHAR              0C WRITE SPECIAL CHARACTER(S)
         B     LIST                  10 WRITE DIAL LIST
         B     PALIST                14 WRITE POLLING CHARACTERS
         B     TWXIDENT              18 WRITE TWX IDENT
         B     PA1050D               1C WRITE 1050 DIAL ADRS CHARACTERS
         B     DISABLE               20 DISABLE LINE
         B     AUTOPOLL              24 AUTOPOLL                   000A
         B     BSCCHARS              28 WRITE BSC CHARS            000B
         B     BSCDIAL               2C BSC DIAL                   000B
         B     BSCIDENT              30 BSC IDENT                  000B
         B     BSCRESP               34 WRITE BSC RESPONSE         000B
         B     BSCWAREA              38 I/O TO/FM WAREA            000B
         B     BSCGRAPH              3C WRITE LEADING GRAPHICS     000B
         B     BSCADRS               40 RESPONSE TO BSC ADDRS      000B
         B     WTTAWRU               44 WRITE WRU OR NOT (WTTA)    000G
         B     WTTASNS               48 PUT X'FF' IN THE RESPN FIELD00G
         B     WRITTONE              4C WRITE TONE CCW FOR W.T.    000H
         B     CNTCHARS              50 WRITE FRAME CHANBE         000K
         B     FRAMECH               54 FRAME CHANGE DFTRMLST      000K
         B     SWIDREC               58 READ ID SEQUENCE           000L
         B     SWIDSENT              5C WRITE ID SEQUENCE          000L
         B     SWLSTTIC              60 TIC TO FIRST CCW           000L
         B     RDFRPOS               64 READ FROM POSITION
         SPACE 3
BTBL2    B     TESTLAST              00 NO ADDITIONAL COUNT NEEDED
         B     DATALNG               04 GET LENGTH FROM DECB
         B     BSCWLNG               08 GET WLENGTH FROM DECB      000B
         B     CONVLENG
BTBL3    B     FINDATTN              00 CHECK UCB'S FOR ATTN
         B     NOATTN                04 TURN ON BUSY BITS
         B     BADCB                 08 INVALID CONTROL BLOCK
         B     FINDRDY               0C READY INTERCEPTED       YA02128
         EJECT
*                                       AREA ROUTINES
         SPACE 2
BSCWAREA L     ICSREG,DECWAREA          LOAD ADDRESS OF I/O AREA   000B
         B     CNTAREA                  BRANCH                     000B
DATAREA  L     ICSREG,DECAREA           LOAD ADDRESS OF I/O AREA   000B
         CLI   DECTYPE+1,X'16'          THIS WRITE ENQ           A38557
         BNE   CNTAREA                  NO, BRANCH               A38557
         CLI   0(CCWREG),X'01'                                   A44965
         BE    CNTAREA                                           A44965
         TM    DECTYPE,X'08'            DECAREA/LENGTH SPECIFIED A38557
         BZ    RESPAREA                 NO, BRANCH               A38557
         LH    AREAREG,DECLNGTH         LOAD DECB LENGTH         A38557
         CH    AREAREG,K2+2             IS IT GREATER THAN 2     A38557
         BNH   RESPAREA                 NO, BRANCH               A38557
CNTAREA  LA    ICSREG,0(ICSREG)         CLEAR HIGH ORDER BYTE      000F
         CLI   L7(CCWREG),XFF      2740 READ REPEAT AUTO POLL  @ZA10035
         BNE   CNTAREA2             BRANCH NO                  @ZA10035
         TM    IOBFLAG1,X20         ERP IN CONTROL             @ZA10035
         BO    CNTAREA1            BRANCH YES                  @ZA10035
         MVI   L7(CCWREG),X00      CLEAR FF IN REPEAT CCW      @ZA10035
         B     CNTAREA2                                        @ZA10035
CNTAREA1 CLI   IOBWORK+L1,X01      LAST OPERATION RD TI        @ZA10035
         BNE   CNTAREA2               BRANCH NO                @ZA10035
         MVI   L3(CCWREG),X01        YES INCREASE ADDR BY ONE  @ZA10035
CNTAREA2 L     AREAREG,L0(CCWREG)    LOAD CMND CODE AND OFFSET @ZA10035
         AR    AREAREG,ICSREG           ADD ADDRESS                000B
         TM    DCBBFTEK,X'08'           TEST FOR DYNAMIC BUFFERING
         BO    DBDATA                   YES, G0 SET UP ADDITIONAL CCW'S
         ST    AREAREG,0(CCWREG)        STORE IN CCW
         TM    DECCMCOD,XF0             IS THIS A SWLST ?      @ZA11032
         BNO   TESTLNG               NO                        @ZA11032
         MVC   SIX(TWO,CCWREG),DECLNGTH  MOVE LENGTH           @ZA04152
         B     TESTLAST           CHECK FOR LAST CCW           @ZA04152
RDFRPOS  EQU   *
         CLI   SBABYTE(AREAREG),SBA  IS THERE  AN SBA ORDER
         BE    SBAOK               YES, CCW DATA @ = DECENTRY
         MVI   SAVE15(SAVEREG),NOSBA SET NO SBA CODE
         B     RESTREG             RESET AND RETURN TO USER
SBAOK    LA    AREAREG,0(AREAREG)  CLEAR HIGH ORDER BYTE
         L     ICSREG,0(CCWREG)    LOAD CMD CODE AND OFFSET
         AR    ICSREG,AREAREG      ADD ADDRESS (DECENTRY)
         ST    ICSREG,0(CCWREG)    STORE IN CCW
         B     TESTLAST            BYTE COUNT IN CCW CORRECT
         SPACE 3                                                   000G
WTTAWRU  EQU   *                                                   000G
         LR    AREAREG,CCWTBLRG         LOAD BASE ADDR OF CONSTANT 000G
         A     AREAREG,0(CCWREG)        ADD CMND CODE AND OFFSET   000G
         CLI   6(CCWREG),X'0C'          IS WRITE PAD CHARACTERS    000G
         BE    MOTORON                  BRANCH IF YES              000G
         CLI   3(CCWREG),X'69'          IS A WRITE WRU             000G
         BNE   WTTAID                   BRANCH IF NOT              000G
         TM    DCBBQFLG,WRUWTFLG        IS WRU CODED YES IN THE DCB000G
         BO    CNTWTTA1                 BRANCH IF YES            A25043
         BCTR  AREAREG,0                DECREMENT BY 1 TO POINT ON A00G
*                                       PAD CHARACTER.             000G
         B     CNTWTTA1                                          A25043
MOTORON  EQU   *                                                   000G
         NI    6(CCWREG),X'00'          ZERO SUBROUTINE INDEX      000G
         ST    AREAREG,0(CCWREG)        STORE IN CCW               000G
         TM    DECFLAGS,EOTWTFLG       IS THE PREVIOUS MSG ENDED
         BNO   TESTLAST                 BY EOT, BRANCH IF NOT      000G
         SR    AREAREG,AREAREG          RESET REGISTER             000G
         IC    AREAREG,DCBWTPAD         INSERT THE MARK-CHARS COUNT000G
         LA    AREAREG,1(AREAREG)       INCREMENT AREAREG BY 1     000G
         B     CNTWTTA3                 IF YES, BR TO STORE CNT  A25043
         SPACE 3                                                   000G
WTTASNS  EQU   *                                                   000G
         MVI   DECRESPN,X'FF'           PUT X'FF' IN THE RESPN FIELD00G
         B     RESPAREA                                            000G
         SPACE 3                                                   000G
WTTAID   EQU   *                                                   000G
         L     AREAREG,DECENTRY         LOAD TERMINAL LIST ADDRESS 000G
         CLI   5(CCWREG),X'04'          IS A WRITE CPU ID          000G
         BE    WTTACPU                  BRANCH IF YES              000G
         TM    DCBBQFLG,WRUWTFLG        IS WRU CODED YES IN THE DCB000G
         BO    WTTATERM                 BRANCH IF YES              000G
         SH    CCWREG,EIGHT             DECREMENT CCWREG BY 8      000G
         B     TESTLAST                 TO IGNORE THE READ TERM ID.000G
WTTATERM LA    AREAREG,1(AREAREG)       ADDR TO LIST ADDRESS       000G
         IC    ICREG,0(AREAREG)         INSERT COUNT OF ID CHARS   000G
         BCTR  ICREG,0                  DECREMENT IT BY 1          000G
         STH   ICREG,6(CCWREG)          AND STORE INTO CCW COUNT   000G
         B     CNTWTTA2                                          A25043
WTTACPU   EQU   *                                                  000G
         TM    DCBBQFLG,WRUWTFLG        IS WRU CODED YES IN THE DCB000G
         BO    BSCIDENT                 BRANCH IF YES              000G
         B     TWXIDENT                 BRANCH IF NOT              000G
         SPACE 3
BSCADRS  SR    BRREG,BRREG              CLEAR REGISTER             000B
RESPAREA LA    AREAREG,DECRESPN         LOAD RESPONSE AREA ADDRESS
         A     AREAREG,0(CCWREG)        ADD CCW COMMAND
STRESP   ST    AREAREG,0(CCWREG)        STORE IN CCW
         TM    DECCMCOD,XF0             IS THIS A SWLST ?      @ZA11032
         BO    TESTLAST                 GO PROCESS LIST        @ZA11032
         LTR   BRREG,BRREG              IS WREG EMPTY
         BZ    TESTLNG                  YES, POLL/ADRS DOES NOT PRECEDE
         TM    0(BRREG),X'80'           NO, IS POLL/ADRS TERM LAST
         BZ    RSTBRREG                 NO
         CLI   5(CCWREG),X'06'          IS TP OP CODE 06           000H
         BNE   SETCC                    NO, SET COMMAND CHAINING   000H
         CLI   7(CCWREG),X'02'          IS CCW COUNT TWO           000H
         BE    RSTBRREG                 YES, DON'T SET COMMAND CHAIN 0H
SETCC    OI    4(CCWREG),X'40'          SET COMMAND CHAIN IN CCW   000H
RSTBRREG SR    BRREG,BRREG              RESET REGISTER
         B     TESTLNG
         SPACE 3
BSCRESP  SR    AREAREG,AREAREG          RESET REGISTER             000B
         IC    AREAREG,IOBSNDPT         INSERT ACK POINTER         000B
         AR    AREAREG,DCBREG           ADD DCB ADDRESS            000B
         B     CNTCHARS                 BRANCH                     000B
BSCCHARS LR    AREAREG,DCBREG           LOAD ADDRESS OF DCB        000B
         CLI   DECTYPE+1,WRRESET        IS THIS WR RESET         A32466
         BE    RESETACK                 YES, RESET ACK PTRS      S99245
         CLI   DECTYPE+1,WRRSTMON  IS THIS WR RESET MONITOR?     S99245
         BNE   CNTCHARS            NO, BRANCH TO CONTROL CHARS   S99245
RESETACK EQU   *                                                 S99245
         MVI   IOBRCVPT,X'00'           RESET RCV ACK POINTER    A32466
         MVI   IOBSNDPT,X'00'           RESET SEND ACK POINTER   A32466
         B     CNTCHARS                 BRANCH                     000B
SPECCHAR LR    AREAREG,CCWTBLRG         LOAD BASE ADDRESS OF CONSTANTS
         A     AREAREG,0(CCWREG)       POINT TO SPECIAL CHARS   YA01260
         LA    AREAREG,0(AREAREG)      CLEAR HIGH ORDER BYTE    YA01260
         SR    ICREG,ICREG             CLEAR WORKING REG        YA01260
         IC    ICREG,DCBEIOBX          GET IOB SIZE             YA01260
         LR    ICSREG,IOBREG           ADR OF IOB               YA01260
         AR    ICSREG,ICREG            POINT TO END OF IOB      YA01260
*        15    LINES OF CODE DELETED BY APAR -------------->   @ZA11036
         LA    ICREG,L24               POINT TO IOB AREA FOR
         SR    ONEREG,ONEREG           CLEAR WORK REG
         SR    ICSREG,ICREG            START STOP SPEC CHARS    YA01260
         IC    ONEREG,L23(ICSREG)       PICK UP TOTAL CNT       YA01260
         SR    ICREG,ICREG             CLEAR WORK REG           YA01260
         IC    ICREG,7(CCWREG)         # SPEC CHARS THIS CCW    YA01260
         AR    ICSREG,ONEREG           UPDATE POINTER           YA01260
         BCTR  ICREG,0                 DECREMENT FOR EXECUTE    YA01260
         EX    ICREG,MOVER                                      YA01260
         B     AROUND                                           YA01260
MOVER    MVC   0(0,ICSREG),0(AREAREG)  MOVE SPEC CHARS FROM     YA01260
*                                      I/O DEVICE TO IOB        YA01260
AROUND   AR    ICREG,ONEREG            GET NEW TOTAL OF CHARS   YA01260
         LA    ICREG,1(ICREG)          ADD ONE FROM EX DECR.    YA01260
         LR    AREAREG,ICSREG          PT TO IOB AREA OF CHARS  YA01260
         SR    ICSREG,ONEREG           PT BACK TO BEGIN OF AREA YA01260
         STC   ICREG,L23(ICSREG)        INSERT NEW TOTAL        YA01260
         L     ONEREG,0(CCWREG)        PICK UP                  YA01260
         N     ONEREG,OPCODE           ONLY OP CODE             YA01260
         AR    AREAREG,ONEREG          OP CODE + DATA ADR       YA01260
         LA    ONEREG,1                SET BACK TO ONE          YA01260
         B     CNTWTTA1                CONTINUE                 YA01260
CNTCHARS LA    AREAREG,0(AREAREG)      CLEAR HIGH ORDER BYTE     A28611
         A     AREAREG,0(CCWREG)       ADD CMND CODE AND OFFSET  A28611
CNTWTTA1 ST    AREAREG,0(CCWREG)        STORE IN CCW             A25043
         B     TESTLAST
WRITTONE EQU   *                                                   000L
         CLI   DECTYPE+1,RCONTONE       IS THIS A READ TCW         000L
         BE    BSCGRAPH                                            000L
         IC    ICREG,1(AREAREG)         COUNT OF RIDSEQ CHARACTERS
         SLL   ICREG,1                  MULTIPLY BY TWO            000H
         LA    AREAREG,2(ICREG,AREAREG) ADD TO LIST ADDRESS        000H
         IC    ICREG,0(AREAREG)         COUNT OF TIDSEQ CHARACTERS 000H
         LA    AREAREG,1(ICREG,AREAREG) ADD TO LIST ADDRESS        000H
         MVC   6(2,CCWREG),0(AREAREG)   MOVE 'TONE' COUNT TO CCW   000H
         MVC   1(3,CCWREG),2(AREAREG)   MOVE 'TONE' ADDRESS TO CCW 000H
         B     TESTLAST                                            000H
         SPACE 3
BSCDIAL  TM    0(AREAREG),ANSLST                                   000H
         BNZ   LIST                                                000H
         TM    DECTYPE,ONLTST                                      000H
         BO    MOVEIN                                              000H
         MVC   IOBWORK+1(1),DECTYPE+1  MOVE DECTYPE TO WORK      A26887
         NI    IOBWORK+1,MASKALL-ANDOFF AND OFF UNUSED BIT       A26887
         CLI   IOBWORK+1,X'0C'          THIS WRITE TIE           A32468
         BE    INVALID                  YES, BRANCH              A32468
         XI    IOBWORK+1,WRTMASK       IS OPERATION WRITE INIT   A26887
         TM    IOBWORK+1,MASKBITS      IF NOT ANSLST IS VALID    A26887
         BM    MOVEIN                  SO MOVE IN ENABLE         A26887
         B     INVALID                                             000H
MOVEIN   EQU   *                                                   000H
         MVC   0(8,CCWREG),ENABLCCW     MOVE IN ENABLE CCW         000B
         OI    4(CCWREG),CCFLAG         SET ON COMMAND CHAIN       000B
         TM    DECTYPE,ONLTST          IS THIS ON-LINE-TEST        000H
         BO    TESTLAST                 YES, GO FINIST CHANNEL PGM 000H
         TM    0(AREAREG),WTLIST        IS ENTRY A WORLD TRADE LIST000H
         BZ    ANSWER                   NO, REGULAR ANSWER LIST    000H
         CLI   DECTYPE+1,X'02'         IS THIS A WRITE INITIAL   A29563
         BE    TESTLAST                IF SO, FINISH CHAN PROG   A29563
         LA    ZEROREG,11(ZEROREG)      YES, SKIP UNUSED CCWS      000H
         B     UPDATE                                              000H
ANSWER   LA    ZEROREG,7(ZEROREG)       SKIP UNUSED CCWS           000H
UPDATE   IC    TOTREG,0(ZEROREG,CHPRGREG) UPDATE CCW COUNT         000H
         B     TESTLAST                                            000B
LIST     EQU   *                   DIAL CCW                     YA01029
         CLI   DECTYPE+1,WINIT     WRITE TI?                    YA01029
         BNE   LIST1               NO, DO NORMAL DIAL           YA01029
         TM    DECCMCOD,XF0        IS THIS A SWLST ?           @ZA11032
         BO    TESTLNG             GO PROCESS LIST             @ZA11032
         CLI   1(AREAREG),FE       ANSWER LIST?                 YA01029
         BNE   LIST1               NO, DO NORMAL DIAL           YA01029
         SR    ICSREG,ICSREG       CLEAR                        YA01029
         IC    ICSREG,DCBDEVTP     DISPLACE TO IOD              YA01029
         SLL   ICSREG,2            MAKE IT WORDS                YA01029
         LA    ICSREG,IOD(ICSREG)  DISPLACE INTO IOD            YA01029
         CLI   0(ICSREG),MXTYPE    2740 WITH RC AND DIAL?       YA01029
         BNE   LIST1               NO, DO NORMAL DIAL           YA01029
         MVI   0(CCWREG),ENABLE    SET DIAL OP TO ENABLE        YA01029
         MVI   3(CCWREG),OHH       CLEAR DATA ADR               YA01029
         MVI   7(CCWREG),ONE       SET LENGTH TO ONE            YA01029
         B     TESTLNG             GO PROCESS LIST              YA01029
LIST1    EQU   *                                                YA01029
         MVC   7(1,CCWREG),0(AREAREG)   MOVE DIAL COUNT TO COUNT FIELD
         A     AREAREG,0(CCWREG)        ADD COMMAND AND ADRS OFFSET
         ST    AREAREG,0(CCWREG)
         B     TESTLNG
         SPACE 2
FRAMECH  MVC   3(1,CCWREG),0(AREAREG)   MOVE DIAL COUNT FOR ADD    000K
         LA    AREAREG,1(AREAREG)       BUMP POINTER PAST DIAL CT  000K
         B     CNTCHARS                 GO BUMP DATA ADDRESS       000K
*                                        PAST DIAL CHARS TO POINT  000K
*                                        TO FRAME CHANGE CHARS     000K
         EJECT
PA1050D  IC    ICREG,0(AREAREG)         INSERT COUNT OF DIAL CHARACTERS
         LA    AREAREG,1(ICREG,AREAREG) ADD TO ADRS FOR POLL/ADRS CHAR
         B     LODCNT
         SPACE 3
PALIST   TM    DECTYPE,X'04'            TEST FOR 'S' OPERAND
         BZ    LODCNT                   IF NOT, BRANCH
         IC    ICREG,2(CCWREG)          LOAD POLL OR ADRS OFFSET
         C     BRREG,DECADRPT(ICREG)    IS PTR ZERO (1ST TIME ONLY)
         BE    LODCNT                   IF SO, BRANCH
         L     AREAREG,DECADRPT(ICREG)  LOAD POLL/ADRS ADDRESS
LODCNT   CLI   7(CCWREG),X'00'          IS CCW COUNT ZERO          000F
         BE    CONTINUE                 IF SO, BRANCH              000F
         IC    ICREG,7(CCWREG)          GET COUNT OF ADDRESS CHARS 000F
         AR    AREAREG,ICREG            ADD TO TERMINAL ADDRESS    000F
         B     SETSNS                                              000F
CONTINUE LA    ICREG,1                  SET COUNT TO ONE           000F
         LA    ICSREG,8                 SET MAX COUNT TO EIGHT     000F
LOOP     CLC   0(1,AREAREG),DCBBSENQ    IS THIS CHAR INQUIRY       000F
         BE    FOUND                   IF SO, BRANCH               000F
         LA    ICREG,1(ICREG)           STEP COUNT BY ONE          000F
         LA    AREAREG,1(AREAREG)       STEP ADDRESS BY ONE        000F
         BCT   ICSREG,LOOP              MAXIMUM CHARACTERS CHECKED 000F
         B     INVALADR                IF SO, BAD TERM LIST        000F
FOUND    STC   ICREG,7(CCWREG)          STORE COUNT IN CCW         000F
         LA    AREAREG,1(AREAREG)       ADD ONE TO ADDRESS         000F
SETSNS   MVI   IOBSENS0,X'00'                                      000F
TESTSKIP TM    0(AREAREG),X'40'         TEST SKIP BIT
         BZ    PAOK                     NOT SKIP
         TM    0(AREAREG),X'80'         TEST END OF LIST BIT
         BO    ALLSKIP                  END OF LIST
         TM    0(AREAREG),X'20'         TEST FORMAT BIT
         BZ    PASTEP                   NOT ON
         CLI   IOBSENS0,X'00'           IS THIS 2ND TIME THRU LIST 2064
         BNE   ALLSKIP                  IF SO, BRANCH              2064
         MVC   IOBSENS0(2),1(AREAREG)   MOVE DECREMENT OF LIST COUNT
         AH    AREAREG,IOBSENS0         RESET ADDRESS TO START OF LIST
PASTEP   LA    AREAREG,1(ICREG,AREAREG) STEP TO NEXT CONTROL BYTE
         B     TESTSKIP
PAOK     IC    ICREG,2(CCWREG)          LOAD POLL-ADRS OFFSET
         MVI   2(CCWREG),X'00'          ZERO OFFSET
         LR    BRREG,AREAREG            SAVE ADRS OF CONTROL BYTE
         SH    AREAREG,6(CCWREG)        SUBTRACT TO GET ADRS OF P/A CHR
         A     AREAREG,0(CCWREG)        ADD AREA INCREMENT & CCW COMMND
         ST    AREAREG,0(CCWREG)        PLACE RESULT IN CCW
         LA    AREAREG,0(AREAREG)       ZERO OUT COMMAND CODE
         ST    AREAREG,DECADRPT(ICREG)  UPDATE CURRENT POLL/ADRS PTR
         B     TESTLAST
SWIDREC  EQU   *                                                   000L
         MVC   7(1,CCWREG),6(AREAREG)   MOVE IN COUNT              000L
         LA    AREAREG,8(AREAREG)       GET ADDRESS OF READ-IN-AREA000L
         A     AREAREG,0(CCWREG)        ADD COMMAND AND OFFSET     000L
         ST    AREAREG,0(CCWREG)        STORE IN CCW               000L
         B     TESTLAST                                            000L
SWIDSENT EQU   *                                                   000L
         SR    ICSREG,ICSREG            CLEAR WORK REGISTER        000L
         IC    ICSREG,6(AREAREG)        GET READ-IN-AREA LENGTH    000L
         IC    ICREG,7(AREAREG)         GET DIAL COUNT             000L
         AR    ICREG,ICSREG                                        000L
         LA    AREAREG,8(AREAREG)                                  000L
         AR    AREAREG,ICREG            POINT TO ID COUNT          000L
MVCOUNT  EQU   *
         MVC   7(1,CCWREG),0(AREAREG)   MOVE COUNT TO CCW
         LA    AREAREG,1(AREAREG)       POINT TO IDSENT            000L
         A     AREAREG,0(CCWREG)        ADD TO COMMAND             000L
         ST    AREAREG,0(CCWREG)        STORE IN CCW               000L
         B     TESTLAST                                            000L
SWLSTTIC EQU   *                                                   000L
         LA    AREAREG,IOBCPA           POINT TO ENABLE CCW        000L
         A     AREAREG,0(CCWREG)        ADD TO COMMAND             000L
         ST    AREAREG,0(CCWREG)        STORE IN CCW               000L
         B     TESTLAST                                            000L
         EJECT
*                                                                  000A
AUTOPOLL DS    0H                                                  000A
         OI    DECTYPE,AP                                          000A
         MVI   IOBSNDPT,X'00'           INITIALIZE SEND ACK PTR    000B
         MVI   IOBRCVPT,X'02'    INITIALIZE RECEIVE ACK PTR
*                             TEST FOR 'S' OPERAND.                000A
STEST    TM    DECTYPE,X'04'                                       000A
         BZ    AP1COMP                                             000A
*                             'S' OPERAND - IS PTR=0 -1ST TIME ONLY000A
         C     BRREG,DECPOLPT                                      000A
         BE    AP1COMP                                             000A
*                             USE LAST INDEX/ADDRESS               000A
         L     AREAREG,DECPOLPT                                    000A
         SH    AREAREG,HDRLN                                       000A
         MVC   INDEX(1),DECPOLPT                                   000A
         B     AP1ONLT                                             000D
*                                                                  000A
*                             SCAN FOR SCAN STOP BYTE (FE)         000A
AP1STEP  AR    AREAREG,ONEREG                                      000A
AP1COMP  CLI   0(AREAREG),FE                                       000A
         BNE   AP1STEP                                             000A
*                                                                  000A
*                             POINT TO HEAD OF LIST                000A
         MVC   OFFSET(2),1(AREAREG)                                000A
         SH    AREAREG,OFFSET                                      000A
         AR    AREAREG,ONEREG                                      000A
*                                                                  000A
*                             GET INDEX BYTE                       000A
         IC    ICREG,2(AREAREG)                                    000A
         SRL   ICREG,5                                             000A
         CR    ICREG,ONEREG        IF POLLING LIST ENTRY IS     YA01016
         BH    *+8                 0 OR 1, THE TRUE LENGTHS ARE YA01016
         LA    ICREG,8(ICREG)      8 OR 9 RESPECTIVELY          YA01016
         L     ICSREG,DECENTRY                                     000A
         AR    ICSREG,ICREG                                        000A
         SR    ICSREG,ONEREG                                       000A
         MVC   INDEX(1),0(ICSREG)                                  000A
*                                                                  000A
AP1ONLT  EQU   *                                                   000D
*                             TEST FOR ON LINE TERM TEST RE-START  000D
         TM    IOBINCAM,ONLT                                       000D
         BO    FAEAD                                               000D
*                             TEST FOR ERP                         000A
         TM    IOBFLAG1,ERP                                        000A
         BO    FAEAD                                               000A
*                             CHECK HEADER                         000D
AP1HDRC  CLI   1(AREAREG),0                                        000D
         BE    ALLSKIP                                             000D
         CLI   7(CCWREG),X'00'         IS THIS START STOP?       A41109
         BE    AP1USECK                YES, PROCEED              A41109
         CLI   1(AREAREG),1            ONE ENTRY                 A26909
         BNE   AP1USECK                NO, CHECK USAGE COUNT     A26909
         CLC   3(1,AREAREG),DCBBSEOT   IS ENTRY EOT              A26909
         BE    ALLSKIP                 YES, TURN ON SKIP BIT     A26909
AP1USECK TM    2(AREAREG),X'0F'        FULL USAGE                A26909
         BO    FULLUSE                                             000D
*                             INCREMENT USER COUNT                 000A
         IC    ICREG,2(AREAREG)                                    000A
         AR    ICREG,ONEREG                                        000A
         STC   ICREG,2(AREAREG)                                    000A
*                                                                  000A
*                             SAVE 1ST ENTRY ADDRESS               000A
FAEAD    XC    DECPOLPT+1(3),DECPOLPT+1                            000A
         LA    ICSREG,HDR(AREAREG)                                 000A
         O     ICSREG,DECPOLPT                                     000A
         ST    ICSREG,DECPOLPT                                     000A
*                                                                  000A
*                             MOVE IN TIC COMMAND                  000A
         MVC   8(8,CCWREG),APTIC                                   000A
         LA    ICSREG,24(CCWREG)                                   000A
         O     ICSREG,8(CCWREG)                                    000A
         ST    ICSREG,8(CCWREG)                                    000A
*                             TEST FOR WRAP BIT                    000A
         TM    2(AREAREG),X'10'                                    000A
         BZ    APOPEN                                              000A
*                             MOVE IN TIC COMMAND                  000A
         MVC   16(4,CCWREG),APTIC                                  000A
         ST    BRREG,20(CCWREG)                                    000A
         LA    ICSREG,40(CCWREG)                                   000A
         O     ICSREG,16(CCWREG)                                   000A
         ST    ICSREG,16(CCWREG)                                   000A
         MVC   24(16,CCWREG),0(CCWREG)                             000A
         MVC   25(3,CCWREG),DECPOLPT+1                             000A
*        ONE LINE DELETED BY FOLLOWING PTM                       YM4072
         B     AP1SCAN                                             000A
*                             OPEN LIST - CHANGE TIC TO I/O NOP    000A
APOPEN   MVI   8(CCWREG),NOOP                                      000A
*                                                                  000A
*                                                                  000A
*                             SCAN FOR INDEX BYTE                  000A
AP1SCAN  SR    ICSREG,ICSREG                                       000A
         IC    ICSREG,1(AREAREG)                                   000A
         STC   ICSREG,AE                                           000A
         IC    ICREG,2(AREAREG)                                    000A
         SRL   ICREG,5                                             000A
         CR    ICREG,ONEREG        IF POLLING LIST ENTRY IS     YA01016
         BH    AP2STEP             0 OR 1, THE TRUE LENGTHS ARE YA01016
         LA    ICREG,8(ICREG)      8 OR 9 RESPECTIVELY          YA01016
AP2STEP  AR    AREAREG,ICREG                                       000A
         TM    DISP2(AREAREG),FORTY                             YA03268
         BO    AP3CONT                                          YA03268
         CLC   2(1,AREAREG),INDEX                                  000A
         BNL   AP3CONT                                             000A
         BCT   ICSREG,AP2STEP                                      000A
         L     AREAREG,DECPOLPT                                    000A
         LA    AREAREG,0(AREAREG)  ZERO HIGH ORDER BYTE          A43772
         B     AP3ACONT                                          A33975
*                                                                  000A
*                             PUT STARTING ADDRESS INTO POLL       000A
AP3CONT  SR    AREAREG,ICREG                                       000A
         LA    AREAREG,HDR(AREAREG)                                000A
AP3ACONT EQU   *                                                 A33975
         O     AREAREG,0(CCWREG)                                   000A
         ST    AREAREG,0(CCWREG)                                   000A
*                             FIND TOTAL LENGTH                    000A
*                                       TEST FOR SINGLE ENTRY
*                                            (FOR RJE  REMOVE REL 18)
         CLI   AE,1
         BNE   APTLEN
         XC    6(2,CCWREG),6(CCWREG)
APTLEN   EQU   *
         CLI   7(CCWREG),X'00'         IS THIS START STOP          000J
         BE    AP1EOT                   YES  PROCEED               000J
         SR    ICREG,ONEREG             DECREMENT TO GET LAST      000J
         STH   ICREG,6(CCWREG)         >AVE IN CCW                 000J
         AR    ICREG,ONEREG            GET BACK AS WAS             000J
AP1EOT   EQU   *                                                   000J
         IC    ICSREG,AE                                           000A
         MR    ICSREG,ICSREG                                       000A
         SH    ICREG,6(CCWREG)
         STH   ICREG,30(CCWREG)                                    000A
*                             FIND LENGTH FOR FIRST POLL           000A
         SR    ICREG,AREAREG                                       000A
         L     ICSREG,DECPOLPT      LOAD POLLING POINTER       @ZA07658
         LA    ICSREG,ZERO(ICSREG)   CLEAR HI BYTE             @ZA07658
         AR    ICREG,ICSREG                                    @ZA07658
         STH   ICREG,6(CCWREG)                                     000A
         SR    ICREG,ICREG                                         000A
*                                                                  000A
*                             INCREMENT CCWREG FOR NEXT OPERATION  000A
         LA    CCWREG,8(CCWREG)                                    000A
         LR    AREAREG,ICSREG                                  @ZA07658
         SH    AREAREG,HDRLN                                       000A
         TM    2(AREAREG),X'10'                                    000A
         BZ    AP2OPEN                                             000A
         LA    CCWREG,24(CCWREG)                                   000A
AP2OPEN  EQU   *                                                   000A
*                             CLEAR WORKAREA                       000A
         XC    INDEX(4),INDEX                                      000A
         B     TESTLAST                                            000A
*                                                                  000A
*                             CONSTANTS AND SYMBOLS                000A
FE       EQU   X'FE'                                               000A
HDR      EQU   3                                                   000A
NOOP     EQU   X'03'                                               000A
ONLT     EQU   X'01'                                               000D
AP       EQU   X'80'                                               000A
PCI      EQU   X'08'
HDRLN    DC    H'3'                                                000A
APTIC    DC    X'0800000020090001'                                 000A
         DS    0F
         EJECT
BSCIDENT EQU   *                                               @ZA04152
         TM    DECCMCOD,XF0             IS THIS SWITCHLIST     @ZA11032
         BO    BIDENT                   YES                    @ZA11032
         IC    ICREG,ZERO(AREAREG) INSERT COUNT OF DIAL CHARS  @ZA04152
         N     ICREG,DIALMASK                                      000H
         LA    AREAREG,1(ICREG,AREAREG) ADD TO LIST ADDRESS        000B
         CLI   0(AREAREG),FE            IS THIS THE END OF THE LIST000J
         BNE   IDENT1                                              000J
         SH    CCWREG,EIGHT             POINT TO THE PREVIOUS CCW  000J
         CLI   0(CCWREG),DIAL           WAS LAST COMMAND DIAL      000J
         BNE   ANSER                                               000J
         AH    CCWREG,EIGHT             POINT TO THE PRESENT CCW   000J
         MVI   7(CCWREG),ONE            PUT COUNT OF 1 IN CCW      000J
         LR    AREAREG,DCBREG           LOAD ADDRESS OF DCB        000J
         MVI   3(CCWREG),FORTY4         SET DCB OFFSET             000J
         B     CNTCHARS                                            000J
BIDENT   SR    ICSREG,ICSREG            CLEAR REGISTER         @ZA11038
         SR    ICREG,ICREG              CLEAR REGISTER         @ZA11038
         IC    ICSREG,L6(AREAREG)  GET READ IN AREA LENGTH     @ZA11038
         IC    ICREG,L7(AREAREG)     GET DIAL COUNT            @ZA11038
         AR    ICSREG,ICREG      READ AREA LNG + DIAL CNT      @ZA11038
         AR    AREAREG,ICSREG RD AREA LNG + DIAL CNT +LIST ADR @ZA11038
         LA    AREAREG,L8(AREAREG)   GET ID COUNT-SWLST        @ZA11038
         MVC   L7(L1,CCWREG),L0(AREAREG)  MOVE ID COUNT TO CCW @ZA11038
         LA    AREAREG,L1(AREAREG)      POINT TO ID SENT       @ZA11038
         L     ICSREG,L0(CCWREG)        LOAD CMD CODE          @ZA11038
         N     ICSREG,OPCODE            ZERO ADDR AREA         @ZA11038
         AR    AREAREG,ICSREG           ADD ADDRESS            @ZA11038
         ST    AREAREG,DISP0(CCWREG)                           @ZA04152
         B     TESTLAST                                        @ZA04152
ANSER    AH    CCWREG,EIGHT             POINT TO THE PRESENT CCW   000J
         MVI   5(CCWREG),TP08           MOVE IN TP OP CODE         000J
         MVI   7(CCWREG),TWO            PUT COUNT OF 2 IN CCW      000J
         LR    AREAREG,DCBREG           LOAD ADDRESS OF DCB        000J
         MVI   3(CCWREG),FORTY          SET DCB OFFSET             000J
         B     CNTCHARS                                            000J
IDENT1   EQU   *                                                   000J
         IC    ICREG,0(AREAREG)         INSERT COUNT OF ID CHARS   000B
         SLL   ICREG,1                  MULTIPLY BY TWO            000B
         LA    AREAREG,1(ICREG,AREAREG) ADD TO ADDRESS             000B
         B     CNTINID                                             000B
TWXIDENT EQU   *                                               @ZA04152
         TM    DECCMCOD,XF0             IS THIS SWITCHLIST     @ZA11032
         BO    TIDENT                   YES, UPDATE CCW        @ZA11032
         IC    ICREG,ZERO(AREAREG)  INSERT CNT OF DIAL CHARS   @ZA04152
         N     ICREG,DIALMASK                                      000H
         LA    AREAREG,1(ICREG,AREAREG) ADD TO LIST ADRS
         CLI   0(AREAREG),FE            IS THIS THE END OF THE LIST000J
         BNE   CNTINID                                             000J
         SH    CCWREG,EIGHT             POINT TO PREVIOUS CCW      000J
         CLI   0(CCWREG),ENABLE         WAS IT AN ENABLE COMMAND   000J
         BNE   CALL                                                000J
         AH    CCWREG,EIGHT             POINT TO PRESENT CCW       000J
         MVI   5(CCWREG),TP0B            MOVE IN TP OP CODE        000J
         B     LDRESPN                                             000J
TIDENT   LA    AREAREG,SIX(AREAREG)   ADDR OF READ IN COUNT    @ZA04152
         MVC   C7(ONE,CCWREG),ZERO(AREAREG) MOVE IN COUNT      @ZA04152
         LA    AREAREG,ONE(AREAREG)     BUMP TO READ IN AREA   @ZA11038
         A     AREAREG,ZERO(CCWREG)   ADD CMD CODE AND OFFSET  @ZA04152
         ST    AREAREG,ZERO(CCWREG)    STORE IN CCW            @ZA04152
         B     TESTLAST                 GO CHECK NEXT CCW      @ZA04152
CALL     EQU   *                                                   000J
         AH   CCWREG,EIGHT              POINT TO PRESENT CCW       000J
         MVI   5(CCWREG),TP0C           MOVE IN TP OP CODE         000J
LDRESPN  EQU   *                                                   000J
         MVI   7(CCWREG),TWO            PUT A COUNT OF 2 IN CCW    000J
         LA    AREAREG,DECRESPN         LOAD RESPONSE AREA ADDRESS 000J
         MVI   3(CCWREG),ZERO           ZERO OUT DCB OFFSET        000J
         A     AREAREG,0(CCWREG)        ADD CCW COMMAND            000J
         ST    AREAREG,0(CCWREG)        STORE IN CCW               000J
         B     TESTLAST                                            000J
CNTINID  MVC   7(1,CCWREG),0(AREAREG)   MOVE COUNT OF ID TO CCW    000B
CNTWTTA2 A     AREAREG,0(CCWREG)        ADD COMMAND AND OFFSET   A25043
         ST    AREAREG,0(CCWREG)        STORE IN CCW
         B     TESTLAST
         SPACE 3
DISABLE  CLI   0(AREAREG),X'00'         IS LIST AN ANSWER LIST
         BNE   TESTLAST                 NO,O.K. TO SET UP DIAL CCW
         BXH   ZEROREG,ONEREG,0(RETREG) YES, STEP CNTR OMITTING DIAL
         LA    CCWREG,8(CCWREG)         STEP CCW REGISTER
         MVC   0(8,CCWREG),ENABLCCW     USE ENABLE CCWVS. DIAL
         B     TESTLAST
         SPACE 3
BSCGRAPH L     ICSREG,DECWAREA          LOAD ADDRESS I/O AREA      000B
         L     AREAREG,0(CCWREG)        LOAD CMND CODE AND OFFSET  000B
         AR    AREAREG,ICSREG           ADD AREA ADDRESS           000B
         ST    AREAREG,0(CCWREG)        STORE IN CCW               000B
         CLI   DECTYPE+1,RCONTONE       IS THIS A READ TCW         000L
         BE    BSCWLNG                                             000L
         B     TESTLNG                                             000B
         SPACE 3
*                                       LENGTH ROUTINES
         SPACE 2
BSCWLNG  NI    6(CCWREG),ZERO           ZERO SUBROUTINE INDEX      000B
         LH    AREAREG,DECWLNG          LOAD WLENGTH FROM DECB     000B
         B     CNTNLNG                                             000B
DATALNG NI     6(CCWREG),X'00'          ZERO SUB-ROUTINE INDEX
         CLI   L7(CCWREG),XFF     2740 READ REPEAT AUTO POLL   @ZA10035
         BNE   DATALNG1            BRANCH NO                   @ZA10035
         MVI   L7(CCWREG),X00    CLEAR FF IN REPEAT CCW        @ZA10035
         CLI   IOBWORK+L1,X01      LAST OPERATION RD TI        @ZA10035
         BNE   DATALNG1            BRANCH NO                   @ZA10035
         MVI   L7(CCWREG),X01  PREPARE TO DECREASE CNT BY ONE  @ZA10035
DATALNG1 LH    AREAREG,DECLNGTH         LOAD LENGTH FROM DECB  @ZA10035
CNTNLNG  SH    AREAREG,6(CCWREG)        SUBTRACT OFFSET            000B
CNTWTTA3 STH   AREAREG,6(CCWREG)        STORE IN CCW             A25043
         B     TESTLAST
CONVLENG MVI   6(CCWREG),X'00'          CLEAR OUT OFFSET
         LH    ICSREG,DECLNGTH          GET USER'S LENGTH AND COUNT
         CLI   DECTYPE+1,X'16'          THIS WRITE ENQ           A38557
         BNE   CNVLENG1                 NO, BRANCH               A38557
         TM    DECTYPE,X'08'            DECAREA/LENGTH SPECIFIED A38557
         BO    CNVLENG1                 YES, BRANCH              A38557
         MVI   7(CCWREG),X'02'          SET LENGTH TO TWO        A38557
         B     CNVLENG2                 BRANCH TO SET LAST CCW   A38557
CNVLENG1 EQU   *                                                 A38557
         CH    ICSREG,LENG20            IS USER'S LENGTH MORE THAN 20
         BH    TESTLAST                 YES, GO BUILD NEXT CCW
         STH   ICSREG,6(CCWREG)              STORE IN CCW
CNVLENG2 EQU   *                                                 A32454
         OI    5(CCWREG),X'80'          TURN ON LAST CCW BIT
         NI    4(CCWREG),X'3F'          TURN OFF CHAIN BIT
         B     0(RETREG)                GET OUT
*                                       DYNAMIC BUFFERING ROUTINE
         EJECT
*                                  ACTIONS BASED ON RETURN FROM
*                                        IECTRDTI
BADCB    EQU   *                   X'08' - INVALID CONTROL BLOCK
         MVI   SAVE15(SAVEREG),INVALCB  SET INVALID UCB CODE
         B     RESTREG             RESET AND RETURN TO USER
NOATTN   EQU   *                   X'04' - NO OUTSTANDING ATTN FOUND
         L     IOBREG,DCBIOBAD     LOAD INITIAL IOB BASE
         SR    ICREG,ICREG         CLEAR LOOP REG
         IC    ICREG,DEBNMEXT      INSERT # OF RLN'S (LOOP COUNT)
         SR    ICSREG,ICSREG       CLEAR INCREMENT REG
         IC    ICSREG,DCBEIOBX     INSERT SIZE OF IOB
ATTNON   LA    IOBREG,0(ICSREG,IOBREG) POINT TO EACH IOB
         OI    IOBINCAM,BUSY       TURN ON BUSY BIT
         NI    IOBFLAG2,XFE       TURN OFF RESETPL BIT      LD YA03952
         BCT   ICREG,ATTNON        LOOP UNTIL EVERY IOB BUSY BIT SET
         L     ICREG,DEBUCBAD      GET ADDRESS OF MSTR UCB      YA02057
         TM    GCB(ICREG),RDTI     IS READ TI ON?               YA02057
         BZ    BUSYOFF             NO, TURN OFF BUSY BITS       YA02057
RETURN   MVI   SAVE15(SAVEREG),GOODRTN  SET GOOD CODE           YA02057
         B     LOADM               EXIT                     LD @ZA02800
BUSYOFF  EQU   *                                                YA02057
         L     IOBREG,DCBIOBAD     GET DCB IOB ADDRESS          YA02057
         SR    ICREG,ICREG         CLEAR LOOP REG               YA02057
         IC    ICREG,DEBNMEXT      INSERT NUM OF RLNS           YA02057
BUSYLOOP LA    IOBREG,DISP0(ICSREG,IOBREG) POINT TO EACH IOB    YA02057
         NI    IOBINCAM,MASKALL-BUSY TURN OFF BUSY              YA02057
         BCT   ICREG,BUSYLOOP      LOOP                         YA02057
*                                  UNTIL ALL BITS ARE OFF       YA02057
         B     RETURN              SET RC=0 AND RETURN          YA02057
FINDATTN EQU   *                   X'00' - ATTENTION WAS FOUND
         L     DECBREG,IOBECBPT    GET ADDRESS OF DECB
         SR    ICREG,ICREG         CLEAR RLN REG
         IC    ICREG,DECRLN        GET RLN
         BCTR  ICREG,REG0          DECR RLN BY ONE
         SR    ICSREG,ICSREG       CLEAR REG
         IC    ICSREG,DEBNMEXT     GET MAX # OF UCB'S TO CHECK
         SR    ICSREG,ICREG        ADJUST FOR STARTING POINT
*
         SLL   ICREG,2             CONVERT RLN TO DISP INTO UCB LIST
*                                   BY MULTIPLYING BY 4
         LA    UCBPTREG,DEBUCBAD(ICREG) GET PTR TO STARTING LOC IN LIST
LPONE    L     UCBREG,0(UCBPTREG)  GET ADDRESS OF UCB
         TM    GCB(UCBREG),ATTN    WAS ATTENTION RECEIVED
         BNO   LPONECHK            NO, CHECK OTHERS
         TM    GCB(UCBREG),OLTEPSKP OLTEP EXECUTING OR SKIP FLAG SET
         BZ    ATNFND              NO, ATTENTION FOUND
*
LPONECHK LA    UCBPTREG,NEXTNTRY(UCBPTREG) INCR TO NEXT ENTRY
*                                  IN UCB LIST
         BCT   ICSREG,LPONE        BR IF MORE TO CHECK
         LTR   ICREG,ICREG         IF 0, ENTIRE LIST WAS SEARCHED BY
         BZ    ALLSKIP              1ST LOOP AND NO ATTN FOUND
         SRL   ICREG,2             RESTORE TO RLN
         LA    UCBPTREG,DEBUCBAD   GET START OF UCB LIST
LPTWO    L     UCBREG,0(UCBPTREG)  GET ADDRESS OF UCB
         TM    GCB(UCBREG),ATTN    WAS ATTENTION RECEIVED
         BNO   LPTWOCHK            NO, CHECK OTHERS
         TM    GCB(UCBREG),OLTEPSKP OLTEP EXECUTING OR SKIP FLAG SET
         BZ    ATNFND              NO, ATTENTION FOUND
LPTWOCHK LA    UCBPTREG,NEXTNTRY(UCBPTREG) INCR TO NEXT UCB ADDR
         BCT   ICREG,LPTWO         BR IF MORE TO CHECK
*
         B     ALLSKIP             GO SET ALL DEVICES SKIP CODE
*
ATNFND   XC    DECPOLPT(POLPTLNG),DECPOLPT CLEAR DECPOLPT
         MVC   DECPOLPT+3(RLNGTH),READRLN(UCBREG)   MOVE RLN OF
*                                  DVC FROM UCB TO DECB
         SPACE 1                                                YA02128
*                           RESET ATTENTION AND UPDATE COUNT    YA02128
         LR    PARMREG1,UCBREG     SET FOR SVC                  YA02128
         SR    PARMREG0,PARMREG0   CLEAR REG 0                  YA02128
         LA    BRREG,ONE           ROUTE CODE FOR ATNR          YA02128
         SVC   BTAMSVC             TO IECTSVC                   YA02128
         B     BTBL5(BRREG)        CHK RET CODE             L5 @ZA03567
BTBL5    B     PREEXCP                 IF 0 DO EXCP         L5 @ZA03567
         B     INVALUCB                IF 4 BAD UCB         L5 @ZA03567
         B     FINDRDY                 IF 8 DEV RDY         L5 @ZA03567
PREEXCP  EQU   *                                            L5 @ZA03567
         SR    ICSREG,ICSREG       CLEAR REG                 LD YA03952
         IC    ICSREG,DCBEIOBX     GET LENGTH OF IOB         LD YA03952
         L     ICREG,DCBIOBAD      GET ORIGIN OF IOB         LD YA03952
         LA    ICREG,ZERO(ICREG,ICSREG) IOB FOR RLN 1        LD YA03952
         NI    IOBFLAG2-IECTIOB(ICREG),XFE TURN OFF RESETPL  LD YA03952
*                                  BIT IN RLN 1ST IOB        LD YA03952
         L     DECBREG,IOBECBPT    HET ADDR OF DECB
         CLC   DECRLN(RLNGTH),DECPOLPT+3   RLN SPECD = THAT FOR
         BNE   CPYIOB              DVC TO BE READ, USE EXIST IOB
         B     EXCP                START I/O
*
CPYIOB   EQU   *
*        2 LINES DELETED                                     LD YA03952
*
         MH    ICSREG,DECPOLPT+2   MULTIPLY BY DECPOLPT
         L     ICREG,DCBIOBAD      GET BASE FOR IOB POOL
         LA    ICREG,0(ICREG,ICSREG) ADD DISP TO GET ADDR OF IOB TO BE
*                                     INITIALIZED
         MVC   ECBPT(ECBPTLNG,ICREG),IOBECBPT COPY PTR TO ECB
         MVC   CPAPT(CPALNG,ICREG),IOBCPA COPY CHANNEL PGM
         LA    ICSREG,CPAPT(ICREG) COMPUTE ADDR OF CPA
         ST    ICSREG,STARTPT(ICREG) AND STORE IN START ADDR
         MVC   ZERO(TWO,ICREG),IOBFLAG1 COPY IOBFLAG1 AND 2  LD YA03952
         LR    IOBREG,ICREG        ADDR OF IOB TO BE USED TO IOB BASE
         OI    IOBINCAM,BUSY       TURN ON IOB BUSY FLAG
         B     EXCP                START I/O
FINDRDY  EQU   *                   X'0C' - READY DEVICE FOUND   YA02128
         L     DECBREG,IOBECBPT    GET ADDRESS OF DECB          YA02128
         SR    ICREG,ICREG         CLEAR RLN REG                YA02128
         IC    ICREG,DECRLN        GET RLN                      YA02128
         BCTR  ICREG,REG0          REDUCE RLN BY ONE            YA02128
         SR    ICSREG,ICSREG       CLEAR INDEX REG              YA02128
         IC    ICSREG,DEBNMEXT     GET MAX NUM UCB'S            YA02128
         SR    ICSREG,ICREG        ADJUST FOR STARTING POINT    YA02128
         SLL   ICREG,DISP2         CONVERT RLN TO DISPLACEMENT  YA02128
*                                  INTO UCB LIST                YA02128
         LA    UCBPTREG,DEBUCBAD(ICREG) POINT TO TOP OF LIST    YA02128
RDYLPONE EQU   *                   LOOK FOR READY FLAG          YA02128
         L     UCBREG,DISP0(UCBPTREG) UCB ADDRESS               YA02128
         TM    GRAF(UCBREG),RDYBIT THIS DEVICE COME READY?      YA02128
         BNO   RDYLPCHK            NO, CHECK NEXT               YA02128
         TM    GCB(UCBREG),OLTEP   OLTEP EXECUTING?             YA02128
         BZ    RDYFND              NO, READY FOUND              YA02128
RDYLPCHK EQU   *                   CHECK NEXT UCB               YA02128
         LA    UCBPTREG,NEXTNTRY(UCBPTREG) INCR TO NEXT ENTRY   YA02128
*                                  IN UCB LIST                  YA02128
         BCT   ICSREG,RDYLPONE     BR IF MORE TO CHECK          YA02128
         LTR   ICREG,ICREG         IF 0, NO READY FOUND OR      YA02128
         BZ    NOATTN              ONLY READY IS ON DEVICE      YA02128
*                                  WITH OLTEP EXECUTING         YA02128
         SRL   ICREG,DISP2         RESTORE RLN                  YA02128
         LA    UCBPTREG,DEBUCBAD   GET START OF UCB LIST        YA02128
RDYLPTWO EQU   *                   CHECK REST OF UCB'S          YA02128
         L     UCBREG,DISP0(UCBPTREG) UCB ADDRESS               YA02128
         TM    GRAF(UCBREG),RDYBIT THIS DEVICE COME READY?      YA02128
         BNO   RDY2CHK             NO, CHECK NEXT               YA02128
         TM    GCB(UCBREG),OLTEP   OLTEP EXECUTING?             YA02128
         BZ    RDYFND              NO, READY FOUND              YA02128
RDY2CHK  EQU   *                   CHECK NEXT UCB               YA02128
         LA    UCBPTREG,NEXTNTRY(UCBPTREG) INCR TO NEXT UCB     YA02128
         BCT   ICREG,RDYLPTWO      BR OF MORE TO DO             YA02128
         B     NOATTN              NO READY EXCEPT WHERE        YA02128
*                                  OLTEP EXECUTING              YA02128
*                                                               YA02128
RDYFND   EQU   *                   DEVICE HAS COME READY        YA02128
         XC    DECPOLPT(POLPTLNG),DECPOLPT CLEAR DECPOLPT       YA02128
         MVC   DECPOLPT+DISP3(RLNGTH),READRLN(UCBREG) MOVE      YA02128
*                                  RLN FROM UCB TO DECB         YA02128
         LR    PARMREG0,DECBREG    PUT DECB ADDRESS IN REG 0    YA02128
         LR    PARMREG1,UCBREG     PUT UCB ADDRESS IN REG 1     YA02128
         LA    BRREG,ONE           ROUTE CODE FOR ATNR          YA02128
         SVC   BTAMSVC             TO IECTSVC                   YA02128
         LTR   BRREG,BRREG         TEST RETURN CODE             YA02128
         BNZ   INVALUCB            X'04' - SET INVALID UCB      YA02128
         L     DECBREG,IOBECBPT    RESTORE DECB ADDRESS         YA02128
         NI    IOBINCAM,MASKALL-BUSY TURN OFF BUSY              YA02128
         MVI   SAVE15(SAVEREG),GOODRTN SET GOOD RETURN          YA02128
         MVC   DECPOLPT(RLNGTH),DECPOLPT+DISP3 PLUG RLN         YA02128
         MVI   DECFLAGS,RDYDEVIC   SAY CAME READY               YA02128
         B     LOADM               RETURN TO CALLER             YA02128
         SPACE 4                                                YA02128
*                                       DYNAMIC BUFFERING ROUTINE
         SPACE 2
DBDATA   TM    6(CCWREG),X'0C'          READ RESPONSE OR READ DATA 000C
         BM    DATA                     BRANCH IF READ DATA      A29597
         AH    AREAREG,FULL4+2          INCREMENT AREA ADDRESS
         B     STRESP
DATA     OI    4(CCWREG),X'88'          SET ON DATA CHAIN & PCI BIT
         A     AREAREG,FULL4            INCREMENT AREA ADRS BY SIZE LNK
         ST    AREAREG,0(CCWREG)        STORE IN CCW AREA
         MVI   6(CCWREG),X'00'          ZERO COUNT FIELD INDEX
         LR    AREAREG,ICSREG           PUT AREA ADDRESS IN AREARG 000B
         LH    ICSREG,DCBBUFL           LOAD BUFFER LENGTH FROM DCB
         MVI   0(AREAREG),X'00'         SET COMPLETION CODE TO O IN BFR
         CLI   0(CCWREG),X'02'          IS COMMAND READ
         BE    READ                     YES
         MVC   8(8,CCWREG),DBWRITE      MOVE TIC COMMAND TO 2ND CCW
         CLC   1(3,AREAREG),FULL4       IS LINK FIELD ZERO
         BNE   WRITE                    NO,MSG MORE THAN 1 BFR
         NI    4(CCWREG),X'77'          TURN OFF DC AND PCI FLAGS
         TM    DECTYPE+1,X'0D'                                     000B
         BO    WRWL                                                000B
         LH    ICSREG,DECLNGTH          USE BUFFER LENGTH IN DECB
WRL      SH    ICSREG,FULL4+2           SUBTRACT LINK LENGTH       000B
         SH    ICSREG,6(CCWREG)         SUBTRACT OFFSET
         STH   ICSREG,6(CCWREG)         STORE COUNT IN CCW
         B     TESTLAST
WRWL     LH    ICSREG,DECWLNG                                      000B
         B     WRL                                                 000B
READ     MVC   8(8,CCWREG),DBREAD       MOVE READ-SKIP CMND TO 2ND CCW
         MVI   4(AREAREG),X'00'         ZERO 1ST BYTE OF DATA AREA
WRITE    MVC   16(8,CCWREG),0(CCWREG)   MOVE 1ST CCW TO 3RD CCW
         MVC   24(8,CCWREG),8(CCWREG)   MOVE 2ND CCW TO 4TH CCW
         MVC   17(3,CCWREG),1(AREAREG)  MOVE ADRS OF NEXT BFR TO CCW
         L     AREAREG,16(CCWREG)       INCREMENT BY FOUR TO 1ST DATA
         A     AREAREG,FULL4                 BYTE
         ST    AREAREG,16(CCWREG)
         OI    5(CCWREG),X'40'          SETON 1ST PCI BIT IN 1ST R/W
         SH    ICSREG,FULL4+2           SUBTR ACT 4
         STH   ICSREG,22(CCWREG)        STROE IN 2ND READ/WRITE CCW
         O     CCWREG,24(CCWREG)        PLACE ADRS OF 1ST IN 4TH CCW
         ST    CCWREG,24(CCWREG)
         LR    AREAREG,CCWREG           SAVE ADRESS OF 1ST CCW
         AH    CCWREG,SIXTEEN           ADD 16 TO CCW REG
         ST    CCWREG,8(AREAREG)        PLACE ADDRESS OF 3RD IN 2ND CCW
         CLI   0(AREAREG),X'02'         IS THIS A READ
         BNE   WRITE1                   IF NOT, BRANCH.            000B
         AH    ICSREG,DECLNGTH          IF THIS IS A READ, ADD     000B
         SH    ICSREG,DCBBUFL      DECLNGTH AND SUBTRACT DCBBUFL   000B
         B     READS               TO GET LENGTH OF INPUT AREA     000B
*                                  MINUS 4.                        000B
WRITE1   OI    11(AREAREG),X'01'        INVALIDATE ADDR IN 1ST TIC 000B
READS    SH    ICSREG,6(AREAREG)        SUBTRACT PRESET OFFSET
         STH   ICSREG,6(AREAREG)        STORE COUNT IN 1ST CCW
         LA    CCWREG,8(CCWREG)         STEP CCW REG TO 4TH CCW
*        16    LINES OF CODE DELETED BY APAR ------------>     @ZA11036
         B     TESTLAST
         EJECT
FULL4    DC    F'4'
K2       DC    F'2'                                              A38557
OPCODE   DC    X'FF000000'             SAVE THE OP CODE         YA01260
REQONE   DC    X'01000000'
OFFMSK   DC    X'0000003F'
DIALMASK DC    X'0000007F'                                         000H
DBREAD   DC    X'02000000381200C0'      READ SKIP MASK           A32459
DBWRITE  DC    X'0800000028120000'      TIC FOR WRITE COMMAND MASK
ENABLCCW DC    X'2700000020010001'   14 ENABLE          SLI, L=1
FFCODE   DC    X'00FF'
SIXTEEN  DC    H'16'
EIGHT    DC    H'8'
CONNECT  EQU   X'DD'                                               000L
DISCON   EQU   X'01'                                               000L
RDCON    EQU   X'11'                    READ CONNECT               000L
WCON     EQU   X'1C'                    WRITE CONNECT              000L
RCONTONE EQU   X'1E'                                               000L
WRRESET  EQU   X'0A'                    WRITE RESET              A32466
WRRSTMON EQU   X'0B'               WRITE RESET MONITOR           S99245
ENABLE   EQU   X'27'                    ENABLE COMMAND             000J
DIAL     EQU   X'29'                    DIAL COMMAND               000J
WINIT    EQU   X'02'               WRITE INITIAL                YA01029
ONE      EQU   X'01'                    THE CONSTANT 1             000J
TWO      EQU   X'02'                    THE CONSTANT TWO           000J
FORTY    EQU   X'40'                    DECIMAL 64                 000J
FORTY4   EQU   X'44'                    DECIMAL 68                 000J
TP0B     EQU   X'0B'                    TP OP CODE 0B              000J
TP0C     EQU   X'0C'                    TP OP CODE 0C              000J
TP08     EQU   X'08'                    TP OP CODE 08              000J
X00      EQU   X'00'                                           @ZA10035
X01      EQU   X'01'                                           @ZA10035
X06      EQU   X'06'                                           @ZA11032
X07      EQU   X'07'                                           @ZA11032
X10      EQU   X'10'                                           @ZA11032
X13      EQU   X'13'                                           @ZA11032
X20      EQU   X'20'                                           @ZA10035
X90      EQU   X'90'                                           @ZA10032
XF0      EQU   X'F0'                                           @ZA10032
OHH      EQU   X'00'               NULL BYTE                    YA01029
MXTYPE   EQU   X'07'               2740 WITH DIAL AND RC        YA01029
UCB3DISP EQU   X'10'               GRAPHICS DEVICE CLASS      LD YM7701
UCBTBYT3 EQU   18                  DISPL. OF DEV. CLASS FIELD LD YM7701
X24      EQU   X'24'                                          LD YM7701
XFF      EQU   X'FF'                                        LD @ZA02302
LENG20   DC    H'20'
DISP0    EQU   0                   DISPLACEMENT OF 0
DISP1    EQU   1                   DISPLACEMENT OF 1             Y02947
DISP2    EQU   2                   DISPLACEMENT OF 2             Y02947
DISP3    EQU   3                   DISPLACEMENT OF 3            YA02128
DISP4    EQU   4                   DISPLACEMENT OF 4        LD @ZA02302
SIX      EQU   6                                               @ZA04152
C7       EQU   7                                               @ZA04152
C17      EQU   17                                              @ZA04152
LEN3     EQU   3                   LENGTH OF 3                   Y02947
         CNOP  0,8
         EJECT
         IECTDECB
         EJECT
         IECTIOBX
         EJECT
         IECTDEBX
*                                                                  000A
*                                                                  000A
*                             TEMP WORK AREA                       000A
INDEX    EQU   IOBERINF                                            000D
AE       EQU   INDEX+1                                             000A
OFFSET   EQU   INDEX+2                                             000A
         EJECT
         DCBD  DSORG=BX,DEVD=(BS,WT)                               000G
         EJECT
         IKJTCB DSECT=YES,LIST=YES
         END
