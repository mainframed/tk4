         TITLE  'IGG019MR - ON-LINE-TERMINAL-TEST CONTROL MODULE'
IGG019MR START
***********************************************************************
*                                                                     *
* STATUS -                                                            *
*                                                                     *
* FUNCTION -          TO SERVICE ON-LINE-TEST REQUESTS - CALL SVC 66, *
*                     TO SERVICE I/O INTERRUPTS WHILE IN TEST, FOR    *
*                     START-STOP, TO FREE PATTERN AREA IF CURRENTLY   *
*                     UTILIZED.                                       *
*                                                                     *
* ENTRY POINT -       ENTRY IS TO FIRST EXECUTABLE INSTRUCTION VIA    *
*                     THE ASYNCHRONOUS EXIT EFFECTOR SCHEDULED BY     *
*                     CHANNEL END.                                    *
*                                                                     *
* INPUT -             REGISTER 1 - ADDRESS OF IOB                     *
*                     IOBERINF - CONTAINS ADDRESS OF START OF RFT     *
*                        INSERTED BY CHANNEL END.                     *
*                                                                     *
* OUTPUT -            1. PRINTABLE MODULE NAME BUILT IN IOB           *
*                     2. ON-LINE-TEST MESSAGE ON CONSOLE AT           *
*                        COMPLETION OF TEST (FOR BI-SYNCH)            *
*                                                                     *
* EXTERNAL ROUTINES - 1. SVC 58 - RELEASE BUFFER ROUTINE.             *
*                     2. SVC 66 - ON-LINE-TERMINAL TEST               *
*                     3. SVC 0  - EXECUTE CHANNEL PROGRAM ROUTINE     *
*                     4. WTO    - WRITE TO OPERATOR ROUTINE           *
*                     5. SVC 2  - POST ROUTINE                        *
*                     6. IGG019MA - BTAM READ-WRITE ROUTINE           *
*                     7. FREEMAIN - TO FREE PATTERN AREA              *
*                                                                     *
* EXIT -              SVC 66 - TO BUILD ON-LINE-TEST CH. PROGRAM      *
*                     SVC 3  - RETURN TO SUPERVISOR                   *
*                                                                     *
* IN LINE ROUTINES -  1. SETUCB - SET UP UCB ADDRESSABILITY AND       *
*                        DETERMINE WHETHER START-STOP OR BI-SYNCH     *
*                        AND ISSUE SVC 66 IF BI-SYNCH.                *
*                                                                     *
*                     2. TSTSRT - DETERMINE TYPE OF CCW INTERRUPTED,  *
*                        ACCESS BRANCH TABLE TO APPROPRIATE ROUTINE.  *
*                                                                     *
*                     3. RRFTWRR - END TEST                           *
*                                                                     *
*                     4. SRFTNOP - RESTART ON NEXT CCW                *
*                                                                     *
*                     5. RRFTRDT - RESTART ON NEXT CCW                *
*                                                                     *
*                     6. SRFTEOT - RESTART ON NEXT CCW                *
*                                                                     *
*                     7. RRFTWRI - RESTART ON NEXT CCW                *
*                                                                     *
*                     8. SRFTPRE - RESTART SAME CCW (PREPARE)         *
*                                                                     *
*                     9. RRFTRDR - CHECKS FOR ERROR BIT ON IN         *
*                        IOBINCAM.  IF NOT, RESTARTS ON NEXT CCW.     *
*                        IF SO, TURNS OFF ERROR BIT AND ENDS TEST.    *
*                                                                     *
*                     10. SRFTRDI - RESTART ON NEXT CCW               *
*                                                                     *
*                     11. TESTMSG - ENTERED ON TEXT OR RESPONSE TO    *
*                         TEST CCW. CHECKS WHETHER SENDING OR         *
*                         RECEIVING MSGS. IF SENDING, GOES TO         *
*                         SNDTST. CHECKS FOR EOT RECEIVED, IF SO      *
*                         BRANCH TO CHKDIS. SETS UP TO RESTART.       *
*                         CHECKS ERRORS - IF ANY GO TO RCVERR.        *
*                                                                     *
*                     12. CHKDIS - SETS UP DISABLE COMMAND FOR        *
*                         DIAL LINE, OR PUTS UP READ INITIAL FOR      *
*                         NON-DIAL.                                   *
*                                                                     *
*                     12. RCVERR - CHECKS FOR TYPE OF ERROR           *
*                         ENCOUNTERED AND UPDATES COUNTER.            *
*                                                                     *
*                     13. SNDTST - CHECKS FOR WACK,NAK,OR TIME OUT AND*
*                                  UPDATES COUNTERS.  CONTINUES TEST  *
*                                                                     *
*                     14. CHKCNT - DECREMENTS Y COUNT AND RESTARTS    *
*                         CHANNEL PROGRAM YY NOT EQUAL TO ZERO. IF    *
*                         YY = 0, GOES TO MSG WRITER ROUTINE.         *
*                                                                     *
*                     15. FINISH - BUILDS AND PUTS OUT ON-LINE-TEST   *
*                         CONSOLE MESSAGES. DETERMINE WHETHER TO      *
*                         RESTART READ OR ISSUE WRITE EOT AND         *
*                         BUILDS CHANNEL PROGRAM. GOES TO EXCP.       *
*                                                                     *
*                     16. LAST - CHECKS FOR ERRORS AND POSTS ON-LINE- *
*                         TEST ECB ACCORDINGLY.                       *
*                     17. STRTSTOP - SETS UP PARAMETERS AND ISSUES    *
*                         SVC 66. (START-STOP)                        *
*                     18. FREEAREA - FREES PATTERN AREA IF CURRENTLY  *
*                         UTILIZED. (START-STOP)                      *
*                                                                     *
***********************************************************************
*                                                                     *
*  .... ...1  RFT ERROR BIT. EITHER- 1) AN INVALID REQUEST WAS RECEIVED
*             ON READ CONTINUE OPERATION AND BTAM COULD NOT SUCCESS-  *
*             FULLY RESET THE LINE PRIOR TO POSTING. OR 2) ON A 3275  *
*             DIAL DEVICE, THE RFT MESSAGE WAS TRANSMITTED THE        *
*             SPECIFIED NUMBER OF TIMES, FOLLOWED BY A WRITE RESET.   *
*             THE RESPONSE TO THE WRITE RESET INDICATES AN ERROR      *
*             CONDITION. REF APAR OZ06398                             *
*                                                                     *
***********************************************************************
*                                                                     *
* ATTRIBUTES -        THIS ROUTINE IS RE-ENTRANT.                     *
*                                                                     *
* CHANGE ACTIVITY                                                     *
*            APARS                          PTMS                      *
*        YA01017  (10/19/73)            YM4056  (10/3/73)             *
*        ZA02329  (11/20/74)            YM4090  (11/2/73)             *
*        ZA02330  (11/20/74)                                          *
*        ZA02331  (11/20/74)                                          *
*        ZA02332  (11/20/74)                                          *
*        AZ03988  (04/29/75)                                          *
*        AZ04672  (09/24/75)                                          *
*        AZ06398  (11/05/75)                                          *
*        AZ06406  (11/04/75)                                          *
*                                                                     *
***********************************************************************
         EJECT
PARMREG  EQU   0                   PARAMETER REGISTER       LD @ZA02332
PARAMREG EQU   1             ADDRESS OF TERMINAL TEST PARAMETER LIST
DEBREG   EQU   2                       DEB ADDRESS REGISTER
CTRREG   EQU   2             COUNT REGISTER
DECBREG  EQU   3             POINTER TO DECB
BASEREG  EQU   4             MODULE BASE REGISTER
IOBREG   EQU   5             POINTER TO IOB
DCBREG   EQU   6             POINTER TO DCB
CCWREG   EQU   7
WREG     EQU   8
ICREG    EQU   8
AREAREG  EQU   9             POINTER TO PATTERN AREA USED
IOREG    EQU   9             POINTER TO IO AREA OR BUFFER DATA AREA
W1REG    EQU   10
UCBREG   EQU   11
W3REG    EQU   12                  WORK REGISTER            LD @ZA02330
SAVEREG  EQU   13
RETREG   EQU   14            RETURN REGISTER
W2REG    EQU   14                                                A28913
LINKREG  EQU   15            REGISTER LINKAGE TO BTAM READ-WRITE RTN.
*
         EJECT
TIMEOUT EQU   X'01'
LOSTDATA EQU   X'02'
DATACHK  EQU   X'08'
DCBBTAM  EQU   X'10'         BTAM DCB FLAG
DCBTERMT EQU   X'10'         TERMINAL TEST SPECIFIED IN DCB ERROPT
DECTTOPR EQU   X'01'         TERMINAL TEST OPERATING FLAG
HALFBYTE EQU   X'F0'         MAXIMUM HEX VALUE IN 1/2 BYTE
TIC      EQU   X'08'
MAXBITS  EQU   X'FF'         MAXIMUM HEX VALUE IN ONE BYTE
RDINIT   EQU   X'01'                    READ INITIAL OP CODE
WRD      EQU   X'10'                    WRITE DISCONNECT OP CODE   000D
READ     EQU   X'02'
WRR      EQU   X'0A'                    WRITE RESET OP COCE        000D
ERP      EQU   X'24'                    ERP IN CTRL FLAGS          000D
MASKALL  EQU   X'FF'
DCBDYBFR EQU   X'08'         DYNAMIC BUFFERING FLAG IN DCB
IOBEX    EQU   X'04'                    IOB EXCEPTION FLAG         000D
LEADCCW  EQU   X'40'                                               000D
RCVTST    EQU    X'C0'
UNITEX   EQU   X'01'
NOP      EQU   X'03'
NORM   EQU   X'7F'                                                 000D
WRITE    EQU   X'01'         WRITE COMMAND CODE
SHTWRT   EQU   X'40'                                               000D
REENTRY  EQU   X'40'                    REENTRY BIT IN DECONLTT    000K
POSITIVE EQU   X'76'                    POSITIVE RESPONSE TO EOB   000K
NOENTRY  EQU   X'BF'                    TURNS OFF REENTRY (2760)   000K
BUFREG   EQU   11                                                A32477
ECBREG   EQU   10                                                A32477
BAS1REG  EQU   12                                                A32477
ZEROREG  EQU   0                                                 A32477
SIXT     EQU   X'10'                                             A32477
ZONE     EQU   X'F0'                                             A28613
NEXTCCW  EQU   8                        DISP OF NEXT CCW IN IOBCPA
EOTLNGTH EQU   1                        LENGTH OF EOT CHARACTER
ASCII    EQU   X'14'               DCBXCODE ASCII MASK      LD @ZA02330
         EJECT
         BALR  BASEREG,0
         SPACE
         USING *,BASEREG
         USING IECTDECB,DECBREG
         USING IHADCB,DCBREG
         USING IECTDEB+36,DEBREG
         USING UCBSTART,UCBREG
         USING IECTIOB,IOBREG
         B     AROUND                   BRANCH AROUND MODULE ID  YM4056
         DC    C'IGG019MR'              MODULE ID                YM4056
         DC    C', 4324'                                    LD @ZA02330
         DC    C'&SYSDATE'         DATE LAST ASSEMBLY       LD @ZA02330
         DS    0F                                                YM4056
         DC    XL180'00'                PATCH AREA               YM4056
AROUND   EQU   *                                                 YM4056
         SPACE 2
         LA    SAVEREG,SAVE
         LR    IOBREG,PARAMREG
         L     DCBREG,IOBDCBPT
         L     DECBREG,IOBECBPT
         L     AREAREG,IOBERINF
         L     DEBREG,DCBDEBAD
         SPACE 2
         SPACE
         L     CCWREG,IOBCSW            LOAD CSW ADDRESS           000D
         SH    CCWREG,K8                BACK UP TO INT CCW         000D
         TM    DCBBFTEK,DYNBF           TEST FOR DYNAMIC BUFFER    000D
         BZ    SETUCB                   IF NOT, BRANCH             000D
         CLI   0(CCWREG),X'02'         INTERRUPT ON READ         A43796
         BNE   SETUCB                  NO,BRANCH                 A43796
         TM    5(CCWREG),X'11'         TEXT CCW                  A43796
         BNO   SETUCB                  NO, BRANCH                A43796
         CLI   8(CCWREG),TIC            WAS PCI HANDLED            000D
         BNE   SETUCB                   IF NOT COMMAND IS STILL R-S000D
         L     WREG,8(CCWREG)           LOAD TIC COMMAND WORD      000D
         L     WREG,0(WREG)             LOAD NEXT BFR ADDRESS
         LA    0,0(WREG)                LOAD INTO REG 0
         LTR   0,0                      TEST FOR BFR ADDRESS       000D
         BZ    SETUCB                   IF NOT PRESENT, BRANCH     000D
         SH    0,K4
         BZ    SETUCB
         LR    PARAMREG,DCBREG          LOAD DCB ADDRESS           000D
         SVC   58                       RELEASE SECOND BUFFER      000D
SETUCB   SR    UCBREG,UCBREG            CLEAR REG FOR UCB BASE
         IC    UCBREG,IOBUCBX           FIND UCB INDEX
         SLL   UCBREG,2                   X 4
         L     UCBREG,DEBUCBAD(UCBREG)  LOAD ADDRESS FROM LIST
RCREG    EQU   15                  RETURN CODE REG
         SPACE 2
*                             MOVE SVC NAME INTO IOB (USED BY SVC 66)
         MVC   IOBNAME(8),SVCNAME
         SPACE 2
*                             TEST FOR BSC
         TM    UCBDEVTP+3,X'90'
         BNO   STRTSTOP
         TM    UCBDEVTP+3,HALFBYTE-X'90'
         BO    STRTSTOP
         CLI   IOBCPA+L5,INVWREOT     WRITE EOT TP OP          @ZA06398
*                                CODE FOR INVALID RD CONT ?    @ZA06398
         BNE   TSTENQ                  NO CONTINUE             @ZA06398
         TM    IOBFLAG1,IOBEX           ANY ERRORS ?           @ZA06398
         BO    TRYRDENQ           YES SET UP RECOVERY          @ZA06398
         B     TESTMSG             PUT EOT IN BUFFER & POST    @ZA06398
TSTENQ   CLI   IOBCPA+L5,INVRDENQ  RD ENQ FOR INVALID RD TT ?  @ZA06398
         BE    CHKENQ             YES CHECK RESPONSE           @ZA06398
         TM    IOBINCAM,MASKALL-RFTBIT  IS THIS A 3270 DVC?      S99245
         BNO   TSTOLT                   NO,BRANCH                S99245
         TM    UCBDEVTP+1,DIAL          DIAL?                    S99245
         BNO   TSTOLT                   NO,BRANCH                S99245
         CLI   IOBCPA+45,WRTEOT         WRITE RESET TP OP CODE   S99245
         BE    HANDLETR                 YES,HANDLE               S99245
TSTOLT   EQU   *                                                 S99245
         EJECT
         TM    5(CCWREG),X'3F'          TEST FOR ONLT CCW          000D
         BZ    TSTSTRT                  IF ZERO, THIS IS ONLT CCW  000D
         TM    IOBINCAM,MASKALL-RFTBIT  IS IT A 2370        LD @ZA02330
         BZ    NO3270              NO,BRANCH                LD @ZA02330
         TM    UCBDEVTP+DISP1,DIAL  3270 DIAL ?             LD @ZA02330
         BO    NO3270              YES, BRANCH              LD @ZA02330
         SR    W1REG,W1REG         CLEAR REG                LD @ZA02330
         LA    ICREG,DISP4         PUT ADDR.CNT IN ICREG    LD @ZA02330
         LA    W3REG,DISP7(AREAREG)  GET ADDR. OF ADDRESS   LD @ZA02330
         TM    DCBXCODE,ASCII      IS IT ASCII ?            LD @ZA02330
         BO    ASCI                YES,BRANCH               LD @ZA02330
         CLI   DISP6(AREAREG),XF4  IS NO. OF CHAR VALID     LD @ZA02330
         BNE   END                 NO, INVALID TEST REQ.    LD @ZA02330
LOOP     EQU   *                                            LD @ZA02330
         LA    W2REG,XLTTABLE      GET ADDR OF XLATE TABLR  LD @ZA02330
         TM    DISP0(W3REG),ZONE   IT IS NUMERIC            LD @ZA02330
         BNO   ALPHA               NO, BRANCH               LD @ZA02330
         NI    DISP0(W3REG),ZONEOFF STRIP OFF ZONE          LD @ZA02330
         B     ENDNUM              BRANCH                   LD @ZA02330
ALPHA    EQU   *                                            LD @ZA02330
         OI    DISP0(W3REG),X40    CONVERT LOWER TO UPPER   LD @ZA02330
         CLI   DISP0(W3REG),XC6    IS CHAR. TOO LARGE       LD @ZA02330
         BH    END                 YES INVALID DEV. ADDR.   LD @ZA02330
         NI    DISP0(W3REG),ZONEOFF AND OFF ZONE            LD @ZA02330
         IC    W1REG,DISP0(W3REG) GET INDEX TO XLATE TABLE  LD @ZA02330
         AR    W2REG,W1REG         ADD INDES TO BASE        LD @ZA02330
         MVC   DISP0(L1,W3REG),DISP0(W2REG)  MOVE CHAR...   LD @ZA02330
*                                  ...INTO AREA             LD @ZA02330
ENDNUM   EQU   *                                            LD @ZA02330
         LA W3REG,DISP1(W3REG)  BUMP TO NEXT CHAR.          LD @ZA02330
         BCT   ICREG,LOOP          LOOP UNTIL FINISH        LD @ZA02330
         B     BUILDADR            FINISH BUILDING ADDR.    LD @ZA02330
ASCI     EQU   *                                            LD @ZA02330
         CLI   DISP6(AREAREG),X34  IS NO. CHAR. VALID ?     LD @ZA02330
         BNE   END                 NO, INVALID REQ.         LD @ZA02330
LOOPASCI EQU   *                                            LD @ZA02330
         LA    W2REG,XLTTABLE      GET ADDR OF XLATE TABLE  LD @ZA02330
         TM    DISP0(W3REG),ASCZONE  IS CHAR. NUMERIC       LD @ZA02330
         BNO   ALPHAASC            NO, GO TO ALPHAASC       LD @ZA02330
         TM    DISP0(W3REG),ALFAZONE IT IS LOWER CASE       LD @ZA02330
         BO    END                 YES,INVALID DEV. ADDR.   LD @ZA02330
         NI    DISP0(W3REG),ZONEOFF  STIP OFF ZONE          LD @ZA02330
         B     ENDNUMAS            GO LOOP BACK AROUND      LD @ZA02330
ALPHAASC EQU   *                                            LD @ZA02330
         OI    DISP0(W3REG),X20    CONVERT UPPER TO LOWER   LD @ZA02330
         CLI   DISP0(W3REG),X66    IS THE CHAR. TOO LARGE   LD @ZA02330
         BH    END                 YES, INVALID ADDR.       LD @ZA02330
         NI    DISP0(W3REG),ZONEOFF  AND OFF ZONE           LD @ZA02330
         IC    W1REG,DISP0(W3REG)  GET INDEX TO XLATE TABLE LD @ZA02330
         AR    W2REG,W1REG         ADD INDEX TO THE BASE    LD @ZA02330
         MVC   DISP0(L1,W3REG),DISP0(W2REG)  MOVE CHAR...   LD @ZA02330
*                                  ...INTO AREA             LD @ZA02330
ENDNUMAS EQU   *                                            LD @ZA02330
         LA    W3REG,L1(W3REG)     BUMP TO NEXT CHAR.       LD @ZA02330
         BCT   ICREG,LOOPASCI      LOOP UNTIL FINISH        LD @ZA02330
BUILDADR EQU   *                                            LD @ZA02330
         LA    W2REG,DISP7(AREAREG)  POINT TO ADDR CHAR.    LD @ZA02330
         LA    W1REG,L2            PUT LOOP CNT IN REG      LD @ZA02330
LOOP1    EQU   *                                            LD @ZA02330
         IC    ICREG,DISP0(W2REG)  GET FIRST CHAR. ADDR     LD @ZA02330
         SLL   ICREG,L4            SHIFT IT 4 BITS          LD @ZA02330
         STC   ICREG,DISP0(W2REG)  STORE IT BACK            LD @ZA02330
         OC    DISP0(L1,W2REG),DISP1(W2REG) OR THEM         LD @ZA02330
         MVC   DISP1(L1,W2REG),DISP0(W2REG) MOVE INTO 2ND B LD @ZA02330
         LA    W2REG,DISP2(W2REG)  BUMP TO DEV ADDR.        LD @ZA02330
         BCT   W1REG,LOOP1         LOOP UNTIL FINISH        LD @ZA02330
NO3270   EQU   *                                            LD @ZA02330
         SVC   66                                                  000D
         B     EXIT                                                000D
TSTSTRT  CLI   0(CCWREG),NOP           WAS LAST CCW A NO-OP        000D
         BE    TESTRDTT           GO SEE IF INVALID RD TT      @ZA06398
         TM    5(CCWREG),LEADCCW       TEST FOR SETUP CCW          000D
         BZ    TESTMSG                  IF ZERO, THIS IS NOT SETUP
         LA    WREG,IOBCPA                                         000D
         LR    W1REG,CCWREG                                        000D
         SR    W1REG,WREG                                          000D
         TM    DECDCBAD,RCVTST         CHK FOR SENDING/RECEIVING
         BM    BR                       IF SENDING, BRANCH         000D
         AH    W1REG,K4                ADD 4                       000D
BR       B     BRTBL(W1REG)             BRANCH TO A CCW ROUTINE    000D
BRTBL    B     RRFTWRR                  RCV RFT - WR RESPONSE      000D
         B     SRFTEOT                  SNT RFT - WR EOT         A27602
         B     RRFTRDT                  RCV RFT - RD TEXT (EOT)    000D
         B     SRFTPRE                  SNT RFT - PREPARE        A27602
         B     RRFTEOT                  RCV RFT - WR EOT /R NOP  A27602
         B     SRFTNOP                  SNT RFT - NO OPERATION   A27602
         B     RRFTWRI                  RCV RFT - WR INQUIRY     A27602
         B     SRFTRDI                  SNT RFT   RD INQUIRY       000D
         B     RRFTRDR                  RCV RFT - RD RESPONSE    A27602
TESTMSG  TM    DECDCBAD,RCVTST         CHK FOR SENDING/RECEIVING
         BM    SNDTST                   IF SENDING, BRANCH         000D
         L     AREAREG,IOBCPA+40       GET ADDR OF READ IN AREA    000D
         CLC   0(1,AREAREG),DCBBSEOT    CHECK FOR EOT RECEIVED     000D
         BE    CHKDIS                  IF SO, SET UP TO END TEST   000D
         CLC   0(2,AREAREG),DCBBSDLE    CHECK FOR DLE-EOT RECEIVED 000D
         BE    CHKDIS                  IF SO, SET UP TO END TEST   000D
         LA    ICREG,DCBBSAK0          GET ACK-0 ADDR FOR SENDING  000D
         ST    ICREG,IOBCPA+32         STORE IN CCW                000D
         MVI   IOBCPA+32,X'01'         RESTORE COMMAND CODE        000D
         TM    IOBFLAG1,IOBEX           WAS THERE AN ERROR         000D
         BO    RCVERR                   IF SO, GO TO ERROR ROUTINE 000D
         SH    CCWREG,K8               BACK UP TO WRITE RESP CCW   000D
         B     CHKCNT                                              000D
CHKDIS   NI    IOBCSW+4,MASKALL-UNITEXCP SET OFF UNIT EXCEPTION    000D
         CLC    IOBPARM(4),DATA        X, Y EQUAL ZERO             000D
         BNE   YCOUNT                                              000D
ZEROWORK EQU   *                                                   000D
         MVI   IOBWORK,X'00'           SET Y COUNT TO ZERO         000D
         B     FINISH2
YCOUNT    EQU   *                                                  000D
         CLI   IOBWORK,ZEROY           HAS Y VALUE BEEN DECREMENTD 000D
         BNE   ZEROWORK                                            000D
DISABLE  EQU   *                                                   000D
         TM    UCBDEVTP+1,X'90'        IS THIS A DIAL LINE         000D
         BZ    END                     NO, PUT READ INITIAL UP     000D
         LA    CCWREG,IOBCPA+32        GET CHANNEL PROGRAM ADDRESS 000D
         MVC   0(16,CCWREG),DIALRST+8   MOVE IN DISABLE COMMAND    000D
         B     RESTART                 GO ISSUE COMMAND            000D
RCVERR   NI    IOBFLAG1,MASKALL-IOBEX   TURN OFF IOB EXCEPTION     000D
         TM    IOBWORK,MASKALL         IS Y COUNT ZERO             000D
         BZ     DISABLE                YES, ERRO ON READ EOT       000D
         TM    IOBCSW+4,UNITEX          CHECK FOR EOT RECEIVED     000D
         BO    FINISH                                              000D
         TM    IOBSENS0,TIMEOUT         CEHCK FOR TIME OUT         000D
         BZ    CHKLD                    IF NOT, BRANCH             000D
         IC    ICREG,IOBWORK+2          ADD 1 TO COUNT             000D
         LA    ICREG,1(ICREG)                                      000D
         STC   ICREG,IOBWORK+2                                     000D
CHKLD    TM    IOBSENS0,LOSTDATA        CHECK FOR LOST DATA        000D
         BZ    CHKDC                    IF NOT, BRANCH             000D
         IC    ICREG,IOBWORK+3          ADD 1 TO COUNT             000D
         LA    ICREG,1(ICREG)                                      000D
         STC   ICREG,IOBWORK+3                                     000D
CHKDC    TM    IOBSENS0,DATACHK         CHECK FOR DATA CHECK       000D
         BZ    CHKCNT                  IF NOT, BRANCH              000D
         IC    ICREG,IOBWORK+4          ADD 1 TO COUNT             000D
         LA    ICREG,1(ICREG)                                      000D
         STC   ICREG,IOBWORK+4                                     000D
         LA    ICREG,DCBBSNAK          GET NAK ADDR TO SEND        000D
         ST    ICREG,IOBCPA+32         STORE IN CCW                000D
         MVI   IOBCPA+32,X'01'         RESTORE COMMAND CODE        000D
         B     CHKCNT                                              000D
SNDTST   TM    IOBFLAG1,IOBEX           CHECK FOR AN ERROR         000D
         BO    SNDERR                   IF SO, GO TO ERROR ROUTINE 000D
         CLC   DECRESPN(2),DCBBSSAK     WAS WACK RECEIVED          000L
         BNE   CHKACK                                              000L
** THE LINE BELOW SHOULD HAVE BEEN DELETED BY AZ02329 **       @ZA03988
*******  IC    ICREG,IOBDCBPT           ADD ONE TO COUNT        YA01266
*
*              6 LINES DELETED FOR ----->                   LD @ZA02329
*
         TM    DECFLAGS,WACK       WAS WACK REC'D BEFOR ?   LD @ZA02329
         BNO   UPDAT1              NO, INITIALIZE CNT.      LD @ZA02329
         CLI   IOBERINF,TWENTY5    HAVE 25 WACKS BEEN REC'D LD @ZA02329
         BE    END                 YES, GET OUT             LD @ZA02329
         IC    ICREG,IOBERINF      ADD ONE TO COUNT...      LD @ZA02329
         LA    ICREG,DISP1(ICREG)  ...OF WACKS REC'D        LD @ZA02329
         STC   ICREG,IOBERINF      STORE COUNT              LD @ZA02329
         CLI   IOBERINF,TWENTY5    25 WACKS REC'D           LD @ZA02329
         BE    ZEROWORK            YES, BRANCH              LD @ZA02329
         B     FIRSTIME                                     LD @ZA02329
UPDAT1   EQU   *                                            LD @ZA02329
         LA    ICREG,L1            INIT. CNT OF WAKS TO 1   LD @ZA02329
         STC   ICREG,IOBERINF      STORE COUNT              LD @ZA02329
FIRSTIME EQU   *                                                   000L
         OI    DECFLAGS,WACK            INDICATE WACK              000L
         LA    WREG,DCBBSENQ            LOAD ADDR OF ENQ           000L
         MVC   IOBCPA(TWOCCWS),WENQ     MOVE CCWS TO IOB        YA01276
         ST    WREG,IOBCPA              STORE ADR IN CCW        YA01276
         MVI   IOBCPA,WRITECMD          MOVE COMMAND IN CCW     YA01276
         LA    WREG,0(CCWREG)           LOAD ADDRESS OF CURRENT CCW000L
         ST    WREG,IOBCPA+ONECCW       STORE ADR IN CCW        YA01276
         MVI   IOBCPA+ONECCW,TICCMD     MOVE IN COMMAND         YA01276
         LA    CCWREG,IOBCPA                                       000L
         B     RESTART                                             000L
CHKACK   EQU   *                                                   000L
         NI    DECFLAGS,NOWACK          INDICATE NO WACK           000L
         MVI   IOBERINF,X00             ZERO OUT WACK COUNT LD @ZA02329
         CLC   DECRESPN(2),DCBBSAK0     CHECK FOR ACK-0            000D
         BE    CHKCNT                   IF O.K., CONTINUE TEST     000D
         CLC   DECRESPN(1),DCBBSNAK     WAS THE RESPONSE NAK       000D
         BNE   CHKCNT                   IF NOT, GO TO ERROR ROUTINE000D
         IC    ICREG,IOBWORK+1          ADD 1 TO COUNT OF NAK'S    000D
         LA    ICREG,1(ICREG)                RECEIVED              000D
         STC   ICREG,IOBWORK+1                                     000D
         B     CHKCNT                   CONTINUE THE TEST          000D
SNDERR   EQU   *                                                   000L
         NI    DECFLAGS,NOWACK          INDICATE NO WACK           000L
         MVI   IOBERINF,X00             ZERO OUT WACK COUNT LD @ZA02329
         TM    IOBSENS0,TIMEOUT         CHK FOR TIME OUT           000L
         BZ    CHKUE                    IF NOT, BRANCH             000D
         IC    ICREG,IOBWORK+2          ADD TO 1 COUNT OF TIMEOUTS 000D
         LA    ICREG,1(ICREG)                                      000D
         STC   ICREG,IOBWORK+2                                     000D
         B     CHKCNT                                              000D
CHKUE    TM    IOBCSW+4,UNITEX          CHK FOR UNIT EXCEPTION     000D
         BZ    CHKCNT                   IF NOT, BRANCH             000D
         CLI   0(CCWREG),WRITE          IS THIS A WRITE COMMAND    000D
         BNE   FINISH                   IF NOT, EOT RECEIVED       000D
         LA    CCWREG,NEXTCCW(CCWREG) IF SO, RESTART ON NEXT CCW   000D
         B     RESTART                                             000D
TESTRDTT CLI DECTYPE+L1,RDCONT         READ TT ?               @ZA06398
         BNE   END                     NO END TEST             @ZA06398
         TM    IOBINCAM,X02             ERROR BIT ON ?         @ZA06398
         BZ    END                      NO, END TEST           @ZA06398
         MVI   IOBWORK,X00                CLEAR Y COUNT        @ZA06398
         NI    IOBINCAM,XFF-X02         CLEAR ERROR BIT        @ZA06398
         MVC   IOBCPA+L4(L4),PTPTRST+L4  MOVE IN CCW .....     @ZA06398
         LA    WREG,DCBBSEOT             .....TO WRITE EOT     @ZA06398
         O     WREG,PTPTRST              .....TO CLEAR LINE    @ZA06398
         ST    WREG,X00(CCWREG)                                @ZA06398
         MVI   TPOPCODE(CCWREG),X33      SET TP OP             @ZA06398
         MVC   IOBCPA+L12(L4),READENQ+L4    MOVE IN ......     @ZA06398
         LA    WREG,DECRESPN              .....READ ENQ CCW    @ZA06398
         O     WREG,READENQ               .....FOR RECOVERY    @ZA06398
         ST    WREG,IOBCPA+L8             .....IF NEEDED       @ZA06398
         B     RESTART                  GO START IT            @ZA06398
RRFTWRR  B     FINISH                   IF ENTERED, END TEST       000D
         SPACE 3                                                   000D
RRFTRDT  EQU   *                                                   000D
         LA    CCWREG,8(CCWREG)         STEP TO NEXT CCW           000D
         B     RESTART                  RESTART OPERATION          000D
         SPACE 3                                                   000D
RRFTWRI  EQU   RRFTRDT                                             000D
         SPACE 3                                                   000D
SRFTNOP  EQU   RRFTRDT                  RESTART ON NEXT CCW        000D
         SPACE 3                                                   000D
SRFTEOT  EQU   RRFTRDT                  RESTART ON NEXT CCW        000D
RRFTEOT  EQU   RRFTRDT                  RESTART ON NEXT CCW      A27602
         SPACE 3                                                   000D
RRFTRDR  EQU   *                                                   000D
         TM    IOBINCAM,X'02'          IS ERROR BIT SET            000D
         BZ    RRFTRDR1
         MVI   IOBWORK,X'00'
         NI    IOBINCAM,X'FF'-X'02'      TURN OFF ERROR BIT        000D
         B     SKIPWTO                                           A28610
         SPACE   3
RRFTRDR1  EQU  *
         TM    IOBINCAM+1,X'F0'         FIRST TIME THROUGH         000L
         BZ    TESTTIME
         B     RRFTRDT                                             000L
TESTTIME EQU   *                                                   000L
         CLC   DECRESPN(2),DCBBSAK0     WAS ACK0 RECEIVED          000L
         BNE   UPDATE                                              000L
         OI    IOBINCAM+1,X'F0'         INDICATE NOT FIRST TIME    000L
         B     RRFTRDT                                             000L
UPDATE   EQU   *                                                   000L
         TM    IOBINCAM+1,ERRMAXCT      RETRY COUNT = 7            000L
         BO    ZEROWORK                 IF SO, END TEST            000L
         SR    ICREG,ICREG              CLEAR REGISTER             000L
         IC    ICREG,IOBINCAM+1         GET RETRY COUNT            000L
         LA    ICREG,1(ICREG)           ADD ONE TO RETRY COUNT     000L
         STC   ICREG,IOBINCAM+1         STORE RETRY COUNT          000L
         SH    CCWREG,MAXLENGT
         B     RESTART
         SPACE  2
SRFTPRE  EQU   *
         B     RESTART                  RESTART PREPARE            000D
         SPACE 3                                                   000D
SRFTRDI  EQU   RRFTRDT                  CHECK                      000D
CHKCNT   SR    ICREG,ICREG             ZERO OUT REGISTER           000D
         IC    ICREG,IOBWORK           LOAD TEST COUNT             000D
         BCT   ICREG,SNDMORE            DECREMENT & TEST           000D
         TM    DECDCBAD,RCVTST         SEND OR RECV               M4505
         BM    FINISH                  SEND, BRANCH               M4505
         TM    IOBCPA+36,X'40'         IS WR ACK CC               M4505
         BZ    FINISH                  NO, END TEST               M4505
         NI    IOBCPA+36,X'BF'         YES, SEND ANOTHER ACK      M4505
         B     READCONT                                           M4505
SNDMORE  STC   ICREG,IOBWORK            RESTORE COUNT              000D
         TM    IOBWORK,MASKALL
         BO    END
LOADSTRT TM    DECDCBAD,RCVTST          SENDING OR RECEIVING     A27602
         BNM   READCONT                 BRANCH IF RECEIVING      A27602
         LA    CCWREG,IOBCPA+40         RESTART WRITE CONTINUE   A27602
         B     RESTART                                           A27602
READCONT LA    CCWREG,IOBCPA+32         RESTART READ CONTINUE    A27602
RESTART  ST    CCWREG,IOBSTART          STORE ADDRESS OF 1ST CCW   000D
EXCP   EQU   *
         L     PARMREG,GETPARM     SUBPOOL AND LENGTH       LD @ZA02332
         GETMAIN R,LV=(0)          GETMAIN FOR DUMMY DECB   LD @ZA02332
         ST    DECBREG,DISP4(PARAMREG) SAVE ADDR OF DECB    LD @ZA02332
         MVI   DISP4(PARAMREG),FOXFOX  FLAG AS DUMMY        LD @ZA02332
         SR    W1REG,W1REG         CLEAR REG                LD @ZA02332
         ST    W1REG,DISP0(PARAMREG) CLEAR ECB AREA         LD @ZA02332
         STCM  PARAMREG,MASK,IOBECBPT+L1 POINT IOB TO DUMMY LD @ZA02332
         LR    W1REG,PARAMREG      SAVE ADDR OF DUMMY       LD @ZA02332
         LR    PARAMREG,IOBREG
*
*              1 LINE DELETE FOR ----->                     LD @ZA02332
*
         SVC   0
*
*              1 LINE DELETED FOR ----->                    LD @ZA02332
*
         STCM  DECBREG,MASK,IOBECBPT+L1 REPOINT IOB TO DECB LD @ZA02332
         L     PARMREG,GETPARM     SET FOR FREEMAIN         LD @ZA02332
         FREEMAIN R,LV=(0),A=(W1REG)  FREE THE DUMMY        LD @ZA02332
         SVC   3                                                   000D
FINISH   EQU   *                                                   000D
         STC   ICREG,IOBWORK            STORE COUNT RESULT         000D
FINISH2  MVC   MSG+12(3),13(UCBREG)     GET LINE ADDRESS           000H
         MVC   MSG+28(2),IOBPARM        CONVERT TEST TYPE          000H
         MVC   MSG+31(2),IOBPARM+2      GET TRANSMISSION COUNT     000H
         SR    WREG,WREG               ZERO OUT REGISTER           000D
         TM    DECDCBAD,RCVTST         CHK FOR SENDING/RECEIVING
         BM    MOVEIN                  IF SENDING,, BRANCH         000D
         XC    WORKAREA(8),WORKAREA     CLEAR AREA               000D
         PACK  WORKAREA+6(2),IOBPARM+2(2)  PACK ORIGINAL Y VALUE   000D
         CVB   W1REG,WORKAREA           CONVERT FOR NEXT INSTR     000D
         IC    WREG,IOBWORK            GET RESIDUAL TRANSMSN CONT  000D
         SR    W1REG,WREG              GET ACTUAL NO TRANSMSNS.    000D
         CVD   W1REG,WORKAREA          CONVERT COUNT TO DECIMAL    000D
         UNPK  MSG+31(2),WORKAREA+6(2)  UNPACK INTO MSG AREA       000H
         OI    MSG+32,X'F0'             ADJUST SIGN BITS           000H
MOVEIN    EQU   *
         IC    WREG,IOBUCBX+3           GET NUMBER TIME OUTS
         CVD   WREG,WORKAREA            CONVERT TO DECIMAL
         UNPK  MSG+34(2),WORKAREA+6(2)  AND UNPACK                 000H
         OI    MSG+35,X'F0'             ADJUST SIGN BITS           000H
         TM    DECDCBAD,RCVTST         CHK FOR SENDING/RECEIVING
         BM    SENDER                    BRANCH
RECVER   LA    WREG,X'F8'
         STC   WREG,MSG+9
         IC    WREG,IOBUCBX+4           GET LOST DATA COUNT
         CVD   WREG,WORKAREA            CONVERT TO DECIMAL
         UNPK  MSG+37(2),WORKAREA+6(2)  AND UNPACK                 000H
         OI    MSG+38,X'F0'             ADJUST SIGN BITS           000H
         IC    WREG,IOBUCBX+5           GET DATA CHECK COUNT
         CVD   WREG,WORKAREA            CONVERT TO DECIMAL
         UNPK  MSG+40(2),WORKAREA+6(2)  AND UNPACK                 000H
         OI    MSG+41,X'F0'             ADJUST SIGN BITS           000H
         LA    WREG,42                  INITIALIZE MESSAGE COUNT   000H
         B     COUNT
SENDER   LA    WREG,X'F7'
         STC   WREG,MSG+9
         IC    WREG,IOBUCBX+2           GET NUMBER OF NAKS
         CVD   WREG,WORKAREA            CONVERT TO DECIMAL
         UNPK  MSG+37(2),WORKAREA+6(2)  AND UNPACK                 000H
         OI    MSG+38,X'F0'             ADJUST SIGN BITS           000H
         TM    UCBDEVTP+1,X'40'         IS THIS LINE MULTIPT
         BO    COMPX                   GO TEST X VALUE             000D
WTOPR    LA    WREG,39                  LOAD COUNT OF 39           000H
         B     COUNT                                               000D
COMPX    CLC   IOBPARM(2),DATA         IS X = ZERO                 000D
         BNE   ENTRYPT                 NO, TREAT AS USUAL MPT      000D
         SR    WREG,WREG               ZERO OUT REGISTER           000D
         L     W1REG,DECADRPT          GET TERMINAL LIST ADDR      000D
CHKAGIN  CLC   0(1,W1REG),DCBBSENQ     ARE WE AT END OF LIST     A28613
         BE    GETCHARS                YES, MOVE ADDR. CHARS IN    000D
         LA    WREG,1(WREG)            NO, INCREMENT COUNT BY ONE  000D
         LA    W1REG,1(W1REG)          INCREMENT ADDRESSS BY ONE   000D
         CH    WREG,MAXLENGT           IS ENTRY AT MAXIMUM LENGTH  000D
         BE    WTOPR                   YES, IGNORE TERM ID FIELD   000D
         B     CHKAGIN                 NO, RESUME SCAN FOR EOL     000D
         SPACE 2                                                   000D
GETCHARS SR    W1REG,WREG              MOVE BACK TO START OF ENTRY 000D
         B     EXPAND                  GO TO TRANS TO EBCDIC     A28613
         SPACE  2                                                  000D
ENTRYPT  LH    WREG,IOBCPA+30           GET WIDTH OF TERMINAL ID A27602
         BCTR  WREG,0                  GET RID OF ENQ COUNT        000D
         CH    WREG,MAXLENGT           IS TERM LIST TOO LONG     A28613
         BNL   WTOPR                   YES, IGNORE TERM ID       A28613
         LA    W1REG,IOBERINF+10       GET TERM LIST ADDRESS     A28613
EXPAND   LTR   WREG,WREG               IS COUNT ZERO OR NEG      A28613
         BNP   WTOPR                   YES, INVALID, IGNORE TID  A28613
         LA    W2REG,MSG+40            ADDR TERM ID FIELD IN MSG A28613
MOVE     MVC   1(1,W2REG),0(W1REG)     MOVE TWO 4 BIT DIGITS     A28613
         MVO   0(2,W2REG),0(2,W2REG)   EXPAND TO TWO BYTES       A28613
         OI    0(W2REG),ZONE           INSERT ZONES              A28613
         OI    1(W2REG),ZONE           INSERT ZONES              A28613
         TR    0(2,W2REG),TABLE        TRANS TO EBCDIC           A28613
         LA    W2REG,2(W2REG)          INCREMENT POINTERS        A28613
         LA    W1REG,1(W1REG)          INCREMENT POINTERS        A28613
         BCT   WREG,MOVE               LOOP IF MOVE INCOMPLETE   A28613
         LA    WREG,MSG                COMPUTE MSG COUNT         A28613
         SR    W2REG,WREG                                        A28613
         LR    WREG,W2REG                                        A28613
COUNT    STH   WREG,MSG
         LR    W2REG,WREG          SAVE LENGTH              LD @ZA02332
         LA    WREG,MSG            GET BEGINNING OF MSG     LD @ZA02331
         AR    WREG,W2REG          COMPUTE MSG LENGTH       LD @ZA02331
         MVC   DISP0(L4,WREG),MSG+FIFTYSIX                     @ZA04672
*                        ADJUST DESCRIPTOR AND ROUTING CODES.  @ZA04672
PRINT    WTO   MF=(E,MSG)               WRITE MESSAGE
SKIPWTO  CLC   IOBPARM(4),DATA         X, Y EQUAL 0              A28610
         BE    DISABLE                 BRANCH IF YES TO DISABLE  A27627
         CLI   IOBWORK,ZEROY           HAS Y VALUE BEEN DECREMENTD 000D
         BH    END                     NO, RESTART READ INITIAL    000D
         TM    DECDCBAD,RCVTST         CHK FOR SENDING/RECEIVING
         BM    SNTTST                    BRANCH IF SENDING TESTS   000D
         L     WREG,IOBCPA+40          GET AREA ADDRESS            000D
         MVC  0(1,WREG),DCBBSEOT       MOVE IN EOT CHARACTER       000D
         B     LOADSTRT                                            000D
SNTTST   LA    CCWREG,IOBCPA+40         LOAD START CCW ADDRESS   A27602
         TM    UCBDEVTP+1,X'90'        TEST FOR DIAL DEVICE        000D
         BZ    PTPT                     IF NOT, BRANCH             000D
         TM    IOBINCAM,MASKALL-RFTBIT  IS THIS A 3270 RFT ?     S99245
         BNO   NOT3270                  NO, BRANCH               S99245
         CLI   DECTYPE+1,RDCONT    WAS OPERATION A READ TT ?     S99245
         BNE   NOT3270             NO, BRANCH                    S99245
         MVC   CCWFLAGS(FIVEWORD,CCWREG),WRTRESET  MOVE IN WRT   S99245
*                                  RESET CHANNEL PGM             S99245
         LA    WREG,DCBBSEOT       LOAD ADDR OF EOT              S99245
         O     WREG,DIALRST             OR IN WRITE COMMAND      S99245
         ST    WREG,0(CCWREG)           STORE WRITE EOT IN CCW   S99245
         LA    WREG,DECRESPN            GET ADDR OF RESPONSE     S99245
         O     WREG,WRTRESET+RDCMD      OR IN READ COMMAND       S99245
         ST    WREG,RDEOTCCW(CCWREG)    STORE READ RESP          S99245
         MVI   IOBSNDPT,RESETACK        RESET ACK POINTERS       S99245
         MVI   IOBRCVPT,RESETACK                                 S99245
         XC    IOBINCAM+1(CNTLNG),IOBINCAM+1  CLEAR RETRY COUNT  S99245
         B     RESTART                  START CHAN PGM           S99245
NOT3270  EQU   *                                                 S99245
         MVC   4(20,CCWREG),DIALRST+4                              000D
         LA    WREG,DCBBSDLE            LOAD ADRS OF DLE-EOT       000D
         O     WREG,DIALRST             OR IN COMMAND              000D
         ST    WREG,0(CCWREG)           STORE IN CCW               000D
         B     RESTART
PTPT     MVC   4(4,CCWREG),PTPTRST+4   MOVE CCW TO IOB             000D
         LA    WREG,DCBBSEOT            LOAD ADDRESS OF EOT        000D
         O     WREG,PTPTRST             OR IN COMMAND              000D
         ST    WREG,0(CCWREG)           STORE IN CCW               000D
         B     RESTART                                             000D
TRYRDENQ LA    CCWREG,IOBCPA+L8   POINT TO READ ENQ            @ZA06398
         CLI   IOBINCAM+L1,ERRMAXCT  RETRY COUNT 7 ?           @ZA06398
         BE    DIALERR             YES, SET ERROR              @ZA06398
         SR    ICREG,ICREG         CLEAR REG                   @ZA06398
         IC    ICREG,IOBINCAM+L1   GET RETRY COUNT             @ZA06398
         LA    ICREG,INCRE(ICREG)  ADD ONE                     @ZA06398
         STC   ICREG,IOBINCAM+L1   STORE BACK                  @ZA06398
         B     RESTART              TRY READ ENQ               @ZA06398
CHKENQ   CLC   DECRESPN(L1),DCBBSENQ   ENQ READ ?              @ZA06398
         BNE   DIALERR             NO SET ERROR                @ZA06398
         LA    CCWREG,IOBCPA       POINT TO WRT EOT            @ZA06398
         B     RESTART                                         @ZA06398
HANDLETR EQU   *                                                 S99245
         CLI   0(CCWREG),NOP            LAST CCW?                S99245
         BE    END                      YES,CHECK FOR ENQ        S99245
         CLI   TPOPCODE(CCWREG),WRTEOT WRITE EOT                 S99245
         BE    OTHER                    YES,RETRY                S99245
         CLI   TPOPCODE(CCWREG),RDRESP READ RESP TO EOT          S99245
         BNE   DIALERR                  NO,SHOULD NOT OCCUR      S99245
         TM    IOBSENS0,TIMEOUT    TIMEOUT ERROR ?               S99245
         BO    RETRYTO             YES, GO RETRY                 S99245
         CLC   DECRESPN(DLEOTLNG),DCBBSDLE  DLE EOT RECEIVED ?   S99245
         BNE   OTHER               NO. SOMETHING ELSE            S99245
         L     WREG,IOBERINF       GET ADDR OF USER'S BUFFER     S99245
         MVC   0(DLEOTLNG,WREG),DCBBSDLE  MOVE DLE EOT TO BUF    S99245
         XC    IOBWORK+1(ERRWORD),IOBWORK+1  CLEAR ERROR WORD    S99245
*                                  TO INDICATE NRM COMPLETION    S99245
GOPOST   EQU   *                                                 S99245
         OI    DECDCBAD,POSTBIT    INDICATE POSTING              S99245
         B     END                 GO POST                       S99245
RETRYTO  EQU   *                   RETRY TIMEOUT CONDITION       S99245
         CLI   IOBINCAM+1,RETRY25  RETRY COUNT = 25 ?            S99245
         BE    DIALERR             YES, POST WITH X'41'          S99245
         B     TRYAGAIN            GO RETRY                      S99245
OTHER    EQU   *                                                 S99245
         CLI   IOBINCAM+1,ERRMAXCT  RETRY COUNT = 7              S99245
         BE    DIALERR             YES, POST WITH X'41'          S99245
TRYAGAIN EQU   *                                                 S99245
         SR    ICREG,ICREG         CLEAR REG                     S99245
         IC    ICREG,IOBINCAM+1    GET RETRY COUNT               S99245
         LA    ICREG,INCRE(ICREG)  INCREMENT COUNT               S99245
         STC   ICREG,IOBINCAM+1    STORE COUNT                   S99245
         B     RESTART             RETRY                         S99245
DIALERR  EQU   *                                                 S99245
         MVC   DECSENS0(SENSELNG),IOBSENS0  MOVE SENSE TO DECB   S99245
         MVC   DECCOUNT(RESIDCNT),IOBCSW+6  RESIDUAL COUNT       S99245
         MVI   DECTPCOD,RDTEXT     SET TP OP CODE                S99245
         MVC   DECCSWST(STATLNG),IOBCSW+4  MOVE STATUS TO DECB   S99245
         OI    IOBWORK+1,MASKALL   INDICATES ERROR - POST '41'   S99245
         OI    DECERRST,RFTERROR   INDICATE RFT ERROR          @ZA06398
         B     GOPOST              GO POST                       S99245
END      EQU   *
         TM    DCBBFTEK,DCBDYBFR        TEST FOR DYN BUFFERING   A32477
         BZ    END1                     NO, BRANCH               A32477
         L     WREG,IOBERINF            GET BUFFER ADDRESS       A32477
         N     WREG,MASKDB              ADD TO FULL WORD         A32477
         SH    WREG,K4                  BACK UP TO BUF POINTER   A32477
         ST    WREG,DECAREA             STORE IN DECB            A32477
         XC    1(3,WREG),1(WREG)        ZERO POINTER             A32477
END1     EQU   *                                                 A32477
         NI    IOBINCAM,MASKALL-BUSY   TURN OFF BUSY BIT           000D
         NI    IOBINCAM,MASKALL-ONLT    TURN OFF ONLT IN CTRL      000D
         NI    IOBINCAM+1,X'00'                                    000L
         CLI   DECTYPE+1,RDCONT    WAS OPERATION A READ CONTINUE
         BNE   NOTRDTT             NO, BRANCH                    S99245
         TM    UCBDEVTP+1,DIAL     DIAL ?                        S99245
         BNO   SETEOT              NO, SET UP EOT AND POST       S99245
         MVI   IOBCPA+45,ZEROTP    RESET TP OP CODE              S99245
         CLI   0(CCWREG),NOP       WAS LAST CCW A NOP ?          S99245
         BNE   NOTRDTT             NO, BRANCH                    S99245
         CLC   DECRESPN(ENQLNG),DCBBSENQ  WAS ENQ REC'D ?        S99245
         BNE   DIALERR             NO, POST WITH X'41'           S99245
         NI    IOBINCAM,RFTBIT     TURN OFF 3270 RFT BIT         S99245
         MVI   DECDCBAD,RESETBUF   RETURN BUFFER COUNT TO ZERO   S99245
         B     SETSTART            RESET IOBSTART                S99245
NOTRDTT  EQU   *                                                 S99245
         TM    DECDCBAD,X'80'          SHOULD WE POST OR DO READ TI
         BO    LAST                     IF ONE, GO POST            000D
         MVI   DECDCBAD,X'00'          RETURN BUFFER COUNT TO ZERO
         MVI   IOBSNDPT,X'00'          RESET ACK POINTER         A27626
SETSTART EQU   *                                                 S99245
         MVI   IOBERINF,X00                                 LD @ZA02329
*
*              1 LINE DELETED FOR ----->                    LD @ZA02332
*
         L     DEBREG,DCBDEBAD         LOAD DEB ADDRESS          YM4090
         L     BAS1REG,DEBNMSUB        LOAD TCB ADDRESS          YM4056
         USING TCB,BAS1REG             TCB ADDRESSABILITY        YM4056
         MODESET EXTKEY=TCB,WORKREG=15 USER'S KEY                YM4056
         DROP  BAS1REG                 DROP TCB ADDRESSABILITY   YM4056
*
*        GETMAIN X48 BYTES FOR IGG019MA SAVEAREA            LD @ZA02332
*        AND X2C BYTES FOR DUMMY DECB.                      LD @ZA02332
*
         L     ZEROREG,REGSAVE         SUBPOOL AND LENGTH        YM4056
         GETMAIN R,LV=(0)              GET SAVEAREA FOR R/W      YM4056
         LA    SAVEREG,DISP2C(PARAMREG) LOAD SAVEAREA ADDR. LD @ZA02332
         LR    WREG,PARAMREG       SAVE AREA ADDR           LD @ZA02332
         SR    W1REG,W1REG         CLEAR REGISTER           LD @ZA02332
         ST    W1REG,DISP0(PARAMREG) CLEAR DUMMY ECB AREA   LD @ZA02332
         MVC   DISP4(THIRTY6,PARAMREG),DECTYPE COPY DECB... LD @ZA02332
*                                  ...INTO DUMMY            LD @ZA02332
         MVI   DISP17(PARAMREG),FOXFOX  FLAG AS DUMMY       LD @ZA02332
         ST    DECBREG,DISP40(PARAMREG) SAVE ADDR OF DECB   LD @ZA02332
*
*              1 LINE DELETED FOR ----->                    LD @ZA02332
*
         L     LINKREG,DCBREAD         R/W ROUTINE ADDRESS       YM4056
         BALR  RETREG,LINKREG          LINK TO MA                 M1181
*
*              1 LINE DELETED FOR ----->                    LD @ZA02332
*
         LR    PARAMREG,WREG       RESTORE ADDR OF DUMMY    LD @ZA02332
         MVC   DECTYPE(THIRTY6),DISP4(PARAMREG)  COPY...    LD @ZA02332
*                                  ...DUMMY INTO DECB       LD @ZA02332
         STCM  DECBREG,MASK,IOBECBPT+L1  POINT IOB TO DECB  LD @ZA02332
         TM    DISP0(PARAMREG),POSTBT  HAS DUMMY...         LD @ZA02332
*                                  ...BEEN POSTED           LD @ZA02332
         BZ    FREEDECB            NO, BRANCH               LD @ZA02332
         MVC   DECTYPE(THIRTY6),DISP4(PARAMREG) COPY...     LD @ZA02332
*                                  ...INTO DECB             LD @ZA02332
         L     PARMREG,DISP0(PARAMREG)  LOAD POST CODE      LD @ZA02332
         LA    PARAMREG,DISP0(DECBREG)  LOAD DECB ADDR      LD @ZA02332
         POST  (1),(0)             POST USER'S DECB         LD @ZA02332
FREEDECB EQU   *                                            LD @ZA02332
         L     ZEROREG,REGSAVE         SUBPOOL AND LENGTH        YM4056
         FREEMAIN R,LV=(0),A=(WREG)    FREE SAVEAREA        LD @ZA02332
         LA    SAVEREG,SAVE            RESTORE SAVEAREA ADDRESS  YM4056
         MODESET EXTKEY=ZERO           KEY ZERO                  YM4056
*
         MVI   DECSENS1,X00             TURN OFF DUMMY DECB    @ZA06406
*              1 LINE DELETED FOR ----->                    LD @ZA02332
*
         TM    UCBDEVTP+1,X'40'         IS AUTOPOLL SPECIFIED
         BNO   NOAUTO                   NO, DON'T RESET USAGE COUNT
         NC    DECPOLPT+1(3),DECPOLPT+1 CHECK FOR ADDRESS PRESENT
         BZ    NOAUTO                   NO, DON'T RESET USAGE COUNT
         L     AREAREG,DECPOLPT         LOAD ADDRESS TERM LIST   A23123
         BCTR  AREAREG,0                BACK UP ONE BYTE         A23123
         TM    IOBINCAM,ONLT            IF OLT FLAG IS ON,R/W   YA01017
         BO    NOAUTO                   DON'T INCR USER CNT     YA01017
         TM    0(AREAREG),X'0F'         IS USAGE COUNT ZERO
         BZ    NOAUTO                   YES, DON'T DECREMENT
         IC    ICREG,0(AREAREG)         PICK UP USAGE COUNT      A23123
         BCTR  ICREG,0                  REDUCE BY ONE            A23123
         STC   ICREG,0(AREAREG)         STORE NEW COUNT          A23123
NOAUTO   SVC   3                        RETURN
SETEOT   EQU   *
         NI    IOBINCAM,RFTBIT     TURN OFF RFT RECEIVED
*                                  CONTROL UNIT CAPABLE OF
*                                  GENERAL POLL BIT
         L     WREG,IOBERINF       GET AREA ADDRESS
         MVC   0(EOTLNGTH,WREG),DCBBSEOT PUT EOT IN AREA
         SR    W1REG,W1REG              CLEAR REG              @ZA06398
         LH    W1REG,DECLNGTH          GET ORGINAL COUNT       @ZA06398
         BCTR  W1REG,X00                SUBTRACT ONE           @ZA06398
         STH   W1REG,DECCOUNT      STORE IN RESIDUAL COUNT     @ZA06398
LAST     MVI   DECDCBAD,X'00'          RETURN BUFFER COUNT TO ZERO
         TM    DCBBFTEK,DCBDYBFR        TEST FOR DYN BUFFERING   A32477
         BZ    LAST2                    NO, BRANCH               A32477
         LR    BUFREG,WREG              PUT BUFFER IN BUFREG     A32477
         L     ECBREG,SEVENF           STORE COMPLETION CODE     A32477
         CLC   IOBWORK+1(4),ZERO        ANY ERRORS               A32477
         BE    LAST1                    NO, BRANCH               A32477
         L     ECBREG,FORTY1           STORE ABNORM COMPLETION   A32477
LAST1    LR    ZEROREG,BASEREG          SAVE BASE REGISTER       A32477
         L     BAS1REG,DEBNMSUB         LOAD ADDRESS OF TCB      A32477
         USING CVT,WREG                 CVT ADDRESSABILITY       YM4056
         L     WREG,SIXT                LOAD OFFSET OF CUT       A32477
         L     LINKREG,CVT0PT01         LOAD ADDR OF SUP POST    YM4056
         DROP  WREG                     DROP CVT ADDRESSABILITY  YM4056
         BALR  RETREG,LINKREG           LINK TO POST ROUTINE     A32477
         LR    BASEREG,ZEROREG          RESTORE BASE REGISTER    A32477
LAST2    EQU   *                                                 A32477
         L     0,SEVENF
         CLC   IOBWORK+1(4),ZERO        CHECK FOR ANY ERRORS
         BE    POST                     IF NONE, POST 7F           000D
         L     0,FORTY1
POST    EQU   *
         L     1,IOBECBPT
         LA    PARAMREG,0(PARAMREG)                                000D
         SVC   2                                                   000D
         SVC   3                        RETURN                     000D
ZERO     DC    F'0'                                                000D
DATA     DC    X'F0F0F0F1'
SEVENF   DC    X'7F000000'
FORTY1   DC    X'41000000'
DIALRST  DC    X'0100000060000002'      WRITE DLE-EOT              000D
         DC    X'2F00000060800001'     DISABLE                     000D
         DC    X'0300000020800001'      NOP CCW
WRTRESET DC    X'60310001'         WRITE RESET CHANNEL PGM       S99245
         DC    X'0200000060320002' FOR 3275 DIAL - TO SET        S99245
         DC    X'0300000020800001' UP USER'S READ CONTINUE       S99245
READENQ  DC    X'0200000020340002'                             @ZA06398
PTPTRST  DC    X'0100000020800001'      WRITE EOT                  000D
WENQ     DC    X'0100000060000001'                                 000L
TICRESP  DC    X'0800000020800001'                                 000L
XLTTABLE DC    X'000A0B0C0D0E0F'   3270 XLATE TABLE         LD @ZA02330
         DS    0D
WORKAREA  DS   2F                                                  000D
MAXLENGT DC    H'08'
         ORG   *-240                                               000D
TABLE    DS    0C                                                  000D
         ORG   *+240                                               000D
         DC    C'0123456789ABCDEF'
MSG      WTO   'IEC800I CUU ONLINE TEST XX YY TT NL ID              ', *
               MF=L,ROUTCDE=(8),DESC=(4)                           000H
ZONEOFF  EQU   X'0F'               MASK TO AND OFF ZONES    LD @ZA02330
ASCZONE  EQU   X'30'               ASCII NUMERIC ZONE BITS  LD @ZA02330
ALFAZONE EQU   X'70'               ZONE FOR ASCII CHARS.    LD @ZA02330
ERRMAXCT EQU   X'07'                                               000L
NOWACK   EQU   X'3F'                                               000L
WACK     EQU   X'C0'                                               000L
TWENTY5  EQU   X'19'                                               000L
ENQCHAR  EQU   X'2D'                                               000D
CMCH     EQU   X'40'
ERR      EQU   X'41'                    ERROR COMPLETION CODE      000D
BUSY     EQU   X'40'                    BUSY BIT                   000D
UNITEXCP EQU   X'01'                    UNIT EXCEPTION BIT         000D
WRL      EQU   X'40'                    WRONG LENGTH RECORD BIT
RESET    EQU   X'80'
DYNBF    EQU   X'08'
ONLT     EQU   X'01'
TPOPERP  EQU   X'30'
ZEROY    EQU   X'00'
RDCONT   EQU   X'03'               READ CONTINUE
RFTBIT   EQU   X'EF'               RFT RCVD FROM GEN POLL CU
DIAL     EQU   X'90'               BSC2 FEATURE IN UCB           S99245
TPOPCODE EQU   5                   DISP IN CCW OF TP OP CODE     S99245
WRTEOT   EQU   X'31'               TP OP CODE OF WRT EOT CCW -   S99245
*                                   DIAL 3270                    S99245
RDRESP   EQU   X'32'               RD RESP TP CODE - DIAL 3270   S99245
RETRY25  EQU   X'25'               # OF RETRIES FOR TIMEOUT      S99245
INVWREOT EQU   X'33'                                           @ZA06398
INVRDENQ EQU   X'34'               INVALID READ ENQ            @ZA06398
INCRE    EQU   1                   USED TO INCREMENT RETRY CNT   S99245
DLEOTLNG EQU   2                   # OF CHARS - DLE EOT          S99245
ERRWORD  EQU   4                   LENGTH OF ERROR COUNTER       S99245
POSTBIT  EQU   X'80'               POST INDICATOR                S99245
SENSELNG EQU   1                   LENGTH OF DECSENS0            S99245
RESIDCNT EQU   2                   LENGTH OF RESIDUAL COUNT      S99245
RDTEXT   EQU   X'11'               READ TEXT TP OP CODE          S99245
STATLNG  EQU   2                   LENGTH OF STATUS BYTES        S99245
CCWFLAGS EQU   4                   DISP INTO CCW OF FLAGS        S99245
FIVEWORD EQU   20                  # CHARS MOVED TO WR RESET     S99245
CNTLNG   EQU   1                   LENGTH OF RETRY COUNTER       S99245
ENQLNG   EQU   1                   LENGTH OF AN ENQ CHAR         S99245
RFTERROR EQU   X'01'               3275 DIAL RFT ERROR BIT       S99245
RDCMD    EQU   4                                                 S99245
RDEOTCCW EQU   8                                                 S99245
RESETACK EQU   X'00'               USED TO RESET ACK POINTERS    S99245
RESETBUF EQU   X'00'               USED TO RESET BUFFER COUNT    S99245
ZEROTP   EQU   X'00'               USED TO RESET TP OP CODE      S99245
TWOCCWS  EQU   16                       LENGTH OF 2 CCWS        YA01276
ONECCW   EQU   8                        LENGTH OF 1 CCW         YA01276
WRITECMD EQU   X'01'                    WRITE COMMAND           YA01276
TICCMD   EQU   X'08'                    TIC COMMAND             YA01276
POSTBT   EQU   X'40'               POST BIT IN ECB          LD @ZA02332
FOXFOX   EQU   X'FF'               BYTE OF ALL ONES         LD @ZA02332
MASK     EQU   7                   MASK FOR STCM            LD @ZA02332
DISP0    EQU   0                   DISPLACEMENT             LD @ZA02330
DISP1    EQU   1                   DISPLACEMENT             LD @ZA02330
DISP2    EQU   2                   DISPLACEMENT             LD @ZA02330
DISP4    EQU   4                   DISPLACEMENT             LD @ZA02330
DISP6    EQU   6                   DISPLACEMENT             LD @ZA02330
DISP7    EQU   7                   DISPLACEMENT             LD @ZA02330
DISP17   EQU   17                  DISPLACEMENT             LD @ZA02332
DISP40   EQU   40                  DISPLACEMENT             LD @ZA02332
DISP2C   EQU   X'2C'               DISPLACEMENT             LD @ZA02332
X00      EQU   X'00'                                        LD @ZA02329
X02      EQU   X'02'                                           @ZA06398
X20      EQU   X'20'                                        LD @ZA02330
X33      EQU   X'33'                                           @ZA06398
X34      EQU   X'34'                                        LD @ZA02330
X40      EQU   X'40'                                        LD @ZA02330
X66      EQU   X'66'                                        LD @ZA02330
XC6      EQU   X'C6'                                        LD @ZA02330
XF4      EQU   X'F4'                                        LD @ZA02330
XFF      EQU   X'FF'                                           @ZA06398
L1       EQU   1                                            LD @ZA02330
L2       EQU   2                                            LD @ZA02330
L4       EQU   4                                            LD @ZA02330
L5       EQU   5                                               @ZA06398
L8       EQU   8                                               @ZA06398
L12      EQU   12                                              @ZA06398
THIRTY6  EQU   36                                           LD @ZA02332
FIFTYSIX EQU   56                                           LD @ZA02331
         DS    0F                  FULL WORD ALIGNMENT      LD @ZA02332
GETPARM  DC    X'FA000008'         SUBPOOL AND LENGTH       LD @ZA02332
         EJECT
         DS    0H
STRTSTOP EQU   *
*
         LA    WREG,PATNAME
         ST    WREG,PARMLIST
         LA    WREG,CRIDLES
         ST    WREG,PARMLIST+4
         LA    WREG,GETMAIN1
         ST    WREG,PATNAME
         TM    DECTYPE,RCVTST           IS THIS  RECEIVE TEST      1263
         BZ    CHKONCCW                 NO, CHECK FOR ONLT CCW     1263
         NI    DECTYPE,MASKALL-RCVTST   TURN FLAG OFF              1263
         B     SVC66                    GO TO TRANSIENT ROUTINE    1263
         SPACE 2
CHKONCCW EQU   *                                                   1263
*                             RETURNING FROM ONLT WRITE?
         CLI   DCBERROP+2,X'21'         DEVICE A 1030             M3153
         BE    TSTCCW                   YES, BRANCH               M3153
         MVC   RCOUNT(2),IOBCSW+6       SAVE RESIDUAL COUNT       M3153
TSTCCW   TM    5(CCWREG),X'3F'          TEST FOR ONLT CCW         M3153
         BNZ   CALL                     BRANCH IF NOT              000K
         TM    DECONLTT,MASKALL         IS THIS 1030 PATTERN      M3110
         BO    FREEAREA                 YES, BRANCH TO FREE AREA  M3110
         L     WREG,IOBCPA              DATA ADDR FROM FIRST CCW   000K
         CLC   0(3,WREG),DPREO          IS TEST TO A 2760          000K
         BNE   FREEAREA                BRANCH IF NOT TO CLEANUP  A29567
         CLI   DECRESPN+1,POSITIVE      POSITIVE RESPONSE TO EOB   000K
         BE    TESTRENT                 BRANCH IF POSITIVE         000K
         NI    DECDCBAD,NOENTRY        DO NOT REENTER (2760)       000K
         B     END                      EXIT IF RESP NOT POSITIVE  000K
TESTRENT EQU   *                                                   000K
         TM    DECONLTT,REENTRY         SHOULD TEST MODULE BE      000K
*                                          REENTERED               000K
         BZ    FREEAREA                 BRANCH IF NOT TO CLEAN UP  000K
         SPACE 2
*                             MOVE PARAMETER LIST POINTER INTO IOB
CALL     EQU   *                                                   00MC
         TM    UCBDEVTP+3,X'E0'         IS THIS IBM1 ADAPTER       1263
         BNZ   NOT2740C                 NO, NOT 2740              M3153
         TM    UCBDEVTP,X'09'          IS THIS 2740B               00MC
         BO    A2740                   YEX, TREAT AS 2740          00MC
         TM    UCBDEVTP,X'0B'          IS THIS 2740                00MC
         BNZ   NOT2740C                NO, CONTINUE                00MC
A2740    EQU   *                                                   00MC
         TM    UCBDEVTP+1,X'20'         IS THIS 2740 CHECKING      1263
         BNO   NOT2740C                 NO, NOT 2740 WITH CHECKING 1263
         TM    UCBDEVTP+1,X'0C'         OIU FEATURE                1263
         BO    NOT2740C                 BRANCH IF YES              1263
         OI    DECTYPE,RCVTST           SET ON RECEIVE TEST FLAG   1263
         LA    AREAREG,CRIDLES+20       PICK UP CHARACTER ADDRESS  1263
CHKEND   TM    5(CCWREG),X'80'          IS THIS LAST CCW           1263
         BO    ENDFND                   YES, LAST CCW              1263
         LA    CCWREG,8(CCWREG)         POINT TO NEXT CCW          1263
         B     CHKEND                   BRANCH TO CHECK IT         1263
ENDFND   LA    CCWREG,8(CCWREG)         POINT TO NEXT CCW          1263
         MVC   0(8,CCWREG),PTPTRST      MOVE IN CCW                1263
         ST    AREAREG,0(CCWREG)        STORE AREA ADDRESS         1263
         MVI   0(CCWREG),X'01'          SET COMMAND CODE TO WRITE  1263
         MVI   7(CCWREG),X'04'          SET COUNT TO FOUR          1263
         ST    CCWREG,IOBSTART          STORE CCW ADDRESS IN IOB   1263
         B     EXCP                     EXECUTE CHANNEL PROG       1263
NOT2740C EQU   *                                                   1263
SVC66    EQU   *                                                   1263
         LA    1,PARMLIST
         ST    1,IOBPARM
         SPACE 2
*                             LOAD GEN REG 1 WITH IOB ADDRESS
         LR    1,IOBREG                 LOAD IOB ADRS AS PARAMETER 000D
         SVC   66                      FETCH TERMINAL TEST TRANSIENTS
         SPACE
*        RETURN FROM TRANSIENT ROUTINES TO SEND TEST MESSAGE
         SPACE
         TM    IOBINCAM,X'01'          CHECK FOR TEST NOT SET UP
         BO    CMPISON                                             000D
         SPACE
*        FREE TERMINAL TEST PATTERN AREA IF AREA UTILIZED
         SPACE
FREEAREA SR    AREAREG,AREAREG         CLEAR REGISTER
         TM    DECONLTT,MAXBITS        TEST FOR AREA UTILIZED
         BZ    END                      ERO MEANS AREA NOT UTILIZED
         BO    PAT1030                 BRANCH IF 1030 SWITCH AREA
         SR    AREAREG,AREAREG         CLEAR REGISTER
         IC    AREAREG,DECONLTT        INSERT PATTERN SELECT OFFSET
         A     AREAREG,PATRNLST        ADD POINTER TO HEAD OF LIST
         SR    CTRREG,CTRREG           CLEAR REGISTER
         IC    CTRREG,0(AREAREG)       INSERT PATTERN USAGE COUNT
         SH    CTRREG,ONE              DECREMENT USAGE COUNT
         STC   CTRREG,0(AREAREG)       STORE CORRECT COUNT BACK
         BNZ   END                      RANCH IF AREA STILL IN USE
FNDADDR  MVI   DECONLTT,X'00'           CLEAR USAGE INDICATOR     M3152
         L     1,0(AREAREG)             LOAD ADDRESS OF AREA      M3152
         SR    WREG,WREG                CLEAR REGISTER             000D
         IC    WREG,0(1)                INSERT AREA SIZE           000D
         LA    WREG,7(WREG)             ROUND UP TO DBL WORD       000D
         ST    WREG,FA                  SET UP                     000D
         NI    FA+3,X'F8'                                          000D
         MVI   FA,X'FA'                   FOR                      000D
         L    0,FA                          SUBPOOL 255            000D
         FREEMAIN R,LV=(0),A=(1)       FREE AREA UTILIZED
         B     END
FA       DC    F'0'                                                000D
*
PAT1030  IC    AREAREG,DCBEIOBX        INSERT IOB SIZE
         NI    DECFLAGS,X'00'          CLEAR DECB STATUS FLAGS
         MH    AREAREG,DECFLAGS        MULTIPLY BY RLN
         A     AREAREG,DCBIOBAD        ADD DCB IOB POINTER
         LA    AREAREG,36(AREAREG)     POINT TO PATTERN ADDRESS
         B     FNDADDR                 GO TO RELEASE AREA
         EJECT
*
EXIT     EQU   *
         SVC   3
*
CMPISON  EQU   *
         CLI   7(AREAREG),X'07'        1060 NOT COMPARED HERE      000D
         BE    EXCP                                                000D
         CLI   7(AREAREG),P0           2741P NOT COMPARED HERE
         BE    EXCP
         CLI   7(AREAREG),C0           2741C NOT COMPARED HERE
         BE    EXCP
         CLI   7(AREAREG),C4            2740C NOT COMPARED HERE    000M
         BE    EXCP                                                000M
         CLI   7(AREAREG),X'56'        2848 NOT COMPARED HERE      000M
         BE    EXCP                                                000M
         CLI   6(AREAREG),X'0B'        TEST FOR COMPARE MESSG      000D
         BNE   EXCP                    IF NOT, BRANCH              000D
*            ROUTINE TO FIND LENGTH OF MESSAGE                     000D
         LH    CTRREG,DECLNGTH         INPUT AREA LENGTH           000D
         A     CTRREG,DECAREA          - OFFSET                    000D
         SR    CTRREG,AREAREG               FROM START OF MSG      000D
         CLI   DCBERROP+2,X'21'         DEVICE A 1030             M3153
         BE    SH1030                   YES, USE RESID COUNT      M3153
         SH    CTRREG,RCOUNT            SUBTRACT RESIDUAL COUNT   M3153
         B     SH12                                               M3153
SH1030   SH    CTRREG,IOBCSW+6          SUBTRACT RESIDUAL COUNT   M3153
SH12     SH    CTRREG,H12               SUBTRACT TWELVE           M3153
         BM    NOCHAR                                              000D
         CH    CTRREG,MAXLNG           IS LENGTH TOO GREAT         000D
         BNH   FINDTXT                 NO                          000D
         LH    CTRREG,MAXLNG           YES, SUBSTITUTE MAX LENGTH  000D
FINDTXT  LA    W1REG,10(AREAREG)       POINT TO FIRST COMPARE CHAR 000D
         CLI   7(AREAREG),X'02'        REQUEST FOR 1030            000D
         BE    CMP1030                 1030 CARD READER REQUEST    000D
         LA    WREG,COMPDATA                                       000D
CMPTST   EX    CTRREG,COMPARE                                      000D
         BNE    EXCP                   BAD COMPARE, MSG SWITCH     000D
         B     LOADMSG                 GOOD, LOAD COMPARE MSSG     000D
*                                                                  000D
CMP1030  EQU   *                                                   000D
         CLI   9(AREAREG),X'20'        COMPARE 1030 ZERO           000D
         BNE    EXCP                   NOT VALID, MSG SWITCH       000D
         LTR   CTRREG,CTRREG           ANY MORE CHARS              000D
         BZ    LOADMSG                 NO,  GO GET MSG             000D
         BCTR  CTRREG,0                DECREMENT FOR EXECUTE       000D
         LA    WREG,COMPDATA+1         ADDRESS OF STORED DATA      000D
         B     CMPTST                                              000D
LOADMSG  EQU   *                                                   000D
         MVC   0(11,AREAREG),CMPVALD   MOVE COMPARE VALID MESSG    000D
         CLI   DCBERROP+2,X'21'        DEVICE A 1030              M2834
         BNE   LOADOFST                NO, BRANCH                 M2834
         LA    CTRREG,1(CTRREG)        ADD OFFSET                 M2834
LOADOFST AR    WREG,CTRREG             ADD LENGTH TO GET OFFSET   M2834
         MVC   8(1,AREAREG),0(WREG)    GET LAST CHARACTER          000D
         CLI   DCBERROP+2,X'21'         DEVICE A 1030            A24922
         BNE    EXCP                                               000D
         L     ICREG,36(IOBREG)        ADDRESS OF GETMAIN AREA     000D
         LA    CTRREG,11                                           000D
         L     UCBREG,DFDF             GET PAD CHARACTERS          000D
         IC    UCBREG,0(AREAREG)       GET MESSAGE CHARACTER       000D
         ST    UCBREG,0(ICREG)         STORE IN MESSG AREA         000D
         LA    ICREG,4(ICREG)          INCREMENT AREA POINTER      000D
         LA    AREAREG,1(AREAREG)      GET NEXT MESSG CHARACTER    000D
         BCT   CTRREG,*-16             GO STORE ANOTHER WORD       000D
        L     ICREG,36(IOBREG)         ADDRESS OF GETMAIN AREA     000D
         MVC   0(1,ICREG),GETMAIN1+3                               000D
         B     EXCP                                                000D
         SPACE  2                                                  000D
NOCHAR   MVC   0(11,AREAREG),CMPVALD                               000D
         B     EXCP                                                000D
         DS    0F
COMPARE  CLC   0(0,W1REG),0(WREG)                                  000D
MAXLNG   DC    H'35'                                               000D
DFDF     DC    X'DFDFDFDF'
H12      DC    H'12'
         EJECT
*
*        PARAMETER LIST TO BE PASSED TO TRANSIENT ROUTINES
*
PARMLIST DS    0F
PATRNLST DC    F'0'                    ADDRESS OF PATTERN LIST
         DC    F'0'                    ADDRESS OF NL & IDLES
NOTEST   DC    X'00'                   NO TEST SWITCH
*
*        SPECIAL CHARACTERS AND PARAMETERS
*
SAVE     DS    18F
GETMAIN1 GETMAIN EC,LV=0,A=0,SP=250,MF=L                           000A
CRIDLES  DC    X'16'                   TERMINAL TEST
         DC    3XL1'DF'                LINE
         DC    X'5B'                   INITIALIZATION
         DC    15XL1'DF'               CHARACTERS
         DC    X'161F1F1F'             CIRCLE D AND CIRCLE C'S
         DC    X'761F1F1F37'           CIRCLE Y,CIRCLE C'S AND CIRCLE S
*
C4       EQU   X'10'                    CORRS 4 - TYPE CODE FOR 274000M
         EJECT
*
*        ADDRESS OF GETMAIN PARAMETERS AND TERMINAL TEST PATTERN TABLE
*
         DS    0F
PATNAME  EQU   *
         DC    F'0'                    ADDRESS OF GETMAIN PARAMETERS
BTTP5TLT DC    X'00'                   1050 TILT PATTERN USAGE COUNT
BTTA5TLT DC    AL3(0)                  1050 TILT ADDRESS
BTTP5ROT DC    X'00'                   1050 ROTATE PATTERN USAGE COUNT
BTTA5ROT DC    AL3(0)                  1050 ROTATE ADDRESS
BTTP5TWS DC    X'00'                   1050 TWIST PATTERN USAGE COUNT
BTTA5TWS DC    AL3(0)                  1050 TWIST ADDRESS
BTTP5ALC DC    X'00'                   1050 ALL CHARACTERS USAGE COUNT
BTTA5ALC DC    AL3(0)                  1050 ALL CHARACTERS ADDRESS
BTTP5SLA DC    X'00'                   1050 SELECTRIC ANALYZER USAGE CT
BTTA5SLA DC    AL3(0)                  1050 SELECTRIC ANALYZER ADDRESS
         SPACE
BTTP6TLT DC    X'00'                   1060 TILT PATTERN USAGE COUNT
BTTA6TLT DC    AL3(0)                  1060 TILT ADDRESS
BTTP6ROT DC    X'00'                   1060 ROTATE PATTERN USAGE COUNT
BTTA6ROT DC    AL3(0)                  1060 ROTATE ADDRESS
BTTP6TWS DC    X'00'                   1060 TWIST PATTERN USAGE COUNT
BTTA6TWS DC    AL3(0)                  1060 TWIST ADDRESS
BTTP6ALC DC    X'00'                   1060 ALL CHARACTERS USAGE COUNT
BTTA6ALC DC    AL3(0)                  1060 ALL CHARACTERS ADDRESS
BTTP6SLA DC    X'00'              1060 SELECTRIC ANALYZER USAGE COUNT
BTTA6SLA DC    AL3(0)             1060 SELECTRIC ANALYZER ADDRESS
         SPACE
P0       EQU   X'15'                   PTTC 0 -- TYPE CODE FOR 2741
C0       EQU   X'13'                   CORRS 0-- TYPE CODE FOR 2741
BTTP3TLT DC    X'00'              1030 TILT PATTERN USAGE COUNT
BTTA3TLT DC    AL3(0)             1030 TILT ADDRESS
BTTP3ROT DC    X'00'              1030 ROTATE PATTERN USAGE COUNT
BTTA3ROT DC    AL3(0)             1030 ROTATE ADDRESS
BTTP3TWS DC    X'00'              1030 TWIST PATTERN USAGE COUNT
BTTA3TWS DC    AL3(0)             1030 TWIST ADDRESS
BTTP3ALC DC    X'00'              1030 ALL CHARACTERS USAGE COUNT
BTTA3ALC DC    AL3(0)             1030 ALL CHARACTERS ADDRESS
BTTP3SLA DC    X'00'              1030 SELECTRIC ANALYZER USAGE COUNT
BTTA3SLA DC    AL3(0)             1030 SELECTRIC ANALYZER ADDRESS
         SPACE
BTTP2TLT DC    X'00'              2848 TILT PATTERN USAGE COUNT
BTTA2TLT DC    AL3(0)             2848 TILT ADDRESS
BTTP2ROT DC    X'00'              2848 ROTATE PATTERN USAGE COUNT
BTTA2ROT DC    AL3(0)             2848 ROTATE ADDRESS
BTTP2TWS DC    X'00'              2848 TWIST PATTERN USAGE COUNT
BTTA2TWS DC    AL3(0)             2848 TWIST ADDRESS
BTTP2ALC DC    X'00'              2848 ALL CHARACTERS USAGE COUNT
BTTA2ALC DC    AL3(0)             2848 ALL CHARACTERS ADDRESS
*
*
*
COMPDATA DC    X'15020407080B0D0E1013626467686B' STORED
         DC    X'6D6E7073434546494A4C4F51522526'       COMPARISON
         DC    X'292A2C2F3132'                                   DATA
*
CMPVALD  DC    X'67494F012A466840235B1F' VALID COMPARE MESSG       000D
         DS    0F
REGSAVE  DC    X'FA000074'             SUBPOOL 250 FOR...   LD @ZA02332
*                                  SAVEAREA AND DUMMY DECB  LD @ZA02332
MASKDB   DC    X'00FFFFFC'                                       A32477
K4       DC    H'4'
DPREO    DC    X'163E4C'
K8       DC    H'8'
ONE      DC    H'1'
SVCNAME  DC    C'IGC0006F'
         SPACE
*
         CNOP  0,8
         EJECT
         DCBD  DSORG=BX,DEVD=BS
         IECTDECB
         IECTIOBX
         SPACE 2                                                   000M
IOBNAME  EQU   IOBERCCW
IOBAREA  EQU   IOBNAME+8
IOBPARM  EQU   IOBNAME+12
RCOUNT   EQU   IOBWORK+5
         IECTDEBX
         SPACE 3
UCBSTART DSECT
UCBDEVTP EQU   UCBSTART+16
         EJECT                                                   YM4056
         IKJTCB DSECT=YES,LIST=YES                               YM4056
         EJECT                                                   YM4056
CVT      DSECT                                                   YM4056
         CVT   LIST=NO                                           YM4056
         END
