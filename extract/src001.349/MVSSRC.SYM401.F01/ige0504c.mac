         TITLE 'IGE0504C - BSC ERP SPECIAL RETURN MODULE'
IGE0504C CSECT
***********************************************************************
*                                                                     *
* MODULE NAME:                                                        *
*    IGE0504C                                                         *
*                                                                     *
* DESCRIPTIVE NAME:                                                   *
*    BTAM BSC SPECIAL RETURN ERP                                      *
*                                                                     *
* COPYRIGHT:                                                          *
*    NONE                                                             *
*                                                                     *
* STATUS:                                                             *
*    CHANGE LEVEL 000                                                 *
*                                                                     *
* FUNCTION:                                                           *
*    THIS ROUTINE CHECKS THE RESULTS OF SPECIAL I/O OPERATIONS        *
*    INITIATED BY THE OTHER BSC ERP ROUTINES. IF THE RESULT IS THE    *
*    DESIRED ONE, THE CHANNEL PROGRAM IS RESTARTED AT THE POINT       *
*    INDICATED BY THE INITIATING ERP. THE FOLLOWING TABLE INDICATES   *
*    THE INITIATED OPERATION AND RESPONSE ACTION:                     *
*                    VALUE  OP CODE  ACTION                           *
*                    X'80'    11     IF ENQ RECEIVED- (MULTIPT LINE)  *
*                                      RESEND ACK AND TIC TO FAIL CCW *
*                                    IF ENQ RECEIVED- (NON-MULTIPOINT)*
*                                      RESTART FAILING CCW            *
*                                    IF ENQ WAS NOT RECEIVED-         *
*                                      RESTART CHAN PROG AT BEGINNING *
*                   X'81'     11     IF ENQ WAS RECEIVED-             *
*                                      WRITE NAK AND TIC TO FAIL CCW  *
*                                    IF ENQ WAS NOT RECEIVED-         *
*                                      RESTART CHAN PROG AT BEGINNING *
*                   X'82'     11     WRITE NAK AND TIC TO FAILING CCW *
*                   X'83'   07 OR 25 WRITE ENQ AND TIC TO FAILING CCW *
*                   X'84'   03 OR 0C RESTART FAILING CCW OR CHECK FOR *
*                                      CONTENTION                     *
*                   X'85'            NOT USED                         *
*                   X'86'     25     RESTART AT WRITE TEXT, RESTART   *
*                                      ERP CHANNEL PROG OR RETURN TO  *
*                                      SUPERVISOR                     *
*                   X'87'     21     IF ENQ WAS RECEIVED-             *
*                                      RESTART AT FAILING CCW         *
*                                    IF ENQ WAS NOT RECEIVED-         *
*                                      RESTART AT FOLLOWING CCW IF    *
*                                      FAILING CCW IS NOT LAST CCW    *
*                                      IF FAILING CCW IS LAST CCW,    *
*                                      RESTART AT FAILING CCW.        *
*                   X'88'   09 OR 11 RESTART AT FAILING CCW.          *
*                   X'89'     11     IF FIRST TWO CHARACTERS ARE STX  *
*                                      ENQ, RESTART AT FAILING CCW.   *
*                   X'8A'            EXECUTE A READ SKIP CCW THEN     *
*                                      RESTORE ORIGINAL COMMAND.      *
*                   X'8B'     11     IF ENQ WAS RECEIVED, WRITE NAK   *
*                                      AND TIC TO THE READ CCW; OTHER-*
*                                      WISE, POST WITH ERROR.         *
*                   X'8C'    07      CLEAR SPECIAL RETURN INDICATORS  *
*                                      AND PROCESS WITH ERROR POSTING *
*                   X'8D'            GARBLED SYN CHARACTERS IN FRONT  *
*                                    OF AN EOT                        *
*                                                                     *
* NOTES:                                                              *
*    DEPENDENCIES:                                                    *
*        NONE                                                         *
*    RESTRICTIONS:                                                    *
*        THIS ERP IS ONLY FOR DEVICES SUPPORTED BY BTAM.              *
*    REGISTER CONVENTIONS:                                            *
*        SEE 'REGISTER DEFINITION' BELOW                              *
*                                                                     *
* PATCHLABEL:                                                         *
*    PACHAREA (120 BYTES)                                             *
*                                                                     *
* MODULE TYPE:                                                        *
*    PROCEDURE                                                        *
*    PROCESSOR:                                                       *
*        BAL                                                          *
*    ATTRIBUTES:                                                      *
*        REENTRANT, ENABLED, KEY 0, SUPERVISOR STATE, NO LOCKS HELD.  *
*                                                                     *
* ENTRY POINT:                                                        *
*    IGE0504C                                                         *
*    PURPOSE:                                                         *
*        SEE 'FUNCTION'                                               *
*    LINKAGE:                                                         *
*        THIS MODULE IS SCHEDULED FOR EXECUTION BY THE INPUT/OUTPUT   *
*        SUPERVISOR. IT RUNS UNDER AN SIRB.                           *
*    INPUT:                                                           *
*        REG 1 = ADDRESS OF IOSB                                      *
*    OUTPUT:                                                          *
*        SETS INDICATOR IN DECERRST FOR PERMANENT ERRORS              *
*        ALTERED CHANNEL PROGRAM                                      *
*                                                                     *
*        X'9F' IN IOBWORK+1 INDICATES A SPECIAL RESTART OF THE        *
*              CHANNEL PROGRAM WHICH CAUSES 19MB TO PASS CONTROL      *
*              TO IOS. IOS WILL RESTART THE CHANNEL PROGRAM AS IF     *
*              IT WERE A SVC "0"                                      *
*                                                                     *
* EXITS-NORMAL:                                                       *
*    APPROPRIATE BTAM ERROR HANDLER VIA BRANCH ENTRY TO XCTL.         *
*        ALL LOADS START WITH IGE0. THE FIRST LOAD IS IGE0004C.       *
*        SUBSEQUENT LOADS ARE NUMBERED 1000 HIGHER THAN THE PREVIOUS  *
*        LOAD.                                                        *
*        NO REGISTERS ARE SAVED BY THE ERROR ROUTINES AND ONLY        *
*        REGISTER 1 MAINTAINS TRANSPARENCY BETWEEN LOADS.             *
*                                                                     *
* EXITS-ERROR:                                                        *
*    NONE                                                             *
*                                                                     *
* EXTERNAL REFERENCES:                                                *
*    ROUTINES:                                                        *
*        NONE                                                         *
*    DATA AREAS                                                       *
*        IOB (MAPPED BY IEZIOB)                                       *
*        VIRTUAL CHANNEL PROGRAM                                      *
*        ERP WORKAREA (MAPPED BY IECDERWA)                            *
*    CONTROL BLOCKS                                                   *
*        UCB                                                          *
*        DCB                                                          *
*        DECB                                                         *
*        IOSB         (MAPPED BY IECDIOSB)                            *
*        CVT          (MAPPED BY CVT)                                 *
*        IOB          (MAPPED BY IEZIOB)                              *
*        RQE          (MAPPED BY IECDRQE)                             *
*                                                                     *
* TABLES-WORKAREAS:                                                   *
*    ERP WORKAREA                                                     *
*    IOB CHANNEL PROGRAM AREA IN IOB BTAM EXTENSION                   *
*                                                                     *
* MACROS:                                                             *
*    NONE                                                             *
*                                                                     *
* CHANGE ACTIVITY:                                                    *
*    YM02595K (9/20/73)                                               *
*    YM02594K (9/24/73)                                               *
*    YA02438  (11/1/73)                                               *
*    YA02439  (11/1/73)                                               *
*    YA02440  (11/1/73)                                               *
*    YM05652K (1/25/74)                                               *
*    YA03249  (2/15/74)                                               *
*    YA02308  (11/7/74)                                               *
*    YA02309  (11/7/74)                                               *
*    YA02310  (12,6,74)                                               *
*    ZA02833  (2/21/75)                                               *
*    AZ03970  (04/22/75)          AZ03971  (04/22/75)                 *
*    AZ04185  (10/01/75)          AZ04665  (10/01/75)                 *
*    AZ04679  (10/20/75)          AZ04859  (10/01/75)                 *
*    AZ04861  (10/01/75)          AZ06381  (10/01/75)                 *
*    AZ07640  (11/07/75)          AZ07651  (11/12/75)                 *
*    AZ11037  (05/17/76)          AZ12146  (07/28/76)                 *
*    AZ12156  (08/04/76)          AZ15426  (12/07/76)                 *
*    AZ17702  (02/15/77)          AZ20110  (05/12/77)                 *
*    AZ24635  (09/06/77)          AZ30537  (03/13/78)                 *
*    AZ31718  (04/12/78)          AZ32428  (05/05/78)                 *
*    AZ32980  (05/26/78)          AZ33188  (07/05/78)                 *
*    AZ33188  (07/06/78)                                              *
***********************************************************************
         EJECT
         USING *,BASEREG
         LR    BASEREG,ERREG5      SET BASE REG
         B     BEGIN               BRANCH AROUND ID         LD @ZA02308
         DC    C'IGE0504C'         MODULE ID                LD @ZA02308
         DC    C' UZ20070'         PTF NUMBER                  @ZA32980
         DC    CL8'&SYSDATE'       DATE LAST ASSEMBLY       LD @ZA02308
BEGIN    DS    0H                                           LD @ZA02308
         USING RQE,ERREG5
         USING IECTDECB,DECBRG
         USING IHADCB,DCBREG
         USING IOSB,IOSBREG
         USING IOBSTDRD,IOBRG
         USING EWA,EWAREG
         L     ERREG5,IOSUSE       BASE RQE
         L     EWAREG,IOSERP       BASE ERP WORKAREA
         L     IOBRG,RQEIOB        BASE IOB
         L     DECBRG,IOBECBPT     BASE DECB
         L     DCBREG,IOBDCBPT     BASE DCB
         L     UCBREG,IOSUCB       BASE UCB
         DROP  ERREG5
         L     CCWREG,IOBFL3       GET IOB CSW
         LA    CCWREG,ZERO(CCWREG)   CLEAR OUT FLAG BYTE
         SH    CCWREG,ERRCN8       ADDRESS OF FAILING CCW IN IOB
         SR    ERREG5,ERREG5       INITIALIZE IC REGISTER
         LA    ERREG1,FLIPBIT      ACK FLIP BIT
         NI    IOBWORK+L1,L255-HIGHBIT0   ZIP UNSED BIT
         IC    ERREG5,IOBWORK+L1   PICK UP INDEX FACTOR
         TM    IOBSENS0,TOERROR    TIME OUT ERROR OCCUR
         BZ    BSCSP00A            NO  CONTINUE
         CLI   IOBWORK+L1,X02      RETURN X'82'                 YA03249
         BE    BSCSP00A            YES                          YA03249
         TM    IOBERCCW+L4,SKIP    THIS READ SKIP               ZA20110
         BO    BSCSP00A            YES, CONTINUE
         CLI   IOBWORK+L1,UERDSKP   READ SKIP FOR U E
         BE    BSCSP00A            YES, CONTINUE NORMAL
         CLI   IOBWORK+L1,X04      THIS T.O. ON RD,NOP
         BE    BSCSP00A            BRANCH IF YES
         CLI   IOBWORK+L1,CODEA    THIS T.O. FOR ERP READ SKIP
         BE    BSCSP00A            YES, BRANCH
         CLI   IOBWORK+L1,X03      L.D. ON RD,NOP
         BE    BSCSP00A            YES, BRANCH
         TM    IOSSNS,X02          LOST DATA ERROR
         BZ    BSCSP073            NO, BRANCH
         CLI   IOBWORK+L1,ZERO     L.D. ON RD ENQ
         BNE   BSCSP073            NO, BRANCH TO RESTART
BSCSP00A EQU   *
         TM    IOBCSW+L3,CSWUE     UNIT EXCEPTION OCCUR
         BO    BSCSPX01            YES, CHECK FOR READ SKIP
BSCSPX02 SLL   ERREG5,L2           MULTIPLY BY FOUR
         B     BSCSP00(ERREG5)     BRANCH TO ROUTINE VIA BR TABLE
BSCSP00  B     BSCSP01             ENTRY FOR RD ENQ,TIC FAIL CCW
         B     BSCSP021        ENTRY FOR RD ENQ,WRT NAK,TIC LD @ZA02308
         B     BSCSP02         ENTRY FOR RD SKP,WRT NAK,TIC LD @ZA02308
         B     BSCSP03             ENTRY FOR RD SKP,WRT ENQ,TIC
         B     BSCSP04             ENTRY FOR CONTENTION CHECK
         B     BSCSP06             ENTRY FOR WR ENQ,CHECK RESP
         B     BSCSP06             ENTRY FOR WRT ENQ BOTH RESP
         B     BSCSP07A
         B     BSCSP07
         B     BSCSP09             ENTRY FOR 2780 ABORT,STX/ENQ
         B     BSCSP0A
         B     BSCSP0B             ENTRY FOR WR NAK,TIC,RD TXT
         B     BSCSP0C             ENTRY FOR T.O. ON W TC ,R TC
BSCSP0D  EQU   *                                               @ZA04185
*              THE NEXT LINE IS THE ENTRY FOR INTERNAL CODE    @ZA04185
*              OF X'8D' FOR GARBLED SYN CHARACTERS IN FRONT    @ZA04185
*              OF AN EOT.                                      @ZA04185
         TM    IOBCSW+L3,UNITCK    UNIT CHECK                  @ZA04185
         BNO   BSCSP063            NO, WE RECOVERED            @ZA04185
BSCSP0D2 TM    IOBSENS0,IOBTO      TIME OUT SENSE              @ZA04185
         BNO   BSCSP073            NO, RETRY WRITE NAK         @ZA04185
*              CHANGE IOBCSW TO MAKE IT APPEAR AS IF ONLY      @ZA04185
*              AN EOT HAD BEEN READ.                           @ZA04185
         MVC   IOBCSW+L3(L2),UNITEXCP SET STAT FOR EOT RECVD   @ZA04185
         L     ERREG2,L0(CCWREG)   GET I/O AREA ADDR           @ZA04185
         MVC   L0(L1,ERREG2),DCBBSEOT  MOVE IN EOT             @ZA04185
         LH    ERREG2,L6(CCWREG)   GET RD TXT LENGTH           @ZA04185
         BCTR  ERREG2,ZERO         DECREMENT BY ONE FOR....    @ZA04185
         STH   ERREG2,IOBCSW+L5    RESIDUAL COUNT              @ZA04185
         B     BSCSP063            RETURN                      @ZA04185
BSCSPX01 CLI   ZERO(CCWREG),CCWWRITE   IS THIS WRITE CCW
         BNE   BSCSPX02            NO, CONTINUE NORMAL
         LA    ERREG4,IOBERCCW     POINT TO FIRST ERP CCW
         CR    CCWREG,ERREG4       ERROR OCCUR ON FIRST CCW
         BNE   BSCSPX02            NO, CONTINUE NORMAL
         MVC   IOBERCCW+L15(1),IOBWORK+L1   SAVE RETURN CODE IN CCW
         OI    IOBERCCW+L15,X80    TURN ON HIGH ORDER BIT
         MVC   IOBERCCW+L14(L1),IOBERCCW+L8   SAVE CCW COMMAND CODE
         CLI   TPCODE(CCWREG),X03   WRITE ENQ TP OP CODE       @ZA12156
         BNE   SET8A               NO                           YA02438
         CLI   L8(CCWREG),CCWTIC   NEXT CCW A TIC               YA02438
         BNE   SET8A               NO                           YA02438
         L     ERREG4,L8(CCWREG)   GET CCW ADDR FROM TIC        YA02438
         LA    ERREG4,ZERO(ERREG4)   CLEAR OUT OP CODE          YA02438
         TM    TPCODE(ERREG4),TPOPWRTX   READ RESP TO TEXT      YA02438
         BNO   SET8A               NO                           YA02438
         CLI   L16(UCBREG),DEVICE    IS IT BSC1 ?              @ZA04861
         BE    SET8A              YES SET RETURN 8A            @ZA04861
         MVI   IOBWORK+L1,RTNCD86  SET RTN CODE=X'86'           YA02438
         LR    CCWREG,ERREG4       SET UP REG                   YA02438
         B     BSCSPX03            EXIT TO IOS                  YA02438
SET8A    EQU   *                                                YA02438
         MVI   IOBERCCW+L8,CCWREAD   SET COMMAND CODE TO READ
         MVI   IOBERCCW+L12,CCWFLAG1   SET ON SLI, SKIP
         MVI   IOBWORK+L1,RTRNCDEA   SET SPECIAL RETURN
         LA    CCWREG,IOBERCCW+L8   READ SKIP CCW ADDRESS
BSCSPX03 ST    CCWREG,IOBSTART
         B     RETRY               RETRY EXCP
BSCSP0A  MVC   IOBWORK+L1(L1),IOBERCCW+L15   RESTORE RETURN CODE
         MVC   IOBERCCW+L8(L1),IOBERCCW+L14   RESTORE COMMAND CODE
         MVI   IOBERCCW+L12,CCWFLAG2   SET CCW FLAGS
         LA    CCWREG,IOBERCCW
         ST    CCWREG,IOBSTART
         B     BSCSP073            UPDATE RETRY COUNT
BSCSP0C  NI    IOSFLA,L255-IOSERR   INDICATE ERROR POST
         NI    IOBFLAG1,L255-IOBERRTN   ALSO IN IOB
         B     BSCSP043
BSCSP07A CLC   IOBWORK+L2(L1),DCBBSENQ   ENQ RECEIVED
         BE    BSCSP07             YES RETRANSMIT
         L     CCWREG,IOBERCCW+L8   NO DISABLE CHECK
         TM    TPCODE(CCWREG),HIGHBIT0   THIS THE LAST CCW
         BO    BSCSP071           YES, START WITH IT
         TM    TPCODE+L8(CCWREG),HIGHBIT0   IS NEXT CCW LAST
         BNO   BSCSPZZZ           NO, RESTART WITH IT
         CLI   TPCODE(CCWREG),TPRESET   THIS WRITE DLE-EOT
         BE    BSCSP071           YES, REWRITE DLE-EOT
BSCSPZZZ LA    CCWREG,L8(CCWREG)    BUMP TO NEXT CCW
         B     BSCSP071            CONTINUE FLOW
BSCSP09  L     ERREG1,ZERO(CCWREG)   GET AREA ADDRESS
         CLC   ZERO(L1,ERREG1),DCBBSEOT   EOT RECEIVED?
         BNE   BSCSP091            NO, CHECK FURTHER
         MVI   IOBERRCT,ERRMAXCT   SET RETRY COUNT TO MAXIMUM
         MVC   IOBCSW+L5(L2),IOBERCCW+L22  SAVE NEW RESIDUAL COUNT
         B     BSCSP043            POST OPERATION
BSCSP091 EQU   *
         LH    ERREG2,L6(CCWREG)   GET ORIGINAL COUNT
         SH    ERREG2,IOBCSW+L5    SUBTRACT RESIDUAL COUNT
         BCTR  ERREG2,ZERO         BACK UP ONE
         AR    ERREG2,ERREG1       POINT TO LAST CHAR
         CLC   ZERO(L1,ERREG2),DCBBSENQ   ENQ SEQUENCE
         BNE   BSCSP092            NO, BRANCH
         BCTR  ERREG2,ZERO         BACK UP ONE
         CLC   ZERO(L1,ERREG2),DCBBSSTX   STX-ENQ SEQUENCE
         BE    BSCSP073            YES, CONTINUE TO RETRY
         B     BSCSP042            SET SHOULD NOT OCCUR
BSCSP092 CLC   ZERO(L1,ERREG1),DCBBSSTX   STX    FIRST CHAR
         BE    BSCSP093            YES, BRANCH
         CLC   ZERO(L2,ERREG1),DCBBSTSX   DLE-STX FIRST CHAR
         BNE   BSCSP042            SET SHOULD NOT OCCUR
BSCSP093 NI    DECFLAGS,NONABT     NOT ABORT CONDITION
         TM    IOBSENS0,DATACHK+OVERRUN                        @ZA33188
         BNZ   BSCSP073            RETRY WT NAK & TIC RD TXT   @ZA33188
         B     BSCSP063            STX ENQ RECOVERY
BSCSP06  IC    ERREG5,IOBRCVPT     RECEIVE ACK PTR
         LA    ERREG2,DCBBSAK0(ERREG5)   ADDRESS OF EXPECTED ACK
         CLI   ZERO(CCWREG),CCWWRITE   IS THIS WRITE ENQ
         BE    BSCSP073            YES, RETRY WRITE ENQ
         L     ERREG4,ZERO(CCWREG)   AREA POINTER
         AH    ERREG4,L6(CCWREG)   ORIG COUNT
         SH    ERREG4,IOBCSW+L5    SUBTRACT RESID COUNT
         SH    ERREG4,ERRCN2       BACK UP TWO
         CLC   L1(L1,ERREG4),DCBBSNAK   NAK RECEIVED
         BE    BSCSP066            YES, CHK FOR ITB MODE
         CLC   L1(L1,ERREG4),DCBBSEOT   EOT RECEIVED            ZA15426
         BE    BSCSP063                                         ZA15426
         CLC   L1(L1,ERREG4),DCBBSENQ   WAS IT AN ENQ           ZA15426
         BE    BSCSP06A            YES, BRANCH                  ZA15426
         C     ERREG4,ZERO(CCWREG)  CHECK FOR ONLY 1 BYTE REC.  ZA15426
         BL    BSCSP06B       YES, DON'T CHECK DOUBLE RESP.     ZA15426
         CLC   ZERO(L2,ERREG4),ZERO(ERREG2)   THE EXPECTED RESPONSE
         BE    BSCSP063            YES INDICATE NORMAL COMP
         XR    ERREG2,ERREG1       FLIP TO WRONG ACK
         CLC   ZERO(L2,ERREG4),ZERO(ERREG2)   WRONG ACK RECEIVED
         BE    BSCSP061            YES RETRANSMIT
         CLC   ZERO(L2,ERREG4),DCBBSRVI   RVI RECEIVED
         BE    BSCSP063            YES, BRANCH
         CLC   ZERO(L2,ERREG4),DCBBSSAK   WAS WACK RECEIVED     YA02440
         BE    BSCSP063            YES, NORMAL COMP             YA02440
BSCSP06B EQU   *                                               @ZA15426
         CLI   L5(CCWREG),RDTEXT     READ TEXT ?               @ZA07651
         BE    BSCSP063      YES, GO TO NORMAL COMPLETION      @ZA04859
         CLI   L5(CCWREG),TPOPWRTX  READ RESPONSE CCW       LD @ZA02310
         BNE   BSCSP073            NO, CHECK RETRIES            YA02439
         CLI   L7(CCWREG),LEN20    LENGTH OF 20 INDICATES...LD @ZA02310
*                                  ...CONVERSATIONAL WRITE  LD @ZA02310
         BNE   BSCSP073            NO CHECK RETRIES         LD @ZA02310
         B     BSCSP063            SET NORMAL RETURN...     LD @ZA02310
*                                  ...DATA RECEIVED         LD @ZA02310
BSCSP06A EQU   *                                            LD @ZA02310
         SH    CCWREG,ERRCN8       BACK UP TO PREVIOUS CCW      YA02439
         CLI   L5(CCWREG),TPOPWTXT   IS IT A WRITE TEXT         YA02439
         BE    BSCSP013            YES                          YA02439
         CLI   L5(CCWREG),TPOPWDLE   WRITE DLE ETX              YA02439
         BNE   BSCSP073            NO, CHECK RETRIES            YA02439
         SH    CCWREG,ERRCN8       BACK UP TO WRITE TEXT        YA02439
BSCSP013 EQU   *                                                YA02439
         ST    CCWREG,IOBSTART     SET RESTART ADDR             YA02439
         B     BSCSP073            NO RETRY WRITE ENQ
BSCSP01  CLC   IOBWORK+L2(L1),DCBBSENQ   WAS AN ENQ RECEIVED   @ZA04665
         BNE   BSCSP073            NO RETRY RD ENQ
         CLI   IOBCPA,CCWAPOLL     THIS AUTO POLL
         BNE   BSCSP07             NO RESTART FAIL CCW
         IC    ERREG5,IOBSNDPT     ACK OFFSET
         LA    CCWREG,DCBBSAK0(ERREG5)   LAST GOOD ACK
         LA    ERREG1,L2           SET UP COUNT FOR CCW
         B     BSCSP074            SET UP RETRY
BSCSP02  EQU   *                                                YA03249
         TM    IOBCSW+L3,X02       UNIT CHECK                   YA03249
         BO    UNITCHEK            YES                          YA03249
         CLI   DECTYPE+1,READTI    READ INITIAL                @ZA03971
         BNE   BSCSP02A                                        @ZA03971
         CLI   IOBCPA,AUTOPOLL      IS,IT AUTOPOLL?            @ZA03971
         BNE   BSCSP02A                                        @ZA03971
         L     ERRLNK,ZERO(CCWREG) GET DATA AREA ADDRESS       @ZA06381
         LA    ERRLNK,ZERO(ERRLNK)  CLEAR UNUSED BYTE          @ZA06381
         CLC   ZERO(L1,ERRLNK),DCBBSEOT WAS FIRST CHAR AN EOT  @ZA12156
         BE    READINIT            YES RESTART POLLING         @ZA06381
BSCSP02B EQU   *                                               @AZ03971
         NI    IOBFLAG1,L255-IOBERRTN-IOBIOERR   NO ERROR       YA03249
         NI    IOSFLA,L255-IOSEX-IOSERR   ALSO IN IOSB          YA03249
         B     BSCSP075            EXIT                         YA03249
BSCSP02A EQU   *                                               @ZA03971
         CLI   IOBWORK+3,CON9B       SPEC SPEC RETURN?         @ZA32428
         BNE   NOSPEC                NO! BRANCH                @ZA32428
         MVI   IOBWORK+3,ZERO        CLEAR SPEC SPEC RETURN    @ZA32428
         ST    CCWREG,IOBERCCW+8     SET TIC ADDR              @ZA32428
         L     CCWREG,0(CCWREG)      GET ADDR OF TEXT          @ZA32428
         CLC   0(1,CCWREG),DCBBSENQ  READ ENQ?                 @ZA32428
         BNE   BSCSP063              NO! POST NORMAL           @ZA32428
         LA    CCWREG,IOBERCCW       GET ERP CH PGM ADDR       @ZA32428
         ST    CCWREG,IOBSTART       SET IOBSTART              @ZA32428
         LA    CCWREG,DCBBSNAK       GET NAK POINTER           @ZA32428
         B     BSCSP03A              COMP WRT NAK & TIC TO RD  @ZA32428
NOSPEC   TM    IOBERINF+L8,LSTDATA   LOST DATA?                @ZA32428
         BO    BSCSP021              YES, CHECK FOR ENQ        @ZA03971
         TM    IOBERINF+L8,DATACHK   DATA CHECK ?              @ZA03970
         BO    BSCSP02B              YES, RESET ERP IN CONTROL @ZA03970
         B     BSCSP021              NO, CHECK FOR ENQ         @ZA03970
UNITCHEK EQU   *                                                YA03249
         TM    IOBSENS0,TIMEOUT    TIME OUT ERROR               YA03249
         BZ    BSCSP073            NO,RETRY WRITE NAK           YA03249
         CLI   DECTYPE+L1,READTI   READ INITIAL                 YA03249
         BNE   BSCSP073            NO, RETRY                    YA03249
* 2 LINES DELETED                                              @ZA12146
         CLC   IOBCSW+L5(L2),L6(CCWREG) DOES RES. CNT=ORG CNT  @ZA11037
         BE    READINIT           YES GO BACK TO POLLING       @ZA11037
         L     ERREG2,ZERO(CCWREG)  GET DATA AREA ADDRESS      @ZA07640
         LA    ERREG2,ZERO(ERREG2)   CLEAR HIGH BYTE           @ZA07640
         CLI   ZERO(ERREG2),L1     IS IT AN SOH                @ZA12146
         BE    BSCSP073          YES, RETRY WRITE NAK          @ZA12146
READINIT LA    ERREG2,IOBCPA       POINT TO START OF CCWS       YA03249
         ST    ERREG2,IOBSTART     RETRY FROM START             YA03249
         MVI   IOBRCVPT,X02        INITIALIZE RCV PTR       LD @ZA02309
         MVI   IOBSNDPT,ZERO       INITIALIZE SND PTR       LD @ZA02309
         LA    ERREG2,IOBCPA+L24   POINT TO CCW 4               YA03249
         CLI   L5(ERREG2),READINDX   READ INDEX                 YA03249
         BE    FOUNDIDX            YES                          YA03249
         LA    ERREG2,L24(ERREG2)   NOT READINDX, IS WRAP LIST  YA03249
FOUNDIDX EQU   *                                                YA03249
         L     CCWREG,ZERO(ERREG2)   LOAD AREA ADDRESS          YA03249
         LA    CCWREG,L2(CCWREG)   ADD 2                        YA03249
         ST    CCWREG,L8(ERREG2)   STORE IN READ TEXT           YA03249
         MVI   L8(ERREG2),CCWREAD   RESTORE COMMAND CODE        YA03249
         LH    CCWREG,DECLNGTH     GET LENGTH                   YA03249
         BCTR  CCWREG,ZERO         REDUCE                       YA03249
         BCTR  CCWREG,ZERO         BY TWO                       YA03249
         STH   CCWREG,L14(ERREG2)   PUT COUNT IN READ TEXT      YA03249
*  *****     LINES 146432-146443 DELETED BY ZA02833  *****  L5 @ZA02833
         NI    IOSFLA,L255-IOSEX-IOSERR  SET NRM COMP IN IOSB  @ZA04679
         NI    IOBFLAG1,L255-IOBERRTN-IOBIOERR  ALSO IN IOB    @ZA04679
         MVI   IOBERRCT+L1,ZERO      SET NORMAL RETURN         @ZA04679
         MVI   IOBWORK+L1,SPFLAG    SET SPECIAL FLAG FOR 19MB  @ZA04679
         B     RETRY                EXIT                       @ZA04679
BSCSP021 EQU   *                                            LD @ZA02308
         CLI   IOBWORK+L3,CON9A        SPEC. IND SET?          @ZA17702
         BNE   BSCSP02C                NO, CHECK ENQ RECEIVED  @ZA17702
         L     ERREG2,L0(CCWREG)       GET DATA ADDR.          @ZA17702
         MVI   IOBWORK+L3,ZERO         CLEAR INDICATOR         @ZA24635
         ST    CCWREG,IOBERCCW+L8      RESTORE TIC ADDRESS     @ZA24635
         CLC   L0(L1,ERREG2),DCBBSENQ  IS IT AN ENQ?           @ZA17702
         BE    BSCSP02D                YES, SET UP NAK         @ZA17702
         TM    IOBSENS0,DATACHK+OVERRUN  DATACHK OR OVERRUN?   @ZA31718
         BNZ   BSCSP02D                YES! SET UP NAK         @ZA31718
         B     BSCSP063                                        @ZA17702
BSCSP02C CLC   IOBWORK+L2(L1),DCBBSENQ ENQ RECEIVED            @ZA17702
         BNE   BSCSP073            NO,RETRY READ ENQ        LD @ZA02308
BSCSP02D LA    CCWREG,DCBBSNAK     ADDRESS OF NAK CHARACTER LD @ZA17702
         CLI   DECTYPE+1,READTRV   READ INTERRUPT??            @ZA32980
         BE    SPEC9B              YES BRANCH                  @ZA32980
         CLI   DECTYPE+1,READTT    READ TT?                    @ZA32428
         BNE   BSCSP03A            NO BRANCH                   @ZA32428
SPEC9B   MVI   IOBWORK+3,CON9B     SET SPEC SPEC RETURN        @ZA32980
         LA    CCWREG,IOBCPA       PTR TO RDTT CH PGM          @ZA32428
         ST    CCWREG,IOBSTART     SET IOBSTART                @ZA32428
         B     RETRY               RETRY RDTT                  @ZA32428
****     THIS STATEMENT REMOVED BY APAR @ZA32428               @ZA32428
BSCSP03  LA    CCWREG,DCBBSENQ     ADDRESS OF ENQ CHARACTER
BSCSP03A LA    ERREG1,L1           SET UP COUNT FOR CCW
         B     BSCSP074            COMPLETE WRITE OPERATION
BSCSP04  EQU   *
         CLI   DECTYPE+L1,WRITTQ   IS THIS A WRITE ENQUIRY
         BE    BSCSP076            YES, RETRY WRITE ENQ
         CLC   IOBWORK+L2(L1),DCBBSENQ   WAS ENQ RECEIVED      @ZA04665
         BE    BSCSP045
         CLI   DECTYPE+L1,WRTCONN   IS THIS A WRITE CONNECT
         BNE   BSCSP07             NO, CONTINUE
         OI    IOBERCCW+L4,SKIP    SET UP READ SKIP
         MVC   IOBERCCW+L6(L2),SKIPCNT   TO CLEAR THE LINE
         B     BSCSP072
BSCSP045 EQU   *
         MVI   IOBWORK+L1,INITCONS   SET UP TO CHECK WRT INIT
         XC    IOBWORK+L1(L1),DECTYPE+L1   CHECK VALUE
         TM    IOBWORK+L1,MASK15   THIS WRITE INITIAL OPERATION
         BM    BSCSP042            NO SET SNO
         B     BSCSP041            YES CHECK POINT TO POINT
BSCSP042 OI    DECERRST,DECSNO     INDICATE SNO
         MVI   IOBERRCT,ERRMAXCT   SET RETRY COUNT TO MAX
BSCSP043 LA    NAMEREG,ERLOD25     ADDRESS OF ERROR POST
         MVI   IOBERRCT+L1,ZERO
         MVI   IOBWORK+L1,ZERO
XCTLOUT  EQU   *
         L     ERRETR,CVTPTR       POINT TO CVT
         USING CVTMAP,ERRETR
         L     ERRETR,CVTXTLER     POINT TO XCTL ROUTINE
         DROP  ERRETR
         BR    ERRETR              XCTL
BSCSP041 TM    UCBTYPE+L1(UCBREG),NOTPTPT   AUTO-CALL,ANSR,POLL
         BNZ   BSCSP042            YES SET SNO
BSCSP048 EQU   *
         TM    DCBXCODE,DCBMASTA   THIS THE MASTER STATION
         BZ    BSCSP044            YES RESTART CHAN PROGRAM
BSCSP046 OI    DECFLAGS,SLVCONT    INDICATE CONTENTION
BSCSP047 NI    IOSFLA,L255-IOSERR   INDICATE ERROR POST
         NI    IOBFLAG1,L255-IOBERRTN   ALSO IN IOB
         MVC   IOBCSW(L7),IOBERCCW+L17   RESTORE FAILURE DATA
         B     BSCSP075            EXIT VIA IOS
BSCSP044 LA    CCWREG,IOBCPA       SET TO RESTART CHAN PROGRAM
         B     BSCSP078            COMPLETE OPERATION
BSCSP061 EQU   *
         TM    DCBBFTEK,DYNBUF     THIS DYNAMIC BUFFERING
         BO    BSCSP043            YES POST WITH ERROR
         TM    IOBERCCW+L16,IOBTO   DID THIS WRONG ACK OCCUR IN
*                                  TIME OUT SITUATION
         BNO   BSCSP073            NO, RESEND THE ENQ
         B     BSCSP065
BSCSP063 NI    IOSFLA,L255-IOSEX-IOSERR   INDICATE NORMAL COMPLETION
         NI    IOBFLAG1,L255-IOBERRTN-IOBIOERR   ALSO IN IOB
         B     BSCSP075            SET NORMAL RETURN
BSCSP066 LH    ERREG4,IOBCSW+L5    GET RESIDUAL COUNT
         LA    ERREG4,L1(ERREG4)   ADD ONE
         CH    ERREG4,L6(CCWREG)   EQUAL TO ORIGINAL
         BL    BSCSP043            MORE THAN ONE CHARACTER
         TM    DCBBFTEK,DYNBUF     THIS DYNAMIC BUFFERING
         BO    BSCSP043            YES POST WITH ERROR
BSCSP065 EQU   *
         LA    ERRLNK,IOBCPA       START OF CHANNEL PROGRAM
         CR    ERRLNK,CCWREG       COMPARE TO CCW ADDRESS
         BE    BSCSP071            IF EQUAL, RESTART CHAN PROG
         SH    CCWREG,ERRCN8       BACK UP ONE CCW
         CLI   L5(CCWREG),TPOPDTXT   THIS TEXT TRANSFER
         BNE   BSCSP065            NO BACK UP ANOTHER CCW
         B     BSCSP071            SET TO RESTART CHAN PROG
BSCSP0B  EQU   *
         TM    IOBCSW+L3,X02       UNIT CHECK
         BNZ   BSCSP073            YES, SEND NAK AGAIN
         L     ERREG2,ZERO(CCWREG)   ENQ POINTER
         TM    IOBCSW+L3,X01       UNIT EXCEPTION
         BZ    BSCSP0B1
         CLC   ZERO(L1,ERREG2),DCBBSEOT   EOT RECEIVED
         BE    BSCSP063            YES, POST
         B     BSCSP073            NO, RETRY
BSCSP0B1 EQU   *
         CLC   ZERO(L1,ERREG2),DCBBSENQ   ENQ RECD
         BE    BSCSP073            YES, SEND NAK AGAIN
         B     BSCSP063            OTHERWISE POST
BSCSP07  L     CCWREG,IOBERCCW+L8   ADDRESS OF FAILING CCW
BSCSP071 ST    CCWREG,IOBSTART     STORE IN START PTR
         B     BSCSP075            COMPLETE CHAN PROGRAM
BSCSP077 L     ERREG2,L8(CCWREG)   GET DATA ADDRESS OF READ CCW
         MVC   ZERO(L2,ERREG2),IOBWORK+L2   MOVE DLE-EOT TO USERS AREA
         B     BSCSP047
BSCSP076 L     CCWREG,IOBERCCW+L8   ADDRESS OF FAILING CCW
         CLC   IOBWORK+L2(L1),DCBBSENQ   WAS ENQ RECEIVED      @ZA04665
         BE    BSCSP048            YES, CHECK CONTENTION
         CLC   IOBWORK+L2(L2),DCBBSDLE   DLE-EOT RECEIVED
         BE    BSCSP077            YES, POST DISCONNECT SEQUENCE
BSCSP078 EQU   *
         ST    CCWREG,IOBSTART     STORE CHAN PROG ADDRESS
BSCSP072 MVI   IOBERRCT+L1,ZERO    SET NORMAL RETURN
         MVI   IOBWORK+L1,ZERO     CLEAR RETURN CODE
BSCSP073 CLI   IOBERRCT,ERRMAXCT   CHECK RETRIES
         BNL   BSCSP043            NONE LEFT
         IC    ERREG1,IOBERRCT     PICK UP COUNT
         LA    ERREG1,L1(ERREG1)   BUMP ONCE
         STC   ERREG1,IOBERRCT     RESTORE
         MVI   IOBSENS0,ZERO       CLEAR SENSE BYTE
         B     RETRY               RETRY EXCP
BSCSP074 ST    CCWREG,IOBERCCW     NEW DATA ADDRESS
         STH   ERREG1,IOBERCCW+L6   SET COUNT
         MVI   IOBERCCW,CCWWRITE   SET WRITE COMMAND
         MVI   IOBERCCW+L8,CCWTIC   PUT TIC IN SECOND COMMANE
BSCSP075 MVI   IOBERRCT+L1,ZERO    SET NORM RETURN
         MVI   IOBWORK+L1,ZERO     CLEAR RETURN CODE
RETRY    MVI   EWAIND1,EWAISVCF    SVC 15                      @ZA12156
         L     NAMEREG,TRANSRTN    LOAD NAME
         B     XCTLOUT             XCTL
         EJECT
**********
*
*        CONSTANTS
*
**********
TRANSRTN DC    F'9042'             NAME OF BTAM TRANSLATE ROUTINE
ERRCN2   DC    H'2'
ERRCN8   DC    H'8'
SKIPCNT  DC    X'5FFF'
UNITEXCP DC    X'0D00'             CE,DE, UNIT EXECPTION STAT  @ZA04185
PACHAREA DC    30C'0000'           PATCH AREA FOR MAINTENANCE
**********
*
*        MISCELLANEOUS EQUATES
*
**********
TIMEOUT  EQU   X'01'               TIME OUT SENSE               YA03249
AUTOPOLL EQU   X'09'               CCMD FOR AUTOPOLL           @ZA03971
READTI   EQU   X'01'               READ INITIAL                 YA03249
READINDX EQU   X'0A'               READ INDEX                   YA03249
NONABT   EQU   X'FE'               MASK OFF ABORT SEQUENCE
SKIP     EQU   X'10'
TOERROR  EQU   3
L255     EQU   X'FF'               AND MASK
ZERO     EQU   X'00'               LENGTH AND DISPLACEMENT
L0       EQU   0                                               @ZA04185
L1       EQU   1                   LENGTH AND DISPLACEMENT
L2       EQU   2                   LENGTH AND DISPLACEMENT
L3       EQU   3                   LENGTH AND DISPLACEMENT
L4       EQU   4                   LENGTH AND DISPLACEMENT
L5       EQU   5                   LENGTH AND DISPLACEMENT
L6       EQU   6                   LENGTH AND DISPLACEMENT
L7       EQU   7                   LENGTH AND DISPLACEMENT
L8       EQU   8                   LENGTH AND DISPLACEMENT
L9       EQU   9                   LENGTH AND DISPLACEMENT
L12      EQU   12                  LENGTH AND DISPLACEMENT
L14      EQU   14                  LENGTH AND DISPLACEMENT
L15      EQU   15                  LENGTH AND DISPLACEMENT
L16      EQU   16                  LENGTH AND DISPLACEMENT
L17      EQU   17                  LENGTH AND DISPLACEMENT
L22      EQU   22                  LENGTH AND DISPLACEMENT
L24      EQU   24                  LENGTH AND DISPLACEMENT      YA03249
X01      EQU   X'01'
X02      EQU   X'02'
X03      EQU   X'03'
X04      EQU   X'04'
X80      EQU   X'80'
SPFLAG   EQU   X'9F'     SPECIAL FLAG FOR IOB WORK             @ZA04679
UCBTYPE  EQU   16
TPOPDTXT EQU   X'11'
HIGHBIT0 EQU   X'80'
DYNBUF   EQU   X'08'
CCWAPOLL EQU   9
IOBTO    EQU   1                   TIME OUT
INITCONS EQU   X'0D'
MASK15   EQU   X'0F'
WRTCONN  EQU   X'1C'
WRITTQ   EQU   X'16'
READTRV  EQU   X'1B'             READ INTERRUPT                @ZA32980
READTT   EQU   X'03'             READ CONTINUE                 @ZA32428
CON9B    EQU   X'9B'             SPEC SPEC RETURN FOR 504C     @ZA32428
TPCODE   EQU   5
DECSNO   EQU   X'40'
ERLOD25  EQU   2043
ERRMAXCT EQU   7
LSTDATA  EQU   X'02'      LOST DATA SENSE BYTE                 @ZA03971
DATACHK  EQU   X'08'      DATA CHECK SENSE BYTE                @ZA03970
OVERRUN  EQU   X'04'      OVERRUN SENSE BYTE                   @ZA31718
SLVCONT  EQU   X'10'
NOTPTPT  EQU   X'D0'
DCBMASTA EQU   X'80'
CCWWRITE EQU   X'01'
FLIPBIT  EQU   X'02'
CCWTIC   EQU   X'08'
UERDSKP  EQU   X'07'
CODEA    EQU   X'0A'
CSWUE    EQU   X'01'
CCWREAD  EQU   X'02'
CCWFLAG1 EQU   X'30'
CCWFLAG2 EQU   X'70'
RTRNCDEA EQU   X'8A'
TPRESET  EQU   X'21'
TPOPWTXT EQU   X'11'               WRITE TEXT                   YA02439
TPOPWDLE EQU   X'13'               WRITE DLE ETX                YA02439
TPOPWRTX EQU   X'25'               READ RESP TO TEXT            YA02438
RDTEXT   EQU   X'91'     READ TEXT TP CODE (LAST ONE)          @ZA04859
LEN20    EQU   X'14'               LENGTH OF READ RESP...   LD @ZA02310
*                                  ...CCW FOR CONVERSATINAL LD @ZA02310
*                                  ...MODE.                 LD @ZA02310
RTNCD86  EQU   X'86'               RETURN CODE OF 86            YA02438
DEVICE   EQU   X'55'                                           @ZA04861
UNITCK   EQU   X'02'               UNIT CHECK STATUS           @ZA04185
EOTCHAR  EQU   X'37'               EOT CHECK                   @ZA06381
CON9A    EQU   X'9A'               SPECIAL CODE                @ZA17702
**********
*
*        REGISTER DEFINITION
*
**********
ERREG3   EQU   0                   WORK REG
IOSBREG  EQU   1                   IOSB BASE/PARAMETER REG
ERREG2   EQU   2                   WORK REG
EWAREG   EQU   3                   ERP WORKAREA BASE
CCWREG   EQU   4                   CCW ADDRESS REG
DECBRG   EQU   5                   DECB BASE
DCBREG   EQU   6                   DCB BASE
UCBREG   EQU   7                   UCB BASE
BASEREG  EQU   8                   PROGRAM BASE
ERREG1   EQU   9                   WORK REG
IOBRG    EQU   10                  IOB BASE
ERREG4   EQU   11                  WORK REG
ERRLNK   EQU   12                  LINK REG
NAMEREG  EQU   13                  LINK REG
ERRETR   EQU   14                  LINK REG
ERREG5   EQU   15                  LINK REG/WORK REG
         EJECT
         IECTDECB
         EJECT
         DCBD  DSORG=BX,DEVD=BS
         EJECT
         IECDRQE
         EJECT
         IEZIOB
         EJECT
CVT      DSECT
         CVT
         EJECT
         IECDERWA
**********
*
*        THE FOLLOWING DEFINITIONS ARE LOCAL FOR BTAM ERPS ONLY.
*
**********
         ORG   EWAIERP
EWAITRAN DS    F                   ADDRESS OF IECVTCCW         YM02594K
EWAITCCW DS    F                   PARALLEL TCCW               YM02594K
EWAIOVST DS    F                   ORIGINAL IOSVST CONTENTS    YM02594K
EWAIND0  DS    B                   FLAG BYTE
EWAIVISR EQU   X'10'               V=R REQUEST
EWAIPMAP EQU   X'08'               PARALLEL MAPPING DONE       YM02594K
EWAIGPRO EQU   X'04'               GETMAIN IN PROCESS          YM02594K
EWAIFPRO EQU   X'02'               FREEMAIN IN PROCESS         YM02594K
EWAIND1  DS    B                   FLAG BYTE
EWAILD00 EQU   X'80'               EXIT TO 004C                YM02594K
EWAILD15 EQU   X'40'               EXIT TO LOAD 15             YM02594K
EWAIWTOL EQU   X'20'               EXIT TO IOS WTO             YM02594K
EWAISTAT EQU   X'10'               EXIT TO STAT UPDATE         YM05652K
EWAISVCF EQU   X'08'               SVC 15                      YM05652K
EWAIND2  DS    B                   FLAG BYTE
EWAIND3  DS    B                   FLAG BYTE
EWAIAREA DS    20F                 SAVE AREA FOR MA OR AREA FOR WTO
EWAISAVE DS    2F                  TEMPORARY SAVE AREA
EWAIEXIT DS    4F                  ESATE PARAMETER LIST
*********  END OF BTAM LOCAL DEFINITIONS **********
         EJECT
         IECDIOSB
         END
