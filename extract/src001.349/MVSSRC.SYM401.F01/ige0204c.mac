         TITLE 'IGE0204C - BSC ERP ERROR POST ROUTINE'
IGE0204C CSECT
***********************************************************************
*                                                                     *
* MODULE NAME:                                                        *
*    IGE0204C                                                         *
*                                                                     *
* DESCRIPTIVE NAME:                                                   *
*    BTAM BSC ERROR POST ERP                                          *
*                                                                     *
* COPYRIGHT:                                                          *
*    NONE                                                             *
*                                                                     *
* STATUS:                                                             *
*    CHANGE LEVEL 001                                                 *
*                                                                     *
* FUNCTION:                                                           *
*    THIS ROUTINE SETS UP THE IOB FIELDS USED IN PRINTING OPERATOR    *
*    MESSAGES AND ERROR MESSAGES GENERATED BY TERMINALS FOR           *
*    SYS1.LOGREC.                                                     *
*                                                                     *
* NOTES:                                                              *
*    DEPENDENCIES:                                                    *
*        NONE                                                         *
*    RESTRICTIONS:                                                    *
*        THIS ERP IS ONLY FOR DEVICES SUPPORTED BY BTAM.              *
*    REGISTER CONVENTIONS:                                            *
*        SEE 'REGISTER DEFINITION' BELOW                              *
*                                                                     *
* PATCHLABEL:                                                         *
*    PACHAREA (124 BYTES)                                             *
*                                                                     *
* MODULE TYPE:                                                        *
*    PROCEDURE                                                        *
*    PROCESSOR:                                                       *
*        BAL                                                          *
*    MODULE SIZE:                                                     *
*        1253 BYTES                                                   *
*    ATTRIBUTES:                                                      *
*        REENTRANT, ENABLED, KEY 0, SUPERVISOR STATE, NO LOCKS HELD.  *
*                                                                     *
* ENTRY POINT:                                                        *
*    IGE0204C                                                         *
*    PURPOSE:                                                         *
*        SEE 'FUNCTION'                                               *
*    LINKAGE:                                                         *
*        THIS MODULE IS SCHEDULED FOR EXECUTION BY THE INPUT/OUTPUT   *
*        SUPERVISOR. IT RUNS UNDER AN SIRB.                           *
*    INPUT:                                                           *
*        REG 1 = ADDRESS OF IOSB                                      *
*        SOH % C MESSAGE FORMAT ON ENTRY TO ERROR POST                *
*     *****************************************************************
*     *               *               *               *               *
* +0  *      SOH      *       %       *       C       *      DLE      *
*     *               *               *               *               *
*     *****************************************************************
*     *               *               *                               *
* +4  *      STX      * ROUTING CODE  *    17 OR 60 BYTES OF TEXT     *
*     *               *               *                               *
*     *****************************************************************
* NOTE=DLE MAY OR MAY NOT BE PRESENT.                                 *
*                                                                     *
*       SOH % E MESSAGE FORMAT ON ENTRY TO ERROR POST                 *
*     *****************************************************************
*     *       *       *       *       *       *       *       *       *
* +0  *  SOH  *   %   *   E   *  DLE  *  STX  * X'08' * UNUSED* UNUSED*
*     *       *       *       *       *       *       *       *       *
*     *****************************************************************
*     *               *                                               *
* +8  *  TERMINAL ID  * 35 BYTES OF ERROR DATA...1 TO 6 35BYTE RECORDS*
*     *               *                                               *
*     *****************************************************************
* NOTE=DLE MAY BE ABSENT -- SOH % E STX BLANK X'08'.............      *
*                                                                     *
*    OUTPUT:                                                          *
*       ALTERED CHANNEL PROGRAM                                       *
*       SOH % E MESSAGE FORMAT WHEN PASSED TO EREP (TPR ROUTINE)      *
*     *****************************************************************
*     *               *       *               *       *      CHAN     *
* +0  *    LENGTH     *   E   *    X'2043'    * X'08' *      UNIT     *
*     *               *       *               *       *      ADDR     *
*     *****************************************************************
*     *               *                                               *
* +8  *  TERMINAL ID  * ERROR DATA AS RECEIVED (1 TO 6 35BYTE RECORDS)*
*     *               *                                               *
*     *****************************************************************
*                                                                     *
* EXITS-NORMAL:                                                       *
*    APPROPRIATE BTAM ERROR HANDLER VIA BRANCH ENTRY TO XCTL.         *
*        ALL LOADS START WITH IGE0. THE FIRST LOAD IS IGE0004A.       *
*        SUBSEQUENT LOADS ARE NUMBERED 1000 HIGHER THAN THE PREVIOUS  *
*        LOAD. THE ELEVENTH LOAD IS IGE0004B AND ALL SUBSEQUENT       *
*        LOADS ARE 1000 GREATER.                                      *
*        NO REGISTERS ARE SAVED BY THE ERROR ROUTINES AND ONLY        *
*        REGISTER 1 MAINTAINS TRANSPARENCY BETWEEN LOADS.             *
*                                                                     *
* EXITS-ERROR:                                                        *
*    NONE                                                             *
*                                                                     *
* EXTERNAL REFERENCES:                                                *
*    ROUTINES:                                                        *
*        SVC 35 WTO                                                   *
*    DATA AREAS                                                       *
*        IOB (MAPPED BY IEZIOB)                                       *
*        VIRTUAL CHANNEL PROGRAM                                      *
*        ERP WORKAREA (MAPPED BY IECDERWA)                            *
*    CONTROL BLOCKS                                                   *
*        UCB                                                          *
*        DCB                                                          *
*        DECB                                                         *
*        IOSB         (MAPPED BY IECDIOSB)                            *
*        CVT          (MAPPED BY CVT)                                 *
*        IOB          (MAPPED BY IEZIOB)                              *
*        RQE          (MAPPED BY IECDRQE)                             *
*                                                                     *
* TABLES-WORKAREAS:                                                   *
*    ERP WORKAREA                                                     *
*    IOB CHANNEL PROGRAM AREA IN IOB BTAM EXTENSION                   *
*                                                                     *
* MACROS:                                                             *
*    WTO                                                              *
*                                                                     *
* CHANGE ACTIVITY:                                                    *
*    YA01233  (IN BASE)                                               *
*    YM02566K (8/6/73)                                                *
*    YM02595K (9/20/73)                                               *
*    YM02594K (9/24/73)                                               *
*    YM05652K (1/24/74)                                               *
*    YM05680K (1/24/74)                                               *
*    ZA00504  (5/9/74)                                                *
*    AZ04158  (10/03/75)          AZ06405  (10/07/75)
*    AZ13213  (09/23/76)          AZ14140  (10/28/76)                 *
*    AZ14138  (12/07/76)          AZ20105  (05/13/77)                 *
***********************************************************************
         EJECT
         USING *,BASEREG
         LR    BASEREG,ERREG5      SET BASE REG
         B     BEGIN               BRANCH AROUND ID            @ZA00504
         DC    C' IGE0204C '       MODULE ID                   @ZA00504
         DC    C' 4129 '           DATE LAST CHANGE            @ZA00504
         DC    CL8'&SYSDATE'       DATE LAST ASSEMBLY          @ZA00504
BEGIN    DS    0H                                              @ZA00504
         USING RQE,ERREG5
         USING IECTDECB,DECBRG
         USING IHADCB,DCBREG
         USING IOSB,IOSBREG
         USING IOBSTDRD,IOBRG
         USING EWA,EWAREG
         L     ERREG5,IOSUSE       BASE RQE
         L     EWAREG,IOSERP       BASE ERP WORKAREA
         L     IOBRG,RQEIOB        BASE IOB
         L     DECBRG,IOBECBPT     BASE DECB
         L     DCBREG,IOBDCBPT     BASE DCB
         L     UCBREG,IOSUCB       BASE UCB
         DROP  ERREG5
         L     CCWREG,IOBERCCW+L16   ADDRESS OF ERP CCW
         TM    DCBBFTEK,DYNBF      DYNAMIC BUFFERING?
         BNO   BSCEP0              NO,BRANCH
         L     CCWREG,IOBFL3       GET IOB CSW
BSCEP0   EQU   *                                               YM02566K
         LA    CCWREG,ZERO(CCWREG)   CLEAR OUT FLAG BYTE
         SH    CCWREG,ERRCN8       FAILING CCW
         LA    DCBREG,ZERO(DCBREG)
         L     ERREG1,IOBERINF  GET DATA AREA ADDR SET BY 19MB @ZA13213
         CLC   ZERO(L3,ERREG1),OBRRTN   RETURN FROM TPER ROUTINE?
         BE    BSCEP052
         CLC   ZERO(L2,ERREG1),DCBBSONL   SOH % MESSAGE?
         BE    BSCEP04
BSCEPREG EQU   *
         CLI   IOBERRCT,ERRMAXCT   RETRIES EXHAUSTED
         BNL   BSCEP00             YES NORMAL POST
         CLI   IOBERRCT+L1,RTRNCDEP   SPECIAL RETURN
         BE    BSCEP03             IF SO, BRANCH
         CLI   IOBWORK,ZERO        ERP CCW
         BNE   BSCEP00             NO NORMAL POST
         CLI   DECTYPE,WRTCONN     IS OPERATION WRITE CONNECT
         BNE   BSCEP03             NO, PROCESS AS USUAL
         TM    IOBSENS0,LOSTDATA
         BO    BSCEP03B            YES, RETRY
         L     ERREG1,IOBERCCW+L8   ADDRESS OF CCW THAT FAILED
         ST    ERREG1,IOBSTART     SET UP FOR EXCP
         B     BSCEP03B
BSCEP03  EQU   *
         L     CCWREG,IOBFL3
         LA    CCWREG,ZERO(CCWREG)   CLEAR OUT FLAG BYTE
         SH    CCWREG,ERRCN8       GET ADDR OF FAILING CCW
         CLI   ZERO(CCWREG),CCWWRITE   WRITE COMMAND
         BNE   BSCEP000            NO CHK SPEC RTRN
         MVI   IOBERRCT+L1,RTRNCDEP   SET SPECIAL RTRN
BSCEP03A L     ERREG1,IOBERCCW+L8   PICK UP READ CCW
         ST    ERREG1,IOBSTART     MODIFY START ADDRESS
BSCEP03B EQU   *
         OI    IOSFLA,IOSERR       SET ERP IN CONTROL
         OI    IOBFLAG1,IOBERRTN   ALSO IN IOB
         MVI   EWAIND1,EWAISVCF    SVC 15                      YM05652K
         B     RETRY               ERROR EXCP
BSCEP000 NI    IOBSENS0,L255-LOSTDATA   EXPECTED ERROR
         MVI   IOBERRCT+L1,ZERO    ZIP RETURN CODE
         CLI   IOBSENS0,ZERO       ANY SENSE ERRORS
         BE    BSCEP002            NO CLEAR UC FROM CSW
         TM    IOBSENS0,TOERROR    ERROR TIME OUT
         BNO   BSCEP00             NO POST IN ERROR
         TM    L4(CCWREG),SKIP     SKIP BIT ON
         BO    BSCEP03A            YES RESTART WRITE
         IC    ERREG2,IOBERRCT     BUMP RETRY
         LA    ERREG2,L1(ERREG2)   COUNT BY ONE
         STC   ERREG2,IOBERRCT     AND RETRY
         MVI   EWAIND1,EWAISVCF    SVC 15                      YM05652K
         B     RETRY               ERROR EXCP
BSCEP002 EQU   *
         NI    IOBCSW+L3,L255-IOBCSWUC   TURN OFF UNIT CHECK   YM02566K
BSCEP001 EQU   *
         MVI   EWAIND1,EWAILD00    EXIT TO 004C                YM02594K
         LA    NAMEREG,ERLOD00     GO TO 004C                  YM05680K
         B     XCTLOUT             GO TO IGE0004C              YM05680K
BSCEP00  EQU   *
         NC    DECPOLPT+L1(L3),DECPOLPT+L1   POLLING CHARS AVAIL
         BZ    BSCEP00B            NO CHECK ADDRESSING
         L     ERREG2,DECENTRY     PICK UP CHAR POINTER
BSCEP00A MVC   IOBRESTR+L2(L2),ZERO(ERREG2)   MOVE IN CHARACTERS
         B     BSCEP01             CONTINUE FLOW
BSCEP00B NC    DECADRPT+L1(L3),DECADRPT+L1   ADDRESSING CHARS AVAIL
         BZ    BSCEP01             NO CONTINUE MESSAGE CONSTRUCTION
         L     ERREG2,DECADRPT     PICK UP CHAR POINTER
         B     BSCEP00A            CONTINUE FLOW
BSCEP01  EQU   *
         TM    DCBBFTEK,DYNBF      DYNAMIC BUFFERING?
         BNO   BSCEP01A            NO, USE ORIGINAL FAILURE
         TM    TPOPCODE(CCWREG),X3F   IS IT ERP CCW
         BNZ   BSCEP01B            NO, USE CURRENT FAILURE
         L     ERREG4,IOBERCCW+L16   TIC-ED TO CCW
         LA    ERREG4,ZERO(ERREG4)   ZAP HIGH BYTE
         SH    ERREG4,ERRCN8       BEGINNING OF CCW
         TM    TPOPCODE(ERREG4),X30   PRIOR TO TEXT
         BZ    BSCEP01A            YES, USE ORIGINAL FAILURE
         CLI   L8(CCWREG),X08      IND ERP CCW TIC
         BE    BSCEP01X            YES, USE TIC-ED TO CCW
         CLI   L8(CCWREG),X03      2ND ERP CCW NOP
         BNE   BSCEP01A            NO, USE ORIGINAL CCW
BSCEP01X MVC   IOBERCCW+L17(L3),L9(CCWREG)   ALTER ORIGINAL CCW
         L     ERREG4,IOBERCCW+L16   ALTER ORIGINAL CSW
         AH    ERREG4,ERRCN8
         ST    ERREG4,IOBERCCW+L16   MAKE IT LOOK LIKE CSW
BSCEP01A EQU   *
         MVC   IOBSENS0(L1),IOBERCCW+L16   RESTORE SENSE INFO
         MVC   IOBCSW(L7),IOBERCCW+L17   RESTORE CSW INFO
BSCEP01B EQU   *
         MVC   IOBRESTR(L1),TPOPCODE(CCWREG)   INSERT TP OP CODE
         MVC   IOBSENS1(L1),DECTYPE+L1    R/W OP TYPE          @ZA04158
         MVC   IOBRESTR+L1(L1),DECFLAGS   DECB FLAG BYTE       @ZA04158
         MVI   IOBWORK+L1,ZERO     ZERO OUT WORK FIELD
         TM    IOBSENS0,TOERROR    ERROR TIME OUT
         BZ    BSCEP01C            NO, ISSUE WTO
         TM    DECTYPE,NOLERB      SUPPRESS WTO REQUESTED
         BO    BSCEP02             YES EXIT VIA IOS
BSCEP01C EQU   *
         TM    UCBTYP(UCBREG),X0A    CHECK FOR BSC1            @ZA14138
         BNZ   BSCEP01D            NO, CONTINUE                @ZA14138
         TM    DECFLAGS,SLAVCONT     CHECK FOR CONTENTION      @ZA14138
         BO    RETRY               IF SO GO POST               @ZA20105
BSCEP01D EQU   *                                               @ZA14138
         OI    IOSFLB,IOSLOG       INDICATE LOGOUT REQUESTED
         MVI   EWAIND1,EWAIWTOL    TELL 904B TO GO TO IOS WTO  YM02594K
         B     RETRY               GO TO 904B                  YM02594K
BSCEP02  NI    IOSFLA,L255-IOSERR   SET PERM ERROR IND
         NI    IOBFLAG1,L255-IOBERRTN   ALSO IN IOB
         MVI   EWAIND1,EWAISVCF    SVC 15                      YM05652K
         B     RETRY               ERROR EXCP
BSCEP04  EQU   *
         LH    ERREG4,L6(CCWREG)   GET ORIGINAL COUNT
         SH    ERREG4,IOBCSW+L5    SUBTRACT RESIDUAL COUNT
         BCTR  ERREG4,ZERO         ADJUST FOR ENDING CHAR
         TM    DCBXMODE,INTBLCHK   ITB MODE?
         BZ    BSCEP040
         BCTR  ERREG4,ZERO         ADJUST FOR CHECK CHAR
BSCEP040 LA    ERREG2,L4(ERREG1)   POINT PAST HEADER
         SH    CCWREG,ERRCN8       BACK UP ONE CCW
         TM    UCBTYP+L1(UCBREG),X40   MULTIPOINT LINE?
         BZ    BSCEP041
         TM    DECTYPE+L1,READINIT   READ INITIAL?
         BNZ   BSCEP041
         L     ERREG3,ZERO(CCWREG)   PICK UP AREA ADDRESS
         AH    ERREG3,ERRCN1       INCREMENT ADDRESS BY ONE
         C     ERREG3,L8(CCWREG)   IS COUNT ADJUSTED?
         BE    BSCEP041            YES, NOT FIRST TIME THRU
         LA    ERREG4,L1(ERREG4)   ADJUST FOR OTHER READ
BSCEP041 CLI   L2(ERREG1),EBC      EBCDIC C?
         BNE   BSCEP05             PROCESS E TYPE MSG
BSCEP04C CLC   L3(L1,ERREG1),DCBBSDLE   DLE INCLUDED?
         BNE   BSCEP04D
         LA    ERREG2,L1(ERREG2)   ADJUST FOR DLE
         BCTR  ERREG4,ZERO         ADJUST COUNT
BSCEP04D SH    ERREG4,ERRCN5       ADJUST FOR OTHER FRAM CHAR
BSCEP042 EQU   *
         LA    CCWREG,L8(CCWREG)
         LR    ERREG3,ERREG1
         CH    ERREG4,SHORTMSG     THIS A SHORT MSG?
         BH    BSCEP043            NO, SET FOR LONG MSG
         MVC   EWAIAREA(LWTO1),WTO1   MOVE TO EWA
         LA    ERREG1,EWAIAREA     GET ADDR OF SHORT TXT MSG
         B     BSCEP044            SET UP MSG
BSCEP043 EQU   *
         MVC   EWAIAREA(LWTO2),WTO2   MOVE TO EWA
         LA    ERREG1,EWAIAREA     GET ADDR OF LONG TST MSG
         CH    ERREG4,RITESIZE     MSG TOO LONG?
         BNH   BSCEP044            NO CONTINUE
         LH    ERREG4,RITESIZE     SET LENGTH TO RIGHT SIZE
BSCEP044 MVC   L12(L3,ERREG1),L13(UCBREG)   PUT LINE ADDR ON MSG
         BCTR  ERREG4,ZERO         DECREMENT FOR MOVE
         EX    ERREG4,MOVE         MOVE TEXT INTO MSG
         LA    ERREG4,L13(ERREG4)   RESET COUNT & INCL HDR
         AR    ERREG4,ERREG1       ADD LENGTH TO PARM LIST PTR
         AH    ERREG4,ERRCN4       ADD NUMBER OF BYTES IN HDRR
         LA    ERREG4,L2(ERREG4)   ADD LENGTH OF DESCRIP FLD
         NI    ZERO(ERREG4),NULL   ZERO ROUTE CODE IN MSG
         NI    L1(ERREG4),NULL
         TM    ZERO(ERREG2),BIT7   ROUTE CODE 2 SPECIFIED?
         BNO   BSCEP045            NO, CHECK 8
         OI    ZERO(ERREG4),CDE2   INDICATE MASTER CONSOLE
BSCEP045 TM    ZERO(ERREG2),BIT6   ROUTE CODE 8
         BNO   BSCEP046            NO, CHECK 10
         OI    ZERO(ERREG4),CDE8   INDICATE TP CONSOLE
BSCEP046 TM    ZERO(ERREG2),BIT5   ROUTE CODE 10?
         BNO   BSCEP047            NO, CONTINUE
         OI    L1(ERREG4),CDE10    IND SYS MAINT COLSOLE
BSCEP047 LR    ERREG2,IOSBREG      SAVE IOSB PTR
         LR    IOSBREG,ERREG1      GET PTR TO MSG
         WTO   MF=(E,(1))          WRITE CONSOLE MSG
         LR    IOSBREG,ERREG2      RESTORE IOSB PTR
         L     ERREG1,IOBERINF     GET DATA ADDRESS
BSCEP052 EQU   *
         SH    CCWREG,ERRCN8
         TM    UCBTYP+L1(UCBREG),X40   MULTIPOINT LINE
         BZ    BSCEP049
         TM    DECTYPE+L1,READINIT   READ INITIAL
         BNZ   BSCEP049
         L     ERREG2,ZERO(CCWREG)   PICK UP AREA ADDRESS
         LA    ERREG2,L1(ERREG2)   INCREMENT BY ONE
         CLM   ERREG2,L7,L9(CCWREG)   BEEN THRU BEFORE?        @ZA14140
         BE    BSCEP04E
         STCM  ERREG2,L7,L9(CCWREG)   STORE NEW ADDRESS        @ZA00504
         LH    ERREG2,L14(CCWREG)   GET ORIGINAL COUNT
         LA    ERREG2,L1(ERREG2)   ADD ONE TO COUNT
         STH   ERREG2,L14(CCWREG)   STORE NEW COUNT
BSCEP04E BCTR  ERREG1,ZERO         BACK UP PAST INDEX BYTE
BSCEP049 SR    ERREG2,ERREG2       CLEAR REGISTER
         IC    ERREG2,IOBSNDPT     GET SEND ACK POINTER
         AR    ERREG2,DCBREG       ADD DCB ADDRESS
         A     ERREG2,WRTRSPCW     ADD COMMAND CODE AND OFFSET
         ST    ERREG2,IOBERCCW     SET UP FIRST HALF OF WRT
         MVC   IOBERCCW+L4(L4),WRTRSPCW+L4   SET UP NEXT HALF
         AH    CCWREG,ERRCN8       GO TO READ CCW
         ST    CCWREG,IOBERCCW+L8   SET TIC ADDRESS
         LA    ERREG2,CCWTIC       GET COMMAND CODE
         STC   ERREG2,IOBERCCW+L8   SET COMMAND CODE
         TM    DCBBFTEK,DYNBF      DYNAMIC BUFFERING USED?
         BZ    BSCEP04A            NO, RESTART CHAN PROGM?
         OI    L4(CCWREG),X88      SET ON DATA CHAIN AND PCI
         SH    ERREG1,ERRCN4
         MVI   ZERO(ERREG1),ZERO
         MVC   L8(L8,CCWREG),RDSKIP   MOVE IN READ SKIP CCW
         MVC   L16(L8,CCWREG),ZERO(CCWREG)   MOVE 1ST CCW TO THIRD CCW
         MVC   L24(L8,CCWREG),L8(CCWREG)   MOVE 2ND TO 4TH
         MVC   L17(L3,CCWREG),L1(ERREG1)   MOVE PTR TO NEXT BUFFER
         L     ERREG2,L16(CCWREG)   GET ADDR OF NEXT BUFFER
         AH    ERREG2,ERRCN4       ADD LINK FIELD
         ST    ERREG2,L16(CCWREG)   STORE AREA ADDR IN 3RD CCW
         OI    L5(CCWREG),X40      SET ON 1ST PCI BIT IN 1ST CCW
         O     CCWREG,L24(CCWREG)   PLACE ADDR OF 1ST IN 4TH CCW
         ST    CCWREG,L24(CCWREG)
         LR    ERREG2,CCWREG       POINT TO 1ST READ
         LA    ERREG2,L16(ERREG2)   INCREMENT TO 3RD CCW
         ST    ERREG2,L8(CCWREG)   PLACE ADDR OF 3RD IN 2ND CCW
         MVC   L24(L1,CCWREG),L8(CCWREG)
         LH    ERREG2,DCBBUFL      GET BUFFER LENGTH
         SH    ERREG2,ERRCN4       SUBTRACT LINK FIELD
         STH   ERREG2,L22(CCWREG)   STORE IN THIRD CCW
         OI    L37(CCWREG),X80     INDICATE LAST CCW
BSCEP04A LA    CCWREG,IOBERCCW     GET START ADDRESS
         ST    CCWREG,IOBSTART     UPDATE STARTING POINT
         OI    IOSFLA,IOSERR+IOSEX   SET FLAGS TO RETRY
         OI    IOBFLAG1,IOBERRTN+IOBIOERR   ASLO IN IOB
         MVI   EWAIND1,EWAISVCF    SVC 15                      YM05652K
RETRY    EQU   *
         L     NAMEREG,TRANSRTN    LOAD NAME OF 904B           YM02594K
XCTLOUT  EQU   *
         L     ERRETR,CVTPTR       POINT TO CVT
         USING CVTMAP,ERRETR
         L     ERRETR,CVTXTLER     POINT TO XCTL ROUTINE
         DROP  ERRETR
         BR    ERRETR              XCTL
BSCEP05  EQU   *
         CLI   L2(ERREG1),EBE      E TYPE MSG RECEIVED?
         BNE   BSCEPREG
         STC   ERREG4,L1(ERREG1)   PUT LENGTH IN BUFFER
         SRL   ERREG4,L8
         STC   ERREG4,ZERO(ERREG1)
         LA    ERREG4,ERLOD12      GET RETURN ID
         STC   ERREG4,L4(ERREG1)   PUT ID IN BUFFER
         SRL   ERREG4,L8
         STC   ERREG4,L3(ERREG1)
         MVC   L6(L2,ERREG1),L4(UCBREG)   MOVE IN LINE ADDRESS
         ST    ERREG1,IOBERCCW     STORE BUFFER POINTER
         MVI   EWAIND1,EWAILD15    EXIT TO LOAD 15             YM02594K
         MVC   EWAIAREA(L4),IOBERINF   MOVE SOH% POINTER TO EWA
         B     RETRY               GO TO 904B
         EJECT
**********
*
*        EXECUTED INSTRUCTIONS
*
**********
MOVE     EQU   *
         MVC   L16(ZERO,ERREG1),L1(ERREG2)
**********
*
*        CONSTANTS
*
**********
TRANSRTN DC    F'9042'             NAME OF BTAM TRANSLATE ROUTINE
WTO1     WTO   'IEC815I                      ',MF=L,ROUTCDE=(2),       X
               DESC=(3)
LWTO1    EQU   *-WTO1              LENGTH OF PARAMETER LIST
WTO2     WTO   'IEC815I                                                X
                                ',MF=L,ROUTCDE=(2),DESC=(3)
LWTO2    EQU   *-WTO2              LENGTH OF PARAMETER LIST
WRTRSPCW DC    X'0100004060080002'
RDSKIP   DC    X'02000000B81200C0'
ERRCN1   DC    H'1'
ERRCN8   DC    H'8'
ERLOD15  DC    H'6256'
ERRCN4   DC    H'4'
SHORTMSG DC    H'17'
RITESIZE DC    H'60'
ERRCN5   DC    H'5'
OBRRTN   DC    C'TPR'
PACHAREA DC    31C'204C'           PATCH AREA FOR MAINTENANCE
**********
*
*        MISCELLANEOUS EQUATES
*
**********
ERLOD00  EQU   X'2B'               IGE0004C NAME FOR XCTL      YM05680K
IOBCSWUC EQU   X'02'               UNIT CHECK MASK             YM02566K
SKIP     EQU   X'10'
NOLERB   EQU   X'40'
TOERROR  EQU   X'01'
ZERO     EQU   X'00'               LENGTH AND DISPLACEMENT
L1       EQU   1                   LENGTH AND DISPLACEMENT
L2       EQU   2                   LENGTH AND DISPLACEMENT
L3       EQU   3                   LENGTH AND DISPLACEMENT
L4       EQU   4                   LENGTH AND DISPLACEMENT
L5       EQU   5                   LENGTH AND DISPLACEMENT
L6       EQU   6                   LENGTH AND DISPLACEMENT
L7       EQU   7                   LENGTH AND DISPLACEMENT
L8       EQU   8                   LENGTH AND DISPLACEMENT
L9       EQU   9                   LENGTH AND DISPLACEMENT
L12      EQU   12                  LENGTH AND DISPLACEMENT
L13      EQU   13                  LENGTH AND DISPLACEMENT
L14      EQU   14                  LENGTH AND DISPLACEMENT
L16      EQU   16                  LENGTH AND DISPLACEMENT
L17      EQU   17                  LENGTH AND DISPLACEMENT
L22      EQU   22                  LENGTH AND DISPLACEMENT
L24      EQU   24                  LENGTH AND DISPLACEMENT
L37      EQU   37                  LENGTH AND DISPLACEMENT
X3F      EQU   X'3F'
X30      EQU   X'30'
X08      EQU   X'08'
X03      EQU   X'03'
X40      EQU   X'40'
X88      EQU   X'88'
X80      EQU   X'80'
BIT5     EQU   4
BIT6     EQU   2
BIT7     EQU   1
DCBIOBSZ EQU   X'24'               IOB SIZE IN DCB
TPOPCODE EQU   5
ERRMAXCT EQU   7
CCWWRITE EQU   1
RTRNCDEP EQU   X'1A'
LOSTDATA EQU   2
L255     EQU   X'FF'               AND MASK
WRTCONN  EQU   X'1C'               OP TYPE FOR WRITE CONNECT
IOBRHA   EQU   X'10'
WTORTN   EQU   253
ERLOD12  EQU   2043                ERROR POST
UCBTYP   EQU   16
EBE      EQU   C'E'
EBC      EQU   C'C'
CCWTIC   EQU   X'08'
NULL     EQU   X'00'
CDE2     EQU   X'40'
CDE8     EQU   X'01'
CDE10    EQU   X'40'
INTBLCHK EQU   X'40'
DYNBF    EQU   X'08'
READINIT EQU   X'FE'
SLAVCONT EQU   X'10'                                           @ZA14138
X0A      EQU   X'0A'                                           @ZA14138
**********
*
*        REGISTER DEFINITIONS
*
**********
ERREG3   EQU   0                   WORK REG
IOSBREG  EQU   1                   IOSB BASE/PARAMETER REG
ERREG2   EQU   2                   WORK REG
EWAREG   EQU   3                   ERP WORKAREA BASE
CCWREG   EQU   4                   CCW ADDRESS REG
DECBRG   EQU   5                   DECB BASE
DCBREG   EQU   6                   DCB BASE
UCBREG   EQU   7                   UCB BASE
BASEREG  EQU   8                   PROGRAM BASE
ERREG1   EQU   9                   WORK REG
IOBRG    EQU   10                  IOB BASE
ERREG4   EQU   11                  WORK REG
ERRLNK   EQU   12                  LINK REG
NAMEREG  EQU   13                  LINK REG
ERRETR   EQU   14                  LINK REG
ERREG5   EQU   15                  LINK REG/WORK REG
         EJECT
         IECTDECB
         EJECT
         DCBD  DSORG=BX,DEVD=BS
         EJECT
         IECDRQE
         EJECT
         IEZIOB
         EJECT
CVT      DSECT
         CVT
         EJECT
         IECDERWA
**********
*
*        THE FOLLOWING DEFINITIONS ARE LOCAL FOR BTAM ERPS ONLY.
*
**********
         ORG   EWAIERP
EWAITRAN DS    F                   ADDRESS OF IECVTCCW         YM02594K
EWAITCCW DS    F                   PARALLEL TCCW               YM02594K
EWAIOVST DS    F                   ORIGINAL IOSVST CONTENTS    YM02594K
EWAIND0  DS    B                   FLAG BYTE
EWAIVISR EQU   X'10'               V=R REQUEST
EWAIPMAP EQU   X'08'               PARALLEL MAPPING DONE       YM02594K
EWAIGPRO EQU   X'04'               GETMAIN IN PROCESS          YM02594K
EWAIFPRO EQU   X'02'               FREEMAIN IN PROCESS         YM02594K
EWAIND1  DS    B                   FLAG BYTE
EWAILD00 EQU   X'80'               EXIT TO 004C                YM02594K
EWAILD15 EQU   X'40'               EXIT TO LOAD 15             YM02594K
EWAIWTOL EQU   X'20'               EXIT TO IOS WTO             YM02594K
EWAISTAT EQU   X'10'               EXIT TO STAT UPDATE         YM05652K
EWAISVCF EQU   X'08'               SVC 15/SVC 3                YM05652K
EWAIND2  DS    B                   FLAG BYTE
EWAIND3  DS    B                   FLAG BYTE
EWAIAREA DS    20F                 SAVE AREA FOR MA OR AREA FOR WTO
EWAISAVE DS    2F                  TEMPORARY SAVE AREA
EWAIEXIT DS    4F                  ESATE PARAMETER LIST
*********  END OF BTAM LOCAL DEFINITIONS **********
         EJECT
         IECDIOSB
         END
