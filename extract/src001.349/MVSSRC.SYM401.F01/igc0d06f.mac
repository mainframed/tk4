         TITLE  'IGC0D06F  -  ON-LINE TEST CONTROL MODULE    '
IGC0D06F CSECT
***********************************************************************
*                                                                     *
* STATUS -            CHANGE LEVEL 003, OCTOBER 21,1974               *
*                                                                     *
* FUNCTION -   SERVICE BSC ON-LINE-TEST REQUESTS FOR BTAM.            *
*                                                                     *
*                   1. SELECTS APPROPRIATE SECOND SVC LOAD            *
*                      ACCORDING TO VALUE GIVEN XX= AND TRANSMISSION  *
*                      CODE.                                          *
*                                                                     *
*              VALIDATES REQUEST FOR TEST MESSAGES AND XCTL'S         *
*              TO APPROPRIATE DEVICE DEPENDENT SUBSEQUENT LOAD.       *
*                                                                     *
* ENTRY POINT- ENTRY IS TO FIRST EXECUTABLE INSTRUCTION.              *
*                                                                     *
* INPUT -             REGISTER 1 - ADDRESS OF THE IOB                 *
*                     ADDRESS OF RFT MESSAGE IN IOBERINF INSERTED     *
*                        BY IGG019MB (CHANNEL END).                   *
*                     ADDRESS OF PARAMETER LIST IN IOBERINF+4 (FOR    *
*                        START-STOP ONLY) INSERTED BY IGG019MR        *
*                        (TERMINAL TEST CONTROL MODULE).              *
*                                                                     *
* OUTPUT -            REGISTER 1 - ADDRESS OF IOB                     *
*                                                                     *
* EXTERNAL ROUTINES - EXECUTE CHANNEL PROGRAM ROUTINE                 *
*                                                                     *
* EXITS -             IF AN UNSUCCESSFUL CONDITION IS MET, A RETURN   *
*                        TO THE USER ADDRESS IN REG 14.               *
*                                                                     *
*                     XCTL TO APPROPRIATE SUBSEQUENT LOAD.            *
*                                                                     *
* DECERRST:                                                           *
*     .... ...1  RFT ERROR BIT.                                       *
*                     AN INVALID REQUEST WAS RECEIVED ON A READ       *
*                     CONTINUE OPERATION AND BTAM COULD NOT SUCCESS-  *
*                     FULLY RESET THE LINE PRIOR TO POSTING.          *
*                                        OR                           *
*                     ON A 3275 DIAL DEVICE, THE RFT MESSAGE WAS      *
*                     TRANSMITTED THE SPECIFIED NUMBER OF TIMES,      *
*                     FOLLOWED BY A WRITE RESET. THE RESPONSE TO      *
*                     THE WRITE RESET INDICATES AN ERROR CONDITION.   *
*                                                                     *
*                                                                     *
* ATTRIBUTES - THIS ROUTINE IS REENTRANT.                             *
*                                                                     *
* CHANGE ACTIVITY AS FOLLOWS:                                         *
*                                                                     *
*     ZA00532 (10/18/74)                                              *
*     ZA02332  (11/20/74)        ZA02333  (11/20/74)                  *
*     AZ03978  (04/24/75)                                             *
*     AZ06398  (11/05/75)        AZ06401  (11/05/75)                  *
*     AZ09321  (03/11/76)        AZ13191  (09/20/76)                  *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
PARMREG  EQU   0                   PARAMETER REGISTER       LD @ZA02332
IOBREG   EQU   1                   IOB REGISTER             LD @ZA02332
DEBREG   EQU   2
CHKREG   EQU   2
SAVEAREG EQU   2
PARREG   EQU   3
TYPEREG  EQU   4
CMPCNTRG EQU   4
MUTPREG  EQU   5
BASEREG  EQU   6
IOREG    EQU   7
TESTREG  EQU   8
LENGTREG EQU   9
CNTREG   EQU   9
ADREG    EQU   10
DCBREG   EQU   11
DECBREG  EQU   12
UCBREG   EQU   13
         SPACE   4
         BALR  BASEREG,0
         USING *,BASEREG
         USING IECTIOB,1                *
         USING IECTDEB,DEBREG           * DSECTS FOR CONTROL BLOCKS
         USING IHADCB,DCBREG            *
         USING IECTDECB,DECBREG
         B     A                                               @YA02157
         DC    CL8'IGC0D06F'            MODULE IDENTIFIER      @YA02157
         DC    C'** MVS *'
         DC    C'&SYSDATE'         DATE LAST ASSEMBLY       LD @ZA02332
PATCH    DC    48X'00'                  PATCH AREA             @YA02157
A        DS    0H                                              @YA02157
         L     DECBREG,IOBECBPT
         L     DCBREG,IOBDCBPT          LOAD DCB ADDRESS
         L     DEBREG,DCBDEBAD          LOAD POINTER TO DEB
         L     DEBREG,28(DEBREG)        LOAD ADDR. OF TRUE START OF DEB
         SR    UCBREG,UCBREG            CLEAR REGISTER
         IC    UCBREG,IOBUCBX           GET INDEX TO UCB FOR THIS LINE
         SLL   UCBREG,2                 MULTIPLY BY FOUR
         L     UCBREG,DEBUCBAD(UCBREG)  GET UCB ADDRESS FOR THIS LINE
BISNTST  L     TESTREG,IOBERINF        GET RFT MESSAGE AREA ADDR   000D
         LA    CNTREG,XXYYLNG          SET CTR TO 4            @YA01056
         LA    ADREG,XXDISP(TESTREG)   GET ADDR OF XX FIELD    @YA01056
NUMLOOP  EQU   *                                               @YA01056
         TM    DCBXCODE,DCBXCEBC      IS THIS EBCDC?           @ZA03978
         BZ    EBCDCNUM               YES BRANCH TO EBCDC      @ZA09321
ASCIINUM TM    ZERO(ADREG),X30        IS THIS A VALID          @ZA03978
*                                     NUMBER FOR ASCII?        @ZA03978
         BNO   INVALID                NO, SET ON ERROR BIT     @ZA03978
         B     VALIDNUM                                        @ZA03978
EBCDCNUM TM    ZERO(ADREG),NUMERIC    IS THIS A VALID          @ZA03978
*                                     NUMBER FOR EBCDC         @ZA03978
         BNO   INVALID                NO, SET ON ERROR BIT     @ZA03978
VALIDNUM LA    ADREG,INCR(ADREG)      INCREMENT COUNT          @ZA03978
         BCT   CNTREG,NUMLOOP          LOOP AND CHECK          @YA01056
         NI    6(TESTREG),ZONEOFF  AND OFF ZONES IN N FIELD    @YA02157
         IC    CNTREG,6(TESTREG)   PUT N VALUE IN CNTREG       @YA02157
         AR    ADREG,CNTREG        ADD N VALUE TO ADREG        @YA02157
         LA    ADREG,INCR(ADREG)   BUMP PAST LAST ADR BYTE     @YA02157
*
*        TWO LINES HAVE NEEN DELETED FOR APAR OZ00532       LD @ZA00532
*
         CLC   ZERO(DISP1,ADREG),DCBBSETX  IS IT AN ETX        @ZA06401
         BE    PACK                YES CONTINUE                @ZA06401
         CLC   ZERO(DISP1,ADREG),DCBBSSTX   IS IT AN STX       @ZA06401
         BE    PACK                 YES CONTINUE               @ZA06401
         CLC   ZERO(L2,ADREG),DCBBSTSX   XPARENT STX ??        @ZA06401
         BE    PACK               YES CONTINUE                 @ZA06401
INVALID  EQU   *                                               @YA01056
         NI    IOBINCAM,X'C0'          TURN OFF RFT ERROR BIT  @YA02157
         CLI   DECTYPE+1,READTT        WAS IT A READ TT?       @YA02157
         BE    WRTEOT                  YES, BRANCH             @ZA06398
         XI    IOBSNDPT,FLIP           RESTORE ACK POINTER     @YA02157
         TM    DCBBFTEK,DYNBUF     TEST FOR DYN BUF         LD @ZA02333
         BZ    AUTOTEST            BRANCH IF NOT            LD @ZA02333
         L     TESTREG,IOBCSW      GET CSW ADDRESS          LD @ZA02333
         SH    TESTREG,HWRD8       SUBSTRACT 8              LD @ZA02333
         OI    DISP5(TESTREG),FIRSTPCI  TURN ON FIRST PCI   LD @ZA02333
         MVI   DISP8(TESTREG),X02  CHANGE TIC TO RD SKIP    LD @ZA02333
AUTOTEST EQU   *                                            LD @ZA02333
         TM    17(UCBREG),AUTOPOLL     AUTOPOLL DEVICE?        @YA02157
         BZ    EXCP                    GO SET UP CHAN PGM      @YA02157
         OI    DECTYPE,X'80'           SET AUTOPOLL FLAG       @YA02157
         B     EXCP                    GO SET UP CHAN PGM      @YA02157
PACK     EQU   *                                               @YA01056
         MVC   IOBERINF+4(4),2(TESTREG)   SAVE X AND Y VALUES      000D
         PACK  IOBERINF+8(8),2(2,TESTREG) PREPARE ZONED X-OPERAND  000D
*        TWO LINES OF CODE DELETED BY APAR --------------->    @ZA13191
         OI    IOBERINF+L15,X0C         CONVERT TO PLUS SIGN   @ZA13191
*        ONE LINE OF CODE DELETED BY --------------------->    @ZA13191
         NI    IOBERINF+L15,SIGN        ZERO LOW ORDER BITS    @ZA03978
         CVB   TYPEREG,IOBERINF+DISP8                          @ZA03978
         PACK  IOBERINF+DISP8(L8),DISP4(L2,TESTREG)            @ZA03978
*                                      PREPARE ZONED Y-OPERAND @ZA03978
*        TWO LINES OF CODE DELETED BY APAR ---------------->   @ZA13191
         OI    IOBERINF+L15,X0C         CONVERT TO PLUS SIGN   @ZA13191
*        ONE LINE OF CODE DELETED BY APAR ---------------->    @ZA13191
         NI    IOBERINF+L15,SIGN        ZERO LOW ORDER BITS    @ZA03978
         CVB   PARREG,IOBERINF+DISP8                           @ZA03978
         STC   PARREG,IOBWORK           STORE Y-VALUE IN Y-COUNTER  00D
         CLI   IOBWORK,ZERO            ZERO Y COUNT INVALID      A28609
         BNE   ZEROFLD                 NO, CONTINUE              A28609
*     ONE LINE OF CODE DELETED BY ---------------------->      @ZA06398
         B     TERRB             TURN ON ERROR BIT & EXIT      @ZA06398
ZEROFLD  XC    IOBCPA(64),IOBCPA        CLEAR OUT CHAN PGM AREA  A27602
         SPACE 2
         TM    DECDCBAD,ONLT           DID THIS PROGRAM ISSUE ONLTST
         BO    RFTSENT
         CLC   2(2,TESTREG),ZEROS      IS X FIELD EQUAL ZERO       000D
         BE    CODE00                   IF REC D RFT AND X = 0     000D
         OI    DECDCBAD,BIT40ON        SET X FLAG IN DECB TO ONE  M4299
         SR    ADREG,ADREG              CLEAR REGISTER             000D
*        ONE LINE OF CODE DELETED BY APAR -------------->      @ZA13191
         TM    17(UCBREG),X'40'         IS THIS A MULTIPOINT LINE  000L
         BZ    POINTPT                                             000L
         CLI   6(TESTREG),X'00'                                @YA01057
         BZ    TERRB                   TURN ON ERR BIT AND RET @YA01057
         CLI   6(TESTREG),X'06'                                @YA01057
         BNH   BYPAC                                           @YA01057
TERRB    OI    IOBINCAM,X'02'          TURN ON ERROR BIT       @YA01057
         B     EXCP                                            @YA01057
BYPAC    IC    ADREG,6(TESTREG)       GET LENGTH OF 'TO' FIELD @YA01057
         BCTR  ADREG,0                 DECREMENT FOR EXECUTE       000D
         EX    ADREG,INSTRUCT           EXECUTE MOVE INSTRUCTION   000D
         LA    ADREG,1(ADREG)                                      000D
         IC    PARREG,DCBBSENQ          GET ENQ CHARACTER AND    A27602
         STC   PARREG,IOBERINF+10(ADREG)  PUT W/ ADDR CHARACTERS   000D
         LA    PARREG,IOBERINF+10      GET ADDRESS OF ADDRESSING   000D
         ST    PARREG,IOBCPA+24           CHARS AND STORE IN CCW A27602
         LA    ADREG,1(ADREG)           ADD 1 TO CHAR COUNT - ENQ  000D
         STH   ADREG,IOBCPA+30          STORE COUNT IN CHANNEL PGM27602
         BCTR  ADREG,0                                           A27611
         LA    PARREG,DCBBSEOT          GET ADDRESS OF EOT       A27602
         ST    PARREG,IOBCPA+16         GENERATE WRITE EOT CCW   A27602
TSTGENPL EQU   *
         TM    IOBINCAM,GENPOLL         GENERAL POLL CTL UNIT ?
         BZ    TESTACK                  NO, TEST ACK
         LA    PARREG,DCBBSRVI          GET ADDR OF RVI SEQUENCE
         B     STORE                    GO STORE IT IN CCW
TESTACK  TM    IOBSNDPT,ACKPTR          IS ACK TO BE ACK-0         000D
         BNZ   ACK1                     NO, GET ACK-1 ADDRESS      000D
         LA    PARREG,DCBBSAK0          GET ACK-0 ADDRESS AND      000D
STORE    ST    PARREG,IOBCPA              STORE IN CCW             000D
         LA    MUTPREG,7(TESTREG,ADREG) BUMP REGISTER TO TEXT      000D
         ST    MUTPREG,IOBCPA+40        STORE INTO CCW           A27602
         LA    PARREG,DECRESPN          GET DECB RESPONSE FIELD    000D
         ST    PARREG,IOBCPA+8            ADDRESS AND STORE IN CCW 000D
         ST    PARREG,IOBCPA+32           *                      A27602
         ST    PARREG,IOBCPA+56            *                     A27602
         LA    PARREG,DCBBSTEX          GET TRANSPARENT END CHARS  000D
         ST    PARREG,IOBCPA+48          ADDRESS AND STORE       A27602
         OC    IOBCPA(64),SENDLONG      OR IN COMPLETE CHAN PGM  A27602
         TM    IOBINCAM,RFTERR          IS ERROR BIT ON?       @YA01056
         BO    EXCP                     YES, START CHAN PGM    @YA01056
         CH    TYPEREG,BIN34         IS X AN ALLOWABLE VALUE   @ZA13191
         BNH    XCTL                   YES, LOAD PROPER MODULE     000D
*     ONE LINE OF CODE DELETED BY ---------------------->      @ZA06398
         B     TERRB                SET ERROR BIT & EXIT       @ZA06398
WRTEOT   EQU   *                                               @ZA06398
*    IF AN RFT READ ON A READ TT IS INVALID, BTAM WILL ISSUE   @ZA06398
*    A NOP TO GET BACK TO IGG019MR, WHICH WILL THEN WRITE EOT  @ZA06398
*    TO RESET THE LINE. IGG019MR WILL POST THE READ COMPLETE   @ZA06398
*    WITH EOT IN THE USER'S BUFFER.                            @ZA06398
         MVC   IOBCPA(ONECCW),RECLONG+TWOCCW  MOVE IN NOP CCW  @ZA06398
         NI    IOBCPA+CCWFLAGS,FOXFOX-CMCH TURN OFF CMD CHAIN  @ZA06398
         B     EXCP                     RETURN                 @ZA06398
         SPACE 2                                                    00D
ACK1     LA    PARREG,DCBBSAK1          GET ADDRESS OF ACK-1        00D
         B     STORE                                                00D
         SPACE 2
INSTRUCT MVC   IOBERINF+10(1),7(TESTREG) MOVE ADDR. CHARS TO IOB   000D
         SPACE 2
POINTPT  EQU   *                                                   000D
         IC    ADREG,6(TESTREG)         GET LENGTH OF 'TO' FIELD   000L
         LA    PARREG,DCBBSENQ         GET ENQ ADDRESS AND         000D
         ST    PARREG,IOBCPA+24         STORE IN CCW             A27602
         OI    IOBCPA+16,NOOP           PUT IN NO-OP COMMAND     A27602
         B     TESTACK                  SEE IF GEN POLL CU       S99245
CODE00   LA    PARREG,DCBBSAK1         GET ACK-1 ADDRESS AND       000D
         ST    PARREG,IOBCPA+32        STORE                      M4299
         ST    TESTREG,IOBCPA+40       STORE DATA ADDRESS IN CCW  M4299
         OC    IOBCPA+32(16),RECSHORT  OR IN COMPLETE CHAN PROG   M4299
         LH    PARREG,IOBCSW+6          LOAD THE RESIDUAL COUNT    000D
         LA    PARREG,9(PARREG)         ADD LENGTH OF RFT MESSAGE  000D
         STH   PARREG,IOBCPA+46        STORE COUNT INTO READ CCW  M4299
         LA    PARREG,IOBCPA+32        LOAD ADDRESS OF CHAN PROG  M4299
         B     EXCP2                   BRANCH TO EXECUTE          M4299
         SPACE 2
RFTSENT  CLC   2(2,TESTREG),ZEROS       DOES X = 0                 000D
         BE    CODE40                   IF SO, BRANCH              000D
         OI    DECDCBAD,BIT40ON        SET X FLAG IN DECB TO ONE
         LA    PARREG,DCBBSEOT          GET EOT ADDRESS AND STORE  000D
         ST    PARREG,IOBCPA                 IN CCW              A27602
         LA    PARREG,DECRESPN          GET DECB RESPONSE FIELD    000D
         ST    PARREG,IOBCPA+24           ADDR AND STORE IN CCW    000D
         LA    PARREG,DCBBSAK0          GET ACK-0 ADDRESS AND      000D
         ST    PARREG,IOBCPA+32           STORE                    000D
         ST    TESTREG,IOBCPA+40       STORE TEXT ADDRESSS IN CCW  000D
         OC    IOBCPA(48),RECLONG       OR IN COMPLETE CHANNEL PGM 000D
         NI    IOBCPA+44,X'BF'          TURN OFF CC FLAG         A27602
         MVI   IOBCPA+7,X'01'           COUNT FOR EOT            A27602
         MVI   IOBCPA+31,X'02'          COUNT FOR RESPONSE       A27602
         B     EXCP                                                 00D
         SPACE 2
CODE40   LH    PARREG,DECLNGTH         GET COUNT OF RFT MESSAGE    000D
         STH   PARREG,IOBCPA+46  STORE NEW COUNT IN CH PROG    @ZA13191
         L     MUTPREG,DECPOLPT        GET MESSAGE ADDRESS         000D
         ST    MUTPREG,IOBCPA+40        STORE IN CHANNEL PROGRAM A27602
         LA    PARREG,DCBBSTEX          LOAD ADDR OF TRANSPARENT   000D
         ST    PARREG,IOBCPA+48              END CHARS FOR CCW   A27602
         LA    PARREG,DECRESPN          GET DECB RESPONSE FIELD    000D
         ST    PARREG,IOBCPA+56              ADDR AND PUT IN CCW A27602
         OC    IOBCPA+40(24),SENDSHRT   OR IN COMPLETE CHAN PROG A27602
         CLC   0(2,MUTPREG),DCBBSTSX   IS TRANSPARENT TEXT USED    000D
         BE    LOADADDR
         SPACE 2
NORMAL   MVC   IOBCPA+48(8),IOBCPA+56   OVERLAY WR END CHARS     A27602
LOADADDR LA    PARREG,IOBCPA+40         GET CHANNEL PGM ADDR     A27602
         B     EXCP2                                               000D
EXCP     LA    PARREG,IOBCPA            GET CHANNEL PROGRAM ADDR    00D
EXCP2    ST    PARREG,IOBSTART         STORE IN IOB                000D
         XC    IOBUCBX+2(4),IOBUCBX+2   CLEAR COUNTERS              00D
         LR    MUTPREG,IOBREG      SAVE ADDR OF IOB         LD @ZA02332
         L     PARMREG,GETPARM     SET SUBPOOL & LENGTH     LD @ZA02332
         GETMAIN R,LV=(0)          GET 8 BYTES FOR ECB      LD @ZA02332
         LR    LENGTREG,IOBREG     SAVE NEW ECB ADDR        LD @ZA02332
         LR    IOBREG,MUTPREG      RESTORE IOB ADDR         LD @ZA02332
         ST    DECBREG,DISP4(LENGTREG) SAVE DECB ADDR       LD @ZA02332
         MVI   DISP4(LENGTREG),FOXFOX  FLAG AS DUMMY        LD @ZA02332
         STCM  LENGTREG,MASK,IOBECBPT+DISP1 POINT IOB...    LD @ZA02332
*                                  ...TO DUMMY              LD @ZA02332
         SVC   ZERO                EXCP                     LD @ZA02332
         STCM  DECBREG,MASK,IOBECBPT+DISP1  REPOINT IOB...  LD @ZA02332
*                                  ...TO DECB               LD @ZA02332
         L     PARMREG,GETPARM     SET UP FOR FREEMAIN      LD @ZA02332
         FREEMAIN R,LV=(0),A=(LENGTREG) FREE DUMMY ECB      LD @ZA02332
         SVC   3                       RETURN                      000D
         SPACE 2                                                    00D
XCTL     SLL   TYPEREG,1                MULTIPLY INDEX BY 2        000D
         LH    PARREG,NAMTABLE-CHAR2(TYPEREG) GET ID OF NEXT
         SRL   TYPEREG,1            RESTORE XX VALUE               4122
         STC   PARREG,IOBERCCW+4        STORE IN MODULE NAME
         SRL   PARREG,8
         STC   PARREG,IOBERCCW+3
LOADIT   LA    PARREG,IOBERCCW         GET ADDRESS OF MODULE NAME  000D
         XCTL  EPLOC=(3)               LINK TO NEXT LOAD           000D
         SPACE 4
         SPACE 2                                                   000D
NAMTABLE DC    CL2'07'    X=1 MESSAGE                              000D
         DC    CL2'08'    TRANSPARENT EBCDIC MESSAGE               000D
         DC    CL2'07'    X=TRANSPARENT USASCII MESSAGE             00D
         DC    CL2'08'    X=NORMAL EBCDIC MESSAGE                   00D
         DC    CL2'07'    X=NORMAL USASCII MESSAGE                  00D
         DC    CL2'07'    X=ALPHAMERIC USASCII MESSAGE              00D
         DC    CL2'07'    X=USASCII PRINTER MESSAGE                 00D
         DC    CL2'07'    X=USASCII PUNCH MESSAGE                   00D
         DC    CL2'07'    X=TRANSCODE PRINTER MESSAGE               00D
         DC    CL2'07'    X=TRANSCODE PUNCH MESSAGE                 00D
         DC    CL2'07'    X=TRANSCODE MULTIPOINT MESSAGE            00D
         DC    CL2'08'    X=EBCDIC PRINTER MESSAGE                  00D
         DC    CL2'08'    X=EBCDIC PUNCH MESSAGE                    00D
         DC    CL2'08'    X=EBCDIC ALPHAMERIC MESSAGE               00D
         DC    CL2'08'    X=EBCDIC WEAK PATTERN MSG -SWITCHED       00D
         DC    CL2'08'    X=EBCDIC WEAK PATTERN MSG -LEASED         00D
         DC    CL2'07'    X=TRANSCODE WEAK PATRN - SWITCHED         00D
         DC    CL2'07'    X=TRANSCODE WEAK PATRN - LEASED           00D
         DC    CL2'08'    X=EBCDIC WEAK PATRN -DLE SYN INSERTN      00D
         DC    CL2'08'    X=EBCDIC 80 CHAR TRANSPARENT MESSAGE     000L
         DC    CL2'08'    X=EBCDIC 120 CHAR TRANSPARENT MESSAGE    000L
         DC    CL2'08'    X=EBCDIC 144 CHAR TRANSPARENT MESSAGE    000L
         DC    CL2'0E'    3270 BASIC EBCDIC
         DC    CL2'0E'    3270 MOD 1 ALIGN EBCDIC
         DC    CL2'14'    3270 MOD 2 ALIGN EBCDIC
         DC    CL2'0F'    3270 ORDERS EBCDIC
         DC    CL2'0F'    3270 BASIC PRINTER EBCDIC
         DC    CL2'13'    3270 NL/EOM PRINTER EBCDIC
         DC    CL2'10'    3270 BASIC ASCII
         DC    CL2'10'    3270 MOD 1 ALIGN ASCII
         DC    CL2'11'    3270 MOD 2 ALIGN ASCII
         DC    CL2'10'    3270 ORDERS ASCII
         DC    CL2'11'    3270 BASIC PRINTER ASCII
         DC    CL2'11'    3270 NL/EOM PRINTER ASCII
         SPACE 2
ZEROS    DC    4X'F0'
  SPACE  2
         DS    0D                ALLIGNMENT FOR CCWS
SENDLONG DC    X'01'                    *                          000D
         DC    AL3(0)                   **   WRITE RESPONSE CCW    000D
         DC    X'60400002'              ***                        000D
         DC    X'02'                    *                          000D
         DC    AL3(0)                   **   READ TEXT CCW         000D
         DC    X'20400002'              ***                        000D
         DC    X'01'                    *                        A27602
         DC    AL3(0)                   **   WRITE EOT           A27602
         DC    X'60400001'              ***                      A27602
         DC    X'01'                    *                          000D
         DC    AL3(0)                   **   WRITE ENQ CCW         000D
         DC    X'60400001'              ***                        000D
         DC    X'02'                    *                          000D
         DC    AL3(0)                   **   READ RESPONSE CCW     000D
         DC    X'20C00002'              ***                        000D
SENDSHRT DC    X'01'                    *                          000D
         DC    AL3(0)                   **   WRITE TEXT CCW        000D
         DC    X'60000000'              ***                        000D
         DC    X'01'                    *                          000D
         DC    AL3(0)                   **   WRITE ENDING CHARS CCW000D
         DC    X'60000002'              ***                        000D
         DC    X'02'                    *                          000D
         DC    AL3(0)                   **   READ RESPONSE CCW     000D
         DC    X'20800002'              ***                        000D
RECLONG  DC    X'01'                    *                        A27602
         DC    AL3(0)                   **   WRITE EOT CCW         000D
         DC    X'60400001'              **                         000D
         DC    X'06'                    *                          000D
         DC    AL3(0)                   **   PREPARE CCW           000D
         DC    X'60400001'              ***                        000D
         DC    X'03'                    *                        A27602
         DC    AL3(0)                   **                       A27602
         DC    X'60400001'              ***  NO-OP CCW           A27602
         DC    X'02'                    *                          000D
         DC    AL3(0)                   **   READ ENQ CCW          000D
         DC    X'20C00002'              ***                        000D
RECSHORT DC    X'01'                    *                          000D
         DC    AL3(0)                   **                         000D
         DC    X'60000002'              ***  WRITE RESPONSE CCW    000D
         DC    X'02'                    *                          000D
         DC    AL3(0)                   **   READ TEXT CCW         000D
         DC    X'2080012C'              ***                        000D
GETPARM  DC    X'FA000008'         SUBPOOL # AND LENGTH     LD @ZA02332
FOXFOX   EQU   X'FF'               ALL ONES                 LD @ZA02332
MASK     EQU   7                   MASK FOR STCM            LD @ZA02332
         SPACE 2
BIN34    DC    H'34'                    MAXIMUM TEST NUMBER    @ZA13191
HWRD8    DC    X'0008'                                      LD @ZA02333
CHAR2    EQU   2                   LENGTH OF ID IN NAMTABLE
DYNBUF   EQU   X'08'                                        LD @ZA02333
FIRSTPCI EQU   X'40'                                        LD @ZA02333
ZERO     EQU   X'00'                                             A28609
P0       EQU   X'15'
ENQCHAR  EQU   X'2D'                                               000D
ONLT     EQU   X'80'
BIT40ON  EQU   X'40'
SIGN     EQU   X'FC'                                                00D
ZONEOFF  EQU   X'0F'                                                00D
ACKPTR   EQU   X'FF'                                                00D
NOOP     EQU   X'03'                    CHANGE WRITE TO NO-OP    A27602
GENPOLL  EQU   X'10'               GEN POLL CTL UNIT BIT
XXDISP   EQU   2                   DISP OF XX VALUE IN STD RFT @YA01056
XXYYLNG  EQU   4                   LENGTH OF XX,YY FIELDS      @YA01056
NUMERIC  EQU   X'F0'               NUMERIC ZONE                @YA01056
INCR     EQU   1                   USED TO INCR CTR BY 1       @YA01056
RFTERR   EQU   X'02'               RFT ERROR BIT IN IOBINCAM   @YA01056
READTT   EQU   X'03'                    READ CONTINUE OP TYPE  @YA02157
FLIP     EQU   X'02'                    ACK POINTER FLIPPER    @YA02157
AUTOPOLL EQU   X'40'                    AUTOPOLL FLAG IN DECB  @YA02157
DISP1    EQU   1                                            LD @ZA02332
L2       EQU   2                                               @ZA03978
DISP4    EQU   4                                            LD @ZA02332
L4       EQU   4                                               @ZA03978
DISP5    EQU   5                                            LD @ZA02333
DISP8    EQU   8                                            LD @ZA02333
L8       EQU   8                                               @ZA03978
L15      EQU   15                                              @ZA03978
X02      EQU   X'02'               READ SKIP OP-CODE        LD @ZA02333
X0C      EQU   X'0C'                                           @ZA13191
X30      EQU   X'30'                                           @ZA03978
ONECCW   EQU   8          LENGTH OF ONE CCW                    @ZA06398
TWOCCW   EQU   16        LENGTH OF TWO CCWS                    @ZA06398
CCWFLAGS EQU   4         DISPLACEMENT IN CCW FLAGS             @ZA06398
CMCH     EQU   X'40'      COMMAND CHAINING BIT                 @ZA06398
         EJECT
         CNOP   0,8
         DCBD  DSORG=BX,DEVD=BS
         EJECT
         IECTDECB
         EJECT
         IECTDEBX
         EJECT
         IECTIOBX
         END
