         TITLE '  IGC0C06F - 2740C ONLINE TEST MODULE '
IGC0C06F CSECT
         SPACE 2
* STATUS -          CHANGE LEVEL 000    JULY 11, 1969
         SPACE 2
*
*
* FUNCTION -        GENERATE CHANNEL PROGRAM FOR 2740 ON LINE TESTS
*
*
* ENTRY POINT -     ENTRY IS TO FIRST INSTRUCTION FROM HEADER ANALYSIS
*                   MODULE
*
*
* INPUT -           REGISTER 1 - ADDRESS OF IOB
*                   REGISTER 14 - RETURN ADDRESS
*
*
* OUTPUT -          1.  GENERATED CHANNEL PROGRAM
*                   2.  UPDATED USAGE COUNT AND POINTER IN
*                       TERMINAL TEST MODULE (IGG019MR)
*
*
* EXTERNAL ROUTINE -SVC 4 ROUTINE (GETMAIN)
*
*
* EXIT -            RETURN TO ADDRESS IN REGISTER 14
*
*
* INLINE ROUTINES -THE INPUT MESSAGE IS LOCATED THROUGH THE PARAMETER
*                   LIST AND IS ANALYZED FOR TYPE OF REQUEST.  CCW'S
*                   FOR THE PROPER DATA AND CONTROL PURPOSES ARE FORMED
*                   IN THE CCW AREA OF THE IOB.  IF THE REQUESTED DATA
*                   PATTERN IS NOT IN USE, CORE WILL BE OBTAINED AND
*                   THE PATTERN MOVED INTO THE NEW AREA.  IF NO CORE IS
*                   AVAILABLE, THE TEST REQUEST WILL BE SWITCHED TO THE
*                   TERMINAL SPECIFIED IN THE TEST REQUEST.
*                   A SUB-ROUTINE--
*
*                        A.  SETS UP THE ADDRESS FOR THE CHANNEL
*                            PROGRAM.
*                        B.  DETERMINES IF DIAL CCW'S ARE REQUIRED AND
*                            PREPARES THEM IF NEEDED.
*                        D.  MOVES THE BASIC CCW'S INTO THE CCW AREA OF
*                            THE IOB.
*
*
* ATTRIBUTES -      THIS ROUTINE IS EXECUTED IN THE SVC TRANSIENT AREA
*                   AS A TYPE 4 SVC ROUTINE, ENABLED,PRIVILEGED AND
*                   REENTRANT.
*
         EJECT
*
*
*
         BALR  BASEREG,0
         USING *,BASEREG
         USING IHADCB,DCBREG
         USING IECTIOB,IOBREG
         USING IECTDECB,DECBREG
         USING PARMLIST,PARREG
*
         LR    IOBREG,1                 LOAD IOB ADDRESS
         L     PARREG,IOBPARM           LOAD PARAMETER LIST ADDRESS
         L     IOREG,IOBAREA            LOAD I/O AREA ADDRESS
         L     DECBREG,IOBECBPT         ADDRESS OF DECB
         L     DCBREG,DECDCBAD          ADDRESS OF DCB
         CLI   6(IOREG),ONE             BRANCH IF
         BE    MSGSWTCH                           SWITCH TEST (1)
         CLI   6(IOREG),FIVE            BRANCH IF
         BE    COMP                     COMPARE TEST (5)
         SR    TESTREG,TESTREG          CLEAR TEST REGISTER
         IC    TESTREG,6(IOREG)         INSERT TEST SEL. CHARACTER
         SRA   TESTREG,1                SHIFT OUT PARITY BIT
         IC    TESTREG,TESTCODE-2(TESTREG)   SET UP INDEXING
         L     PATRNREG,PATTERN         GET ADDRESS OF PATTERN NAME TBL
         LA    WORKREG,0(TESTREG,PATRNREG)
         CLI   0(WORKREG),X'00'         BRANCH IF THIS PATTERN
         BE    NOTINUSE                                   IS NOT IN USE
         IC    WORKREG,0(TESTREG,PATRNREG)   1-UP
         LA    WORKREG,1(WORKREG)             USAGE
         STC   WORKREG,0(TESTREG,PATRNREG)     COUNT
*
SETCCWS  EQU   *
         BAL   LINKREG,SETCCWRG
         L     WORKREG,0(TESTREG,PATRNREG)
         IC    WORKREG3,0(WORKREG)     INSERT PATTERN AREA COUNT
         LA    WORKREG,1(WORKREG)       ADDRESS OF DATA TO BE SENT
         ST    WORKREG,32(CCWREG)       PUT IN CCW
         MVI   32(CCWREG),X'01'         RESTORE OP CODE
         SR    WORKREG,WORKREG          CLEAR WORKING REGISTER
         IC    WORKREG,0(TESTREG,PATRNREG)   CHARACTER COUNT
         BCTR  WORKREG3,0              REDUCE BY ONE
         STC   WORKREG3,39(CCWREG)     PUT IN CCW
         STC   TESTREG,8(DECBREG)       PUT DISPLACEMENT
*
FINCCWS  EQU   *
         TM    DCBERROP+2,X'08'        TEST FOR STC
         BZ    RETURN1                 ZERO MEANS NOT STC
         L     WORKREG2,NLIDLES        ADDRESS OF EOA, CR AND IDLES
         LA    WORKREG,25(WORKREG2)    ADDRESS OF CIRCLE C AND CIRCLE S
         ST    WORKREG,0(CCWREG)        PUT IN CCW
         MVI   0(CCWREG),X'01'          RESTORE OP CODE
*
         ST    WORKREG2,24(CCWREG)     STORE ADDRESS IN CCW
         MVI   24(CCWREG),X'01'        RESTORE WRITE OP CODE
*
         LA    WORKREG,26(DECBREG)      GET ADDRESS OF RESPONSE AREA
         ST    WORKREG,16(CCWREG)       PUT IN CCW
         MVI   16(CCWREG),X'02'         RESTORE OP CODE
*
         LA    WORKREG,33(IOBREG)       GET ADDRESS OF ADDRESSING CHARS
         ST    WORKREG,8(CCWREG)        PUT IN CCW
         MVI   8(CCWREG),X'01'          RESTORE OP CODE
*
RETURN1  BR    RETURN
*
NOTINUSE L     GETMAIN,0(PATRNREG)      ADDRESS OF GETMAIN CONSTANTS
         EX    0,DATAADDR-4(TESTREG)         ADDRESS OF DATA TO MOVE
         LA    TOREG,0(TESTREG,PATRNREG)     ADDRESS OF THE TABLY ENTRY
         ST    TOREG,4(GETMAIN)         PUT IN GETMAIN CONSTANTS
         SR    WORKREG,WORKREG          CLEAR WORKING REGISTER
         IC    WORKREG,0(FROMREG)       CHARACTER COUNT OF DATA
         ST    WORKREG,0(GETMAIN)       PUT IN GETMAIN CONSTANTS
         SVC   4                        ISSUE GETMAIN SVC
         SLL   15,24                    ELIMINATE HIGH ORDER BITS
         NR    15,15                    TEST FOR ZERO RETURN CODE
         BNE   MSGSWTCH                 NON-ZERO IS NO CORE AVAILABLE
         MVI   0(TOREG),X'01'           SET USAGE COUNT TO ONE
         L     TOREG,0(TOREG)           GET ADRESS OF DATA AREA
         BCTR  WORKREG,0                ADJUST COUNT FOR MVC INST
         EX    WORKREG,EXMVC            MOVE THE DATA
         B     SETCCWS
         EJECT
SETCCWRG LA    CCWREG,IOBCPA            START OF CHANNEL
*                                       PROGRAM AREA
         ST    CCWREG,IOBSTART          START HERE
         TM    DCBERROP+2,X'0C'         S CONTROL OR XCONTROL
         BM    CHECKSC                  BRANCH IF EITHER
         SPACE 2
MOVE     MVC   0(16,CCWREG),CHANPROG+24 BASE CHANNEL PROGRAMS
         L     WORKREG2,NLIDLES         ADDR OF NLIDLES IN IGG019MR
         ST    WORKREG2,0(CCWREG)       SEND EOA IDLES
         MVI   0(CCWREG),X'01'          NL  IDLES
         MVI   7(CCWREG),COUNT          COUNT OF CHARACTERS
         SH    CCWREG,TWENTY4           RESET CCWREG FOR INTERFACE
         BR    LINKREG                  RETURN
         SPACE  4
CHECKSC  TM    DCBERROP+2,X'08'         STATION CONTROL
         BZ    MOVE                     RETURN IF NOT
*
STATCTL  MVC   0(40,CCWREG),CHANPROG   MOVE CCWS TO IOB
         MVI   34(IOBREG),X'01'        MOVE SPACE CHARACTER
         BR    LINKREG                  RETURN
*
COMP     EQU   *
         LH    CTRREG,DECLNGTH         INPUT AREA LENGTH
         A     CTRREG,DECAREA          - OFFSET
         SR    CTRREG,IOREG                 FROM START OF MSG
         SH    CTRREG,RCOUNT           - RESIDUAL COUNT
         SH    CTRREG,H12
         BM    NOCHAR
         CH    CTRREG,MAXLNG           IS LENGTH TOO GREAT
         BNH   FINDTXT                 NO
         LH    CTRREG,MAXLNG           YES, SUBSTITUTE MAXLNG
FINDTXT  LA    WORKREG3,10(IOREG)      POINT TO FIRST COMPARE CHAR
         LA    WORKREG2,ALLCHAR+1
CMPTST   EX    CTRREG,COMPARE
         BNE   MSGSWTCH                BAD COMPARE, MSG SWITCH
*
LOADMSG  EQU   *
         MVC   0(LN,IOREG),CMPVALD     MOVE COMPARE VALID MESSG
         AR    WORKREG2,CTRREG         ADD LENGTH TO GET OFFSET
         MVC   8(1,IOREG),0(WORKREG2)  GET LAST CHARACTER
         B     MSGSWTCH                 BUILD CHANNEL PROGRAM
         SPACE  2
NOCHAR   MVC   0(LN,IOREG),CMPVALD
         B     MSGSWTCH
         SPACE 2
COMPARE  CLC   0(0,WORKREG3),0(WORKREG2)
*
MAXLNG   DC    H'35'
H12      DC    H'12'
*
*                 C M P   V L   - /NLEOT
CMPVALD  DC    X'2F43680146312A76705B1F'
*
LN       EQU   L'CMPVALD                LENGTH ATTRIBUTE OF VALID MSG
*
         EJECT
         DS    0H
MSGSWTCH EQU   *
         BAL   LINKREG,SETCCWRG         SET UP CCW AREA POINTER + DIAL
         ST    IOREG,32(CCWREG)         ADDRESS OF DATA TO CCW
         MVI   32(CCWREG),X'01'         RESTORE OP CODE
         LH    WORKREG,6(DECBREG)       USED IF NOT DYNAMIC BUFFERING
         TM    32(DCBREG),X'08'         TEST IF DYNAMIC BUFFERING USED
         BZ    *+12
         LH    WORKREG,24(DCBREG)       USED WITH DYNAMIC BUFFERING
         SH    WORKREG,=H'4'            ADJUST FOR TIC
         BCTR  WORKREG,0                BYPASS EOA CHAR
         STH   WORKREG,38(CCWREG)       IN CASE NO EOT FOUND
         CLI   0(IOREG),X'1F'           LOOK FOR EOT
         BE    FOUNDEOT
         LA    IOREG,1(IOREG)           UP CORE POINTER
         BCT   WORKREG,*-12             LOOP ON COUNT
         BCTR  IOREG,0                  ADJUST TO POINT TO LAST POS.
         MVI   0(IOREG),X'1F'           PUT IN EOT AT LAST POSITION
         B     FINCCWS                  CONTINUE CCW PROCESSING
*
FOUNDEOT EQU   *
         S     IOREG,IOBAREA            COMPUTE NUMBER OF CHARACTERS
         LA    IOREG,1(IOREG)           UP COUNT TO INCLUDE EOT
         STH   IOREG,38(CCWREG)         SAVE COUNT TEMPORARILY
         B     FINCCWS                  CONTINUE CCW PROCESSING
*
*  CONSTANTS
*
TESTCODE DC    X'0408001410000C'
EXMVC    MVC   0(1,TOREG),0(FROMREG)
         EJECT
ONE      EQU   X'02'                    LINE CODE -1-
FIVE     EQU   X'08'                    LINE CODE -5-
*
*  PATTERN OF DATA FOR 2740 TESTS
*
TILT     DC    AL1(TILTEND-TILT)
         DC    X'622367266B2A6E2F70316120642568296D2C733276375B5E5E5E'
         DC    X'5E5E5E573452134C0D49084504401551104F0E4A0B460743025B'
         DC    X'5E5E5E5E5E5E'
TILTEND  EQU   *
*
ROTATE   DC    AL1(ROTATEND-ROTATE)
         DC    X'62766B6D706443574A4C514523372A23312502340B0D5B5E5E5E'
         DC    X'5E5E5E100407130E081526322F292046524F494067736E68615B'
         DC    X'5E5E5E5E5E5E'
ROTATEND EQU   *
*
TWIST    DC    AL1(TWISTEND-TWIST)
         DC    X'E234A357E713A652EB0DAA4CEE08AF49F004B145E1155B5E5E5E'
         DC    X'5E5E5E8276C3378773C6328B6DCA2C8E68CF299064D125A0405B'
         DC    X'5E5E5E5E5E5E'
TWISTEND EQU   *
*
ALLCHAR  DC    AL1(ALLCHARX-ALLCHAR)
**                0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p
         DC    X'1302040710080D0B0E164F372F2A296762324C612C3143255168'
*                 q r s t u v w x y zNL             A B C D E F G H I
         DC    X'6D4A52202646572373155B5E5E5E5E5E5ECFB7AFAAA9E7E2B2CC'
*                 J K L M N O P Q R S T U V W X Y ZNL
         DC    X'E1ACB1C3A5D1E8EDCAD2A0A6C6D7A3F3955B5E5E'
ALLCHARX EQU   *
*
ANALYZER DC    AL1(ANALYZEX-ANALYZER)
*                 1 2 3 4 5SP cSP 9SPSP sSP aSP e & b k s pBSBSBSBSBS
         DC    X'0204071008012F0116010152014F01298B372C52685D5D5D5D5D'
*                BSBSBSBSBSBSBS 0BSBSBS 8BSBSBS 6SPSPSPSPSPSP pSP cNL
         DC    X'5D5D5D5D5D5D5D135D5D5D0E5D5D5D0D01010101010168012F5B'
*                SPSPSPSPSPSPSP cILNLILILIL l fLFILIL 1LFILIL 2LFILIL
         DC    X'010101010101012F5E5B5E5E5E31673B5E5E023B5E5E043B5E5E'
*                 3NL
         DC    X'075B'
ANALYZEX EQU   *
*
*  ADDRESSES OF DATA TO BE MOVED TO PATTERN BUFFER
*
         DS    0H
DATAADDR EQU   *
         LA    FROMREG,TILT
         LA    FROMREG,ROTATE
         LA    FROMREG,TWIST
         LA    FROMREG,ALLCHAR
         LA    FROMREG,ANALYZER
*
*  CCW'S
*
DIALCCW  CCW   X'2F',0,X'60',1          DISABLE THE LINE
         CCW   X'29',0,X'60',0          SEND THE DIAL DIGITS
CHANPROG CCW   X'01',0,X'A0',4          WRITE CIRCLE D AND CIRCLE C
         CCW   X'01',0,X'60',2          WRITE THE ADDRESSING CHARACTERS
         CCW   X'02',0,X'60',1          READ THE ADDRESSING RESPONSE
         CCW   X'01',0,X'A0',15         WRITE CARRIAGE RETURN AND IDLES
         CCW   X'01',0,X'20',0          WRITE THE TEST MESSAGE
         EJECT
*
*  EQUATES
*
WORKREG2 EQU   1
GETMAIN  EQU   1
WORKREG  EQU   2
CTRREG   EQU   WORKREG
PARREG   EQU   3
FROMREG  EQU   4
IOBREG   EQU   5
BASEREG  EQU   6
IOREG    EQU   7
TESTREG  EQU   8
PATRNREG EQU   9
CCWREG   EQU   10
DCBREG   EQU   11
DECBREG  EQU   12
TOREG    EQU   13
WORKREG3 EQU   13
RETURN   EQU   14
LINKREG  EQU   15
COUNT    EQU   20                       COUNT OF CHARACTERS
TWENTY4  DC    H'24'                    THREE CCWS
         EJECT
         DCBD  DSORG=BX,DEVD=BS
         EJECT
         IECTIOBX
         SPACE 2
IOBNAME  EQU   IOBERCCW
IOBAREA  EQU   IOBNAME+8
IOBPARM  EQU   IOBNAME+12
FEATURES EQU   IOBWORK+3                OPTIONAL FEATURES FROM UCB
RCOUNT   EQU   IOBWORK+5                RESIDUAL COUNT
         EJECT
         IECTDECB
         EJECT
PARMLIST DSECT
PATTERN  DS    F
NLIDLES  DS    F
         END
