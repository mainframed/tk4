         TITLE 'IGG019PI - LOCAL ON-LINE TEST CONTROL'
IGG019PI CSECT
*
*        MAINTENANCE ACTIVITY
*
*        YA02451
*        YA03247
*        YA03248
*        YA03957
*        ZA02332  (11/21/74)
*        AZ04857  (09/30/75)
*
***********************************************************************
*/*IGG019PI: CHART*/
*/* E IGG019PI*/
*/* D (YES,,NO,DECBSET) DUMMY DECB*/                           @ZA04857
*/* M GET REAL DECB ADDRESS */                                 @ZA04857
*/*DECBSET: D (NO,,YES,ERRTEST) IS ONLINE TEST IN PROGRESS?*/  @ZA04857
*/* D (NO,,YES,ERRTEST) IS ON-LINE TEST IN PROGRESS*/
*/* D (YES,,NO,INVALID) ARE THE XX & YY FIELDS NUMERIC*/
*/* D (YES,,NO,INVALID) IS XX VALUE VALID (23-28)*/
*/* D (NO,,YES,INVALID) IS YY COUNT ZERO*/
*/* D (YES,,NO,INVALID) DOES N=3*/
*/* D (NO,,YES,INVALID) IS BUFFER LESS THAN 300 BYTES*/
*/* D (YES,,NO,INVALID) WAS OPERATION A READ INITIAL*/
*/* D (YES,,NO,INVALID) RFT TARGET ADDR FOUND IN UCB'S*/
*/* P SAVE RLNS OF REQUESTOR AND TARGET*/
*/* D (YES,,NO,INVALID) IS DEVICE A LOCAL 3270*/
*/* M TURN ON ON-LINE TEST IN PROGRESS BIT*/
*/* M PUT RLN OF TARGET DEVICE IN IOBUCBX*/
*/* P ZERO RETRY COUNT*/
*/* P GET NAME OF FIRST SVC LOAD*/
*/* L SVC 66 - GO BUILD TESTS*/
*/* R RETURN TO AEE*/
*/*INVALID: D (NO,,YES,POST48) WAS RESETPL ISSUED*/
*/* P SAVE THE ECB*/
*/* L BALR TO READ/WRITE ROUTINE*/
*/* P RESTORE THE ECB*/
*/* R RETURN TO AEE*/
*/*POST48: P SET COMPLETION CODE TO X'48'*/
*/* L POST*/
*/* R RETURN TO AEE*/
*/*ERRTEST: D (NO,,YES,EXCEPOFF) IS THE ERROR FLAG ON*/
*/* D (NO,,YES,GOAHEAD) CHAN END, DVC END ALONE*/
*/* D (NO,,YES,GOAHEAD) DVC END ALONE*/
*/* D (NO,,YES,EXCEPOFF) RETRY COUNT = 3*/
*/* P (,STARTRFT) ADD ONE TO RETRY COUNT*/
*/*EXCEPOFF: M TURN OFF IOB EXCEPTION BIT*/
*/*RESTRLN: M RESTORE REQUESTOR'S RLN IN IOBUCBX*/
*/* M (,INVALID) TURN OFF OLT IN PROGRESS BIT*/
*/*GOAHEAD: P DECREMENT YY COUNT*/
*/* D (NO,,YES,RESTRLN) IS YY COUNT ZERO*/
*/* P CLEAR RETRY COUNT*/
*/*STARTRFT: P SAVE THE ECB*/
*/* L SVC 0*/
*/* P RESTORE THE ECB*/
*/* R SVC 3*/
*/*IGG019PI: END*/
         SPACE 2
*        ESTABLISH ADDRESSABILITY
         SPACE 1
         BALR  BASEREG,0           SET UP BASE REG
         USING *,BASEREG
         USING IECTIOB,IOBREG      IOB
         USING IHADCB,DCBREG       DCB
         USING UCB,UCBREG          UCB                     LD @ZA02332
         USING RFTMSG,RFTREG       REQUEST FOR TEST MSG
         USING IECTDEB,DEBREG      DEB
         USING IECTDECB,DECBREG    DECB
         B     OLTCTL              BRANCH AROUND ID USED TO
         DC    CL8'IGG019PI'       MODULE IDENTIFIER
         DC    XL2'4322'           REVISION DATE
         DC    C'&SYSDATE'         DALE LAST ASSEMBLY       LD @ZA02332
PATCH    DC    12F'0'              PATCH AREA
         DS    0F
OLTCTL   L     DCBREG,IOBDCBPT     GET ADDR OF DCB
         L     RFTREG,IOBERINF     GET ADDR OF RFT MSG
         L     DEBREG,DCBDEBAD     GET ADDR OF DEB
         L     DEBREG,28(DEBREG)
         L     DECBREG,IOBECBPT    GET ADDR OF DECB
         CLI   FOUR(DECBREG),FOXFOX   DUMMY DECB ?             @ZA04857
         BNE   DECBSET              NO, BRANCH                 @ZA04857
         L     DECBREG,FOUR(DECBREG)   POINT TO USERS DECB     @ZA04857
         SPACE 2
*        TEST FOR OLT IN PROGRESS - IF SO, NO NEED TO
*        VALIDITY CHECK RFT
DECBSET  EQU   *                                               @ZA04857
         TM    IOBINCAM,ONLIN      IS OLT IN PROGRESS
         BO    ERRTEST             YES, GO CHECK FOR ERRORS
         SPACE 2
*        VALIDITY TEST THE XX, YY, AND N FIELDS OF THE RFT
         SPACE
         LA    WORKREG2,4          SET CTR TO 4
         LA    WORKREG1,TESTNUMB   GET ADDR OF XX FIELD
NUMLOOP  TM    0(WORKREG1),NUMERIC TEST EACH BYTE OF XX&YY
*                                   FIELDS FOR NUMERIC COUNT
         BNO   INVALID             NOT NUMERIC, GET OUT
         LA    WORKREG1,1(WORKREG1) INCREMENT POINTER
         BCT   WORKREG2,NUMLOOP    IF NOT ALL CHECKED, LOOP
         CLC   TESTNUMB(2),TEST23  TEST = (XX) TOO LOW
         BL    INVALID             YES, GET OUT
         CLC   TESTNUMB(2),TEST28  TEST = TOO HIGH
         BH    INVALID             YES, GET OUT
         CLC   PASSCNT(2),ZERO     IS = OF TESTS (YY)   0
         BE    INVALID             NO, GET OUT
         CLI   ADBYTCNT,THREE      DOES THE COUNT FOR = OF CHARS
*                                   IN ADDR (N) = 3
         BNE   INVALID             NO GET OUT
         SPACE 2
*        GO TO EACH UCB AND COMPARE ADDRESS WITH ADDRESS
*        OF RFT TARGET DEVICE. IF THE ADDRESS IS FOUND AND
*        THE DEVICE IS A LOCAL 3270, CONTINUE. IF NOT, GO
*        END TEST (IE., REISSUE USER'S READ INITIAL).
         SPACE
         SR    WORKREG1,WORKREG1   CLEAR REG
         SR    WORKREG2,WORKREG2   CLEAR REG
         IC    WORKREG2,DEBNMEXT   GET = OF UCB ADDRS
UCBLOOP  L     UCBREG,DEBUCBAD(WORKREG1) GET ADDR OF NEXT UCB
         CLC   UCBNAME(TRES),CUUADDR  COMPARE ADDRESSES     LD @ZA02332
         BE    UCBFOUND            IF SAME, SEE IF LOCAL 3270
         LA    WORKREG1,4(WORKREG1) POINT TO NEXT ADDR
         BCT   WORKREG2,UCBLOOP    IF NOT ALL, GO CHECK NEXT
         B     INVALID             ADDR NOT FOUND, GET OUT
UCBFOUND MVC   IOBWORK(1),IOBUCBX    SAVE RLN OF REQUESTOR
         SR    WORKREG1,WORKREG1   CLEAR REG
         IC    WORKREG1,DEBNMEXT   GET = OF LINES
         SR    WORKREG1,WORKREG2   GET RLN OF RFT TARGET
         STC   WORKREG1,IOBWORK+1  SAVE RLN OF RFT TARGET
         CLI   UCBDVCLS,GRAPHIC    IS DVC A GRAPHIC         LD @ZA02332
         BNE   INVALID             NO, GET OUT
         CLI   UCBUNTYP,A3277      IS DVC A 3277            LD @ZA02332
         BE    DVCOK               YES, SET UP FOR SVC 66
         CLI   UCBUNTYP,A3284      IS DVC A 3284            LD @ZA02332
         BE    DVCOK               YES, SET UP FOR SVC 66
         CLI   UCBUNTYP,A3286      IS DVC A 3286            LD @ZA02332
         BNE   INVALID             NO, NOT A LOCAL 3270 - GET OUT
         SPACE 2
*        PREPARE TO ISSUE SVC 66
DVCOK    EQU   *                                             LD YA02451
         BAL   WORKREG2,GETIOB                               LD YA02451
         OI    INCAM(WORKREG1),ONLIN TURN ON OLT IN PROGRESS LD YA03248
*                                    IN MASTER IOB           LD YA03248
         SPACE
         OI    IOBINCAM,ONLIN      TURN ON OLT IN PROGRESS   LD YA02451
         MVC   IOBUCBX(1),IOBWORK+1 SET UP IOB FOR TARGET DCV
         XC    IOBWORK+4(1),IOBWORK+4 ZERO RETRY COUNT
         MVC   IOBERCCW(8),SVCNAME GET NAME OF FIRST SVC LOAD
         SPACE 2
*        GET ON-LINE TEST TRANSIENTS
         SPACE
         SVC   66                  GO BUILD TESTS
         BR    AEEREG              RETURN TO AEE
         SPACE 2
*        ALL RFT REQUESTS (VALID AND INVALID) WILL BE       LD @ZA02332
*        POSTED COMPLETE WITH X'7F'. NO READ TI WILL BE     LD @ZA02332
*        ISSUED. FOR INVALID RFT REQUESTS, THE RESIDUAL     LD @ZA02332
*        COUNT (DECCOUNT) WILL REMAIN UNCHANGED AND THE     LD @ZA02332
*        DECPOLPT+3 BYTE WILL CONTAIN THE RLN OF THE        LD @ZA02332
*        REQUESTING DEVICE. FOR VALID RFT REQUESTS          LD @ZA02332
*        (AFTER THE TEST PATTERN HAS BEEN WRITTEN),         LD @ZA02332
*        THE RSIDUAL COUNT (DECCOUNT) WILL INDICATE THAT    LD @ZA02332
*        3 BYTES OF DATA HAD BEEN READ AND THE DECPOLPT+3   LD @ZA02332
*        BYTE WILL CONTAIN THE RLN OF THE REQUESTING        LD @ZA02332
*        DEVICE.                                            LD @ZA02332
         SPACE
INVALID  EQU   *                                             LD YA02451
         L     WORKREG2,DECAREA    GET INPUT AREA ADDR      LD @ZA02332
         MVC   ZOT(L3,WORKREG2),SOHCHARS  PUT RFT...        LD @ZA02332
*                                  ...INDICATOR INTO...     LD @ZA02332
*                                  ...INPUT AREA.           LD @ZA02332
         LA    PARMREG,X7F         PUT COMP. CODE IN REG 0  LD @ZA02332
POST44   EQU   *                                            LD @ZA02332
         L     IOBREG,DCBIOBAD     GET IOB BASE ADR          LD YA02451
         SR    WORKREG2,WORKREG2   CLEAR                     LD YA02451
         IC    WORKREG2,DEBNMEXT   GET # OF DEB EXTENTS      LD YA02451
         SR    ICREG,ICREG         CLEAR                     LD YA02451
         IC    ICREG,DCBEIOBX      GET SIZE OF IOB           LD YA02451
         LA    WORKREG1,DEBUCBAD-FOUR   GET START OF UCBS    LD YA02451
NEXTIOB  LA    IOBREG,0(ICREG,IOBREG)   POINT TO EACH IOB    LD YA02451
         LA    WORKREG1,FOUR(WORKREG1)  BUMP UCBLIST PTR     LD YA02451
         L     UCBREG,0(WORKREG1)  GET NEXT UCB ADR          LD YA02451
         TM    6(UCBREG),X'E0'     OUTSTANDING I/O?          LD YA02451
         BNZ   ALLLOOP             YES, BRANCH               LD YA02451
         NI    IOBINCAM,BUSY       TURN OFF BUSY             LD YA02451
ALLLOOP  BCT   WORKREG2,NEXTIOB    LOOP UNTIL FINISHED       LD YA02451
POST     EQU   *                                            LD @ZA02332
         LR    IOBREG,DECBREG      PUT ADDR OF ECB IN REG1  LD @ZA02332
         SLL   PARMREG,TWENTY4     SHIFT TO HI ORDER BYTE   LD @ZA02332
         L     UCBREG,DEBUCBAD     GET ADDR OF MASTER UCB   LD @ZA02332
         DROP  UCBREG              DROP UCB ADDRESSABILITY  LD @ZA02332
         USING MSTRUCB,MSTREG      MSTER UCB ADDRESSABILITY LD @ZA02332
         NI    MTRGCB,READOFF      SET OFF RD ACT. & PEN.   LD @ZA02332
         DROP  MSTREG              DROP MASTER UCB ADDR.    LD @ZA02332
         USING UCB,UCBREG          UCB ADDRESSABILITY       LD @ZA02332
         POST  (1),(0)             POST THE ECB             LD @ZA02332
         BR    AEEREG              RETURN TO AEE            LD @ZA02332
         SPACE 2
*        TEST THE ERROR BIT OF IOBINCAM (SET BY OLT TRANSIENTS
*        IF AN ERROR WAS FOUND). IF ON, GO END TEST.
         SPACE
         USING IECTIOB,IOBREG      IOB ADDRESSABILITY         LD YM4076
ERRTEST  EQU   *
         TM    IOBINCAM,ERRORBIT   WAS AN ERROR FOUND
         BO    EXCEPOFF            YES, GO END TEST
         SPACE 2
*        TEST IOBCSW FOR ERRORS. IF FOUND, GO TO RETRY LOGIC.
*        IF NO ERRORS, GO ON.
         SPACE
         CLI   IOBCSW+4,CEDE       CHAN END, DVC END ALONE
         BE    GOAHEAD             YES, GO ON
         CLI   IOBCSW+4,DE         DVC END ALONE
         BE    GOAHEAD             YES, GO ON
         SPACE 2
*        RETRY LOGIC  RETRY UP TO THREE TIMES AND IF THERE
*        IS STILL AN ERROR, GO END TEST.
         SPACE
         SR    WORKREG1,WORKREG1   CLEAR REG
         IC    WORKREG1,IOBWORK+4  GET RETRY COUNT
         CH    WORKREG1,RETRY3     IS COUNT = 3
         BE    EXCEPOFF            YES, GO END TEST
         LA    WORKREG1,1(WORKREG1) ADD ONE TO COUNT
         STC   WORKREG1,IOBWORK+4  RETURN NEW COUNT
         B     STARTRFT            GO TRY AGAIN
         SPACE 2
*        TO END TEST, TURN OFF IOB EXCEPTION FLAG (IF AN ERROR
*        WAS FOUND), TURN OFF OLT IN PROGRESS FLAG, SET UP IOB
*        FOR USER'S CHANNEL PROGRAM, AND BRANCH TO READ/WRITE
*        ROUTINE.
         SPACE
EXCEPOFF EQU   *
         NI    IOBFLAG1,IOBEXCEP   TURN OFF IOB EXCEPTION BIT
         NI    IOBINCAM,ERRBIT     TURN OFF EROR BIT
RESTRLN  EQU   *
         CLC   IOBWORK(1),IOBWORK+1 COMPARE RLN OF SOURCE AND TARGET
         BE    RESTORE             IF SAME, DON'T TURN ON INTERCEPT
         SR    WORKREG1,WORKREG1   CLEAR REG
         IC    WORKREG1,IOBUCBX    GET RLN OF TARGET DEVICE
         SLA   WORKREG1,2          MULTIPLY BY 4 AND GET UCB ADDR
         L     UCBREG,DEBUCBAD(WORKREG1) BY INDEXING INTO DEB.
         TM    UCBFLA,UCBPST       CHECK FOR VALID IOQ       LD YA03957
*
*        SHOULD NEVER BE AN RQE, BUT CHECK TO PREVENT AN     LD YA03957
*        EXPOSURE TO SYSTEM INTEGRITY.                       LD YA03957
*
         BO    RESTORE             DON'T MESS WITH UCB IF... LD YA03957
         OI    UCBFLC,INTRCEPT     TURN ON INTRCPT BIT TO     LD YM4074
*                                  INTERCEPT NEXT REQUEST TO DVC.
RESTORE  EQU   *
         MVC   IOBUCBX(1),IOBWORK  PUT REQUESTOR'S RLN BACK
         NI    IOBINCAM,ONLINOFF   TURN OFF OLT IN PROGRESS
         LH    WORKREG2,DECLNGTH   GET READ LENGTH          LD @ZA02332
         SH    WORKREG2,HALF3      SUBTRACT 3 TO MAKE       LD @ZA02332
*                                  ...IT APPEAR AS IF...    LD @ZA02332
*                                  ...ONLY 3 BYTES WERE...  LD @ZA02332
*                                  ...READ.                 LD @ZA02332
         STH   WORKREG2,DECCOUNT   UPDATE RESIDUAL COUNT    LD @ZA02332
         SR    WORKREG2,WORKREG2   CLEAR REG                LD @ZA02332
         IC    WORKREG2,IOBWORK    GET REQUESTOR RLN        LD @ZA02332
         LA    WORKREG2,ONE(WORKREG2)  ADD ONE              LD @ZA02332
         STC   WORKREG2,DECPOLPT+L3 RESTORE REUQESTOR...    LD @ZA02332*
                                   ...RLN IN DECB.          LD @ZA02332
         BAL   WORKREG2,GETIOB                               LD YA02451
         NI    INCAM(WORKREG1),ONLINOFF TURN OFF OLT         LD YA02451
         NI    ONE(WORKREG1),REPLOFF  TURN OFF RESETPL      LD @ZA02332
         B     INVALID             MOVE IN SOH%/ CHAR.      LD @ZA02332
         SPACE 2
*        DECREMENT YY COUNT AND IF ZERO, END TEST. OTHERWISE,
*        KEEP GOING.
         SPACE
GOAHEAD  EQU   *
         SR    WORKREG1,WORKREG1   CLEAR REG
         IC    WORKREG1,IOBWORK+2  GET YY COUNT
         BCT   WORKREG1,AGAIN      IF NOT ZERO, GO AGAIN
         B     RESTORE             IF ZERO, GO END TEST     LD @ZA02332
AGAIN    STC   WORKREG1,IOBWORK+2  RETURN NEW COUNT
         XC    IOBWORK+4(1),IOBWORK+4 CLEAR RETRY COUNT
STARTRFT EQU   *
*
*              1 LINE DELETED FOR ----->                    LD @ZA02332
*
         LR    WORKREG1,IOBREG     SAVE IOB ADDR            LD @ZA02332
         L     PARMREG,GETPARM     SET UP FOR GETMAIN       LD @ZA02332
         GETMAIN R,LV=(0)          GETMAIN FOR ECB          LD @ZA02332
         LR    WORKREG2,IOBREG     SAVE DUMMY ECB ADDR      LD @ZA02332
         LR    IOBREG,WORKREG1     RESTORE IOB ADDR         LD @ZA02332
         ST    DECBREG,FOUR(WORKREG2)  SAVE DECB ADDR       LD @ZA02332
         MVI   FOUR(WORKREG2),FOXFOX  FLAG AS DUMMY DECB    LD @ZA02332
         SR    WORKREG1,WORKREG1   CLEAR REG                LD @ZA02332
         ST    WORKREG1,DISP0(WORKREG2)   CLEAR ECB AREA    LD @ZA02332
         STCM  WORKREG2,MASK,IOBECBPT+ONE  POINT IOB...     LD @ZA02332
*                                  ...TO DUMMY              LD @ZA02332
         SVC   0                   EXCP
         STCM  DECBREG,MASK,IOBECBPT+ONE  REPOINT IOB...    LD @ZA02332
         L     PARMREG,GETPARM     SET UP FOR FREEMAIN      LD @ZA02332
         FREEMAIN R,LV=(0),A=(WORKREG2)  FREE DUMMY ECB     LD @ZA02332
         SVC   3                   RETURN
*
*
GETIOB   EQU   *                                             LD YA02451
         L     WORKREG1,DCBIOBAD   GET IOB BASE ADR          LD YA02451
         LA    WORKREG1,88(WORKREG1)    ADJUST TO 1ST IOB    LD YA02451
         BR    WORKREG2            RETURN                    LD YA02451
         SPACE 2
*        REGISTER EQUATES
         SPACE
PARMREG  EQU   0                   PARAMETER REGISTER       LD @ZA02332
IOBREG   EQU   1                   ADDR OF IOB
CVTREG   EQU   1                   ADDR OF CVT                LD YM4076
TCBREG   EQU   1                   ADDR OF TCB                LD YM4076
DUMDECB  EQU   IOBREG              ADDR OF DUMMY DECB       LD @ZA02332
DCBREG   EQU   2                   ADDR OF DCB
UCBREG   EQU   3                   ADDR OF UCB (USED IN UCB LOOK-UP)
MSTREG   EQU   UCBREG              MASTER UCB ADDRESS       LD @ZA02332
DEBREG   EQU   4                   ADDR OF DEB
RFTREG   EQU   5                   ADDR OF RFT MSG
ICREG    EQU   5                   INSERT CHAR. REG          LD YA02451
WORKREG1 EQU   6                   WORK REG
WORKREG2 EQU   7                   WORK REG
DECBREG  EQU   8                   ADDR OF DECB
SAVE14   EQU   11                  USED TO SAVE REG 14 CONTENTS
BASEREG  EQU   12                  BASE REGISTER
SAVEREG  EQU   13                  ADDR OF SAVE AREA
AEEREG   EQU   14                  ADDR OF ASYNCH EXIT EFFECTOR
RWROUT   EQU   15                  ADDR OF READ/WRITE ROUTINE
         SPACE 2
*        BIT SETTINGS
         SPACE
ONLIN    EQU   X'01'               OLT IN PROGRESS
NUMERIC  EQU   X'F0'               FIRST 4 BYTES OF CHARACTER
*                                   NUMBER = 'F'
RESETPL  EQU   X'01'               RESETPL ISSUED BIT
ERRORBIT EQU   X'02'               ERROR BIT
CEDE     EQU   X'0C'               CHAN END, DVC END ALONE
DE       EQU   X'04'               DVC END ALONE
IOBEXCEP EQU   X'FB'               IOB EXCEPTION BIT
RESTART  EQU   X'FE'               RESTART FLAG
ONLINOFF EQU   X'FE'               OLT IN PROGRESS
REPLOFF  EQU   X'FE'               RESETPL BIT               LD YA02451
ERRBIT   EQU   X'FD'               ERROR BIT
READOFF  EQU   X'F3'               UCBGCB-RTI ACT & PEN.    LD @ZA02332
X7F      EQU   X'7F'               COMPLETION CODE          LD @ZA02332
         SPACE 2
*        DISPLACEMENTS INTO CONTROL BLOCKS
         SPACE
FSTUCB   EQU   32                  DISP OF UCB ADDRS IN DEB
OPTYPE   EQU   5                   DISP IN DECB OF OP TYPE
*        MISCELLANEOUS EQUATES
         SPACE
THREE    EQU   X'F3'               = OF CHARS IN ADDR MUST = 3
GRAPHIC  EQU   X'10'               DEVICE CLASS - GRAPHICS
A3277    EQU   X'09'               3277 DEVIDE TYPE
A3284    EQU   X'0A'               3284 DEVIDE TYPE
A3286    EQU   X'0B'               3284 DEVIDE TYPE
RDINIT   EQU   X'01'               READ INIT OPERATION VALUE
INTRCEPT EQU   X'10'               UCB IOB INTERCEPT BIT
DISP0    EQU   0                                            LD @ZA02332
TRES     EQU   3                   THREE                    LD @ZA02332
FOUR     EQU   4                   FOUR                      LD YA02451
SEVENTN  EQU   17                  OFFSET IN DUMMY DECB...  LD @ZA02332
*                                  ...FOR DUMMY ID          LD @ZA02332
TWENTY4  EQU   24                                           LD @ZA02332
THIRTY6  EQU   36                  LENGTH USED TO COPY...   LD @ZA02332
*                                  ...DUMMY DECB            LD @ZA02332
FORTY    EQU   40                  OFFSET IN DUMMY DECB...  LD @ZA02332
*                                  ...FOR DECB ADDR         LD @ZA02332
FORTY4   EQU   44                  DUMMY DECB SIZE          LD @ZA02332
ZOT      EQU   0                   ZERO                     LD @ZA02332
TWO      EQU   2                   TWO                      LD @ZA02332
L3       EQU   3                   LENGTH OF 3              LD @ZA02332
CRRNTTCB EQU   4                   OFFSET TO CURRENT TCB      LD YM5653
BUSY     EQU   X'FF'-X'40'         BUSY BIT                  LD YA02451
INCAM    EQU   28                  IOBINCAM DISP.            LD YA02451
ONE      EQU   1                   ONE                       LD YA02451
FOXFOX   EQU   X'FF'               ALL ONES                 LD @ZA02332
MASK     EQU   7                   MASK FOR STCM            LD @ZA02332
FORTY8   EQU   X'48'               RESETPL COMP. CODE       LD @ZA02332
POSTED   EQU   X'40'               POST BIT IN ECB COMP CDE LD @ZA02332
         SPACE 2
*        STORAGE
         DS    0F                  FULLWORD BOUNDARY        LD @ZA02332
GETPARM  DC    X'FA000008'         SUBPOOL # AND SIZE       LD @ZA02332
SOHCHARS DC    X'016C61'           SOH % / (TEST...         LD @ZA02332
*                                  ...REQUEST KEY - 3270)   LD @ZA02332
HALF3    DC    H'3'                LENGTH OF SOH%/ CHARS    LD @ZA02332
         SPACE
SVCNAME  DC    C'IGC0006F'         NAME OF FIRST SVC LOAD
TEST23   DC    X'F2F3'
TEST28   DC    X'F2F8'
MINBUF   DC    X'012C'
ZERO     DC    X'F0F0'
RETRY3   DC    X'0003'             MAXIMUM NUMBER OF RETRIES
         EJECT
*        CONTROL BLOCK DSECTS
         SPACE
UCB      DSECT                                              LD @ZA02332
         IEFUCBOB                                           LD @ZA02332
         EJECT
MSTRUCB  DSECT                     MASTER UCB DSECT         LD @ZA02332
MTRGCB   EQU   MSTRUCB+(UCBGCB-UCBOB)                       LD @ZA02332
         EJECT
         DCBD  DSORG=BX,DEVD=BS
         EJECT
         IECTDEBX
         EJECT
         IECTIOBX
         EJECT
         IECTDECB
         EJECT
CVT      DSECT                                                LD YM4076
         CVT
         EJECT
         IKJTCB DSECT=YES                                     LD TM4076
         EJECT
RFTMSG   DSECT
SOHPERC  DS    CL2
TESTNUMB DS    CL2
PASSCNT  DS    CL2
ADBYTCNT DS    CL1
CUUADDR  DS    CL3
         END
