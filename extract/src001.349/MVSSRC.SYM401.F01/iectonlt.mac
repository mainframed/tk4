         TITLE 'IECTONLT - LOGIC TO GENERATE AN RFT MESSAGE'       000D
         SPACE 2
IECTONLT CSECT
***********************************************************************
*                                                                     *
* STATUS -           CHANGE LEVEL  001,  MARCH 19,1968
*                                                                     *
* FUNCTION -          TO GENERATE RFT MESSAGE                         *
*                                                                     *
* ENTRY POINT -       ENTRY IS TO FIRST EXECUTABLE INSTRUCTION        *
*                     FROM ONLTST MACRO EXPANSION IN USER CODE.       *
*                                                                     *
* INPUT -             USER SPECIFIED PARAMETERS IN ONLTST MACRO.      *
*                                                                     *
* OUTPUT -            AN RFT MESSAGE TO REQUEST THE TEST AND NO.      *
*                     OF TRANSMISSIONS SPECIFIED BY THE USER.         *
*                                                                     *
* EXTERNAL ROUTINES - IGG019MA, BTAM READ/WRITE ROUTINE.              *
*                                                                     *
* EXIT -              RETURN TO USER ADDRESS IN REGISTER 14 WITH      *
*                     POSSIBLE RETURN CODES AS LISTED BELOW.          *
*                       1.  12 - INVALID XX OR YY SPECIFIED.          *
*                       2.  ANY OF RETURN CODES GIVEN BY READ/WRITE   *
*                                                                     *
* IN LINE ROUTINES -  1. BITON - GETS AREA ADDRESS FROM DECB AND      *
*                        POINT TO FIRST AVAILABLE TEXT BYTE.          *
*                        CHECKS FOR VALID XX AND YY OPERANDS,         *
*                        CONVERTS VALUES TO ZONED DECIMAL AND         *
*                        INSERTS THEM INTO RFT. ADDS SOH %            *
*                        HEADER, SET UP 'N' FIELD, ATTACH             *
*                        STX-ETX. BRANCH GETLENG.                     *
*                                                                     *
*                     2. MOVETEXT  - IF XX = 1, MOVE USER DEFINED     *
*                        TEXT INTO RFT MESSAGE.                       *
*                                                                     *
*                     3. GETLENG - GET LENGTH OF MESSAGE TO BE        *
*                        SENT AND STORE IN DECB. SET ZONE BITS FOR    *
*                        ASCII. SET WRITE INITIAL OR WRITE INITIAL    *
*                        TRANSPARENT COMMAND CODE.                    *
*                                                                     *
*                     4. GETADDR - LINK TO READ/WRITE AND RETURN.     *
*                                                                     *
* ATTRIBUTES-    THIS MODULE IS RE-ENTRANT.                           *
*                                                                     *
***********************************************************************
         SPACE 2
DECBREG  EQU   1                       DECB DSECT BASE REGISTER   000D
DCBREG   EQU   2                       DCB DSECT BASE REG          000D
IOBREG   EQU   3                       IOB DSECT BASE REGISTER     000D
TEXTREG  EQU   4                       PTR TO USER TEXT            000D
LENGTREG EQU   5                       WORK REGISTER               000D
AREAREG  EQU   6                       PTR TO I/O AREA             000D
LREG     EQU   7                                                   000D
DIV1     EQU   8
DIV2     EQU   9
UCBREG   EQU   10                                                A29562
CCWREG   EQU   11                                                A29562
BASEREG   EQU   12
         SPACE   2
         STM   14,12,12(13)                                        000D
         BALR   BASEREG,0                                          000D
         USING *,BASEREG                  MODULE ADDRESSABILITY    000D
         USING IECTDECB,DECBREG           DECB ADDRESSABILITY      000D
         USING IHADCB,DCBREG              *                        000D
         USING IECTIOB,IOBREG             *                        000D
         ST    13,SAVEAREA+4            STORE USER SAVEAREA ADDR   000D
         LA    13,SAVEAREA              GET SAVEAREA ADDR TO LINK  000D
         L     DCBREG,DECDCBAD            DCB ADDRESSABILITY       000D
         SR    IOBREG,IOBREG           CLEAR REGISTER              000D
         IC    IOBREG,DCBEIOBX         GET IOB SIZE                000D
         NI   DECFLAGS,X'00'           TURN OFF DECB FLAGS         000D
         MH    IOBREG,DECRLN-1         MULTIPLY BY IOB INDEX       000D
         A     IOBREG,DCBIOBAD         ADD OFFSET TO IOB ADDR      000D
         L     AREAREG,DECAREA          GET I/O AREA FROM DECB     000D
         TM    DCBERROP,TESTBIT        TERM TEST SPECIFIED IN DCB  000D
         BO    BITON                   YES, GENERATE MESSAGE       000D
         LA    15,24                   NO, SET RETURN CODE         000D
         B     LOADMULT                RETURN TO USER              000D
BITON    TM    DCBBFTEK,DYNBUF         DYNAMIC BUFFERING USED      000D
         BZ    NOBUFF                   NO, PROCEED AS NORMAL      000D
         LA    AREAREG,4(AREAREG)       POINT AREAREG TO 1ST TEXT  000D
NOBUFF   CLI   DECTYPE,LOWX            IS X VALUE                  000D
         BL    INVALID                    WITHIN ALLOWABLE         000D
         CLI   DECTYPE,HIGHX                RANGE OF               000D
         BH    INVALID                        00-19 DECIMAL.       000D
         CLI   DECTYPE+1,LOWY           IS Y VALUE                 000D
         BL    INVALID                    WITHIN ALLOWABLE         000D
         CLI   DECTYPE+1,HIGHY              RANGE OF               000D
         BH    INVALID                        01-99 DECIMAL        000D
         SR    LENGTREG,LENGTREG        CLEAR REGISTER             000D
         IC    LENGTREG,DECTYPE         GET X VALUE IN REGISTER    000D
         CVD   LENGTREG,IOBERCCW        CONVERT TO DECIMAL AND     000D
         UNPK  2(2,AREAREG),IOBERCCW+6(2) UNPACK TO GO IN RFT      000D
         OI    3(AREAREG),ZONE          OR IN ZONE FOR LAST BYTE   000D
         IC    LENGTREG,DECTYPE+1       GET Y VALUE IN REGISTER    000D
         CVD   LENGTREG,IOBERCCW        CONVERT TO DECIMAL AND     000D
         UNPK  4(2,AREAREG),IOBERCCW+6(2) UNPACK TO GO IN RFT      000D
         OI    5(AREAREG),ZONE          OR IN ZONE FOR LAST BYTE   000D
         LA    LENGTREG,ZONE            GET ZONED '0' FOR N FIELD  000D
         STC   LENGTREG,6(AREAREG)      PUT 'N' FIELD IN RFT MSG   000D
         MVC   0(2,AREAREG),DCBBSONL    MOVE SOH-PERCENT CHARS     000F
         LH    LREG,DECLNGTH            SAVE MESSAGE LENGTH        000D
         L     TEXTREG,DECPOLPT        GET TEXT ADDRESS          A29581
         CLI   DECTYPE,X'01'            IS X EQUAL TO ZERO OR ONE  000D
         BE    MOVETEXT                 YES, GO MOVE IN USER TEXT  000D
         MVC   7(1,AREAREG),DCBBSSTX    MOVE IN STX-ETX TO GO      000D
         MVC   8(1,AREAREG),DCBBSETX      OUT IN RFT MESSAGE       000D
         LA    LENGTREG,9               GET MESSAGE LENGTH         000D
         B     GETLENG                 TEST FOR BUFFERING          000D
         SPACE 2                                                   000D
MOVETEXT EQU   *                                                 A29581
         LR    10,AREAREG
         LR    11,TEXTREG
         SR    DIV1,DIV1               CLEAR REGISTER              000D
         LH    DIV2,DECLNGTH           GET USER LENGTH             000D
         LA    LENGTREG,256            GET DIVISOR                 000D
         DR    DIV1,LENGTREG                                       000D
         BCTR  LENGTREG,0               DECREMENT BY ONE FOR       000D
TEST    LTR   DIV2,DIV2                IS QUOTIENT ZERO            000D
         BZ    TESTREG                 YES, GO MOVE REMAINDER      000D
         BCTR   DIV2,0                 DECREMENT QUOTIENT BY ONE   000D
         EX    LENGTREG,MOVE           MOVE TEST MSSG INTO RFT     000D
         LA    10,256(10)
         LA    11,256(11)
         B     TEST                                                000D
TESTREG  LTR   DIV1,DIV1               IS REMAINDER ZERO           000D
         BZ    LOADDR                                              000D
         BCTR    DIV1,0                DECREMENT BY ONE FOR EXECUTE000D
         EX    DIV1,MOVE                                           000D
LOADDR    EQU   *
         LA    LENGTREG,7(LREG)        GET MESSAGE LENGTH          000D
GETLENG  EQU   *                                                   000D
         TM    DCBBFTEK,DYNBUF         IS DYNAMIC BUFFERING USED   000D
         BZ    STORLENG                                            000D
         LA    LENGTREG,4(LENGTREG)    INCREMENT COUNT BY FOUR     000D
STORLENG STH   LENGTREG,DECLNGTH        STORE MESSAGE LENGTH       000D
         XC    DECTYPE(2),DECTYPE      ZERO OUT DECTYPE FIELD      000D
         TM    DCBXCODE,X'04'           TEST FOR ASCII
         BZ    NOTASCII                 IF NOT, TEST FURTHER
         NI    2(AREAREG),X'7F'        TURN OFF HIGH-ORDER         000D
PROPZONE MVZ   3(4,AREAREG),2(AREAREG)  ZONE BITS
         B     ENDTRANS                 CONTINUE PROCESSING
NOTASCII TM    DCBXCODE,X'08'           TEST FOR 6 BIT TRANSCODE
         BZ    ENDTRANS                 EBCDIC, NO TRANS NEEDED
         NI    2(AREAREG),X'3F'         TURN OFF 2 HIGH ORDER          X
                                        BITS FOR TRANSCODE
         B     PROPZONE                 PROPAGATE ZONE
ENDTRANS MVI   DECTYPE+1,X'02'          PUT WRITE TI CMD CODE
         CLC   0(2,TEXTREG),DCBBSTSX   IS MESSG TRANSPARENT        000D
         BNE   GETADDR                                             000D
         OI    DECTYPE+1,X'10'          SET ON TRANSPARENCY BIT    000D
GETADDR  L     15,DCBWRITE             GET RD/WRT ADDRESS          000D
         OI    DECDCBAD,X'80'          ONLTST MACRO HAS BEEN USED
         BALR  14,15                                               000D
         STH   LREG,DECLNGTH            RESTORE LENGTH             000D
         L     13,SAVEAREA+4            GET USER SAVE ADDRESS      000D
         L     14,12(13)               RESTORE USER REGISTERS      000D
         B     RETURN                                              000D
INVALID  LA    15,12                    GET RETURN CODE            000D
LOADMULT L     13,SAVEAREA+4
RETURN   LM    0,12,20(13)                                         000D
         BR    14                       RETURN TO USER             000D
         SPACE 2
DYNBUF   EQU   X'08'                    DYNAMIC BUFFERING MASK     000D
ZONE     EQU   X'F0'                                               000D
LOWX     EQU   X'00'                    LOWEST ALLOWABLE X VALUE   000D
HIGHX    EQU   X'16'                    HIGHEST ALLOWABLE X VALUE  000L
TESTBIT  EQU   X'10'                   ON LINE TEST BIT IN DCB     000D
LOWY     EQU   X'01'                    LOWEST ALLOWABLE Y VALUE   000D
HIGHY    EQU   X'63'                    HIGHEST ALLOWABLE Y VALUE  000D
DEVTP    EQU   16               UCB OFFSET TO DEVICE TYPE        A29562
UCBAD    EQU   32               DEB OFFSET TO UCB ADDR TABLE     A29562
DIALINE  EQU   X'90'                                             A29562
SAVEAREA DS    18F                                                 000D
DISABLE  DC    X'2F00000020800001'                               A29562
MODNAME  DC    CL8'IGC0006F'            BASIC MODULE NAME FOR SVC  000D
MOVE     MVC   7(1,10),0(11)
*                                         INTO DECAREA             000D
         IECTDECB
         IECTIOBX
         DCBD  DSORG=BX,DEVD=BS
         END
