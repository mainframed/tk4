         TITLE 'IGC0806F - BSC ONLTST EBCDIC MODULE'               000D
         SPACE 2
IGC0806F CSECT
         TITLE 'IGC0806F - A 2ND LOAD OF SVC 66 FOR EBCDIC MESSGS'
***********************************************************************
*                                                                     *
* STATUS -            CHANGE LEVEL 001, NOVEMBER 7,1969               *
*                                                                     *
* FUNCTION -          BUILD EBCDIC ON-LINE-TEST MESSAGES              *
*                                                                     *
* ENTRY POINT -       ENTRY IS TO FIRST EXECUTABLE INSTRUCTION        *
*                     VIA XCTL FROM IGC0006F                          *
*                                                                     *
* INPUT -             REGISTER 1 - ADDRESS OF THE IOB                 *
*                     REGISTER 4 - XX VALUE                           *
*                     CHANNEL PROGRAM IN IOB                          *
*                                                                     *
* OUTPUT -            TEST MESSAGE BUILT IN USER'S AREA AND COUNT     *
*                        INSERTED IN CCW                              *
*                     ERROR BIT SET IN IOBINCAM IF USER AREA NOT      *
*                        AT LEAST 300 BYTES LONG.                     *
*                                                                     *
* EXTERNAL ROUTINES - SVC 0, EXECUTE CHANNEL PROGRAM                  *
*                                                                     *
* EXIT -              SVC 3, RETURN TO IOS                            *
*                                                                     *
* IN LINE ROUTINES - 1. NORMEBCD - BUILD NORMAL EBCDIC MESSAGE        *
*                       AND STORE COUNT IN CCW.                       *
*                                                                     *
*                    2. WEAKLEAS - BUILD WEAK PATTERN MESSAGE FOR     *
*                       A LEASED LINE AND STORE COUNT IN CCW.         *
*                                                                     *
*                    3. XPARENT - BUILD TRANSPARENT EBCDIC MESSAGE    *
*                       AND STORE COUNT IN CCW.                       *
*                                                                     *
*                    4. WKDLESYN - BUILD WEAK PATTERN EBCDIC MESSAGE  *
*                       TO TEST SYN INSERTION AND STORE COUNT IN CCW. *
*                                                                     *
*                    5. PRINTER - BUILD EBCDIC PRINTER MESSAGE AND    *
*                       STORE COUNT IN CCW.                           *
*                                                                     *
*                    6. PUNCH - BUILD EBCDIC PUNCH MESSAGE AND STORE  *
*                       COUNT IN CCW.                                 *
*                                                                     *
*                    7. WEAKSWIT - BUILD WEAK PATTERN MESSAGE FOR A   *
*                       SWITCHED LINE AND STORE COUNT IN CCW.         *
*                                                                     *
*                    8. ALPHA - BUILD EBCDIC ALPHAMERIC MESSAGE AND   *
*                       STORE COUNT IN CCW.                           *
*                                                                     *
*                    9. STORLENG - STORES CH.PGM. ADDRESS IN IOBSTART *
*                       AND ISSUES SVC 0 AND RETURNS                  *
*                                                                     *
*                    10. TEST20 - BUILD 80 CHARACTER TRANSPARENT      *
*                       MESSAGE AND STORE COUNT IN CCW.               *
     SPACE  2
*                    11. TEST21 - BUILD 120 CHARACTER TRANSPARENT     *
*                       MESSAGE AND STORE COUNT IN CCW.               *
     SPACE  2
*                    12. TEST22 - BUILD 144 CHARACTER TRANSPARENT     *
*                       MESSAGE AND STORE COUNT IN CCW.               *
       SPACE   2
* ATTRIBUTES - THIS MODULE IS RE-ENTRANT                              *
*                                                                     *
***********************************************************************
         SPACE 2
IOBREG   EQU   1                        IOB DSECT BASE REGISTER    000D
DEBREG    EQU   2
COMREG     EQU   2
XREG     EQU   3
TYPEREG  EQU   4                        X-REGISTER                 000D
CNTREG   EQU   5                                                   000L
BASEREG  EQU   6                        MODULE BASE REGISTER       000D
IOREG    EQU   7                        POINTER TO I/O AREA        000D
DECBREG  EQU   8
LENGTREG EQU   9                        LENGTH OF MESSAGE          000D
DCBREG   EQU   11                       DCB DSECT BASE REGISTER    000D
UCBREG   EQU   13
         SPACE 2
         BALR  BASEREG,0                ESTABLISH                  000D
         USING *,BASEREG                  MODULE ADDRESSABILITY    000D
         USING IECTIOB,IOBREG             IOB ADDRESSABILITY       000D
         USING IHADCB,DCBREG              DCB ADDRESSABILITY       000D
         L     DECBREG,IOBECBPT        GET DECB ADDRESS            000D
         USING IECTDEB,DEBREG
         L     DEBREG,DCBDEBAD
         L     DEBREG,28(DEBREG)
         SR    UCBREG,UCBREG
         IC    UCBREG,IOBUCBX
         SLL   UCBREG,2
         L     UCBREG,DEBUCBAD(UCBREG)
         LA    COMREG,300                                          000D
         CH    COMREG,6(DECBREG)                                   000D
         BNH    CONTINUE                                           000D
NOMESSG   EQU   *
         OI    IOBINCAM,X'02'          TURN ON ERROR BIT           000D
         B     STORLENG                                            000D
CONTINUE EQU   *                                                   000D
         L     DCBREG,IOBECBPT             *                       000D
         L     DCBREG,8(DCBREG)             *                      000D
         L     IOREG,IOBCPA+40          GET ADDRESS OF I/O AREA  A27602
         CH    TYPEREG,CODE4            IS X FOR NORMAL EBCDIC MSG 000D
         BE    NORMEBCD                 YES, GO TO PROPER ROUTINE  000D
         CH    TYPEREG,CODE20           DOES X=20                  000L
         BE    TEST20                                              000L
         CH    TYPEREG,CODE21           DOES X=21                  000L
         BE    TEST21                                              000L
         CH    TYPEREG,CODE22           DOES X=22                  000L
         BE    TEST22                                              000L
         N     TYPEREG,MASK             TURN OFF HI-ORDER BITS     000D
         SLL   TYPEREG,2                MULTIPLY BY FOUR           000D
         B     FINDTBLE(TYPEREG)        GO TO RIGHT RTN. VIA B-TAB 000D
         SPACE 2                                                   000D
FINDTBLE B     WEAKLEAS                 WEAK MESSAGE - LEASED LINE 000D
         NOP   FINDTBLE                                            000D
         B     XPARENT                  TRANSPARENT MESSAGE        000D
         B     WKDLESYN                 WEAK PATTRN - DLESYN       000D
         B     PRINTER                  PRINTER MESSAGE            000D
         B     PUNCH                    PUNCH MESSAGE              000D
         B     ALPHA                    ALPHAMERIC MESSAGE         000D
         B     WEAKSWIT                 WEAK MESSAGE - SWITCHED    000D
         SPACE 2                                                   000D
NORMEBCD MVC   0(249,IOREG),NORMTEXT    MOVE TEXT INTO MESSGE AREA 000L
         BAL   10,ADDR                                             000L
         LA    LENGTREG,249             GET LENGTH OF MESSAGE      000L
         B     MOVECCW                                             000D
         SPACE 2
TEST20   MVC   0(2,IOREG),DCBBSTSX      MOVE IN DLE STX            000L
         MVC   2(16,IOREG),UTHRUZ       MOVE IN U-Z, 0-9           000L
         MVC   18(64,IOREG),TRANSTXT    MOVE IN 00 - 3F            000L
         LA    LENGTREG,82              GET LENGTH                 000L
         B     STORLENG                                            000L
    SPACE  2
TEST21   BAL   10,MOVE                  MOVE IN DLESTX             000L
         MVC   38(84,IOREG),TRANSTXT    MOVE IN 00 - 53            000L
         LA    LENGTREG,122             LOAD LENGTH                000L
         B     STORLENG                                            000L
    SPACE   2
TEST22   BAL   10,MOVE                                             000L
         MVC   38(108,IOREG),TRANSTXT   MOVE IN 00 - 6B            000L
         LA    LENGTREG,146             GET LENGTH                 000L
         B     STORLENG                                            000L
   SPACE   2
MOVE     MVC   0(2,IOREG),DCBBSTSX      MOVE IN DLE STX            000L
         MVC   2(36,IOREG),EBCDIC       MOVE IN A - Z, 0 - 9       000L
         BR    10                                                  000L
     SPACE    2
WEAKLEAS MVI   0(IOREG),STX             MOVE STX INTO I/O AREA     000D
         MVC   1(2,IOREG),EBCDSYN      MOVE IN SYN CHARACTERS
         BAL   10,ADDR                                             000L
         MVI   3(IOREG),XAA             BUILD MESSAGE IN I/O AREA  000L
         MVC   4(39,IOREG),3(IOREG)       WEAK PATTERN             000L
         MVI   43(IOREG),X55                FOR                    000L
         MVC   44(39,IOREG),43(IOREG)         LEASED LINE          000L
MOVEETX  MVI   83(IOREG),ETX            MOVE ETX INTO I/O AREA     000L
         LA    LENGTREG,84              GET MESSAGE LENGTH         000L
         B     MOVECCW                  MODIFY CH.PGM FOR NORMAL   000D
         SPACE 2                                                   000D
XPARENT  MVC   0(2,IOREG),DCBBSTSX      MOVE DLE-STX CHARS         000D
         LA    LENGTREG,256             BUILD TABLE                000D
         STC   LENGTREG,2(LENGTREG,IOREG)   OF ALL                 000D
         BCT   LENGTREG,*-4                   EBCDIC CHARACTERS    000D
         STC   LENGTREG,2(IOREG)       STORE ZEROTH DIGIT          000D
         LA    LENGTREG,258             GET MESSAGE LENGTH         000D
         B     STORLENG                                            000D
         SPACE 2                                                   000D
WKDLESYN MVC   0(2,IOREG),DCBBSTSX      MOVE DLE STX CHARACTERS    000D
         MVI   2(IOREG),ZERO            BUILD MESSAGE FOR          000D
         MVC   3(256,IOREG),2(IOREG)      WEAK PATTERN             000D
         MVC   259(23,IOREG),258(IOREG)    DLE-SYN INSERTION       000D
         MVI   282(IOREG),SYN                *                     000D
         MVC   283(9,IOREG),282(IOREG)         *                   000D
         LA    LENGTREG,292             GET MESSAGE LENGTH         000D
         B     STORLENG                                            000D
         SPACE 2
PRINTER  MVC   0(3,IOREG),PRNTESC       MOVE STX & ESCAPE SEQUENCE 000D
MOVETEXT MVC   3(37,IOREG),EBCDIC       MOVE TEXT TO I/O AREA      000D
         LA    LENGTREG,40              GET MESSAGE LENGTH         000D
         B     MOVECCW                                             000D
PUNCH    MVC   0(3,IOREG),PNCHESC       MOVE STX & ESCAPE SEQUENCE 000D
         B     MOVETEXT                                            000D
         SPACE 2
WEAKSWIT MVI   0(IOREG),STX             MOVE STX INTO I/O AREA     000D
         MVC   1(2,IOREG),EBCDSYN      MOVE IN SYN CHARACTERS
         BAL   10,ADDR                                             000L
         MVI   3(IOREG),ZERO            MOVE IN TEXT FOR           000L
         MVC   4(73,IOREG),3(IOREG)       WEAK PATTER              000L
         MVI   77(IOREG),SYN                ON A                   000L
         MVC   78(5,IOREG),77(IOREG)         SWITCHED LINE         000L
         B     MOVEETX                                             000D
         SPACE 2
ADDR     EQU   *                                                   000L
         TM    17(UCBREG),X'40'         IS THIS MULTIPOINT         000L
         BZ    ADDR0                                               000L
         BR    10                                                  000L
ADDR0    EQU   *                                                   000L
         L     CNTREG,12(DECBREG)       GET ADDR OF I/O AREA       000L
         CLI   6(CNTREG),X'00'          ADDR = 0                   000L
         BE    0(10)                                               000L
         CLI   6(CNTREG),X'01'          ADDR = 1                   000L
         BNE   NOT1                                                000L
         MVC   1(1,IOREG),7(CNTREG)     MOVE ADDR INTO TEXT        000L
         BR    10                                                  000L
NOT1     EQU   *                                                   000L
         MVC   1(2,IOREG),7(CNTREG)                                000L
         BR    10                       RETURN                     000L
      SPACE   2
ALPHA    MVI   0(IOREG),STX             MOVE IN ETX                000D
         MVC   1(2,IOREG),EBCDSYN      MOVE IN SYN CHARACTERS
         BAL   10,ADDR                                             000L
         MVC   3(37,IOREG),EBCDIC       MOVE TEXT INTO I/O AREA    000L
         LA    LENGTREG,40              GET MESSAGE LENGTH         000L
MOVECCW  MVC   IOBCPA+48(8),IOBCPA+56   OVERLAY TRANSPARENT CCW  A27602
STORLENG STH   LENGTREG,IOBCPA+46       STORE LENGTH IN CCW      A27602
         LA    IOREG,IOBCPA             OUT CHANNEL PROGRAM        000D
         ST    IOREG,IOBSTART             ADDRESS IN IOBSTART      000D
         XC    IOBUCBX+2(4),IOBUCBX+2   ZERO OUT COUNTERS          000D
         L     LENGTREG,IOBECBPT       GET DECB ADDRESS            000D
         L     TYPEREG,0(LENGTREG)     SAVE ECB                    000D
         SVC    0                                                  000D
         ST    TYPEREG,0(LENGTREG)     RESTORE ECB                 000D
         SVC   3                       RETURN          LAGS        000D
NORMTEXT DC    X'023232'                                           000L
         DC    X'000405060708090A0B0C0D'                           000D
         DC    X'0E0F111213141516171819'                           000D
         DC    X'1A1B1C1D1E2021222324'                             000D
         DC    X'252728292A2B2C2F303133'                           000D
         DC    X'34353638393A3B3C3E3F40'                           000D
         DC    X'4142434445464748494A4B'                           000D
         DC    X'4C4D4E4F50515253545556'                           000D
         DC    X'5758595A5B5C5D5E5F6061'                           000D
         DC    X'62636465666768696A6B6C'                           000D
         DC    X'6D6E6F7071727374757677'                           000D
         DC    X'78797A7B7C7D7E7F808182'                           000D
         DC    X'838485868788898A8B8C8D'                           000D
         DC    X'8E8F909192939495969798'                           000D
         DC    X'999A9B9C9D9E9FA0A1A2A3'                           000D
         DC    X'A4A5A6A7A8A9AAABACADAE'                           000D
         DC    X'AFB0B1B2B3B4B5B6B7B8B9'                           000D
         DC    X'BABBBCBDBEBFC0C1C2C3C4'
         DC    X'C5C6C7C8C9CACBCCCD'
         DC    X'CECFD0D1D2D3D4D5D6D7D8D9'
         DC    X'DADBDCDDDEDFE0E1'
         DC    X'E2E3E4E5E6E7E8E9EAEBEC'
         DC    X'EDEEEFF0F1F2F3F4F5F6F7F8F9'
         DC    X'FAFBFCFDFEFF'
         DC    X'03'
TRANSTXT DC    X'000102030405060708090A'                           000L
         DC    X'0B0C0D0E0F101112131415'                           000L
         DC    X'161718191A1B1C1D1E1F20'                           000L
         DC    X'2122232425262728292A2B'                           000L
         DC    X'2C2D2E2F30313233343536'                           000L
         DC    X'3738393A3B3C3D3E3F4041'                           000L
         DC    X'42434445464748494A4B4C'                           000L
         DC    X'4D4E4F5051525354555657'                           000L
         DC    X'58595A5B5C5D5E5F606162'                           000L
         DC    X'636465666768696A6B'                               000L
EBCDIC   DC    X'C1C2C3C4C5C6C7C8C9D1D2'                           000D
         DC    X'D3D4D5D6D7D8D9E2E3'                               000L
UTHRUZ   DC    X'E4E5E6E7E8E9'                                     000L
NUMBERS  DC    X'F0F1F2F3F4F5F6F7F8F9'                             000L
         DC    X'03'                                               000D
STX      EQU   X'02'                                               000D
ETX      EQU   X'03'                                               000D
XAA      EQU   X'AA'                                               000D
X55      EQU   X'55'                                               000D
SYN      EQU   X'32'                                               000D
ZERO     EQU   X'00'                                               000D
EBCDSYN DC     X'3232'
PRNTESC  DC    X'022761'                                           000D
PNCHESC  DC    X'0227F4'                                           000D
         DS    0F                                                  000D
MASK     DC    X'FFFFFFE7'                                         000D
CODE4    DC    X'0004'                                             000D
CODE20   DC    X'0014'                                             000L
CODE21   DC    X'0015'                                             000L
CODE22   DC    X'0016'                                             000L
         CNOP   0,8                                                000D
         IECTDEBX
         IECTIOBX                                                  000D
         DCBD  DSORG=BX,DEVD=BS                                    000D
         END
