         TITLE 'HMASMZAP - SMP SUPERZAP INTERFACE'
HMASMZAP CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMZAP  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @08,@SA00001                                        0001
         ST    @08,8(,@13)                                         0001
         LR    @13,@08                                             0001
*   ZAPRTNCD=ZERO;                  /* INIT RC AREA          @YA07506*/
         MVI   ZAPRTNCD,X'00'                                      0211
*   IOPPTR=CCAIOPTR;                /* INITIALIZE POINTER TO IOP     */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0212
*   HMASMMGP=''B;                   /* CLEAR MESSAGE PARAMETER LIST
*                                                            @Z67SP00*/
         XC    HMASMMGP(40),HMASMMGP                               0213
*   MGPPRINT=ON;                    /* INDICATE PRINTER              */
*   MGPHLDS=ON;                     /*                       @PI04500*/
         OI    MGPPRINT,B'10010000'                                0215
*   SAVBUFAD=IOPBUFAD;              /* * SAVE IOP BUFFER ADDRESS     */
         L     @15,IOPBUFAD(,IOPPTR)                               0216
         ST    @15,SAVBUFAD                                        0216
         EJECT
*                                                                  0217
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THROUGH PTFS THAT CONTAIN ZAPS, THAT ARE NOT COMPLETE AND*/
*   /* NOT NOGO. SET VERIFY PASS. PROCESS EACH MODULE, BY LOAD       */
*   /* MODULE, BY READING SUPERZAP CONTROL STATEMENTS FROM ENTRY ON  */
*   /* SMPWRK, VALIDITY CHECKING STATEMENTS, AND WRITTING STATEMENTS */
*   /* REQUIRED FOR VERIFY PASS TO SYSUT1. INVOKE SUPERZAP WITH      */
*   /* SYSUT1 AS SYSIN FOR EACH LIBRARY REQUIRED. REPEAT FOR EACH    */
*   /* LOAD MODULE. THEN SWITCH TO REPLACE PASS AND REPEAT ENTIRE    */
*   /* PROCESS. IF PTF LEVEL ERROR, MARK PTF NOGO AND PROCESS NEXT   */
*   /* PTF. IF SMP LEVEL, MARK PTF NOGO AND PERFORM EXIT PROCESSING. */
*   /* AFTER ALL PTFS ARE PROCESSED, PERFORM EXIT PROCESSING.        */
*   /*                                                       @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0217
*   DO I=1 TO MX WHILE ICTPEND(I)^=ICTENDNT/* TILL END OF PTFS     0217
*                                                            @Z40SP00*/
*         &ZAPRTNCD<STOPFUNC;       /*                       @Z67SP00*/
         LA    @15,1                                               0217
         STH   @15,I                                               0217
@DL00217 MH    @15,@CH01885                                        0217
         L     @08,CCAICPTF(,CCAPTR)                               0217
         ST    @15,@TF00001                                        0217
         ALR   @15,@08                                             0217
         AL    @15,@CF01901                                        0217
         MVC   @TF00002(4),ICTPEND(@15)                            0217
         L     @15,@TF00002                                        0217
         CL    @15,ICTENDNT                                        0217
         BE    @DC00217                                            0217
         CLI   ZAPRTNCD,12                                         0217
         BNL   @DC00217                                            0217
*     ZFLAGS1=ZERO;                 /* ZERO FLAGS                    */
         MVI   ZFLAGS1,X'00'                                       0218
*     ZFLAGS2=ZERO;                 /* ZERO FLAGS                    */
         MVI   ZFLAGS2,X'00'                                       0219
*     VERPASS=ON;                   /* INDICATE NOW IN VERIFY PASS   */
         OI    VERPASS,B'00000100'                                 0220
*     IF ICTPNOGO(I)=ON             /* OR THE MODULE IS MARKED NOGO  */
*         ×ICTPECPL(I)=ON           /* OR THE PTF MARKED COMPLETE  0221
*                                                            @Z67SP00*/
*       THEN                                                       0221
         LR    @15,@08                                             0221
         AL    @15,@TF00001                                        0221
         AL    @15,@CF01903                                        0221
         TM    ICTPNOGO-8(@15),B'01000000'                         0221
         BO    @RT00221                                            0221
         AL    @08,@TF00001                                        0221
         AL    @08,@CF01904                                        0221
         TM    ICTPECPL-14(@08),B'01000000'                        0221
         BO    @RT00221                                            0221
*       GO TO HMAZP050;             /* GET NEXT PTF                  */
         EJECT
*                                                                  0223
*     /***************************************************************/
*     /*                                                             */
*     /* MODULE LOOP. PROCESS EACH MODULE THAT IS ZAP TYPE, NOT NOGO,*/
*     /* AND NOT COMPLETE.                                   @Z40SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0223
*HMAZP010:                                                         0223
*     DO J=1 TO MX WHILE ICTIXP(J)^=ICTENDIX;/* TILL END OF MODS   0223
*                                                            @Z40SP00*/
HMAZP010 LA    @15,1                                               0223
         STH   @15,J                                               0223
@DL00223 SLA   @15,2                                               0223
         LH    @08,I                                               0223
         MH    @08,@CH01885                                        0223
         L     @01,CCAICPTF(,CCAPTR)                               0223
         AL    @01,@CF01905                                        0223
         L     @08,ICTPCHN-64(@08,@01)                             0223
         AL    @08,@CF01906                                        0223
         L     @15,ICTIXP(@15,@08)                                 0223
         CL    @15,ICTENDIX                                        0223
         BE    @DC00223                                            0223
*       IF ICTMZAP(1)=ON&           /* IF THIS MODULE CONTAINS A   0224
*                                      SUPERZAP                      */
*           ICTMISEL(1)=ON          /* SELECTED ELEMENT      @Z67SP00*/
*           &ICTMCPL(1)=OFF         /* AND THE MODULE IS NOT COMPLETE*/
*         THEN                                                     0224
         TM    ICTMZAP(@15),B'00100000'                            0224
         BNO   @RF00224                                            0224
         TM    ICTMISEL(@15),B'10000000'                           0224
         BNO   @RF00224                                            0224
         TM    ICTMCPL(@15),B'00100000'                            0224
         BNZ   @RF00224                                            0224
*         DO;                                                      0225
*           ICTMPROC(1)=ON;         /* MOD BEING PROCESSED   @Z67SP00*/
         OI    ICTMPROC(@15),B'10000000'                           0226
*           DODUMP=OFF;             /* RESET DUMP CARD FOUND SW IN 0227
*                                      CASE OF BAD LMOD WHICH WOULD
*                                      NOT GO THRU NAME LOGIC      0227
*                                                            @ZA01311*/
*                                                                  0227
         NI    DODUMP,B'11111011'                                  0227
*           /*********************************************************/
*           /*                                                       */
*           /* LOAD MODULE LOOP. PROCESS EACH LOAD MODULE FOR THIS   */
*           /* MODULE.                                       @Z40SP00*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0228
*           DO K=1 TO MX WHILE ICTIXM(K)^=ICTENDIX;/* TILL END LMODS
*                                                            @Z40SP00*/
         LA    @15,1                                               0228
         STH   @15,K                                               0228
@DL00228 SLA   @15,2                                               0228
         LH    @08,J                                               0228
         SLA   @08,2                                               0228
         LH    @07,I                                               0228
         MH    @07,@CH01885                                        0228
         L     @01,CCAICPTF(,CCAPTR)                               0228
         AL    @01,@CF01905                                        0228
         L     @01,ICTPCHN-64(@07,@01)                             0228
         AL    @01,@CF01906                                        0228
         L     @08,ICTIXP(@08,@01)                                 0228
         MVC   @TF00001(4),ICTMCHN(@08)                            0228
         L     @01,@TF00001                                        0228
         AL    @01,@CF01906                                        0228
         L     @15,ICTIXM(@15,@01)                                 0228
         CL    @15,ICTENDIX                                        0228
         BE    @DC00228                                            0228
*             ANYUT1=OFF;           /* ASSUME POSSIBILITY THAT SYSUT1
*                                      NOT WRITTEN           @SA71755*/
*             ZAPFLSH=OFF;          /* IN CASE PREVIOUS LMOD ZAP WAS
*                                      FLUSHED TO EOF        @SA71755*/
         NI    ANYUT1,B'11011110'                                  0230
*             TWONAME=OFF;          /* CANNOT ASSUME TWO OPERAND NAME
*                                      CARD                  @Z40SP00*/
*             ONENAME=OFF;          /* CANNOT ASSUME ONE OPERAND NAME
*                                      CARD                  @Z40SP00*/
*             NAMESCH=OFF;          /* ASSUME NAME CARD NOT SCANNED
*                                                            @Z40SP00*/
*             BRSW=OFF;             /* ASSUME NAME CARD NOT SCANNED
*                                      AND WRITTEN           @Z40SP00*/
         NI    TWONAME,B'00001111'                                 0234
*                                                                  0235
*             /*******************************************************/
*             /*                                                     */
*             /* LOCATE MODULE ON SMPWRK. WRITE A SUPERZAP COMMENT   */
*             /* STATEMENT ON SYSUT1 FOR INPUT TO IMASPZAP.  @Z40SP00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0235
*             IOPRETRN=IOPGOOD;     /* INSURE RETURN CODE IS ZERO TO
*                                      START                 @Z40SP00*/
         MVI   IOPRETRN(IOPPTR),X'00'                              0235
*             IOPDSID=IOPWKX;       /* SET DATA SET TO WRK   @Z67SP00*/
         MVI   IOPDSID(IOPPTR),X'28'                               0236
*             IOPFUNCT=IOPLOC;      /* INDICATE LOCATE FUNCTION      */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0237
*             IOPNAME=ICTMNAME(1);  /* INDICATE NAME TO READ         */
         MVC   IOPNAME(8,IOPPTR),ICTMNAME(@08)                     0238
*             IOPTYPE=IOPZAP;       /* SET WRK ENTRY TYPE    @Z67SP00*/
         MVI   IOPTYPE(IOPPTR),X'0C'                               0239
*             CALL HMASMIO(HMASMIOP);/* CALL IO ROUTINE              */
         ST    IOPPTR,@AL00001                                     0240
         L     @15,@CV01807                                        0240
         LA    @01,@AL00001                                        0240
         BALR  @14,@15                                             0240
*             IF IOPRETRN^=IOPGOOD  /* ERROR?                @YA07506*/
*               THEN                                               0241
         CLI   IOPRETRN(IOPPTR),0                                  0241
         BE    @RF00241                                            0241
*               DO;                 /* YES --                @YA07506*/
*                 ZAPRTNCD=MAX(ZAPRTNCD,STOPSMP);/*          @Z67SP00*/
         SLR   @15,@15                                             0243
         IC    @15,ZAPRTNCD                                        0243
         LA    @08,16                                              0243
         CR    @15,@08                                             0243
         BNL   *+6
         LR    @15,@08                                             0243
         STC   @15,ZAPRTNCD                                        0243
*                 ZAPERROR=ON;      /* I/O ERROR             @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0244
*                 GO TO HMAZP050;   /* FLUXH EXIT            @Z67SP00*/
         B     HMAZP050                                            0245
*               END;                /*                       @YA07506*/
*             ELSE                  /* OK TO CONTINUE        @Z67SP00*/
*               DO;                 /*                       @Z67SP00*/
@RF00241 DS    0H                                                  0248
*                 IOPFUNCT=IOPPOSI; /* POSITION WRK FOR INPUT        */
         MVI   IOPFUNCT(IOPPTR),X'02'                              0248
*                 CALL HMASMIO(HMASMIOP);/* DO IO                    */
         ST    IOPPTR,@AL00001                                     0249
         L     @15,@CV01807                                        0249
         LA    @01,@AL00001                                        0249
         BALR  @14,@15                                             0249
*                 IF IOPRETRN=IOPGOOD/* OK ?                 @Z67SP00*/
*                   THEN            /* YES                   @YA07506*/
         CLI   IOPRETRN(IOPPTR),0                                  0250
         BNE   @RF00250                                            0250
*                   DO;             /*                       @Z67SP00*/
*                     HDRPTF=ICTPTFS(I);/* PUT PTF NUM IN HDR      0252
*                                                            @YA06930*/
         LH    @15,I                                               0252
         MH    @15,@CH01885                                        0252
         L     @08,CCAICPTF(,CCAPTR)                               0252
         ST    @15,@TF00001                                        0252
         ALR   @15,@08                                             0252
         AL    @15,@CF01901                                        0252
         MVC   HDRPTF(7),ICTPTFS(@15)                              0252
*                     HDRMOD=ICTMNAME(1);/* PUT MOD NAME IN HDR    0253
*                                                            @YA06930*/
         LH    @15,J                                               0253
         SLA   @15,2                                               0253
         L     @01,@TF00001                                        0253
         AL    @08,@CF01905                                        0253
         L     @08,ICTPCHN-64(@01,@08)                             0253
         AL    @08,@CF01906                                        0253
         L     @15,ICTIXP(@15,@08)                                 0253
         MVC   HDRMOD(8),ICTMNAME(@15)                             0253
*                     IOPBUFAD=ADDR(HDRRCD);/* PTR TO RCD TO WRITE 0254
*                                                            @YA06930*/
         LA    @15,HDRRCD                                          0254
         ST    @15,IOPBUFAD(,IOPPTR)                               0254
*                     IOPFUNCT=IOPWRITE;/* SET TO WRITE HEADER RCD 0255
*                                                            @YA06930*/
         MVI   IOPFUNCT(IOPPTR),X'51'                              0255
*                     IOPDSID=IOPSCR1;/* INDICATE UTILITY SYSUT1   0256
*                                                            @YA06930*/
         MVI   IOPDSID(IOPPTR),X'03'                               0256
*                     CALL HMASMIO(HMASMIOP);/* ENSURE SYSUT1 OPEN IN
*                                      CASE OF MISSING ZAP NAME CARD
*                                                            @YA06930*/
         ST    IOPPTR,@AL00001                                     0257
         L     @15,@CV01807                                        0257
         LA    @01,@AL00001                                        0257
         BALR  @14,@15                                             0257
*                     IOPBUFAD=SAVBUFAD;/* RESTORE BUF PTR TO DRV BUF
*                                                            @YA06930*/
         L     @15,SAVBUFAD                                        0258
         ST    @15,IOPBUFAD(,IOPPTR)                               0258
*                   END;            /*                       @Z67SP00*/
*                 IF IOPRETRN>IOPGOOD/* WRITE OK?            @YA07506*/
*                   THEN                                           0260
@RF00250 CLI   IOPRETRN(IOPPTR),0                                  0260
         BNH   @RF00260                                            0260
*                   DO;             /* NO - MESSAGE AND TERMINATE  0261
*                                                            @YA06930*/
*                     ZAPERROR=ON;  /* CONTROL SW            @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0262
*                     ZAPRTNCD=MAX(ZAPRTNCD,IOPRETRN);/* SET RC    0263
*                                                            @YA07506*/
         SLR   @15,@15                                             0263
         IC    @15,ZAPRTNCD                                        0263
         SLR   @08,@08                                             0263
         IC    @08,IOPRETRN(,IOPPTR)                               0263
         CR    @15,@08                                             0263
         BNL   *+6
         LR    @15,@08                                             0263
         STC   @15,ZAPRTNCD                                        0263
*                     IOPBUFAD=SAVBUFAD;/* RESTORE BUFFER ADDRES   0264
*                                                            @YA06930*/
         L     @15,SAVBUFAD                                        0264
         ST    @15,IOPBUFAD(,IOPPTR)                               0264
*                     GO TO HMAZP050;/* EXIT                 @Z67SP00*/
         B     HMAZP050                                            0265
*                   END;            /*                       @YA06930*/
*               END;                /*                       @Z67SP00*/
@RF00260 DS    0H                                                  0268
*                                                                  0268
*             /*******************************************************/
*             /*                                                     */
*             /* READ MODULES SUPERZAP STATEMENTS FROM SMPWRK TILL   */
*             /* EOF, WRITING STATEMENTS TO SYSUT1. AFTER EOF ON     */
*             /* SMPWRK, INVOKE SUPERZAP WITH SYSUT1 AS SYSIN.       */
*             /*                                             @Z40SP00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0268
*             DO WHILE IOPRETRN^=IOPEOF;/* DO UNTIL END OF FILE    0268
*                                                            @YA07506*/
         B     @DE00268                                            0268
@DL00268 DS    0H                                                  0269
*               IOPDSID=IOPWKX;     /* INDICATE WRK DATA SET @Z67SP00*/
         MVI   IOPDSID(IOPPTR),X'28'                               0269
*               IOPFUNCT=IOPREAD;   /* READ FUNCTION                 */
         MVI   IOPFUNCT(IOPPTR),X'01'                              0270
*               CALL HMASMIO(HMASMIOP);/* DO THE READ                */
         ST    IOPPTR,@AL00001                                     0271
         L     @15,@CV01807                                        0271
         LA    @01,@AL00001                                        0271
         BALR  @14,@15                                             0271
*               IF IOPRETRN=IOPEOF  /* IS IT EOF?            @YA07506*/
*                 THEN                                             0272
         CLI   IOPRETRN(IOPPTR),4                                  0272
         BE    @RT00272                                            0272
*                 GO TO HMAZP040;   /* YES - INVOKE SUPERZAP         */
*               IF IOPRETRN>IOPEOF  /* IF AN IO ERROR        @YA07506*/
*                 THEN                                             0274
         CLI   IOPRETRN(IOPPTR),4                                  0274
         BNH   @RF00274                                            0274
*                 DO;               /*                       @YA07506*/
*                   ZAPERROR=ON;    /* ERROR SW              @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0276
*                   ZAPRTNCD=MAX(ZAPRTNCD,IOPRETRN,/* SET RC @YA07506*/
*                       STOPPTF);   /*                       @Z67SP00*/
         SLR   @15,@15                                             0277
         IC    @15,ZAPRTNCD                                        0277
         SLR   @08,@08                                             0277
         IC    @08,IOPRETRN(,IOPPTR)                               0277
         CR    @15,@08                                             0277
         BNL   *+6
         LR    @15,@08                                             0277
         LA    @08,8                                               0277
         CR    @15,@08                                             0277
         BNL   *+6
         LR    @15,@08                                             0277
         STC   @15,ZAPRTNCD                                        0277
*                   IOPFUNCT=IOPCLOSE;/* INDICATE CLOSE OPERATION    */
         MVI   IOPFUNCT(IOPPTR),X'50'                              0278
*                   IOPDSID=IOPSCR1;/* INDICATE SCRATCH DATA SET     */
         MVI   IOPDSID(IOPPTR),X'03'                               0279
*                   CALL HMASMIO(HMASMIOP);/* CLOSE SYSUT1           */
         ST    IOPPTR,@AL00001                                     0280
         L     @15,@CV01807                                        0280
         LA    @01,@AL00001                                        0280
         BALR  @14,@15                                             0280
*                   GO TO HMAZP050; /* GET NEXT PTF                  */
         B     HMAZP050                                            0281
*                 END;                                             0282
*                                                                  0282
*               /*****************************************************/
*               /*                                                   */
*               /* SCAN RECORD FOR TYPE                              */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0283
*               CMNTSW=OFF;         /* SET SW TO NOT COMMENT SETTING
*                                                            @OY01955*/
@RF00274 DS    0H                                                  0284
*               DUMPSW=OFF;         /* SET DUMP SW TO NOT DUMP     0284
*                                      SETTING               @OY01965*/
         NI    CMNTSW,B'11100111'                                  0284
*               ANYTWO=OFF;         /* SET NO SECOND NAME    @ZA01311*/
         NI    ANYTWO,B'11111101'                                  0285
*               SCPEOR=ZERO;        /* CLEAR SCAN END OF RECORD FLAGS*/
         MVI   SCPEOR,X'00'                                        0286
*               SCPCHAR=IOPBUFAD;   /* ADDRESS OF RECORD TO SCAN     */
         L     @15,IOPBUFAD(,IOPPTR)                               0287
         ST    @15,SCPCHAR                                         0287
*               SCPSRCH=ADDR(KCMNT);/* POINTER TO DSCAN ARGUMENTS    */
         LA    @15,KCMNT                                           0288
         ST    @15,SCPSRCH                                         0288
*               LMNAME=BLANK;       /* BLANK LMOD FILLER     @YA08143*/
         MVI   LMNAME+1,C' '                                       0289
         MVC   LMNAME+2(6),LMNAME+1                                0289
         MVI   LMNAME,C' '                                         0289
*               SECNAME=BLANK;      /* BLANK CSECT FILLER    @YA08143*/
         MVI   SECNAME+1,C' '                                      0290
         MVC   SECNAME+2(6),SECNAME+1                              0290
         MVI   SECNAME,C' '                                        0290
*               SCPINLN=71;         /* LENGTH OF RECORD TO SCAN      */
         MVC   SCPINLN(2),@CH01036                                 0291
*               CALL HMASMSCN(HMASMSCP);/* CALL SCAN ROUTINE         */
         L     @15,@CV01804                                        0292
         LA    @01,@AL00292                                        0292
         BALR  @14,@15                                             0292
*               IF SCPRET>SCPGOOD   /* IF BAD RETURN CODE FROM SCAN
*                                                            @YA07506*/
*                 THEN                                             0293
         CLI   SCPRET,0                                            0293
         BNH   @RF00293                                            0293
*                 DO;               /*                       @YA07506*/
*                   ZAPERROR=ON;    /* ERROR SW              @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0295
*                   IF SCPRET^>SCPBAD/* SYNTAX ERROR?        @YA07506*/
*                     THEN                                         0296
         CLI   SCPRET,4                                            0296
         BH    @RF00296                                            0296
*                     ZAPRTNCD=MAX(ZAPRTNCD,STOPPTF);/* SET RC TO  0297
*                                      STOPPTF               @YA07506*/
         SLR   @15,@15                                             0297
         IC    @15,ZAPRTNCD                                        0297
         LA    @08,8                                               0297
         CR    @15,@08                                             0297
         BNL   *+6
         LR    @15,@08                                             0297
         STC   @15,ZAPRTNCD                                        0297
*                   ELSE                                           0298
*                     ZAPRTNCD=MAX(ZAPRTNCD,SCPRET);/* ELSE SET TO 0298
*                                      SCAN ERR              @YA07506*/
         B     @RC00296                                            0298
@RF00296 SLR   @15,@15                                             0298
         IC    @15,ZAPRTNCD                                        0298
         SLR   @08,@08                                             0298
         IC    @08,SCPRET                                          0298
         CR    @15,@08                                             0298
         BNL   *+6
         LR    @15,@08                                             0298
         STC   @15,ZAPRTNCD                                        0298
*                   IF ZAPRTNCD>=STOPFUNC/* KILL FUNCTION?   @YA07506*/
*                     THEN                                         0299
@RC00296 CLI   ZAPRTNCD,12                                         0299
         BNL   @RT00299                                            0299
*                     GO TO HMAZP050;/* EXIT                 @Z67SP00*/
*                   GO TO HMAZP032; /* PRINT MESSAGE AND GET NEXT PTF*/
         B     HMAZP032                                            0301
*                 END;              /*                       @YA07506*/
*                                                                  0302
*               /*****************************************************/
*               /*                                                   */
*               /* VALIDITY CHECK SUPERZAP NAME STATEMENTS   @Z40SP00*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0303
*               IF NAMESCH=ON       /* JUST SCANNED NAME CRD @ZA01311*/
*                   &ANYTWO=OFF     /* AND DID NOT HIT SECOND OPERAND
*                                      ON NAME CARD          @ZA01311*/
*                 THEN              /* THEN MUST BE ONE OPER @ZA01311*/
@RF00293 TM    NAMESCH,B'10000000'                                 0303
         BNO   @RF00303                                            0303
         TM    ANYTWO,B'00000010'                                  0303
         BNZ   @RF00303                                            0303
*                 ONENAME=ON;       /* ONLY, SET SW          @ZA01311*/
         OI    ONENAME,B'01000000'                                 0304
*               IF SCPRET=SCPGOOD   /* IF RETURN FROM SCAN IS ZERO 0305
*                                                            @YA07506*/
*                 THEN                                             0305
@RF00303 CLI   SCPRET,0                                            0305
         BNE   @RF00305                                            0305
*                 DO;                                              0306
*                   IF NOWRITE=ON   /* IF NOWRITE TO SYSUT1 IS ON    */
*                     THEN                                         0307
         TM    NOWRITE,B'10000000'                                 0307
         BNO   @RF00307                                            0307
*                     DO;                                          0308
*                       NOWRITE=OFF;/* CLEAR NOWRITE SW              */
         NI    NOWRITE,B'01111111'                                 0309
*                       GO TO HMAZP035;/* GET NEXT RECORD            */
         B     HMAZP035                                            0310
*                     END;                                         0311
*                   IF DUMPSW=ON    /* WAS THIS DUMP CARD?   @SA70966*/
*                     THEN          /* YES                   @SA70966*/
@RF00307 TM    DUMPSW,B'00001000'                                  0312
         BO    @RT00312                                            0312
*                     GO TO HMAZP110;/* GO TO NAME/DUMP BUILD ROUT 0313
*                                                            @SA70966*/
*                   IF BRSW=ON      /* IF NAME PROCCESSED AND      0314
*                                      WRITTEN, THEN THIS CARD IS  0314
*                                      VALID,                @Z40SP00*/
*                       ×CMNTSW=ON  /* OR, THIS WAS ZAP COMMENT CARD
*                                                            @OY01955*/
*                     THEN                                         0314
         TM    BRSW,B'00010000'                                    0314
         BO    @RT00314                                            0314
         TM    CMNTSW,B'00010000'                                  0314
         BO    @RT00314                                            0314
*                     GO TO HMAZP120;/* GO WRITE THIS RECORD         */
*                 END;                                             0316
*               IF TWONAME=ON       /* JUST SCANNED A TWO OPERAND  0317
*                                      NAME CARD                     */
*                   &ZAPKILL=OFF    /* AND NOT INVALID LMOD? @SA71755*/
*                 THEN              /* YES --                @OS70966*/
@RF00305 TM    TWONAME,B'00100000'                                 0317
         BNO   @RF00317                                            0317
         TM    ZAPKILL,B'00000010'                                 0317
         BZ    @RT00317                                            0317
*                 GO TO HMAZP110;   /* GO TO NAME CARD BUILD ROUTINE
*                                                            @OS70966*/
*               IF NAMESCH=ON       /* IF A VALID ONE OPERAND NAME 0319
*                                      CARD OR AN INVALID TWO OPERAND
*                                      NAME CARD JUST SCANNED      0319
*                                                            @Z40SP00*/
*                 THEN              /* THEN -----            @Z40SP00*/
@RF00317 TM    NAMESCH,B'10000000'                                 0319
         BNO   @RF00319                                            0319
*                 DO;                                              0320
*                   IF ZAPFLSH=ON   /* IS THIS NAME CARD BEING     0321
*                                      FLUSHED BECAUSE IT DOES NOT 0321
*                                      BELONG TO THE LMOD IN PROCESS?
*                                                            @Z40SP00*/
*                     THEN          /* YES - IGNORE CONTROL CARDS    */
         TM    ZAPFLSH,B'00100000'                                 0321
         BNO   @RF00321                                            0321
*                     DO;                                          0322
*                       IF ZAPKILL=ON/* IF LMOD IS INVALID ON TWO  0323
*                                      OPERAND NAME CARD     @SA71755*/
*                         THEN                                     0323
         TM    ZAPKILL,B'00000010'                                 0323
         BNO   @RF00323                                            0323
*                         DO;       /* THEN KILL THIS PTF AND CLOSE
*                                      UTILITY SYSUT1        @SA71755*/
*                           ZAPKILL=OFF;/* RST THE MOD FLUSH @SA71755*/
         NI    ZAPKILL,B'11111101'                                 0325
*                           MGPCLEAR=''B;/* CLEAR MSG LIST   @Z67SP00*/
         XC    MGPCLEAR(6),MGPCLEAR                                0326
*                           MGPMGNO1=HMA284I;/* PRIM. MSG.   @SA71755*/
         MVC   MGPMGNO1(2),@CH00521                                0327
*                           MGPMGNO2=PART015;/* SECON. MSG.  @SA71755*/
         MVC   MGPMGNO2(2),@CH00064                                0328
*                           MGPVARPT(1)=ADDR(ICTPTF(I));/* ADDR OF 0329
*                                      PTF NAME              @SA71755*/
         LH    @15,I                                               0329
         MH    @15,@CH01885                                        0329
         L     @08,CCAICPTF(,CCAPTR)                               0329
         LA    @01,0(@15,@08)                                      0329
         AL    @01,@CF01901                                        0329
         ST    @01,MGPVARPT                                        0329
*                           MGPVARPT(2)=ADDR(ICTMOD(1));/* ADDR OF 0330
*                                      MOD NAME              @SA71755*/
         LH    @07,J                                               0330
         SLA   @07,2                                               0330
         AL    @08,@CF01905                                        0330
         L     @15,ICTPCHN-64(@15,@08)                             0330
         AL    @15,@CF01906                                        0330
         L     @15,ICTIXP(@07,@15)                                 0330
         ST    @15,MGPVARPT+4                                      0330
*                           MGPTYPE=MGPERR;/* MESSAGE SEVERITY     0331
*                                                            @ZD00001*/
         MVI   MGPTYPE,X'03'                                       0331
*                           CALL HMASMMSG(HMASMMGP);/* CALL MESS   0332
*                                      ROUTINE               @SA71755*/
         L     @15,@CV01808                                        0332
         LA    @01,@AL00332                                        0332
         BALR  @14,@15                                             0332
*                           ZAPERROR=ON;/* ERROR SW          @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0333
*                           ICTPVERJ(I)=ON;/* PTF HAS VERIFY REJECT
*                                                            @Z40SP00*/
         LH    @15,I                                               0334
         MH    @15,@CH01885                                        0334
         L     @08,CCAICPTF(,CCAPTR)                               0334
         ALR   @08,@15                                             0334
         AL    @08,@CF01903                                        0334
         OI    ICTPVERJ-8(@08),B'00001000'                         0334
*                           ZAPRTNCD=MAX(ZAPRTNCD,STOPPTF);/* SET RC
*                                      TO STOPPTF            @YA07506*/
         SLR   @15,@15                                             0335
         IC    @15,ZAPRTNCD                                        0335
         LA    @08,8                                               0335
         CR    @15,@08                                             0335
         BNL   *+6
         LR    @15,@08                                             0335
         STC   @15,ZAPRTNCD                                        0335
*                           IOPDSID=IOPSCR1;/* INDICATE SCRATCH DATA
*                                      SET                   @SA71755*/
         MVI   IOPDSID(IOPPTR),X'03'                               0336
*                           IOPFUNCT=IOPCLOSE;/* INDICATE CLOSE    0337
*                                      OPERATION             @SA71755*/
         MVI   IOPFUNCT(IOPPTR),X'50'                              0337
*                           CALL HMASMIO(HMASMIOP);/* CLOSE SYSUT1 0338
*                                      UTILITY               @SA71755*/
         ST    IOPPTR,@AL00001                                     0338
         L     @15,@CV01807                                        0338
         LA    @01,@AL00001                                        0338
         BALR  @14,@15                                             0338
*                           ZAPRTNCD=MAX(ZAPRTNCD,IOPRETRN);/* SET RC
*                                                            @Z67SP00*/
         SLR   @15,@15                                             0339
         IC    @15,ZAPRTNCD                                        0339
         SLR   @08,@08                                             0339
         IC    @08,IOPRETRN(,IOPPTR)                               0339
         CR    @15,@08                                             0339
         BNL   *+6
         LR    @15,@08                                             0339
         STC   @15,ZAPRTNCD                                        0339
*                           IF ZAPRTNCD>=STOPFUNC/* KILL FUNCTION OR
*                                      SMP?                  @YA07506*/
*                             THEN                                 0340
         CLI   ZAPRTNCD,12                                         0340
         BNL   @RT00340                                            0340
*                             GO TO HMAZP050;/* EXIT         @Z67SP00*/
*                           GO TO HMAZP048;/* GO TO NEXT MOD TO FLAG
*                                      ANY OTHERS THAT MAY BE IN   0342
*                                      ERROR FOR THIS PTF.   @SA71755*/
         B     HMAZP048                                            0342
*                         END;      /*                       @SA71755*/
*                       ELSE        /* LMOD ZAP FLUSH ONLY   @SA71755*/
*                         GO TO HMAZP035;/* GO GET NEXT RCRD @SA71755*/
*                     END;                                         0345
*                   GO TO HMAZP110; /* GO TO NAME ROUTINE            */
         B     HMAZP110                                            0346
*                 END;                                             0347
*               ELSE                /* MUST BE VALID NON-NAME CARD 0348
*                                      BEFORE ANY VALID NAME CARD  0348
*                                      FOUND                 @Z40SP00*/
*                 IF ZAPFLSH=OFF    /* HOWEVER, IF THIS ZAP CARD IS
*                                      BEING FLUSHED BECAUSE IT DOES
*                                      NOT BELONG TO THE LMOD IN   0348
*                                      PROCESS, THEN FLUSHED CARDS 0348
*                                      SHOULD NOT GIVE ERROR MESSAGES
*                                                            @SA71755*/
*                   THEN            /*                       @SA71755*/
@RF00319 TM    ZAPFLSH,B'00100000'                                 0348
         BNZ   @RF00348                                            0348
*HMAZP032:                                                         0349
*                   DO;             /* PRINT ZAP CARD IN ERROR AND   */
HMAZP032 DS    0H                                                  0350
*                     ZAPERROR=ON;  /* ERROR SW              @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0350
*                     PRLFLGS=ZERO; /* ZERO OUT FLAG BITS    @OY01956*/
         LA    @15,PRLBUF                                          0351
         MVI   PRLFLGS(@15),X'00'                                  0351
*                     PRLDATA(LENGTH(DASHES)+1:LENGTH(DASHES)+LENGTH(
*                         BUFFER))=BUFFER;/* MOVE ZAP CONTROL CARD TO
*                                      OUTPUT BUFFER         @OY01956*/
         L     @08,IOPBUFAD(,IOPPTR)                               0352
         MVC   PRLDATA+10(80,@15),BUFFER(@08)                      0352
*                     PRLRLEN=LENGTH(DASHES)+LENGTH(BUFFER);/* SET 0353
*                                      LINE LENGTH           @OY01956*/
         MVC   PRLRLEN(2,@15),@CH00531                             0353
*                     IOPBUFAD=ADDR(HMASMPRL);/* SET IO PARM LIST TO
*                                      BUFFER                @OY01956*/
         ST    @15,IOPBUFAD(,IOPPTR)                               0354
*                     IOPFUNCT=IOPWRITE;/* SET TO WRITE      @OY01956*/
         MVI   IOPFUNCT(IOPPTR),X'51'                              0355
*                     IOPDSID=IOPPRINT;/* WRITE TO PRINTER   @OY01956*/
         MVI   IOPDSID(IOPPTR),X'0B'                               0356
*                     CALL HMASMIO(HMASMIOP);/* DO WRITE     @OY01956*/
         ST    IOPPTR,@AL00001                                     0357
         L     @15,@CV01807                                        0357
         LA    @01,@AL00001                                        0357
         BALR  @14,@15                                             0357
*                     ZAPRTNCD=MAX(ZAPRTNCD,IOPRETRN);/* SET RC    0358
*                                                            @Z67SP00*/
         SLR   @15,@15                                             0358
         IC    @15,ZAPRTNCD                                        0358
         SLR   @08,@08                                             0358
         IC    @08,IOPRETRN(,IOPPTR)                               0358
         CR    @15,@08                                             0358
         BNL   *+6
         LR    @15,@08                                             0358
         STC   @15,ZAPRTNCD                                        0358
*                     IF ZAPRTNCD>=STOPFUNC/* KILL FUNCTION OR SMP?
*                                                            @YA07506*/
*                       THEN                                       0359
         CLI   ZAPRTNCD,12                                         0359
         BNL   @RT00359                                            0359
*                       GOTO HMAZP050;/* EXIT                @Z67SP00*/
*                     IOPBUFAD=SAVBUFAD;/* RESET BUFFER      @OY01956*/
         L     @15,SAVBUFAD                                        0361
         ST    @15,IOPBUFAD(,IOPPTR)                               0361
*                     OUTREC='';    /* REINIT. BUFFER AREA   @OY01956*/
         MVI   OUTREC,C' '                                         0362
         MVC   OUTREC+1(79),OUTREC                                 0362
*                     MGPCLEAR=''B; /* CLEAR MESSAGE PARAMETER LIST
*                                                            @Z67SP00*/
         XC    MGPCLEAR(6),MGPCLEAR                                0363
*                     MGPMGNO1=HMA231I;/* INDICATE MESSAGE NUMBER 4  */
         MVC   MGPMGNO1(2),@CH00083                                0364
*                     MGPMGNO2=PART015;/* PART TWO OF MESSAGE        */
         MVC   MGPMGNO2(2),@CH00064                                0365
*                     MGPMGNO3=PART011;/* PART THREE OF MESSAGE      */
         MVC   MGPMGNO3(2),@CH00435                                0366
*                     MGPVARPT(1)=ADDR(ICTMOD(1));/* ADDRESS OF MOD  */
         LH    @15,J                                               0367
         SLA   @15,2                                               0367
         LH    @08,I                                               0367
         MH    @08,@CH01885                                        0367
         L     @07,CCAICPTF(,CCAPTR)                               0367
         LA    @01,0(@08,@07)                                      0367
         AL    @01,@CF01905                                        0367
         L     @01,ICTPCHN-64(,@01)                                0367
         AL    @01,@CF01906                                        0367
         L     @15,ICTIXP(@15,@01)                                 0367
         ST    @15,MGPVARPT                                        0367
*                     MGPVARPT(2)=ADDR(ICTPTF(I));/* ADDRESS OF PTF  */
         AL    @07,@CF01901                                        0368
         LA    @15,ICTPTF(@08,@07)                                 0368
         ST    @15,MGPVARPT+4                                      0368
*                     MGPTYPE=MGPERR;/* MESSAGE SEVERITY     @ZD00001*/
         MVI   MGPTYPE,X'03'                                       0369
*                     CALL HMASMMSG(HMASMMGP);/* CALL MESSAGE ROUTINE*/
         L     @15,@CV01808                                        0370
         LA    @01,@AL00370                                        0370
         BALR  @14,@15                                             0370
*                     MGPMGNO3=ZERO;/* SET TERCIARY MSG BACK TO 0  0371
*                                                            @SA71276*/
         SLR   @15,@15                                             0371
         STH   @15,MGPMGNO3                                        0371
*                     ICTPVERJ(I)=ON;/* PTF HAS VERIFY REJECT      0372
*                                                            @Z40SP00*/
         LH    @15,I                                               0372
         MH    @15,@CH01885                                        0372
         L     @08,CCAICPTF(,CCAPTR)                               0372
         ALR   @08,@15                                             0372
         AL    @08,@CF01903                                        0372
         OI    ICTPVERJ-8(@08),B'00001000'                         0372
*                     GO TO HMAZP050;/* MARK PTF IN ERROR            */
         B     HMAZP050                                            0373
*                   END;                                           0374
*HMAZP035:                                                         0375
*             END;                  /* END OF WRK READ LOOP          */
@RF00348 DS    0H                                                  0375
HMAZP035 DS    0H                                                  0375
@DE00268 CLI   IOPRETRN(IOPPTR),4                                  0375
         BNE   @DL00268                                            0375
*                                                                  0376
*             /*******************************************************/
*             /*                                                     */
*             /* AT THIS POINT ALL SUPERZAP CONTROL STATEMENTS FOR A */
*             /* GIVEN MODULE HAVE BEEN SCANNED. IT MAY BE THE FIRST */
*             /* (VER) PASS, OR THE SECOND(REP) PASS. THE UTILITY    */
*             /* FILE CONTAINS SUPERZAP SYSIN AND MUST BE CLOSED AND */
*             /* SUPERZAP INVOKED. IF THE RETURN CODE FROM SUPERZAP  */
*             /* INDICATES SUCCESSFUL COMPLETION THEN THE NEXT PTF   */
*             /* WILL BE CHECKED IF IN REP PASS. OR THE REP PASS WILL*/
*             /* BE INITIATED IF IN THE VER PASS. IF IN VERIFY PASS  */
*             /* AND SUPERZAP RETURN CODE IS GREATER THAN ZERO THE   */
*             /* PTF IS MARKED IN ERROR AND PROCESSING CONTINUES. IF */
*             /* IN THE REP PASS AND THE RETURN CODE IS GREATER THAN */
*             /* THE IMASPZAP RETURN CODE THRESHOLD, THEN THE PTF IS */
*             /* MARKED IN ERROR AND PROCESSING CONTINUES.   @Z40SP00*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0376
*HMAZP040:                                                         0376
*             IOPDSID=IOPSCR1;      /* INDICATE SCRATCH DATA SET     */
HMAZP040 MVI   IOPDSID(IOPPTR),X'03'                               0376
*             IOPFUNCT=IOPCLOSE;    /* INDICATE CLOSE FUNCTION       */
         MVI   IOPFUNCT(IOPPTR),X'50'                              0377
*             CALL HMASMIO(HMASMIOP);/* CALL IO ROUTINE TO CLOSE DATA
*                                      SET                           */
         ST    IOPPTR,@AL00001                                     0378
         L     @15,@CV01807                                        0378
         LA    @01,@AL00001                                        0378
         BALR  @14,@15                                             0378
*             ZAPRTNCD=MAX(ZAPRTNCD,IOPRETRN);/* SET RC      @Z67SP00*/
         SLR   @15,@15                                             0379
         IC    @15,ZAPRTNCD                                        0379
         SLR   @08,@08                                             0379
         IC    @08,IOPRETRN(,IOPPTR)                               0379
         CR    @15,@08                                             0379
         BNL   *+6
         LR    @15,@08                                             0379
         STC   @15,ZAPRTNCD                                        0379
*             IF ZAPRTNCD>=STOPFUNC /* KILL FUNCTION OR SMP? @YA07506*/
*               THEN                /*                       @Z67SP00*/
         CLI   ZAPRTNCD,12                                         0380
         BL    @RF00380                                            0380
*               DO;                 /*                       @Z67SP00*/
*                 ZAPERROR=ON;      /*                       @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0382
*                 GOTO HMAZP050;    /* EXIT                  @Z67SP00*/
         B     HMAZP050                                            0383
*               END;                /*                       @Z67SP00*/
*             IF ANYUT1=ON          /* IF SYSUT1 IS WRITTEN - INVOKE
*                                      ZAP                   @SA71755*/
*               THEN                                               0385
@RF00380 TM    ANYUT1,B'00000001'                                  0385
         BNO   @RF00385                                            0385
*               DO;                 /* OTHERWISE SYSUT1 NULL - NO  0386
*                                      NEED FOR ZAP          @SA71755*/
*                 RFY                                              0387
*                  (R2) RSTD;       /* RESTRICT REG 2                */
*HMAZP045:                                                         0388
*                                                                  0388
*                 /***************************************************/
*                 /*                                                 */
*                 /* CREATE CDS/ACDS SYSMOD ENTRIES.         @Z67SP00*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0388
*                 CALL HMASMSEC(ICTPTFS(I),ADDR(HMASMIOP));/*      0388
*                                                            @Z67SP00*/
HMAZP045 LH    @15,I                                               0388
         MH    @15,@CH01885                                        0388
         L     @08,CCAICPTF(,CCAPTR)                               0388
         AL    @08,@CF01901                                        0388
         LA    @15,ICTPTFS(@15,@08)                                0388
         ST    @15,@AL00001                                        0388
         ST    IOPPTR,@TF00001                                     0388
         LA    @15,@TF00001                                        0388
         ST    @15,@AL00001+4                                      0388
         L     @15,@CV01805                                        0388
         LA    @01,@AL00001                                        0388
         BALR  @14,@15                                             0388
*                 RFY               /*                       @Z67SP00*/
*                   RTNCODE RSTD;   /*                       @Z67SP00*/
*                 ZAPRTNCD=MAX(ZAPRTNCD,RTNCODE);/* SET ERROR CODE 0390
*                                                            @Z67SP00*/
         SLR   @08,@08                                             0390
         IC    @08,ZAPRTNCD                                        0390
         CR    @08,RTNCODE                                         0390
         BNL   *+6
         LR    @08,RTNCODE                                         0390
         STC   @08,ZAPRTNCD                                        0390
*                 ICTPROCS(I)=ON;   /* SET PTF IN PROCESS            */
         LH    @08,I                                               0391
         MH    @08,@CH01885                                        0391
         L     @03,CCAICPTF(,CCAPTR)                               0391
         ALR   @03,@08                                             0391
         AL    @03,@CF01903                                        0391
         OI    ICTPROCS-8(@03),B'10000000'                         0391
*                 IF RTNCODE^=ZERO THEN/*                    @Z67SP00*/
         LTR   RTNCODE,RTNCODE                                     0392
         BZ    @RF00392                                            0392
*                   DO;             /* IF ERROR SET SW, EXIT @Z67SP00*/
*                     ZAPERROR=ON;  /*                       @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0394
*                     GO TO HMAZP050;/* GET NEXT PTF         @Z67SP00*/
         B     HMAZP050                                            0395
*                   END;            /*                       @Z67SP00*/
*                 RFY               /*                       @Z67SP00*/
*                   RTNCODE UNRSTD; /*                       @Z67SP00*/
@RF00392 DS    0H                                                  0398
*                 IF ICTTIND1(1)=ON /* IS TARGET 1 AVAILABLE?        */
*                   THEN            /* YES - SET PRIMARY TARGET      */
         LH    @15,K                                               0398
         SLA   @15,2                                               0398
         LH    @08,J                                               0398
         SLA   @08,2                                               0398
         LH    @03,I                                               0398
         MH    @03,@CH01885                                        0398
         L     @01,CCAICPTF(,CCAPTR)                               0398
         AL    @01,@CF01905                                        0398
         L     @03,ICTPCHN-64(@03,@01)                             0398
         AL    @03,@CF01906                                        0398
         L     @08,ICTIXP(@08,@03)                                 0398
         MVC   @TF00001(4),ICTMCHN(@08)                            0398
         L     @08,@TF00001                                        0398
         AL    @08,@CF01906                                        0398
         L     @15,ICTIXM(@15,@08)                                 0398
         TM    ICTTIND1(@15),B'10000000'                           0398
         BNO   @RF00398                                            0398
*                   SYSLIB=ICTTG1(1);/* GET PRIMARY TARGET LIBRARY   */
         MVC   SYSLIB(8),ICTTG1(@15)                               0399
*                 ELSE              /* OTHERWISE - WE'RE ON SECOND   */
*                   DO;                                            0400
         B     @RC00398                                            0400
@RF00398 DS    0H                                                  0401
*                     SYSLIB=ICTTG2(1);/* GET SECONDARY TARGET       */
         LH    @15,K                                               0401
         SLA   @15,2                                               0401
         LH    @08,J                                               0401
         SLA   @08,2                                               0401
         LH    @03,I                                               0401
         MH    @03,@CH01885                                        0401
         L     @01,CCAICPTF(,CCAPTR)                               0401
         AL    @01,@CF01905                                        0401
         L     @03,ICTPCHN-64(@03,@01)                             0401
         AL    @03,@CF01906                                        0401
         L     @08,ICTIXP(@08,@03)                                 0401
         MVC   @TF00001(4),ICTMCHN(@08)                            0401
         L     @08,@TF00001                                        0401
         AL    @08,@CF01906                                        0401
         L     @15,ICTIXM(@15,@08)                                 0401
         MVC   SYSLIB(8),ICTTG2(@15)                               0401
*                     ICTTIND1(1)=ON;/* RESET TARGET ONE AVAILABLE   */
*                     ICTTIND2(1)=OFF;/* SET TARGET TWO NOT AVAILABLE*/
         OI    ICTTIND1(@15),B'10000000'                           0403
         NI    ICTTIND2(@15),B'10111111'                           0403
*                   END;                                           0404
*                                                                  0404
*                 /***************************************************/
*                 /*                                                 */
*                 /* GET PARMS AND SYSPRINT DD FROM CCA      @Z67SP00*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0405
*                 OPTVAR=''B;       /*                       @Z67SP00*/
@RC00398 XC    OPTVAR(91),OPTVAR                                   0405
*                 DO P=1 BY 1 WHILE CCAZAPPM(P)^=BLANK;/* MOVE PARMS
*                                                            @Z67SP00*/
         LA    @15,1                                               0406
         STH   @15,P                                               0406
         B     @DE00406                                            0406
@DL00406 DS    0H                                                  0407
*                   OPTVAR(P)=CCAZAPPM(P);/*                 @Z67SP00*/
         LH    @15,P                                               0407
         LA    @08,OPTVAR-1(@15)                                   0407
         L     @03,CCABLDLP(,CCAPTR)                               0407
         ALR   @03,@15                                             0407
         MVC   0(1,@08),CCAZAPPM-1(@03)                            0407
*                 END;              /*                       @Z67SP00*/
         AL    @15,@CF00085                                        0408
         STH   @15,P                                               0408
@DE00406 LH    @15,P                                               0408
         L     @08,CCABLDLP(,CCAPTR)                               0408
         ALR   @15,@08                                             0408
         CLI   CCAZAPPM-1(@15),C' '                                0408
         BNE   @DL00406                                            0408
*                 OPTLGTH=P-1;      /* PARM LIST LENGTH      @Z67SP00*/
         LH    @15,P                                               0409
         BCTR  @15,0                                               0409
         STH   @15,OPTLGTH                                         0409
*                 SYSPRINT=CCAZAPSP;/* USER SYSPRINT DD      @Z67SP00*/
*                                                                  0410
         MVC   SYSPRINT(8),CCAZAPSP(@08)                           0410
*                 /***************************************************/
*                 /*                                                 */
*                 /* STAE PARMS                              @Z67SP00*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0411
*                 SAVRVANM=RVAEPRNM;/* SAVE RVA PROC NM      @Z67SP00*/
         L     @15,CCARVAD(,CCAPTR)                                0411
         MVC   SAVRVANM(8),RVAEPRNM(@15)                           0411
*                 RVAEPRNM=CCAZAPNM;/* SUPERZAP NM           @Z67SP00*/
         MVC   RVAEPRNM(8,@15),CCAZAPNM(@08)                       0412
*                 R2=CCASPZAP;      /* GET BLDL FOR SUPERZAP         */
*                                                                  0413
         L     R2,CCASPZAP(,@08)                                   0413
*                 /***************************************************/
*                 /*                                                 */
*                 /* INVOKE SUPERZAP                         @Z67SP00*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0414
*                 GEN(LINK  DE=(R2),PARAM=(OPTLST,ZAPLIST),VL=1)   0414
*                 REFS(OPTLST,ZAPLIST,R2);/* LINK TO SUPERZAP      0414
*                                                            @Z40SP00*/
         LINK  DE=(R2),PARAM=(OPTLST,ZAPLIST),VL=1
*                 RFY               /*                       @Z67SP00*/
*                   RTNCODE RSTD;   /*                       @Z67SP00*/
*                 RFY                                              0416
*                  (R2) UNRSTD;     /* UNRESTRICT REG 2              */
*                 RVAEPRNM=SAVRVANM;/* RESTORE RVA NAME      @Z67SP00*/
         L     @08,CCARVAD(,CCAPTR)                                0417
         MVC   RVAEPRNM(8,@08),SAVRVANM                            0417
*                 IF RTNCODE^=ZERO  /* IF ZAP NOT ALL OK     @ZD00001*/
*                     ×REPPASS=ON   /* OR IF GOOD REP        @ZD00001*/
*                   THEN                                           0418
         LTR   RTNCODE,RTNCODE                                     0418
         BNZ   @RT00418                                            0418
         TM    REPPASS,B'00001000'                                 0418
         BNO   @RF00418                                            0418
@RT00418 DS    0H                                                  0419
*                   DO;                                            0419
*                     MGPTYPE=MGPINFO;/* DEFAULT MSG TYPE    @ZD00001*/
         MVI   MGPTYPE,X'01'                                       0420
*                     IF RTNCODE^=ZERO/* IF NON-ZERO RETURN  @YA07506*/
*                         &RTNCODE<=CCARZAP/* BUT LESS THEN MAX    0421
*                                                            @ZD00001*/
*                       THEN                                       0421
         LTR   RTNCODE,RTNCODE                                     0421
         BZ    @RF00421                                            0421
         L     @08,CCABLDLP(,CCAPTR)                               0421
         MVC   @ZT00003+3(1),CCARZAP(@08)                          0421
         C     RTNCODE,@ZT00003                                    0421
         BH    @RF00421                                            0421
*                       DO;                                        0422
*                         MGPTYPE=MGPWARN;/* SET MSG TYPE    @ZD00001*/
         MVI   MGPTYPE,X'02'                                       0423
*                         ZAPRTNCD=MAX(ZAPRTNCD,PTFWARN);/* SET RC 0424
*                                                            @YA07506*/
         SLR   @08,@08                                             0424
         IC    @08,ZAPRTNCD                                        0424
         LA    @07,4                                               0424
         CR    @08,@07                                             0424
         BNL   *+6
         LR    @08,@07                                             0424
         STC   @08,ZAPRTNCD                                        0424
*                       END;                                       0425
*                     IF RTNCODE>CCARZAP/* IF ERR IN ZAP     @ZD00001*/
*                       THEN        /*                       @YA07506*/
@RF00421 L     @08,CCABLDLP(,CCAPTR)                               0426
         MVC   @ZT00003+3(1),CCARZAP(@08)                          0426
         C     RTNCODE,@ZT00003                                    0426
         BNH   @RF00426                                            0426
*                       DO;         /*                       @ZD00001*/
*                         ZAPERROR=ON;/* ERROR SE            @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0428
*                         MGPTYPE=MGPERR;/* SET MSG TYPE     @ZD00001*/
         MVI   MGPTYPE,X'03'                                       0429
*                         IF VERPASS=ON/* IF PTF STOP ERR IN @ZD00001*/
*                           THEN    /* VER PASS SET          @ZD00001*/
         TM    VERPASS,B'00000100'                                 0430
         BNO   @RF00430                                            0430
*                           ICTPVERJ(I)=ON;/* PTF HAD VER REJ      0431
*                                                            @YA07506*/
         LH    @08,I                                               0431
         MH    @08,@CH01885                                        0431
         L     @01,CCAICPTF(,CCAPTR)                               0431
         ALR   @01,@08                                             0431
         AL    @01,@CF01903                                        0431
         OI    ICTPVERJ-8(@01),B'00001000'                         0431
*                         ZAPRTNCD=MAX(ZAPRTNCD,STOPPTF);/*  @ZD00001*/
@RF00430 SLR   @08,@08                                             0432
         IC    @08,ZAPRTNCD                                        0432
         LA    @07,8                                               0432
         CR    @08,@07                                             0432
         BNL   *+6
         LR    @08,@07                                             0432
         STC   @08,ZAPRTNCD                                        0432
*                       END;                                       0433
*                     CVD(RTNCODE,DECNO);/*                  @ZD00001*/
@RF00426 CVD   RTNCODE,DECNO                                       0434
*                     UNPK(RETURNCD(1:2),DECNO(7:8));/*      @ZD00001*/
         UNPK  RETURNCD(2),DECNO+6(2)                              0435
*                     RETURNCD(2)=RETURNCD(2)×ZONE;/*        @ZD00001*/
         OI    RETURNCD+1,C'0'                                     0436
*                     MGPCLEAR=MGPCLEAR&&MGPCLEAR;/* ZERO MSG PARM 0437
*                                                            @ZD00001*/
         XC    MGPCLEAR(6),MGPCLEAR                                0437
*                     MGPMGNO1=HMA237I;/* ZAP XXXXXX XXXXXXXXXX -  0438
*                                      MOD= XXXXXXXX - LMOD=XXXXXXXX
*                                      - LIBRARY=XXXXXXXX -        0438
*                                      PTF=XXXXXXX - RETURN CODE=XX
*                                                            @ZD00001*/
         MVC   MGPMGNO1(2),@CH00483                                0438
*                     IF REPPASS=ON /* IF REPLACE            @ZD00001*/
*                       THEN        /*                       @ZD00001*/
         TM    REPPASS,B'00001000'                                 0439
         BNO   @RF00439                                            0439
*                       MGPVARPT(1)=ADDR(TXTREP);/*          @ZD00001*/
         LA    @08,@CC01702                                        0440
         ST    @08,MGPVARPT                                        0440
*                     ELSE          /* IF VERIFY PASS        @ZD00001*/
*                       MGPVARPT(1)=ADDR(TXTVER);/*          @ZD00001*/
         B     @RC00439                                            0441
@RF00439 LA    @08,@CC01700                                        0441
         ST    @08,MGPVARPT                                        0441
*                     IF RTNCODE>CCARZAP/* IF ZAP FAILED     @ZD00001*/
*                       THEN        /*                       @ZD00001*/
@RC00439 L     @08,CCABLDLP(,CCAPTR)                               0442
         MVC   @ZT00003+3(1),CCARZAP(@08)                          0442
         C     RTNCODE,@ZT00003                                    0442
         BNH   @RF00442                                            0442
*                       MGPVARPT(2)=ADDR(TXTFAIL);/*         @ZD00001*/
         LA    @08,@CC01707                                        0443
         ST    @08,MGPVARPT+4                                      0443
*                     ELSE          /* IF ZAP OK             @ZD00001*/
*                       MGPVARPT(2)=ADDR(TXTSUCC);/*         @ZD00001*/
         B     @RC00442                                            0444
@RF00442 LA    @08,@CC01704                                        0444
         ST    @08,MGPVARPT+4                                      0444
*                     MGPVARPT(3)=ADDR(ICTMNAME(1));/* MODULE NAME 0445
*                                                            @ZD00001*/
@RC00442 LH    @08,J                                               0445
         SLA   @08,2                                               0445
         LH    @07,I                                               0445
         MH    @07,@CH01885                                        0445
         L     @06,CCAICPTF(,CCAPTR)                               0445
         LA    @01,0(@07,@06)                                      0445
         AL    @01,@CF01905                                        0445
         L     @01,ICTPCHN-64(,@01)                                0445
         AL    @01,@CF01906                                        0445
         L     @08,ICTIXP(@08,@01)                                 0445
         ST    @08,MGPVARPT+8                                      0445
*                     MGPVARPT(4)=ADDR(ICTLMNAM(1));/* LOAD MODULE 0446
*                                      NAME                  @ZD00001*/
         LH    @05,K                                               0446
         SLA   @05,2                                               0446
         MVC   @TF00001(4),ICTMCHN(@08)                            0446
         L     @08,@TF00001                                        0446
         AL    @08,@CF01906                                        0446
         L     @08,ICTIXM(@05,@08)                                 0446
         ST    @08,MGPVARPT+12                                     0446
*                     MGPVARPT(5)=ADDR(SYSLIB);/* LIBRARY NAME     0447
*                                                            @ZD00001*/
         LA    @08,SYSLIB                                          0447
         ST    @08,MGPVARPT+16                                     0447
*                     MGPVARPT(6)=ADDR(ICTPTFS(I));/* PTF NUMBER   0448
*                                                            @ZD00001*/
         AL    @06,@CF01901                                        0448
         LA    @08,ICTPTFS(@07,@06)                                0448
         ST    @08,MGPVARPT+20                                     0448
*                     MGPVARPT(7)=ADDR(RETURNCD);/* RETURN CODE    0449
*                                                            @ZD00001*/
         LA    @08,RETURNCD                                        0449
         ST    @08,MGPVARPT+24                                     0449
*                     CALL HMASMMSG(HMASMMGP);/* WRITE MESSAGE     0450
*                                                            @ZD00001*/
         L     @15,@CV01808                                        0450
         LA    @01,@AL00450                                        0450
         BALR  @14,@15                                             0450
*                   END;                                           0451
*                 RFY               /*                       @Z67SP00*/
*                   RTNCODE UNRSTD; /*                       @Z67SP00*/
@RF00418 DS    0H                                                  0453
*                 IF ICTTIND2(1)=ON /* IS SECOND TARGET AVAILABLE    */
*                   THEN            /* YES - SET UP FOR NEXT LINK    */
         LH    @15,K                                               0453
         SLA   @15,2                                               0453
         LH    @08,J                                               0453
         SLA   @08,2                                               0453
         LH    @07,I                                               0453
         MH    @07,@CH01885                                        0453
         L     @01,CCAICPTF(,CCAPTR)                               0453
         AL    @01,@CF01905                                        0453
         L     @01,ICTPCHN-64(@07,@01)                             0453
         AL    @01,@CF01906                                        0453
         L     @08,ICTIXP(@08,@01)                                 0453
         MVC   @TF00001(4),ICTMCHN(@08)                            0453
         L     @08,@TF00001                                        0453
         AL    @08,@CF01906                                        0453
         L     @15,ICTIXM(@15,@08)                                 0453
         TM    ICTTIND2(@15),B'01000000'                           0453
         BNO   @RF00453                                            0453
*                   DO;                                            0454
*                     ICTTIND1(1)=OFF;/* INDICATE TARGET ONE IS DONE */
         NI    ICTTIND1(@15),B'01111111'                           0455
*                     GO TO HMAZP045;/* GO LINK TO NEXT LIBRARY      */
         B     HMAZP045                                            0456
*                   END;                                           0457
*                 ELSE              /* OTHERWISE - CHECK FOR RESET   */
*                   IF ICTTG2(1,1)^=BLANK/* OF TARGET TWO            */
*                     THEN          /* RESET IT                      */
@RF00453 LH    @15,K                                               0458
         SLA   @15,2                                               0458
         LH    @08,J                                               0458
         SLA   @08,2                                               0458
         LH    @07,I                                               0458
         MH    @07,@CH01885                                        0458
         L     @01,CCAICPTF(,CCAPTR)                               0458
         AL    @01,@CF01905                                        0458
         L     @01,ICTPCHN-64(@07,@01)                             0458
         AL    @01,@CF01906                                        0458
         L     @08,ICTIXP(@08,@01)                                 0458
         MVC   @TF00001(4),ICTMCHN(@08)                            0458
         L     @08,@TF00001                                        0458
         AL    @08,@CF01906                                        0458
         L     @15,ICTIXM(@15,@08)                                 0458
         CLI   ICTTG2(@15),C' '                                    0458
         BE    @RF00458                                            0458
*                     ICTTIND2(1)=ON;/* RESET TARGET AVAILABILITY    */
         OI    ICTTIND2(@15),B'01000000'                           0459
*               END;                /* END OF ROUTINE INVOKING     0460
*                                      SUPERZAP              @SA71755*/
@RF00458 DS    0H                                                  0461
*HMAZP047:                          /* ENTRY TO END OF LMOD LOOP     */
*           END;                    /* END OF LOAD MODULE SCAN       */
@RF00385 DS    0H                                                  0461
HMAZP047 LA    @15,1                                               0461
         AH    @15,K                                               0461
         STH   @15,K                                               0461
         C     @15,@CF01724                                        0461
         BNH   @DL00228                                            0461
@DC00228 DS    0H                                                  0462
*           IF REPPASS=ON           /* IS REPPASS COMPLETE ON MODULE */
*             THEN                  /* YES - DONE WITH THIS MODULE   */
         TM    REPPASS,B'00001000'                                 0462
         BNO   @RF00462                                            0462
*             CALLCPL=ON;           /* HMASMCPL NEEDED       @Z67SP00*/
         OI    CALLCPL,B'01000000'                                 0463
*         END;                      /* END OF MOD IS SELECTED ZAP    */
@RF00462 DS    0H                                                  0465
*HMAZP048:                          /* ENTRY TO END OF MOD LOOP    0465
*                                                            @SA71755*/
*       OUTREC='';                  /* INIT OUTPUT AREA FOR NAME CARD
*                                      AND DUMP CARD IN CASE NEXT  0465
*                                      TIME THRU DUMP CARD COMES   0465
*                                      BEFORE NAME CARD. LMOD NAME 0465
*                                      FROM PREV ZAP WILL NOT BE USED
*                                      THIS TIME             @OY01965*/
@RF00224 DS    0H                                                  0465
HMAZP048 MVI   OUTREC,C' '                                         0465
         MVC   OUTREC+1(79),OUTREC                                 0465
*     END;                          /* END OF LOOP THRU ZAPS FOR ONE
*                                      PTF                   @Z67SP00*/
         LA    @15,1                                               0466
         AH    @15,J                                               0466
         STH   @15,J                                               0466
         C     @15,@CF01724                                        0466
         BNH   @DL00223                                            0466
@DC00223 DS    0H                                                  0467
         EJECT
*                                                                  0467
*     /***************************************************************/
*     /*                                                             */
*     /* ALL MODULES FOR A PTF HAVE BEEN PROCESSED. SWITCH TO REPLACE*/
*     /* PASS IF IN VERIFY. SWITCH TO VERIFY PASS IF IN REPLACE PASS */
*     /* OR IF VERIFY PASS FAILED.                           @Z40SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0467
*     IF VERPASS=ON                 /* IF THIS IS A VERIFY PASS      */
*         &ZAPERROR=OFF             /* AND NO ERRORS         @Z67PS00*/
*       THEN                                                       0467
         TM    VERPASS,B'00000100'                                 0467
         BNO   @RF00467                                            0467
         TM    ZAPERROR,B'00000001'                                0467
         BNZ   @RF00467                                            0467
*       DO;                                                        0468
*         VERPASS=OFF;              /* RESET VERIFY PASS             */
*         REPPASS=ON;               /* INDICATE REPLACE PASS         */
         OI    REPPASS,B'00001000'                                 0470
         NI    VERPASS,B'11111011'                                 0470
*         GO TO HMAZP010;           /* REPEAT MOD PROCESSING FOR REP
*                                      PASS                          */
         B     HMAZP010                                            0471
*       END;                                                       0472
*HMAZP050:                                                         0473
*     IF ZAPERROR=OFF               /* IF NO ERROR           @Z67SP00*/
*       THEN                        /*                       @Z67SP00*/
@RF00467 DS    0H                                                  0473
HMAZP050 TM    ZAPERROR,B'00000001'                                0473
         BNZ   @RF00473                                            0473
*       STATUS=GOOD;                /* CPL PARM              @Z67SP00*/
         MVC   STATUS(1),GOOD                                      0474
*     ELSE                          /* GOOD ZAPS             @Z67SP00*/
*       STATUS=BAD;                 /* CPL PARM              @Z67SP00*/
         B     @RC00473                                            0475
@RF00473 MVC   STATUS(1),BAD                                       0475
*     REPPASS=OFF;                  /* RESET BACK TO VERIFY PASS     */
*                                                                  0476
@RC00473 NI    REPPASS,B'11110111'                                 0476
*     /***************************************************************/
*     /*                                                             */
*     /* SYSMOD COMPLETION                                   @Z67SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0477
*     IF CALLCPL=ON                 /* IF ZAP INVOKED        @Z67SP00*/
*         ×ZAPERROR=ON              /* OR ERROR FOUND        @Z67SP00*/
*       THEN                        /*                       @Z67SP00*/
         TM    CALLCPL,B'01000000'                                 0477
         BO    @RT00477                                            0477
         TM    ZAPERROR,B'00000001'                                0477
         BNO   @RF00477                                            0477
@RT00477 DS    0H                                                  0478
*       DO;                         /*                       @Z67SP00*/
*         CALL HMASMCPL(STATUS);    /*                       @Z67SP00*/
         L     @15,@CV01806                                        0479
         LA    @01,@AL00479                                        0479
         BALR  @14,@15                                             0479
*         RFY                       /*                       @Z67SP00*/
*           RTNCODE RSTD;           /*                       @Z67SP00*/
*         ZAPRTNCD=MAX(ZAPRTNCD,RTNCODE);/* ERROR CODE       @Z67SP00*/
         SLR   @08,@08                                             0481
         IC    @08,ZAPRTNCD                                        0481
         CR    @08,RTNCODE                                         0481
         BNL   *+6
         LR    @08,RTNCODE                                         0481
         STC   @08,ZAPRTNCD                                        0481
*         CALLCPL=OFF;              /* RESET INDICATOR       @Z67SP00*/
         NI    CALLCPL,B'10111111'                                 0482
*         RFY                       /*                       @Z67SP00*/
*           RTNCODE UNRSTD;         /*                       @Z67SP00*/
*       END;                        /*                               */
*   END;                            /* END OF MAIN PTF LOOP  @Z40SP00*/
@RF00477 LA    @15,1                                               0485
         AH    @15,I                                               0485
         STH   @15,I                                               0485
         C     @15,@CF01724                                        0485
         BNH   @DL00217                                            0485
@DC00217 DS    0H                                                  0486
*   GO TO HMAZP970;                 /* CLEANUP AND RETURN            */
         B     HMAZP970                                            0486
         EJECT
*                                                                  0487
*   /*****************************************************************/
*   /*                                                               */
*   /* ZAP COMMENT CARD ROUTINE --- SCN_ROUT                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0487
*RCMNT:                             /* ZAP COMMENT CARD RTN  @OY01955*/
*   RESPECIFY                                                      0487
*     R1 RSTD;                      /*                       @Z67SP00*/
RCMNT    DS    0H                                                  0488
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0488
*   RESPECIFY                                                      0489
*     R1 UNRSTD;                    /*                       @Z67SP00*/
*   CMNTSW=ON;                      /* INDICATE THIS IS A COMMENT  0490
*                                      CARD                  @OY01955*/
         OI    CMNTSW,B'00010000'                                  0490
*   GO TO HMAZP700;                 /* RETURN TO SCAN        @OY01955*/
         B     HMAZP700                                            0491
         EJECT
*                                                                  0492
*   /*****************************************************************/
*   /*                                                               */
*   /* NAME CARD ROUTINE. THIS ROUTINE IS ENTERED AFTER THE FIRST    */
*   /* NAME CARD OPERAND IS PROCESSED. --- SCN_ROUT          @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0492
*RNAME:                                                            0492
*   RESPECIFY                                                      0492
*     R1 RSTD;                      /*                       @Z67SP00*/
RNAME    DS    0H                                                  0493
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0493
*   RESPECIFY                                                      0494
*     R1 UNRSTD;                    /*                       @Z67SP00*/
*   SCPRET=ZERO;                    /* INDICATE GOOD ENTRY           */
         MVI   SCPRET,X'00'                                        0495
*   ZAPFLSH=OFF;                    /* RESET ZAP FLUSH FOR EACH NAME
*                                      CARD                  @SA71755*/
         NI    ZAPFLSH,B'11011111'                                 0496
*   BRSW=OFF;                       /* RESET NAME CARD SCANNED AND 0497
*                                      WRITTEN SW OFF        @Z40SP00*/
*   NAMESCH=ON;                     /* SET NAME CARD SEARCH          */
         OI    NAMESCH,B'10000000'                                 0498
         NI    BRSW,B'11101111'                                    0498
*   RESPECIFY                                                      0499
*     R1 RSTD;                      /*                       @Z67SP00*/
*   R1=PARSAV;                      /* RESTORE REGISTER 1    @Z67SP00*/
         L     @15,PARSAV                                          0500
         LR    R1,@15                                              0500
*   GO TO SCANRETN;                 /* RETURN TO HMASMSCN    @ZD00001*/
         BR    R14                                                 0501
*   RESPECIFY                                                      0502
*     R1 UNRSTD;                    /*                       @Z67SP00*/
         EJECT
*                                                                  0503
*   /*****************************************************************/
*   /*                                                               */
*   /* AN ENTIRE NAME CARD OR DUMP CARD HAS BEEN SCANNED.            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*HMAZP110:                                                         0503
*   IF DUMPSW=ON                    /* WAS THIS A DUMP CARD? @OS70966*/
*     THEN                          /* YES                   @OS70966*/
HMAZP110 TM    DUMPSW,B'00001000'                                  0503
         BNO   @RF00503                                            0503
*     IF BRSW=OFF                   /* NAME CARD SCANNED AND WRITTEN
*                                      YET?                  @OS70966*/
*       THEN                        /* NO                    @OS70966*/
         TM    BRSW,B'00010000'                                    0504
         BNZ   @RF00504                                            0504
*       DO;                         /* REMEMBER DUMP CARD FOUND    0505
*                                                            @OS70966*/
*         DODUMP=ON;                /* INDICATE PUT OUT DUMP CARD  0506
*                                                            @OS70966*/
         OI    DODUMP,B'00000100'                                  0506
*         GO TO HMAZP035;           /* IGNORE DUMP CARD AT THIS TIME
*                                      GO TO READ NXT RECORD @OS70966*/
         B     HMAZP035                                            0507
*       END;                        /* END NO NAME YET       @OS70966*/
*     ELSE                          /* NAME CARD HAS BEEN FOUND.   0509
*                                                            @OS70966*/
*       GO TO HMAZP115;             /* GO TO SET THE NAME CARD AREA
*                                      TO INDICATE DUMP      @OS70966*/
*   ELSE                            /* NOT DUMP CARD MUST BE NAME  0510
*                                      CARD                  @OS70966*/
*     BRSW=ON;                      /* TURN ON SW TO INDICATE NAME 0510
*                                      CARD SCANNED AND WRITTEN SINCE
*                                      IT WILL BE WRITTEN TO SYSUT1
*                                      BEFORE BEING TESTED NEXT    0510
*                                                            @OS70966*/
@RF00503 OI    BRSW,B'00010000'                                    0510
*   IF ONENAME=ON&                  /* IF ONE OPERAND NAME CARD FOUND*/
*       TWONAME=ON                  /* AND TWO OPERAND NAME CARD   0511
*                                      FOUND                         */
*     THEN                          /* THEN ---                      */
         TM    ONENAME,B'01100000'                                 0511
         BNO   @RF00511                                            0511
*     DO;                           /* INVALID ZAP CARD COMBINATION  */
*       ZAPERROR=ON;                /* ERROR SE              @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0513
*       MGPMGNO1=HMA249I;           /* PRIMARY MESSAGE               */
         MVC   MGPMGNO1(2),@CH00730                                0514
*       MGPMGNO2=PART015;           /* SECONDARY MESSAGE             */
         MVC   MGPMGNO2(2),@CH00064                                0515
*       MGPVARPT(1)=ADDR(ICTPTF(I));/* ADDRESS OF PTF NAME           */
         LH    @15,I                                               0516
         MH    @15,@CH01885                                        0516
         L     @08,CCAICPTF(,CCAPTR)                               0516
         LA    @01,0(@15,@08)                                      0516
         AL    @01,@CF01901                                        0516
         ST    @01,MGPVARPT                                        0516
*       MGPVARPT(2)=ADDR(ICTMOD(1));/* ADDRESS OF MODULE NAME        */
         LH    @07,J                                               0517
         SLA   @07,2                                               0517
         AL    @08,@CF01905                                        0517
         L     @15,ICTPCHN-64(@15,@08)                             0517
         AL    @15,@CF01906                                        0517
         L     @15,ICTIXP(@07,@15)                                 0517
         ST    @15,MGPVARPT+4                                      0517
*       MGPTYPE=MGPERR;             /* MESSAGE SEVERITY      @ZD00001*/
         MVI   MGPTYPE,X'03'                                       0518
*       CALL HMASMMSG(HMASMMGP);    /* CALL MESSAGE ROUTINE          */
         L     @15,@CV01808                                        0519
         LA    @01,@AL00519                                        0519
         BALR  @14,@15                                             0519
*       ICTPVERJ(I)=ON;             /* PTF HAS VERIFY REJECT @Z40SP00*/
         LH    @15,I                                               0520
         MH    @15,@CH01885                                        0520
         L     @08,CCAICPTF(,CCAPTR)                               0520
         ALR   @08,@15                                             0520
         AL    @08,@CF01903                                        0520
         OI    ICTPVERJ-8(@08),B'00001000'                         0520
*       GO TO HMAZP050;             /* GO MARK PTF AS BAD    @Z67SP00*/
         B     HMAZP050                                            0521
*     END;                                                         0522
*   IF TWONAME=ON                   /* IF LOADMOD AND CSECT EXIST    */
*     THEN                                                         0523
@RF00511 TM    TWONAME,B'00100000'                                 0523
         BNO   @RF00523                                            0523
*     DO;                                                          0524
*       TGNAME=LMNAME;              /* MOVE IN LOAD MODULE NAME      */
         MVC   TGNAME(8),LMNAME                                    0525
*       CSNAME=SECNAME;             /* MOVE IN CSECT NAME            */
         MVC   CSNAME(8),SECNAME                                   0526
*     END;                                                         0527
*   ELSE                                                           0528
*     DO;                                                          0528
         B     @RC00523                                            0528
@RF00523 DS    0H                                                  0529
*       TGNAME=ICTLMOD(1);          /* MOVE IN LOAD MODULE NAME FROM
*                                      ICT LMOD IN PROCESS           */
         LH    @15,K                                               0529
         SLA   @15,2                                               0529
         LH    @08,J                                               0529
         SLA   @08,2                                               0529
         LH    @07,I                                               0529
         MH    @07,@CH01885                                        0529
         L     @01,CCAICPTF(,CCAPTR)                               0529
         AL    @01,@CF01905                                        0529
         L     @01,ICTPCHN-64(@07,@01)                             0529
         AL    @01,@CF01906                                        0529
         L     @08,ICTIXP(@08,@01)                                 0529
         MVC   @TF00001(4),ICTMCHN(@08)                            0529
         L     @08,@TF00001                                        0529
         AL    @08,@CF01906                                        0529
         L     @15,ICTIXM(@15,@08)                                 0529
         MVC   TGNAME(8),ICTLMOD(@15)                              0529
*       CSNAME=LMNAME;              /* MOVE IN CSECT NAME            */
         MVC   CSNAME(8),LMNAME                                    0530
*     END;                                                         0531
*   IF DODUMP=ON                    /* DUMP CARD TO BE PUT OUT BEFORE
*                                      NAME CARD ?           @OS70966*/
*     THEN                          /* YES                   @OS70966*/
@RC00523 TM    DODUMP,B'00000100'                                  0532
         BNO   @RF00532                                            0532
*HMAZP115:                          /*                       @OS70966*/
*     OUTNAME=CODUMP;               /* MOVE DUMP/ABSDUMP TO NAME AREA
*                                                            @OS70966*/
HMAZP115 MVC   OUTNAME(8),CODUMP                                   0533
*   ELSE                            /* NO DUMP CARD FOUND    @OS70966*/
*     OUTNAME=CONAME;               /* SET NAME CARD TO NAME @OS70966*/
         B     @RC00532                                            0534
@RF00532 MVC   OUTNAME(8),CONAME                                   0534
*   IOPBUFAD=ADDR(OUTREC);          /* POINT AT NAME CARD            */
@RC00532 LA    @15,OUTREC                                          0535
         ST    @15,IOPBUFAD(,IOPPTR)                               0535
         EJECT
*                                                                  0536
*   /*****************************************************************/
*   /*                                                               */
*   /* WRITE RECORD TO UTILITY FILE FOR SUPERZAP SYSIN               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0536
*HMAZP120:                                                         0536
*   IF ZAPFLSH=OFF                  /* BYPASS WRITE TO SYSUT1 IF THIS
*                                      LMOD BEING FLUSHED    @SA71755*/
*     THEN                          /*                       @SA71755*/
HMAZP120 TM    ZAPFLSH,B'00100000'                                 0536
         BNZ   @RF00536                                            0536
*     DO;                           /* NORMAL WRITE TO SYSUT1      0537
*                                                            @SA71755*/
*       ANYUT1=ON;                  /* INDICATE UTILITY SYSUT1 IS  0538
*                                      WRITTEN               @SA71755*/
         OI    ANYUT1,B'00000001'                                  0538
*       IOPDSID=IOPSCR1;            /* DATA SET ID TO SYSUT1         */
         MVI   IOPDSID(IOPPTR),X'03'                               0539
*       IOPFUNCT=IOPWRITE;          /* SET FUNCTION TO WRITE         */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0540
*       CALL HMASMIO(HMASMIOP);     /* CALL IO ROUTINE               */
         ST    IOPPTR,@AL00001                                     0541
         L     @15,@CV01807                                        0541
         LA    @01,@AL00001                                        0541
         BALR  @14,@15                                             0541
*       IF IOPRETRN>IOPGOOD         /* IF AN IO ERROR OCCURED      0542
*                                                            @YA07506*/
*         THEN                                                     0542
         CLI   IOPRETRN(IOPPTR),0                                  0542
         BNH   @RF00542                                            0542
*         DO;                                                      0543
*           ZAPERROR=ON;            /* ERROR SW              @Z67SP00*/
         OI    ZAPERROR,B'00000001'                                0544
*           ZAPRTNCD=MAX(ZAPRTNCD,IOPRETRN);/* SET RC TO I/O ERR   0545
*                                                            @YA07506*/
         SLR   @15,@15                                             0545
         IC    @15,ZAPRTNCD                                        0545
         SLR   @08,@08                                             0545
         IC    @08,IOPRETRN(,IOPPTR)                               0545
         CR    @15,@08                                             0545
         BNL   *+6
         LR    @15,@08                                             0545
         STC   @15,ZAPRTNCD                                        0545
*           GOTO HMAZP050;          /* EXIT                  @Z67SP00*/
         B     HMAZP050                                            0546
*           IOPBUFAD=SAVBUFAD;      /* RESTORE BUFFER ADDRESS        */
*         END;                                                     0548
*       IF DODUMP=ON&NAMESCH=ON     /* WAS THIS SAVED DUMP CARD THAT
*                                      WAS JUST PUT OUT NOW? @OS70966*/
*         THEN                      /* YES                   @OS70966*/
@RF00542 TM    DODUMP,B'00000100'                                  0549
         BNO   @RF00549                                            0549
         TM    NAMESCH,B'10000000'                                 0549
         BNO   @RF00549                                            0549
*         DO;                       /* THEN STILL NEED TO PUT OUT  0550
*                                      NAME                  @OS70966*/
*           OUTNAME=CONAME;         /* SET CARD AREA TO NAME @OS70966*/
         MVC   OUTNAME(8),CONAME                                   0551
*           DODUMP=OFF;             /* RESET DUMP SW         @OS70966*/
         NI    DODUMP,B'11111011'                                  0552
*           GO TO HMAZP120;         /* GO TO PUT OUT NAME CARD     0553
*                                                            @OS70966*/
         B     HMAZP120                                            0553
*         END;                      /* END NEED NAME CARD    @OS70966*/
*     END;                          /* END OF WRITE TO SYSUT1      0555
*                                                            @SA71755*/
@RF00549 DS    0H                                                  0556
*   IOPBUFAD=SAVBUFAD;              /* RESTORE BUFFER ADDRESS        */
@RF00536 L     @15,SAVBUFAD                                        0556
         ST    @15,IOPBUFAD(,IOPPTR)                               0556
*   GO TO HMAZP035;                 /* READ NEXT RECORD              */
         B     HMAZP035                                            0557
         EJECT
*                                                                  0558
*   /*****************************************************************/
*   /*                                                               */
*   /* VERIFY ROUTINE, THE VERIFY ROUTINE WILL OUTPUT CARDS TO SYSUT1*/
*   /* AS LONG AS THE REPPASS SW. IS NOT ON --- SCN_ROUT             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0558
*RVER:                                                             0558
*   RESPECIFY                                                      0558
*     R1 RSTD;                      /*                       @Z67SP00*/
RVER     DS    0H                                                  0559
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0559
*   RESPECIFY                                                      0560
*     R1 UNRSTD;                    /*                       @Z67SP00*/
*   NAMESCH=OFF;                    /* RESET NAME SCANNED SW OFF     */
         NI    NAMESCH,B'01111111'                                 0561
*   IF REPPASS=ON                   /* IF IN REPLACE PASS            */
*     THEN                                                         0562
         TM    REPPASS,B'00001000'                                 0562
         BNO   @RF00562                                            0562
*     NOWRITE=ON;                   /* SET NOWRITE TO SYSUT1 SW ON   */
         OI    NOWRITE,B'10000000'                                 0563
*   GO TO HMAZP700;                                                0564
         B     HMAZP700                                            0564
         EJECT
*                                                                  0565
*   /*****************************************************************/
*   /*                                                               */
*   /* REPLACE ROUTINE, THE REPLACE ROUTINE WILL OUTPUT REPLACE CARDS*/
*   /* TO SYSUT1 AS LONG AS THE REPPASS SW. IS SET --- SCN_ROUT      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0565
*RREP:                                                             0565
*   RESPECIFY                                                      0565
*     R1 RSTD;                      /*                       @Z67SP00*/
RREP     DS    0H                                                  0566
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0566
*   RESPECIFY                                                      0567
*     R1 UNRSTD;                    /*                       @Z67SP00*/
*   NAMESCH=OFF;                    /* RESET NAME SCANNED SW OFF     */
         NI    NAMESCH,B'01111111'                                 0568
*   IF REPPASS=OFF                  /* IF THE REPLACE SWITCH IS NOT
*                                      SET                           */
*     THEN                                                         0569
         TM    REPPASS,B'00001000'                                 0569
         BNZ   @RF00569                                            0569
*     NOWRITE=ON;                   /* SET NOWRITE TO SYSUT1 SW ON   */
         OI    NOWRITE,B'10000000'                                 0570
*   GO TO HMAZP700;                                                0571
         B     HMAZP700                                            0571
         EJECT
*                                                                  0572
*   /*****************************************************************/
*   /*                                                               */
*   /* COMMON RETURN TO SCAN ROUTINE                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0572
*HMAZP700:                                                         0572
*   SCPRET=SCPNDSCN;                /* INDICATE GOOD SCAN    @Z40SP00*/
HMAZP700 MVI   SCPRET,X'04'                                        0572
*   RFY                                                            0573
*     R1 RSTD;                      /*                       @ZD00001*/
*   R1=PARSAV;                      /* RESTORE R1 FOR SCAN   @Z67SP00*/
         L     R1,PARSAV                                           0574
*   GO TO SCANRETN;                 /* RETURN TO HMASMSCN    @ZD00001*/
         BR    R14                                                 0575
*   RFY                                                            0576
*     R1 UNRSTD;                    /*                       @ZD00001*/
         EJECT
*                                                                  0577
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTERED FROM SCAN ROUTINE WHEN THE FIRST PARAMETER ON A NAME  */
*   /* CARD IS FOUND- THIS MAY BE A LOAD MODULE NAME OR CSECT NAME   */
*   /* --- SCN_ROUT                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0577
*RLMOD:                                                            0577
*   RESPECIFY                                                      0577
*     R1 RSTD;                      /*                       @Z67SP00*/
RLMOD    DS    0H                                                  0578
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0578
*   LMNAME=SCANRCD(1:SCPPMLN);      /* SAVE FIRST OPERAND AS LMOD, 0579
*                                      MAY BE LMOD OR CSECT  @Z40SP00*/
         MVI   LMNAME+1,C' '                                       0579
         MVC   LMNAME+2(6),LMNAME+1                                0579
         LH    @15,SCPPMLN                                         0579
         BCTR  @15,0                                               0579
         L     @08,SCPCHAR                                         0579
         EX    @15,@SM01918                                        0579
*   GO TO RNAME;                    /* RETURN TO SCAN VIA NAME     0580
*                                      ROUTINE                       */
         B     RNAME                                               0580
*   RESPECIFY                                                      0581
*     R1 UNRSTD;                    /*                       @Z67SP00*/
         EJECT
*                                                                  0582
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS ENTERED WHEN A SECOND PARAMETER IS FOUND ON A */
*   /* NAME CARD --- SCN_ROUT                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0582
*RMOD:                                                             0582
*   RESPECIFY                                                      0582
*     R1 RSTD;                      /*                       @Z67SP00*/
RMOD     DS    0H                                                  0583
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0583
*   RESPECIFY                                                      0584
*     R1 UNRSTD;                    /*                       @Z67SP00*/
*   ANYTWO=ON;                      /* SET TWO OPERAND NAME CARD   0585
*                                      FOUND SW ON           @ZA01311*/
         OI    ANYTWO,B'00000010'                                  0585
*   IF CCAACCPT=ON                  /* ARE WE IN ACCEPT MODE?        */
*     THEN                          /* YES - SET TO DLIB NAME        */
         TM    CCAACCPT(CCAPTR),B'00100000'                        0586
         BNO   @RF00586                                            0586
*     LMNAME=SCANRCD(1:SCPPMLN);    /* IGNORE PREVIOUS LM NAME       */
         MVI   LMNAME+1,C' '                                       0587
         MVC   LMNAME+2(6),LMNAME+1                                0587
         LH    @15,SCPPMLN                                         0587
         BCTR  @15,0                                               0587
         L     @08,SCPCHAR                                         0587
         EX    @15,@SM01918                                        0587
*   ELSE                            /* OTHERWISE - CHECK IF LOAD MODS*/
*     IF LMNAME^=ICTLMNAM(1)        /* AGREE - IF NOT IGNORE THIS    */
*       THEN                        /* LOAD MOD AND WAIT FOR NEXT    */
         B     @RC00586                                            0588
@RF00586 LH    @15,K                                               0588
         SLA   @15,2                                               0588
         LH    @08,J                                               0588
         SLA   @08,2                                               0588
         LH    @07,I                                               0588
         MH    @07,@CH01885                                        0588
         L     @01,CCAICPTF(,CCAPTR)                               0588
         AL    @01,@CF01905                                        0588
         L     @01,ICTPCHN-64(@07,@01)                             0588
         AL    @01,@CF01906                                        0588
         L     @08,ICTIXP(@08,@01)                                 0588
         MVC   @TF00001(4),ICTMCHN(@08)                            0588
         L     @08,@TF00001                                        0588
         AL    @08,@CF01906                                        0588
         L     @15,ICTIXM(@15,@08)                                 0588
         CLC   LMNAME(8),ICTLMNAM(@15)                             0588
         BE    @RF00588                                            0588
*       DO;                         /*                       @SA71755*/
*         ZAPFLSH=ON;               /* FLUSH ZAP FOR THIS LMOD     0590
*                                                            @SA71755*/
*         RFY                       /*                       @SA71755*/
*          (ICTLMOD) BASED(ICTIXM(L));/*                     @Z40SP00*/
*         ZAPKILL=ON;               /* ASSUME POSSIBILITY OF INVALID
*                                      LMOD NAME             @SA71755*/
         OI    ZAPFLSH,B'00100010'                                 0592
*         DO L=1 TO MX WHILE ICTIXM(L)^=ICTENDIX;/* SCAN THRU ALL  0593
*                                      LMODS FOR THIS MOD    @Z40SP00*/
         LA    @15,1                                               0593
         STH   @15,L                                               0593
@DL00593 SLA   @15,2                                               0593
         LH    @08,J                                               0593
         SLA   @08,2                                               0593
         LH    @07,I                                               0593
         MH    @07,@CH01885                                        0593
         L     @01,CCAICPTF(,CCAPTR)                               0593
         AL    @01,@CF01905                                        0593
         L     @01,ICTPCHN-64(@07,@01)                             0593
         AL    @01,@CF01906                                        0593
         L     @08,ICTIXP(@08,@01)                                 0593
         MVC   @TF00001(4),ICTMCHN(@08)                            0593
         L     @08,@TF00001                                        0593
         AL    @08,@CF01906                                        0593
         L     @15,ICTIXM(@15,@08)                                 0593
         CL    @15,ICTENDIX                                        0593
         BE    @DC00593                                            0593
*           IF LMNAME=ICTLMNAM(1)   /*                       @SA71755*/
*             THEN                  /* IF ANY LMOD MATCHES LMOD ON 0594
*                                      NAME CARD             @SA71755*/
         CLC   LMNAME(8),ICTLMNAM(@15)                             0594
         BNE   @RF00594                                            0594
*             ZAPKILL=OFF;          /* THEN ALLOW PROCESSING TO    0595
*                                      CONTINUE              @SA71755*/
         NI    ZAPKILL,B'11111101'                                 0595
*         END;                      /* ELSE ZAPKILL IS LEFT ON -   0596
*                                      FLUSH PTF AFTER VERIFY PASS 0596
*                                                            @SA71755*/
@RF00594 LA    @15,1                                               0596
         AH    @15,L                                               0596
         STH   @15,L                                               0596
         C     @15,@CF01724                                        0596
         BNH   @DL00593                                            0596
@DC00593 DS    0H                                                  0597
*         RFY                       /*                       @SA71755*/
*          (ICTLMOD) BASED(ICTIXM(K));/*                     @Z40SP00*/
*       END;                        /*                       @SA71755*/
*     ELSE                          /* OTHERWISE - ACCEPT BOTH NAMES */
*       DO;                                                        0599
         B     @RC00588                                            0599
@RF00588 DS    0H                                                  0600
*         TWONAME=ON;               /* SET SECOND NAME SWITCH        */
         OI    TWONAME,B'00100000'                                 0600
*         SECNAME=SCANRCD(1:SCPPMLN);/* EXIT TO NAME ROUTINE         */
         MVI   SECNAME+1,C' '                                      0601
         MVC   SECNAME+2(6),SECNAME+1                              0601
         LH    @15,SCPPMLN                                         0601
         BCTR  @15,0                                               0601
         L     @08,SCPCHAR                                         0601
         EX    @15,@SM01922                                        0601
*       END;                                                       0602
*   GO TO HMAZP700;                                                0603
         B     HMAZP700                                            0603
         EJECT
*                                                                  0604
*   /*****************************************************************/
*   /*                                                               */
*   /* IDR DATA ROUTINE, THE IDR DATA ROUTINE WILL OUTPUT A CARD ON  */
*   /* THE REPLACE PASS ONLY --- SCN_ROUT                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0604
*RIDR:                                                             0604
*   RESPECIFY                                                      0604
*     R1 RSTD;                      /*                       @Z67SP00*/
RIDR     DS    0H                                                  0605
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0605
*   RESPECIFY                                                      0606
*     R1 UNRSTD;                    /*                       @Z67SP00*/
*   IF REPPASS=OFF                  /* IS THIS REPLACE PASS? @Z40SP00*/
*     THEN                                                         0607
         TM    REPPASS,B'00001000'                                 0607
         BNZ   @RF00607                                            0607
*     NOWRITE=ON;                   /* NO - BYPASS CARD IF VERIFY  0608
*                                      PASS                  @Z40SP00*/
         OI    NOWRITE,B'10000000'                                 0608
*   GO TO HMAZP700;                 /* IDRDATA CARD WRITTEN ONLY IF
*                                      REP PASS              @Z40SP00*/
         B     HMAZP700                                            0609
         EJECT
*                                                                  0610
*   /*****************************************************************/
*   /*                                                               */
*   /* ABSDUMP AND DUMP ROUTINE IF A DUMP OR ABSDUMP IS FOUND        */
*   /* PREVIOUS TO A VERIFY CARD THEN THIS CARD WILL BE PLACED IN THE*/
*   /* VERIFY RUN. IF IT IS FOUND SUBSEQUENT TO A VERIFY OR A REP    */
*   /* CARD IT WILL BE PLACED IN THE REPLACE RUN --- SCN_ROUT        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0610
*RABSD:                                                            0610
*RDUMP:                                                            0610
*   RESPECIFY                                                      0610
*     R1 RSTD;                      /*                       @Z67SP00*/
RABSD    DS    0H                                                  0610
RDUMP    DS    0H                                                  0611
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0611
*   RESPECIFY                                                      0612
*     R1 UNRSTD;                    /*                       @Z67SP00*/
*   IF(NAMESCH=ON&                  /* IF NAME WAS PREV. SCANNED     */
*       VERPASS=ON)                 /* AND THIS IS VERIFY PASS OR    */
*       ×(NAMESCH=OFF&              /* IF NAME CARD WAS NOT PREV.  0613
*                                      SCANNED                       */
*       REPPASS=ON)                 /* AND THIS IS REPLACE PASS      */
*     THEN                                                         0613
         TM    NAMESCH,B'10000100'                                 0613
         BO    @RT00613                                            0613
         TM    REPPASS,B'00001000'                                 0613
         BNO   @RF00613                                            0613
         TM    NAMESCH,B'10000000'                                 0613
         BNZ   @RF00613                                            0613
@RT00613 DS    0H                                                  0614
*     DO;                                                          0614
*       CODUMP=SCANRCD(1:SCPPMLN+1);/* MOVE IN FUNCTION TO RCD     0615
*                                                            @OS70966*/
         MVI   CODUMP+1,C' '                                       0615
         MVC   CODUMP+2(6),CODUMP+1                                0615
         LH    @15,SCPPMLN                                         0615
         L     @08,SCPCHAR                                         0615
         EX    @15,@SM01924                                        0615
*       DUMPSW=ON;                  /* SET DUMP CARD B4 NAME CARD AT
*                                      REP                   @OY01965*/
         OI    DUMPSW,B'00001000'                                  0616
*     END;                                                         0617
*   ELSE                            /* OTHERWISE - DON'T WANT THIS 0618
*                                      CARD                          */
*     NOWRITE=ON;                   /* SET NOWRITE TO SYSUT1 SW ON   */
         B     @RC00613                                            0618
@RF00613 OI    NOWRITE,B'10000000'                                 0618
*   GO TO HMAZP700;                                                0619
         B     HMAZP700                                            0619
         EJECT
*                                                                  0620
*   /*****************************************************************/
*   /*                                                               */
*   /* BASE CARD ROUTINE --- SCN_ROUT                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0620
*RBASE:                                                            0620
*   RESPECIFY                                                      0620
*     R1 RSTD;                      /*                       @Z67SP00*/
RBASE    DS    0H                                                  0621
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0621
*   IF NAMESCH=OFF                  /* IF NAME CARD WAS NOT PREV.  0622
*                                      SCANNED                       */
*     THEN                                                         0622
         TM    NAMESCH,B'10000000'                                 0622
         BZ    @RT00622                                            0622
*     GO TO RCCHHR;                 /* INDICATE ERROR        @YA07506*/
*   ELSE                                                           0624
*     GO TO HMAZP700;                                              0624
         B     HMAZP700                                            0624
*   RESPECIFY                                                      0625
*     R1 UNRSTD;                    /*                       @Z67SP00*/
         EJECT
*                                                                  0626
*   /*****************************************************************/
*   /*                                                               */
*   /* SETSSI ROUTINE THE SETSSI CARD WILL BE OUTPUT ON A REPLACE    */
*   /* PASS ONLY --- SCN_ROUT                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0626
*RSETSSI:                                                          0626
*   RESPECIFY                                                      0626
*     R1 RSTD;                      /*                       @Z67SP00*/
RSETSSI  DS    0H                                                  0627
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0627
*   RESPECIFY                                                      0628
*     R1 UNRSTD;                    /*                       @Z67SP00*/
*   IF REPPASS=OFF                  /* IS THIS REPLACE PASS? @Z40SP00*/
*     THEN                                                         0629
         TM    REPPASS,B'00001000'                                 0629
         BNZ   @RF00629                                            0629
*     NOWRITE=ON;                   /* NO - BYPASS SETSSI CARD ON  0630
*                                      VERIFY PASS           @Z40SP00*/
         OI    NOWRITE,B'10000000'                                 0630
*   GO TO HMAZP700;                 /* SETSSI CARD IS WRITTEN ONLY 0631
*                                      FOR REP PASS          @Z40SP00*/
         B     HMAZP700                                            0631
         EJECT
*                                                                  0632
*   /*****************************************************************/
*   /*                                                               */
*   /* CONSIDERED BAD INPUT TO SMP SUPERZAP INVOKING ROUTINE ---     */
*   /* SCN_ROUT                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0632
*RCCHHR:                                                           0632
*RCONS:                                                            0632
*HMAZP920:                                                         0632
*   RESPECIFY                                                      0632
*     R1 RSTD;                      /*                       @Z67SP00*/
RCCHHR   DS    0H                                                  0632
RCONS    DS    0H                                                  0632
HMAZP920 DS    0H                                                  0633
*   PARSAV=R1;                      /* SAVE REGISTER 1       @Z67SP00*/
         ST    R1,PARSAV                                           0633
*   RESPECIFY                                                      0634
*     R1 UNRSTD;                    /*                       @Z67SP00*/
*   SCPRET=SCPSTOP;                 /* SET HIGH RETURN CODE FOR SCAN
*                                                            @Z40SP00*/
         MVI   SCPRET,X'08'                                        0635
*   RFY                                                            0636
*     R1 RSTD;                      /*                       @ZD00001*/
*   R1=PARSAV;                      /* RESTORE R1 FOR SCAN   @Z67SP00*/
         L     @15,PARSAV                                          0637
         LR    R1,@15                                              0637
*   GO TO SCANRETN;                 /* RETURN TO HMASMSCN    @ZD00001*/
         BR    R14                                                 0638
*   RFY                                                            0639
*     R1 UNRSTD;                    /*                       @ZD00001*/
*                                                                  0640
*   /*****************************************************************/
*   /*                                                               */
*   /* COMMON RETURN TO CALLER                               @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0640
*HMAZP970:                                                         0640
*   RETURN CODE(ZAPRTNCD);          /* RETURN TO CALLER WITH HIGHEST
*                                      RETURN CODE ENCOUNTERED.    0640
*                                                            @YA07506*/
HMAZP970 SLR   @15,@15                                             0640
         IC    @15,ZAPRTNCD                                        0640
         L     @13,4(,@13)                                         0640
         L     @14,12(,@13)                                        0640
         LM    @00,@12,20(@13)                                     0640
         BR    @14                                                 0640
*   END HMASMZAP                                                   0641
*                                                                  0641
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMSCP)                                       */
*/*%INCLUDE SYSLIB  (HMASMPRL)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*                                                                  0641
*       ;                                                          0641
@DATA    DS    0H
@CH00435 DC    H'11'
@CH00064 DC    H'15'
@CH00083 DC    H'32'
@CH00483 DC    H'38'
@CH00730 DC    H'50'
@CH01036 DC    H'71'
@CH00521 DC    H'85'
@CH00531 DC    H'90'
@CH01885 DC    H'116'
@SM01918 MVC   LMNAME(0),SCANRCD(@08)
@SM01922 MVC   SECNAME(0),SCANRCD(@08)
@SM01924 MVC   CODUMP(0),SCANRCD(@08)
         DS    0F
@AL00292 DC    A(HMASMSCP)             LIST WITH   1 ARGUMENT(S)
@AL00332 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00370 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00450 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00519 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00479 DC    A(STATUS)               LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@AL00001 DS    2A
@TF00001 DS    F
@TF00002 DS    F
@ZTEMPS  DS    0F
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
         DS    0F
@CF00085 DC    F'1'
@CF01724 DC    F'10000'
@CF01901 DC    F'-116'
@CF01903 DC    F'-108'
@CF01904 DC    F'-102'
@CF01905 DC    F'-52'
@CF01906 DC    F'-4'
@CV01804 DC    V(HMASMSCN)
@CV01805 DC    V(HMASMSEC)
@CV01806 DC    V(HMASMCPL)
@CV01807 DC    V(HMASMIO)
@CV01808 DC    V(HMASMMSG)
         DS    0D
SAVBUFAD DS    A
PARSAV   DS    A
I        DS    H
J        DS    H
K        DS    H
L        DS    H
P        DS    H
ZAPRTNCD DC    AL1(0)
@CC01704 DC    C'SUCCESSFUL'
@CC01707 DC    C'FAILED    '
@CC01700 DC    C'VERIFY '
@CC01702 DC    C'REPLACE'
         DS    CL3
ICTENDCH DC    X'FFFFFFFF'
HMASMSCP DS    CL26
         ORG   HMASMSCP
SCPCHAR  DS    AL4
SCPSRCH  DS    AL4
SCPWKAR  DS    AL4
SCPIORTN DS    AL4
SCPIOPAD DS    AL4
SCPINLN  DS    FL2
SCPPMLN  DS    FL2
SCPEOR   DS    BL1
         ORG   SCPEOR
SCPCONT  DS    BL1
SCPNOCT  EQU   SCPEOR+0
SCPCOMNT EQU   SCPEOR+0
SCPRTERR EQU   SCPEOR+0
SCPNOSUC EQU   SCPEOR+0
SCPNORT  EQU   SCPEOR+0
@NM00225 EQU   SCPEOR+0
         ORG   HMASMSCP+25
SCPRETRN DS    FL1
         ORG   SCPRETRN
SCPRET   DS    FL1
         ORG   HMASMSCP+26
         DS    CL2
HMASMMGP DS    CL40
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00228 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00229 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL28
         ORG   MGPVAR
MGPVARPT DS    7A
         ORG   HMASMMGP+40
SAVRVANM DS    CL8
RETURNCD DS    CL2
         DS    CL6
DECNO    DS    CL8
PATCHZAP DS    CL80
         ORG   PATCHZAP
@NM00233 DC    80X'FF'
         ORG   PATCHZAP+80
CONAME   DC    CL8'NAME    '
CODUMP   DC    CL8'DUMP    '
LMNAME   DC    CL8' '
SECNAME  DC    CL8' '
OUTBUF   DS    CL100
         ORG   OUTBUF
PRLBUF   DC    CL10' '
DASHES   DC    CL10'----------'
OUTREC   DC    CL80' '
         ORG   OUTREC
@NM00234 DS    CL1
OUTNAME  DS    CL8
@NM00235 DS    CL1
TGNAME   DS    CL8
@NM00236 DS    CL1
CSNAME   DS    CL8
@NM00237 DS    CL53
         ORG   OUTBUF+100
HDRRCD   DS    CL80
         ORG   HDRRCD
@NM00238 DC    CL20'* ***** ZAP FOR MOD '
HDRMOD   DS    CL8
@NM00239 DC    CL8' IN PTF '
HDRPTF   DS    CL7
@NM00240 DC    CL6' *****'
@NM00241 DC    CL31' '
         ORG   HDRRCD+80
STATUS   DS    CL1
GOOD     DC    CL1'G'
BAD      DC    CL1'B'
         DS    CL1
OPTLST   DS    CL93
         ORG   OPTLST
OPTLGTH  DS    FL2
OPTVAR   DS    CL91
         ORG   OPTLST+93
         DS    CL1
ZAPLIST  DS    CL50
         ORG   ZAPLIST
LISTLEN  DC    H'48'
@NM00242 DS    CL8
         ORG   @NM00242
@NM00243 DC    8X'00'
         ORG   ZAPLIST+10
@NM00244 DS    CL8
         ORG   @NM00244
@NM00245 DC    8X'00'
         ORG   ZAPLIST+18
@NM00246 DS    CL8
         ORG   @NM00246
@NM00247 DC    8X'00'
         ORG   ZAPLIST+26
SYSLIB   DC    CL8' '
SYSIN    DC    CL8'SYSUT1  '
SYSPRINT DS    CL8
         ORG   SYSPRINT
@NM00248 DC    8X'00'
         ORG   ZAPLIST+50
ZFLAGS1  DC    B'00000000'
         ORG   ZFLAGS1
NAMESCH  DS    BL1
ONENAME  EQU   ZFLAGS1+0
TWONAME  EQU   ZFLAGS1+0
BRSW     EQU   ZFLAGS1+0
REPPASS  EQU   ZFLAGS1+0
VERPASS  EQU   ZFLAGS1+0
ANYTWO   EQU   ZFLAGS1+0
ZAPERROR EQU   ZFLAGS1+0
         ORG   ZFLAGS1+1
ZFLAGS2  DC    B'00000000'
         ORG   ZFLAGS2
NOWRITE  DS    BL1
CALLCPL  EQU   ZFLAGS2+0
ZAPFLSH  EQU   ZFLAGS2+0
CMNTSW   EQU   ZFLAGS2+0
DUMPSW   EQU   ZFLAGS2+0
DODUMP   EQU   ZFLAGS2+0
ZAPKILL  EQU   ZFLAGS2+0
ANYUT1   EQU   ZFLAGS2+0
         ORG   ZFLAGS2+1
HMASMZAP CSECT
KCMNT    DSCAN KEY='*',ALT=KVER,ROUT=RCMNT,IO=NO
KVER     DSCAN KEY='VER',ALT=KREP,ROUT=RVER,IO=NO
KREP     DSCAN KEY='REP',ALT=KNAME,ROUT=RREP,IO=NO
KNAME    DSCAN KEY='NAME',ALT=KIDR,SUCC=KLMOD,ROUT=RNAME,IO=NO
KLMOD    DSCAN MAXLEN=8,ROUT=RLMOD,SUCC=KMOD,IO=NO
KMOD     DSCAN MAXLEN=8,ROUT=RMOD,IO=NO
KIDR     DSCAN KEY='IDRDATA',ALT=KABSD,ROUT=RIDR,IO=NO
KABSD    DSCAN KEY='ABSDUMP',ALT=KDUMP,ROUT=RABSD,IO=NO
KDUMP    DSCAN KEY='DUMP',ALT=KBASE,ROUT=RDUMP,IO=NO
KBASE    DSCAN KEY='BASE',ALT=KSETSSI,ROUT=RBASE,IO=NO
KSETSSI  DSCAN KEY='SETSSI',ALT=KCCHHR,ROUT=RSETSSI,IO=NO
KCCHHR   DSCAN KEY='CCHHR',ALT=KCONS,ROUT=RCCHHR,IO=NO
KCONS    DSCAN KEY='CONSOLE',ROUT=RCONS,IO=NO
HMASMZAP CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CCAPTR   EQU   @11
IOPPTR   EQU   @09
RTNCODE  EQU   @15
R1       EQU   @01
R2       EQU   @02
R14      EQU   @14
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCARVAD  EQU   CCAFSTA
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAACCPT EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPNM EQU   @NM00035
CCASPZAP EQU   @NM00035+8
CCAZAPSP EQU   @NM00035+12
CCAZAPRC EQU   @NM00035+20
CCARZAP  EQU   CCAZAPRC
CCAZAPPM EQU   @NM00035+24
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00043 EQU   HMASMIOP+12
@NM00044 EQU   @NM00043
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00154 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPEND  EQU   ICTPTFS
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTPNOGO EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPFLG8 EQU   ICTPTF+14
ICTPECPL EQU   ICTPFLG8
ICTPFLG9 EQU   ICTPTF+15
@NM00181 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTIXP   EQU   ICTIXPF
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMFLG2 EQU   ICTMOD+8
ICTMPROC EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMZAP  EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTMFLG4 EQU   ICTMOD+11
ICTMISEL EQU   ICTMFLG4
ICTMFLG5 EQU   ICTMOD+12
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTIXM   EQU   ICTIXMF
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLFLG4 EQU   ICTLMOD+8
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLFLG3 EQU   ICTLMOD+14
ICTTIND1 EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTG1   EQU   ICTLMOD+15
ICTTG2   EQU   ICTLMOD+23
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
HMASMPRL EQU   0
PRLRLEN  EQU   HMASMPRL
PRLSPAN  EQU   HMASMPRL+2
PRLFLGS  EQU   PRLSPAN
PRLDATE  EQU   HMASMPRL+4
PRLTIME  EQU   HMASMPRL+7
PRLEND   EQU   HMASMPRL+10
RVAPARM  EQU   0
RVAINFO  EQU   RVAPARM
RVAPASS  EQU   RVAPARM+12
RVASTAE  EQU   RVAPARM+20
RVAEPRNM EQU   RVASTAE+4
@NM00230 EQU   RVASTAE+16
@NM00231 EQU   RVASTAE+20
RVAFLAGS EQU   RVASTAE+24
SCANRETN EQU   0
SCANRCD  EQU   0
BUFFER   EQU   0
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
SCPIOPRM EQU   0
SCPSTRNG EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00050 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00061 EQU   IOPUDATA
@NM00062 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00071 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00082 EQU   IOPSRCDR+1
@NM00084 EQU   @NM00082+7
@NM00088 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00092 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00098 EQU   IOPMODDR+1
@NM00100 EQU   @NM00098+7
@NM00104 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00108 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00119 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00126 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00135 EQU   IOPPTFFX
@NM00136 EQU   @NM00135
IOPPDTES EQU   IOPPTFFX+41
@NM00139 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00164 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00164
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00168 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00168
IOPBFTB1 EQU   IOPBFTB0
ICTENDNT EQU   ICTENDCH
ICTENDIX EQU   ICTENDCH
PRLDATA  EQU   PRLEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00170 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00169 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00167 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00166 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00165 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00163 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00162 EQU   IOPPTSFX+35
@NM00161 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00160 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00159 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00158 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00157 EQU   IOPQFMDR
@NM00153 EQU   IOPQSMDR
@NM00152 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00151 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00150 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00149 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00148 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00147 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00146 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00145 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00144 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00143 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00142 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00141 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00140 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00139+3
IOPRECD  EQU   @NM00139
@NM00138 EQU   IOPPTFFX+8
@NM00137 EQU   @NM00135+7
IOPPRELN EQU   @NM00136
@NM00134 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00133 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00132 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00131 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00130 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00129 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00128 EQU   @NM00126+7
@NM00127 EQU   @NM00126
@NM00125 EQU   IOPSYSDR+5
@NM00124 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00123 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00122 EQU   IOPDLBFX+8
@NM00121 EQU   @NM00119+7
@NM00120 EQU   @NM00119
@NM00118 EQU   IOPDLBDR+1
@NM00117 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00116 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00115 EQU   IOPMODFX+12
@NM00114 EQU   IOPMODF4
@NM00113 EQU   IOPMODF3
@NM00112 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00111 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00110 EQU   @NM00108+7
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR+17
@NM00106 EQU   @NM00104+7
@NM00105 EQU   @NM00104
@NM00103 EQU   @NM00100
@NM00102 EQU   @NM00100
@NM00101 EQU   @NM00100
@NM00099 EQU   @NM00098
@NM00097 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00096 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00095 EQU   IOPSRCFX+8
@NM00094 EQU   @NM00092+7
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00090 EQU   @NM00088+7
@NM00089 EQU   @NM00088
@NM00087 EQU   @NM00084
@NM00086 EQU   @NM00084
@NM00085 EQU   @NM00084
@NM00083 EQU   @NM00082
@NM00081 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00080 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00079 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00078 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00077 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00076 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00075 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00073 EQU   @NM00071+7
@NM00072 EQU   @NM00071
@NM00070 EQU   IOPLMDDR+6
@NM00069 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00068 EQU   IOPLMDF4
@NM00067 EQU   IOPLMDF3
@NM00066 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00065 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00064 EQU   IOPLMDDR
@NM00063 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00062+4
IOPUSED  EQU   @NM00062
IOPTPSEQ EQU   @NM00061+8
IOPVLSER EQU   @NM00061+2
IOPBLKSI EQU   @NM00061
IOPCQMAX EQU   IOPCQMAP+12
@NM00060 EQU   IOPCQMAP+11
@NM00059 EQU   IOPCQMAP+8
@NM00058 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00057 EQU   IOPSCMAP+11
@NM00056 EQU   IOPSCMAP+8
@NM00055 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00054 EQU   IOPNTMAX+11
@NM00053 EQU   IOPNTMAX+8
@NM00052 EQU   IOPNTMAX
@NM00051 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00050+5
IOPIPTF3 EQU   @NM00050
RVAEND   EQU   RVASTAE+25
@NM00232 EQU   RVAFLAGS
RVASDWFD EQU   RVAFLAGS
RVAVS1   EQU   RVAFLAGS
RVAMVS   EQU   RVAFLAGS
RVAUSRCH EQU   @NM00231+2
RVASYSCH EQU   @NM00231
RVAUSRCD EQU   @NM00230+2
RVASYSCD EQU   @NM00230
RVAABNDC EQU   RVASTAE+12
RVASDWAP EQU   RVASTAE
RVAREC   EQU   RVAPASS+4
RVATBL   EQU   RVAPASS
RVAMAJNM EQU   RVAINFO+8
RVACCAP  EQU   RVAINFO+4
RVAHDR   EQU   RVAINFO
PRLCONC  EQU   PRLTIME+2
@NM00227 EQU   PRLTIME
PRLHDADR EQU   PRLDATE
@NM00226 EQU   PRLFLGS
PRLBLANK EQU   PRLFLGS
PRLHEADO EQU   PRLFLGS
PRLHEAD  EQU   PRLFLGS
ICTIXL   EQU   ICTIXLF
@NM00224 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
@NM00223 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
@NM00222 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00221 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00220 EQU   ICTLFLG7
@NM00219 EQU   ICTLFLG6
@NM00218 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00217 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00216 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLPROC EQU   ICTLFLG4
ICTLEND  EQU   ICTLNAME
@NM00215 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00214 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTTALND EQU   ICTTALNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00213 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
@NM00212 EQU   ICTMOD+128
ICTMICHA EQU   ICTMOD+108
ICTPPTR  EQU   ICTMOD+96
@NM00211 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00210 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMSYSL EQU   ICTMOD+56
ICTMDSTL EQU   ICTMOD+48
ICTMASLB EQU   ICTMOD+40
ICTTOLIB EQU   ICTMOD+32
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00209 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00208 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00207 EQU   ICTMLEP4
@NM00206 EQU   ICTMLEP3
@NM00205 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00204 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00203 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00202 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
@NM00201 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
ICTMSRCU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMASM  EQU   ICTMMODR
ICTMMOD  EQU   ICTMMODR
@NM00200 EQU   ICTMFLG2
@NM00199 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMEND  EQU   ICTMNAME
@NM00198 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00197 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00196 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00195 EQU   ICTCSRST
@NM00194 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00193 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00192 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00191 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00190 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00189 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00188 EQU   ICTSUPNT+7
ICTSUPND EQU   ICTSUPNM
@NM00187 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00186 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00185 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00184 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
@NM00183 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00182 EQU   @NM00181
ICTPRQBY EQU   @NM00181
ICTPRQOK EQU   @NM00181
ICTPRQCK EQU   @NM00181
@NM00180 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00179 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00178 EQU   ICTPFLG4
@NM00177 EQU   ICTPFLG4
@NM00176 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00175 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00174 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00173 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00172 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00171 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00156 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00155 EQU   @NM00154+7
IOPQSMFM EQU   @NM00154
@NM00074 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00049 EQU   IOPUSERL
@NM00048 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00047 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00046 EQU   @NM00043+10
IOPSEQNO EQU   @NM00043+8
@NM00045 EQU   @NM00044+7
IOPPTFNM EQU   @NM00044
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
@NM00036 EQU   @NM00035+21
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
CCATBLPA EQU   @NM00009+12
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00221 EQU   HMAZP050
@RT00272 EQU   HMAZP040
@RT00299 EQU   HMAZP050
@RT00312 EQU   HMAZP110
@RT00314 EQU   HMAZP120
@RT00317 EQU   HMAZP110
@RT00340 EQU   HMAZP050
@RF00323 EQU   HMAZP035
@RF00321 EQU   HMAZP110
@RT00359 EQU   HMAZP050
@RF00504 EQU   HMAZP115
@RF00562 EQU   HMAZP700
@RF00569 EQU   HMAZP700
@RC00588 EQU   HMAZP700
@RC00586 EQU   HMAZP700
@RF00607 EQU   HMAZP700
@RC00613 EQU   HMAZP700
@RT00622 EQU   RCCHHR
@RF00622 EQU   HMAZP700
@RF00629 EQU   HMAZP700
@ENDDATA EQU   *
         END   HMASMZAP,(C'PLS2240',0802,78334)
