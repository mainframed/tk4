         TITLE 'HMASMXRF - SMP CDS/ACDS XREF MOD'
HMASMXRF CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMXRF  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(12),0(@01)                                 0001
*                                                                  0167
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZATION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0168
*   XRFRTNCD=ZERO;                  /* INIT RETURN CODE              */
         SLR   XRFRTNCD,XRFRTNCD                                   0168
*   IOPPTR=ADDR(XRFIOP);            /* ADDR OF IOP                   */
         LA    IOPPTR,XRFIOP                                       0169
*   IOPPTR2=ZERO;                   /* NO SECOND IOP YET             */
         SLR   IOPPTR2,IOPPTR2                                     0170
*   HMASMIOP=''B;                   /* ZERO IOP                      */
         XC    HMASMIOP(68,IOPPTR),HMASMIOP(IOPPTR)                0171
*   GTPPTR=ADDR(XRFGTP);            /* PTR FOR XREF FILE             */
         L     GTPPTR,@PC00001+4                                   0172
*   SETPTR=ADDR(SETGTP);            /* PTR FOR SET FILE              */
         L     SETPTR,@PC00001+8                                   0173
*   CALL XRFINIT;                   /*                               */
         BAL   @14,XRFINIT                                         0174
*   RFY                                                            0175
*     RTNCODE RSTD;                 /*                               */
*   XRFRTNCD=MAX(XRFRTNCD,RTNCODE); /*                               */
         CR    XRFRTNCD,RTNCODE                                    0176
         BNL   *+6
         LR    XRFRTNCD,RTNCODE                                    0176
*   RFY                                                            0177
*     RTNCODE UNRSTD;               /*                               */
*                                                                  0178
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP READING NEXT DIRECTORY ENTRY FROM SPECIFIED DATA SET FOR */
*   /* EACH PTF ENTRY FOUND PROCESS EACH OF ITS SUB-ENTRIES          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0178
*   DO WHILE                        /* LOOP                          */
*         (IOPRETRN=IOPGOOD         /* UNTIL EOF OR ERROR            */
*         &XRFRTNCD<STOPFUNC);      /* OR ERROR IN WRITE             */
         B     @DE00178                                            0178
@DL00178 DS    0H                                                  0179
*     IOPFUNCT=IOPGETN;             /* SET TO GET NEXT DIRECTORY RCD */
         MVI   IOPFUNCT(IOPPTR),X'0A'                              0179
*     CALL HMASMIO(HMASMIOP);       /* GET NEXT DIRECTORY ENTRY      */
*                                                                  0180
         ST    IOPPTR,@AL00001                                     0180
         L     @15,@CV01450                                        0180
         LA    @01,@AL00001                                        0180
         BALR  @14,@15                                             0180
*     /***************************************************************/
*     /*                                                             */
*     /* IF ENTRY IS MAC AND MAC RELATED DATA REQUESTED PROCESS IT   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0181
*     IF IOPRETRN=IOPGOOD           /* IF ENTRY OBTAINED             */
*       THEN                        /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0181
         BNE   @RF00181                                            0181
*       DO;                         /*                               */
*         IF IOPTYPE=IOPMAC         /* AND ITS MAC TYPE AND          */
*             &(LISTASM=ON×LISTSRC=ON×LISTALL2=ON)/* RELATED REQUEST */
*           THEN                    /*                               */
         CLI   IOPTYPE(IOPPTR),3                                   0183
         BNE   @RF00183                                            0183
         L     @10,@PC00001                                        0183
         TM    LISTASM(@10),B'11000100'                            0183
         BZ    @RF00183                                            0183
*           DO;                     /*                               */
*             IOPFUNCT=IOPXTND;     /* GET EXTENSION                 */
         MVI   IOPFUNCT(IOPPTR),X'07'                              0185
*             CALL HMASMIO(HMASMIOP);/*                              */
         ST    IOPPTR,@AL00001                                     0186
         L     @15,@CV01450                                        0186
         LA    @01,@AL00001                                        0186
         BALR  @14,@15                                             0186
*             IF IOPRETRN=IOPGOOD   /* IF EXTENDED OK                */
*               THEN                /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0187
         BNE   @RF00187                                            0187
*               DO;                 /*                               */
*                 CALL XRFMACP1;    /* PROCESS MAC ENTRY             */
         BAL   @14,XRFMACP1                                        0189
*                 RFY                                              0190
*                   RTNCODE RSTD;   /*                               */
*                 XRFRTNCD=MAX(XRFRTNCD,RTNCODE);/* SAVE RC          */
         CR    XRFRTNCD,RTNCODE                                    0191
         BNL   *+6
         LR    XRFRTNCD,RTNCODE                                    0191
*                 RFY                                              0192
*                   RTNCODE UNRSTD; /*                               */
*               END;                /* END EXTEND OK                 */
*             ELSE                  /* IF EXTEND NOT OK              */
*               XRFRTNCD=MAX(XRFRTNCD,IOPRETRN);/*                   */
         B     @RC00187                                            0194
@RF00187 SLR   @10,@10                                             0194
         IC    @10,IOPRETRN(,IOPPTR)                               0194
         CR    XRFRTNCD,@10                                        0194
         BNL   *+6
         LR    XRFRTNCD,@10                                        0194
*           END;                    /* END ENTRY IS PTF              */
*                                                                  0195
*         /***********************************************************/
*         /*                                                         */
*         /* IF ENTRY IS MOD AND MOD RELATED DATA REQUESTED PROCESS  */
*         /* IT                                                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0196
*         ELSE                      /*                               */
*           IF IOPTYPE=IOPMOD       /* IF MAC TYPE ENTRY             */
*               &(LISTLMD=ON×LISTALL2=ON)/* AND RELEATED REQUEST     */
*             THEN                  /*                               */
         B     @RC00183                                            0196
@RF00183 CLI   IOPTYPE(IOPPTR),5                                   0196
         BNE   @RF00196                                            0196
         L     @10,@PC00001                                        0196
         TM    LISTLMD(@10),B'10100000'                            0196
         BZ    @RF00196                                            0196
*             DO;                   /*                               */
*               IOPFUNCT=IOPXTND;   /* GET EXTENSION                 */
         MVI   IOPFUNCT(IOPPTR),X'07'                              0198
*               CALL HMASMIO(HMASMIOP);/*                            */
         ST    IOPPTR,@AL00001                                     0199
         L     @15,@CV01450                                        0199
         LA    @01,@AL00001                                        0199
         BALR  @14,@15                                             0199
*               IF IOPRETRN=IOPGOOD /* IF EXTENDED OK                */
*                 THEN              /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0200
         BNE   @RF00200                                            0200
*                 DO;               /*                               */
*                   CALL XRFMODP1;  /* PROCESS MOD ENTRY             */
         BAL   @14,XRFMODP1                                        0202
*                   RFY                                            0203
*                     RTNCODE RSTD; /*                               */
*                   XRFRTNCD=MAX(XRFRTNCD,RTNCODE);/* SAVE RC        */
         CR    XRFRTNCD,RTNCODE                                    0204
         BNL   *+6
         LR    XRFRTNCD,RTNCODE                                    0204
*                   RFY                                            0205
*                     RTNCODE UNRSTD;/*                              */
*                 END;              /* END EXTEND OK                 */
*               ELSE                /* IF EXTEND NOT OK              */
*                 XRFRTNCD=MAX(XRFRTNCD,IOPRETRN);/*                 */
         B     @RC00200                                            0207
@RF00200 SLR   @10,@10                                             0207
         IC    @10,IOPRETRN(,IOPPTR)                               0207
         CR    XRFRTNCD,@10                                        0207
         BNL   *+6
         LR    XRFRTNCD,@10                                        0207
*             END;                  /* END ENTRY IS PTF              */
*                                                                  0208
*         /***********************************************************/
*         /*                                                         */
*         /* IF ENTRY IS PTF AND PTF RELATED DATA REQUESTED          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0209
*           ELSE                    /*                               */
*             IF IOPTYPE=IOPSMD     /* IF SYSMOD TYPE RECORD         */
*                 &IOPDUMMP=OFF     /* AND NOT DUMYY ONLY            */
*                 &(LISTMOD=ON      /* AND A LIST REQUEST FOR        */
*                 ×LISTMAC=ON       /* TYPE ENTRY THAT IS RELATED    */
*                 ×LISTSRC=ON       /* TO SYSMODS                    */
*                 ×LISTSMD=ON       /*                               */
*                 ×LISTALL2=ON)     /*                               */
*               THEN                /*                               */
         B     @RC00196                                            0209
@RF00196 CLI   IOPTYPE(IOPPTR),11                                  0209
         BNE   @RF00209                                            0209
         TM    IOPDUMMP(IOPPTR),B'00000100'                        0209
         BNZ   @RF00209                                            0209
         L     @10,@PC00001                                        0209
         TM    LISTMOD(@10),B'00011100'                            0209
         BNZ   @RT00209                                            0209
         TM    LISTSMD(@10),B'10000000'                            0209
         BO    @RT00209                                            0209
         TM    LISTALL2(@10),B'10000000'                           0209
         BNO   @RF00209                                            0209
@RT00209 DS    0H                                                  0210
*               DO;                 /*                               */
*                 IOPFUNCT=IOPXTND; /* GET EXTENSION                 */
         MVI   IOPFUNCT(IOPPTR),X'07'                              0211
*                 CALL HMASMIO(HMASMIOP);/*                          */
         ST    IOPPTR,@AL00001                                     0212
         L     @15,@CV01450                                        0212
         LA    @01,@AL00001                                        0212
         BALR  @14,@15                                             0212
*                 IF IOPRETRN=IOPGOOD/* IF EXTENDED OK               */
*                   THEN            /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0213
         BNE   @RF00213                                            0213
*                   DO;             /*                               */
*                     CALL XRFPTFP1;/* PROCESS PTF ENTRY             */
         BAL   @14,XRFPTFP1                                        0215
*                     RFY                                          0216
*                       RTNCODE RSTD;/*                              */
*                     XRFRTNCD=MAX(XRFRTNCD,RTNCODE);/* SAVE RC      */
         CR    XRFRTNCD,RTNCODE                                    0217
         BNL   *+6
         LR    XRFRTNCD,RTNCODE                                    0217
*                     RFY                                          0218
*                       RTNCODE UNRSTD;/*                            */
*                   END;            /* END EXTEND OK                 */
*                 ELSE              /* IF EXTEND NOT OK              */
*                   XRFRTNCD=MAX(XRFRTNCD,IOPRETRN);/*               */
         B     @RC00213                                            0220
@RF00213 SLR   @10,@10                                             0220
         IC    @10,IOPRETRN(,IOPPTR)                               0220
         CR    XRFRTNCD,@10                                        0220
         BNL   *+6
         LR    XRFRTNCD,@10                                        0220
*               END;                /* END ENTRY IS PTF              */
@RC00213 DS    0H                                                  0222
*       END;                        /* END ENTRY FOUND               */
*                                                                  0222
@RF00209 DS    0H                                                  0222
@RC00196 DS    0H                                                  0222
@RC00183 DS    0H                                                  0223
*     /***************************************************************/
*     /*                                                             */
*     /* END OF PROCESSING ONE MEMBER OF DS. GO TO TOP OF READ LOOP  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0223
*   END;                            /* END DIRECTORY READ LOOP       */
@RF00181 DS    0H                                                  0223
@DE00178 CLI   IOPRETRN(IOPPTR),0                                  0223
         BNE   @DC00178                                            0223
         CH    XRFRTNCD,@CH00235                                   0223
         BL    @DL00178                                            0223
@DC00178 DS    0H                                                  0224
         EJECT
*                                                                  0224
*   /*****************************************************************/
*   /*                                                               */
*   /* IF READ ERROR ENDED LOOP SET RC NOW                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0224
*   IF IOPRETRN>IOPEOF              /* IF SEVERE ERROR               */
*     THEN                          /*                               */
         CLI   IOPRETRN(IOPPTR),4                                  0224
         BNH   @RF00224                                            0224
*     XRFRTNCD=MAX(XRFRTNCD,IOPRETRN);/* SAVE RC                     */
*                                                                  0225
         SLR   @10,@10                                             0225
         IC    @10,IOPRETRN(,IOPPTR)                               0225
         CR    XRFRTNCD,@10                                        0225
         BNL   *+6
         LR    XRFRTNCD,@10                                        0225
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO FREE ALL WORK AREAS                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0226
*   CALL XRFCLEAN;                  /*                               */
@RF00224 BAL   @14,XRFCLEAN                                        0226
*   RFY                                                            0227
*     RTNCODE RSTD;                 /*                               */
*   XRFRTNCD=MAX(XRFRTNCD,RTNCODE); /* SAVE RC                       */
         CR    XRFRTNCD,RTNCODE                                    0228
         BNL   *+6
         LR    XRFRTNCD,RTNCODE                                    0228
*   RFY                                                            0229
*     RTNCODE UNRSTD;               /*                               */
*                                                                  0229
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH CODE SET UP DURING PROCESSING                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0230
*   RETURN CODE(XRFRTNCD);          /*                               */
         LR    @15,XRFRTNCD                                        0230
         L     @13,4(,@13)                                         0230
         L     @14,12(,@13)                                        0230
         LM    @00,@12,20(@13)                                     0230
         BR    @14                                                 0230
         EJECT
*                                                                  0231
*   /*****************************************************************/
*   /*                                                               */
*   /* HMASMXRF INITIALIZTATION CODE                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0231
*XRFINIT:                           /*                               */
*   PROCEDURE;                      /*                               */
XRFINIT  STM   @14,@01,@SA00002                                    0231
         ST    @03,@SA00002+16                                     0231
         STM   @05,@12,@SA00002+20                                 0231
*   DECLARE                         /*                               */
*     INITRC FIXED(8);              /*                               */
*   RFY                                                            0233
*     HMASMIOP BASED(IOPPTR);       /* MAIN IOP                      */
*   INITRC=ZERO;                    /* INIT PROC RTN CODE            */
*                                                                  0234
         SLR   INITRC,INITRC                                       0234
*   /*****************************************************************/
*   /*                                                               */
*   /* SAVE SET GTPBUFAD IF IN SELECT                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0235
*   RFY                                                            0235
*     HMASMGTP BASED(SETPTR);       /* XRF GTP                       */
*   IF LISTSEL=ON                   /* IF IN SELECT                  */
*     THEN                          /*                               */
         L     @10,@PC00001                                        0236
         TM    LISTSEL(@10),B'10000000'                            0236
         BNO   @RF00236                                            0236
*     DO;                           /*                               */
*       SAVSETAD=GTPBUFAD;          /*                               */
         MVC   SAVSETAD(4),GTPBUFAD(SETPTR)                        0238
*       GTPBUFAD=ADDR(HMASMSET);    /*                               */
         LA    @10,HMASMSET                                        0239
         ST    @10,GTPBUFAD(,SETPTR)                               0239
*     END;                          /*                               */
*                                                                  0240
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE GTA FOR XRF RECORDS                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0241
*   RFY                             /*                               */
*     HMASMGTP BASED(GTPPTR);       /*                               */
@RF00236 DS    0H                                                  0242
*   HMASMGTP=''B;                   /* ZERO GTA PARAMETER            */
         XC    HMASMGTP(28,GTPPTR),HMASMGTP(GTPPTR)                0242
*   GTPBUFAD=ADDR(XRFRCD);          /* PTR TO BUFFER AREA            */
         LA    @10,XRFRCD                                          0243
         ST    @10,GTPBUFAD(,GTPPTR)                               0243
*   GTPRCDLN=LENGTH(XRFRCD);        /* RCD LENGTH                    */
         LA    @10,30                                              0244
         STH   @10,GTPRCDLN(,GTPPTR)                               0244
*   GTPKEYLN=LENGTH(XRFRCD);        /*                               */
         STH   @10,GTPKEYLN(,GTPPTR)                               0245
*   GTPFUNCT=GTPADD;                /*                               */
*                                                                  0246
         MVI   GTPFUNCT(GTPPTR),X'04'                              0246
*   /*****************************************************************/
*   /*                                                               */
*   /* GETMAIN IOP FOR MAIN DIRECTORY READ                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0247
*   SPLFUNCT=SPLGMIOP;              /* SET TO GETMAIN IOP            */
         MVI   SPLFUNCT,X'03'                                      0247
*   CALL HMASMSUB(HMASMSPL);        /* CALL GETMAIN IOP ROUTINE      */
         L     @15,@CV01451                                        0248
         LA    @01,@AL00248                                        0248
         BALR  @14,@15                                             0248
*   RFY                                                            0249
*     RTNCODE RSTD;                 /*                               */
*   IF RTNCODE=ZERO                 /* IF GETMAIN OK                 */
*     THEN                          /*                               */
         LTR   RTNCODE,RTNCODE                                     0250
         BNZ   @RF00250                                            0250
*     IOPPTR=SPLPMAD;               /* SET PTR TO IOP                */
         L     IOPPTR,SPLPMAD                                      0251
*   ELSE                            /*                               */
*     INITRC=STOPFUNC;              /* STOP LIST                     */
         B     @RC00250                                            0252
@RF00250 LA    INITRC,12                                           0252
*   RFY                                                            0253
*     RTNCODE UNRSTD;               /*                               */
*                                                                  0253
@RC00250 DS    0H                                                  0254
*   /*****************************************************************/
*   /*                                                               */
*   /* GETMAIN SECOND IOP FOR MACRO LOCATES                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0254
*   IF INITRC=ZERO                  /*                               */
*     THEN                          /*                               */
         CH    INITRC,@CH00307                                     0254
         BNE   @RF00254                                            0254
*     DO;                           /*                               */
*       CALL HMASMSUB(HMASMSPL);    /* CALL GETMAIN IOP ROUTINE      */
         L     @15,@CV01451                                        0256
         LA    @01,@AL00256                                        0256
         BALR  @14,@15                                             0256
*       RFY                                                        0257
*         RTNCODE RSTD;             /*                               */
*       IF RTNCODE=ZERO             /* IF GETMAIN OK                 */
*         THEN                      /*                               */
         LTR   RTNCODE,RTNCODE                                     0258
         BNZ   @RF00258                                            0258
*         IOPPTR2=SPLPMAD;          /* SET IOP2 PTR                  */
         L     IOPPTR2,SPLPMAD                                     0259
*       ELSE                        /*                               */
*         INITRC=STOPFUNC;          /* STOP LIST                     */
         B     @RC00258                                            0260
@RF00258 LA    INITRC,12                                           0260
*     END;                          /*                               */
@RC00258 DS    0H                                                  0262
*   RFY                                                            0262
*     RTNCODE UNRSTD;               /*                               */
*                                                                  0262
@RF00254 DS    0H                                                  0263
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSE SPECIFIED DATA SET FOR GET NEXT PROCESSING              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0263
*   IF INITRC=ZERO                  /* IF IOP GETMAINED OK           */
*     THEN                          /*                               */
         CH    INITRC,@CH00307                                     0263
         BNE   @RF00263                                            0263
*     DO;                           /*                               */
*       IF LISTCDS=ON               /* IF LIST OF CDS                */
*         THEN                      /*                               */
         L     @10,@PC00001                                        0265
         TM    LISTCDS(@10),B'01000000'                            0265
         BNO   @RF00265                                            0265
*         IOPDSID=IOPCDS;           /* SET DATASET ID                */
         MVI   IOPDSID(IOPPTR),X'02'                               0266
*       ELSE                        /*                               */
*         IOPDSID=IOPACDS;          /* SET DATASET ID                */
         B     @RC00265                                            0267
@RF00265 MVI   IOPDSID(IOPPTR),X'0C'                               0267
*       IOPFUNCT=IOPCLOSN;          /* SET TO CLOSE DIRECTORY        */
@RC00265 MVI   IOPFUNCT(IOPPTR),X'0C'                              0268
*       CALL HMASMIO(HMASMIOP);     /* DO CLOSE                      */
         ST    IOPPTR,@AL00001                                     0269
         L     @15,@CV01450                                        0269
         LA    @01,@AL00001                                        0269
         BALR  @14,@15                                             0269
*       INITRC=MAX(INITRC,IOPRETRN);/* SAVE RC                       */
         SLR   @10,@10                                             0270
         IC    @10,IOPRETRN(,IOPPTR)                               0270
         CR    INITRC,@10                                          0270
         BNL   *+6
         LR    INITRC,@10                                          0270
*     END;                          /*                               */
*   RETURN CODE(INITRC);            /*                               */
@RF00263 LR    @15,INITRC                                          0272
         L     @14,@SA00002                                        0272
         LM    @00,@01,@SA00002+8                                  0272
         L     @03,@SA00002+16                                     0272
         LM    @05,@12,@SA00002+20                                 0272
         BR    @14                                                 0272
*   END XRFINIT;                    /*                               */
         EJECT
*                                                                  0274
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO BUILD RECORDS FOR MACS USED IN ASSEMS. NOTE THAT   */
*   /* TWO RECORDS ARE BUILT FOR EACH MACRO NAME, ONE FOR THE ASSEM  */
*   /* CDS ENTRY AND ONE FOR THE SRC CDS ENTRY SINCE AT THIS TIME IT */
*   /* IS NOT KNOWN WHICH ONE WILL BE PRESENT IN THE CDS. ONLY THE   */
*   /* ONE PRESENT WILL BE FORMATTED.                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0274
*XRFMACP1:                          /*                               */
*   PROCEDURE;                      /*                               */
XRFMACP1 STM   @14,@12,@SA00003                                    0274
*   DECLARE                         /*                               */
*     MACRC FIXED(8);               /*                               */
*   DECLARE                         /*                               */
*     MACX1 FIXED(31);              /*                               */
*   RFY                                                            0277
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   MACRC=ZERO;                     /*                               */
         SLR   MACRC,MACRC                                         0278
*   XRFRCD1=''B;                    /*                               */
         XC    XRFRCD1(30),XRFRCD1                                 0279
*   XRF1MAC=IOPNAME;                /*                               */
         MVC   XRF1MAC(8),IOPNAME(IOPPTR)                          0280
*   DO MACX1=1 BY 1 WHILE(          /*                               */
*         IOPMACND(MACX1)^=IOPEOLST /* LOOP THRU MAC                 */
*         &MACRC=ZERO);             /*                               */
         LA    MACX1,1                                             0281
         B     @DE00281                                            0281
@DL00281 DS    0H                                                  0282
*     IF IOPMCIND(MACX1)=IOPMASMS   /* IF ASSEMBLY                   */
*       THEN                        /*                               */
         LR    @10,MACX1                                           0282
         MH    @10,@CH00490                                        0282
         SLR   @07,@07                                             0282
         IC    @07,IOPMCIND-9(@10,IOPPTR)                          0282
         CH    @07,@CH00041                                        0282
         BNE   @RF00282                                            0282
*       DO;                         /*                               */
*         XRFETYPE=IOPASM;          /*                               */
         MVI   XRFETYPE,X'01'                                      0284
*         XRFRTYPE=XRFASMMC;        /* MAC TO ASSEM TYPE RCD         */
         MVI   XRFRTYPE,X'0A'                                      0285
*         XRF1ASM=IOPMCASM(MACX1);  /*                               */
         ALR   @10,IOPPTR                                          0286
         MVC   XRF1ASM(8),IOPMCASM-9(@10)                          0286
*         CALL XRFRCDAD;            /* ADD RCD TO FILE               */
         BAL   @14,XRFRCDAD                                        0287
*         RFY                                                      0288
*           RTNCODE RSTD;           /*                               */
*         MACRC=MAX(MACRC,RTNCODE); /* SAVE RC                       */
         CR    MACRC,RTNCODE                                       0289
         BNL   *+6
         LR    MACRC,RTNCODE                                       0289
*         RFY                                                      0290
*           RTNCODE UNRSTD;         /*                               */
*         IF MACRC=ZERO             /* BUILD SAME IN CASE SRC        */
*           THEN                    /*                               */
         CH    MACRC,@CH00307                                      0291
         BNE   @RF00291                                            0291
*           DO;                     /*                               */
*             XRFETYPE=IOPSRC;      /*                               */
         MVI   XRFETYPE,X'08'                                      0293
*             XRFRTYPE=XRFSRCMC;    /* MAC TO ASSEM TYPE RCD         */
         MVI   XRFRTYPE,X'35'                                      0294
*             CALL XRFRCDAD;        /* ADD RCD TO FILE               */
         BAL   @14,XRFRCDAD                                        0295
*             RFY                                                  0296
*               RTNCODE RSTD;       /*                               */
*             MACRC=MAX(MACRC,RTNCODE);/* SAVE RC                    */
         CR    MACRC,RTNCODE                                       0297
         BNL   *+6
         LR    MACRC,RTNCODE                                       0297
*             RFY                                                  0298
*               RTNCODE UNRSTD;     /*                               */
*           END;                    /*                               */
*       END;                        /*                               */
@RF00291 DS    0H                                                  0301
*   END;                            /*                               */
@RF00282 AH    MACX1,@CH00041                                      0301
@DE00281 LR    @10,MACX1                                           0301
         MH    @10,@CH00490                                        0301
         SLR   @07,@07                                             0301
         IC    @07,IOPMACND-9(@10,IOPPTR)                          0301
         CH    @07,@CH00679                                        0301
         BE    @DC00281                                            0301
         CH    MACRC,@CH00307                                      0301
         BE    @DL00281                                            0301
@DC00281 DS    0H                                                  0302
*   RETURN CODE(MACRC);             /*                               */
         LR    @15,MACRC                                           0302
         L     @14,@SA00003                                        0302
         LM    @00,@12,@SA00003+8                                  0302
         BR    @14                                                 0302
*   END XRFMACP1;                   /*                               */
         EJECT
*                                                                  0304
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO BUILD RECORDS FOR MODS USED IN LMODS               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0304
*XRFMODP1:                          /*                               */
*   PROCEDURE;                      /*                               */
XRFMODP1 STM   @14,@12,@SA00004                                    0304
*   DECLARE                         /*                               */
*     MODRC FIXED(8);               /*                               */
*   DECLARE                         /*                               */
*     MODX1 FIXED(31);              /*                               */
*   RFY                                                            0307
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   MODRC=ZERO;                     /*                               */
         SLR   MODRC,MODRC                                         0308
*   XRFRCD2=''B;                    /*                               */
         XC    XRFRCD2(30),XRFRCD2                                 0309
*   XRFETYPE=IOPLMD;                /*                               */
         MVI   XRFETYPE,X'02'                                      0310
*   XRF2MOD=IOPNAME;                /*                               */
         MVC   XRF2MOD(8),IOPNAME(IOPPTR)                          0311
*   XRFRTYPE=XRFLMDMD;              /* LMOD TO MOD TYPE              */
         MVI   XRFRTYPE,X'14'                                      0312
*   DO MODX1=1 BY 1 WHILE(          /*                               */
*         IOPMODND(MODX1)^=IOPEOLST /* LOOP THRU MOD                 */
*         &MODRC=ZERO);             /*                               */
         LA    MODX1,1                                             0313
         B     @DE00313                                            0313
@DL00313 DS    0H                                                  0314
*     IF IOPMDIND(MODX1)=IOPMDLMD   /* IF LMOD                       */
*       THEN                        /*                               */
         LR    @10,MODX1                                           0314
         MH    @10,@CH00490                                        0314
         SLR   @07,@07                                             0314
         IC    @07,IOPMDIND-9(@10,IOPPTR)                          0314
         CH    @07,@CH00041                                        0314
         BNE   @RF00314                                            0314
*       DO;                         /*                               */
*         XRF2LMD=IOPLMODS(MODX1);  /*                               */
         ALR   @10,IOPPTR                                          0316
         MVC   XRF2LMD(8),IOPLMODS-9(@10)                          0316
*         CALL XRFRCDAD;            /* ADD RCD TO FILE               */
         BAL   @14,XRFRCDAD                                        0317
*         RFY                                                      0318
*           RTNCODE RSTD;           /*                               */
*         MODRC=MAX(MODRC,RTNCODE); /* SAVE RC                       */
         CR    MODRC,RTNCODE                                       0319
         BNL   *+6
         LR    MODRC,RTNCODE                                       0319
*         RFY                                                      0320
*           RTNCODE UNRSTD;         /*                               */
*       END;                        /*                               */
*   END;                            /*                               */
@RF00314 AH    MODX1,@CH00041                                      0322
@DE00313 LR    @10,MODX1                                           0322
         MH    @10,@CH00490                                        0322
         SLR   @07,@07                                             0322
         IC    @07,IOPMODND-9(@10,IOPPTR)                          0322
         CH    @07,@CH00679                                        0322
         BE    @DC00313                                            0322
         CH    MODRC,@CH00307                                      0322
         BE    @DL00313                                            0322
@DC00313 DS    0H                                                  0323
*   RETURN CODE(MODRC);             /*                               */
         LR    @15,MODRC                                           0323
         L     @14,@SA00004                                        0323
         LM    @00,@12,@SA00004+8                                  0323
         BR    @14                                                 0323
*   END XRFMODP1;                   /*                               */
         EJECT
*                                                                  0325
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO BUILD RCD FOR EACH SUB-ELENT IN THE PASSED  */
*   /* PTF ENTRY                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0325
*XRFPTFP1:                          /*                               */
*   PROCEDURE;                      /*                               */
XRFPTFP1 STM   @14,@12,@SA00005                                    0325
*   DECLARE                         /*                               */
*     PTFRC FIXED(8);               /*                               */
*   DECLARE                         /*                               */
*     PASS1X FIXED(31),             /* LOOP INDEX                    */
*     PASS1Y FIXED(31);             /* LOOP INDEX                    */
*   RFY                                                            0328
*     HMASMIOP BASED(IOPPTR);       /*                               */
*                                                                  0328
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK STATUS OF PTF AND SET FIELD IN RCD                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0329
*   PTFRC=ZERO;                     /*                               */
*                                                                  0329
         SLR   PTFRC,PTFRC                                         0329
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU PTF PROCESSING EACH SUB-ELEMENT PROCESS EACH        */
*   /* SUB-ELEMENT IF ITS TYPE WAS SPECIFIED TO BE PROCESSED ON THE  */
*   /* PARAMETER. FOR MAC AND SRC INSURE THAT IF MOD WAS SPECIFIED IN*/
*   /* THE PARAMETER THAT THEY ARE PROCESSED FOR THE RESULTING       */
*   /* ASSEMBLIES                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0330
*   DO PASS1X=1 BY 1 WHILE          /* LOOP THRU PTF                 */
*         (IOPPTFND(PASS1X)^=IOPEOLST/* TILL END                     */
*         &PTFRC<STOPFUNC);         /* AND FILE RCD STORED OK        */
         LA    PASS1X,1                                            0330
         B     @DE00330                                            0330
@DL00330 DS    0H                                                  0331
*     XRFRCD=''B;                   /* ZERO XREF RCD                 */
         XC    XRFRCD(30),XRFRCD                                   0331
*     XRFENAME=IOPPMODS(PASS1X);    /* MOVE NAME TO ENTRY            */
         LR    @10,PASS1X                                          0332
         MH    @10,@CH00490                                        0332
         ALR   @10,IOPPTR                                          0332
         MVC   XRFENAME(8),IOPPMODS-9(@10)                         0332
*     IF LISTCDS=ON                 /* IF CDS LIST                   */
*       THEN                        /*                               */
         L     @10,@PC00001                                        0333
         TM    LISTCDS(@10),B'01000000'                            0333
         BNO   @RF00333                                            0333
*       DO;                         /*                               */
*         XRF3DAT=IOPAPPD;          /* USE APPLY DATE                */
         MVC   XRF3DAT(3),IOPAPPD(IOPPTR)                          0335
*         XRF3TIM=IOPAPPT;          /* AND TIME                      */
         MVC   XRF3TIM(3),IOPAPPT(IOPPTR)                          0336
*       END;                        /*                               */
*     ELSE                          /* IF ACDS                       */
*       DO;                         /*                               */
         B     @RC00333                                            0338
@RF00333 DS    0H                                                  0339
*         XRF3DAT=IOPACCD;          /* USE ACCEPT DATE               */
         MVC   XRF3DAT(3),IOPACCD(IOPPTR)                          0339
*         XRF3TIM=IOPACCT;          /* AND TIME                      */
         MVC   XRF3TIM(3),IOPACCT(IOPPTR)                          0340
*       END;                        /*                               */
*     XRF3PF1=IOPPTFF1;             /* PTF STATUS BYTE               */
@RC00333 MVC   XRF3PF1(1),IOPPTFF1(IOPPTR)                         0342
*     XRF3PF3=IOPPTFF3;             /* PTF OTHER FLAGS               */
         MVC   XRF3PF3(1),IOPPTFF3(IOPPTR)                         0343
*     XRF3PTF=IOPNAM17;             /* PTF NUMBER                    */
         MVC   XRF3PTF(7),IOPNAM17(IOPPTR)                         0344
*     XRF3PIND=IOPPIND(PASS1X);     /* SAVE ACTUAL TYPE CODE         */
         LR    @10,PASS1X                                          0345
         MH    @10,@CH00490                                        0345
         SLR   @07,@07                                             0345
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0345
         STC   @07,XRF3PIND                                        0345
*                                                                  0346
*     /***************************************************************/
*     /*                                                             */
*     /* IF MOD TYPE SUBELENT AND MOD XREF REQUESTED                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0346
*     IF(LISTMOD=ON×LISTALL2=ON)    /* IF MOD LIST REQUESTED         */
*         &                         /* AND                           */
*         (IOPPIND(PASS1X)=IOPPMOD  /* THIS IS MOD REP               */
*         ×IOPPIND(PASS1X)=IOPPZAP  /* OR ZAP                        */
*         ×IOPPIND(PASS1X)=IOPPXPD  /* OR EXPAND ZAP                 */
*         ×IOPPIND(PASS1X)=IOPPASM  /* OR ASSEMBLY                   */
*         ×IOPPIND(PASS1X)=IOPPRMOD /* THIS IS REG MOD REP   @ZA26723*/
*         ×IOPPIND(PASS1X)=IOPPRZAP /* OR REG ZAP            @ZA26723*/
*         ×IOPPIND(PASS1X)=IOPPRXPD)/* OR REG EXPAND ZAP     @ZA26723*/
*       THEN                        /*                               */
         L     @10,@PC00001                                        0346
         TM    LISTMOD(@10),B'10001000'                            0346
         BZ    @RF00346                                            0346
         CH    @07,@CH00041                                        0346
         BE    @RT00346                                            0346
         CH    @07,@CH00049                                        0346
         BE    @RT00346                                            0346
         CH    @07,@CH00082                                        0346
         BE    @RT00346                                            0346
         CH    @07,@CH00084                                        0346
         BE    @RT00346                                            0346
         CH    @07,@CH00571                                        0346
         BE    @RT00346                                            0346
         CH    @07,@CH00573                                        0346
         BE    @RT00346                                            0346
         CH    @07,@CH00575                                        0346
         BNE   @RF00346                                            0346
@RT00346 DS    0H                                                  0347
*       DO;                         /*                               */
*         SKIP=OFF;                 /* DO NOT SKIP THIS ELEMENT      */
         NI    SKIP,B'01111111'                                    0348
*         IF IOPPIND(PASS1X)=IOPPMOD/* IF MOD                        */
*             ×IOPPIND(PASS1X)=IOPPRMOD/* OR REGRESSED MOD           */
*           THEN                    /*                               */
         LR    @10,PASS1X                                          0349
         MH    @10,@CH00490                                        0349
         SLR   @07,@07                                             0349
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0349
         CH    @07,@CH00041                                        0349
         BE    @RT00349                                            0349
         CH    @07,@CH00571                                        0349
         BNE   @RF00349                                            0349
@RT00349 DS    0H                                                  0350
*           DO;                     /*                               */
*             DO PASS1Y=1 BY 1 WHILE(/* CHECK TO SEE IF THERE IS     */
*                   IOPPTFND(PASS1Y)^=IOPEOLST/* AN ASSEM ENTRY IN 0351
*                                      PTF                           */
*                   &(IOPPIND(PASS1Y)^=IOPPASM/* FOR SAME ELEMENT    */
*                   ×IOPPMODS(PASS1Y)^=IOPPMODS(PASS1X)));/*         */
         LA    PASS1Y,1                                            0351
         B     @DE00351                                            0351
@DL00351 DS    0H                                                  0352
*             END;                  /*                               */
         AH    PASS1Y,@CH00041                                     0352
@DE00351 LA    @10,9                                               0352
         LR    @01,PASS1Y                                          0352
         MR    @00,@10                                             0352
         SLR   @00,@00                                             0352
         IC    @00,IOPPTFND-9(@01,IOPPTR)                          0352
         CH    @00,@CH00679                                        0352
         BE    @DC00351                                            0352
         SLR   @00,@00                                             0352
         IC    @00,IOPPIND-9(@01,IOPPTR)                           0352
         CH    @00,@CH00084                                        0352
         BNE   @DL00351                                            0352
         LR    @09,@10                                             0352
         MR    @08,PASS1X                                          0352
         ALR   @01,IOPPTR                                          0352
         ALR   @09,IOPPTR                                          0352
         CLC   IOPPMODS-9(8,@01),IOPPMODS-9(@09)                   0352
         BNE   @DL00351                                            0352
@DC00351 DS    0H                                                  0353
*             IF IOPPTFND(PASS1Y)^=IOPEOLST/* IF FOUND THEN          */
*               THEN                /*                               */
         LR    @10,PASS1Y                                          0353
         MH    @10,@CH00490                                        0353
         SLR   @15,@15                                             0353
         IC    @15,IOPPTFND-9(@10,IOPPTR)                          0353
         CH    @15,@CH00679                                        0353
         BE    @RF00353                                            0353
*               SKIP=ON;            /* SET TO SKIP THIS ELEMENT      */
         OI    SKIP,B'10000000'                                    0354
*           END;                    /* END MOD/RMOD                  */
@RF00353 DS    0H                                                  0356
*         IF SKIP=OFF               /* IF OK TO BUILD RECORD THEN    */
*           THEN                    /*                               */
@RF00349 TM    SKIP,B'10000000'                                    0356
         BNZ   @RF00356                                            0356
*           DO;                     /*                               */
*             XRFETYPE=IOPMOD;      /* TYPE ELEMENT NAME             */
         MVI   XRFETYPE,X'05'                                      0358
*             XRFRTYPE=XRFPBYMD;    /* PTFBY TYPE RECORD             */
         MVI   XRFRTYPE,X'2F'                                      0359
*             XRF3PTYP=IOPPTYPE;    /* SYSMOD TYPE                   */
         MVC   XRF3PTYP(1),IOPPTYPE(IOPPTR)                        0360
*             CALL XRFRCDAD;        /* ADD RCD TO FILE               */
         BAL   @14,XRFRCDAD                                        0361
*             RFY                                                  0362
*               RTNCODE RSTD;       /*                               */
*             PTFRC=MAX(PTFRC,RTNCODE);/* SAVE RC                    */
         CR    PTFRC,RTNCODE                                       0363
         BNL   *+6
         LR    PTFRC,RTNCODE                                       0363
*             RFY                                                  0364
*               RTNCODE UNRSTD;     /*                               */
*           END;                    /*                               */
*       END;                        /*                               */
@RF00356 DS    0H                                                  0367
*                                                                  0367
*     /***************************************************************/
*     /*                                                             */
*     /* IF MAC TYPE SUBELENT AND MAC XREF REQUESTED                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0367
*     IF(LISTMAC=ON×LISTALL2=ON)    /* IF MAC LIST REQUEST           */
*         &                         /* AND                           */
*         (IOPPIND(PASS1X)=IOPPMACR /* THIS IS MAC REP               */
*         ×IOPPIND(PASS1X)=IOPPMACU /* OR MAC UPDATE                 */
*         ×IOPPIND(PASS1X)=IOPPRMCR /* THIS IS REG MAC REP   @ZA26723*/
*         ×IOPPIND(PASS1X)=IOPPRMCU)/* OR REG MAC UPDATE     @ZA26723*/
*       THEN                        /*                               */
@RF00346 L     @10,@PC00001                                        0367
         TM    LISTMAC(@10),B'10010000'                            0367
         BZ    @RF00367                                            0367
         LR    @10,PASS1X                                          0367
         MH    @10,@CH00490                                        0367
         SLR   @07,@07                                             0367
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0367
         CH    @07,@CH00100                                        0367
         BE    @RT00367                                            0367
         CH    @07,@CH00066                                        0367
         BE    @RT00367                                            0367
         CH    @07,@CH00577                                        0367
         BE    @RT00367                                            0367
         CH    @07,@CH00579                                        0367
         BNE   @RF00367                                            0367
@RT00367 DS    0H                                                  0368
*       DO;                         /*                               */
*         XRFETYPE=IOPMAC;          /* TYPE ELEMENT NAME             */
         MVI   XRFETYPE,X'03'                                      0369
*         XRFRTYPE=XRFPBYMC;        /* PTFBY TYPE RECORD             */
         MVI   XRFRTYPE,X'25'                                      0370
*         XRF3PTYP=IOPPTYPE;        /* SYSMOD TYPE                   */
         MVC   XRF3PTYP(1),IOPPTYPE(IOPPTR)                        0371
*         CALL XRFRCDAD;            /* ADD RCD TO FILE               */
         BAL   @14,XRFRCDAD                                        0372
*         RFY                                                      0373
*           RTNCODE RSTD;           /*                               */
*         PTFRC=MAX(PTFRC,RTNCODE); /* SAVE RC                       */
         CR    PTFRC,RTNCODE                                       0374
         BNL   *+6
         LR    PTFRC,RTNCODE                                       0374
*         RFY                                                      0375
*           RTNCODE UNRSTD;         /*                               */
*       END;                        /*                               */
*                                                                  0377
*     /***************************************************************/
*     /*                                                             */
*     /* IF SRC TYPE SUBELENT AND SRC XREF REQUESTED                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0377
*     IF(LISTSRC=ON×LISTALL2=ON)    /* IF SRC LIST REQUEST           */
*         &                         /* AND                           */
*         (IOPPIND(PASS1X)=IOPPSRCR /* THIS IS SRC REP               */
*         ×IOPPIND(PASS1X)=IOPPSRCU /* OR SRC UPDATE                 */
*         ×IOPPIND(PASS1X)=IOPPRSCR /* THIS IS REG SRC REP   @ZA26723*/
*         ×IOPPIND(PASS1X)=IOPPRSCU)/* OR REG SRC UPDATE     @ZA26723*/
*       THEN                        /*                               */
@RF00367 L     @10,@PC00001                                        0377
         TM    LISTSRC(@10),B'10000100'                            0377
         BZ    @RF00377                                            0377
         LR    @10,PASS1X                                          0377
         MH    @10,@CH00490                                        0377
         SLR   @07,@07                                             0377
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0377
         CH    @07,@CH00052                                        0377
         BE    @RT00377                                            0377
         CH    @07,@CH00295                                        0377
         BE    @RT00377                                            0377
         CH    @07,@CH00581                                        0377
         BE    @RT00377                                            0377
         CH    @07,@CH00583                                        0377
         BNE   @RF00377                                            0377
@RT00377 DS    0H                                                  0378
*       DO;                         /*                               */
*         XRFETYPE=IOPSRC;          /* TYPE ELEMENT NAME             */
         MVI   XRFETYPE,X'08'                                      0379
*         XRFRTYPE=XRFPBYSC;        /* PTFBY TYPE RECORD             */
         MVI   XRFRTYPE,X'39'                                      0380
*         XRF3PTYP=IOPPTYPE;        /* SYSMOD TYPE                   */
         MVC   XRF3PTYP(1),IOPPTYPE(IOPPTR)                        0381
*         CALL XRFRCDAD;            /* ADD RCD TO FILE               */
         BAL   @14,XRFRCDAD                                        0382
*         RFY                                                      0383
*           RTNCODE RSTD;           /*                               */
*         PTFRC=MAX(PTFRC,RTNCODE); /* SAVE RC                       */
         CR    PTFRC,RTNCODE                                       0384
         BNL   *+6
         LR    PTFRC,RTNCODE                                       0384
*         RFY                                                      0385
*           RTNCODE UNRSTD;         /*                               */
*       END;                        /*                               */
*                                                                  0387
*     /***************************************************************/
*     /*                                                             */
*     /* IF SYSMOD TYPE SUBELENT                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0387
*     IF(LISTSMD=ON×LISTALL2=ON)    /* IF SYSMOD LIST                */
*         &                         /* AND                           */
*         IOPPIND(PASS1X)>IOPPTFS   /* SYSMOD TYPE SUBELEMENT        */
*       THEN                        /*                               */
@RF00377 L     @10,@PC00001                                        0387
         TM    LISTSMD(@10),B'10000000'                            0387
         BO    @GL00028                                            0387
         TM    LISTALL2(@10),B'10000000'                           0387
         BNO   @RF00387                                            0387
@GL00028 LR    @10,PASS1X                                          0387
         MH    @10,@CH00490                                        0387
         SLR   @07,@07                                             0387
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0387
         CH    @07,@CH00916                                        0387
         BNH   @RF00387                                            0387
*       DO;                         /*                               */
*         XRFRCD4=''B;              /* ZERO PTF BY RECORD            */
         XC    XRFRCD4(29),XRFRCD4                                 0389
*         XRFETYPE=IOPSMD;          /* SYSMOD TYPE XRF RECORD        */
         MVI   XRFETYPE,X'0B'                                      0390
*         XRF4PTF=IOPPMODS(PASS1X,1:7);/* MOVE RELATED SYSMOD NUM    */
         MVI   XRF4PTF+7,C' '                                      0391
         ALR   @10,IOPPTR                                          0391
         MVC   XRF4PTF(7),IOPPMODS-9(@10)                          0391
*         XRFX4PTF=IOPNAM17;        /* MOVE MAIN SYSMOD NUMBER       */
         MVC   XRFX4PTF(7),IOPNAM17(IOPPTR)                        0392
*         IF IOPPIND(PASS1X)=IOPPPRE/* CHECK TYPE SYSMOD NUMBER AND  */
*           THEN                    /* SET XRF RCD TYPE              */
         CH    @07,@CH01107                                        0393
         BNE   @RF00393                                            0393
*           XRFRTYPE=XRFPTPRE;      /*                               */
         MVI   XRFRTYPE,X'73'                                      0394
*         ELSE                      /*                               */
*           IF IOPPIND(PASS1X)=IOPPSUPV/*                            */
*             THEN                  /* SET XRF RCD TYPE              */
         B     @RC00393                                            0395
@RF00393 LR    @10,PASS1X                                          0395
         MH    @10,@CH00490                                        0395
         SLR   @07,@07                                             0395
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0395
         CH    @07,@CH01111                                        0395
         BNE   @RF00395                                            0395
*             XRFRTYPE=XRFPTSUP;    /*                               */
         MVI   XRFRTYPE,X'7D'                                      0396
*           ELSE                    /*                               */
*             IF IOPPIND(PASS1X)=IOPPNPR/*                           */
*               THEN                /* SET XRF RCD TYPE              */
         B     @RC00395                                            0397
@RF00395 LR    @10,PASS1X                                          0397
         MH    @10,@CH00490                                        0397
         SLR   @07,@07                                             0397
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0397
         CH    @07,@CH01109                                        0397
         BNE   @RF00397                                            0397
*               XRFRTYPE=XRFPTNPR;  /*                               */
         MVI   XRFRTYPE,X'6E'                                      0398
*             ELSE                  /*                               */
*               IF IOPPIND(PASS1X)=IOPPREQ/*                         */
*                 THEN              /* SET XRF RCD TYPE              */
         B     @RC00397                                            0399
@RF00397 LR    @10,PASS1X                                          0399
         MH    @10,@CH00490                                        0399
         SLR   @07,@07                                             0399
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0399
         CH    @07,@CH01113                                        0399
         BNE   @RF00399                                            0399
*                 XRFRTYPE=XRFPTREQ;/*                               */
         MVI   XRFRTYPE,X'78'                                      0400
*               ELSE                /*                               */
*                 IF IOPPIND(PASS1X)=IOPPIRQ/*                       */
*                   THEN            /* SET XRF RCD TYPE              */
         B     @RC00399                                            0401
@RF00399 LR    @10,PASS1X                                          0401
         MH    @10,@CH00490                                        0401
         SLR   @07,@07                                             0401
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0401
         CH    @07,@CH01115                                        0401
         BNE   @RF00401                                            0401
*                   XRFRTYPE=XRFPTIRQ;/*                             */
         MVI   XRFRTYPE,X'69'                                      0402
*                 ELSE              /*                               */
*                   IF IOPPIND(PASS1X)=IOPPDEL/* IF DELBY            */
*                     THEN          /*                               */
         B     @RC00401                                            0403
@RF00401 LR    @10,PASS1X                                          0403
         MH    @10,@CH00490                                        0403
         SLR   @07,@07                                             0403
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0403
         CH    @07,@CH01119                                        0403
         BNE   @RF00403                                            0403
*                     XRFRTYPE=XRFPTDEL;/*                           */
         MVI   XRFRTYPE,X'82'                                      0404
*                   ELSE            /*                               */
*                     IF IOPPIND(PASS1X)=IOPPVER/* IF VERSION        */
*                       THEN        /*                               */
         B     @RC00403                                            0405
@RF00403 LR    @10,PASS1X                                          0405
         MH    @10,@CH00490                                        0405
         SLR   @07,@07                                             0405
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0405
         CH    @07,@CH01121                                        0405
         BNE   @RF00405                                            0405
*                       XRFRTYPE=XRFPTVER;/*                         */
         MVI   XRFRTYPE,X'87'                                      0406
*                     ELSE          /*                               */
*                       XRFRTYPE=ZERO;/*                             */
         B     @RC00405                                            0407
@RF00405 MVI   XRFRTYPE,X'00'                                      0407
*         IF XRFRTYPE^=ZERO         /* IF RCD CREATED                */
*           THEN                    /*                               */
@RC00405 DS    0H                                                  0408
@RC00403 DS    0H                                                  0408
@RC00401 DS    0H                                                  0408
@RC00399 DS    0H                                                  0408
@RC00397 DS    0H                                                  0408
@RC00395 DS    0H                                                  0408
@RC00393 CLI   XRFRTYPE,0                                          0408
         BE    @RF00408                                            0408
*           DO;                     /*                               */
*             CALL XRFRCDAD;        /* ADD RCD TO FILE               */
         BAL   @14,XRFRCDAD                                        0410
*             RFY                                                  0411
*               RTNCODE RSTD;       /*                               */
*             PTFRC=MAX(PTFRC,RTNCODE);/* SAVE RC                    */
         CR    PTFRC,RTNCODE                                       0412
         BNL   *+6
         LR    PTFRC,RTNCODE                                       0412
*             RFY                                                  0413
*               RTNCODE UNRSTD;     /*                               */
*           END;                    /*                               */
*       END;                        /*                               */
@RF00408 DS    0H                                                  0416
*   END;                            /* END LOOP THRU PTFS            */
@RF00387 AH    PASS1X,@CH00041                                     0416
@DE00330 LR    @10,PASS1X                                          0416
         MH    @10,@CH00490                                        0416
         SLR   @07,@07                                             0416
         IC    @07,IOPPTFND-9(@10,IOPPTR)                          0416
         CH    @07,@CH00679                                        0416
         BE    @DC00330                                            0416
         CH    PTFRC,@CH00235                                      0416
         BL    @DL00330                                            0416
@DC00330 DS    0H                                                  0417
*   RETURN CODE(PTFRC);             /*                               */
         LR    @15,PTFRC                                           0417
         L     @14,@SA00005                                        0417
         LM    @00,@12,@SA00005+8                                  0417
         BR    @14                                                 0417
*   END XRFPTFP1;                   /*                               */
         EJECT
         EJECT
*                                                                  0419
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE TO ADD XRF RCDS TO GTA FILE                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0419
*XRFRCDAD:                          /*                               */
*   PROCEDURE;                      /*                               */
XRFRCDAD STM   @14,@12,@SA00006                                    0419
*   DECLARE                         /*                               */
*     ADDRC FIXED(8);               /*                               */
*   DECLARE                         /*                               */
*     1 * BIT(8),                   /*                               */
*       3 ADDSW BIT(1),             /* XRF RCD TO BE ADDED           */
*       3 * BIT(7);                 /*                               */
*   RFY                                                            0422
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0423
*     HMASMGTP BASED(SETPTR);       /*                               */
*                                                                  0423
*   /*****************************************************************/
*   /*                                                               */
*   /* IF IN SELECT MODE ATTEMPT TO FIND MEMBER IN SELECT LIST. IF   */
*   /* NOT FOUND THEN XRF RCD SHOULD NOT BE WRITTEN.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0424
*   ADDRC=ZERO;                     /* INIT RETURN CODE              */
         SLR   ADDRC,ADDRC                                         0424
*   ADDSW=ON;                       /* SET SW TO ADD XRF RCD TO FILE */
         OI    ADDSW,B'10000000'                                   0425
*   IF LISTSEL=ON                   /* IF IN SELECT MODE             */
*     THEN                          /*                               */
         L     @10,@PC00001                                        0426
         TM    LISTSEL(@10),B'10000000'                            0426
         BNO   @RF00426                                            0426
*     DO;                           /*                               */
*       HMASMSET=''B;               /*                               */
         XC    HMASMSET(12),HMASMSET                               0428
*       IF XRFETYPE=IOPASM          /* CHECK XRF RCD TYPE AND SET    */
*         THEN                      /*                               */
         CLI   XRFETYPE,1                                          0429
         BNE   @RF00429                                            0429
*         SEASM=ON;                 /* SELECT TYPE                   */
         OI    SEASM,B'00000100'                                   0430
*       ELSE                        /*                               */
*         IF XRFETYPE=IOPLMD        /*                               */
*           THEN                    /*                               */
         B     @RC00429                                            0431
@RF00429 CLI   XRFETYPE,2                                          0431
         BNE   @RF00431                                            0431
*           SELMD=ON;               /*                               */
         OI    SELMD,B'00001000'                                   0432
*         ELSE                      /*                               */
*           IF XRFETYPE=IOPMAC      /*                               */
*             THEN                  /*                               */
         B     @RC00431                                            0433
@RF00431 CLI   XRFETYPE,3                                          0433
         BNE   @RF00433                                            0433
*             SEMAC=ON;             /*                               */
         OI    SEMAC,B'00010000'                                   0434
*           ELSE                    /*                               */
*             IF XRFETYPE=IOPMOD    /*                               */
*               THEN                /*                               */
         B     @RC00433                                            0435
@RF00433 CLI   XRFETYPE,5                                          0435
         BNE   @RF00435                                            0435
*               SEMOD=ON;           /*                               */
         OI    SEMOD,B'00100000'                                   0436
*             ELSE                  /*                               */
*               IF XRFETYPE=IOPSMD  /*                               */
*                 THEN              /*                               */
         B     @RC00435                                            0437
@RF00435 CLI   XRFETYPE,11                                         0437
         BNE   @RF00437                                            0437
*                 SESMD=ON;         /*                               */
         OI    SESMD,B'00000001'                                   0438
*       SENAME=XRFENAME;            /* MOVE MEMBER NAME              */
@RF00437 DS    0H                                                  0439
@RC00435 DS    0H                                                  0439
@RC00433 DS    0H                                                  0439
@RC00431 DS    0H                                                  0439
@RC00429 MVC   SENAME(8),XRFENAME                                  0439
*       GTPRCDLN=LENGTH(HMASMSET);  /*                               */
         MVC   GTPRCDLN(2,SETPTR),@CH00235                         0440
*       GTPKEYLN=LENGTH(SELSTENT);  /*                               */
         MVC   GTPKEYLN(2,SETPTR),@CH00383                         0441
*       GTPFUNCT=GTPLOC;            /*                               */
         MVI   GTPFUNCT(SETPTR),X'03'                              0442
*       CALL HMASMGTA(HMASMGTP);    /* WAS ENTRY SELECTED?           */
         ST    SETPTR,@AL00001                                     0443
         L     @15,@CV01449                                        0443
         LA    @01,@AL00001                                        0443
         BALR  @14,@15                                             0443
*       IF GTPRETRN^=GTPGOOD        /* NO                            */
*         THEN                      /* THEN SET DONT ADD SW          */
         CLI   GTPRETRN(SETPTR),0                                  0444
         BE    @RF00444                                            0444
*         ADDSW=OFF;                /*                               */
         NI    ADDSW,B'01111111'                                   0445
*     END;                          /* END IN SELECT MODE            */
@RF00444 DS    0H                                                  0447
*   IF ADDSW=ON                     /*                               */
*     THEN                          /*                               */
@RF00426 TM    ADDSW,B'10000000'                                   0447
         BNO   @RF00447                                            0447
*     DO;                           /*                               */
*       RFY                                                        0449
*         HMASMGTP BASED(GTPPTR);   /* XRF FILE                      */
*       CALL HMASMGTA(HMASMGTP);    /*                               */
         ST    GTPPTR,@AL00001                                     0450
         L     @15,@CV01449                                        0450
         LA    @01,@AL00001                                        0450
         BALR  @14,@15                                             0450
*       ADDRC=MAX(ADDRC,GTPRETRN);  /* SAVE RC                       */
         SLR   @10,@10                                             0451
         IC    @10,GTPRETRN(,GTPPTR)                               0451
         CR    ADDRC,@10                                           0451
         BNL   *+6
         LR    ADDRC,@10                                           0451
*     END;                          /*                               */
*   RETURN CODE(ADDRC);             /*                               */
@RF00447 LR    @15,ADDRC                                           0453
         L     @14,@SA00006                                        0453
         LM    @00,@12,@SA00006+8                                  0453
         BR    @14                                                 0453
*   END XRFRCDAD;                   /*                               */
         EJECT
*                                                                  0455
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO DO ALL TERMINATION PROCESSING               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0455
*XRFCLEAN:                          /*                               */
*   PROCEDURE;                      /*                               */
XRFCLEAN STM   @14,@12,@SA00007                                    0455
*   DECLARE                         /*                               */
*     CLEANRC FIXED(8);             /*                               */
*   RFY                                                            0457
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   CLEANRC=ZERO;                   /*                               */
*                                                                  0458
         SLR   CLEANRC,CLEANRC                                     0458
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSE DIRECTORY FOR GET NEXT PROCESSING                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0459
*   IF IOPPTR^=ADDR(XRFIOP)         /* IF IOP OBTAINED               */
*     THEN                          /*                               */
         LA    @10,XRFIOP                                          0459
         CR    IOPPTR,@10                                          0459
         BE    @RF00459                                            0459
*     DO;                           /*                               */
*       IF LISTCDS=ON               /* IF LIST OF CDS                */
*         THEN                      /*                               */
         L     @10,@PC00001                                        0461
         TM    LISTCDS(@10),B'01000000'                            0461
         BNO   @RF00461                                            0461
*         IOPDSID=IOPCDS;           /* SET DATA SET ID               */
         MVI   IOPDSID(IOPPTR),X'02'                               0462
*       ELSE                        /*                               */
*         IOPDSID=IOPACDS;          /* SET DATA SET ID               */
         B     @RC00461                                            0463
@RF00461 MVI   IOPDSID(IOPPTR),X'0C'                               0463
*       IOPFUNCT=IOPCLOSN;          /* SET TO CLOSE DIRECTORY        */
@RC00461 MVI   IOPFUNCT(IOPPTR),X'0C'                              0464
*       CALL HMASMIO(HMASMIOP);     /* DO CLOSE                      */
         ST    IOPPTR,@AL00001                                     0465
         L     @15,@CV01450                                        0465
         LA    @01,@AL00001                                        0465
         BALR  @14,@15                                             0465
*       CLEANRC=MAX(CLEANRC,IOPRETRN);/*                             */
*                                                                  0466
         SLR   @10,@10                                             0466
         IC    @10,IOPRETRN(,IOPPTR)                               0466
         CR    CLEANRC,@10                                         0466
         BNL   *+6
         LR    CLEANRC,@10                                         0466
*       /*************************************************************/
*       /*                                                           */
*       /* FREE MAIN IOP                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0467
*       SPLFUNCT=SPLFMIOP;          /* FREE IOP                      */
         MVI   SPLFUNCT,X'04'                                      0467
*       SPLPMAD=IOPPTR;             /* ADDR OF IOP                   */
         ST    IOPPTR,SPLPMAD                                      0468
*       CALL HMASMSUB(HMASMSPL);    /* FREE IOP                      */
         L     @15,@CV01451                                        0469
         LA    @01,@AL00469                                        0469
         BALR  @14,@15                                             0469
*       RFY                                                        0470
*         RTNCODE RSTD;             /*                               */
*       CLEANRC=MAX(CLEANRC,RTNCODE);/*                              */
         CR    CLEANRC,RTNCODE                                     0471
         BNL   *+6
         LR    CLEANRC,RTNCODE                                     0471
*       RFY                                                        0472
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0473
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE SECOND IOP                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0474
*   IF IOPPTR2^=ZERO                /* IF IOP OBTAINED               */
*     THEN                          /*                               */
@RF00459 LTR   IOPPTR2,IOPPTR2                                     0474
         BZ    @RF00474                                            0474
*     DO;                           /*                               */
*       SPLFUNCT=SPLFMIOP;          /* FREE IOP                      */
         MVI   SPLFUNCT,X'04'                                      0476
*       SPLPMAD=IOPPTR2;            /* ADDR OF IOP                   */
         ST    IOPPTR2,SPLPMAD                                     0477
*       CALL HMASMSUB(HMASMSPL);    /* FREE IOP                      */
         L     @15,@CV01451                                        0478
         LA    @01,@AL00478                                        0478
         BALR  @14,@15                                             0478
*       RFY                                                        0479
*         RTNCODE RSTD;             /*                               */
*       CLEANRC=MAX(CLEANRC,RTNCODE);/*                              */
         CR    CLEANRC,RTNCODE                                     0480
         BNL   *+6
         LR    CLEANRC,RTNCODE                                     0480
*       RFY                                                        0481
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0482
*   /*****************************************************************/
*   /*                                                               */
*   /* RESET SET GTPBUFAD IF IN SELECT                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0483
*   RFY                                                            0483
*     HMASMGTP BASED(SETPTR);       /* XRF GTP                       */
@RF00474 DS    0H                                                  0484
*   IF LISTSEL=ON                   /* IF IN SELECT                  */
*     THEN                          /*                               */
         L     @10,@PC00001                                        0484
         TM    LISTSEL(@10),B'10000000'                            0484
         BNO   @RF00484                                            0484
*     GTPBUFAD=SAVSETAD;            /*                               */
         MVC   GTPBUFAD(4,SETPTR),SAVSETAD                         0485
*   RETURN CODE(CLEANRC);           /*                               */
@RF00484 LR    @15,CLEANRC                                         0486
         L     @14,@SA00007                                        0486
         LM    @00,@12,@SA00007+8                                  0486
         BR    @14                                                 0486
*   END XRFCLEAN;                   /*                               */
*   END HMASMXRF                    /*                               */
*                                                                  0488
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSET)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSPL)                                       */
*                                                                  0488
*       ;                                                          0488
@DATA    DS    0H
@CH00307 DC    H'0'
@CH00041 DC    H'1'
@CH00049 DC    H'2'
@CH00082 DC    H'3'
@CH00100 DC    H'4'
@CH00066 DC    H'5'
@CH00052 DC    H'6'
@CH00295 DC    H'7'
@CH00084 DC    H'8'
@CH00490 DC    H'9'
@CH00383 DC    H'10'
@CH00235 DC    H'12'
@CH00571 DC    H'81'
@CH00573 DC    H'82'
@CH00575 DC    H'83'
@CH00577 DC    H'84'
@CH00579 DC    H'85'
@CH00581 DC    H'86'
@CH00583 DC    H'87'
@CH00916 DC    H'160'
@CH01107 DC    H'162'
@CH01109 DC    H'163'
@CH01111 DC    H'164'
@CH01113 DC    H'165'
@CH01115 DC    H'166'
@CH01119 DC    H'168'
@CH01121 DC    H'169'
@CH00679 DC    H'255'
         DS    0F
@AL00248 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00256 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00469 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00478 DC    A(HMASMSPL)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    3F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00005 DS    15F
@SA00006 DS    0F
@SA00007 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    1A
         DS    0F
@CV01449 DC    V(HMASMGTA)
@CV01450 DC    V(HMASMIO)
@CV01451 DC    V(HMASMSUB)
         DS    0D
SAVSETAD DS    A
HMASMSET DS    CL12
         ORG   HMASMSET
SELSTENT DS    CL10
         ORG   SELSTENT
SELSTFLG DS    BL2
         ORG   SELSTFLG
@NM00176 DS    BL1
SEMCS    EQU   SELSTFLG+0
SESMD    EQU   SELSTFLG+0
SESRC    DS    BL1
SEDLB    EQU   SELSTFLG+1
SEMOD    EQU   SELSTFLG+1
SEMAC    EQU   SELSTFLG+1
SELMD    EQU   SELSTFLG+1
SEASM    EQU   SELSTFLG+1
SEFMD    EQU   SELSTFLG+1
SESYS    EQU   SELSTFLG+1
         ORG   SELSTENT+2
SENAME   DS    CL8
         ORG   SENAME
SESMDNO  DS    CL7
         ORG   SESMDNO
SEPTFNO  DS    CL7
         ORG   SENAME+7
@NM00177 DS    CL1
         ORG   HMASMSET+10
SEFLAGS  DS    BL1
         ORG   SEFLAGS
SEGROUP  DS    BL1
SESELECT EQU   SEFLAGS+0
SEEXCLUD EQU   SEFLAGS+0
SENOJCL  EQU   SEFLAGS+0
SEFMID   EQU   SEFLAGS+0
@NM00178 EQU   SEFLAGS+0
SEFOUND  EQU   SEFLAGS+0
         ORG   HMASMSET+11
SEFLAG2  DS    BL1
         ORG   SEFLAG2
SEFLAG2A DS    BL1
SEFLAG2B EQU   SEFLAG2+0
SEFLAG2C EQU   SEFLAG2+0
SEFLAG2D EQU   SEFLAG2+0
SEFLAG2E EQU   SEFLAG2+0
SEFLAG2F EQU   SEFLAG2+0
SEFLAG2G EQU   SEFLAG2+0
SEFLAG2H EQU   SEFLAG2+0
         ORG   HMASMSET+12
HMASMSPL DS    CL5
         ORG   HMASMSPL
SPLPMAD  DS    AL4
SPLFUNCT DS    FL1
         ORG   HMASMSPL+5
XRFRCD   DS    CL30
         ORG   XRFRCD
XRFKEY1  DS    CL29
         ORG   XRFKEY1
XRFETYPE DS    FL1
XRFENAME DS    CL8
XRFRTYPE DS    FL1
XRFUKEY1 DS    FL1
@NM00182 DS    CL18
         ORG   XRFRCD+29
XRFNKEY1 DS    CL1
         ORG   XRFNKEY1
XRFFLAG1 DS    BL1
         ORG   XRFFLAG1
XRFFLGA  DS    BL1
XRFFLGB  EQU   XRFFLAG1+0
XRFFLGC  EQU   XRFFLAG1+0
XRFFLGD  EQU   XRFFLAG1+0
XRFFLGE  EQU   XRFFLAG1+0
XRFFLGF  EQU   XRFFLAG1+0
XRFFLGG  EQU   XRFFLAG1+0
XRFFLGH  EQU   XRFFLAG1+0
         ORG   XRFRCD+30
XRFIOP   DS    CL68
XRFSW    DS    BL1
         ORG   XRFSW
SKIP     DS    BL1
@NM00203 EQU   XRFSW+0
         ORG   XRFSW+1
PATCHXRF DS    CL80
         ORG   PATCHXRF
@NM00204 DC    80X'FF'
         ORG   PATCHXRF+80
@NM00205 DS    BL1
         ORG   @NM00205
ADDSW    DS    BL1
@NM00206 EQU   @NM00205+0
         ORG   @NM00205+1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CLEANRC  EQU   @03
ADDRC    EQU   @02
PASS1Y   EQU   @07
PASS1X   EQU   @03
PTFRC    EQU   @04
MODX1    EQU   @04
MODRC    EQU   @03
MACX1    EQU   @04
MACRC    EQU   @03
INITRC   EQU   @03
XRFRTNCD EQU   @03
SETPTR   EQU   @05
GTPPTR   EQU   @06
IOPPTR2  EQU   @04
IOPPTR   EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00014 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00030 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00032 EQU   CCABLDLL
CCALKDRC EQU   @NM00032+20
@NM00034 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00034+20
@NM00036 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00036+20
@NM00038 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00038+20
@NM00040 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00040+20
@NM00042 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00042+20
@NM00044 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00044+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00048 EQU   HMASMIOP+12
@NM00049 EQU   @NM00048
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00159 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMGTP EQU   0
GTPFUNCT EQU   HMASMGTP
GTPRETRN EQU   HMASMGTP+1
GTPRCDLN EQU   HMASMGTP+4
GTPKEYLN EQU   HMASMGTP+6
GTPBUFAD EQU   HMASMGTP+12
GTPRESTR EQU   HMASMGTP+16
GTPFLGS1 EQU   HMASMGTP+26
SPLPPACK EQU   0
SPLPUNPK EQU   0
SPLPDSN  EQU   0
SPLODSN  EQU   SPLPDSN
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
LISTPARM EQU   0
LISTPRM1 EQU   LISTPARM
LISTCDS  EQU   LISTPRM1
LISTPRM2 EQU   LISTPARM+2
LISTALL2 EQU   LISTPRM2
LISTASM  EQU   LISTPRM2
LISTLMD  EQU   LISTPRM2
LISTMAC  EQU   LISTPRM2
LISTMOD  EQU   LISTPRM2
LISTSRC  EQU   LISTPRM2
LISTSMD  EQU   LISTPRM2+1
LISTPRM3 EQU   LISTPARM+4
LISTPRM4 EQU   LISTPARM+6
LISTSEL  EQU   LISTPRM4
LISTDATE EQU   LISTPARM+7
LISTBDAT EQU   LISTDATE
LISTEDAT EQU   LISTDATE+6
XRFGTP   EQU   0
SETGTP   EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00055 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00066 EQU   IOPUDATA
@NM00067 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00076 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACND EQU   IOPMACID
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00087 EQU   IOPSRCDR+1
@NM00089 EQU   @NM00087+7
@NM00093 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00097 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00103 EQU   IOPMODDR+1
@NM00105 EQU   @NM00103+7
@NM00109 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00113 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODND EQU   IOPMODID
IOPMODST EQU   IOPLMODS+7
IOPMDIND EQU   IOPMNTRY+8
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00124 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00131 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPTYPE EQU   IOPPTFDR+1
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPDUMMP EQU   IOPFLGS5
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00140 EQU   IOPPTFFX
@NM00141 EQU   @NM00140
IOPPDTES EQU   IOPPTFFX+41
@NM00144 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPAPPD  EQU   IOPDATES
IOPAPPT  EQU   IOPDATES+3
IOPACCD  EQU   IOPDATES+12
IOPACCT  EQU   IOPDATES+15
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPPTFND EQU   IOPPMODS
IOPPIND  EQU   IOPPNTRY+8
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00169 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00169
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00173 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00173
IOPBFTB1 EQU   IOPBFTB0
XRFRCD1  EQU   XRFRCD
XRF1ASM  EQU   XRFRCD1+1
XRF1MAC  EQU   XRFRCD1+11
XRFRCD2  EQU   XRFRCD
XRF2LMD  EQU   XRFRCD2+1
XRF2MOD  EQU   XRFRCD2+11
XRFRCD3  EQU   XRFRCD
XRF3MAC  EQU   XRFRCD3+1
XRF3MOD  EQU   XRF3MAC
XRF3DAT  EQU   XRFRCD3+11
XRF3TIM  EQU   XRFRCD3+14
XRF3PTF  EQU   XRFRCD3+17
XRF3PF1  EQU   XRFRCD3+24
XRF3PTYP EQU   XRFRCD3+25
XRF3PIND EQU   XRFRCD3+26
XRF3PF3  EQU   XRFRCD3+27
XRFRCD4  EQU   XRFRCD
XRF4PTF  EQU   XRFRCD4+1
XRFX4PTF EQU   XRFRCD4+11
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00202 EQU   XRFRCD4+28
@NM00201 EQU   XRFRCD4+18
@NM00200 EQU   XRFRCD4+10
@NM00199 EQU   XRFRCD4+9
@NM00198 EQU   XRFRCD4
@NM00197 EQU   XRFRCD3+29
@NM00196 EQU   XRFRCD3+28
XRF3STAT EQU   XRF3PF1
@NM00195 EQU   XRFRCD3+10
@NM00194 EQU   XRFRCD3+9
XRF3SRC  EQU   XRF3MOD
@NM00193 EQU   XRFRCD3
@NM00192 EQU   XRFRCD2+29
@NM00191 EQU   XRFRCD2+19
@NM00190 EQU   XRFRCD2+10
@NM00189 EQU   XRFRCD2+9
@NM00188 EQU   XRFRCD2
@NM00187 EQU   XRFRCD1+29
@NM00186 EQU   XRFRCD1+19
@NM00185 EQU   XRFRCD1+10
@NM00184 EQU   XRFRCD1+9
@NM00183 EQU   XRFRCD1
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00175 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00174 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00172 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00171 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00170 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00168 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00167 EQU   IOPPTSFX+35
@NM00166 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00165 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00164 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00163 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00162 EQU   IOPQFMDR
@NM00158 EQU   IOPQSMDR
@NM00157 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00156 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00155 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00154 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00153 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00152 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00151 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00150 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00149 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00148 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00147 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00146 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPFMID EQU   IOPPTFFX+73
@NM00145 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPRECT  EQU   @NM00144+3
IOPRECD  EQU   @NM00144
@NM00143 EQU   IOPPTFFX+8
@NM00142 EQU   @NM00140+7
IOPPRELN EQU   @NM00141
@NM00139 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00138 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00137 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
@NM00136 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
@NM00135 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00134 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00133 EQU   @NM00131+7
@NM00132 EQU   @NM00131
@NM00130 EQU   IOPSYSDR+5
@NM00129 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00128 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00127 EQU   IOPDLBFX+8
@NM00126 EQU   @NM00124+7
@NM00125 EQU   @NM00124
@NM00123 EQU   IOPDLBDR+1
@NM00122 EQU   IOPDLBDR
@NM00121 EQU   IOPMODST
IOPDLIB  EQU   IOPMODFX+72
@NM00120 EQU   IOPMODFX+12
@NM00119 EQU   IOPMODF4
@NM00118 EQU   IOPMODF3
@NM00117 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00116 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00115 EQU   @NM00113+7
@NM00114 EQU   @NM00113
@NM00112 EQU   IOPMODDR+17
@NM00111 EQU   @NM00109+7
@NM00110 EQU   @NM00109
@NM00108 EQU   @NM00105
@NM00107 EQU   @NM00105
@NM00106 EQU   @NM00105
@NM00104 EQU   @NM00103
@NM00102 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00101 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00100 EQU   IOPSRCFX+8
@NM00099 EQU   @NM00097+7
@NM00098 EQU   @NM00097
@NM00096 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00095 EQU   @NM00093+7
@NM00094 EQU   @NM00093
@NM00092 EQU   @NM00089
@NM00091 EQU   @NM00089
@NM00090 EQU   @NM00089
@NM00088 EQU   @NM00087
@NM00086 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00085 EQU   IOPMACST
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00084 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00083 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00082 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00081 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00080 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00078 EQU   @NM00076+7
@NM00077 EQU   @NM00076
@NM00075 EQU   IOPLMDDR+6
@NM00074 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00073 EQU   IOPLMDF4
@NM00072 EQU   IOPLMDF3
@NM00071 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00070 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00069 EQU   IOPLMDDR
@NM00068 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00067+4
IOPUSED  EQU   @NM00067
IOPTPSEQ EQU   @NM00066+8
IOPVLSER EQU   @NM00066+2
IOPBLKSI EQU   @NM00066
IOPCQMAX EQU   IOPCQMAP+12
@NM00065 EQU   IOPCQMAP+11
@NM00064 EQU   IOPCQMAP+8
@NM00063 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00062 EQU   IOPSCMAP+11
@NM00061 EQU   IOPSCMAP+8
@NM00060 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00059 EQU   IOPNTMAX+11
@NM00058 EQU   IOPNTMAX+8
@NM00057 EQU   IOPNTMAX
@NM00056 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00055+5
IOPIPTF3 EQU   @NM00055
LISTEYY  EQU   LISTEDAT+4
LISTEDD  EQU   LISTEDAT+2
LISTEMM  EQU   LISTEDAT
LISTBYY  EQU   LISTBDAT+4
LISTBDD  EQU   LISTBDAT+2
LISTBMM  EQU   LISTBDAT
@NM00005 EQU   LISTPRM4
LISTXREF EQU   LISTPRM4
@NM00004 EQU   LISTPRM3+1
LISTERR  EQU   LISTPRM3+1
LISTBYP  EQU   LISTPRM3+1
LISTDEL  EQU   LISTPRM3+1
LISTNSUP EQU   LISTPRM3+1
LISTSUP  EQU   LISTPRM3+1
LISTUSER EQU   LISTPRM3
LISTAPAR EQU   LISTPRM3
LISTPTF  EQU   LISTPRM3
LISTFUNC EQU   LISTPRM3
LISTRES  EQU   LISTPRM3
LISTNOAC EQU   LISTPRM3
LISTNOAP EQU   LISTPRM3
LISTALL3 EQU   LISTPRM3
@NM00003 EQU   LISTPRM2+1
LISTMCS  EQU   LISTPRM2+1
LISTFMD  EQU   LISTPRM2+1
LISTSYS  EQU   LISTPRM2
LISTDLB  EQU   LISTPRM2
@NM00002 EQU   LISTPRM1+1
LISTLOG  EQU   LISTPRM1+1
@NM00001 EQU   LISTPRM1
LISTPTS  EQU   LISTPRM1
LISTACRQ EQU   LISTPRM1
LISTCRQ  EQU   LISTPRM1
LISTSCDS EQU   LISTPRM1
LISTACDS EQU   LISTPRM1
LISTALL1 EQU   LISTPRM1
SPLIFIL  EQU   SPLODSN+33
SPLISMD  EQU   SPLODSN+26
SPLIPFX  EQU   SPLODSN
SPLIUNPK EQU   SPLPUNPK+8
SPLOUNPK EQU   SPLPUNPK
SPLOPACK EQU   SPLPPACK+8
SPLIPACK EQU   SPLPPACK
@NM00181 EQU   HMASMGTP+27
GTPPSIZE EQU   GTPFLGS1
@NM00180 EQU   GTPFLGS1
GTPRCDNF EQU   GTPFLGS1
GTPNOSPM EQU   GTPFLGS1
GTPPOS   EQU   GTPRESTR+8
GTPRCD   EQU   GTPRESTR+4
GTPPAG   EQU   GTPRESTR
GTPWKAD  EQU   HMASMGTP+8
@NM00179 EQU   HMASMGTP+2
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00161 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00160 EQU   @NM00159+7
IOPQSMFM EQU   @NM00159
@NM00079 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00054 EQU   IOPUSERL
@NM00053 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00052 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00051 EQU   @NM00048+10
IOPSEQNO EQU   @NM00048+8
@NM00050 EQU   @NM00049+7
IOPPTFNM EQU   @NM00049
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00047 EQU   CCABLDLM+2
@NM00046 EQU   CCABLDLM
CCAUPDPM EQU   @NM00044+24
@NM00045 EQU   @NM00044+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00044+12
CCAUPDTE EQU   @NM00044+8
CCAUPDNM EQU   @NM00044
CCASUPPM EQU   @NM00042+24
@NM00043 EQU   @NM00042+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00042+12
CCAIOSUP EQU   @NM00042+8
CCASUPNM EQU   @NM00042
CCAZAPPM EQU   @NM00040+24
@NM00041 EQU   @NM00040+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00040+12
CCASPZAP EQU   @NM00040+8
CCAZAPNM EQU   @NM00040
CCACOMPM EQU   @NM00038+24
@NM00039 EQU   @NM00038+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00038+12
CCACOMRS EQU   @NM00038+8
CCACOMNM EQU   @NM00038
CCACPYPM EQU   @NM00036+24
@NM00037 EQU   @NM00036+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00036+12
CCACOPY  EQU   @NM00036+8
CCACPYNM EQU   @NM00036
CCAASMPM EQU   @NM00034+24
@NM00035 EQU   @NM00034+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00034+12
CCAASM   EQU   @NM00034+8
CCAASMNM EQU   @NM00034
CCALKDPM EQU   @NM00032+24
@NM00033 EQU   @NM00032+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00032+12
CCALKED  EQU   @NM00032+8
CCALKDNM EQU   @NM00032
CCAPGMPM EQU   @NM00030+24
@NM00031 EQU   @NM00030+21
CCABPGRC EQU   @NM00030+20
CCABPGSP EQU   @NM00030+12
CCABPGAD EQU   @NM00030+8
CCABPGNM EQU   @NM00030
CCAEND   EQU   HMASMCCA+371
@NM00029 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00028 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00027 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00026 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00025 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00024 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00023 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00022 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00021 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00020 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00019 EQU   @NM00014+18
@NM00018 EQU   @NM00014+16
CCATBLPA EQU   @NM00014+12
@NM00017 EQU   @NM00014+8
@NM00016 EQU   @NM00014+4
@NM00015 EQU   @NM00014
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00013 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
CCAIOPTR EQU   CCAFIOP
@NM00012 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00011 EQU   CCAFBUFR+122
@NM00010 EQU   CCAFBUFR+120
@NM00009 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00008 EQU   CCAFBUFR+88
@NM00007 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00006 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00187 EQU   @RC00183
@RC00200 EQU   @RC00196
@ENDDATA EQU   *
         END   HMASMXRF,(C'PLS2240',0802,78334)
