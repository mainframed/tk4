* /* START OF SPECIFICATIONS ***                                      *
*01* PROCESSOR = ASSEM;                                               *
**** END OF SPECIFICATIONS ***/                                       *
 TITLE 'IGC0003I - TAPE INITIALIZATION - ENTRY POINT'
**********************************************************************
* STATUS
*    CHANGE LEVEL 0
* FUNCTION/OPERATION
*    THIS MODULE WRITES A VOLUME LABEL SET, A DUMMY HEADER LABEL,
*    AND A TAPE MARK ON TAPE UNDER CONTROL OF OS/360.
*    (THE VOLUME LABEL SET CONSISTS ONLY OF THE VOL1 LABEL WHEN  S20038
*    THE SYSTEM TAPE LABEL UTILITY IS THE INVOKER.  THE VOLUME   S20038
*    LABEL SET AND 80-BYTE HEADER LABEL MUST BE IN CONTIGUOUS    S20038
*    STORAGE).
* ENTRY POINTS
*          IGC0003I
* INPUT
*    AT ENTRY TO THIS MODULE, REGISTER 1 POINTS TO A 5-WORD      S20038
*    PARAMETER LIST.
*         WORD 1 - BYTES 0 TO 2 - REWIND OPTION - X'C00004'      S20038
*                               - UNLOAD OPTION - X'C00006'      S20038
*                - BYTE 3 - INDICATES WHICH UCB IN TIOT TO USE
*                           FOR MOUNTING PURPOSES
*         WORD 2 - ADDRESS OF 8-BYTE DDNAME ON DD CARD THAT
*                  ALLOCATES DEVICES FOR MOUNTING TAPES.
*         WORD 3 - ADDRESS OF VOLUME LABEL SET
*         WORD 4 - BYTES 0 AND 1 - LENGTH OF ONE VOLUME LABEL
*                  BYTE 2 - NUMBER OF LABELS IN VOLUME LABEL SET
*                  BYTE 3 - COMMAND BYTE OF CONTROL CCW
*         WORD 5 - ADDRESS OF FIRST TEN BYTES OF VOLUME          S20038
*                  HEADER LABEL FOR THE LABEL IDENTIFIER         S20038
*                  AND SERIAL NUMBER IN EBCDIC                   S20038
* OUTPUT
*    THIS MODULE WRITES THE VOLUME LABEL SET SPECIFIED BY THE
*    CALLER, A DUMMY HEADER LABEL (HDR1 FOLLOWED BY 76 EBCDIC ZEROS),
*    AND A TAPE MARK ON THE TAPE ON THE DRIVE SPECIFIED BY THE CALLER.
* EXTERNAL ROUTINES
*          GETMAIN  - REQUEST CORE STORAGE
*          EXCP     - EXECUTE CHANNEL PROGRAM
*          WAIT     - WAIT
*          WTOR     - WRITE TO OPERATOR WITH REPLY
*          WTO      - WRITE TO OPERATOR
*          FREEMAIN - RELEASE CORE STORAGE
* EXITS
*    REGISTER 15 - MEANING OF CODE
*         NORMAL - X'00000000'  LABELING SUCCESSFUL
*         ERROR  - X'00000004'  OPERATOR HAS CANCELED LABELING
*         ERROR  - X'00000008'  PARAMETER LIST CANNOT BE ACCEPTED
*         ERROR  - X'0000000C'  PERMANENT I/O ERROR
* TABLES/WORKAREAS
*    SEE WORKAREA DSECT
* ATTRIBUTES
*    REENTRANT
*    TRANSIENT
* CHARACTER CODE DEPENDENCY
*    NOT APPLICABLE
* NOTES
***********************************************************************
*
IGC0003I CSECT                                                   S20038
*REGISTER USAGE:
R0       EQU   0                        WORK REG
R1       EQU   1                        PARM LIST & WORK REG
R2       EQU   2                        WORK REG
R3       EQU   3                        WORK REG
P0       EQU   4                        CONTAINS LABEL CODE
R4       EQU   4                        ADDR OF OLD LABEL
P1       EQU   5                        UCB NUM & UNLOAD OPTION
R5       EQU   5                        UNUSED
P2       EQU   6                        ADDR OF DDNAME
R6       EQU   6                        WORK REG
P3       EQU   7                        ADDR OF VOL LABELS
R7       EQU   7                        STORE CCW
P4       EQU   8                        LABEL LENGTH-MUST BE EVEN
P5       EQU   9                        NO. OF LABELS - WORK REG
PL       EQU   10                       PARAMETER LIST
RUCB     EQU   11
RBASE    EQU   12
RWKAREA  EQU   13
R14      EQU   14
RCVT     EQU   14
*
* CONSTANTS
*
C1        EQU   1                         CONSTANT AREA
C2        EQU   2                         DECIMAL
C3        EQU   3
C4        EQU   4
C6        EQU   6
C7        EQU   7
C8        EQU   8
C12       EQU   12
C15       EQU   15
C16       EQU   16
C20       EQU   20
C22       EQU   22
C24       EQU   24
C25       EQU   25
C28       EQU   28
C29       EQU   29
C32       EQU   32
C44       EQU   44
C47       EQU   47
C52       EQU   52
C57       EQU   57
C118      EQU   118
C253      EQU   253
C255      EQU   255
X00       EQU   X'00'                     HEXADECIMAL
X01       EQU   X'01'
X02       EQU   X'02'
X03       EQU   X'03'
X07       EQU   X'07'
X0F       EQU   X'0F'
X1F       EQU   X'1F'
X20       EQU   X'20'
X40       EQU   X'40'
X7F       EQU   X'7F'
X80       EQU   X'80'
XD4       EQU   X'D4'
XE2       EQU   X'E2'
XFE       EQU   X'FE'
CHAINFLG EQU   X'40'                    CHAINING FLAG FOR IOB    A50980
*
WORKREG  EQU   15
*                                                                A19959
*0017055200-055600                                                 MC01
* 042400,042600,043400,043600,054800                             S20038
*A 012900                                                        YM1084
*C 013000,055420                                                 YM1084
*A 028104-028108,042232,058920                                 @ZA01681
*C 028100,028120                                               @ZA01681
*A 032700,032820,032840,059500                                 @ZA13759
         BALR  RBASE,R0
         USING BEGIN,RBASE
         USING WORKAREA,RWKAREA
         USING UCB,RUCB
         USING CVT,RCVT
BEGIN    EQU   *                                                 YM1084
* BEGIN    SSM   ENABLE                SVC IS ENTERED ENABLED    YM1084
         LA    R1,0(R1)                STRIP OFF HIGH ORDER BITS
BEGUN    L     RCVT,CVTPTR             LOAD ADDR OF COMM VECTOR TABLE
         LPR   PL,R1                    LOAD PARAMETER LIST REG
         LM    P1,P4,0(PL)              LOAD PARAMETER LIST
*                                            P1 = UCB NUM + UNLOAD OPT
*                                            P2 = DDNAME ADDRESS
*                                            P3 = VOL LABELS ADDRESS
*                                            P4 = LABEL OPTIONS
         SRDL  P4,16                    P4 CONTAINS LABEL LENGTH
         LTR   R1,R1                    TEST FOR FIRST TIME LOGIC
         BM    BYPASS                    BRANCH TO BYPASS IF NOT FIRST
         LH    WORKREG,LENGTH           PICK UP STANDARD LENGTH 80
         CLR   P4,WORKREG               ARE LABELS OF STANDARD LENGTH
         BNH   SIZEUP                   BRANCH IF YES
         LR    WORKREG,P4               STORE LABEL LENGTH
SIZEUP   SH    WORKREG,LENGTH           DECREMENT LABEL LENGTH BY 80
         LA    R2,VARY-FIRST(WORKREG)  CALCULATE WORK AREA SIZE
         GETMAIN R,LV=(R2),SP=253
         LR    RWKAREA,R1               LOAD BASE REG FOR WORK AREA
         ST    R2,FIRST                 SAVE NUMBER OF WORK AREA BYTES
         XC    DCB(C118),DCB           ZERO WORKAREA
         OI    IOB,CHAINFLG            SET CHAIN FLAG            A50980
BYPASS   LPR   PL,PL                    TURN OFF SECOND TIME LOGIC
         SLDL  P0,24                   P0 CONTAINS LABEL CODE
         SRL   P1,22                   P1 CONTAINS UCB CODE TIMES 4
         L     WORKREG,CVTTCBP         PICK UP DOUBLE WORD ADDRESS
         L     WORKREG,C4(WORKREG)     PICK UP TCB ADDRESS
         L     WORKREG,C12(WORKREG)    PICK UP TIOT ADDRESS
         LA    WORKREG,C24(WORKREG)    PICK UP DD ENTRY ADDRESS
         SR    R1,R1
FINDNAME IC    R1,0(WORKREG)           LOAD DD ENTRY LENGTH
         LTR   R1,R1                   TEST FOR END OF TIOT
         BZ    BADPARM                 BRANCH IF END
         CLC   C4(C8,WORKREG),0(P2)    CHECK DD ENTRY FOR DDNAME
         LR    R2,WORKREG              SAVE POINTER
         LA    WORKREG,0(R1,WORKREG)   TRY NEXT DD ENTRY
         BNE   FINDNAME                BRANCH IF NO DDNAME
         LA    R3,C16(P1,R2)           PICK UP ADDRESS OF UCB POINTER
         CLR   R3,WORKREG              CHECK UPPER BOUNDARY
         BNL   BADPARM                 BRANCH IF TOO HIGH
         L     RUCB,C16(P1,R2)         PICK UP UCB ADDRESS
         TM    UCBTBYT3,UCB3TAPE       TEST FOR TAPE
         BZ    BADPARM                 BRANCH IF NOT TAPE
         TM    UCBWGT,SRTSYSIN+SRTSYSOT TEST FOR SYS IN OR SYS OUT DEV
         BNE   BADPARM                  BRANCH IF NEITHER
         TM    SRTESTAT,SRTEONLI        TEST FOR ON LINE DEVICE
         BZ    BADPARM                  BRANCH IF NOT ON LINE
         TM    SRTESTAT,SRTECHGS+SRTERESV TEST FOR OFFLINE SCHEDULING
*                                         OR RESERVED
         BNE   BADPARM                  BRANCH IF NOT
         TM    SRTEDMCT,X7F            TEST FOR ZERO USERS
         BNE   BADPARM                 BRANCH IF NOT ZERO USERS
         TM    C15(PL),X03             TEST FOR CONTROL COMMAND CODE
         BZ    BADPARM                  BRANCH IF NOT CONTROL
         LA    R1,DEB                   BUILD DEB
         MVI   C16(R1),X01             INSERT NUM OF EXITS
         LA    R2,DCB
         ST    R2,C24(R1)              INSERT DCB ADDR
         MVI   C24(R1),X0F             INSERT DEB ID
         MVC   C29(C3,R1),CVTXAPG+C1   INSERT IOS APPAD TAB ADDR
         MVI   C28(R1),X02             INSERT EXT SCALE
         ST    RUCB,C32(R1)            INSERT UCB ADDR
         SRL   P5,C16                  POSITION DEVICE MOD
         STC   P5,C32(R1)              INSERT DEVICE MOD
         ST    R1,DEBPTR               BUILD DCB
         LA    WORKREG,ECB             BUILD IOB
         ST    WORKREG,IOB+C4          INSERT ECB ADDR
         LA    WORKREG,CCW1
         ST    WORKREG,IOB+C16         INSERT CCW ADDR
         ST    R2,IOB+C20              INSERT DCB ADDR
         SRL   P5,8                    P5 CONTAINS NUMBER OF LABELS
         LTR   P4,P4                   TEST FOR ZERO LENGTH
         BZ    BADPARM                 BRANCH IF ZERO
         LTR   P5,P5                   TEST FOR NO LABELS
         BZ    BADPARM                 BRANCH IF NO LABEL
         OI    SRTEDMCT,X80            SET MOUNTING INDICATOR IN UCB
         CLC   SRTEVOLI(C6),CHANPROG+C25 CHECK FOR NO VOL SER NUM
         BNE   REWUNLD                 BRANCH IF VOL SER       @ZA01681
         TM    SWITCH,X01              MSG IEC703 ISSUED?      @ZA01681
         BZ    BUILDMES                BRANCH IF NO            @ZA01681
REWUNLD  MVI   CCW1,X0F            CCW1 WILL REWIND AND UNLOAD @ZA01681
         MVI   CCW1+C7,X01
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,X20                 TEST ECB FOR PERMANENT ERROR
         BZ    PERMERR                 BRANCH IF PERMANENT ERROR
         MVI   ECB,X00                 ZERO ECB CODE
NOSERIAL XC    SRTEVOLI(C6),SRTEVOLI   ZERO VOL SER NUMBER IN UCB
BUILDMES MVC   FIXED(C57),MOUNTMES     SET UP MOUNT MESSAGE      A36341
         MVC   FIXED+C22(C3),UCBNAME   INSERT UNIT NAME INTO MESSAGE
         L     WORKREG,C16(PL)         SET UP PTR TO 5TH PARM    S20038
         CLC   STANDARD(C4),0(WORKREG) CHECK FOR STANDARD LABEL  S20038
         BNE   TESTLOAD                BRANCH IF NOT STANDARD LABEL
         MVC   FIXED+C47(C6),C4(WORKREG) PUT SER NO INTO MESS.   S20038
         MVC   SRTEVOLI(C6),C4(WORKREG)  PUT SER NO INTO UCB     S20038
         OI    SRTESTAT,X01            SET STANDARD LABEL BIT IN UCB
TESTLOAD TM    C2(PL),X02              TEST FOR UNLOAD OPTION
         BZ    MOUNT                   BRANCH IF NOT UNLOAD
         EX    R0,NOSERIAL             ZERO VOLUME SERIAL NUMBER IN UCB
         NI    SRTESTAT,XFE            RESET STANDARD LABEL BIT IN UCB
MOUNT    WTOR  ,REPLY,,ECB,MF=(E,FIXED)
         ST    R1,DOMSAVE              SAVE MSGNUMBER          @ZA13759
         WAIT  1,ECB=ECB
         L     R1,DOMSAVE              RESTORE MSGNUMBER       @ZA13759
         DOM   MSG=(1)                 DELETE MSG FROM DOC     @ZA13759
         MVI   ECB,X00                 ZERO ECB CODE
         CLI   REPLY,XD4               TEST FOR REPLY 'MOUNTINT'
         BE    LABEL                   BRANCH IF MOUNTING
         CLI   REPLY,XE2               TEST FOR REPLY 'SKIP VOL'
         BNE   MOUNT                   BRANCH IF NOT SKIP
         LA    PL,C4
         B     THISEXIT                BRANCH
LABEL    LM    R0,R7,CHANPROG          LOAD CCW1 TO CCW4
         AR    R3,P4                   RESOLVE COUNT IN CCW2
         LA    WORKREG,FIXED
         AR    R6,WORKREG              RESOLVE ADDR IN CCW4
         AR    R7,P4                   RESOLVE COUNT IN CCW4
         STM   R0,R7,CCW1              STORE CCW1 TO CCW4 IN WORK AREA
         L     P3,C8(PL)               RESTORE P3
LABELING ST    P3,CCW2                 RESOLVE ADDR IN CCW2
ENTER    MVI   CCW2,X01                SET COMMAND CODE IN CCW2
ENTRY    MVI   ECB,X00                 ZERO ECB CODE
         EXCP  IOB
         WAIT  1,ECB=ECB
         TM    ECB,X20                 TEST ECB FOR PERMANENT ERROR
         BZ    ERROR                   BRANCH IF PERMANENT ERROR
         TM    SWITCH,X20              TEST FOR TAPE MARK
         BO    FINISH                  BRANCH IF TAPE MARK
         TM    SWITCH,X40              TEST FOR DUMMY HEADER LABEL
         BO    ENDLABEL                BRANCH IF DUMMY LABEL
         LA    WORKREG,C255            LOAD MAXIMUM COMPARE SIZE -1
         LA    R2,C1(WORKREG)          R2 CONTAINS 256
         LR    R3,P4                   R3 CONTAINS LENGTH OF LABELS
         LR    R4,P3                   R4 CONTAINS ADDR OF OLD LABEL
         LA    R14,FIXED               R14 CONTAINS ADDR OF NEW LABEL
TESTSIZE CLR   R3,R2                   IS THE LABEL BIGGER THAN 256
         BNH   LASTCOMP                BRANCH IF NO
         EX    WORKREG,COMPARE         EXECUTE COMPARE INST RUCTION
         BNE   LABELERR                BRANCH IF NO COMPARE
         SR    R3,R2                   DECREMENT LABEL LENGTH BY 256
         AR    R4,R2                   INCREMENT OLD LABEL ADDR BY 256
         AR    R14,R2                  INCREMENT NEW LABEL ADDR BY 256
         B     TESTSIZE                BRANCH
LASTCOMP LTR   R3,R3                   CHECK FOR ZERO RESIDUE
         BZ    OUTCOMP                 BRANCH IF ZERO
         BCTR  R3,R0                   MINIMUM COMPARE SIZE - 1
         EX    R3,COMPARE              EXECUTE CLC
         BNE   LABELERR                BRANCH IF NO COMPARE
OUTCOMP  LA    WORKREG,CCW2
         ST    WORKREG,IOB+C16         INSERT NEW CCW ADDR IN IOB
         AR    P3,P4                   POINT TO NEXT LABEL
         BCT   P5,LABELING             BRANCH TO DO NEXT LABEL
         OI    SWITCH,X40              TURN ON DUMMY LABEL SWITCH
         MVC   CCW2+C6(C2),LENGTH      CCW2 WILL WRITE STANDARD HEADER
         MVC   CCW4+C6(C2),LENGTH      CCW4 WILL READ STANDARD HEADER
         B     LABELING                BRANCH
ENDLABEL MVI   CCW2,X1F                CCW2 WILL WRITE TAPE MARK
         MVI   CCW3,X03                CCW3 IS A NOP
         MVI   CCW4,X07                CCW4 WILL REWIND TAPE
         TM    C2(PL),X02              TEST FOR UNLOAD OPTION
         BZ    TURNON                  BRANCH IF NO UNLOAD
         MVI   CCW4,X0F                CCW4 WILL REWIND/UNLOAD TAPE
TURNON   OI    SWITCH,X20              TURN ON TAPE MARK SWITCH
         B     ENTRY                   BRANCH
ERROR    TM    IOB+C3,X02              TEST FOR FILE PROTECT
         BO    TRYAGAIN                BRANCH IF FILE PROTECT
         TM    SWITCH,X80              TEST FOR PREVIOUS ERROR
         BZ    SETERROR                BRANCH IF ERROR
PERMERR  LA    PL,C12                  SET ERROR CODE
         B     THISEXIT                BRANCH
TRYAGAIN MVC   FIXED(C44),FILEMESS     SET UP ERROR MESSAGE      A36341
         MVI   ECB,X00                 ZERO ECB CODE             A19959
         B     SETUPMES                BRANCH
LABELERR MVC   FIXED(C52),LABELMES     SET UP ERROR MESSAGE      A36341
SETUPMES MVC   FIXED+C12(C3),UCBNAME   INSERT UNIT NAME INTO MESSAGE
         WTO   MF=(E,FIXED)
         OI    SWITCH,X01            TURN ON MSG IEC703 SWITCH @ZA01681
SETERROR OI    SWITCH,X80              TURN ON ERROR SWITCH
         LNR   R1,PL                   SET UP SECOND TIME LOGIC
         MVI   ECB,X00                 ZERO OUT ECB
         B     BEGUN                   BRANCH
BADPARM  LA    PL,C8                   SET ERROR CODE
         B     EXITHERE                BRANCH
FINISH   TM    C2(PL),X02              TEST FOR UNLOAD OPTION
         BZ    ZEROCODE                BRANCH IF NO UNLOAD
         OI    UCBFL2,X40              SET NOT READY BIT IN UCB
ZEROCODE SR    PL,PL                   ZERO ERROR CODE
THISEXIT MVI   SRTEDMCT,X00            RESET MOUNTING INDICATOR IN UCB
EXITHERE LA    R0,C253(R0,R0)          PICK UP SUBPOOL
         SLL   R0,C24(R0)              SHIFT TO HI-ORDER BYTE
         O     R0,FIRST                PACK SP&LV
         FREEMAIN R,LV=(0),A=(RWKAREA)
         LR    WORKREG,PL
         SVC   C3                      EXIT SVC
*
*** CONSTANTS
*
CHANPROG DS    0F
*CCW1
         DC    X'07000000'              REWIND TAPE
         DC    X'40000001'              CCW
*CCW2
         DC    X'01000000'              WRITE LABEL
         DC    X'60000000'              CCW
*CCW3
         DC    X'27000000'              BACKSPACE LABEL
         DC    X'40000001'              CCW
*CCW4
         DC    X'02000000'             READ LABEL
         DC    X'00000000'             CCW
COMPARE  CLC   0(C1,R14),0(R4)           VERIFY LABELS CAN BE READ
STANDARD DC    C'VOL1'                 LABEL
LGL000   DC    CL6'LGL000'             FAKE VOLUME SERIAL NUMBER
*                                                                S20038
* WTO MACROS IN LIST FORM                                        S20038
*                                                                S20038
MOUNTMES WTOR  'IEC701D M DDD,VOLUME TO BE LABELED       ',,1,,MF=L,   X
               ROUTCDE=(3),DESC=(2)                                MC01
*                                                                S20038
* CONSTANTS                                                      S20038
*                                                                S20038
* ENABLE   DC    X'FF'                   ENABLE MASK             YM1084
LENGTH   DC    H'80'                   STANDARD LABEL LENGTH     S20038
*                                                                S20038
LABELMES WTO   'IEC702I DDD,VOLUME LABELS CANNOT BE VERIFIED',MF=L,    X
               ROUTCDE=(3),DESC=(4)                                MC01
FILEMESS WTO   'IEC703I DDD,VOLUME IS FILE PROTECTED',MF=L,            X
               ROUTCDE=(3),DESC=(4)                                MC01
*                                                                S20038
         ORG   IGC0003I+1024           MAINTENANCE AREA FOR PGM  S20038
*                                                                S20038
* WORKING STORAGE FOR TAPE-LABELING SVC.                         S20038
* CONTENTS-SYSTEM CONTROL BLOCKS,CHANNEL PROGRAM,INTERNAL SWITCH,S20038
* AND HOLD AREA FOR LABEL READ BACK OPERATION.                   S20038
*                                                                S20038
WORKAREA DSECT
FIRST    DS    1F                       WORK AREA
DCB      DS    1F                       DCB = 12F
DEB      DS    10F                      DEB = 9F
DEBPTR   DS    1F                       DEB POINTER
ECB      DS    1F                       ECB
IOB      DS    8F                       IOB
CCW1     DS    1D                       CCW
CCW2     DS    D                        CCW
CCW3     DS    D                        CCW
CCW4     DS    D                        CCW
SWITCH   DS    CL1                      SWITCH BYTE
*                                      BIT 0 - ERROR
*                                      BIT 1 - DUMMY HEADER
*                                      BIT 2 - TAPE MARK
*                            BIT 7 - MSG IEC703 ISSUED         @ZA01681
REPLY    DS    CL1                     MUST
         DS    CL2                     BE
FIXED    DS    CL80                    CONTIGUOUS
DOMSAVE  DC    F'0'                    SAVEAREA FOR MSG NR     @ZA13759
VARY     DS    0H
*                                                                S20038
* UNIT CONTROL BLOCK - SYMBOLIC NAMES                            S20038
*                                                                S20038
UCB      DSECT
         IEFUCBOB
SRTSYSIN EQU   128
SRTSYSOT EQU   64
*                                                                S20038
* COMMUNICATION VECTOR TABLE                                     S20038
*                                                                S20038
CVT      DSECT
         CVT   SYS=MIN
         END
