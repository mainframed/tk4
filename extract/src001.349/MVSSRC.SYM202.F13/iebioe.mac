  TITLE  'IEBIOE - IEBCOPY EXCP I/O ERROR ROUTINE'
*D276000                                                         A34431
*C753000                                                         A41780
*A698100-698800,736100-736120                                    A44144
*C339000,374000,524000,577000,668000,711311                      A44144
*D711385-711445                                                  A44144
*A461500,461600,745500                                         @YA02574
***********************************************************************
         SPACE 1
IEBIOE   CSECT
* 76000,676000-677000,708000-711000,714000,729000,753510         X010XX
*                                                                     *
*TITLE-  IEBIOE  I/O ERROR ANALYSIS ROUTINE FOR READ OR WRITE ERRORS. *
*              ON INPUT, OUTPUT OR SYSUT3 OR SYSUT4 DATA SETS.        *
*                                                                     *
*STATUS- CHANGE LEVEL 001                                             *
*                                                                     *
*FUNCTION/OPERATION-  ISSUES SYNADAF                                  *
*          PREPARES SYNADAF MESSAGE THEN GIVES IT                     *
*          ANALYSIS ERROR CONDITION                                   *
*          SETS PROPER SWITCHES                                       *
*          IN THE CASE OF AN UNLOAD OPERATION IT FLAGS THE       X010XX
*          UNLOADED DATASET AS NOT LOADABLE AND GIVES MESSAGE    X010XX
*          ISSUES SYNADRLS                                            *
*          RETURNS TO CALLER OR ENTERS TERMINATE ROUTINE              *
*                                                                     *
*ENTRY POINTS- IEBIOE                                                 *
*              IEBIOE2 -LOAD END OF FILE                         X010XX
*                      -UNLOAD BLOCKSIZE ERROR                   X010XX
*              IEBIOE3 -LOAD SYNAD ROUTINE                       X010XX
*              IEBIOE4 -UNLOAD SYNAD ROUTINE                     X010XX
*                                                                     *
*INPUT - IEBIOE-  REGISTER 5 POINTS TO IOB                       X010XX
*        IEBIOE3,IEBIOE4- PARAMETERS IN REGS 0 AND 1             X010XX
*                                                                     *
*OUTPUT- MESSAGES TO PRINTER                                          *
*        SWITCHES SET                                                 *
*                                                                     *
*EXITS-  RETURN TO CALLER IF 'SOFT' ERRORS.                           *
*        ENTER IEBVTM TERMINATE ROUTINE IF 'HARD' ERRORS.             *
*                                                                     *
*EXTERNAL ROUTINES- IEBVMS                                            *
*                                                                     *
*TABLES/WORK AREAS- SYNADAF BUFFER                                    *
*                                                                     *
*ATTRIBUTES- SERIALLY REUSEABLE                                       *
*                                                                     *
         EJECT
*                                                                     *
*                         GENERAL REGISTERS                           *
*                                                                     *
         SPACE 1
GR0   EQU 0
GR1   EQU 1
GR2   EQU 2
GR3   EQU 3
GR4   EQU 4                            IEBMCA POINTER
GR5   EQU 5                            ADDRESS OF IOB
GR6   EQU 6
GR7   EQU 7
GR8   EQU 8
GR9   EQU 9
GR10     EQU   10                      BASE REGISTER TO MESSAGE CSECT
GR11  EQU 11
GR12     EQU   12                      MAIN BASE REGISTER
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
         SPACE 1
         USING IEBIOE,GR15             ADDRESSABILITY FOR SYNADAF
         USING IEBMCA,GR4              ADDRESABILITY TO MCA
         USING DXIOB,GR5               ADDRESSABILITY TO IOB
         SPACE 1
         SAVE  (14,12),,*              STANDARD LINKAGE
         SPACE 1
*    THE FOLLOWING MACRO PLACES AN ERROR MESSAGE IN A DYNAMIC
*  BUFFER, OBTAINS A SAVE AREA, AND LINKS THE NEW SAVE AREA WITH
*  THE OLD ONE
         SPACE 1
         SYNADAF  ACSMETH=EXCP,PARM1=(GR5)
         SPACE 1
         DROP  GR15
         BALR  GR12,GR0                INITIALIZE BASE REGISTER
         USING START,GR12              ESTABLISH ADDRESSABILITY
START    EQU   *
         L     GR10,AMSG               LOAD PTR TO MSG CSECT
         USING IEBIOEMG,GR10           ADDRESSABILITY TO MESG'S
         SPACE 1
         OI    IOEF2,SNDFUSED+IOEFENT  INDICATE SYNADAF ISSUED   X010XX
*                                        AND IOE ENTERED         X010XX
         SPACE 1
         MVI   MSGBUF,BLANK
         MVC   MSGBUF+P1(L120),MSGBUF  CLEAR MSG BUFFER
         CLI   RCBUF,RC4               RETURN CODE GT THAN 4
         BNL   SETUP                   YES, GO AROUND
         MVI   RCBUF,RC4               SET RETURN CODE = 4
SETUP    EQU   *
         MVC   MSGBUF+P1(L7),IEBPRFX   SET UP MSG NUMBER
         MVC   MSGBUF+P9(L9),TEXT5     I/O ERROR
         MVC   MSGBUF+P42(L78),X50(GR1) MOVE SYNADAF MSG TO BUFFER
         SPACE 1
         TM    WSFLAG,RDGSW            READING
         BO    SETREAD                 YES, GO ON
         TM    FORM,ERASE              ERASING
         BO    SETERS                  YES, GO ON
         TM    TAG,TAG6                READ BACK CHECKING
         BO    SETRDCK                 YES, GO ON
         SPACE 1
         MVC   MSGBUF+P19(L14),WCN     ERROR PREFIX=WRITE
         B     GIVEMESS                GIVE MESSAGE
         SPACE 1
SETREAD  EQU   *
         MVC   MSGBUF+P19(L13),RCN     ERROR PREFIX=READ
         B     GIVEMESS                GIVE ERROR MESSAGE
         SPACE 1
SETERS   EQU   *
         MVC   MSGBUF+P19(L14),ERSCON  ERROR PREFIX=ERASE
         B     GIVEMESS                GIVE ERROR MESSAGE
         SPACE 1
SETRDCK  EQU   *
         MVC   MSGBUF+P19(L22),RBCN    ERROR PREFIX=READBACK CHECK
         SPACE 1
GIVEMESS EQU   *
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST
         BAL   GR9,GOVMS               GO TO MESSAGE WRITER
         SPACE 1
         TM    WSFLAG,RDGSW            ERROR READING
         BNO   WRITERR                 NO, GO TO WRITE ERROR ROUTINE
         EJECT
*
*     THIS SECTION HANDLES READ ERRORS BY GIVING CONTROL TO
*  APPROPRIATE ROUTINES
*
*     NOTE THAT TESTING FOR TYPE OF READ DONE MUST BE THE SAME AS
*  THE LOGIC IN MODULE IEBDRD
         SPACE 2
         TM    SENSE,SENSE3            ONE RECORD AT A TIME PROCESSING
         BZ    CHECKMOR                NO, GO AROUND
         TM    SENSE,SENSE2            READING NOTELIST
         BO    INMRERR                 YES, GO HANDLE
         TM    SENSE,SENSE1            READING FROM SYSUT3       A34431
         BO    UT3READ                 YES, GO HANDLE            A34431
         B     INMRERR                 MUST BE A RC REQUEST ON   A34431
*                                       THE INPUT DATA SET       A34431
*                                       HANDLE AS A MEMBER READ  A34431
*                                       ERROR                    A34431
CHECKMOR EQU   *
         TM    STATUS,STAT4            INPUT MEMBER ERROR
         BO    INMRERR                 YES, GO HANDLE
         TM    STATUS,STAT1            INPUT DIRECTORY ERROR
         BO    INDRERR                 YES, GO HANDLE
         TM    STATUS,STAT2            OUTPUT DIRECTORY ERROR
         BO    OTDRERR                 YES, GO HANDLE
         B     UT4READ                 MUST BE A SYSUT4 ERROR
         EJECT
*
*     THIS ROUTINE HANDLES INPUT DIRECTORY READ ERRORS
*
         SPACE 2
INDRERR  EQU   *
         MVI   IOEF1,ERF2              INDICATE INPUT DIRECTORY READ
*                                         ERROR
         B     EXIT                    GO TO EXIT ROUTINE
         EJECT
*
*     THIS ROUTINE HANDLES INPUT MEMBER DATA READ ERRORS
*
         SPACE 2
INMRERR  EQU   *
         L     GR3,IDEAD               LOAD PTR TO MEMBER NAME
         SPACE 1
         MVC   MSGBUF+P1(L7),NUMB0     SET UP MESSAGE
         MVC   MSGBUF+P10(L24),TEXT5
         MVC   MSGBUF+P20(L7),TEXT1
         MVC   MSGBUF+P35(L8),X0(GR3)
         SPACE 1
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST
         BAL   GR9,GOVMS               GO TO MSG WRITER
         SPACE 1
         BAL   GR9,TESTSTAT            CHECK FOR HARD OR SOFT ERROR
*                                      RETURN+0 = SOFT ERROR
*                                      RETURN+4 = HARD ERROR
         B     IGNORE                  SOFT ERROR, IGNORE
         SPACE 1
         BAL   GR7,XTRAMSG             GO PRINT ONE MORE ERROR
*                                        MESSAGE
         MVI   IOEF1,ERF3              INDICATE MEMBER READ ERROR
         B     EXIT                    GO TO EXIT ROUTINE
         EJECT
*
*     THIS SECTION HANDLES OUTPUT DIRECTORY READ ERRORS
*
         SPACE 2
OTDRERR  EQU   *
         MVI   IOEF1,ERF4              INDICATE AS OD READ ERROR
         NI    IOEF2,FF-ERF10          TURN OFF ERF10
         B     EXIT                    GO TO EXIT ROUTINE
         EJECT
*
*     THIS ROUTINE HANDLES SYSUT3 READ ERRORS
*
         SPACE 2
UT3READ  EQU   *
         MVC   MSGBUF+P1(L7),NUMB2     SET UP MESSAGE
         MVC   MSGBUF+P10(L29),TEXT3
         MVC   MSGBUF+P40(L16),SUFFIX
         SPACE 1
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST
         BAL   GR9,GOVMS8              GO TO MSG WRITER          A44144
         SPACE 1
         MVI   IOEF1,ERF8              FLAG AS SYSUT3 READ ERROR
         TM    ULLDST,UNLOAD           UNLOAD OPERATION          X010XX
         BO    IOE00785                YES - GO TO EXIT RTN BUT  X010XX
*                                        SKIP TEST UNLOAD        X010XX
         TM    SENSE,SENSE8       DID VTT REQUEST I/O            A33287
         BO    EXIT                    YES, EXIT TO VTM          A33287
         TM    COMDCDSW,COMPRESS       COMPRESS OPERATION
         BZ    FLAGIT1                 NO, GO AROUND
         TM    TAG,TAG8                LOOKING FOR HOLES - MCM
         BO    FLAGIT1                 YES, GO AROUND
         SPACE 1
         MVC   MSGBUF+P1(L78),TEXT6    SET UP INVALID DIRECTORY MSG
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD+LAST MSG
         BAL   GR9,GOVMS               ISSUE ERROR MSG
         B     EXIT                    GO TO EXIT ROUTINE
         SPACE 1
FLAGIT1  EQU   *
         MVI   VTMFLG1,IOERROR         INDICATE IOERROR
         L     GR3,TABAD               FLAG APPROPRIATE CTLTAB ENTRY
         LA    GR2,X10                    AS DON'T COPY
         SR    GR3,GR2
         OI    X0(GR3),SEBIT4
         B     IGNORE                  GO TO EXIT ROUTINE
         EJECT
*
*     THIS ROUTINE HANDLES SYSUT4 READ ERRORS
*
         SPACE 2
UT4READ  EQU   *
         NI    IOEF1,FF-ERF4           ASSURE ERF4=0
         OI    IOEF2,ERF10             INDICATE ERROR READING
*                                         FROM SYSUT4
         TM    FLG7,DM                 DIRECTORY MERGE PHASE
         BO    DONTSET                 YES, LEAVE ERF4=0
         OI    IOEF1,ERF4              INDICATE SYSUT4 ERROR NOT IN
*                                         DIRECTORY MERGE PHASE
         B     EXIT                    GO TO EXIT ROUTINE
DONTSET  EQU   *
         MVI   MSG1+P1,WODINC          INCMP DIRECTORY MSG
         MVI   MSG1,LASTMSG            SET LAST MESSAGE
         BAL   GR9,GOVMS12             GO TO MESSAGE WTR         A44144
         B     EXIT                    GO TO EXIT ROUTINE
         EJECT
*
*     THIS SECTION HANDLES WRITE ERRORS BY GIVING CONTROL TO
*  APPROPRIATE ROUTINES
*
*     NOTE THAT TESTING FOR TYPE OF WRITE DONE MUST BE THE SAME AS
*  THE LOGIC IN MODULE IEBDWR
         SPACE 2
WRITERR  EQU   *
         TM    FORM,ERASE              ERASE ERROR
         BO    OTMERS                  YES, GO HANDLE
         SPACE 1
         TM    TAG,TAG4                WRITE UT3 ERROR
         BO    UT3WRITE                YES, GO HANDLE
         TM    TAG,TAG1                WRITING ODB'S TO OUTPUT
         BO    OTDWERR                 YES, GO HANDLE
         TM    TAG,TAG2                WRITING MEMBER DATA
         BO    OTMWERR                 YES, GO HANDLE
         B     UT4WRITE                MUST BE A UT4 WRITE ERROR
         EJECT
*
*     THIS ROUTINE HANDLES OUTPUT DIRECTORY WRITE ERRORS
*
         SPACE 2
OTDWERR  EQU   *
         L     GR3,WRPCICNT            LOAD NUMBER PCI'S TAKEN
         LTR   GR3,GR3                 IS IT ZERO
         BZ    USEPTR1                 YES GO AROUND
         SPACE 1
         L     GR7,WRPTR2              LOAD ADDRESS OF WRITE NOT
*                                         EXECUTED (ATLEAST ONE PCI
*                                         TAKEN)
         B     FINDBLOK                GO AROUND
USEPTR1  EQU   *
         L     GR7,WRPTR1              LOAD ADDRESS OF WRITE NOT
*                                         EXECUTED (NO PCI'S TAKEN)
         SPACE 1
FINDBLOK EQU   *
         L     GR6,X0(GR0,GR7)         LOAD FAILING CCW (POINTS TO
*                                         BLOCK NOT WRITTEN)
         LA    GR6,FIRSTNAM(GR0,GR6)   BUMP TO FIRST NAME IN BLOCK
         SPACE 1
         MVC   MSGBUF+P1(L7),NUMB3     SET UP MESSAGE
         MVC   MSGBUF+P10(L59),TEXT4
         MVC   MSGBUF+P18(L8),X0(GR6)
         MVC   MSGBUF+P70(L16),SUFFIX
         SPACE 1
         TM    TAG,TAG6                RDBACK CHECKING
         BNO   CHKCCWS                 NO, GO AROUND
         MVC   MSGBUF+P18(L8),ASTERICS MOVE **'S TO BUFFER
         B     ISSUEMSG                ISSUE MSG
         SPACE 1
*   THE NUMBER OF PCI'S TAKEN IS NOW INSPECTED TO SEE IF THE VALUE
*  IS ATLEAST 2.  IF IT IS NOT, NO FURTHER ERROR RECOVERY IS POSSIBLE
*  SINCE THE LOCATION 'LASTGB' MAY CONTAIN GARBAGE.
         SPACE 1
CHKCCWS  EQU   *
         L     GR3,WRPCICNT            LOAD NUMBER OF PCI'S TAKEN
         CH    GR3,TWOPCIS             HAVE ATLEAST TWO PCI'S BEEN
*                                        TAKEN
         BL    ISSUEMSG                NO, CAN'T DO ANY MORE
         SPACE 1
         LA    GR2,LASTGB              LOAD POINTER TO MBBCCHHR OF
*                                        LAST SUCCESSFULLY WRITTEN
*                                        BLOCK
         SPACE 1
         L     GR1,IOBWGHT
         LA    GR5,ERRIOB              CHANGE BASE REGISTER FOR IOB
         ST    GR1,IOBWGHT             STORE DCB PTR IN ERRORIOB
         ST    GR4,MCAADDR             STORE ADDR. OF IEBMCA   @YA02574
*                                      IN ERRORIOB             @YA02574
         MVC   DXDAADDR(L8),X0(GR2)    MOVE ADDRESS OF LAST GOOD
*                                        ODB TO SEEK ADDRESS
         LA    GR7,CCWS                PTR TO CCW CHAIN
         ST    GR7,IOBSIOCC            STORE IN IOB
         L     GR8,FLG1                PTR TO FIRST BUFFER
         LA    GR8,X0(GR0,GR8)          CLEAR HIGH ORDER BYTE
         ST    GR8,RDWRT               STORE IN CCW
         MVI   RDWRT,RKD               RESTORE RKD
         LA    GR9,FINDLAST            SET UP FOR LATER BRANCH
         SPACE 1
EXCP     EXCP  (GR5)                   READ/WRITE A SINGLE BLOCK
         WAIT  ECB=ERRECB              WAIT FOR I/O COMPLETION
         CLI   ERRECB,OKCODE           I/O OK
         BNE   ISSUEMSG                NO, CAN'T DO ANY MORE
         BR    GR9                     RETURN OR NSI
         SPACE 1
*    THE LAST DE IN BLOCK IS SEARCHED FOR AND REPLACED WITH FF'S
         SPACE 1
FINDLAST EQU   *
         LA    GR1,X2                  INITIALIZE COUNT OF BYTES
*                                        USED IN DB TO 2
         LA    GR7,MASK1F              PLACE MASK OF X'1F' IN REGISTER
         LA    GR6,X10(GR0,GR8)        PTR TO FIRST DE IN BLOCK
CMPLOOP  EQU   *
         CLC   X0(L8,GR8),X0(GR6)      LAST ENTRY
         BNH   GOTLAST                 YES, GO ON
         SR    GR11,GR11
         IC    GR11,X11(GR0,GR6)       GET C OF TTRC
         NR    GR11,GR7                CLEAR ALIAS AND USER TTR
*                                        INFORMATION
*                                      (GR11 NOW CONTAINS NO. HALF-
*                                      WORDS OF USER DATA)
         AR    GR11,GR11               GET NO. BYTES OF USER DATA
         LA    GR11,X12(GR0,GR11)      ADD NAME LENGTH+TTRC LENGTH
         AR    GR6,GR11                BUMP TO NEXT DE
         AR    GR1,GR11                UP COUNT OF DB BYTES USED
         B     CMPLOOP                 CONTINUE CHECKING
         SPACE 1
GOTLAST  EQU   *
         MVC   WKA1(L8),X0(GR8)        SAVE OLD KEY
         MVI   X0(GR8),FF              SET KEY=FF'S
         MVC   X1(L7,GR8),X0(GR8)
         SPACE 1
         MVC   X0(L8,GR6),X0(GR8)      SET LAST ENTRY = FF'S
         XC    X8(L4,GR6),X8(GR6)      ZERO TTR6 FIELD OF LAST ENTRY
         LA    GR1,X12(GR0,GR1)        UP COUNT OF DB BYTES USED TO
*                                        INCLUDE FF'S ENTRY
         STH   GR1,WKA1+P8             STORE DB BYTE COUNT
         MVC   X8(L2,GR8),WKA1+P8        IN UPDATED BLOCK
         MVI   RDWRT,WKD               CHANGE RKD CCW TO WKD
         BAL   GR9,EXCP                UPDATE ODB
         SPACE 1
         MVC   MSGBUF+P18(L8),WKA1     UPDATE MESSAGE
         SPACE 1
ISSUEMSG EQU   *
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST
         BAL   GR9,GOVMS               GO TO MESSAGE WRITER
         SPACE 1
         MVI   IOEF1,ERF5              INDICATE OUTPUT DIRECTORY
*                                      WRITE ERROR ON OUTPUT
         MVI   MSG1+P1,PLAMPID         POSS LOSS OR INCMP DIR MSG
         MVI   MSG1,LASTMSG            SET LAST MESSAGE
         BAL   GR9,GOVMS12             GO TO MESSAGE WTR         A44144
         B     EXIT                    GO TO EXIT ROUTINE
         EJECT
*
*     THIS ROUTINE HANDLES OUTPUT MEMBER WRITE ERRORS
*
         SPACE 2
OTMWERR  EQU   *
         LA    GR2,DXDAADDR            POINT TO IOB SEEK ADDRESS
         L     GR1,IOBWGHT             POINT TO DCB
         L     GR15,VCCOTT             PTR TO CCOTT
         BALR  GR14,GR15               CONVERT TO TTR
         SPACE 1
         MVC   MSGBUF+P1(L7),NUMB1     SET UP MESSAGE
         MVC   MSGBUF+P10(L37),TEXT5
         UNPK  MSGBUF+P47(L7),WKA1(L4)
         TR    MSGBUF+P47(L6),TABLE-P240
         MVI   MSGBUF+P53,BLANK
         TM    TAG,TAG6                ERROR ON RDBACK CHK
         BNO   DONTMOVE                NO, GO AROUND
         MVC   MSGBUF+P54(L21),TEXT8
DONTMOVE EQU   *
         SPACE 1
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE+LAST
         BAL   GR9,GOVMS               GO TO MESSAGE WRITER
         SPACE 1
         TM    TAG,TAG6                ERROR DURING READBACK CHECK
         BNO   NOTRB                   NO, GO AROUND
         SPACE 1
         BAL   GR9,TESTSTAT            CHECK FOR HARD OR SOFT ERROR
*                                      RETURN+0 = SOFT ERROR
*                                      RETURN+4 = HARD ERROR
         B     IGNORE                  IGNORE SOFT ERROR
         SPACE 1
NOTRB    EQU   *
         BAL   GR7,XTRAMSG             GO PRINT ONE MORE ERROR
*                                        MESSAGE
         MVI   IOEF1,ERF6              INDICATE MEMBER WRITE ERROR
         B     EXIT                    GO TO EXIT ROUTINE
         EJECT
*
*     THIS ROUTINE HANDLES SYSUT3 WRITE ERRORS
*
         SPACE 2
UT3WRITE EQU   *
         MVC   MSGBUF+P1(L7),NUMB2     SET UP MESSAGE
         MVC   MSGBUF+P10(L29),TEXT3
         MVC   MSGBUF+P40(L16),SUFFIX
         L     GR3,ADWK
         LA    GR3,X12(GR0,GR3)        GET PTR TO NAME
         MVC   MSGBUF+P17(L8),X0(GR3)
         SPACE 1
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD+LAST MSG
         BAL   GR9,GOVMS8              GO TO MESSAGE WRITER      A44144
         SPACE 1
         MVI   IOEF1,ERF7              INDICATE SYSUT3 WRITE ERROR
         TM    ULLDST,UNLOAD           UNLOAD OPERATION          X010XX
         BO    IOE00785                YES - GO TO EXIT RTN BUT  X010XX
*                                        SKIP TEST UNLOAD        X010XX
         TM    SENSE,SENSE8            DID VTT REQUEST I/O       A33287
         BO    EXIT                    YES, EXIT TO VTM          A33287
         TM    COMDCDSW,COMPRESS       COMPRESS OPERATION
         BZ    FLAGIT2                 NO, GO AROUND
         SPACE 1
         MVC   MSGBUF+P1(L78),TEXT6    SET UP INVALID DIRECTORY MSG
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD+LAST MSG
         BAL   GR9,GOVMS               ISSUE ERROR MSG
         B     EXIT                    GO TO EXIT ROUTINE
         SPACE 1
FLAGIT2  EQU   *
         MVI   VTMFLG1,IOERROR         INDICATE IOERROR
         SPACE 1
         TM    FLG7,COP                IN MEMBER COPY PHASE
         BO    CPYPHASE                YES, GO AROUND
         SPACE 1
*     NOTE THAT IF THIS IS THE BUILD PHASE, THE ONLY WAY TO FIND
*  THE APPROPRIATE CTLTAB ENTRY TO FLAG AS DON'T COPY IS THROUGH
*  IEBMBT'S SAVE AREA
         SPACE 1
         L     GR3,SV3+SV3TAB          GET PTR TO CTLTAB ENTRY
*                                      BEING BUILT
         B     FLAGIT                  GO AROUND
         SPACE 1
CPYPHASE EQU   *
         L     GR3,TABAD
         LA    GR2,X10
         SR    GR3,GR2                 GET PTR TO ENTRY BEING
*                                         BUILT
         SPACE 1
FLAGIT   EQU   *
         OI    X0(GR3),SEBIT4          FLAG ENTRY AS DON'T COPY
         B     IGNORE                  GO TO EXIT ROUTINE
         EJECT
*
*     THIS ROUTINE HANDLES SYSUT4 WRITE ERRORS
*
         SPACE 2
UT4WRITE EQU   *
         BAL   GR7,XTRAMSG             GIVE NO MEMBERS COPIED MSG
         MVI   IOEF1,ERF9              INDICATE SYSUT4 WRITE ERROR
         B     EXIT                    GO TO EXIT ROUTINE
         EJECT
*
*     THIS ROUTINE TESTS FOR SOFT AND HARD ERRORS.  IF THE ERROR
*  IS SOFT, THE CALLER IS RETURNED TO AT REGISTER 9 +0.  IF THE ERROR
*  IS HARD, THE CALLER IS RETURNED TO AT REGISTER 9 +4.
*
         SPACE 2
TESTSTAT EQU   *
         CLI   EVENTCB,PERMIO          ECB POSTED AS X'41'
*                                      (THIS IS THE ONLY TIME THAT
*                                      IOBCSW CONTENTS ARE USEFUL)
         BNE   HARDERR                 NO, HARD ERROR
         SPACE 1
         TM    IOBSTAT0,UCHECK         UNIT CHECK POSTED
*                                      (THIS BIT MUST BE ON TO
*                                      ASSURE IOB SENSE INFORMATION
*                                      HAS BEEN BEEN PROVIDED)
         BNO   HARDERR                 NO, HARD ERROR
         SPACE 1
         CLI   IOBSENS0,DATACK         DAT CHECK ONLY
         BNE   HARDERR                 NO, HARD ERROR
         SPACE 1
         CLI   IOBSENS1,ZERO           SENSE BYTE1=0
*                                      (THIS MUST BE ZERO SINCE WE
*                                      CAN'T HANDLE.  FOR EXAMPLE,
*                                      DATA CHECK IN COUNT FIELD
*                                      WOULD SET DATA CHECK IN SENSE
*                                      BYTE 0 AND DATA CHECK IN COUNT
*                                      FIELD IN SENSE BYTE1)
         BE    SOFTERR                 YES, SOFT ERROR
         SPACE 1
HARDERR  EQU   *
         LA    GR9,X4(GR0,GR9)         BUMP RETURN ADDRESS BY 4
SOFTERR  EQU   *
         BR    GR9                     RETURN
         EJECT
*
*   THIS ROUTINE PRINTS ONE OF TWO ADDITIONAL ERROR MESSAGES
*  AND IS USED BY OTMWERR AND INMRERR
*
         SPACE 2
XTRAMSG  EQU   *
         TM    COMDCDSW,COMPRESS       COMPRESS BEING DONE
         BZ    NOTCMPRS                NO, GO AROUND
         SPACE 1
         MVC   MSGBUF+P1(L78),TEXT6    SET UP DIRECTORY INVALID
*                                        MESSAGE
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MESSAGE + LAST
         BAL   GR9,GOVMS8              ISSUE MESSAGE             A44144
         SPACE 1
         BR    GR7                     RETURN
         SPACE 1
NOTCMPRS EQU   *
         L     GR3,NXTINDS             LOAD PTR TO INDD TABLE
*                                        ENTRY
         MVC   NAMEFLD(L8),X2(GR3)     MOVE INDD NAME FOR PRINTING
         MVI   PARAMS,NAME+MSGULLD     INDIC NAME TO BE PRINTED  X010XX
*                                        AND ' COPIED ' IN MSG   X010XX
         MVI   NAMEDISP,X36            SET OFFSET FOR NAME       X010XX
         MVI   COPDISP,OFF11           DISP OF ' COPIED ' IN MSG X010XX
         MVI   MSG1,LASTMSG+PBIT       SET LAST MSG+BUILD
         MVI   MSG1+P1,NOMBCPDM        NO MEMBERS COPIED FROM INDD MSG
         BAL   GR9,GOVMS               ISSUE MSG
         SPACE 1
         BR    GR7                     RETURN
         EJECT
*
*  THIS SECTION HANDLES ERASE ERRORS
*
         SPACE 2
OTMERS   EQU   *
         BAL   GR7,XTRAMSG             GIVE NO MEMBERS COPIED MSG
         SPACE 1
         MVI   IOEF1,ERF6              INDICATE MEMBER WRITE ERROR
         B     EXIT                    GO TO EXIT ROUTINE
         EJECT
*
*     THIS ROUTINE DOES ALL MESSAGE WRITING FOR IEBIOE.  CONTROL IS
* PASSED TO IEBVMS AND RETURN IS MADE TO THE CALLER
*
         SPACE 2
GOVMS12  EQU   *                                                 A44144
         MVI   RCBUF,RC12         HIGHEST RETURN CODE            A44144
         B     GOVMS              GO WRITE MSG                   A44144
GOVMS8   EQU   *                                                 A44144
         CLI   RCBUF,RC8               RETURN CODE 8 OR HIGHER   A44144
         BNL   GOVMS                   YES, GO AROUND            A44144
         MVI   RCBUF,RC8               SET RETURN CODE = 8       A44144
GOVMS    EQU   *
         L     GR15,VIEBVMS            LOAD PTR TO VMS
         BALR  GR14,GR15               PRINT MESSAGE
         SPACE 1
         MVI   MSGBUF,BLANK            CLEAR BUFFER
         MVC   MSGBUF+P1(L120),MSGBUF
         SPACE 1
         BR    GR9                     RETURN
         EJECT
*                                                                X010XX
*   THIS SECTION HANDLES-  END OF FILE WHEN LOADING              X010XX
*                          BLOCKSIZE ERROR WHEN UNLOADING        X010XX
*                                                                X010XX
         SPACE 2
IEBIOE2  EQU   *                                                 X010XX
         ENTRY IEBIOE2                                           X010XX
         SPACE 1
*   AT THIS ENTRY POINT REGISTERS ARE NOT SAVED AS CALLER IS NOT X010XX
* RETURNED TO AND SAVING MAY RESULT IN CORRUPTION OF IEBIOE'S    X010XX
* OWN CODE BECAUSE OF THE OVERLAY STRUCTURE                      X010XX
         SPACE 1
         BALR  GR12,GR0                LOAD ADDR NEXT SEQ INSTR  X010XX
IOE00710 EQU   *                                                 X010XX
         LA    GR15,IOE00710-START                               X010XX
         SR    GR12,GR15               ESTABLISH ADDRESSABILITY  X010XX
         L     GR10,AMSG               LOAD POINTER TO MSG CSECT X010XX
         SPACE 1
         LA    GR13,SV5                ADDR OF SAVE AREA FOR     X010XX
*                                        CALLED ROUTINES         X010XX
         SPACE 1
         NI    IOEF2,FF-SNDFUSED       INDICATE NO SYNADAF USED  X010XX
         OI    IOEF2,IOEFENT           INDICATE IOE ENTERED      X010XX
         SPACE 1
         MVI   MSGBUF,BLANK            CLEAR MESSAGE BUFFER      X010XX
         MVC   MSGBUF+P1(L120),MSGBUF                            X010XX
         SPACE 1
         TM    IOEF2,VERPEST           UNLOAD BLOCKSIZE ERROR    X010XX
         BO    IOE00720                YES - SET UP APPROPR MSG  X010XX
         SPACE 1
         MVC   MSGBUF+P1(L57),TEXT9    SET UP MSG - END OF FILE  X010XX
*                                        READ ON LOAD DATA SET   X010XX
         L     GR3,NXTINDS             POINT TO INDD SLOT        X010XX
         MVC   MSGBUF+P58(L8),X2(GR3)  MOVE IN NAME LOAD DATASET X010XX
         B     IOE00770                CONTIN IN LOAD/UNLOAD     X010XX
*                                        SYNAD ROUTINE           X010XX
         SPACE 1
IOE00720 EQU   *                       SET UP FIRST PART         X010XX
         MVC   MSGBUF+P1(L78),TEXT11A  OF BLKSIZE ERROR MSG      X010XX
         L     GR3,IDEAD               PTR TO MEMBERNAME         X010XX
         MVC   MSGBUF+P45(L8),X0(GR3)  MOVE IN MEMBER NAME       X010XX
         L     GR3,NXTINDS             PTR TO INDD SLOT          X010XX
         MVC   MSGBUF+P68(L8),X2(GR3)  MOVE IN NAME INP DATASET  X010XX
         SPACE 1
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MSG+LAST        X010XX
         BAL   GR9,GOVMS               GO TO MSG WRITER          X010XX
         SPACE 2
         MVC   MSGBUF+P10(L56),TEXT11B SET UP 2ND PART OF MSG    X010XX
         SPACE 1
         L     GR3,READNEXT            OBTAIN POINTER TO         X010XX
         LA    GR3,X12(GR3)            CCHHRKDD                  X010XX
         SPACE 1
         UNPK  MSGBUF+P66(L11),X0(L6,GR3)    MAKE CCHHRKDD       X010XX
         UNPK  MSGBUF+P76(L7),X5(L4,GR3)     PRINTABLE           X010XX
         TR    MSGBUF+P66(L16),TABLE-P240                        X010XX
         MVI   MSGBUF+P82,BLANK                                  X010XX
         SPACE 1
         B     IOE00770                CONTIN IN LOAD/UNLOAD     X010XX
*                                        SYNAD ROUTINE           X010XX
         EJECT
*                                                                X010XX
*   LOAD SYNAD ROUTINE                                           X010XX
*                                                                X010XX
*   UNLOAD SYNAD ROUTINE                                         X010XX
*                                                                X010XX
         SPACE 2
IEBIOE3  EQU   *                       LOAD SYNAD ROUTINE E.P.   X010XX
         ENTRY IEBIOE3                                           X010XX
         SPACE 1
         OI    IOEF2,ENTIOE3           ENTERED THROUGH IEBIOE3   X010XX
         SPACE 1
         BALR  GR15,GR0                LOAD ADDR NEXT SEQ INSTR  X010XX
         SPACE 1
IEBIOE4  EQU   *                       UNLOAD SYNAD ROUTINE E.P. X010XX
         ENTRY IEBIOE4                                           X010XX
         USING IEBIOE4,GR15            ADDRESSABLTY FOR SYNADAF  X010XX
         SPACE 1
*   AT THIS ENTRY POINT REGISTERS ARE NOT SAVED AS CALLER IS NOT X010XX
* RETURNED TO AND SAVING MAY RESULT IN CORRUPTION OF IEBIOE'S    X010XX
* OWN CODE BECAUSE OF THE OVERLAY STRUCTURE                      X010XX
         SPACE 1
         TM    IOEF2,IOEFENT           ENTERED BEFORE            X010XX
         BO    IOE00730                YES - GO AROUND SYNADAF   X010XX
*                                      (ENTERED FOR 2ND TIME     X010XX
*                                      TRYING TO WRITE FLAGGED   X010XX
*                                      COPYR1 DESCRIPTOR RECORD) X010XX
         SPACE 1
         LA    GR13,SV5                TO AVOID CORRUPTION OF    X010XX
*                                        IEBIOE'S OWN CODE WHEN  X010XX
*                                        SYNADAF LINKS SAVAREA'S X010XX
         SPACE 1
*   THE FOLLOWING MACRO PLACES AN ERROR MESSAGE IN A DYNAMIC     X010XX
* BUFFER, OBTAINS A SAVE AREA, AND LINKS THE NEW SAVE AREA WITH  X010XX
* THE OLD ONE                                                    X010XX
         SPACE 1
         SYNADAF  ACSMETH=BSAM                                   X010XX
         SPACE 1
IOE00730 EQU   *                                                 X010XX
         SPACE 1
         DROP  GR15                                              X010XX
         BALR  GR12,GR0                LOAD ADDR NEXT SEQ INSTR  X010XX
IOE00740 EQU   *                                                 X010XX
         LA    GR15,IOE00740-START                               X010XX
         SR    GR12,GR15               ESTABLISH ADDRESSABILITY  X010XX
         L     GR10,AMSG               LOAD PTR TO MSG CSECT     X010XX
         SPACE 1
         TM    IOEF2,IOEFENT           ENTERED BEFORE            X010XX
         BO    IOE00800                YES - PREPARE EXIT TO VTM X010XX
*                                      (ENTERED FOR 2ND TIME AS  X010XX
*                                      RESULT OF ATTEMPT TO WRT  X010XX
*                                      FLAGGED COPYR1 DESCR REC) X010XX
         SPACE 1
         OI    IOEF2,SNDFUSED+IOEFENT  INDICATE SYNADAF ISSUED   X010XX
*                                        AND IOE ENTERED         X010XX
         SPACE 1
         MVI   MSGBUF,BLANK            CLEAR MESSAGE BUFFER      X010XX
         MVC   MSGBUF+P1(L120),MSGBUF                            X010XX
         SPACE 1
         TM    IOEF2,ENTIOE3           ENTERED THROUGH IEBIOE3   X010XX
         BO    IOE00750                YES - ERROR PREFIX=LOAD   X010XX
         MVC   MSGBUF+P19(L15),ULCN    ERROR PREFIX=UNLOAD       X010XX
         B     IOE00760                GO AROUND                 X010XX
IOE00750 EQU   *                                                 X010XX
         MVC   MSGBUF+P19(L13),LDCN    ERROR PREFIX=LOAD         X010XX
         NI    IOEF2,FF-ENTIOE3        RESET ENTERED THROUGH     X010XX
*                                        IEBIOE3 SWITCH          X010XX
         SPACE 1
IOE00760 EQU   *                                                 X010XX
         MVC   MSGBUF+P1(L7),IEBPRFX   SET UP MSG NUMBER         X010XX
         MVC   MSGBUF+P9(L9),TEXT5     I/O ERROR                 X010XX
         MVC   MSGBUF+P42(L78),X50(GR1) MOVE SNDF MSG TO BUFFER  X010XX
IOE00770 EQU   *                                                 X010XX
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MSG + LAST MSG  X010XX
         SPACE 1
         BAL   GR9,GOVMS8              ISSUE MESSAGE             A44144
         SPACE 1
         MVI   IOEF1,ERF3              FAKE ERROR READING MEMBER X010XX
*                                        FOR IEBVTM              X010XX
         EJECT
*                                                                X010XX
*   THIS SECTION HANDLES EXIT LINKAGE AND EITHER RETURNS CONTROL X010XX
* TO THE CALLER OR IEBVTM                                        X010XX
*                                                                X010XX
*   IN THE CASE OF A HARD ERROR DURING UNLOAD OPERATION          X010XX
* THE UNLOADED DATA SET WILL BE FLAGGED AS NOT LOADABLE          X010XX
*                                                                X010XX
         SPACE 2
EXIT     EQU   *
         SPACE 2
         TM    ULLDST,UNLOAD           UNLOAD SPECIFIED          X010XX
         BZ    IOE00800                NO - GO AROUND CODE FOR   X010XX
*                                        FLAGGING UNLOAD DATASET X010XX
         SPACE 1
IOE00785 EQU   *                       SYSUT3 READ/WRITE ERROR   X010XX
*                                        OCCURRED DURING UNLOAD  X010XX
         SPACE 1
         LA    GR2,ULOADDCB            POINTER TO DCB            X010XX
         USING IHADCB,GR2                                        X010XX
         TM    DCBOFLGS,OPEN           IS DCB OPEN               X010XX
         BZ    IOE00800                NO - GO AROUND CODE FOR   X010XX
*                                        FLAGGING UNLOAD DATASET X010XX
         SPACE 1
*                                                                X010XX
*   PREPARE FOR WRITING FLAGGED COPYR1 DESCRIPTOR RECORD BY      X010XX
* CONSECUTIVELY CLOSING AND OPENING THE UNLOAD DCB               X010XX
*                                                                X010XX
         SPACE 1
         CLOSE ((GR2),REREAD)                                    X010XX
         SPACE 1
         L     GR3,DCBEXLST            GET ADDRESS OF EXITLIST   X010XX
         LA    GR3,X0(GR0,GR3)         CLEAR HIGH ORDER BYTE     X010XX
         NI    X0(GR3),DEACT           DEACTIVATE EXITLIST ENTRY X010XX
         SPACE 1
         OPEN  ((GR2),OUTPUT)                                    X010XX
         SPACE 1
         OI    X0(GR3),ACT             ACTIVATE EXITLIST ENTRY   X010XX
         SPACE 1
         TM    DCBOFLGS,OPEN           IS DCB OPEN               X010XX
         BZ    IOE00800                NO - GO AROUND            X010XX
         SPACE 1
         L     GR3,ACOPYR1             GR3 POINTS TO COPYR1      X010XX
*                                        IMAGE IN CORE           X010XX
         SPACE 1
         OI    X8(GR3),CPR1FLAG        FLAG AS NOT LOADABLE      X010XX
         SPACE 1
         WRITE DECBIOE,SF,(GR2),(GR3)  WRITE FLAGGED COPYR1      X010XX
         SPACE 1
         CHECK DECBIOE                                           X010XX
         SPACE 1
         MVC   MSGBUF+P1(L80),TEXT10   PREP MSG UNLOAD DATASET   X010XX
         MVC   MSGBUF+P40(L8),OUTNAME  FLAGGED AS NOT LOADABLE   X010XX
         MVI   MSG1,IOERF+LASTMSG      SET SYNAD MSG + LAST MSG  X010XX
         SPACE 1
         BAL   GR9,GOVMS               ISSUE MESSAGE             X010XX
         SPACE 2
IOE00800 EQU   *                                                 X010XX
         SPACE 2
         MVI   VTMFLG1,IOERROR         SET IOERROR               X010XX
         OI    FLG7,SUPPRMSG+NOPRNBDB  SET INDICATORS TO SUPPRESS
*                                         PRINTING OF MEMBER NAMES
*                                         AND UNUSED DIRECTORY BLOCK
*                                         MESSAGES BY IEBVTM
         TM    IOEF1,ERF5              OUTPUT DIRECTORY WRITE ERROR
         BZ    NOTODBER                NO, GO AROUND
         SPACE 1
         NI    FLG7,FF-NOPRNBDB        TURN OFF DON'T PRINT UNUSED
*                                         DIRECTORY BLOCKS MSG
         SPACE 1
NOTODBER EQU   *
         BAL   GR9,SYNADRLS            RELEASE CORE
         NI    IOEF2,FF-IOEFENT        RESET IOE ENTERED FLAG    X010XX
         L     GR15,VIEBVTM            LOAD POINTER TO VTM
         BALR  GR14,GR15               GO TO VTM  (NO RETURN)
         SPACE 4
IGNORE   EQU   *
         BAL   GR9,SYNADRLS            RELEASE CORE
         NI    IOEF2,FF-IOEFENT        RESET IOE ENTERED FLAG    X010XX
         RETURN (14,12)                RETURN TO CALLER
         SPACE 4
*                                      RELEASE CORE OBTAINED BY
SYNADRLS EQU   *                         SYNADAF AND REST GR13   X010XX
         TM    IOEF2,SNDFUSED          WAS SYNADAF ISSUED        X010XX
         BCR   MASK8,GR9               NO - RETURN               X010XX
         SYNADRLS                                                X010XX
         NI    IOEF2,FF-SNDFUSED       RESET SYNADAF USED FLAG   X010XX
         BR    GR9                     RETURN
         EJECT
FIRSTNAM EQU   10                      OFFSET IN BUFFER TO FIRST
*                                         ENTRY IN BLOCK
OFF11    EQU   11                      DISP OF ' COPIED ' IN MSG X010XX
X36      EQU   X'36'                   DISP OF NAME IN MSG       X010XX
DATACK   EQU   X'08'                   DATA CHECK SENSE BIT
UCHECK   EQU   X'02'                   UNIT CHECK BIT IN CSW
PERMIO   EQU   X'41'                   ECB POST CODE - CSW OK
RC4      EQU   C'4'
RC8      EQU   C'8'                                              A44144
RC12     EQU   X'FC'                                             A44144
BLANK    EQU   C' '
OKCODE   EQU   X'7F'
SV3TAB   EQU   64
ZERO     EQU   0
FF       EQU   X'FF'
SIDEQMT  EQU   X'B1'
SIDEQ    EQU   X'31'
WKD      EQU   X'0D'
RKD      EQU   X'0E'
MASK1F   EQU   X'1F'
MASK8    EQU   8                       MASK IN BCR INSTR         X010XX
CPR1FLAG EQU   X'80'                   TO FLG COPYR1 NOT LOADBLE X010XX
DEACT    EQU   X'80'                   TO DEACTIV EXITLIST ENTRY X010XX
ACT      EQU   X'05'                   TO ACTIV EXITLIST ENTRY   X010XX
OPEN     EQU   X'10'                   FOR TESTING DCBOFLGS      X010XX
TABLE    DC    C'0123456789ABCDEF'     TRANSLATE TABLE
TWOPCIS  DC    H'2'                    USED TO COMPARE THE NUMBER OF
*                                        PCI'S TAKEN
AMSG     DC    A(IEBIOEMG)             PTR TO MSG CSECT
ERRIOB   EQU   *
         DC    X'42'                    E
         DC    AL3(0)                    R
         DC    A(ERRECB)                I R
         DC    6F'0'                     O O
ERRSEEK  DC    2F'0'                      B R
MCAADDR  DC    AL4(0)                   POINTER TO COMMON AREA @YA02574
ERRECB   DC    F'0'                     ERROR ECB
         DS    0D
CCWS     EQU   *
         CCW   X'31',ERRSEEK+3,X'40',5
         CCW   X'08',CCWS,X'40',1
RDWRT    CCW   X'0E',0,X'00',264
PATCHLN  EQU   (*-IEBIOE)/20           5 PERCENT PATCH AREA LENGTH
PATCH    DC    XL(PATCHLN)'00'          PATCH AREA               A41780
         EJECT
*   THE FOLLOWING EQUATES ARE USED TO REFER TO SYMBOLIC ADDRESS PLUS
* A CONSTANT
P1       EQU   1
P8       EQU   8
P9       EQU   9
P10      EQU   10
P17      EQU   17
P18      EQU   18
P19      EQU   19
P20      EQU   20
P35      EQU   35
P40      EQU   40
P42      EQU   42
P45      EQU   45                                                X010XX
P47      EQU   47
P53      EQU   53
P54      EQU   54
P58      EQU   58                                                X010XX
P66      EQU   66                                                X010XX
P68      EQU   68                                                X010XX
P70      EQU   70
P76      EQU   76                                                X010XX
P82      EQU   82                                                X010XX
P240     EQU   240
         EJECT
*   THE FOLLOWING EQUATES ARE USED IN INSTRUCTIONS REQUIRING LENGTH
* SPECIFICATIONS SUCH AS MVC
L2       EQU   2
L3       EQU   3
L4       EQU   4
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L11      EQU   11                                                X010XX
L13      EQU   13
L14      EQU   14
L15      EQU   15                                                X010XX
L16      EQU   16
L17      EQU   17                                                X010XX
L21      EQU   21
L22      EQU   22
L24      EQU   24
L29      EQU   29
L37      EQU   37
L52      EQU   52                                                X010XX
L56      EQU   56                                                X010XX
L57      EQU   57                                                X010XX
L59      EQU   59
L78      EQU   78
L80      EQU   80                                                X010XX
L120     EQU   120
         EJECT
*   THE FOLLOWING EQUATES ARE USED FOR OFFSETS WITH REGISTER NOTATION
X0       EQU   0
X1       EQU   1
X2       EQU   2
X4       EQU   4
X5       EQU   5                                                 X010XX
X8       EQU   8
X10      EQU   10
X11      EQU   11
X12      EQU   12
X50      EQU   50
         EJECT
IEBIOEMG CSECT
*  THE FOLLOWING IS MESSAGE TEXT FOR ERROR MESSAGES ISSUED BY IEBIOE
ERSCON   DC    C'DURING ERASE -'
RBCN     DC    C'DURING READBACK CHECK-'
RCN      DC    C'DURING READ -'
WCN      DC    C'DURING WRITE -'
LDCN     DC    C'DURING LOAD -'                                  X010XX
ULCN     DC    C'DURING UNLOAD -'                                X010XX
SUFFIX   DC    C'DUE TO '
TEXT5    DC    C'I/O ERROR '
TEXT2    DC    C'WRITING '
TEXT7    DC    C'MEMBER DATA AT TTR='
TEXT1    DC    C'READING'
TEXT8    DC    C'-(READ BACK CHECKING)'
TEXT3    DC    C'MEMBER ******** NOT PROCESSED'
TEXT4    DC    C'MEMBERS XXXXXXXX THROUGH END OF DATA'
         DC    C' SET ARE NOT ACCESSIBLE'
TEXT9    DC    C'IEB183I  END OF FILE READ ON LOAD DATA SET '    X010XX
         DC    C'REFERENCED BY '                                 X010XX
TEXT10   DC    C'IEB182I  UNLOAD DATA SET REFERENCED BY'         X010XX
         DC    C'          HAS BEEN FLAGGED AS NOT LOADABLE'     X010XX
TEXT11A  DC    C'IEB184I  MEMBER DATA RECORD READ FOR MEMBER'    X010XX
         DC    C'          REFERENCED BY          IS'            X010XX
TEXT11B  DC    C'LONGER THAN DATA SET BLOCKSIZE '                X010XX
         DC    C'PLUS KEYLENGTH, CCHHRKDD='                      X010XX
NUMB0    DC    C'IEB100I'
NUMB1    DC    C'IEB101I'
NUMB2    DC    C'IEB102I'
NUMB3    DC    C'IEB103I'
IEBPRFX  DC    C'IEB139I'              SYNADAF MESSAGE NUMBER
TEXT6    DC    C'IEB171I  ** WARNING ** DIRECTORY MAY NOT '
         DC    C'REFLECT VALID LOCATION OF MEMBER DATA'
ASTERICS DC    C'********'
         EJECT
IECDSECT DSECT
         IECDSECT
         EJECT
IEBMCA   DSECT
         IEBMCA
         EJECT
         DCBD  DSORG=PO                                          X010XX
         END
