RBDB     TITLE 'REBLOCK/DEBLOCK ROUTINE- IEBDRB'
IEBDRB   CSECT
*C713600                                                         A41780
* 110000,112000,260000,262000,488000,490000                      X010XX
*C051960,656100                                                  A44144
*A655900-656000,656600                                           A44144
**********************************************************************
         SPACE 1
*TITLE- IEBDSCPY REBLOCK/DEBLOCK ROUTINE                              *
*                                                                     *
*STATUS- CHANGE LEVEL 001                                             *
*                                                                     *
*FUNCTION/OPERATION-  THIS MODULE BLOCKS OR UNBLOCKS INPUT DATA FROM  *
*        THE INPUT BUFFER INTO THE OUTPUT BUFFER. FIXED OR VARIABLE   *
*        FORMAT RECORDS ARE HANDLED. READS AND WRITES ARE ISSUED BY   *
*        THIS MODULE AND PROCESSING CONTINUES WITHIN THIS MODULE      *
*        UNTIL AN END OF FILE IS READ AND WRITTEN.                    *
*                                                                     *
*ENTRY POINT- ENTERED AT IEBDRB                                       *
*                                                                     *
*INPUT- THE MEMBERS OF THE CURRENT INPUT DATA SET.                    *
*                                                                     *
*OUTPUT- THE OUTPUT DATA SET.                                         *
*                                                                     *
*EXITS- NORMAL RETURN GIVEN TO CALLER. ERROR RESULTS IN A MESSAGE     *
*        BEING GIVEN AND A CONDITION CODE SET.                        *
*                                                                     *
*EXTERNAL ROUTINES- READ, WRITE, MESSAGE WRITER, CONVERT ROUTINE.     *
*                                                                     *
*ATTRIBUTES- SERIAL REUSABLE.                                         *
*                                                                     *
         SPACE 1
*                                                                     *
*               SYMBOLIC REGISTERS FOR DEBLOCK ROUTINE                *
*                                                                     *
*          BASE ADDRESS REGISTER 12, COMMON AREA REGISTER 4           *
*                                                                     *
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4             COMMON AREA POINTER
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12            BASE REGISTER
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
FF       EQU   X'FF'
ZERO     EQU   X'00'
SAV4     EQU   4                  DISPLACEMENT OF 4
SAV8     EQU   8                  DISPLACEMENT OF 8
DISP0    EQU   0                  DISPLACEMENT OF 0
DISP10   EQU   10                 DISPLACEMENT OF 10
LEN2     EQU   2                  LENGTH OF 2
DISP12   EQU   12                 DISPLACEMENT OF 12
LEN4     EQU   4                  LENGTH OF 4
LEN8     EQU   8                  LENGTH OF 8
MS8      EQU   8                  MASK OF 8
LEN256   EQU   256                LENGTH OF 256
LEN255   EQU   255                LENGTH OF 255
MS7      EQU   7                  MASK OF 7
DISP1    EQU   1                  DISPLACEMENT OF 1
LEN3     EQU   3                  LENGTH OF 3
KEYLTH   EQU   X'00'              ZERO KEY LENGTH
DISP9    EQU   9                  DISPLACEMENT OF 9
DISP16   EQU   16                 DISPLACEMENT OF 16
DISP14   EQU   14                 DISPLACEMENT OF 14
RTCDE    EQU   C'8'               RETURN CODE                    A44144
         EJECT
         USING START,GR12
         USING IEBMCA,GR4
         SAVE  (14,12),,*
         SPACE 1
         BALR  GR12,GR0           ESTABLISH ADDRESSIBILITY
START    EQU   *
         ST    GR13,SV2+SAV4      POINTER TO OLD SAVE AREA IN NEW
         LA    GR15,SV2
         ST    GR15,SAV8(GR13)    POINTER TO NEW SAVE AREA IN OLD
         LR    GR13,GR15               POINTER TO NEW SAVE AREA
*
*   GR5    POINTER TO BEGINNING OF INPUT BLOCK
*   GR6    POINTER TO BEGINNING OF LOGICAL INPUT RECORD
*   GR7    POINTER TO BEGINNING OF OUTPUT BLOCK
*   GR8    POINTER TO BEGINNING OF LOGICAL OUTPUT RECORD
*
         OI    FLG1,STOPEND1           SET TO READ INTO FIRST
*                                         BUFFER ONLY
         NI    STATUS,STAT5            RESET ALL PUT NEW OUTPUT DS
         OI    STATUS,STAT4            SET READING MEMBER SWITCH
         MVI   SENSE,ZERO         RESET INDICATORS
         NI    TAG,TAG5+TAG6
         NI    FLG2,FF-FSTWRT-RDEOF
         OI    TAG,TAG2                SET WRITING MEMBER SWITCH
         L     GR5,BCB
         LA    GR5,DISP0(GR5)     GET POINTER TO FIRST BUFFER
         ST    GR5,READNEXT            SET AS WHERE TO READ
         BAL   GR1,DRB00100       GO LINK TO READ ROUTINES       X010XX
         L     GR7,BEGFST2        START OF OUTPUT BUFFER
         L     GR8,END2ND2             END OF OUTPUT BUFFER
         STM   GR7,GR8,STARTOUT        STORE STARTAND END OF BUFFER
         ST    GR7,WRTNEXT             WHERE TO WRITE FROM (2ND BUFFER)
         ST    GR7,LASTRECX            ADDRESS OF LAST RECORD PROCESSED
         CLC   DISP10(LEN2,GR5),ZROS   NEXT RECORD AN EOF
         BE    FRSTEOF                 YES- STOP
         MVI   DISP0(GR7),ZERO    CLEAR FLAG FIELD
         TM    FORM,FORM1              INPUT VARIABLE
         BO    VARIAB             YES, GO PROCESS VARIABLE RECS
         LA    GR6,DISP12(GR5)    UPDATE INPUT POINTER OVER COUNT
         MVC   WKLNG(LEN2),DISP10(GR5) SIZE OF RECORD LAST MAY BE SHORT
         LH    GR1,INLRECL             LOGICAL RECORD LENGTH INPUT
         LH    GR3,WKLNG               DATA LENGTH
         LPR   GR3,GR3                 MAKE POSITIVE
         LPR   GR1,GR1                 MAKE POSITIVE
         SR    GR2,GR2
         DR    GR2,GR1                 GET BLOCKING FACTOR LAST RECORD
         STH   GR3,INBLKNO             STORE BLOCK COUNT
BFREMPTY EQU   *
         L     GR7,STARTOUT            START OF OUTPUT BUFFER
         LA    GR8,DISP12(GR7)    START OF OUTPUT IN SECOND BUFFER
         SPACE 1
BEGIN    EQU   *
         LH    GR1,OBLKFAC             OUTPUT BLOCKING FACTOR
         STH   GR1,OBLKNO              STORE IN WORK AREA
         XC    BYTEMV(LEN2),BYTEMV
         LH    GR11,OBLKSIZE      OUTPUT BLOCKSIZE
         AR    GR11,GR8           ADD TO START OF NEXT REC TO BE BUILT
         C     GR11,ENDOUT        ENUF ROOM IN BFR TO BUILD THIS RECORD
         BNH   TRANS                   YES, GO BUILD IT
         L     GR14,LASTRECX           LAST RECORD BUILT
         MVI   DISP0(GR14),LASTREC+ENDPROC NO,SET FLAGS IN BUFFER FOR
         LA    GR9,BFREMPTY            RETURN FROM WRITE
         SPACE 1
*                                                                     *
*                   GENERAL WRITE CALL                                *
*                                                                     *
WRITES   EQU   *
         MVC   READNEXT(LEN4),WRTNEXT  SET POINTER TO OUTPUT
         L     GR15,VIEBVWS            ADDRESS OF WRITE SETUP ROUTINE
         BALR  GR14,GR15               ENTER WRITE SETUP ROUTINE
         MVC   READNEXT(LEN4),BCB  SET POINTER TO FIRST BUFFER
         BR    GR9                     RETURN FROM WRITE
DRB00100 TM    ULLDST,LOAD        ON LOAD                        X010XX
         BO    DRB00110           DONT USE VIEBDRD               X010XX
         L     GR15,VIEBDRD       ADDR OF READ ROUTINE           X010XX
         B     DRB00120           READ EXCP                      X010XX
DRB00110 L     GR15,VRSAM1        READ SEQUENTIAL                X010XX
DRB00120 BALR  GR14,GR15          CALL READ                      X010XX
         BR    GR1                RETURN                         X010XX
         SPACE 1
TRANS    EQU   *
         LH    GR9,INLRECL             GET INPUT LRECL SIZE
         LPR   GR9,GR9            ASSURE POSITIVE SIGN
         LA    GR2,BYTEMV
         LA    GR14,MOVED              RETURN FROM MOVING DATA
         SPACE 1
MOVEM    EQU   *
         LR    GR10,GR9                LRECL
         AH    GR9,DISP0(GR2)     ADD BYTEMV OR LLOUT
         LR    GR1,GR10                SAVE LRECL
         STH   GR9,DISP0(GR2)     STORE COUNT
         SRL   GR10,LEN8          DIVIDE LRECL BY 256
         LTR   GR10,GR10
         BC    MS8,MOVE1          LESS THAN 256- DO IN ONE MOVE
         SPACE 1
MOVE256  EQU   *
         MVC   DISP0(LEN256,GR8),DISP0(GR6)  MOVE 256 BYTES
         LA    GR8,LEN256(GR8)    UP LOGICAL OUTPUT POINTER BY 256
         LA    GR6,LEN256(GR6)    UP LOGICAL INPUT POINTER BY 256
         BCT   GR10,MOVE256            MORE BLOCKS OF 256 BYTES TO MOVE
         SPACE 1
MOVE1    EQU   *
         LA    GR15,LEN255        LOAD MASK
         NR    GR1,GR15                ZERO HIGH ORDER THREE BYTES
         LR    GR10,GR1                SAVE LRECL OR RESIDUAL LENGTH
         LTR   GR1,GR1                 ZERO
         BZ    AROUND                  YES, GO AROUND
         BCTR  GR1,GR0            DECREMENT FOR 'EX'
         EX    GR1,MOVE                MOVE LAST OR ONLY RECORD
AROUND   EQU   *
         AR    GR8,GR10                UP OUTPUT BUFFER POINTER
         AR    GR6,GR10                UP INPUT  BUFFER POINTER
         BR    GR14                    RETURN
         SPACE 1
MOVED    EQU   *
         LH    GR3,INBLKNO             BLOCK FACTOR INPUT
         BCTR  GR3,GR0            SUBTRACT ONE
         LTR   GR3,GR3                 MOVED ALL BLOCKS
         BC    MS7,STORBLK        NO- NOT ZERO- CONTINUE
         TM    DISP0(GR5),ENDPROC LAST RECORD IN INPUT BUFFER
         BZ    DOMORE             NO- CONTINUE
         MVC   READNEXT+DISP1(LEN3),BCB+DISP1  POINT TO START OF BUFFER
         BAL   GR1,DRB00100       GO LINK TO READ ROUTINES       X010XX
         L     GR5,READNEXT            START OF INPUT
         B     SETS               GO CHECK FOR NEXT RECORD BEING EOF
         SPACE 1
DOMORE   EQU   *
         LR    GR5,GR6                 NEXT INPUT BLOCK
         SPACE 1
SETS     EQU   *
         CLC   DISP10(LEN2,GR5),ZROS   NEXT RECORD AN EOF
         BE    PROEOD                  YES- STOP
         MVC   WKLNG(LEN2),DISP10(GR5) SIZE OF RECORD LAST MAYBE SHORT
         LH    GR1,INLRECL             LOGICAL RECORD LENGTH INPUT
         LPR   GR1,GR1                 MAKE POSITIVE
         LH    GR3,WKLNG               DATA LENGTH
         LPR   GR3,GR3                 MAKE POSITIVE
         SR    GR2,GR2
         DR    GR2,GR1                 GET BLOCKING FACTOR LAST RECORD
         LA    GR6,DISP12(GR5)    POINT TO 1ST RECORD IN NET INPUT BLK
         SPACE 1
STORBLK  EQU   *
         STH   GR3,INBLKNO
         LH    GR2,OBLKNO
         BCTR  GR2,GR0            DECREMENT OUTPUT BLOCK NUMBER
         STH   GR2,OBLKNO         SAVE DECREMENTED OUTPUT BLOCK COUNT
         LTR   GR2,GR2                 BLOCK COUNT ZERO
         BC    MS7,TRANS          NO- CONTINUE BLOCKING
         MVC   DISP10(LEN2,GR7),OBLKSIZE SET DATA LENGTH IN COUNT FIELD
         MVI   DISP9(GR7),KEYLTH       MAKE KEY LENGTH ZERO
         ST    GR7,LASTRECX            LAST RECORD PROCESSED
         MVI   DISP0(GR7),ZERO         CLEAR FLAG FIELD
         LR    GR7,GR8                 POINT TO NEXT RECORD SLOT
         LA    GR8,DISP12(GR8)         POINT TO DATA
         B     BEGIN                   CONTINUE
         SPACE 1
PROEOD   EQU   *
         MVC   DISP10(LEN2,GR7),BYTEMV BYTES IN LAST BLOCK
ENDPROC1 EQU   *
         MVI   DISP9(GR7),KEYLTH  CLEAR KEY FIELD
         MVI   DISP0(GR7),ZERO         CLEAR FLAG FIELD
         LA    GR9,DISP12(GR8)    SIZE OF FLAG + COUNT OF EOF REC
         SR    GR10,GR10
         IC    GR10,DISP9(GR5)    EOF KEY SIZE IF ANY
         AR    GR9,GR10                TOTAL LENGTH EOF RECORD
         C     GR9,ENDOUT              EXCEED BUFFER
         BNH   BLDEOF                  NO, GO BUILD IT
         MVI   DISP0(GR7),LASTREC+ENDPROC SET LAST REC-LAST BUFFER SW
         BAL   GR9,WRITES              WRITE THE BUFFER
FRSTEOF  EQU   *
         L     GR8,STARTOUT            START OF BUFFER
         SPACE 1
BLDEOF   EQU   *
         MVI   DISP0(GR8),LASTREC+ENDPROC SET LAST REC- LAST BUFFER
         SR    GR10,GR10
         IC    GR10,DISP9(GR5)    EOF KEY SIZE IF ANY
         LA    GR1,LEN3           KL + DL COUNT FIELD
         AR    GR1,GR10                TOTAL LENGTH EOF RECORD
         LA    GR6,DISP9(GR5)     FROM ADDRESS
         LA    GR8,DISP9(GR8)     TARGET ADDRESS
         BCTR  GR1,GR0            DECREMENT FOR 'EX'
         EX    GR1,MOVE                MOVE EOF RECORD KL+DL+KEY IF ANY
         BAL   GR9,WRITES              WRITE THE BUFFER
         SPACE 1
RETRNS   EQU   *
         L     GR13,SV2+SAV4
         NI    FLG1,FF-STOPEND1        TURN OFF STOP AFTER FIRST
*                                         BUFFER SWITCH
         RETURN  (14,12)
         SPACE 1
         EJECT
*                                                                     *
*              VARIABLE LENGTH RECORD PROCESSING                      *
*                                                                     *
         SPACE 1
VARIAB   EQU   *
         MVC   LLIN(LEN2),DISP12(GR5)  SAVE TOTAL RECORD SIZE LLBB
         LH    GR2,LLIN
         LA    GR1,LEN4
         SR    GR2,GR1
         STH   GR2,LLIN                SUBTRACT 4 FOR TOTAL LLBB
         LA    GR6,DISP16(GR5)    ALLOW FOR LLBB AND LITTLE LLBB
VARNOBLK EQU   *
         MVI   DISP0(GR7),KEYLTH  CLEAR FLAG FIELD
         MVC   OUTBLKSI(LEN2),OBLKSIZE  SAVE OUTPUT BLOCKSIZE
         XC    LLOUT(LEN2),LLOUT  CLEAR OUTPUT BLOCK COUNT
         LH    GR2,OUTBLKSI
         LA    GR1,LEN4
         SR    GR2,GR1
         STH   GR2,OUTBLKSI            ALLOW FOR 4 BYTE LLBB
         LA    GR8,DISP16(GR7)    POINT TO DATA
         SPACE 1
OUTNOBLK EQU   *
         MVC   WKLNG(LEN2),DISP0(GR6)  MOVE IN INPUT LENGTH- SMALL LLBB
         CLC   WKLNG(LEN2),OBLKSIZE    INPUT DATA LEN VS OUTPUT BLKSIZE
         BH    ERROR6                  YES- ERROR
         LH    GR9,WKLNG               LRECL
         LA    GR2,LLOUT               BYTES MOVED
         BAL   GR14,MOVEM              MOVE RECORD
         LH    GR2,LLIN                TOTAL RECORD SIZE
         SH    GR2,WKLNG               REDUCE BY AMOUNT JUST MOVED
         LTR   GR2,GR2                 ZERO
         BC    MS7,DOMOREV        NO- MORE TO BLOCK
         TM    DISP0(GR5),ENDPROC  LAST RECORD IN BUFFER
         BZ    CONTMORE            NO- CONTINUE
         BAL   GR1,DRB00100       GO LINK TO READ ROUTINES       X010XX
         L     GR5,READNEXT            START OF INPUT
         B     SETSV                   CONTINUE
         SPACE 1
CONTMORE EQU   *
         LR    GR5,GR6                 NEXT INPUT BLOCK
SETSV    EQU   *
         MVC   LLIN(LEN2),DISP10(GR5)  MOVE IN LRECL
         CLC   DISP10(LEN2,GR5),ZROS   NEXT RECORD AN EOF
         BE    EODPROC                 YES
         LA    GR6,DISP16(GR5)    SPACE OVER BIG LLBB
         LH    GR2,LLIN
         LA    GR1,LEN4
         SR    GR2,GR1                 ALLOW FOR BIG LLBB SIZE
         SPACE 1
DOMOREV  EQU   *
         STH   GR2,LLIN                REMAINING BLOCKS
         LH    GR3,OUTBLKSI            OUTPUT BLOCK SIZE
         SH    GR3,WKLNG          LENGTH USED
         STH   GR3,OUTBLKSI            REMAINING
         MVC   WKLNG(LEN2),DISP0(GR6)  MOVE IN LLBB
         TM    FORM,FORM3              OUTPUT BLOCKED
         BZ    TAB2                    NO
         LH    GR15,OUTBLKSI
         CH    GR15,WKLNG         AMOUNT MOVED EQUAL BLOCKSIZE
         BNL   OUTNOBLK                NO- CONTINUE
TAB2     EQU   *
         LH    GR3,LLOUT
         LA    GR3,LEN4(GR3)      ALLOW FOR LLBB IN SIZE
         STH   GR3,LLOUT
         MVC   DISP12(LEN2,GR7),LLOUT  STORE NEW LL
         XC    DISP14(LEN2,GR7),DISP14(GR7)  CLEAR BB FIELD
         MVC   DISP10(LEN2,GR7),LLOUT  STORE NEW DATA LENGTH
         MVI   DISP9(GR7),KEYLTH  CLEAR COUNT OF KEY LENGTH
         MVI   DISP0(GR7),KEYLTH  CLEAR FLAG FIELD
         LA    GR1,DISP12(GR8)
         AH    GR1,OBLKSIZE            SIZE OF NEXT RECORD
         C     GR1,ENDOUT              EXCEED BUFFER
         BNH   MOREIN                  NO, KEEP BUILDING BLOCKS
         MVI   DISP0(GR7),LASTREC+ENDPROC SET FOR LAST RECORD-LAST BUF
         BAL   GR9,WRITES              WRITE THE BUFFER
         L     GR8,STARTOUT            START OF BUFFER
         SPACE 1
MOREIN   EQU   *
         LR    GR7,GR8
         LH    GR15,OUTBLKSI
         LA    GR1,LEN4
         SR    GR15,GR1                ALLOW FOR BIG LLBB
         STH   GR15,OUTBLKSI
         LA    GR8,DISP16(GR7)    UP BEYOND BIG LLBB
         B     VARNOBLK                START AGAIN
         SPACE 1
ERROR6   EQU   *
         LA    GR2,INVALRBC            INVALID REBLOCK MESSAGE
GIVEMESS EQU   *
         CLI   RCBUF,RTCDE        IS RETURN CODE 8 OR HIGHER     A44144
         BNL   DONTSET            YES- DON'T SET                 A44144
         MVI   RCBUF,RTCDE        SET RETURN CODE = 8            A44144
DONTSET  EQU *                                                   A44144
         STH   GR2,MSGLIST
         MVI   MSGLIST,LASTMSG         SET LAST MESSAGE
         L     GR15,VIEBVMS            MESSAGE WRITER ADDRESS
         BALR  GR14,GR15               GIVE MESSAGE- NO RETURN
         SPACE 1
         MVI   VTMFLG1,UNUSEND         SET SWITCH FOR VTM
         L     GR15,VIEBVTM            LOAD PTR TO VTM
         BALR  GR14,GR15               GO TO VTM  (NO RETURN)
         SPACE 1
EODPROC  EQU   *
         LH    GR1,LLOUT
         LA    GR1,LEN4(GR1)
         STH   GR1,LLOUT
         MVC   DISP12(LEN2,GR7),LLOUT  MOVE RECORD SIZE TO LL FIELD
         XC    DISP14(LEN2,GR7),DISP14(GR7) CLEAR BB FIELD
         MVC   DISP10(LEN2,GR7),LLOUT  SET RECORD SIZE IN COUNT FIELD
         B     ENDPROC1                SET UP EOF
         SPACE 1
STARTOUT DS    F                       START OF BLOCKED OUTPUT
ENDOUT   DS    F                       END OF BLOCKED OUTPUT
LASTRECX DS    F                       ADDRESS OF LAST RECORD PROCESSED
MOVE     MVC   DISP0(DISP1,GR8),DISP0(GR6) MOVE INPUT TO OUTPUT
INBLKNO  DS    H                       INPUT BLOCKING FACTOR
OBLKNO   DS    H                       OUTPUT BLOCKING FACTOR
OUTBLKSI DS    H                  OUTPUT BLOCKSIZE
BYTEMV   DS    H                       BYTE COUNT
LLIN     DS    H                       PSEUDO LRECL- VARIABLE RECORDS
LLOUT    DS    H                       TOTAL OUTPUT DATA
WKLNG    DS    H                  INPUT DATA LENGTH
         SPACE 1
         DS    0F
PATCHLN  EQU   (*-START)/20            PATCH AREA  SIZE 5 PER CENT
PATCH    DC    XL(PATCHLN)'00'         START OF PATCH AREA       A41780
         EJECT
IEBMCA   DSECT
         IEBMCA
         END
