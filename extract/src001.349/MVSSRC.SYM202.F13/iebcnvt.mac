CNVT     TITLE 'IEBCOPY TTR / MBBCCHHR CONVERT ROUTINE - IEBCNVT'
IEBCNVT  CSECT
         SPACE 2
****************************************************************
*                                                              *
* TITLE - IEBCOPY LOAD TTR / MBBCCHHR CONVERSION ROUTINE.      *
*                                                              *
* STATUS - CHANGE LEVEL 003.                                   *
*                                                              *
* FUNCTION - CONVERT RELATIVE DISK ADDRESSES OF THE FORM TTR0  *
*            TO FULL DISK ADDRESS MBBCCHHR OR VISE VERSA FOR   *
*            PDS'S THAT ARE BEING LOADED ONLY.                 *
*                                                              *
* ENTRY POINTS - THIS MODULE HAS TWO ENTRY POINTS WHICH ARE    *
*                IEBCNVT AND IEBCNVT1.                         *
*                                                              *
* **** ENTRY POINT IEBCNVT - TTR0 TO MBBCCHHR CONVERSION ***** *
*                                                              *
* INPUT - REGISTER 0 CONTAINS TTR0 TO BE CONVERTED.            *
*         REGISTER 1 CONTAINS ADDRESS OF ORIGINAL UNLOADED     *
*                    DEB.                                      *
*         REGISTER 2 CONTAINS ADDRESS OF AN 8 BYTE AREA FOR    *
*                    THE RESULTANT MBBCCHHR.                   *
*                                                              *
* OUTPUT - MBBCCHHR IN AREA POINTED TO BY REGISTER 2 ON INPUT. *
*                                                              *
* ************************************************************ *
*                                                              *
* **** ENTRY POINT IEBCNVT1 - MBBCCHHR TO TTR0 CONVERSION **** *
*                                                              *
* INPUT - REGISTER 1 CONTAINS ADDRESS OF ORIGINAL UNLOADED     *
*                    DEB.                                      *
*         REGISTER 2 CONTAINS ADDRESS OF AN 8 BYTE AREA        *
*                    CONTAINING THE MBBCCHHR TO BE CONVERTED.  *
*                                                              *
* OUTPUT - REGISTER 0 CONTAINS THE RESULTANT TTR0.             *
*                                                              *
* ************************************************************ *
*                                                              *
* EXTERNAL REFERENCES - NONE.                                  *
*                                                              *
* EXITS NORMAL - RETURN TO CALLER WITH A RETURN CODE OF 0 IN   *
*                REGISTER 15.                                  *
*                                                              *
* EXITS ERROR - RETURN TO CALLER WITH A RETURN CODE OF 4 IN    *
*               REGISTER 15.                                   *
*                                                              *
* TABLES/WORK AREAS - 'DEVTAB' DSECT (DEVTYPE MAPPING).        *
*                   - 'MBBCCHHR' DSECT (MBBCCHHR MAPPING).     *
*                   - 'IECDSECT' DSECT (DEB MAPPING).          *
*                                                              *
* ATTRIBUTES - SERIAL REUSABLE.                                *
*                                                              *
* CHARACTER CODE DEPENDENCY - NONE.                            *
*                                                              *
* NOTES - STANDARD LINKAGE IS DONE, BUT NO NEW SAVE AREA       *
*          IS PROVIDED SINCE NO EXTERNAL CALL'S ARE MADE.      *
*                                                              *
****************************************************************
         EJECT
* THE FOLLOWING ARE REGISTER EQUATES
         SPACE 1
RGTTR    EQU   0                  TTR PARAMETER REGISTER
RGDEB    EQU   1                  INPUT DEB POINTER REGISTER
RGMBB    EQU   2                  POINTER TO MBBCCHHR AREA
RGBASE   EQU   8                  BASE REGISTER
RGV      EQU   9                  WORK REGISTER
RGW      EQU   10                 WORK REGISTER
RGX      EQU   11                 WORK REGISTER
RGY      EQU   12                 WORK REGISTER
RGZ      EQU   13                 SAVE AREA POINTER REGISTER
RGRCD    EQU   15                 RETURN CODE REGISTER
         SPACE 1
****************************************************************
         SPACE 1
* THE FOLLOWING ARE EQUATES FOR SYMBOLIC CONSTANT REFERENCE
         SPACE 1
C1       EQU   1                  GENERAL CONSTANT OF 1
         SPACE 1
SAV20    EQU   20                 SAVE AREA DISPLACEMENT TO
*                                  SAVED CONTENTS OF REGISTER 0
         SPACE 1
ONEBYTE  EQU   8                  LENGTH IN BITS OF ONE BYTE
         SPACE 1
LENBCH   EQU   6                  LENGTH OF BBCCHH
LENXTN   EQU   16                 LENGTH OF DA DEB EXTENT
         SPACE 1
RC4      EQU   4                  A RETURN CODE OF 4
         SPACE 1
DEVBUMP  EQU   16                 OFFSET FOR DEVTYPE POINTER
*                                  ADJUSTMENT
****************************************************************
         EJECT
         SAVE  (14,12),,*         SAVE REGISTERS
         SPACE 1
CNVT0000 EQU   *
         BALR  RGBASE,0           ESTABLISH ADDRESSABILITY
         USING *,RGBASE
         SPACE 1
         USING DXDEB,RGDEB        DEB DSECT ADDRESSABILITY
         USING MBBCCHHR,RGMBB     MBBCCHHR DSECT ADDRESSABILITY
         SPACE 1
         SR    RGRCD,RGRCD        ZERO RETURN CODE REGISTER
         SR    RGV,RGV            CLEAR WORK REGISTER
         IC    RGV,DXDEBUSR       LOAD NUMBER OF EXTENTS
         LR    RGW,RGV            LOAD LIMIT FOR LOOP CONTROL
         SRL   RGTTR,ONEBYTE      SHIFT OUT N OF TTRN
         STC   RGTTR,R            STORE R OF MBBCCHHR
         SRL   RGTTR,ONEBYTE      SHIFT OUT R OF TTRN - TT IS
*                                  NOW IN LOW ORDER 2 BYTES
*                                  OF REGISTER
CNVT0020 EQU   *
         SH    RGTTR,DXDEBNTR     DECREASE TT BY NUMBER OF
*                                  TRACKS IN CURRENT EXTENT
*                                  DESCRIPTION
         BM    CNVT0040           IF THE RESULT OF THE ABOVE
*                                  SUBTRACTION IS NEGATIVE, THEN
*                                  THE PROPER EXTENT FOR FURTHER
*                                  CONVERSION HAS BEEN FOUND
         LA    RGDEB,LENXTN(0,RGDEB) BUMP DEB ADDRESSABILITY
*                                     REGISTER TO ACCESS NEXT
*                                     EXTENT DESCRIPTION
         BCT   RGW,CNVT0020       CONTINUE SEARCHING FOR PROPER
*                                  EXTENT DESCRIPTION UNLESS ALL
*                                  HAVE ALREADY BEEN USED
         LA    RGRCD,RC4          ALL EXTENT DESCRIPTIONS HAVE
*                                  BEEN INVESTIGATED, THEREFORE
*                                  THE INPUT TTR WAS INVALID SO
*                                  SET THE RETURN CODE TO 4
         B     CNVT0100           BRANCH TO EXIT LINKAGE
CNVT0040 EQU   *
         SR    RGV,RGW            CALCULATE M OF MBBCCHHR
         STC   RGV,M              STORE M OF MBBCCHHR
         MVC   BB(LENBCH),DXDEBBIN  INITIALIZE BBCCHH OF
*                                    MBBCCHHR
         AH    RGTTR,DXDEBNTR     ADD BACK THE NUMBER OF TRACKS
*                                  WHICH WHEN SUBTRACTED MADE
*                                  TT OF TTRN NEGATIVE
         SPACE 1
****************************************************************
*                                                              *
*   THE VALUE TT IN REGISTER RGTTR NOW CONTAINS THE TRACK      *
* ADDRESS RELATIVE TO THE CURRENT EXTENT DESCRIPTION WHICH IS  *
* TO BE PLACED IN THE CCHH PORTION OF THE OUTPUT MBBCCHHR.     *
*                                                              *
****************************************************************
         SPACE 1
         BZ    CNVT0100           IF THE RESULT OF THE ABOVE
*                                  ADDITION IS 0, THEN THE INIT-
*                                  IALIZED VALUE OF THE CCHH
*                                  PORTION OF MBBCCHHR IS VALID,
*                                  SO RETURN TO CALLER
         L     RGY,DXDEBUCB       LOAD POINTER TO UNLOADED DEV-
*                                  TYPE INFORMATION MINUS 16
*                                  BYTES
         LA    RGY,DEVBUMP(0,RGY) ADJUST POINTER TO ADDRESS OF
*                                  UNLOADED DEVTYPE INFORMATION
         SPACE 1
         USING DEVTAB,RGY         DEVTYPE DSECT ADDRESSABILITY
         SPACE 1
         LR    RGX,RGTTR          INITIALIZE FOR LATER DIVISION
         LH    RGV,DEVTRK         LOAD NUMBER OF TRACKS PER
*                                  CYLINDER
         AH    RGX,DXDEBSHH       ADD CURRENT DEB EXTENT START
*                                  HH TO CURRENT VALUE OF TT
         SR    RGW,RGW            CLEAR WORK REGISTER FOR
*                                  DIVISION
         DR    RGW,RGV            DIVIDE UPDATED TT BY NUMBER OF
*                                  TRACKS PER CYLINDER
         SPACE 1
****************************************************************
*                                                              *
*   THE RESULT OF THE ABOVE DIVISION IS AS FOLLOWS -           *
*        RGW - THE REMAINDER REGISTER CONTAINS THE FINAL       *
*               HH VALUE OF THE OUTPUT MBBCCHHR.               *
*        RGX - THE QUOTIENT REGISTER CONTAINS THE VALUE        *
*               TO BE ADDED TO THE CURRENT DEB EXTENT          *
*               START CC WHICH WILL YIELD THE FINAL CC         *
*               VALUE OF THE OUTPUT MBBCCHHR.                  *
*                                                              *
****************************************************************
         SPACE 1
         STC   RGW,HH+C1          STORE FINAL HH VALUE OF OUTPUT
*                                  MBBCCHHR (HIGH ORDER HH BYTE
*                                  IS ALWAYS 0 FOR ALL SUPPORTED
*                                  DEVICES AND IS NOT STORED)
         AH    RGX,DXDEBSCC       ADD CURRENT DEB EXTENT START
*                                  CC TO ABOVE CALCULATED
*                                  QUOTIENT
         STC   RGX,CC+C1          STORE LOW ORDER C OF OUTPUT
*                                  MBBCCHHR
         SRL   RGX,ONEBYTE        SHIFT HIGH ORDER C BYTE TO
*                                  LOW ORDER BYTE OF REGISTER
         STC   RGX,CC             STORE HIGH ORDER C OF OUTPUT
*                                  MBBCCHHR
         SPACE 1
CNVT0100 EQU   *
         RETURN (14,12),T,RC=(15) RETURN TO CALLER
         EJECT
         DS    0F                 FULL WORD ALIGNMENT
         ENTRY IEBCNVT1
IEBCNVT1 EQU   *                  MBBCCHHR TO TTR0 ENTRY POINT
         SAVE  (14,12),,IEBCNVT1  SAVE REGISTERS
CNVT2000 EQU   *
         BALR  RGBASE,0           ESTABLISH ADDRESSABILITY
         LA    RGY,CNVT2000-CNVT0000 RELATIVE TO FIRST
         SR    RGBASE,RGY             ENTRY POINT
         SPACE 1
         SR    RGTTR,RGTTR        CLEAR TTR0 OUTPUT REGISTER
         SR    RGRCD,RGRCD        ZERO RETURN CODE REGISTER
         SR    RGY,RGY            CLEAR WORK REGISTER
         SPACE 1
         IC    RGY,M              PICK UP M OF INPUT MBBCCHHR
         LTR   RGY,RGY            IS M LARGER THAN 0
         BZ    CNVT2040           NO, DO CONVERSION USING
*                                  FIRST DEB EXTENT
         SPACE 1
CNVT2020 EQU   *
         AH    RGTTR,DXDEBNTR     ADD NUMBER OF TRACKS IN
*                                  CURRENT EXTENT DESCRIPTION
*                                  TO CURRENT VALUE OF TT
         LA    RGDEB,LENXTN(0,RGDEB) BUMP DEB ADDRESSABILITY
*                                     REGISTER TO ACCESS NEXT
*                                     EXTENT DESCRIPTION
         BCT   RGY,CNVT2020       CONTINUE LOOPING UNTIL PROPER
*                                  DEB EXTENT IS FOUND
         SPACE 1
CNVT2040 EQU   *
         L     RGY,DXDEBUCB       LOAD POINTER TO UNLOADED
*                                  DEVTYPE INFORMATION MINUS 16
*                                  BYTES
         LA    RGY,DEVBUMP(0,RGY) ADJUST POINTER TO ADDRESS OF
*                                  UNLOADED DEVTYPE INFORMATION
         SPACE 1
         SR    RGW,RGW            CLEAR WORK REGISTER
         IC    RGW,CC             LOAD HIGH ORDER C OF INPUT
*                                  MBBCCHHR
         SLL   RGW,ONEBYTE        SHIFT TO MAKE ROOM FOR LOW
*                                  ORDER C BYTE
         IC    RGW,CC+C1          LOAD LOW ORDER C OF INPUT
*                                  MBBCCHHR
         SH    RGW,DXDEBSCC       SUBTRACT CURRENT DEB EXTENT
*                                  START CC FROM CC OF INPUT
*                                  MBBCCHHR
         MH    RGW,DEVTRK         MULTIPLY RESIDUAL NUMBER OF
*                                  CYLINDERS BY THE NUMBER OF
*                                  TRACKS PER CYLINDER
         SR    RGX,RGX            CLEAR WORK REGISTER
         IC    RGX,HH+C1          LOAD LOW ORDER H OF INPUT
*                                  MBBCCHHR (HIGH ORDER H BYTE
*                                  FOR ALL SUPPORTED DEVICES
*                                  IS ALWAYS 0)
         SH    RGX,DXDEBSHH       SUBTRACT CURRENT DEB EXTENT
*                                  START HH FROM HH OF INPUT
*                                  MBBCCHHR
         AR    RGW,RGX            CALCULATE TOTAL NUMBER OF
*                                  RESIDUAL TRACKS
         AR    RGTTR,RGW          ADD RESIDUAL TRACKS TO NUMBER
*                                  OF TRACKS IN PREVIOUS EXTENTS
*                                  (IF ANY)
         SLL   RGTTR,ONEBYTE      MAKE ROOM FOR R OF TTR0
         IC    RGTTR,R            LOAD R FROM MBBCCHHR
         SLL   RGTTR,ONEBYTE      MAKE FINAL RESULT TTR0
         ST    RGTTR,SAV20(0,RGZ) STORE TTR0 IN CALLERS SAVE
*                                  SO THAT IT WILL BE PLACED
*                                  IN REGISTER 0 BY RETURN
*                                  MACRO EXPANSION
         B     CNVT0100           RETURN TO CALLER
         EJECT
****************************************************************
*                                                              *
*   THE FOLLOWING IS IEBCNVT'S WORK AREA                       *
*                                                              *
****************************************************************
         SPACE 1
PATCHLEN EQU   (*-IEBCNVT)/20     LENGTH OF 5 PERCENT PATCH AREA
CNVT9000 DC    XL(PATCHLEN)'00'   PATCH AREA
         EJECT
****************************************************************
*                                                              *
*   DEVTYPE MAPPING DSECT                                      *
*                                                              *
****************************************************************
         SPACE 1
DEVTAB   DSECT
         DS    XL10               UNREFERENCED FIELDS
DEVTRK   DS    XL2                TRACKS PER CYLINDER
         SPACE 2
****************************************************************
*                                                              *
*   MBBCCHHR MAPPING DSECT                                     *
*                                                              *
****************************************************************
         SPACE 1
MBBCCHHR DSECT
M        DS    XL1                EXTENT NUMBER
BB       DS    XL2                BIN NUMBER
CC       DS    XL2                CYLINDER NUMBER
HH       DS    XL2                HEAD NUMBER
R        DS    XL1                RECORD NUMBER
         EJECT
IECDSECT DSECT
         IECDSECT
         END
