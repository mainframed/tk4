READ     TITLE 'IEBCOPY  READ ROUTINE- IEBDRD WITH TRACK OVERFLOW'
IEBDRD   CSECT
*C 298440                                                      @YM06446
*A 298440-298492                                               @YM06435
*A 298100-298420,845394                                        @YM06434
*C 299500,299800,299600,299988                                 @YM06434
*D 299600,299900,299980,299992                                 @YM06434
*A 298500-299992                                               @YM06433
*D320500-321500                                                  A34431
*D460400-461600                                                  A36080
*D699200                                                         A37873
*C845200                                                         A41780
*C455200-455800,458420-459000,462600-466500                      A41741
* 600000,789000                                                  X010XX
*A685100                                                        OY01181
*A508510-508560                                                 OY01185
*A419500-421498                                                 YA01454
*C420000                                                        YA01454
*A294020-296000                                                 YL026VD
*A178200-178840                                                @ZA00915
*A224000-225500                                                @ZA04404
*A359930-360630                                                @ZA10909
*A156500-157999,158499-158939,294088-294099,294232-294455      @ZA26248
*A294841-295927,296341-297838,298045,436500-437999,            @ZA26248
*A438499-439889,830500-836984,884500-885999,886499             @ZA26248
*D158000,294500,296000,298000,438000,886000                    @ZA26248
         SPACE 1
*TITLE- IEBCOPY READ ROUTINE- IEBDRD                                  *
*                                                                     *
*STATUS- CHANGE LEVEL 001                                             *
*                                                                     *
*FUNCTION/OPERATION-  THIS MODULE READS DIRECTORIES, MEMBER DATA OR   *
*       NOTE LISTS FROM THE OUTPUT DATA SET, THE INPUT DATA SET,      *
*       SYSUT3 AND SYSUT4 DATA SETS. IT  STARTS READING INTO THE      *
*       LOCATION POINTED TO BY 'READNEXT' AND READS UNTIL AN          *
*       END OF FILE IS READ OR THE BUFFERS ARE FULL.                  *
*                                                                     *
*ENTRY POINTS- ENTERED AT IEBDRD FOR NORMAL READ                      *
*                                                                     *
*INPUT- SWITCH NAMED 'STATUS' IS SET BY CALLER TO TELL READ ROUTINE   *
*       WHICH DATA SET IS BEING READ  (INPUT OR OUTPUT).              *
*       SWITCH NAMED 'SENSE' IS SET BY CALLER TO TELL READ ROUTINE    *
*       WHICH DATA SET IS BEING READ (SYSUT3,SYSUT4 OR NOTE LIST).    *
*       BUFFER CONTROL BLOCK NAMED 'BCB' IS SET TO POINT TO BUFFERS   *
*       WHERE DATA IS TO BE READ.                                     *
*       'READNEXT' IS SET TO ADDRESS WHERE DATA IS TO BE READ.        *
*       INITIALIZE FDAD IN PROPER DCB BEFORE FIRST READ BY CALLER     *
*                                                                     *
*OUTPUT- DATA IS READ INTO LOCATION SPECIFIED. LAST RECORD IN A       *
*       BUFFER AND LAST RECORD IN LAST BUFFER (LASTREC AND ENDPROC    *
*       RESPECTIVELY) ARE SET IN FLAG FIELD FOR PROPER RECORD. IOB IS *
*       UPDATED FOR EACH READ                                         *
*       'RDGSW' SET TO SHOW READ BEING DONE.                          *
*       'RDEOF' SWITCH SET WHEN END OF FILE READ                      *
*       SYNADAF MACRO GIVEN TO CLARIFY HARD I/O ERRORS                *
*                                                                     *
*EXTERNAL ROUTINES- PCI APPENDAGE IGG019C8, EXCP, WAIT, SYNADAF MACRO,*
*                                                                     *
*EXITS- RETURN TO CALLER ON SUCCESSFUL READ                           *
*       ENTER MODULE WHICH GIVES SYNADAF AND PREPARES AND ISSUES      *
*     MESSAGE IDENTIFYING THE I/O ERROR.                              *
*                                                                     *
*TABLES/WORK AREAS-                                                   *
*       -BCB-       POINTERS TO BUFFERS                               *
*       -IOB-       NEEDED BY EXCP- INIOB,OUTIOB,UT3IOB,UT4IOB        *
*       -EVENTCB-   EVENT CONTROL BLOCK FOR EXCP                      *
*       -RDPTR1-    ADDRESS OF CURRENT CCW                            *
*       -RDPTR2-    ADDRESS OF NEXT CCW                               *
*       -SV4-       REGISTER SAVE AREA USED IN IEBMCA                 *
*                                                                     *
*ATTRIBUTES- SERIAL REUSABLE                                          *
*                                                                     *
         EJECT
*                                                                     *
*              SYMBOLIC REGISTERS FOR READ ROUTINE                    *
*                                                                     *
*                     BASE ADDRESS REGISTER 12, COMMON AREA- 4        *
*                                                                     *
         SPACE 1
GR0   EQU 0
GR1   EQU 1
GR2   EQU 2
GR3      EQU   3                  POINTER TO END OF BUFFER
GR4      EQU   4                  COMMON AREA POINTER
GR5      EQU   5                  POINTER TO IOB
GR6      EQU   6                  POINTER TO START OF RECORD
GR7   EQU 7
GR8   EQU 8
GR9      EQU   9                  POINTER TO END OF NXT REC TO BE READ
GR10  EQU 10
GR11     EQU   11
GR12     EQU   12        BASE ADDRESS REGISTER
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
C1       EQU   1                                               @ZA26248
R0       EQU   0                                               @ZA26248
R2       EQU   2                                               @ZA26248
R1       EQU   1                                               @ZA26248
R3       EQU   3                                               @ZA26248
C2       EQU   2                                               @ZA26248
L5       EQU   5                                               @ZA26248
C4       EQU   4                                               @ZA26248
R5       EQU   5                                               @ZA26248
R6       EQU   6                                               @ZA26248
R7       EQU   7                                               @ZA26248
R8       EQU   8                                               @ZA26248
R9       EQU   9                                               @ZA26248
R10      EQU   10                                              @ZA26248
R11      EQU   11                                              @ZA26248
*                                                              @ZA26248
C5       EQU   5                                               @ZA26248
C6       EQU   6                                               @ZA26248
C7       EQU   7                                               @ZA26248
C8       EQU   8                                               @ZA26248
C9       EQU   9                                               @ZA26248
C10      EQU   10                                              @ZA26248
C12      EQU   12                                              @ZA26248
KBLEN    EQU   256+8          DIRECTORY PLUS KEY               @ZA26248
*                                                              @ZA26248
         EJECT
         SAVE  (14,12),,*
         BALR  GR12,GR0                GET ADDRESSABILITY
         USING START,GR12
         USING IEBMCA,4
START    EQU   *
         ST    GR13,SV5+P4             POINTER TO OLD SAVE AREA IN NEW
         LA    GR15,SV5
         ST    GR15,X8(GR13)           POINTER TO NEW SAVE AREA IN OLD
         LR    GR13,GR15
         LA    GR3,SECTOR              RESTORE THE ADDRESSES   @ZA00915
         ST    GR3,SSECTOR              IN THE SET/READ SECTOR @ZA00915
         MVI   SSECTOR,X'23'            CCWS TO VIRTUAL, IS    @ZA00915
         ST    GR3,RSECTOR              CHANGED TO REAL BY     @ZA00915
         MVI   RSECTOR,X'22'            IGG019FT               @ZA00915
         LA    GR9,ERREPTST            EXCP RETURN ADDRESS-INITIALIZE
         OI    AOS,PCI                 TURN ON PCI PROC FLAG     X010XX
         OI    WSFLAG,RDGSW            SET READING SWITCH
         LA    GR6,RDCW11              GET 1ST CCW ADDRESS
         LA    GR7,RDCW21              GET 2ND CCW ADDRESS
         STM   GR6,GR7,RDPTR1          INITIALIZE POINTERS
         L     GR5,READNEXT            WHERE TO START READ
         MVC   X1(L3,GR7),READNEXT+P1  INIT SECOND CHAIN TO      X010XX
         MVC   X9(L3,GR7),READNEXT+P1  POINT WITHIN BUFFER       X010XX
         MVI   X0(GR5),ZERO            INITIALIZE F BYTE
         LA    GR5,X4(GR5)             SPACE POINTER OVER FMBB
         ST    GR5,X0(GR6)             STORE ADDRESS WHERE COUNT READ
         TM    SENSE,SENSE3            SPECIAL READ 1 RECORD AT A TIME
         BO    SPECIAL                 YES
         TM    STATUS,STAT4            READING INPUT MEMBER
         BZ    DIRECTB                 NO
SETBLK   EQU   *
         SR    GR10,GR10
         LA    GR11,INDCB
         USING IHADCB,GR11
         IC    GR10,DCBKEYLE           GET KEY LN. FROM DCB
         AH    GR10,IBLKSIZE           KEY LN + BLOCKSIZE
         TM    DCBRECFM,OVERFLOW       INPUT TRK OVERFLOW
         BO    TRKOVFL                 YES-GO TO SPECIAL READ SUB/RTN.
         STH   GR10,RDCW12+P6          SET INTO RKD CCW BYTE COUNT
         STH   GR10,RDCW22+P6          SET INTO RKD CCW BYTE COUNT
         SRL   GR10,X11                DIV BY 2K                 X010XX
         STC   GR10,RDL1               STORE MAX LENGTH IN LIST  X010XX
         OI    RDL1,X80                RESTORE OPTION BIT        X010XX
         STC   GR10,RDL2               STORE MAX LENGTH IN LIST  X010XX
         OI    RDL2,X80                RESTORE OPTION BIT        X010XX
         LA    GR11,OUTDCB             GET OUTPUT DCB PTR.
         TM    DCBRECFM,OVERFLOW       OVERFLOW ON OUTPUT ONLY
         BZ    GETADDR                 NO-CONTINUE
         OI    FLG1,STOPEND1           YES - USE ONLY 1ST BUFFER
         B     GETADDR                 CONTINUE
         SPACE 1
DIRECTB  EQU   *
         MVC   RDCW12+P6(L2),MAXRECI   MAXIMUM DIRECTORY RECORD SIZE
         MVC   RDCW22+P6(L2),MAXRECI   SIZE = 264 BYTES
         MVI   RDL1,X80                RESTORE LENGTH LT 2K      X010XX
         MVI   RDL2,X80                RESTORE LENGTH LT 2K      X010XX
         SPACE 1
GETADDR  EQU   *
         LA    GR8,X8
         AR    GR5,GR8                 POINT TO KEY/DATA FIELD
         SPACE 1
SETUPALL EQU   *
         ST    GR5,X8(GR6)             STORE IN FIRST RKD CCW
         MVI   X0(GR6),RCMT            RESTORE RC-MT OP CODE
         ST    GR8,X4(GR6)             RESTORE COUNT
         MVI   X4(GR6),FLAG40          SET CC
*                                      MAY HAVE CHANGED CCW
         MVI   X8(GR6),RKD             RESTORE RKD OP CODE
         MVI   X12(GR6),FLAG68         SET CC,SLI,PCI
         TM    STATUS,STAT4       READING MEMBER?              @ZA04404
         BO    AROUND             YES,KEEP OPTION BITS IN CCW  @ZA04404
         NI    X12(GR6),X'DF'     NO,TURN OFF SLI BIT          @ZA04404
AROUND   EQU   *                                               @ZA04404
         TM    SENSE,SENSE4            READING FOR COMPRESS
         BO    SETSCAN                 YES, USE OUTDCB
         TM    STATUS,STAT1+STAT4      READING INPUT DIRECTORY OR MEMBR
         BC    MIXONE,SPLUT4           YES
         TM    STATUS,STAT2            READING OUTPUT DIRECTORY
         BO    SPLUT3                  ESTABLISH CORRECT DCB AND IOB
         LA    GR5,UT4IOB              PUT CORRECT IOB IN GR5 LEAVE IT
         B     GETGOING                SET UP FOR EXCP
         SPACE 1
SETSCAN  EQU   *
         L     GR5,RDPTR2              START OF NEXT CCW CHAIN TO DO
         MVC   X0(L12,GR5),X0(GR6)     MAKE BOTH CCW CHAINS THE SAME
         TM    STATUS,STAT2            READING OUTPUT DIRECTORY
         BZ    SPLUT4                  NO-XFER TO READ INPUT MEMBER
         SPACE 1
SPLUT3   EQU   *
         LA    GR5,OUTIOB              PUT CORRECT IOB IN GR5 LEAVE IT
         B     GETGOING                SET UP FOR EXCP
SPLUT4   EQU   *
         LA    GR5,INIOB               PUT CORRECT IOB IN GR5 LEAVE IT
GETGOING EQU   *
         L     GR7,DCB4IOB(GR5)        DCB POINTER FROM IOB
         LA    GR7,X0(GR7)             CLEAR HIGH ORDER BYTE
         MVC   IOBMCCHH(L8,GR5),DISKADR(GR7) MOVE FDAD TO IOB SEEK ADR
         SPACE 1
IOBCAWST EQU   *
         OI    IOBFLGS(GR5),NONSEQEN   SET COMD CHAIN-UNRELATED FLAGS
         LA    GR6,IOBCCHHR(GR5)       PICK CCHHR OUT OF IOB
         LA    GR1,CCW1                STARTING CCW
         ST    GR6,X0(GR1)             STORE SEARCH ID CCHHR
         MVI   X0(GR1),SIDEQ           RESTORE SIDEQ OP CODE
         ST    GR1,READLIST            BEGIN OF CHAIN            X010XX
*                                        (FOR EXTEND LIST)       X010XX
         MVI   READLIST,X03            LENGTH OF CHAIN           X010XX
         L     GR6,RDPTR1              PTR TO FIRST CHAIN        S20201
         LA    GR6,X0(GR0,GR6)         CLEAR HIGH ORDER BYTE     S20201
         TM    SENSE,SENSE7            READING FIRST RECORD OF A S20201
*                                        TRACK OVERFLOW MEMBER   S20201
         BNO   NOTFIRST                NO, GO AROUND             S20201
         LA    GR8,X8                  LOAD CONSTANT OF 8        S20201
         SR    GR6,GR8                 SUBTRACT 8 FROM POINTER   S20201
*                                 IN RDPTR1 SO THAT NOP AND      S20201
*                                 POSSIBLY RS CCW WILL BE        S20201
*                                 CONSTRUCTED IN THE CORRECT     S20201
*                                 CCW SLOT                       S20201
NOTFIRST EQU   *                                                 S20201
         MVI   X16(GR6),NOP            CONSTRUCT NOP CCW         S20201
*                                        AFTER FIRST CHAIN       S20201
         LA    GR8,DEVOFF(GR0,GR5)     GET PTR TO DEVTYPE INFO   S20201
         TM    X1(GR8),RPS             IS THIS AN RPS DEVICE     S20201
         BNO   NOTRPS                  NO, GO ON                 S20201
         SPACE 1                                                 S20201
*   IF RPS IS SUPPORTED A SET SECTOR  CCW CHAIN IS               S20201
* APPENDED TO THE NORMAL CCW CHAIN                               S20201
         SPACE 1                                                 S20201
         LA    GR1,SSECTOR             PTR TO SET SECTOR CCW     S20201
         ST    GR1,READLIST            BEGIN OF CHAIN            X010XX
*                                        (FOR EXTEND LIST)       X010XX
         MVI   READLIST,X04            LENGTH OF CHAIN           X010XX
         MVC   X16(L4,GR6),RSECTOR     REPLACE NOP WITH RS       S20201
         LA    GR6,SCTOFF(GR0,GR5)     LOAD PTR TO CURRENT       S20201
*                                        SECTOR VALUE            S20201
         MVC   SECTOR(L1),X0(GR6)      MOVE VALUE TO ''SECTOR''  S20201
         TM    SENSE,SENSE3            READ ONE RECORD ONLY      S20201
         BNO   NOTRPS                  NO, GO ON                 S20201
         TM    SENSE,SENSE2            READING NOTELIST          S20201
         BNO   NOTRPS                  NO, GO ON                 S20201
         MVI   SECTOR,X0               SET SECTOR VALUE TO 0     S20201
*                                      (DON'T KNOW CORRECT       S20201
*                                      VALUE)                    S20201
NOTRPS   EQU   *                                                 S20201
         ST    GR1,IOBCAW(GR5)         ADDRESS FIRST CCW TO BE DONE
         SPACE 1
BUILDTIC EQU   *
         MVC   CCW3+P1(L3),RDPTR1+P1   MOVE ADDRESS TO TIC CCW
         SPACE 1
         SPACE 1
STRTIO   EQU   *
         TM    AOS,PCI                 NEED PCI HANDLING        YL026VD
         BO    STRTIOVR                YES, DO EXCPVR           YL026VD
         EXCP  (GR5)                   ISSUE EXCP READ MACRO    YL026VD
         WAIT  1,ECB=EVENTCB           ISSUE WAIT MACRO         YL026VD
         BR    GR9                     RETURN FROM READING      YL026VD
STRTIOVR ST    GR5,IOBVRPTR                                     YL026VC
*              TEST TO SEE IF COMMAND CHANNING ONLY            @ZA26248
*              SHOULD BE USED AND IF IT CAN BUILD              @ZA26248
*              ALTERNATE SET OF CCWS TO PERFORM                @ZA26248
*              OPERATION.                                      @ZA26248
*                                                              @ZA26248
*              REGISTER R6, R7, R1, R0, R5                     @ZA26248
*                                                              @ZA26248
*                                                              @ZA26248
         TM    COMDCDSW,COMPRESS IF COMPRESS USE COMMAND CHAIN @ZA26248
         BO    BX25                                            @ZA26248
         TM    FLG2,TRKS2 TEST IF A 2 TRACK BUF                @ZA26248
*              ALLOCATED YES, PROCEED                          @ZA26248
*                                                              @ZA26248
         BZ    BX2                                             @ZA26248
*                                                              @ZA26248
BX25     TM    STATUS,STAT1+STAT2+STAT3 ONLY HANDLE            @ZA26248
         BZ    BX2            NO USE PCI                       @ZA26248
*                                                              @ZA26248
BX20     NI    AOS,X'FF'-PCI  TURW                             @ZA26248
*                                                              @ZA26248
         L     R1,CCWAREA     POINTER OF WHERE TO BUILD CCWS   @ZA26248
         LM    R6,R7,DRCCW1   MODELCCW                         @ZA26248
         L     R5,CCW3        GET CCW PLANED TO BE USED        @ZA26248
*                                                              @ZA26248
         L     R5,X0(X0,R5)   GET BUFFER ADDRESS               @ZA26248
         LA    R5,X0(X0,R5)   WHICH IS +4 TO JUMP FMBB         @ZA26248
BX6      EQU   *                                               @ZA26248
         LA    R0,KBLEN+C12(R5)    TEMP ADVANCE TO NEXT SLOT   @ZA26248
         TM    FLG7,DM        MERGING DIRECTORIES              @ZA26248
         BZ    BUF2ND         NO ASSUME BUFFER NOT SPLIT       @ZA26248
*                                                              @ZA26248
         C     R0,ENDFST1     EXCEED FIRST BUFFER              @ZA26248
         BNL   BX5            YES, GO READ THESE BUFFERS       @ZA26248
BX7      LA    R0,X4          BACK UP TO FLAG FIELD            @ZA26248
         SR    R5,R0                                           @ZA26248
         MVI   X0(R5),X0        CLEAR FLAG                     @ZA26248
         AR    R5,R0          INCREMENT TO PATH AREA.          @ZA26248
         STM   R6,R7,X0(R1)                                    @ZA26248
         STCM  R5,C7,X1(R1)   INSERT ADDRESS                   @ZA26248
         LA    R1,X8(X0,R1)   BUMP TO NEXT CCW SLOT            @ZA26248
         C     R1,SVHI        TEST IF USED UP CCW AREA         @ZA26248
         BNL   BX5            YES, GO READ WHAT'S BUILT        @ZA26248
*                                                              @ZA26248
         LA    R5,KBLEN+C12(R5) ADVANCE TO NEXT SLOT IN BUFFER @ZA26248
*                                                              @ZA26248
         B     BX6            LOOP BACK                        @ZA26248
BUF2ND   C     R0,END2ND2      EXCEEDED END 2ND BUFFER         @ZA26248
         BNH   BX7            NO, CONTINUE BUILD               @ZA26248
*                                                              @ZA26248
*                                                              @ZA26248
*                                                              @ZA26248
BX5      EQU   *              PREPARE TO READ THIS LOAD        @ZA26248
*                                                              @ZA26248
         LA    R0,X8          BACK UP TO LAST CCW              @ZA26248
         SR    R1,R0                                           @ZA26248
         NI    X4(R1),X'FF'-CC      TURN OFF COMD CHAIN        @ZA26248
*                                                              @ZA26248
         L     R5,X0(X0,R1)   GET ADDRESS LAST BUFFER          @ZA26248
         LA    R0,X4          BACK UP TO                       @ZA26248
         LA    R5,X0(X0,R5)   FLAG FIELD                       @ZA26248
         SR    R5,R0                                           @ZA26248
*                                                              @ZA26248
         MVI   X0(R5),LASTREC+ENDPROC                          @ZA26248
*                                                              @ZA26248
         MVC   CCW3+X1(L3),CCWAREA+X1                          @ZA26248
*                                                              @ZA26248
         L     R5,IOBVRPTR    GET IOB                          @ZA26248
BX9      EXCP  (R5)           REQUEST IO BE DONE               @ZA26248
*                                                              @ZA26248
         WAIT  1,ECB=EVENTCB  WAIT FOR COMPLETION              @ZA26248
         USING DXIOB,R5                                        @ZA26248
         L     R6,IOBCSW  GET LAST CCW+8                       @ZA26248
         LA    R6,X0(R6)      CLEAR OP FIELD                   @ZA26248
         DROP  R5                                              @ZA26248
         LA       R0,X8 BACK UP TO CCW                         @ZA26248
         SLR   R6,R0                                           @ZA26248
*                                                              @ZA26248
         CLI   EVENTCB,INTRCEPT                                @ZA26248
         BE    BX9            YES-REISSUE EXCP                 @ZA26248
*                                                              @ZA26248
         MVC   CURRCCW2+X1(L3),X1(R6)                          @ZA26248
         CLI   EVENTCB,PERMIO TEXT FOR ERRORS                  @ZA26248
         BNE   BX8            NO, CONTINUE PROCESSION          @ZA26248
*                                                              @ZA26248
         TM    IOBCSWST(R5),UNCHK                              @ZA26248
         BNO   BX8            YES ERROR                        @ZA26248
*                                                              @ZA26248
         SR    R6,R0          GO BACK TO GOOD CCCW             @ZA26248
         C     R6,CCWAREA     TEST THAT ENDED IN CCWAREA       @ZA26248
         BL    BX13           NO, GET OUT                      @ZA26248
         C     R6,SVHI                                         @ZA26248
         BH    BX13           NO ,GET OUT                      @ZA26248
BX8      NI    X4(R6),X'FF'-CC                                 @ZA26248
*                                                              @ZA26248
         LA    R0,X4          SETR0 TO BACK TO FLAG            @ZA26248
         L     R6,CCWAREA     GET FIRST CCW                    @ZA26248
BX11     L     R1,X0(X0,R6)   GET BUFFER                       @ZA26248
         SLR   R1,R0          BACK TO FLAG                     @ZA26248
         MVC   X1(L3,R1),IOBMCCHH(R5)                          @ZA26248
         MVC   IOBCCHHR(L5,R5),X4(R1) MOVE CCHHR TO IOB FOR    @ZA26248
*                                     POSSIBLE RESTART         @ZA26248
*                                                              @ZA26248
*                         IF READING OUTPUT DIRECTORY COUNT DIR@ZA26248
*                               BLOCKS, FIND HIGHEST R         @ZA26248
         TM    STATUS,STAT2   TEST IF READING OUT DIR          @ZA26248
         BZ    BX12        BRANCH NO                           @ZA26248
*                                                              @ZA26248
         CLC   IOBRECNO(L1,R5),NDBTR IS CURRENT REC HIGH       @ZA26248
         BL    BX14                                            @ZA26248
         MVC   NDBTR(L1),IOBRECNO(R5) SET NEW HIGH             @ZA26248
*                                                              @ZA26248
BX14     TM    TAG,CTOUT      CHECK COUNTING DIR BLOCKS        @ZA26248
         BZ    BX12   BRANCH  NOT CNT  DIRECTORY               @ZA26248
         LH    R7,DIRBCNT     INCREMENT COUNT                  @ZA26248
         LA    R7,X1(X0,R7)   OF                               @ZA26248
         STH   R7,DIRBCNT     DIRECTORY BLOCKS                 @ZA26248
*                                                              @ZA26248
BX12     TM    X4(R6),CC                                       @ZA26248
         BZ    BX13A                                           @ZA26248
         LA    R6,X8(X0,R6)                                    @ZA26248
         B     BX11                                            @ZA26248
BX13A    TM    SENSE,SENSE4     TEST FOR SCANNING              @ZA26248
         BNO   BX13             BRANCH IF NOT SCANNING         @ZA26248
         CLI   EVENTCB,OKCODE     IF NOT EOF OR EXETENT        @ZA26248
         BE    BX20             CONTINUE SCANNING              @ZA26248
         B     BX13          REACHED ENDING CONDITION, GET OUT @ZA26248
BX2      L     GR5,IOBVRPTR                                    @ZA26248
         OI    AOS,PCI                                         @ZA26248
         LR    GR1,GR5                                          YL026VD
         EXCPVR (1),SUBSYS             ISSUE EXCPVR READ MACRO  YL026VD
         WAIT  1,ECB=EVENTCB           ISSUE WAIT MACRO
BX13     OI    AOS,PCI        FAKE PCI                         @ZA26248
         L     GR6,IOBVRPTR            ADDR OF IOB JUST USED   @YMO6434
         LA    GR6,C35(GR6)            ADDR OF CCHHR           @YM06434
         STCM  GR6,X7,CCW1+X1          STORE INTO SIDEQ CCW    @YM06434
         LA    GR6,CCW1                GET ADDR OF SIDEQ CCW   @YM06434
         STCM  GR6,X7,CCW2+X1         STORE VIRT INTO TIC BACK @YM06434
         LA    GR6,SECTOR              FOR SET/READ SECT & NOP @YM06446
         STCM  GR6,X7,SSECTOR+X1       STORE IN SET SECTOR     @YM06435
         STCM  GR6,X7,RSECTOR+X1       STORE IN READ SECTOR    @YM06435
         MVI   RSECTOR,X22             RESTORE OP CODE         @YM06435
         STCM  GR6,X7,RDCW13+X1        MOVE ADDR TO 1ST NO-OP  @YM06435
         MVI   RDCW13,X03              RESTORE OP CODE         @YM06435
         MVC   RDCW23(L4),RDCW13       RESTORE SECOND NO-OP    @YM06435
         L     GR6,RDPTR1              GET CURRENT READ CCW    @YM06433
         L     GR7,CURRCCW1                                    @YM06433
         STCM  GR7,X7,X1(GR6)          STORE VIRT RD CT ADDR   @YM06434
         LA    GR7,X8(GR7)                                     @YM06433
         STCM  GR7,X7,X9(GR6)          STORE VIRT RD K/D ADDR  @YM06434
         L     GR6,RDPTR2                                      @YM06433
         L     GR7,CURRCCW2                                    @YM06433
         STCM  GR7,X7,X1(GR6)          STORE VIRT RD CT ADDR   @YM06434
         LA    GR7,X8(GR7)                                     @YM06433
         STCM  GR7,X7,X9(GR6)          STORE VIRT RD K/D ADDR  @YM06434
         BR    GR9                     RETURN FROM READING
         SPACE 1
ERREPTST EQU   *
         L     GR6,RDPTR2              ADDRESS OF LAST CCW EXECUTED
*     SET POINTER IN GR7 TO LAST RECORD FLAG FIELD
         L     GR7,X0(GR6)             GET ADDRESS FIELD FROM CCW
         LA    GR7,X0(GR7)             CLEAR OP CODE
         LA    GR8,X4                  SIZE OF FMBB
         SR    GR7,GR8                 BACK UP TO FLAG FIELD
         CLI   EVENTCB,OKCODE          ERRORS
         BNE   TESTERR                 MAYBE- CHECK FOR END OF FILE
GOT7F    EQU   *
         TM    SENSE,SENSE3            SPECIAL READ              A34431
         BNO   CHKMISS                 NO, CHECK FOR MISSED PCI  A34431
         TM    SENSE,SENSE1            READING FROM SYSUT3       A34431
         BO    UPDTESCT                YES, UPDATE SECTOR VALUE  A34431
         B     RESTREGS                NO, MUST BE EITHER NOTE   A34431
*                                       LIST OR RC REQUEST -     A34431
*                                       RETURN TO CALLER         A34431
CHKMISS  EQU   *                                                 A34431
         TM    X0(GR7),ENDPROC         LAST RECORD IN (BUFFERS FULL)
         BO    NOERRS                  YES-PREPARE TO EXIT
         B     BUILDTIC                NO, PCI MISSED - RESTART  S20201
*                                      I/O                       S20201
         SPACE 1
NOERRS   EQU   *
         L     GR8,DCB4IOB(GR5)        POINTER TO DCB FROM IOB
         LA    GR8,X0(GR8)             CLEAR HIGH ORDER BYTE
         MVC    DISKADR(L8,GR8),X1(GR7) MOVE FDAD TO DCB
         TM    STATUS,STAT4            MEMBER
         BZ    EXIT                    NO, EXIT
         TM    COMDCDSW,COMPRESS       IS A COMPRESS BEING DONE
         BZ    EXIT                    NO-EXIT
         SR    GR2,GR2
         IC    GR2,X9(GR7)             GET KEY LN
         MVC   WKA1(L2),X10(GR7)       MOVE DATA LN TO FULL WORD BNDRY
         AH    GR2,WKA1                KEY LN + DATA LN
         LA    GR2,X12(GR2)            + FMBB + COUNT FIELD SIZE
         AR    GR2,GR7                 POINT TO END OF RECORD
         ST    GR2,EOREAD              SAVE FOR WRITE SET UP
         CLC   EOREAD,END2ND2     IS END OF RECORD             @ZA10909
*                                 OUTSIDE THE BUFFER?          @ZA10909
         BL    EXIT               INSIDE                       @ZA10909
         L     GR2,END2ND2        OUTSIDE, A RECORD >          @ZA10909
         BCTR  GR2,GR0            BLKSIZE HAS BEEN READ,       @ZA10909
         ST    GR2,EOREAD         SET REAL END OF BUFFER       @ZA10909
*                                 AND LET IEBWSU TEST          @ZA10909
*                                 AND GIVE MSG188I             @ZA10909
EXIT   EQU  *
         TM    SENSE,SENSE3            READ ONLY ONE RECORD      S20201
         BNO   UPDTESCT                NO, UPDATE SECTOR VALUE   S20201
         TM    SENSE,SENSE1            READING FROM SYSUT3       S20201
         BO    UPDTESCT                YES, UPDATE SECTOR VALUE  S20201
         B     RESTREGS                NO, MUST BE EITHER NOTE   S20201
*                                       LIST OR RC REQUEST -     S20201
*                                       DON'T UPDATE SECTOR      S20201
UPDTESCT EQU   *                                                 S20201
         LA    GR6,SCTOFF(GR0,GR5)     LOAD PTR TO CURRENT       S20201
*                                      SECTOR SLOT               S20201
         MVC   X0(L1,GR6),SECTOR       UPDATE TO LAST SECTOR     S20201
*                                        READ                    S20201
RESTREGS EQU   *                                                 S20201
         L     GR13,SV5+P4             POINTER TO SAVE AREA
         RETURN (14,12)                RETURN TO CALLER
         SPACE 1
TESTERR  EQU   *
         CLI   EVENTCB,OUTEXT          EXTENT VIOLATED
         BE    GETEXTEN                YES
TESTPIO  EQU   *                                                 A37873
         CLI   EVENTCB,PERMIO          PERMANENT I/O ERROR
         BNE   TESTINT                 NO, GO AROUND
         TM    IOBCSWST(GR5),UNCHK     UNIT CHECK
         BO    IOERR                   YES
         TM    IOBCSWST(GR5),UNEX      UNIT EXCEPTION (EOF)
         BZ    IOERR                   NO, I/O ERROR
ERREOF   EQU   *
         CLC   X10(L2,GR7),ZROS        TEST TO SEE IF RDPTR2    YA01454
*                                       POINTS TO THE EOF       YA01454
*                                       RECORD                  YA01454
         BE    EOFIN                   YES, SET LAST RECORD READYA01454
*                                      IF NOT, PCI HAS MISSED   YA01454
*                                       AND RDPTR1 POINTS TO THEYA01454
*                                       EOF RECORD              YA01454
         L     GR8,RDPTR1              GET CURRENT READ CCW     YA01454
*                                       ADDRESS                 YA01454
         L     GR7,X0(GR8)             GET CURRENT READ DATA    YA01454
*                                       ADDRESS                 YA01454
         LA    GR7,X0(GR7)             CLEAR COMMAND CODE       YA01454
         LA    GR8,X4                  SIZE OF FMBB             YA01454
         SR    GR7,GR8                 BACK UP TO FLAG FIELD    YA01454
         MVC   X1(L3,GR7),IOBMCCHH(GR5) MOVE MBB FROM IOB TO    YA01454
*                                       RECORD                  YA01454
EOFIN    MVI   X0(GR7),LASTREC+ENDPROC SET LAST RECORD READ IN  YA01454
*                                       BUFFER                  YA01454
ERRNLAST EQU   *
         OI    FLG2,RDEOF              SET EOF READ SWITCH
         TM    STATUS,STAT2            READING OUTPUT DIRECTORY
         BZ    NOERRS                  NO
         TM    TAG,CTOUT               COUNTING DIRECTORY BLOCKS
         BZ    NOERRS                  NO
         LH    GR6,DIRBCNT             DIRECTORY BLOCK COUNT
         BCTR  GR6,GR0                 COUNT INCLUDED EOF RECORD
         STH   GR6,DIRBCNT             ACCURATE COUNT
*                               COMPUTE TRACK BALANCE AFTER EOF@ZA26248
*                               ON OUT PUT DIRECTORY           @ZA26248
*                            R2, R8, R10, R1, R6 AVABLE GR5=IOB@ZA26248
         TM    SENSE,SENSE4   DON'T COMPUTE TRK BAL UNLESS     @ZA26248
         BZ    BX16           SCANNING.                        @ZA26248
         LA    GR10,OUTCHAR   ADDRESS OF DEVTAB CONSTANTS      @ZA26248
         USING DEVTAB,GR10                                     @ZA26248
*                                                              @ZA26248
         LA    R2,KBLEN       LENGTH OF DIRECTORY BLOK AND KEY @ZA26248
         SR R8,R8             CLEAR REG                        @ZA26248
         IC    R8,OVERI       OVERHEAD NOT LAST REC            @ZA26248
         TM    DEVFLAG,HALFOVER TWOBYTE OVERHEAD               @ZA26248
         BNO   NOTTWO         NOTTWO                           @ZA26248
         LH    R8,OVERI       GET TWO BYTE OVERHEAD            @ZA26248
NOTTWO   EQU   *                                               @ZA26248
         TM    DEVFLAG,TOLFAC TEST TOLERANCE FACTOR            @ZA26248
         BZ    NOTOLER        NO,                              @ZA26248
*                                                              @ZA26248
         MH    R2,TOLER       ADJUST FOR SPEED OF DRIVE        @ZA26248
         SRL   R2,C9          DIVIDE BY 512                    @ZA26248
NOTOLER  EQU   *                                               @ZA26248
         AR    R2,R8          ADD OVERHEAD                     @ZA26248
         LH    R1,TRKCAP      GET CAP OF TRACK                 @ZA26248
         SR    R6,R6          CLEAR REQ                        @ZA26248
         IC    R6,IOBRECNO(R5) GET RECORD NO                   @ZA26248
         BCTR  R6,R0          DECREMENT BY 1                   @ZA26248
         LR    R3,R2          SET UP ODD REG FOR MULTIPLY      @ZA26248
         MR    R2,R6          GET SPACE USED THIS TRACK        @ZA26248
         SR    R1,R3          COMPUTE AMT REMAINING            @ZA26248
*                                                              @ZA26248
*                             COMPUTE OVERHEAD OF EOR          @ZA26248
         IC    R6,OVERK       GET OVERHEAD OF KEY              @ZA26248
         SR    R8,R6          EOF IS NOT KEYED                 @ZA26248
*                                                              @ZA26248
         CLI   DEVCODE+3,X'08' IS IT A 2314?                   @ZA26248
         BE    ADDONE         YES,SKIP ADD OF ONE BYTE         @ZA26248
         LA    R2,C1          ADD 1 TO KL+DL OF EOF            @ZA26248
ADDONE   TM    DEVFLAG,TOLFAC TEST TO SEE IF TOLERANCE         @ZA26248
         BZ    BX15           REQUIRED N                       @ZA26248
         MH    R2,TOLER       ALLOW FOR VARIATIONS IN DRIVE    @ZA26248
         SRL   R2,C9          DIVIDE BY 512                    @ZA26248
*                                                              @ZA26248
BX15     AR    R2,R8          ADD OVERHEAD                     @ZA26248
*                                                              @ZA26248
         SR    R1,R2          REDUCE TRK BALANCE               @ZA26248
         STH   R1,OUTDS1+C4   UPDATE TRK BAL FOR WSU           @ZA26248
*                                                              @ZA26248
BX16     EQU   *                                               @ZA26248
         B     NOERRS         RETURN- EOF READ AND FLAGGED     @ZA26248
         SPACE 1
GETEXTEN EQU   *
         L     GR3,DCB4IOB(GR5)        DCB POINTER FROM IOB
         L     GR6,DEBPTR(GR3)         GET DEB POINTER FROM DCB
         LA    GR6,X0(GR6)             CLEAR FLAGS
         SR    GR8,GR8                                           A41741
         IC    GR8,IOBMCCHH(GR5)        OBTAIN 'M' FROM IOB      A41741
         LA    GR8,X1(GR8)              UP 'M' BY ONE            A41741
         STC   GR8,IOBMCCHH(GR5)        STORE NEW 'M'            A41741
         CLC   IOBMCCHH(L1,GR5),DEBEXTNM(GR6) COMPARE 'M'- EXTENT NMBR
         BL    BUMPM                   GO AROUND IF LOW
*          END OF EXTENTS REACHED WITHOUT EOF                    A41741
*          NEXT INSTRUCTIONS WILL SET UP EOF IN BUFFER           A41741
         BCTR  GR8,GR0                  RESET 'M'                A41741
         STC   GR8,IOBMCCHH(GR5)        RESTORE 'M'              A41741
         IC    GR8,IOBRECNO(GR5)        OBTAIN 'R' FROM IOB      A41741
         LA    GR8,X1(GR8)              UP 'R' BY ONE            A41741
         STC   GR8,IOBRECNO(GR5)        STORE NEW 'R'            A41741
         L     GR6,RDPTR1              ADDR OF NEXT CCW          A41741
*     SET POINTER IN GR7 TO LAST RECORD FLAG FIELD               A41741
         L     GR7,X0(GR6)             GET ADDRESS FLD FROM CCW  A41741
         LA    GR7,X0(GR7)             CLEAR OP CODE             A41741
         LA    GR8,X4                  SIZE OF FMBB              A41741
         SR    GR7,GR8                 BACK UP TO FLAG FIELD     A41741
         MVI   X0(GR7),LASTREC+ENDPROC SET LAST REC READ IN BFR  A41741
         MVC   X1(L8,GR7),IOBMCCHH(GR5) SET UP EOF RECORD ADDR   A41741
         XC    X9(L3,GR7),X9(GR7)       SET KEY-DATA-LEN ZERO    A41741
         B     ERRNLAST                BRANCH AS IF END OF FILE  A41741
         SPACE 1
BUMPM    EQU   *
         SLA   GR8,X4             MULTIPLY BY 16 BYTES/EXTENT    A41741
         AR    GR8,GR6           POINTER TO CORRECT EXTENT BLOCK A41741
         MVC  IOBBCCHH(L6,GR5),EXTBBDEB(GR8) NEXT EXTENT BBCCHH  A41741
*                                                  TO IOB        A41741
         MVI   IOBRECNO(GR5),ZERO      RESET TO RECORD 0 FOR SEARCH
         MVI SECTOR,X0                 SET ''SECTOR'' TO 0       S20201
*                                        (USED ONLY IF RPS)      S20201
         B     BUILDTIC                GET I/O RESTARTED         S20201
         SPACE 1
         SPACE 1
TESTINT  EQU   *
         CLI   EVENTCB,INTRCEPT        INTERCEPT POSTED
         BE    STRTIO                  YES-RE-ISSUE EXCP
         SPACE 1
IOERR    EQU   *
         L     GR15,VIEBDSRE           ENTRY POINT IN DSCPY TO   A33288
*                                        TRANSFER CONTROL TO     A33288
*                                        IEBIOE                  A33288
         BALR  GR14,GR15               GO TO IDENTIFY THE I/O ERROR
IEBDRDR  EQU   *                                                 A33288
         ENTRY IEBDRDR                                           A33288
         LA    GR11,INDCB              LOAD PTR TO INDCB
         TM    DCBRECFM,OVERFLOW       INPUT TRACK OVERFLOW
         BO    GOT7FTOV                YES, ERROR CAN BE IGNORED -
*                                         CONTINUE TRACK OVERFLOW
*                                         PROCESSING
         SR    GR8,GR8            IF ERROR IGNORED,             OY01185
         IC    GR8,IOBRECNO(GR5)  DIMINISH RECNO                OY01185
         BCTR  GR8,GR0            NOT TO DROP A RECORD          OY01185
         STC   GR8,IOBRECNO(GR5)  NEXT TO THE ONE WITH DATA CHCKOY01185
         MVC   DCBFDAD(L8),IOBMCCHH(GR5)    PUT IT ALSO IN DCB  OY01185
         B     GOT7F                   IF IEBIOE RETURNS CONTROL,
*                                        ERROR CAN BE IGNORED
         EJECT
SPECIAL  EQU   *                       READING 1 RECORD AT A TIME
*                                                                     *
*                         FROM INPUT DIRECTORY NOT IN CORE= SYSUT3    *
*                     OR THE COUNT + DATA OF THE NOTELIST RECORD (RCKD)
*                  OR READS TO SCAN FOR 'HOLES' FOR COMPRESS          *
*                  GR6 CONTAINS POINTER TO FIRST CCW (RDPTR1)         *
         SPACE 1
         NI    AOS,FF-PCI              TURN OFF PCI PROC FLAG    X010XX
         SPACE 1
         TM    SENSE,SENSE2            READING NOTELIST
         BO    NOTESL                  YES, READ CKD FROM INPUT
         TM    SENSE,SENSE1            READING FROM SYSUT3       A34431
         BNO   RCONLY                  NO, MUST BE A RC REQUEST  A34431
*                                       FOR INPUT DATA SET       A34431
         L     GR5,ADWK                GET PTR FOR SYSUT3
         LA    GR5,X12(GR5)            SPACE OVER COUNT + FMBB FIELDS
         ST    GR5,X0(GR6)             STORE IN CCW DATA ADDRESS
         MVI   X0(GR6),RDMT            RESTORE RD-MT OP CODE
         LA    GR5,UT3IOB              SYSUT3 IOB
         LH    GR7,UT3LRECL            SIZE OF SYSUT3 RECORDS
         SPACE 1
SET4READ EQU   *
         STH   GR7,X6(GR6)             STORE LENGTH TO BE READ
         MVI   X4(GR6),FLAG60          SET SLI AND CC FLAGS      S20201
         LA    GR7,X16(GR0,GR6)        GET POINTER TO NOP/TIC/RS S20201
*                                        CCW SLOT                S20201
         ST    GR7,X8(GR0,GR6)         PLACE IN RKD SLOT TO ACT  S20201
*                                        AS NOP                  S20201
         MVI   X8(GR6),TIC             COMPLETE CONSTRUCTION     S20201
*                                        OF TIC CCW              S20201
         B     GETGOING                SET UP AND ISSUE READ
         SPACE 1
NOTESL   EQU   *
         LA    GR5,INIOB               INPUT IOB
         LA    GR7,MAXNOTE             MAXIMUM C+K+D NOTELIST    X010XX
         MVI   X0(GR6),RCKD            SET RCKD OP CODE
         B     SET4READ                SET UP CCWS
         SPACE 1                                                 A34431
RCONLY   EQU   *                                                 A34431
         LA    GR5,INIOB               POINTER TO INPUT IOB      A34431
         LA    GR7,X8                  LOAD LENGTH OF COUNT      A34431
*                                       FIELD                    A34431
         MVI   X0(GR6),RCMT            SET RC M/T OP CODE        A34431
         B     SET4READ                SET UP CCW'S              A34431
         EJECT
*
***********************************************************************
*                                                                     *
*              TRACK OVERFLOW  SUB-ROUTINE                            *
*                                                                     *
***********************************************************************
*
*        SET UP SPECIAL CCWS-READ ONE RECORD AT A TIME
*
*        GR10 - HAS DATA AND KEY LENGTH
         USING DXIOB,GR5
TRKOVFL  EQU   *
         NI    AOS,FF-PCI              TURN OFF PCI PROC FLAG    X010XX
         ST    GR5,RDCW11              SET-UP DATA ADDRESS-DUMMY-
         MVI   RDCW11,RKD              SET RKD OP CODE
         STH   GR10,RDCW11+P6          SET LENGTH FOR READ
         MVI   RDCW11+P4,FLAG70        SET CC,SLI,SKIP
*
         ST    GR5,RDCW12              DATA ADDRESS
         MVI   RDCW12,RCKDMT           SET RCKD-MT OP CODE
         LA    GR10,X8(GR10)           ADD LENGTH OF COUNT FIELD
         STH   GR10,RDCW12+P6          SET LENGTH TO BE READ
         MVI   RDCW12+P4,FLAG20        SET SLI FLAG              S20201
*
         LA    GR5,INIOB               INPUT IOB
         TM    STATUS,STAT8            EOF LAST READ
         BZ    SKIPREAD                NO- READ WITH K/D AND SKIP
         LA    GR10,RDCW12             YESUSE 2ND CCW TO START WITH
         ST    GR10,RDPTR1             STORE FOR TIC SET UP
         OI    SENSE,SENSE7            SET FIRST RECORD OF A     S20201
*                                        TRACK OVERFLOW MEMBER   S20201
*                                        SWITCH                  S20201
SKIPREAD EQU   *
         BAL   GR9,GETGOING            GO SET-UP FOR I/O
*        RETURN HERE AFTER EXCP COMPLETED
         NI    STATUS,FF-STAT8         TURN OFF FIRST RECORD SWITCH
         NI    SENSE,FF-SENSE7         TURN OFF SENSE7           S20201
         LA    GR10,RDCW11             PT. TO 1ST CCW
         ST    GR10,RDPTR1             STOW FOR TIC
         L     GR7,RDCW12              GET DATA ADDRESS
         LA    GR7,X0(GR7)             CLEAR OP CODE
         LA    GR8,X4                  LENGTH OF FMBB FIELD
         SR    GR7,GR8                 POINT BACK TO BEGINNING
         MVI   X0(GR7),ZERO            CLEAR FLAG BYTE
         MVC   X1(L3,GR7),DXDAADDR     FETCH MBB FROM IOB
*        FIND  ACTUAL NUMBER OF BYTES READ
         IC    GR8,X9(GR7)             GET KEY LN
         LR    GR10,GR8                SAVE IT
         LA    GR8,X8(GR8)             ADD COUNT FIELD LN
         LH    GR6,RDCW12+P6           GET COUNT STARTED WITH
         LPR   GR6,GR6                 MAKE SURE IT'S POSITIVE  OY01181
         SH    GR6,IOBCNT              SUB. COUNT READ - FROM IOB
         SR    GR6,GR8                 TAKE OFF KL AND COUNT LENGTH
         STH   GR6,WKA1                SAVE UM
         MVC   X10(L2,GR7),WKA1        PLACE ACTUAL NUMBER OF DATA
*                                        BYTES READ INTO COUNT FIELD
*                                        (COUNT FIELD READ INTO CORE
*                                         TELLS NUMBER OF BYTES IN
*                                         FIRST SEGMENT ONLY)
         CLI   EVENTCB,OKCODE          ERROR POSTED
         BE    GOT7FTOV                NO, I/O OK                A37873
         CLI   EVENTCB,OUTEXT          OUT OF EXTENT POSTED      A37873
         BNE   TESTPIO                 NO, GO TEST FOR PERMANENT A37873
*                                       I/O ERROR                A37873
         LA    GR3,RDCW12              LOAD PTR TO RCKD CCW      A37873
         ST    GR3,RDPTR1              STORE AS FIRST CCW SO     A37873
*                                       THAT RKD CCW WILL BE     A37873
*                                       SKIPPED- IF THIS WAS NOT A37873
*                                       DONE, FIRST RECORD IN    A37873
*                                       NEW EXTENT WOULD BE      A37873
*                                       SKIPPED                  A37873
         B     GETEXTEN                GO FIND NEXT EXTENT       A37873
*        GO FIND NEXT BUFFER AND SEE RECORD WILL FIT
GOT7FTOV EQU   *
         LA    GR8,X12(GR6,GR10)       ADD KL + DL + 12
         AR    GR8,GR7                 POINT TO END OF RECORD JUST READ
*
         AH    GR10,IBLKSIZE           GET WHAT WILL BE NEXT ONE
         LA    GR10,X12(GR8,GR10)      POINT TO END OF NEXT ONE TO READ
*
         LA    GR11,OUTDCB             GET OUTPUT DCB ADDR.
         TM    DCBRECFM,OVERFLOW       IS OUTPUT OVERFLOW ALLOWED
         BO    ONEPRBFS                YES-USE ONLY ONE LOGICAL BUFFER
         TM    FLG1,P2FLG1             ARE BUFFERS SPLIT
         BZ    SECBUF                  NO-NOT SPLIT
         TM    FLG1,IN2ND              INTO SECOND BUFFER ALREADY
         BO    SECBUF                  YES-CHECK 2ND ONE
         C     GR10,ENDFST1            NO-AT END OF FIRST YET
         BNH   CONTINU                 NO-GO ON
         OI    X0(GR7),LASTREC         OTHERWISE SET LAST IN BUFFER
         L     GR8,BEGFST2             GET NEXT ONE
         OI    FLG1,IN2ND              SET IN 2ND BUFFER SWITCH
*        PREPARE TO ISSUE EXCP AGAIN
CONTINU  EQU   *
         LA    GR8,X4(GR8)             BUMP PASSED FMBB
         ST    GR8,RDCW12              STOW WHERE TO GO
         MVI   RDCW12,RCKDMT           RESET RCKD-MT OP CODE
         LA    GR11,INDCB              GET INPUT DCB
         MVC   DCBFDAD(L8),X1(GR7)     MOVE IN PREVIOUS MBBCCHHR
         B     GETGOING                GO DO UM AGAIN
*        OUTPUT NOT OVERFLOW
SECBUF   EQU   *
         C     GR10,END2ND2            END OF ALL BUFFER SPACE
         BNH   CONTINU                 NO-GO GET SOMEMORE
         OI    X0(GR7),LASTREC+ENDPROC SET FLAGS FOR LAST RECORD
         B     NOERRS                  NO MORE ROOM EXIT
*        OUTPUT IS OVERFLOW USE ONLY ONE LOGICAL BUFFER
ONEPRBFS EQU   *
         C     GR10,ENDFST1            END OF 1ST BUFFER
         BNH   CONTINU                 NO, CONTINUE PROCESSING
         OI    X0(GR7),LASTREC+ENDPROC YES, NO MORE ROOM
         B     NOERRS                  EXIT
         SPACE 2
MAXRECI  DC    H'264'                  MAXIMUM DIRECTORY SIZE KEY+DATA
         SPACE 1
         SPACE 1
*                             READING CCWS MODEL               @ZA26248
*                                                              @ZA26248
DRCCW1   CCW   X'9E',0,X'40',KBLEN+X8 READ COUNT KEY AND DATA  @ZA26248
*        LENGTH FIELD MODIFIED TO BLOK SIZE AND 8              @ZA26248
*                             FOR OTHER INPUTS.                @ZA26248
*              DIRECTOR, WRITING CCW MODEL                     @ZA26248
*                                                              @ZA26248
DWCCW1   CCW   X'31',R0CNTF,X'60',5  SERCH ON FIRST CNT        @ZA26248
DWCCW2   CCW   X'08',DWCCW1,X'00',1  TIC UNTIL FOUND           @ZA26248
DWCCW3   CCW   X'08',DWCCW4,X'00',1  TIC AROUND CNT            @ZA26248
R0CNTF   DC    D'0'                                            @ZA26248
DWCCW4   CCW   X'0D',0,X'40',KBLEN  WRITE KEY AND DATA         @ZA26248
*                                                              @ZA26248
*        DWCCW4 REPEATS AS MANY TIMES AS BLOCKS/TRACK          @ZA26248
TRKSWL   EQU   DWCCW4-DWCCW1  LENGTH OF TRACK SWITCH MODEL     @ZA26248
*                                                              @ZA26248
*        OUTPUT CCW MODEL USED IN PLACE DWCCW4                 @ZA26248
DACCW4   CCW   X'1D',0,X'60',0                                 @ZA26248
*                                                              @ZA26248
CC       EQU   X'60'          COMMAND CHAIN                    @ZA26248
R0OFSET  EQU   R0CNTF-DWCCW1                                   @ZA26248
DCCW3OST EQU   DWCCW3-DWCCW1                                   @ZA26248
PATCHLN  EQU   (*-START)/20            5 PERCENT PATCH AREA LENGTH
PATCH    DC    XL(PATCHLN)'00'         PATCH AREA                A41780
         EJECT
*   THE FOLLOWING EQUATES ARE USED TO REFER TO SYMBOLIC LOCATIONS PLUS
*  A CONSTANT
P1       EQU   1
P4       EQU   4
P6       EQU   6
*   THE FOLLOWING EQUATES ARE USED IN INSTRUCTIONS WHICH REQUIRE LENGTH
*  SPECIFICATIONS SUCH AS MVC
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4                                                 S20201
L6       EQU   6
L8       EQU   8
L12      EQU   12
*   THE FOLLOWING EQUATES ARE USED AS DISPLACEMENT CONSTANTS
X0       EQU   0
X1       EQU   1
X4       EQU   4
X6       EQU   6
X7       EQU   7                                               @YM06434
X8       EQU   8
X9       EQU   9
X10      EQU   10
X11      EQU   11                                                X010XX
X12      EQU   12
X16      EQU   16
C35      EQU   35                OFFSET INTO IOB OF CCHHR      @YM06434
*   THE FOLLOWING ARE MISC EQUATES
FF       EQU   X'FF'
X80      EQU   X'80'                                             X010XX
X03      EQU   X'03'                                             X010XX
X04      EQU   X'04'                                             X010XX
X22      EQU   X'22'                                           @YM06435
RDMT     EQU   X'86'
RCKDMT   EQU   X'9E'
RKD      EQU   X'0E'
RCMT     EQU   X'92'
RCKD     EQU   X'1E'
NOP      EQU   X'03'
SIDEQ    EQU   X'31'
TIC      EQU   X'08'
ZERO     EQU   0
MIXONE   EQU   5
OKCODE   EQU   X'7F'
PERMIO   EQU   X'41'
INTRCEPT EQU   X'44'
OUTEXT   EQU   X'42'
UNCHK    EQU   X'02'
UNEX     EQU   X'01'
FLAG20   EQU   X'20'                                             S20201
FLAG40   EQU   X'40'
FLAG60   EQU   X'60'                                             S20201
FLAG68   EQU   X'68'
FLAG70   EQU   X'70'
RPS      EQU   X'10'                                             S20201
MAXNOTE  EQU   1291                    MAXIMUM NOTELIST LENGTH   X010XX
         EJECT
         DCBD  DSORG=PS
DISKADR  EQU   DCBFDAD-IHADCB          MBBCCHHR RECORD JUST READ
DEBPTR   EQU   DCBDEBAD-IHADCB         DEB POINTER IN DCB
OVERFLOW EQU   X'20'              OVERFLOW FLAG IN DCBRECFM
         EJECT
IECDSECT DSECT
         IECDSECT
         SPACE 1
DCB4IOB  EQU   IOBDCBPT-DXIOB-1        POINTER TO DCB IN IOB
IOBCAW   EQU   IOBSIOCC-DXIOB          STARTING CCW ADDRESS (CAW) IOB
IOBCSWST EQU   IOBSTAT0-DXIOB          CSW STATUS IN IOB
IOBFLGS  EQU   IOBFLAG1-DXIOB          FLAGS IN IOB, READ AFTER EOF
NONSEQEN EQU   X'42'                   COMD CHAINING, UNRELATED FLAGS
IOBMCCHH EQU  DXDAADDR-DXIOB           MBBCCHH IN IOB
IOBBCCHH EQU  DXDAADDR-DXIOB+1         BBCCHH IN IOB
IOBCCHHR EQU  DXDAADDR-DXIOB+3         CCHHR IN IOB
IOBRECNO EQU  DXDAADDR-DXIOB+7         RECORD NUMBER (R) IN IOB
         SPACE 1
DEBEXTNM EQU   DXDEBUSR-DXDEB          NUMBER OF EXTENTS FROM DEB
EXTBBDEB EQU   DXDEBBIN-DXDEB          BBCCHH FOR START OF EXTENT DEB
DEVTAB   DSECT                                                 @ZA26248
*                                                              @ZA26248
*     DIRECT ACCESS DEVICE TABLE OVERLAY  OUTCHAR IN IEBMCA    @ZA26248
*                                                              @ZA26248
DEVCODE  DS    F                DEVICE CODE FROM UCB           @ZA26248
MAXSIZE  DS    F                MAXIMUM SIZE UNKEYED BLOCK     @ZA26248
MAXCC    DS    H                NUMBER OF CYLINDER             @ZA26248
MAXHH    DS    H                NUMBER OF TRACKS               @ZA26248
TRKCAP   DS    H                MAXIMUM TRACK LENGTH           @ZA26248
OVERI    DS    XL1              OVERHEAD NOT LAST RECORD       @ZA26248
OVERL    DS    XL1              OVERHEAD LAST RECORD           @ZA26248
OVERK    DS    XL1              OVERHEAD REDUCTION FOR NON-KEY @ZA26248
DEVFLAG  DS    XL1              APPLY TOLERANCE FACTOR NOT LST @ZA26248
TOLER    DS    H                GAP LENGTH CALCULATE TOLERANCE @ZA26248
TOLFAC   EQU   X'01'            TOLERANCE FACTOR TO BE ADDED   @ZA26248
HALFOVER EQU   X'08'            TWO BYTE OVERHEAD              @ZA26248
*                                                            * @ZA26248
*       END OF DEVTAB OVERLAY                                * @ZA26248
*                                                            * @ZA26248
         EJECT
IEBMCA   DSECT
         IEBMCA
         SPACE 1
         END
