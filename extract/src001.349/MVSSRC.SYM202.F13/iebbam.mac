IEBBAM   CSECT                                                   S20201
         TITLE 'IEBBAM  IEBCOPY BUFFER ALLOCATION'
         SPACE 1                                                 S20201
*A401000                                                         A38728
*C814000                                                         A41780
*C114000,752000                                                  A44144
*A750500-751500                                                  A44144
*D666000                                                         A50938
*A668500                                                         A50938
*C668000,670000-672000                                           A50938
*A123000,123500,142600,143200,276000,282100-283200,303000      @ZA26248
*A401500,406200-407200,411000,442100-443900,614600,615200      @ZA26248
*C398000,410000                                                @ZA26248
*D278000,280000                                                @ZA26248
*****************************************************************S20201
*TITLE- IEBCOPY BUFFER ALLOCATION- IEBBAM                        S20201
* 192000,196000,222000,458000,246000-258000,264000,276000-278000 X010XX
* 386000,418000-438000                                           X010XX
*                                                                S20201
* CODE FROM IEBDSCPY HAS BEEN MOVED INTO THIS NEW MODULE TO      S20201
* MAINTAIN DESIGN POINT                                          S20201
*                                                                S20201
*STATUS- CHANGE LEVEL 000                                        S20201
*                                                                S20201
*FUNCTION/OPERATION- THIS MODULE ALLOCATES BUFFER AREAS          S20201
*                                                                S20201
*ENTRY POINT- ENTERED AT IEBBAM                                  S20201
*                                                                S20201
*INPUT- OPENED DCB'S                                             S20201
*                                                                S20201
*OUTPUT- ALLOCATED I/O BUFFERS                                   S20201
*                                                                S20201
*EXITS- NORMAL RETURN TO CALLER (IEBDSCPY)                       S20201
*****************************************************************S20201
         EJECT
R0       EQU   0                                                 S20201
R1       EQU   1                                                 S20201
R2       EQU   2                                                 S20201
R3       EQU   3                                                 S20201
R4       EQU   4                  POINTER TO IEBMCA              S20201
R5       EQU   5                                                 S20201
R6       EQU   6                                                 S20201
R7       EQU   7                                                 S20201
R8       EQU   8                                                 S20201
R9       EQU   9                                                 S20201
R10      EQU   10                                                S20201
R11      EQU   11                                                S20201
R12      EQU   12                 BASE REGISTER                  S20201
R13      EQU   13                                                S20201
R14      EQU   14                                                S20201
R15      EQU   15                                                S20201
L3       EQU   3                                                 S20201
KL       EQU   8                                                 S20201
BL       EQU   256                                               S20201
KBLEN    EQU   KL+BL                                             S20201
CON12    EQU   12                                                S20201
FF       EQU   X'FF'                                             S20201
DIV2     EQU   1                                                 S20201
TKOFLO   EQU   X'20'                                             S20201
DBOFF    EQU   4                                                 S20201
TKOFUDGE EQU   12                                                S20201
P1       EQU   1                                                 S20201
X0       EQU   0                                                 S20201
TABLEN   EQU   10                                                S20201
NAMLEN   EQU   8                                                 S20201
SXTN     EQU   NAMLEN+NAMLEN                                     S20201
NMDISP   EQU   2                                                 S20201
L2       EQU   2                                                 S20201
L4       EQU   4                                                 S20201
CH8      EQU   C'8'                                              A44144
CHAINBK  EQU   4                                                 S20201
CHAINTHS EQU   8                                                 S20201
RETCOD4  EQU   4                                                 S20201
RETCOD8  EQU   8                                                 S20201
OFF22    EQU   22                 OFFSET OF 22                   X010XX
C1       EQU   1                                               @ZA26248
C4       EQU   4                                               @ZA26248
         EJECT
         SAVE  (14,12),,*                                        S20201
         BALR  R12,R0             ESTABLISH ADDRESSABILITY       S20201
         USING START,R12                                         S20201
         USING IEBMCA,R4                                         S20201
         USING IHADCB,R3                                         X010XX
START    EQU   *                                                 S20201
         ST    R13,SV2+CHAINBK    SET UP SAVE AREA LINKAGE       S20201
         LA    R10,SV2                                           S20201
         ST    R10,CHAINTHS(R13)                                 S20201
         LR    R13,R10                                           S20201
         SR    R5,R5     CLEAR REG 5                           @ZA26248
         ST    R5,CCWAREA  CLEAR CCWAREA POINTER               @ZA26248
* FIRST, DETERMINE IF ENOUGH CORE IS AVAILABLE TO CONTAIN AT     S20201
* LEAST TWO DIRECTORY BLOCKS + FLAGS - THIS IS AN ABSOLUTE       S20201
* MINIMUM REQUIREMENT.                                           S20201
         LA    R5,KBLEN+CON12     SIZE OF 1 BLOCK + KEYLENGTH+12 S20201
         AR    R5,R5              DOUBLE IT                      S20201
         L     R7,SVHI            ADDR OF HIGHEST CORE + 1       S20201
         SR    R7,R5              CALC ADDR OF LOW END OF BUFFER S20201
         C     R7,LOCOR           WOULD THIS OVLAY EXISTNG TABLESS20201
         BNH   NOCORE             IF SO, WRT ERMSG AND GET NEXT  S20201
*                                 COPY OPER.                     S20201
         SPACE 1                                                 S20201
* MANDATORY MINIMUM CORE IS AVAILABLE. NOW CHECK FOR             S20201
* COMPRESS-IN-PLACE                                              S20201
         TM    COMDCDSW,COMPRESS  COMPRESS-IN-PLACE SPECIFIED    S20201
         BZ    ALLOCONT           NO, CONTINUE WITH ALLOCATION   S20201
         TM    COMDCDSW,SELECTSC+EXCLUDES   IS THIS IN FULL      S20201
*                                 COPY MODE                      S20201
         BZ    LDOUT              YES - GET OUTPUT TRACK CAPACITYS20201
         B     CMPERR1            NO - GO SET UP AND WRITE ERROR S20201
*                                  MESSAGE                       S20201
         SPACE 1                                                 S20201
ALLOCONT EQU   *                                                 S20201
* DETERMINE LARGEST (INPUT OR OUTPUT) BLOCKSIZE + KEYLEN         S20201
         SR    R6,R6                                             X010XX
         SR    R10,R10                                           X010XX
         TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX
         BZ    BAM00100           ALSO USE UNLOADED DS BLKSIZE   X010XX
         LA    R3,ULOADDCB        GET BSAM WRITE DCB             X010XX
         LH    R10,DCBBLKSI       GET BLKSIZE                    X010XX
BAM00100 EQU   *                                                 X010XX
         LH    R8,OBLKSIZE        OUTPUT BLOCKSIZE               S20201
         LA    R3,OUTDCB          ADDR OF OUTPUT DCB             S20201
         IC    R6,DCBKEYLE        GET KEYLENGTH FROM OUTPUT DCB  S20201
         AR    R8,R6              CALC OUTPUT BLKSIZE+KEYLEN     S20201
         LA    R8,CON12(R8)       ADD CONSTANT OF 12             X010XX
         CR    R8,R10             ULOAD DCB BLKSIZE GT THIS VALUEX010XX
         BH    BAM00200           NO,USE THIS VALUE              X010XX
         LR    R8,R10             ELSE USE ULOAD BLKSIZE         X010XX
BAM00200 TM    ULLDST,LOAD        ON LOAD                        X010XX
         BZ    BAM00210           ALSO USE LOAD DCB BLKSIZE      X010XX
         LA    R3,LOADDCB         GET BSAM READ DCB              X010XX
         LH    R10,DCBBLKSI       GET BLKSIZE                    X010XX
BAM00210 EQU   *                                                 X010XX
         LH    R9,IBLKSIZE        INPUT BLOCKSIZE                S20201
         LA    R3,INDCB                                          S20201
         IC    R6,DCBKEYLE                                       S20201
         AR    R9,R6              CALC INPUT BLKSIZE+KEYLEN      S20201
         LA    R9,CON12(R9)       ADD CONSTANT OF 12             X010XX
         CR    R9,R10             LOAD BLKSIZE GT THIS VALUE     X010XX
         BH    BAM00220           NO,USE THIS VALUE              X010XX
         LR    R9,R10             ELSE USE LOAD BLKSIZE          X010XX
BAM00220 EQU   *                                                 X010XX
         CR    R9,R8              COMP INPUT VS. OUTPUT          S20201
         BNH   USEOUT             IF NOT HIGHER, USE OUTPUT SIZE S20201
         LR    R8,R9              ELSE USE INPUT SIZE INSTEAD    S20201
         SPACE 1                                                 S20201
USEOUT   EQU   *                  DETERMINE IF SIZE USED EXCEEDS S20201
*                                 MINIMUM FOR TWO DIRCTY BLKS    S20201
         LR    R9,R8                                             S20201
         AR    R9,R9              DOUBLE SIZE                    S20201
         CR    R9,R5              IS 2 X SIZE GRTR TH MINIMUM REQS20201
*                                 FOR TWO DIRECTORY BLOCKS       S20201
         BH    SETMAX             YES, SEE IF ENOUGH CORE FOR NEWS20201
*                                 MANDATORY MINIMUM              S20201
         SPACE 1                                                 S20201
         LA    R10,KBLEN+CON12    NO - STILL USE DIRCTY BLKSIZE  S20201
         ST    R10,MAXBLK         SET LENGTH OF 1 MIN BFR AREA   S20201
         ST    R5,MINSIZ          SET LENGTH OF 1 PAIR OF MIN BFRS20201
*                                 AREAS                          S20201
TR2BLKS  EQU   *                                                 X010XX
         SPACE 1                                                 S20201
* NOW SEE IF 2 OF THE LARGEST CURRENT (INPUT OR OUTPUT) DEVICE   S20201
* BLOCKSIZES ARE GREATER THAN  THE MINIMUM BUFFER SIZE           X010XX
* ALREADY KNOWN TO BE AVAILABLE                                  S20201
         SR    R1,R1                                             X010XX
         TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX
         BO    BAM00270           ONLY INPUT DEVTYPE MATTERS     X010XX
         L     R1,OUTCHAR+DBOFF   GET OUTPUT TRACK-BLOCKSIZE     S20201
BAM00270 TM    ULLDST,LOAD        ON LOAD                        X010XX
         BO    CKDBSZ             ONLY OUTPUT DEVTYPE MATTERS    X010XX
         C     R1,INCHAR+DBOFF    IS IT LESS THAN INPUT          S20201
         BNL   CKDBSZ             NO, USE IT                     S20201
         L     R1,INCHAR+DBOFF    YES, USE INPUT TRACK-BLOCKSIZE S20201
CKDBSZ   LA    R1,CON12(R1)  ALLOW ROOM FOR FLAG AND COUNT FLD @ZA26248
         L     R7,SVHI            ADDR OF HICORE + 1             S20201
         SLL   R1,C1         DOUBLE TRACK SIZE                 @ZA26248
         CR    R1,R10        IS TWO TRK GREATER THAN ONE BLOCK @ZA26248
         BH    BAM00274        NO, USE ONE BLOCK               @ZA26248
         LR    R1,R10          USE ONE BLOCK                   @ZA26248
BAM00274 EQU   *                                               @ZA26248
         LR    R0,R1          RESERVE SPACE FOR ONE            @ZA26248
*                             CCW PER 128 BYTES                @ZA26248
         SRL   R0,C4                                           @ZA26248
         SR    R7,R0                                           @ZA26248
         SRL   R7,C4           PUT ON DOUBLE WORD BOUNDARY     @ZA26248
         SLL   R7,C4                                           @ZA26248
         ST    R7,CCWAREA                                      @ZA26248
         SR    R7,R1              SUBTR 2 X LARGEST TRACK BLKSIZES20201
         SR    R7,R1                                             S20201
         C     R7,LOCOR           ENOUGH CORE FOR 2 TRKS (APPR.) S20201
         BNH   TRYHALF            NO - TRY FOR 1/2 OF WHATEVER ISS20201
*                                  AVAILABLE                     S20201
         LR    R10,R1             YES - SET TO ALLOCATE 2 TRKS   S20201
         OI    FLG2,TRKS2         INDICATE USING 2 TRKLENGT BFRS S20201
         NI    FLG2,FF-MBUSED                                    S20201
         B     SETBCB             GO TEST FOR OUTPUT TRK OVFLO   S20201
         SPACE 1                                                 X010XX
*  NOW TRY TO GET 4 BLOCKSIZES IF NOT AVAILABLE,USE MIN BUFFERS  X010XX
TRYHALF  L     R7,SVHI            ADDR OF HIGH CORE + 1          S20201
         XC    CCWAREA(C4),CCWAREA  CLEAR CCWAREA POINTER      @ZA26248
         LR    R3,R7                                             S20201
         S     R3,LOCOR           CALC AMT OF AVAILANLE SPACE    S20201
         LR    R6,R5              GET MINIMUM BUFFERPAIR SIZE    X010XX
         AR    R6,R6              DOUBLE IT TO 4 BLOCKS          X010XX
         CR    R3,R6              ENOUGH SPACE FOR THAT          X010XX
         BNH   USEMIN             NO,USE MINIMUM BUFFERS         X010XX
         SPACE 1                                                 X010XX
*ALLOCATE THE LARGER OF 4 BLOCKSIZES AND HALF THE AVAILABLE SPACEX010XX
         SRL   R3,DIV2            DIVIDE BY 2                    S20201
         LR    R2,R7              ADDR OF HIGH CORE + 1          S20201
         SR    R7,R3              CALC LOW ADDR OF THIS SPACE    S20201
         SR    R2,R6              SUBTR LENGTH OF DOUBLE MIN BFR S20201
*                                  PAIR                          S20201
         CR    R7,R2              IS HICOR-LOCOR/2 LESS THAN     S20201
*                                 HICOR-2 BFR PAIR               S20201
         BNL   USE2BLK2           IF NOT, THEN THE AMOUNT OF CORES20201
*                                  FOR USING 2 BFRS OF 2         S20201
*                                 BLOCKSIZES EACH IS LARGER, SO  S20201
*                                  IT WILL BE USED FOR ALLOC.    S20201
         SRL   R3,DIV2            CALC SIZE OF 1/2 BUFFER AREA   S20201
*                                  (MAY TRUNCATE,BUT THIS IS OK) S20201
         LR    R10,R3             GET SIZE INTO R10 FOR SETUP OF S20201
*                                  BCB                           S20201
         B     XTRK2              GO RESET TRKS2 AND SET UP BCB  S20201
SETMAX   EQU   *                  MINIMUM CORE REQUIRED IS TWICE S20201
*                                 LARGEST (BLKSIZE+KEYLEN+12)    S20201
         L     R7,SVHI            ADDR OF HIGHEST AVAIL CORE + 1 S20201
         SR    R7,R9              CALC ADDR OF START OF MIN BFR  S20201
         C     R7,LOCOR           ENOUGH SPACE FOR MINIMUM BUFFERS20201
         BNH   NOCORE             NO - WRT ERMSG AND GO TO NXT   S20201
*                                  COPY OPER.                    S20201
         ST    R8,MAXBLK          SET LENGTH OF 1 MIN BFR AREA   S20201
         ST    R9,MINSIZ          SET LENGTH OF 1 PAIR OF MIN BFRS20201
         LR    R5,R9              SET UP MIN LENGTH TO USE IN TRYS20201
*                                  FOR LARGER AREA               S20201
         LR    R10,R8                                            S20201
         B     TR2BLKS            TRY FOR AT LEAST DOUBLE-SIZE   S20201
*                                  BUFFERS                       S20201
         SPACE 1                                                 S20201
USE2BLK2 EQU   *                                                 S20201
*                 ONE TRK IS GT. 1 BLK ,BUT NOT ENOUGH CORE FOR  X010XX
*                 2 TRKS IS AVAILABLE.  FURTHERMORE, 1/2 OF      S20201
*                 AVAILABLE CORE IS LESS THAN 4 BLOCKSIZES. SINCES20201
*                  LARGER BUFFERS ENHANCE PERFORMANCE, SPACE FOR S20201
*                 4 BLOCKSIZES WILL BE ALLOCATED IN THIS CASE.   S20201
*                 AVAILABILITY CHECKED IN 306000 ETC             X010XX
         LR    R7,R2              SET UP WHAT WILL BE LOW ADDR   S20201
*                                  IN BCB                        S20201
         LR    R10,R5             GET LENGTH OF 1 BFR AREA       S20201
*                                  FOR LATER                     S20201
         B     XTRK2              NOW GO HANDLE JUST AS IF AREA  X010XX
*                                 TO BE ALLOCATED IS GREATER     S20201
*                                  THAN 2 TRKS                   S20201
         SPACE 2                                                 S20201
LDOUT    EQU   *                  SET TO ALLOCATE FOR            S20201
*                 COMPRESS-IN-PLACE.  MANDATORY BUFFER REQ'MENT  S20201
*              IS TWO 1-TRACK BUFFERS, TRY FOR 4 FIRST         @ZA26248
         L     R10,OUTCHAR+DBOFF  GET OUTPUT TRACK-BLOCKSIZE     S20201
         LA    R10,CON12(R10)     ADD 12 TO SIZE BEING USED      A38728
         SLL   R10,C1         DOUBLE THE BUFFER SIZE           @ZA26248
         LR    R9,R10                                            S20201
         AR    R9,R9              DOUBLE THE SIZE OF 1 TRACK     S20201
         L     R7,SVHI            ADDR OF HICORE + 1             S20201
         LR    R0,R9          ALLOW ROOM FOR CCW               @ZA26248
         SRA   R0,C4          PER 128 BYTES OF BUFFER          @ZA26248
         SR    R7,R0                                           @ZA26248
         SRL   R7,C4          PUT ON DDOUBLE WORD              @ZA26248
         SLL   R7,C4                                           @ZA26248
         ST    R7,CCWAREA     SET POINTER TO CCW AREA          @ZA26248
         SR    R7,R9              CALC WHERE BFRS WOULD START    S20201
         C     R7,LOCOR           SPACE FOR TWO 2-TRACK BFRS   @ZA26248
         BNH   NOCOREC1           NO - GO TRY 1 TRK BUF        @ZA26248
         BNH   NOCOREC            NO - GO WRT ERROR MSG          S20201
         OI    FLG2,MBUSED        INDICATE NO BUFFER-SQUEEZING   S20201
*                                  ALLOWED                       S20201
*                                 GO RESET 'TRKS2' AND           X010XX
*                                  ALLOCATE BCB                  S20201
         SPACE 1                                                 S20201
XTRK2    NI    FLG2,FF-TRKS2      RESET INDICATOR OF 2-TRK ALLOC.S20201
         B     SETBCB             GO SET UP BCB                  S20201
NOCOREC1 L     R10,OUTCHAR+DBOFF  GET OUTPUT TRACK-BLOCKSIZE   @ZA26248
         LA    R10,CON12(R10)     ADD 12 TO SIZE BEING USED    @ZA26248
         LR    R9,R10                                          @ZA26248
         AR    R9,R9              DOUBLE THE SIZE OF 1 TRACK   @ZA26248
         L     R7,SVHI            ADDR OF HICORE + 1           @ZA26248
         LR    R0,R9          ALLOW ROOM FOR CCW               @ZA26248
         SRA   R0,C4          PER 128 BYTES OF BUFFER          @ZA26248
         SR    R7,R0                                           @ZA26248
         SRL   R7,C4          PUT ON DDOUBLE WORD              @ZA26248
         SLL   R7,C4                                           @ZA26248
         ST    R7,CCWAREA     SET POINTER TO CCW AREA          @ZA26248
         SR    R7,R9              CALC WHERE BFRS WOULD START  @ZA26248
         C     R7,LOCOR           SPACE FOR TWO 1-TRACK BFRS   @ZA26248
         BNH   NOCOREC            NO - GO WRT ERROR MSG        @ZA26248
         OI    FLG2,MBUSED        INDICATE NO BUFFER-SQUEEZING @ZA26248
*                                  ALLOWED                     @ZA26248
*                                 GO RESET 'TRKS2' AND         @ZA26248
*                                  ALLOCATE BCB                @ZA26248
        B      XTRK2                                           @ZA26248
         SPACE 1                                                 S20201
USEMIN   EQU   *                  ALLOCATE MINIMUM SIZES INTO BCBS20201
         OI    FLG2,MBUSED        INDIC NO 'SQUEEZING' OF BFR    S20201
*                                  ALLOWED                       S20201
         NI    FLG2,FF-TRKS2                                     S20201
         L     R7,SVHI            COMPUTE STARTING ADDR+1 OF BCB S20201
         S     R7,MINSIZ                                         S20201
SETBCB   TM    ULLDST,UNLOAD      ON UNLOAD                      X010XX
         BO    SETBCB1            DONT CARE FOR OVERFLOW         X010XX
         LA    R3,OUTDCB          ADDR OF OUTDCB                 X010XX
         TM    DCBRECFM,TKOFLO    IS TRACK OVERFLOW SPECIFIED ON S20201
*                                  OUTPUT                        S20201
         BZ    SETBCB1            NO - BCB CAN NOW BE ALLOCATED  S20201
*              IF YES, IT IS NECESSARY TO ADD TO THE SIZE OF THE S20201
*              SECOND (OR ''OUTPUT'') BUFFER AREA TO ACCOMMODATE S20201
*              ENOUGH EXTRA SPACE FOR ADDITIONAL SEGMENTATION    S20201
*              OF OUTPUT RECORDS.                                S20201
         C     R10,OUTCHAR+DBOFF  IS ''INPUT'' BFR GT OUTPUT     S20201
*                                  TRACKSIZE                     S20201
         BH    CALC12X            YES - NEED TO COMPUTE A        S20201
*                                  FUDGE FACTOR                  S20201
         LA    R9,TKOFUDGE        NO - SET FUDGE FACTOR TO 12,   S20201
*                                 TO ALLOW FOR ONE EXTRA SEGMENT S20201
*                                 IF NEEDED                      S20201
ADDX     LR    R8,R10             SET TO CALC LENGTH OF          S20201
*                                  INPUT+OUTPUT+FUDGE FACTOR     S20201
         AR    R8,R8                                             S20201
         AR    R8,R9              ADD FUDGE FACTOR TO TWICE      S20201
*                                  INPUT BFRLEN                  S20201
         L     R2,SVHI            GET ADDR OF HIGHEST AVAIL-     S20201
*                                  ABLE CORE + 1                 S20201
         SR    R2,R8              SUBTR TOTAL ADJUSTED BUFFER    S20201
*                                  LENGTH                        S20201
         C     R2,LOCOR           IS ENOUGH EXTRA CORE SPACE     S20201
*                                  AVAILABLE                     S20201
         BNH   TSTMXB             IF NOT, SEE IF IT IS POSSIBLE  S20201
*                                  TO SHORTEN THE LENGTH OF THE  S20201
*                                 ''INPUT'' BUFFER,THEREBY EFFEC-S20201
*                                  TIVELY INCREASING THE LENGTH  S20201
*                                  OF THE OUTPUT BUFFER          S20201
         SR    R7,R9              ELSE ADJUST POIMTER TO START OFS20201
*                                  BUFFER AREA  BY NUMBER OF     S20201
*                                  BYTES IN FUDGE FACTOR         S20201
SETMB    OI    FLG2,MBUSED        INHIBIT FUTURE DE-ALLOCATION   S20201
         B     SETBCB1            NOW GO SET UP BCB              S20201
         SPACE 1                                                 S20201
TSTMXB   C     R10,MAXBLK         IS LENGTH OF ''INPUT'' BUFFER  S20201
*                                  GT THE MINIM. ALLOWABLE SIZE  S20201
         BNH   NOCORE             IF NOT,CANT SHORTEN IT -       S20201
*                                 GO WRITE MSG                   S20201
         SR    R10,R9             YES - DECREASE LENGTH OF       S20201
*                                  ''INPUT'' BFR BY FUDGE FACTOR S20201
         C     R10,MAXBLK         WAS TOO MUCH TAKEN OUT OF THIS S20201
*                                  BUFFER                        S20201
         BL    NOCORE             YES - WRT ERROR MESSAGE        S20201
         B     SETMB              NO - GO SET UP TO ALLOCATE BCB S20201
         SPACE 1                                                 S20201
CALC12X  SR    R8,R8                                             S20201
         L     R5,OUTCHAR+DBOFF   GET LENGTH OF TRACK-BLOCKSIZE  S20201
*                                  FROM DEVTYPE AREA             S20201
         LR    R9,R10             LENGTH OF INPUT BUFFER AREA    S20201
         DR    R8,R5              DIV TRK-BLKSIZE INTO INPUT     S20201
*                                 BUFFERSIZE                     S20201
         LTR   R8,R8              ANY REMAINDER                  S20201
         BZ    ADDONE             NO, DONT ADD TWO TO QUOTIENT   S20201
         LA    R9,P1(R9)          ADD 1 TO QUOTIENT, AND THEN -  S20201
ADDONE   LA    R9,P1(R9)          ADD 1 TO QUOTIENT              S20201
         SR    R8,R8                                             S20201
         LA    R5,TKOFUDGE        GET FIDGE FACTOR FOR 1 SEGMENT S20201
         MR    R8,R5              MPLY BY NBR OF OUTPUT TRACK-BLKS20201
*                                  SIZES (CEILING + 1) WHICH FIT S20201
*                                  INTO INPUT BUFFER LENGTH.     S20201
*                                  THIS YIELDS MAXIMUM SUM OF    S20201
*                                  12-BYTE SEGMENTATION FACTORS  S20201
*                                  TO BE ADDED TO LENGTH OF      S20201
*                                  OUTPUT BUFFER                 S20201
         B     ADDX               ADD THIS MUCH TO TOTAL BFR LNGTS20201
SETBCB1  BCTR  R7,R0              SUBTR 1 FROM ADDR IN R7        S20201
         ST    R7,BCB             SET STARTING ADDR OF FIRST     S20201
*                                  BUFFER AREA                   S20201
         ST    R7,HICOR           SET AS ADDR+1 OF HIGHEST       S20201
*                                  AVAILABLE CORE                S20201
         AR    R7,R10             ADD KENGTH OF 1 BFR AREA       S20201
         ST    R7,ENDFST1         SET ADDR OF END OF 1ST BUFFER  S20201
         LA    R7,P1(R7)          ADD 1 TO GET ADDR OF START OF  S20201
*                                  SECOND BUFFER                 S20201
         ST    R7,BEGFST2         SET STARTING ADDR OF 2ND BFR   S20201
         ST    R10,BUFSIZ         SAVE LENGTH OF 1 BUFFER AREA   S20201
         AR    R7,R10         GET END OF SECOND BUFFER         @ZA26248
         ST    R7,END2ND2     SET POINTER TO END SEC BUFFER    @ZA26248
         DROP  R3                                                S20201
*        END OF BUFFER ALLOCATION                                S20201
         EJECT
* PREPARE TO SCAN INPUT DIRECTORY ENTRIES FOR MEMBERS TO BE      S20201
* COPIED FROM THE ''CURRENT'' INPUT DATA SET -                   S20201
         TM    COMDCDSW,SELECTSC  IS THIS A SELECTIVE COPY       S20201
         BZ    SETNNCT1           IF NOT, GO CLEAR NEWNAME COUNT S20201
         L     R7,CTAD            ADDR OF CTLTAB TO VARIOUS AREASS20201
         ST    R7,BUMP                                           S20201
         ST    R7,NMAD                                           S20201
         TM    FLG3,FTINGP        HAS INDD-GROUP INITIALIZION    S20201
*                                  OCCURRED                      S20201
         BO    TESUF              YES,CHECK CNT OF UNFOUND MBRS  S20201
         OI    FLG3,FTINGP        SET INDD-GROUP-INITIALIZED SW. S20201
         LH    R7,NNCT1           ANY NEWNAMES                   S20201
         LTR   R7,R7                                             S20201
         BZ    ASRT1              IF NOT, GO SORT SETAB ALPH. BY S20201
*                                  MEMBERNAME                    S20201
         L     R7,BUMP            ADDR OF SETAB                  S20201
         L     R6,BCB             SET UP TO EXTRACT OLD/NEWNAME  S20201
*                                 PAIRS                          S20201
         LA    R6,X0(R6)          ADDR OF BFR - SET HI ORDER BYTES20201
*                                  TO ZERO                       S20201
TSB2     TM    X0(R7),SEBIT2      IS THIS A RENAMED MEMBER       S20201
         BO    SVNOLD             IF SO, SAVE OLD/NEW NAME PAIRS S20201
NLST     LA    R7,TABLEN(R7)      POINT TO NXT SETAB ENTRY       A50938
         C     R7,SESTOP          IS THIS THE LAST ENTRY         A50938
         BL    TSB2               IF NOT LAST ENTRY DONE,LOOP    A50938
*                                 TO TEST NEXT                   A50938
         B     ASRT1              IF SO, DO ALPH. SORT OF TABLE  S20201
SVNOLD   LA    R8,SXTN(R6)        ADD 16 TO CURR. BUFFER ADDR    S20201
         C     R8,ENDFST1         IF THIS EXCEEDS AVAIL BFR AREA,S20201
         BNL   NOCORENN           GO WRT MSG AND TERM.           S20201
         MVC   X0(NAMLEN,R6),NMDISP(R7)  MOVE OLDNAME TO BUFFER  S20201
         MVC   NAMLEN(NAMLEN,R6),TABLEN+NMDISP(R7)  NEWNAME TO   S20201
*                                 BUFFER                         S20201
         LA    R6,SXTN(R6)        POINT TO NXT AVAIL BFR AREA    S20201
         LA    R7,TABLEN(R7)      SKIP OLDN. AND                 S20201
         B     NLST               GO SEE IF NEWNAME IS LAST ENTRYS20201
SETNNCT1 XC    NNCT1(L2),NNCT1    SET NEWNAME COUNT TO 0         S20201
         XC    ENCT(L2),ENCT      SET CTLTAB ENTRY-COUNT TO 0    S20201
         L     R8,LOCOR           ADDR OF LOWEST YET-UNUSED CORE S20201
         ST    R8,CTAD            INIT WHERE TO BLD CTLTAB       S20201
*                                 (EXCL/FULL)                    S20201
         ST    R8,BUMP            INIT POINTER USED WHILE BLDG   S20201
*                                  TLTAB                         S20201
         TM    COMDCDSW,EXCLUDES  IS THIS AN EXCLUSIVE COPY      S20201
         BZ    SBFLGS             IF NOT, GO PREPARE TO READ     S20201
*                                 INPUT DIR                      S20201
         MVC   NMAD(L4),SEBEGIN   SET ADDR OF NAMES FROM ADDR OF S20201
*                                  SETAB                         S20201
         TM    FLG3,SORTDONE      WAS ALPH SORT DONE (CURRENT    S20201
*                                  INDD GRP)                     S20201
         BO    SBFLGS             IF SO, GO SET UP I/O FLAGS     S20201
         B     ASRT1              ELSE GO DO ALPH SORT OF SETAB  S20201
TESUF    SR    R8,R8                                             S20201
         CH    R8,UFCT            IS COUNT OF UNFOUND MBRS = 0   S20201
         BNE   SBFLGS             IF NOT, LOOK FOR MORE ON THIS  S20201
*                                 IN DS                          S20201
         STH   R8,INDDCT          ELSE SET TO SKIP REST OF       S20201
*                                  INPUT DD'S                    S20201
* AT THIS POINT, SET UP TO WRT INFORMATIVE MSG SAYING ALL        S20201
*        SELECTED MEMBERS WERE FOUND, AND NOT ALL INPUT          S20201
*        DATA SETS WERE REQUIRED.                                S20201
*        LINK TO WRT MSG                                         S20201
         B     TOTERM1            GO TO TERMINATE CURR INDD GROUPS20201
         EJECT
SLMSGGSC EQU   *                                                 S20201
         CLI   RCBUF,CH8          IS COMPLETION CODE 8 OR HIGHER A44144
         BNL   DONTSET            YES- DON'T SET RETURN CODE     A44144
         MVI   RCBUF,CH8          SET COMPLETION CODE            A44144
DONTSET  EQU   *                                                 A44144
         MVI   VTMFLG1,UNUSEND    INDICATE UNUSUAL TERMINATION OFS20201
*                                 THIS COPY STEP/OPERATION       S20201
SLMSG    EQU   *                                                 S20201
         LA    R15,RETCOD8        SET RETURN CODE=8              S20201
         B     RETMAIN            TO RETURN TO IEBDSCPY          S20201
TOTERM1  EQU   *       CURR INDD-GROUP SUCCESSFULLY COMPLETED -  S20201
*                                 NEXT CARD                      S20201
         MVI   PARAMS,MSGULLD     MSG COULD BE CHANGED           X010XX
         MVI   COPDISP,OFF22      AT DISPLACEMENT OF 22          X010XX
         MVI   MSG1+P1,M48        MSG CODE                       S20201
         B     SLMSG              GO TO SET LAST MSG INDICATOR   S20201
NOCORE   EQU   *    CANT GET MIN I/O BFR SPACE - GET NXT COPY CD S20201
         MVI   MSG1+P1,M40        MSG CODE                       S20201
         B     SLMSGGSC           SET RC TO 4, WRT MSG, TERMINATES20201
NOCOREC  EQU   *    NOT ENUF CORE FOR I/O BFRS DURING COMPRESS   S20201
         MVI   MSG1+P1,M41        MSG CODE                       S20201
         B     SLMSGGSC           SET RC TO 4, WRT MSG, TERMINATES20201
NOCORENN EQU   *   OLD/NEW NAMES DONT ALL FIT IN BFR-NXT COPY CD S20201
         MVI   MSG1+P1,M43        MSG CODE                       S20201
         B     SLMSGGSC           SET RC TO 4, WRT MSG, TERMINATES20201
ASRT1    EQU   *                                                 S20201
         SR    R15,R15            SET RETURN CODE=0              S20201
         B     RETMAIN            TO RETURN TO IEBDSCPY          S20201
CMPERR1  EQU   *                  CANNOT COMPRESS WITH SELECT/   S20201
*                                 EXCLUDE                        S20201
         MVI   MSG1+P1,M39        MSG CODE                       S20201
         B     SLMSGGSC           SET RC TO 4,WRT MSG,TERMINATE  S20201
SBFLGS   EQU   *                                                 S20201
         LA    R15,RETCOD4        SET RETURN CODE=4              S20201
RETMAIN  L     R13,SV2+CHAINBK    RESTORE PTR TO SAVEAREA        S20201
         RETURN (14,12),,RC=(15)  RETURN TO BRANCHTABLE IN DSCPY S20201
PATCHLN  EQU   (*-START)/20       5 PER-CENT PATCH AREA LENGTH   S20201
PATCH    DC    XL(PATCHLN)'00'    PATCH AREA                     A41780
         EJECT
IEBMCA   DSECT                                                   S20201
         IEBMCA                                                  S20201
         DCBD  DSORG=PS                                          S20201
         END
