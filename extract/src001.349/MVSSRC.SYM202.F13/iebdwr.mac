WRTE     TITLE 'IEBCOPY  WRITE ROUTINE- IEBDWR'
IEBDWR   CSECT
         SPACE 1
*TITLE- IEBCOPY WRITE ROUTINE- IEBDWR                                 *
*A 315004319620-319800                                         @YM04451
*A 315550-315640                                               @YM06447
*D 315424                                                      @YM06447
*A 315424,315464,319100-320100                                 @YM06435
*A 080910,315020-315084                                        @YM06434
*A 080990-080994,315100-318600                                 @YM06433
*C 309100                                                      @YM06433
*D611400                                                         A35473
*C716000                                                         A41780
*C366000                                                        OY01184
*A309020-312000                                                 YL026VD
*C687200                                                        YL026VD
*C309060                                                        YM06949
*A309044                                                        YM06949
*A129500-130700                                                @ZA00915
*D190700-190720,209900-209920                                  @ZA01672
*A080997,309100-309322,315002-315008,702100-706600             @ZA26248
*D709000,716000                                                @ZA26248
*                                                                     *
*STATUS- CHANGE LEVEL 001                                             *
*                                                                     *
*FUNCTION/OPERATION- THIS MODULE WRITES DIRECTORIES OR MEMBER DATA TO *
*       THE OUTPUT DATA SET. THE SPILL FILES, SYSUT3 AND SYSUT4 CAN   *
*       ALSO BE WRITTEN. IT STARTS WRITING FROM THE RECORD POINTED TO *
*       BY 'WRTNEXT' AND STOPS AFTER WRITING THE RECORD THAT HAS THE  *
*       'ENDPROC' SWITCH SET IN THE FLAG FIELD.                       *
*                                                                     *
*ENTRY POINTS- ENTERED AT IEBDWR                                      *
*                                                                     *
*INPUT- SWITCH NAMED 'TAG' IS SET BY CALLER TO TELL IEBDWR WHICH DATA *
*      SET IS BEING WRITTEN. 'TAG5' SET IF TO READ BACK CHECK.        *
*                    ALWAYS READ BACK CHECKS DIRECTORY BLOCKS AFTER   *
*       WRITING. WILL READ BACK CHECK ENTIRE DATA SET WRITTEN IF      *
*       'TAG5' SWITCH SET IN 'TAG' BEFORE ENTRY TO IEBDWR.            *
*       'WRTNEXT' POINTS TO STARTING RECORD TO BE WRITTEN.            *
*       'WRTOVR' SWITCH SET IN FLAG FIELD AHEAD OF RECORD TO BE       *
*      WRITTEN IF TO WRITE 'SPECIAL' COUNT/KEY/DATA FOR A SEGMENT OF  *
*      AN OVERFLOW RECORD.                                            *
*       'LASTREC' SWITCH SET IN FLAG OF LAST RECORD IN CURRENT BUFFER.*
*       'ENDPROC' SWITCH SET IN FLAG OF LAST RECORD TO BE WRITTEN.    *
*                                                                     *
*OUTPUT- MBBCCHHR IN FDAD OF DCB SET TO REFLECT LAST RECORD THAT WAS  *
*       SUCCESSFULLY WRITTEN.                                         *
*       'RDGSW' IN SWITCH 'WSFLAG' RESET BECAUSE ARE WRITING NOT      *
*      READING. PCI APPENDAGE USES THIS SWITCH TO DETERMINE WHETHER   *
*      ARE READING OR WRITING.                                        *
*                                                                     *
*EXTERNAL ROUTINES- PCI APPENDAGE IGG019C8, EXCP WRITE, WAIT, SYNADAF,*
*                                                                     *
*EXITS- NORMAL RETURN TO CALLER ON LINK REGISTER.                     *
*       ENTRY TO SYNADAF ROUTINE ON HARD I/O ERROR. (IEBIOE)          *
*                                                                     *
*TABLES/WORK AREAS-                                                   *
*       -BCB-      POINTERS TO BUFFERS                                *
*       -IOB-      NEED BY EXCP- OUTIOB,UT3IOB,UT4IOB                 *
*       -EVENTCB-  EVENT CONTROL BLOCK FOR EXCP                       *
*       -DCB-      OUTDCB,UT3DCB,UT4DCB FOR UPDATING FDAD MBBCCHHR    *
*       -WRPTR1-   ADDRESS OF CURRENT CCW                             *
*       -WRPTR2-   ADDRESS OF NEXT CCW                                *
*       -SV4-      REGISTER SAVE AREA IN IEBMCA COMMUNICATION AREA    *
*       -LASTADDR- MBBCCHHR USED TO PREPARE FOR HEAD SWITCH/RETRY     *
*       -WRCNT-    NUMBER OF RECORDS WRITTEN.                         *
*                                                                     *
*ATTRIBUTES- SERIAL REUSABLE.                                         *
         EJECT
*                                                                     *
*                  SYMBOLIC REGISTERS FOR WRITE ROUTINE               *
*                                                                     *
*           BASE ADDRESS REGISTER 12, COMMON AREA REGISTER 4          *
*                                                                     *
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4                       POINTER TO COMMUNICATIONS AREA
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12                      BASE ADDRESS REGISTER
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
SAV4     EQU   4                  SAVE AREA DISPLACEMENT
SAV8     EQU   8                  SAVE AREA DISPLACEMENT
XFF      EQU   X'FF'              RESETS SWITCHES
LEN4     EQU   4                  LENGTH OF 4
X68      EQU   X'68'              PCI  FLAG
X03      EQU   X'03'              NOP COMMAND
LEN8     EQU   8                  LENGTH OF 8
LEN0     EQU   0                  LENGTH OF 0
X1D      EQU   X'1D'              WRITE  C/K/D
X60      EQU   X'60'              CC/SLI FLAGS                   S20201
LEN12    EQU   12                 LENGTH OF 12
X0D      EQU   X'0D'              WRITE KEY DATA
LEN6     EQU   6                  LENGTH OF 6
L264     EQU   264                LENGTH OF 264
X01      EQU   X'01'              WRITE SPECIAL C/K/D
LEN9     EQU   9                  LENGTH OF 9
LEN2     EQU   2                  LENGTH OF 2
LEN10    EQU   10                 LENGTH OF 10
LEN7     EQU   7                  LENGTH OF 7
LEN1     EQU   1                  LENGTH OF 1
X31      EQU   X'31'              OP CODE
LEN3     EQU   3                  LENGTH OF 3
X08      EQU   X'08'              TIC
X7F      EQU   X'7F'              SUCCESSFUL
LEN5     EQU   5                  LENGTH OF 5
MS5      EQU   5                  MASK OF 5
X80      EQU   X'80'                                             X010XX
X04      EQU   X'04'                                             X010XX
X78      EQU   X'78'              PCP SKIP SLI
X41      EQU   X'41'              I/O ERROR
X42      EQU   X'42'              EXTENT ADDR VIOLATED
LEN16    EQU   16                 LENGTH OF 16
X00      EQU   X'00'              RECORD NUMBER = 0
LEN11    EQU   11                                                X010XX
RPS      EQU   X'10'              RPS INDICATOR                  S20201
C35      EQU   35                                              @YM06434
C7       EQU   7                                               @YM06433
C1       EQU   1                                               @YM06433
LEN20    EQU   20                                              @ZA26248
         EJECT
         SAVE  (14,12),,*
         BALR  GR12,GR0           ESTABLISH ADDRESSABILITY
         USING START,GR12
         USING IEBMCA,GR4
         SPACE 1
         SPACE 1
START    EQU   *
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA IN NEW
         LA    GR15,SV5
         ST    GR15,SAV8(GR13)    POINTER TO NEW SAVE AREA IN OLD
         LR    GR13,GR15               POINTER TO NEW SAVE AREA
         LA    GR3,SECTOR              RESTORE THE ADDRESSES   @ZA00915
         ST    GR3,SSECTOR              IN THE SET/READ SECTOR @ZA00915
         MVI   SSECTOR,X'23'            CCWS TO VIRTUAL, IS    @ZA00915
         ST    GR3,RSECTOR              CHANGED TO REAL BY     @ZA00915
         MVI   RSECTOR,X'22'            IGG019FT               @ZA00915
         NI    WSFLAG,XFF-RDGSW   RESET READING SWITCH
         OI    AOS,PCI            TURN ON PCI PROCESSING FLAG    X010XX
         TM    FORM,ERASE              ENTERED TO ERASE A TRACK(S)
*                                        USED ONLY FOR TRACK OVFLOW
         BO    ERASEIT                 YES, GO TO ERASE RTN
         XC    WRPCICNT(LEN4),WRPCICNT CLEAR PCI COUNT BUFFER
         LA    GR8,WRCW11              FETCH 1ST CCW IN LIST
         LA    GR9,WRCW21              FETCH 2ND CCW IN LIST
         MVC   LEN1(LEN3,GR9),WRTNEXT+LEN1   INIT SECOND CHAIN   X010XX
*                                 TO POINT WITHIN BUFFER         X010XX
         STM   GR8,GR9,WRPTR1          INITIALIZE CCW CONTROL
         NI    TAG,XFF-TAG6       RESET TAG6
         L     GR6,WRTNEXT             WHERE TO WRITE FROM
         LA    GR7,LEN4(GR6)      SPACE OVER FMBB TO START COUNT
         MVI   LEN4(GR8),X68      RESET PCI FLAG
         TM    TAG,TAG4                WRITING SYSUT3
         BO    UT3WRT             YES
         TM    TAG,TAG1                WRITING OUTPUT DIRECTORY
         BO    OUTDIR             YES- WRITE KEY/DATA NOT COUNT
         ST    GR7,LEN0(GR8)      STORE START OF COUNT IN CCW ADR.
         TM    LEN0(GR6),WRTOVR   OVERFLOW SEGMENT
         BO    WRTSPECL           YES- WRITE SPECIAL C/K/D OP CODE
         MVI   LEN0(GR8),X1D      MAKE OP CODE WRITE C/K/D
         TM    TAG,TAG2                PROCESSING MEMBER
         BO    MEMBPROS           YES
         LA    GR3,UT4IOB              SYSUT4 IOB ADDRESS
         LH    GR1,UT4LRECL            SYSUT4 RECORD SIZE
         B     STRSPILL                SET UP CCW AND IOB
         SPACE 1
UT3WRT   EQU   *
         NI    AOS,XFF-PCI        TURN OFF PCI PROCESSING FLAG   X010XX
         LA    GR3,UT3IOB              SYSUT3 IOB ADDRESS
         LH    GR1,UT3LRECL            SYSUT3 RECORD SIZE
         L     GR6,ADWK                FETCH SYSUT3 BUFFER PTR.
         MVI   LEN4(GR8),X60           SET CC/SLI - ONLY ONE     S20201
*                                        RECORD WRITE            S20201
         LA    GR7,LEN4(GR6)      SPACE OVER FMBB
         TM    FLG2,FMTSPL             FORMAT WRITE
         BO    UT3FMTWT                YES-XFER
         LA    GR10,LEN12(GR6)    NO-SKIP TO COUNT FIELD
         ST    GR10,LEN0(GR8)     STORE INTO CCW DATA ADDR
         MVI   LEN0(GR8),X0D      SET WRITE KEY/DATA OP CODE
         STH   GR1,LEN6(GR8)      STOW BYTE COUNT
         OI    TAG,TAG6                INDICATE NON-FORMAT WRITE
         B     SETUPIOB                GO TO SET UP IOB
UT3FMTWT EQU   *
         ST    GR7,LEN0(GR8)      STORE INTO CCW DATA ADDR.
         MVI   LEN0(GR8),X1D      SET WRITE  C/K/D
         SPACE 1
STRSPILL EQU   *
         LA    GR1,LEN8(GR1)      ALLOW 8 BYTE COUNT FIELD
         STH   GR1,LEN6(GR8)      COUNT SYSUT3/4 TO WRITE
         B     SETUPIOB                SET UP IOB FIELDS
         SPACE 1
OUTDIR   EQU   *
         LA    GR1,LEN12(GR6)     SPACE OVER FMBBCCHHR
         ST    GR1,LEN0(GR8)      STOW IN CCW DATA ADDR.
         MVI   LEN0(GR8),X0D      WRITE KEY/DATA OP CODE
         LA    GR1,L264           FETCH COUNT
         STH   GR1,LEN6(GR8)      STORE COUNT IN CCW
         LA    GR3,OUTIOB              OUTPUT IOB ADDRESS
         B     SETUPIOB                SET UP CCWS AND IOB
WRTSPECL EQU   *
         MVI   LEN0(GR8),X01      WRITE SPECIAL C/K/D CCW OP CODE
         SPACE 1
         SPACE 1
MEMBPROS EQU   *
         SR    GR1,GR1
         IC    GR1,LEN9(GR6)      GET KEY SIZE
         LA    GR1,LEN8(GR1)      ADD 8 FOR COUNT SIZE
         MVC   WKA1(LEN2),LEN10(GR6)   MOVE IN DATA LENGTH
         AH    GR1,WKA1                BOUNDARY OK NOW TO ADD FROM
         STH   GR1,LEN6(GR8)      TOTAL LENGTH OF MEMBER READ
         LA    GR3,OUTIOB              LOAD POINTER TO OUTPUT IOB
         SR    GR1,GR1            CLEAR REG                      X010XX
         LA    GR5,OUTDCB         LOAD POINTER TO DCB            X010XX
         IC    GR1,KEYDCB(GR0,GR5)  INSERT KEY LENGTH            X010XX
         AH    GR1,OBLKSIZE       ADD BLOCK SIZE                 X010XX
         LA    GR1,LEN8(GR0,GR1)  ADD COUNT FIELD LENGTH         X010XX
         SRL   GR1,LEN11          DIV BY 2K                      X010XX
         STC   GR1,WRL1           STORE MAX LENGTH IN LIST       X010XX
         OI    WRL1,X80           RESTORE OPTION BIT             X010XX
         STC   GR1,WRL2           STORE MAX LENGTH IN LIST       X010XX
         OI    WRL2,X80           RESTORE OPTION BIT             X010XX
         SPACE 1
SETUPIOB EQU   *
         L     GR5,DCB4IOB(GR3)        DCB ADDRESS FROM IOB
         LA    GR5,LEN0(GR5)      CLEAR HIGH ORDER BYTE
         LA    GR1,CCW1           POINTER TO SEARCH EQUAL ID CCW X010XX
         ST    GR1,WRITLIST       BEGIN OF CHAIN(FOR EXTEND LIST)X010XX
         ST    GR1,RBLIST         BEGIN OF CHAIN(FOR EXTEND LIST)X010XX
         MVI   WRITLIST,X03       LENGTH OF CHAIN                X010XX
         MVI   RBLIST,X03         LENGTH OF CHAIN                X010XX
         LA    GR2,LEN16(GR8)          LOAD PTR TO STOP CCW SLOT S20201
         ST    GR2,LEN8(GR0,GR8)       STORE IN TIC CCW SLOT     S20201
         MVI   LEN8(GR8),X08           RESTORE TIC OP CODE       S20201
         MVI   LEN16(GR8),X03          SET STOP CCW TO NOP       S20201
         LA    GR2,DEVOFF(GR0,GR3)     PTR TO DEVICE INFO        S20201
         TM    LEN1(GR2),RPS           IS THIS AN RPS DEVICE     S20201
         BNO   NOTRPS1                 NO, GO ON                 S20201
         SPACE 1                                                 S20201
*    IF RPS IS SUPPORTED A SET SECTOR  CCW IS                    S20201
* APPENDED TO THE NORMAL CCW CHAIN                               S20201
*                                                                S20201
         LA    GR1,SSECTOR        PTR TO SET SECTOR CCW          S20201
         ST    GR1,WRITLIST       BEGIN OF CHAIN(FOR EXTEND LIST)X010XX
         ST    GR1,RBLIST         BEGIN OF CHAIN(FOR EXTEND LIST)X010XX
         MVI   RBLIST,X04         LENGTH OF CHAIN                X010XX
         MVI   WRITLIST,X04       LENGTH OF CHAIN                X010XX
         LA    GR2,SCTOFF(GR0,GR3)     PTR TO CURRENT SECTOR     S20201
*                                        VALUE                   S20201
         MVC   SECTOR(LEN1),LEN0(GR2)  MOVE VALUE TO ''SECTOR''  S20201
         MVC   RDBKSAVE(LEN1),LEN0(GR2)  SAVE CURRENT SECTOR     S20201
*                                        VALUE IN CASE READ      S20201
*                                        BACK CHECK REQUIRED     S20201
         SPACE 1                                                 S20201
         MVC   LEN16(LEN4,GR8),RSECTOR REPLACE NOP CCW WITH RS   S20201
NOTRPS1  EQU   *                                                 S20201
         MVC   WRCW23(LEN4),WRCW13     MAKE STOP CCW'S EQUAL     S20201
*                                       (EITHER NOP OR RS)       S20201
         ST    GR1,IOBCAW(GR3)         ADDRESS OF START CCW INTO IOB
         LA    GR1,CCW1           LOAD PTR TO SIDEQ CCW          S20201
*                                   GR1 MAY HAVE POINTED TO      S20201
*                                   SET SECTOR CCW               S20201
         SR    GR2,GR2
         IC    GR2,LEN4(GR7)      PICK UP 'R' FROM COUNT FIELD
         TM    TAG,TAG1+TAG6           DIRECTORY OR SYSUT3 NON FORMAT
         BM    ARNDRDEC                DO NOT CHANGE R WRITE KEY/DATA
         BCTR  GR2,GR0            DECREMENT FOR SEARCH
ARNDRDEC EQU   *
         MVC   DISKADR(LEN7,GR5),LEN1(GR6)  MOVE MBBCCHH TO FDAD IN DCB
         STC   GR2,DISKREC(GR5)        SET R FIELD IN FDAD OF DCB
         MVC   IOBMCCHH(LEN8,GR3),DISKADR(GR5) MBBCCHHR FDAD TO IOB
         MVC   LASTADDR(LEN8),DISKADR(GR5)  SAVE MBBCCHHR FOR RESTART
         OI    IOBFLGS(GR3),NONSEQEN   SET COMD CHAIN-UNRELATED IN IOB
         LA    GR6,IOBCCHHR(GR3)       CCHHR FROM IOB
         ST    GR6,LEN0(GR1)      STORE SEARCH ID ADDRESS
         MVI   LEN0(GR1),X31      RESTORE OP CODE
         NI    TAG,XFF-TAG6       RESET TAG6
         SPACE 1
TRY      EQU   *
         SR    GR5,GR5                 CLEAR REGISTER            S20201
         IC    GR5,IOBRECNO(GR0,GR3)   LOAD SEARCH RECORD        S20201
*                                        NUMBER                  S20201
         LTR   GR5,GR5                 RECORD NUMBER = 0         S20201
         BZ    ZEROSCTR                YES, UPDATE ''SECTOR''    S20201
         TM    TAG,TAG1                WRITING OUTPUT DIRECTORY  S20201
         BNO   ARND1                   NO, GO AROUND             S20201
         CLI   IOBRECNO(GR3),LEN1      UPDATING RECORD 1         S20201
         BNE   ARND1                   NO, GO AROUND             S20201
ZEROSCTR EQU   *                                                 S20201
         MVI   SECTOR,X00              SET ''SECTOR'' = 0        S20201
ARND1    EQU   *                                                 S20201
         MVC   CCW3+LEN1(LEN3),WRPTR1+LEN1  SET UP TIC ADDRESS
         MVI   CCW3,X08           MAKE SURE ITS A TIC
         SPACE 1
RESTART  EQU   *
         TM    AOS,PCI                 NEED PCI HANDLING        YL026VD
         BO    RESTART1                YES, DO EXCPVR           YL026VD
         LR    GR1,GR3                 SET IOB ADDRESS          YM06949
         EXCP  (1)                     ISSUE WRITE EXCP         YM06949
         WAIT  1,ECB=EVENTCB           WAIT MACRO               YL026VD
         B     SAME1                                            YL026VD
         SPACE 1
RESTART1 ST    GR3,IOBVRPTR                                    @YM06433
*                             THIS ROUTINE  REPLACES PCI       @ZA26248
*                             CHANNEL PROGRAMS WITH SINGEL     @ZA26248
*                             COMMAND CHAIN OF CCW'S TO WRITE  @ZA26248
*                             TOTAL BUFFERS AND SIMULATES      @ZA26248
*                             PCI ROUTINE. IT IS USED IF TWO   @ZA26248
*                             FULL TRK BUFFERS OR COMPRESSING  @ZA26248
*                                                              @ZA26248
         L     GR6,CCWAREA    GET ADDESS OF CCWAREA TO TEST IF @ZA26248
         LTR   GR6,GR6        IT IS PRESENT. IF NOT, USE PCI   @ZA26248
         BZ    BX49           BRANCH NO CCWAREA  USE PCI       @ZA26248
BX48     TM    TAG,TAG6       TEST IF THIS REENTRY FOR RDBACK  @ZA26248
         BO    BX51           YES, WE ALREADY PERFORMED EXIT   @ZA26248
         STM   GR5,GR13,PCISAVE    SAVE REGS                   @ZA26248
*                                                              @ZA26248
         NI    AOS,X'FF'-PCI  TURN OFF PCI                     @ZA26248
*                                                              @ZA26248
         L     GR5,WRPTR1     GET ADDRESS OF WHERE TO          @ZA26248
         L     GR5,LEN0(GR5)  WRITE FROM CCW                   @ZA26248
         LA    GR5,LEN0(GR5)  CLER OP CODE                     @ZA26248
*                                                              @ZA26248
         LA    GR0,X04        CONSTANT 4 TO BACK UP            @ZA26248
         TM    TAG,TAG1       TEST IF WRITING OUTPUT DIR BLKS  @ZA26248
         BNO   BX42           BRANCH IF NOT                    @ZA26248
         LA    GR0,LEN12      SET UP TO SKIP FMBBCCHHRKDD      @ZA26248
BX42     SR    GR5,GR0        TO FMBB                          @ZA26248
BX47     L     GR6,CCWAREA    GET ADDESS WHERE TO              @ZA26248
         TM    TAG,TAG1       TEST WRITING DIRECTORY           @ZA26248
         BZ    BX43           BRANCH NOT                       @ZA26248
         LA    GR6,DWRTL-LEN8(GR6) INCREMENT TO FIRST WRITE    @ZA26248
BX43     EQU   *                                               @ZA26248
*                             BUILD CCW'S                      @ZA26248
         STCM  GR6,C7,CCW3+C1 INITLISE TIC TO WRITES           @ZA26248
         L     GR6,CCWAREA                                     @ZA26248
*                                                              @ZA26248
*                                                              @ZA26248
BX25     LR    GR8,GR6        SAVE WHERE TO BUILD RD BACK TO.  @ZA26248
         MVC   R0CNTF(LEN5),LEN4(GR5)  SAVE CCHHR FOR READ     @ZA26248
BX38     EQU   *                       BACK CHECK              @ZA26248
         TM    TAG,TAG1       TEST FOR DIRECTORY WRITE OUTPUT  @ZA26248
         BO    BX33           BRANCH YES                       @ZA26248
         MVC   LEN0(LEN8,GR6),DACCW4   MOVE IN MODEL CCW       @ZA26248
*                                                              @ZA26248
         MVI   LEN0(GR6),X1D  SET WRITE COUNT KEY DATA         @ZA26248
         TM    LEN0(GR5),WRTOVR  TEST TRACK OVERFLOW           @ZA26248
         BZ    BX36           BRANCH NO TRAK OVERFLOW          @ZA26248
         MVI   LEN0(GR6),X01  SET WRITE SPECIAL                @ZA26248
BX36     EQU   *                                               @ZA26248
         SR    GR10,GR10      CLEAR REG                        @ZA26248
         IC    GR10,LEN9(GR5) GET KEY  LENGTH                  @ZA26248
         LH    GR9,LEN10(GR5)  GET DATA LENGTH                 @ZA26248
         LA    GR9,LEN8(GR9,GR10) ADD LENGTH OF COUNT KEY DATA @ZA26248
         STH   GR9,LEN6(GR6)  SET LENGTH IN CCW                @ZA26248
         LA    GR7,LEN4(GR5)  INCREMENT TO COUNT FIELD         @ZA26248
         B     BX34                                            @ZA26248
BX33     EQU   *                                               @ZA26248
         MVC   LEN0(DWRTL,GR6),DWCCW4  SET UP DIR WRITE CCWS   @ZA26248
         STCM  GR6,C7,LEN9(GR6)        SET TIC ADDRESS         @ZA26248
         LA    GR7,LEN4(GR5)           INCREMENT TO CCHHR FLD  @ZA26248
         STCM  GR7,C7,LEN1(GR6)        SET SERCH ADDRESS       @ZA26248
         LA    GR6,LEN8+LEN8(GR6)     INCREMENT OVER SERCH TIC @ZA26248
*                             BUILD WRITE KEY DATA             @ZA26248
*                                                              @ZA26248
         LA    GR7,LEN12(GR5) INCREMENT TO KEY FIELD           @ZA26248
*                                                              @ZA26248
BX34     STCM  GR7,C7,LEN1(GR6)  SET ADDRESS OF KEY DATA       @ZA26248
*                                                              @ZA26248
         LA    GR6,LEN8(GR6)  INCREMENT NEXT CCW LOCATION      @ZA26248
         TM    LEN0(GR5),ENDPROC+LASTREC    TEST LAST RECORD   @ZA26248
         BZ    BX35           NOT LAST RECORD CONT.            @ZA26248
*                                                              @ZA26248
         BO    BX29           YES, ALL READY TO BREAK CHAIN    @ZA26248
*                             + RD BACKCHECK                   @ZA26248
         L     GR5,BEGFST2    GETSTART SECOND BUFFER           @ZA26248
*                                                              @ZA26248
BX28     LA    GR0,LEN4        INDICATE HH SWITCH              @ZA26248
         SR    GR9,GR9                                         @ZA26248
         TM    TAG,TAG5+TAG1+TAG3  TEST FOR RD BACK            @ZA26248
         BZ    BX50           BRANCH ON NOT RDBACK             @ZA26248
         IC    GR9,LEN8(GR5)  GET RECORD NO.                   @ZA26248
*                                                              @ZA26248
         LA    GR9,LEN20(GR9) ROOM FOR 1 RD BK,TRK SW,ETC      @ZA26248
BX50     LA    GR9,LEN8(GR9) ROOM FOR 1 TRK SW, 1 REC+NOP      @ZA26248
         SLL   GR9,LEN3      MULTIPLY BY 8 TO GET SPACE REQ.   @ZA26248
*                             TO BUILD RD BACK CCW'S           @ZA26248
         AR    GR9,GR6        COMPUTE CURRENT THERORETICAL     @ZA26248
*                             END                              @ZA26248
         C     GR9,SVHI       TEST IF ROOM FOR CCW'S           @ZA26248
         BH    BX29          BRANCH ON NO ROOM                 @ZA26248
         CLI   LEN8(GR5),LEN1 IS NEXT RECORD R1                @ZA26248
         BNE   BX38           YES,GO BUILD RD BACK & CHANGE HH @ZA26248
BX30     BAL   GR10,RDBACX    LINK BUILD RD BACK CCW'S         @ZA26248
         B     BX25                                            @ZA26248
RCKD     EQU   X'1E'          RD COUNT KEY & DATA              @ZA26248
RKD      EQU   X'0E'          RD KEK AND DATA COMMAND          @ZA26248
*                             RD BACK AND CONDITIONALLY HEAD   @ZA26248
*                             SWITCH CCW BUILD SUBROUTINE      @ZA26248
*                             IF RO=O JUST DO RD BACK          @ZA26248
*                             GR5=RECORD FLAG FIELD            @ZA26248
*                             GR6=WHERE NEXT CCW GOES          @ZA26248
*                             GR8=FIRST CCW TO RD BACK         @ZA26248
*                                                              @ZA26248
RDBACX   EQU   *                                               @ZA26248
         LR    GR11,GR6                                        @ZA26248
         TM    TAG,TAG5+TAG1+TAG3  TEST FOR RD BACK            @ZA26248
*              BRANCH ON NO RD BACK REQUIRED                   @ZA26248
         BZ    BX37                                            @ZA26248
         MVC   LEN0(LEN8,GR6),DCCWHA SET READ HA TO CROSS INDX @ZA26248
         LA    GR6,LEN8(GR6) ADVANCE TO NEXT CCW SLOT          @ZA26248
         MVC   LEN0(TRKSWL,GR6),DWCCW1 MOVE TRACK SW CCW'S     @ZA26248
         MVI   LEN0(GR6),X31 SET COMMAND SEARCH ID EQUAL NO MT @ZA26248
         SR    GR1,GR1            CLEAR REG                    @ZA26248
         IC    GR1,R0CNTF+LEN4-DWCCW1(GR6) BACK UP R BY ONE    @ZA26248
         BCTR  GR1,GR0            REDUCE BY ONE                @ZA26248
         STC   GR1,R0CNTF+LEN4-DWCCW1(GR6)                     @ZA26248
*          CCHH   AND       RECNO ALLREADY IN R0CNTF           @ZA26248
         STCM  GR6,C7,LEN1+LEN8(GR6)   SET TIC ADDRESS         @ZA26248
*                                                              @ZA26248
         LA    GR1,R0CNTF-DWCCW1(GR6)   INCREMENT CCH          @ZA26248
*                                                              @ZA26248
         STCM  GR1,C7,LEN1(GR6)   SET ADDRESS IN SERCH         @ZA26248
*                                                              @ZA26248
         LA    GR1,TRKSWL(GR6)   ADDR NEXT CCW AREA            @ZA26248
         STCM  GR1,C7,DCCW3OST+LEN1(GR6)    TIC AROUN CCHHR    @ZA26248
         LR    GR6,GR1                                         @ZA26248
BX32     TM    TAG,TAG1       CHECK FOR WRITING OUTPUT DIR     @ZA26248
         BZ    BX44           BRANCH NOT WRITING  OF RECORD    @ZA26248
         LA    GR8,LEN8+LEN8(GR8)  INCREMENT OVER SERCH TIC    @ZA26248
BX44     MVC   LEN0(LEN8,GR6),LEN0(GR8) WRITE CCW OF RECORD    @ZA26248
*                             TO BE CHECKED                    @ZA26248
SKIP     EQU   X'10'          SUPPRESS TRANSFR BIT             @ZA26248
X22      EQU   X'22'           READ SECTOR OP CODE             @ZA26248
         OI    LEN4(GR6),SKIP SET NO TRANSFR                   @ZA26248
         MVI   LEN0(GR6),RKD  SET RD KEY & DATA                @ZA26248
         CLI   LEN0(GR8),X0D  WRITE KEY DATA                   @ZA26248
         BE    BX31                                            @ZA26248
         MVI   LEN0(GR6),RCKD                                  @ZA26248
BX31     EQU   *                                               @ZA26248
RDCNT    EQU   X'12'         RD COUN COMMAND CODE              @ZA26248
         LH    GR1,LEN6(GR6) GET RECORD LENGTH                 @ZA26248
         CH    GR1,=H'8'     IF IT IS EIGHT DO RD COUNT        @ZA26248
         BNE   BX45                                            @ZA26248
         MVI   LEN0(GR6),RDCNT SET READ COUNT COMMAND          @ZA26248
BX45     LA    GR6,LEN8(GR6)  INCREMENT TO NEXT CCW'S          @ZA26248
         LA    GR8,LEN8(GR8)                                   @ZA26248
*                                                              @ZA26248
         CR    GR8,GR11       TEST RD BACKS ALL BUILD          @ZA26248
         BL    BX32           BRANCH NOT ALL DONE              @ZA26248
*                                                              @ZA26248
BX37     LTR   GR0,GR0        TEST FOR HEAD SWITCH             @ZA26248
         BZR  GR10            ZERO=NO HEAD SWITCH              @ZA26248
*                                                              @ZA26248
         MVC   LEN0(TRKSWL,GR6),DWCCW1  MOVE TRAC SWITCH CCW'S @ZA26248
*                                                              @ZA26248
         MVC   R0OFSET(LEN4,GR6),LEN4(GR5)  MOVE CCHH          @ZA26248
         MVI   R0OFSET+LEN4(GR6),X00   SET R0                  @ZA26248
*                                                              @ZA26248
         STCM  GR6,C7,LEN1+LEN8(GR6)   SET TIC ADDRESS         @ZA26248
*                                                              @ZA26248
         LA    GR8,R0CNTF-DWCCW1(GR6)   INCREMENT CCH          @ZA26248
*                                                              @ZA26248
         STCM  GR8,C7,LEN1(GR6)   SET ADDRESS IN SERCH         @ZA26248
*                                                              @ZA26248
         LA    GR8,TRKSWL(GR6)   ADDR NEXT CCW AREA            @ZA26248
         STCM  GR8,C7,DCCW3OST+LEN1(GR6)    TIC AROUN CCHHR    @ZA26248
*                                                              @ZA26248
         LR    GR6,GR8        ADVANCE TO NEXT SLOT             @ZA26248
*                                                              @ZA26248
         BR    GR10           RETURN                           @ZA26248
*                                                              @ZA26248
BX29     EQU   *              RD BACK AND BREAK CHAIN          @ZA26248
         SR    GR0,GR0                                         @ZA26248
         BAL   GR10,RDBACX    GO BUILD RD BACK CCWS            @ZA26248
         MVC   LEN0(LEN8,GR6),WRCW13 TERM WITH RD SECTOR/NOP   @ZA26248
         EXCP  (GR3)       PERFORM THE WRITES                  @ZA26248
         WAIT  1,ECB=EVENTCB                                   @ZA26248
         USING DXIOB,GR3                                       @ZA26248
         L     GR6,IOBCSW       GET CSW                        @ZA26248
         LA    GR6,LEN0(GR6)                                   @ZA26248
         DROP  GR3                                             @ZA26248
         LA    GR7,LEN8         LENGTH OF CCW                  @ZA26248
         SR    GR6,GR7         BACK UP ONE CCW                 @ZA26248
XB1      EQU   X'B1'      SEARCH ID EQUAL MT COMMAND           @ZA26248
         CLI   LEN0(GR6),XB1    IS IT A SERCH                  @ZA26248
         BNE   BX39                                            @ZA26248
         LA    GR6,TRKSWL(GR6)    SEARCH INREMENT TO WRITE     @ZA26248
         B     BX39                                            @ZA26248
BX41     SR    GR6,GR7          BACK UP ONE CCW                @ZA26248
BX39     CLI   LEN0(GR6),X22    IS IT A RD SECTOR              @ZA26248
         BE    BX41             BRANCH YES                     @ZA26248
         CLI   LEN0(GR6),X03    IS IT A NOP                    @ZA26248
         BE    BX41             BRANCH YES                     @ZA26248
         L     GR7,LEN0(GR6)    GET AREA LAST WRITTEN OR TRIED @ZA26248
         STCM  GR7,C7,CURRCCW1+LEN1   SAVE FOR TERMINATION     @ZA26248
         STCM  GR7,C7,CURRCCW2+LEN1   SAVE FOR TERMINATION     @ZA26248
         LA    GR1,LEN4      CONSTANT TO STEP BACK TO FLAG FLD @ZA26248
         TM    TAG,TAG1               IS THIS OUTPUT DIR WRITE @ZA26248
         BNO   BX40                   BRANCH ON NO             @ZA26248
         LA    GR1,LEN8(GR1) CONSTANT TO REACH FLAG FIELD      @ZA26248
BX40     SR    GR7,GR1                BACK UP TO FLAG FIELD    @ZA26248
         MVC   LASTADDR(LEN8),LEN1(GR7)                        @ZA26248
         CLI   EVENTCB,X7F   CHECK IF COMPLETED NORMAL         @ZA26248
         BE    BX46                    BRANCH ON NORMAL        @ZA26248
         SR    GR0,GR0       BACK UP R BY ONE ON ABNORMAL      @ZA26248
         IC    GR0,LASTADDR+LEN7       GET LAST WROTE REC NO.  @ZA26248
         BCTR  GR0,GR0                 REDUCE BY ONE           @ZA26248
         STC   GR0,LASTADDR+LEN7       POINT REC-1             @ZA26248
         B     BX27                    EXIT FOR ERROR HANDLING @ZA26248
BX46     TM    LEN0(GR7),ENDPROC TST WROTE LAST RECORD WRITTEN @ZA26248
         BO    BX27                    BRANCH YES, EXIT        @ZA26248
         MVC   IOBMCCHH(LEN8,GR3),LEN1(GR5)  SET SEEK ADDRESS  @ZA26248
         SR    GR0,GR0            CLEAR REG                    @ZA26248
         IC    GR0,IOBRECNO(GR3)  GET RECORD NO OF NEXT RECORD @ZA26248
         BCTR  GR0,GR0            BACK UP ONE RECORD           @ZA26248
         STC   GR0,IOBRECNO(GR3)  FOR SERCH PREVIOUS           @ZA26248
         L     GR6,CCWAREA   RESET TO START OF CCW AREA        @ZA26248
         B     BX43  IOB POINTS TO PREVIOUS REC SO USE SCH CNT @ZA26248
BX35     SR    GR10,GR10     CLEAR REG                         @ZA26248
         IC    GR10,LEN9(GR5) GET KEY LENGTH                   @ZA26248
         AH    GR5,LEN10(GR5) INCREMENT BY RECORD LENGTH       @ZA26248
         LA    GR5,LEN12(GR5,GR10) FMBBCCHHKLDL + KEY AND DATA @ZA26248
         B     BX28                                            @ZA26248
BX49     EQU   *                                               @ZA26248
         LR    GR1,GR3                                          YL026VD
         EXCPVR (1),SUBSYS       ISSUE WRITE/READ ON PROPER IOB YL026VD
         WAIT  1,ECB=EVENTCB
         B     BX51                                            @ZA26248
BX27     EQU   *                                               @ZA26248
         LM    GR5,GR13,PCISAVE                                @ZA26248
BX51     EQU   *                                               @ZA26248
         OI    AOS,PCI            RESTORE PCI BIT              @YM04451
         L     GR10,IOBVRPTR      GET ADDR OF IOB LAST USED    @YM06434
         LA    GR10,C35(GR10)     GET ADDRESS OF CCHHR         @YM06434
         STCM  GR10,C7,CCW1+C1    STORE VIRT INTO SIDEQ CCW    @YM06434
         LA    GR10,CCW1          GET ADDRESS OF SIDEQ CCW     @YM06434
         STCM  GR10,C7,CCW2+C1    STORE VIRT INTO TIC BACK     @YM06434
         TM    TAG,TAG6           READ BACK CHECKING           @YM06433
         BZ    ISWRITE            NO, JUST DID WRITE           @YM06433
         LA    GR10,LASTADDR      ADR OF READ BACK CHECK COUNT @YM06433
         STCM  GR10,C7,RDCKCW11+C1 RESTORE VIRTUAL ADDRESS     @YM06433
         STCM  GR10,C7,RDCKCW12+C1 RESTORE VIRTUAL ADDRESS     @YM06433
         STCM  GR10,C7,RDCKCW21+C1 RESTORE VIRTUAL ADDRESS     @YM06433
         STCM  GR10,C7,RDCKCW22+C1 RESTORE VIRTUAL ADDRESS     @YM06433
         LA    GR10,SECTOR        ADRRESS OF 'SECTOR'          @YM06447
         STCM  GR10,C7,RDCKCW13+C1 RESTORE VIRTUAL ADDRESS     @YM06447
         STCM  GR10,C7,RDCKCW23+C1 RESTORE VIRTUAL ADDRESS     @YM06435
         B     SAME1              GO CHECK COMPLETION          @YM06433
ISWRITE  L     GR10,WRPTR1        GET ADDR OF WRITE CCW        @YM06433
         L     GR5,CURRCCW1       GET VIRTUAL DATA ADDRESS     @YM06433
         STCM  GR5,C7,LEN1(GR10)  STORE VIRTUAL ADDRESS        @YM06433
         L     GR10,WRPTR2        GET ADDR OF WRITE CCW        @YM06433
         L     GR5,CURRCCW2       GET VIRTUAL DATA ADDRESS     @YM06433
         STCM  GR5,C7,LEN1(GR10)  STORE VIRTUAL ADDRESS        @YM06433
         LA    GR10,WRCW13        GET VIRTUAL NO-OP ADDR       @YM06435
         STCM  GR10,C7,WRCW13+C1  STORE IN 1ST NO-OP           @YM06435
         STCM  GR10,C7,WRCW12+C1  STORE IN 1ST TIC             @YM04451
         LA    GR10,WRCW23        GET VIRTUAL NO-OP ADDR       @YM04451
         STCM  GR10,C7,WRCW22+C1  STORE IN 2ND TIC             @YM04451
         STCM  GR10,C7,WRCW23+C1  STORE IN 2ND NO-OP           @YM06435
         SPACE 1
SAME1    EQU   *
         CLI   EVENTCB,X7F        I/O COMPLETED OK
         BNE   CHKERRX                 NO- CHECK FOR ERROR
GOT7F    EQU   *
         TM    TAG,TAG6                READ BACK CHECKING
         BZ    WRTCHKS            NO- JUST WROTE
ERRRDBK  EQU   *
         L     GR10,WRPCICNT           COUNT OF RECORDS WRITTEN
         LTR   GR10,GR10               ALL DONE
         BNP   RETRNS             YES,EXIT                      OY01184
         MVC   CCW3(LEN4),RDCKPTR1  SET UP TIC FOR NEXT WRITE
         MVI   CCW3,X08           RESTORE TIC OP CODE
         MVC   IOBCCHHR(LEN5,GR3),LASTADDR  MOVE SEEK ADDR. TO IOB
         B     RESTART                 ISSUE READ
         SPACE 1
WRTCHKS  EQU   *
         TM    TAG,TAG4                SYSUT3
         BO    RETRNS             IF SO, AM ALL DONE WRITING RECORD
         L     GR5,WRPTR2              GET CCW OF PCI JUST PROCESSED
         L     GR6,LEN0(GR5)      GET WRITE ADDRESS
         LA    GR6,LEN0(GR6)      CLEAR OP CODE
         LA    GR5,LEN4           SET NUMBER OF BYTES BEFORE POINTER
         TM    TAG,TAG1                WRITING DIRECTORY
         BZ    NOTDIRTY                NO-XFER
         LA    GR5,LEN12          SKIP BACK TO FLAG BYTE
NOTDIRTY EQU   *
         SR    GR6,GR5            POINT TO FLAG PRECEEDING CCHHR
         MVC   IOBMCCHH(LEN8,GR3),LASTADDR  MOVE IN SEEK ADDRESS
         TM    LEN0(GR6),ENDPROC  WROTE VERY LAST RECORD
         BZ    TRY                NO- GO WRITE- PCI LATE
         TM    TAG,TAG2                MEMBERS
         BZ    RDBKTEST                NO-GO TEST FOR READ BACKING
         MVC   OUTFDAD(LEN8),LEN1(GR6) YES-SAVE LAST MBBCCHHR
RDBKTEST EQU   *
         TM    TAG,TAG1+TAG3+TAG5      WROTE DIRECTORY OR READ BACK ON
         BC    MS5,RDBKCKRT       YES- READ BACK CHECK
         SPACE 1
RETRNS   EQU   *
         LA    GR6,SCTOFF(GR0,GR3)     PTR TO SECTOR SAVE SLOT   S20201
         MVC   LEN0(LEN1,GR6),SECTOR   SAVE LAST SECTOR VALUE    S20201
RETRNS1  EQU   *                                                 S20201
         L     GR13,SV5+SAV4      POINTER TO SAVE AREA
         RETURN (14,12)                RETURN TO CALLER
         SPACE 1
RDBKCKRT EQU   *
         L     GR5,WRTNEXT             START BEGIN FOR REBACK CHECKING
         LA    GR3,UT4IOB              IOB FOR SYSUT4
         TM    TAG,TAG3                WRITING OUTPUT DIRECTORY SYSUT4
         BO    GOTIOBD            YES- IOB POINTER SET IN GR3
         LA    GR3,OUTIOB              IOB FOR OUTPUT DATA SET
         SPACE 1
GOTIOBD  EQU   *
         MVC   SECTOR(LEN1),RDBKSAVE   RESTORE INITIAL SECTOR    S20201
*                                         VALUE FOR READBACK     S20201
*                                         CHECK                  S20201
         MVC   IOBMCCHH(LEN8,GR3),LEN1(GR5) SET UP MBBCCHHR IN IOB
         SR    GR7,GR7
         IC    GR7,LEN8(GR5)      GET RECORD NUMBER (R)
         BCTR  GR7,GR0            DECREMENT RECORD NUMBER BY 1
         STC   GR7,IOBRECNO(GR3)       STORE NEW RECORD NUMBER FOR SEEK
         LTR   GR7,GR7                 IS SEARCH RECORD          S20201
*                                        NUMBER = 0              S20201
         BNZ   ARND2                   NO, GO AROUND             S20201
         MVI   SECTOR,X00              SET ''SECTOR'' = 0        S20201
ARND2    EQU   *                                                 S20201
         LA    GR2,IOBCCHHR(GR3)       POINT TO SEARCH ADDRESS
         ST    GR2,CCW1                STORE SEARCH ADDRESS IN CCW1
         MVI   CCW1,X31           RESTORE OP CODE FOR SEARCH ID=
         LA    GR6,RDCKCW11
         ST    GR6,RDCKPTR1            STORE POINTER TO START READ BACK
         LA    GR7,RDCKCW21
         ST    GR7,RDCKPTR2            STORE POINTER TO SECOND CCW LIST
         ST    GR6,CCW3                SET UP TIC TO RDCKOW11
         MVI   RDCKCW13,X03       INITIALIZE NOP
         LA    GR6,DEVOFF(GR0,GR3)     PTR TO DEVTYPE INFO       S20201
         TM    LEN1(GR6),RPS           IS THIS AN RPS DEVICE     S20201
         BNO   NOTRPS2                 NO, GO ON                 S20201
         SPACE 1                                                 S20201
         MVC   RDCKCW13(LEN4),RSECTOR  REPLACE NOP WITH RS CCW   S20201
NOTRPS2  EQU   *                                                 S20201
         MVI   RDCKCW12+LEN4,X78  INITIALIZE PCI SKIP SLI
         OI    TAG,TAG6                SET FOR READ BACK CHECKING
         MVI   CCW3,X08           RESTORE TIC OP CODE
         B     RESTART                 START READ BACK CHECKING
         SPACE 1
CHKERRX  EQU   *
         TM    TAG,TAG2+TAG3+TAG4      MEMBER SYSUT4 SYSUT3
         BZ    ERROR4             NO
         CLI   EVENTCB,X41        I/O ERROR
         BE    EOFTEST                 YES-TEST FOR WHOM AND WHY
         CLI   EVENTCB,X42        EXTENT ADDRESS VIOLATED-OUTPUT
         BNE   ERROR4                  YES- TYPE 4 ERROR END OF EXTENT
         LA    GR5,RDCKPTR1            READ PTR.
         TM    TAG,TAG6                READ BACK CHECKING
         BO    RDCKING            YES
         LA    GR5,WRPTR1              WRITE PTR.
         SPACE 1
RDCKING  EQU   *
         MVC   CCW3+LEN1(LEN3),LEN1(GR5) MOVE CORRECT ADDR. TO TIC
         SR    GR6,GR6
         LR    GR8,GR3
         L     GR7,DCB4IOB(GR8)        GET DCB POINTER FROM IOB
         LA    GR7,LEN0(GR7)      CLEAR HIGH ORDER BYTE
         IC    GR6,IOBMCCHH(GR8)       OBTAIN M (EXTENT NUMBER)
         L     GR5,DEBPTR(GR7)         POINTER TO DEB
         SR    GR7,GR7
         IC    GR7,LEN16(GR5)     GET NUMBER OF EXTENTS FROM DEB
         LA    GR6,LEN1(GR0,GR6)       UP EXTENT NUMBER BY 1
         CR    GR6,GR7                 EXTENTS EXCEEDED
         BL    ARND                    NO
         MVI   IOBECBCD(GR8),ENDEXT    SET END EXTENT CODE IN IOB
         B     ERROR4                  GO TO ERROR ANALYSIS ROUTINE
ARND     EQU   *
         STC   GR6,IOBMCCHH(GR8)       STORE NEW M
         SLA   GR6,LEN4           MULTIPLY EXTENT BY 16
         AR    GR6,GR5                 ADD TO START OF DEB TO GET ADDR
         MVC   IOBBCCHH(LEN6,GR8),EXTBBDEB(GR6)  SEEK ADDRESS
         MVI   IOBRECNO(GR8),X00  MAKE RECORD NUMBER R=0
         LA    GR9,IOBCCHHR(GR8)       POINTER TO CCHHR FOR SEARCH
         ST    GR9,CCW1                STORE SEARCH ADDRESS POINTER
         MVI   CCW1,X31           RESTORE SEARCH ID = OP CODE
         B     RESTART                 WRITE SOME MORE
EOFTEST  EQU   *
         TM    TAG,TAG3+TAG6           SYSUT4+READ BACKING
         BO    UNCHECK                 YES- CHECK UNIT EXCEPTION
         TM    TAG,TAG2+TAG6           MEMBER + READ BACKING
         BZ    ERROR4                  NO-MUST BE ERROR CAN'T BE OTHER
UNCHECK  EQU   *
         TM    IOBCSWST(GR3),X01  EOF
         BO    ERRRDBK                 CHECK TO SEE IF VALIDITY  A35473
*                                        CHECKING IS COMPLETED   A35473
*
         SPACE 1
         SPACE 1
ERROR4   EQU   *
         LR    GR5,GR3                 GET IOB ADDRESS FOR SYNADAF
         L     GR15,VIEBDSWE           ENTRY POINT IN DSCPY TO   A33288
*                                        TRANSFER CONTROL TO     A33288
*                                        IEBIOE                  A33288
         BALR  GR14,GR15               GO TO IDENTIFY THE I/O ERROR
IEBDWRR  EQU   *                                                 A33288
         ENTRY IEBDWRR                                           A33288
         B     GOT7F                   IF IEBIOE RETURNS CONTROL,
*                                        ERROR CAN BE IGNORED
         EJECT
***********************************************************************
*                                                                     *
*     THIS ROUTINE IS USED BY IEBWSU WHEN SETTING UP OVERFLOW RECORDS *
*  AND WRITING CANNOT BE DONE TO THE END OF A CYLINDER OR EXTENT      *
*  BOUNDRY.  THIS HAPPENS BECAUSE THE CROSSING OF THESE BOUNDRIES     *
*  WITH SEGMENTS IS NOT ALLOWED.  IF THE REMAINING TRACKS ARE NOT     *
*  ERASED, READING OF THE DATA CANNOT BE DONE PROPERLY.               *
*                                                                     *
*  INPUT - FIRSTERS CONTAINS THE TTR OF THE FIRST TRACK TO            *
*          BE ERASED                                                  *
*        - LASTERS CONTAINS THE TTR OF THE LAST TRACK TO BE           *
*          ERASED                                                     *
*                                                                     *
*  OUTPUT- ALL TRACKS FROM FIRSTERS TO AND INCLUDING LASTERS ARE      *
*          ERASED                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
ERASEIT  EQU   *
         NI    AOS,XFF-PCI             TURN OFF PCI PROCESS FLAG X010XX
         LA    GR2,OUTIOB              LOAD PTR TO IOB
         MVI   IOBFLGS(GR2),NONSEQEN   SET COMMAND CHAIN-UNRELATED
         LA    GR7,CCW1                LOAD PTR TO SIDEQ
         LA    GR8,DEVOFF(GR0,GR2)     PTR TO DEVTYPE INFO       S20201
         TM    LEN1(GR8),RPS           IS THIS AN RPS DEVICE     S20201
         BNO   NOTRPSER                NO, GO ON                 S20201
         SPACE 1                                                 S20201
*   IF RPS IS SUPPORTED A SET SECTOR  CCW  IS                    S20201
*  APPENDED TO THE NORMAL CCW CHAIN                              S20201
*                                                                S20201
         LA    GR7,SSECTOR             PTR TO SET SECTOR CCW     S20201
         MVI   SECTOR,X00              SET SECTOR VALUE TO 0     S20201
         SPACE 1                                                 S20201
NOTRPSER EQU   *                                                 S20201
         ST    GR7,IOBCAW(GR0,GR2)  STORE  IN  IOB CAW
         LA    GR2,IOBCCHHR(GR0,GR2) BUMP PTR TO SEEK ADDRESS
         ST    GR2,CCW1                STORE IN SIDEQ CCW
         MVI   CCW1,X31           RESTORE SIDEQ  OP CODE
         LA    GR6,ERSCCW              LOAD PTR TO ERASE CCW
         ST    GR6,CCW3                MAKE TIC PT TO ERASE
         MVI   CCW3,X08           RESTORE TIC OP CODE
         L     GR11,FIRSTERS           LOAD TTR OF FIRST TRACK
*                                        TO BE ERASED
         SPACE 1
ERSLOOP  EQU   *
         L     GR15,VTTOCC             LOAD PTR TO CONVERT RTN
         LA    GR1,OUTDCB              LOAD PTR TO OUTPUT DCB
         LA    GR2,OUTIOB              LOAD PTR TO
         LA    GR2,IOBMCCHH(GR0,GR2)   IOB  SEEK  ADDRESS
         LR    GR0,GR11                LOAD TTR TO BE CONVERTED
         BALR  GR14,GR15               GO TO CONVERT ROUTINE
         SPACE 1
         EXCP  OUTIOB                  ISSUE EXCP FOR ERASE     YL026VD
         SRL   GR11,LEN16         SHIFT OUT  RN OF TTRN
         LA    GR11,LEN1(GR0,GR11)  BUMP TT BY ONE
         SLL   GR11,LEN16         SHIFT  BACK FOR TTRN
         WAIT  1,ECB=EVENTCB           WAIT FOR I/O TO COMPLETE
         SPACE 1
         CLI   EVENTCB,X7F        I/O  OK
         BE    ERASEOK                 YES, GO AROUND
         SPACE 1
         LA    GR3,OUTIOB              LOAD PTR TO IOB
         B     ERROR4                  GO TO ERROR RTN
         SPACE 1
ERASEOK  EQU   *
         CL    GR11,LASTERS            MORE TO ERASE
         BNH   ERSLOOP                 NO, CONTINUE
         SPACE 1
         B     RETRNS1                 RETURN                    S20201
         SPACE 1
*                             READING CCWS MODEL               @ZA26248
*                                                              @ZA26248
DRCCW1   CCW   X'9E',0,X'40',KBLEN+X8 READ COUNT KEY AND DATA  @ZA26248
*        LENGTH FIELD MODIFIED TO BLOK SIZE AND 8              @ZA26248
*                             FOR OTHER INPUTS.                @ZA26248
*              DIRECTOR, WRITING CCW MODEL                     @ZA26248
*                                                              @ZA26248
DWCCW1   CCW   X'B1',R0CNTF,X'60',5  SERCH ON FIRST CNT        @ZA26248
DWCCW2   CCW   X'08',DWCCW1,X'00',1  TIC UNTIL FOUND           @ZA26248
DWCCW3   CCW   X'08',DWCCW4,X'00',1  TIC AROUND CNT            @ZA26248
R0CNTF   DC    D'0'                                            @ZA26248
DWCCW4   CCW   X'B1',*,X'60',5 SEARCH FOR COUNT OF DIRECTORY   @ZA26248
         CCW   X'08',*,X'60',1      TIC TO SERCH ID            @ZA26248
         CCW   X'0D',0,X'60',KBLEN WRITE KEY+DATA CC AND SLI   @ZA26248
DWRTL    EQU   *-DWCCW4      LENGTH OF DIRECTORY WRITE CCW'S   @ZA26248
*        DWCCW4 REPEATS AS MANY TIMES AS BLOCKS/TRACK          @ZA26248
TRKSWL   EQU   DWCCW4-DWCCW1  LENGTH OF TRACK SWITCH MODEL     @ZA26248
*                                                              @ZA26248
*        OUTPUT CCW MODEL USED IN PLACE DWCCW4                 @ZA26248
DACCW4   CCW   X'1D',0,X'60',0                                 @ZA26248
DCCWHA  CCW   X'1A',*,X'70',16   READ HA CC SLI AND SKIP       @ZA26248
*                                                              @ZA26248
CC       EQU   X'60'          COMMAND CHAIN                    @ZA26248
R0OFSET  EQU   R0CNTF-DWCCW1                                   @ZA26248
DCCW3OST EQU   DWCCW3-DWCCW1                                   @ZA26248
*                                                              @ZA26248
PATCHLN  EQU   (*-START)/20            5 PER-CENT PATCH AREA LENGTH
PATCH    DC    XL(PATCHLN)'00'         PATCH AREA                A41780
*                                                              @ZA26248
DEVTAB   DSECT                                                 @ZA26248
*                                                              @ZA26248
*     DIRECT ACCESS DEVICE TABLE OVERLAY  OUTCHAR IN IEBMCA    @ZA26248
*                                                              @ZA26248
DEVCODE  DS    F                       DEVICE CODE FROM UCB    @ZA26248
MAXSIZE  DS    F                       MAX SIZE UNKEYED BLOCK  @ZA26248
MAXCC    DS    H                       NUMBER OF CYLINDER      @ZA26248
MAXHH    DS    H                       NUMBER OF TRACKS        @ZA26248
TRKCAP   DS    H                       MAXIMUM TRACK LENGTH    @ZA26248
OVERI    DS    XL1                     OVERHEAD NOT LAST RCD   @ZA26248
OVERL    DS    XL1                     OVERHEAD LAST RECORD    @ZA26248
OVERK    DS    XL1           OVERHEAD REDUCTION FOR NON-KEY    @ZA26248
DEVFLAG  DS    XL1           APPLY TOLERANCE FACTOR NOT LAST   @ZA26248
TOLER    DS    H             GAP LENGTH CALCULATE TOLERANCE    @ZA26248
TOLFAC   EQU   X'01'         TOLERANCE FACTOR TO BE ADDED      @ZA26248
HALFOVER EQU   X'08'                                    S20201 @ZA26248
*                                                              @ZA26248
*       END OF DEVTAB OVERLAY                                  @ZA26248
*                                                              @ZA26248
KBLEN   EQU  256+8    DIRECTORY BLOCK PLUS KEY                 @ZA26248
X8      EQU  X'08'                                             @ZA26248
         EJECT
IEBMCA   DSECT
         IEBMCA
         EJECT
         DCBD  DSORG=PS
         EJECT
IECDSECT DSECT
         IECDSECT
         SPACE 1
IOBCAW   EQU   IOBSIOCC-DXIOB          STARTING CCW ADDRESS (CAW) IOB
DCB4IOB  EQU   IOBDCBPT-DXIOB-1        POINTER TO DCB IN IOB
IOBCSWST EQU   IOBSTAT0-DXIOB          CSW STATUS IN IOB
IOBMCCHH EQU   DXDAADDR-DXIOB          MBBCCHHR IN IOB
IOBBCCHH EQU   DXDAADDR-DXIOB+1        BBCCHHR IN IOB
IOBCCHHR EQU   DXDAADDR-DXIOB+3        CCHHR IN IOB
IOBRECNO EQU   DXDAADDR-DXIOB+7        R OF MBBCCHHR IN IOB
IOBFLGS  EQU   IOBFLAG1-DXIOB          FLAG AREA IN IOB
IOBECBCD EQU   IOBECBPT-DXIOB          ECB CODE IN IOB
ENDEXT   EQU   X'42'                   END OF EXTENT CODE IOB/ECB
NONSEQEN EQU   X'42'                   IOB FLAGS
         SPACE 1
EXTBBDEB EQU   DXDEBBIN-DXDEB          BBCCHH FOR START OF EXTENT DEB
         SPACE 1
DISKADR  EQU   DCBFDAD-IHADCB          MBBCCHHR RECORD JUST WRITTEN
DISKREC  EQU   DCBFDAD-IHADCB+7        R FIELD IN FDAD OF DCB
DEBPTR   EQU   DCBDEBAD-IHADCB         DEB POINTER IN DCB
KEYDCB   EQU   DCBKEYLE-IHADCB    KEY LENGTH IN DCB
         END
