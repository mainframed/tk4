VALD     TITLE 'IEBDV1 VALIDATE ROUTINE- OUT DATA SET'
IEBDV1   CSECT
*A197600-203200                                                  A33299
*A204000                                                         A36059
*C138318,138336                                       VS08432 = OZ00100
*C889600                                                         A41780
*A603300-603900,896600-896700                                    A37881
*D856000-860800,869600                                           A41809
* 009600,025600-026400,052800,096000,098400,111200-116000,138000 X010XX
* 320000,331200-336000,352000-364000,784800-785600,865600-866400 X010XX
* 886400,801600-803200                                           X010XX
*D156800-160800                                                  A45216
*A146500-147160                                                  A45216
*C144800,154400                                                  A45216
*D575600,576800,577600,813600-815200                             A44144
*C696000,868000,80400,561600                                     A44144
*A576500,813300-815940                                           A44144
*D136000,A076730,A131400-131600,A136000-136700,A340744-340789   OY01182
*D340761-340784,A874430-875000                                  OY01182
*A138306-138384                                                @YA02573
*C138400                                                       @YA02573
*A465400-465560,763800-763920                                  @ZA06526
*C459200                                                       @ZA06526
*C874910                                                       @ZA06528
*A465420-465440                                                @ZA07344
*C874670                                                       @ZA18344
***********************************************************************
         ENTRY IEBDV0
        ENTRY IEBDV2
        ENTRY IEBDV3
        ENTRY IEBDV4
         ENTRY IEBDVJCB
         SPACE 1
*                                                                     *
*TITLE- IEBDSCPY VALIDATE ROUTINE- IEBDV1                             *
*                                                                     *
*STATUS- CHANGE LEVEL 002                                        X010XX
*                                                                     *
*FUNCTION/OPERATION- THIS MODULE OPENS DATA SETS FOR INPUT, OUTPUT    *
*       SYSUT3 AND SYSUT4 DATA SETS. THE CHARACTERISTICS OF THE DATA  *
*       SETS ARE VERIFIED. IT DETERMINES IF BLOCKING/REBLOCKING IS    *
*       TO BE DONE.                                                   *
*                                                                     *
*ENTRY POINTS- ENTERED AT IEBDV1 TO OPEN AND VALIDATE OUTPUT DATA SET *
*       ALWAYS VALIDATE AND OPEN AN INPUT DATA SET ALSO SO RIGHT AFTER*
*       ENTER INPUT VALIDATION/OPEN ROUTINE AT 'DOINDCB'              *
*              ENTERED AT IEBDV2 TO VALIDATE/OPEN AN INPUT DATA SET   *
*       AFTER FIRST ONE IS VALIDATED ALONG WITH OUTPUT DATA SET       *
*              ENTERED AT IEBDV3 TO VALIDATE SYSUT 3 DATA SET. GENERAL*
*       SUB-ROUTINE 'VALIDS34' USED TO VALIDATE AND OPEN SYSUT3 OR    *
*       SYSUT4.                                                       *
*              ENTERED AT IEBDV4 TO VALIDATE SYSUT4 DATA SET. GENERAL *
*       SUB-ROUTINE 'VALIDS34' USED TO VALIDATE AND OPEN SYSUT3 OR    *
*       SYSUT4 WORK DATA SETS USED IF SPILL NECESSARY.                *
*              ENTERED AT IEBDV0 TO OPEN AND VALIDATE SYSPRINT/SYSIN. *
*                                                                     *
*INPUT- REGISTER 4 POINTS TO IEBMCA COMMUNICATION AREA           X010XX
*                                                                     *
*OUTPUT- SWITCHES IN 'FORM' ARE SET TO DENOTE RECFM OF DATA SETS-     *
*       'FORM1' SET MEANS INPUT DATA SET HAS VARIABLE RECORD FORMAT   *
*       'FORM2' SET MEANS INPUT DATA SET HAS BLOCKED RECORDS          *
*       'FORM3' SET MEANS OUTPUT DATA SET HAS BLOCKED RECORDS.        *
*       'FORM4' SET IF INPUT OR OUTPUT MAY HAVE TRACK OVERFLOW RECORDS*
*       'TAG5' IN 'TAG' SET IF READ BACK CHECK TO BE DONE             *
*       SWITCH 'REBLK' IN 'FLG3' SET IF BLOCK/REBLOCK TO BE DONE      *
*       -BADBLOCK- SET BY DCB EXLST ROUTINE IF SYSPRINT/SYSIN HAVE    *
*                  INVALID BLOCKSIZE.                                 *
*            AREAS SET UP BY VALIDATE IN IEBMCA--                     *
*       -OBLKSIZE- OUTPUT DATA SET BLOCKSIZE                          *
*       -IBLKSIZE- INPUT DATA SET BLOCKSIZE                           *
*       -INLRECL-  INPUT DATA SET LOGICAL RECORD LENGTH               *
*       -OUTLRECL- OUTPUT DATA SET LOGICAL RECORD LENGTH              *
*       -OBLKFAC-  OUTPUT DATA SET BLOCKING FACTOR                    *
*       -IBLKFAC-  INPUT DATA SET BLOCKING FACTOR                     *
*       -OUTDS1-   TTR AND TRACK BALANCE END OF DATA SET OUTPUT DSCB  *
*       -INDS1-    TTR AND TRACK BALANCE END OF DATA SET INPUT DSCB   *
*       -UT3DS1-   TTR AND TRACK BALANCE END OF DATA SET SYSUT3 DSCB  *
*       -UT4DS1-   TTR AND TRACK BALANCE END OF DATA SET SYSUT4 DSCB  *
*       -FDAD-     IN PROPER DCB SET TO BBCCHH OF INITIAL RECORD      *
*       -OUTCHAR-   DEVICE CHARACTERISTIC BUFFER OUTPUT DATA SET      *
*       -INCHAR-    DEVICE CHARACTERISTIC BUFFER INPUT DATA SET       *
*       -UT3CHAR-   DEVICE CHARACTERISTIC BUFFER SYSUT3 DATA SET      *
*       -UT4CHAR-   DEVICE CHARACTERISTIC BUFFER SYSUT4 DATA SET      *
*       -OUTNAME-   OUTPUT DATA SET DDNAME                            *
*       -DDVALNM-   AREA THAT HOLDS DDNAME OF DATA SET BEING VALIDATED*
*       -NOTRKS-   NUMBER OF TRACKS IN EXTENT OUTPUT DATA SET         *
*                                                                     *
*EXTERNAL ROUTINES- SYSTEM MACROS- OBTAIN,RDJFCB,DEVTYPE,OPEN         *
*                   IF AN UNLOAD CONDITION IS FOUND, A LINK IS   X010XX
*                     DONE TO THE ENTRY POINT IEBLDUL2 IN        X010XX
*                     IEBLDUL                                    X010XX
*                   IF A LOAD CONDITION IS FOUND, A LINK IS      X010XX
*                     DONE TO THE ENTRY POINT IEBLDUL1 IN        X010XX
*                     IEBLDUL                                    X010XX
*                                                                     *
*EXITS - NORMAL                                                  X010XX
*        RETURN TO CALLER                                        X010XX
*                                                                X010XX
*EXITS - ERROR                                                   X010XX
*        MESSAGE SET UP DEFINING ERROR AND DATASET AND ISSUED    X010XX
*        BY MESSAGE WRITER ROUTINE WHICH WILL RETURN TO IEBSCN        *
*       PROGRAM TO FLUSH TO NEXT COPY STATEMENT                       *
*                                                                     *
*TABLES/WORK AREAS-                                                   *
*       -JFCB1-     JFCB WORK AREA (RDJFCB)                           *
*       -DSCB-      DSCB WORK AREA (CAMLST FOR OBTAIN)                *
*                                                                     *
*ATTRIBUTES- SERIAL REUSABLE                                          *
*                                                                     *
         EJECT
*                                                                     *
*                SYMBOLIC REGISTERS FOR VALIDATE ROUTINE              *
*                                                                     *
GR0      EQU   0
GR1      EQU   1
GR2      EQU   2
GR3      EQU   3
GR4      EQU   4                       COMMON AREA POINTER
GR5      EQU   5
GR6      EQU   6
GR7      EQU   7
GR8      EQU   8
GR9      EQU   9
GR10     EQU   10
GR11     EQU   11
GR12     EQU   12                      BASE REGISTER FOR VALIDATE
GR13     EQU   13
GR14     EQU   14
GR15     EQU   15
SAV4     EQU   4                  SAVE AREA DISPLACEMENT
SAV8     EQU   8                  SAVE AREA DISPLACEMENT
LEN8     EQU   8
X00      EQU   X'00'
LEN6     EQU   6                  L
LEN44    EQU   44
LEN46    EQU   46                                                X010XX
LEN1     EQU   1
LEN2     EQU   2
XFF      EQU   X'FF'
LEN3     EQU   3
LEN4     EQU   4
LEN11    EQU   11                                                X010XX
LEN12    EQU   12
LEN0     EQU   0
LEN16    EQU   16
X40      EQU   X'40'
LEN120   EQU   120
LEN37    EQU   37
LEN10    EQU   10
RTCDE    EQU   C'8'
MS8      EQU   8
RTCD     EQU   C'4'
X1E      EQU   X'1E'
X01     EQU   X'01'                                             OY01182
         EJECT
         SAVE  (14,12),,*
*                                                                     *
*                  BASE ADDRESS REGISTER GR12- COMMUNICATION GR4      *
         BALR  GR12,GR0           GET ADDRESSABILITY
         USING START,GR12
         USING IEBMCA,GR4
START    EQU   *
*ENTRY VALIDATE/OPEN OUTPUT DATA SET PLUS FIRST INPUT DATA SET        *
         SPACE 1
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA
         LA    GR15,SV5                 PTR TO SAVE AREA
         ST    GR15,SAV8(GR13)    POINTER TO NEW SAVE AREA IN OLD
         LR    GR13,GR15               POINTER TO NEW SAVE AREA
         OI    FLG3,OUTPUTEP           SET FOR ENTRY AT DV1
         NI    ULLDST,XFF-UNLOAD       TURN OFF UNLOAD SWITCH    X010XX
         SPACE 1                                                 X010XX
         LA    GR5,OUTDCB              SET DCB POINTER REGISTER  X010XX
*                                       TO ADDRESS OF OUTPUT PDS X010XX
*                                       DCB                      X010XX
         USING IHADCB,GR5              DCB DSECT ADDRESSABILITY  X010XX
         MVI   DCBKEYLE,X00            CLEAR DCB KEYLEN FIELD    X010XX
         NI    DCBOPTCD,AOSFB          CLEAR DCB OPTCD FIELD     X010XX
         MVI   DCBRECFM,X00            CLEAR DCB RECFM FIELD     X010XX
         SPACE 1                                                 X010XX
         NI    FORM,XFF-FORM4          TURN OFF OVERFLOW FLAG    A36059
         BAL   GR9,DOINDCB             OPEN FIRST INPUT DATA SET
         SPACE 1
*                                                                     *
*                  READ IN JFCB THEN OPEN AND THEN OBTAIN DSCB TO     *
*         GET BLOCKSIZE, TTRS AND TRACK BALANCE OF OUTPUT DATA SET,   *
*         AND CHECK DATA SET ORGANIZATION FOR PARTITIONED.            *
*                  GR5 MAINTAINS DCB ADDRESS AS LONG AS NECESSARY     *
*                                                                     *
         SPACE 1
         LA    GR5,OUTDCB
         MVC   DDVALNM(LEN8),DDNAME1(GR5) SAV NAME OF DS VALIDATING
         LA    GR8,JFCB1               POINTER TO JFCB
         ST    GR8,LIST1               STORE IN EXIT LIST
         MVI   LIST1,JFCBECON          SET JFCB EXIT+LAST ENTRY
         SPACE 1
         LA    GR1,BPAMOUT             ADDRESS OF OUTPUT DATA SET BPAM
         MVC   DDNAME1(LEN8,GR1),DDNAME1(GR5) NAME OF CURRENT OUTPUT DS
         SPACE
         DEVTYPE DDVALNM,OUTCHAR,DEVTAB GET OUTPUT DEVICE DATA   S20201
         LTR   GR15,GR15               MISSING DD CARD
         BZ    ODDPRES                 NO, OK
         SPACE 1
         BAL   GR8,NODDCD              GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
ODDPRES  EQU   *
         SPACE 1
         RDJFCB ((GR5))
         LA    GR8,JFCB1               JFCB BUFFER ADDRESS
         USING INFMJFCB,GR8
         MVC   OTDSNAME(LEN44),JFCBDSNM MOVE OUTPUT DSNAME TO COMM AREA
         MVC   OUTVOL(LEN6),JFCBVOLS  SAVE OUTPUT VOLID
         SPACE 1                                                 X010XX
         CLI   OUTUCBTP,UCBDIRCT       IS OUTPUT DATA SET DASD   X010XX
         BNE   DV000200                NO, GO TO UNLOAD INITIAL- X010XX
*                                       IZATION ROUTINE          X010XX
         SPACE 1                                                 X010XX
         SPACE
***********************************************************************
*                                                                     *
*  THIS SECTION OF CODE 1) OBTAINS THE OUTPUT DSCB, 2) DETERMINES     *
*  DATA SET CHARACTERISTICS THAT ARE NULL IN THE OUTPUT DSCB AND      *
*  OUTPUT JFCB, 3) FILLS THESE NULL OUTPUT CHARACTERISTICS WITH THE   *
*   FIRST INPUT DATA SET'S CHARACTERISTICS                            *
*                                                                     *
***********************************************************************
         SPACE
         USING DXDSCB,GR2
         LA    GR2,DSCB                POINTER TO DSCB
         LA    GR3,INDCB               POINTER TO INPUT DCB
         NI    FLG3,XFF-ENTOBT         SET OBTAIN NOT ENTERED YET 01182
OUTOBT   EQU   *                                                OY01182
         SPACE
         OBTAIN OBTL                   GET OUTPUT DSCB
         LTR   GR15,GR15               OBTAIN OK
         BZ    OUTOBTOK                YES, GO ON
         SPACE 1
         LA    GR8,LEN4                                         OY01182
         CR    GR15,GR8                WAS VOLUME MOUNTED       OY01182
         BH    BADOBT                  NO,VALIDATION ERROR      OY01182
*     TRY TO MOUNT IT NOW                                       OY01182
         TM    FLG3,ENTOBT             DO NOT LOOP              OY01182
         BO    BADOBT                                           OY01182
         MVI   MNTJFCB+117,X01         1 VOLUME ON LIST         OY01182
         MVC   MNTJFCB+118(LEN6),INVOL GET VOLUME SER           OY01182
         MVI   MNTJFCB+124,X40    NO MORE VOLUMES               OY01182
         LA    GR7,OUTOBT         SET RETURN ADDR               OY01182
         B     OPENVTOC                ISSUE MOUNT REQUEST      OY01182
         SPACE 1
OUTOBTOK EQU   *
         TM    DS1DSORG(GR2),PARTORG   PARTIONED ORGANIZATION    A33299
         BO    OUTPDS                  YES, OK                   A33299
         SPACE 1                                                 X010XX
         TM    DS1DSORG(GR2),BADDSORG  IS OR DA DSORG            X010XX
         BZ    DV000200                NO, GO TO UNLOAD INITIAL- X010XX
*                                       IZATION ROUTINE          X010XX
         SPACE 1                                                 A33299
         BAL   GR8,DV000800            GIVE ERROR MESSAGE        X010XX
         B     GETNEXT                 GO TO ERROR RTN           A33299
         SPACE 1                                                 A33299
OUTPDS   EQU   *                                                 A33299
         TM    JFCBIND2,JFCNEW    IS OUTPUT A 'NEW' DS         @YA02573
         BO    TESTKEY            YES                          @YA02573
         CLC   KEYLENGT(LEN1,GR3),JFCKEYLE  INPUT KEY LENGTH =  OZ00100
*                                      OUTPUT JFCB KEY LENGTH  @YA02573
         BE    TESTRCFM           YES                          @YA02573
         CLC   KEYLENGT(LEN1,GR3),DSCKEYL   INPUT KEY LENGTH =  OZ00100
*                                      OUTPUT DSCB KEY LENGTH  @YA02573
         BE    TESTRCFM           YES                          @YA02573
         L     GR1,NXTINDS        NO; LOAD POINTER TO INDD     @YA02573
*                                  NAME                        @YA02573
         MVC   DDVALNM(LEN8),LEN2(GR1)  MOVE IN INDD NAME      @YA02573
*                                       TO BE USED IN MSG      @YA02573
         BAL   GR8,KEYERR         WRITE KEYLENGTH ERROR MSG    @YA02573
         B     GETNEXT            GO TO ERROR RTN              @YA02573
TESTKEY  MVC   WKA1(LEN1),DSCKEYL MOVE OUTPUT DSCB KEY LENGTH  @YA02573
         OC    WKA1(LEN1),JFCKEYLE  OR OUTPUT JFCB KEY LENGTH
         BNZ   TESTRCFM                BRANCH IF BOTH NOT ZERO
         MVC   JFCKEYLE(LEN1),KEYLENGT(GR3)  MOVE INPUT KEY LENGTH TO
*                                         OUTPUT JFCB
TESTRCFM EQU   *
         MVC   WKA1(LEN1),DSCRECFM  MOVE OUTPUT DSCB RECFM
         OC    WKA1(LEN1),JFCRECFM  ARE THEY BOTH ZERO
         BNZ   LRCLNEED             NO, GO AROUND                A45216
         MVC   JFCRECFM(LEN1),RECFMFLD(GR3) MOVE INPUT RECFM TO OUTPUT
*                                        JFCB
LRCLNEED EQU   *                                                 A45216
         TM    JFCRECFM,UNDEFREC       OUTPUT UNDEFINED RECRDS   A45216
         BO    TESTOPCD                YES-DON'T FILL LRECL      A45216
         BM    TESTLRCL                NO-DO LRECL               A45216
         TM    DSCRECFM,UNDEFREC       OUTPUT UNDEFINED RECRDS   A45216
         BO    TESTOPCD                YES-DON'T FILL LRECL      A45216
TESTLRCL EQU   *                                                 A45216
         MVC   WKA1(LEN2),DSCLRECL     MOVE OUTPUT DSCB LRECL    A45216
         OC    WKA1(LEN2),JFCLRECL     ARE THEY BOTH ZERO        A45216
         BNZ   TESTOPCD                NO, GO AROUND             A45216
         MVC   JFCLRECL(LEN2),INLRECL  MOVE INPT LRECL TO OUTPUT A45216
*                                        JFCB                    A45216
TESTOPCD EQU   *
         MVC   WKA1(LEN1),DSCOPTCD  MOVE OUTPUT DSCB OPTCD
         OC    WKA1(LEN1),JFCOPTCD  ARE THEY BOTH ZERO
         BNZ   TESTBLKS                NO, GO AROUND
         MVC   JFCOPTCD(LEN1),OPTCDFLD(GR3) MOVE INPUT OPTCD TO OUTPUT
*                                        JFCB
TESTBLKS EQU   *
         MVC   WKA1(LEN2),DSCBLKL  MOVE OUTPUT DSCB BLKSIZE
         OC    WKA1(LEN2),JFCBLKSI ARE THEY BOTH ZERO
         BNZ   FILLDONE                NO, GO AROUND             A45216
         MVC   JFCBLKSI(LEN2),IBLKSIZE  MOVE INPUT BLOCKSIZE TO OUTPUT
*                                        JFCB
FILLDONE EQU   *
         SPACE
         SPACE 1
         OPEN  ((GR5),OUTIN),TYPE=J    OPEN OUTPUT DCB
         SPACE 1
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR
         BO    OUTOPEND                NO, OK
         SPACE 1
         BAL   GR8,OPENBAD             GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
OUTOPEND EQU   *
         NI    OPENFLGS(GR5),XFF-LWR  TURN OFF LAST OPERATION WAS
*                                        A WRITE IN OUTPUT DCB SO
*                                        THAT IF AN ABEND OCCURS
*                                        CLOSE WON'T UPDATE DSCLSTAR
*                                        FIELD IN DSCB
         SPACE 1
OBTAINS  OBTAIN OBTL                   OBTAIN OUTPUT DSCB
         LTR   GR15,GR15               OBTAIN OKAY
         BZ    OUTOBTGD                YES, GO ON
         SPACE 1
BADOBT   EQU   *
         BAL   GR8,OBTAINBD            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
OUTOBTGD EQU   *
         MVC   OUTDS1(LEN3),DS1LSTAR(GR2) MOVE TTR TO BUFFER (LAST REC)
         MVI   OUTDS1+LEN3,X00          SET N=0
         MVC   OUTDS1+LEN4(LEN2),DS1LSTAR+LEN3(GR2) MOVE TRACK BALANCE
         MVC   OUTPTTR(LEN6),OUTDS1  SAVE TTRN/TB IN BACK UP BUFFER
         MVC   TRKBALAN(LEN2,GR5),OUTDS1+LEN4  MOVE TRACK BAL TO DCB
         MVC   ERPTTR(LEN4),OUTDS1  MOVE TTRN TO WORK AREA
         MVC   ERPTB(LEN2),OUTDS1+LEN4 MOVE TRACK BAL TO WORK AREA
         MVC   BPAMOUT+DIRCTDCB(LEN2),DSCBLDBL   SAVE NUMBER OF BYTES
*                                                  USED IN LAST
*                                                  DIRECTORY BLOCK
*                                                  IN CASE WE RUN OUT
*                                                  OF DIRECTORY SPACE
         SPACE 1
         LR    GR1,GR5                 OUTDCB ADDRESS
         L     GR0,OUTDS1              TTRN TO CONVERT (LAST RECORD)
         LA    GR2,OUTFDAD             BUFFER FOR MBBCCHHR
         L     GR15,VTTOCC             TTRN TO MBBCCHHR CONVERT ROUTINE
         BALR  GR14,GR15               CONVERT TO MBBCCHHR STORE 0(GR2)
         SPACE 1
         MVC   TRBALBUF(LEN2),OUTCHAR+LEN12  MAXIMUM RECORD ON TRACK
         MVC   ERPLMFD(LEN8),OUTFDAD
         LA    GR2,DSCB                POINTER TO DSCB           A33299
         SPACE
         TM    RECFMFLD(GR5),OVERFLOW  DATA SET HAS OVERFLOW
         BNO   NOTOVRFL                NO, GO AROUND
         OI    FORM,FORM4              SET FOR A DATA SET WITH OVERFLOW
NOTOVRFL EQU   *
         LH    GR7,DS1BLKL(GR2)        DATA SET BLOCK LENGTH DSCB
         LTR   GR7,GR7
         BP    OBGTZERO                BLOCKSIZE GT THAN ZERO (OK)
         SPACE 1
         B     OBLKERR                 GIVE ERROR MSG
         SPACE 1
OBGTZERO EQU   *
         STH   GR7,OBLKSIZE            STORE BLOCK SIZE IN BUFFER
         LH    GR6,DS1LRECL(GR2)       DATA SET LRECL IN DSCB
         STH   GR6,OUTLRECL            STORE LRECL IN BUFFER
         XR    GR15,GR15               CLEAR REG
         IC    GR15,OUTBOLST           INSERT BLOCK OVERHEAD LAST REC
         TM    OUTDEVFG,HALFOVER       TWO BYTE OVERHEAD         S20201
         BNO   NOTTWO                  NO, GO AROUND             S20201
         LH    GR15,OUTOVER2           LOAD OVERHEAD VALUE       S20201
NOTTWO   EQU   *                                                 S20201
         AH    GR15,OBLKSIZE           ADD BLOCKSIZE
         XR    GR14,GR14               CLEAR REG
         IC    GR14,KEYLENGT(GR5)      INSERT KEY LENGTH
         AR    GR15,GR14               ADD TO BLOCKSIZE + OVERHEAD
         LTR   GR14,GR14               KEY LENGTH ZERO
         BNZ   ITSKEYED                YES, DON'T SUBTRACT KEY OVHD
         IC    GR14,OUTKEYOV           INSERT KEY OVERHEAD
         SR    GR15,GR14               SUBTRACT FROM BLOCKSIZE+
*                                         KEYLENGTH+BLOCK OVERHEAD
ITSKEYED EQU   *
         CH    GR15,TRBALBUF           WILL MAXIMUM SIZE RECORD FIT
*                                         ON ONE TRACK
         BNH   OKGO                    YES, GO ON
         TM    RECFMFLD(GR5),OVERFLOW  OVERFLOW RECORDS ON DATA SET
         BO    OKGO                    YES, OK
         SPACE 1
OBLKERR  EQU   *
         BAL   GR8,BLOCKERR            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
OKGO     EQU   *
         L     GR1,DEBADDR(GR5)        DEB POINTER FROM DCB
         LA    GR1,LEN0(GR1)   CLEAR HIGH ORDER BYTE
         LA    GR6,OUTIOB
         XC    FDADADDR(LEN8,GR5),FDADADDR(GR5) CLEAR FDAD FIELD IN DCB
         MVC   FDADADDR+LEN1(LEN6,GR5),DEBBCCHH(GR1) BBCCHH-FDAD OUTDCB
         NI    TAG,XFF-TAG5       RESET VALIDITY CHECK SWITCH
         MVC   OKEYLEN(LEN1),KEYLENGT(GR5)  MOVE KEY LENGTH TO BUFFER
         CLI   OUTUCBDV,THE2321        IS OUTPUT DEVICE A 2321
         BE    SET4CHKB                FORCE READ BACK CHECKING
         TM    OPTCDFLD(GR5),VALCHK    CHECK FOR READBACK CHECK
         BZ    NEXTINS                 NO
SET4CHKB EQU   *
         OI    TAG,TAG5                SET VALIDITY CHECK SWITCH
         SPACE 1
NEXTINS  EQU   *
         TM    RECFMFLD(GR5),UNDEFREC  RECORD FORMAT UNDEFINED TYPE
         BO    UNDEFNOB           UNDEFINED IF BOTH ON- NO BLOCK
         TM    RECFMFLD(GR5),VARREC    OUTPUT VARIABLE
         BNO   BLOCKTST                NO, GO ON
         SPACE 1
         LH    GR2,OBLKSIZE            LOAD OUTPUT BLKSIZE
         LH    GR1,OUTLRECL            LOAD OUTPUT LRECL
         LA    GR1,LEN4(GR0,GR1)     ADD 4 TO LRECL
         SR    GR2,GR1                 BLKSIZE=LRECL+4  (OR MORE)
         BNM   BLOCKTST              YES, GO ON
         SPACE 1
         B     OBLKERR                 GIVE ERROR MSG
         SPACE 1
BLOCKTST EQU   *
         TM    RECFMFLD(GR5),BLOCKREC  RECORDS BLOCKED
         BZ    CHKOFIXD                NO, CHECK FOR FIXED UNBLOCKED
         LH    GR1,OUTLRECL            LOAD OUTPUT LRECL
         LTR   GR1,GR1                 LRECL=0 OR LESS
         BP    OLRECLOK                NO, OK
         SPACE 1
         BAL   GR8,LRECLBAD            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
OLRECLOK EQU   *
         LH    GR3,OBLKSIZE            OUTPUT BLOCKING FACTOR
         SR    GR2,GR2
         DR    GR2,GR1
         LTR   GR2,GR2                 ANY REMAINDER
         BZ    SETOBLK                 NO, GO ON
         TM    RECFMFLD(GR5),VARREC    VARIABLE LENGTH RECORDS
         BO    SETOBLK                 YES, GO ON
         SPACE 1
         B     OBLKERR                 GIVE ERROR MSG
         SPACE 1
SETOBLK  EQU   *
         OI    FORM,FORM3              SET SWITCH FOR BLOCKED OUTPUT
         B     PUTBLK                  STORE BLOCKING FACTOR
         SPACE 1
CHKOFIXD EQU   *
         TM    RECFMFLD(GR5),FIXEDREC  RIXED RECFM
         BZ    UNDEFNOB                NO, GO AROUND
         LH    GR1,OUTLRECL            LOAD OUTPUT LRECL
         LTR   GR1,GR1                 IS IT ZERO
         BNZ   OLVOB                   NO, GO ON
         MVC   OUTLRECL(LEN2),OBLKSIZE SET OUTPUT LRECL=OUTPUT BLKSIZE
OLVOB    EQU   *
         CLC   OUTLRECL(LEN2),OBLKSIZE BLOCKSIZE=LRECL - OUTPUT
         BE    UNDEFNOB                YES, GO ON
         SPACE 1
         B     OBLKERR                 GIVE ERROR MSG
         SPACE 1
UNDEFNOB EQU   *
         NI    FORM,XFF-FORM3     RESET OUTPUT BLOCKED SWITCH
         LA    GR3,LEN1           BLOCKING FACTOR IF UNBLOCKED
         SPACE 1
PUTBLK   EQU   *
         STH   GR3,OBLKFAC             STORE BLOCKING FACTOR
         XC    NOTRKS(LEN2),NOTRKS
         L     GR2,DEBADDR(GR5)        DEB POINTER FROM DCB
         SR    GR5,GR5
         IC    GR5,EXTNODEB(GR2)       PICK FROM DEB NUMBER OF EXTENTS
         LR    GR8,GR5                 SAVE EXTENT FOR COUNT
         SLL   GR5,LEN4           MULTIPLY BY 16
         LA    GR5,DEBNMTRK(GR5)       UP PAST LAST DEBNMTRK FIELD
         AR    GR5,GR2                 POINT TO LAST EXTENT DEBNMTRK
         LA    GR6,LEN16          SIZE OF EXTENT APPENDAGE ON DEB
         SPACE 1
EXTENTLP EQU   *
         SR    GR5,GR6                 BACK UP TO EXTENT DEBNMTRK
         LH    GR7,LEN0(GR5)      GET NUMBER OF TRACKS IN EXTENT
         AH    GR7,NOTRKS
         STH   GR7,NOTRKS              UP TOTAL TRACK NUMBER
         BCT   GR8,EXTENTLP            TOTAL TRACKS IN ALL EXTENTS
         LA    GR9,CMPINOUT            SET UP RETURN ADDRESS TO BE
*                                        USED LATER ON WHEN A
*                                        VALIDATION ERROR OCCURS ON
*                                        AN INPUT DATA SET
         B     CMPINOUT                COMPARE INPUT AND OUTPUT DATA
*                                         DATA SETS
DV000200 EQU   *                                                 X010XX
         SPACE 1                                                 X010XX
         LA    GR1,PARMLST             LOAD PARAMETER LIST       X010XX
*                                       ADDRESS                  X010XX
         L     GR15,VLDUL2             LOAD ADDRESS OF UNLOAD    X010XX
*                                       INITIALIZATION ROUTINE   X010XX
         BALR  GR14,GR15               OPEN UNLOAD DATA SET      X010XX
         SPACE 1                                                 X010XX
         LTR   GR15,GR15               ERROR FOUND BY IEBLDUL2   X010XX
         BZ    TSTCMPRS                NO, CHECK FOR PARM=       X010XX
*                                       COMPRESS                 X010XX
         B     GETNEXT                 YES, GO TO ERROR ROUTINE  X010XX
         SPACE
         TITLE 'IEBDV1 VALIDATE ROUTINE- IN DATA SET - IEBDV2'
         DS    0F                      FORCE ALIGNMENT
IEBDV2   EQU   *
*ENTRY VALIDATE/OPEN INPUT DATA SET- NOT FIRST ONE                    *
         SAVE  (14,12),,IEBDV2
         BALR  GR12,GR0           GET ADDRESSABILITY
         LA    GR15,IEBDV2-IEBDV1      ESTABLISH TOTAL ADDRESSABILITY
         SR    GR12,GR15               RELATIVE TO START OF CSECT
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA
         LA    GR15,SV5                 PTR TO SAVE AREA
         ST    GR15,LEN8(GR13)
         LR    GR13,GR15               POINTER TO NEW SAVE AREA
         NI    FLG3,XFF-OUTPUTEP  RESET FOR ENTRY AT DV2
         LA    GR5,OUTDCB         GET POINTER TO OUTPUT DCB      A38778
         TM    DCBRECFM,OVERFLOW  IS OUTPUT TRACK OVERFLOW       A38778
         BO    DV105000           YES, GO AROUND                 A38778
         SPACE 1                                                 A38778
         NI    FORM,XFF-FORM4     RESET SWITCH INDICATING OUTPUT A38778
*                                OR INPUT PDS HAS TRACK OVERLLOW A38778
DV105000 EQU   *                                                 A38778
         LA    GR9,CMPINOUT            TO BE USED LATER FOR BRANCH
         SPACE 1
*                                                                     *
*                  READ IN JFCB THEN OPEN AND THEN OBTAIN DSCB TO     *
*         GET BLOCKSIZE, TTRS AND TRACK BALANCE OF OUTPUT DATA SET,   *
*         AND CHECK DATA SET ORGANIZATION FOR PARTITIONED.            *
*                  GR5 MAINTAINS DCB ADDRESS AS LONG AS NECESSARY     *
*                                                                     *
         SPACE 1
DOINDCB  EQU   *
         LA    GR5,INDCB
         MVC   DDVALNM(LEN8),DDNAME1(GR5) SAVE NAME OF DS VALIDATING
         NI    ULLDST,XFF-LOAD         TURN OFF LOAD SWITCH      X010XX
         MVI   DCBKEYLE,X00            CLEAR DCB KEYLEN FIELD    X010XX
         NI    DCBOPTCD,AOSFB          CLEAR DCB OPTCD FIELD     X010XX
         MVI   DCBRECFM,X00            CLEAR DCB RECFM FIELD     X010XX
         LA    GR1,JFCB1               POINTER TO JFCB
         ST    GR1,LIST1               STORE IN EXIT LIST
         MVI   LIST1,JFCBECON          SET FOR JFCB EXIT+LAST
         SPACE
         DEVTYPE DDVALNM,INCHAR,DEVTAB GET INPUT DEVICE DATA     S20201
         LTR   GR15,GR15               MISSING DD CARD
         BZ    IDDPRES                 NO, OK
         SPACE 1
         BAL   GR8,NODDCD              GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
IDDPRES  EQU   *
         BAL   GR7,CHECKCAT            CHECK FOR CONCATENATION
         SPACE
         RDJFCB ((GR5))
         LA    GR8,JFCB1               JFCB BUFFER ADDRESS
         MVC   INDSNAME(LEN44),JFCBDSNM  MOVE INPUT DSNAME TO COMM AREA
         MVC   INVOL(LEN6),JFCBVOLS    SAVE INPUT VOLID
         SPACE 1                                                 X010XX
         CLI   INUCBTP,UCBDIRCT        IS INPUT DATA SET DASD    X010XX
         BNE   DV000600                NO, GO TO LOAD INITIALIZ- X010XX
*                                        ATION ROUTINE           X010XX
         SPACE 1                                                 X010XX
         NI    FLG3,XFF-ENTOBT         FIRST OBTAIN FOR DATASET OY01182
INOBT    EQU   *                                                OY01182
         OBTAIN  OBTL                  OBTAIN INPUT DSCB        OY01182
         LTR   GR15,GR15               OBTAIN OK                OY01182
         BZ    DV000400                YES,GO ON                OY01182
         LA    GR8,LEN4                                         OY01182
         CR    GR15,GR8                VOLUME NOT MOUNTED       OY01182
         BH    BDIOBT                  NO,VALIDATION ERROR      OY01182
         TM    FLG3,ENTOBT             DONT LOOP                OY01182
         BO    BDIOBT                                           OY01182
         MVI   MNTJFCB+117,X01         1 VOLUME ON LIST         OY01182
         MVC   MNTJFCB+118(LEN6),INVOL GET VOLSER               OY01182
         MVI   MNTJFCB+124,X40         NO MORE VOLUMES          OY01182
         LA    GR7,INOBT               SET RETURN ADDRESS       OY01182
         B     OPENVTOC                GO ISSUE MOUNT REQUEST   OY01182
BDIOBT   EQU   *                                                OY01182
         SPACE 1                                                 X010XX
         BAL   GR8,OBTAINBD            GIVE ERROR MESSAGE        X010XX
         B     GETNEXT                 GO TO ERROR ROUTINE       X010XX
         SPACE 1                                                 X010XX
DV000400 EQU   *                                                 X010XX
         LA    GR2,DSCB                LOCATION DSCB JUST READ   X010XX
         TM    DS1DSORG(GR2),PARTORG   PARTITIONED PRGANIZATION  X010XX
         BO    INPDS                   YES, GO OPEN DCB          X010XX
         SPACE 1                                                 X010XX
         TM    DS1DSORG(GR2),BADDSORG  IS OR DA DSORG            X010XX
         BZ    DV000600                NO, GO TO LOAD INITIALIZ- X010XX
*                                        ATION ROUTINE           X010XX
         SPACE 1                                                 X010XX
         BAL   GR8,DV000800            GIVE ERROR MESSAGE        X010XX
         B     GETNEXT                 GO TO ERROR ROUTINE       X010XX
         SPACE 1                                                 X010XX
INPDS    EQU   *                                                 X010XX
         SPACE 1                                                 X010XX
         OPEN  ((GR5),INPUT),TYPE=J    OPEN INPUT DCB
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR
         BO    INOPEND                 NO, OK
         SPACE 1
         BAL   GR8,OPENBAD             GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
INOPEND  EQU   *
         L     GR1,DEBADDR(GR5)        DEB POINTER FROM DCB
         LA    GR1,LEN0(GR1)      CLEAR HIGH ORDER BYTE
         XC    FDADADDR(LEN8,GR5),FDADADDR(GR5) CLEAR FDAD FIELD IN DCB
         MVC   FDADADDR+LEN1(LEN6,GR5),DEBBCCHH(GR1) BBCCHH -FDAD-INDCB
         B     SETFIXED                BRANCH AROUND LOAD CODE   X010XX
         SPACE 1                                                 X010XX
DV000600 EQU   *                                                 X010XX
         LA    GR1,PARMLST             LOAD PARAMETER LIST       X010XX
*                                       ADDRESS                  X010XX
         L     GR15,VLDUL1             LOAD ADDRESS OF LOAD INIT-X010XX
*                                       IALIZATION ROUTINE       X010XX
         BALR  GR14,GR15               OPEN LOAD DCB             X010XX
         SPACE 1                                                 X010XX
         LTR   GR15,GR15               ERROR FOUND BY IEBLDUL1   X010XX
         BP    GETNEXT                 YES, GO TO ERROR ROUTINE  X010XX
         SPACE 1                                                 X010XX
         SPACE 1
SETFIXED EQU   *
         NI    FORM,XFF-FORM1     SET FOR FIXED INPUT
         TM    RECFMFLD(GR5),VARREC    INPUT V (OR U)
         BNO   CHECKBLK                NO, GO AROUND
         OI    FORM,FORM1              SET FOR V RECORDS   (OR U)
CHECKBLK EQU *
         LA    GR8,JFCB1               POINTER TO JFCB
         LH    GR7,JFCBLKSZ(GR0,GR8)   LOAD JFCB BLKSIZE
         LTR   GR7,GR7                 IS IT ZERO
         BP    STOREBLK                NO, LET IT OVER-RIDE DSCB
         LH    GR7,DS1BLKL(GR2)        DATA SET BLOCK LENGTH DSCB
         LTR   GR7,GR7                 BLOCKSIZE ZERO
         BP    STOREBLK                NO, OK
         SPACE 1
IBLKERR  EQU   *
         BAL   GR8,BLOCKERR            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
STOREBLK EQU   *
         STH   GR7,IBLKSIZE            STORE INPUT BLOCKSIZE
         LH    GR6,JFCBLREC(GR0,GR8)   LOAD JFCB LRECL
         LTR   GR6,GR6                 IS IT ZERO
         BP    STORELRC                NO, LET IT OVER-RIDE DSCB
         LH    GR6,DS1LRECL(GR2)       DATA SET LRECL IN DSCB
STORELRC EQU   *
         STH   GR6,INLRECL             STORE INPUT LRECL
         SPACE 1
         TM    RECFMFLD(GR5),OVERFLOW  DEVICE HAVE OVERFLOW- INPUT
         BNO   NOTOVRFO                NO, INPUT NOT OVERFLOW
TRKOVRST EQU   *
         OI    FORM,FORM4              SET FOR A DATA SET WITH OVERFLOW
NOTOVRFO EQU   *
         TM    RECFMFLD(GR5),UNDEFREC  RECORD FORMAT UNDEFINED TYPE
         BO    SKPLRECL           UNDEFINED RECORDS LRECL=0
         TM    RECFMFLD(GR5),VARREC    IS INPUT VARIABLE
         BNO   CHKINBLK                NO, GO ON
         SPACE 1
         LH    GR6,IBLKSIZE            LOAD INPUT BLKSIZE
         LH    GR1,INLRECL             LOAD INPUT LRECL
         LA    GR1,LEN4(GR0,GR1)  ADD 4 TO LRECL
         SR    GR6,GR1                 BLKSIZE=LRECL+4  (OR MORE)
         BNM   CHKINBLK           YES, GO ON
         SPACE 1
         B     IBLKERR                 GIVE ERROR MESSAGE
         SPACE 1
CHKINBLK EQU   *
         TM    RECFMFLD(GR5),BLOCKREC  RECORDS BLOCKED
         BZ    CHKIFIXD                NO, CHECK FOR FIXED UNBLOCKED
         LH    GR1,INLRECL             LOAD INPUT LRECL
         LTR   GR1,GR1                 LRECL=0 OR LESS
         BP    ILGTZERO                NO, OK
         SPACE 1
ILRECERR EQU   *
         BAL   GR8,LRECLBAD            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
ILGTZERO EQU   *
         LH    GR7,IBLKSIZE            INPUT BLOCK SIZE
         SR    GR6,GR6
         DR    GR6,GR1
         LTR   GR6,GR6                 ANY REMAINDER
         BZ    SETIBLK                 NO, GO ON
         TM    RECFMFLD(GR5),VARREC    VARIABLE LENGTH RECORDS
         BO    SETIBLK                 YES, GO ON
         SPACE 1
         B     IBLKERR                 GIVE ERROR MSG
         SPACE 1
SETIBLK  EQU   *
         OI    FORM,FORM2              SET INPUT BLOCKED SWITCH
         B     GETDEVIN                STORE BLOCKING FACTOR
         SPACE 1
CHKIFIXD  EQU   *
         TM    RECFMFLD(GR5),FIXEDREC  FIXED RECFM
         BZ    SKPLRECL                NO, GO AROUND
         LH    GR1,INLRECL             LOAD INPUT LRECL
         LTR   GR1,GR1                 IS IT ZERO
         BNZ   ILVIB                   NO, GO ON
         MVC   INLRECL(LEN2),IBLKSIZE  SET INPUT LRECL=INPUT BLKSIZE
ILVIB    EQU   *
         CLC   IBLKSIZE(LEN2),INLRECL  BLKSIZE=LRECL - INPUT
         BE    SKPLRECL                YES, GO ON
         SPACE 1
         B     IBLKERR                 GIVE ERROR MSG
         SPACE 1
SKPLRECL EQU   *
         LA    GR7,LEN1           ASSUME BLOCKING FACTOR OF 1
         NI    FORM,XFF-FORM2     RESET INPUT BLOCKED SWITCH
GETDEVIN EQU   *
         STH   GR7,IBLKFAC             BLOCKING FACTOR
         BR    GR9                     RETURN TO DV1 IF OPENING OUTPUT
*                                         NEXT OR FALL THROUGH AND
*                                         COMPARE INPUT VS. OUTPUT
         SPACE 1
CMPINOUT EQU   *
         SPACE 1
         L     GR1,NXTINDS             LOAD POINTER TO INDD NAME
         MVC   DDVALNM(LEN8),LEN2(GR1) MOVE IN INDD NAME IN CASE AN
*                                         ERROR IS FOUND
         SPACE 1
         NI    FLG3,XFF-REBLK     RESET BLOCKING SWITCH
         LA    GR3,OUTDCB              POINTER TO OUT DCB
         LA    GR5,INDCB               POINTER TO INPUT DCB
         SPACE 1
GOONSS   EQU   *
         CLC   KEYLENGT(LEN1,GR5),OKEYLEN  EQUAL KEY LENGTHS
         BE    KEYSOK                  YES, GO ON
         SPACE 1
         BAL   GR8,KEYERR              GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
KEYSOK   EQU   *
         TM    RECFMFLD(GR3),UNDEFREC  IS OUTPUT U
         BO    BLKTEST                 TEST BLOCKSIZE          @ZA06526
         MVC   WKA1(LEN1),RECFMFLD(GR5) RECORD FORMAT FROM INDCB
         XC    WKA1(LEN1),RECFMFLD(GR3) RECORD FORMAT FROM OUTDCB
         TM    WKA1,FIXEDREC+VARREC    F TO V OR V TO F
         BZ    THERECMP                NO, GO ON
         SPACE 1
         BAL   GR8,UNEQRCFM            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
BLKTEST  EQU   *                                               @ZA06526
         TM    RECFMFLD(GR5),UNDEFREC  IS INPUT U              @ZA07344
         BO    COMPTEST                YES-OK                  @ZA07344
         CLC   OBLKSIZE(LEN2),IBLKSIZE BLKSIZES THE SAME       @ZA06526
         BE    COMPTEST                YES-TEST FOR COMPRESS   @ZA06526
         BAL   GR8,NOREDEB             NO-GIVE ERROR MSG132    @ZA06526
         B     GETNEXT                 GO TO ERROR RTN         @ZA06526
         SPACE 1
THERECMP EQU   *
         CLC   INLRECL(LEN2),OUTLRECL   LOGICAL RECORD LENGTHS EQUAL
         BE    SETREBLK                YES, OK
         SPACE 1
         B     ILRECERR                GIVE ERROR MSG
         SPACE 1
         SPACE 1
SETREBLK EQU   *
         CLC   OBLKSIZE(LEN2),IBLKSIZE  BLOCKING FACTORS THE SAME
         BE    COMPTEST                YES, NO REBLOCKING
         TM    FORM,FORM4              INPUT OR OUTPUT HAVE TRACK OVERF
         BNO   CHKFRKEY                NO, GO ON
         SPACE 1
         BAL   GR8,NOREBLOV            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
CHKFRKEY EQU   *
         MVC   WKA1(LEN1),OKEYLEN   INPUT OR
         OC    WKA1(LEN1),KEYLENGT(GR5)  OUTPUT KEYED
         BZ    NOKEYS                  NO, GO ON
         SPACE 1
         BAL   GR8,NOREBLKY            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
NOKEYS   EQU   *
         OI    FLG3,REBLK              SET FLAG FOR REBLOCKING
         SPACE 1
**  CHECK FOR COMPRESS
         SPACE 1
COMPTEST EQU   *
         SPACE 1
         CLC   INDSNAME(LEN44),OTDSNAME  DSNAMES EQUAL
         BNE   TSTCMPRS                NO, CHECK PARM=COMPRESS
         CLC   OUTVOL(LEN6),INVOL  VOLUME=SER'S EQUAL
         BNE   TSTCMPRS                NO, CHECK PARM=COMPRESS
         TM    DSCB+DS1DSORG,UNMOVEBL  IS OUTPUT (ALSO INPUT) DATA
*                                        SET UNMOVEABLE
         BNO   TESTKEYS                NO, GO ON
         SPACE 1
         BAL   GR8,NOMOVE              GIVE ERROR MSG
         B     GETNEXT                 TRY NEXT INPUT DATA SET
         SPACE 1
TESTKEYS EQU   *
         OC    OKEYLEN(LEN1),OKEYLEN  KEY LENGTH = 0
         BZ    TESTRB                  NO, GO ON
         SPACE 1
         BAL   GR8,NCMPKEYS            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
TESTRB   EQU   *
         TM    FLG3,REBLK              RE/DE BLOCKING REQUESTED
         BZ    TESTSE                  NO, GO ON
         SPACE 1
         BAL   GR8,NCMPRB              GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
TESTSE   EQU   *
         TM    COMDCDSW,SELECTSC+EXCLUDES  SELECTIVE OR EXCLUSIVE
*                                          COPY OPERATION
         BZ    TESTOV                  NO, GO ON
         SPACE 1
         BAL   GR8,NCMPSE              GIVE ERROR MESSAGE
         B     GETNEXT                 GO TO ERROR ROUTINE
         SPACE 1
TESTOV   EQU   *
         TM    FORM,FORM4              TRACK OVERFLOW
         BZ    SETCMPSW                NO, GO ON
         SPACE 1
         BAL   GR8,NCMPOV              GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE 1
SETCMPSW EQU   *
         OI    COMDCDSW,COMPRESS       SET COMPRESS BIT
         BAL   GR8,COMPMESS            GIVE COMPRESS MESSAGE
         B     LEAVE                   GO ON
         SPACE 1
TSTCMPRS EQU   *
         TM    COMDCDSW,COMPRESS       WAS PARM=COMPRESS
         BNO   LEAVE                   NO, GO ON
         NI    COMDCDSW,XFF-COMPRESS  TURN OFF COMPRESS SWITCH
         BAL   GR8,NCMPMSG             GIVE NO COMPRESS MSG
         SPACE 1
LEAVE    EQU   *
         SPACE 1
         L     GR13,SV5+SAV4      CALLERS SAVE AREA
         RETURN (14,12)                RETURN TO CALLER- NO ERRORS
         TITLE 'IEBDV1 VALIDATE ROUTINE- SYSPRINT/SYSIN - IEBDV0'
         DS    0F                      FORCE ALIGNMENT
IEBDV0   EQU   *
*ENTRY VALIDATE/OPEN SYSPRINT/SYSIN
         SAVE  (14,12),,IEBDV0
         BALR  GR12,GR0           SET BASE REGISTER UP
         LA    GR15,IEBDV0-IEBDV1      ESTABLISH TOTAL ADDRESSIBILITY
         SR    GR12,GR15               RELATIVE TO START OF CSECT
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA
         LA    GR15,SV5                 PTR TO SAVE AREA
         ST    GR15,LEN8(GR13)
         LR    GR13,GR15               POINTER TO NEW SAVE AREA
         SPACE 1
*                    OPEN AND VALIDATE SYSPRINT                       *
         SPACE 1
         LA    GR5,PRTDCB              PRINTER DCB POINTER
         MVC   SYNADADR(LEN4,GR5),VIEBPER  ADDR OF SYSPRNT SYNAD TO DCB
         LA    GR3,PRDEXLST            PRINTER EXLST HANDLER- SYSIN TOO
         ST    GR3,LIST2               SET POINTER INTO EXIT LIST
         MVI   LIST2,LIST2SET          SET CODE FOR OPEN EXLST
         MVC   DDVALNM(LEN8),DDNAME1(GR5) SAVE NAME OF DS VALIDATING
         SPACE 1
         OPEN  ((GR5),OUTPUT)          OPEN SYSPRINT
         SPACE 1
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR
         BO    PRTOPEN                 NO, GO ON
         SPACE
ROTTENPT EQU   *
         OI    IOEF2,SPRNOPN           SET SYSPRINT NOT OPEN SWITCH
         MVI   MSG1+LEN1,BADPRINT   BAD SYSPRINT MESSAGE
         MVI   MSG1,LASTMSG+PBIT       LAST MSG + BUILD
         MVI   NAMEDISP,X00       OFFSET FOR NAME
         MVI   PARAMS,NAME             EBDIC MSG
         BAL   GR8,GIVEMES4            GIVE MESSAGE              A44144
         SPACE
PRTOPEN  EQU   *
         TM    CCDELIM,BADBLOCK        WAS THERE AN ERROR IN BLOCKSIZE
         BNO   OPENSYSN                NO, GO ON
         NI    CCDELIM,XFF-BADBLOCK  TURN OFF ERROR SWITCH
         SPACE 1
         CLOSE ((GR5))                 CLOSE SYSPRINT
         SPACE 1
         L     GR3,AMSG                LOAD POINTER TO MESSAGE CSECT
         USING IEBDV1MG,GR3            ADDRESSABILITY TO MSG CSECT
         MVI   MSGBUF,X40         SET BLANK IN BUFFER
         MVC   MSGBUF+LEN1(LEN120),MSGBUF  CLEAR MSG BUFFER
         MVC   MSGBUF+LEN1(LEN37),TEXT1 SET INVALID SYSPRINT BLKSIZE
*                                         MSG IN BUFFER
         MVC   MSGBUF+LEN10(LEN8),DDNAME1(GR5) MOVE DDNAME TO MESSAGE
         DROP  GR3
         OI    IOEF2,SPRNOPN           SET SYSPRINT NOT OPEN SWITCH
         MVI   MSG1,IOERF+LASTMSG      SET AS SYNAD MSG+LAST
         BAL   GR8,GIVEMES4            SET RCD WRITE MESSAGE     A44144
         SPACE 1
*                     OPEN AND VALIDATE SYSIN                         *
OPENSYSN EQU   *
         LA    GR5,CARDCB              SYSIN DCB
         MVC   EOFADDRS(LEN3,GR5),VIEBEOF+LEN1  SYSIN EODAD - TO DCB
         MVC   SYNADADR(LEN4,GR5),VIEBCER  ADDR OF SYSIN SYNAT TO DCB
         MVC   DDVALNM(LEN8),DDNAME1(GR5)  MOVE NAME TO BUFFER
         SPACE 1
         OPEN  ((GR5),INPUT)           OPEN SYSIN
         SPACE 1
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR
         BO    INOPEN                  NO, GO ON
         SPACE
         BAL   GR8,OPENBAD             GIVE MESSAGE
ROTTENIN EQU   *
         MVI   RCBUF,RTCDE        SET RETURN CODE=8
         OI    IOEF2,NOSYSIN           SET SYSIN ERROR SWITCH
         OI    VTMFLG1,UNUSEND         SET SWITCH FOR VTM
         OI    FLG4,NEWODS             SET SWITCH FOR VTM
         B     SYSINVTM                TERMINATE
         SPACE
INOPEN   EQU   *
         TM    CCDELIM,BADBLOCK        WAS THERE AN ERROR IN BLOCKSIZE
         BNO   SYSINOK                 NO, CONTINUE
         SPACE 1
         CLOSE ((GR5))                 CLOSE SYSIN
         SPACE 1
         BAL   GR8,BLOCKERR            GIVE ERROR MSG
         B     ROTTENIN                TERMINATE
         SPACE 1
SYSINOK  EQU   *
         MVI   CPARAMSW,READ1          PREPARE SO SCAN WILL READ A CARD
         USING CVT,GR1                                           A37881
         L     GR1,CVTPTR         ADDR OF COMM VECTOR TABLE      A37881
         L     GR2,CVTSVDCB       ADDR OF DCB FOR SYS1.SVCLIB    X010XX
         DROP  GR1                                               A37881
         LOAD  EP=IGG019C8,DCB=(GR2)   PRELOAD PCIAPPENDAGE      X010XX
         LOAD  EP=IGG019FT,DCB=(GR2)   PRELOAD SIOAPPENDAGE      X010XX
         B     LEAVE                   ALL DONE- SYSPRINT/SYSIN OK
         SPACE 1
*                                      REGISTER 1 HAD DCB ADDRESS
*  EXIT LIST SYSPRINT/SYSIN            REGISTERS 2-13 SHOULD BE THE
*                                      SAME AS TIME OPEN WAS GIVEN
*                                      DON'T CLOBBER REGISTER 14
         SPACE 1
PRDEXLST EQU   *        SYSIN/SYSPRINT EXIT LIST HANDLER BLKSIZE CHECK
         LH    GR6,LRECLDCB(GR1)       OBTAIN LRECL FROM DCB (121)
*                                      SYSIN DCB MACRO SET FOR 80 BYTES
         SR    GR8,GR8                 SYSPRINT DCB MACRO SET FOR 121
         LH    GR9,BLKSZDCB(GR1)       OBTAIN SYSPRINT BLOCKSIZE WHICH
*  WAS MERGED INTO DCB- OR SHOULD HAVE BEEN. SAME FOR SYSIN
         LTR   GR9,GR9                 BLOCKSIZE ZERO
         BZ    NOBLKSZ                 YES- ASSUME LRECL
         DR    GR8,GR6                 DIVIDE BLKSIZE BY LRECL
         LTR   GR8,GR8                 ANY REMAINDER
         BCR   MS8,GR14           NO REMAINDER RETURN TO OPEN
         OI    CCDELIM,BADBLOCK        SET BAD BLOCK SIZE SWITCH
NOBLKSZ  EQU   *
         STH   GR6,BLKSZDCB(GR1)       MAKE BLOCKSIZE EQUAL LRECL
         BR    GR14                    RETURN TO OPEN
         TITLE 'IEBDV1 VALIDATE ROUTINE- SYSUT3 DATA SET - IEBDV3'
         DS    0F                      FORCE ALIGNMENT
IEBDV3   EQU   *
*ENTRY VALIDATE/OPEN SYSUT3 DATA SET                                  *
         SAVE  (14,12),,IEBDV3
         BALR  GR12,GR0           GET ADDRESSABILITY
         LA    GR15,IEBDV3-IEBDV1      ESTABLISH TOTAL ADDRESSIBILITY
         SR    GR12,GR15               RELATIVE TO START OF CSECT
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA
         LA    GR15,SV5                 PTR TO SAVE AREA
         ST    GR15,LEN8(GR13)
         LR    GR13,GR15               POINTER TO NEW SAVE AREA
         SPACE 1
         LA    GR5,UT3DCB
         LA    GR1,JFCB1               POINTER TO JFCB
         ST    GR1,LIST1               STORE IN EXIT LIST
         MVI   LIST1,JFCBECON          SET JFCB EXIT+LAST ENTRY
         MVC   DDVALNM(LEN8),DDNAME1(GR5) SAVE NAME OF DS VALIDATING
         SPACE
         DEVTYPE DDVALNM,UT3CHAR,DEVTAB GET SYSUT3 DEVICE DATA   S20201
         LTR   GR15,GR15               MISSING DD CARD
         BZ    S3DDPRES                NO, GO ON
         SPACE 1
         BAL   GR8,NODDCD              GIVE ERROR MSG
         B     SYSUT3PT                GO TO ERROR RTN
         SPACE 1
S3DDPRES EQU   *
         CLI   UT3UCBTP,UCBDIRCT       IS SYSUT3 DASD
         BE    UT3DIRCT                YES, GO ON
         SPACE 1
         BAL   GR8,NODIRECT            GIVE ERROR MESSAGE
         B     SYSUT3PT                GO TO ERROR ROUTINE
         SPACE 1
UT3DIRCT EQU   *
         LH    GR11,UT3LRECL           VALID LRECL
         LA    GR9,DEVSYSU3            RETURN FROM 'VALIDS34'
         SPACE 1
*                                                                     *
*  VALIDS34 IS GENERAL SUBROUTINE FOR VALIDATING AND OPENING EITHER   *
* SYSUT3 OR SYSUT4 UTILITY DATA SET. UPON ENTRY TO VALIDS34, GR9 IS   *
* SET WITH RETURN ADDRESS AND GR5 IS SET WITH DCB ADDRESS OF DATA SET *
* GR6 IS SET WITH UT3DS1 OR UT4DS1- TTR/TRACK BALANCE LAST RECORD BUF.*
* TO VALIDATE AND OPEN AND GR11 IS SET WITH VALID LRECL FOR THE DATA  *
* SET. SYSUT3 LRECL = 80 BYTES, SYSUT4 DATA SET LRECL = 272 BYTES     *
* GR2 HAS A POINTER TO BUFFER FOR MBBCCHHR OF LAST RECORD ON DATA SET *
*                                                                     *
         SPACE 1
VALIDS34 EQU   *
*                                                                     *
*                  READ IN JFCB AND OPEN                              *
*                                                                     *
         RDJFCB ((GR5))                READ JFCB SYSUT3 OR SYSUT4
         LA    GR8,JFCB1               JFCB BUFFER ADDRESS
         STH   GR11,JFCBLREC(GR8)      STORE LRECL IN JFCB
         STH   GR11,JFCBLKSZ(GR8)      STORE BLKSIZE IN JFCB
         SPACE 1
         OPEN  ((GR5),OUTIN),TYPE=J    OPEN SYSUT3 AND SYSUT4
         BR    GR9                     RETURN
         SPACE 1
DEVSYSU3 EQU   *
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR
         BO    UT3OPEN                 NO, OK
         SPACE 1
         BAL   GR8,OPENBAD             GIVE MESSAGE
         B     SYSUT3PT                GO TO ERROR RTN
         SPACE 1
UT3OPEN  EQU   *
         L     GR1,DEBADDR(GR5)        DEB POINTER FROM DCB
         XC    UT3FDAD(LEN8),UT3FDAD   SET FDAD
         MVC   UT3FDAD+LEN1(LEN6),DEBBCCHH(GR1)  IN BUFFER
         XC    UT3DS1(LEN8),UT3DS1   CLEAR TTR AND TRACK SIZE
         MVC   UT3DS1+LEN4(LEN2),UT3TSIZE SET TRK BALANCE=TRK SIZE
         MVC   SYS3TTR(LEN8),UT3DS1  MOVE TTRN/TB TO BACK UP BUFFER
         MVC   TRKBALAN(LEN2,GR5),UT3TSIZE  SET TRK BALANCE IN DCB
         MVC   FDADADDR(LEN8,GR5),UT3FDAD  SET FDAD IN DCB
         B     LEAVE                   RETURN- VALIDATE SYSUT3 DONE
         EJECT
***********************************************************************
*                                                                     *
*   THIS ROUTINE IS ENTERED WHEN A VALIDATION ERROR OCCURS ON         *
*  SYSUT3 OR SYSUT4.  IT HAS TWO ENTRY POINTS 'SYSUT3PT' FOR SYSUT3   *
*  AND 'SYSUT4PT' FOR SYSUT4                                          *
*                                                                     *
***********************************************************************
         SPACE 1
SYSUT4PT EQU   *
         NI    FLG4,XFF-ODALT     TURN OFF ODALT
         B     UT34OPEN                GO AROUND
SYSUT3PT EQU   *
         OI    FLG7,NOPRNBDB+SUPPRMSG  INHIBIT SOME MSGS BY IEBVTM
UT34OPEN EQU   *
         TM    OPENFLGS(GR5),OPENOK    WORK FILE OPEN
         BNO   WCLOSED                 NO, GO AROUND
         SPACE 1
         CLOSE ((GR5))                 CLOSE WORK FILE
         SPACE 1
WCLOSED  EQU   *
         MVI   RCBUF,RTCDE             SET RETURN CODE=8         A44144
         B     TERMINAT                TERMINATE
         TITLE 'IEBDV1 VALIDATE ROUTINE- SYSUT4 DATA SET - IEBDV4'
         DS    0F                      FORCE ALIGNMENT
IEBDV4   EQU   *
*ENTRY VALIDATE/OPEN SYSUT4 DATA SET                                  *
         SAVE  (14,12),,IEBDV4
         BALR  GR12,GR0           GET ADDRESSABILITY
         LA    GR15,IEBDV4-IEBDV1      ESTABLISH TOTAL ADDRESSIBILITY
         SR    GR12,GR15               RELATIVE TO START OF CSECT
         ST    GR13,SV5+SAV4      POINTER TO OLD SAVE AREA
         LA    GR15,SV5                 PTR TO SAVE AREA
         ST    GR15,SAV8(GR13)
         LR    GR13,GR15               POINTER TO NEW SAVE AREA
         SPACE 1
         LA    GR5,UT4DCB              DCB TO CHECK
         LA    GR1,JFCB1               POINTER TO JFCB
         ST    GR1,LIST1               STORE IN EXIT LIST
         MVI   LIST1,JFCBECON          SET JFCB EXIT+LAST ENTRY
         MVC   DDVALNM(LEN8),DDNAME1(GR5)  SAVE NAME OF DS VALIDATING
         SPACE
         DEVTYPE DDVALNM,UT4CHAR,DEVTAB GET SYSUT4 DEVICE DATA   S20201
         LTR   GR15,GR15               MISSING DD CARD
         BZ    S4DDPRES                NO, GO ON
         SPACE 1
         BAL   GR8,NODDCD              GIVE ERROR MSG
         B     SYSUT4PT                GO TO ERROR RTN
         SPACE 1
S4DDPRES EQU   *
         CLI   UT4UCBTP,UCBDIRCT       IS SYSUT4 DASD
         BE    UT4DIRCT                YES, GO ON
         SPACE 1
         BAL   GR8,NODIRECT            GIVE ERROR MESSAGE
         B     SYSUT4PT                GO TO ERROR ROUTINE
         SPACE 1
UT4DIRCT EQU   *
         LH    GR11,UT4LRECL           VALID LRECL
         BAL   GR9,VALIDS34            CHECK SYSUT4 AND OPEN
         SPACE 1
         TM    OPENFLGS(GR5),OPENOK    OPEN ERROR
         BO    UT4OPEN                 NO, OK
         SPACE 1
         BAL   GR8,OPENBAD             GIVE MESSAGE
         B     SYSUT4PT                GO TO ERROR RTN
         SPACE 1
UT4OPEN  EQU   *
         L     GR1,DEBADDR(GR5)        DEB POINTER FROM DCB
         XC    UT4FDAD(LEN8),UT4FDAD  SET FDAD
         MVC   UT4FDAD+LEN1(LEN6),DEBBCCHH(GR1)  IN BUFFER
         XC    UT4DS1(LEN8),UT4DS1   CLEAR TTR AND TRACK SIZE
         MVC   UT4DS1+LEN4(LEN2),UT4TSIZE  SET TRK BAL=TRK SIZE
         MVC   SYS4TTR(LEN8),UT4DS1  MOVE TTRN/TB TO BACK UP BUFFER
         MVC   TRKBALAN(LEN2,GR5),UT4TSIZE SET TRK BALANCE IN DCB
         MVC   FDADADDR(LEN8,GR5),UT4FDAD  SET FDAD IN DCB
         B     LEAVE                   RETURN- VALIDATE SYSUT4 DONE
         TITLE 'IEBDV1 VALIDATE ROUTINE MESSAGES AND CONSTANTS'
*                                                                     *
*                 VALIDATION ERROR MESSAGES PREPARATION AREA          *
*                                                                     *
         SPACE 1
NOREBLKY EQU   *
         MVI   MSG2+LEN1,NORBKEYS  NO REBLOCK KEYED RECORDS MESS
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE
CATERROR EQU   *
         MVI   MSG2+LEN1,CONCATBD  CONCATENATION ERROR
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
NOREBLOV EQU   *
         MVI   MSG2+LEN1,NORBOVRF  NO REBLOCK OVERFLOW RECORDS
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
KEYERR   EQU   *
         MVI   MSG2+LEN1,UNEQKEYS  UNEQUAL KEY LENGTH
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
UNEQRCFM EQU   *
         MVI   MSG2+LEN1,RECFMINC  RECORD FORMAT INCOMPATIBLE
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
NOMOVE   EQU   *
         MVI   MSG1+LEN1,UNMOVEDS
         MVI   MSG1,LASTMSG+PBIT       LAST MSG + BUILD
         MVI   NAMEDISP,X00        OFFSET FOR NAME
         MVI   PARAMS,NAME             EBDIC NAME
         B     GIVEMESS                GIVE MSG
         SPACE 1
NCMPKEYS EQU   *
         MVI   MSG2+LEN1,INVALRFM  NO COMPRESS WITH KEYS
         B     GENVALMS                SET UP HEADER AND THIS MSG
         SPACE 1
NOREDEB  EQU   *                                               @ZA06526
         MVI   MSG2+LEN1,INVALRBC      NO RE/DE BLOCK IF UNDEF @ZA06526
         B     GENVALMS                SET UP HDR AND THIS MSG @ZA06526
         SPACE 1
NCMPRB   EQU   *
         MVI   MSG2+LEN1,M51      NO COMPRESS WITH RE/DE BLOCK
         B     GENVALMS                SET UP HEADER AND THIS MSG
         SPACE 1
NCMPSE   EQU   *
         MVI   MSG2+LEN1,M39      NO COMPRESS WITH SELECT
*                                        OR EXCLUDE
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
NCMPOV   EQU   *
         MVI   MSG2+LEN1,M50      NO COMPRESS WITH TRKOVFLOW
         B     GENVALMS                SET UP HEADER AND THIS MSG
         SPACE 1
LRECLBAD EQU   *
         MVI   MSG2+LEN1,INVALREC  INVALID LRECL MESSAGE
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
BLOCKERR EQU   *
         MVI   MSG2+LEN1,INVALBLK  INVALID BLOCKSIZE
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
OBTAINBD EQU   *
         MVI   MSG2+LEN1,OBTAINER  OBTAIN ERROR
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
DV000800 EQU   *                                                 X010XX
         MVI   MSG2+LEN1,NOTPDSER  INVALID DSORG                 X010XX
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
NODIRECT EQU   *
         MVI   MSG2+LEN1,NOTDA     NOT A DASD DATA SET
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE
NODDCD   EQU   *
         MVI   MSG2+LEN1,NODDCARD  DD CARD NOT FOUND
         B     GENVALMS                SET UP HEADER AND THIS MESSAGE
         SPACE 1
COMPMESS EQU   *
         MVI   MSG1+LEN1,IMPCOMPR  IMPLIED COMPRESS
         MVI   MSG1,LASTMSG+PBIT       LAST MSG + BUILD
         MVI   NAMEDISP,LEN37      OFFSET FOR NAME
         MVI   PARAMS,NAME             EBDIC NAME
         B     KEEPCODE                GIVE MESSAGE
         SPACE 1
NCMPMSG  EQU   *
         MVI   MSG1+LEN1,NOCMPOSS  NO COMPRESS MESSAGE
         MVI   MSG1,LASTMSG            LAST MESSAGE              X010XX
         B     GIVEMES4                GIVE MESSAGE              A44144
         SPACE
OPENBAD  EQU   *
         MVI   MSG2+LEN1,OPENERRX  OPEN ERROR
         SPACE 1
GENVALMS EQU   *
         MVI   MSG1+LEN1,GENERUAL  GENERAL VALIDATE MESSAGE
         MVI   MSG1,PBIT               SET TO SHOW MESSAGE TO BE BUILT
         MVI   PARAMS,NAME             EBDIC NAME
         MVI   NAMEDISP,X00       PUT DDNAME IN FRONT OF MESSAGE
         MVI   MSG2,LASTMSG            SET LAST MESSAGE SWITCH
GIVEMESS EQU   *
         CLI   RCBUF,RTCDE             PRESENT CODE LOWER 8      A44144
         BNL   KEEPCODE                NO                        A44144
         MVI   RCBUF,RTCDE             YES-MOVE IN CODE OF 8     A44144
         B     KEEPCODE                GIVE MESSAGE              A44144
GIVEMES4 EQU   *                                                 A44144
         CLI   RCBUF,RTCD              PRESENT CODE LOWER 4      A44144
         BNL   KEEPCODE                NO                        A44144
         MVI   RCBUF,RTCD              YES-MOVE IN CODE OF 4     A44144
KEEPCODE EQU   *
         L     GR15,VIEBVMS            ADDRESS OF MESSAGE WRITER
         BALR  GR14,GR15               WRITE MESSAGE
         SPACE
         BR    GR8                     RETURN
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE CHECKS FOR CONCATENATED DD CARDS WHICH ARE      *
*     INVALID FOR THIS PROGRAM ON INDD CARDS                          *
*                                                                     *
***********************************************************************
         SPACE
CHECKCAT EQU   *
         SPACE
         EXTRACT TIOT,FIELDS=(TIOT)    PLACE TIOT ADDRESS AT TIOT
         SPACE
         XR    GR0,GR0                 CLEAR WORK REGISTER
         L     GR1,TIOT                POINTER TO TIOT
         LA    GR1,DDENTRY(GR0,GR1)  BUMP TO FIRST DD CARD
         SPACE
CHECKDD  EQU   *
         IC    GR0,LEN0(GR0,GR1)     INSERT  DD ENTRY LENGTH
         CLC   NAMEDD(LEN8,GR1),DDVALNM  IS THIS CURRENT DD NAME
         BE    NEXTBLNK                YES, CHECK FOR CONCATENATION
         AR    GR1,GR0                 BUMP TO NEXT DD ENTRY
         B     CHECKDD                 TRY AGAIN
         SPACE
NEXTBLNK EQU   *
         AR    GR1,GR0                 BUMP TO NEXT ENTRY
         CLI   LEN0(GR1),X00      IS THIS LAST ENTRY
         BE    CHECKOK            YES, OK (NO CONCATENATION)
         SPACE
         CLI   NAMEDD(GR1),BLANK       IS DDNAME BLANK
         BNE   CHECKOK                 NO, OK
         SPACE 1
         BAL   GR8,CATERROR            GIVE ERROR MSG
         B     GETNEXT                 GO TO ERROR RTN
         SPACE
CHECKOK  EQU   *
         BR    GR7                     RETURN
         EJECT
***********************************************************************
*                                                                     *
*    THIS ROUTINE IS ENTERED FOR VALIDATION ERRORS OCCURING ON THE    *
*  OUTPUT OR INPUT DATA SET.  CONTROL IS GIVEN TO IEBVTM.             *
*                                                                     *
***********************************************************************
         SPACE 1
GETNEXT  EQU   *
         TM    FLG3,OUTPUTEP           ENTERED AT DV1
         BZ    TERMINAT                NO, GO ON
         SPACE 1
         MVI   MSG1+LEN1,NONECOPY NO MEMBERS COPIED MSG
         MVI   MSG1,LASTMSG+PBIT       LAST MSG + BUILD
         MVI   PARAMS,NAME+MSGULLD     INDIC NAME PARAMETER      X010XX
*                                       AND ' COPIED ' IN MSG    X010XX
         MVI   NAMEDISP,LEN46          SET OFFSET FOR NAME       X010XX
         MVI   COPDISP,LEN11           DISP OF ' COPIED ' IN MSG X010XX
         MVC   DDVALNM(LEN8),OUTNAME  MOVE OUTDD NAME FOR MSG
         BAL   GR8,GIVEMESS            GIVE MESSAGE              A44144
         SPACE 1
TERMINAT EQU   *
         MVI   VTMFLG1,UNUSEND         SET SWITCH FOR VTM
SYSINVTM EQU   *
         L    GR15,VIEBVTM
         BALR  GR14,GR15               GO TO VTM (NO RETURN)
         EJECT
**       A MOUNT REQUEST IS GIVEN NOW BY MEANS OF AN            OY01182
**       OPENJ OF THE VTOC OF THE VOLUME  SEARCHED FOR          OY01182
OPENVTOC LA    GR8,OPENJDCB            DCB FOR THE VTOC         OY01182
         USING IHADCB,GR8                                       OY01182
         OI    FLG3,ENTOBT             PREVENT LOOP             OY01182
         OI    MNTJFCB+87,JFCSHARE                              OY01182
         MVC   DCBDDNAM(MS8),DDNAME1(GR5)                       OY01182
         OPEN  ((GR8),INPUT),TYPE=J    OPEN VTOC                OY01182
         CLOSE ((GR8))            OK,VOLUME SHOULD BE MOUNTED  @ZA18344
         DROP  GR8                                              OY01182
         BR    GR7                REPEAT OBTAIN,VOLUME MOUNTED  OY01182
OPENJDCB DCB   DSORG=PS,MACRF=R,EXLST=MNTLIST,BLKSIZE=96,       OY01182C
               LRECL=96,KEYLEN=44,RECFM=F                       OY01182
         DS    0F                                               OY01182
MNTLIST  DC    X'87'                                            OY01182
         DC    AL3(MNTJFCB)                                     OY01182
MNTJFCB  DC    44X'04'                                         @ZA06528
         DC    8C' '                                            OY01182
         DC    X'08'                   WRITE BACK INHIBIT       OY01182
         DC    XL123'00'                                        OY01182
         SPACE 1
IEBDVJCB DC    44F'0'                  JFCB AREA
JFCB1    EQU   IEBDVJCB
         SPACE
         SPACE
TIOT     DC    F'0'                    ADDRESS OF TIOT FILLED IN BY
*                                        EXTRACT MACRO
         SPACE 1
INVOL    DS    CL6                     VOLID OF INPUT
         SPACE 1
INDSNAME DS    CL44                    FIELD FOR INPUT DSNAME
         SPACE 1
OBTL     CAMLST  SEARCH,JFCB1,JFCBVOLD,DSCB  OBTAIN MACRO
         SPACE 1
DSCB     DS    0F
         DS    148C                    DSCB BUFFER               X010XX
         SPACE 1
AMSG     DC    A(IEBDV1MG)             ADDRESS OF MSG CSECT
PARMLST  DC    A(IEBDVJCB)             ADDRESS OF JFCB AREA      X010XX
         DC    A(DSCB)                 ADDRESS OF DSCB AREA      X010XX
         DC    A(INVOL)                ADDRESS OF INPUT VOLID    X010XX
*                                       AREA                     X010XX
         DC    A(INDSNAME)             ADDRESS OF INPUT DSNAME   X010XX
*                                       AREA                     X010XX
PATCHLEN EQU   (*-IEBDV1)/20      LENGTH OF 5 PER CENT PATCH AREA
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780
         EJECT
IEBDV1MG CSECT
TEXT1    DC    C'IEB173I           - INVALID BLOCKSIZE'  ERROR MSG
         EJECT
IEBMCA   DSECT
         IEBMCA
         EJECT
         DCBD  DSORG=PS
         EJECT
CVT      DSECT                                                   A37881
         CVT                                                     A37881
         EJECT
IECDSECT DSECT
         IECDSECT
         EJECT
*                      GENERAL EQUATES
         SPACE 1
PARTORG  EQU   X'02'                   BIT 6 SET IF PDS.
BADDSORG EQU   X'A0'                   DSORG BITS USED ONLY FOR  X010XX
*                                        IS OR DA DATA SETS      X010XX
UNMOVEBL EQU   X'01'                   DSORG SETTING INMOVABLE DATA SET
FIXEDREC EQU   X'80'                   DCB RECFM FIELD FOR FIXED RECORD
VARREC   EQU   X'40'                   DCB RECFM FIELD FOR VAR RECORDS
UNDEFREC EQU   X'C0'                   DCB RECFM FIELD FOR UNDEFINED RC
BLOCKREC EQU   X'10'                   DCB RECFM FIELD FOR BLOCKED REC.
VARBLOCK EQU   X'50'                   DCB RECFM FIELD VARIABLE BLOCKED
OVERFLOW EQU   X'20'                   DCB RECFM FIELD FOR OVERFLOW REC
OPENOK   EQU   X'10'                   TEST FOR OPEN ERROR
NEWDATAS EQU   X'11'                   CODE FOR NEW DATA SET
VALCHK   EQU   X'80'                   SET IF VALIDITY CHECK TO BE DONE
CLEAR0   EQU   X'00'
THE2321  EQU   X'05'                   UCB CODE FOR 2321
NMDISP   EQU   2                       DISPLACEMENT OF DDNAME IN
*                                         INDD TABLE
INCRINDD EQU   10                      LENGTH OF INDD TABLE ENTRY
BLANK    EQU   X'40'                   EBCDIC BLANK
         SPACE 1
*                     JFCB FIELDS
VOLIDJCB EQU   JFCBVOLS-INFMJFCB       OFFSET OF VOLID IN JFCB
JFCBVOLD EQU   JFCB1+VOLIDJCB          VOLID AREA JFCB FOR OBTAIN MACRO
JFCBMOD  EQU   JFCBIND2-INFMJFCB       '01' = OLD,'11' = NEW, '10'=MOD
JFCBMRGE EQU   JFCBUFNO-INFMJFCB       CLEAR 20 BYTES FOR MERGE
JFCBLREC EQU   JFCLRECL-INFMJFCB       LRECL FIELD
JFCBLKSZ EQU   JFCBLKSI-INFMJFCB       BLOCK SIZE
JFCBVALC EQU   JFCOPTCD-INFMJFCB       VALIDITY CHECK IF '80'
         SPACE 1
*                     DSCB FIELDS
DS1DSORG EQU   DSCFILTY-DXDSCB         DATA SET ORGANIZATION FIELD DSCB
DS1LRECL EQU   DSCLRECL-DXDSCB         DATA SET LRECL DSCB
DS1BLKL  EQU    DSCBLKL-DXDSCB         DATA SET BLOCK SIZE DSCB
DS1LSTAR EQU   DSCLSTAR-DXDSCB         TTR + TRACK BALANCE LAST TRACK
         SPACE 1
*                      DEB FIELDS
EXTNODEB EQU   DXDEBUSR-DXDEB          NUMBER OF EXTENTS FROM DEB
DEBNMTRK EQU   DXDEBNTR-DXDEB          EXTENT TRACKS
DEBBCCHH EQU   DXDEBBIN-DXDEB          BBCCHH IN DEB
UCBPTR   EQU   DXDEBUCB-DXDEB          POINTER TO UCB IN DEB
         SPACE 1
*                      IOB FIELDS
IOBBCCHH EQU   DXDAADDR-DXIOB+1        BBCCHH IN IOB
IOBMCCHH EQU   DXDAADDR-DXIOB          MBBCCHHR IN IOB
         SPACE 1
*                      DCB FIELDS
FDADADDR EQU   DCBFDAD-IHADCB          FDAD ADDRESS IN DCB
TRKBALAN EQU   DCBTRBAL-IHADCB         DCB TRACK BALANCE
KEYLENGT EQU   DCBKEYLE-IHADCB         KEY LENGTH IN DCB
RECFMFLD EQU   DCBRECFM-IHADCB         RECFM FIELD IN DCB
DDNAME1  EQU   DCBDDNAM-IHADCB         DD NAME IN DCB
OPENFLGS EQU   DCBOFLGS-IHADCB         OPEN FLAGS IN DCB
DEBADDR  EQU   DCBDEBAD-IHADCB         DEB POINTER IN DCB
SYNADADR EQU   DCBSYNAD-IHADCB         SYNAD ADDRESS IN DCB
EOFADDRS EQU   DCBEODAD-IHADCB+1       EODAD ADDRESS IN DCB
LRECLDCB EQU   DCBLRECL-IHADCB         DCB LRECL FIELD
BLKSZDCB EQU   DCBBLKSI-IHADCB         DCB BLOCK SIZE FIELD
OPTCDFLD EQU   DCBOPTCD-IHADCB         DCB OPTCD FIELD
DIRCTDCB EQU   DCBDIRCT-IHADCB         DCB DIRECTORY BYTE COUNT FIELD
LWR      EQU   X'80'                   LAST OPERATION WAS A WRITE
*                                        (HIGH ORDER BIT OF DCBOFLAGS)
AOSFB    EQU   X'08'                   FIX LIST APPENDAGE INDIC- X010XX
*                                        ATOR IN DCBOPTCD FIELD  X010XX
         SPACE
*                      TIOT FIELDS
DDENTRY  EQU   24                      OFFSET TO FIRST DD CARD ENTRY
NAMEDD   EQU   4                       OFFSET TO DDNAMES FROM DD ENTRY
         SPACE 1
*                      DEVTYPE FIELDS
UT3UCBTP EQU   UT3CHAR+2               UCBTYPE FIELDS
UT4UCBTP EQU   UT4CHAR+2                  FROM DEVTYPE MACRO
UT3TSIZE EQU   UT3CHAR+12              TRACK SIZE FIELD
UT4TSIZE EQU   UT4CHAR+12              TRACK SIZE FIELD
UCBDIRCT EQU   X'20'                   DIRECT ACCESS
INUCBTP  EQU   INCHAR+2    INDCB UCB TYPE FROM DEVTYPE
OUTUCBTP EQU   OUTCHAR+2  OUTDCB UCB TYPE FROM DEVTYPE
OUTUCBDV EQU   OUTCHAR+3               DEVICE CODE FROM UCB (DEVTYPE)
OUTBOLST EQU   OUTCHAR+15    BLOCK OVERHEAD LAST RECORD - 1 BYTE FIELD
OUTKEYOV EQU   OUTCHAR+16    KEY OVERHEAD - 1 BYTE FIELD
OUTDEVFG EQU   OUTCHAR+17    OUTPUT DEVICE FLAG FIELD            S20201
HALFOVER EQU   X'08'         OVERHEAD LAST=OVERHEAD NOT LAST     S20201
*                               AND IS A TWO BYTE FIELD          S20201
OUTOVER2 EQU   OUTCHAR+14    OUTPUT DEVICE RECORD IF THIS IS A   S20201
*                               DEVICE WITH A TWO BYTE OVERHEAD  S20201
*                               VALUE                            S20201
         END
