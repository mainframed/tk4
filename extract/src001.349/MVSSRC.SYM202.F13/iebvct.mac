 TITLE 'IEBVCT - ALPHA SORT OF SETAB / BLD NEWNAME PTRTAB - IEBDSCPY'
IEBVCT   CSECT
*C912000                                                         A41780
*C094000,303000                                                  A44144
*A301500-302000,303500                                           A44144
**********************************************************************
*TITLE IEBVCT - IEBCOPY S/E TABLE SORT                                *
*                                                                     *
*STATUS  CHANGE LEVEL 001                                             *
*                                                                     *
*FUNCTION/OPERATION -SORTS THE S/E TABLE ALPHABETICALLY
*                  BUILDS THE NEWNAME POINTER TABLE WHEN NEWNAMES     *
*                  HAVE BEEN SPECIFIED.                               *
*ENTRY POINTS - IEBVCT                                                *
*                                                                     *
*INPUT - A POINTER TO UNSORTED S/E TABLE                              *
*        A COUNT OF THE NUMBER OF ENTRIES IN THE S/E TABLE
*        A COUNT OF THE NUMBER OF NEW NAMES
*        A POINTER TO LOWEST CURRENTLY AVAILABLE CORE -(TO BE USED    *
*        AS THE BEGINNING OF THE NEWNAME POINTER TABLE)
*                                                                     *
*OUTPUT - AN ALPHABETICALLY SORTED S/E TABLE                          *
*        A NEWNAME POINTER TABLE(IF THERE ARE NEWNAMES)               *
*        A POINTER TO THE LOWEST CURRENTLY AVAILABLE CORE - (NOW POINT*
*        TO ONE BYTE AFTER THE END OF THE NEWNAME POINTER TABLE - IF  *
*        THERE ARE NEWNAMES5                                          *
*EXITS - NORMAL - RETURN TO CALLER
*      - ERROR  - ISSUE ERROR MSG AND LINK TO IEBVTM (NO RETURN)
*                                                                     *
*EXTERNAL ROUTINES - NONE                                             *
*                                                                     *
*TABLES WORK ARES - S/E TABLE,NEWNAME POINTER TABLE                   *
*                                                                     *
*ATTRIBUTES - SERIALLY REUSEABLE                                      *
**********************************************************************
FF       EQU   X'FF'
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
SAV8     EQU   8                       SAVE AREA DISPLACEMENT
SAV4     EQU   4                       SAVE AREA DISPLACEMENT
LEN10    EQU   10                      DISPLACEMENT
OFF      EQU   X'00'                   OFF SETTING OF INTERNAL SWITCHES
LEN2     EQU   2                       LENGTH OF 2
LEN8     EQU   8                       LENGTH OF 8
LEN4     EQU   4                       LENGTH OF 4
DUPNAM   EQU   X'46'                   OFFSET IN MESSAGE FOR DUP NAME
LEN1     EQU   1                       DISPLACEMENT OF 1
RCD8     EQU   C'8'                    COMPLETION CODE           A44144
DISP0    EQU   0                       0 DISPLACEMENT
LEN16    EQU   16                      LENGTH OF 16
LEN0     EQU   0                       LENGTH OF 0
         SAVE  (14,12),,*
         BALR  REG11,REG0         ESTABLISH ADDRESSIBILITY
         USING *,REG11
         USING IEBMCA,4
         LA    REG12,SV3
         ST    REG12,SAV8(REG13)       SAVE ADDRESS OF CALLEDROUTINES
*                                      SAVE AREA
         ST    REG13,SAV4(REG12)       SAVE ADDRESS OF CALLERS SAVE
*                                      AREA
         LR    REG13,REG12
         LA    REG2,LEN10
         ST    REG2,INCRE
         ST    REG2,LEN
         MVI   SWITCH,OFF              INITIALIZE ALL INTERNAL SWITCHES
         L     REG2,SEBEGIN       ADDRESS OF SETAB
         LH    REG7,COUNT         NUMBER OF ENTRIES IN SETAB
         LTR   REG7,REG7
         BZ    RETURN             FULL COPY, SO NO NEED TO SORT
         BCTR  REG7,REG0               SUBTRACT 1 FROM NO. ENTRIES
         LA    REG8,LEN10         MULTIPLY NUMBER OF CTLTAB ENTRIES-1
*                                 BY 10
         SR    REG6,REG6
         MR    REG6,REG8
         AR    REG7,REG2          ADD PRODUCT TO ADDRESS OF CTLTAB
         ST    REG7,ENDPTR
         CLC   COUNT(LEN2),ONE    ONLY ONE ENTRY IN SETAB
         BNH   PROCNN             YES - NO NEED TO SORT SETAB
         ST    REG2,ENTRY1        ENTRY1=SEBEGIN
         ST    REG2,TABBEGIN      TABBEGIN=SEBEGIN
         LA    REG2,LEN10(REG2)
         ST    REG2,ENTRY2        ENTRY2=SEBEGIN+10
TWOLAST  CLC   ENDPTR,ENTRY2       IS ENTRY2 THE LAST ENTRY
         BH    COMPARE            IF NOT DON'T SET INDICATOR
         OI    SWITCH,ENDSORT      TURN ON ENDSORT
COMPARE  L     REG5,ENTRY1
         L     REG6,ENTRY2
         TM    SWITCH,BUFSORT      IS BUFFER SORT BEING DONE
         BO    SKIPIN             BRANCH IF YES
         CLC   LEN2(LEN8,REG5),LEN2(REG6) COMPARE ENTRY1 + 2 FOR SETAB
*                                         SORT
         B     RESULT             GO CHECK RESULT
SKIPIN   CLC   LEN8(LEN8,REG5),LEN8(REG6) COMPARE ENTRY1+2 FOR OLDNAME
*                                         NEWNAME PAIR SORT
RESULT   BNL   PREPUSH            IF ENTRY1 NOT LOW, SEE IF ENT1 = ENT2
NEXTPAIR TM    SWITCH,ENDSORT      ENDSORT SET
         BO    PROCNN             IF SO, SEE ABOUT OLD/NEW-NAME PAIRS
         MVC   ENTRY1(LEN4),ENTRY2     ENTRY1=ENTRY2
         L     REG2,ENTRY2
         A     REG2,INCRE          ENTRY2=ENTRY2+INCRE
         ST    REG2,ENTRY2
         B     TWOLAST            SEE IF ENTRY2 IS LAST ENTRY
PREPUSH  BNE   CARRYON            BRANCH IF ENTRY1 GT ENTRY2
SETERMS  MVC   NAMEFLD(LEN8),LEN2(REG5) PUT DUP NAME IN PARAM AREA
SETERMS1 MVI   VTMFLG1,UNUSEND    INDICATE UNUSUAL END OF OPERATION
         MVI   MSG1,LASTMSG+PBIT  LAST MESSAGE PLUS PARAMETER
         MVI   NAMEDISP,DUPNAM    OFFSET IN MSG FOR DUPE NAME
         MVI   PARAMS,NAME        INDIC NAME TO BE PRINTED
         MVI   MSG1+LEN1,M42           MSG CODE
* CANNOT SPECIFY DUPLICATE MEMBERNAMES FOR SEL/EXCL/RENAME
SETCODE  EQU   *
         CLI   RCBUF,RCD8         IS COMPLETION CODE 8 OR HIGHER A44144
         BNL   DONTSET            YES-DON'T SET RETURN CODE      A44144
         MVI   RCBUF,RCD8         SET COMPLETION CODE TO 8       A44144
DONTSET  EQU   *                                                 A44144
         L     REG15,VIEBVMS      ADDR OF MSG WRITER
         BALR  REG14,REG15        LINK TO WRITE ERROR MSG
         L     REG15,VIEBVTM      ADDR OF TERMINATION ROUTINE
         BALR  REG14,REG15        EXIT TO TERMINATE OPERATION -
*                                 NO RETURN IS MADE TO HERE BY IEBVTM
CARRYON  MVC   SAVED(LEN4),ENTRY2      SAVED=ENTRY2
         MVC   NEWENT(LEN4),ENTRY1     NEWENT=ENTRY1
         L     REG2,NEWENT
         L     REG3,SAVED
COMPENT  TM    SWITCH,BUFSORT      IS BUFFER SORT BEINGDONE
         BO    SKIPIT             BRANCH IF YES
         CLC   LEN2(LEN8,REG2),LEN2(REG3) COMPARE 'SAVED' VS 'NEWENT'
*                                         FOR CTLTAB SORT
         B     CONDCODE           GO CHECK RESULTS OF COMPARISON
SKIPIT   CLC   LEN8(LEN8,REG2),LEN8(REG3) COMPARE SAVED AND NEWENT FOR
*                                         ON NN PAIR SORT
CONDCODE BL    NEXTPAIR           SAVED LT NEWENT
         BNE   CONTINUE           NEWENT LT SAVED
         MVC   NAMEFLD(LEN8),LEN2(REG2) PUT DUP NAME IN PARAM AREA
         B    SETERMS1            GO SET UP ERROR MESSAGE
CONTINUE L     REG7,LEN
         BCTR  REG7,REG0          SUBTR 1 FOR EXECUTION
         EX    REG7,EX1            EXCHANGE SAVED AND NEWENT
         EX    REG7,EX2            EXCHANGE SAVED AND NEWENT
         EX    REG7,EX1
SUBINCRE CLC   TABBEGIN,NEWENT
         BE    NEXTPAIR           BRANCH IF NEWENT NOW AT TOP OF TABLE
         L     REG2,NEWENT
         ST    REG2,SAVED         SAVED=NEWENT
         S     REG2,INCRE         NEWENT=NEWENT-INCRE
         ST    REG2,NEWENT
         L     REG3,SAVED
         B     COMPENT            GO COMPARE SAVED AND NEWENT
PROCNN   OI    FLG3,SORTDONE       TURN ON SORTDONE
         TM    SWITCH,BUFSORT     ARE OLD/NEW NAME PR'S IN BFR SORTED
         BO    BLDNNTAB           YES - GO SEARCH SETAB FOR OLDNAMES
         L     REG10,ENDPTR
         OI    DISP0(REG10),SEBIT6     TURN ON LAST ENTRY BIT
         CLC   NNCT1(LEN2),ZROS        ANY NEWNAMES
         BE    RETURN              NO NEWNAMES-RETURN TO CALLER
         LA    REG2,LEN10
         CL    REG2,INCRE         IS 10 THE CURRENT INCREMENT FACTOR
         BNE   BLDNNTAB           IF NOT, BUFFER SORT HAS BEEN DONE
         LA    REG2,LEN16
         ST    REG2,INCRE          INCRE=16
         ST    REG2,LEN
         MVI   SWITCH,BUFSORT     INDIC SORTING OLD/NEW NAME PRS IN
*                                 BFR
         LH    REG5,NNCT1         GET NN COUNT
         BCTR  REG5,REG0          DECREM BY 1
         LTR   REG5,REG5          IS COUNT NOW 0
         BZ    BLDNNTAB           YES - NO NEED TO SORT NAMES IN BFR
*                                 BY NEWNAME
         SLL   REG5,LEN4          MPLY NBR OF NEW NAMES-1 BY 16
         L    REG2,BCB            PTR TO BUFFER
         ST    REG2,TABBEGIN
         AR    REG5,REG2          ADD PRODUCT TO ADDRESS OF BUFFER1
         ST    REG5,ENDPTR        PTR TO LAST ENTRY
         ST    REG2,ENTRY1         ENTRY1= PTR BUFFER 1
         LA    REG2,LEN16(REG2)
         ST    REG2,ENTRY2         ENTRY2= PTR BUFFER+16
         B     TWOLAST            SEE IF ENTRY2 LAST NAME IN BUFFER
BLDNNTAB L     REG2,BCB
         LA    REG2,X0(REG2)      CLEAR HIGH ORDER BYTE
         LA    REG15,X4           PUT 4 INTO REG
         SR    REG2,REG15         GET POINTER TO BUFFER-4
         ST    REG2,BUFAD         SAVE POINTER
         AR    REG2,REG15         RESTORE BUFFER POINTER
         L     REG3,LOCOR
         SRL   REG3,LEN2
         SLL   REG3,LEN2
         LA    REG3,LEN4(REG3)    ASSURE FULLWORD BOUNDARY FOR
*                                 NEWNAME POINTER TABLE
         ST    REG3,ADNNPTRT      ESTAB ADDR OF NEWNAME PTR TABLE
         LH    REG6,NNCT1         NBR OF NEWNAMES
STRTIT   L     REG5,SEBEGIN       ADDR OF START OF SETAB
* AT THIS POINT, R2 HAS ADDR OF 1ST OLDNAME OR 'NEXT' OLDNAME IN BFR
         B     TRYBIT2            DONT BUMP POINTER 1ST TIME
LOOP2    LA    REG5,LEN10(REG5)   BUMP POINTER TO NEXT CTLTAB ENTRY
TRYBIT2  TM    DISP0(REG5),SEBIT2 IS THIS RENAMED
         BZ    LOOP2              NO - LOCATE NEXT ENTRY
         CLC   LEN2(LEN8,REG5),DISP0(REG2) IS THIS RENAMED OLDNAME
*                                      ENTRY THE ONE NOW BEING SOUGHT
         BNE   LOOP2              NO - LOCATE NEXT SETAB ENTRY
         C     REG3,BUFAD         WILL THIS ENTRY FIT
         BNH   BUILDIT            YES, GO ON AND BUILD NNPTRTAB ENTRY
         SPACE 1
         MVI   MSG1+P1,M43        SET CANNOT PROCESS ALL OLD NEW NAMES
*                                    SPECIFIED MSG
         MVI   MSG1,LASTMSG       SET LAST MSG SWITCH
         MVI   VTMFLG1,UNUSEND    INDICATE UNUSUAL END
         B     SETCODE            SET RETURN CODE AND ISSUE MSG
         SPACE 1
BUILDIT  EQU   *
         ST    REG5,WKA1          YES - SET SETAB ADDR INTO NNPTRTAB
         MVC   DISP0(LEN4,REG3),WKA1
         LA    REG3,LEN4(REG3)    POINT TO NEXT NNPTRTAB SLOT
         LA    REG2,LEN16(REG2)   POINT TO NEXT POSSIBLE OLDNAME
         BCT   REG6,STRTIT        LOOP TO LOCATE NXT ENTRY
         ST    REG3,LOCOR         NO MORE TO LOCATE - REINIT LOCOR ADDR
         LH    REG6,NNCT1         NUMBER OF NEWNAMES
         L     REG2,SEBEGIN       ADDR OF SETAB
         L     REG3,ADNNPTRT      ADDR OF NEWNAME POINTER TABLE
         B     TRYNNBIT           DONT BUMP POINTER THIS TIME
ADD10    LA    REG2,LEN10(REG2)
TRYNNBIT TM    DISP0(REG2),SEBIT2 IS THIS A NEWNAME
         BZ    ADD10              NO - POINT TO NXT SETAB ENTRY
         TM    DISP0(REG2),SEBIT4      IS IT FLAGGED AS DON'T COPY
         BZ    BUMP3              NO - SET TO GET NEXT PTR IN
*                                 NNPTRTAB
         L     REG5,DISP0(REG3)   YES - GET POINTER TO OLDNAME ENTRY
         OI    DISP0(REG5),SEBIT4      SET IT AS DON'T COPY
BUMP3    LA    REG3,LEN4(REG3)         POINT TO NEXT POSSIBLE NNPTRTAB
*                                 SLOT
         BCT   REG6,ADD10         LOOP FOR NEXT NEWNAME SEARCH
RETURN   EQU   *
         L     REG13,LEN4(DISP0,REG13)
         RETURN  (14,12)
         DS    0F
INCRE    DC    F'0'               INCREMENT FACTOR
LEN      DC    F'0'               LENGTH FACTOR
SAVED    DC    F'0'                ENTRY BEING COMPARED FOR EXCHANGE
NEWENT   DC    F'0'                ENTRY BEING COMPARED FOR EXCHANGE
ENTRY1   DC    F'0'                MOST RECENT ENTRY IN TABLE TO BE
*                                  COMPARED
ENTRY2   DC    F'0'                MOST RECENT ENTRY IN TABLE TO BE
*                                  COMPARED
BUFAD    DC    F'0'               INTERNAL POINTER AREA
TABBEGIN DC    F'0'               INTERNAL POINTER AREA
EX1      XC    DISP0(LEN0,REG2),DISP0(REG3) EXCHANGE SAVED AND NEWENT
EX2      XC    DISP0(LEN0,REG3),DISP0(REG2) EXCHANGE SAVED AND NEWENT
ONE      DC    XL2'01'             COMPARED TO ENCT
SWITCH   DC    X'00'              INTERNAL SWITCH
ENDSORT  EQU   X'80'              ON = SETAB IS SORTED NOW
BUFSORT  EQU   X'40'              ON = BUFFER SORT IS BEING DONE
*              LO ORDER 6 BITS NOT USED
X0       EQU   0                  CONSTANT OF 0
X4       EQU   4                  CONSTANT OF 4
P1       EQU   1                  CONSTANT OF 1
ENDPTR   DC    F'0'                PTR LAST ENTRY IN TABLE BEING
*                                  SORTED
PATCHLEN EQU   (*-IEBVCT)/20      LENGTH OF 5 PER CENT PATCH AREA
PATCH    DC    XL(PATCHLEN)'00'   5 PER CENT PATCH AREA          A41780
         EJECT
         DS    0D
IEBMCA   DSECT
         IEBMCA
         END
