SIO      TITLE 'IEBCOPY SIO/PGFX ROUTINE  IGG019FT'
IGG019FT CSECT
         SPACE 1
*****************************************************************
*                                                               *
*STATUS-CHANGE LEVEL 000                                        *
*FUNCTION-FIXES CORE TO PREVENT ILLEGAL REFERENCES BY           *
*          CCW'S AND APPENDAGES,                                *
*          PASSES LIST TO I/O SUPERVISOR OF CCW'S TO BE         *
*          APPENDED OR MODIFIED IN BUFFER ADDRES                *
*ENTRY POINTS-IGG019FT FOR EXTEND FUNCTION(SIO)                 *
*             IGG019FT+4 FOR PAGE FIX                           *
*INPUT-WORK AREA POINTED TO BY REG 10,                          *
*      EXTEND LIST IN IEBMCA                                    *
*OUTPUT-IF PCI PROCESSING IS DONE,PAGES FIXED                   *
*                                 EXTEND LIST ADDRESS AND COUNT *
*EXTERNAL REFERENCES-IEBMCA(ADDRESS IN IOB)                     *
*EXITS-R14(EXTEND LIST PASSED),                                 *
*      R14+4(NO EXTENDLIST)                                     *
*WORKAREAS- AREA PASSED BY I/O SUPERVISOR POINTED TO BY REG 10  *
*ATTRIBUTES-DISABLED                                            *
*****************************************************************
*C 434500                                                      @YM06438
*C 768400-768408                                               @YM06435
*A 203500-204500,218000,231600,232600,233200-233300,456200     @YM06433
*A 768420,770616,770969,770993,773691                          @YM06433
*A 234000,434100-434420                                        @YM04451
*C 434500,460046,743000,744000,766000,767000,769998            @YM06433
*C 769999-770021,770060-770479,770651-770827,770927-770938     @YM06433
*C 770989-770990,770997,771040-771373,771498,771982-772483     @YM06433
*C 773687,773695,773699,776944-777944,854500-856000,883333     @YM06433
*D 763500-764500,768500-769984,769992-769998,770619            @YM06433
*D 770899,770939,770959,770979-770987,770995-770996,770998     @YM06433
*D 771798-771978,772503,773683,773700-776924                   @YM06433
*C 771698                                                      @YM05026
*A 255100,460020-460040,461500,884500                          @YM04804
*C 771698,775882                                               @YM05026
*C 763100,771982,773678,775974,776624                          @YM04848
*A 234000-234500,724500-744000,770607-770639,770988,770992     @YM04848
*A 775106,776932-856000                                        @YM04848
*C 540000                                                      @YM05186
*A239000,461920-462599                                         @YA01719
*C462999,540000                                                @YA01719
*C434000,443000                                                @ZA01218
*A560500-562500                                                @ZA01218
         SPACE 2
*                                 REGISTER EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2                  ACTIVE IOB POINTER
R3       EQU   3
R4       EQU   4                  IEBMCA POINTER
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11                 INITIAL IEBMCA POINTER
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15                 BASE REG
         SPACE 1
C1       EQU   1                  DISPLACEMENT                 @YM06433
C3       EQU   3                  DISPLACEMENT                 @YM06433
C7       EQU   7                  DISPLACEMENT                 @YM06433
C9       EQU   9                  DISPLACEMENT                 @YM06433
X0       EQU   0                  DISPLACEMENT
X1       EQU   1                                                YL026VD
X5       EQU   5                 FIX ENTRY COUNT (CONTIG BUFFER)YL026VC
X6       EQU   6                  FIX ENTRY COUNT               YL026VC
X4       EQU   4                  DISPLACEMENT                  YL026VD
X8       EQU   8                  DISPLACEMENT
X10      EQU   10                 DISPLACEMENT                 @YM06433
X16      EQU   16                 DISPLACEMENT
X20      EQU   20                 DISPLACEMENT                  YL026VD
X22      EQU   22                 DISPLACEMENT                 @YM06433
X24      EQU   24                 DISPLACEMENT                  YL026VD
X2C      EQU   44                 DISPLACEMENT                  YL026VC
X32      EQU   32                 DISPLACEMENT                  YL026VD
X35      EQU   35                 DISPLACEMENT                 @YM06433
X40      EQU   40                 DISPLACEMENT                  YL026VD
L1       EQU   1                  LENGTH                        YL026VD
D2048    EQU   2048               DISPLACEMENT                 @YM06433
RPS      EQU   X'10'                                           @YM06433
IOBCAW   EQU   16                 DISPLACEMENT                  YL026VD
VIOBIT   EQU   X'80'              IN UCB IF VIO DATA SET       @YM04451
DIRLEN   EQU   275                LENGHT OF DIR BLK + COUNT    @YA01719
         SPACE 1
         USING IGG019FT,R15
         B     TRANS006           GO TO ROUTINE TO BUILD
*                                   EXTENDED TRANSLATION PARAM.
*                                   LIST
         SPACE 2
FIX00006 EQU   *
         SPACE 1
*****************************************************************
*                                                               *
*     THIS ROUTINE BUILDS A PARAMETER LIST FOR FIXING REQUIRED  *
*  CORE LOCATIONS SO THAT DISABLED PAGE FAULTS WILL NOT OCCUR   *
*  IN THE PCI APPENDAGE IGG019C8.                               *
*                                                               *
*     FOR EXCPVR, THE FOLLOWING AREAS WILL BE FIXED:            *
*  1. DCB, IOB, ECB, AND CCW STRINGS (ALL CONTAINED IN IEBMCA)  *
*  2. DEB AND RELATED APPENDAGE VECTOR TABLE (AVT)              *
*  3. SIO APPENDAGE (IGG019FT)                                  *
*  4. PCI APPENDAGE (IGG019C8)                                  *
*  5. READ OR WRITE BUFFER OR BUFFERS                           *
*****************************************************************
         SPACE 1
         L     R11,IEBMCAPT(R0,R2)   LOAD PTR TO IEBMCA
         USING IEBMCA,R11
         STM   R4,R9,SIOSAVE      SAVE REGS 4-9
         LR    R4,R11             GET PTR TO IEBMCA IN R4
         DROP  R11
         USING IEBMCA,R4
         SR    R11,R11            CLEAR REG 11
         TM    AOS,PCI            WILL THIS I/O REQUEST REQUIRE
*                                    PCI HANDLING
         BNO   FIXMCA             NO, RETURN TO IOS            @YA01218
         L     R10,FIXLIST       LOAD ADDRESS OF FIX LIST AREA @YM06438
         TM    X0(R7),VIOBIT      DOES UCB IND. VIO DATA SET   @YM04451
         BZ    NEEDFIX            NO, MUST DO PAGE FIX         @YM04451
         NI    AOS,X'FF'-PCI      TURN OFF PCI (TRANSLATE) BIT @YM04451
         L     R6,CCW3            GET PTR TO 1ST READ OR WRITE @YM04451
         LA    R6,X0(R6)          ADDR TO WHICH TO TIC         @YM04451
         L     R6,X0(R6)          DATA ADDR IN 1ST READ OR WRT @YM04451
         ST    R6,CURRCCW1        STORE VIRTUAL DATA ADDRESS   @YM04451
         MVI   RSECTOR,X'03'      IGNORE READ SECTOR FOR VIO   @YM04451
         B     FIXMCA             RETURN TO IOS                @YA01218
NEEDFIX  EQU   *                                               @YM04451
         LA    R5,MCASIZE(R0,R4)  OBTAIN PTR TO END OF IEBMCA
         STM   R4,R5,X0(R10)      STORE IN FIX LIST
         MVI   X0(R10),X'00'      CLEAR HIGH ORDER BYTE         VS04804
         L     R5,IOBVRPTR        IOB FOR EXCPVR                YL026VD
         L     R6,X20(R5)         GET PTR TO RELATED DCB        YL026VD
         L     R6,X2C(R6)         GET PTR TO DEB                YL026VC
         LA    R6,X0(R6)          CLEAR HIGH ORDER BYTE        @YM06433
         SR    R8,R8              CLEAR A WORK REGISTER         YL026VD
         IC    R8,X4(R6)          GET DEB ACCESS METHOD LENGTH  YL026VD
         SR    R9,R9              CLEAR ANOTHER WORK REGISTER   YL026VD
         IC    R9,X16(R6)         GET DEB NUMBER OF EXTENTS     YL026VD
         SLL   R9,4               MULTIPLY BY 16 FOR LENGTH     YL026VD
         AR    R8,R9              ADD SECTION LENGTHS           YL026VD
         A     R8,BASIC           ADD LENGTH OF BASIC SECTION   YL026VD
         LR    R7,R6              GET ADDR OF BEGINNING OF DEB  VS04804
         AR    R7,R8              GET ADDR OF END OF DEB       @YM06433
         S     R6,PREFIX          POINT AT APPENDAGE TABLE      YL026VD
         STM   R6,R7,X8(R10)      STORE IN FIX LIST             YL026VD
         L     R7,X4(R6)          ADDRESS OF SIO APPENDAGE      YL026VD
         LA    R7,X0(R7)          CLEAR HIGH ORDER BYTE         YL026VD
         LA    R8,PATCHEND        LENGTH OF SIO APPENDAGE       VS04804
         STM   R7,R8,X16(R10)     FIX SIO APPENDAGE             YL026VD
         L     R7,X8(R6)          ADDRESS OF PCI APPENDAGE      YL026VD
         LA    R7,X0(R7)          CLEAR HIGH ORDER BYTE         YL026VD
*  FIND OUT HOW LONG
         LA    R8,1480(R0,R7)                                   YL026VD
         STM   R7,R8,X24(R10)     FIX PCI APPENDAGE             YL026VD
         CLI   MSG1+X1,NORMOD     HAS MSG -NO MORE SPACE IN OUT YA01719
*                                     DIR.- BEEN PRINTED        YA01719
         BNE   NOTDIR             NO                            YA01719
         TM    FLG6,OIC           ARE ALL OUTPUT DIR. BLKS IN   YA01719
*                                     CORE                      YA01719
         BZ    NOTDIR             NO                            YA01719
         L     R6,SVFSTO          YES THAT AREA HAS TO BE FIXED YA01719
*                                     AT WRITE BACK OF OUT DIR. YA01719
         L     R7,SVLSTO          POINT TO LAST SAVED -IN CORE  YA01719
*                                     BLK-                      YA01719
         LA    R7,DIRLEN(R0,R7)   ADD COUNT + DIR. LENGHT TO    YA01719
*                                    GET END OF BUFFER          YA01719
         B     STOREFIX                                         YA01719
NOTDIR   LM    R6,R7,FLG1         LOAD PTR TO START AND END OF  YA01719
*                                    FIRST BUFFER AREA
         LA    R6,X0(R6)          CLEAR HI ORDER BYTE
         TM    FLG1,P2FLG1        ARE BUFFERS DISCONTIGUOUS
         BZ    FIX00010           IF NOT,FIX AS ONE
         STM   R6,R7,X32(R10)     STORE IN FIX LIST             YL026VD
         LM    R6,R7,BEGFST2      LOAD PTR TO START AND END OF
*                                    SECOND BUFFER AREA
         STM   R6,R7,X40(R10)     STORE IN FIX LIST             YL026VD
         LA    R11,X6             PUT COUNT OF ENTRIES IN FIX   YL026VD
*                                    LIST IN REG 11
         B     FIX00012           GO RETURN TO IOS
FIX00010 L     R7,END2ND2         LOAD PTR TO END OF SECOND BUFFER
STOREFIX STM   R6,R7,X32(R10)     STORE IN FIX LIST WITH BEGIN @YA01719
*                                    FIRST                      YL026VD
         LA    R11,X5             NOW ONLY FIVE FIX LIST ENTRIESYL026VD
FIX00012 EQU   *
         LM    R4,R9,SIOSAVE      RESTORE REGS 4-9
         BR    R14                RETURN
FIXMCA   LA    R5,MCASIZE(R0,R4)  OBTAIN PTR TO END OF IEBMCA  @ZA01218
         STM   R4,R5,X0(R10)      STORE IN FIX LIST            @ZA01218
         MVI   X0(R10),X'00'      CLEAR HIGH ORDER BYTE        @ZA01218
         LA    R11,X1                                          @ZA01218
         B     FIX00012                                        @ZA01218
         EJECT
TRANS006 EQU   *
         SPACE 2
*****************************************************************
*                                                               *
*     THIS ROUTINE IS USED FOR THE EXTENDED TRANSLATION         *
*  FUNCTION.  ITS PURPOSE IS TO TELL IOS WHICH CCW'S THAT ARE   *
*  NOT IN THE ORIGINAL CCW CHAIN WILL BE MODIFIED OR APPENDED   *
*  TO THE ORIGINAL CHAIN.  IN THIS MANNER, IOS WILL BE ABLE TO  *
*  CHANGE THE 'REAL' CCW STRING TO REFLECT CHANGES MADE TO THE  *
*  VIRTUAL CCW CHAIN BY IGG019C8 WITH MINIMUM LOSS IN PERFORM-  *
*  ANCE.                                                        *
*                                                               *
*****************************************************************
         SPACE 2
         L     R11,IEBMCAPT(R0,R2)  GET POINTER TO IEBMCA
         USING IEBMCA,R11
         STM   R4,R9,SIOSAVE      SAVE REGS 4-9
         LR    R4,R11             GET PTR TO IEBMCA IN R4
         DROP  R11
         USING IEBMCA,R4
         SR    R11,R11            CLEAR REG 11
         TM    AOS,PCI            WILL THIS I/O REQUEST REQUIRE
*                                    PCI HANDLING
         BNO   TRANS018           NO,RETURN
         SPACE 1
         LA    R9,COPYIAL1                                     @YM04848
         ST    R9,IALPTR1                                      @YM06433
         LA    R9,COPYIAL2                                     @YM04848
         ST    R9,IALPTR2                                      @YM06433
         SPACE 1
         L     R9,IOBVRPTR        GET PROPER IOB                YL026VD
         L     R6,IOBCAW(R9)      GET ADDRESS OF FIRST CCW     @YM04848
         LA    R11,SECTOR         LOAD ADDR OF SECTOR          @YM06433
         LRA   R9,X0(R11)         TRANSLATE TO REAL             YL026VD
         STCM  R9,C7,RSECTOR+C1   STORE INTO READ SECTOR       @YM06433
         CLI   X0(R6),X'23'       IS CCW SET SECTOR            @YM06435
         BNE   TRANS008         NO, NO TRANSLATE OF SET SECTOR @YM06435
         STCM  R9,C7,C1(R6)       STORE BACK INTO CCW          @YM06435
         LA    R6,X8(R6)          BUMP TO SEARCH ID CCW        @YM06433
TRANS008 EQU   * TRANSLATE THREE CCWS ASSOCIATED WITH SEARCH ID YL026VD
         L     R11,IOBVRPTR       GET ADDRESS TO BE TRANSLATED @YM06433
* INITIALIZE RSECTOR FOR PCI APPENDAGE                         @YM06433
         MVI   RSECTOR,X'03'      SET UP AS NOP                @YM06433
         TM    DEVOFF+C1(R11),RPS RPS DEVICE                   @YM06433
         BZ    NORPS              BRANCH IF NOT RPS DEVICE     @YM06433
         MVI   RSECTOR,X'22'      SET READ SECTOR OP CODE      @YM06433
NORPS    DS    0H                                              @YM06433
         LA    R11,X35(R11)                                    @YM06433
         LRA   R9,X0(R11)         TRANSLATE TO REAL             YL026VD
         STCM  R9,C7,C1(R6)       PUT REAL ADDR BACK INTO CCW  @YM06433
         LRA   R9,X0(R6)          TRANSLATE ADDR OF TIC BACK   @YM06433
         STCM  R9,C7,C9(R6)       PUT REAL ADDR BACK INTO CCW  @YM06433
         LA    R6,X16(R6)                                      @YM06433
         L     R11,X0(R6)                                      @YM06433
         LRA   R9,X0(R11)                                      @YM06433
         ST    R9,X0(R6)                                       @YM06433
         MVI   X0(R6),X'08'                                    @YM06433
         SPACE 1
*
*  IF REQUEST IS READ, THE READ CCW IS THE SECOND CCW IN STRING@YM04848
*  IF REQUEST IS WRITE, WRITE CCW IS FIRST IN STRING           @YM04848
*
         LR    R6,R11                                          @YM06433
         NI    X4(R6),X'FF'-X'04' SET OFF IAL LIST PRESENT     @YM06433
         L     R11,X0(R6)                                      @YM06433
         ST    R11,CURRCCW1                                    @YM06433
         LA    R11,X0(R11)        ZERO HI ORDER BYTE           @YM06433
         TM    WSFLAG,RDGSW       IS THIS A READ REQUEST       @YM06433
         BO    RDORRDBK           BRANCH IF READ REQUEST       @YM06433
         TM    TAG,TAG6           IS THIS A READ BACK CHECK    @YM06433
         BZ    RDWRCCWS           BRANCH IF STRAIGHT WRITE     @YM06433
RDORRDBK LRA   R9,X0(R11)                                      @YM06433
         LR    R5,R11                                          @YM06433
         AH    R5,X6(R6)                                       @YM06433
         BCTR  R5,X0              SUB ONE FOR ACTUAL END       @YM06433
         SRL   R11,11             SHIFT FOR 2K BOUNDARY        @YM06433
         SRL   R5,11              CHANNEL USES 2K BOUNDARY     @YM06433
         SR    R5,R11             SEE IF ON SAME 2K PAGE       @YM06433
         BZ    NOEXTCT1                                        @YM06433
         ST    R9,COPYIAL1                                     @YM06433
         SLL   R11,11             GET VIRT ADDR OF 1ST BYTE    @YM06433
         LA    R11,D2048(R11)     BUMP BY 2K                   @YM06433
         LRA   R9,X0(R11)                                      @YM06433
         ST    R9,COPYIAL1+4                                   @YM06433
         LA    R11,COPYIAL1                                    @YM06433
         LRA   R9,X0(R11)                                      @YM06433
         OI    X4(R6),X'04'                                    @YM06433
NOEXTCT1 STCM  R9,C7,C1(R6)       PUT REAL ADDR BACK INTO CCW  @YM06433
         LA    R6,X8(R6)          BUMP TO NEXT CCW             @YM06433
         NI    X4(R6),X'FF'-X'04' SET OFF IAL LIST PRESENT     @YM06433
         L     R11,CURRCCW1                                    @YM06433
         LA    R11,X8(R11)                                     @YM06433
* THIS CCW IS A READ OR A WRITE AND MAY NEED AN IAL            @YM06433
RDWRCCWS EQU   *                                               @YM04848
         LRA   R9,X0(R11)                                      @YM06433
         LR    R5,R11             PUT START ADDR IN WORK REG   @YM06433
         AH    R5,X6(R6)          ADD LENGTH OF READ OR WRITE  @YM06433
         BCTR  R5,X0              SUB ONE FOR ACTUAL END       @YM06433
         SRL   R11,11             SHIFT FOR 2K BOUNDARY        @YM06433
         SRL   R5,11              SHIFT FOR 2K BOUNDARY        @YM06433
         SR    R5,R11             ALL ON ONE PAGE               YL026VD
         BZ    TRANS010          NO, INDIRECT ADDR LIST NEEDED @YM05026
         ST    R9,COPYIAL1+8      PUT FIRST ENTRY IN IAL LIST  @YM06433
         LA    R8,COPYIAL1+8      GET ADDR OF FIRST ENTRY      @YM06433
         SLL   R11,11             GET ADDR OF BYTE 1, PAGE 1   @YM06433
IALLOOP1 LA    R11,D2048(R11)     BUMP BY 2K                   @YM06433
         LA    R8,X4(R8)          BUMP TO NEXT IAL ENTRY        YL026VD
         LRA   R9,X0(R11)         TRANSLATE ADDR TO REAL        YL026VD
         ST    R9,X0(R8)          STORE AS NEXT ENTRY IN IAL    YL026VD
         BCT   R5,IALLOOP1       LOOP UNTIL ALL NEEDED IALS DONEYL026VD
         LA    R11,COPYIAL1+8                                  @YM06433
         LRA   R9,X0(R11)                                       YL026VD
         OI    X4(R6),X'04'       SET IAL PRESENT IN R/W CCW   @YM06433
TRANS010 EQU   * READ OR WRITE CCW DOES NEED INDIRECT ADDR LIST YL026VD
         STCM  R9,C7,C1(R6)                                    @YM06433
         EJECT
*
* IF CCWS ARE FOR WRITE, PICK UP THE LAST CCW IN THE STRING    @YM04848
         TM    WSFLAG,RDGSW       IS THIS READ CCW STRING      @YM04848
         BO    TRANS012           BRANCH TO RETURN ON READ     @YM06433
         TM    TAG,TAG6           IS THIS READ BACK CCW STRING @YM06433
         BO    TRANS012           YES, TRANSLATION COMPLETE    @YM06433
         LA    R6,X8(R6)          BUMP TO LAST WRITE CCW       @YM04848
         LRA   R9,X8(R6)          TRANSLATE TO REAL            @YM06433
         STCM  R9,C7,C1(R6)       PUT REAL ADDR BACK INTO CCW  @YM06433
* TRANSLATE SEARCH MULTI-TRACK AND TIC BACK IN CASE NEEDED     @YM06433
* IN PCI APPENDAGE                                             @YM06433
         LRA   R9,LASTADDR+C3     GET REAL ADDR OF CCHHR       @YM06433
         STCM  R9,C7,WSCH+C1      PUT INTO SIDEQ,MT            @YM06433
         LRA   R9,WSCH            GET REAL ADDR OF SIDEQ,MT    @YM06433
         STCM  R9,C7,WSCH1+C1     PUT ADDR INTO TIC BACK       @YM06433
TRANS012 DS    0H               SET UP THE NOP OR READ SECTOR  @YM06433
         MVC   X8(X4,R6),RSECTOR                               @YM06433
TRANS018 EQU   *
         LM    R4,R9,SIOSAVE      RESTORE REGISTERS 4-9
         BR    R14                RETURN
         DS    0H
*****************************************************************
*                     C O N S T A N T S                         *
*****************************************************************
BASIC    DC    F'32'              LENGTH OF BASIC SECTION OF DEBYL026VD
PREFIX   DC    F'36'              LENGTH OF DEB PREFIX          YL026VD
PATCHLEN EQU   (*-IGG019FT)/10    LENGTH OF PATCHAREA          @YM06433
PATCH    DC    XL(PATCHLEN)'00'                                 YL016VD
PATCHEND EQU   *                                                YL026VD
PATCHCON DS    CL1                                              VS04804
         EJECT
IEBMCA   DSECT
         IEBMCA
         END
