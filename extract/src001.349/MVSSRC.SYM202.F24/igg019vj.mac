* /* START OF SPECIFICATIONS ****
*01* PROCESSOR = ASSEMXF-370R
**** END OF SPECIFICATIONS ***/
IGG019VJ CSECT                    ENTRY POINT FOR DSPLY MODULE
         TITLE 'IGG019VJ---DSPLY ROUTINE(OCR)'
***********************************************************************
*MODULE-NAME                                                   @YM00638
* IGG019VJ                                                     @YM00638
*                                                              @YM00638
*DESCRIPTIVE-NAME                                              @YM00638
* OCR DISPLAY MODULE                                           @YM00638
*                                                              @YM00638
*COPYRIGHT                                                     @YM00638
* NONE                                                         @YM00638
*                                                              @YM00638
*CHANGE-ACTIVITY                                               @YM00638
* RELEASE 20 ADDITIONS/CHANGES/DELETIONS
* RELEASE 21 ADDITIONS/CHANGES/DELETIONS
* RELEASE 22 ADDITIONS/CHANGES/DELETIONS
* RELEASE 23 ADDITIONS/CHANGES/DELETIONS
* RELEASE 24 ADDITIONS/CHANGES/DELETIONS
* RELEASE 25 ADDITIONS/CHANGES/DELETIONS
* RELEASE 26 ADDITIONS/CHANGES/DELETIONS
* RELEASE 27 ADDITIONS/CHANGES/DELETIONS
* RELEASE 28 ADDITIONS/CHANGES/DELETIONS
*                                                                     *
*STATUS - RELEASE 20 CHANGE LEVEL 000                                 *
*                                                                     *
*FUNCTION/OPERATION - TO DISPLAY A FIELD IN ERROR ON THE CRT          *
*                                                                     *
*ENTRY POINTS - IGG019VJ CSECT     CALLING SEQUENCE -                 *
*                                  LOAD DCB ADDRESS IN REGISTER 1     *
*                                  IF ISSUED OUTSIDE THE SYNAD ROUTINE*
*                                  THE FOLLOWING INSTRUCTIOS ARE      *
*                                  REQUIRED -                         *
*                                  L 15,68(1) GET IOB ADDRESS         *
*                                  MVC 48(16,15),0(R1) MOVE TWO LOAD  *
*                                                      FORMAT CCW'S TO*
*                                                      IOB+48         *
*                                  MVC 40(8,15),0(R2) MOVE READ CCW   *
*                                                      TO IOB+40      *
*                                  THE FOLLOWING INSTRUCTIONS ARE     *
*                                  ALWAYS REQUIRED -                  *
*                                  L 15,8(1) GET ADDRESS OF DSPLY     *
*                                            MODULE                   *
*                                  BALR 14,15 LINK TO DSPLY MODULE    *
*                                                                     *
*INPUT - IOB                                                          *
*         IOBCSW - ADDRESS OF FAILING CCW IF IN SYNAD ROUTINE         *
*        DCB                                                          *
*         DCBIOBA - ADDRESS OF THE IOB                                *
*         DCBSYNAD - ADDRESS OF THE SYNAD ROUTINE                     *
*                                                                     *
*OUTPUT - COMPLETION CODE IN REGISTER 15                              *
*         UPDATED IOB ERROR COUNTERS                                  *
*         IF UNIT EXCEPTION OCCURS, EOF(X'40') IS POSTED IN DCBORBYT  *
*         IF ANY PERMANENT ERRORS OCCUR, THE EIB IS UPDATED           *
*                                                                     *
*EXTERNAL ROUTINES - IOS VIA EXCP                                     *
*                    ERROR COUNTER UPDATE IN SYNCH ROUTINE            *
*                    EIB UPDATE ROUTINE IN SYNCH ROUTINE              *
*                    COMPLETION CODE ROUTINE IN SYNCH ROUTINE         *
*                    USER SYNAD ROUTINE                               *
*                                                                     *
*EXITS/NORMAL - RETURN TO CALLER - BR 14                              *
*                                                                     *
*EXITS/ERROR - ABEND, CODE 001    EOV 0(REG1)                         *
*                                                                     *
*TABLES/WORK AREAS - USER SAVE AREA POINTED AT BY REGISTER 13         *
*                                                                     *
*ATRIBUTES - REENTRANT,REUSABLE,PROBLEM PROGRAM MODE                  *
*                                                                     *
*NOTES - N/A                                                          *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
REG0     EQU   0                  GENERAL REGISTER 0
REG1     EQU   1                  GENERAL REGISTER 1
DCBR     EQU   2                  ADDRESS OF THE DCB
REG2     EQU   2                  GENERAL REGISTER 2
IOBR     EQU   3                  ADDRESS OF THE IOB
REG3     EQU   3                  REGISTER 3
CCWR     EQU   4                  CCW POINTER
WKREG1   EQU   5                  WORK REGISTER
WKREG2   EQU   6                  WORK REGISTER
WKREG3   EQU   7                  WORK REGISTER
REG8     EQU   8                  WORK REGISTER
REG9     EQU   9                  GENERAL REGISTER 9
BASER    EQU   9                  BASE REGISTER
SAVR     EQU   13                 ADDRESS OF SAVE AREA
BACK     EQU   14                 USER RETURN ADDRESS
RETCODE  EQU   15                 USED TO PASS RETURN CODE
***********************************************************************
*                                                                     *
*        IOB EQUATES                                                  *
*                                                                     *
***********************************************************************
IOBSTUS  EQU   3                  DISPLACEMENT TO IOB STATUS
IOBFLGS  EQU   8                  OFFSET TO IOBFLGS IN THE IOB
ECBADR   EQU   12                 OFFSET OF ECB ADDRESS IN IOB
IOBCSW   EQU   17                 DISPLACEMENT TO CSW IN IOB
DATADR   EQU   0                  DATA ADDRESS OFFSET IN CSW
STRTADR  EQU   24                 DISPLACEMENT TO IOB START ADDRESS
OFFSET1  EQU   40                 OFFSET OF FIRST CCW
OFFSET2  EQU   48                 OFFSET OF SECOND CCW
OFFSET3  EQU   56                 OFFSET OF THIRD CCW
UNEXCP   EQU   X'01'              TEST UNIT EXCEPTION BIT
PERR     EQU   X'41'              TEST FOR PERM ERROR IN ECB
CCFLGON  EQU   X'40'              SET COMM CHAIN BIT ON IN IOBFLGS
CCFLGOFF EQU   X'BF'              SET COMM CHAIN BIT OFF IN IOBFLGS
***********************************************************************
*                                                                     *
*        DCB EQUATES                                                  *
*                                                                     *
***********************************************************************
SNBITOFF EQU   X'7F'              SET SYNAD IN PROCESS BIT OFF
SYNADBIT EQU   X'80'              SET SYNAD IN PROCESS BIT OF
PSYNAD   EQU   1                  TEST FOR PRESENCE OF SYNAD ROUTINE
HEOPTCD  EQU   X'10'              TEST FOR HOPPER EMPTY EXIT REQUEST
HPREMPTY EQU   X'02'              TEST HOPPER EMPTY IN EIB
ERROFF   EQU   X'3F'              TURN ERROR FLAGS OFF IN DCBIFLGS
EOF      EQU   X'40'              SET EOF BIT IN DCBORBYT
***********************************************************************
*                                                                     *
*        DECB EQUATES                                                 *
*                                                                     *
***********************************************************************
XDECB    EQU   48                 OFFSET OF DECB
XLNGTYP  EQU   52                 OFFSET OF LENGTH AND TYPE
XDCBADR  EQU   56                 OFFSET OF DCB ADDRESS
XCCWADR  EQU   60                 OFFSET OF CCW ADDRESS
XIOBADR  EQU   64                 OFFSET OF IOB ADDRESS
***********************************************************************
*                                                                     *
*        CCW EQUATES                                                  *
*                                                                     *
***********************************************************************
CCWFLAGS EQU   4                  DISPLACEMENT TO FLAGS IN CCW
COUNT    EQU   6                  OFFSET OF COUNT FIELD IN A CCW
RDFWDCC  EQU   X'02'              READ FORWARD COMMAND CODE
CCON     EQU   X'40'              SET COMMAND CHAINING BIT ON
CCOFF    EQU   X'BF'              SET COMMAND CHAINING BIT OFF
RBCOMM   EQU   X'0C'              READ BACKWARD COMMAND
***********************************************************************
*                                                                     *
*        SAVE AREA EQUATES                                            *
*                                                                     *
***********************************************************************
USERSAVE EQU   12                 DISPLACEMENT IN SAVE AREA FOR REGS
SAVE39   EQU   16                 SAVE AREA POINTER FOR REGISTERS 3-9
RETSAVE  EQU   44                 DISPLACEMENT TO RETURN ADDRESS SAVE
SAVE9    EQU   68                 SAVE AREA POINTER FOR REGISTER 9
DCBSAVE  EQU   68                 DISPLACEMENT TO DCB ADDRESS SAVE AREA
***********************************************************************
*                                                                     *
*        MISCELLANEOUS EQUATES                                        *
*                                                                     *
***********************************************************************
ECBLEN   EQU   4                  LENGTH OF ECB TO MOVE
CCRTN    EQU   16                 DISPLACEMENT TO COMP CODE RTN
EIBRTN   EQU   8                  DISPLACEMENT TO ADDR OF EIB UPDATE
UPERRCT  EQU   24                 DISPLACEMENT TO ADDR OF ERROR COUNT
ACTIOB   EQU   8                  POINT TO ACTUAL IOB
CNTRLB   EQU   X'20'              SET CNTRL BIT FOR SYNAD REGISTER
ZERO     EQU   0                  ZERO A BYTE
SHIFTHI  EQU   24                 SHIFT COUNT
LNTYPLEN EQU   4                  LENGTH OF LENGTH AND TYPE TO MOVE
CCWMOVE  EQU   8                  LENGTH OF CCW TO MOVE
TWELVE   EQU   12                 SHIFT COUNT TO SET ABEND COMP CODE
ONE      EQU   1                  ABEND COMPLETION CODE
         USING IGG019VJ,RETCODE   ESTABLISH TEMP BASE REG
         USING IHADCB,DCBR        ESTABLISH DCB REG
         STM   REG2,REG9,USERSAVE(SAVR) SAVE USER REGISTERS
         ST    BACK,RETSAVE(SAVR) SAVE RETURN ADDRESS
         LR    BASER,RETCODE      LOAD NEW BASE REGISTER
         DROP  RETCODE
         USING IGG019VJ,BASER     ESTABLISH PERM BASE REG
         LR    DCBR,REG1          LOAD DCB REGISTER
         L     IOBR,DCBIOBA       LOAD IOB ADDRESS
         TM    DCBORBYT,SYNADBIT  TEST IF IN SYNAD ROUTINE
         BZ    NOTINSYN           BRANCH IF NOT IN SYNAD
***********************************************************************
*
*        THIS CODE EXECUTED IF DSPLY IS ISSUED IN THE SYNAD ROUTINE
*
***********************************************************************
         L     CCWR,IOBCSW-1(IOBR) GET CCW ADDRESS
         LA    CCWR,0(CCWR)       CLEAR HIGH ORDER BYTE
         SH    CCWR,EIGHT         BACK UP BY 8
         MVC   OFFSET1(CCWMOVE,IOBR),0(CCWR) MOVE CCW TO IOB+40
         NI    OFFSET1+CCWFLAGS(IOBR),CCOFF TURN COMMAND CHAINING OFF
         LA    CCWR,OFFSET1(IOBR) LOAD ADDRESS OF READ COMMAND
         NI    IOBFLGS(IOBR),CCFLGOFF TURN COMM CHAIN BIT OF IN IOBFLGS
         B     RDREADY            GO GET READY TO READ
***********************************************************************
*
*        THIS CODE EXECUTED IF DSPLY IS NOT ISSUED IN THE SYNAD ROUTINE
*
***********************************************************************
NOTINSYN OI    OFFSET1+CCWFLAGS(IOBR),CCON SET COMMAND CHAINING IN CCW1
         OI    OFFSET2+CCWFLAGS(IOBR),CCON SET COMMAND CHAINING IN CCW2
         NI    OFFSET3+CCWFLAGS(IOBR),CCOFF COMMAND CHAIN OFF IN CCW 3
         LA    CCWR,OFFSET3(IOBR) LOAD ADDRESS OF READ COMMAND
***********************************************************************
*
*        THIS CODE EXECUTED WHENEVER DSPLY IS ISSUED
*
***********************************************************************
RDREADY  L     WKREG1,DATADR(CCWR) GET DATA ADDRESS
         LA    WKREG1,0(WKREG1)   CLEAR HIGH ORDER BYTE
         LH    WKREG2,COUNT(CCWR) LOAD COUNT FROM CCW
         BCTR  WKREG2,0           DECREMENT COUNT BY 1
         TM    0(CCWR),RBCOMM     IS COMMAND A READ BACKWARD
         BNO   RDFWD              NO DON'T ADJUST I/O AREA ADDRESS
         SR    WKREG1,WKREG2      ADJUST I/O AREA ADDRESS
         ST    WKREG1,DATADR(CCWR) SET CORRECT ADDRESS IN CCW
RDFWD    EX    WKREG2,CLEAR       CLEAR I/O AREA
         L     WKREG3,STRTADR(IOBR) SAVE IOB START ADDRESS
         LA    WKREG2,OFFSET1(IOBR) LOAD CHANNEL PROG START ADDR
         ST    WKREG2,STRTADR(IOBR) SET NEW IOB START ADDRESS
         MVI   0(CCWR),RDFWDCC    SET READ FORWARD COMMAND
         NI    DCBIFLGS,ERROFF    TURN ERROR FLAGS OFF
         L     REG8,IOBCSW-1(IOBR) SAVE FAILING CCW ADDRESS
***********************************************************************
*
*        EXECUTE CHANNEL PROGRAM AND WAIT
*
***********************************************************************
         EXCP  ACTIOB(IOBR)       EXECUTE THE CHANNEL PROGRAM
         L     REG1,ECBADR(IOBR)  LOAD ECB ADDRESS
         WAIT  ECB=(REG1)         WAIT FOR EVENT TO COMPLETE
         ST    REG8,IOBCSW-1(IOBR) RESTORE FAILING CCW ADDRESS
         ST    WKREG3,STRTADR(IOBR) RESTORE START ADDRESS
         OI    IOBFLGS(IOBR),CCFLGON  TURN COMM CHAIN BIT ON IN IOBFLGS
***********************************************************************
*
*        BRANCH AND LINK TO ERROR COUNTER ROUTINE
*
***********************************************************************
         L     RETCODE,DCBCHECK   LOAD ADDRESS OF CHECK ROUTINE
         BAL   BACK,UPERRCT(RETCODE) LINK TO UPDATE ROUTINT
***********************************************************************
         SR    RETCODE,RETCODE    SET RETURN CODE TO ZERO
         L     REG1,ECBADR(IOBR)  LOAD ECB ADDRESS
         CLI   0(REG1),PERR       DID ANY PERMANENT ERRORS OCCUR
         BNE   NOERRORS           NO RETURN TO USER
***********************************************************************
*
*        BRANCH AND LINK TO SET ERROR INDICATOR BYTE ROUTINE
*
***********************************************************************
ERRORS   L     RETCODE,DCBCHECK   LOAD ADDRESS OF CHECK ROUTINE
         BAL   BACK,EIBRTN(RETCODE) LINK TO EIB ROUTINE
***********************************************************************
*
*        BRANCH AND LINK TO SET COMPLETION CODE ROUTINE
*
***********************************************************************
         L     RETCODE,DCBCHECK   LOAD ADDRESS OF THE CHECK ROUTINE
         BAL   BACK,CCRTN(RETCODE) LINK TO CONDITION CODE ROUTINE
***********************************************************************
         TM    IOBCSW+IOBSTUS(IOBR),UNEXCP DID UNIT EXCEPTION OCCUR
         BO    DONE               YES RETURN TO USER
SYNADCK  TM    DCBORBYT,SYNADBIT  IS SYNAD ROUTINE IN CONTROL
         BO    NOERRORS           YES RETURN TO USER
         TM    DCBSYNAD+3,PSYNAD  SYNAD ROUTINE PRESENT
         BZ    SYNPROC            YES PROCESS FOR SYNAD
         LA    REG0,ONE           SET COMPLETION CODE TO 1
         SLL   REG0,TWELVE        ADJUST FOR EOV
         LR    REG1,DCBR          SET REG1 TO DCB ADDRESS
         EOV   0(REG1)            GO TO EOV TO ABEND
***********************************************************************
*
*        RETURN TO THE USER
*
***********************************************************************
DONE     OI    DCBORBYT,EOF       POST EOF IN DCB
NOERRORS NI    DCBIFLGS,ERROFF    SET DCB ERROR FLAGS OFF
         LM    REG2,REG9,USERSAVE(SAVR) RESTORE USER REGISTERS
         L     BACK,RETSAVE(SAVR) RESTORE RETURN ADDRESS
         BR    BACK               RETURN TO USER
SYNPROC  TM    DCBEIB,HPREMPTY    HOPPER EMPTY PRESENT
         BZ    HPRFULL            NO
         TM    DCBOPTCD,HEOPTCD   HOPPER EMPTY EXIT SPECIFIED
         BZ    NOERRORS           NO RETURN TO USER
***********************************************************************
*
*        GO TO THE USER'S SYNAD ROUTINE
*
***********************************************************************
HPRFULL  L     WKREG1,ECBADR(IOBR) LOAD ECB ADDRESS
         MVC   XDECB(ECBLEN,SAVR),0(WKREG1) MOVE ECB TO DECB
         STC   RETCODE,DCBEIB+1    SAVE RETURN CODE
         MVC   XLNGTYP(LNTYPLEN,SAVR),LNGTYP MOVE LENGTH & TYPE TO DECB
         LA    WKREG2,OFFSET1(IOBR) LOAD ADDRESS OF CHANNEL PROGRAM
         ST    WKREG2,XCCWADR(SAVR) STORE CCW ADDRESS TO DECB
         ST    DCBR,XDCBADR(SAVR) STORE DCB ADDRESS TO DECB
         ST    IOBR,XIOBADR(SAVR) STORE IOB ADDRESS TO DECB
         LA    REG0,XDECB(SAVR)   GET DECB ADDRESS IN REG0
         LA    REG1,CNTRLB        SET CNTRL BIT ON IN REG1
         SLL   REG1,SHIFTHI       SHIFT BIT TI HIGH ORDER BYTE
         OR    REG1,DCBR          DCB ADDRESS TO REG1
         NI    DCBIFLGS,ERROFF    TURN ERROR FLAGS OFF
         OI    DCBORBYT,SYNADBIT  TURN SYNAD BIT ON
         L     RETCODE,DCBSYNAD   LOAD ADDRESS OF SYNAD ROUTINE
         ST    REG9,SAVE9(SAVR)   SAVE REGISTER 9
         LM    REG2,REG9,USERSAVE(SAVR) RESTORE USER REGISTERS
         ST    REG1,USERSAVE(SAVR) SAVE DCB ADDRESS
         BALR  BACK,RETCODE       BRANCH AND LINK TO USER SYNAD RTN
         STM   REG3,REG9,SAVE39(SAVR) SAVE USER REGISTERS
         L     REG9,SAVE9(SAVR)   RESTORE REGISTER 9
         L     REG3,USERSAVE(SAVR) GEF DCB ADDRESS
         ST    REG2,USERSAVE(SAVR) SAVE USER REGISTER 2
         LR    DCBR,REG3          RESTORE DCB POINTER
         NI    DCBIFLGS,ERROFF    TURN OFF ERROR FLAGS
         NI    DCBORBYT,SNBITOFF  TURN OFF SYNAD BIT
         LTR   RETCODE,RETCODE    TEST IF ADDRESS IS SPECIFIED
         BZ    LODRETCD           RESTORE RETURN CODE IF ZERO
         NI    DCBORBYT,ZERO      RESET OCR FLAGS
         LM    REG2,REG9,USERSAVE(SAVR) RESTORE USER REGISTERS
         BR    RETCODE            BRANCH TO SPECIFIED ADDRESS
LODRETCD IC    RETCODE,DCBEIB+1   RESTORE RETURN CODE
         MVI   DCBEIB+1,ZERO      CLEAR RETURN CODE SAVE AREA
         B     NOERRORS           RETURN TO USER
CLEAR    XC    0(1,WKREG1),0(WKREG1) EXECUTED INSTRUCTION TO CLEAR AREA
EIGHT    DC    H'8'               HALF WORD CONSTANT
LNGTYP   DC    X'00008000'        LENGTH AND TYPE
IHADCB   DCBD  DSORG=PS,DEVD=OR   DCB DSECT                    @YM00635
         END
