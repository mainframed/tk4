* /* START OF SPECIFICATIONS ****
*01* PROCESSOR = ASSEMXF-370R
**** END OF SPECIFICATIONS ***/
         TITLE  'IGG019VG - CHECK ROUTINE -(OCR)'
IGG019VG CSECT
************************************************************   @YM00638
*MODULE-NAME                                                   @YM00638
* IGG019VG                                                     @YM00638
*                                                              @YM00638
*DESCRIPTIVE-NAME                                              @YM00638
* OCR CHECK MODULE                                             @YM00638
*                                                              @YM00638
*COPYRIGHT                                                     @YM00638
* NONE                                                         @YM00638
*                                                              @YM00638
*CHANGE-ACTIVITY                                               @YM00638
*
* RELEASE 20 ADDITIONS/CHANGES/DELETIONS
*C256000,269000                                                  A33922
*A523500                                                         A33940
* RELEASE 21 ADDITIONS/CHANGES/DELETIONS
* RELEASE 22 ADDITIONS/CHANGES/DELETIONS
* RELEASE 23 ADDITIONS/CHANGES/DELETIONS
* RELEASE 24 ADDITIONS/CHANGES/DELETIONS
* RELEASE 25 ADDITIONS/CHANGES/DELETIONS
* RELEASE 26 ADDITIONS/CHANGES/DELETIONS
* RELEASE 27 ADDITIONS/CHANGES/DELETIONS
*
*
* STATUS - CHANGE LEVEL 01  RELEASE 20
*
*
*FUNCTION-CHECK ROUTINE-TO ACQUIRE NEXT SEQUENTIAL IOB AND WAIT FOR
*                       COMPLETION (TEST PREVIOUS EXCP STATUS)
*                       1) NORMAL COMPLETION RETURNS TO USER
*                       2) INCOMPLETE ISSUES WAIT
*                       3) ABNORMAL CONDITION GOES TO USERS SYNAD ROUTN
*                       4) EOF CONDITION ISSUES EOV TO EXECUTOR
*        -EIB ROUTINE-
*                       1) SET ERROR INDICATOR BYTE
*        -COMPLETION CODE ROUTINE-
*                       1) SET COMPLETION CODE
*        -COUNTER ROUTINE-
*                       1) UPDATE TEMPORARY ERROR COUNTERS
*ENTRY POINTS
*        LABEL  OCR010
*        LABEL  OCR020
*        LABEL  OCR030
*        LABEL  OCR035
*
*ENTRY INSTRUCTION SEQUENCE
*
*             /CHECK/             /EIB/          /COMP CODE/
*        LA    1,DECB         LA   1,DECB         LA   1,DECB
*        L     15,DCBCHECK    L    15,DCBCHECK    L    15,DCBCHECK
*        BALR  14,15          BAL  14,8(15)       BAL  14,16(15)
*
*             /COUNTER/
*        L     15,DCBCHECK
*        BAL   14,24(15)
*
*INPUT FROM CALLING ROUTINES -/CHECK/EIB/COMP CODE/COUNTER/ ROUTINES
*        REG   0    N/A
*        REG   1    DECB ADDRESS(CHECK)  N/A (EIB/CC/CNTR)
*        REG   2-12 N/A(CHECK)
*        REG   2    DCB  ADDRESS(EIB/CC/CNTR)
*        REG   3    IOB  ADDRESS(EIB/CC/CNTR)
*        REG   8    WORK REG    (EIB/CC/CNTR)
*        REG   13   WORK-SAVE ADDRESS
*        REG   14   CALLING ROUTINES IN-LINE RETURN ADDRESS
*        REG   15   BASE ADDRESS(ADDR OF CHECK RTN)
*
*OUTPUT TO CALLING ROUTINES -/CHECK/EIB/COMP CODE/  ROUTINES
*        REG   0-1  N/A
*        REG   2-7  SAME AS ENTRY
*        REG   8    N/A FOR SUBROUTINES,SAME AS ENTRY FOR CHECK
*        REG   9-12 SAME AS ENTRY
*        REG   13   WORK-SAVE ADDRESS
*        REG   14   ADDRESS OF IN-LINE RETURN
*        REG   15   RETURN CODE
*
*SYNAD REGISTERS - ENTRY FROM CHECK TO SYNAD
*        REG   0    DECB ADDRESS
*        REG   1    DCB ADDRESS
*        REG   2-12 USER SPECIFIED
*        REG   13   WORK-SAVE ADDRESS
*        REG   14   RETURN ADDRESS
*        REG   15   ENTRY ADDRESS
*        ----------EXIT FROM SYNAD TO CHECK
*        REG   0-1  N/A
*        REG   2-12 USER SPECIFIED
*        REG   13   WORK-SAVE ADDRESS
*        REG   14   RETURN ADDRESS
*        REG   15   ZERO OR ADDRESS OF USER SPECIFIED BRANCH ADDRESS
*
*EXTERNAL ROUTINES
*        IGG019VH   CNTRL
*        IGG019VJ   DSPLY
*        IGG019VK   RESCN
*        EOV        END OF VOLUME ROUTINE
*
*
*EXITS-NORMAL
*        OCR090     BRANCH TO CALLING ROUTINE FROM CHECK
*        OCR145     BRANCH AND LINK TO SYNAD
*        OCR147     BRANCH TO USER SPECIFIED RETURN ADDRESS
*        OCR260     BRANCH TO CALLING ROUTINE FROM EIB ROUTINE
*        OCR330     BRANCH TO CALLING ROUTINE FROM COMP CODE ROUTINE
*        OCR410     BRANCH TO CALLING ROUTINE FROM COUNTER ROUTINE
*        OCR115     EOV EXIT
*    -ABNORMAL
*        ABEND      COMPLETION CODE= 001 -NO SYNAD ROUTINE SPECIFIED
*
*TABLES/WORKAREAS
*
*        USER SAVE/WORK AREA
*        DCB
*        IOB
*        DECB
*ATTRIBUTES--REENTRANT,REUSABLE,PROBLEM PROGRAM MODE
*
*
*
*
*
*
*
***********************************************************************
*
*        ALL REGISTER EQUATES HAVE AN 'R' AT THE END OF THE SYMBOL
*
***********************************************************************
PARA0R   EQU   0                   PARAMETER REGISTER 0
PARA1R   EQU   1                   PARAMETER REGISTER 1
WORK4R   EQU   1                   WORK REGISTER
R1       EQU   1                   USED IN DOM MACRO
DCBR     EQU   2                   DCB ADDRESS
IOBADR   EQU   3                   IOB ADDRESS
WORK1R   EQU   7                   WORK REGISTER
BASER    EQU   8                   BASE REGISTER
SAVR     EQU   13                  USER SAVE AREA
RETR     EQU   14                  RETURN ADDRESS
WORK2R   EQU   14                  WORK REGISTER
ENTRYR   EQU   15                  ENTRY ADDRESS
WORK3R   EQU   15                  WORK REGISTER
*
*
***********************************************************************
***********************************************************************
*
*        ERROR INDICATOR BYTE
*
***********************************************************************
NRBIT    EQU   X'10'               NON RECOVERY
RMBIT    EQU   X'40'               EQUIPMENT CHECK-REGISTRATION MARK
ECBIT    EQU   X'08'               EQUIPMENT CHECK
DCBIT    EQU   X'01'               DATA CHECK
KCHEBIT  EQU   X'02'               HOPPER EMPTY
WLRBIT   EQU   X'04'               WRONG LENGTH RECORD
LSSEPBIT EQU   X'20'               LATE STKR SELECT OR END OF PAGE
EIBERR   EQU   X'FF'               ANY ERROR IN DCBEIB
*
***********************************************************************
*
*        STATUS OR SENSE
*
***********************************************************************
NONREC   EQU   X'02'               NON RECOVERY ERROR
EQUCHK   EQU   X'10'               EQUIPMENT CHECK ERROR
DATACHK  EQU   X'08'               DATA CHECK ERROR
WLR      EQU   X'40'               WRONG LENGTH RECORD ERROR
LSSOREOP EQU   X'40'               LSS OR EOP IN SENSE
INVCOM   EQU   X'08'               INVALID COMMAND
SENS0ERR EQU   X'24'               SENSE ERRORS
STAT1ERR EQU   X'3F'               STATUS ERRORS
COMREJ   EQU   X'80'               COMMAND REJECT
UNEXCEP  EQU   X'01'               UNIT EXCEPTION IN STATUS IN CSW(IOB)
STATUSMD EQU   X'40'               STATUS MODIFIER STATUS BIT
HPREMPTY EQU   X'20'               HOPPER EMPTY SENE BIT
***********************************************************************
*
*        COUNTER EQUATES
*
***********************************************************************
ECCOUNT  EQU   0                   EQUIP CHECK RETRY COUNT IN USER AREA
DCRETRY  EQU   36                  DATA CHECK RETRY COUNT IN IOB
WLRCOUNT EQU   8                   WRNG LNGTH COUNT IN USER AREA
WLRETRY  EQU   37                  WRNG LNGTH COUNT IN IOB
DCCOUNT  EQU   20                  DATA CHECK RETRY COUNT IN USER AREA
ECRETRY  EQU   38                  EQUIP CHECK RETRY COUNT IN IOB
PERMEC   EQU   4                   PERMANENT EQUIPMENT CHECK COUNTER
PERMWLR  EQU   12                  PERMANENT WRONG LENGTH REC COUNTER
***********************************************************************
*
*        DCB EQUATES
*
***********************************************************************
HEOPT    EQU   X'10'               HOPPER EMPTY EXIT SPEC IN DCBOPTCD
EOFBIT   EQU   X'40'               EOF BIT SWITCH IN DCBORBYT
SYNADOFF EQU   X'7F'               TURN SYNAD IN PROGRESS BIT OFF
ERRFLGS  EQU   X'3F'               ERROR FLAGS IN DCBIFLGS-X'C0'
SYNADBIT EQU   X'80'               SYNAD-IN-PROCESS BIT IN DCBORBYT
***********************************************************************
*
*        IOB EQUATES
*
***********************************************************************
IOSIOB   EQU   8                   OFFSET FROM ACCESS METHOD IOB
SENSE0   EQU   10                  SENSE BYTE 0 IN IOB
SENSE1   EQU   11                  SENSE BYTE 1 IN IOB
ECBPTR   EQU   12                  ECB POINTER IN THE IOB
ECBPT    EQU   12                  ADDRESS OF ECB IN IOB
INTCCW   EQU   16                  INTERRUPTED CCW IN CSW IN IOB
STATUS   EQU   20                  STATUS IN CSW IN IOB
RESIDUAL EQU   22                  OFFSET TO THE RESIDUAL COUNT IN CSW
START    EQU   24                  OFFSET OF CHANNEL PROGRAM ADDR (IOB)
TEMCCW   EQU   40                  OFFSET TO CCW WORK AREA
FLAGS    EQU   4                   CCW FLAGS
CNT      EQU   6                   COUNT FIELD OFFSET IN CCW
CHAINBIT EQU   X'40'               CCW CHAINING BIT
TESTCOM  EQU   X'10'               TEST COMMAND TEST
COMASK   EQU   X'0F'               MASK TO TEST FOR RB OR RF
RFCOM    EQU   X'02'               TEST FOR READ FORWARD COMMAND
RBCOM    EQU   X'0C'               TEST FOR READ BACKWARD COMMAND
TICCOM   EQU   X'08'               TIC COMMAND
LF       EQU   X'53'               LOAD FORMAT COMMAND
CCWL     EQU   8                   LENGTH OF ONE CCW
***********************************************************************
*
*        DECB EQUATES
*
***********************************************************************
DCBOFF   EQU   8                   DCB OFFSET IN DECB
IOBOFF   EQU   16                  IOB OFFSET IN DECB
COMPLETE EQU   X'40'               TEST IF ECB POSTED COMPLETE
PERROR   EQU   X'41'               TEST IF ECB POSTED WITH PERM ERROR
PERROR44 EQU   X'44'               TEST IF PERM ERROR          @ZA00774
***********************************************************************
CTRLINFO EQU   3                   OFFSET TO BYTE3 OF 4 BYTE CONTRL INF
ADDRESS  EQU   3                   LENGTH OF AN ADDRESS
TWO      EQU   2                   USED AS A CONSTANT OF 2
RETREG   EQU   20                  OFFSET IN SAVE AREA FOR RETURN REG
SAVREG   EQU   20                  OFFSET IN SAVE AREA FOR USER REGS
BASESAV  EQU   24                  OFFSET IN SAVE AREA FOR BASE REG
TEMPSAV  EQU   28                  OFFSET IN SAVE AREA FOR TEMP STORAGE
USERREG  EQU   36                  OFFSET IN SAVE AREA FOR USER REGS
CSWSAV   EQU   64                  OFFSET IN SAVE AREA FOR CSW
INPREAD  EQU   X'90'               HI ORDER BYTE OF REG 1 FOR SYNAD ENT
RDNDATA  EQU   X'80'               INDICATES READ DATA
ONE      EQU   1                   USED AS A CONSTANT OF 1
SYSCC    EQU   12                  USED AS A SHIFT TO SET A SYSTEM C C
HIBYTE   EQU   24                  USED TO SHIFT TO HI ORDER BYTE
ZERO     EQU   0                   USED AS A CONSTANT OF ZERO
REGMARK  EQU   X'04'               BYTE 3 OF CONTROL INFORMATION
FOURRC   EQU   4                   RETURN CODE OF FOUR
EIGHTRC  EQU   8                   RETURN CODE OF EIGHT
TWELVERC EQU   12                  RETURN CODE OF TWELVE
NOP      EQU   X'03'               NO-OP COMMAND
*
*
*
***********************************************************************
***********************************************************************
 EJECT
         USING IGG019VG,ENTRYR     USE REG 15 AS A TEMPORARY BASE
         USING IHADCB,DCBR         USE REG 2  AS DCB BASE
*
***********************************************************************
*
*        ENTRYS
*
***********************************************************************
OCR010   STM   RETR,BASER,SAVREG(SAVR) SAVE USER REGISTERS 14-8  A33922
         B     OCR040              BRANCH TO CHECK  ROUTINE
OCR020   LR    BASER,ENTRYR        ENTRY POINT + 8 - LOAD NEW BASE REG
         B     OCR200              BRANCH TO EIB ROUTINE
EIGHT    DC    H'8'                FILLER - USED AS CONSTANT OF 8
OCR030   LR    BASER,ENTRYR        ENTRY POINT + 16 - LOAD NEW BASE REG
         B     OCR300              BRANCH TO COMPLETION CODE ROUTINE
         DC    H'0'                FILLER
OCR035   LR    BASER,ENTRYR        ENTRY +24- LOAD NEW BASE REGISTER
         B     OCR400              BRANCH TO ERROR COUNTER ROUTINE
*
***********************************************************************
OCR040   LR    BASER,ENTRYR        ENTRY POINT + 0 -NEW BASE REG A33922
         DROP  ENTRYR              DROP TEMPORARY BASE
         USING IGG019VG,BASER      USE NEW BASE REG
         L     DCBR,DCBOFF(PARA1R) LOAD DCB ADDRESS FROM DECB
         L     IOBADR,IOBOFF(PARA1R) LOAD IOB ADDRESS FROM DECB
         SH    IOBADR,EIGHT        POINT TO SAM IOB ADDRESS
         MVI   DCBEIB+1,ZERO       CLEAR RETURN CODE SAVE AREA
*
OCR055   TM    0(PARA1R),COMPLETE  IS SCHEDULED EVENT COMPLETE
         BO    OCR060              IF YES, BRANCH
*
         WAIT  ECB=(PARA1R)        WAIT FOR EVENT TO COMPLETE
*
OCR060   L     PARA1R,DCBWTOID     LOAD WTO MESSAGE ID
         LTR   PARA1R,PARA1R       IS ID EQUAL TO ZERO
         BZ    OCR070              IF YES, BRANCH
*
         DOM   MSG=(R1)            DELETE OPERATOR MESSAGE
*
         XC    DCBWTOID+1(ADDRESS),DCBWTOID+1 CLEAR WTO ID
*
OCR070   BAL   RETR,OCR400         BRANCH AND LINK TO COUNTER ROUTINE
*
OCR080   TM    DCBORBYT,EOFBIT     TEST FOR END OF FILE CONDITION
         BZ    OCR082              IF NOT, BRANCH AND CHECK FOR ERRORS
*
         XC    STATUS(TWO,IOBADR),STATUS(IOBADR) CLEAR STATUS
         OI    STATUS(IOBADR),UNEXCEP SET UNIT EXCEPTION BIT
         B     OCR112              BRANCH TO GO TO END OF VOLUME ROUTIN
*
OCR082   L     WORK1R,ECBPTR(IOBADR)   LOAD ECB ADDRESS
         CLI   0(WORK1R),PERROR    DID A PERMANENT ERROR OCCUR
         BE    OCR100              YES, BRANCH
         CLI   0(WORK1R),PERROR44 DID PERM ERROR OCCUR         @ZA00774
         BE    OCR100              YES,BRANCH                  @ZA00774
*
OCR085   L     RETR,RETREG(SAVR)   LOAD RETURN ADDRESS
         SR    ENTRYR,ENTRYR       CLEAR RETURN CODE REGISTER
         IC    ENTRYR,DCBEIB+1     LOAD RETURN CODE
         LM    DCBR,BASER,USERREG(SAVR) RESTORE USER REGISTERS
*
OCR090   BR    RETR                RETURN TO USER
 EJECT
***********************************************************************
*
*        THIS CODE EXECUTED IF THERE ARE ANY ERRORS
*
***********************************************************************
OCR100   BAL   RETR,OCR200         BRANCH AND LINK TO EIB ROUTINE
*
         BAL   RETR,OCR300         BRANCH AND LINK TO RETRN CODE ROUTN
*
         STC   ENTRYR,DCBEIB+1     STORE THE RETURN CODE
*
         TM    STATUS(IOBADR),UNEXCEP TEST FOR UNIT EXCEPTION CONDITION
         BZ    OCR130              IF NO U.E , BRANCH
*
OCR112   NI    DCBIFLGS,ERRFLGS    RESET ERROR FLGS IN DCB
         MVI   DCBORBYT,ZERO       CLEAR DCBORBYT
OCR113   LR    PARA0R,IOBADR       LOAD IOB ADDRESS TO REG 0
*
***********************************************************************
*
*        END OF VOLUME EXIT
*
***********************************************************************
OCR115   EOV   0(DCBR)             SVC 55 TO EOV ROUTINE
***********************************************************************
*
OCR120   LA    PARA0R,ONE          LOAD 1 TO REG 0
         SLL   PARA0R,SYSCC        SHIFT LEFT 12 TO SET FOR COMP CODE
         B     OCR115              BRANCH TO GO TO THE EOV ROUTINE
*
OCR130   MVC   CSWSAV(ONE,SAVR),STATUS(IOBADR) SAVE STATUS MODIFIER
         MVC   CSWSAV+1(ADDRESS,SAVR),INTCCW+1(IOBADR) SAVE CCW ADDR
         NI    CSWSAV(SAVR),STATUSMD CLEAR ALL EXCEPT STATUS MODIFIER
         NI    DCBIFLGS,ERRFLGS    TURN OFF DCB ERRFLGS
*
         TM    SENSE1(IOBADR),HPREMPTY IS HOPPER EMPTY SENSE PRESENT
         BZ    OCR140              NO, BRANCH
*
         MVI   CSWSAV(SAVR),HPREMPTY SAVE HOPPER EMPTY INDICATION
         TM    DCBOPTCD,HEOPT      SHOULD HOPPER EMPTY EXIT BE TAKEN
         BZ    OCR150              NO, BRANCH
*
OCR140   CLI   DCBSYNAD+3,ONE      IS SYNAD ROUTINE SPECIFIED
         BE    OCR120              BRANCH TO GO TO THE EOV ROUTINE
 EJECT
***********************************************************************
*
*        GO TO THE USERS SYNAD ROUTINE
*
***********************************************************************
         STM   DCBR,IOBADR,TEMPSAV(SAVR) SAVE DCB AND IOB ADDRESSES
         L     PARA0R,ECBPT(IOBADR) LOAD DECB ADDRESS
         LA    PARA1R,INPREAD      LOAD INPUT AND DATA BITS
         L     WORK3R,INTCCW(IOBADR) LOAD ADDRESS OF INT CCW
         LA    WORK3R,0(WORK3R)    CLEAR HI ORDER BYTE
         SH    WORK3R,EIGHT        BACK UP ONE CCW
         MVC   TEMCCW(ONE,IOBADR),0(WORK3R) MOVE COMMAND TO WORK AREA
         NI    TEMCCW(IOBADR),COMASK CLEAR TO TEST FOR READ COMMANDS
         CLI   TEMCCW(IOBADR),RBCOM TEST FOR READ BACKWARD COMMAND
         BE    OCR142              BRANCH IF READ BACKWARD
         CLI   TEMCCW(IOBADR),RFCOM TEST FOR A READ FORWARD COMMAND
         BNE   OCR143              BRANCH IF NOT A READ FORWARD
OCR142   CLC   RESIDUAL(TWO,IOBADR),CNT(WORK3R) COMP RESIDUAL TO ORIGNL
         BL    OCR144              BRANCH IF DATA READ
OCR143   LA    PARA1R,RDNDATA      SET TO NO DATA READ
OCR144   SLL   PARA1R,HIBYTE       SHIFT TO HIGH ORDER BYTE
         OR    PARA1R,DCBR         OR DCB ADDRESS TO REG 1
*
         OI    DCBORBYT,SYNADBIT   SET SYNAD IN PROCESS BIT ON
         L     ENTRYR,DCBSYNAD     LOAD  SYNAD ROUTINE ADDRESS
*
*
         LM    DCBR,BASER,USERREG(SAVR) RESTORE USER REGISTERS
OCR145   BALR  RETR,ENTRYR         BRANCH AND LINK TO SYNAD ROUTINE
*
         STM   DCBR,BASER,USERREG(SAVR) SAVE USER REGISTERS
         L     BASER,BASESAV(SAVR) RESTORE BASE REGISTER
         LM    DCBR,IOBADR,TEMPSAV(SAVR) RESTORE DCB AND IOB REGS
         NI    DCBORBYT,SYNADOFF   TURN SYNAD IN PROCESS BIT OFF
         NI    DCBIFLGS,ERRFLGS    TURN ERROR FLAGS OFF
         LTR   ENTRYR,ENTRYR       TEST REG 15 FOR ZEROS
         BZ    OCR150              BRANCH TO RESTART IF ZERO
         NI    DCBORBYT,ZERO       RESET DCBORBYT SWITCHES
         LM    DCBR,BASER,USERREG(SAVR) RESTORE USER REGISTERS
OCR147   BR    ENTRYR              BRANCH TO ADDRESS IN REGISTER 15
 EJECT
***********************************************************************
*
*        RESTART PROCEDURE
*
***********************************************************************
OCR150   L     WORK1R,CSWSAV(SAVR) LOAD SAVED INTCCW ADDRESS
         LA    WORK1R,0(WORK1R)    CLEAR HIGH ORDER BYTE
         SH    WORK1R,EIGHT        BACK UP 1 CCW
*
         LR    WORK2R,WORK1R       LOAD CHANNEL PROGRAM RESTART ADDR
         TM    CSWSAV(SAVR),HPREMPTY CHECK IF HOPPER EMPTY OCCURED
         BZ    OCR165              BRANCH IF NOT HOPPER EMPTY
         CLI   0(WORK2R),NOP       DID HOPPER EMPTY OCCUR ON NOP
         BNE   OCR170              BRANCH TO RESTART THE INT COMMAND
*
OCR165   TM    FLAGS(WORK1R),CHAINBIT IS CCW CHAINING BIT ON
         BZ    OCR085              NO, BRANCH
         LA    WORK2R,CCWL(WORK1R) INCREMENT TO NEXT CCW
         TM    0(WORK1R),TESTCOM   WAS INT CCW A TEST COMMAND
         BZ    OCR160              NO, BRANCH
*
         TM    CSWSAV(SAVR),STATUSMD   WAS STATUS MODIFIER ON
         BZ    OCR160              NO, BRANCH
*
         LA    WORK2R,CCWL(WORK2R) INCREMENT TO NEXT CCW
*
OCR160   CLI   0(WORK2R),TICCOM    IS COMMAND A TIC
         BNE   OCR170              NO, BRANCH
*
         L     WORK2R,0(WORK2R)    GET NEW CCW ADDRESS FROM TIC
         LA    WORK2R,0(WORK2R)    CLEAR HIGH ORDER BYTE
         B     OCR160              BRANCH TO CHECK IF TIC COMM
*
OCR170   ST    WORK2R,START(IOBADR) STORE ADDRESS OF CHANNEL PROG(IOB)
         LA    PARA1R,IOSIOB(IOBADR) POINT TO IOS IOB
*
         EXCP  (PARA1R)            RESTART CHANNEL PROGRAM
         L     PARA1R,ECBPT(IOBADR) LOAD ADDRESS OF ECB
         LA    PARA1R,0(PARA1R)    CLEAR HI ORDER BYTE
         B     OCR055              BRANCH TO TEST COMPLETION
 EJECT
***********************************************************************
*
*        ERROR  INDICATOR BYTE (EIB) ROUTINE
*
***********************************************************************
OCR200   MVI   DCBEIB,ZERO         CLEAR EIB
         L     WORK3R,DCBERRCN     LOAD FROM DCBERRCN POSSIBLE AREA ADR
*
         TM    SENSE0(IOBADR),NONREC DID NON-RECOVERY ERROR OCCUR
         BZ    OCR210              NO, BRANCH
         OI    DCBEIB,NRBIT        SET NON-RECOVERY BIT
*
OCR210   TM    SENSE0(IOBADR),EQUCHK DID AN EQ CHK ERROR OCCUR
         BZ    OCR220              NO,BRANCH
         LTR   WORK3R,WORK3R       IS ERRCNT ADDRESS SPECIFIED
         BZ    OCR215              NO, BRANCH
         L     WORK4R,PERMEC(WORK3R) LOAD PERMANENT EQUIP CHK COUNT
         LA    WORK4R,ONE(WORK4R)    INCREMENT COUNT BY 1
         ST    WORK4R,PERMEC(WORK3R) STORE COUNT
*
OCR215   L     WORK4R,INTCCW(IOBADR) GET INTERRUPTED CCW ADR FROM CSW
         LA    WORK4R,0(WORK4R)    CLEAR HI ORDER BYTE
         SH    WORK4R,EIGHT        BACK UP ONE CCW
         CLI   0(WORK4R),LF        IS COMMAND A LOAD FORMAT
         BNE   OCR217              NO, BRANCH
         L     WORK4R,0(WORK4R)    LOAD THE DATA ADDRESS FROM LF CCW
         LA    WORK4R,0(WORK4R)    CLEAR HI ORDER BYTE
         TM    CTRLINFO(WORK4R),REGMARK IS IT A LF FOR A REG MARD
         BZ    OCR217              NO,BRANCH
         OI    DCBEIB,RMBIT        SET EQUIPMENT CHECK ON REG MARK BIT
         B     OCR220              IN DCBEIB
OCR217   OI    DCBEIB,ECBIT        SET EQUIPMENT CHECK BIT IN DCBEIB
*
OCR220   TM    SENSE0(IOBADR),DATACHK  DID A DATA CHECK ERROR OCCUR
         BZ    OCR230              NO, BRANCH
         OI    DCBEIB,DCBIT        SET DATA CHECK BIT IN DCBEIB
*
OCR230   TM    SENSE1(IOBADR),HPREMPTY DID HOPPER EMPTY OCCUR
         BZ    OCR240              NO,BRANCH
         OI    DCBEIB,KCHEBIT      SET HOPPER EMPTY BIT IN DCBEIB
*
OCR240   TM    STATUS+1(IOBADR),WLR  DID WRONG LNGTH RECORD OCCUR
         BZ    OCR250              NO,BRANCH
         OI    DCBEIB,WLRBIT       SET WRONG LENGTH REC BIT IN DCBEIB
         LTR   WORK3R,WORK3R       IS ERRCNT ADDRESS SPECIFIED
         BZ    OCR250              NO, BRANCH
         L     WORK4R,PERMWLR(WORK3R)  LOAD PERMANENT WLR  COUNT
         LA    WORK4R,ONE(WORK4R)  INCREMENT COUNT BY 1
         ST    WORK4R,PERMWLR(WORK3R) STORE COUNT
*
OCR250   TM    SENSE1(IOBADR),LSSOREOP  DID LATE STKR SEL OR EOP OCCUR
         BCR   8,RETR              NO,BRANCH
         OI    DCBEIB,LSSEPBIT     SET LSS OR EOP BIT IN DCBEIB
*
OCR260   BR    RETR                RETURN TO CALLING ROUTINE
 EJECT
***********************************************************************
*
*        COMPLETION CODE ROUTINE
*
***********************************************************************
OCR300   SR    ENTRYR,ENTRYR       CLEAR RETURN CODE REGISTER
         TM    DCBEIB,EIBERR       TEST FOR ERROR INDICATED IN THE EIB
         BZ    OCR310              IF NONE , BRANCH
         LA    ENTRYR,FOURRC       SET RETURN CODE OF FOUR
*
OCR310   TM    SENSE0(IOBADR),COMREJ TEST FOR COMMAND REJECT
         BO    OCR315              IF YES, BRANCH TO SET RETURN CODE
         TM    SENSE1(IOBADR),INVCOM TEST FOR INVALID COMMAND
         BZ    OCR320              IF NOT, BRANCH
OCR315   LA    ENTRYR,EIGHTRC      SET RETURN CODE OF EIGHT
*
OCR320   TM    SENSE0(IOBADR),SENS0ERR  TEST FOR ERRORS IN SENSE
         BNZ   OCR325              BRANCH IF NO ERRORS ARE FOUND
         TM    STATUS+1(IOBADR),STAT1ERR TEST FOR ERRORS IN  STATUS
         BCR   8,RETR              NO,BRANCH
OCR325   LA    ENTRYR,TWELVERC     SET RETURN CODE OF TWELVE
*
OCR330   BR    RETR                RETURN TO CALLING ROUTINE
 EJECT
***********************************************************************
*
*        ERROR COUNTER ROUTINE
*
***********************************************************************
*
OCR400   L     WORK4R,DCBERRCN     LOAD ADDRESS OF COUNTERS
         MVI   DCBEIB,ZERO         RESET EIB BYTE TO ZERO        A33940
         LTR   WORK4R,WORK4R       ARE COUNTERS SPECIFIED
         BCR   8,RETR              NO,BRANCH
*
         SR    WORK3R,WORK3R       CLEAR COUNT REGISTER
         IC    WORK3R,DCRETRY(IOBADR) LOAD DATA CHECK RETRY COUNT
         A     WORK3R,DCCOUNT(WORK4R) INCREMENT BY NUMBER OF RETRYS
         ST    WORK3R,DCCOUNT(WORK4R) STORE DATA CHECK RETRY COUNT
*
         SR    WORK3R,WORK3R       CLEAR COUNT REGISTER
         IC    WORK3R,ECRETRY(IOBADR) LOAD EQUIP CHECK RETRY COUNT
         A     WORK3R,ECCOUNT(WORK4R) INCREMENT BY NUMBER OF RETRYS
         ST    WORK3R,ECCOUNT(WORK4R) STORE EQUIP CHECK RETRY COUNT
*
         SR    WORK3R,WORK3R       CLEAR COUNT REGISTER
         IC    WORK3R,WLRETRY(IOBADR)  LOAD WLR RETRY COUNT
         A     WORK3R,WLRCOUNT(WORK4R)  INCREMENT BY NUMBER OF RETRYS
         ST    WORK3R,WLRCOUNT(WORK4R)  STORE WLR RETRY COUNT
         XC    DCRETRY(3,IOBADR),DCRETRY(IOBADR)  CLEAR IOB COUNTERS
*
OCR410   BR    RETR                RETURN TO CALLING ROUTINE
 EJECT
***********************************************************************
*
*
         CNOP  0,8                 PAD TO DOUBLE WORD
         DCBD  DSORG=PS,DEVD=OR                                @YM00635
         END
