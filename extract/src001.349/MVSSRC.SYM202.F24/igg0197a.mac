* /* START OF SPECIFICATIONS ****
*01* PROCESSOR = ASSEMXF-370R
**** END OF SPECIFICATIONS ***/
         TITLE     ' IGG0197A   OPEN EXECUTOR '
IGG0197A CSECT
***********************************************************    @YM00638
*MODULE-NAME                                                   @YM00638
* IGG0197A                                                     @YM00638
*                                                              @YM00638
*DESCRIPTIVE-NAME                                              @YM00638
* OCR OPEN EXECUTOR, STAGE 2                                   @YM00638
*                                                              @YM00638
*COPYRIGHT                                                     @YM00638
* NONE                                                         @YM00638
*                                                              @YM00638
*CHANGE-ACTIVITY                                               @YM00638
*
* RELEASE 20 ADDITIONS/CHANGES/DELETIONS
* RELEASE 21 ADDITIONS/CHANGES/DELETIONS
* RELEASE 22 ADDITIONS/CHANGES/DELETIONS
* RELEASE 23 ADDITIONS/CHANGES/DELETIONS
* RELEASE 24 ADDITIONS/CHANGES/DELETIONS
* RELEASE 25 ADDITIONS/CHANGES/DELETIONS
* RELEASE 26 ADDITIONS/CHANGES/DELETIONS
* RELEASE 27 ADDITIONS/CHANGES/DELETIONS
* VS 2 REL 2 ADDITIONS/CHANGES/DELETIONS
*A185000,431000,446400 - 447600,568500 - 569500,581000,         Y02967*
*A663000,717000,847000                                          Y02967*
*C732000,946000 - 947000,964000 - 967000                        Y02967*
*                                                                     *
* STATUS - CHANGE LEVEL 00  RELEASE 20
*                                                                     *
*FUNCTION/OPERATION                                                   *
* IT GETS CORE FOR IOB'S AND CHANNEL PROGRAMS                         *
* IT DETERMINES THE CORRECT CNTRL MODULE                              *
* IT DETERMINES THE CORRECT EOB MODULE                                *
* IT DETERMINES THE CORRECT CHECK OR SYNCH AND ERROR PROC RTN         *
* IT DETERMINES THE CORRECT READ OR GET ROUTINE                       *
* A CODE IS SET IN THE DCBCNTRL FIELD TO INDICATE THE CORRECT ROUTINE *
*   TO IGG0197B                                                       *
* IT GENERATES THE REQUIRED IOB'S(AND CHANNEL PROGRAMS FOR QSAM)      *
* IT LINKS THE CHANNEL PROGRAMS TO THE IOB'S AND THE IOB'S TO ONE     *
*  .ANOTHER                                                           *
* IT SPECIFIES IN THE WTG TABLE THAT EXECUTOR IGG0197B IS THE NEXT    *
*   EXECUTOR REQUIRED FOR THIS DCB                                    *
* IT THEN SEARCHES THE WTG TABLE TO PASS CONTROL TO ANOTHER EXECUTOR  *
*                                                                     *
*ENTRY POINT
*        LABEL  OCR010
*ENTRY METHOD- ENTERED FROM IGGO191B OR IGG0191I BY USE OF THE XCTL   *
*   MACRO                                                             *
*INPUT- SEE DESCRIPTION OF REGISTERS, USER'S DCB                      *
*                                                                     *
*OUTPUT- SEE DESCRIPTION OF REGISTERS, USER'S DCB, USER'S IOB'S       *
*                                                                     *
*EXITS- NORMAL - XCTL TO IGG0197B                                     *
*EXITS- ERROR - SVC 13(ABEND 013) DCB INCONSISTENCIES, FUNCTION NOT   *
*                  SUPPORTED                                          *
*                                                                     *
*                                                                     *
*                                                                     *
*TABLES/WORKAREAS - WHERE TO GO TABLE                                 *
*                                                                     *
*  BYTE 0-7   NAME                                                    *
*  BYTE 8-10  RELATIVE DISK ADDRESS (TTR) OF FIRST RECORD             *
*  BYTE 11    CONCATENATION NUMBER                                    *
*  BYTE 12    ZERO                                                    *
*  BYTE 13    ALIAS INDICATOR AND USER DATA FIELD DESCRIPTOR          *
*             ALIAS INDICATOR-1 BIT                                   *
*             NUMBER OF TTRS IN USERS DATA FIELD-2BITS                *
*  BYTE 14-16 TTR                                                     *
*  BYTE 17    NAME                                                    *
*  BYTE 18-19 TTR OF NOTE LIST OR SCATTER LIST                        *
*  BYTE 20    TRANSLATION TABLE                                       *
*  BYTE 21    ZERO OR NUMBER OF ENTRIES IN THE NOTE LIST              *
*  BYTE 22-23 ATTRIBUTES                                              *
*  BYTE 24-26 TOTAL CONTIGUOUS MAIN STORAGE REQUIRED FOR MODULE       *
*  BYTE 27-28 LENGTH OF FIRST TEXT RECORD                             *
*  BYTE 29    LENGTH OF WTG TABLE (IN DOUBLE WORDS)                   *
*  BYTE 30-31 PATH THROUGH LOADS OF ROUTINES                          *
*  BYTE 32-36 IDTTR OF EXECUTOR FOR FIRST DCB                         *
*  BYTE 37-39 WORK AREA ADDRESS FOR FIRST DCB                         *
*  BYTE 40--- TABLE OF IDTTR'S AND WORK AREA ADDRESSES                *
*                                                                     *
*  BYTE 32+N(8) IDTTR OF EXECUTOR FOR NTH DCB (5 BYTES)               *
*               WORK AREA ADDRESS FOR NTH DCB (3 BYTES)               *
*                                                                     *
*  BYTE 32+8(N+1)IDTTR OF LAST ROUTINE LOAD   (5 BYTES)               *
*                                             (3 BYTES)               *
*                                                                     *
*ATTRIBUTES- REENTRANT, REUSABLE                                      *
*                                                                     *
*NOTES- THIS EXECUTOR DEALS ONLY WITH OPTICAL CHARACTER READERS,      *
*        IN PARTICULAR THE 1285, 1287, AND 1288
*
***********************************************************************
*                                                                     *
*  REGISTER CONVENTIONS USED THROUGHOUT ALL OPEN PASSES               *
*                                                                     *
***********************************************************************
*
RE       EQU   0                   WORK REG5
RF       EQU   1                   WORK REG6
RDCB     EQU   2                   DCB REGISTER
RBASE    EQU   3                   BASE REGISTER
RCORE    EQU   4                   WORK REGISTER
RPAR     EQU   5                   TOP OF PARAMETER LIST
RWTG     EQU   6                   TOP OF WTG TABLE
RPARC    EQU   7                   CURRENT PARAMETER
RWTGC    EQU   8                   CURRENT TRANS LOAD
RTCB     EQU   9                        CURRENT TCB ADDRESS      Y02967
RUCB     EQU   10                  USED HERE AS A COUNTER IN IOB GENERA
RDEB     EQU   11                  DEB ADDRESS
RB       EQU   12                  WORK REG1
RC       EQU   13                  WORK REG2
RD       EQU   14                  WORK REG3
RJ       EQU   15                  WORK REG4
**********************************************************************
*
*                   OPEN INDICATORS
*
***********************************************************************
INPUT    EQU   X'7F'              DCB OPENED FOR INPUT=X'00'
*
**********************************************************************
*
*                   OPERATIONS
*
***********************************************************************
RBOP     EQU   X'0C'               READ BACKWARD WITH ON-LINE CORRECTN
RBOCOP   EQU   X'4C'               READ BACKWARD
GNLOP    EQU   X'13'               GO TO NEXT LINE
*
**********************************************************************
*
*                   MASKS FOR MODULES TO BE USED
*
***********************************************************************
QSAMB    EQU   X'01'               IND2--QSAM
RBOCB    EQU   X'10'               OPTCD--RBOC BIT
CNTRLB   EQU   X'02'               MACRF--CNTRL
LOCATEB  EQU   X'08'               MACRF--LOCATE MODE
FIXEDB   EQU   X'80'               RECFM--FIXED RECORDS
VORUB    EQU   X'40'               RECFM--VARIABLE OR UNDEFINED RECORDS
UNDEFB   EQU   X'C0'               RECFM--UNDEFINED RECORDS
**********************************************************************
*
*                   CCW FLAGS USED
*
***********************************************************************
SLIB     EQU   X'20'               SLI BIT
CCHAIN   EQU   X'40'               COMMAND CHAIN BIT
CCHAINOF EQU   X'BF'               COMMAND CHAIN BIT OFF
*
*
*                   CCW OFFSETS USED
*
FLAG1    EQU   X'04'               FLAG BYTE IN FIRST CCW
FLAG2    EQU   X'0C'               FLAG BYTE IN SECOND CCW
COUNT    EQU   X'06'               COUNT FIELD IN FIRST CCW
COUNT2   EQU   X'0E'               COUNT FIELD IN SECOND CCW
COMMAND  EQU   X'00'               COMMAND FIELD IN FIRST CCW
COMMAND2 EQU   X'08'               COMMAND FIELD IN SECOND CCW
*
**********************************************************************
*
*                   IDS OF MODULES TO BE USED
*
***********************************************************************
EOBID    EQU   12                  EOB ROUTINE
CNTRLID  EQU   8                   CNTRL ROUTINE
CHECKID  EQU   7                   CHECK   ROUTINE
GERRID   EQU   5                   SYNCH AND ERROR PROC ROUTINE
READID   EQU   6                   READ ROUTINE
LOCFID   EQU   1                   GET ROUTINE---LOCATE MODE,RECFM=F
LOCVUID  EQU   2                   GET ROUTINE---LOCATE MODE,RECFM=V,U
MOVFID   EQU   3                   GET ROUTINE---MOVE MODE,RECFM=F
MOVVUID  EQU   4                   GET ROUTINE---MOVE MODE,RECFM=V,U
**********************************************************************
*
*                   OFFSETS
*
**********************************************************************
PLOFF    EQU   4                   OFFSET---DCB ENTRIES
WGOFF    EQU   8                   OFFSET---XCTL TABLE
WAOFF    EQU   32                  OFFSET---WTG ENTRIES
IDOFF    EQU   0                   ID OFFSET IN IEHIOSUP UPDATE TABLE
TTROFF   EQU   2                   TTR OFFSET IN IEHIOSUP UPDATE TABLE
WTGID    EQU   6                   OFFSET TO ID IN WTG TABLE
WTGTTR   EQU   14                  OFFSET TO TTR IN WTG TABLE
WKAOFF   EQU   4                   OFFSET IN WTG TABLE TO WORK AREA AR
ECBOFF   EQU   4                   ECB OFFSET IN IOB
IOBFLG1  EQU   8                   OFFSET OF IOBFLG1 IN ACCESS METH IOB
ECBADDR  EQU   12                  OFFSET OF ECB ADDRESS IN IOB
CPSTART  EQU   20                  OFFSET OF CHAN PROG START IN IOB
DCBOFF   EQU   4                   DCB OFFSET FROM CPSTART OFFSET
FORTY    EQU   40                  SIZE OF AN IOB INCLUDING THE PREFIX
FORTY8   EQU   48                  QSAM CHANNEL PROGRAM OFFSET
***********************************************************************
*
*                   IOB FLAGS
*
***********************************************************************
FIRSTIOB EQU   X'01'               INDICATES FIRST IOB IN CHAIN
NOERROR  EQU   X'7F'               USED TO INITIALIZE THE ECB
***********************************************************************
*
*                   SHIFTS
*
***********************************************************************
DIV8     EQU   3                   SHIFT TO MULTIPLY BY 8
MULT8    EQU   3                   SHIFT TO MULTIPLY BY 8
BITS12   EQU   12                  USED TO SHIFT LEFT 12 BITS
***********************************************************************
*
*                   LENGTHS
*
***********************************************************************
CCWL     EQU   8                   LENGTH OF 1 CCW
CCWL2    EQU   16                  LENGTH OF 2 CCWS
CCWL3    EQU   24                  LENGTH OF 3 CCWS
IDLNGH   EQU   2                   LENGTH OF OPEN EXECUTOR ID
TTRLNGH  EQU   3                   LENGTH OF OPEN EXECUTOR TTR
IDTTRL   EQU   5                   LENGTH OF OPEN EXECUTOR ID AND TTR
***********************************************************************
*
*                   CONSTANTS
*
***********************************************************************
C255     EQU   255                 USED TO CLEAR 256 BYTES(EX INSTR)
C256     EQU   256                 USED TO INCREMENT A POINTER BY 256
ZERO     EQU   0                   USED AS A CONSTANT OF 0
ONE      EQU   1                   CONSTANT OF ONE
TWO      EQU   2                   USED AS A CONSTANT OF TWO
BYT4     EQU   4                        CONSTANT OF FOUR         Y02967
ABENDCOD EQU   X'13'               OPEN ABEND SYSTEM CODE
***********************************************************************
***********************************************************************
 EJECT
         BALR  RBASE,RE            SET BASE
         USING OCR010,RBASE        BASE
         USING IHADCB,RDCB         DCB
         USING FORCORE,RCORE       WORK AREA
         USING DEBBASIC,RDEB            DEB BASE                 Y02967
         USING TCB,RTCB                 TCB BASE                 Y02967
OCR010   EQU   *                                               @YM02503
         TM    0(RPARC),INPUT           OPEN FOR INPUT         @YM02503
         BNZ   OCRABEND            IF NOT, ABEND (013)
         L     RDCB,0(RPARC)       INITIALIZE THE DCB REGISTER
         LA    RDCB,0(RDCB)        CLEAR HIGH ORDER BYTE
         L     RCORE,WKAOFF(RWTGC) GET WORK AREA REGISTER
         LA    RCORE,0(RCORE)      CLEAR HIGH ORDER BYTE
         L     RDEB,DCBDEBAD            GET DEB ADDRESS        @YM02503
         L     RTCB,DEBTCBAD            GET TCB ADDR           @YM02503
         LA    RF,FORTY            LOAD SIZE OF BASIC IOB (40 BYTES)
*
         TM    DCBRECFM,UNDEFB     TEST IF ANY RECFM SPECIFIED
         BNZ   OCR015              IF YES, BRANCH
         OI    DCBRECFM,UNDEFB     IF NONE SPECIFIED,ASSUME UNDEFINED
*
*
***********************************************************************
*
*        CALCULATE AND GET CORE FOR IOBS
*
***********************************************************************
OCR015   TM    DCBCIND2,QSAMB      TEST IF QSAM
         BNO   OCR020              BRANCH IF NOT QSAM
         LA    RF,CCWL(RF)         INCREMENT BY 8 FOR CNTRL AND RDLNE
         LH    RC,DCBBUFL          CCW--THEN LOAD BUFFER LENGTH
         LTR   RC,RC               TEST BUFL FOR ZERO
         BZ    OCRABEND            IF ZERO, ABEND(F13)
         LH    RE,DCBLRECL         LOAD RECORD LENGTH FROM DCB
         LTR   RE,RE               TEST LRECL FOR ZERO
         BZ    OCRABEND            IF ZERO, ABEND (F13)
         CR    RC,RE               COMPARE BUFFER LENGTH TO RECORD'LNGH
         BL    OCRABEND            IF BUFL LESS THAN LRECL, ABEND (F13)
         SR    RB,RB               CLEAR REGISTER FOR REGISTER DIVIDE
         DR    RB,RE               DIVIDE BUFL BY LRECL
         LH    RE,DCBBUFL          LOAD BUFFER LENGTH
         SR    RE,RB               SUBTRACT REMAINDER TO MAKE IT A
*                                  MULTIPLE OF THE RECORD LENGTH
         STH   RE,DCBBUFL          STORE BUFFER LENGTH BACK TO DCB
         LR    RE,RC               SAVE NUMBER OF LINES TO BE READ
*
*
         MH    RC,SIXTEEN          MULTIPLY BY 16
         AR    RF,RC               ADD SIZE FOR CCWS TO IOB SIZE
         LR    RC,RE               RESTORE NUMBER OF LINES TO BE READ
         B     OCR030              BRANCH TO CONTINUE PROCESSING QSAM
*
OCR020   LA    RF,CCWL3(RF)        INCREMENT BSAM IOB BY 24 FOR CNTRL,
*                                   RESCN,AND DSPLY CCWS.
OCR030   SRL   RF,DIV8             DIVIDE IOB LENGTH BY 8
         STC   RF,DCBIOBL          STORE DOUBLE WORK LENGTH TO DCB
         SLL   RF,MULT8            RESET LENGTH
*
*
         TM    DCBCIND2,QSAMB      TEST IF QSAM
         BO    OCR040              YES, BRANCH
         LA    RE,ONE              SUPPLY 1 DCB FOR BSAM
         STC   RE,DCBNCP           STORE IN DCB
         B     OCR050              BRANCH TO PROCESS
*
OCR040   IC    RE,DCBBUFNO         GET NUMBER OF IOBS TO BUILD
*
OCR050   LR    RUCB,RE             SAVE NUMBER AS COUNTER
         MR    RE,RE               COMPUTE SPACE REQUIRED
         LR    RB,RF               SAVE FOR FUTURE USE
         MODESET KEYADDR=DXUKEY,WORKREG=1    GET USER KEY      @YM02503
*                                                                Y02967
         LR    RF,RB                    GET IOB SPACE            Y02967
*
**********************************************************************
*
         GETMAIN R,LV=(RF),SP=250  GET CORE FOR IOBS
*
**********************************************************************
         MODESET EXTKEY=DATAMGT         PUT SYSTEM IN OPEN KEY   Y02967
*
         LR    RJ,RB               RESOTRE LENGTH TO CLEAR AREA
         MVI   DCBCNTRL+3,EOBID    SET END-OF-BLOCK ID
*
         TM    DCBMACRF,CNTRLB     IS CNTRL SPECIFIED
         BNO   OCR060              IF NOT, BRANCH
         MVI   DCBCNTRL,CNTRLID    SET THE CNTRL ID
*
OCR060   TM    DCBCIND2,QSAMB      IS QSAM USED
         BO    OCR070              YES, BRANCH
*
         MVI   DCBCNTRL+1,CHECKID  SET THE CHECK ROUTINE ID
         MVI   DCBCNTRL+2,READID   SET THE READ ROUTINE ID
         B     OCR100              BRANCH TO CLEAR THE IOBS
*
OCR070   MVI   DCBCNTRL+1,GERRID   SET THE GERR ID
         TM    DCBMACRF,LOCATEB    IS LOCATE MODE SPECIFIED
         BNO   OCR090              IF NOT, BRANCH
         TM    DCBRECFM,VORUB      TEST FOR VARIABLE OR UNDEFINED
         BO    OCR080              IF EITHER, BRANCH
         MVI   DCBCNTRL+2,LOCFID   SET THE GET ROUTINE ID
         B     OCR100              BRANCH TO CLEAR THE IOBS
*
OCR080   MVI   DCBCNTRL+2,LOCVUID  STORE RESULTANT ID
         B     OCR100              BRANCH TO CLEAR IOBS
*
OCR090   TM    DCBRECFM,VORUB      TEST FOR VARIABLE OR UNDEFINED
         BO    OCR095              IF EITHER, BRANCH
         MVI   DCBCNTRL+2,MOVFID   SET GET ROUTINE ID
         B     OCR100              BRANCH TO CLEAR IOBS
*
OCR095   MVI   DCBCNTRL+2,MOVVUID  RECORD FORMAT IS VARIABLE OR UNDEF
*
OCR100   TM    DCBCIND2,QSAMB      IS QSAM USED
         BZ    OCR103              NO, BRANCH
         MVI   DCBOFFSR,FORTY8     SET CHANNEL PROGRAM OFFSET
         B     OCR104              BRANCH TO CONTINUE PROCESSING
OCR103   MVI   DCBOFFSR,FORTY      SET CHANNEL PROGRAM OFFSET
*
OCR104   ST    RF,DCBIOBA          SAVE FIRST IOB ADDRESS
         BCTR  RJ,0                REDUCE AMOUNT BY ONE
         MODESET KEYADDR=DXUKEY,WORKREG=11   GET USER KEY      @YM02503
         LA    RB,C255             GET MAX AMOUNT OF ONE CLEAR (256)
*
OCR105   CR    RJ,RB               IS AMOUNT GREATER THAN 255
         BNH   OCR110              NO, BRANCH
*
         EX    RB,OCR107E          CLEAR 256 BYTES
*
         SR    RJ,RB               SUBTRACT 255 FROM AMT TO BE CLEARED
         BCTR  RJ,0                SUBTRACT ONE MORE BYTE
         LA    RF,C256(RF)         UPDATE AREA ADDRESS
         B     OCR105              GO CLEAR SOME MORE
*
OCR107E  XC    0(1,RF),0(RF)       CLEAR INSTRUCTION--USED BY EX INSTR
*
OCR110   EX    RJ,OCR107E          CLEARS LESS THAN 256 BYTES
*
         L     RB,DCBIOBA          GET IOB ADDRESS
         LR    RD,RB               SET UP WORK REGISTER
*
***********************************************************************
*
*        INITIALIZE THE IOBS
*
***********************************************************************
OCR120   LTR   RUCB,RUCB           HAVE ALL IOBS BEEN GENERATED
         BZ    OCR200              YES, BRANCH
*
         MODESET KEYADDR=DXUKEY,WORKREG=11   GET USER KEY      @YM02503
         ST    RB,0(RD)            LINK THIS IOB TO THE LAST ONE
         LR    RD,RB               UPDATE THE WORK REGISTER
         LA    RB,ECBOFF(RB)       POINT TO THE ECB
         OI    0(RB),NOERROR       SET ECB COMPLETE WITHOUT ERROR
         OI    IOBFLG1(RD),CCHAIN  SET COMMAND CHAINING BIT
         ST    RB,ECBADDR(RD)      STORE ECB POINTER
         LA    RJ,CPSTART(RB)      POINT TO CHANNEL PROGRAM START ADDRE
         MVC   DCBOFF(BYT4,RJ),DXUDCBAD MOVE DCB ADDRESS TO IOB  Y02967
         LA    RB,CCWL2(RJ)        POINT TO CCWS
         TM    DCBCIND2,QSAMB      USING QSAM
         BO    OCR130              YES,BRANCH
         LA    RB,CCWL3(RB)        POINT TO THE NEXT IOB
         BCTR  RUCB,0              DECREMENT IOB COUNTER
         B     OCR120              SEE IF ALL IOBS HAVE BEEN GENERATED
*
***********************************************************************
*
*        SET UP CHANNEL PROGRAM FOR QSAM (JOURNAL TAPES)
*
***********************************************************************
OCR130   LA    RB,CCWL(RB)         POINT TO CHANNEL PROGRAM
         ST    RB,0(RJ)            STORE CHANNEL PROGRAM ADDRESS IN IOB
*
         LR    RJ,RC               LOAD NUMBER OF LINES TO BE READ
         TM    DCBOPTCD,RBOCB      IS READ BACKWD WITT ON-LINE CORR SP
         BZ    OCR140              NO, BRANCH
         MVI   COMMAND(RB),RBOCOP  MOVE RBOC TO COMMAND
         B     OCR150              BRANCH TO CONTINUE PROCESSING
*
OCR140   MVI   COMMAND(RB),RBOP    MOVE READ BACKWD
*
OCR150   TM    DCBRECFM,UNDEFB     TEST FOR UNDEFINED RECORDS
         BO    OCR155              YES,BRANCH
         TM    DCBRECFM,FIXEDB     TEST FOR FIXED RECORDS
         BO    OCR160              YES,BRANCH
OCR155   OI    FLAG1(RB),SLIB      TURN SLI BIT ON IN READ CCW
         TM    DCBRECFM,UNDEFB     IS FORMAT UNDEFINED
         BNO   OCR170              NO, BRANCH
*
OCR160   MVC   COUNT(TWO,RB),DCBLRECL MOVE RECORD LENGTH TO COUNT
         B     OCR180              BRANCH TO CONTINUE PROCESSING
*
OCR170   LH    RF,DCBLRECL         LOAD RECORL LENGTH
         SH    RF,FOUR             SUBTRACT 4 FOR VARIABLE COUNT
         STH   RF,COUNT(RB)        STORE COUNT TO CCW
*
OCR180   OI    FLAG1(RB),CCHAIN    TURN COMMAND CHAINING BIT ON
         MVI   COMMAND2(RB),GNLOP  SET GNL OP
         MVI   FLAG2(RB),CCHAIN    TURN COMMAND CHAINING BIT ON
         MVI   COUNT2+1(RB),ONE    SET CCW COUNT TO ONE
*
OCR190   BCT   RJ,OCR195           BRANCH ON NUMBER OF LINES TO BE READ
         NI    FLAG2(RB),CCHAINOF  TURN OFF COMMAND CHAIN IN LAST CCW
         LA    RB,CCWL2(RB)        POINT TO NEXT IOB
         BCTR  RUCB,0              DECREMENT IOB COUNTER
         B     OCR120              BRANCH TO CHECK FOR MORE IOBS
*
OCR195   LR    RF,RB               COPY CCW POINTER
         LA    RB,CCWL2(RB)        INCREMENT POINTER TO NEXT TWO CCWS
         MVC   0(CCWL2,RB),0(RF)   COPY 2 CCWS TO READ ANOTHER LINE
         B     OCR190              BRANCH TO CHECK FOR MORE LINES
*
OCR200   L     RB,DCBIOBA          GET FIRST IOB ADDRESS
         ST    RB,0(RD)            LINK FIRST IOB TO LAST
         OI    0(RB),FIRSTIOB      SET FIRST IOB INDICATOR
         MODESET EXTKEY=DATAMGT         PUT SYSTEM IN OPEN KEY   Y02967
*
         MVC   0(IDTTRL,RWTGC),SOP7B  SET ID FOR NEXT LOAD USED BY THIS
*                                  DCB. ID GOES TO BYTES 0-5 OF AN 8
*                                  BYTE ENTRY IN THE WTG TABLE.
***********************************************************************
*
*        GO TO NEXT EXECUTOR OR DO THIS ONE AGAIN
*
**********************************************************************
RELOOP   LA    RWTGC,WGOFF(RWTGC)   INCREMENT CURRENT WTG ENTRY
         LA    RPARC,PLOFF(RPARC)   INCREMENT CURRENT DCB ENTRY
         CLC   0(IDLNGH,RWTGC),AMIDCNST IS THIS ROUTINE NEEDED AGAIN
         BCR   8,RBASE             BRANCH TO BEGIN ROUTINE AGAIN
*
         CLC   0(IDLNGH,RWTGC),OPIDCNST END OF TABLE
         BC    7,RELOOP            NO, CHECK NEXT ENTRY
*
         LR    RPARC,RPAR          REINITIALIZE DCB LIST POINTER
         LA    RWTGC,WAOFF(RWTG)   REINITIALIZE WTG LIST POINTER
*
RELOOP1  CLI   0(RWTGC),ZERO       IS THIS ENTRY COMPLETE
         BC    7,XCTLRTN           IF NOT,BRANCH TO TRANSFER CONTROL
*                                  TO NEXT EXECUTOR
         LA    RWTGC,WGOFF(RWTGC)   GET NEXT WTG ENTRY
         LA    RPARC,PLOFF(RPARC)   GET NEXT DCB ENTRY
         B     RELOOP1             BRANCH TO CHECK NEXT ENTRY COMPLETE
*
XCTLRTN  MVC   WTGID(IDLNGH,RWTG),IDOFF(RWTGC) STORE IF IN WTG TABLE
         MVC   WTGTTR(TTRLNGH,RWTG),TTROFF(RWTGC) STORE TTR IN WTG TAB
*
         LA    RJ,DXCCW12          SET UP FOR XCTL- LOAD ADDR OF PARMS
**********************************************************************
*
         XCTL  DE=(RWTG),SF=(E,(RJ)) TRANSFER CONTROL TO NEXT EXECUTOR
*
**********************************************************************
*
OCRABEND LA    RF,ABENDCOD         GET ABEND CODE
         SLL   RF,BITS12           SET UP REG 1 FOR ABEND
         ABEND (RF),DUMP           ISSUE ABEND TO TERMINATE
*
*
*
OPIDCNST DC    C'0S'               END OF TABLE ID
AMIDCNST DC    C'7A'               STAGE III OCR EXECUTOR ID
SIXTEEN  DC    H'16'               CONSTANT (16)
FOUR     DC    H'4'                CONSTANT (4)
*
*
ZAPSZAPS DC    8C'ZAPSZAPS'             WORKAREA SPACE           Y02967
*                                                                Y02967
*                                                                Y02967
SOP7B    DC    C'7B    '           IDTTRL
         DC    H'0'                END OF TABLE
         DC   2H'0'                TABLE FILLER---TO DOUBLE WORD
         DC    C'019'              OPENSVC CODE
         DC    AL1(126)            DBL WORDS FROM CSECT TO BEGIN OF
*                                  XCTL TABLE
         DCBD  DSORG=PS,DEVD=OR    DCB DSECT                   @YM00635
*
         IECDSECS MAIN,EXPAND=YES                                Y02967
         IKJTCB                                                  Y02967
         IHARB                                                   Y02967
         IEZDEB                                                  Y02967
         END
