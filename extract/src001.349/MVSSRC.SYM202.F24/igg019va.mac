* /* START OF SPECIFICATIONS ****
*01* PROCESSOR = ASSEMXF-370R
**** END OF SPECIFICATIONS ***/
         TITLE      'IGG019VA  -  GET LOCATE FIXED RECORDS (OCR) '
IGG019VA CSECT
***********************************************************    @YM00638
*MODULE-NAME                                                   @YM00638
* IGG019VA                                                     @YM00638
*                                                              @YM00638
*DESCRIPTIVE-NAME                                              @YM00638
* OCR GET, LOCATE MODE, FIXED RECORDS                          @YM00638
*                                                              @YM00638
*COPYRIGHT                                                     @YM00638
* NONE                                                         @YM00638
*                                                              @YM00638
*CHANGE-ACTIVITY                                               @YM00638
*
* RELEASE 20 ADDITIONS/CHANGES/DELETIONS
*A553000,554000                                                  A33921
*C608000                                                         A33921
* RELEASE 21 ADDITIONS/CHANGES/DELETIONS
* RELEASE 22 ADDITIONS/CHANGES/DELETIONS
* RELEASE 23 ADDITIONS/CHANGES/DELETIONS
* RELEASE 24 ADDITIONS/CHANGES/DELETIONS
* RELEASE 25 ADDITIONS/CHANGES/DELETIONS
* RELEASE 26 ADDITIONS/CHANGES/DELETIONS
* RELEASE 27 ADDITIONS/CHANGES/DELETIONS
*
*
* STATUS - CHANGE LEVEL 00  RELEASE 20
*
*
*
*FUNCTION-GET- TO LOCATE THE ADDRESS OF LOGICAL SEQUENTIAL RECORDS
*              WITHIN A BUFFER FOR THE USER
*         RELEASE- CAUSES THE REMAINING CONTENTS OF THE CURRENT BUFFER
*                  TO BE IGNORED
*
*ENTRY POINTS
*        LABEL  OCR010
*        LABEL  OCR020
*
*ENTRY INSTRUCTION SEQUENCE
*              GET                 RELESE
*                LA      1,DCB       LA      1,DCB
*                L       15,48(1)    L       15,48(1)
*                BALR    14,15       BALR    14,8(15)
*
*INPUT FROM USER AS ADDRESSES IN FOLLOWING REGISTERS
*        REG   0    USED IN MOVE MODE(NOT APPLICABLE IN LOCATE MODE)
*        REG   1    DCB ADDRESS
*        REG   13   WORK-SAVE ADDRESS
*        REG   14   USER IN-LINE RETURN ADDRESS
*        REG   15   THIS ROUTINES INITIAL BASE ADDRESS
*
*OUTPUT REGISTER ADDRESSES AS FOLLOWS
*        REG   0    NOT APPLICABLE
*        REG   1    RECORD ADDRESS LOCATED FOR USER
*        REG   13   WORK-SAVE ADDRESS
*        REG   14   RETURN ADDRESS
*        REG   15   RETURN CODE
*        REG   2-12 AS UPON ENTRY TO THIS ROUTINE
*
*EXTERNAL ROUTINES
*
*        IGG019VE - INPUT ERROR ROUTINE WHICH DETECTS, CORRECTS DEV-DEP
*                   ERRORS AND RETURNS BLOCK OF DATA.
*        IGG019CC   END OF BLOCK ROUTINE WHICH SCHEDULES REQUESTS.
*EXITS
*        OCR025     BRANCH TO USER,RETURNS PARAMETERS
*        OCR034     BRANCH AND LINK TO END OF BLOCK ROUTINE
*        OCR072     BRANCH AND LINK TO END OF BLOCK ROUTINE
*        OCR080     BRANCH AND LINK TO INPUT ERROR ROUTINE
*        OCR110     BRANCH TO USER, RETURNS PARAMETERS
*
*TABLES/WORKAREAS
*
*        USER  SAVE/WORK AREA-LAST 13 WORDS USED
*        DCB
*
*        IOB
*
*ATTRIBUTES---REENTRANT,REUSABLE,PROBLEM PROGRAM MODE
*
**********************************************************************
*
*  ALL REGISTER EQUATES HAVE AN 'R' AT THE END OF THE SYMBOL
*
***********************************************************************
*
PARA1R   EQU   1                   PARAMETER REGISTER 1
BUFADR   EQU   1                   ADDRESS OF BUFFER
DCBR     EQU   2                   DCB ADDRESS
IOBADR   EQU   3                   IOB ADDRESS
EOBADR   EQU   4                   EOB ADDRESS
RECADR   EQU   5                   RECORD ADDRESS
LRECLR   EQU   6                   RECORD LENGTH
WORK3R   EQU   6                   WORK REGISTER
WORK1R   EQU   7                   WORK REGISTER
CON255R  EQU   7                   WORK REGISTER-CONTAINS 255
BASER    EQU   8                   BASE REGISTER
SAVR     EQU   13                  USER SAVE AREA
RETR     EQU   14                  RETURN ADDRESS
WORK2R   EQU   14                  WORK REGISTER
ENTRYR   EQU   15                  ENTRY ADDRESS
LNGHR    EQU   15                  WORK REGISTER-CONTAINS BUFFER LNGH
***********************************************************************
*
EOFBIT   EQU   X'40'               DCBORBYT-END OF FILE BIT
BUFPRIME EQU   X'20'               DCBORBYT-BUFFERS PRIMED BIT
ERRFLGS  EQU   X'3F'               DCBIFLGS-DCB ERROR FLGS OFF
BUF      EQU   0                   OFFSET OF BUFFER ADDRESS IN CCW
CNT      EQU   6                   OFFSET OF COUNT IN CCW
LINECNT  EQU   28                  OFFSET OF LINE COUNT IN ERROR CNTRS
NOERROR  EQU   X'00'               TESTS FOR RETURN CODE OF ZERO
C255     EQU   255                 USED TO CLEAR 256 BYTES OF CORE
C256     EQU   256                 USED TO INCREMENT POINTER BY 256
ADDRESS  EQU   3                   LENGTH OF AN ADDRESS
ONE      EQU   1                   USED TO INCREMENT BY 1
USERREG  EQU   36                  SAVE AREA OFFSET TO REG2
RETREG   EQU   20                  SAVE AREA OFFSET TO REG14
SAVREG   EQU   20                  SAVE AREA OFFSET TO STORE REGISTERS
*
 EJECT
         USING IGG019VA,ENTRYR     USE ENTRY POINT AS A BASE (REG 15)
         USING IHADCB,PARA1R       USE DCB ADDRESS AS A BASE (REG 1)
*
OCR010   B     OCR030              BRANCH AROUND RELEASE
ZEROS    DC    X'00000000'         FILL FOR ENTRY AT +8 -USE AS CONST=0
*
OCR020   MVC   DCBRECAD+1(ADDRESS),DCBEOBAD+1 INITIALIZE FOR RELEASE
OCR025   BR    RETR                RETURN TO USER
*
OCR030   STM   RETR,BASER,SAVREG(SAVR) SAVE REGISTERS
*
         DROP  ENTRYR              DROP REG 15 AS BASE FOR MODULE
         DROP  PARA1R              DROP REG  1 AS BASE FOR DCB
         USING IGG019VA,BASER      NEW  BASE REG ADDRESSABILITY
         USING IHADCB,DCBR         NEW  DCB  REG ADDRESSABILITY
*
         LR    BASER,ENTRYR        LOAD BASE ADDRESS
         LR    DCBR,PARA1R         LOAD DCB ADDRESS
         LM    IOBADR,RECADR,DCBIOBA  LOAD WORK REG2
         TM    DCBORBYT,BUFPRIME   ARE THE BUFFERS PRIMED
         BNZ   OCR035              YES, BRANCH
***********************************************************************
*
*        PRIME BUFFERS SUBROUTINE
*
***********************************************************************
*
         NI    DCBIFLGS,ERRFLGS    MAKE SURE ERROR FLAGS ARE OFF
*
         SR    WORK3R,WORK3R       CLEAR REGISTER
         CLI   DCBBUFNO,ONE            IF BUFFER NUMBER IS ONE   A33921
         BE    OCR0341                      GO TO OCR0341        A33921
         IC    WORK3R,DCBBUFNO     GET NUMBER OF BUFFERS
         BCTR  WORK3R,0            DECREMENT BY 1 FOR LOCATE MODE
*
OCR033   L     IOBADR,0(IOBADR)    GET ADDRESS OF NEXT IOB
         ST    IOBADR,DCBIOBA      STORE THAT IOB ADDRESS TO THE DCB
*
         BAL   RETR,OCR040         BRANCH AND LINK TO CLEAR BUFFERS
*
         L     ENTRYR,DCBEOB       LOAD  ADDRESS OF END OF BLOCK RTN
OCR034   BALR  RETR,ENTRYR         BRANCH AND LINK TO EOB ROUTINE
         BCT   WORK3R,OCR033       IF MORE IOBS, BRANCH TO SCHEDULE
         L     IOBADR,0(IOBADR)    GET IOB ADDRESS THAT WAS NOT SCHED
         ST    IOBADR,DCBIOBA      STORE TO DCB
OCR0341  OI    DCBORBYT,BUFPRIME   SET BUFFERS PRIMED SWITCH ON  A33921
*
***********************************************************************
OCR035   AH    RECADR,DCBLRECL     DETERMINE NEXT RECORD ADDRESS
         CR    RECADR,EOBADR       END OF BLOCK ADDRESS
         BL    OCR085              NO, BRANCH TO GIVE ADDRESS OF REC
         LA    RETR,OCR070         LOAD CORRECT RETURN ADDRESS
*
 EJECT
***********************************************************************
*
*        CLEAR BUFFER SUBROUTINE
*
***********************************************************************
OCR040   SR    WORK1R,WORK1R       CLEAR REGISTER
         IC    WORK1R,DCBOFFSR     GET OFFSET OF CHANNEL PROGRAM
         AR    WORK1R,IOBADR       GET ADDRESS OF CHANNEL PROGRAM
         L     BUFADR,BUF(WORK1R)  LOAD BUFFER ADDRESS
         LA    BUFADR,ONE(BUFADR)  CLEAR HI BYTE AND INCREMENT BY 1
         SH    BUFADR,CNT(WORK1R)  SUBTRACT RECORD LENGTH
         LH    LNGHR,DCBBUFL       LOAD LENGTH OF BUFFER
         LA    CON255R,C255        LOAD CONSTANT = 255
         BCTR  LNGHR,0             DECREMENT LENGTH BY 1
*
OCR050   CR    LNGHR,CON255R       COMPARE LENGTH TO CLEAR WITH 255
         BNH   OCR060              IF 255 OR LESS,BRANCH
*
         EX    CON255R,OCR055E     CLEAR 256 BYTES
*
         SR    LNGHR,CON255R       SUBTRACT 255 FROM AMOUNT TO BE CLEAR
         BCTR  LNGHR,0             SUBTRACT ONE MORE BYTE
         LA    BUFADR,C256(BUFADR) UPDATE AREA ADDRESS
         B     OCR050              BRANCH TO TEST FOR MORE
*
OCR055E  XC    0(1,BUFADR),0(BUFADR) CLEAR INSTRUCTION USED BY EX INSTR
*
OCR060   EX    LNGHR,OCR055E       CLEARS LESS THAN 256 BYTES
         BR    RETR                RETURN TO CALLING ROUTINE
*
***********************************************************************
*
 EJECT
OCR070   TM    DCBORBYT,EOFBIT     TEST IF END OF FILE IS ON
         BO    OCR075              IF YES, DO NOT SCHEDULE,BRANCH
         L     ENTRYR,DCBEOB       LOAD EOB ROUTINE ADDRESS
OCR072   BALR  RETR,ENTRYR         BRANCH AND LINK TO EOB RTN
*
OCR075   L     ENTRYR,DCBGERR      LOAD GERR ROUTINE ADDRESS
*
OCR080   BALR  RETR,ENTRYR         BRANCH AND LINK TO GERR ROUTINE
*
OCR085   CLC   DCBERRCN+1(ADDRESS),ZEROS ARE COUNTERS SPECIFIED
         BE    OCR090              NO, BRANCH
*
*
         L     WORK1R,DCBERRCN     LOAD ADR OF 32 BYTE COUNT AREA
         L     WORK2R,LINECNT(WORK1R)   LOAD NO. OF LINES READ
         LA    WORK2R,ONE(WORK2R)       ADD 1 TO COUNT
         ST    WORK2R,LINECNT(WORK1R)   STORE COUNT
*
OCR090   LR    PARA1R,RECADR       RECORD ADDRESS TO REGISTER 1
         ST    PARA1R,DCBRECAD     STORE RECORD ADDRESS TO DCB
         AH    RECADR,DCBLRECL     DETERMINE ADDRESS OF NEXT RECORD
         L     WORK1R,DCBEOBAD     LOAD EOB ADDRESS
         SR    ENTRYR,ENTRYR       CLEAR REG 15
         CR    RECADR,WORK1R       COMPARE NEXT REC ADR TO EOB ADDRESS
         BL    OCR100              IF LESS,BRANCH
         CLI   DCBEIB+1,NOERROR    IS RETURN CODE = 0
         BE    OCR100              YES,BRANCH
         IC    ENTRYR,DCBEIB+1     LOAD RETURN CODE
         XC    DCBEIB+1(ONE),DCBEIB+1 CLEAR RETURN CODE SAVE AREA
*
OCR100   LM    DCBR,BASER,USERREG(SAVR) RESTORE USER REGISTERS
         L     RETR,RETREG(SAVR)   RESTORE RETURN REGISTER
OCR110   BR    RETR                RETURN TO USER
*
         CNOP  0,8                 PAD MODULE TO DOUBLE WORD
         DCBD  DSORG=PS,DEVD=OR                                @YM00635
         END
