* /* START OF SPECIFICATIONS ****
*01* PROCESSOR = ASSEMXF-370R
**** END OF SPECIFICATIONS ***/
IGG019VH CSECT                    ENTRY POINT FOR CNTRL MODULE
***********************************************************************
*MODULE-NAME                                                   @YM00638
* IGG019VH                                                     @YM00638
*                                                              @YM00638
*DESCRIPTIVE-NAME                                              @YM00638
* OCR CONTROL MODULE                                           @YM00638
*                                                              @YM00638
*COPYRIGHT                                                     @YM00638
* NONE                                                         @YM00638
*                                                              @YM00638
*CHANGE-ACTIVITY                                               @YM00638
* RELEASE 20 ADDITIONS/CHANGES/DELETIONS
* RELEASE 21 ADDITIONS/CHANGES/DELETIONS
* RELEASE 22 ADDITIONS/CHANGES/DELETIONS
* RELEASE 23 ADDITIONS/CHANGES/DELETIONS
* RELEASE 24 ADDITIONS/CHANGES/DELETIONS
* RELEASE 25 ADDITIONS/CHANGES/DELETIONS
* RELEASE 26 ADDITIONS/CHANGES/DELETIONS
* RELEASE 27 ADDITIONS/CHANGES/DELETIONS
* RELEASE 28 ADDITIONS/CHANGES/DELETIONS
*                                                                     *
*STATUS - RELEASE 20 CHANGE LEVEL 000                                 *
*                                                                     *
*FUNCTION/OPERATION - TO PROVIDE THE CAPABILITY TO PERFORM VARIOUS    *
*                      FUNCTIONS TO THE USER. THESE FUNCTIONS ARE     *
*                       1 ESD - EJECT AND STACKER SELECT A DOCUMENT   *
*                       2 RKB - READ A FIELD IN THE ON-LINE           *
*                               CORRECTION MODE                       *
*                       3 HDR - READ A LINE OF HEADER INFORMATION     *
*                       4 MKL - MARK A JOURNAL TAPE LINE IN ERROR     *
*                       5 INC - INCREMENT A DOCUMENT TO THE NEXT STOP *
*                       6 EJD - EJECT A DOCUMENT                      *
*                       7 SSD - STACKER SELECT A DOCUMENT             *
*                                                                     *
*ENTRY POINTS - IGG019VH CSECT     CALLING SEQUENCE -                 *
*                                  LOAD DCB ADDRESS IN REGISTER 1     *
*                                  NEXT AN INSTRUCTION SEQUENCE OF    *
*                                  BAL 0,*+8                          *
*                                  DC AL1(N1) INDICATE FUNCTION WANTED*
*                                  DC AL3(N2) INFORMATION             *
*                                  IS GENERATED. CONTENTS OF THE TWO  *
*                                  DC INSTRUCTIONS IS                 *
*             FUNCTION     DC AL1   DC AL3                            *
*             ESD             4       1-4 STACKER DESIRED             *
*             RKB             8       N/A                             *
*             HDR            12       INPUT AREA ADDRESS              *
*             MKL            16       N/A                             *
*             INC            20       N/A                             *
*             EJD            24       N/A                             *
*             SSD            28       1-4 STACKER DESIRED             *
*                                                                     *
*                                  L 15,84(1,0) POINT TO CNTRL        *
*                                  BALR 14,15 LINK TO CNTRL           *
*                                                                     *
*INPUT - IOB                                                          *
*         IOBCSW - ADDRESS OF FAILING CCW IF IN SYNAD ROUTINE         *
*        DCB                                                          *
*         DCBIOBA - ADDRESS OF THE IOB                                *
*         DCBCIND2 - QSAM OR BSAM DETERMINATION                       *
*         DCBSYNAD - ADDRESS OF THE SYNAD ROUTINE                     *
*                                                                     *
*OUTPUT - COMPLETION CODE IN REGISTER 15                              *
*         UPDATED IOB ERROR COUNTERS                                  *
*         IF UNIT EXCEPTION OCCURS, EOF(X'40') IS POSTED IN DCBORBYT  *
*         IF ANY PERMANENT ERRORS OCCUR, THE EIB IS UPDATED           *
*                                                                     *
*EXTERNAL ROUTINES - IOS VIA EXCP                                     *
*                    ERROR COUNTER UPDATE IN SYNCH ROUTINE            *
*                    EIB UPDATE ROUTINE IN SYNCH ROUTINE              *
*                    COMPLETION CODE ROUTINE IN SYNCH ROUTINE         *
*                    USER SYNAD ROUTINE                               *
*                                                                     *
*EXITS/NORMAL - RETURN TO CALLER - BR 14                              *
*                                                                     *
*EXITS/ERROR - ABEND, CODE 001    EOV 0(REG1)                         *
*                                                                     *
*TABLES/WORK AREAS - USER SAVE AREA POINTED AT BY REGISTER 13         *
*                                                                     *
*ATRIBUTES - REENTRANT,REUSABLE,PROBLEM PROGRAM MODE                  *
*                                                                     *
*NOTES - N/A                                                          *
*                                                                     *
***********************************************************************
         TITLE 'IGG019VH  CNTRL MODULE FOR OCR'
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
REG0     EQU   0                  PARAMETER PASSER
REG1     EQU   1                  GENERAL REGISTER 1
DCBR     EQU   2                  POINTER TO DCB
SREG1    EQU   2                  POINTER TO FIRST SAVED USER REGISTER
IOBR     EQU   3                  POINTER TO IOB
REG3     EQU   3                  GENERAL REGISTER 3
WORK1    EQU   4                  WORK REGISTER
WORK2    EQU   5                  WORK REGISTER
CCWREG   EQU   6                  ADDRESS OF CCW
PARM1    EQU   7                  POINTS TO PASSED PARAMETER
REG8     EQU   8                  USED AS LINK TO EIB
WORK3    EQU   8                  WORK REGISTER
REG9     EQU   9                  GENERAL REGISTER 9
BASER    EQU   9                  BASE REGISTER
SAVR     EQU   13                 POINTER TO SAVE AREA
BACK     EQU   14                 RETURN TO USER
RETCODE  EQU   15                 USED TO PASS RETURN CODE
***********************************************************************
*                                                                     *
*        IOB EQUATES                                                  *
*                                                                     *
***********************************************************************
IOBSTUS  EQU   4                  DISPLACEMENT TO IOB STATUS
IOBFL1   EQU   8                  DISPLACEMENT TO IOBFLAG1
ECBADR   EQU   12                 OFFSET OF ECB ADDRESS IN IOB
IOBCSW   EQU   16                 DISPLACEMENT TO CSW IN IOB
IOBSTADR EQU   25                 DISPLACEMENT TO IOB START ADDRESS
OFFSET   EQU   40                 CCCW OFFSET IN IOB
OFFSET1  EQU   48                 POINTER TO NORMAL IOB CCW
IOBCCOFF EQU   X'BF'              SET IOB COMMAND CHAINING BIT OFF
IOBCCON  EQU   X'40'              SET IOB COMMAND CHAINING BIT ON
UETEST   EQU   X'01'              TEST FOR UNIT EXCEPTION
PERR     EQU   X'41'              CHECK FOR PERMANENT ERROR IN ECB
***********************************************************************
*                                                                     *
*        CCW EQUATES                                                  *
*                                                                     *
***********************************************************************
CCWFLAG  EQU   4                  DISPLACEMENT TO FLAG IN CCW
CCWFLAGS EQU   4                  DISPLACEMENT TO CCW FLAG BYTE
CCWCOUNT EQU   6                  DISPLACEMENT TO COUNT FIELD IN CCW
CCWLENG  EQU   8                  LENGTH OF CCW TO MOVE
CCOFF    EQU   X'BF'              TURN OFF COMMAND CHAINING BIT IN CCW
SLION    EQU   X'20'              SET SLI FLAG IN CCW ON
RFOP     EQU   X'02'              FR COMMAND CODE
MKLOP    EQU   X'0B'              MKL COMMAND CODE
INCOP    EQU   X'4B'              INC COMMAND CODE
EJDOP    EQU   X'43'              EJD COMMAND CODE
TEST1OR3 EQU   X'01'              TEST FOR STACKER 1 OR 3
SETSTK34 EQU   X'70'              SET STACKER 3 OR 4 FOR ESD
TEST1OR2 EQU   3                  TEST FOR STACKER 1 OR 2
SET1OR2  EQU   X'20'              SET FOR SSD STACKER 1 OR 2
SETSTK12 EQU   X'60'              SET FOR ESD STACKER 1 OR 2
SET3OR4  EQU   X'30'              SET SSD STACKER 3 OR 4
SET13    EQU   X'03'              SET STACKER 1 OR 3
SET24    EQU   X'0B'              SET STACKER 2 OR 4
***********************************************************************
*                                                                     *
*        DCB EQUATES                                                  *
*                                                                     *
***********************************************************************
ERROFF   EQU   X'3F'              CLEAR DCB ERROR FLAGS
SYNOFF   EQU   X'7F'              SET SYNAD IN CONTROL OFF
SYNADPRS EQU   X'01'              TEST FOR SYNAD PRESENT
HE       EQU   X'02'              TEST FOR HOPPER EMPTY
EXITSPEC EQU   X'10'              TEST FOR HOPPER EMPTY SPECIFIED
QSAMTEST EQU   X'01'              TEST FOR QSAM
SYNTEST  EQU   X'80'              TEST FOR IN SYNAD
EOF      EQU   X'40'              POST EOF
***********************************************************************
*                                                                     *
*        DECB EQUATES                                                 *
*                                                                     *
***********************************************************************
DECBADDR EQU   48                 DISPLACEMENT TO DECB BUILD AREA
DECBLT   EQU   52                 DISPLACEMENT TO DECB LENGTH & TYPE
DECBDCB  EQU   56                 DISPLACEMENT TO DECB DCB ADDRESS
DECBCCW  EQU   60                 DISPLACEMENT TO DECB CCW ADDRESS
DECBIOB  EQU   64                 DISPLACEMENT TO DECB IOB ADDRESS
LNGTYP   EQU   X'80'              DECB LENGTH AND TYPE
***********************************************************************
*                                                                     *
*        SAVE AREA EQUATES                                            *
*                                                                     *
***********************************************************************
USERSAVE EQU   12                 DISPLACEMENT TO REGISTER SAVE AREA
SAVE39   EQU   16                 DISPLACEMENT TO SAVE AREA
RETSAVE  EQU   44                 RETURN ADDRESS SAVE AREA POINTER
XDECB    EQU   48                 ECB OFFSET IN SAVE AREA DECB
SAVE9    EQU   68                 REGISTER 9 SAVE AREA DISPLACEMENT
***********************************************************************
*                                                                     *
*        MISCELLANEOUS EQUATES                                        *
*                                                                     *
***********************************************************************
MKLCNT   EQU   24                 DISPLACEMENT TO MKL ERROR BUCKET
PARMDISP EQU   3                  DISPLACEMENT TO STACKER PARAMETER
INITCONT EQU   1                  INITIALIZE CCW COUNT
BUFLENG  EQU   X'1E'              ASSUMED BUFFER LENGTH
MOVEBYTE EQU   1                  LENGTH TO MOVE ONE BYTE OF DATA
HDRTEST  EQU   X'0C'              TEST FOR HDR
LENGTH4  EQU   4                  MOVE FOUR BYTES
ZERO     EQU   X'00'              SET A BYTE TO ZERO
CNTRLERR EQU   X'20'              CONTROL ERROR BIT
SHIFTHI  EQU   24                 SHIFT COUNT FOR HIGH ORDER BYTE SHIFT
RKBTEST  EQU   X'08'              TEST FOR RKB
RETCDRTN EQU   16                 DISPLACEMENT TO RETURN CODE ROUTINE
EIBRTN   EQU   8                  DISPLACEMENT TO EIB ROUTINE ADDRESS
CNTRUPRT EQU   24                 DISPLACEMENT TO ADDR OF CNTR UPDATE
ACTIOB   EQU   8                  POINTER TO ACTUAL IOB
CLEARLEN EQU   8                  LENGTH OF CCW AREA TO CLEAR
ONE      EQU   1                  ABEND COMPLETION CODE
TWELVE   EQU   12                 SHIFT COUNT TO SET ABEND COMP CODE
         USING IGG019VH,RETCODE   ESTABLISH BASE REGISTER
         USING IHADCB,DCBR        ESTABLISH DCB ADDRESSIBILITY
         STM   SREG1,REG9,USERSAVE(SAVR) SAVE USER REGISTERS
         ST    BACK,RETSAVE(SAVR) SAVE RETURN ADDRESSS
         LR    BASER,RETCODE      GET BASE REGISTER SET UP
         DROP  RETCODE            DROP BASE REGISTER
         USING IGG019VH,BASER     ESTABLISH ADDRESSIBILITY
         LR    DCBR,REG1          GET DCB ADDRESS
         L     IOBR,DCBIOBA       GET IOB ADDRESS
         LR    PARM1,REG0         GET DESIRED OPERATION
         NI    IOBFL1(IOBR),IOBCCOFF SET COMMAND CHAINING BIT OFF
         XC    OFFSET(CLEARLEN,IOBR),OFFSET(IOBR) CLEAR CCW AREA
         MVI   CCWCOUNT+OFFSET+1(IOBR),INITCONT SET COUNT TO 1
DETOP    SR    WORK1,WORK1        CLEAR WORK REGISTER
         IC    WORK1,0(PARM1)     GET BRANCH TABLE OFFSET
         B     BRTAB(WORK1)       GO TO DESIRED ROUTINE
***********************************************************************
* BRANCH TABLE FOR OPERATUN DETERMINATION                             *
***********************************************************************
BRTAB    EQU   *-4                ESTABLISH BRANCH TABLE ADDRESSABILITY
         B     ESD                ESD DESIRED
         B     RKB                RKB DESIRED
         B     SETHDR             GO SET UP HDR CCW
         B     MKL                MKL DESIRED
         B     INC                INC DESIRED
         B     EJD                EJD DESIRED
         B     SSD                SSD DESIRED
* SET FOR ESD
ESD      CLI   PARMDISP(PARM1),TEST1OR2 IS STACKER 1 OR 2 WANTED
         BL    SET1               NO MUST BE 3 OR 4
         OI    OFFSET(IOBR),SETSTK34 SET FOR STACKER 3 OR 4
SET1     OI    OFFSET(IOBR),SETSTK12 SET FOR STACKER 1 OR 2
SETFINAL TM    PARMDISP(PARM1),TEST1OR3 IS OT STACKER 1 OR 3
         BO    SET2               YES SET A 3
         OI    OFFSET(IOBR),SET24 SET STACKER 2 OR 4
SET2     OI    OFFSET(IOBR),SET13 SET STACKER 1 OR 3
         B     ISSUE              GO ISSUE COMMAND
* SET FOR SSD
SSD      OI    CCWFLAG+OFFSET(IOBR),SLION SET SLI FLAG ON
         CLI   PARMDISP(PARM1),TEST1OR2 IS IT STACKER 1 OR 2
         BL    SET3               YES SET FOR 1 OR 2
         OI    OFFSET(IOBR),SET3OR4  SET FOR STACKER 3 OR 4
SET3     OI    OFFSET(IOBR),SET1OR2 SET FOR STACKER 1 OR 2
         B     SETFINAL           GO SET UP 2ND 4 BITS OF COMMAND CODE
* SET FOR MKL
MKL      MVI   OFFSET(IOBR),MKLOP SET MKL OP CODE
         B     ISSUE              GO ISSUE COMMAND
* SET FOR INC
INC      MVI   OFFSET(IOBR),INCOP SET INC OP CODE
         B     ISSUE              GO ISSUE COMMAND
* SET FOR EJD
EJD      MVI   OFFSET(IOBR),EJDOP SET EJD OP CODE
         B     ISSUE              GO ISSUE COMMAND
* START SETTING FOR RKB
RKB      L     CCWREG,IOBCSW(IOBR) GET CCW ADDRESS
         B     SETRF              GO READ
***********************************************************************
* SET TO ISSUE MKL,EJD,ESD,SSD, OR INC COMMAND                        *
***********************************************************************
ISSUE    EQU   *                  PREPARE TO ISSUE COMMAND
         NI    DCBIFLGS,ERROFF    CLEAR ERROR FLAGS
         L     REG8,IOBCSW(IOBR)  SAVE ADDRESS OF FAILINC CCW
         MVI   DCBOFFSR,OFFSET    POINT TO CNTRL CCW IN IOB
         LA    WORK1,OFFSET(IOBR) GET CCW ADDRESS
         L     WORK2,IOBSTADR-1(IOBR) SAVE START ADDRESS
         ST    WORK1,IOBSTADR-1(IOBR) SET START ADDRESS
***********************************************************************
* EXCP AND WAIT
***********************************************************************
         EXCP  ACTIOB(IOBR)       EXECUTE CHALLEL PROGRAM
         L     REG1,ECBADR(IOBR)  LOAD ECB ADDRESS
         WAIT  ECB=(REG1)         WAIT FOR EVENT TO COMPLETE
         OI    IOBFL1(IOBR),IOBCCON SET COMMAND CHAINING BIT ON
         MVI   DCBOFFSR,OFFSET1   RESTORE CCW OFFSCT IN DCB
         ST    REG8,IOBCSW(IOBR)  RESTORE POINTER TO FAILING CCW
         ST    WORK2,IOBSTADR-1(IOBR) RESTORE START ADDRESS
***********************************************************************
* LINK TP COUNTER UPDATE ROUTINE IN SYNCH OR CHECK MODULE             *
***********************************************************************
COUNTERS L     RETCODE,DCBGERR    GET ADDR OF CNTR UPDATE RTN - 24
         BAL   BACK,CNTRUPRT(RETCODE) LINK TL COUNTER UPDATE ROUTINE
         LTR   REG1,REG1          COUNTERS SPECIFIED
         BZ    NOCOUNT            NO CONTINUE
         CLI   OFFSET(IOBR),MKLOP IS IT MKL
         BNE   NOCOUNT            NO BYPASS MKL COUNTER UPDATE
         L     WORK2,MKLCNT(REG1) GET MKL ERROR BUCKET
         LA    WORK2,1(WORK2)     BUMP ERROR COUNTER
         ST    WORK2,MKLCNT(REG1) UPDATE ERROR BUCKET
*
NOCOUNT  SR    RETCODE,RETCODE    SET RETURN CODE TO ZEROS
         L     REG1,ECBADR(IOBR)  LOAD ECB ADDRESS
         CLI   0(REG1),PERR       DID ANY PERMANENT ERRORS OCCUR
         BNE   NOERROR            NO RETURN TO USER
***********************************************************************
* LINJ TO SET EIB ROUTINE IN SYNCH OR CHECK MODULE                    *
***********************************************************************
ERROR    EQU   *                  ERROR PROCESSING ROUTINE
         L     RETCODE,DCBGERR    GET ADDRESS OF EIB ROUTINE-8
         BAL   BACK,EIBRTN(RETCODE) LINK TO EIB ROUTINE
***********************************************************************
* LINK TO COMPLETION CODE ROUTINE IN SYNCH OR CHECK MODULE            *
***********************************************************************
         L     RETCODE,DCBGERR    GET ADDRESS OF RETURN CODE ROUTINE-16
         BAL   BACK,RETCDRTN(RETCODE) LINK TO RETURN CODE ROUTINE
*001918
***********************************************************************
* LINK TO USER SYNAD ROUTINE                                          *
***********************************************************************
         TM    IOBCSW+IOBSTUS(IOBR),UETEST DID UNIT EXCAPTION OCCUR
         BZ    NOTDONE            NO CONTINUE
         OI    DCBORBYT,EOF       POST EOF IN DCBORBYT
DONE     EQU   *                  RETURN TO USER
         NI    DCBIFLGS,ERROFF    SET DCB ERROR FLAGS OFF
NOERROR  LM    SREG1,REG9,USERSAVE(SAVR) RESTORE USER REGISTERS
         L     BACK,RETSAVE(SAVR) RESTORE RETURN ADDRESS
         BR    BACK               RETURN TO USER
NOTDONE  CLI   OFFSET(IOBR),MKLOP IS IT MKL
         BE    DONE               YES QUIT
         CLI   0(PARM1),RKBTEST   IS IT RKB
         BE    DONE               YES QUIT
         TM    DCBORBYT,SYNTEST   IN SYNAD ROUTINE
         BO    DONE               YES QUIT
         TM    DCBCIND2,QSAMTEST  IS IT QSAM
         BZ    BSAMROUT           NO BSAM
         LA    REG0,OFFSET        GET CCW OFFSET
         SLL   REG0,SHIFTHI       SHIFT TO HIGH ORDER BYTE
         OR    REG0,IOBR          POT IOB ADDRESS IN REG 0
TRY      EQU   *                  LINK TO SYNAD ROUTINE IF PRESENT
         LA    REG1,CNTRLERR      SET CONTROL ERROR BIT
         SLL   REG1,SHIFTHI       SHIFT TO HIGH ORDER BYTE
         OR    REG1,DCBR          GET DCB ADDRESS
         NI    DCBIFLGS,ERROFF    TURN OFF ERROR FLAGS
         OI    DCBORBYT,SYNTEST   TURN ON SYNAD BIT IN DCB
         L     RETCODE,DCBSYNAD   GET ADDRESS OF SYNAD ROUTINE
         ST    REG9,SAVE9(SAVR)   SAVE REGISTER 9
         LM    SREG1,REG9,USERSAVE(SAVR) RESTORE USER REGISTERS
         ST    REG1,USERSAVE(SAVR) SAVE DCB ADDRESS
         BALR  BACK,RETCODE       LINK TO SYNAD ROUTINE
         STM   REG3,REG9,SAVE39(SAVR) SAVE USER REGISTERS
         L     REG9,SAVE9(SAVR)   RESTORE REGISTER 9
         L     REG3,USERSAVE(SAVR) GET DCB ADDRESS
         ST    SREG1,USERSAVE(SAVR) SAVE USER REGISTER 2
         LR    DCBR,REG3          RESTORE DCB REGISTER
         NI    DCBIFLGS,ERROFF    SET DCB ERROR FLAGS OFF
         NI    DCBORBYT,SYNOFF    SET SYNAD IN CONTROL BIT OFF
         LTR   RETCODE,RETCODE    USER EXIT ADDRESS SPECIFIED
         BZ    DONE               NO RETURN TO USER
         NI    DCBORBYT,ZERO      CLEAR DCBORBYT
         TM    DCBCIND2,QSAMTEST  IS IT QSAM
         BZ    LOAD               NO
         MVC   DCBRECAD(LENGTH4),DCBEOBAD SET EOB CONDITION
LOAD     LM    SREG1,REG9,USERSAVE(SAVR) RESTORE USER REGISTERS
         BR    RETCODE            EXIT TO USER ROUTINE
BSAMROUT TM    DCBSYNAD+3,SYNADPRS IS A SYNAD ROUTINE PRESENT
         BZ    SYNPRES            YES PROCESS FOR SYNAD
***********************************************************************
* ABEND                                                               *
***********************************************************************
         LA    REG0,ONE           SET COMPLETION CODE TO 1
         SLL   REG0,TWELVE        ADJUST FOR EOV
         LR    REG1,DCBR          PUT DCB ADDRESS IN REG 1
         EOV   (REG1)             ABORT
SYNPRES  TM    DCBEIB,HE          HOPPER EMPTY PRESENT
         BZ    HPRFULL            NO
         TM    DCBOPTCD,EXITSPEC  HOPPER EMPTY EXIT SPECIFIED
         BZ    DONE               NO RETURN TO USER
HPRFULL  L     WORK1,ECBADR(IOBR) LOAD ECB ADDRESS
         MVC   XDECB(LENGTH4,SAVR),0(WORK1) MOVE ECB TO DECB
         LA    WORK2,LNGTYP       GET LENGTH AND TYPE
         ST    WORK2,DECBLT(SAVR) PUT IN DECB
         LA    WORK2,OFFSET(IOBR) GET CCW ADDRESS
         ST    WORK2,DECBCCW(SAVR) PUT IN DECB
         LA    WORK1,ACTIOB(IOBR) GET IOB ADDRESS
         ST    WORK1,DECBIOB(SAVR) PUT IN DECB
         ST    DCBR,DECBDCB(SAVR) PUT DCB ADDRESS IN DECB
         LA    REG0,DECBADDR(SAVR) PUT DECB ADDRESS IN REGISTER 0
         B     TRY                CONTINUE
* SET FOR RKB
SETRF    LA    CCWREG,0(CCWREG)   CLEAR HIGH ORDER BYTE
         SH    CCWREG,EIGHT       DECREMENT BY EIGHT
         MVC   OFFSET(CCWLENG,IOBR),0(CCWREG) MOVE CCW TO IOB + 40
* THIS CODE SETS UP TO ISSUE HDR OR RKB COMMAND
NOBUF    LA    CCWREG,OFFSET(IOBR) LOAD ADDRESS OF CHANNEL PROG START
         NI    CCWFLAGS(CCWREG),CCOFF TURN OFF COMMAND CHAINING BIT
         NI    DCBIFLGS,ERROFF    TURN OFF DCB ERROR FLAGS
         L     WORK1,0(CCWREG)    GET DATA ADDRESS
         LA    WORK1,0(WORK1)     CLEAR HIGH ORDER BYTE
         LH    WORK2,CCWCOUNT(CCWREG) GET BYTE COUNT
         BCTR  WORK2,0            SUBTRACT 1
         CLI   0(PARM1),HDRTEST   IS IT HDR
         BE    NOCLEAR            YES DO NOT CLEAR INPUT AREA
         SR    WORK1,WORK2        GET START OF I/O AREA
         ST    WORK1,OFFSET(IOBR) SET CORRECT DATA ADDRESS IN CCW
CLEAR    EX    WORK2,CLEAREX
NOCLEAR  EQU   *                  PREPARE TO ISSUE COMMAND
         MVI   0(CCWREG),RFOP     SET RF OP CODE
         L     REG8,IOBCSW(IOBR)  SAVE ADDRESS OF FAILINC CCW
         MVI   DCBOFFSR,OFFSET    POINT TO CNTRL CCW IN IOB
         L     WORK1,IOBSTADR-1(IOBR) SAVE START ADDRESS
         ST    CCWREG,IOBSTADR-1(IOBR) SET START ADDRESS
***********************************************************************
* EXCP AND WAIT                                                       *
***********************************************************************
         EXCP  ACTIOB(IOBR)       EXECUTE CHANNEL PROGRAM
         L     REG1,ECBADR(IOBR)  LOAD ECB ADDRESS
         WAIT  ECB=(REG1)         WAIT FOR EVENT TO COMPLETE
         MVI   DCBOFFSR,OFFSET1   RESTORE CCW OFFSCT IN DCB
         OI    IOBFL1(IOBR),IOBCCON SET COMMAND CHAINING BIT ON IN IOB
         ST    REG8,IOBCSW(IOBR)  RESTORE POINTER TO FAILING CCW
         ST    WORK1,IOBSTADR-1(IOBR) RESTORE START ADDRESS
         CLI   0(PARM1),RKBTEST   IS IT RKB
         BNE   COUNTERS           NO QUIT
***********************************************************************
* ROUTINE TO RIGHT ADJUST DATA FOR RKB                                *
***********************************************************************
         SR    WORK1,WORK1        CLEAR WORK
         LH    WORK1,CCWCOUNT(CCWREG) GET BYTE COUNT
         L     WORK3,0(CCWREG)    GET BUFFER ADDRESS
         LA    WORK3,0(WORK3)     CLEAR HIGH ORDER BYTE
         AR    WORK3,WORK2        POINT TO END OF BUFFER
         LR    CCWREG,WORK3       SAVE BUFFER ADDRESS
         SR    WORK2,WORK2        REGISTERS
TEST     CLI   0(WORK3),ZERO      IS BYTE 00
         BNE   MOVEDATA           NO ADJUST DATA
         BCT   WORK1,TRYAGAIN     IF MORE DATA TRY AGAIN
         B     COUNTERS           QUIT
TRYAGAIN BCTR  WORK3,0            DECREMENT BUFFER ADDRESS
         LA    WORK2,1(WORK2)     INCREMENT ZERO BYTE COUNTER
         B     TEST               TRY ANOTHER BYTE
MOVEDATA EQU   *                  MOVE ROUTINE TO RIGHT ADJUST DATA
MOVE     MVC   0(MOVEBYTE,CCWREG),0(WORK3) MOVE A BYTE
         BCTR  CCWREG,0           DECREMENT END OF BUFFER POINTER
         BCTR  WORK3,0            DECREMENT END OF DATA POINTER
         BCT   WORK1,MOVE         IF MORE DATA,MOVE IT
         LTR   WORK2,WORK2        ANY ZERO BYTES
         BZ    COUNTERS           NO ALL DONE
         LA    WORK3,1(WORK3)     POINT TO START OF BUFFER
         BCTR  WORK2,0            SUBTRACT 2 FROM COUNT
         EX    WORK2,CLEAREX1     CLEAR INPUT AREA
         B     COUNTERS           QUIT
* SET FOR HDR
SETHDR   L     WORK1,0(PARM1)     GET INPUT ADDRESS
         ST    WORK1,OFFSET(IOBR) PUT IN CCW
         MVI   OFFSET+CCWFLAGS(IOBR),SLION SET SLI FLAG ON
         MVI   OFFSET+CCWCOUNT+1(IOBR),BUFLENG SET TO ASSUMED LENGTH
         LH    WORK1,DCBBUFL      GET BUFFER LENGTH
         LTR   WORK1,WORK1        LENGTH SPECIFIED
         BZ    NOBUF              NO USE ASSUMED VALUE
         STH   WORK1,OFFSET+CCWCOUNT(IOBR) SET COUNT
         B     NOBUF              GO READ HEADER
CLEAREX  XC    0(1,WORK1),0(WORK1) EXECUTED INSTRUCTION TO CLEAR AEEA
CLEAREX1 XC    0(1,WORK3),0(WORK3) EXECUTED INSTRUCTION TO CLEAR AEEA
EIGHT    DC    H'08'              CONSTANT OF 8
IHADCB   DCBD  DSORG=PS           DCB DSECT
         END   IGG019VH
         TITLE 'IGG019VH  CNTRL MODULE FOR OCR'
OFFSET   EQU   40                 CCCW OFFSET IN IOB
OFFSET1  EQU   48                 POINTER TO NORMAL IOB CCW
RETCODE  EQU   15                 USED TO PASS RETURN CODE
REG1     EQU   1                  GENERAL REGISTER 1
REG9     EQU   9                  GENERAL REGISTER 9
BASER    EQU   9                  BASE REGISTER
DCBR     EQU   2                  POINTER TO DCB
IOBR     EQU   3                  POINTER TO IOB
IOBFL1   EQU   8                  DISPLACEMENT TO IOBFLAG1
IOBECBCC EQU   4                  DISPLACEMENT TO ECB CONDITION CODE
WORK1    EQU   4                  WORK REGISTER
PARM1    EQU   7                  POINTS TO PASSED PARAMETER
REG0     EQU   0                  PARAMETER PASSER
MKLCNT   EQU   24                 DISPLACEMENT TO MKL ERROR BUCKET
SREG1    EQU   2                  POINTER TO FIRST SAVED USER REGISTER
IOBSNS   EQU   11                 POINTER TO IOB SENSE BYTE
MKLOP    EQU   X'0B'              MKL COMMAND CODE
INCOP    EQU   X'4B'              INC COMMAND CODE
EJDOP    EQU   X'43'              EJD COMMAND CODE
SET1OR2  EQU   X'20'              SET FOR SSD STACKER 1 OR 2
SETSTK12 EQU   X'60'              SET FOR ESD STACKER 1 OR 2
SET3OR4  EQU   X'30'              SET SSD STACKER 3 OR 4
SLION    EQU   X'20'              SET SLI FLAG IN CCW ON
CCWFLAG  EQU   4                  DISPLACEMENT TO FLAG IN CCW
SET13    EQU   X'03'              SET STACKER 1 OR 3
SET24    EQU   X'0B'              SET STACKER 2 OR 4
TEST1OR3 EQU   X'01'              TEST FOR STACKER 1 OR 3
SETSTK34 EQU   X'70'              SET STACKER 3 OR 4 FOR ESD
TEST1OR2 EQU   3                  TEST FOR STACKER 1 OR 2
PARMDISP EQU   3                  DISPLACEMENT TO STACKER PARAMETER
INITCONT EQU   1                  INITIALIZE CCW COUNT
CCWCOUNT EQU   6                  DISPLACEMENT TO COUNT FIELD IN CCW
STACK1   EQU   X'63'              STACKER 1 ESD
STACK2   EQU   X'6B'              STACKER 2 ESD
STACK3   EQU   X'73'              STACKER 3 ESD
STCK1    EQU   X'23'              STACKER 1 SSD
STCK2    EQU   X'2B'              STACKER 2 SSD
STCK3    EQU   X'33'              STACKER 3 SSD
IOBCSW   EQU   16                 DISPLACEMENT TO CSW IN IOB
LNGTYP   EQU   X'80'              DECB LENGTH AND TYPE
CCWREG   EQU   6                  ADDRESS OF CCW
WORK2    EQU   5                  WORK REGISTER
INCAM    EQU   36                 DISPLACEMENT TO IOB DATA CHECK COUNT
DATCK    EQU   20                 DISPACEMENT TO UCB DATA CHECK COUNT
ILCNT    EQU   8                  DISPLACEMENT TO UCB IL COUNT
EQCNT    EQU   0                  DISPLACEMENT TO UCB EQUIPMENT CHK CNT
ECBCODE  EQU   4                  DISPLACEMENT TO ECB CODE IN IOB
IOBSTADR EQU   25                 DISPLACEMENT TO IOB START ADDRESS
REG8     EQU   8                  USED AS LINK TO EIB
RET1     EQU   7                  RETURN ADDRESS REGISTER
BACK     EQU   14                 RETURN TO USER
SAVR     EQU   13                 POINTER TO SAVE AREA
SAV12    EQU   12                 USER SAVE REGISTER
WORK3    EQU   8                  WORK REGISTER
RE2      EQU   2                  USER SAVE REGISTER
IGG019VH CSECT                    ENTRY POINT FOR CONTROL MODULE
         USING IGG019VH,RETCODE   ESTABLISH BASE REGISTER
         USING IHADCB,DCBR        ESTABLISH DCB ADDRESSIBILITY
         STM   SREG1,REG9,12(SAVR) SAVE USER REGISTERS
         ST    BACK,44(SAVR)      SAVE RETURN ADDRESS
         LR    BASER,RETCODE      GET BASE REGISTER SET UP
         DROP  RETCODE            DROP BASE REGISTER
         USING IGG019VH,BASER     ESTABLISH ADDRESSIBILITY
         LR    DCBR,REG1          GET DCB ADDRESS
         L     IOBR,DCBIOBA       GET IOB ADDRESS
         LR    PARM1,REG0         GET DESIRED OPERATION
         NI    IOBFL1(IOBR),X'BF' SET COMMAND CHAINING BIT OFF
         XC    OFFSET(8,IOBR),OFFSET(IOBR) CLEAR CCW AREA
         MVI   CCWCOUNT+OFFSET+1(IOBR),INITCONT SET COUNT TO 1
DETOP    SR    WORK1,WORK1        CLEAR WORK REGISTER
         IC    WORK1,0(PARM1)     GET BRANCH TABLE OFFSET
         B     BRTAB(WORK1)       GO TO DESIRED ROUTINE
BRTAB    EQU   *-4
         B     ESD                ESD DESIRED
         B     RKB                RKB DESIRED
         B     SETHDR             GO SET UP HDR CCW
         B     MKL                MKL DESIRED
         B     INC                INC DESIRED
         B     EJD                EJD DESIRED
         B     SSD                SSD DESIRED
ESD      CLI   PARMDISP(PARM1),TEST1OR2 IS STACKER 1 OR 2 WANTED
         BL    SET1               NO MUST BE 3 OR 4
         OI    OFFSET(IOBR),SETSTK34 SET FOR STACKER 3 OR 4
SET1     OI    OFFSET(IOBR),SETSTK12 SET FOR STACKER 1 OR 2
SETFINAL TM    PARMDISP(PARM1),TEST1OR3 IS OT STACKER 1 OR 3
         BO    SET2               YES SET A 3
         OI    OFFSET(IOBR),SET24 SET STACKER 2 OR 4
SET2     OI    OFFSET(IOBR),SET13 SET STACKER 1 OR 3
         B     ISSUE              GO ISSUE COMMAND
SSD      OI    CCWFLAG+OFFSET(IOBR),SLION SET SLI FLAG ON
         CLI   PARMDISP(PARM1),TEST1OR2 IS IT STACKER 1 OR 2
         BL    SET3               YES SET FOR 1 OR 2
         OI    OFFSET(IOBR),SET3OR4  SET FOR STACKER 3 OR 4
SET3     OI    OFFSET(IOBR),SET1OR2 SET FOR STACKER 1 OR 2
         B     SETFINAL           GO SET UP 2ND 4 BITS OF COMMAND CODE
MKL      MVI   OFFSET(IOBR),MKLOP SET MKL OP CODE
         B     ISSUE              GO ISSUE COMMAND
INC      MVI   OFFSET(IOBR),INCOP SET INC OP CODE
         B     ISSUE              GO ISSUE COMMAND
EJD      MVI   OFFSET(IOBR),EJDOP SET EJD OP CODE
         B     ISSUE              GO ISSUE COMMAND
RKB      L     CCWREG,IOBCSW(IOBR) GET CCW ADDRESS
         B     SETRF              GO READ
ISSUE    EQU   *
         NI    DCBIFLGS,X'3F'     CLEAR E-ROR FLAGS
         L     REG8,IOBCSW(IOBR)  SAVE ADDRESS OF FAILINC CCW
         MVI   DCBOFFSR,OFFSET    POINT TO CNTRL CCW IN IOB
         LA    WORK1,OFFSET(IOBR) GET CCW ADDRESS
         L     WORK2,IOBSTADR-1(IOBR) SAVE START ADDRESS
         ST    WORK1,IOBSTADR-1(IOBR) SET START ADDRESS
         EXCP  8(IOBR)
         WAIT  ECB=4(IOBR)        WAIT FOR COMPLETION
         OI    IOBFL1(IOBR),X'40' SET COMMAND CHAINING BIT ON
         MVI   DCBOFFSR,OFFSET1   RESTORE CCW OFFSCT IN DCB
         ST    REG8,IOBCSW(IOBR)  RESTORE POINTER TO FAILING CCW
         ST    WORK2,IOBSTADR-1(IOBR) RESTORE START ADDRESS
COUNTERS L     RETCODE,DCBGERR    GET ADDR OF CNTR UPDATE RTN - 24
         BAL   BACK,24(RETCODE)   LINK TO CNTR UPDATE ROUTINE
         LTR   REG1,REG1          COUNTERS SPECIFIED
         BZ    NOCOUNT            NO CONTINUE
         CLI   40(IOBR),X'0B'     IS IT MKL
         BNE   NOCOUNT
         L     WORK2,MKLCNT(REG1) GET MKL ERROR BUCKET
         LA    WORK2,1(WORK2)     BUMP ERROR COUNTER
         ST    WORK2,MKLCNT(REG1) UPDATE ERROR BUCKET
*
NOCOUNT  SR    RETCODE,RETCODE    SET RETURN CODE TO ZEROS
         TM    IOBSNS(IOBR),X'10' IS IT KEYBOARD CORRECTION
         BO    ERROR              YES PROCESS IT
         CLI   ECBCODE(IOBR),X'41' DID ANY PERMANENT ERRORS OCCUR
         BNE   NOERROR            NO RETURN TO USER
ERROR    EQU   *
         L     RETCODE,DCBGERR    GET ADDRESS OF EIB ROUTINE-8
         BAL   BACK,8(RETCODE)    LINK TO EIB ROUTINR
         L     RETCODE,DCBGERR    GET ADDRESS OF RETURN CODE ROUTINE-16
         BAL   BACK,16(RETCODE)   LINK TO RETURN CODE ROUTINE
         TM    IOBCSW+4(IOBR),X'01'  DID UNIT EXCEPTION OCCUR
         BZ    NOTDONE            NO CONTINUE
         OI    DCBORBYT,X'40'     POST EOF IN DCB
DONE     EQU   *
         NI    DCBIFLGS,X'3F'     SET DCB ERROR FLAGS OFF
NOERROR  LM    SREG1,REG9,12(SAVR) RESTORE USER REGISTERS
         L     BACK,44(SAVR)      RESTORE RETURN ADDRESS
         BR    BACK               RETURN TO USER
NOTDONE  CLI   40(IOBR),X'0B'     IS IT MKL
         BE    DONE               YES QUIT
         CLI   0(PARM1),X'08'     IS IT RKB
         BE    DONE               YES QUIT
         TM    DCBORBYT,X'80'     IN SYNAD ROUTINE
         BO    DONE               YES QUIT
         TM    DCBCIND2,X'01'     IS IT QSAM
         BZ    BSAMROUT           NO BSAM
         LA    REG0,OFFSET        GET CCW OFFSET
         SLL   REG0,24            SHOFT TO HIGH ORDER BYTE
         OR    REG0,IOBR          POT IOB ADDRESS IN REG 0
TRY      EQU   *
         LA    REG1,X'20'         SET CONTROL ERROR BI7
         SLL   REG1,24            SHIFT TO HIGH ORDER BYTE
         OR    REG1,DCBR          GET DCB ADDRESS
         NI    DCBIFLGS,X'3F' 1   TURN OFF ERROR FLAGS
         OI    DCBORBYT,X'80'     TURN ON SYNAD BIT IN DCB
         L     RETCODE,DCBSYNAD   GET ADDRESS OF SYNAD ROUTINE
         ST    DCBR,68(SAVR)      SAVE DCB POINTER
         LM    SREG1,REG9,12(SAVR) RESTORE USER REGISTERS
         BALR  BACK,RETCODE       LINK TO SYNAD ROUTINE
         STM   SREG1,REG9,12(SAVR) SAVE USER REGISTERS
         L     DCBR,68(SAVR)      RESTORE DCB POINTER
         NI    DCBIFLGS,X'3F'     SET DCB ERROR FLAGS OFF
         NI    DCBORBYT,X'7F'     SET SYNAD IN CONTROL BIT OFF
         LTR   RETCODE,RETCODE    USER EXIT ADDRESS SPECIFIED
         BZ    DONE               NO RETURN TO USER
         NI    DCBORBYT,X'00'     RESET DCBORBYT
         TM    DCBCIND2,X'01'     IS IT QSAM
         BZ    LOAD               NO
         MVC   DCBRECAD(4),DCBEOBAD SET EOB CONDITION
LOAD     LM    SREG1,REG9,12(SAVR) RESTORE USER REGISTERS
         BR    RETCODE            EXIT TO USER ROUTINE
BSAMROUT TM    DCBSYNAD+3,X'01'   IS A SYNAD ROUTINE PRESENT
         BZ    SYNPRES            YES PROCESS FOR SYNAD
         LR    REG0,IOBR          PUT IOB ADDRESS IN REG 0
         LR    REG1,DCBR          PUT DCB ADDRESS IN REG 1
         EOV   (REG1)             ABORT
SYNPRES  TM    DCBEIB,X'02'       HOPPER EMPTY PRESENT
         BZ    HPRFULL            NO
         TM    DCBOPTCD,X'10'     HOPPER EMPTY EXIT SPECIFIED
         BZ    DONE               NO RETURN TO USER
HPRFULL  L     WORK1,ECBCODE(IOBR) GET ECB ADDRESS
         LA    WORK1,0(WORK1)     CLEAR HIGH ORDER BYTE
         L     WORK2,0(WORK1)     GET ECB
         ST    WORK2,48(SAVR)     PUT IN DECB
         LA    WORK2,LNGTYP       GET LENGTH AND TYPE
         ST    WORK2,52(SAVR)     PUT IN DECB
         LA    WORK2,40(IOBR)     GET CCW ADDRESS
         ST    WORK2,60(SAVR)     PUT IN DECB
         LA    WORK1,8(IOBR)      GET IOB ADDRESS
         ST    WORK1,64(SAVR)     PUT IN DECB
         ST    DCBR,56(SAVR)      PUT IN DECB
         LA    REG0,48(SAVR)      PUT DECB ADDRESS IN REG 0
         B     TRY                CONTINUE
SETRF    LA    CCWREG,0(CCWREG)   CLEAR HIGH ORDER BYTE
         SH    CCWREG,EIGHT       DECREMENT BY EIGHT
         MVC   OFFSET(8,IOBR),0(CCWREG) MOVE CCW TO IOB+40
NOBUF    LA    CCWREG,OFFSET(IOBR) LOAD ADDRESS OF CHANNEL PROG START
         NI    4(CCWREG),X'BF'    TURN OFF COMMAND CHAINING
         NI    DCBIFLGS,X'3F'     CLEAR ERROR FLAGS
         L     WORK1,0(CCWREG)    GET DATA ADDRESS
         LA    WORK1,0(WORK1)     CLEAR HIGH ORDER BYTE
         LH    WORK2,6(CCWREG)    GET BYTE COUNT
         BCTR  WORK2,0            SUBTRACT 1
         CLI   0(PARM1),X'0C'     IS IT HDR
         BE    NOCLEAR            YES DO NOT CLEAR INPUT AREA
         SR    WORK1,WORK2        GET START OF I/O AREA
         ST    WORK1,OFFSET(IOBR) SET CORRECT DATA ADDRESS IN CCW
CLEAR    EX    WORK2,CLEAREX
NOCLEAR  EQU   *
         MVI   0(CCWREG),X'02'    SET RF OP CODE
         L     REG8,IOBCSW(IOBR)  SAVE ADDRESS OF FAILINC CCW
         MVI   DCBOFFSR,OFFSET    POINT TO CNTRL CCW IN IOB
         L     WORK1,IOBSTADR-1(IOBR) SAVE START ADDRESS
         ST    CCWREG,IOBSTADR-1(IOBR) SET START ADDRESS
         EXCP  8(IOBR)            ISSUE COMMAND
         WAIT  ECB=4(IOBR)        WAIT FOR COMPLETION
         MVI   DCBOFFSR,OFFSET1   RESTORE CCW OFFSCT IN DCB
         OI    IOBFL1(IOBR),X'40' SET COMMAND CHAINING BIT ON
         ST    REG8,IOBCSW(IOBR)  RESTORE POINTER TO FAILING CCW
         ST    WORK1,IOBSTADR-1(IOBR) RESTORE START ADDRESS
         CLI   0(PARM1),X'08'     IS IT RKB
         BNE   COUNTERS           NO QUIT
         SR    WORK1,WORK1        CLEAR WORK
         LH    WORK1,6(CCWREG)    GET COUNT
         L     WORK3,0(CCWREG)    GET BUFFER ADDRESS
         LA    WORK3,0(WORK3)     CLEAR HIGH ORDER BYTE
         AR    WORK3,WORK2        POINT TO END OF BUFFER
         LR    CCWREG,WORK3       SAVE BUFFER ADDRESS
         SR    WORK2,WORK2        REGISTERS
TEST     CLI   0(WORK3),X'00'     BYTE 00
         BNE   MOVEDATA           NO ADJUST DATA
         BCT   WORK1,TRYAGAIN     IF MORE DATA TRY AGAIN
         B     COUNTERS           QUIT
TRYAGAIN BCTR  WORK3,0            DECREMENT BUFFER ADDRESS
         LA    WORK2,1(WORK2)     INCREMENT ZERO BYTE COUNTER
         B     TEST               TRY ANOTHER BYTE
MOVEDATA EQU   *
MOVE     MVC   0(1,CCWREG),0(WORK3) MOVE A BYTE
         BCTR  CCWREG,0           DECREMENT END OF BUFFER POINTER
         BCTR  WORK3,0            DECREMENT END OF DATA POINTER
         BCT   WORK1,MOVE         IF MORE DATA,MOVE IT
         LTR   WORK2,WORK2        ANY ZERO BYTES
         BZ    COUNTERS           NO ALL DONE
         LA    WORK3,1(WORK3)     POINT TO START OF BUFFER
         BCTR  WORK2,0            SUBTRACT 2 FROM COUNT
         EX    WORK2,CLEAREX1     CLEAR INPUT AREA
         B     COUNTERS           QUIT
SETHDR   L     WORK1,0(PARM1)     GET INPUT ADDRESS
         ST    WORK1,40(IOBR)     PUT IN CCW
         MVI   44(IOBR),X'20'     SET SLI FLAG ON
         MVI   OFFSET+7(IOBR),X'1E' SET TO ASSUMED LENGTH
         LH    WORK1,DCBBUFL      GET BUFFER LENGTH
         LTR   WORK1,WORK1        LENGTH SPECIFIED
         BZ    NOBUF              NO USE ASSUMED VALUE
         STH   WORK1,46(IOBR)     SET COUNT
         B     NOBUF              GO READ HEADER
CLEAREX  XC    0(1,WORK1),0(WORK1)
CLEAREX1 XC    0(1,WORK3),0(WORK3)
EIGHT    DC    H'08'
IHADCB   DCBD  DSORG=PS,DEVD=OR   DCB DSECT                    @YM00635
DCBEIB   EQU   IHADCB+18
ERCTAR   EQU   IHADCB+4           POINTER TO DCB ERROR COUNTERS
DCBORBYT EQU   IHADCB+16
         END   IGG019VH
