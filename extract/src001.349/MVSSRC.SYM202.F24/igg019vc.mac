* /* START OF SPECIFICATIONS ****
*01* PROCESSOR = ASSEMXF-370R
**** END OF SPECIFICATIONS ***/
   TITLE   'IGG019VC - GET MOVE FIXED RECORDS (OCR)'
IGG019VC CSECT
***********************************************************    @YM00638
*MODULE-NAME                                                   @YM00638
* IGG019VC                                                     @YM00638
*                                                              @YM00638
*DESCRIPTIVE-NAME                                              @YM00638
* OCR GET, MOVE MODE, FIXED RECORDS                            @YM00638
*                                                              @YM00638
*COPYRIGHT                                                     @YM00638
* NONE                                                         @YM00638
*                                                              @YM00638
*CHANGE-ACTIVITY                                               @YM00638
*
* RELEASE 20 ADDITIONS/CHANGES/DELETIONS
* RELEASE 21 ADDITIONS/CHANGES/DELETIONS
* RELEASE 22 ADDITIONS/CHANGES/DELETIONS
* RELEASE 23 ADDITIONS/CHANGES/DELETIONS
* RELEASE 24 ADDITIONS/CHANGES/DELETIONS
* RELEASE 25 ADDITIONS/CHANGES/DELETIONS
* RELEASE 26 ADDITIONS/CHANGES/DELETIONS
* RELEASE 27 ADDITIONS/CHANGES/DELETIONS
*
*
* STATUS - CHANGE LEVEL 00  RELEASE 20
*
*
*FUNCTION-GET- TO MOVE A LOGICAL RECORD FROM A BUFFER TO A USER
*              WORKAREA. IF THE BUFFER IS EMPTIED A NEW ONE IS ACCEPTED
*              AFTER THE OLD ONE HAS BEEN SCHEDULED FOR REFILLING
*              BY THE END OF BLOCK ROUTINE
*         RELEASE- CAUSES THE REMAINING CONTENTS OF THE CURRENT BUFFER
*                  TO BE IGNORED
*
*ENTRY POINTS
*        LABEL  OCR010
*        LABEL  OCR020
*
*ENTRY INSTRUCTION SEQUENCE
*              GET                 RELEASE
*                LA      1,DCB       LA      1,DCB
*                L       15,48(1)    L       15,48(1)
*                BALR    14,15       BALR    14,8(15)
*
*INPUT FROM USER AS ADDRESSES IN FOLLOWING REGISTERS
*        REG   0    USED IN MOVE MODE-CONTAINS ADDRESS OF INPUT AREA
*        REG   1    DCB ADDRESS
*        REG   13   WORK-SAVE ADDRESS
*        REG   14   USER IN-LINE RETURN ADDRESS
*        REG   15   THIS ROUTINES INITIAL BASE ADDRESS
*
*OUTPUT REGISTER ADDRESSES AS FOLLOWS
*        REG   0    NOT APPLICABLE
*        REG   1    RECORD ADDRESS LOCATED FOR USER
*        REG   13   WORK-SAVE ADDRESS
*        REG   14   RETURN ADDRESS
*        REG   15   RETURN CODE
*        REG   2-12 AS UPON ENTRY TO THIS ROUTINE
*
*EXTERNAL ROUTINES
*
*        IGG019VE - INPUT ERROR ROUTINE WHICH DETECTS, CORRECTS DEVICE
*                   ERRORS AND RETURNS BLOCK OF DATA.
*        IGG019CC   END OF BLOCK ROUTINE WHICH SCHEDULES REQUESTS.
*EXITS
*        OCR025     BRANCH TO USER,RETURNS PARAMETERS
*        OCR034     BRANCH AND LINK TO END OF BLOCK ROUTINE
*        OCR090     BRANCH AND LINK TO END OF BLOCK ROUTINE
*        OCR040     BRANCH AND LINK TO INPUT ERROR ROUTINE
*        OCR105     BRANCH TO USER, RETURNS PARAMETERS
*
*TABLES/WORKAREAS
*
*        USER  SAVE/WORK AREA-LAST 13 WORDS USED
*        DCB
*
*        IOB
*
*ATTRIBUTES---REENTRANT,REUSABLE,PROBLEM PROGRAM MODE
*
*******************************************************************
*
*  ALL REGISTER EQUATES HAVE AN 'R' AT THE END OF THE SYMBOL
*
***********************************************************************
PARA1R   EQU   1                   PARAMETER REGISTER 1
BUFADR   EQU   1                   ADDRESS OF BUFFER
DCBR     EQU   2                   DCB ADDRESS
IOBADR   EQU   3                   IOB ADDRESS
EOBADR   EQU   4                   EOB ADDRESS
RECADR   EQU   5                   RECORD ADDRESS
LRECLR   EQU   6                   RECORD LENGTH
WORK3R   EQU   6                   WORK REGISTER
WORK1R   EQU   7                   WORK REGISTER
CON255R  EQU   7                   WORK REGISTER-CONTAINS 255
BASER    EQU   8                   BASE REGISTER
SAVR     EQU   13                  USER SAVE AREA
RETR     EQU   14                  RETURN ADDRESS
WORK2R   EQU   14                  WORK REGISTER
ENTRYR   EQU   15                  ENTRY ADDRESS
LNGHR    EQU   15                  WORK REGISTER-CONTAINS BUFFER LNGH
***********************************************************************
EOFBIT   EQU   X'40'               DCBORBYT-END OF FILE BIT
BUFPRIME EQU   X'20'               DCBORBYT-BUFFERS PRIMED BIT
ERRFLGS  EQU   X'3F'               DCBIFLGS-DCB ERROR FLGS OFF
BUF      EQU   0                   OFFSET OF BUFFER ADDRESS IN CCW
CNT      EQU   6                   OFFSET OF COUNT IN CCW
LINECNT  EQU   28                  OFFSET OF LINE COUNT IN ERROR CNTRS
NOERROR  EQU   X'00'               TESTS FOR RETURN CODE OF ZERO
C255     EQU   255                 USED TO CLEAR 256 BYTES OF CORE
C256     EQU   256                 USED TO INCREMENT POINTER BY 256
ADDRESS  EQU   3                   LENGTH OF AN ADDRESS
ONE      EQU   1                   USED TO INCREMENT BY 1
USERREG  EQU   36                  SAVE AREA OFFSET TO REG2
RETREG   EQU   20                  SAVE AREA OFFSET TO REG14
SAVREG   EQU   20                  SAVE AREA OFFSET TO STORE REGISTERS
REG0SAV  EQU   28                  OFFSET IN SAVE AREA FOR REGISTER 0
RELEASE  EQU   X'F0'               USED IF BUFFER IS TO BE RELEASED
LNGH     EQU   2                   LENGTH OF LRECL AND BUFL
*
*
*
 EJECT
         USING IGG019VC,ENTRYR     USE ENTRY POINT AS A BASE (REG 15)
         USING IHADCB,PARA1R       USE DCB ADDRESS AS A BASE (REG 1)
*
OCR010   B     OCR030              BRANCH AROUND RELEASE
ZEROS    DC    X'00000000'         FILL FOR ENTRY AT +8 - USE AS CON=0
*
OCR020   CLC   DCBEOBAD+1(ADDRESS),DCBRECAD+1 END OF BLOCK YET
         BCR   8,RETR              YES, RETURN TO USER
         OI    DCBIOBA,RELEASE     SET RELEASE SWITCH
OCR025   BR    RETR                RETURN TO USER
OCR030   STM   RETR,BASER,SAVREG(SAVR) SAVE REGISTERS
*
         DROP  ENTRYR              DROP REG 15 AS BASE FOR MODULE
         DROP  PARA1R              DROP REG  1 AS BASE FOR DCB
         USING IGG019VC,BASER      NEW  BASE REG ADDRESSABILITY
         USING IHADCB,DCBR         NEW  DCB  REG ADDRESSABILITY
*
         LR    BASER,ENTRYR        LOAD BASE ADDRESS
         LR    DCBR,PARA1R         LOAD DCB  ADDRESS
         LM    IOBADR,RECADR,DCBIOBA  LOAD WORK REGS
         TM    DCBORBYT,BUFPRIME   ARE THE BUFFERS PRIMED
         BNZ   OCR035              YES,BRANCH
*
***********************************************************************
*
*        PRIME BUFFERS SUBROUTINE
*
***********************************************************************
         NI    DCBIFLGS,ERRFLGS    MAKE SURE ERROR FLAGS ARE OFF
*
         SR    WORK3R,WORK3R       CLEAR A WORK REGISTER
         IC    WORK3R,DCBBUFNO     GET NUMBER OF BUFFERS
         B     OCR033              BRANCH TO SCHEDULE BUFFERS
*
OCR032   L     IOBADR,0(IOBADR)    GET NEXT IOB ADDRESS
         ST    IOBADR,DCBIOBA      STORE ADDRESS OF NEXT IOB TO THE DCB
OCR033   BAL   RETR,OCR060         BRANCH AND LINK TO CLEAR THE BUFFER
*
         L     ENTRYR,DCBEOB       LOAD ADDRESS OF END OF BLOCK ROUTINE
*
OCR034   BALR  RETR,ENTRYR         BRANCH AND LINK TO EOB ROUTINE
         BCT   WORK3R,OCR032       IF MORE IOBS TO SCHEDULE ,BRANCH
         OI    DCBORBYT,BUFPRIME   SET BUFFERS PRIMED SWITCH ON
*
***********************************************************************
*
OCR035   TM    DCBIOBA,RELEASE     RELEASE CALLED FOR
         BO    OCR055              BRANCH TO SCHEDULE BUFFER
*
         CR    RECADR,EOBADR       HAS END OF BLOCK BEEN REACHED YET
         BL    OCR045              NO, BRANCH
OCR037   L     ENTRYR,DCBGERR      LOAD ADDRESS OF SYNCH AND ERROR PROC
OCR040   BALR  RETR,ENTRYR         BRANCH AND LINK TO GERR RTN
OCR045   CLC   DCBERRCN+1(ADDRESS),ZEROS ARE COUNTERS SPECIFIED
         BE    OCR050              NO, BRANCH
*
         L     WORK1R,DCBERRCN     LOAD ADR OF 32 BYTE COUNT AREA
         L     WORK2R,LINECNT(WORK1R) LOAD NO. OF LINES READ
         LA    WORK2R,ONE(WORK2R)  ADD 1 TO COUNT
         ST    WORK2R,LINECNT(WORK1R) STORE COUNT
OCR050   L     PARA1R,REG0SAV(SAVR) MAKE WORK AREA ADDRESSABEL
         LH    LRECLR,DCBLRECL     LOAD LENGTH OF RECORD--LESS THAN 256
         BCTR  LRECLR,0            DECREMENT BY 1
*
         EX    LRECLR,OCR076E      MOVE RECORD TO WORK AREA
*
         CLC   DCBBUFL(LNGH),DCBLRECL MORE THAN 1 REC IN A BUFFER
         BH    OCR110              YES, BRANCH
*
         MVC   DCBRECAD+1(ADDRESS),DCBEOBAD+1 SIMULATE END OF BLOCK
OCR055   LA    RETR,OCR085         LOAD RETURN ADDRESS FOR SUBROUTINE
 EJECT
***********************************************************************
*
*        CLEAR BUFFER SUBROUTINE
*
***********************************************************************
OCR060   SR    WORK1R,WORK1R       CLEAR REGISTER
         IC    WORK1R,DCBOFFSR     GET OFFSET OF CHANNEL PROGRAM
         AR    WORK1R,IOBADR       GET ADDRESS OF CHANNEL PROGRAM
         L     BUFADR,BUF(WORK1R)  LOAD BUFFER ADDRESS
         LA    BUFADR,ONE(BUFADR)    CLEAR HI BYTE AND INCREMENT BY 1
         SH    BUFADR,CNT(WORK1R)  SUBTRACT RECORD LENGTH
         LH    LNGHR,DCBBUFL       LOAD LENGTH OF BUFFER
         LA    CON255R,C255        LOAD CONSTANT = 255
         BCTR  LNGHR,0             DECREMENT LENGTH BY 1
*
OCR070   CR    LNGHR,CON255R       COMPARE LENGTH TO CLEAR TO 255
         BNH   OCR080              IF 255 OR LESS,BRANCH
*
         EX    CON255R,OCR075E     CLEAR 256 BYTES
*
         SR    LNGHR,CON255R       SUBTRACT 255 FROM AMOUNT TO BE CLEAR
         BCTR  LNGHR,0             SUBTRACT ONE MORE
*
         LA    BUFADR,C256(BUFADR)  INCREMENT BUFFER ADDRESS BY 256
         B     OCR070              BRANCH TO CLEAR NEXT PORTION OF BUF
*
OCR075E  XC    0(1,BUFADR),0(BUFADR) CLEAR INSTRUCTION USED BY EXECUTE
OCR076E  MVC   0(1,PARA1R),0(RECADR) MOVE  INSTRUCTION USED BY EXECUTE
*
*
*
OCR080   EX    LNGHR,OCR075E       CLEAR REMAINDER OF BUFFER
         BR    RETR                BRANCH TO CALLING ROUTINE
***********************************************************************
 EJECT
OCR085   TM    DCBORBYT,EOFBIT     TEST IF END OF FILE IS ON
         BO    OCR095              IF YES, DO NOT SCHEDULE, BRANCH
         L     ENTRYR,DCBEOB       LOAD END OF BLOCK ROUTINE ADDRESS
OCR090   BALR  RETR,ENTRYR         BRANCH AND LINK TO END OF BLOCK RTN
*
OCR095   TM    DCBIOBA,RELEASE     IS RELEASE SWITCH ON
         BO    OCR037              YES, BRANCH TO GET NEW BUFFER
*
         SR    ENTRYR,ENTRYR       CLEAR REGISTER
         CLI   DCBEIB+1,NOERROR    IS RETURN CODE = 0
         BE    OCR100              YES, BRANCH TO RESTORE REGS
*
         IC    ENTRYR,DCBEIB+1     LOAD RETURN CODE
         XC    DCBEIB+1(ONE),DCBEIB+1 CLEAR RETURN CODE SAVE AREA
*
OCR100   LM    DCBR,BASER,USERREG(SAVR) RESTORE  USER REGISTERS
         L     PARA1R,REG0SAV(SAVR) RESTORE WORK AREA ADDRESS
         L     RETR,RETREG(SAVR)   RESTORE RETURN ADDRESS
OCR105   BR    RETR                RETURN TO USER
*
OCR110   L     RECADR,DCBRECAD     LOAD ADDRESS OF CURRENT RECORD
         AH    RECADR,DCBLRECL     DETERMINE NEXT RECORD ADDRESS
         ST    RECADR,DCBRECAD     STORE ADDRESS OF NEXT RECORD
         CLC   DCBEOBAD+1(ADDRESS),DCBRECAD+1 IS IT END OF BLOCK YET
         BNH   OCR055              YES, BRANCH
         SR    ENTRYR,ENTRYR       SET RETURN CODE TO ZERO
         B     OCR100              BRANCH TO RETURN TO USER
         CNOP  0,8                 PAD MODULE  TO DOUBLE WORD
         DCBD  DSORG=PS,DEVD=OR                                @YM00635
         END
