 TITLE 'IEBISPL - IEBISAM UTILITY PROGRAM - PRINT LOGICAL ROUTINE'
*STATUS AND CHANGE LEVEL 000
*FUNCTION/OPERATION-THIS MODULE PRINTS THE DATA RECORDS OF AN
*   INDEXED SEQUENTIAL DATA SET USING THE QUEUED INDEX SEQUENTIAL
*   ACCESS METHOD TO READ THE RECORDS AND THE QUEUED SEQUENTIAL ACCESS
*   METHOD TO WRITE THE RECORDS. THE RECORDS ARE RETRIEVED IN LOGICAL
*   SEQUENCE FROM THE PRIME AND OVERFLOW AREAS
*
*
*
*
*
*
*
*ENTRY POINTS - IEBISPL - TO OPEN THE INPUT AND THE PRINT DATA SETS,
*   TO GET THE ISAM RECORDS, BUFFER THEM, PASS CONTROL TO A USER'S EXIT
*   PRINT THE RECORDS, CLOSE THE DATA SETS AND GIVE CONTROL TO IEBISF.
*
*INPUT - COMMON WORK AREA SET UP
*
*        ISINVOK  - ADDRESS OF PARM LIST FOR INVOCATION
*        ISPRINT  - DDNAME FOR PRINT DATA SET
*        ISUT1    - DDNAME FOR INPUT
*        ISUT2    - DDNAME FOR OUTPUT
*        ISPAGE   - PAGE NUMBER TO BE USED
*        ISCNTRL  - ISSWD
*                   OPTIONALLY - ISSWN
*WORK AREA SET UP
*   REGISTER 13 CONTAINS THE ADDRESS OF THE CALLING PROGRAM'S SAVE AREA
*   REGISTER 14 CONTAINS THE RETURN ADDRESS, AND REGISTER 15 CONTAINS
*   THE ADDRESS OF THIS MODULE FOR EVERY ENTRY TO THIS MODULE.
*
*OUTPUT- LOGICAL PRINT OUT OF AN INDEXED SEQUENTIAL DATA SET,MESSAGE
*   NUMBER/COMPLETION CODE
*
*        ISINVOK  - ADDRESS OF PARM LIST FOR INVOCATION
*        ISPRINT  - DDNAME FOR SYSPRINT
*        ISUT1    - DDNAME FOR INPUT
*        ISUT2    - DDNAME FOR OUTPUT
*        ISCOMP   - COMPLETION CODE TO BE RETURNED
*        ISMESS   - MESSAGE NUMBER OF MESSAGE TO BE PRINTED
*        ISPAGE   - PAGE NUMBER TO BE USED
*        XCTLAREA & WHICH - SET UP FOR XCTL TO IEBISF
*
*
*EXTERNAL ROUTINES - NONE
*
*EXITS- NORMAL - IEBISF - AFTER THE DATA SET HAS BEEN PRINTED
*     - ERROR  - IEBISF - WHENEVER ANY ERROR CONDITION IS ENCOUNTERED
*   WITH A MESSAGE NUMBER AND/OR A COMPLETION CODE.
*
*ATTRIBUTES - REENTRANT
*
*TABLES/WORKAREAS
*
*REGISTER ASSIGNMENTS
*
PAREG0   EQU   0                        PARMETER REGISTER
PAREG1   EQU   1                        PARAMETER REGISTER
CONS     EQU   2
WK3      EQU   3                        WORK REGISTER
WK4      EQU   4                        WORK REGISTER
WK5      EQU   5                        WORK REGISTER
WK6      EQU   6                        WORK REGISTER
OPREG    EQU   7                        POINTER REGISTER
IRETREG  EQU   8                        INTERNAL RETURN REGISTER
GOREG    EQU   9                        POINTER REGISTER
BASEREG  EQU   10                       BASE REGISTER
WORKAREA EQU   11                       WORK AREA REGISTER
PTREG    EQU   12
SAVREG   EQU   13                       SAVE AREA REGISTER
RETREG   EQU   14                       RETURN AREA REGISTER
ADDR     EQU   15                       BASS ADDRESSABILITY/RETURN CODE
         EJECT
IEBISPL  CSECT
*
*A236500                                                       @ZA06559
*1770272100-272800                                                 IV0I
*A417700,417800                                                  A41745
*A215620-215660,406100,406500,411500,470000-470500,472000,       A41801
*A474000-475500,478100-478400,490500,634804-634848,634850-634870 A41801
*A634520-634560                                                  A41801
*D468000,470000,472000,474000,634850                             A41801
*STANDARD LINKAGE CONVENTION
         SAVE  (14,12),T,ISPL-67-V1     SAVE CALLING PROGRAMS REGISTERS
         USING IEBISPL,BASEREG          ESTABLISH ADDRESSABILITY
         LR    BASEREG,ADDR
         LR    WORKAREA,PAREG1          PICK UP WORK AREA POINTER
         USING IEBWORK,WORKAREA
         ST    SAVREG,SAVE1BK           SET BACK CHAIN POINTER
         LR    SAVREG,WORKAREA          UPDATE TO NEW SAVE AREA
         LA    WK4,SAVE2                SET UP FORWARD CHAIN POINTER
         ST    WK4,SAVE1FD                 TO NEXT SAVE AREA
         LA    GOREG,DCBAR1             POINT TO INPUT DCB
         LA    PTREG,DCBAR2             POINT TO OUTPUT DCB
         USING IHADCB,GOREG
*THIS SECTION MOVES THE DCB'S AND THE OPENL FORMS TO THE WORK AREA TO
*MAINTAIN REENTRABILITY
         MVC   DCBAR1(DCBOUT-DCBIN),DCBIN
         MVC   DCBAR2(OPENINL-DCBOUT),DCBOUT
         MVC   DCBDDNAM(8),ISUT1        MOVE INTO DCB THE OUTPUT DDNAME
         DROP  GOREG
         USING IHADCB,PTREG
         MVC   DCBDDNAM(8),ISUT2        MOVE INTO DCB THE OUTPUT DDNAME
         MVC   REENTAR(CLOSEL-OPENINL),OPENINL  MOVE L FORM OF OPEN TO
*                                          WORK AREA
         OPEN  (DCBAR1,(INPUT),DCBAR2,(OUTPUT)),MF=(E,REENTAR)
         TM    DCBOFLGS,X'10'           WAS OPEN SUCCESSFUL FOR OUTPUT
         BZ    SETSW                    NO, SET FOR ERROR EXIT
         LH    WK6,DCBLRECL             PICK UP OUTPUT RECORD LENGTH
         DROP  PTREG
         USING IHADCB,GOREG
         TM    DCBOFLGS,X'10'           WAS OPEN SUCCESSFUL FOR INPUT
         BZ    SETSW                    NO, SET FOR ERROR EXIT
         TM    ISCOMP+1,X'FF'           CHECK FOR INVALID DCB
         BC    4,CLOSEOUT               INVALID DCB, CLOSE AND QUIT
         TM    DCBRECFM,X'01'           CHECK FOR BLOCKED RECORDS
         BC    1,LOADL                  YES, BLOCKED RECORDS
         OC    DCBRKP(2),DCBRKP         CHECK FOR RKP=0
         BZ    LOADL                    YES, RKP=0
         SETL  DCBAR1,BD                SET FOR RETRIEVING DATA PORTION
LOADL    LH    WK4,DCBLRECL             PICK UP LOGICAL RECORD LENGTH
         CLC   DCBRKP(2),=H'00'         CHECK FOR RELATIVE KEY
*                                           POSITION OF ZERO
          BNE   SETSKIP                  NO,NOT ZERO
          SR    WK5,WK5
         TM    DCBRECFM,X'10'           CHECK FOR BLOCKED RECORDS
         BC    1,SETSKIP                YES,BLOCKED REOCRDS
          IC    WK5,DCBKEYLE             PICK UP KEYLENGTH
          AR    WK4,WK5                  ADD TO PROVIDED LRECL
SETSKIP   MVI   HEADERC,X'F1'            SET FOR SKIP TO NEW PAGE
         MVI   HEADERT,C' '             SET HEADER TO BLANKS
         MVC   HEADERT+1(143),HEADERT
         SR    CONS,CONS
         CH    WK6,=H'11'               CHECK FOR OUTPUT TO BE LESS
*                                          THAN 11 BYTES
         BL    SETNONE                  YES, LESS THAN 11 - NO HEADING
         CH    WK6,=H'80'               CHECK FOR OUTPUT TO BE LESS
*                                          THAN 80 BYTES
         BNL   PUTINALL                 NO, NOT LESS THAN EIGHTY
PAGEINST LR    WK5,WK6                  PICK UP SPECIFIED OUTPUT LENGTH
         SH    WK5,=H'10'               BACK UP 10 BYTES FROM END OF
*                                          OUTPUT TO PUT OUT PAGE
*                                          NUMBER
         CH    WK5,=H'135'         LRECL LESS THAN 145 ?         A41801
         BNH   NORMPROC             YES, CONT NORM. PROCC.       A41801
         LA    WK5,135              NO, SET PAGE NBR 135 FURTH   A41801
NORMPROC LA    WK3,HEADERT              PICK UP HEADER ADDRESS   A41801
         AR    WK3,WK5                  CALCULATE ADDRESS WHERE PAGE
*                                          NUMBER IS TO BEGIN
         MVC   0(4,WK3),PAGE            MOVE IN 'PAGE'
         LA    WK3,5(0,WK3)             UPDATE POINTER
         ST    WK3,PAGEPTR              SAVE POINTER TO PAGE NUMBER
         ST    CONS,PAGENO              INITIALIZE PAGE NUMBER
         B     CHEKEXIT
SETNONE  ST    CONS,PAGEPTR             SET PAGE POINTER TO ZERO TO
*                                          INDICATE NO HEADING IS TO BE
*                                          PRINTED
         B     CHEKEXIT
PUTINALL MVC   HEADERT+2(7),PROGNAME    MOVE IN PROGRAM NAME
         MVC   HEADERT+58(8),TARGET     MOVE IN MONTH OF YEAR
         MVC   REENTAR(MOVEDATA-READJL),READJL   FOR REENTRABILITY
         LA    WK3,RECADDR              PICK UP DCB EXIT ADDRESS
         ST    WK3,QISAM
         MVC   DCBEXLST+1(3),QISAM+1
         LA    WK3,QISAM                POINT TO AREA TO BE USED
         ST    WK3,RECADDR              SET UP EXIT LIST
         MVI   RECADDR,X'87'            SET FOR LAST EXIT
         RDJFCB (DCBAR1),MF=(E,REENTAR)
         XC    DCBEXLST+1(3),DCBEXLST+1
         MVC   HEADERT+12(44),QISAM     MOVE IN DSNAME
         B     PAGEINST
CHEKEXIT CLI   EXITADDR,C' '            CHECK FOR A USER EXIT
         BE    DOGET                    NO, GO AROUND LOAD
         LOAD  EPLOC=EXITADDR
         ST    PAREG0,ALIGN             SAVE USER'S ROUTINE ADDRESS
DOGET    BCTR  WK6,0                    REDUCE LENGTH OF OUTPUT RECORD
*                                          BY ONE TO ACCOUNT FOR THE
*                                          ASA BYTE
         SPACE 3
         LA    WK4,1(0,WK4)             ADD 1 BYTE TO WK4      @ZA06559
         GETMAIN R,LV=(4)               GET BUFFER AREA FOR LOGICAL
*                                          RECORD OF INPUT DATA SET
         ST    WK4,XCTLAREA+4           SAVE GOTTEN CORE LENGTH
         LR    CONS,PAREG1              PICK UP ADDRESS OF BUFFER
         LR    IRETREG,CONS
         PUT   DCBAR2                   GET BUFFER ADDRESS
         LR    PTREG,PAREG1        MOVE BUFFER ADDRESS FOR THE GET
         XC    REENTAR(4),REENTAR       CLEAR RECORD # HOLD AREA
         BAL   RETREG,PRTHDR            GO TO PRINT HEADER
GETNEXT  GET   DCBAR1,(2)               GET ISAM RECORD AND MOVE TO
*                                          WORK AREA
GOTO     L     WK5,REENTAR
         A     WK5,=F'1'                UPDATE RECORD NUMBER
         ST    WK5,REENTAR              SAVE NEW RECORD NUMBER
         CVD   WK5,DOUBLE
         MVI   0(PTREG),C' '            BLANK PRINT FIELD
         BCTR  WK6,0
         EX    WK6,MOVEBLNK
         LA    WK6,1(0,WK6)
         DROP  GOREG
         LA    WK3,DCBAR1               PICK UP INPUT DCB ADDR
         USING IHADCB,WK3
         TM    DCBRECFM,X'40'          TEST FOR V-TYPE RECORD      IV0I
         BZ    FIXRECFM                NO-FIXED RECFM-BRANCH       IV0I
         LH    WK4,0(CONS)             RECFM=V-GET LENGTH OF THIS  IV0I
*                                      RECORD FROM DESCRIPTOR WORD IV0I
         B     FIXAVAR                 CONTINUE                    IV0I
FIXRECFM LH    WK4,DCBLRECL            RECFM=F - GET LENGTH OF     IV0I
*                                      OF THIS RECORD FROM THE DCB IV0I
FIXAVAR  CLC   DCBRKP(2),=H'00'        CHECK FOR RELATIVE KEY      IV0I
*                                        POSITION OF ZERO
         BNE   TESTEXIT                 NO, NOT ZERO
         TM    DCBRECFM,X'10'           CHECK FOR BLOCKED RECORDS
         BC    1,TESTEXIT               YES,BLOCKED REOCRDS
         SR    WK5,WK5
          IC    WK5,DCBKEYLE             PICK UP KEYLENGTH
          AR    WK4,WK5                  ADD TO PROVIDED LRECL
         DROP  WK3
TESTEXIT CLI   EXITADDR,C' '            CHECK FOR USER EXIT
         BNE   SETUPEX                  YES SET UP FOR EXIT
RETEXIT  CLI   LENSW,X'FF'             LRECL LESS THAN 18        A36104
         BE    MOVEHEAD                YES,BYPASS PRINT REC #    A36104
         UNPK  13(5,PTREG),DOUBLE+4(4)  CONVERT 5 DIGITS FOR PRINT36104
         OI    17(PTREG),X'F0'
         MVI   0(PTREG),X'40'           SET FOR A SKIP OF ONE LINE
         MVC   6(6,PTREG),RECORD        MOVE IN HEADING TEXT
         PUT   DCBAR2
         LR    PTREG,PAREG1             SAVE BUFFER POINTER
         BCTR  GOREG,0                  REDUCE LINE COUNT
         LTR   GOREG,GOREG              CHECK FOR NEW PAGE
         BC    7,MOVEHEAD               NO, NO NEW PAGE
         BAL   RETREG,PRTHDR            GO TO PRINT HEADER
MOVEHEAD TM    ISCNTRL,ISSWN            CHECK FOR NO CONVERT
         BC    1,MOREDATA              NO,PICK UP REGULAR LENGTHS
         SLL   WK4,1                   DOUBLE NUMBER OF INPUT
*                                         CHARACTERS
MOREDATA CR    WK4,WK6                  WHICH LOGICAL RECORD LENGTH
*                                          GREATER
         BH    USEPRT                   PRINT LENGTH LESS
         MVI   0(PTREG),C' '       BLANK PRINT FIELD
          BCTR WK6,0
         EX    WK6,MOVEBLNK
          LA    WK6,1(0,WK6)
         LR    OPREG,WK4                USE LENGTH FROM INPUT SIDE
         SR    WK4,WK6                  SET LENGTH TO ZERO OR NEGATIVE
         B     TESTCVRT
USEPRT   LR    OPREG,WK6                USE LENGTH FROM OUTPUT SIDE
         SR    WK4,WK6                  REDUCE LENGTH OF INPUT LEFT
TESTCVRT TM    ISCNTRL,ISSWN            CHECK FOR NO CONVERT
         BC    8,CONVERT                YES GO TO CONVERT
          BCTR OPREG,0
          EX    OPREG,MOVEDATA           MOVE IN DATA
          LA    OPREG,1(0,OPREG)
         AR    IRETREG,OPREG            UPDATE POINTER TO BUFFER
PRINTLIN MVI   0(PTREG),X'40'           SET TO PRINT ONE LINE
NEXTLINE PUT   DCBAR2                   PUT OUT RECORD AND GET NEXT
*                                          BUFFER ADDRESS
         LR    PTREG,PAREG1        MOVE BUFFER ADDRESS FOR THE GET
         BCTR  GOREG,0                  REDUCE LINE COUNT
         LTR   GOREG,GOREG              CHECK FOR NEW PAGE
         BC    7,CHEKNEXT               NO, NO NEW PAGE
         BAL   RETREG,PRTHDR            PRINT NEW PAGE HEADING
CHEKNEXT LTR   WK4,WK4                  CHECK FOR ALL DATA MOVED
         BC    2,MOREDATA               NO, MOVE MORE DATA
         CLI   ISMESS+1,X'05'           CHECK FOR CLOSE REQUESTED
         BE    EODADIN                  YES, GO TO CLOSE
         LR    IRETREG,CONS             RESET BUFFER POINTER
         B     GETNEXT
SETUPEX  L     ADDR,ALIGN               PICK UP USER ROUTINE ADDRESS
         LR    PAREG1,CONS              PASS POINTER TO INPUT BUFFER
         LR    PAREG0,PTREG             PASS POINTER TO HEADER
         BALR  RETREG,ADDR              PASS CONTROL TO USER'S ROUTINE
         LR    CONS,PAREG1              RESTORE BUFFER POINTERS
         C     ADDR,=F'0'                CHECK FOR ZERO RETURN CODE
         BE    RETEXIT                   PRINT THIS ONE
         C     ADDR,=F'4'                CHECK FOR RETURN CODE 4
         BE    SETOFF                    PRINT THIS ONE AND CLOSE
         C     ADDR,=F'8'               CHECK FOR RETURN CODE 8
         BE    GETNEXT                  DON'T PRINT THIS ONE
         C     ADDR,=F'12'              CHECK FOR RETURN CODE 12
         BE    SETOFFA                  DON'T PRINT THIS ONE AND CLOSE
ILLEGAL   MVI   ISMESS+1,X'06'           SET MESSAGE NUMBER TO 6
         MVI   ISCOMP+1,X'0C'           SET CONDITION CODE
EODADIN  MVI   0(PTREG),C' '       MOVE BLANK IN FOR PROPOGATION
         BCTR   WK6,0              SUBTR. ONE FOR EX STATM.      A41801
         CLI   LENSW,X'00'         LRECL GREATER THAN 18 ?       A41801
         BE    NORMALMS                YES,GIVE NORMAL MESSAGE   A36104
         EX    WK6,MOVEBLNK            BLANK OUT BUFFER          A36104
         MVC   1(3,PTREG),ENDOUT+3      ONLY 'END' AS MSG        A36104
         B    BRANCHSW                 GO TO CLOSE RTN           A36104
NORMALMS EX    WK6,MOVEBLNK            BLANK OUT BUFFER          A36104
         MVC   1(16,PTREG),ENDOUT       MOVE IN MESSAGE
BRANCHSW MVC   REENTAR(READJL-CLOSEL),CLOSEL
         LA    WK6,1(WK6)          RESET CORRECT LRECL-1         A41801
*                                          MAINTAIN REENTRABILITY
CLOSEOUT CLOSE (DCBAR1,,DCBAR2,LEAVE),MF=(E,REENTAR)
         CLI   ISMESS+1,X'07'           CHECK FOR MISSING DD
         BE    COMEBCK                  YES, BYPASS FREEMAIN
         CLI   ISMESS+1,X'01'           CHECK FOR DCB ERROR
         BE    COMEBCK                  YES,A DCB ERROR
         FREEPOOL DCBAR1                FREEPOOL INPUT BUFFER    A41745
         FREEPOOL DCBAR2                FREEPOOL OUTPUT BUFFER   A41745
*
         L     PAREG0,XCTLAREA+4        PICK UP LENGTH FOR FREEMAIN
         LR    PAREG1,CONS              SET UP POINTER TO AREA
         FREEMAIN R,LV=(0),A=(1)
*
         CLI   EXITADDR,C' '            CHECK FOR USER EXIT
         BE    COMEBCK                  NO, NO USER EXIT
         DELETE EPLOC=EXITADDR
COMEBCK  SR    WK6,WK6                  SET UP XCTL AREA
         ST    WK6,XCTLAREA+4
         MVI   WHICH+6,C' '
         MVI   WHICH+5,C'F'             MOVE INTO XCTLAREA NAME OF NEXT
*                                          MODULE-IEBISF
         LR    PAREG1,WORKAREA          SAVE WORKAREA POINTER
         L     SAVREG,4(0,SAVREG)       POP UP SAVE AREA
         L     RETREG,12(0,SAVREG)      RESTORE REGISTER FOURTEEN
         XCTL  (2,12),MF=(E,(1)),SF=(E,XCTLAREA)
*THIS SECTION CHECKS FOR THE LRECL BEING 121,133,145 AND THE BLKSIZE
*BEING A MULTIPLE OF THE LRECL
DCBEXIT  SR    WK4,WK4
         USING IHADCB,PTREG
         LA    PTREG,DCBAR2
CHECKLR  OC    DCBLRECL(2),DCBLRECL     CHECK FOR  RECORD SIZE   A41801
         BZ    CHECKBLK                 NO  RECORD SIZE PROVIDED A41801
         OC    DCBBLKSI(2),DCBBLKSI     CHECK FOR  BLOCK SIZE    A41801
         BNZ   CHECK121                 BLOCK SIZE PROVIDED      A41801
         MVC   DCBBLKSI(2),DCBLRECL     SET UP BLOCKSIZE         A41801
         B     CHECK121             CHECK FOR VALID LRECL/BLKSI  A41801
CHECKBLK OC    DCBBLKSI(2),DCBBLKSI     CHECK FOR  BLOCK SIZE    A41801
         BZ    SETDFLT                  NO  BLOCK SIZE PROVIDED  A41801
         MVC   DCBLRECL(2),DCBBLKSI     SET UP LRECL             A41801
         B     CHECK121             CHECK FOR VALID LRECL/BLKSI  A41801
SETDFLT  MVI   DCBBLKSI+1,X'79'     TAKE DEF. VALUE OF 121       A41801
         MVI   DCBLRECL+1,X'79'     TAKE DEF. VALUE OF 121       A41801
CHECK121 LH    WK5,DCBBLKSI             PICK UP BLOCK SIZE
         LH    WK6,DCBLRECL             PICK UP LOGICAL RECORD LENGTH
         C     WK6,=F'255'         SPECIF LRECL GR. THAN 255 ?   A41801
         BH    DCBERR              YES, PRINT ERROR              A41801
         C     WK6,=F'04'          SPECIF LRECL SM. THAN 4   ?   A41801
         BL    DCBERR              YES, PRINT ERROR              A41801
         C     WK6,=F'18'              LRECL LESS THEN 18        A36104
         BNL   CHECK                   NO BRANCH                 A36104
         MVI   LENSW,X'FF'             SET SWITCH FOR SHORT MSG  A36104
CHECK    DR    WK4,WK6                  DIVIDE BLKSIZE BY LRECL
         LTR   WK4,WK4                  CHECK FOR NO REMAINDER
         BNE   DCBERR                   NO, GO SET FOR DCB ERROR
         RETURN
DCBERR   MVI   ISMESS+1,X'01'          SET MESSAGE NUMBER TO 1
         MVI   ISCOMP+1,X'08'           SET COMPLETION CODE TO 8
         MVC   DCBBLKSI(2),DCBLRECL   TO PREVENT OPEN FROM ABEND A41801
         RETURN
*THIS SECTION SETS THE MESSAGE NUMBER AND RETURN CODE TO INDICATE THAT
*A REQUIRED DD STATEMENT IS MISSING
SETSW    MVI   ISMESS+1,X'07'          SET MESSAGE NUMBER TO 7
         MVI   ISCOMP+1,X'10'           SET CONDITION CONDE
         B     BRANCHSW
*THIS SYNAD ROUTINE USES THE SVC 68 AND ITS ASSOCIATED MACROS FOR
*DETERMINING THE ERROR CONDITION
SYNADIN  SYNADAF ACSMETH=QISAM,PARM1=DCBAR1,PARM2=(0)
MOVEMESS MVC   MESSAGE+8(79),49(PAREG1) MOVE IN PRINTABLE DATA FROM
*                                          BUFFER FOR MESSAGE
         MVI   ISMESS+1,X'02'          SET FOR SYNAD ERROR MESSAGE
*                                         NUMBER =2
         MVI   ISCOMP+1,X'08'          SET COMPLETION CODE TO 8
         SYNADRLS
         B     EODADIN
SYNADOUT SYNADAF ACSMETH=QSAM,PARM1=DCBAR2,PARM2=(0)
         B     MOVEMESS
*MARK THIS RECORD TO BE PRINTED AND THE DATA SET TO BE CLOSED
SETOFF   MVI   ISCOMP+1,X'04'           SET COMPLETION CODE TO 4
         MVI   ISMESS+1,X'05'          SET MESSAGE NUMBER TO 5
         B     RETEXIT
SETOFFA  MVI   ISCOMP+1,X'04'           SET COMPLETION CODE TO 4
         MVI   ISMESS+1,X'05'     SET MESSAGE NUMBER TO FIVE
         B     EODADIN
         EJECT
*   CONVERSION ROUTINE
CONVERT  LR    WK3,PTREG     SET UP BUFFER WORKING POINTER
         LA    WK3,1(0,WK3)
         LR    PAREG1,WK3               SET UP POINTER TO BUFFER END
*                               MINUS 12
         AR    PAREG1,WK6    CALCULATE POINTER TO BUFFER END
         ST    GOREG,REENTAR+4
CHKN     C     OPREG,=F'1'              CHECK FOR ONE OR NONE LEFT
         BNH   BLANKOUT
         UNPK  REENTAR+20(3),0(2,IRETREG)
         TR    REENTAR+20(2),TABLE-240  CONVERT TWO BYTES
         MVC   0(2,WK3),REENTAR+20      MOVE TO OUT BUFFER
         S     OPREG,=F'2'              TWO LESS TO CONVERT
         LA    WK3,2(0,WK3)             UPDATE OUTPUT BUFFER POINTER
         LA    IRETREG,1(0,IRETREG)     UPDATE INPUT POINTER
         B     CHKN                     GO TO PICK UP MORE
BLANKOUT AR    WK4,OPREG                INCREMENT TO HANDLE THE ODD
*                                          BYTE
CHECKEND CR    WK3,PAREG1               CHECK FOR END OF OUTPUT
         BNL   FIN1RECA                 YES, END OF OUTPUT
         MVI   0(WK3),C' '              BLANK REMAINING OUTPUT
         LA    WK3,1(0,WK3)             UPDATE OUTPUT POINTER
         B     CHECKEND
FIN1RECA L     GOREG,REENTAR+4          RESET LINE COUNT
         B     PRINTLIN
         EJECT
PRTHDR   L     GOREG,PAGENO
         A     GOREG,=F'1'              UPDATE PAGE NUMBER
         ST    GOREG,PAGENO             SAVE UPDATED PAGE NUMBER
         CVD   GOREG,QISAM              CONVERT PAGE NUMBER FOR
         UNPK  QISAM+8(3),QISAM+6(2)       PRINTING
         OI    QISAM+10,X'F0'
         LR    GOREG,WK6           SAVE LRECL-1 LENGTH           A41801
         CH    WK6,=H'10'          LRECL SMALLER THAN 11 ?       A41801
         BL    NORMOV              YES, PRINT NO PAGE AND P.NBR  A41801
         L     GOREG,PAGEPTR            PICK UP ADDRESS OF POSITION IN
*                                          HEADING FOR PGGE NUMBER
         MVC   0(3,GOREG),QISAM+8       MOVE IN PAGE NUMBER
         LR    GOREG,WK6           SAVE LRECL-1 LENGTH           A41801
         CH    WK6,=H'144'         LRECL LARGER THAN 145 ?       A41801
         BNH   NORMOV              NO, NORMAL MOVE               A41801
         BCTR  WK6,0               SUBTR. ONE FOR EX STATEM.     A41801
         EX    WK6,MOVEBLNK        YES, BLNK OUTP. BUFFER        A41801
         LA    WK6,144             SET MAXIM. HEADER LENGTH      A41801
NORMOV   EX    WK6,MOVEIN          MOVE IN HEADER                A41801
         LR    WK6,GOREG           RESTORE LRECL-1 VALUE         A41801
         LR    GOREG,RETREG             SAVE RETURN POINTER
         PUT   DCBAR2                   PUT OUT HEADER
         LR    PTREG,PAREG1             SAVE BUFFER POINTER
         MVI   0(PTREG),X'40'           SET TO PRINT A LINE
         LR    RETREG,GOREG            RESTORE RETURN POINTER
         LA    GOREG,59                 SET NEW LINE COUNT
         BR    RETREG
         EJECT
SYSUT1   DC    CL8'SYSUT1  '
SYSUT2   DC    CL8'SYSUT2  '
INPUT    DC    CL8'INPUT   '
OUTPUT   DC    CL8'OUTPUT  '
RECORD   DC    CL6'RECORD'
PAGE     DC    CL4'PAGE'
PROGNAME DC    CL7'IEBISAM'
ENDOUT   DC    CL16'***END OF OUTPUT'
         DS    0F
DCBEXITA DC    X'85'                    DCBEXIT LIST
         DC    AL3(DCBEXIT)
DCBIN    DCB   DSORG=IS,MACRF=GM,DDNAME=SYSUT1,SYNAD=SYNADIN,          *
               EODAD=EODADIN
DCBOUT   DCB   DSORG=PS,MACRF=PL,DDNAME=SYSUT2,SYNAD=SYNADOUT,         *
               EXLST=DCBEXITA,RECFM=FBA
OPENINL  OPEN  (,(INPUT),,(OUTPUT)),MF=L
CLOSEL   CLOSE (,,,LEAVE),MF=L
READJL   RDJFCB (,),MF=L
MOVEDATA MVC   1(0,PTREG),0(IRETREG)
MOVEBLNK MVC   1(0,PTREG),0(PTREG)
MVBLANKS MVC    1(1,WK3),0(WK3)
LENSW    DC    X'00'                                             A36104
TRANSLAT TR    1(1,PTREG),TABLE-240
MOVEIN   MVC   0(0,PTREG),HEADERC
TABLE    DC    C'0123456789ABCDEF'      TRANSLATE TABLE
         LTORG
         EJECT
IEBWORK  DSECT
SAVE1    DS    1F
SAVE1BK  DS    1F
SAVE1FD  DS    1F
         DS    15F
SAVE2    DS    1F
SAVE2BK  DS    1F
SAVE2FD  DS    1F
         DS    15F
SAVE3    DS    1F
SAVE3BK  DS    1F
SAVE3FD  DS    1F
         DS    15F
ISINVOK  DS    F                        ADDRESS OF PARAMETER LIST AT
*                                          INVOCATION
ISPRINT  DS    2F                       DDNAME FOR SYSPRINT
ISUT1    DS    2F                       DDNAME FOR SYSUT1
ISUT2    DS    2F                       DDNAME FOR SYSUT2
ISCOMP   DS    H                        COMPLETION CODE
ISMESS   DS    H                        MESSAGE NUMBER
ISPAGE   DS    H                        PAGE NUMBER FOR SYSPRINT
ISCNTRL  DS    CL1                      CONTROL BYTE
* MASKS FOR TESTING CONTROL BYTE - ISCONTRL
ISSWC    EQU   X'80'                    COPY
ISSWU    EQU   X'40'                    UNLOAD
ISSWL    EQU   X'20'                    LOAD
ISSWP    EQU   X'10'                    PRINT
ISSWN    EQU   X'08'                    NO CONVERT REQUESTED
ISSWPI   EQU   X'04'                    PRINT INDEX
ISSWPP   EQU   X'02'                    PRINT PRIME
ISSWPO   EQU   X'01'                    PRINT OVERFLOW
ALLMASK  EQU   X'07'                                               000F
ISSWITCH DS    CL1                      EXTRANEOUS SWITCHES
FIRSTTM  EQU   X'80'                    FIRST TIME SWITCH
*
XCTLAREA DS    2F
WHICH    DS    2F
ALIGN    DS    1F
DOUBLE   DS    1D
EXITADDR DS    2F
REENTAR  DS    9F
DCBAR1   DS    64F
DCBAR2   DS    64F
MESSAGER DS    CL1
MESSAGE  DS    CL120
RECADDR  DS    1F                                                  000F
         DS    0D
QISAM    DS    CL250                    UNLOADED DCB WORK AREA
HEADERC  DS    CL1
HEADERT  DS    CL144                    HEADER AREA
TARGET   DS    2F                       DATE HOLD AREA
PAGENO   DS    1F                       HOLD PAGE NUMBER FOR HEADING
PAGEPTR  DS    1F                       HOLD POINTER TO WHERE PAGE
*                                          NUMBER IS TO BE PLACED
         DCBD  DSORG=(PS,IS)
         END
