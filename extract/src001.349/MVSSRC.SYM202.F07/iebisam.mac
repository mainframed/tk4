 TITLE 'IEBISAM - IEBISAM UTILITY PROGRAM - ROOT SEGMENT'
*STATUS-CHANGE LEVEL 000
*FUNCTION-OPERATION- THE ROOT SEGMENT OF THE IEBISAM UTILITY PROGRAM
*   GETS CORE FOR THE COMMON WORK AREA, CHAINS THE SAVE AREAS TO THE
*   SUPERVISOR. THIS MODULE PICKS UP ANY INVOKING PARAMETERS- OPTIONS,
*   DDNAMES, AND/OR PAGE NUMBER. FROM THE OPTIONS GIVEN, THE OPERATION
*   TO BE PERFORMED IS DETERMINED.  DEPENDING UPON THE CONTROL
*   PARAMETER, A MASK IS SET IN THE CONTROL BYTE FIELD OF THE COMMON
*   WORK AREA.  A CHECK IS MADE TO DETERMINE IF REPLACEMENT DDNAMES
*   FOR SYSPRINT,SYSUT1,AND SYSUT2 ARE PRESENT. IF SO THESE DD NAMES
*   ARE PLACED IN THE COMMON WORK AREA, OTHERWISE THE ASSUMED DDNAMES
*   SYSPRINT,SYSUT1,AND SYSUT2 ARE USED. IF A PAGE NUMBER IS PROVIDED,
*   IT IS USED OTHERWISE AN ASSUMED NUMBER (1) IS USED. CONTROL IS
*   THEN PASSED TO THE MODULE REQUIRED TO PERFORM THE REQUESTED
*   OPERATION.
*
*ENTRY POINTS- IEBISR- TO PROVIDE COMMON WORK AREA, HANDLE INVOKING
*   PARAMETERS, AND DETERMINE OPERATION.
*
*INPUT - ADDRESS OF INVOKING PARAMETERS IN REGISTER 1, SAVE AREA
*   ADDRESS IN REGISTER 13, RETURN ADDRESS OF CALLING PROGRAM IN
*   REGISTER 14, ADDRESS OF THIS MODULE IN REGISTER 15.
*
*OUTPUT - COMMON WORK AREA ESTABLISHED- DEFINED BY THE DSECT IEBWORK-
*   POINTED TO BY REGISTER 11.
*
*
*
* WORK AREA FIELDS SET UP FOR NORMAL EXIT
*        ISINVOK -  ADDRESS OF PARM LIST FROM INVOCATION
*        ISPRINT -  NAME FOR PRINT DD
*        ISUT1 -    NAME FOR INPUT DD
*        ISUT2 -    NAME FOR OUTPUT DD
*        ISPAGE -   PAGE NUMBER TO BE USED
*        ISCNTRL -  SET TO INDICATE OPTIONS REQUESTED
*        XCTLAREA - SET FOR XCTL TO NEXT MODULE- IEBISL,IEBISU,IEBISC,
*                   IEBISPL,IEBISPP
*        EXITADDR - USER'S MODULE NAME
*
*WORKAREA FIELDS SET UP FOR ERROR EXIT
*        ISINVOK  - ADDRESS OF PARM LIST FROM INVOCATION
*        ISCOMP   - COMPLETION CODE TO BE RETURNED
*        ISMESS   - MESSAGE NUMBER TO BE USED TO SELECT MESSAGE
*        ISPAGE  -  PAGE NUMBER TO BE USED
*        XCTLAREA & WHICH -  SET FOR XCTL TO IEBISF
*
*
*
*EXTERNAL ROUTINES - NA
*
*EXITS-NORMAL
*   IEBISL- CONTROL PARAMETER SPECIFIED LOAD OPERATION
*   IEBISU- CONTROL PARAMETER SPECIFIED UNLOAD OPERATION
*   IEBISC- CONTROL PARAMETER SPECIFIED COPY OPERATION
*   IEBISPL- CONTROL PARAMETER SPECIFIED PRINT LOGICAL OPERATION
*   IEBISPP- CONTROL PARAMETER SPECIFIED PRINT PHYSICAL OPERATION
*
*ATTRIBUTES- REENTRANT
*
*REGISTER ASSIGNMENTS
PAREG0   EQU   0
PAREG1   EQU   1
CONS     EQU   2
WK3      EQU   3
WK4      EQU   4
WK5      EQU   5
WK6      EQU   6
OPREG    EQU   7
IRETREG  EQU   8
GOREG    EQU   9
BASEREG  EQU   10
WORKAREA EQU   11
PTREG    EQU   12
SAVREG   EQU   13
RETREG   EQU   14
ADDR     EQU   15
         EJECT
IEBISAM  CSECT
* STANDARD LINKAGE CONVENTION
         SAVE  (14,12),T,ISR-67-V1      SAVE CALLING PROGRAM'S REGS
         USING IEBISAM,BASEREG          ESTABLISH ADDRESSABILITY
         LR    BASEREG,ADDR
         LR    OPREG,PAREG1             SAVE PARAMETER LIST POINTER
*                                          WHILE OBTAINING WORK AREA
         SPACE 1
         GETMAIN R,LV=1536              GET WORK AREA
* CLEAR THE ENTIRE WORK AREA TO ZEROS
         LR    WORKAREA,PAREG1          SET UP ADDRESSABILITY TO WORK
*                                          AREA
         USING IEBWORK,WORKAREA         SET UP ADDRESSABILITY TO WORK
*                                          AREA
         MVI   SAVE1BK,X'00'
         MVC   SAVE1BK+1+0*255(255),SAVE1BK+0*255
         MVC   SAVE1BK+1+1*255(255),SAVE1BK+1*255
         MVC   SAVE1BK+1+2*255(255),SAVE1BK+2*255
         MVC   SAVE1BK+1+3*255(255),SAVE1BK+3*255
         MVC   SAVE1BK+1+4*255(255),SAVE1BK+4*255
         MVC   SAVE1BK+1+5*255(255),SAVE1BK+5*255
         MVI   EXITADDR,X'40'           SET EXIT ADDRESS TO BLANKS
         MVC   EXITADDR+1(7),EXITADDR
         ST    OPREG,ISINVOK            SAVE POINTER TO INVOCATION LIST
         SPACE 1
         ST    SAVREG,SAVE1BK           SET BACK CHAIN POINTER
         LR    SAVREG,WORKAREA         UPDATE TO NEW SAVE AREA
         LA    WK3,SAVE2                SET UP FORWARD CHAIN POINTER
         ST    WK3,SAVE1FD                 TO NEXT SAVE AREA
*THIS SECTION CHECKS FOR THE EXISTENCE OF AN OPTION,OBTAINS THE LENGTH
*OF THIS OPTION AND ITS ADDRESS IS SAVED.
OPTION   L     GOREG,0(0,OPREG)         GET ADDRESS OF OPTIONS
         OC    0(2,GOREG),0(GOREG)      ANY OPTIONS SPECIFIED
         BZ    LABELUN                  NO, ASSUME UNLOAD
         MVC   ALIGN(2),0(GOREG)        YES, GET LENGTH OF OPTIONS -
         LH    WK6,ALIGN                   MOVE TO HALF-WORD BOUNDARY
         LA    WK5,2(0,GOREG)           GET OPTION ADDRESS
*
         EJECT
* THIS SECTION CHECKS THE OPTION CODE FOR A LEGAL OPERATION.
         CLI   ALIGN+1,X'06'            CHECK FOR LENGTH LESS THAN SIX
         BNL   CKOTHER                  NO, CHECK FOR UNLOAD,PRINT
         CLI   ALIGN+1,X'04'            CHECK FOR LENGTH OF FOUR
         BNE   ASSUMECY                 NO, GO TO SET ERROR CONDITION
         CLC   0(4,WK5),OPCOPY          CHECK FOR A COPY REQUEST
         BE    SETCOPY                  YES, SET CONTROL BYTE FOR COPY
         CLC   0(4,WK5),OPLOAD          CHECK FOR A LOAD REQUEST
         BNE   ASSUMECY                 NO, GO TO SET ERROR CONDITION
         MVI   ISCNTRL,ISSWL            SET CONTROL BYTE FOR LOAD
         MVC   WHICH(8),LODCON          MOVE SYMBOLIC ENTRY POINT FOR
*                                          XCTL
         B     ONWARD
SETCOPY  MVI   ISCNTRL,ISSWC            SET CONTROL BYTE FOR COPY
         MVC   WHICH(8),CPYCON          MOVE SYMBOLIC ENTRY POINT FOR
*                                          XCTL
         B     ONWARD
CKOTHER  CLC   0(5,WK5),OPPRNT          CHECK FOR A PRINT REQUEST
         BE    CKPRNT                   YES, DETERMINE WHETHER LOGICAL
*                                          OR PHYSICAL
         CLI   ALIGN+1,X'06'            CHECK FOR LENGTH EQUAL TO SIX
         BNE   ASSUMECY                 NO,SET ERROR CONDITION
         CLC   0(6,WK5),OPUNLD          CHECK FOR AN UNLOAD REQUEST
         BNE   ASSUMECY                 NO, GO TO SET ERROR CONDITION
LABELUN  MVI   ISCNTRL,ISSWU            SET CONTROL BYTE FOR UNLOAD
         MVC   WHICH(8),UNLCON          MOVE SYMBOLIC ENTRY POINT NAME
*                                          FOR XCTL
         B     ONWARD
*THIS SECTION CHECKS FOR LEGAL PARAMETERS ON A PRINT REQUEST
CKPRNT   CLI   5(WK5),C'L'        CHECK FOR A LOGICAL PRINT
*                                          REQUEST
         BE    SETLOG                   YES, SET CONTROL BYTE
         CLI   5(WK5),C'P'        CHECK FOR A PHYSICAL PRINT
*                                          REQUEST
         BNE   ASSUMECY                 NO, SET ERROR CONDITION
         MVC   WHICH(8),PRTPCON         MOVE IN SYMBOLIC ENTRY NAME
*                                          FOR XCTL
         B     PRINTSET
SETLOG   MVC   WHICH(8),PRTLCON         MOVE IN SYMBOLIC ENTRY NAME
*                                          FOR XCTL
PRINTSET MVI   ISCNTRL,ISSWP            SET CONTROL BYTE FOR PRINT
         LR    WK3,WK5                  PICK UP POINTER TO LIST
         AR    WK3,WK6                  ADD LENGTH OF LIST TO OBTAIN
*                                          END POINTER
         SH    WK6,=H'6'                SUBTRACT 6 FROM LENGTH OF LIST
         LA    WK5,6(0,WK5)             POINT TO NEXT CHARACTER TO BE
*                                          SCANNED
         CR    WK5,WK3                  CHECK FOR END OF LIST
         BNL   CKONWARD                 YES, CHECK FOR NEED OF DEFAULT
*                                          VALUES
         CLI   0(WK5),C','              CHECK FOR LEGAL DELIMITER
         BNE   ASSUMECY                 NO, GO TO SET ERROR CONDITION
         LA    WK5,1(0,WK5)             UPDATE POINTER BEYOND DELIMITER
         LR    WK4,WK5                  SET MOVING POINTER TO INITIAL
*                                          VALUE
         SR    CONS,CONS                CLEAR BYTE COUNTER
         CR    WK4,WK3                  CHECK FOR END OF LIST
         BNL   ASSUMECY                 YES, GO TO GET ERROR CONDITION
SCANBEG  CLI   0(WK4),C','              CHECK FOR DELIMITER
         BE    ASSUMECY                 YES, GO TO SET ERROR CONDITION
SCANBEGA CLI   0(WK4),C'N'              CHECK FOR NO CONVERT OPTION
         BE    SETN                     YES, NO CONVERT SPECIFIED
         CLI   0(WK4),C'I'              CHECK FOR INDEX TO BE PRINTED
         BE    SETI                     YES, INDEX SPECIFIED
         CLI   0(WK4),C'P'              CHECK FOR PRIME TO BE PRINTED
         BE    SETP                     YES,PRIME SPECIFIED
         CLI   0(WK4),C'O'              CHECK FOR OVERFLOW PRINTED
         BE    SETO                     YES, OVERFLOW SPECIFIED
         C     WK6,=F'6'                CHECK FOR LENGTH OF AT LEAST 6
         BL    ASSUMECY                 NO, GO TO SET ERROR CONDITION
         CLC   0(5,WK4),EXITCON         CHECK FOR EXIT=
         BNE   ASSUMECY                 NO, GO TO SET  ERROR CONDITION
         SH    WK6,=H'5'                SUBTRACT 5 FROM LIST LENGTH
         LA    WK4,5(0,WK4)             UPDATE MOVING POINTER TO USER'S
*                                          MODULE NAME
         LR    WK5,WK4                  SET BEGINNING POINTER
SCANSTRT CLI   0(WK4),X'5B'             CHECK FOR DOLLAR SIGN
         BE    GOAHEAD                  YES, CHECK FOR SECOND CHARACTER
         CLI   0(WK4),X'7C'             CHECK FOR A COMMERCIAL  AT
*                                          SIGN
         BE    GOAHEAD                  YES, CHECK FOR SECOND CHARACTER
         CLI   0(WK4),X'7B'             CHECK FOR A POUND SIGN
         BE    GOAHEAD                  YES, CHECK FOR SECOND CHARACTER
         CLI   0(WK4),X'C1'             CHECK FOR CHARACTER FROM A TO I
         BL    ASSUMECY                 NO,GO TO SET ERROR CONDITION
         CLI   0(WK4),X'C9'             CHECK FOR CHARACTER FROM A TO I
         BNH   GOAHEAD                  YES, CHECK FOR SECOND CHARACTER
         CLI   0(WK4),X'D1'             CHECK FOR CHARACTER FROM J TO R
         BL    ASSUMECY                 NO, GO  TO SET ERROR CONDITION
         CLI   0(WK4),X'D9'             CHECK FOR CHARACTER FROM J TO R
         BNH   GOAHEAD                  YES, CHECK SECOND CHARACTER
         CLI   0(WK4),X'E2'             CHECK FOR CHARACTER FROM S TO Z
         BL    ASSUMECY                 NO, GO TO SET ERROR CONDITION
         CLI   0(WK4),X'E9'             CHECK FOR CHARACTER FROM S TO Z
         BNH   GOAHEAD                  YES, CHECK FOR SECOND CHARACTER
         B     ASSUMECY                 NO, GO TO SET ERROR CONDITION
GOAHEAD  LA    CONS,1(0,CONS)           UPDATE BYTE COUNTER
         LA    WK4,1(0,WK4)             UPDATE MOVING POINTER TO NEXT
*                                          CHARACTER
         CR    WK4,WK3                  CHECK FOR END OF LIST
         BNL   SCANDONE                 YES, SET UP MODULE NAME
         CLI   0(WK4),C','              CHECK FOR DELIMITER
         BE    SCANDONE                 YES, GO BACK
         CLI   0(WK4),X'F9'             CHECK FOR CHARACTER FROM 0 TO 9
         BH    ASSUMECY                 NO,SET ERROR CONDITION
         CLI   0(WK4),X'F0'             CHECK FOR CHARACTER FROM 0 TO 9
         BNL   GOAHEAD                  YES, CHECK NEXT CHARACTER
         B     SCANSTRT
SCANDONE C     CONS,=F'8'               CHECK FOR MODULE NAME LENGTH
*                                          BEING LESS THAN OR EQUAL TO
*                                          EIGHT
         BH    ASSUMECY                 NO,GO TO SET UP ERROR CONDITION
         BCTR  CONS,0                   REDUCE CHARACTER NUMBER BY ONE
         EX    CONS,MOVENAME            MOVE MODULE NAME INTO HOLD AREA
         CR    WK4,WK3                  CHECK FOR END OF LIST
         BNL   CKONWARD                 YES, CHECK FOR NEED OF DEFAULT
*                                          VALUES
         CLI   0(WK4),C','              CHECK FOR A DELIMITER
         BNE   ASSUMECY                 NO, GO TO SET ERROR CONDITION
*                                          MOVE IN MODULE NAME
         LA    WK4,1(0,WK4)             UPDATE MOVING POINTER
         LR    WK5,WK4                  UPDATE BEGINNING POINTER
         B     SCANBEG
CKONWARD TM    ISCNTRL,ALLMASK          CHECK FOR ANY OPTIONS SPECIFIED
*                                          FOR INDEX,PRIME,OVERFLOW
         BC    5,ONWARD                 YES, SOME SPECIFIED
         OI    ISCNTRL,ALLMASK          SET TO DEFAULT TO PRINT ALL
*                                          THREE AREAS
         B     ONWARD
SETN     OI    ISCNTRL,ISSWN            SET FOR NO CONVERT
UPDATE   LA    WK4,1(0,WK4)             UPDATE MOVING POINTER
         CR    WK4,WK3                  CHECK FOR END OF LIST
         BNL   CKONWARD                 YES, CHECK FOR DEFAULT OPTIONS
*                                          NEEDED
         CLI   0(WK4),C','              CHECK FOR COMMA DELIMETER
         BNE   SCANBEGA                 NO, SCAN FOR OPTIONS
         B     UPDATE
SETI     OI    ISCNTRL,ISSWPI           SET FOR INDEX PRINT
         B     UPDATE
SETP     OI    ISCNTRL,ISSWPP           SET FOR PRIME PRINT
         B     UPDATE
SETO     OI    ISCNTRL,ISSWPO           SET FOR OVERFLOW PRINT
         B     UPDATE
         EJECT
*THIS SECTION GETS THE ADDRESS OF THE DDNAMES IF ANY ARE PROVIDED,
*OTHERWISE THE STANDARD DDNAMES ARE USED.
*
ONWARD   TM    0(OPREG),X'80'          IS A DELIMITER PRESENT
         BC    1,CONAME                YES, PICK UP ASSUMED DDNAMES
SUBST    L     GOREG,4(0,OPREG)         GET  DDNAME ADDRESS
         OC    0(2,GOREG),0(GOREG)     CHECK FOR DDNAMES SUPPLIED
         BE    CONAME                   NO USE ASSUMED DDNAMES
         MVC   ALIGN(2),0(GOREG)        PICK UP DDNAME LENGTH
         CLI   ALIGN,X'00'              CHECK FOR LENGTH OF DDNAME LIST
*                                          GREATER THAN 256 HEX
         BNE   TESTALL                  YES CHECK FOR ALL 3 DDNAMES
         CLI   ALIGN+1,X'48'            CHECK FOR LENGTH OF DDNAME LIST
*                                          SUFFICIENT FOR SYSUT2
         BL    TESTREST                 NO CHECK FOR SYSUT1 LENGTH
TESTALL  OC    66(8,GOREG),66(GOREG)   CHECK FOR SYSUT2 DDNAME
         BC    7,INVUT2                 YES PICK UP PROVIDED NAME
         MVC   ISUT2(8),NAMEUT2         MOVE ASSUMED NAME
         B     TESTTWO
INVUT2   MVC   ISUT2(8),66(GOREG)      MOVE IN PROVIDED NAME FOR
*                                          SYSUT2
TESTTWO  OC    58(8,GOREG),58(GOREG)   CHECK FOR SYSUT1 DDNAME
         BC    7,INVUT1                 YES PICK UP PROVIDED NAME
         MVC   ISUT1(8),NAMEUT1        MOVE ASSUMED NAME
         B     TESTONE
INVUT1   MVC   ISUT1(8),58(GOREG)       MOVE IN PROVIDED NAME FOR
*                                          SYSUT1
TESTONE  OC    42(8,GOREG),42(GOREG)    CHECK FOR SYSPRINT
         BC    7,INVPRT                 YES PICK UP PROVIDED NAME
USEPRINT MVC   ISPRINT(8),PRINT         MOVE ASSUMED NAME
         B     SUPPLY1
INVPRT   MVC   ISPRINT(8),42(GOREG)     MOVE IN PROVIDED NAME FOR
*                                          SYSPRINT
         B     SUPPLY1
TESTREST CLI   ALIGN+1,X'40'            CHECK FOR LENGTH OF DDNAME LIST
*                                          SUFFICIENT FOR SYSUT1
         BNL   TESTTWO                  YES CHECK FOR SYSUT1
         CLI   ALIGN+1,X'30'            CHECK FOR LENGTH OF DDNAME LIST
*                                          SUFFICIENT FOR SYSPRINT
         BNL   TESTONE                  YES CHECK FOR SYSPRINT
*USE ALL THREE ASSUMED NAMES
CONAME   MVC   ISUT2(8),NAMEUT2        PICK UP ASSUMED NAMES FOR
         MVC   ISUT1(8),NAMEUT1           SYSUT1,SYSUT2 AND SYSPRINT
         B     USEPRINT
         EJECT
*THIS SECTION CHECKS FOR THE EXISTENCE OF A PROVIDED PAGE NUMBER. IF
*ONE IS NOT PROVIDED ONE IS ASSUMED.
SUPPLY1  TM    0(OPREG),X'80'          CHECK FOR A DELIMITER ON FIRST
*                                          PARAMETER
         BC    1,OTHER                  YES, ASSUME 1 AS PAGE NUMBER
         TM    4(OPREG),X'80'           CHECK FOR A DELIMITER ON THE
*                                          SECOND PARAMETER
         BC    1,OTHER                  YES, ASSUME 1 AS PAGE NUMBER
PAGE     L     GOREG,8(0,OPREG)         GET PAGE NUMBER ADDRESS
         OC    0(2,GOREG),0(GOREG)     CHECK FOR A PROVIDED PAGE NO
         BE    OTHER                    NO PROVIDE ONE
*THIS SECTION MOVES THE PAGE NUMBER TO THE ISPAGE FIELD, UPDATES THE
*PAGE NUMBER AND RESTORES THE UPDATED PAGE NUMBER FOR THE CALLER.
         SR    WK6,WK6
         XC    DOUBLE(8),DOUBLE
         MVC   ALIGN(4),2(GOREG)       GET PAGE NUMBER
         PACK  DOUBLE+5(3),ALIGN       PUT IN PACKED FORMAT
         CVB   WK6,DOUBLE               CONVERT NUMBER TO BINARY
OKAY     STH   WK6,ISPAGE               MOVE PAGE NUMBER TO ISPAGE
         LA    WK6,1(0,WK6)             UPDATE PAGE NUMBER
         CVD   WK6,DOUBLE               CONVERT NUMBER TO DECIMAL
         UNPK  ALIGN(4),DOUBLE+5(3)     UNPACK THE PAGE NUMBER
         MVC   2(4,GOREG),ALIGN         RESTORE UPDATED PAGE NUMBER
         B     DA000
*WHEN A PAGE NUMBER IS NOT PROVIDED BY THE CALLER ONE IS ASSUMED
OTHER    LA    WK6,1                    MOVE ASSUMED PAGE NUMBER
         STH   WK6,ISPAGE
         EJECT
DA000    TIME
         LR    PAREG0,PAREG1            PICK UP DATE
         SRDL  PAREG0,16                SEPARATE YEARS AND DAYS
         SRL   PAREG1,16                DAYS PUT LOW ORDER
         LR    WK4,PAREG0               SAVE YEAR
         SR    PAREG0,PAREG0            CLEAR REGISTER
         LA    WK3,19                   TEST TO SEE IF YEAR(IN DECIMAL)
         NR    WK3,WK4                    IS DIVISABLE BY FOUR
         BZ    DA010                    NO--NOT DIVISABLE BY FOUR
         LA    CONS,18
         XR    WK3,CONS                 IS THIS A LEAP YEAR ENDING IN
*                                          ZERO
         BZ    DA010
         LA    WK3,1
*
DA010    STM   PAREG0,PAREG1,DOUBLE
         CVB   CONS,DOUBLE              CONVERT DAYS TO BINARY
         SR    PAREG1,PAREG1
         LR    WK5,PAREG1
*
DA020    LA    PAREG1,1(PAREG1)         INCREMENT MONTH
         IC    WK5,XTMN-1(PAREG1)       DAYS IN MONTH
         SR    CONS,WK5                 SUBTRACT FROM DAYS LEFT
         LA    WK6,3                    CONSTANT FOR 3RD MONTH
         CLR   WK6,PAREG1               IS THIS MARCH
         BC    7,DA030                  NO
         LTR   WK3,WK3                  YES, IS IT LEAP YEAR
         BC    2,DA030                  NO
         BCTR  CONS,0                   YES, REDUCE DAYS BY ONE
*
DA030    LTR   CONS,CONS                ARE DAYS COUNTED DOWN TO ZERO
         BC    2,DA020                  NO, REPEAT LOOP
         AR    CONS,WK5                 YES, RESTORE SUBTRACTED VALUE
         LTR   CONS,CONS                TEST FOR ZERO (FEBRUARY 29)
         BNZ   DA040                    NO
         LA    CONS,29                  YES, SET DAY FOR 29TH
         BCTR  PAREG1,0                 DECREMENT TO FEBRUARY
*
DA040    LA    WK3,2                    LOOP COUNT
DA050    CVD   PAREG1,DOUBLE            CHANGE MONTH TO DECIMAL
         L     WK5,DOUBLE+4             MONTH TO LOWER HALF
         SLL   WK5,20
         SLDL  WK4,8                    SHIFT UP TO YEAR OR MONTH
         LR    PAREG1,CONS              DAY
         BCT   WK3,DA050                REPEAT UNTIL DONE
         SLL   WK4,8                    POSITION DATE FOR STORING
         ST    WK4,DOUBLE         CONVERT FOR PRINTING
         UNPK  QISAM(7),DOUBLE(4)
         MVC   TARGET(2),QISAM+2        MOVE IN MONTH OF YEAR
         MVI   TARGET+2,C'/'
         MVC   TARGET+3(2),QISAM+4      MOVE IN DAY OF MONTH
         MVI   TARGET+5,C'/'
         MVC   TARGET+6(2),QISAM        MOVE IN YEAR
         EJECT
*THIS SECTION PERFORMS THE NECESSARY STEPS FOR EXIT FROM THIS INITIA-
*LIZATION ROUTINE TO THE MODULE REQUIRED TO PERFORM THE OPERATION
*REQUESTED.
ONWARD1  LR    PAREG1,WORKAREA          SAVE WORKAREA POINTER
         SR    WK6,WK6                  CLEAR XCTLAREA
         ST    WK6,XCTLAREA+4
         LA    WK6,WHICH
         ST    WK6,XCTLAREA             SET UP FOR XCTL
         L     SAVREG,4(0,SAVREG)       POP UP SAVE AREA
         L     RETREG,12(0,SAVREG)      RESTORE REGISTER FOURTEEN
         XCTL  (2,12),MF=(E,(1)),SF=(E,XCTLAREA)
         SPACE 1
ASSUMECY MVI   ISMESS+1,X'08'           SET MESSAGE NUMBER TO 8 TO
*                                          INDICATE INVALID PARAMETERS
          MVI   ISCOMP+1,X'10'           SET COMPLETION CODE TO 16
*                                          INDICATE INVALID PARAMETERS
         MVC   WHICH(8),MESSCON         MOVE IN SYMBOLIC ENTRY POINT
*                                          FOR XCTL
         B     ONWARD
         EJECT
*                             CONSTANTS
         SPACE 3
MOVENAME MVC   EXITADDR(0),0(WK5)       INSTRUCTION TO BE EXECUTED TO
*                                       MOVE IN NAME OF USER EXIT
*                                          MODULE
*SYMBOLIC ENTRY POINT NAMES OF OPERATION MODULES
MESSCON  DC    CL8'IEBISF   '           MESSAGE MODULE
PRTPCON  DC    CL8'IEBISPP '            PRINT PHYSICAL MODULE
PRTLCON  DC    CL8'IEBISPL '            PRINT LOGICAL MODULE
LODCON   DC    CL8'IEBISL  '            LOAD MODULE
UNLCON   DC    CL8'IEBISU  '            UNLOAD MODULE
CPYCON   DC    CL8'IEBISC  '            COPY MODULE
*
*CONSTANTS FOR COMPARE OF CONTROL PARAMETER FOR OPTION LIST
*
OPCOPY   DC    CL4'COPY'                COPY
OPUNLD   DC    CL6'UNLOAD'              UNLOAD
OPLOAD   DC    CL4'LOAD'                LOAD
OPPRNT   DC    CL5'PRINT'               PRINT
EXITCON  DC    CL5'EXIT='               EXIT KEYWORD
*
*ASSUMED DDNAME CONSTANTS
*
PRINT    DC    CL8'SYSPRINT'
NAMEUT1  DC    CL8'SYSUT1  '
NAMEUT2  DC    CL8'SYSUT2  '
XTMN     DC    X'1F1C1F1E1F1E1F1F1E1F1E1F'   DAYS IN MONTH
         LTORG
         EJECT
IEBWORK  DSECT
SAVE1    DS    1F
SAVE1BK  DS    1F
SAVE1FD  DS    1F
         DS    15F
SAVE2    DS    1F
SAVE2BK  DS    1F
SAVE2FD  DS    1F
         DS    15F
SAVE3    DS    1F
SAVE3BK  DS    1F
SAVE3FD  DS    1F
         DS    15F
ISINVOK  DS    F                        ADDRESS OF PARAMETER LIST AT
*                                          INVOCATION
ISPRINT  DS    2F                       DDNAME FOR SYSPRINT
ISUT1    DS    2F                       DDNAME FOR SYSUT1
ISUT2    DS    2F                       DDNAME FOR SYSUT2
ISCOMP   DS    H                        COMPLETION CODE
ISMESS   DS    H                        MESSAGE NUMBER
ISPAGE   DS    H                        PAGE NUMBER FOR SYSPRINT
ISCNTRL  DS    CL1                      CONTROL BYTE
* MASKS FOR TESTING CONTROL BYTE - ISCONTRL
ISSWC    EQU   X'80'                    COPY
ISSWU    EQU   X'40'                    UNLOAD
ISSWL    EQU   X'20'                    LOAD
ISSWP    EQU   X'10'                    PRINT
ISSWN    EQU   X'08'                    NO CONVERT REQUESTED
ISSWPI   EQU   X'04'                    PRINT INDEX
ISSWPP   EQU   X'02'                    PRINT PRIME
ISSWPO   EQU   X'01'                    PRINT OVERFLOW
ALLMASK  EQU   X'07'
ISSWITCH DS    CL1                      EXTRANEOUS SWITCHES
FIRSTTM  EQU   X'80'                    FIRST TIME SWITCH
*
XCTLAREA DS    2F
WHICH    DS    2F
ALIGN    DS    1F
DOUBLE   DS    1D
EXITADDR DS    2F
REENTAR  DS    9F
DCBAR1   DS    64F
DCBAR2   DS    64F
MESSAGER DS    CL1
MESSAGE  DS    CL120
RECADDR  DS    1F                                                  000F
         DS    0D
QISAM    DS    CL250                    UNLOADED DCB WORK AREA
HEADERC  DS    CL1
HEADERT  DS    CL144                    HEADER AREA
TARGET   DS    2F                       DATE HOLD AREA
PAGENO   DS    1F                       HOLD PAGE NUMBER FOR HEADING
PAGEPTR  DS    1F                       HOLD POINTER TO WHERE PAGE
*                                          NUMBER IS TO BE PLACED
         EJECT
*   MACRO DEFINITIONS
         DCBD  DSORG=(PS,IS)
         END
