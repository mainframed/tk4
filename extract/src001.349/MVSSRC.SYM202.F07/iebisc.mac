 TITLE ' IEBISC - IEBISAM UTILITY PROGRAM - COPY ROUTINE'
*STATUS AND CHANGE LEVEL 000
*FUNCTION/OPERATION-THIS MODULE BUILDS AN INDEXED SEQUENTIAL DATA SET
*   FROM AN INDEXED SEQUENTIAL DATA SET USING THE QUEUED INDEXED
*   SEQUENTIAL ACCESS METHOD.
*   THE FOLLOWING DCB FIELDS ARE CHECKED-
*        DCBRECFM-INPUT AND OUTPUT MUST BE THE SAME
*        DCBLRECL-INPUT AND OUTPUT MUST BE THE SAME
*        DCBBLKSI-OUTPUT BLKSI MUST BE A MULTIPLE OF LRECL
*        DCBRKP-OUTPUT LRECL MINUS KEYLENGTH MUST BE GREATER THAN RKP
*
*
*ENTRY POINTS- IEBISC-PERFORMS THE COPY OPERATION-DATA IS PASSED BY
*   LOCATION
*INPUT-COMMON WORK AREA SET UP
*
*        ISINVOK - ADDRESS OF PARM LIST FOR INVOCATION
*        ISPRINT - DDNAME FOR PRINT DATA SET
*        ISUT1 -   DDNAME FOR INPUT
*        ISUT2 -   DDNAME FOR OUTPUT
*        ISPAGE -  PAGE NUMBER TO BE USED
*        ISCNTRL - ISSWC
*
*   REGISTER 13 MUST CONTAIN THE ADDRESS OF THE CALLING PROGRAM'S
*   SAVE AREA, REGISTER 15 MUST CONTAIN THE ADDRESS OF THIS MODULE
*   FOR EVERY ENTRY TO THIS MODULE, REGISTER 14 CONTAINS THE RETURN
*   ADDRESS.
*
*OUTPUT- INDEXED SEQUENTIAL DATA SET, COMPLETION CODE/MESSAGE NUMBER.
* WORK AREA SET UP FOR EXIT TO IEBISF
*        ISINVOK - ADDRESS OF PARM LIST FOR INVOCATION
*        ISPRINT - DDNAME FOR PRINT DATA SET
*        ISUT1   - DDNAME FOR INPUT
*        ISUT2   - DDNAME FOR OUTPUT
*        ISCOMP  - COMPLETION CODE TO BE RETURNED
*        ISMESS  - MESSAGE NUMBER OF MESSAGE TO BE PRINTED
*        ISPAGE  - PAGE NUMBER TO BE USED
*        XCTLAREA & WHICH - SET UP FOR XCTL TO IEBISF
*
*
*
*EXTERNAL ROUTINES- NONE
*
*EXITS-NORMAL-IEBISF-AFTER THE DATA SET HAS BEEN CONSTRUCTED
*   SUCCESSFULLY
*     -ERROR-IEBISF-WHENEVER ANY ERROR CONDITIONS ARE ENCOUNTERED WITH
*   A MESSAGE NUMBER AND/OR A COMPLETION CODE.
*
*ATTRIBUTES- REENTRANT
*
*TABLES/WORKAREAS-
*
*
*REGISTER ASSIGNMENTS
*
PAREG0   EQU   0                        PARAMETER REGISTER
PAREG1   EQU   1                        PARAMETER REGISTER
CONS     EQU   2
WK3      EQU   3                        WORK REGISTER
WK4      EQU   4                        WORK REGISTER
WK5      EQU   5                        WORK REGISTER
WK6      EQU   6                        WORK REGISTER
OPREG    EQU   7                        POINTER REGISTER
IRETREG  EQU   8                        INTERNAL RETURN REGISTER
GOREG    EQU   9                        POINTER REGISTER
BASEREG  EQU   10                       BASE REGISTER
WORKAREA EQU   11                       WORK AREA REGISTER
PTREG    EQU   12
SAVREG   EQU   13                       SAVE AREA REGISTER
RETREG   EQU   14                       RETURN AREA REGISTER
ADDR     EQU   15                       BASE ADDRESSABILITY/RETURN CODE
         EJECT
IEBISC   CSECT
*0801342000-345000,351000-363000,372000-381000
*                                                                A27091
*A402100,405000                                                  A41745
*A320600,320700,357500-359500,387500,486500-488800,526200-530600,A48756
*A558500-560500,569900-569999,570000-572107,582500-584600,       A48756
*A603500,771500,511500-512000                                    A48756
*C318000,318600,319200,489000                                    A48756
*D330000-339000,512000,513000,525000-528000,570000,579000-582000,A48756
*D603000                                                         A48756
*C609000,723000                                                  A52028
*A400000,402050,712000,713000,718000,721000,722000              OY01166
* STANDARD LINKAGE CONVENTION
         SAVE  (14,12),T,ISC-67-V1      SAVE CALLING PROGRAMS REGISTERS
         USING IEBISC,BASEREG           ESTABLISH ADDRESSABILITY
         LR    BASEREG,ADDR
         LR    WORKAREA,PAREG1          PICK UP WORK AREA POINTER
         USING IEBWORK,WORKAREA
         ST    SAVREG,SAVE1BK           SET BACK CHAIN POINTER
         LR    SAVREG,WORKAREA          UPDATE TO NEW SAVE AREA
         LA    WK3,SAVE2                SET UP FORWARD CHAIN POINTER
         ST    WK3,SAVE1FD                 TO NEXT SAVE AREA
         EJECT
         USING IHADCB,GOREG             SET UP ADDRESSABILITY FOR
*                                          DCB'S
         LA    GOREG,DCBAR1             POINT TO INPUT DCB
         LA    PTREG,DCBAR2             POINT TO OUTPUT DCB
*THIS SECTION MOVES THE DCBS TO THE WORK AREA TO MAINTAIN REENTRABILITY
         MVC   DCBAR1(DCBINEND-DCBIN),DCBIN
         MVC   DCBAR2(DCBOUEND-DCBOUT),DCBOUT
         MVC   DCBDDNAM(8),ISUT1        MOVE INTO DCB THE INPUT DDNAME
         DROP  GOREG
         SPACE 1
         USING IHADCB,PTREG
         MVC   DCBDDNAM(8),ISUT2        MOVE INTO DCB THE OUTPUT DDNAME
         MVC   REENTAR(CLOSEL-OPENL),OPENL  MOVE OPEN TO WORK AREA TO
*                                          MAINTAIN REENTRABILITY
         DROP  PTREG                                            YM06576
         SPACE 1
         USING IHADCB,GOREG                                     YM06576
         OPEN  ((9),(INPUT)),MF=(E,REENTAR)   OPEN INPUT DCB    YM06576
         TM    DCBOFLGS,X'10'           WAS OPEN SUCCESSFUL FOR INPTU
         BZ    SETSW                    NO, SET FOR ERROR EXIT
         DROP  GOREG                                            YM06576
         SPACE 1
         USING IHADCB,PTREG                                     YM06576
         OPEN  ((12),(OUTPUT)),MF=(E,REENTAR)                   YM06576
         TM    DCBOFLGS,X'10'           WAS OPEN SUCCESSFUL FOR INPUT
         BZ    SETSW                    NO, SET FOR ERROR EXIT
         TM    ISCOMP+1,X'FF'      CHECK FOR AN ERROR IN THE
*                                     DCBEXIT
         BC    4,EODADIN1         YES,GO TO CLOSEOUT             A48756
         DROP  PTREG                                            YM06576
         EJECT
         USING IHADCB,GOREG                                     YM06576
         TM    DCBRECFM,X'10'           BLOCKED RECORDS?         A27091
         BC    1,GETPTR1                YES, BLOCKED RECORDS     A48756
         OC    DCBRKP(2),DCBRKP         CHECK FOR RKP=0
         BZ    GETPTR1                  YES, RKP=0               A48756
         SETL  DCBAR1,BD                SET FOR RETRIEVING DATA PORTION
*                                          ONLY FOR RKP NOT ZERO AND
*                                          RECORDS UNBLOCKED
GETPTR1  TM    DCBRECFM,VARIABLE  RECFM = V/VB ?                 A48756
         BO    GETLOCAT           YES, DO GET LOCATE, PUT MOVE   A48756
GETPTR   PUT   DCBAR2                   GET BUFFER ADDRESS
         LR    PAREG0,PAREG1            MOVE BUFFER ADDRESS FOR THE GET
*                                          AREA
GETREC   GET   DCBAR1,(0)
         B     GETPTR                  GET NEXT RECORD POINTER     IV0I
GETLOCAT GET   DCBAR1             GET AN INPUT RECORD            A48756
         LR    PAREG0,PAREG1      MOVE RECORD ADDR. FOR THE PUT  A48756
         PUT   DCBAR2,(0)         MOVE THE RECORD                A48756
         B     GETLOCAT           GET ANOTHER INPUT RECORD       A48756
         DROP  GOREG
         USING IHADCB,PTREG
* LOOP IS TERMINATED BY EODAD CONDITION ON INPUT
EODADIN  OI    DCBEXCD2,X'80'      SET SEQUENCE CHECK ON FOR
EODADIN1 EQU   *
*                                          OUTPUT DCB SO THAT LAST
*                                          BUFFER IS NOT WRITTEN OUT
         MVC   REENTAR(INPUT-CLOSEL),CLOSEL  MOVE CLOSE TO WORK AREA TO
*                                          MAINTAIN REENTRABILITY
         OI    ISMESS,X'10'       SET FLAG FOR SYNAD  ROUTINE   OY01166
         CLOSE ((9),,(12)),MF=(E,REENTAR)
         NI    ISMESS,X'00'       SET OFF FLAG FOR SYSNAD ROUT. OY01166
         CLI   ISMESS+1,X'07'           OPEN NO GOOD             A41745
         BE    BYPASS                   NO OPEN DONE SO BYPASS   A41745
         FREEPOOL (9)                   FREEPOOL INPUT BUFFER    A41745
         FREEPOOL (12)                  FREEPOOL OUTPUT BUFFER   A41745
BYPASS   SR    WK6,WK6                  SET UP XCTL AREA         A41745
         ST    WK6,XCTLAREA+4
         MVI   WHICH+5,C'F'             MOVE INTO XCTLAREA NAME OF NEXT
*                                          MODULE -IEBISF
         LR    PAREG1,WORKAREA          SAVE WORKAREA POINTER
         L     SAVREG,4(0,SAVREG)       POP UP SAVE AREA
         L     RETREG,12(0,SAVREG)      RESTORE REGISTER FOURTEEN
         XCTL  (2,12),MF=(E,(1)),SF=(E,XCTLAREA)
         EJECT
* THIS SECTION INSURES THAT THERE ARE NO INCONSISTENT DCB VALUES-RECFM,
* LRECL,BLKSIZE
DCBEXIT  OC    DCBNTM(1),DCBNTM         NTM SPECIFIED
         BNZ   CYLOF                    YES, NTM SPECIFIED
         MVC   DCBNTM(1),54(GOREG)      GET OLD NTM
CYLOF    OC    DCBCYLOF(1),DCBCYLOF     CYLOF SPECIFIED
         BNZ   OPTCD                    YES, CYLOF SPECIFIED
         MVC   DCBCYLOF(1),55(GOREG)    GET OLD CYLOF
OPTCD    OC    DCBOPTCD(1),DCBOPTCD     OPTCD SPECIFIED
         BNZ   TLRECL                   YES, OPTCD SPECIFIED
         MVC   DCBOPTCD(1),52(GOREG)    GET OLD OPTCD
TLRECL   OC    DCBLRECL(2),DCBLRECL     CHECK FOR LRECL NOT SPECIFIED
         BC    7,CKEQUAL1               NO, LRECL SPE IFIED
         MVC   DCBLRECL(2),82(GOREG)    MOVE I OLD LRECL
CKEQUAL1 OC    DCBRECFM(1),DCBRECFM     CHECK FOR RECFM NOT SPECIFIED
         BC    7,CKEQUAL2               NO, RECFM SPECIFIED
         MVC   DCBRECFM(1),36(GOREG)    MOVE IN OLD RECFM
CKEQUAL2 OC    DCBBLKSI(2),DCBBLKSI     CHECK OR BLOCKSIZE NOT SPEC.
         BC    7,CKEQUAL3               NO, BLKSI SPECIFIED
         MVC   DCBBLKSI(2),62(GOREG)    MOVE IN OLD BLKSI
CKEQUAL3 OC    DCBKEYLE(1),DCBKEYLE     CHECK FOR KEY LENGTH NOT SPEC.
         BC    7,CKEQUAL4               NO, KEYLE SPECIFIED
         MVC   DCBKEYLE(1),16(GOREG)    MOVE IN OLD KEYLE
CKEQUAL4 OC    DCBRKP(2),DCBRKP         CHECK FOR RELATIVE KEY POSITION
         BC    7,CHECK                  NO, RKP SPECIFIED
         MVC   DCBRKP(2),60(GOREG)      MOVE IN OLD RKP
CHECK    LH    WK6,DCBLRECL             PICK UP NEW LOGICAL RECORD
*                                          LENGTH
         TM    DCBRECFM,X'C0'     RECFM SYSUT2 U ?               A48756
         BO    ERRDCB             YES, PRINT ERRMSG IEB601I      A48756
         BM    TSTRF2             BRANCH WHEN FIXED OR VAR       A48756
         OI    DCBRECFM,X'40'     SET DEFAULT RECFM = V          A48756
TSTRF2   TM    36(GOREG),X'C0'    RECFM SYSUT1 U ?               A48756
         BO    ERRDCB             YES, PRINT ERRMSG IEB601I      A48756
         BM    CONTIN             BRANCH WHEN FIXED OR VAR       A48756
         OI    36(GOREG),X'40'    SET DEFAULT RECFM = V          A48756
CONTIN   SR    WK4,WK4                                           A48756
         LR    WK3,WK4
         TM    DCBRECFM,VARIABLE        CHECK FOR VARIABLE LENGTH
*                                          RECORDS
         BZ    CHECKOR                  NO, CHECK ORIGINAL RECFM
         TM    36(GOREG),VARIABLE    CHECK FOR VARIABLE RECFM    A48756
         BZ    ERRDCB                NO, SET UP FOR ERROR EXIT   A48756
         CLC   DCBBLKSI(2),DCBLRECL     COMPARE BLKSI TO LRECL
*                                          BLKSIZE MUST BE EQUAL TO OR
*                                          GREATER THAN LRECL
         BL    ERRDCB                   NO, SET UP FOR ERROR EXIT
         OC    DCBRKP(2),DCBRKP         RKP SPECIFIED
         BNZ   CHECKR                   RKP IS SPECIFIED
         MVC   DCBRKP(2),60(GOREG)      MOVE IN OLD RKP
CHECKR   CLI   DCBRKP+1,X'04'           CHEKC FOR RKP EWUAL OR GREATER
*                                          THAN 4
         BL    ERRDCB                   NO, GO TO SET FOR ERROR EXIT
         B     CKRKP                                               000G
CHECKOR  TM    36(GOREG),X'80'     CHECK FOR INPUT FIXED         A48756
         BZ    ERRDCB              NO, SET UP FOR ERROR EXIT     A48756
         TM    DCBRECFM,X'10'      CHECK FOR FIX. BLOCK. RECORD  A48756
         BO    TSTBLK1             YES, CHECK INPUT RECFM        A48756
         MVC   DCBLRECL(2),DCBBLKSI SET LRECL EQ BLKSIZE         A48756
TSTBLK1  TM    36(GOREG),X'10'     CHECK FOR FIX. BLOCK. RECORD  A48756
         BO    CKFIXED             YES, CHCK BLKSI MULT. OF LRCL A48756
         MVC   82(2,GOREG),62(GOREG) SET LRECL EQ BLKSIZE        A48756
CKFIXED  LH    WK5,DCBBLKSI
         DR    WK4,WK6                  DIVIDE BLKSIZE BY LRECL
         LTR   WK4,WK4                  CHECK FOR A ZERO REMAINDER
         BC    7,ERRDCB                 NO, SET UP FOR ERROR EXIT
CKRKP    IC    WK3,DCBKEYLE             PICK UP KEYLENGTH
         SR    WK6,WK3                  CHECK FOR LOGICAL RECORD LENGTH
*                                          MINUS KEYLENGTH NOT BEING
*                                          GREATER THAN RELATIVE KEY
*                                          POSITION
         CLI   DCBRECFM,X'80'     SYSUT2 HAS RECFM=F ?           A48756
         BNE   RKPTEST            NO, CHECK FOR VALID RKP        A48756
         CLC   DCBRKP(2),ZERO     SYSUT2 HAS RKP=0 ?             A48756
         BE    RECFMTST           YES, DON'T CHECK FOR VALID RKP A48756
RKPTEST  EQU   *                                                 A48756
         CH    WK6,DCBRKP
         BL    ERRDCB                   NO,SET UP FOR ERROR EXIT
*
RECFMTST TM    36(GOREG),X'40'    RECFM SYSUT1 V ?               A48756
         BZ    FIXRECFM           NO, RECFM IS F/FB              A48756
         CLC   DCBLRECL(2),82(GOREG) UT1 LRECL EQ. UT2 LRECL ?   A48756
         BL    ERRDCB1            NO, PRINT ERRMSG IEB601I       A48756
         MVI   42(GOREG),X'48'    CHNGE UT1 MACRFM TO GET LOCATE A48756
         MVI   43(12),X'50'       CHNGE UT2 MACRFM TO PUT MOVE   A48756
         RETURN  ,                RETURN TO OPEN SYSUT2          A48756
TSTL1L2  CLC   DCBLRECL(2),82(GOREG) UT1 LRECL EQ. UT2 LRECL ?   A48756
         BNE   ERRDCB1            NO, PRINT ERRMSG IEB601I       A48756
         RETURN  ,                RETURN TO OPEN SYSUT2          A48756
FIXRECFM SR    WK4,WK4            ZERO REGISTER 4                A48756
         IC    WK4,16(GOREG)      LOAD KELENGTH IN REGISTER 4    A48756
         LH    WK6,82(GOREG)      LOAD UT2 LRECL IN REGISTER 6   A48756
         CLC   60(2,GOREG),ZERO   UT1 RKP=0 ?                    A48756
         BNE   TSTRKP2            NO, TEST DCB VALUES            A48756
         CLC   DCBRKP(2),ZERO     UT2 RKP=0 ?                    A48756
         BNE   TSTRECF1           NO, TEST UT1 DCB VALUES        A48756
         CLC   DCBRECFM(1),36(GOREG) RECFM UT1 EQ. RECFM UT2     A48756
         BE    TSTL1L2            YES, TEST FOR EQUAL LRECL      A48756
         TM    36(GOREG),X'90'    UT1 RECFM = F ?                A48756
         BM    COMPL1L2           YES, COMPARE UT1 & UT2 LRECL'S A48756
NOEQL1L2 SR    WK6,WK4            SET WK6 : LRECL1 MINUS KEYLEN1 A48756
         CH    WK6,DCBLRECL       LRECL2 EQ.TO LRECL1 MINUS KEY? A48756
         BCR   8,RETREG           YES, OKE RETURN TO OPEN UT2    A48756
         STH   WK6,DCBLRECL       SET LRECL2 = LRECL1 MINUS KEY1 A48756
         STH   WK6,DCBBLKSI       SET BLKS2 = LRECL1 MINUS KEY1  A48756
         RETURN   ,               RETURN TO OPEN SYSUT2          A48756
COMPL1L2 AR    WK6,WK4            SET WK6: LRECL1 PLUS KEYLEN1   A48756
         CH    WK6,DCBLRECL     UT2(RCFM=FB) EQ. LRC1 PLUS KEY ? A48756
         BCR   8,RETREG           YES, RETURN TO OPEN SYSUT2     A48756
         STH   WK6,DCBLRECL       LRECL2=LRECL1 PLUS KEYLEN1     A48756
         MR    WK4,WK6            MULTIPLY R5 AND R6             A48756
         STH   WK5,DCBBLKSI       BLKSI2= R5 * (LRECL1 PLUS KEY) A48756
         RETURN   ,               RETURN TO OPEN SYSUT2          A48756
TSTRKP2  CLC   DCBRKP(2),ZERO     UT2 RKP=0 ?                    A48756
         BNE   TSTL1L2            NO, TEST FOR EQUAL LRECL'S     A48756
         TM    DCBRECFM,X'90'     UT2 RECFM=FB ?                 A48756
         BO    TSTL1L2            YES, TEST FOR EQUAL LRECL'S    A48756
         B     NOEQL1L2           NO, CHECK FOR SYSUT2 LRECL     A48756
TSTRECF1 TM    36(GOREG),X'90'    UT1 RECFM = FB ?               A48756
         BO    TSTL1L2            YES, TST FOR EQ. LRECL'S       A48756
         B     COMPL1L2           NO, CHECK FOR SYSUT2 LRECL     A48756
*THIS SECTION SETS THE MESSAGE NUMBER FOR IEBISF TO INDICATE INCORRECT
*DCB FIELDS
ERRDCB   MVI   DCBKEYLE,X'10'        SET DEFAULT                 A48756
         MVI   DCBRECFM,X'80'        VALUES                      A48756
         MVC   DCBRKP(2),ZERO        TO ASSURE CORRECT           A48756
         NI    DCBBLKSI,X'00'        OPENING                     A48756
         MVI   DCBBLKSI+1,X'50'      OF SYSUT2                   A48756
         MVC   DCBLRECL(2),DCBBLKSI  DATA SET.                   A48756
ERRDCB1  MVI   ISMESS+1,X'01'        SET MESSAGE NUMBER TO 1     A48756
         MVI   ISCOMP+1,X'08'        SET COMPLETION CODE TO 8    A48756
         RETURN
*THIS SECTION SETS THE MESSAGE NUMBER AND RETURN CODE FOR IEBISF TO
*INDICATE THAT A REQUIRED DD STATEMENT IS MISSING
SETSWOT  MVC   MESSAGE+64(8),SYSUT2     MOVE IN WHICH DD IS MISSING
         B     SETSW
SETSWIN  MVC   MESSAGE+64(8),SYSUT1     MOVE IN WHICH DD IS MISSING
SETSW    MVI   ISMESS+1,X'07'          SET MESSAGE NUMBER TO 7   A48756
         MVI   ISCOMP+1,X'10'           SET COMPLETION CODE TO 16
         B     EODADIN1            DO NOT SET SEQ CHECK BIT ON   A52028
         SPACE 3
*THIS SECTION HANDLES ALL SYNCHRONOUS EXITS AND GIVES THE APPROPRIATE
*MESSAGE NUMBER AND RETURN CODE TO IEBISF
* THIS SYNAD ROUTINE WILL BE REPLACED AFTER THE NEW SVC 68 AND ITS
*ASSOCIATED MACROS ARE AVAILABLE
         SPACE 3
* THIS SYNAD ROUTINE USES THE SVC 68 AND ITS ASSOCIATED MACROS FOR
*DETERMINING THE ERROR CONDITION
SYNADIN  SYNADAF ACSMETH=QISAM,PARM1=DCBAR1,PARM2=(0)
MOVEMESS MVC   MESSAGE+8(79),49(PAREG1)  MOVE IN PRINTABLE DATA FROM
*                                         BUFFER FOR MESSAGE
         TM    ISMESS+1,X'FF'      ALREADY MESS NBR SET ?       OY01166
         BC    4,SYNADRL          YES, RETURN TO CLOSE          OY01166
         MVI   ISMESS+1,X'02'          SET MESSAGE NUMBER TO 2
         MVI   ISCOMP+1,X'08'           SET COMPLETION CODE TO 8
SYNADRL  EQU   *                  RELEASE WORK REISTERS         OY01166
         SYNADRLS
         TM    ISMESS,X'10'       ARE WE IN SYSUT2 CLOSE ?      OY01166
         BCR   1,RETREG           YES, RETURN TO CLOSE          OY01166
         B     EODADIN1            DO NOT SET SEQ CHECK BIT ON   A52028
SYNADOUT SYNADAF ACSMETH=QISAM,PARM1=DCBAR2,PARM2=(0)
         B     MOVEMESS
         SPACE 3
         EJECT
OPENL    OPEN  (,(INPUT)),MF=L                                  YM06576
CLOSEL   CLOSE (,,,),MF=L
INPUT    DC    CL8'INPUT   '
OUTPUT   DC    CL8'OUTPUT  '
DCBIN    DCB   DSORG=IS,MACRF=GM,DDNAME=SYSUT1,SYNAD=SYNADIN,          *
               EODAD=EODADIN
DCBINEND DS    0F
DCBOUT   DCB   DSORG=IS,MACRF=PL,DDNAME=SYSUT2,EXLST=DCBEXITA,         C
               SYNAD=SYNADOUT
DCBOUEND DS    0F
DCBEXITA DC    X'85'
         DC    AL3(DCBEXIT)
SYSUT1   DC    CL8'SYSUT1  '
SYSUT2   DC    CL8'SYSUT2  '
ZERO     DC    H'0'               ZERO HALFWORD FOR TESTING      A48756
VARIABLE EQU   X'40'                    VARIABLE RECORD FORMAT
         LTORG
         EJECT
IEBWORK  DSECT
SAVE1    DS    1F
SAVE1BK  DS    1F
SAVE1FD  DS    1F
         DS    15F
SAVE2    DS    1F
SAVE2BK  DS    1F
SAVE2FD  DS    1F
         DS    15F
SAVE3    DS    1F
SAVE3BK  DS    1F
SAVE3FD  DS    1F
         DS    15F
ISINVOK  DS    F                        ADDRESS OF PARAMETER LIST AT
*                                          INVOCATION
ISPRINT  DS    2F                       DDNAME FOR SYSPRINT
ISUT1    DS    2F                       DDNAME FOR SYSUT1
ISUT2    DS    2F                       DDNAME FOR SYSUT2
ISCOMP   DS    H                        COMPLETION CODE
ISMESS   DS    H                        MESSAGE NUMBER
ISPAGE   DS    H                        PAGE NUMBER FOR SYSPRINT
ISCNTRL  DS    CL1                      CONTROL BYTE
* MASKS FOR TESTING CONTROL BYTE - ISCONTRL
ISSWC    EQU   X'80'                    COPY
ISSWU    EQU   X'40'                    UNLOAD
ISSWL    EQU   X'20'                    LOAD
ISSWP    EQU   X'10'                    PRINT
ISSWN    EQU   X'08'                    NO CONVERT REQUESTED
ISSWPI   EQU   X'04'                    PRINT INDEX
ISSWPP   EQU   X'02'                    PRINT PRIME
ISSWPO   EQU   X'01'                    PRINT OVERFLOW
ALLMASK  EQU   X'07'
ISSWITCH DS    CL1                      EXTRANEOUS SWITCHES
FIRSTTM  EQU   X'80'                    FIRST TIME SWITCH
*
XCTLAREA DS    2F
WHICH    DS    2F
ALIGN    DS    1F
DOUBLE   DS    1D
EXITADDR DS    2F
REENTAR  DS    9F
DCBAR1   DS    64F
DCBAR2   DS    64F
MESSAGER DS    CL1
MESSAGE  DS    CL120
RECADDR  DS    1F                                                  000F
         DS    0D
QISAM    DS    CL250                    UNLOADED DCB WORK AREA
HEADERC  DS    CL1
HEADERT  DS    CL144                    HEADER AREA
TARGET   DS    2F                       DATE HOLD AREA
PAGENO   DS    1F                       HOLD PAGE NUMBER FOR HEADING
PAGEPTR  DS    1F                       HOLD POINTER TO WHERE PAGE
*                                          NUMBER IS TO BE PLACED
         EJECT
*   MACRO DEFINITIONS
         DCBD  DSORG=(PS,IS)
         END
