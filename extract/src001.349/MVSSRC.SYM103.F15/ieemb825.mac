         TITLE 'IEEMB825 - SMF STAE EXIT ROUTINE                       *
                        '
IEEMB825 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEEMB825  76.209'                              01S0001
         DROP  @15
@PROLOG  BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
*R9=R14;                               /* SAVE RETURN ADDRESS        */
         LR    R9,R14                                           01S0021
*RFY R14 UNRSTD;                       /* RELEASE REGISTER CONTROL   */
*IF R0=12 THEN                         /* IF NO STAE AREA PASSED     */
         CH    R0,@CH01261                                      01S0023
         BNE   @RF00023                                         01S0023
*  DO;                                 /* THEN GET INFO FROM REGS    */
*    R8=R2;                            /* PARMAREA ADDR IS IN REG 2  */
         LR    R8,R2                                            01S0025
*    ABENDCDE=R1;                      /* ABEND CODE IN REG 1        */
         STCM  R1,7,ABENDCDE+8(R8)                              01S0026
*    WKAREA='0'B;                      /* NO AREA PASSED INDICATOR   */
         NI    WKAREA(R8),B'10111111'                           01S0027
*  END;                                                         01S0028
*ELSE                                                           01S0029
*  DO;                                 /* AREA PASSED                */
         B     @RC00023                                         01S0029
@RF00023 DS    0H                                               01S0030
*    R8=R1->SDWAPARM;                  /* PARM AREA ADDR             */
         L     R8,SDWAPARM(,R1)                                 01S0030
*    SDWAPTR=R1;                       /* SAVE STAE WORK AREA POINTER*/
         ST    R1,SDWAPTR(,R8)                                  01S0031
*    ABENDCDE=SDWACMPC;                /* ABEND CODE                 */
         L     @03,SDWAPTR(,R8)                                 01S0032
         MVC   ABENDCDE+8(3,R8),SDWACMPC(@03)                   01S0032
*    WKAREA='1'B;                      /* AREA PASSED                */
         OI    WKAREA(R8),B'01000000'                           01S0033
*  END;                                                         01S0034
*DUMPOK='0'B;                          /* ASSUM DUMP NOT TAKEN OR
*                                         NOT SUCCESSFUL             */
@RC00023 NI    DUMPOK(R8),B'01111111'                           01S0035
*IF WKAREA='0'B ×                      /* IF NO WORK AREA OR         */
*   SDWAPCHK='1'B × SDWARKEY='1'B THEN /* PROGRAM CHECK × PSW RESTART*/
         TM    WKAREA(R8),B'01000000'                           01S0036
         BZ    @RT00036                                         01S0036
         L     @03,SDWAPTR(,R8)                                 01S0036
         TM    SDWAPCHK(@03),B'01100000'                        01S0036
         BZ    @RF00036                                         01S0036
@RT00036 DS    0H                                               01S0037
* DO;                                  /* YES, TAKE DUMP             */
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= TAKEDUMP                                            */
*/*                                                                  */
*/*DESCRIPTIVE NAME= ISSUE SVC DUMP (SDUMP)                          */
*/*                                                                  */
*/*FUNCTION=                                                         */
*/*  THIS SEGMENT PREPARES FOR AND ISSUES A DUMP OF MAIN STORAGE.    */
*/*  SVC DUMP IS USED TO PERFORM DUMPING, SINCE WE DO NOT HAVE       */
*/*  A SYSUDUMP OR SYSABEND DUMP DD IN MASTER'S TIOT.                */
*/*                                                                  */
*/*  OPERATION= NO SPECIAL ALGORITHMS ARE USED.                      */
*/*                                                                  */
*/*ENTRY= IN-LINE SEGMENT                                            */
*/*  PURPOSE= SEE FUNCTION                                           */
*/*  INPUT= NONE                                                     */
*/*                                                                  */
*/*EXITS=                                                            */
*/*  CONDITION= NORMAL, DUMP TAKEN                                   */
*/*  OUPUT= DUMP                                                     */
*/*  RETURN CODES= NONE                                              */
*/*                                                                  */
*/*  CONDITION= ERROR, DUMP NOT TAKEN                                */
*/*  OUTPUT= NO DUMP OR PARTIAL DUMP                                 */
*/*  RETURN CODES=                                                   */
*/*    DUMPOK - SET TO INDICATE DUMP BAD                             */
*/*                                                                  */
*/********************************************************************/
*DUMPLIST(1:DUMPLEN)=DYMDUMP(1:DUMPLEN);     /* LIST FORM OF SDUMP   */
         LA    @03,8                                            02S0038
         ALR   @03,R8                                           02S0038
         LH    @15,DUMPLEN                                      02S0038
         BCTR  @15,0                                            02S0038
         EX    @15,@SM01286                                     02S0038
*R2=ADDR(DUMPLIST);                    /* ADDR OF SDUMP LIST FORM    */
         LR    R2,@03                                           02S0039
*GEN(SDUMP  MF=(E,(R2)));              /* ISSUE DUMP                 */
         SDUMP  MF=(E,(R2))
*RFY R15 RSTD;                         /* GET REGISTER CONTROL       */
*IF R15=0 THEN                         /* WAS DUMP SUCCESSFUL        */
         LTR   R15,R15                                          02S0042
         BNZ   @RF00042                                         02S0042
*  DUMPOK='1'B;                        /* YES, INDICATE THAT IT WAS  */
         OI    DUMPOK(R8),B'10000000'                           02S0043
*RFY R15 UNRSTD;                       /* RELEASE REGISTER CONTROL   */
@RF00042 DS    0H                                               02S0045
* END;                                                          01S0045
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= ABENDMSG                                            */
*/*                                                                  */
*/*DESCRIPTIVE NAME= PREPARE ABEND MESSAGE IEE480I                   */
*/*                                                                  */
*/*FUNCTION=                                                         */
*/*  THIS SEGMENT PREPARES THE ABEND MESSAGE. IT MUST CONVERT        */
*/*  THE ABEND CODE TO EBCDIC, INSERT IT INTO THE MESSAGE, AND       */
*/*  ISSUE THE MESSAGE.                                              */
*/*  IF A DUMP WAS TAKEN AND WAS SUCCESSFUL, THE MESSAGE             */
*/*  TEXT WILL INDICATE 'DUMPED'.                                    */
*/*                                                                  */
*/*  OPERATION= NO SPECIAL ALGORITHMS ARE USED.                      */
*/*                                                                  */
*/*ENTRY= IN-LINE SEGMENT                                            */
*/*  PURPOSE= SEE FUNCTION                                           */
*/*  INPUT=                                                          */
*/*    SDWACMPC - ABEND CODE FROM STAE WORK AREA                     */
*/*                                                                  */
*/*EXITS=                                                            */
*/*  CONDITION= NORMAL, ISSUE MESSAGE IEE480I                        */
*/*  OUTPUT= MESSAGE IEE480I                                         */
*/*  RETURN CODES= NONE                                              */
*/*                                                                  */
*/********************************************************************/
*MSGBUF(1:SI480ILN+4)=SI480I;          /* GET ABEND MESSAGE          */
@RF00036 L     @03,@CV00092                                     02S0046
         LA    @15,3                                            02S0046
         AH    @15,SI480ILN(,@03)                               02S0046
         L     @03,@CV00092                                     02S0046
         EX    @15,@SM01289                                     02S0046
*UNPK(UNPKCODE,ABENDCDE(1:3));         /* UNPACK ABEND CODE          */
         LA    @03,8                                            02S0047
         ALR   @03,R8                                           02S0047
         UNPK  UNPKCODE(5,@03),ABENDCDE(3,@03)                  02S0047
*UNPKCODE(1:3)=UNPKCODE(1:3)&'0F0F0F'X;         /* CLEAR ZONES       */
         NC    UNPKCODE(3,@03),@CB01265                         02S0048
*TR(UNPKCODE(1:3),TRTABLE);            /* CONVERT TO EBCDIC          */
         TR    UNPKCODE(3,@03),TRTABLE                          02S0049
*ABNDCODE=UNPKCODE(1:3);               /* MOVE ABEND CODE TO MESSAGE */
         LA    @15,12                                           02S0050
         ALR   @15,R8                                           02S0050
         MVC   ABNDCODE(3,@15),UNPKCODE(@03)                    02S0050
*IF DUMPOK='0'B THEN                   /* WAS DUMP ISSUED SUCCESSFULY*/
         TM    DUMPOK(R8),B'10000000'                           02S0051
         BNZ   @RF00051                                         02S0051
*  DO;                                 /* NO, 'DUMPED' OUT OF MSG    */
*    NODUMP=TERM;                      /* ONLY TERMINATED IN MSG     */
         MVC   NODUMP(18,@15),@CC00088                          02S0053
*  END;                                                         02S0054
*R1=ADDR(MSGBUF);                      /* ADDR OF MESSAGE TO WRITE   */
@RF00051 LA    R1,MSGBUF+8(,R8)                                 02S0055
*GEN(WTO  MF=(E,(R1)));                /* WRITE MESSAGE TO OPERATOR  */
         WTO  MF=(E,(R1))
*MSGBUF(1:SI050ALN+12)=SI050A;         /* GET CANCELED MESSAGE       */
         L     @03,@CV00091                                     01S0057
         LA    @15,11                                           01S0057
         AH    @15,SI050ALN(,@03)                               01S0057
         L     @03,@CV00091                                     01S0057
         EX    @15,@SM01291                                     01S0057
*ANSWER=' ';                           /* INITIALIZE OPERATOR ANSWER */
         MVI   ANSWER+8(R8),C' '                                01S0058
*DO WHILE (ANSWER^='U');               /* CONTINUE PROMPTING OPERATOR
*                                         UNTIL HE RESPONDS 'U'      */
         B     @DE00059                                         01S0059
@DL00059 DS    0H                                               01S0060
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= CANCMSG                                             */
*/*                                                                  */
*/*DESCRIPTIVE NAME= PROMPT OPERATOR TO CONTINUE                     */
*/*                                                                  */
*/*FUNCTION=                                                         */
*/*  THIS SEGMENT ISSUES MESSAGE IEE050A. THIS MESSAGE               */
*/*  INDICATES THAT THE SMF OPTION HAS BEEN CANCELLED, AND REQUESTS  */
*/*  THE OPERATOR TO RESPOND 'U' IF THE SYSTEM IS TO CONTINUE.       */
*/*                                                                  */
*/*  OPERATION= NO SPECIAL ALGORITHMS ARE USED.                      */
*/*                                                                  */
*/*ENTRY= IN-LINE SEGMENT                                            */
*/*  PURPOSE= SEE FUNCTION                                           */
*/*  INPUT= NONE                                                     */
*/*                                                                  */
*/*EXITS=                                                            */
*/*  CONDITION= NORMAL, OPERATOR ANSWER RECEIVED                     */
*/*  OUTPUT=                                                         */
*/*    ANSWER - CONTAINS OPERATOR RESPONCE                           */
*/*  RETURN CODES= NONE                                              */
*/*                                                                  */
*/********************************************************************/
*WTORECB=0;                            /* CLEAR WOTR/WAIT ECB        */
         LA    @03,8                                            02S0060
         ALR   @03,R8                                           02S0060
         SLR   @15,@15                                          02S0060
         ST    @15,WTORECB(,@03)                                02S0060
*RFY (R3,R4) RSTD;                     /* GET REGISTER CONTROL       */
*R2=ADDR(ANSWER);                      /* ADDR OF OPERATOR RESPONCE  */
         LA    @05,8                                            02S0062
         ALR   @05,R8                                           02S0062
         LA    R2,ANSWER(,@05)                                  02S0062
*R3=ADDR(WTORECB);                     /* ADDR WOTR/WAIT ECB         */
         LR    R3,@05                                           02S0063
*R4=ADDR(MSGBUF);                      /* ADDR MESSAGE FOR OPERATOR  */
         LA    R4,MSGBUF(,@05)                                  02S0064
*GEN(WTOR ,(R2),1,(R3),MF=(E,(R4)));   /* SEND MESSAGE TO OPERATOR   */
         WTOR ,(R2),1,(R3),MF=(E,(R4))
*R2=R1;                                /* SAVE MESSAGE ID            */
         LR    R2,R1                                            02S0066
*GEN(WAIT  ECB=(R3));                  /* WAIT FOR RESPONCE          */
         WAIT  ECB=(R3)
*GEN(DOM   MSG=(R2));                  /* CLEAR MESSAGE FROM SCREEN  */
         DOM   MSG=(R2)
*RFY (R3,R4) UNRSTD;                   /* RELEASE REGISTER CONTROL   */
*END;                                                           01S0070
@DE00059 LA    @03,8                                            01S0070
         ALR   @03,R8                                           01S0070
         CLI   ANSWER(@03),C'U'                                 01S0070
         BNE   @DL00059                                         01S0070
*SMCAMAN='0'B;                         /* TURN OFF RECORDING         */
*SMCAUSER='0'B;                                                 01S0072
         L     @15,CVTPTR                                       01S0072
         L     @15,CVTSMCA(,@15)                                01S0072
         NI    SMCAMAN(@15),B'00111111'                         01S0072
*SMCADSTR='1'B;                        /* INDICATE DISATER CONDITION */
         OI    SMCADSTR(@15),B'01000000'                        01S0073
*IF STAETYPE='0'B THEN                 /* IS STAE FOR SMF WRITER     */
         TM    STAETYPE(R8),B'10000000'                         01S0074
         BNZ   @RF00074                                         01S0074
*  DO;                                 /* YES                        */
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= SVCCLNUP                                            */
*/*                                                                  */
*/*DESCRIPTIVE NAME= CLEANUP SVC IF WAITING FOR WRITER               */
*/*                                                                  */
*/*FUNCTION=                                                         */
*/*  THIS SEGMENT WILL CLEANUP THE FOR THE SVC, IF ONE IS            */
*/*  CURRENTLY WAITING FOR THE SMF WRITER. THIS CLEANUP INVOLVES     */
*/*  POSTING THE SVC OUT OF ITS WAIT.                                */
*/*                                                                  */
*/*  OPERATION=                                                      */
*/*    TO DETERMINE IF THERE IS A NEED TO PERFORM POST (SVC          */
*/*    WAITING), AN ENQ ON THE SMF BUFFER RESOURCE WILL BE ISSUED.   */
*/*    IF THE RESOURCE IS OBTAINED, THERE IS OBVIOUSLY NO SVC        */
*/*    PERFORMING RECORD PROCESSING, AND THEREFORE CANNOT BE         */
*/*    WAITING FOR THE WRITER.                                       */
*/*    THIS ASSUMS THAT WHENEVER THE SVC IS WAITING, IT IS           */
*/*    HOLDING THE SMF BUFFER RESOURCE.                              */
*/*                                                                  */
*/*ENTRY= IN-LINE SEGMENT                                            */
*/*  PURPOSE= SEE FUNCTION                                           */
*/*  INPUT=                                                          */
*/*    SMCAASCB - ASCB ADDRESS OF THE SMF SVC.                       */
*/*    SMCABECB - ECB THAT THE SVC IS WAITING ON.                    */
*/*    IEEMB827 - XMPOST ERROR EXIT ROUTINE                          */
*/*                                                                  */
*/*EXITS=                                                            */
*/*  CONDITION= NORMAL, THE SVC IS POSTED TO START.                  */
*/*  OUTPUT=                                                         */
*/*    SMCABECB - POSTED                                             */
*/*  RETURN CODES= NONE                                              */
*/*                                                                  */
*/*  CONDITION= NORMAL, THE SVC WAS NOT WAITING AND THEREFORE        */
*/*        NOT POSTED.                                               */
*/*  OUTPUT= NONE                                                    */
*/*  RETURN CODES= NONE                                              */
*/*                                                                  */
*/********************************************************************/
*RFY (R3,R4,R5) RSTD;                  /* GET REGISTER CONTROL       */
*ENQLIST(1:ENQLEN)=DYMENQ(1:ENQLEN);     /* GET LIST FORM OF ENQ     */
         LA    @15,8                                            02S0077
         ALR   @15,R8                                           02S0077
         LH    @14,ENQLEN                                       02S0077
         BCTR  @14,0                                            02S0077
         EX    @14,@SM01293                                     02S0077
*R2=ADDR(ENQLIST);                     /* ADDR OF LIST FORM ENQ      */
         LR    R2,@15                                           02S0078
*GEN(ENQ ,MF=(E,(R2)));                /* ENQ ON BUFFER RESOURCE     */
         ENQ ,MF=(E,(R2))
*RFY R15 RSTD;                         /* GET REGISTER CONTROL       */
*IF R15^=0 THEN                        /* DID WE GET RESOURCE        */
         LTR   R15,R15                                          02S0081
         BZ    @RF00081                                         02S0081
*  DO;                                 /* NO, SVC MUST BE CLEANED UP */
*    POSTLIST(1:POSTLEN)=DYMPOST(1:POSTLEN);     /* LIST FORM XMPOST */
         LA    @14,8                                            02S0083
         ALR   @14,R8                                           02S0083
         LH    @11,POSTLEN                                      02S0083
         BCTR  @11,0                                            02S0083
         EX    @11,@SM01295                                     02S0083
*    R2=ADDR(SMCABECB);                /* ADDR OF SVC ECB            */
         L     @11,CVTPTR                                       02S0084
         L     @11,CVTSMCA(,@11)                                02S0084
         LA    R2,SMCABECB(,@11)                                02S0084
*    R3=SMCAASCB;                      /* ADDR OF SVC ASCB ADDR 02S0085
*                                                            @YM00441*/
         L     R3,SMCAASCB(,@11)                                02S0085
*    R4=ADDR(IEEMB827);                /* ADDR OF POST ERROR ROUTINE */
         L     R4,@CV00090                                      02S0086
*    R5=ADDR(POSTLIST);                /* ADDR OF LIST FORM POST     */
         LR    R5,@14                                           02S0087
*    GEN(POST (R2),0,ASCB=(R3),ERRET=(R4),MF=(E,(R5))); /* ISSUE POST*/
         POST (R2),0,ASCB=(R3),ERRET=(R4),MF=(E,(R5))
*  END;                                                         02S0089
*ELSE                                                           02S0090
*  DO;                                 /* IF WE GOT RESOURCE, NO SVC
*                                         TO CLEANUP                 */
         B     @RC00081                                         02S0090
@RF00081 DS    0H                                               02S0091
*    ENQLIST(1:ENQLEN)=DYMENQ(1:ENQLEN);     /* LIST FORM OF ENQ     */
         LA    @14,8                                            02S0091
         ALR   @14,R8                                           02S0091
         LH    @11,ENQLEN                                       02S0091
         BCTR  @11,0                                            02S0091
         EX    @11,@SM01297                                     02S0091
*    R2=ADDR(ENQLIST);                 /* ADDR OF LIST FORM ENQ      */
         LR    R2,@14                                           02S0092
*    GEN(DEQ ,RET=HAVE,MF=(E,(R2)));   /* DEQ OFF SMF BUFFER RESOURCE*/
         DEQ ,RET=HAVE,MF=(E,(R2))
*  END;                                                         02S0094
*RFY (R3,R4,R5,R15) UNRSTD;            /* RELEASE REGISTER CONTROL   */
@RC00081 DS    0H                                               02S0096
*  END;                                                         01S0096
*IF SMCABUFP^=0 THEN                   /* IF BUFFER IS ALLOCATED,    */
@RF00074 SLR   @03,@03                                          01S0097
         L     @15,CVTPTR                                       01S0097
         L     @15,CVTSMCA(,@15)                                01S0097
         L     @14,SMCABUFP(,@15)                               01S0097
         CR    @14,@03                                          01S0097
         BE    @RF00097                                         01S0097
*  DO;                                 /* FREE SMF BUFFERS           */
*    RFY (R3) RSTD;                    /* GET REGISTER CONTROL       */
*    R2=SMCABUFP;                      /* ADDRESS OF BUFFERS         */
         LR    R2,@14                                           01S0100
*    R3=2*SMCABSIZ;                    /* SIZE OF BUFFERS            */
         L     R3,SMCABSIZ(,@15)                                01S0101
         ALR   R3,R3                                            01S0101
*    SMCABUFP=0;                       /* INDICATE BUFFERS FREED     */
         SLR   @14,@14                                          01S0102
         ST    @14,SMCABUFP(,@15)                               01S0102
*    GEN(FREEMAIN R,LV=(R3),A=(R2),SP=231); /* FREE BUF CORE @ZA09178*/
         FREEMAIN R,LV=(R3),A=(R2),SP=231
*  END;                                                         01S0104
*IF WKAREA='1'B THEN                   /* WAS A WORK AREA RECEIEVED, */
@RF00097 TM    WKAREA(R8),B'01000000'                           01S0105
         BNO   @RF00105                                         01S0105
*  DO;                                 /* THEN UPDATE IT             */
*    RECPARM3=MODSTAE;                 /* STAE EXIT NAME TO REC PARMS*/
         LA    @15,8                                            01S0107
         ALR   @15,R8                                           01S0107
         MVC   RECPARM3(8,@15),MODSTAE                          01S0107
*    RECPARM2=MODCSCT;                 /* ABENDED CSECT NAME UNKNOWN */
         MVC   RECPARM2(8,@15),MODCSCT                          01S0108
*    IF STAETYPE='0'B THEN             /* ABEND IN SMF WRITER,       */
         TM    STAETYPE(R8),B'10000000'                         01S0109
         BNZ   @RF00109                                         01S0109
*      RECPARM1=MODWTR;                /* INDICATE SMF WRITER ABEND  */
         MVC   RECPARM1(8,@15),MODWTR                           01S0110
*    ELSE                              /* SMF INIT ABENDED           */
*      RECPARM1=MODINIT;               /* INDICATE SMF INIT ABEND    */
         B     @RC00109                                         01S0111
@RF00109 MVC   RECPARM1+8(8,R8),MODINIT                         01S0111
*      DO;  /*SETRP DUMP(NO)WKAREA(SDWAPTR)RECORD(YES)RC(0)RECPARM(RECP
*RM)*/                                                          01S0112
@RC00109 DS    0H                                               01S0113
*        RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) RSTD;          01S0113
*        GPR01P = SDWAPTR;                                      01S0114
         L     GPR01P,SDWAPTR(,R8)                              01S0114
*        GPR01P->SDWARCDE = 0;  /*SAVE RC VALUE*/               01S0115
         MVI   SDWARCDE(GPR01P),X'00'                           01S0115
*        GPR01P->SDWARCRD = '1'B;  /*TURN ON RECORD INDICATOR*/ 01S0116
         OI    SDWARCRD(GPR01P),B'10000000'                     01S0116
*        GPR15P = ADDR(RECPARM);  /*ACCESS RECORD PARAMETER LIST*/
         LA    GPR15P,8                                         01S0117
         ALR   GPR15P,R8                                        01S0117
*        GPR01P->SDWARECP = GPR15P ->I256C(1:24);  /*COPY RECORD PARAME
*ERS*/                                                          01S0118
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                01S0118
*        GPR01P->SDWAREQ = '0'B;  /*TURN OFF DUMP INDICATOR*/   01S0119
         NI    SDWAREQ(GPR01P),B'01111111'                      01S0119
*        RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;        01S0120
*      END;                                                     01S0121
*                                                               01S0121
*                                                               01S0121
*      DECLARE /*GENERAL PURPOSE REGISTERS */                   01S0122
*        GPR00P PTR(31) REG(0),                                 01S0122
*        GPR01P PTR(31) REG(1),                                 01S0122
*        GPR14P PTR(31) REG(14),                                01S0122
*        GPR15P PTR(31) REG(15);                                01S0122
*                                                               01S0122
*      DECLARE /* COMMON VARIABLES */                           01S0123
*        I256C CHAR(256) BASED,                                 01S0123
*        I031F FIXED(31) BASED,                                 01S0123
*        I031P PTR(31)   BASED,                                 01S0123
*        I015F FIXED(15) BASED,                                 01S0123
*        I015P PTR(15)   BASED,                                 01S0123
*        I008P PTR(8)    BASED,                                 01S0123
*        I001C CHAR(1)   BASED;                                 01S0123
*  END;                                                         01S0124
*RFY (R14,R15) RSTD;                   /* GET REGISTER CONTROL       */
@RF00105 DS    0H                                               01S0126
*R14=R9;                               /* RESTORE RETURN ADDR        */
         LR    R14,R9                                           01S0126
*R15=0;                                /* SET RETURN CODE TO ABEND   */
         SLR   R15,R15                                          01S0127
*END IEEMB825                                                   01S0128
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (B825SPEC)                                        *
*/*%INCLUDE SYSLIB  (B825DATA)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEESMCA )                                        *
*/*%INCLUDE SYSLIB  (IHASDWA )                                        *
*/*%INCLUDE SYSLIB  (TAKEDUMP)                                        *
*/*%INCLUDE SYSLIB  (TAKEDUMS)                                        *
*/*%INCLUDE SYSLIB  (ABENDMSG)                                        *
*/*%INCLUDE SYSLIB  (ABENDMSS)                                        *
*/*%INCLUDE SYSLIB  (CANCMSG )                                        *
*/*%INCLUDE SYSLIB  (CANCMSGS)                                        *
*/*%INCLUDE SYSLIB  (SVCCLNUP)                                        *
*/*%INCLUDE SYSLIB  (SVCCLNUS)                                        *
*;                                                              01S0128
@EL00001 DS    0H                                               01S0128
@EF00001 DS    0H                                               01S0128
@ER00001 BR    @14                                              01S0128
@DATA    DS    0H
@CH01261 DC    H'12'
@SM01286 MVC   DUMPLIST(0,@03),DYMDUMP
@SM01289 MVC   MSGBUF+8(0,R8),SI480I(@03)
@SM01291 MVC   MSGBUF+8(0,R8),SI050A(@03)
@SM01293 MVC   ENQLIST(0,@15),DYMENQ
@SM01295 MVC   POSTLIST(0,@14),DYMPOST
@SM01297 MVC   ENQLIST(0,@14),DYMENQ
@DATD    DSECT
         DS    0F
IEEMB825 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
IEEMB825 CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00090 DC    V(IEEMB827)
@CV00091 DC    V(SIEE050A)
@CV00092 DC    V(SIEE480I)
         DS    0D
@CC00088 DC    C'TERMINATED        '
@CB01265 DC    X'0F0F0F'
MODINIT  DC    CL8'IEEMB820'
MODCSCT  DC    CL8'        '
MODWTR   DC    CL8'IEEMB829'
MODSTAE  DC    CL8'IEEMB825'
QNAME    DC    CL8'SYSZSMF1'
RNAME    DC    CL3'BUF'
TRTABLE  DC    CL16'0123456789ABCEDF'
@DATD    DSECT
IEEMB825 CSECT
DYMDUMP  SDUMP HDR='IEEMB825',SDATA=(SQA,PSA,NUC,LSQA,RGN,LPA,TRT),MF=L
         DS    0H
DUMPLEN  DC    AL2(*-DYMDUMP)
DYMENQ   ENQ   (QNAME,RNAME,E,3,SYSTEM),RET=USE,MF=L
         DS    0H
ENQLEN   DC    AL2(*-DYMENQ)
DYMPOST  POST  MF=L
         DS    0H
POSTLEN  DC    AL2(*-DYMPOST)
IEEMB825 CSECT
IEEMB825 CSECT
PATCH825 DC    (50)X'00'
@DATD    DSECT
@ENDDATD EQU   *
IEEMB825 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R8       EQU   @08
R9       EQU   @09
R14      EQU   @14
R15      EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R6       EQU   @06
R7       EQU   @07
CVTPTR   EQU   16
STAEPARM EQU   0
STAECNTL EQU   STAEPARM
STAETYPE EQU   STAECNTL
SWITCHES EQU   STAEPARM+3
DUMPOK   EQU   SWITCHES
WKAREA   EQU   SWITCHES
SDWAPTR  EQU   STAEPARM+4
STAEWORK EQU   STAEPARM+8
SI050A   EQU   0
SI050ALN EQU   SI050A+8
SI480I   EQU   0
SI480ILN EQU   SI480I
ABNDCODE EQU   22
DUMPLIST EQU   0
ENQLIST  EQU   0
NODUMP   EQU   27
POSTLIST EQU   0
@NM00004 EQU   0
WTORECB  EQU   @NM00004
MSGBUF   EQU   @NM00004+4
UNPKCODE EQU   @NM00004+92
ABENDCDE EQU   @NM00004+97
ANSWER   EQU   @NM00004+100
RECPARM  EQU   0
RECPARM1 EQU   RECPARM
RECPARM2 EQU   RECPARM+8
RECPARM3 EQU   RECPARM+16
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTSMCA  EQU   CVTMAP+196
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SMCABASE EQU   0
SMCAOPT  EQU   SMCABASE
SMCAMISC EQU   SMCABASE+1
SMCAUSER EQU   SMCAMISC
SMCAMAN  EQU   SMCAMISC
SMCABUF  EQU   SMCABASE+12
SMCABSIZ EQU   SMCABUF
SMCABUFP EQU   SMCABASE+20
SMCAPSTA EQU   SMCABASE+30
SMCAPLBL EQU   SMCABASE+34
SMCASTA  EQU   SMCABASE+46
SMCAALBL EQU   SMCABASE+50
SMCABECB EQU   SMCABASE+60
SMCAENTY EQU   SMCABASE+80
SMCAENDI EQU   SMCAENTY
SMCAFOPT EQU   SMCABASE+82
SMCASWA  EQU   SMCABASE+104
SMCADSTR EQU   SMCASWA
SMCAASCB EQU   SMCABASE+120
SMCAPGIN EQU   SMCABASE+136
SMCAPGOT EQU   SMCABASE+140
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAPCHK EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
I256C    EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00055 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00054 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00053 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00052 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00051 EQU   SDWADDAT+3
@NM00050 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00049 EQU   SDWADDAT+1
@NM00048 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00047 EQU   SDWADUMP+2
@NM00046 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00045 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00044 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00043 EQU   SDWAACF3
@NM00042 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00041 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00040 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00039 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00038 EQU   SDWA+239
@NM00037 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00036 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00035 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00034 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00033 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00032 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00031 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00030 EQU   SDWAINC2
@NM00029 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00028 EQU   SDWAILC2
@NM00027 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00026 EQU   SDWANXT2
@NM00025 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00024 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00023 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00022 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00021 EQU   SDWAINC1
@NM00020 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00019 EQU   SDWAILC1
@NM00018 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00017 EQU   SDWANXT1
@NM00016 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00015 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00014 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00013 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00012 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00011 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00010 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00009 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00008 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SMCASTCB EQU   SMCABASE+176
SMCAWTCB EQU   SMCABASE+172
SMCAU83  EQU   SMCABASE+168
SMCAPGM  EQU   SMCABASE+164
SMCARGNM EQU   SMCABASE+160
SMCASPOT EQU   SMCABASE+156
SMCASPIN EQU   SMCABASE+152
SMCARGNS EQU   SMCABASE+148
SMCAPGRL EQU   SMCABASE+144
SMCADOMY EQU   SMCAPGOT
SMCADOMX EQU   SMCAPGIN
SMCATEXP EQU   SMCABASE+132
SMCASAVE EQU   SMCABASE+128
SMCARS21 EQU   SMCABASE+124
SMCATJID EQU   SMCAASCB+2
SMCAPOST EQU   SMCAASCB
SMCADSCT EQU   SMCABASE+116
SMCADSTM EQU   SMCABASE+108
SMCASWD  EQU   SMCABASE+107
SMCASWC  EQU   SMCABASE+106
SMCASWB  EQU   SMCABASE+105
SMCADSSW EQU   SMCASWA
SMCADSSP EQU   SMCASWA
SMCAZEOD EQU   SMCASWA
SMCANAVL EQU   SMCASWA
SMCANADA EQU   SMCASWA
SMCAOPFL EQU   SMCASWA
SMCASWAR EQU   SMCASWA
SMCAXNAM EQU   SMCABASE+96
@NM00007 EQU   SMCABASE+92
SMCAXCTL EQU   SMCABASE+88
SMCAWRTP EQU   SMCABASE+84
SMCAENAL EQU   SMCABASE+83
SMCAFGN  EQU   SMCAFOPT
SMCAFTDS EQU   SMCAFOPT
SMCAFR01 EQU   SMCAFOPT
SMCAFVOL EQU   SMCAFOPT
SMCAFDSA EQU   SMCAFOPT
SMCAFEXT EQU   SMCAFOPT
SMCAFOP2 EQU   SMCAFOPT
SMCAFOP1 EQU   SMCAFOPT
SMCAENOP EQU   SMCAENTY+1
SMCADSNF EQU   SMCAENDI
SMCARS20 EQU   SMCAENDI
SMCARS19 EQU   SMCAENDI
SMCARS18 EQU   SMCAENDI
SMCARS17 EQU   SMCAENDI
SMCARS16 EQU   SMCAENDI
SMCARS15 EQU   SMCAENDI
SMCARS14 EQU   SMCAENDI
SMCAWAIT EQU   SMCABASE+72
SMCASGFT EQU   SMCABASE+68
SMCASGWR EQU   SMCABASE+64
SMCAWECB EQU   SMCABASE+56
SMCAADCB EQU   SMCABASE+52
SMCAYORX EQU   SMCABASE+51
SMCAANL  EQU   SMCAALBL
SMCAASL  EQU   SMCAALBL
SMCAANSL EQU   SMCAALBL
SMCARS13 EQU   SMCAALBL
SMCARS12 EQU   SMCAALBL
SMCARS11 EQU   SMCAALBL
SMCARS10 EQU   SMCAALBL
SMCARS09 EQU   SMCAALBL
SMCAADAR EQU   SMCABASE+47
SMCAAVOL EQU   SMCASTA
SMCAAUNT EQU   SMCASTA
SMCARS08 EQU   SMCASTA
SMCAAMOD EQU   SMCASTA
SMCAAMTY EQU   SMCASTA
SMCAADA  EQU   SMCASTA
SMCAATAP EQU   SMCASTA
SMCAANAV EQU   SMCASTA
SMCAADEV EQU   SMCABASE+40
SMCAPDCB EQU   SMCABASE+36
SMCAXORY EQU   SMCABASE+35
SMCAPNL  EQU   SMCAPLBL
SMCAPSL  EQU   SMCAPLBL
SMCAPNSL EQU   SMCAPLBL
SMCARS07 EQU   SMCAPLBL
SMCARS06 EQU   SMCAPLBL
SMCARS05 EQU   SMCAPLBL
SMCARS04 EQU   SMCAPLBL
SMCARS03 EQU   SMCAPLBL
SMCAPDAR EQU   SMCABASE+31
SMCAPVOL EQU   SMCAPSTA
SMCAPUNT EQU   SMCAPSTA
SMCARS02 EQU   SMCAPSTA
SMCAMOD  EQU   SMCAPSTA
SMCAPMTY EQU   SMCAPSTA
SMCAPDA  EQU   SMCAPSTA
SMCAPTAP EQU   SMCAPSTA
SMCAPNAV EQU   SMCAPSTA
SMCAPDEV EQU   SMCABASE+24
SMCASID  EQU   SMCABASE+16
SMCAJWT  EQU   SMCABASE+8
SMCATIOT EQU   SMCABASE+4
SMCATOFF EQU   SMCABASE+2
SMCADUMP EQU   SMCAMISC
SMCABSW  EQU   SMCAMISC
SMCADBSY EQU   SMCAMISC
SMCAPSDP EQU   SMCAMISC
SMCAFIRT EQU   SMCAMISC
SMCAOPI  EQU   SMCAMISC
SMCAFGND EQU   SMCAOPT
SMCATDS  EQU   SMCAOPT
SMCARS01 EQU   SMCAOPT
SMCAVOL  EQU   SMCAOPT
SMCADSA  EQU   SMCAOPT
SMCAEXT  EQU   SMCAOPT
SMCAOPT2 EQU   SMCAOPT
SMCAOPT1 EQU   SMCAOPT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00006 EQU   CVTFIX+248
@NM00005 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00003 EQU   SI050A+4
@NM00002 EQU   SI050A
@NM00001 EQU   STAEPARM+1
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEEMB825,(C'PLS1838',0701,76209)
