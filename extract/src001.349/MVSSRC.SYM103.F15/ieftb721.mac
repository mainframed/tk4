         TITLE 'IEFTB721 - SMF UNALLOCATION CONTROL ROUTINE            *
                        '
IEFTB721 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFTB721  76.087'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @11,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@11                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         GSPACE   R,LV=(0)
         LR    @10,@01                                          01S0001
         USING @DATD,@10                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @10,8(,@13)                                      01S0001
         LR    @13,@10                                          01S0001
         MVC   @PC00001(4),0(@01)                               01S0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*                                          PROCESSING                */
*/********************************************************************/
* DO; /*MODESET  KEYADDR(ZEROKEY)*/                             01S0102
*   SPKA (ZEROKEY); /*SET PSW KEY*/                             01S0103
         SLR   @12,@12                                          01S0103
         SPKA  0(@12)                                           01S0103
* END; /*MODESET  KEYADDR(ZEROKEY)*/            /* RUN KEY 0          @
*40FPPD*/                                                       01S0104
*LCTPTR=LCTLOC;                        /* LCT ADDRESSABILITY         */
         L     @12,@PC00001                                     01S0105
         L     @12,LCTLOC(,@12)                                 01S0105
         ST    @12,LCTPTR                                       01S0105
*TERMTYPE=TERMIND;                     /* TERMINATION TYPE (JOB/STEP)*/
         MVC   TERMTYPE(1),TERMIND(@12)                         01S0106
*LCTJMRAD='00000000'X;                 /* INIT. JMR POINTER          */
         SLR   @09,@09                                          01S0107
         ST    @09,LCTJMRAD(,@12)                               01S0107
*RETRNCD='00000000'X;                  /* INIT JOB CANCEL RETURN CODE*/
         LR    RETRNCD,@09                                      01S0108
*IF TERMTYPE='10'X & JCTOPT1='1'B ×    /* AT JOB TERM. WITH OPT=1 OR 2
*                                         SMF RECORDING WILL BE DONE */
*   TERMTYPE='0C'X & JCTOPT2='1'B THEN  /* AT STEP TERM WITH OPT=2   */
         CLI   TERMTYPE,X'10'                                   01S0109
         BNE   @GL00001                                         01S0109
         L     @12,LCTJCTAD(,@12)                               01S0109
         TM    JCTOPT1(@12),B'10000000'                         01S0109
         BO    @RT00109                                         01S0109
@GL00001 CLI   TERMTYPE,X'0C'                                   01S0109
         BNE   @RF00109                                         01S0109
         L     @12,LCTPTR                                       01S0109
         L     @12,LCTJCTAD(,@12)                               01S0109
         TM    JCTOPT2(@12),B'01000000'                         01S0109
         BNO   @RF00109                                         01S0109
@RT00109 DS    0H                                               01S0110
*                                      /* SMF RECORDING WILL BE DONE.*/
*  DO;                                 /* THE USER BIT(JCTOPT2) WILL */
*                                      /* NEVER BE ON BY ITSELF.     */
*    IF CVTSMCA^=0 THEN                /* IS THERE A VALID SMCA PTR.?*/
         L     @12,CVTPTR                                       01S0111
         L     @12,CVTSMCA(,@12)                                01S0111
         LTR   @12,@12                                          01S0111
         BZ    @RF00111                                         01S0111
*      DO;                                                      01S0112
*/********************************************************************/
*/*SEGMENT NAME= CNTRLBLK                                            */
*/*DESCRIPTIVE NAME= CONTROL BLOCK SETUP ROUTINE                     */
*/*FUNCTION=                                                         */
*/*        .THIS SEGMENT OBTAINS POINTERS TO ALL REQUIRED CONTROL    */
*/*         BLOCKS TO BE USED IN CONSTRUCTING THE SMF TERMINATION    */
*/*         RECORDS.  A SINGLE CALL OF THE SWA MANAGER RETURNS       */
*/*         THE ADDRESSES OF THE JMR,JOB ACT, AND STEP ACT (IF THE   */
*/*         CURRENT PROCESSING IS FOR A TERMINATING STEP). THE       */
*/*         REQUIRED SWA MANAGER EPAS ARE CHAINED PRIOR TO CALLING   */
*/*         THE SWA MANAGER. THE CORE ADDRESSES OF THE CONTROL       */
*/*         BLOCKS IN SWA ARE RETURNED IN THE EPAS.                  */
*/*        .CORE IS GOTTEN FOR THE JMR THAT IS UPDATED FROM THE CEPA.*/
*/*        .IF NO TCT IS AVAILABLE, A PSEUDO TCT IS CONSTRUCTED TO   */
*/*         FACILITATE THE RECORD BUILDING PROCESS.                  */
*/*OPERATION= NO SPECIAL ALGORITHMS ARE EMPLOYED.                    */
*/*INPUT=                                                            */
*/*      JCTJMR   -SWA VIRTUAL ADDRESS OF JMR                        */
*/*      JCTACTAD -SWA VIRTUAL ADDRESS OF JOB ACT                    */
*/*      SCTACTAD -SWA VIRTUAL ADDRESS OF STEP ACT                   */
*/*      TCTJMR   -CORE ADDRESS OF COMMON EXIT PARAMETER AREA        */
*/*      LCTSNUMB -STEP NUMBER                                       */
*/*      TCBTCT   -ADDRESS OF TCT OR ZERO(INDICATES TCT NOT AVAILABLE*/
*/*      LCTTCBAD -ADDRESS OF CURRENTLY TERMINATING TCB              */
*/*EXIT                                                              */
*/*  CONDITION= PROCESSING COMPLETE.                                 */
*/*  OUTPUT= ADDRESS OF UPDATED JMR(JMRPTR).                         */
*/*          ADDRESS OF JOB ACT(SWBLKPTR(JOBACT)).                   */
*/*          ADDRESS OF STEP ACT(SWBLKPTR(STEPACT)), IF STEP TERM.   */
*/*          PSEUDO TCT IF NO TCT EXISTS.                            */
*/*          UPDATED JMR.                                            */
*/*  RETURN CODE= N/A.                                               */
*/********************************************************************/
*SWEPAPTR=ADDR(SWMNRPRM);              /* START OF SWA EPA CHAIN     */
         LA    @12,SWMNRPRM                                     02S0113
         ST    @12,SWEPAPTR                                     02S0113
*SWVA(1)=JCTJMR;                       /* SWA VIRT ADDR OF JMR.      */
         L     @09,LCTPTR                                       02S0114
         L     @15,LCTJCTAD(,@09)                               02S0114
         MVC   SWVA(3,@12),JCTJMR(@15)                          02S0114
*SWCHNPTR(1)=ADDR(SWEPAREA(2));        /* JOB ACT'S EPA ADDRESS      */
         LA    @14,SWEPAREA+16(,@12)                            02S0115
         ST    @14,SWCHNPTR(,@12)                               02S0115
*SWVA(2)=JCTACTAD;                     /* SWA VIRT ADDR OF JOB ACT.  */
         MVC   SWVA+16(3,@12),JCTACTAD(@15)                     02S0116
*SWCHNPTR(2)=ADDR(SWEPAREA(3));            /* STEP ACT'S EPA ADDRESS */
         LA    @15,SWEPAREA+32(,@12)                            02S0117
         ST    @15,SWCHNPTR+16(,@12)                            02S0117
*IF TERMTYPE='0C'X THEN                /* FOR STEP TERMINATION,IT IS */
         CLI   TERMTYPE,X'0C'                                   02S0118
         BNE   @RF00118                                         02S0118
*  DO;                                 /* NECCESSARY TO OBTAIN ADDR  */
*                                      /* OF STEP ACT, ALSO.         */
*    SWVA(3)=SCTAFACT;                 /* SWA VIRT ADDR OF STEP ACT. */
         L     @09,LCTSCTAD(,@09)                               02S0120
         MVC   SWVA+32(3,@12),SCTAFACT(@09)                     02S0120
*    SWCHNPTR(3)='00000000'X;          /* INDICATE LAST EPA.         */
         SLR   @09,@09                                          02S0121
         ST    @09,SWCHNPTR+32(,@12)                            02S0121
*  END;                                                         02S0122
*ELSE                                  /* FOR JOB TERM. - BYPASS     */
*                                      /* LOCATING THE STEP ACT PTR. */
*  SWCHNPTR(2)='00000000'X;            /* INDICATE LAST EPA.         */
         B     @RC00118                                         02S0123
@RF00118 L     @12,SWEPAPTR                                     02S0123
         SLR   @09,@09                                          02S0123
         ST    @09,SWCHNPTR+16(,@12)                            02S0123
*  /*?SWAREQ (RL) EPA (SWEPAPTR);*/                             02S0124
*  CALL SWAMGR (SWEPAPTR,'RL');          /* CALL SWA MANAGER FOR LOCATE
*                                           FUNCTION            02S0124
*/                                                              02S0124
@RC00118 LA    @12,SWEPAPTR                                     02S0124
         ST    @12,@AL00001                                     02S0124
         LA    @12,@CC02428                                     02S0124
         ST    @12,@AL00001+4                                   02S0124
         L     @12,CVTPTR                                       02S0124
         L     @12,CVTJESCT(,@12)                               02S0124
         L     @15,JESWAA(,@12)                                 02S0124
         LA    @01,@AL00001                                     02S0124
         BALR  @14,@15                                          02S0124
*RFY (REG0,REG1) RSTD;                                          02S0125
*LNGTH=176;                            /* LENGTH OF JMR AREA         */
         MVC   LNGTH(3),@CF01131+1                              02S0126
*QMPAPTR=ADDR(QMGR1);                  /* QMPA ADDRESS WITHIN LCT    */
         L     QMPAPTR,LCTPTR                                   02S0127
         LA    QMPAPTR,QMGR1(,QMPAPTR)                          02S0127
*SWASUBPL=QMSWSP;                      /* SWA MANAGER LCTQMPA SUBPOOL*/
         MVC   SWASUBPL(1),QMSWSP(QMPAPTR)                      02S0128
*REG0=JMRSPLEN;                        /* SUBPOOL AND LENGTH OF GET  */
         L     REG0,JMRSPLEN                                    02S0129
*GEN (GETMAIN R,LV=(REG0));            /* GET JMR COMPOSITE AREA     */
         GETMAIN R,LV=(REG0)
*JMRPTR=REG1;                          /* ADDRESS OF JMR CORE IN SWA */
         ST    REG1,JMRPTR                                      02S0131
*JMR(1:176)=JMR&&JMR;                  /* CLEAR COMPOSITE JMR AREA   */
         L     @12,JMRPTR                                       02S0132
         XC    JMR(176,@12),JMR(@12)                            02S0132
*JMR=SWBLKPTR(1)->JMR;                 /* COPY JMR TO SWA SUBPOOL    */
         L     @09,SWEPAPTR                                     02S0133
         L     @09,SWBLKPTR(,@09)                               02S0133
         MVC   JMR(76,@12),JMR(@09)                             02S0133
*RFY (REG0,REG1) UNRSTD;                                        02S0134
*JMRSTEP=LCTSNUMB;                     /* UPDATE THE STEP NUMBER     */
         L     @09,LCTPTR                                       02S0135
         IC    @15,LCTSNUMB(,@09)                               02S0135
         STC   @15,JMRSTEP(,@12)                                02S0135
*GENSMFCB='0'B;                        /* INITIALIZE FAKE TCT SWITCH.*/
         NI    GENSMFCB,B'10111111'                             02S0136
*IF TCBTCT='00000000'X THEN            /* IS THERE A TCT?            */
         L     @12,LCTTCBAD(,@09)                               02S0137
         L     @12,TCBTCT(,@12)                                 02S0137
         LTR   @12,@12                                          02S0137
         BNZ   @RF00137                                         02S0137
*  DO;                                                          02S0138
*    RFY (REG0,REG1,REG2) RSTD;                                 02S0139
*    GENSMFCB='1'B;                    /* INDICATE PSEUDO TCT BUILT. */
         OI    GENSMFCB,B'01000000'                             02S0140
*    REG2=LENGTH(SMFTCT)+LENGTH(TCTCORE);/*                     02S0141
*                                         TCT LENGTH FOR GETMAIN.    */
         LA    REG2,116                                         02S0141
*    GEN (GETMAIN R,SP=253,LV=(REG2));     /* GET PSEUDO TCT AREA    */
         GETMAIN R,SP=253,LV=(REG2)
*    TCBTCT=REG1;                      /* ADDRESS OF TCT TO TCB      */
         L     @12,LCTPTR                                       02S0143
         L     @12,LCTTCBAD(,@12)                               02S0143
         ST    REG1,TCBTCT(,@12)                                02S0143
*    SMFTCT(1:LENGTH(SMFTCT)+LENGTH(TCTCORE))=SMFTCT&&SMFTCT;/* 02S0144
*                                         CLEAR PSEUDO TCT AREA      */
         L     @09,LCTPTR                                       02S0144
         L     @09,LCTTCBAD(,@09)                               02S0144
         L     @09,TCBTCT(,@09)                                 02S0144
         XC    SMFTCT(116,@09),SMFTCT(@09)                      02S0144
*    TCTTCB=LCTTCBAD;                  /* ADDRESS OF TCB TO TCT      */
         ST    @12,TCTTCB(,@09)                                 02S0145
*    TCTSIZE=LENGTH(SMFTCT)+LENGTH(TCTCORE);/*                  02S0146
*                                         TCT'S LENGTH SAVED         */
         MVC   TCTSIZE(3,@09),@CF02462+1                        02S0146
*    TCTSPOOL=253;                     /* TCT'S SUBPOOL NUMBER TO TCT*/
         MVI   TCTSPOOL(@09),X'FD'                              02S0147
*    TCTJMR=JMRPTR;                    /* ADDRESS OF JMR TO TCT      */
         L     @12,JMRPTR                                       02S0148
         ST    @12,TCTJMR(,@09)                                 02S0148
*    TCTCRTBL=ADDR(SMFTCT)+LENGTH(SMFTCT); /* ADDR TCT CORE TABLE    */
         LA    @12,84                                           02S0149
         ALR   @12,@09                                          02S0149
         ST    @12,TCTCRTBL(,@09)                               02S0149
*    RFY (REG0,REG1,REG2) UNRSTD;                               02S0150
*  END;                                                         02S0151
*ELSE                                                           02S0152
*  JMR(1:36)=                          /* UPDATE SWA'S JMR           */
*    TCTJMR->JMR;                      /* FROM CEPA                  */
         B     @RC00137                                         02S0152
@RF00137 L     @12,JMRPTR                                       02S0152
         L     @09,LCTPTR                                       02S0152
         L     @09,LCTTCBAD(,@09)                               02S0152
         L     @09,TCBTCT(,@09)                                 02S0152
         L     @09,TCTJMR(,@09)                                 02S0152
         MVC   JMR(36,@12),JMR(@09)                             02S0152
*  JMRSTEP=LCTSNUMB;                   /* UPDATE STEP NUMB OVER CEPA */
@RC00137 L     @12,LCTPTR                                       02S0153
         IC    @09,LCTSNUMB(,@12)                               02S0153
         L     @12,JMRPTR                                       02S0153
         STC   @09,JMRSTEP(,@12)                                02S0153
*/********************************************************************/
*/*SEGMENT NAME= TB722PRP                                            */
*/*DESCRIPTIVE NAME= IEFTB722 PREPARATION SEGMENT                    */
*/*FUNCTION=                                                         */
*/*        .THIS SEGMENT DETERMINES THE JOB ACCOUNTING FIELDS SIZE   */
*/*         AT JOB AND STEP TERMINATION BY TOTALING THE JOB ACT      */
*/*         SUBFIELD LENGTHS, THE CPU TIME FIELD LENGTH, THE BYTE    */
*/*         THAT CONTAINS THE NUMBER OF ACCOUNT SUBFIELDS, AND THE   */
*/*         LENGTH OF THE PROGRAMMER NAME FIELD.                     */
*/*        .IT DETERMINES THE STEP ACCOUNTING FIELD SIZE, AND        */
*/*         DEVICE INFORMATION SIZE(TCTIOT ENTRIES) AT STEP          */
*/*         TERMINATION.                                             */
*/*           .STEP ACCOUNT FIELD SIZE DETERMINED BY TOTALING THE    */
*/*            STEP ACT SUBFIELD LENGTHS, THE CPU TIME FIELD LENGTHS */
*/*            THE BYTE THAT CONTAINS THE NUMBER OF ACCOUNT SUBFIELDS*/
*/*           .DEVICE INFORMATION SIZE DETERMINED BY MULTIPLING EIGHT*/
*/*            TIMES THE NUMBER OF ENTRIES IN THE TCTIOT I/O DEVICE  */
*/*            ENTRY LOOKUP SECTION, IF A TCTIOT IS AVAILABLE.       */
*/*        .THE ABOVE LENGTHS ARE THEN EMPLOYED TO DETERMINE THE     */
*/*         SIZE OF TERMINATION RECORD THAT WILL BE CONSTRUCTED.     */
*/*        .THE CORE, AS DETERMINED ABOVE, IS OBTAINED.              */
*/*OPERATION=                                                        */
*/*         .STEP TERMINATION RECORD SIZE= LENGTH OF STANDARD STEP   */
*/*          RECORD + LENGTH STEP ACCOUNT FIELD INFORMATION + LENGTH */
*/*          OF DEVICE ENTRY INFORMATION.                            */
*/*         .JOB TERMINATION RECORD SIZE= LENGTH OF STANDARD JOB     */
*/*          RECORD + LENGTH OF JOB ACCOUNT FIELD INFORMATION.       */
*/*INPUT=                                                            */
*/*      JOB ACT  -JOB ACCOUNT CONTROL TABLE.                        */
*/*      STEP ACT -STEP ACCOUNT CONTROL TABLE.                       */
*/*      TCTIOT   -TCT TASK INPUT/OUTPUT TABLE.                      */
*/*      LCT      -LINKAGE CONTROL TABLE.                            */
*/*EXIT                                                              */
*/*  CONDITION= PROCESSING COMPLETE FOR STEP TERM. RECORD PREPARATION*/
*/*  OUTPUT=RECORDLN - LENGTH OF RECORD TO BE BUILT.                 */
*/*         ACTPTR - POINTER TO ACCOUNT FIELDS.                      */
*/*         ACTLEN - ACCOUNT FIELDS LENGTH.                          */
*/*         SACTSIZE - SIZE OF STEP ACCOUNT INFORMATION.             */
*/*         JACTSIZE - SIZE OF JOB ACCOUNT INFORMATION.              */
*/*         TCTIOTLN - SIZE OF DEVICE ENTRY INFORMATION.             */
*/*         RECORD   - POINTER TO GOTTEN AREA FOR RECORD BUILDING.   */
*/*  RETURN CODE= N/A                                                */
*/*  CONDITION= PROCESSING COMPLETE FOR JOB TERM. RECORD PREPARATION */
*/*  OUTPUT=RECORDLN - LENGTH OF RECORD TO BE BUILT.                 */
*/*         JACTSIZE - SIZE OF JOB ACCOUNT INFORMATION.              */
*/*         RECORD   - POINTER TO GOTTEN AREA FOR RECORD BUILDING.   */
*/*  RETURN CODE= N/A.                                               */
*/********************************************************************/
*JACTSIZE='00000000'X;                 /* INITIALIZE JOB ACT SIZE    */
         SLR   @12,@12                                          02S0154
         LR    JACTSIZE,@12                                     02S0154
*SACTSIZE='00000000'X;                 /* INITIALIZE STEP ACT SIZE   */
         LR    SACTSIZE,@12                                     02S0155
*TCTIOTLN='00000000'X;                 /* INITIALIZE DEVICE INFORMATION
*                                         SIZE                       */
         STH   @12,TCTIOTLN                                     02S0156
*RFY IEFAACTB BASED(ACTPTR);                                    02S0157
*ACTPTR=SWBLKPTR(2);                   /* POINTER TO JOB ACT.        */
         L     @12,SWEPAPTR                                     02S0158
         L     @12,SWBLKPTR+16(,@12)                            02S0158
         ST    @12,ACTPTR                                       02S0158
*JACTSIZE=LENGTH(TLGRVB)+LENGTH(TLGCPUTM)+LENGTH(TLGNBRAC);/*   02S0159
*                                         INITIALIZE ACT SIZE AREA WITH
*                                         LENGTH OF PROGR. NAME, PPTIME
*                                         + ACCT FIELD LENGTH BYTE   */
         LA    JACTSIZE,24                                      02S0159
*ACCTPTR= ADDR(ACTACCNT);              /* PTR TO FIRST ACCOUNT FIELD */
         LA    ACCTPTR,ACTACCNT(,@12)                           02S0160
*DO COUNT=1  TO ACTJNFLD;              /* LOOP CONTROL TO ACCUMULATE
*                                         SIZE OF ACCOUNTING INFORMA-
*                                         TION FIELDS FROM ACT.      */
         LA    @12,1                                            02S0161
         B     @DE00161                                         02S0161
@DL00161 DS    0H                                               02S0162
*  JACTSIZE=JACTSIZE+ACCTLEN+LENGTH(ACCTLEN);/* ADD ACCT FIELD LENGTH*/
         LA    @09,1                                            02S0162
         SLR   @05,@05                                          02S0162
         IC    @05,ACCTLEN(,ACCTPTR)                            02S0162
         LR    @15,JACTSIZE                                     02S0162
         ALR   @15,@05                                          02S0162
         ALR   @15,@09                                          02S0162
         LR    JACTSIZE,@15                                     02S0162
*  ACCTPTR=ACCTPTR+ACCTLEN+LENGTH(ACCTLEN);/* POINT TO NEXT ACCT FIELD
*                                          =LENGTH OF SUBFIELD BYTE+ */
         ALR   @05,ACCTPTR                                      02S0163
         ALR   @05,@09                                          02S0163
         LR    ACCTPTR,@05                                      02S0163
*END;                                  /* SUBFIELD LENGTH.           */
         AL    @12,@CF00062                                     02S0164
@DE00161 STC   @12,COUNT                                        02S0164
         L     @09,ACTPTR                                       02S0164
         SLR   @05,@05                                          02S0164
         IC    @05,ACTJNFLD(,@09)                               02S0164
         CR    @12,@05                                          02S0164
         BNH   @DL00161                                         02S0164
*RECORDLN=JACTSIZE+                    /* JOB RECORD LENGTH=SIZE OF  */
*         LENGTH(SMFRCD35)-(LENGTH(TLGRVB)+LENGTH(TLGCPUTM)+LENGTH(TLGN
*RAC));                                /* COMMON REC.+ACCOUNT FIELDS.*/
         LR    @12,JACTSIZE                                     02S0165
         SL    @12,@CF02465                                     02S0165
         STH   @12,RECORDLN                                     02S0165
*ACTLEN=JACTSIZE;                      /* JOB ACTSIZE FOR IEFTB722   */
         STC   JACTSIZE,ACTLEN                                  02S0166
*IF TERMTYPE='0C'X THEN                /* IS THIS STEP TERMINATION?  */
         CLI   TERMTYPE,X'0C'                                   02S0167
         BNE   @RF00167                                         02S0167
*  DO;                                 /* YES- DO UNIQUE STEP PROCESS*/
*                                      /* DEVICE ENTRY LENGTH FIELD  */
*    IF TCTIOTBL ^= '00000000'X THEN   /* IS THERE A TCTIOT?         */
         L     @12,LCTPTR                                       02S0169
         L     @12,LCTTCBAD(,@12)                               02S0169
         L     @12,TCBTCT(,@12)                                 02S0169
         L     @12,TCTIOTBL(,@12)                               02S0169
         LTR   @12,@12                                          02S0169
         BZ    @RF00169                                         02S0169
*      DO;                             /* YES- THEN OBTAIN DEVICE
*                                         ENTRY SECTION SIZE         */
*        TCTIOTLN=TCTSZLKP;            /* LENGTH OF DEVICE ENTRIES   */
         LH    @12,TCTSZLKP(,@12)                               02S0171
         STH   @12,TCTIOTLN                                     02S0171
*      END;                                                     02S0172
*    ACTPTR=SWBLKPTR(3);               /* STEP ACT POINTER           */
@RF00169 L     @12,SWEPAPTR                                     02S0173
         L     @12,SWBLKPTR+32(,@12)                            02S0173
         ST    @12,ACTPTR                                       02S0173
*    SACTSIZE=LENGTH(TIVCPUA);         /* LENGTH OF FIELDS CONTAINING
*                                         EXECUTION TIME AND NUMBER OF
*                                         ACCOUNTING FIELDS.         */
         LA    SACTSIZE,5                                       02S0174
*    ACCTPTR=ADDR(ACTACCNT);           /* PTR TO FIRST ACCOUNT FIELD */
         LA    ACCTPTR,ACTACCNT(,@12)                           02S0175
*    DO COUNT=1  TO ACTJNFLD;          /* LOOP CONTROL TO ACCUMULATE
*                                         SIZE OF ACCOUNTING INFORMA-
*                                         TION FIELDS FROM ACT.      */
         LA    @12,1                                            02S0176
         B     @DE00176                                         02S0176
@DL00176 DS    0H                                               02S0177
*      SACTSIZE=SACTSIZE+ACCTLEN+LENGTH(ACCTLEN);/* ACCT FIELD LENGTH*/
         LA    @09,1                                            02S0177
         SLR   @05,@05                                          02S0177
         IC    @05,ACCTLEN(,ACCTPTR)                            02S0177
         LR    @15,SACTSIZE                                     02S0177
         ALR   @15,@05                                          02S0177
         ALR   @15,@09                                          02S0177
         LR    SACTSIZE,@15                                     02S0177
*      ACCTPTR=ACCTPTR+ACCTLEN+LENGTH(ACCTLEN);/* POINT TO NEXT FIELD,
*                                         LENGTH OF SUBFIELD BYTE +
*                                         SUBFIELD LENGTH.           */
         ALR   @05,ACCTPTR                                      02S0178
         ALR   @05,@09                                          02S0178
         LR    ACCTPTR,@05                                      02S0178
*    END;                                                       02S0179
         AL    @12,@CF00062                                     02S0179
@DE00176 STC   @12,COUNT                                        02S0179
         L     @09,ACTPTR                                       02S0179
         SLR   @05,@05                                          02S0179
         IC    @05,ACTJNFLD(,@09)                               02S0179
         CR    @12,@05                                          02S0179
         BNH   @DL00176                                         02S0179
*    RECORDLN=LENGTH(SMFRCD34)+LENGTH(TIVRELS)+TCTIOTLN+SACTSIZE;
         LA    @12,178                                          02S0180
         AH    @12,TCTIOTLN                                     02S0180
         ALR   @12,SACTSIZE                                     02S0180
         STH   @12,RECORDLN                                     02S0180
*                                      /* STEP RECORD LENGTH         */
*    ACTLEN=SACTSIZE;                  /* STEP ACT SIZE FOR IEFTB722 */
         STC   SACTSIZE,ACTLEN                                  02S0181
*  END;                                /* (OVERRIDES JOB SIZE)       */
*RFY (REG0,REG1,REG2) RSTD;                                     02S0183
@RF00167 DS    0H                                               02S0184
*REG2=RECORDLN;                        /* RECORD LENGTH FOR GETMAIN  */
         LH    REG2,RECORDLN                                    02S0184
*GEN (GETMAIN R,SP=230,LV=(REG2));     /* OBTAIN RECORD CORE         */
         GETMAIN R,SP=230,LV=(REG2)
*RECORD=REG1;                          /* POINT TO RECORD FOR TB722  */
         ST    REG1,RECORD                                      02S0186
*RFY (REG0,REG1,REG2) UNRSTD;                                   02S0187
*        CALL IEFTB722(ACTPTR,JMRPTR,LCTPTR,RECORD,ACTLEN,      01S0188
*          TCTIOTLN,COMPCODE,RECORDLN);/* CALL TB722 FOR RECORD BUILD*/
         LA    @12,ACTPTR                                       01S0188
         ST    @12,@AL00001                                     01S0188
         LA    @12,JMRPTR                                       01S0188
         ST    @12,@AL00001+4                                   01S0188
         LA    @12,LCTPTR                                       01S0188
         ST    @12,@AL00001+8                                   01S0188
         LA    @12,RECORD                                       01S0188
         ST    @12,@AL00001+12                                  01S0188
         LA    @12,ACTLEN                                       01S0188
         ST    @12,@AL00001+16                                  01S0188
         LA    @12,TCTIOTLN                                     01S0188
         ST    @12,@AL00001+20                                  01S0188
         LA    @12,COMPCODE                                     01S0188
         ST    @12,@AL00001+24                                  01S0188
         LA    @12,RECORDLN                                     01S0188
         ST    @12,@AL00001+28                                  01S0188
         L     @15,@CV00166                                     01S0188
         LA    @01,@AL00001                                     01S0188
         BALR  @14,@15                                          01S0188
*                                      /* COMPCODE WILL BE RETURNED. */
*        RECRDCAN='0'B;                /* INIT RECORD CANCELATION BIT*/
         NI    RECRDCAN,B'01111111'                             01S0189
*        IF JCTEXITS='1'B THEN         /* SHOULD USER EXITS BE TAKEN?*/
         L     @12,LCTPTR                                       01S0190
         L     @09,LCTJCTAD(,@12)                               01S0190
         TM    JCTEXITS(@09),B'00100000'                        01S0190
         BNO   @RF00190                                         01S0190
*          DO;                         /* YES, THEN          @YM04108*/
*/********************************************************************/
*/*SEGMENT NAME= USERPARM                                            */
*/*DESCRIPTIVE NAME= USER EXIT INTERFACE SET UP              @YM04108*/
*/*FUNCTION=                                                         */
*/*        .THIS SEGMENT ESTABLISHES THE INTERFACE TO THE JOB AND    */
*/*         STEP TERMINATION SMF USER EXIT(IEFACTRT), IF THE EXIT=   */
*/*         YES BIT IS SET IN THE JCT(BIT ORGINATES IN SMCA).        */
*/*OPERATION= NO SPECIAL ALGORITHMS ARE EMPLOYED                     */
*/*                                                                  */
*/*INPUT=SACTSIZE -LENGTH OF STEP ACT FIELDS TO BE PASSED TO USEREXIT*/
*/*      CEPA     -COMMON EXIT PARAMETER AREA.                       */
*/*      JOBACT   -JOB ACCOUNT CONTROL TABLE.                        */
*/*      STEPACT  -STEP ACCOUNT CONTROL TABLE.                       */
*/*      LCT      -LINKAGE CONTROL TABLE.                            */
*/*      COMPCODE -COMPLETION CODE SET UP IN IEFTB722.               */
*/*      CANCLBYT -JOB CANCEL INDICATORS.                            */
*/*      JACTSIZE -LENGTH OF JOB ACT FIELDS TO BE PASSED TO USER EXIT*/
*/*EXIT                                                              */
*/*  CONDITION=USER EXIT INTERFACE COMPLETE.                         */
*/*  OUTPUT=  USER EXIT INTERFACE                            @YM04108*/
*/*  RETURN CODE= NONE                                       @YM04108*/
*/********************************************************************/
*EXITPTRS=EXITPTRS&&EXITPTRS;          /* PARAMETER ADDRESSABILITY   */
         XC    EXITPTRS(40),EXITPTRS                            02S0192
*CANCLBYT=CANCLBYT&&CANCLBYT;          /* CLEAR CANCEL BYTE & STEP # */
         XC    CANCLBYT(2),CANCLBYT                             02S0193
*CEPAPTR=TCTJMR;                       /* CEPA ADDRESS TO PARAM. LIST*/
         L     @09,LCTTCBAD(,@12)                               02S0194
         L     @09,TCBTCT(,@09)                                 02S0194
         L     @09,TCTJMR(,@09)                                 02S0194
         ST    @09,CEPAPTR                                      02S0194
*IF LCTJFAIL='1'B THEN                 /* SET CANCEL BIT IF THE JOB- */
         TM    LCTJFAIL(@12),B'10000000'                        02S0195
         BNO   @RF00195                                         02S0195
*  CANCELJB='1'B;                      /* HAS ALREADY BEEN CANCELLED */
         OI    CANCELJB,B'00000001'                             02S0196
*STEPNUM=LCTSNUMB;                     /* STEP NUMBER TO PARAM. AREA */
@RF00195 L     @12,LCTPTR                                       02S0197
         IC    @09,LCTSNUMB(,@12)                               02S0197
         STC   @09,STEPNUM                                      02S0197
*CANCLPTR=ADDR(CANCLBYT);              /* CANCEL INDICATOR & STEP
*                                         NUMBER ADDRESS TO PARAMLIST*/
         LA    @12,CANCLBYT                                     02S0198
         ST    @12,CANCLPTR                                     02S0198
*CMPCDPTR=ADDR(COMPCODE);              /* COMPLETION CODE ADDRESS
*                                         RETURNED FROM IEFTB722.    */
         LA    @12,COMPCODE                                     02S0199
         ST    @12,CMPCDPTR                                     02S0199
*RFY IEFAACTB BASED(SWBLKPTR(2));      /* JOB ACT ADDRESSABILITY.    */
*ACCTJOB=ACCTJOB&&ACCTJOB;             /* CLEAR JOBACT PARAMETER AREA*/
         XC    ACCTJOB(168),ACCTJOB                             02S0201
*ACCTJOB(1:JACTSIZE)=ACTPRGNM;         /* MOVE JOB STMT. ACCOUNTING
*                                         INFO. TO PARAMETER AREA.   */
         LR    @12,JACTSIZE                                     02S0202
         BCTR  @12,0                                            02S0202
         L     @09,SWEPAPTR                                     02S0202
         L     @05,SWBLKPTR+16(,@09)                            02S0202
         EX    @12,@SM02472                                     02S0202
*PRGRNPTR=ADDR(PRGRNAM);               /* POINTER TO PROGRAMMER NAME
*                                         INTO PARAMETER LIST        */
         LA    @12,PRGRNAM                                      02S0203
         ST    @12,PRGRNPTR                                     02S0203
*JBCPUPTR=ADDR(JOBTIME);               /* POINTER TO JOB CPU TIME TO
*                                         PARAMETER LIST             */
         LA    @12,JOBTIME                                      02S0204
         ST    @12,JBCPUPTR                                     02S0204
*JBACTPTR=ADDR(JACTINFO);              /* POINTER TO JOB STMT.ACCOUNT
*                                         FIELDS TO PARAMETER LIST.  */
         LA    @12,JACTINFO                                     02S0205
         ST    @12,JBACTPTR                                     02S0205
*RECRDPTR=RECORD;                      /* ADDRESS OF TERM. RECORD    */
         L     @12,RECORD                                       02S0206
         ST    @12,RECRDPTR                                     02S0206
*IF TERMTYPE='0C'X THEN                                         02S0207
         CLI   TERMTYPE,X'0C'                                   02S0207
         BNE   @RF00207                                         02S0207
*  DO;                                                          02S0208
*    RFY IEFAACTB BASED(SWBLKPTR(3));      /* STEP ACT ADDRESSABILITY*/
*    ACCTSTEP=ACCTSTEP&&ACCTSTEP;      /* CLEAR STEP ACT PARM AREA   */
         XC    ACCTSTEP(148),ACCTSTEP                           02S0210
*    STEPTIM=ACTJTIME;                 /* MOVE EXECUTION TIME TO
*                                         PARAMETER AREA.            */
         L     @12,SWBLKPTR+32(,@09)                            02S0211
         MVC   STEPTIM(3),ACTJTIME(@12)                         02S0211
*    SACTNUM=ACTJNFLD;                 /* NUMBER OF ACCOUNT FIELDS   */
         IC    @09,ACTJNFLD(,@12)                               02S0212
         STC   @09,SACTNUM                                      02S0212
*    SIZE=SACTSIZE-(LENGTH(TIVCPUA));  /* DECREMENT SIZE BY LENGTH   */
         LR    SIZE,SACTSIZE                                    02S0213
         SL    SIZE,@CF01197                                    02S0213
*                                      /* OF FIELDS ALREADY MOVED.   */
*    IF SIZE > '00000000'X THEN        /* ONLY MOVE ACCOUNT FIELDS   */
         C     SIZE,@CF02424                                    02S0214
         BNH   @RF00214                                         02S0214
*      SACTINFO(1:SIZE)=ACTACCNT;      /* MOVE ACCOUNT INFO. FIELDS. */
         LR    @09,SIZE                                         02S0215
         BCTR  @09,0                                            02S0215
         EX    @09,@SM02474                                     02S0215
*    STPCPUPT=ADDR(STEPTIM);           /* POINTER TO STEP CPU AND
*                                         NUMBER OF ACCT=  FIELDS.   */
@RF00214 LA    @12,STEPTIM                                      02S0216
         ST    @12,STPCPUPT                                     02S0216
*    STPACTPT=ADDR(SACTINFO);          /* POINTER TO EXEC STMT ACCOUNT
*                                         FIELDS TO PARAMETER LIST.  */
         LA    @12,SACTINFO                                     02S0217
         ST    @12,STPACTPT                                     02S0217
*    STEPNAM=SCTSNAME;                 /* STEP NAME TO PARAMETER AREA*/
         L     @12,LCTPTR                                       02S0218
         L     @12,LCTSCTAD(,@12)                               02S0218
         MVC   STEPNAM(8),SCTSNAME(@12)                         02S0218
*    STPNMPTR=ADDR(STEPNAM);           /* POINTER TO STEPNAME INTO
*                                         PARAMETER LIST.            */
         LA    @12,STEPNAM                                      02S0219
         ST    @12,STPNMPTR                                     02S0219
*  END;                                                         02S0220
*/***********************************************************@YM04108*/
*/*SEGMENT NAME= INVKEXIT                                    @YM04108*/
*/*DESCRIPTIVE NAME= INVOKE USER EXIT ROUTINE - IEFACTRT.    @YM04108*/
*/*FUNCTION=                                                 @YM04108*/
*/*        .THIS SEGMENT ESTABLISHES THE REMAINDER OF THE    @YM04108*/
*/*         INTERFACE TO THE JOB AND STEP TERMINATION        @YM04108*/
*/*         SMF USER EXIT (IEFACTRT):                        @YM04108*/
*/*           .INPUT TO IEFACTRT:                            @YM04108*/
*/*                  REGISTER 0 = X'0C' AT STEP TERM.        @YM04108*/
*/*                             = X'10' AT JOB TERM.         @YM04108*/
*/*                  REGISTER 1 = ADDRESS OF POINTER LIST    @YM04108*/
*/*           .OUTPUT FROM IEFACTRT:                         @YM04108*/
*/*                  IF REGISTER 1  =4- CANCEL THE RECORD    @YM04108*/
*/*                  IF REGISTER 15 =4- CANCEL THE JOB-      @YM04108*/
*/*                                     STEPS REMAINING      @YM04108*/
*/*        .IF THE JOB IS TO BE CANCELLED, THE CANCEL RETURN @YM04108*/
*/*         CODE OF FOUR IS SET FOR IEFBB410 (IEFTB721'S     @YM04108*/
*/*         CALLER).                                         @YM04108*/
*/*OPERATION=                                                @YM04108*/
*/*      AN ESTAE EXIT IS ESTABLISHED IN ORDER               @YM04108*/
*/*      TO MAINTAIN THE INTEGRITY OF THE JSCB CHAIN.        @YM04108*/
*/*      IF THE STAE IS NOT SUCCESSFULLY ESTABLISHED,        @YM04108*/
*/*      THE CHAIN IS NOT MAINIPULATED AND THE               @YM04108*/
*/*      EXIT WILL NOT BEABLE TO OPEN DATA SETS.             @YM04108*/
*/*      IF THE STAE IS SUCCESSFULLY ESTABLISHED             @YM04108*/
*/*      THE JSCB CHAIN WILL BE MAINIPULATED                 @YM04108*/
*/*      IN ORDER FOR THE USER EXIT (IEFACTRT) TO OPEN       @YM04108*/
*/*      /CLOSE AN INSTALLATION DEFINED DATA SET.            @YM04108*/
*/*      THEREFORE, PRIOR TO CALLING THE EXIT THE            @YM04108*/
*/*      INITIATOR'S JSCB IS MADE THE ACTIVE JSCB. UPON      @YM04108*/
*/*      RETURN FROM THE EXIT, THE P/P JSCB IS AGAIN MADE    @YM04108*/
*/*      THE ACTIVE JSCB.                                    @YM04108*/
*/*                                                          @YM04108*/
*/*INPUT=                                                    @YM04108*/
*/*      LCT      -LINKAGE CONTROL TABLE.                    @YM04108*/
*/*      TCB      -TASK CONTROL BLOCK                        @YM04108*/
*/*      JSCB     -JOB/STEP CONTROL BLOCK                    @YM04108*/
*/*      TCT      -TIMING CONTROL TABLE                      @YM04108*/
*/*EXIT                                                      @YM04108*/
*/*  CONDITION=USER EXIT INTERFACE COMPLETE.                 @YM04108*/
*/*  OUTPUT=  RECRDCAN - STATUS OF TERMINATION RECORD        @YM04108*/
*/*                      (CANCEL OR NOT)                     @YM04108*/
*/*           RETRNCD  - STATUS OF REMAINING JOB STEPS       @YM04108*/
*/*                      (CANCEL OR NOT)                     @YM04108*/
*/*           ACTRTCAN - BIT IS ON IF IEFACTRT CANCELLED JOB.@YM04108*/
*/*  RETURN CODE= 4 IF JOB IS TO BE CANCELLED.               @YM04108*/
*/***********************************************************@YM04108*/
*STAELST(1:STAELEN)=DYMSTAE(1:STAELEN);     /* INIT STAE LIST   02S0221
*                                         FORM MACRO         @YM04108*/
@RF00207 LH    @12,STAELEN                                      02S0221
         BCTR  @12,0                                            02S0221
         EX    @12,@SM02476                                     02S0221
*RFY (REG0,REG1,REG2,REG3,REG12) RSTD; /*                    @YM04108*/
*REG2=ADDR(STAEEXIT);                  /* ADDR STAE EXIT     @YM04108*/
         LA    REG2,STAEEXIT                                    02S0223
*REG3=ADDR(STAEPARM);                  /* ADDR EXIT PARMS    @YM04108*/
         LA    @09,DSTAEPRM                                     02S0224
         LR    REG3,@09                                         02S0224
*SLCTPTR=LCTPTR;                       /* LCT POINTER FOR STAE  02S0225
*                                         EXIT ROUTINE       @YM04108*/
         L     @15,LCTPTR                                       02S0225
         ST    @15,SLCTPTR(,@09)                                02S0225
*GEN;                                  /* SET UP STAE        @YM04108*/
   ESTAE (REG2),,PARAM=(REG3),PURGE=NONE,ASYNCH=YES,MF=(E,STAELST)
*RFY (REG2,REG3) UNRSTD;               /*                    @YM04108*/
*RFY REG15 RSTD;                       /*                    @YM04108*/
*IF REG15=0 THEN                       /* IF STAE SETUP OK,  @YM04108*/
         LTR   REG15,REG15                                      02S0229
         BNZ   @RF00229                                         02S0229
*  DO;                                 /* THEN INVOKE EXIT   @YM04108*/
*    RFY TCB BASED(TCBCUR);            /* TO INITIATOR'S TCB @YM04108*/
*    JSCBACT=TCBJSCB;                  /* MAKE INITIATOR'S JSCB 02S0232
*                                         THE ACTIVE JSCB    @YM04108*/
         L     @14,CVTPTR                                       02S0232
         L     @14,CVTTCBP(,@14)                                02S0232
         L     @14,TCBCUR(,@14)                                 02S0232
         L     @14,TCBJSCB(,@14)                                02S0232
         ST    @14,JSCBACT(,@14)                                02S0232
*    STAEGOOD='1'B;                    /* INDICATE STAE OK   @YM04108*/
         OI    STAEGOOD,B'00100000'                             02S0233
*    RFY TCB BASED(LCTTCBAD);          /* BACK TO DUMMY TCB  @YM04108*/
*  END;                                /*                    @YM04108*/
*ELSE                                  /* STAE NOT SET UP    @YM04108*/
*  STAEGOOD='0'B;                      /* INDICATE NO STAE   @YM04108*/
         B     @RC00229                                         02S0236
@RF00229 NI    STAEGOOD,B'11011111'                             02S0236
*REG0=TERMTYPE;                        /* JOB OR STEP TERM. INDICATOR*/
@RC00229 SLR   REG0,REG0                                        02S0237
         IC    REG0,TERMTYPE                                    02S0237
*REG12=LCTPTR;                         /* POINTER TO LCT FOR ISSUANCE
*                                         OF SMB'S THROUGH IEFYS     */
         L     @14,LCTPTR                                       02S0238
         LR    REG12,@14                                        02S0238
*REG1=ADDR(EXITPTRS);                  /* POINTER TO EXIT'S PARAMETER
*                                         LIST.                      */
         LA    REG1,EXITPTRS                                    02S0239
*TCTIOTPT=TCTIOTBL;                    /* SAVE TCTIOT POINTERACCROSS
*                                         USER EXIT.                 */
         L     @14,LCTTCBAD(,@14)                               02S0240
         L     @14,TCBTCT(,@14)                                 02S0240
         L     TCTIOTPT,TCTIOTBL(,@14)                          02S0240
*TCTIOTBL='00000000'X;                 /* CLEAR TCT'S POINTER        */
         SLR   @09,@09                                          02S0241
         ST    @09,TCTIOTBL(,@14)                               02S0241
*CALL IEFACTRT;                        /* GO TO USER EXIT  IEFACTRT  */
         L     @15,@CV00165                                     02S0242
         BALR  @14,@15                                          02S0242
*RFY (REG0,REG12) UNRSTD;              /*                    @YM04108*/
*TCTIOTBL=TCTIOTPT;                    /* RESTORE PTR FOR MAINLINE   */
         L     @14,LCTPTR                                       02S0244
         L     @14,LCTTCBAD(,@14)                               02S0244
         L     @14,TCBTCT(,@14)                                 02S0244
         ST    TCTIOTPT,TCTIOTBL(,@14)                          02S0244
*IF REG1=4 THEN                        /* SHOULD THE RECORD BE ISSUED*/
         C     REG1,@CF00127                                    02S0245
         BNE   @RF00245                                         02S0245
*  RECRDCAN='1'B;                      /* NO- INDICATE REORD CANCELED
*                                         TO MAINLINE.               */
         OI    RECRDCAN,B'10000000'                             02S0246
*IF TERMTYPE='0C'X THEN                /* IS THIS STEP TERMINATION?  */
@RF00245 CLI   TERMTYPE,X'0C'                                   02S0247
         BNE   @RF00247                                         02S0247
*  DO;                                 /* YES- TEST FOR CANCELLATION */
*    IF REG15=4 × (CANCELJB='1'B &     /* HAS IEFACTRT CANCELLED THE */
*       LCTJFAIL='0'B) THEN            /* CURRENT STEP? (IF LCTJFAIL */
         C     REG15,@CF00127                                   02S0249
         BE    @RT00249                                         02S0249
         TM    CANCELJB,B'00000001'                             02S0249
         BNO   @RF00249                                         02S0249
         L     @14,LCTPTR                                       02S0249
         TM    LCTJFAIL(@14),B'10000000'                        02S0249
         BNZ   @RF00249                                         02S0249
@RT00249 DS    0H                                               02S0250
*                                      /* IS ON IT WAS FAILED BEFORE */
*                                      /* EXIT WAS ENTERED.          */
*      DO;                             /* IF YES THEN,               */
*        RETRNCD=4;                    /* SET RETURN CODE FOR TERMIN.*/
         LA    RETRNCD,4                                        02S0251
*        ACTRTCAN='1'B;                /* JCT BIT SET TO INDICATE
*                                         IEFACTRT CANCELLED THE JOB */
         L     @14,LCTPTR                                       02S0252
         L     @14,LCTJCTAD(,@14)                               02S0252
         OI    ACTRTCAN(@14),B'00001000'                        02S0252
*      END;                                                     02S0253
*  END;                                                         02S0254
@RF00249 DS    0H                                               02S0255
*RFY (REG1,REG15) UNRSTD;              /*                    @YM04108*/
@RF00247 DS    0H                                               02S0256
*IF STAEGOOD='1'B THEN                 /* WAS STAE SET UP    @YM04108*/
         TM    STAEGOOD,B'00100000'                             02S0256
         BNO   @RF00256                                         02S0256
*  DO;                                 /* THEN RESTORE JSCB     02S0257
*                                         CHAIN              @YM04108*/
*    RFY TCB BASED(TCBCUR);            /* INITIATOR'S TCB    @YM04108*/
*    JSCBACT=LCTJSCB;                  /* RESTORE P/P JSCB   @YM04108*/
         L     @12,CVTPTR                                       02S0259
         L     @12,CVTTCBP(,@12)                                02S0259
         L     @12,TCBCUR(,@12)                                 02S0259
         L     @12,TCBJSCB(,@12)                                02S0259
         L     @09,LCTPTR                                       02S0259
         L     @09,LCTJSCB(,@09)                                02S0259
         ST    @09,JSCBACT(,@12)                                02S0259
*    RFY TCB BASED(LCTTCBAD);          /* TO P/P'S TCB       @YM04108*/
*    GEN(ESTAE 0);                     /* CANCEL STAE        @YM04108*/
         ESTAE 0
*  END;                                /*                    @YM04108*/
*          END;                                                 01S0263
@RF00256 DS    0H                                               01S0264
*        RFY (REG0,REG1,REG2) RSTD;                             01S0264
@RF00190 DS    0H                                               01S0265
*        IF RECRDCAN='0'B THEN         /* HAS USER EXIT CANCELLED    */
         TM    RECRDCAN,B'10000000'                             01S0265
         BNZ   @RF00265                                         01S0265
*          DO;                         /* THE CURRENT RECORDS ?      */
*            REG1=RECORD;              /* NO- WRITE THE RECORD TO    */
         L     REG1,RECORD                                      01S0267
*            GEN (SMFWTM (REG1));      /* THE SMF DATA SET.          */
         SMFWTM (REG1)
*          END;                                                 01S0269
*        REG2=RECORDLN;                /* SIZE OF RECORD JUST WRITTEN*/
@RF00265 LH    REG2,RECORDLN                                    01S0270
*        REG1=RECORD;                  /* LOCATION OF RECORD TO FREE */
         L     REG1,RECORD                                      01S0271
*        GEN (FREEMAIN R,SP=230,LV=(REG2),A=(REG1));  /* FREE RECORD */
         FREEMAIN R,SP=230,LV=(REG2),A=(REG1)
*        IF TERMTYPE='0C'X THEN        /* IS THIS STEP TERMINATION   */
         CLI   TERMTYPE,X'0C'                                   01S0273
         BNE   @RF00273                                         01S0273
*          DO;                         /* IF YES  THEN NOT           */
*            IF TCTIOTBL^='00000000'X THEN/*                    01S0275
*                                         IF TCTIOT AVAILABLE FREE IT*/
         SLR   @12,@12                                          01S0275
         L     @09,LCTPTR                                       01S0275
         L     @09,LCTTCBAD(,@09)                               01S0275
         L     @09,TCBTCT(,@09)                                 01S0275
         L     @03,TCTIOTBL(,@09)                               01S0275
         CR    @03,@12                                          01S0275
         BE    @RF00275                                         01S0275
*              DO;                                              01S0276
*                REG1=TCTIOTBL;        /* ADDRESS OF TCTIOT TO FREE  */
         LR    REG1,@03                                         01S0277
*                REG0=TCTPLEXT;        /* SUBPOOL & LENGTH OF TCTIOT */
         L     REG0,TCTPLEXT(,@03)                              01S0278
*                TCTIOTBL='00000000'X; /* INDICATE TCTIOT IS NOT
*                                          AVAILABLE                 */
         ST    @12,TCTIOTBL(,@09)                               01S0279
*                GEN (FREEMAIN R,LV=(REG0),A=(REG1));/* FREE TCTIOT  */
         FREEMAIN R,LV=(REG0),A=(REG1)
*              END;                                             01S0281
*            REG0=JMRSPLEN;            /* SUBPOOL AND LENGTH TO FREE */
@RF00275 L     REG0,JMRSPLEN                                    01S0282
*            REG1=JMRPTR;              /* LOCATION TO BE FREED       */
         L     REG1,JMRPTR                                      01S0283
*            GEN (FREEMAIN R,LV=(REG0),A=(REG1));               01S0284
         FREEMAIN R,LV=(REG0),A=(REG1)
*          END;                                                 01S0285
*        ELSE                          /* JOB TERMINATION            */
*          DO;                                                  01S0286
         B     @RC00273                                         01S0286
@RF00273 DS    0H                                               01S0287
*            LCTJMRAD=JMRPTR;          /* UPDATED JMR ADDRESS FOR JOB
*                                         ENTRY SUBSYSTEM  EXIT      */
         L     @12,JMRPTR                                       01S0287
         L     @09,LCTPTR                                       01S0287
         ST    @12,LCTJMRAD(,@09)                               01S0287
*            IF GENSMFCB='0'B THEN     /* WERE TCT AND JMR GENERATED?*/
         TM    GENSMFCB,B'01000000'                             01S0288
         BNZ   @RF00288                                         01S0288
*              DO;                                              01S0289
*                JMR(1:36)=            /* OVERLAY SWA'S JMR FROM THE */
*                  TCTJMR->JMR;        /* COMMON EXIT PARAMETER AREA */
         L     @09,LCTTCBAD(,@09)                               01S0290
         L     @09,TCBTCT(,@09)                                 01S0290
         L     @09,TCTJMR(,@09)                                 01S0290
         MVC   JMR(36,@12),JMR(@09)                             01S0290
*                                      /* THAT USER MAY HAVE UPDATED */
*                REG1=TCTJMR;          /* ADDRESS OF CEPA TO FREE    */
         LR    REG1,@09                                         01S0291
*                GEN (FREEMAIN R,SP=253,LV=36,A=(REG1));        01S0292
         FREEMAIN R,SP=253,LV=36,A=(REG1)
*              END;                                             01S0293
*          END;                                                 01S0294
@RF00288 DS    0H                                               01S0295
*          RFY (REG0,REG1,REG2) UNRSTD;                         01S0295
@RC00273 DS    0H                                               01S0296
*        IF GENSMFCB='1'B ×            /* WHEN A PSEUDO TCT IS BUILT */
*           TERMTYPE='10'X THEN        /* FOR STEPTERM OR THIS IS    */
         TM    GENSMFCB,B'01000000'                             01S0296
         BO    @RT00296                                         01S0296
         CLI   TERMTYPE,X'10'                                   01S0296
         BNE   @RF00296                                         01S0296
@RT00296 DS    0H                                               01S0297
*                                      /* JOB TERM - THE TCT IS FREED*/
*          DO;                                                  01S0297
*            RFY (REG0,REG1,REG2) RSTD;                         01S0298
*            REG1=TCBTCT;              /* ADDRESS OF TCT             */
         L     @12,LCTPTR                                       01S0299
         L     @12,LCTTCBAD(,@12)                               01S0299
         L     REG1,TCBTCT(,@12)                                01S0299
*            TCBTCT=0;                 /* INDICATE TCT UNAVAILABLE
*                                         IN DUMMY TCB       @YM06210*/
         SLR   @09,@09                                          01S0300
         ST    @09,TCBTCT(,@12)                                 01S0300
*            RFY TCB BASED(TCBCUR);    /* USE INITIATOR'S TCB@YM03266*/
*            TCBTCT=0;                 /* INDICATE TCT UNAVAILABLE   */
         L     @12,CVTPTR                                       01S0302
         L     @12,CVTTCBP(,@12)                                01S0302
         L     @12,TCBCUR(,@12)                                 01S0302
         ST    @09,TCBTCT(,@12)                                 01S0302
*            RFY TCB BASED(LCTTCBAD);  /* BACK TO P/P TCB    @YM03266*/
*            REG2=LENGTH(SMFTCT)+LENGTH(TCTCORE);/*             01S0304
*                                         LENGTH OF TCT FOR FREEMAIN*/
         LA    REG2,116                                         01S0304
*            GEN (FREEMAIN R,SP=253,LV=(REG2),A=(REG1));        01S0305
         FREEMAIN R,SP=253,LV=(REG2),A=(REG1)
*            RFY (REG0,REG1,REG2) UNRSTD;                       01S0306
*          END;                                                 01S0307
*      END;                                                     01S0308
@RF00296 DS    0H                                               01S0309
*   END;                                                        01S0309
@RF00111 DS    0H                                               01S0310
* DO; /*MODESET  EXTKEY(SCHED)*/                                01S0310
@RF00109 DS    0H                                               01S0311
*   SPKA (16); /*SET PSW KEY*/                                  01S0311
         LA    @12,16                                           01S0311
         SPKA  0(@12)                                           01S0311
* END; /*MODESET  EXTKEY(SCHED)*/               /* RETURN TO KEY OF CAL
*ER                                                                   @
*40FPPD*/                                                       01S0312
*RETURN  CODE(RETRNCD);                /* RETURN CODE FROM USER EXIT */
         L     @13,4(,@13)                                      01S0313
         L     @00,@SIZDATD                                     01S0313
         LR    @01,@10                                          01S0313
         FSPACE   R,LV=(0),A=(1)
         LR    @15,@08                                          01S0313
         L     @14,12(,@13)                                     01S0313
         LM    @00,@12,20(@13)                                  01S0313
         BR    @14                                              01S0313
*STAEEXIT: PROC OPTIONS(NOSAVEAREA,NOSAVE); /*               @YM04108*/
STAEEXIT DS    0H                                               02S0315
*/***********************************************************@YM04108*/
*/*                                                          @YM04108*/
*/*SEGMENT NAME=STAEEXIT                                     @YM04108*/
*/*                                                          @YM04108*/
*/*DESCRIPTIVE NAME= STAE EXIT ROUTINE                       @YM04108*/
*/*                                                          @YM04108*/
*/*FUNCTION=                                                 @YM04108*/
*/*        THIS SEGMENT PERFORMS RECOVERY FOR ABENDS         @YM04108*/
*/*        WHICH OCCUR WHILE IN THE SMF USER                 @YM04108*/
*/*        EXIT - IEFACTRT. THIS IS NECESSARY SO THAT        @YM04108*/
*/*        THE JSCB CHAIN, WHICH WAS MANIPULATED             @YM04108*/
*/*        PRIOR TO TAKING THE EXIT, CAN BE RESTORED.        @YM04108*/
*/*                                                          @YM04108*/
*/*        A RECORD IS WRITTEN TO RECORD THE OCCURANCE       @YM04108*/
*/*        OF THE ABEND (ONLY WHEN A SDWA IS PASSED).        @YM04108*/
*/*                                                          @YM04108*/
*/*OPERATION=                                                @YM04108*/
*/*        NO SPECIAL ALGORITHMS ARE USED.                   @YM04108*/
*/*                                                          @YM04108*/
*/*NOTES                                                     @YM04108*/
*/*  DEPENDENCIES=                                           @YM04108*/
*/*        . LCT JSCB POINTS TO P/P JSCB                     @YM04108*/
*/*    CHARACTER CODE DEPENDENCIES= EBCDIC                   @YM04108*/
*/*        A REASSEMBLY WILL CHANGE THIS DEPENDENCY          @YM04108*/
*/*  RESTRICTIONS= N/A                                       @YM04108*/
*/*  REGISTER CONVENTIONS= REG 9 USED AS BASE REGISTER       @YM04108*/
*/*  PATACH LABEL= PATCHES (SAME AS MAINLINE)                @YM04108*/
*/*                                                          @YM04108*/
*/*MODULE TYPE=                                              @YM04108*/
*/*  PROCESSOR= PL/S                                         @YM04108*/
*/*  MODULE SIZE= N/A                                        @YM04108*/
*/*  ATTRIBUTES= SAME AS MAINLINE                            @YM04108*/
*/*                                                          @YM04108*/
*/*ENTRY POINT= STAEEXIT                                     @YM04108*/
*/*  PURPOSE= SEE FUNCTION                                   @YM04108*/
*/*  LINKAGE= CALL FROM RTM                                  @YM04108*/
*/*  INPUT=                                                  @YM04108*/
*/*        REG0 - = 12, NO WORK AREA PASSED (SDWA)           @YM04108*/
*/*               = OTHER, WORK AREA PASSED (SDWA)           @YM04108*/
*/*        REG1 - IF REG 0 = 12, MEANINGLESS                 @YM04108*/
*/*               IF REG 0 = OTHER, ADDRESS OF SDWA          @YM04108*/
*/*        REG2 - IF REG 0 = 12, ADDRESS OF EXIT PARAMETERS  @YM04108*/
*/*               IF REG 0 = OTHER, MEANINGLESS              @YM04108*/
*/*  REGISTERS SAVED= REG 14                                 @YM04108*/
*/*  REGISTER USAGE= REG 9 IS BASE REGISTER                  @YM04108*/
*/*  REGISTERS RESTORED= REG 14                              @YM04108*/
*/*                                                          @YM04108*/
*/*EXIT - NORMAL= RETURN TO CALLER                           @YM04108*/
*/*  CONDITONS= JSCB CHAIN REPAIRED                          @YM04108*/
*/*             AND RECORD WRITTEN RECORDING ABEND           @YM04108*/
*/*  OUTPUT= UPDATE JSCB CHAIN AND RECORD                    @YM04108*/
*/*  RETURN CODES= 0, CONTINUE WITH ABEND                    @YM04108*/
*/*                                                          @YM04108*/
*/*EXIT - ERROR= NONE                                        @YM04108*/
*/*                                                          @YM04108*/
*/*EXTERNAL REFERENCES=                                      @YM04108*/
*/*  ROUTINES= NONE                                          @YM04108*/
*/*  DATA AREAS= NONE                                        @YM04108*/
*/*  CONTROL BLOCKS=                                         @YM04108*/
*/*        LCT - LINKAGE CONTROL TABLE                       @YM04108*/
*/*        JSCB - JOB/STEP CONTROL TABLE                     @YM04108*/
*/*        SDWA - STAE DIAGNOSTIC WORK AREA                  @YM04108*/
*/*                                                          @YM04108*/
*/*TABLES= NONE                                              @YM04108*/
*/*                                                          @YM04108*/
*/*MACROS=                                                   @YM04108*/
*/*        SETRP                                             @YM04108*/
*/*        EPILOG                                            @YM04108*/
*/*                                                          @YM04108*/
*/*CHANGE ACTIVITY= N/A                                      @YM04108*/
*/*                                                          @YM04108*/
*/*MESSAGES= NONE                                            @YM04108*/
*/*                                                          @YM04108*/
*/*ABEND CODES= NONE                                         @YM04108*/
*/*                                                          @YM04108*/
*/***********************************************************@YM04108*/
*RFY (REG0,REG1,REG2,REG8,REG9,REG14,REG15) RSTD; /*         @YM04108*/
*RFY STAEPARM BASED(REG2);             /*                    @YM04108*/
*REG8=REG14;                           /* SAVE RETURN ADDRESS@YM04108*/
         LR    REG8,REG14                                       02S0317
*REG9=REG15;                           /* GET BASE REG       @YM04108*/
         LR    REG9,REG15                                       02S0318
*GEN(USING STAEEXIT,REG9);             /* ADDRESSABILITY     @YM04108*/
         USING STAEEXIT,REG9
*IF REG0=12 THEN                       /* SDWA AREA PASSED   @YM04108*/
         C     REG0,@CF02447                                    02S0320
         BNE   @RF00320                                         02S0320
*  DO;                                 /* NO AREA PASSED     @YM04108*/
*    SWKAREA='0'B;                     /* INDICATE NO AREA   @YM04108*/
         NI    SWKAREA(REG2),B'01111111'                        02S0322
*  END;                                /*                    @YM04108*/
*ELSE                                  /* AREA PASSED TO EXIT@YM04108*/
*  DO;                                 /*                    @YM04108*/
         B     @RC00320                                         02S0324
@RF00320 DS    0H                                               02S0325
*    REG2=REG1->SDWAPARM;              /* GET EXIT WORK AREA    02S0325
*                                         POINTER            @YM04108*/
         L     REG2,SDWAPARM(,REG1)                             02S0325
*    SWKAREA='1'B;                     /* INDICATE AREA PASS @YM04108*/
         OI    SWKAREA(REG2),B'10000000'                        02S0326
*    SDWAPTR=REG1;                     /* SAVE SDWA POINTER  @YM04108*/
         ST    REG1,SDWAPTR(,REG2)                              02S0327
*  END;                                /*                    @YM04108*/
*RFY LCT BASED(SLCTPTR);               /*                    @YM04108*/
@RC00320 DS    0H                                               02S0330
*RFY TCB BASED(TCBCUR);                /* INITIATOR'S TCB    @YM04108*/
*JSCBACT=LCTJSCB;                      /* RESTOR P/P JSCB       02S0331
*                                         POINTER            @YM04108*/
         L     @12,CVTPTR                                       02S0331
         L     @12,CVTTCBP(,@12)                                02S0331
         L     @12,TCBCUR(,@12)                                 02S0331
         L     @12,TCBJSCB(,@12)                                02S0331
         L     @03,SLCTPTR(,REG2)                               02S0331
         L     @03,LCTJSCB(,@03)                                02S0331
         ST    @03,JSCBACT(,@12)                                02S0331
*IF SWKAREA='1'B THEN                  /* WORK AREA PASSED   @YM04108*/
         TM    SWKAREA(REG2),B'10000000'                        02S0332
         BNO   @RF00332                                         02S0332
*  DO;                                 /* THEN RECORD ABEND  @YM04108*/
*    SRECPRM1=LOADNAME;                /* NAME OF ABENDING      02S0334
*                                         LOAD MODULE        @YM04108*/
         MVC   SRECPRM1(8,REG2),@CC00037                        02S0334
*    SRECPRM2=CSECTNAM;                /* NAME OF ABENDED       02S0335
*                                         CSECT              @YM04108*/
         MVC   SRECPRM2(8,REG2),@CC00039                        02S0335
*    SRECPRM3=STAENAME;                /* NAME STAE ROUTINE  @YM04108*/
         MVC   SRECPRM3(8,REG2),@CC00041                        02S0336
*      DO;  /*SETRP DUMP(NO)WKAREA(SDWAPTR)RECORD(YES)RC(0)RECPARM(SREC
*ARM)*/                                                         02S0337
*        RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) RSTD;          02S0338
*        GPR01P = SDWAPTR;                                      02S0339
         L     GPR01P,SDWAPTR(,REG2)                            02S0339
*        GPR01P->SDWARCDE = 0;  /*SAVE RC VALUE*/               02S0340
         MVI   SDWARCDE(GPR01P),X'00'                           02S0340
*        GPR01P->SDWARCRD = '1'B;  /*TURN ON RECORD INDICATOR*/ 02S0341
         OI    SDWARCRD(GPR01P),B'10000000'                     02S0341
*        GPR15P = ADDR(SRECPARM);  /*ACCESS RECORD PARAMETER LIST*/
         LA    GPR15P,SRECPARM(,REG2)                           02S0342
*        GPR01P->SDWARECP = GPR15P ->I256C(1:24);  /*COPY RECORD PARAME
*ERS*/                                                          02S0343
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                02S0343
*        GPR01P->SDWAREQ = '0'B;  /*TURN OFF DUMP INDICATOR*/   02S0344
         NI    SDWAREQ(GPR01P),B'01111111'                      02S0344
*        RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;        02S0345
*      END;                /*                    @YM04108*/     02S0346
*                                                               02S0346
*                                                               02S0346
*      DECLARE /*GENERAL PURPOSE REGISTERS */                   02S0347
*        GPR00P PTR(31) REG(0),                                 02S0347
*        GPR01P PTR(31) REG(1),                                 02S0347
*        GPR14P PTR(31) REG(14),                                02S0347
*        GPR15P PTR(31) REG(15);                                02S0347
*                                                               02S0347
*      DECLARE /* COMMON VARIABLES */                           02S0348
*        I256C CHAR(256) BASED,                                 02S0348
*        I031F FIXED(31) BASED,                                 02S0348
*        I031P PTR(31)   BASED,                                 02S0348
*        I015F FIXED(15) BASED,                                 02S0348
*        I015P PTR(15)   BASED,                                 02S0348
*        I008P PTR(8)    BASED,                                 02S0348
*        I001C CHAR(1)   BASED;                         /*      02S0348
*      @YM04108*/                                               02S0348
*  END;                                /*                    @YM04108*/
*GEN(DROP REG9);                       /* FREE TEMP BASE REG @YM04108*/
@RF00332 DS    0H                                               02S0350
         DROP REG9
*REG14=REG8;                           /* RESTORE RETURN ADDR@YM04108*/
         LR    REG14,REG8                                       02S0351
*REG15=0;                              /* CONTINUE ABEND     @YM04108*/
         SLR   REG15,REG15                                      02S0352
*RETURN;                               /* RETURN TO ABEND    @YM04108*/
@EL00002 DS    0H                                               02S0353
@EF00002 DS    0H                                               02S0353
@ER00002 BR    @14                                              02S0353
*END STAEEXIT;                         /*                    @YM04108*/
*END IEFTB721                                                   01S0355
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (TB721SPC)                                        *
*/*%INCLUDE SYSLIB  (TB721DCL)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEFALLCT)                                        *
*/*%INCLUDE SYSLIB  (IEFAJCTB)                                        *
*/*%INCLUDE SYSLIB  (IEFASCTB)                                        *
*/*%INCLUDE SYSLIB  (IEFJESCT)                                        *
*/*%INCLUDE SYSLIB  (IEFJMR  )                                        *
*/*%INCLUDE SYSLIB  (IEFQMNGR)                                        *
*/*%INCLUDE SYSLIB  (IKJTCB  )                                        *
*/*%INCLUDE SYSLIB  (IEFTCT  )                                        *
*/*%INCLUDE SYSLIB  (IEFZB505)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR )                                        *
*/*%INCLUDE SYSLIB  (IFASMFR1)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR2)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR3)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR4)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR5)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR6)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR7)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR8)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR9)                                        *
*/*%INCLUDE SYSLIB  (IFASMFRA)                                        *
*/*%INCLUDE SYSLIB  (IFASMFRB)                                        *
*/*%INCLUDE SYSLIB  (IFASMFRC)                                        *
*/*%INCLUDE SYSLIB  (IFASMFRD)                                        *
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        *
*/*%INCLUDE SYSLIB  (IHASDWA )                                        *
*/*%INCLUDE SYSLIB  (CNTRLBLK)                                        *
*/*%INCLUDE SYSLIB  (CNTLBSPC)                                        *
*/*%INCLUDE SYSLIB  (TB722PRP)                                        *
*/*%INCLUDE SYSLIB  (PRP722SP)                                        *
*/*%INCLUDE SYSLIB  (USERPARM)                                        *
*/*%INCLUDE SYSLIB  (UEXTSPEC)                                        *
*/*%INCLUDE SYSLIB  (INVKEXIT)                                        *
*/*%INCLUDE SYSLIB  (INVKEXSP)                                        *
*/*%INCLUDE SYSLIB  (STAEEXIT)                                        *
*/*%INCLUDE SYSLIB  (STAEEXSP)                                        *
*;                                                              01S0355
@DATA    DS    0H
@SM02472 MVC   ACCTJOB(0),ACTPRGNM(@05)
@SM02474 MVC   SACTINFO(0),ACTACCNT(@12)
@SM02476 MVC   STAELST(0),DYMSTAE
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@AL00001 DS    8A
IEFTB721 CSECT
         DS    0F
@CF00062 DC    F'1'
@CF00127 DC    F'4'
@CF01197 DC    F'5'
@CF02447 DC    F'12'
@CF02462 DC    F'116'
@CF01131 DC    F'176'
@CF02465 DC    F'-97'
@CF02424 DC    XL4'00000000'
@DATD    DSECT
         DS    0D
ACTPTR   DS    A
JMRPTR   DS    A
RECORD   DS    A
DEVPTR   DS    A
LCTPTR   DS    A
SWEPAPTR DS    A
LOOKUP   DS    A
TIOTPTR  DS    A
COMPCODE DS    H
RECORDLN DS    H
TCTIOTLN DS    H
ACCTSIZE DS    H
ACTLEN   DS    FL1
EXITPARM DS    CL10
         ORG   EXITPARM
STEPNAM  DS    CL8
CANCLBYT DS    CL2
         ORG   CANCLBYT
@NM00001 DS    BL1
         ORG   @NM00001
@NM00002 DS    BL1
CANCELJB EQU   @NM00001+0
         ORG   CANCLBYT+1
STEPNUM  DS    CL1
         ORG   EXITPARM+10
ACCTJOB  DS    CL168
         ORG   ACCTJOB
PRGRNAM  DS    CL20
JOBTIME  DS    CL3
JACTNUM  DS    CL1
JACTINFO DS    CL144
         ORG   ACCTJOB+168
ACCTSTEP DS    CL148
         ORG   ACCTSTEP
STEPTIM  DS    AL3
SACTNUM  DS    AL1
SACTINFO DS    CL144
         ORG   ACCTSTEP+148
         DS    CL1
EXITPTRS DS    CL40
         ORG   EXITPTRS
CEPAPTR  DS    AL4
STPNMPTR DS    AL4
PRGRNPTR DS    AL4
JBCPUPTR DS    AL4
JBACTPTR DS    AL4
STPCPUPT DS    AL4
STPACTPT DS    AL4
CANCLPTR DS    AL4
CMPCDPTR DS    AL4
RECRDPTR DS    AL4
         ORG   EXITPTRS+40
SWITCHES DS    BL1
         ORG   SWITCHES
RECRDCAN DS    BL1
GENSMFCB EQU   SWITCHES+0
STAEGOOD EQU   SWITCHES+0
         ORG   SWITCHES+1
COUNT    DS    CL1
         DS    CL2
JMRSPLEN DS    CL4
         ORG   JMRSPLEN
SWASUBPL DS    CL1
LNGTH    DS    AL3
         ORG   JMRSPLEN+4
TERMTYPE DS    CL1
         DS    CL7
DSTAEPRM DS    CL33
SWMNRPRM DS    3CL16
IEFTB721 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00165 DC    V(IEFACTRT)
@CV00166 DC    V(IEFTB722)
         DS    0D
@CC00037 DC    C'IEFW21SD'
@CC00039 DC    C'IEFACTRT'
@CC00041 DC    C'IEFTB721'
@CC02428 DC    C'RL'
IEFTB721 CSECT
         DS   0H
PATCHES DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
STAELST  ESTAE ,CT,PURGE=NONE,ASYNCH=YES,MF=L                 @YM04108
IEFTB721 CSECT                                                @YM04108
DYMSTAE  ESTAE ,CT,PURGE=NONE,ASYNCH=YES,MF=L                 @YM04108
STAELEN  DC    AL2(*-DYMSTAE)         LENGTH OF ESATE LIST    @YM04108
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFTB721 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SIZE     EQU   @02
SACTSIZE EQU   @04
RETRNCD  EQU   @08
JACTSIZE EQU   @03
TCTIOTPT EQU   @02
QMPAPTR  EQU   @02
ACCTPTR  EQU   @02
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG3     EQU   @03
REG8     EQU   @08
REG9     EQU   @09
REG12    EQU   @12
REG14    EQU   @14
REG15    EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
REG4     EQU   @04
CVTPTR   EQU   16
ACCTLEN  EQU   0
TCBNC    EQU   0
TCBCUR   EQU   TCBNC+4
STAEPARM EQU   0
SLCTPTR  EQU   STAEPARM
SDWAPTR  EQU   STAEPARM+4
SRECPARM EQU   STAEPARM+8
SRECPRM1 EQU   SRECPARM
SRECPRM2 EQU   SRECPARM+8
SRECPRM3 EQU   SRECPARM+16
@NM00007 EQU   STAEPARM+32
SWKAREA  EQU   @NM00007
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTSMCA  EQU   CVTMAP+196
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTJESCT EQU   CVTMAP+296
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
LCT      EQU   0
LCTQDRTY EQU   LCT
LCTSRTAD EQU   LCT+4
LCTTCBAD EQU   LCT+8
LCTQENTY EQU   LCT+12
@NM00016 EQU   LCTQENTY
LCTJCTAD EQU   LCT+16
LCTSCTAD EQU   LCT+20
LCTSCTDA EQU   LCT+24
LCTWORKA EQU   LCTSCTDA
LCTPSPAR EQU   LCT+28
LCTERROR EQU   LCT+32
LCTERR   EQU   LCTERROR
LCTJFAIL EQU   LCTERR
LCTPARM1 EQU   LCT+36
LCTCMCBA EQU   LCT+52
LCTNSPAD EQU   LCT+56
LCTJFCBH EQU   LCT+57
LCTSNUMB EQU   LCT+58
LCTSMBAD EQU   LCT+60
LCTCOMCD EQU   LCT+68
LCTRTRN  EQU   LCT+72
LCTSREG  EQU   LCTRTRN
@NM00043 EQU   LCT+76
LCTINTSW EQU   @NM00043
LCTTMWRK EQU   LCT+80
LCTTJTU4 EQU   LCTTMWRK
LCTTSTL4 EQU   LCTTMWRK+4
LCTTSTR4 EQU   LCTTMWRK+8
LCTSMF   EQU   LCTTSTR4
LCTTMBYT EQU   LCTSMF
LCTTSTU4 EQU   LCTTMWRK+12
LCTJOBLB EQU   LCT+96
LCTATLST EQU   LCT+100
QMGR1    EQU   LCT+248
LCTJMRAD EQU   LCT+324
LCTECBAD EQU   LCT+328
ECBLIST  EQU   LCTECBAD
LCTIDENT EQU   LCT+332
LCTSPIL  EQU   LCTIDENT+4
LCTALCFG EQU   LCTSPIL+2
LCTTSRB4 EQU   LCT+348
LCTENTR  EQU   LCT+352
LCTEXIT  EQU   LCTENTR
LCTOPSW1 EQU   LCTEXIT
@NM00069 EQU   LCT+356
LCTOPSW2 EQU   @NM00069
LCTJSCB  EQU   LCT+360
LCTOPSW3 EQU   LCTJSCB
LCTJCTDA EQU   LCT+408
LCTSTATA EQU   LCT+416
LCTSTATB EQU   LCT+417
LCTRFB   EQU   LCT+418
@NM00082 EQU   LCT+420
LCTINTS2 EQU   @NM00082+1
INJMJCT  EQU   0
JCTJSTAT EQU   INJMJCT+5
INDMCTLG EQU   JCTJSTAT
JCTJBYTE EQU   INJMJCT+7
JCTJMGLV EQU   JCTJBYTE
JCTACTAD EQU   INJMJCT+40
JCTCCODE EQU   INJMJCT+54
JCTRSW1  EQU   INJMJCT+86
JCTRSW2  EQU   INJMJCT+87
JCTJSB   EQU   INJMJCT+111
JCTSTAT2 EQU   INJMJCT+116
JCTJMR   EQU   INJMJCT+134
JCTJMROP EQU   INJMJCT+138
JCTJMRCL EQU   INJMJCT+139
IEFAACTB EQU   0
ACTPRGNM EQU   IEFAACTB+8
ACTJTIME EQU   IEFAACTB+28
ACTJNFLD EQU   IEFAACTB+31
ACTACCNT EQU   IEFAACTB+32
INSMSCT  EQU   0
SCTSSTAT EQU   INSMSCT+4
SCTAFACT EQU   INSMSCT+32
SCTSNAME EQU   INSMSCT+52
SCTSTYPE EQU   INSMSCT+67
SCTSDPTY EQU   INSMSCT+94
SCTSTAT2 EQU   INSMSCT+104
SCTBCT   EQU   SCTSTAT2
SCTCDENT EQU   INSMSCT+118
SCTSTEND EQU   INSMSCT+172
@NM00124 EQU   0
SCTABCND EQU   @NM00124
JESCT    EQU   0
JESWAA   EQU   JESCT+8
JESSSREQ EQU   JESCT+20
JESALLOC EQU   JESCT+32
JESUNALC EQU   JESCT+36
JESCATL  EQU   JESCT+40
SWAMGR   EQU   0
JMR      EQU   0
JMRSTEP  EQU   JMR+28
JMRFLG   EQU   JMR+30
JMROPT   EQU   JMR+54
QMPA     EQU   0
QMNAM    EQU   QMPA
QMSTA    EQU   QMPA+16
QMPCL    EQU   QMPA+32
QMPCMNC  EQU   QMPCL
SWAQMPA  EQU   0
QMSWSP   EQU   SWAQMPA
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
SMFTCT   EQU   0
TCTSW    EQU   SMFTCT+3
TCTTCB   EQU   SMFTCT+4
TCTCRTBL EQU   SMFTCT+8
TCTIOTBL EQU   SMFTCT+12
TCTPOOL  EQU   SMFTCT+16
TCTJMR   EQU   SMFTCT+28
TCTJSTX  EQU   SMFTCT+36
TCTTJLM  EQU   SMFTCT+40
TCTPGSMF EQU   SMFTCT+64
TCTPGIN  EQU   TCTPGSMF
TCTPGOUT EQU   TCTPGSMF+4
TCTRGNS  EQU   TCTPGSMF+8
TCTCORE  EQU   0
TCTTIOT  EQU   0
TCTPLEXT EQU   TCTTIOT
TCTSZLKP EQU   TCTTIOT+4
TCTIODSP EQU   0
TCTDDENT EQU   0
TCTFLGS  EQU   TCTDDENT+3
SWEPAREA EQU   0
SWBLKPTR EQU   SWEPAREA
SWVAFW   EQU   SWEPAREA+4
SWVA     EQU   SWVAFW
SWCHNPTR EQU   SWEPAREA+12
SMFRCD34 EQU   0
TIVUIF   EQU   SMFRCD34+18
TIVSIT   EQU   SMFRCD34+43
TIVPRV   EQU   SMFRCD34+74
TIVSYST  EQU   SMFRCD34+76
TIVSTU   EQU   SMFRCD34+78
TIVRIN   EQU   SMFRCD34+102
TIVEXCP  EQU   0
TIVCUT   EQU   TIVEXCP
TIVCUAD  EQU   TIVEXCP+2
TIVCPUA  EQU   0
TIVACFLD EQU   0
TIVRELS  EQU   0
TIVPGOT  EQU   TIVRELS+4
TIVNSW   EQU   TIVRELS+8
TIVPSI   EQU   TIVRELS+12
TIVPSO   EQU   TIVRELS+16
SMFRCD35 EQU   0
TLGUIF   EQU   SMFRCD35+18
TLGRVB   EQU   SMFRCD35+97
TLGCPUTM EQU   SMFRCD35+117
TLGNBRAC EQU   SMFRCD35+120
TLGACFLD EQU   0
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
I256C    EQU   0
IEFAB4F5 EQU   0
IEFBB410 EQU   0
IEFW21SD EQU   0
INDMDSNT EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
SSREQ    EQU   0
LCTLOC   EQU   0
JCTJMRCN EQU   JCTJMRCL
ACTRTCAN EQU   JCTJMRCN
JCTSMFSW EQU   JCTJMROP
JCTOPT1  EQU   JCTSMFSW
JCTOPT2  EQU   JCTSMFSW
JCTEXITS EQU   JCTSMFSW
TERMBYTE EQU   LCTPARM1+3
TERMIND  EQU   TERMBYTE
TCTPOOL1 EQU   TCTPOOL
TCTSPOOL EQU   TCTPOOL1
TCTSIZE  EQU   TCTPOOL1+1
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCBACT  EQU   JSCBSEC3+88
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00147 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00146 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00005 EQU   JCTSMFSW
JCTFORGD EQU   JCTSMFSW
@NM00004 EQU   JCTJMRCN
@NM00003 EQU   JCTJMRCN
@NM00195 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00194 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00193 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00192 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00191 EQU   SDWADDAT+3
@NM00190 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00189 EQU   SDWADDAT+1
@NM00188 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00187 EQU   SDWADUMP+2
@NM00186 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00185 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00184 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00183 EQU   SDWAACF3
@NM00182 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00181 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00180 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00179 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00178 EQU   SDWA+239
@NM00177 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00176 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00175 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00174 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00173 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00172 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00171 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00170 EQU   SDWAINC2
@NM00169 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00168 EQU   SDWAILC2
@NM00167 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00166 EQU   SDWANXT2
@NM00165 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00164 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00163 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00162 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00161 EQU   SDWAINC1
@NM00160 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00159 EQU   SDWAILC1
@NM00158 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00157 EQU   SDWANXT1
@NM00156 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00155 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00154 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00153 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00152 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00151 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00150 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00149 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00148 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00145 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00144 EQU   IEZJSCB
TLGBCD   EQU   TLGACFLD+1
TLGANC   EQU   TLGACFLD
TLGVAR   EQU   SMFRCD35+96
TLGRV2   EQU   SMFRCD35+94
TLGPGNO  EQU   SMFRCD35+92
TLGNTSN  EQU   SMFRCD35+88
TLGTTAT  EQU   SMFRCD35+84
TLGTJS   EQU   SMFRCD35+80
TLGSRBT  EQU   SMFRCD35+77
TLGSPK   EQU   SMFRCD35+76
TLGRVC   EQU   SMFRCD35+72
TLGTRANT EQU   SMFRCD35+68
TLGOUTCL EQU   SMFRCD35+67
TLGTRMI  EQU   SMFRCD35+66
TLGNQDTE EQU   SMFRCD35+62
TLGNQTME EQU   SMFRCD35+58
TLGPRI   EQU   SMFRCD35+57
TLGSTAT  EQU   SMFRCD35+55
TLGINCT  EQU   SMFRCD35+51
TLGOUTCT EQU   SMFRCD35+47
TLGCRTME EQU   SMFRCD35+43
TLGSTPCT EQU   SMFRCD35+42
TLGUDATA EQU   SMFRCD35+34
TLGONDTE EQU   SMFRCD35+30
TLGONTME EQU   SMFRCD35+26
TLGUID   EQU   TLGUIF
TLGCPUID EQU   SMFRCD35+14
TLGRCDTE EQU   SMFRCD35+10
TLGRCDTS EQU   SMFRCD35+6
TLGRCDTY EQU   SMFRCD35+5
TLGRFLG  EQU   SMFRCD35+4
TLGRSEG  EQU   SMFRCD35+2
TLGRLEN  EQU   SMFRCD35
TIVPGSEC EQU   TIVRELS+62
TIVPGSTL EQU   TIVRELS+58
TIVCRECL EQU   TIVRELS+54
TIVCPGIN EQU   TIVRELS+50
TIVRCLAM EQU   TIVRELS+46
TIVRECLM EQU   TIVRELS+42
TIVTRANT EQU   TIVRELS+38
TIVPGNO  EQU   TIVRELS+36
TIVTAT   EQU   TIVRELS+32
TIVSST   EQU   TIVRELS+28
TIVVPO   EQU   TIVRELS+24
TIVVPI   EQU   TIVRELS+20
TIVSOUT  EQU   TIVPSO
TIVSIN   EQU   TIVPSI
TIVRGNS  EQU   TIVNSW
TIVPGOUT EQU   TIVPGOT
TIVPGIN  EQU   TIVRELS
TIVBCD   EQU   TIVACFLD+1
TIVANC   EQU   TIVACFLD
TIVNBRAC EQU   TIVCPUA+4
TIVCPUTM EQU   TIVCPUA+1
TIVVARA  EQU   TIVCPUA
TIVNEXCP EQU   TIVEXCP+4
TIVVDV   EQU   TIVCUAD
TIVUTYP  EQU   TIVCUT+1
TIVDEVC  EQU   TIVCUT
TIVVAR   EQU   SMFRCD34+106
TIVRLCT  EQU   SMFRCD34+104
@NM00143 EQU   TIVRIN
TIVIEX   EQU   TIVRIN
@NM00142 EQU   TIVRIN
TIVSRBT  EQU   SMFRCD34+99
TIVRV2   EQU   SMFRCD34+98
TIVPPST  EQU   SMFRCD34+94
TIVAST   EQU   SMFRCD34+90
TIVRV1   EQU   SMFRCD34+88
TIVSTI   EQU   SMFRCD34+87
TIVSPK   EQU   SMFRCD34+86
TIVRVC   EQU   SMFRCD34+80
TIVMCRE  EQU   TIVSTU
TIVRVB   EQU   TIVSYST
TIVEFRGN EQU   TIVPRV
TIVINVNM EQU   SMFRCD34+66
TIVPRGNM EQU   SMFRCD34+58
TIVPRI   EQU   SMFRCD34+57
TIVSTAT  EQU   SMFRCD34+55
TIVINCT  EQU   SMFRCD34+51
TIVOUTCT EQU   SMFRCD34+47
TIVCRTME EQU   TIVSIT
TIVINVSQ EQU   SMFRCD34+42
TIVUDATA EQU   SMFRCD34+34
TIVONDTE EQU   SMFRCD34+30
TIVONTME EQU   SMFRCD34+26
TIVUID   EQU   TIVUIF
TIVCPUID EQU   SMFRCD34+14
TIVRCDTE EQU   SMFRCD34+10
TIVRCDTS EQU   SMFRCD34+6
TIVRCDTY EQU   SMFRCD34+5
TIVRFLG  EQU   SMFRCD34+4
TIVRSEG  EQU   SMFRCD34+2
TIVRLEN  EQU   SMFRCD34
SWLNGTH  EQU   SWEPAREA+8
SWBLKID  EQU   SWVAFW+3
TCTTKRLD EQU   TCTDDENT+13
TCTEXRLD EQU   TCTDDENT+12
TCTRSV10 EQU   TCTDDENT+8
TCTDCTR  EQU   TCTDDENT+4
TCTRSV26 EQU   TCTFLGS
TCTRSV25 EQU   TCTFLGS
TCTRSV24 EQU   TCTFLGS
TCTRSV23 EQU   TCTFLGS
TCTRSV22 EQU   TCTFLGS
TCTNOCNT EQU   TCTFLGS
TCTVAMDS EQU   TCTFLGS
TCTDDIND EQU   TCTFLGS
TCTSCTR  EQU   TCTDDENT+2
TCTUCBP  EQU   TCTDDENT
TCTDCBLE EQU   TCTIODSP+4
TCTIOTSD EQU   TCTIODSP+2
TCTDCBTD EQU   TCTIODSP
TCTRSV11 EQU   TCTTIOT+6
TCTSZEXT EQU   TCTPLEXT+2
@NM00141 EQU   TCTPLEXT
TCTLCS   EQU   TCTCORE+16
TCTRBA   EQU   TCTCORE+12
TCTRSZ   EQU   TCTCORE+10
TCTMINC  EQU   TCTCORE+8
TCTHWM   EQU   TCTCORE+4
TCTLWM   EQU   TCTCORE
TCTSOUT  EQU   TCTPGSMF+16
TCTSIN   EQU   TCTPGSMF+12
TCTATR   EQU   TCTRGNS
TCTACT   EQU   TCTPGOUT
TCTAJS   EQU   TCTPGIN
TCTPPST  EQU   SMFTCT+60
TCTAST   EQU   SMFTCT+56
TCTLOUT  EQU   SMFTCT+52
TCTLIN   EQU   SMFTCT+48
TCTWLMT  EQU   SMFTCT+44
TCTSACT  EQU   TCTTJLM
TCTSTOF  EQU   TCTJSTX
TCTRSV08 EQU   SMFTCT+32
TCTUDATA EQU   SMFTCT+24
TCTUTL   EQU   SMFTCT+20
TCTSZE   EQU   TCTPOOL+2
@NM00140 EQU   TCTPOOL
TCTRSV07 EQU   TCTSW
TCTRSV06 EQU   TCTSW
TCTRSV05 EQU   TCTSW
TCTRSV04 EQU   TCTSW
TCTRSV03 EQU   TCTSW
TCTRSV02 EQU   TCTSW
TCTIEX   EQU   TCTSW
TCTJSTI  EQU   TCTSW
TCTQA    EQU   SMFTCT
@NM00139 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00138 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00137 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00136 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
QMRBN    EQU   SWAQMPA+12
@NM00135 EQU   SWAQMPA+1
QMPACL   EQU   QMPCL+1
QMPNC    EQU   QMPCMNC
QMPCM    EQU   QMPCMNC
QMEIA    EQU   QMPA+28
QMWTQ    EQU   QMPA+24
QMRSD1   EQU   QMPA+22
QMTID    EQU   QMPA+20
QMLNK    EQU   QMPA+18
QMPRI    EQU   QMPA+17
@NM00134 EQU   QMSTA
QMSJNL   EQU   QMSTA
@NM00133 EQU   QMSTA
QMTPY    EQU   QMPA+15
QMNOT    EQU   QMPA+14
QMTLN    EQU   QMPA+12
QMTST    EQU   QMPA+11
QMFLT    EQU   QMPA+9
QMPOP    EQU   QMPA+8
QMPEB    EQU   QMNAM+4
QMCAN    EQU   QMNAM
JMRJCLCP EQU   JMR+72
JMRJCLP  EQU   JMR+68
JMRJOBP  EQU   JMR+64
@NM00132 EQU   JMR+62
JMRJCLCD EQU   JMR+61
JMRSYSOC EQU   JMR+56
@NM00131 EQU   JMR+55
JMRFIND  EQU   JMROPT
@NM00130 EQU   JMROPT
JMRXONLY EQU   JMROPT
JMREXITS EQU   JMROPT
JMRSTPSW EQU   JMROPT
JMRJOBSW EQU   JMROPT
JMRRDR   EQU   JMR+52
JMRJOBIN EQU   JMR+48
JMRDRSTP EQU   JMR+40
JMRUJVP  EQU   JMR+36
JMRUCOM  EQU   JMR+32
JMRCLASS EQU   JMR+31
@NM00129 EQU   JMRFLG
JMRWARM  EQU   JMRFLG
@NM00128 EQU   JMRFLG
JMRCNRS  EQU   JMRFLG
JMRCHRS  EQU   JMRFLG
JMRSTRS  EQU   JMRFLG
JMRINDC  EQU   JMR+29
JMRUSEID EQU   JMR+20
JMRCPUID EQU   JMR+16
JMREDATE EQU   JMR+12
JMRENTRY EQU   JMR+8
JMRJOB   EQU   JMR
JESPJESN EQU   JESCT+28
JESSSCT  EQU   JESCT+24
JESRESQM EQU   JESCT+16
JESQMGR  EQU   JESCT+12
JESUNITS EQU   JESCT+4
@NM00127 EQU   JESCT
@NM00126 EQU   @NM00124+1
SCTONLY  EQU   SCTABCND
SCTEVEN  EQU   SCTABCND
SCTABEND EQU   SCTABCND
SCTONLYC EQU   SCTABCND
SCTABCAN EQU   SCTABCND
@NM00125 EQU   SCTABCND
@NM00123 EQU   INSMSCT+173
@NM00122 EQU   SCTSTEND
SCTSYSCK EQU   SCTSTEND
SCTSTPND EQU   SCTSTEND
SCTSTSRT EQU   SCTSTEND
@NM00121 EQU   INSMSCT+168
SCTCATCT EQU   INSMSCT+166
SCTSDPSA EQU   SCTCDENT+3
SCTSDPOP EQU   SCTCDENT+2
SCTSDPCD EQU   SCTCDENT
@NM00120 EQU   INSMSCT+117
SCTPRFMF EQU   INSMSCT+116
SCTPGMNM EQU   INSMSCT+108
SCTTIOT  EQU   INSMSCT+105
@NM00119 EQU   SCTBCT
SCTJBEND EQU   SCTBCT
SCTSPSYS EQU   SCTBCT
SCTSTPLB EQU   SCTBCT
@NM00118 EQU   SCTBCT
SCTMCVOL EQU   SCTBCT
@NM00117 EQU   SCTBCT
SCTGOTTR EQU   INSMSCT+100
SCTSMF   EQU   INSMSCT+96
@NM00116 EQU   SCTSDPTY+1
SCTSDP   EQU   SCTSDPTY
SCTFSTEP EQU   SCTSDPTY
@NM00115 EQU   SCTSDPTY
@NM00114 EQU   SCTSDPTY
SCTNIUSL EQU   INSMSCT+92
@NM00113 EQU   INSMSCT+90
SCTMSSZE EQU   INSMSCT+88
SCTPCAT  EQU   INSMSCT+84
SCTLDSTB EQU   INSMSCT+80
SCTSRBT  EQU   INSMSCT+76
SCTMSADR EQU   INSMSCT+72
@NM00112 EQU   INSMSCT+71
SCTXBTTR EQU   INSMSCT+68
SCTJSCAT EQU   SCTSTYPE
SCTINITB EQU   SCTSTYPE
SCTSJFHK EQU   SCTSTYPE
SCTOUTMC EQU   SCTSTYPE
SCTINPUT EQU   SCTSTYPE
SCTGOSTP EQU   SCTSTYPE
@NM00111 EQU   INSMSCT+66
SCTNSMSG EQU   INSMSCT+65
SCTSNUMB EQU   INSMSCT+64
@NM00110 EQU   INSMSCT+62
SCTRPACT EQU   INSMSCT+60
SCTSCLPC EQU   INSMSCT+44
@NM00109 EQU   INSMSCT+43
SCTADSTB EQU   INSMSCT+40
@NM00108 EQU   INSMSCT+36
@NM00107 EQU   INSMSCT+35
SCTDDNT  EQU   INSMSCT+28
@NM00106 EQU   INSMSCT+27
SCTLSIOT EQU   INSMSCT+24
@NM00105 EQU   INSMSCT+23
SCTANSCT EQU   INSMSCT+20
@NM00104 EQU   INSMSCT+19
SCTAALOC EQU   INSMSCT+16
@NM00103 EQU   INSMSCT+15
SCTFSIOT EQU   INSMSCT+12
SCTLALOC EQU   INSMSCT+10
SCTSEXEC EQU   INSMSCT+8
SCTSTIME EQU   INSMSCT+5
INCMSSTS EQU   SCTSSTAT
SCTGRPH  EQU   SCTSSTAT
SCTKEY0  EQU   SCTSSTAT
SCTDORST EQU   SCTSSTAT
SCTNOCKP EQU   SCTSSTAT
SCTNORST EQU   SCTSSTAT
EACAUSER EQU   SCTSSTAT
EAADDRBT EQU   SCTSSTAT
SCTTBLID EQU   INSMSCT+3
SCTDISKA EQU   INSMSCT
@NM00102 EQU   IEFAACTB+7
ACTNEXT  EQU   IEFAACTB+4
ACTIDENT EQU   IEFAACTB+3
ACTDSKAD EQU   IEFAACTB
@NM00101 EQU   INJMJCT+175
JCTVULDP EQU   INJMJCT+172
JCTACODE EQU   INJMJCT+168
JCTPRFMF EQU   INJMJCT+167
JCTUSER  EQU   INJMJCT+160
JCTSSD   EQU   INJMJCT+157
@NM00100 EQU   INJMJCT+156
JCTSRBT  EQU   INJMJCT+152
JCTJMRJD EQU   INJMJCT+149
JCTJMRJT EQU   INJMJCT+146
JCTJMRSS EQU   INJMJCT+143
JCTJMRTL EQU   INJMJCT+140
JCTJMRD  EQU   INJMJCT+137
JCTCKIDT EQU   INJMJCT+118
JCTCKIDL EQU   INJMJCT+117
@NM00099 EQU   JCTSTAT2
JCTBLP   EQU   JCTSTAT2
JCTPERFM EQU   JCTSTAT2
JCTSWSM  EQU   JCTSTAT2
JCTENDIT EQU   JCTSTAT2
JCTADSPC EQU   JCTSTAT2
JCTSPSYS EQU   JCTSTAT2
@NM00098 EQU   INJMJCT+115
JCTSSTR  EQU   INJMJCT+112
JCTJSBTM EQU   JCTJSB
JCTJSBEX EQU   JCTJSB
JCTJSBAL EQU   JCTJSB
JCTJSBIN EQU   JCTJSB
@NM00097 EQU   JCTJSB
JCTVOLSQ EQU   INJMJCT+110
JCTNRCKP EQU   INJMJCT+108
JCTNTRK  EQU   INJMJCT+107
JCTCKTTR EQU   INJMJCT+104
JCTDEVT  EQU   INJMJCT+100
@NM00096 EQU   INJMJCT+99
JCTSTIOT EQU   INJMJCT+96
JCTSNUMB EQU   INJMJCT+95
JCTQIDNT EQU   INJMJCT+94
JCTEQREG EQU   INJMJCT+92
@NM00095 EQU   INJMJCT+91
JCTDETDA EQU   INJMJCT+88
JCTDSDRA EQU   JCTRSW2
JCTDSOJB EQU   JCTRSW2
JCTDSOCR EQU   JCTRSW2
JCTRESTT EQU   JCTRSW2
JCTNOCKP EQU   JCTRSW2
JCTNORST EQU   JCTRSW2
JCTNARST EQU   JCTRSW2
JCTSYSCK EQU   JCTRSW2
@NM00094 EQU   JCTRSW1
JCTSTEPR EQU   JCTRSW1
JCTCKPTR EQU   JCTRSW1
JCTCKFT  EQU   JCTRSW1
JCTCONTR EQU   JCTRSW1
JCTSTERM EQU   JCTRSW1
JCTWARMS EQU   JCTRSW1
@NM00093 EQU   JCTCCODE+3
JCTJDPOP EQU   JCTCCODE+2
JCTJDPCD EQU   JCTCCODE
@NM00092 EQU   INJMJCT+53
JCTSCT   EQU   INJMJCT+52
JCTSMRBA EQU   INJMJCT+44
@NM00091 EQU   INJMJCT+43
@NM00090 EQU   INJMJCT+39
JCTJCTX  EQU   INJMJCT+36
@NM00089 EQU   INJMJCT+35
JCTSDKAD EQU   INJMJCT+32
JCTJCSMF EQU   INJMJCT+31
JCTGDGNT EQU   INJMJCT+28
@NM00088 EQU   INJMJCT+27
JCTPDIP  EQU   INJMJCT+24
JCTJTPTN EQU   INJMJCT+16
JCTJNAME EQU   INJMJCT+8
JCTJPRTY EQU   JCTJBYTE
INCMMGL1 EQU   JCTJMGLV
INCMMGL2 EQU   JCTJMGLV
@NM00087 EQU   JCTJMGLV
INCMALL  EQU   JCTJMGLV
JCTJMGPO EQU   INJMJCT+6
INCMNSET EQU   JCTJSTAT
INCMCAT  EQU   INDMCTLG
INCMSTS  EQU   JCTJSTAT
JCTABEND EQU   JCTJSTAT
@NM00086 EQU   JCTJSTAT
JCTJSTPC EQU   JCTJSTAT
@NM00085 EQU   JCTJSTAT
JCTJBLBS EQU   JCTJSTAT
JCTJSRNO EQU   INJMJCT+4
JCTIDENT EQU   INJMJCT+3
JCTDSKAD EQU   INJMJCT
LCTLABEL EQU   LCT+504
LCTIWORK EQU   LCT+440
@NM00084 EQU   LCT+436
LCTIMSG  EQU   LCT+432
LCTLBWAP EQU   LCT+428
@NM00083 EQU   LCT+424
LCTBPPAS EQU   LCTINTS2
LCTSYS   EQU   LCTINTS2
LCTTSIZ  EQU   @NM00082
LCTRFB1  EQU   LCT+419
@NM00081 EQU   LCTRFB
LCTRFBRP EQU   LCTRFB
LCTRFBEF EQU   LCTRFB
LCTRFBMS EQU   LCTRFB
LCTRFBDC EQU   LCTRFB
LCTRFBRV EQU   LCTRFB
LCTRFBCR EQU   LCTRFB
LCTRFBSM EQU   LCTRFB
LCTMFTIO EQU   LCTSTATB
LCTNPKEY EQU   LCTSTATB
LCTSBPOL EQU   LCTSTATB
LCTNREAD EQU   LCTSTATB
LCTWRITE EQU   LCTSTATB
LCTNOATC EQU   LCTSTATB
LCTNOREG EQU   LCTSTATB
LCTECBPB EQU   LCTSTATB
LCTCPART EQU   LCTSTATA
LCTNOGCB EQU   LCTSTATA
LCTNOSDP EQU   LCTSTATA
LCTJCPIB EQU   LCTSTATA
LCTNECBL EQU   LCTSTATA
LCTBTJOB EQU   LCTSTATA
LCTSNOWK EQU   LCTSTATA
LCTSUSPD EQU   LCTSTATA
LCTTIOTI EQU   LCT+412
@NM00080 EQU   LCTJCTDA+3
LCTJCTVA EQU   LCTJCTDA
LCTSSOBA EQU   LCT+404
LCTSTEPL EQU   LCT+400
@NM00079 EQU   LCT+364
@NM00078 EQU   LCTJSCB+1
@NM00077 EQU   LCTOPSW3
@NM00076 EQU   LCTOPSW3
LCTALERR EQU   LCTOPSW3
LCTJNLF  EQU   LCTOPSW3
@NM00075 EQU   LCTOPSW3
LCTNSYS  EQU   LCTOPSW3
LCTRDER  EQU   LCTOPSW3
@NM00074 EQU   LCTOPSW3
@NM00073 EQU   @NM00069+1
LCTENQU  EQU   LCTOPSW2
LCTNORC  EQU   LCTOPSW2
LCTBPRAC EQU   LCTOPSW2
@NM00072 EQU   LCTOPSW2
@NM00071 EQU   LCTOPSW2
@NM00070 EQU   LCTOPSW2
LCTCRF   EQU   LCTOPSW2
LCTTIMEF EQU   LCTOPSW2
@NM00068 EQU   LCTEXIT+1
@NM00067 EQU   LCTOPSW1
@NM00066 EQU   LCTOPSW1
LCTONEJF EQU   LCTOPSW1
LCTCANF  EQU   LCTOPSW1
@NM00065 EQU   LCTOPSW1
@NM00064 EQU   LCTOPSW1
LCTDWFF  EQU   LCTOPSW1
LCTDPSWA EQU   LCTOPSW1
LCTTSRB3 EQU   LCTTSRB4+1
@NM00063 EQU   LCTTSRB4
@NM00062 EQU   LCT+340
@NM00061 EQU   LCTSPIL+3
@NM00060 EQU   LCTALCFG
@NM00059 EQU   LCTALCFG
@NM00058 EQU   LCTALCFG
@NM00057 EQU   LCTALCFG
@NM00056 EQU   LCTALCFG
@NM00055 EQU   LCTALCFG
LCTMSGWT EQU   LCTALCFG
LCTODSFL EQU   LCTALCFG
LCTDSBCT EQU   LCTSPIL
LCTPIB   EQU   LCTIDENT
@NM00054 EQU   ECBLIST+1
@NM00053 EQU   ECBLIST
LCTASCBA EQU   LCT+320
@NM00052 EQU   LCT+284
REGSAVE  EQU   LCT+104
@NM00051 EQU   LCTATLST+1
@NM00050 EQU   LCTATLST
@NM00049 EQU   LCTJOBLB+1
@NM00048 EQU   LCTJOBLB
LCTTSTU3 EQU   LCTTSTU4+1
@NM00047 EQU   LCTTSTU4
LCTTSTR3 EQU   LCTSMF+1
LCTTTIFJ EQU   LCTTMBYT
LCTTSTL3 EQU   LCTTSTL4+1
@NM00046 EQU   LCTTSTL4
LCTTJTU3 EQU   LCTTJTU4+1
@NM00045 EQU   LCTTJTU4
@NM00044 EQU   @NM00043+1
LCTNDSI  EQU   LCTINTSW
LCTABEND EQU   LCTINTSW
LCTSTOP  EQU   LCTINTSW
LCTSTART EQU   LCTINTSW
LCTMINRG EQU   LCTINTSW
LCTPPAA  EQU   LCTINTSW
LCTPRIV  EQU   LCTINTSW
LCTINPPT EQU   LCTINTSW
@NM00042 EQU   LCTSREG+1
@NM00041 EQU   LCTSREG
LCTCOMD2 EQU   LCTCOMCD+2
LCTCOMD1 EQU   LCTCOMCD
LCTBATMN EQU   LCT+64
@NM00040 EQU   LCTSMBAD+1
@NM00039 EQU   LCTSMBAD
LCTACTON EQU   LCT+59
@NM00038 EQU   LCTJFCBH
@NM00037 EQU   LCTJFCBH
@NM00036 EQU   LCTJFCBH
@NM00035 EQU   LCTJFCBH
@NM00034 EQU   LCTJFCBH
LCTS2FES EQU   LCTJFCBH
LCTS2COP EQU   LCTJFCBH
LCTS2PEM EQU   LCTJFCBH
LCTSTIND EQU   LCTNSPAD
@NM00033 EQU   LCTCMCBA+1
@NM00032 EQU   LCTCMCBA
LCTPARM4 EQU   LCT+48
LCTPARM3 EQU   LCT+44
LCTPARM2 EQU   LCT+40
LCTJCFAL EQU   LCTERR
LCTACOMP EQU   LCTERR
LCTSFAIL EQU   LCTERR
LCTPALCD EQU   LCTERR
LCTSALCD EQU   LCTERR
@NM00031 EQU   LCTPSPAR+1
@NM00030 EQU   LCTPSPAR
@NM00029 EQU   LCTWORKA+3
LCTSCTVA EQU   LCTWORKA
@NM00028 EQU   LCTSCTAD+1
@NM00027 EQU   LCTSCTAD
@NM00026 EQU   LCTJCTAD+1
@NM00025 EQU   LCTJCTAD
@NM00024 EQU   LCTQENTY+1
LCTERRM  EQU   @NM00016
@NM00023 EQU   @NM00016
@NM00022 EQU   @NM00016
@NM00021 EQU   @NM00016
@NM00020 EQU   @NM00016
@NM00019 EQU   @NM00016
@NM00018 EQU   @NM00016
@NM00017 EQU   @NM00016
@NM00015 EQU   LCTTCBAD+1
@NM00014 EQU   LCTTCBAD
@NM00013 EQU   LCTSRTAD+1
@NM00012 EQU   LCTSRTAD
@NM00011 EQU   LCTQDRTY+1
@NM00010 EQU   LCTQDRTY
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00009 EQU   CVTFIX+248
@NM00008 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
@NM00006 EQU   TCBNC
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEFTB721,(C'PLS0206',0701,76087)
