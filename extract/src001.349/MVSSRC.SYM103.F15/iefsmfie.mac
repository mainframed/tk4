         TITLE 'IEFSMFIE - SMF INIT EXIT'
IEFSMFIE CSECT
* A 372500,373000,390500                                        YA00964
* A 176700,623220-623366,883620-883660,883750,762500           @G32FPRS
*MODULE NAME= IEFSMFIE                                          @Y02669
*                                                               @Y02669
*DESCRIPTIVE NAME= SMF INITIALIZATION EXIT SUPPORT MODULE       @Y02669
*                                                               @Y02669
*COPYRIGHT= N/A                                                 @Y02669
*                                                               @Y02669
*STATUS= REL. 02.0                                              @Y02669
*                                                               @Y02669
*FUNCTION=                                                      @Y02669
*    THIS MODULE HANDLES JOB INITIALIZATION PROCESSING AND STEP @Y02669
*    INITIALIZATION PROCESSING.  IT BASICALLY PERFORMS THE      @Y02669
*    FOLLOWING FUNCTIONS.                                       @Y02669
*                                                               @Y02669
*    DECISION AS TO WHETHER JOB OR STEP INITIALIZATION IS TO    @Y02669
*    TAKE PLACE.                                                @Y02669
*         WHEN THIS MODULE FIRST RECEIVES CONTROL FROM IEFSD101,@Y02669
*         IT IS DECIDED IF ANY SMF OPTIONS ARE TO BE PERFORMED  @Y02669
*         AND, IF SO, THE CURRENT TIME AND DATE ARE STORED IN   @Y02669
*         THE JCT (VIA TIME SVC 11).  IF NOT, A RETURN IS MADE  @Y02669
*         TO THE CALLER OF IEFSMFIE.  IF THE LCT INDICATES THAT @Y02669
*         THIS IS THE FIRST STEP OF THE JOB OR IF A TCT POINTER @Y02669
*         IS NOT PRESENT IN THE TCB, JOB INITIALIZATION         @Y02669
*         PROCESSING IS PERFORMED.  OTHERWISE, STEP INITIALI-   @Y02669
*         ZATION PROCESSING IS STARTED.                         @Y02669
*                                                               @Y02669
* JOB INITIALIZATION PROCESSING                                 @Y02669
*                                                               @Y02669
*    CONSTRUCTING A TIMING CONTROL TABLE (TCT).                 @Y02669
*         THE JMR IS READ INTO CORE. CORE IS OBTAINED FOR A TCT @Y02669
*         AND THE COMMON EXIT PARAMETER AREA (1ST 40 BYTES OF   @Y02669
*         THE JMR).  THE TCT CORE IS CLEARED AND SEVERAL FIELDS @Y02669
*         OF THE TCT ARE INITIALIZED. THE COMMON EXIT PARAMETER @Y02669
*         AREA IS INITIALIZED FROM THE JMR.                     @Y02669
*
*    SUPPORT OF A USER'S JOB INITIATION EXIT ROUTINE.           @Y02669
*         THE ACT IS READ INTO CORE.  IF A USER JOB INITIATION  @Y02669
*         EXIT RTN IS TO BE EXECUTED, A USER PARAMETER LIST IS  @Y02669
*         BUILT, THE FIELDS BEING INITIALIZED FROM THE ACT AND  @Y02669
*         THE COMMON EXIT PARAMETER AREA OF THE JMR. THE USER'S @Y02669
*         JOB INITIATION EXIT ROUTINE IS EXECUTED.  UPON RETURN @Y02669
*         TO IEFSMFIE, THE USER RETURN CODE IS CHECKED FOR USER @Y02669
*         JOB CANCELATION.  IF THE JOB IS TO BE CANCELLED, THE  @Y02669
*         JCT IS MARKED TO INDICATE THIS.                       @Y02669
*                                                               @Y02669
*    ISSUING SMF JOB COMMENCEMENT RECORD TYPE 20.               @Y02669
*         WHETHER OR NOT THE USER HAS CANCELLED THE JOB, THE    @Y02669
*         SMF RECORD TYPE 20 IS BUILT AND WRITTEN TO THE SMF    @Y02669
*         DATA SET VIA SVC 83. IF THE USER HAS CANCELLED THE    @Y02669
*         JOB, STEP INITIALIZATION PROCESSING IS PERFORMED.     @Y02669
*                                                               @Y02669
* STEP INITIALIZATION PROCESSING                                @Y02669
*                                                               @Y02669
*    IF THE JCT INDICATES THAT STEP PROCESSING IS TO BE PER-    @Y02669
*    FORMED AND USER EXITS ARE TO BE TAKEN, A USER  PARAMETER   @Y02669
*    LIST IS BUILT AND THE USER SUPPLIED STEP INITIATION EXIT   @Y02669
*    RTN (USI) IS EXECUTED.  UPON RETURN TO IEFSMFIE, THE USER  @Y02669
*    RETURN CODE IS CHECKED FOR USER JOB CANCELATION.  IF THE   @Y02669
*    JOB IS TO BE CANCELLED THE JCT IS MARKED TO INDICATE THIS. @Y02669
*                                                               @Y02669
*  OPERATION=                                                  @YM04108
*      INORDER FOR THE USER EXITS (IEFUJI, IEFUSI) TO          @YM04108
*      OPEN/CLOSE INSTALLATION DEFINED DATA SETS,              @YM04108
*      THE INITIATOR'S JSCB MUST BE THE ACTIVE JSCB.           @YM04108
*      THEREFORE, PRIOR TO CALLING THE EXIT, THE               @YM04108
*      INITIATOR'S JSCB IS MADE THE ACTIVE JSCB.               @YM04108
*      UPON RETURN FROM THE EXIT, THE P/P JSCB IS AGAIN        @YM04108
*      MADE THE ACTIVE JSCB.                                   @YM04108
*                                                               @Y02669
*NOTES                                                          @Y02669
*  DEPENDENCIES= INITIATOR (IEFSD101) FOR LCT ADDRESS IN REG 1  @Y02669
*    CHARACTER-CODE DEPENDENCIES= NONE                          @Y02669
*  RESTRICTIONS= NONE                                           @Y02669
*  REGISTER-CONVENTIONS= R15 IS USED FOR RETURN CODES FROM EXIT @Y02669
*                        ROUTINES.                              @Y02669
*  PATCH-LABEL= N/A                                             @Y02669
*                                                               @Y02669
*MODULE TYPE=                                                   @Y02669
*  PROCESSOR= (ASSEM)                                           @Y02669
*  MODULE SIZE= N/A                                             @Y02669
*  ATTRIBUTES= REFRESHABLE, REENTRANT, KEY 0, SUPERVISOR STATE, @Y02669
*              PAGABLE LPA                                      @Y02669
*                                                               @Y02669
*ENTRY POINT= IEFSMFIE                                          @Y02669
*  PURPOSE= SEE FUNCTION                                        @Y02669
*  LINKAGE= BALR                                                @Y02669
*  INPUT= REGISTER ONE CONTAINS THE ADDRESS OF THE LCT          @Y02669
*  REGISTERS SAVED= GPR 0-15                                    @Y02669
*  REGISTER USAGE= N/A                                          @Y02669
*  REGISTERS RESTORED= GPR 0-15                                 @Y02669
*                                                               @Y02669
*EXIT - NORMAL= RETURN TO CALLER                                @Y02669
*  CONDITIONS= PROCESSING COMPLETE                              @Y02669
*  OUTPUT= 1) A TIMING CONTROL TABLE (TCT) IS CONSTRUCTED AND   @Y02669
*             POINTED TO BY THE TCB IF THIS IS THE FIRST STEP   @Y02669
*             0F THE JOB.                                       @Y02669
*          2) SMF RECORD TYPE 20 IS WRITTEN TO THE SMF DATA SET @Y02669
*             IF THIS IS THE FIRST STEP OF THE JOB.             @Y02669
*          3) THE COMMON EXIT PARAMETER AREA (1ST 40 BYTES OF   @Y02669
*             JMR) IS POINTED TO BY THE TCT.                    @Y02669
*  RETURN CODES= NONE                                           @Y02669
*                                                               @Y02669
*EXIT - ERROR= NONE                                             @Y02669
*                                                               @Y02669
*EXTERNAL REFERENCES=                                           @Y02669
*  ROUTINES= IEFUJI (USER JOB INITIATION EXIT ROUTINE)          @Y02669
*            IEFUSI (USER STEP INITIATION EXIT ROUTINE)         @Y02669
*            IEFAB4F7 (SWA MANAGER READ ROUTINE)                @Y02669
*  DATA AREAS= NONE                                             @Y02669
*  CONTROL BLOCKS=     LCT - LINKAGE CONTROL TABLE              @Y02669
*                      JCT - JOB CONTROL TABLE                  @Y02669
*                      SCT - STEP CONTROL TABLE                 @Y02669
*                      TCB - TASK CONTROL BLOCK                 @Y02669
*                      ACT - ACCOUNTING CONTROL TABLE           @Y02669
*                      JMR - JOB MANAGEMENT RECORD              @Y02669
*                      TCT - TIMING CONTROL TABLE               @Y02669
*                                                               @Y02669
*TABLES= NONE                                                   @Y02669
*                                                               @Y02669
*MACROS=   TIME                                                 @Y02669
*          SMFWTM                                               @Y02669
*          GETMAIN                                              @Y02669
*          FREEMAIN                                             @Y02669
*  SERIALIZATION= NONE                                          @Y02669
*                                                               @Y02669
*CHANGE ACTIVITY= RACF SUPPORT                                 @G32FPRL
*                                                               @Y02669
*MESSAGES= NONE                                                 @Y02669
*                                                               @Y02669
*ABEND CODES= NONE                                              @Y02669
*                                                               @Y02669
*************************************************************** @Y02669
*                                                               @Y02669
R0       EQU   0                       REGISTER EQUATES
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
ACTSIZE  EQU   176
CANCEL   EQU   4                       USER RETURN CODE
ZERO     EQU   0                       FOR COMPARISON
STEPONE  EQU   1                       INDICATES THIS IS FIRST
*                                           STEP
*                                  BOTH JOB AND STEP USER EXITS
*                                  MAY BE REQUIRED
JCTJMRSP EQU   X'40'                   STEP FUNCTION REQUESTED
CANCUJI  EQU   X'20'                   *
CANCUSI  EQU   X'10'                   *
SMFJEXIT EQU   X'20'                   JOB EXITS ARE TO BE TAKEN
SMFSEXIT EQU   X'60'                   STEP EXITS ARE REQUESTED
READ1    EQU   1                       FOR ONE RECORD
POOL230  EQU   230                     ID SUB-POOL 230          @Y02669
POOL253  EQU   253                     *
DEC0     EQU   0                       NUMERIC EQUATE
DEC1     EQU   1                       NUMERIC EQUATE
DEC3     EQU   3                       NUMERIC EQUATE
DEC4     EQU   4                       NUMERIC EQUATE
DEC5     EQU   5                       NUMERIC EQUATE
DEC6     EQU   6                       NUMERIC EQUATE
DEC12    EQU   12                      NUMERIC EQUATE
DEC16    EQU   16                      NUMERIC EQUATE
DEC24    EQU   24                      NUMERIC EQUATE
DEC201   EQU   201                     NUMERIC EQUATE
HEX00    EQU   X'00'
POOL255  EQU   255                 SUBPOOL 255                    19018
ONE      EQU   1                   DISPLACEMENT                   19028
D8       EQU   8                   DISPLACEMENT                   19028
D20      EQU   20                  DISPLACEMENT                   19028
T20      EQU   20                  TYPE OF RECORD                 19028
MASKA    EQU   X'80'                   JOB SUPPORT                20011
ASCBPTR  EQU   12                 OFFSET TO ASCBOLD PTR IN PSA @G32FPRS
         STM   R14,R12,DEC12(R13)
         BALR  R12,R0
         USING *,R12                   *
         MODID BR=YES                                            Y01886
         USING IEFLOT,R10
         USING IEFSCT,R9
FIRST    DS    0H
         LR    R10,R1                  LCT
         LR    R4,R13                  SAVE R13 FOR NON-SMF
*                                           PROC-G
         L     R9,LCTSCTAD             PTR TO SCT
         L     R7,LCTJCTAD             PTR TO JCT
         USING INJMJCT,R7              PTR TO JCT
         USING IOPARAMS,R11            *
         TM    JCTJMROP,MASKA      ARE SMF OPTIONS SPECIFIED    @Y02669
         BZ    SD101001            NO-RETURN TO NON SMF           20011
*                                           PROC-G
         SPACE 4
         GETMAIN R,LV=SAQSIZE,SP=POOL230 GET CORE FOR Q & S/A   @Y02669
         LR    R13,R1                  PTR TO QUE & SAVE AREA
         USING SVANDQM,R13             *
         TIME  BIN                ISSUE TIME MACRO                 SMF1
         STM   R0,R1,SMFSAVE           *
         MVC   JCTJMRSS(DEC3),SMFSAVE+DEC1 STEP TIME
         MVC   JCTSSD(DEC3),SMFSAVE+DEC5 STEP DATE              @Y02669
         GETMAIN    R,LV=ACTSIZE,SP=POOL230 GET CORE FOR ACT    @Y02669
         LR    R8,R1               SAVE ACT ADDRESS               19028
         USING ACTDSKAD,R8         ACT ADDRESSABILITY             19028
         CLI   LCTSNUMB,STEPONE        IS THIS THE FIRST STEP OF
*                                           THE
         BE    STEP1              JOB   BEGIN STEP1 PROCESS      F27251
         L     R5,LCTTCBAD         ADDR TCB FOR THIS JOB          M3152
         USING TCB,R5              TCB ADDRESSIBILITY           @Y02669
         L     R1,TCBTCT           AND THE CURRENT TCT          @Y02669
         LA    R1,0(R1)              ADDRESS                     F27251
         LTR   R1,R1      IS THERE A TCT PTR    IN STEP RESTARTS F27251
*                           IN OTHER THAN THE FIRST STEP THERE WILL
*                              NOT BE A TCT
         BNZ   SMFSTEP                                           F27251
         DROP  R5                                               @Y02669
STEP1    EQU   *                                                 F27251
  SPACE 4
*** *** ***
*
*FIRST STEP PROCESSING HERE
*
*** *** ***
         MVC   SMFQTTR3(DEC3),JCTJMR   JMR TTR
         BAL   R5,ACTGET               AND GO READ IN JMR
         L     R5,LCTTCBAD         ADDR TCB FOR THIS JOB          M3152
         USING TCB,R5              TCB ADDRESSIBILITY           @Y02669
         GETMAIN   R,LV=TCTBIG,SP=POOL253                       @Y02669
         USING SMFTCT,R1               *
         XC    DEC0(TCTBIG,R1),DEC0(R1) GET A TCT AND CLEAR IT
         MVC   TCTPOOL(4),SPSIZE       MOVE SP & SIZE
TCTPROC  EQU   *                                                  19018
         LA    R1,DEC0(R1)             ZERO HI BYTE OF TCBTCT PTR M0432
         ST    R1,TCBTCT               *                        @Y02669
         ST    R5,TCTTCB               AND HAVE TCT PT TO TCB
         DROP  R5                                               @Y02669
         LA    R6,TCTCORE              HAVE TCT PT TO CORE TABLE
         ST    R6,TCTCRTBL             *
         LR    R5,R1                   SAVE TCT BASE            @Y02669
         GETMAIN R,LV=JMRSIZE,SP=POOL253                        @Y02669
         LR    R6,R1                   JMR BASE                 @Y02669
         LR    R1,R5                   RESTORE TCT BASE         @Y02669
         USING JMR,R6                  *
         MVC   DEC0(JMRSIZE,R6),DEC0(R8) AND MOVE JMR TO LOW
*                                           CORE
         ST    R6,TCTJMR               HAVE THE TCT PT TO THE
*                                           JMR
         ST    R6,JMRUJVP              SET UP PTR FOR TIME LIMIT
*                                           RTN
         LA    R5,JMRUJVP              *
         ST    R5,TCTUDATA             SUPERVISOR WILL LOAD R1
*                                           FROM HERE
         OC    JCTJMRJT(DEC6),JCTJMRJT     IS THIS AUTO-RESTART?YA00964
         BNZ   RESTART                     YES-RETAIN JOB START YA00964
         MVC   JCTJMRJT(DEC3),SMFSAVE+DEC1 JOB TIME
         MVC   JCTJMRJD(DEC3),SMFSAVE+DEC5 DATE
RESTART  EQU   *                                                YA00964
         MVC   SMFQTTR2(DEC3),JCTACTAD TTR FOR JOB ACT TO EXT
*                                           PARM
         BAL   R5,ACTGET               GO GET SPACE FOR ACT
         TM    JCTJMROP,SMFJEXIT       EXITS TO BE TAKEN FOR    @Y02669
*                                      JOB ENTRY                @Y02669
         BO    SMFSVAQ                 YES, GO SET UP FOR USER
*                                           EXIT
         B     TESTDS              NO, CHECK DATA SET ACCTG       19028
         SPACE 4
         SPACE  4
TESTCANC EQU   *                       *
         LA    R0,CANCEL               CHECK RETURN CODE- DOES
*                                           USER
         CR    R0,R15              ASK THAT JOB BE CANCELLED      19028
         BNE   NOCANC                  IF SO CONTINUE
         OI    JCTJSTAT,INCMSTS        MARK JCT FOR CANCEL
         BR    R5                      RETURN
NOCANC   B     DEC4(R5)                GO BACK AFTER MARKING OF
*                                           CANC POINT
         SPACE 4
*** *** ***
*
*INTERFACE TO Q MGR
*
*** *** ***
STEPGET  EQU   *                       *
         MVC   SMFQTTR3(DEC3),SCTAFACT STEP ACT TTR
ACTGET   EQU   *                       *
         MVI   SMFQTTR1+DEC3,DEC0      *
         ST    R8,SMFQADR3         ACT ADDRESS IN EXT PARM AREA   19028
         LA    R11,QMGR1               PTR TO PARAM AREA
         LA    R2,SMFQEXT              PTR TO EXT PARAM AREA
         ST    R2,QMPCL                PLACE PTR IN PARM AREA
         MVI   QMPCL,READ1             INDICATE ONE RECORD TO
*                                           READ
         MVI   QMPOP,QMREAD            INDICATE READ
         L     R15,VQUEMAN             ADDR OF QUEUE MAN READ
*                                           RTN
         LR    R1,R11                  POINT TO QMPA
         BALR  R14,R15                 BRANCH AND LINK FOR READ
         BR    R5                      RETURN                   @Y02669
         SPACE  4
*        SET UP FOR JOB PROCESSING
*
SMFSVAQ  EQU   *                       *
         LA    R0,JMRJOB               *
         LA    R1,ACTPRGNM-ACTDSKAD(R8) PROGRAM NAME
         NI    SMFJPRTY,HEX00          ZERO PARM FIELD
         MVN   SMFJPRTY(DEC1),JCTJPRTY MOVE IN PRIORTY
         LA    R2,SMFJPRTY
         LA    R3,ACTJNFLD-ACTDSKAD(R8) JOB ACT FLDS
         STM   R0,R3,USERPARM          ST AND PT TO USER LIST
         LA    R1,USERPARM             *
         MVI   JMRSTEP,DEC0            *
         L     R15,VIEFUJI             ADDRESS OF JOB INIT RTN
         L     R5,LCTTCBAD             GET ADDR INITIATOR'S TCB@YM04108
         USING TCB,R5                                          @YM04108
         L     R5,TCBJSCB              GET ADDR INITIATOR JSCB @YM04108
         USING IEZJSCB,R5                                      @YM04108
         L     R3,JSCBACT              SAVE P/P JSCB ADDR      @YM04108
         ST    R5,JSCBACT              MAKE INITIATOR'S JSCB   @YM04108
*                                      ACTIVE JSCB             @YM04108
         BALR  R14,R15                 BRANCH TO USER
         ST    R3,JSCBACT              RESTORE P/P JSCB ADDR   @YM04108
         DROP  R5                                              @YM04108
         BAL   R5,TESTCANC             *
         OI    JCTJMRCL,CANCUJI        JOB INIT RTN CANCELED
TESTDS   EQU   *                                                  19028
         L     R2,CVTPTR           ADDRESS OF CVT                 19028
         USING CVT,R2              CVT ADDRESSABILITY            Y01120
         L     R2,CVTSMCA          ADDRESS OF SMCA               Y01120
         DROP  R2
         USING SMCABASE,R2         SMCA ADDRESSABILITY            19028
         GETMAIN R,LV=REC20SZE,SP=POOL230 GET CORE FOR 20 REC   @Y02669
         LR    R14,R1              SAVE ADDRESS                   19028
         USING TYPE20,R14          TYPE 20 ADDRESSABILITY         19028
         XC    TYPE20(REC20SZE),TYPE20   ZERO OUT GOTTEN CORE     19028
         MVI   RECTYPE,T20         INSERT RECORD TYPE             19028
         MVC   RECJNM(D8),JMRJOB   JOB NAME STARTING              19028
         MVC   RECTME(D8),JMRENTRY GET TIME AND DATE              M3152
         MVC   RECPGRNM(D20),ACTPRGNM    INSERT PROGRAMMER NAME   19028
         MVC   RECUSID(D8),JMRUSEID      USER ID                  19028
         LA    R3,ACTJNFLD+ONE     POINT TO ACCTG FIELDS          19028
         LA    R15,RECJANO+ONE     POINT TO EMPTY SPACE           19028
         SR    R11,R11             ZERO OUT FOR IC                19028
         IC    R11,ACTJNFLD        NUMBER OF JOB ACCTG FIELDS     19028
         STC   R11,RECJANO         STORE IN TYPE 20 RECORD        19028
         LTR   R11,R11             ANY ACCOUNTING FIELDS          19028
         BZ    NOACCTG             BRANCH IF NO ACCTG FIELDS      19028
         SR    R1,R1               ZERO OUT FOR IC                19028
NEXTFLD  EQU   *                                                  19028
         IC    R1,ZERO(R3)         LENGTH OF THIS ACCTG FIELD     19028
         EX    R1,ACTGMOVE         MOVE ACCTG FIELD AND LENGTH    19028
         LA    R1,ONE(R1)          ADD 1 FOR LENGTH BYTE          19028
         AR    R15,R1              INCREMENT TO NEXT EMPTY SPACE  19028
         AR    R3,R1               INCREMENT TO NEXT ACCTG FIELD  19028
         BCT   R11,NEXTFLD         END OF ACCTG FIELDS            19028
NOACCTG  EQU   *                   YES                            19028
*                                                              @G32FPRS
* CODE ADDED FOR SUPPORT OF RACF 5-3-76                        @G32FPRS
*                                                              @G32FPRS
         XC    ZERO(26,R15),ZERO(R15) CLEAR RACF SMF AREA      @G32FPRL
         LA    R3,4                LENGTH OF RDW               @G32FPRL
         LR    R11,R15             COPY PTR TO CURRENT POSITION@G32FPRS
         SR    R11,R14             FIND CURRENT RECORD LENGTH  @G32FPRL
         SR    R11,R3              OFFSET TO RACF RELOCATE AREA@G32FPRL
         STH   R11,SMF20RLO        SAVE OFFSET TO RELOCATE AREA@G32FPRL
         MVC   ZERO(2,R15),RELSIZE  SAVE RELOCATE SECTION SIZE @G32FPRL
         LA    R15,2(ZERO,R15)     BUMP PAST LENGTH FIELD      @G32FPRL
         AH    R11,RELSIZE         ADD LENGTH OF RELOCATE AREA @G32FPRL
         AR    R11,R3              ADD LENGTH OF RDW           @G32FPRL
         STH   R11,RECLEN          PUT RECORD LENGTH IN RECORD @G32FPRL
         L     R1,CVTPTR           ADDRESS CVT                 @G32FPRS
         USING CVT,R1                                          @G32FPRS
         L     R1,CVTTCBP          GET ADDRESS OF NEW/OLD PTRS @G32FPRS
         L     R1,ASCBPTR(ZERO,R1) GET ADDRESS OF CURRENT ASCB @G32FPRS
         DROP  R1                                              @G32FPRS
         USING ASCB,R1                                         @G32FPRS
         L     R1,ASCBASXB         FIND ASXB                   @G32FPRS
         DROP  R1                                              @G32FPRS
         USING ASXB,R1                                         @G32FPRS
         L     R1,ASXBSENV         FIND RACF CONTROL TABLE     @G32FPRS
         LTR   R1,R1               IF NOT 0,RACF IN SYSTEM     @G32FPRS
         BZ    NORACF              IF NO RACF, DONT FILL FIELDS@G32FPRS
         DROP  R1                                              @G32FPRS
         USING ACEE,R1                                         @G32FPRS
         MVC   ZERO(8,R15),ACEEGRPN     GET GROUP ID           @G32FPRS
         LA    R15,8(ZERO,R15)     MOVE AREA ADDRESS 8 CHARS   @G32FPRS
         MVC   ZERO(8,R15),ACEEUSRI     GET USER ID            @G32FPRS
         LA    R15,8(ZERO,R15)     MOVE TO NEXT 8 CHARS        @G32FPRS
         L     R11,ACEETRMP        GET ADDRESS OF TERMINAL ID  @G32FPRS
         LTR   R11,R11             CHECK FOR A TERMINAL USER   @G32FPRS
         BZ    NORACF              FINISHED AT THIS POINT      @G32FPRS
         MVC   ZERO(8,R15),0(R11)  MOVE TERMINAL ID TO RECORD  @G32FPRS
         LA    R15,8(ZERO,R15)     MOVE POINTER TO NEXT 8 CHARS@G32FPRS
NORACF   EQU   *                                               @G32FPRS
         USING SMFTCT,R1
         LR    R1,R14              ADDRESS OF TYPE 20             19028
         SMFWTM     (1)            WRITE TO SMF DATA SET          19028
         LR    R1,R14              ADDRESS OF TYPE 20 RECORD      19028
         FREEMAIN   R,LV=REC20SZE,A=(1),SP=POOL230              @Y02669
STEPTEST EQU   *                                                  19028
         TM    JCTJMROP,JCTJMRSP       STEP FUNCTIONS REQUESTED @Y02669
         BZ    SMFRET                  NO-SMF PROCESSING
*                                           COMPLETE
  SPACE 4
*** *** ***
*
*        SET UP FOR STEP PROCESSING
*
*** *** ***
SMFSTEP  EQU   *                       *
         TM    JCTJMROP,JMRSTPSW+JMREXITS *
         BNO   SMFFJMR                 GO FREE JMR IF NOT BOTH
*                                           STEP FUNCTIONS AND
*                                   EXITS TO BE TAKEN
         BAL   R5,STEPGET              *
         L     R5,LCTTCBAD         ADDR TCB FOR THIS JOB          M3152
         USING TCB,R5              TCB ADDRESSIBILITY           @Y02669
         L     R1,TCBTCT           PT TO TCT                    @Y02669
         L     R0,TCTJMR               JMR
         LR    R6,R0              PT TO JMR (ALREADY DONE IF THIS
*                                    IS FIRST STEP)
         LA    R1,SCTSNAME             OBTAIN STPNME ADDR
         LA    R2,SCTPGMNM             OBTAIN PROGNME ADDR
         TM    SCTSTYPE,SCTGOSTP       FOR GO STEP PGM NAME IS A
*                                           TTR
         BZ    NOTPGMDD                TAKE BRANCH IF NOT GO STEP
         LA    R2,PGMDD                OTHERWISE IT IS APGM DD
NOTPGMDD EQU   *                       *
         LA    R3,ACTJNFLD-ACTDSKAD(R8) *
         STM   R0,R3,USERPARM          ST AND PT TO USER LIST
         LA    R1,USERPARM             *
         MVC   JMRSTEP(DEC1),LCTSNUMB  MOVE IN STEP NO.
         L     R15,VIEFUSI             ADDRESS OF USER
         L     R5,LCTTCBAD             GET ADDR INITIATOR'S TCB@YM04108
         USING TCB,R5                                          @YM04108
         L     R5,TCBJSCB              GET ADDR INITIATOR JSCB @YM04108
         USING IEZJSCB,R5                                      @YM04108
         L     R3,JSCBACT              SAVE P/P JSCB ADDR      @YM04108
         ST    R5,JSCBACT              MAKE INITIATOR'S JSCB   @YM04108
*                                      ACTIVE JSCB             @YM04108
         BALR  R14,R15                 GO TO USER STEP INIT RTN
         ST    R3,JSCBACT              RESTORE P/P JSCB ADDR   @YM04108
         DROP  R5                                              @YM04108
         BAL   R5,TESTCANC             SEE IF USER CANC JOB
         OI    JCTJMRCL,CANCUSI        STEP INIT CANCELLED
  SPACE 4
SMFRET   EQU   *                       *
SMFFJMR  EQU   *                       *
SMFFSA   EQU   *                       *
         LR    R1,R8               ADDRESS OF ACT                 19028
         FREEMAIN   R,LV=ACTSIZE,A=(1),SP=POOL230 FREE ACT CORE @Y02669
         LR    R1,R13                  LOCATION OF SAVEAREA
         FREEMAIN R,LV=SAQSIZE,A=(1),SP=POOL230  FREE THIS AREA @Y02669
  SPACE 4
SD101001 EQU   *                       *
         LR    R13,R4                  RESTORE REG 13
         LM    R14,R12,DEC12(R13)      RESORE REGS
         BR    R14                     RETURN
VQUEMAN  DC    V(IEFQMRAW)             ADDR OF QUEUE MAN READ
*                                           AND
*        WRITE RTN
VIEFUJI  DC    V(IEFUJI)               USER ADDR OF USER JOB
*                                           INIT RTN
VIEFUSI  DC    V(IEFUSI)               USER STEP INITIATION RTN
PGMDD    DC    C'PGM=*.DD'             *
SPSIZE   DC    AL1(POOL253)
         DC    AL3(TCTBIG)                                      @Y02669
ACTGMOVE MVC   ZERO(ZERO,R15),ZERO(R3)   MOVE ACCTG FIELD         19028
RELSIZE  DC    AL2(RECEND-SMF20RLA) SIZE OF RELOCATABLE AREA   @G32FPRL
  SPACE 4
SVANDQM  DSECT                    SAVE ARE AND QUEUE MAN EXT PARM  SMF1
*                                  AREA
SMFSAVE  DS    18F                     SAVE AREA
USERPARM DS    2F                      PARM LIST FOR USER-
*
*        TO UJI              TO USI
*
*        JMRJOB              JMRJOB
*        PROGRAMMER'S NAME   STEP NAME
*        JOB PRIORITY        PGROGRAM NAME
*        ACT INFO            ACT INFO
*
SMFQEXT  EQU   *                       EXTERNAL PARAMETER AREA
SMFQADR1 DS    F                       CORE LOCATION OF JMR
SMFQTTR1 DS    F                       TTR OF JMR
SMFQADR2 EQU   SMFQADR1                *
SMFQTTR2 EQU   SMFQTTR1                *
SMFQADR3 EQU   SMFQADR2                *
SMFQTTR3 EQU   SMFQTTR2                *
SMFJPRTY DS    C                       JOB PRIORITY
SMFRESV  DS    7C                      RESERVED
SAQSIZE  EQU   *-SVANDQM               *
         EJECT
CVT      DSECT
         CVT
         EJECT
  SPACE  4
         IEZJSCB                                               @YM04108
         IKJTCB                                                 @Y02669
         IEFQMNGR                                                  SMF1
IEFJCT   DSECT                                                     SMF1
         IEFAJCTB                                                  SMF1
         IEFTCT
         IEFJMR                                                    SMF1
IEFSCT   DSECT
         IEFASCTB
IEFLOT   DSECT
         IEFALLCT
         IEESMCA
         IHAACEE
         IHAASCB
         IHAASXB
TYPE20   DSECT                                                    19028
         DS    0D                                                 19028
RECLEN   DS    CL2                 LENGTH OF THE RECORD           19028
RECDES   DS    CL2                 SEGMENT DESCRIPTOR             19028
         DS    CL1                                                19028
RECTYPE  DS    CL1                 RECORD TYPE                    19028
RECTIME  DS    CL8                 TIME STAMP                     19028
RECCPU   DS    CL4                 CPU ID                         19028
RECJNM   DS    CL8                 JOB LOG NUMBER - JOB NAME      19028
RECTME   DS    CL8                 JOB START TIME AND DATE        19028
RECUSID  DS    CL8                 USER ID                        19028
SMF20RLO DS    BL2                 OFFSET TO RELOCATE SECTION  @G32FPRL
*                                  FROM BEGINNING OF RECORD    @G32FPRL
RECPGRNM DS    CL20                PROGRAMMER'S NAME              19028
RECJANO  DS    CL1                 NUMBER OF JOB ACCTG FIELDS     19028
         DS    CL148               JOB ACCTG FIELDS               19028
*    RELOCATABLE AREA                                          @G32FPRL
*    SMF20RLO IS ITS OFFSET FROM BEGINNING OF OF RECORD        @G32FPRL
SMF20RLA EQU   *                   RELOCATABLE AREA            @G32FPRL
SMF20RLS DS    BL2                 SIZE OF RELOCATE SECTION    @G32FPRS
SMF20GRP DS    CL8                 RACF GROUP ID               @G32FPRS
SMF20UID DS    CL8                 RACF USER ID                @G32FPRS
SMF20TID DS    CL8                 RACF TERMINAL ID            @G32FPRS
RECEND   EQU   *                                                  19028
REC20SZE EQU   RECEND-RECLEN       LENGTH OF THIS RECORD          19028
         END
