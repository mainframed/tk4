         TITLE 'IEFTB722 - SMF RECORD CONSTRUCTION AT TASK UNALLOCATION*
               N        '
IEFTB722 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFTB722  77.334'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         MODESET EXTKEY=SCHED,SAVEKEY=(2)
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         STC   @02,@OLDKEY                                      01S0001
         MODESET KEYADDR=(2)
         LM    @00,@02,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MODESET EXTKEY=ZERO
         MVC   @PC00001(32),0(@01)                              01S0001
         MODESET EXTKEY=SCHED
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*/********************************************************************/
* DO; /*MODESET  KEYADDR(ZEROKEY)*/                             01S0123
*   SPKA (ZEROKEY); /*SET PSW KEY*/                             01S0124
         SLR   @10,@10                                          01S0124
         SPKA  0(@10)                                           01S0124
* END; /*MODESET  KEYADDR(ZEROKEY)*/            /* RUN IN KEY 0       @
*40FPPD*/                                                       01S0125
*RECORD=RECRDPTR;                      /* RECORD ADDRESSABILITY      */
         L     @10,@PC00001+12                                  01S0126
         L     RECORD,RECRDPTR(,@10)                            01S0126
*RFY SMFRCD34 BASED(RECORD);                                    01S0127
*REMSIZE=RECORDLN;                     /* RECORD LENGTH      @ZA27576*/
         L     @10,@PC00001+28                                  01S0128
         LH    REMSIZE,RECORDLN(,@10)                           01S0128
*DO START=1 BY 256 WHILE(REMSIZE>256); /* CLEAR RECORD       @ZA27576*/
         LA    START,1                                          01S0129
         B     @DE00129                                         01S0129
@DL00129 DS    0H                                               01S0130
*  SMFRCD34(START:START+255)=SMFRCD34&&SMFRCD34;/* WORK      @ZA27576*/
         LR    @10,RECORD                                       01S0130
         ALR   @10,START                                        01S0130
         BCTR  @10,0                                            01S0130
         XC    SMFRCD34(256,@10),SMFRCD34(@10)                  01S0130
*  REMSIZE=REMSIZE-256;                 /* AREA              @ZA27576*/
         SL    REMSIZE,@CF00857                                 01S0131
*END;                                   /*                   @ZA27576*/
         AL    START,@CF00857                                   01S0132
@DE00129 C     REMSIZE,@CF00857                                 01S0132
         BH    @DL00129                                         01S0132
*SMFRCD34(START:START+REMSIZE-1)=SMFRCD34&&SMFRCD34;/* REM   @ZA27576*/
         LR    @10,RECORD                                       01S0133
         ALR   @10,START                                        01S0133
         BCTR  @10,0                                            01S0133
         LR    @04,REMSIZE                                      01S0133
         BCTR  @04,0                                            01S0133
         EX    @04,@SX02674                                     01S0133
*JMRPTR=JMRLOC;                        /* JMR ADDRESSABILITY         */
         L     @10,@PC00001+4                                   01S0134
         L     JMRPTR,JMRLOC(,@10)                              01S0134
*LCTPTR=LCTLOC;                        /* LCT ADDRESSABILITY.        */
         L     @10,@PC00001+8                                   01S0135
         L     LCTPTR,LCTLOC(,@10)                              01S0135
*TIVRLEN=RECORDLN;                     /* LENGTH OF RECORD TO RDW    */
         L     @10,@PC00001+28                                  01S0136
         LH    @10,RECORDLN(,@10)                               01S0136
         STH   @10,TIVRLEN(,RECORD)                             01S0136
*TIVRSEG=TIVRSEG&&TIVRSEG;             /* CLEAR SEGMENT DESCRIPTOR &
*                                         OPERATING ENVIRONMENT FIELD*/
         LH    @10,TIVRSEG(,RECORD)                             01S0137
         LR    @04,@10                                          01S0137
         XR    @04,@10                                          01S0137
         STH   @04,TIVRSEG(,RECORD)                             01S0137
*TIVRFLG=TIVRFLG&&TIVRFLG;             /* CLEAR RESERVED FIELD       */
         XC    TIVRFLG(1,RECORD),TIVRFLG(RECORD)                01S0138
*RFY (REG0,REG1) RSTD;                                          01S0139
*GEN (TIME BIN);                       /* OBTAIN TERMINATION TIME AND
*                                         DATE (CURRENT TIME).       */
         TIME BIN
*TIVRCDTS=REG0;                        /* TERMINATION TIME TO RECORD */
         STCM  REG0,15,TIVRCDTS(RECORD)                         01S0141
*TIVRCDTE=REG1;                        /* TERMINATION DATE TO RECORD */
         STCM  REG1,15,TIVRCDTE(RECORD)                         01S0142
*TIVRCDTE(4)=TIVRCDTE(4)×'0F'X;        /* INSURE SIGN IS PRINTABLE   */
         OI    TIVRCDTE+3(RECORD),X'0F'                         01S0143
*RFY (REG0,REG1) UNRSTD;                                        01S0144
*TIVCPUID=JMRCPUID;                    /* CPU ID TO RECORD - VALUE
*                                         ORIGINALLY FROM SID KEYWORD*/
         MVC   TIVCPUID(4,RECORD),JMRCPUID(JMRPTR)              01S0145
*TIVUIF=JMRJOB;                        /* USER ID FOR FOREGROUND OR
*                                         JOBNAME FOR BACKGROUND TASK*/
         MVC   TIVUIF(8,RECORD),JMRJOB(JMRPTR)                  01S0146
*TIVONTME=JMRENTRY;                    /* TIME THAT JOB ENTERED THE
*                                         SYSTEM.                    */
         MVC   TIVONTME(4,RECORD),JMRENTRY(JMRPTR)              01S0147
*TIVONDTE=JMREDATE;                    /* DATE THAT JOB ENTERED THE
*                                         SYSTEM.                    */
         MVC   TIVONDTE(4,RECORD),JMREDATE(JMRPTR)              01S0148
*TIVUDATA=JMRUSEID;                    /* USER IDENIIFICATION FIELD  */
         MVC   TIVUDATA(8,RECORD),JMRUSEID(JMRPTR)              01S0149
*TIVINVSQ=LCTSNUMB;                    /* CURRENT STEP NUMBER FOR STEP
*                                         OR TOTAL NUMBER OF STEPS FOR
*                                         JOB TERMINATION.   @ZA08699*/
         IC    @10,LCTSNUMB(,LCTPTR)                            01S0150
         STC   @10,TIVINVSQ(,RECORD)                            01S0150
*IF TCBFA='1'B THEN                    /* HAS THIS TASK ABENDED?     */
         L     @10,LCTTCBAD(,LCTPTR)                            01S0151
         TM    TCBFA(@10),B'10000000'                           01S0151
         BNO   @RF00151                                         01S0151
*  DO;                                                          01S0152
*    JCTJMRCL=JCTJMRCL×'02'X;          /* AT LEAST 1 STEP       01S0153
*                                         ABENDED            @YM05069*/
         L     @04,LCTJCTAD(,LCTPTR)                            01S0153
         OI    JCTJMRCL(@04),X'02'                              01S0153
*    COMPCODE=TCBCMPC(1:2);            /* PICK UP SYSTEM ABEND FIELD */
         L     @04,@PC00001+24                                  01S0154
         MVC   COMPCODE(2,@04),TCBCMPC(@10)                     01S0154
*    RFY REG1 RSTD;                    /*                    @YM05069*/
*    REG1=COMPCOD;                     /*                    @YM05069*/
         LH    REG1,COMPCOD(,@04)                               01S0156
*    GEN(SRL   REG1,4);                /* PROPERLY ALIGN SYSTEM ABEND
*                                         CODE FOR RECORD AND USER
*                                         EXIT, IEFACTRT     @YM05069*/
         SRL   REG1,4
*    COMPCOD=REG1;                     /*                    @YM05069*/
         L     @10,@PC00001+24                                  01S0158
         STH   REG1,COMPCOD(,@10)                               01S0158
*    RFY REG1 UNRSTD;                  /*                    @YM05069*/
*    COMPCODE(1)=COMPCODE(1)&'0F'X;    /* SYSTEM ABEND INDICATOR     */
         NI    COMPCODE(@10),X'0F'                              01S0160
*    IF COMPCODE^='0000'X THEN         /* SYSTEM ABEND CODE  @YM05069*/
         CLC   COMPCODE(2,@10),@CB02622                         01S0161
         BE    @RF00161                                         01S0161
*      DO;                             /* YES                @YM05069*/
*        IF COMPCODE(2)='0D'X THEN      /* RECURSION THROUGH ABEND?
*                                         (E0D OR D0D INDICATES REAL
*                                         CODE IN USER PORTION  01S0163
*                                         OF FIELD)          @YM05069*/
         CLI   COMPCODE+1(@10),X'0D'                            01S0163
         BNE   @RF00163                                         01S0163
*          DO;                         /*                    @YM05069*/
*            COMPCODE=TCBCMPC(2:3);       /* GET ABEND CODE  @YM05069*/
         L     @04,LCTTCBAD(,LCTPTR)                            01S0165
         MVC   COMPCODE(2,@10),TCBCMPC+1(@04)                   01S0165
*            COMPCODE(1)=COMPCODE(1)&'0F'X;     /* SYSTEM CODE  01S0166
*                                         INDICATOR          @YM05069*/
         NI    COMPCODE(@10),X'0F'                              01S0166
*          END;                        /*                    @YM05069*/
*      END;                            /*                    @YM05069*/
*    ELSE                              /*                    @YM05069*/
*      DO;                             /* USER ABEND CODE    @YM05069*/
         B     @RC00161                                         01S0169
@RF00161 DS    0H                                               01S0170
*        COMPCODE=TCBCMPC(2:3);        /* SET ABEND CODE     @YM05069*/
         L     @10,@PC00001+24                                  01S0170
         L     @04,LCTTCBAD(,LCTPTR)                            01S0170
         MVC   COMPCODE(2,@10),TCBCMPC+1(@04)                   01S0170
*        USERABND='1'B;                /* SET USER ABEND INDICATOR FOR
*                                         RECORD AND USER EXIT ACTRT */
         OI    USERABND(@10),B'10000000'                        01S0171
*      END;                                                     01S0172
*  END;                                                         01S0173
*ELSE                                  /* NOT ABEND, THEN    @YM05069*/
*  COMPCODE=TCBCMPC(2:3);              /* STEP RETURN CODE   @YM05069*/
         B     @RC00151                                         01S0174
@RF00151 L     @10,@PC00001+24                                  01S0174
         L     @04,LCTTCBAD(,LCTPTR)                            01S0174
         MVC   COMPCODE(2,@10),TCBCMPC+1(@04)                   01S0174
*TIVSTAT=COMPCODE;                     /* COMPLETION CODE TO RECORD  */
@RC00151 L     @10,@PC00001+24                                  01S0175
         MVC   TIVSTAT(2,RECORD),COMPCODE(@10)                  01S0175
*IF TERMTYPE='0C'X THEN                /* IS THIS A STEP TERMINATION?*/
         CLI   TERMTYPE(LCTPTR),X'0C'                           01S0176
         BNE   @RF00176                                         01S0176
*  DO;                                                          01S0177
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= STEPPROC                                            */
*/*DESCRIPTIVE NAME= STEP TERMINATION ONLY, CODE SEGMENT.            */
*/*FUNCTION=                                                         */
*/*        *THIS SEGMENT MOVES TO THE STEP TERMINATION RECORDS ALL   */
*/*         FIELDS THAT ARE UNIQUE TO THE STEP TERMINATION RECORDS.  */
*/*        *USING THE RECORD 34 MAPPING MACRO FIELD NAMES, THE DATA  */
*/*         COMMON TO BACKGROUND & FOREGROUND STEPS IS MOVED.        */
*/*        *THE JCT SMF CONTROL BYTE IS INTEROGATED TO DISTINGUISH   */
*/*         BETWEEN BACKGROUND AND FOREGROUND STEP TERMINATION. THE  */
*/*         FIELDS UNIQUE TO FOREGROUND STEPS ARE FILLED IN IF       */
*/*         JCTFORGD IS ON. THE UNIQUE BACKGROUND FIELDS ARE FILLED  */
*/*         IN IF JCTFORGD IS OFF AND THEN THE SIGNON/SIGNOFF        */
*/*         MESSAGE SEGMENTS ARE CALLED TO ISSUE THE START/STOP      */
*/*         MESSAGES TO SYSOUT.                                      */
*/*        *THE SYSEVENT  INTEFACE SEGMENT IS CALLED TO PROVIDE      */
*/*         PAGING STATISTICS FOR THE STEP'S TERMINATION RECORD.     */
*/*OPERATION= NO SPECIAL ALGORITHMS ARE EMPLOYED.                    */
*/*INPUT=                                                            */
*/*      ACTLEN   - LENGTH OF STEP ACCOUNT FIELDS AT STEP TERM.      */
*/*      SYSEVPRM - SYSEVENT STATISTIC AREA.                         */
*/*      VRECRDPT - ADDRESS OF RECORD'S VARIABLE SECTION.            */
*/*      CVT      - COMMUNICATION VECTOR TABLE               @YM07457*/
*/*      SCT      - STEP CONTROL TABLE.                              */
*/*      TCT      - TASK CONTROL TABLE.                              */
*/*      TCB      - TASK CONTROL BLOCK.                              */
*/*      JCT      - JOB CONTROL TABLE.                               */
*/*      LCT      - LINKAGE CONTROL TABLE.                           */
*/*      JMR      - JOB MANAGEMENT RECORD.                           */
*/*      ACT      - STEP ACCOUNT CONTROL TABLE AT STEPTERM.          */
*/*EXIT                                                              */
*/* CONDITION= PROCESSING FOR FIELDS UNIQUE TO STEP TERMINATION      */
*/*            RECORDS(4/34) COMPLETE.                               */
*/* OUTPUT= ALL FIELDS UNIQUE TO JOB TERMINATION RECORD FILLED IN.   */
*/*                                                                  */
*/********************************************************************/
*TIVSTART(1)=TIVSTART(1)&&TIVSTART(1);      /* CLEAR HI-ORDER BYTE   */
         XC    TIVSTART(1,RECORD),TIVSTART(RECORD)              02S0178
*TIVSTART(2:4)=JCTJMRSS;               /* STEP START TIME OF DAY     */
         L     @10,LCTJCTAD(,LCTPTR)                            02S0179
         MVC   TIVSTART+1(3,RECORD),JCTJMRSS(@10)               02S0179
*IF SMFDFPRY = '0'B THEN               /* NOT DEFALT PRIORITY@YM07457*/
         L     @10,LCTSCTAD(,LCTPTR)                            02S0180
         TM    SMFDFPRY(@10),B'00010000'                        02S0180
         BNZ   @RF00180                                         02S0180
*  TIVPRI=((SMFBYTE1 & HEXMASK)* 16)   /* CALC PRIMARY PRIOR @YM07457*/
*         +(SMFBYTE2 & HEXMASK);       /* PLUS SECOND PRIRTY @YM07457*/
         LA    @04,15                                           02S0181
         SLR   @15,@15                                          02S0181
         IC    @15,SMFBYTE1(,@10)                               02S0181
         NR    @15,@04                                          02S0181
         SLA   @15,4                                            02S0181
         SLR   @14,@14                                          02S0181
         IC    @14,SMFBYTE2(,@10)                               02S0181
         NR    @04,@14                                          02S0181
         ALR   @15,@04                                          02S0181
         STC   @15,TIVPRI(,RECORD)                              02S0181
*ELSE                                  /*                    @YM07457*/
*  TIVPRI = CVTAPG;                    /* PICK DEFALT PRIRTY @YM07457*/
         B     @RC00180                                         02S0182
@RF00180 L     @10,CVTPTR                                       02S0182
         IC    @04,CVTAPG(,@10)                                 02S0182
         STC   @04,TIVPRI(,RECORD)                              02S0182
*IF SCTGOSTP='0'B THEN                 /* WAS PGM=*.DD SPECIFIED?    */
@RC00180 L     @10,LCTSCTAD(,LCTPTR)                            02S0183
         TM    SCTGOSTP(@10),B'10000000'                        02S0183
         BNZ   @RF00183                                         02S0183
*  TIVPRGNM=SCTPGMNM;                  /* NO, GET STEPNAME FROM SCT. */
         MVC   TIVPRGNM(8,RECORD),SCTPGMNM(@10)                 02S0184
*ELSE                                  /* YES,GET DEFAULT-           */
*  TIVPRGNM=REFRBACK;                  /* PGM=*.DD WAS SPECIFIED ON
*                                         EXEC STATEMENT. INDICATE THIS
*                                         IN STEP TERMINATION RECORD */
         B     @RC00183                                         02S0185
@RF00183 MVC   TIVPRGNM(8,RECORD),REFRBACK                      02S0185
*TIVINVNM=SCTSNAME;                    /* STEPNAME FROM SCT          */
@RC00183 L     @10,LCTSCTAD(,LCTPTR)                            02S0186
         MVC   TIVINVNM(8,RECORD),SCTSNAME(@10)                 02S0186
*TIVPRV=0;                             /* REGION SIZE USED   @YM03798*/
         SLR   @10,@10                                          02S0187
         STH   @10,TIVPRV(,RECORD)                              02S0187
*TIVSYST=0;                            /* INITIALIZE PRIVATE AREA
*                                         USED FROM TOP      @YM03798*/
         STH   @10,TIVSYST(,RECORD)                             02S0188
*TIVSTU=0;                             /* INITIALIZE PRIVATE AREA
*                                         USED FROM BOTTOM   @YM03798*/
         STH   @10,TIVSTU(,RECORD)                              02S0189
*IF TCTHWM^=0 THEN                     /* WAS STEP FLUSHED?  @YM03798*/
         L     @04,LCTTCBAD(,LCTPTR)                            02S0190
         L     @04,TCBTCT(,@04)                                 02S0190
         L     @04,TCTCRTBL(,@04)                               02S0190
         L     @15,TCTHWM(,@04)                                 02S0190
         CR    @15,@10                                          02S0190
         BE    @RF00190                                         02S0190
*  DO;                                 /* NO, SET CORE USAGE @YM03798*/
*    TIVPRV=TCTRSZ*2;                  /* REGION SIZE UTILIZED       */
         LH    @10,TCTRSZ(,@04)                                 02S0192
         ALR   @10,@10                                          02S0192
         STH   @10,TIVPRV(,RECORD)                              02S0192
*    TIVSYST=((PASTRT+PASIZE)-(TCTHWM))/1024;/* PRIVATE AREA USED FROM
*                                         TOP OF REGION DOWNWARD (1K)*/
         LA    @10,1024                                         02S0193
         L     @01,CVTPTR                                       02S0193
         L     @14,CVTGDA(,@01)                                 02S0193
         L     @00,PASTRT(,@14)                                 02S0193
         AL    @00,PASIZE(,@14)                                 02S0193
         SLR   @00,@15                                          02S0193
         SRDA  @00,32                                           02S0193
         DR    @00,@10                                          02S0193
         STH   @01,TIVSYST(,RECORD)                             02S0193
*    TIVSTU=(TCTLWM-TCTRBA)/1024;      /* PRIVATE AREA SIZE USED(1K),
*                                         FROM LOWEST(TCTRBA) UPWARD */
         L     @00,TCTLWM(,@04)                                 02S0194
         SL    @00,TCTRBA(,@04)                                 02S0194
         SRDA  @00,32                                           02S0194
         DR    @00,@10                                          02S0194
         STH   @01,TIVSTU(,RECORD)                              02S0194
*  END;                                /*                    @YM03798*/
*TIVRVC=TIVRVC&&TIVRVC;                /* RESERVED AREA              */
@RF00190 XC    TIVRVC(6,RECORD),TIVRVC(RECORD)                  02S0196
*TIVSPK=TCBPKF;                        /* STORAGE PROTECT KEY        */
         L     @10,LCTTCBAD(,LCTPTR)                            02S0197
         IC    @04,TCBPKF(,@10)                                 02S0197
         STC   @04,TIVSPK(,RECORD)                              02S0197
*TIVSTI=JCTJMRCL;                      /* MOVE STEP TERM. INDICATORS */
         L     @04,LCTJCTAD(,LCTPTR)                            02S0198
         MVC   TIVSTI(1,RECORD),JCTJMRCL(@04)                   02S0198
*TIVSTI=TIVSTI & 'F8'X;                /* CLEAR ABEND AND FLUSH BITS */
         NI    TIVSTI(RECORD),X'F8'                             02S0199
*IF TCTHWM = 0 &                       /* THIS STEP FLUSHED? @ZA10839*/
*   TCBFA = '0'B THEN                  /* THIS STEP ABEND?   @ZA10839*/
         L     @04,TCBTCT(,@10)                                 02S0200
         L     @04,TCTCRTBL(,@04)                               02S0200
         L     @04,TCTHWM(,@04)                                 02S0200
         LTR   @04,@04                                          02S0200
         BNZ   @RF00200                                         02S0200
         TM    TCBFA(@10),B'10000000'                           02S0200
         BNZ   @RF00200                                         02S0200
* DO;                                  /*                    @ZA06206*/
*  TIVSTAT = '0000'X;                  /* CLEAR COMP. FIELD  @ZA06206*/
         MVC   TIVSTAT(2,RECORD),@CB02622                       02S0202
*  TIVSTI = TIVSTI × '01'X;            /* YES, SET FLUSH INDICATOR IN*/
         OI    TIVSTI(RECORD),X'01'                             02S0203
*                                      /* STEP TERM. INDICATOR BYTE  */
* END;                                 /*                    @ZA06206*/
*TCTHWM=0;                             /* RESET HIGH WATER MARK 02S0205
*                                                            @YM03798*/
@RF00200 L     @10,LCTTCBAD(,LCTPTR)                            02S0205
         L     @04,TCBTCT(,@10)                                 02S0205
         L     @04,TCTCRTBL(,@04)                               02S0205
         SLR   @15,@15                                          02S0205
         ST    @15,TCTHWM(,@04)                                 02S0205
*LCTTSTU3=LCTTSTU3&&LCTTSTU3;          /* CLEAR CPU TIME IN LCT TIMER
*                                         WORK AREA.                 */
         L     @04,LCTTSTU3-1(,LCTPTR)                          02S0206
         LA    @04,0(,@04)                                      02S0206
         LR    @15,@04                                          02S0206
         XR    @15,@04                                          02S0206
         STCM  @15,7,LCTTSTU3(LCTPTR)                           02S0206
*IF TCBFA='1'B THEN                    /* DID THIS STEP ABEND?       */
         TM    TCBFA(@10),B'10000000'                           02S0207
         BNO   @RF00207                                         02S0207
*   TIVSTI='02'X;                      /* SET ABEND INDICATOR.       */
         MVI   TIVSTI(RECORD),X'02'                             02S0208
*TIVRV1=TIVRV1&&TIVRV1;                /* CLEAR RESERVED FIELD       */
@RF00207 XC    TIVRV1(2,RECORD),TIVRV1(RECORD)                  02S0209
*TIVAST=TCTAST;                        /* ALLOCATION START TIME      */
         L     @10,LCTTCBAD(,LCTPTR)                            02S0210
         L     @10,TCBTCT(,@10)                                 02S0210
         MVC   TIVAST(4,RECORD),TCTAST(@10)                     02S0210
*TIVPPST=TCTPPST;                      /* PROBLEM PROGRAM START TIME */
         L     @04,TCTPPST(,@10)                                02S0211
         STCM  @04,15,TIVPPST(RECORD)                           02S0211
*TCTPPST=TCTPPST&&TCTPPST;             /* CLEAR P P START TIME  02S0212
*                                                            @ZA00808*/
         LR    @15,@04                                          02S0212
         XR    @15,@04                                          02S0212
         ST    @15,TCTPPST(,@10)                                02S0212
*TIVRV2=TIVRV2&&TIVRV2;                /* CLEAR RESERVED BYTE        */
         XC    TIVRV2(1,RECORD),TIVRV2(RECORD)                  02S0213
*TIVSRBT=SCTSRBT;                      /* SRB TIME TO RECORD.        */
         L     @10,LCTSCTAD(,LCTPTR)                            02S0214
         MVC   TIVSRBT(3,RECORD),SCTSRBT+1(@10)                 02S0214
*IF EAADDRBT = '1'B THEN               /* WAS ADDRSPC=REAL SPECIFIED?*/
         TM    EAADDRBT(@10),B'10000000'                        02S0215
         BNO   @RF00215                                         02S0215
*  TIVRIN = '0100'X;                   /* SET ADDRSPC=REAL INDICATOR */
         MVC   TIVRIN(2,RECORD),@CB02629                        02S0216
*ELSE                                                           02S0217
*  TIVRIN = '0000'X;                   /* SET ADDRSPC=VIRT INDICATOR */
         B     @RC00215                                         02S0217
@RF00215 MVC   TIVRIN(2,RECORD),@CB02622                        02S0217
*IF TCTIEX = '1'B THEN                 /* TCTIOT DEVICE ENTRIES 02S0218
*                                         COMPLETE           @YM02618*/
@RC00215 L     @10,LCTTCBAD(,LCTPTR)                            02S0218
         L     @10,TCBTCT(,@10)                                 02S0218
         TM    TCTIEX(@10),B'01000000'                          02S0218
         BNO   @RF00218                                         02S0218
*  TIVRIN=TIVRIN×'0200'X;              /* NO, SET INCOMPLETE DEVICE
*                                         ENTRIES INDICATOR  @YM02618*/
         OC    TIVRIN(2,RECORD),@CB02630                        02S0219
*TIVRLCT=RECORDLN - (LENGTH(TIVRLEN)+  /* CALCULATE THE OFFSET TO THE*/
*  LENGTH(TIVRSEG)+LENGTH(TIVRELS));                   /* RELOCATE
*                                         SECTION OF RECORD FROM
*                                    LOGICIAL RECORD START @Z40FPH2*/
@RF00218 L     @10,@PC00001+28                                  02S0220
         LH    @10,RECORDLN(,@10)                               02S0220
         SL    @10,@CF02669                                     02S0220
         STH   @10,TIVRLCT(,RECORD)                             02S0220
*TIVVAR=TCTIOTLN+LENGTH(TIVVAR);       /* SIZE OF DEVICE ENTRY SECTION
*                                         CALCULATED BY IEFTB721.    */
         L     @10,@PC00001+20                                  02S0221
         LA    @04,2                                            02S0221
         AH    @04,TCTIOTLN(,@10)                               02S0221
         STH   @04,TIVVAR(,RECORD)                              02S0221
*VRECRDPT=RECORD+LENGTH(SMFRCD34);     /* START OF STEP TERMINATION -
*                                         RECORD'S VARIABLE SECTIONS */
         LA    VRECRDPT,108                                     02S0222
         ALR   VRECRDPT,RECORD                                  02S0222
*/********************************************************************/
*/*SEGMENT NAME= DEVACT                                              */
*/*DESCRIPTIVE NAME= MOVE DEVICE & ACCOUNT INFORMATION SEGMENT.      */
*/*FUNCTION=                                                         */
*/*        *THIS SEGMENT MOVES THE STEP'S DEVICE INFORMATION TO      */
*/*         THE STEP TERMINATION RECORD IF A TCTIOT IS AVAILABLE     */
*/*         THE TCIOT CONTAINS THE NECESSARY UCB POINTERS AND THE    */
*/*         EXCP COUNT FOR EACH DEVICE. THE DEVICES UCB IS           */
*/*         INTEROGATED FOR THE DEVICE CLASS, UNIT TYPE, AND UNIT    */
*/*         ADDRESS. THIS DATA IS COMBINED TO FORM A DEVICE ENTRY IN */
*/*         THE STEP TERMINATION RECORD THAT HAS THE FOLLOWING FORMAT*/
*/*            BYTE1       = DEVICE CLASS FROM UCBTYP OF UCB.        */
*/*            BYTE2       = UNIT TYPE FROM UCBTYP OF UCB.           */
*/*            BYTE3-BYTE4 = CHANNEL 4 UNIT ADDRESS FROM UCBCHAN.    */
*/*            BYTE5-BYTE8 = EXCP COUNT FROM TCTDCTR OF TCTIOT.      */
*/*        *IF A VAM DATA SET IS ENCOUNTERED DEFAULTS ARE SET UP FOR */
*/*         DEVICE CLASS, UNIT TYPE, AND CHANNEL/UNIT ADDRESS.  THIS */
*/*         IS DONE TO PROCIDE EXCP COUNTS FOR VAM DATA SETS EVEN    */
*/*         THOUGH THE PHYSICAL ATTRIBUTES OF THE DATA SETS ARE      */
*/*         UNOBTAINABLE BY THIS ROUTINE.(THE DATA SET HAS ALREADY   */
*/*         BEEN SCRATCHED.)                                         */
*/*        *THIS SEGMENT MOVES THE STEP'S EXECUTION TIME AND ACCOUNT */
*/*         FIELDS TO THE STEP TERMINATION RECORD FROM STEP'S ACT.   */
*/*OPERATION= NO SPECIAL ALGORITHMS ARE EMPLOYED.                    */
*/*INPUT=                                                            */
*/*      TCTIOTBL - TCTIOT POINTER IN TCT.                           */
*/*      TCTCOMIO - OFFSET TO TCTIOT LOOK UP SECTION.                */
*/*      TCTIOTSD - OFFSET FROM TCTIOT START, TO TCTIOT DD ENTRY.    */
*/*      TCTSCTR  - NUMBER OF DEVICE IN DD ENTRY.                    */
*/*      TCTVAMDS - VAM DATA SET INDICATOR BIT IN TCTIOT.            */
*/*      TCTUCBP  - UCB POINTER FROM TCTIOT.                         */
*/*      UCBBYT3  _ DEVICE CLASS FROM UCB.                           */
*/*      UCBBYT1  - UNIT TYPE FROM UCB.                              */
*/*      UCBCHAN  - CHANNEL & UNIT ADDRESS FROM UCB.                 */
*/*      UCBRVDEV - VIRTUAL DEVICE INDICATOR                 @Y30LPPE*/
*/*      TCTDCTR  - EXCP COUNT FROM TCTIOT.                          */
*/*      ACTLEN   - LENGTH OF VALID ACCOUNT FIELDS IN ACT.           */
*/*      ACTPTR   - POINTER TO STEP ACT.                             */
*/*      ACTJTIME - STEP EXECUTION TIME.                             */
*/*      ACTJNFLD - NUMBER OF ACCOUNT FIELDS.                        */
*/*      ACTACCNT - ACCOUNT FIELDS.                                  */
*/*EXIT                                                              */
*/*  CONDITION= PROCESSING COMPLETE WITH OR WITHOUT TCTIOT AVAILABLE.*/
*/*  OUTPUT= STEP ACCOUNTING DATA MOVED FROM ACT TO STEP TERM RECORD.*/
*/*  CONDITION= PROCESSING COMPLETE WITH TCTIOT AVAILABLE.           */
*/*  OUTPUT= STEP TERMINATION RECORD'S DEVICE ENTRY SECTION HAS      */
*/*          BEEN BUILT.                                             */
*/*  RETURN CODE= N/A                                                */
*/*                                                                  */
*/********************************************************************/
*RFY TIVEXCP BASED(VRECRDPT);                                   03S0223
*IF TCTIOTBL ^= '00000000'X THEN       /* IS THERE A TCTIOT?         */
         L     @10,LCTTCBAD(,LCTPTR)                            03S0224
         L     @10,TCBTCT(,@10)                                 03S0224
         L     @10,TCTIOTBL(,@10)                               03S0224
         LTR   @10,@10                                          03S0224
         BZ    @RF00224                                         03S0224
*  DO;                                                          03S0225
*    LOOKUP=TCTIOTBL+LENGTH(TCTTIOT);  /* TCTIOT'S LOOKUP SECTION.   */
         AL    @10,@CF00069                                     03S0226
         LR    LOOKUP,@10                                       03S0226
*    RFY TCTIODSP BASED (LOOKUP);      /* LOOKUP SECT. ADDRESSABILTY */
*    DO WHILE TCTIOTSD ^= '00000000'X; /* LOOP UNTIL ALL ENTRIES HAVE
*                                         BEEN PROCESSED             */
         B     @DE00228                                         03S0228
@DL00228 DS    0H                                               03S0229
*      TCTIOTDD=ADDR(TCTTIOT)+TCTIOTSD;/* DD ENTRY POINTER - TCTIOT. */
         L     @10,LCTTCBAD(,LCTPTR)                            03S0229
         L     @10,TCBTCT(,@10)                                 03S0229
         LH    TCTIOTDD,TCTIOTSD(,LOOKUP)                       03S0229
         AL    TCTIOTDD,TCTIOTBL(,@10)                          03S0229
*      RFY TCTDDENT BASED(TCTIOTDD);   /* TCTIOT DEVICE ENTRY SECTION-
*                                         ADDRESSABILITY.            */
*      DO COUNT=TCTSCTR TO 1 BY -1;        /* CREATE A DEVICE ENTRY
*                                              IN STEP TERMINATION
*                                              RECORD FOR EACH DEVICE
*                                              ASSOCIATED WITH CURRENT
*                                              DD ENTRY.             */
         SLR   COUNT,COUNT                                      03S0231
         IC    COUNT,TCTSCTR(,TCTIOTDD)                         03S0231
         B     @DE00231                                         03S0231
@DL00231 DS    0H                                               03S0232
*        IF TCTUCBP='0000'X & TCTVAMDS='0'B THEN/*              03S0232
*                                                EXCP COUNTS VALID   */
         LH    @10,TCTUCBP(,TCTIOTDD)                           03S0232
         N     @10,@CF02677                                     03S0232
         LTR   @10,@10                                          03S0232
         BNZ   @RF00232                                         03S0232
         TM    TCTVAMDS(TCTIOTDD),B'01000000'                   03S0232
         BNZ   @RF00232                                         03S0232
*          TIVEXCP=TIVEXCP&&TIVEXCP;   /* DEVICE ENTRY IS ALL ZEROES */
         XC    TIVEXCP(8,VRECRDPT),TIVEXCP(VRECRDPT)            03S0233
*        ELSE                                                   03S0234
*          DO;                                                  03S0234
         B     @RC00232                                         03S0234
@RF00232 DS    0H                                               03S0235
*            IF TCTVAMDS='0'B THEN     /* IS THIS A VIO DATA SET?    */
         TM    TCTVAMDS(TCTIOTDD),B'01000000'                   03S0235
         BNZ   @RF00235                                         03S0235
*              DO;                                              03S0236
*                UCBPTR=TCTUCBP;       /* UCB POINTER FOR NON-VIO FROM
*                                         TCTIOT.                    */
         LH    UCBPTR,TCTUCBP(,TCTIOTDD)                        03S0237
         N     UCBPTR,@CF02677                                  03S0237
*                TIVDEVC=UCBTBYT3;     /* DEVICE CLASS FROM UCB      */
         MVC   TIVDEVC(1,VRECRDPT),UCBTBYT3(UCBPTR)             03S0238
*                TIVUTYP=UCBTBYT4;     /* UNIT TYPE FROM UCB         */
         MVC   TIVUTYP(1,VRECRDPT),UCBTBYT4(UCBPTR)             03S0239
*                TIVCUAD=UCBCHAN;      /* CHANNEL AND UNIT ADDRESS FROM
*                                          UCB LOCATED VIA TCTIOT.   */
         MVC   TIVCUAD(2,VRECRDPT),UCBCHAN(UCBPTR)              03S0240
*                TIVCUAD(1)=TIVCUAD(1)&'0F'X;     /* REMOVE UNWANTED
*                                         BITS FROM CHANNEL          */
         NI    TIVCUAD(VRECRDPT),X'0F'                          03S0241
*                IF UCBRVDEV='1'B &                             03S0242
*                   UCBTYP(3:4)=THRTY330 THEN /*IF DEVICE    @Y30LPPE*/
         TM    UCBRVDEV(UCBPTR),B'00001000'                     03S0242
         BNO   @RF00242                                         03S0242
         CLC   UCBTYP+2(2,UCBPTR),@CB00215                      03S0242
         BNE   @RF00242                                         03S0242
*                  DO;                 /*IS A VIRTUAL 3330,  @Y30LPPE*/
*                    TIVVDV='1'B;      /*TURN VIRTUAL BIT ON @Y30LPPE*/
         OI    TIVVDV(VRECRDPT),B'10000000'                     03S0244
*                  END;                /*IN DEVENTRY FLAGS.  @Y30LPPE*/
*              END;                                             03S0246
*            ELSE                                               03S0247
*              DO;                                              03S0247
         B     @RC00235                                         03S0247
@RF00235 DS    0H                                               03S0248
*                TIVDEVC='00000000'X;  /* VIO DEFAULT DEVICE CLASS=0*/
         MVI   TIVDEVC(VRECRDPT),X'00'                          03S0248
*                TIVUTYP='00000000'X;  /* VIO DEFAULT UNIT TYPE = 0  */
         MVI   TIVUTYP(VRECRDPT),X'00'                          03S0249
*                TIVCUAD='0FFF'X;      /* VIO DEFAULT ADDRESS = 0FFF */
         MVC   TIVCUAD(2,VRECRDPT),@CB02636                     03S0250
*              END;                                             03S0251
*            TIVNEXCP=TCTDCTR;         /* EXCP COUNT FROM TCTIOT     */
@RC00235 L     @10,TCTDCTR(,TCTIOTDD)                           03S0252
         ST    @10,TIVNEXCP(,VRECRDPT)                          03S0252
*          END;                                                 03S0253
*        VRECRDPT=VRECRDPT+LENGTH(TIVEXCP);/* ADDR NEXT RECORD ENTRY */
@RC00232 LA    @10,8                                            03S0254
         ALR   VRECRDPT,@10                                     03S0254
*        TCTIOTDD=TCTIOTDD+8;           /* NEXT DEVICE ENTRY    03S0255
*                                           FOR CURRENT DD IN TCTIOT.*/
         ALR   TCTIOTDD,@10                                     03S0255
*      END;                                                     03S0256
         BCTR  COUNT,0                                          03S0256
@DE00231 C     COUNT,@CF00059                                   03S0256
         BNL   @DL00231                                         03S0256
*      LOOKUP=LOOKUP+(LENGTH(TCTDCBTD)+/* POINT TO NEXT TCTIOT LOOKUP*/
*                     LENGTH(TCTIOTSD));/* SECTION ENTRY.            */
         AL    LOOKUP,@CF00053                                  03S0257
*    END;                                                       03S0258
@DE00228 LH    @10,TCTIOTSD(,LOOKUP)                            03S0258
         LTR   @10,@10                                          03S0258
         BNZ   @DL00228                                         03S0258
*  END;                                                         03S0259
*RFY TIVCPUA BASED(VRECRDPT);          /* CPU SECTION ADDRESSABILITY */
@RF00224 DS    0H                                               03S0261
*TIVVARA=ACTLEN-LENGTH(TIVVARA);       /* LENGTH OF STEP EXECUTION TIME
*                                         FIELD AND ACCOUNT FIELDS   */
         L     @10,@PC00001+16                                  03S0261
         SLR   @04,@04                                          03S0261
         IC    @04,ACTLEN(,@10)                                 03S0261
         LR    @10,@04                                          03S0261
         BCTR  @10,0                                            03S0261
         STC   @10,TIVVARA(,VRECRDPT)                           03S0261
*RFY IEFAACTB BASED(ACTPTR);           /* ACT ADDRESSABILITY         */
*TIVCPUTM=ACTJTIME;                    /* MOVE ALL PERTINENT ACT INFO.
*                                         FROM STEP ACT TO STEP TERM.
*                                         RECORD. THIS INFORMATION HAS
*                                         THE FOLLOWING FORMAT:      */
         L     @10,@PC00001                                     03S0263
         L     @10,ACTPTR(,@10)                                 03S0263
         MVC   TIVCPUTM(3,VRECRDPT),ACTJTIME(@10)               03S0263
*TIVNBRAC=ACTJNFLD;                    /* NUMBER OF ACCOUNT FIELDS   */
         IC    @15,ACTJNFLD(,@10)                               03S0264
         STC   @15,TIVNBRAC(,VRECRDPT)                          03S0264
*SIZE=ACTLEN-LENGTH(TIVCPUA);          /* LENGTH OF ACCOUNT FIELDS   */
         LA    @15,5                                            03S0265
         SLR   @04,@15                                          03S0265
         LR    SIZE,@04                                         03S0265
*IF SIZE > '00000000'X THEN            /* CHECK IF ANYTHING TO MOVE? */
         C     SIZE,@CF02632                                    03S0266
         BNH   @RF00266                                         03S0266
*  DO;                                                          03S0267
*    VRECRDPT=VRECRDPT+LENGTH(TIVCPUA);/* ACCOUNT FIELDS ADDRESS     */
         ALR   VRECRDPT,@15                                     03S0268
*    RFY TIVACFL1 BASED(VRECRDPT);                              03S0269
*    TIVACFL1(1:SIZE)=                 /* MOVE THE ACCOUNT SUB-FIELDS*/
*    ACTACCNT(1:SIZE);                 /* AS, PGRMR NAME & TIME ALREADY
*                                         HAVE BEEN MOVED, SEPARATELY*/
         LR    @04,SIZE                                         03S0270
         BCTR  @04,0                                            03S0270
         EX    @04,@SM02678                                     03S0270
*  END;                                                         03S0271
*VRECRDPT=RECORD+LENGTH(TIVRLEN)+      /* ESTABLISH ADDRESSABILITY TO*/
*         LENGTH(TIVRSEG)+TIVRLCT;     /* RELOCATE SECTION.          */
@RF00266 LA    VRECRDPT,4                                       02S0272
         ALR   VRECRDPT,RECORD                                  02S0272
         AH    VRECRDPT,TIVRLCT(,RECORD)                        02S0272
*CALL SYSSTAT;                         /* OBTAIN PAGING STATISTICS.  */
         BAL   @14,SYSSTAT                                      02S0273
*IF JCTFORGD='1'B THEN                 /* IS THIS A FOREGROUND TASK? */
         L     @10,LCTJCTAD(,LCTPTR)                            02S0274
         TM    JCTFORGD(@10),B'00000001'                        02S0274
         BNO   @RF00274                                         02S0274
*  DO;                                                          02S0275
*    TIVRCDTY=34;                      /* RECORD TYPE IS 34.         */
         MVI   TIVRCDTY(RECORD),X'22'                           02S0276
*    TIVOUTCT=TCTLOUT;                 /* LINE OUT COUNT - TPUT COUNT*/
         L     @10,LCTTCBAD(,LCTPTR)                            02S0277
         L     @10,TCBTCT(,@10)                                 02S0277
         MVC   TIVOUTCT(4,RECORD),TCTLOUT(@10)                  02S0277
*    TIVINCT=TCTLIN;                   /* LINE IN COUNT - TGET COUNT */
         MVC   TIVINCT(4,RECORD),TCTLIN(@10)                    02S0278
*  END;                                                         02S0279
*ELSE                                                           02S0280
*  DO;                                                          02S0280
         B     @RC00274                                         02S0280
@RF00274 DS    0H                                               02S0281
*    RFY SMFRCD04 BASED(RECORD);       /* ADDR UNIQUE RECORD 4 FIELDS*/
*    SMF4RTY=4;                        /* RECORD TYPE IS 4.          */
         MVI   SMF4RTY(RECORD),X'04'                            02S0282
*    SMF4STID(1)=SMF4STID&&SMF4STID;   /* CLEAR HIGH ORDER BYTE      */
         XC    SMF4STID(1,RECORD),SMF4STID(RECORD)              02S0283
*    SMF4STID(2:4)=JCTSSD;             /* STEP START DATE(FROM SMFIE)*/
         L     @10,LCTJCTAD(,LCTPTR)                            02S0284
         MVC   SMF4STID+1(3,RECORD),JCTSSD(@10)                 02S0284
*    SMF4NCI=SCTSMF;                   /* STEP SYSIN COUNT TO RECORD */
         L     @04,LCTSCTAD(,LCTPTR)                            02S0285
         MVC   SMF4NCI(4,RECORD),SCTSMF(@04)                    02S0285
*    IF JCTCKPTR='1'B × JCTSTEPR='1'B THEN/*                    02S0286
*                                         IS STEP TO BE RESTARTED    */
         TM    JCTCKPTR(@10),B'00001100'                        02S0286
         BZ    @RF00286                                         02S0286
*      SMF4STI = SMF4STI × '04'X;      /* INDICATES YES IN RECORD.   */
         OI    SMF4STI(RECORD),X'04'                            02S0287
*    CALL SIGNON;                      /* STEP START MSG TO SYSOUT   */
@RF00286 BAL   @14,SIGNON                                       02S0288
*    CALL SIGNOFF;                     /* STEP STOP MSG TO SYSOUT    */
         BAL   @14,SIGNOFF                                      02S0289
*  END;                                                         02S0290
*  END;                                                         01S0291
*ELSE                                                           01S0292
*  DO;                                                          01S0292
         B     @RC00176                                         01S0292
@RF00176 DS    0H                                               01S0293
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= JOBPROC                                             */
*/*DESCRIPTIVE NAME= JOB TERMINATION ONLY, CODE SEGMENT.             */
*/*FUNCTION=                                                         */
*/*        *THIS SEGMENT MOVES TO THE JOB TERMINATION RECORD ALL     */
*/*         FIELDS THAT ARE UNIQUE TO THE JOB TERMINATION RECORDS.   */
*/*        *USING THE RECORD 35 MAPPING MACRO FIELD NAMES. THE DATA  */
*/*         COMMON TO BACKGROUND & FOREGROUND JOBS IS MOVED.         */
*/*        *THE SYSEVENT  INTERFACE SEGMENT IS CALLED TO PROVIDE     */
*/*         SERVICE TIMES FOR THE TERMINATING JOB'S RECORD.          */
*/*        *THE JCT SMF CONTROL BYTE IS INTEROGATED TO DISTINGUISH   */
*/*         BETWEEN BACKGROUND AND FOREGROUND JOB TERMINATION. THE   */
*/*         FIELDS UNIQUE TO FOREGROUND JOBS ARE FILLED IN IF        */
*/*         JCTFORGD IS ON. THE UNIQUE BACKGROUND FIELDS ARE FILLED  */
*/*         IN IF JCTFORGD IS OFF AND THEN THE SIGNON/SIGNOFF        */
*/*         MESSAGE SEGMENTS ARE CALLED TO ISSUE THE START/STOP      */
*/*         MESSAGES TO SYSOUT.                                      */
*/*OPERATIONS= NO SPECIAL ALGORITHMS ARE EMPLOYED.                   */
*/*INPUT=                                                            */
*/*      ACTLEN   - LENGTH OF JOB ACCOUNT FIELDS AT JOBTERM.         */
*/*      JCT      - JOB CONTROL TABLE.                               */
*/*      JMR      - JOB MANAGEMENT RECORD.                           */
*/*      TCB      - P/P TASK CONTROL BLOCK.                          */
*/*      ACT      - JOB ACCOUNT CONTROL TABLE AT JOBTERM.            */
*/*      TCT      - TASK CONTROL TABLE.                              */
*/*EXIT                                                              */
*/* CONDITION= PROCESSING FOR FIELDS UNIQUE TO JOB TERMINATION       */
*/*             RECORD(5/35) COMPLETE.                               */
*/* OUTPUT= ALL FIELDS UNIQUE TO JOB TERMINATION RECORD FILLED IN.   */
*/*                                                                  */
*/********************************************************************/
*RFY SMFRCD35 BASED(RECORD);           /* JOB TERMINATION RECORD ADDR*/
*TLGPRI=JCTJBYTE;                      /* INPUT PRIORITY TO RECORD.  */
         L     @10,LCTJCTAD(,LCTPTR)                            02S0294
         SLR   @04,@04                                          02S0294
         IC    @04,JCTJBYTE(,@10)                               02S0294
         STC   @04,TLGPRI(,RECORD)                              02S0294
*TLGPRI=TLGPRI&'0F'X;                  /* LEAVE ONLY NUMERIC PORTION */
         N     @04,@CF00201                                     02S0295
         STC   @04,TLGPRI(,RECORD)                              02S0295
*ENQTIME=JMRDRSTP(1:4);                /* BACKGROUND- RDR STOP OR FOR*/
         MVC   ENQTIME(4,RECORD),JMRDRSTP(JMRPTR)               02S0296
*TLGNQDTE=JMRDRSTP(5:8);               /* FOREGROUND- LOGON ENQUEUE. */
         MVC   TLGNQDTE(4,RECORD),JMRDRSTP+4(JMRPTR)            02S0297
*TLGTRMI=JCTJMRCL;                     /* TERMINATION INDICATOR.     */
         MVC   TLGTRMI(1,RECORD),JCTJMRCL(@10)                  02S0298
*TLGOUTCL=TLGOUTCL&&TLGOUTCL;          /* CLEAR RESERVED AREA        */
         XC    TLGOUTCL(1,RECORD),TLGOUTCL(RECORD)              02S0299
*TLGSPK=TCBPKF;                        /* STORAGE PROTECT KEY        */
         L     @04,LCTTCBAD(,LCTPTR)                            02S0300
         IC    @15,TCBPKF(,@04)                                 02S0300
         STC   @15,TLGSPK(,RECORD)                              02S0300
*TLGSRBT=JCTSRBT;                      /* SRB TIME OF JOB TO RECORD  */
         MVC   TLGSRBT(3,RECORD),JCTSRBT+1(@10)                 02S0301
*TLGVAR=ACTLEN;                        /* LENGTH OF REMAINING FIELDS -
*                                         ALL OF WHICH ARE FROM ACT  */
         L     @10,@PC00001+16                                  02S0302
         SLR   @04,@04                                          02S0302
         IC    @04,ACTLEN(,@10)                                 02S0302
         STC   @04,TLGVAR(,RECORD)                              02S0302
*TLGCPUTM=ACTJTIME;                    /* TOTAL EXECUTION TIME.      */
         L     @10,@PC00001                                     02S0303
         L     @10,ACTPTR(,@10)                                 02S0303
         MVC   TLGCPUTM(3,RECORD),ACTJTIME(@10)                 02S0303
*TLGNBRAC=ACTJNFLD;                    /* NUMBER OF ACCOUNT FIELDS   */
         IC    @15,ACTJNFLD(,@10)                               02S0304
         STC   @15,TLGNBRAC(,RECORD)                            02S0304
*VRECRDPT=RECORD+LENGTH(SMFRCD35);     /* POINTER TO VARIABLE RECORD
*                                         SECTION                    */
         LA    VRECRDPT,121                                     02S0305
         ALR   VRECRDPT,RECORD                                  02S0305
*RFY TLGACFL1 BASED(VRECRDPT);                                  02S0306
*SIZE=ACTLEN-(LENGTH(TLGCPUTM)+LENGTH(TLGNBRAC)+LENGTH(TLGRVB));
         SL    @04,@CF00166                                     02S0307
         LR    SIZE,@04                                         02S0307
*                                      /* LENGTH OF ACCOUNT DATA LEFT*/
*IF SIZE > '00000000'X THEN            /* IS THERE ANYTHING TO MOVE? */
         C     SIZE,@CF02632                                    02S0308
         BNH   @RF00308                                         02S0308
*  TLGACFL1(1:SIZE)=ACTACCNT(1:SIZE);    /* MOVE ALL ACCOUNT FIELDS  */
         LR    @04,SIZE                                         02S0309
         BCTR  @04,0                                            02S0309
         EX    @04,@SM02680                                     02S0309
*CALL SYSSTAT;                         /* OBTAIN SYSEVENT TIMING DATA*/
@RF00308 BAL   @14,SYSSTAT                                      02S0310
*IF JCTFORGD='1'B THEN                 /* IS THIS A FOREGROUND TASK? */
         L     @10,LCTJCTAD(,LCTPTR)                            02S0311
         TM    JCTFORGD(@10),B'00000001'                        02S0311
         BNO   @RF00311                                         02S0311
*  DO;                                                          02S0312
*    RFY SMFRCD35 BASED(RECORD);                                02S0313
*    TLGRCDTY=35;                      /* FOREGROUND TASK TERMINATION
*                                         RECORD TYPE TO RECORD.     */
         MVI   TLGRCDTY(RECORD),X'23'                           02S0314
*    TLGCRTME=TLGCRTME&&TLGCRTME;      /* CLEAR RESERVED FIELD       */
         XC    TLGCRTME(4,RECORD),TLGCRTME(RECORD)              02S0315
*    TLGOUTCT=TCTLOUT;                 /* LINE OUT COUNT (TPUTS)     */
         L     @10,LCTTCBAD(,LCTPTR)                            02S0316
         L     @10,TCBTCT(,@10)                                 02S0316
         MVC   TLGOUTCT(4,RECORD),TCTLOUT(@10)                  02S0316
*    TLGINCT=TCTLIN;                   /* LINE IN COUNT (TGETS)      */
         MVC   TLGINCT(4,RECORD),TCTLIN(@10)                    02S0317
*    TLGRVC=TLGRVC&&TLGRVC;            /* CLEAR RESERVED FIELD       */
         XC    TLGRVC(4,RECORD),TLGRVC(RECORD)                  02S0318
*    TLGRV2=TLGRV2&&TLGRV2;            /* CLEAR RESERVED FIELD       */
         XC    TLGRV2(2,RECORD),TLGRV2(RECORD)                  02S0319
*    TLGRVB=TLGRVB&&TLGRVB;            /* CLEAR RESERVED FIELD       */
         XC    TLGRVB(20,RECORD),TLGRVB(RECORD)                 02S0320
*  END;                                                         02S0321
*ELSE                                                           02S0322
*  DO;                                                          02S0322
         B     @RC00311                                         02S0322
@RF00311 DS    0H                                               02S0323
*    RFY SMFRCD05 BASED(RECORD);                                02S0323
*    SMF5RTY=5;                        /* BACKGROUND JOB TASK TERMIN-
*                                         ATION RECORD TYPE =05.     */
         MVI   SMF5RTY(RECORD),X'05'                            02S0324
*    SMF5JIT1(1)=SMF5JIT1(1)&&SMF5JIT1(1);      /* CLEAR HIORDER BYTE*/
         XC    SMF5JIT1(1,RECORD),SMF5JIT1(RECORD)              02S0325
*    SMF5JIT1(2:4)=JCTJMRJT;           /* JOB INITIATION TIME        */
         L     @10,LCTJCTAD(,LCTPTR)                            02S0326
         MVC   SMF5JIT1+1(3,RECORD),JCTJMRJT(@10)               02S0326
*    SMF5JID(1)=SMF5JID(1)&&SMF5JID(1);      /* CLEAR HI-ORDER BYTE  */
         XC    SMF5JID(1,RECORD),SMF5JID(RECORD)                02S0327
*    SMF5JID(2:4)=JCTJMRJD;            /* JOB INITIATION DATE        */
         MVC   SMF5JID+1(3,RECORD),JCTJMRJD(@10)                02S0328
*    SMF5NCI=JMRJOBIN;                 /* JOB SYSIN COUNT            */
         MVC   SMF5NCI(4,RECORD),JMRJOBIN(JMRPTR)               02S0329
*    SMF5CKRE=SMF5CKRE&&SMF5CKRE;      /* CLEAR RESERVED FIELD       */
         XC    SMF5CKRE(1,RECORD),SMF5CKRE(RECORD)              02S0330
*    SMF5RDCL=JMRRDR(1);               /* RDR DEVICE CLASS           */
         MVC   SMF5RDCL(1,RECORD),JMRRDR(JMRPTR)                02S0331
*    SMF5RUTY=JMRRDR(2);               /* RDR UNIT TYPE              */
         MVC   SMF5RUTY(1,RECORD),JMRRDR+1(JMRPTR)              02S0332
*    SMF5JICL=JCTJCSMF;                /* JOB'S INPUT CLASS          */
         MVC   SMF5JICL(1,RECORD),JCTJCSMF(@10)                 02S0333
*    SMF5RV2=SMF5RV2&&SMF5RV2;         /* CLEAR RESERVED FIELD       */
         XC    SMF5RV2(4,RECORD),SMF5RV2(RECORD)                02S0334
*    SMF5RV3=SMF5RV3&&SMF5RV3;         /* CLEAR RESERVED FIELD       */
         XC    SMF5RV3(2,RECORD),SMF5RV3(RECORD)                02S0335
*    SMF5PRGN=ACTPRGNM;                /* PROGRAMMER NAME TO RECORD  */
         L     @10,@PC00001                                     02S0336
         L     @10,ACTPTR(,@10)                                 02S0336
         MVC   SMF5PRGN(20,RECORD),ACTPRGNM(@10)                02S0336
*    CALL SIGNON;                                               02S0337
         BAL   @14,SIGNON                                       02S0337
*    CALL SIGNOFF;                                              02S0338
         BAL   @14,SIGNOFF                                      02S0338
*  END;                                                         02S0339
*  END;                                                         01S0340
@RC00311 DS    0H                                               01S0341
* DO; /*MODESET  EXTKEY(SCHED)*/                                01S0341
@RC00176 DS    0H                                               01S0342
*   SPKA (16); /*SET PSW KEY*/                                  01S0342
         LA    @10,16                                           01S0342
         SPKA  0(@10)                                           01S0342
* END; /*MODESET  EXTKEY(SCHED)*/               /* RETURN TO KEY SCHED
*FTER                                              RUNNING KEY 0      @
*40FPPD*/                                                       01S0343
*SYSSTAT: PROC;                                                 02S0344
@EL00001 IC    @02,@OLDKEY                                      02S0344
         L     @13,4(,@13)                                      02S0344
@EF00001 L     @00,@SIZDATD                                     02S0344
         LR    @01,@11                                          02S0344
         FSPACE   R,LV=(0),A=(1)
         MODESET KEYADDR=(2)
@ER00001 LM    @14,@12,12(@13)                                  02S0344
         BR    @14                                              02S0344
SYSSTAT  STM   @14,@12,@SA00002                                 02S0344
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= SYSEVENT                                            */
*/*DESCRIPTIVE NAME= SYSEVENT INTERFACE SEGMENT.                     */
*/*FUNCTION=                                                         */
*/*        *THIS SEGMENT SETS UP THE INTERFACE TO THE SYSEVENT       */
*/*         SVC AND THEN ISSUES THE SYSEVENT SVC TO OBTAIN PAGING    */
*/*         STATISTICS FOR EACH TERMINATING STEP AND TO OBTAIN       */
*/*         TRANSACTION ACTIVE TIME FOR EACH TERMINATING             */
*/*         STEP AND JOB.                                    @YM07459*/
*/*        *THE SYSEVENT SVC IS NOT ISSUED FOR WARMSTARTED TASKS,    */
*/*         THEREFORE THE RECORD WILL CONTAIN ZEROES FOR WARMSTARTED */
*/*         TASKS.                                                   */
*/*        *THIS SEGMENT MOVES THE PAGING INFORMATION TO THE STEP    */
*/*         TERMINATION RECORD AS ALL THE INFORMATION IS COMMON TO   */
*/*         BACKGROUND AND FOREGROUND STEP TERMINATION RECORDS.      */
*/*        *THE JOB TERMINATION INFORMATION IS MOVED SELECTIVELY AS  */
*/*         ALL INFORMATION IS NOT COMMON TO BOTH FOREGROUND AND     */
*/*         BACKGROUND JOB TERMINATION RECORDS.                      */
*/*OPERATION= NO SPECIAL ALGORITHMS ARE EMPLOYED.                    */
*/*INPUT=                                                            */
*/*      JCTWARMS - WARMSTARTED TASK INDICATOR.                      */
*/*      SYSEVPRM - SYSEVENT PARAMETER AREA.                         */
*/*      TERMTYPE - LCT TERMINATION INDICATOR.                       */
*/*      RECORD   - ADDRESS OF RECORD AREA START/RECORD START        */
*/*      VRECRDPT - ADDRESS OF RECORD'S VARIABLE SECTION.            */
*/*EXIT                                                              */
*/*  CONDITION= PROCESSING COMPLETE.                                 */
*/*  OUTPUT=AT STEP TERMINATION IS:                                  */
*/*         PAGING STATISTICS IN STEP TERMINATION RECORD.            */
*/*         STEP TRANSACTION ACTIVE AND SERVICE TIME IN      @YM07659*/
*/*           RECORD.                                        @YM07659*/
*/*         NON-VAM AND VAM PAGE RECLAIMS IN RECORD          @Z40FPPF*/
*/*         STEP TRANSACTION RESIDENCY TIME IN RECORD        @Z40FPPF*/
*/*         NUMBER OF COMMON PAGE-INS IN RECORD              @Z40FPPF*/
*/*         NUMBER OF COMMON RECLAIMS IN RECORD              @Z40FPPF*/
*/*         NUMBER OF PAGES STOLEN IN RECORD                 @Z40FPPF*/
*/*         COUNT OF PAGE SECONDS IN RECORD                  @Z40FPPF*/
*/*                                                          @Z40FPPF*/
*/*         AT JOB TERMINATION IS:                                   */
*/*         TRANSACTION ACTIVE TIME MOVED TO RECORD.                 */
*/*         TOTAL TRANSACTION RESIDENCY TIME IN RECORD       @Z40FPPF*/
*/*  RETURN CODE= N/A                                                */
*/*                                                                  */
*/********************************************************************/
*RFY (REG0,REG1) RSTD;                                          02S0345
*IF TERMTYPE^='0C'X×FLUSH='0'B  THEN                            02S0346
         CLI   TERMTYPE(LCTPTR),X'0C'                           02S0346
         BNE   @RT00346                                         02S0346
         TM    FLUSH(RECORD),B'00000001'                        02S0346
         BNZ   @RF00346                                         02S0346
@RT00346 DS    0H                                               02S0347
*  DO;                   /*IF STEP FLUSHED, BYPASS SYSEVENT  @ZA27576*/
*REG1=LENGTH(SYSEVPRM);                /* SYSEVENT  PARM LIST LENGTH */
         LA    REG1,56                                          02S0348
*GEN (GETMAIN R,SP=253,LV=(REG1));     /* GET SYSEVENT  PARM AREA    */
         GETMAIN R,SP=253,LV=(REG1)
*SYSEVPTR=REG1;                        /* ADDRESS OF SYSEVENT  AREA  */
         LR    SYSEVPTR,REG1                                    02S0350
*SYSEVPRM=SYSEVPRM&&SYSEVPRM;          /* CLEAR SYSEVENT  PARAMETER
*                                         AREA                       */
         XC    SYSEVPRM(56,SYSEVPTR),SYSEVPRM(SYSEVPTR)         02S0351
*IF TERMTYPE='0C'X THEN                /* IS THIS STEP TERMINATION?  */
         CLI   TERMTYPE(LCTPTR),X'0C'                           02S0352
         BNE   @RF00352                                         02S0352
*  DO;                                                          02S0353
*    IF JCTWARMS='0'B THEN             /* IS THIS A WARM STARTED TASK*/
         L     @10,LCTJCTAD(,LCTPTR)                            02S0354
         TM    JCTWARMS(@10),B'10000000'                        02S0354
         BNZ   @RF00354                                         02S0354
*      GEN (SYSEVENT REQPGDAT);        /* OBTAIN PAGE INFO FROM SYSEV*/
         SYSEVENT REQPGDAT
*    RFY TIVRELS BASED(VRECRDPT);      /* ADDRESS OF RELOCATE SECTION*/
@RF00354 DS    0H                                               02S0357
*    TIVPGIN=PAGINCNT;                 /* NON-VAM PAGE IN COUNT      */
         MVC   TIVPGIN(4,VRECRDPT),PAGINCNT(SYSEVPTR)           02S0357
*    TIVPGOT=PAGOUTCT;                 /* NON-VAM PAGE OUT COUNT     */
         MVC   TIVPGOT(4,VRECRDPT),PAGOUTCT(SYSEVPTR)           02S0358
*    TIVNSW=SWPOUTCT;                  /* NUMBER OF SWAPS            */
         MVC   TIVNSW(4,VRECRDPT),SWPOUTCT(SYSEVPTR)            02S0359
*    TIVPSI=PGSWAPIN;                  /* SWAP IN COUNT              */
         MVC   TIVPSI(4,VRECRDPT),PGSWAPIN(SYSEVPTR)            02S0360
*    TIVPSO=PGSWPOUT;                  /* SWAP OUT COUNT             */
         MVC   TIVPSO(4,VRECRDPT),PGSWPOUT(SYSEVPTR)            02S0361
*    TIVVPI=VAMPAGIN;                  /* VAM PAGE IN COUNT          */
         MVC   TIVVPI(4,VRECRDPT),VAMPAGIN(SYSEVPTR)            02S0362
*    TIVVPO=VAMPGOUT;                  /* VAM PAGE OUT COUNT         */
         MVC   TIVVPO(4,VRECRDPT),VAMPGOUT(SYSEVPTR)            02S0363
*    TIVRECLM=RECLAIMS;                /* NON-VAM PAGE RECLAIMS 02S0364
*                                                            @Z40FPPF*/
         MVC   TIVRECLM(4,VRECRDPT),RECLAIMS(SYSEVPTR)          02S0364
*    TIVRCLAM=VAMRCLAM;                /* VAM PAGE RECLAIMS  @Z40FPPF*/
         MVC   TIVRCLAM(4,VRECRDPT),VAMRCLAM(SYSEVPTR)          02S0365
*    TIVCPGIN=CPAGEINS;                /* COMMON PAGE-IN COUNT  02S0366
*                                                            @Z40FPPF*/
         MVC   TIVCPGIN(4,VRECRDPT),CPAGEINS(SYSEVPTR)          02S0366
*    TIVCRECL=CRECLAIM;                /* COMMON RECLAIM COUNT  02S0367
*                                                            @Z40FPPF*/
         MVC   TIVCRECL(4,VRECRDPT),CRECLAIM(SYSEVPTR)          02S0367
*    TIVPGSTL=PAGESTOL;                /* NUMBER PAGE STOLEN FROM THIS
*                                         MEMORY             @Z40FPPF*/
         MVC   TIVPGSTL(4,VRECRDPT),PAGESTOL(SYSEVPTR)          02S0368
*    TIVPGSEC=PAGESECS;                /* COUNT OF PAGE SECONDS 02S0369
*                                                            @Z40FPPF*/
         MVC   TIVPGSEC(8,VRECRDPT),PAGESECS(SYSEVPTR)          02S0369
*    SYSEVPRM = SYSEVPRM && SYSEVPRM;  /* CLEAR SYSEVENT PARM AREA
*                                                            @YM07459*/
         XC    SYSEVPRM(56,SYSEVPTR),SYSEVPRM(SYSEVPTR)         02S0370
*    IF JCTWARMS = '0'B  THEN          /* NOT WARMSTARTED TASK  02S0371
*                                                            @YM07459*/
         L     @10,LCTJCTAD(,LCTPTR)                            02S0371
         TM    JCTWARMS(@10),B'10000000'                        02S0371
         BNZ   @RF00371                                         02S0371
*      GEN(SYSEVENT REQSVDAT);         /* ISSUE SYSEVENT     @YM43092*/
         SYSEVENT REQSVDAT
*    TIVSST=JOBSRVCE-TCTAJS;           /* STEP SERVICE TIME  @YM07459*/
@RF00371 L     @10,JOBSRVCE(,SYSEVPTR)                          02S0373
         L     @04,LCTTCBAD(,LCTPTR)                            02S0373
         L     @04,TCBTCT(,@04)                                 02S0373
         LR    @03,@10                                          02S0373
         SL    @03,TCTAJS(,@04)                                 02S0373
         STCM  @03,15,TIVSST(VRECRDPT)                          02S0373
*    TCTAJS=JOBSRVCE;                  /* ACCUMULATED SERVICE TIME
*                                                            @YM07459*/
         ST    @10,TCTAJS(,@04)                                 02S0374
*    TIVTAT=TRANSACT-TCTACT;           /* STEP TRANSACTION ACTIVE TIME
*                                                            @YM07459*/
         L     @10,TRANSACT(,SYSEVPTR)                          02S0375
         LR    @03,@10                                          02S0375
         SL    @03,TCTACT(,@04)                                 02S0375
         STCM  @03,15,TIVTAT(VRECRDPT)                          02S0375
*    TCTACT=TRANSACT;                  /* ACCUMULATED TRANSACTION ACTIV
*                                         TIME               @YM07459*/
         ST    @10,TCTACT(,@04)                                 02S0376
*    TIVPGNO=PERFRMGP;                 /* STEP PERFORMANCE GROUP
*                                         NUMBER             @YM07459*/
         MVC   TIVPGNO(2,VRECRDPT),PERFRMGP(SYSEVPTR)           02S0377
*    TIVTRANT=TRANRTIM - TCTATR;       /* STEP TRANSACTION RESIDENCY
*                                         TIME               @Z40FPPF*/
         L     @10,TRANRTIM(,SYSEVPTR)                          02S0378
         LR    @03,@10                                          02S0378
         SL    @03,TCTATR(,@04)                                 02S0378
         STCM  @03,15,TIVTRANT(VRECRDPT)                        02S0378
*    TCTATR=TRANRTIM;                  /* ACCUMULATED TRANSACTION
*                                         RESIDENCY TIME     @Z40FPPF*/
         ST    @10,TCTATR(,@04)                                 02S0379
*  END;                                                         02S0380
*ELSE                                  /* JOB TERMINATION.           */
*  DO;                                                          02S0381
         B     @RC00352                                         02S0381
@RF00352 DS    0H                                               02S0382
*    IF JCTWARMS='0'B THEN                                      02S0382
         L     @10,LCTJCTAD(,LCTPTR)                            02S0382
         TM    JCTWARMS(@10),B'10000000'                        02S0382
         BNZ   @RF00382                                         02S0382
*      GEN (SYSEVENT REQSVDAT);        /* GET TRANSACTION ACTIVE TIME
*                                                            @YM43092*/
         SYSEVENT REQSVDAT
*      RFY SMFRCD35 BASED(RECORD);                              02S0384
@RF00382 DS    0H                                               02S0385
*      TLGTJS=JOBSRVCE;                /* TOTAL SESSION SERVICE TIME */
         L     @10,JOBSRVCE(,SYSEVPTR)                          02S0385
         ST    @10,TLGTJS(,RECORD)                              02S0385
*      TLGTTAT=TRANSACT;               /* TOTAL ACTIVE TIME          */
         L     @10,TRANSACT(,SYSEVPTR)                          02S0386
         ST    @10,TLGTTAT(,RECORD)                             02S0386
*      TLGPGNO=PERFRMGP;               /* PERFORMANCE GROUP NUMBER   */
         LH    @10,PERFRMGP(,SYSEVPTR)                          02S0387
         STH   @10,TLGPGNO(,RECORD)                             02S0387
*      TLGTRANT=TRANRTIM;              /* TOTAL TRANSACTION     02S0388
*                                         RESIDENCY TIME     @Z40FPPF*/
         L     @10,TRANRTIM(,SYSEVPTR)                          02S0388
         ST    @10,TLGTRANT(,RECORD)                            02S0388
*      IF JCTFORGD='1'B THEN           /* IS THIS A FOREGROUND TASK? */
         L     @10,LCTJCTAD(,LCTPTR)                            02S0389
         TM    JCTFORGD(@10),B'00000001'                        02S0389
         BNO   @RF00389                                         02S0389
*        DO;                                                    02S0390
*          TLGNTSN=TLGNTSN&&TLGNTSN;   /* TOTAL TRANSACTION NUMBER   */
         L     @10,TLGNTSN(,RECORD)                             02S0391
         LR    @04,@10                                          02S0391
         XR    @04,@10                                          02S0391
         ST    @04,TLGNTSN(,RECORD)                             02S0391
*          TLGNTSN=FORETRAN;           /* NUMBER OF TRANSACTIONS     */
         LH    @10,FORETRAN(,SYSEVPTR)                          02S0392
         ST    @10,TLGNTSN(,RECORD)                             02S0392
*        END;                                                   02S0393
*  END;                                                         02S0394
@RF00389 DS    0H                                               02S0395
*RFY REG2 RSTD;                                                 02S0395
@RC00352 DS    0H                                               02S0396
*REG2=LENGTH(SYSEVPRM);                /* LENGTH OF AREA TO FREE     */
         LA    REG2,56                                          02S0396
*REG1=SYSEVPTR;                        /* ADDRESS OF AREA TO FREE    */
         LR    REG1,SYSEVPTR                                    02S0397
*GEN (FREEMAIN R,SP=253,LV=(REG2),A=(REG1));   /* FREE SYSEVENT PARM */
         FREEMAIN R,SP=253,LV=(REG2),A=(REG1)
*RFY (REG0,REG1,REG2) UNRSTD;                                   02S0399
*END;                                    /*                  @ZA27576*/
*RETURN;                                                        02S0401
@EL00002 DS    0H                                               02S0401
@EF00002 DS    0H                                               02S0401
@ER00002 LM    @14,@12,@SA00002                                 02S0401
         BR    @14                                              02S0401
*END SYSSTAT;                                                   02S0402
         B     @EL00002                                         02S0402
*SIGNON: PROC;                                                  02S0403
SIGNON   STM   @14,@12,@SA00003                                 02S0403
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= SIGNON                                              */
*/*DESCRIPTIVE NAME= SIGNON MESSAGE SEGMENT                          */
*/*FUNCTION=                                                         */
*/*        *THIS SEGMENT COPIES THE JOB OR STEP SIGNON MESSAGE       */
*/*         (IEF373I OR IEF375I) FROM IEFTB720 TO CORE GOTTEN FOR    */
*/*         THIS MODULE. THE VARIABLE FIELDS ARE THEN FILLED IN      */
*/*         (START DATE, START TIME, JOB OR STEP NAME).              */
*/*        *THE SIGNON MESSAGE IS THEN WRITTEN TO THE SYSOUT DATA SET*/
*/*         VIA WTP.                                                 */
*/*OPERATION= NO SPECIAL ALGORITHMS ARE EMPLOYED.                    */
*/*INPUT=                                                            */
*/*      TERMTYPE - LCT TERMINATION INDICATOR.                       */
*/*      STEPSTRT - STEP START MESSAGE(IEF373I).                     */
*/*      SCTSNAME - STEP NAME.                                       */
*/*      JCTJMRSD - STEP START DATE.                                 */
*/*      JCTJMRSS - STEP START TIME.                                 */
*/*      JOBSTRT  - JOB START MESSAGE(IEF375I).                      */
*/*      JCTJMRJD - JOB START DATE.                                  */
*/*      JCTJMRJT - JOB START TIME.                                  */
*/*EXIT                                                              */
*/*  CONDITION= PROCESSING COMPLETE FOR STEP TERMINATION.            */
*/*  OUTPUT=                                                         */
*/*         IEF373I STEP /XXXXXXXX/ START YYDDD.HHMM                 */
*/*  CONDITION= PROCESSING COMPLETE FOR JOB TERMINATION.             */
*/*  OUTPUT=                                                         */
*/*         IEF375I  JOB /XXXXXXXX/ START YYDDD.HHMM                 */
*/*  RETURN CODE= N/A.                                               */
*/*                                                                  */
*/********************************************************************/
*IF TERMTYPE='0C'X THEN                /* IS THIS STEP TERMINATION?  */
         CLI   TERMTYPE(LCTPTR),X'0C'                           02S0404
         BNE   @RF00404                                         02S0404
*  DO;                                                          02S0405
*    MSGAREA(1:L373I+4)=STEPSTRT;      /* STEP START MSG TO OUTPUT
*                                         MESSAGE BUFFER.            */
         L     @10,@CV00091                                     02S0406
         LA    @15,3                                            02S0406
         AH    @15,L373I(,@10)                                  02S0406
         L     @10,@CV00091                                     02S0406
         EX    @15,@SM02682                                     02S0406
*    NAME=SCTSNAME;                    /* STEPNAME TO MSG. FROM SCT. */
         LA    @10,MSGAREA                                      02S0407
         L     @01,LCTSCTAD(,LCTPTR)                            02S0407
         MVC   NAME(8,@10),SCTSNAME(@01)                        02S0407
*    DATEVALU=JCTSSD;                  /* STEP START DATE            */
         L     @10,LCTJCTAD(,LCTPTR)                            02S0408
         L     @15,JCTSSD-1(,@10)                               02S0408
         LA    @15,0(,@15)                                      02S0408
         ST    @15,DATEVALU                                     02S0408
*    HOURVALU=JCTJMRSS;                /* STEP START TIME            */
         MVC   HOURVALU(3),JCTJMRSS(@10)                        02S0409
*  END;                                                         02S0410
*ELSE                                                           02S0411
*  DO;                                                          02S0411
         B     @RC00404                                         02S0411
@RF00404 DS    0H                                               02S0412
*    MSGAREA(1:L375I+4)=JOBSTRT;       /* JOB START MSG TO OUTPUT BUF*/
         L     @10,@CV00093                                     02S0412
         LA    @15,3                                            02S0412
         AH    @15,L375I(,@10)                                  02S0412
         L     @10,@CV00093                                     02S0412
         EX    @15,@SM02684                                     02S0412
*    NAME=JMRJOB;                      /* JOBNAME TO MSG FROM JMR.   */
         LA    @10,MSGAREA                                      02S0413
         MVC   NAME(8,@10),JMRJOB(JMRPTR)                       02S0413
*    DATEVALU=JCTJMRJD;                /* JOB START DATE             */
         L     @10,LCTJCTAD(,LCTPTR)                            02S0414
         L     @15,JCTJMRJD-1(,@10)                             02S0414
         LA    @15,0(,@15)                                      02S0414
         ST    @15,DATEVALU                                     02S0414
*    HOURVALU=JCTJMRJT;                /* JOB START TIME             */
         MVC   HOURVALU(3),JCTJMRJT(@10)                        02S0415
*  END;                                                         02S0416
*DATEVAL(3)=DATEVAL(3)×'0F'X;          /* SIGN VALUE TO DECIMAL DIGIT*/
@RC00404 OI    DATEVAL+2,X'0F'                                  02S0417
*UNPK(DATE,DATEVAL);                   /* START DATE TO MESSAGE      */
         LA    @10,MSGAREA                                      02S0418
         UNPK  DATE(5,@10),DATEVAL(3)                           02S0418
*WORK=HOURVAL/HOUR;                    /* START HOUR CALCULATED      */
         SLR   @15,@15                                          02S0419
         ICM   @15,7,HOURVAL                                    02S0419
         L     @14,HOUR                                         02S0419
         LR    @01,@15                                          02S0419
         SLR   @00,@00                                          02S0419
         DR    @00,@14                                          02S0419
         ST    @01,WORK                                         02S0419
*WORKA=HOURVAL//HOUR;                  /* START 'MINUTES' IS REMAIN. */
         LR    @02,@15                                          02S0420
         SRDA  @02,32                                           02S0420
         DR    @02,@14                                          02S0420
         ST    @02,WORKA                                        02S0420
*CVD(WORK,DBLWORK);                    /* CONVERT HOUR TO DECIMAL    */
         CVD   @01,DBLWORK                                      02S0421
*SIGN=SIGN×'0F'X;                      /* SIGN VALUE TO DECIMAL DIGIT*/
         OI    SIGN,X'0F'                                       02S0422
*UNPK(HOURON,DBLWORK);                 /* START HOUR VALUE TO MSG.   */
         UNPK  HOURON(2,@10),DBLWORK(8)                         02S0423
*WORK=WORKA/MINCONVT;                  /* START MINUTE VALUE CALC.   */
         SRDA  @02,32                                           02S0424
         D     @02,MINCONVT                                     02S0424
         ST    @03,WORK                                         02S0424
*CVD(WORK,DBLWORK);                    /* CONVERT MINUTES TO DECIMAL */
         CVD   @03,DBLWORK                                      02S0425
*SIGN=SIGN×'0F'X;                      /* SIGN VALUE TO DECIMAL DIGIT*/
         OI    SIGN,X'0F'                                       02S0426
*UNPK(MINON,DBLWORK);                  /* START MINUTE VALUE TO MSG. */
         UNPK  MINON(2,@10),DBLWORK(8)                          02S0427
*CALL IEEAB400(ADDR(MSGAREA),LCTJSCB); /* BUFFER WTP MESSAGE @YM04713*/
         ST    @10,@TF00001                                     02S0428
         LA    @10,@TF00001                                     02S0428
         ST    @10,@AL00001                                     02S0428
         LA    @10,LCTJSCB(,LCTPTR)                             02S0428
         ST    @10,@AL00001+4                                   02S0428
         L     @15,@CV00095                                     02S0428
         LA    @01,@AL00001                                     02S0428
         BALR  @14,@15                                          02S0428
*RETURN;                                                        02S0429
@EL00003 DS    0H                                               02S0429
@EF00003 DS    0H                                               02S0429
@ER00003 LM    @14,@12,@SA00003                                 02S0429
         BR    @14                                              02S0429
*END SIGNON;                                                    02S0430
*SIGNOFF: PROC;                                                 02S0431
SIGNOFF  STM   @14,@12,@SA00004                                 02S0431
*/********************************************************************/
*/*                                                                  */
*/*SEGMENT NAME= SIGNOFF                                             */
*/*DESCRIPTIVE NAME= SIGNOFF MESSAGE SEGMENT                         */
*/*FUNCTION=                                                         */
*/*        * THIS SEGMENT COPIES THE JOB OR STEP SIGNOFF MESSAGE     */
*/*         (IEF374I OR IEF376I) FROM IEFTB720 TO CORE GOTTEN FOR    */
*/*         THIS MODULE. THE VARIABLE FIELDS ARE THEN FILLED IN      */
*/*         (JOB OR STEP NAME, STOP DATE, STOP TIME, EXECUTION TIME, */
*/*         REAL OR VIRTUAL CORE VALUES).                            */
*/*        *THE SIGNOFF MESSAGE IS THEN WRITTEN TO THE SYSOUT DATA   */
*/*         SET VIA WTP.                                             */
*/*OPERATION= NO SPECIAL ALGORITHMS ARE EMPLOYED.                    */
*/*INPUT=                                                            */
*/*      TERMTYPE - LCT TERMINATION INDICATOR.                       */
*/*      TIVSTU   - CORE USED IN LOW PORTION OF PRIVATE AREA.        */
*/*      TIVSYST  - CORE USED IN HIGH PORTION OF PRIVATE AREA.       */
*/*      STEPSTOP - STEP STOP MESSAGE(IEF3741).                      */
*/*      JOBSTOP  - JOB STOP MESSAGE(IEF376I).                       */
*/*      TIVRCDTE - STOP DATE.                                       */
*/*      TIVRCDTS - STOP TIME.                                       */
*/*      ACTJTIME - EXECUTION TIME.                                  */
*/*  CONDITION= PROCESSING COMPLETE FOR STEP TERMINATION.            */
*/*  OUTPUT=                                                         */
*/*         IEF374I STEP /XXXXXXXX/ STOP  YYDDD.HHMM CPU XXXX MIN    */
*/*                 XX.XX SEC SRB XXXX MIN XX.XX SEC REAL/VIRT       */
*/*                 XXXXXK SYS XXXXXK                        @Z40FPH2*/
*/*  CONDITION= PROCESSING COMPLETE FOR JOB TERMINATION.             */
*/*  OUTPUT=                                                         */
*/*          IEF376I JOB  /XXXXXXXX/ STOP  YYDD.HHMM CPU XXXX MIN    */
*/*                 XX.XX SEC SRB XXXX MIN XX.XX SEC         @Z40FPH2*/
*/*  RETURN CODE= N/A                                                */
*/********************************************************************/
*RFY SMFRCD34 BASED(RECORD);                                    02S0432
*IF TERMTYPE='0C'X THEN                /* IS THIS STEP TERMINATION?  */
         CLI   TERMTYPE(LCTPTR),X'0C'                           02S0433
         BNE   @RF00433                                         02S0433
*  DO;                                                          02S0434
*    MSGAREA(1:L374I+4)=STEPSTOP;      /* STEP STOP MSG TO OUTPUT
*                                         MESSAGE BUFFER.            */
         L     @10,@CV00092                                     02S0435
         LA    @07,3                                            02S0435
         AH    @07,L374I(,@10)                                  02S0435
         L     @10,@CV00092                                     02S0435
         EX    @07,@SM02686                                     02S0435
*    NAME=SCTSNAME;                    /* STEPNAME TO MSG FROM SCT.  */
         LA    @10,MSGAREA                                      02S0436
         L     @07,LCTSCTAD(,LCTPTR)                            02S0436
         MVC   NAME(8,@10),SCTSNAME(@07)                        02S0436
*    SAVESRBT=SCTSRBT;                 /* SAVE SRB TIME      @Z40FPH2*/
         L     SAVESRBT,SCTSRBT(,@07)                           02S0437
*    IF EAADDRBT='0'B THEN             /* VIRT OR REAL STORAGE USED? */
         TM    EAADDRBT(@07),B'10000000'                        02S0438
         BNZ   @RF00438                                         02S0438
*      REALVIRT=VIRT;                  /* VIRTUAL STORAGE TEXT TO MSG*/
         MVC   REALVIRT(4,@10),VIRT                             02S0439
*    CVD(TIVSTU,DBLWORK);              /* CONVERT LOW CORE TO DECIMAL*/
@RF00438 LH    @10,TIVSTU(,RECORD)                              02S0440
         CVD   @10,DBLWORK                                      02S0440
*    SIGN=SIGN×'0F'X;                  /* SIGN VALUE TO DECIMAL DIGIT*/
         OI    SIGN,X'0F'                                       02S0441
*    UNPK(LOWCOR,DBLWORK);             /* AMOUNT OF CORE USED IN LOW */
         LA    @10,MSGAREA                                      02S0442
         UNPK  LOWCOR(5,@10),DBLWORK(8)                         02S0442
*                                      /* PORTION OF PRIVATE AREA.   */
*    DO COUNT=1 TO 4 WHILE             /* CHANGE LEADING ZEROES TO - */
*      LOWCOR(COUNT) = 'F0'X;          /* BLANKS FOR MSG. READABILITY*/
         LA    COUNT,1                                          02S0443
@DL00443 LA    @10,MSGAREA                                      02S0443
         LR    @07,@10                                          02S0443
         ALR   @07,COUNT                                        02S0443
         CLI   LOWCOR-1(@07),X'F0'                              02S0443
         BNE   @DC00443                                         02S0443
*      LOWCOR(COUNT) = '40'X;          /* BLANK TO MESSAGE.          */
         ALR   @10,COUNT                                        02S0444
         MVI   LOWCOR-1(@10),X'40'                              02S0444
*    END;                                                       02S0445
         AL    COUNT,@CF00059                                   02S0445
         C     COUNT,@CF00053                                   02S0445
         BNH   @DL00443                                         02S0445
@DC00443 DS    0H                                               02S0446
*    CVD(TIVSYST,DBLWORK);             /* CONVERT TOP CORE TO DECIMAL*/
         LH    @10,TIVSYST(,RECORD)                             02S0446
         CVD   @10,DBLWORK                                      02S0446
*    SIGN=SIGN×'0F'X;                  /* SIGN VALUE TO DECIMAL DIGIT*/
         OI    SIGN,X'0F'                                       02S0447
*    UNPK(HICORE,DBLWORK);             /* AMOUNT OF CORE USED IN HIGH*/
         LA    @10,MSGAREA                                      02S0448
         UNPK  HICORE(5,@10),DBLWORK(8)                         02S0448
*                                      /* PORTION OF PRIVATE AREA    */
*    DO COUNT=1 TO 4 WHILE             /* CHANGE LEADING ZEROES TO - */
*      HICORE(COUNT) = 'F0'X;          /* BLANKS FROM MSG.READABILITY*/
         LA    COUNT,1                                          02S0449
@DL00449 LA    @10,MSGAREA                                      02S0449
         LR    @07,@10                                          02S0449
         ALR   @07,COUNT                                        02S0449
         CLI   HICORE-1(@07),X'F0'                              02S0449
         BNE   @DC00449                                         02S0449
*      HICORE(COUNT) = '40'X;          /* BLANK TO MESSAGE.          */
         ALR   @10,COUNT                                        02S0450
         MVI   HICORE-1(@10),X'40'                              02S0450
*    END;                                                       02S0451
         AL    COUNT,@CF00059                                   02S0451
         C     COUNT,@CF00053                                   02S0451
         BNH   @DL00449                                         02S0451
@DC00449 DS    0H                                               02S0452
*  END;                                                         02S0452
*ELSE                                                           02S0453
*  DO;                                                          02S0453
         B     @RC00433                                         02S0453
@RF00433 DS    0H                                               02S0454
*    MSGAREA(1:L376I+4)=JOBSTOP;       /* JOB STOP MSG TO OUTPUT BUF.*/
         L     @10,@CV00094                                     02S0454
         LA    @15,3                                            02S0454
         AH    @15,L376I(,@10)                                  02S0454
         L     @10,@CV00094                                     02S0454
         EX    @15,@SM02688                                     02S0454
*    NAME=JMRJOB;                      /* JOB NAME TO MSG FROM JMR.  */
         LA    @10,MSGAREA                                      02S0455
         MVC   NAME(8,@10),JMRJOB(JMRPTR)                       02S0455
*    SAVESRBT=JCTSRBT;                 /* SAVE SRB TIME      @Z40FPH2*/
         L     @10,LCTJCTAD(,LCTPTR)                            02S0456
         L     SAVESRBT,JCTSRBT(,@10)                           02S0456
*  END;                                                         02S0457
*DATEVALU=TIVRCDTE(2:4);               /* JOB OR STEP STOP DATE.     */
@RC00433 SLR   @10,@10                                          02S0458
         ICM   @10,7,TIVRCDTE+1(RECORD)                         02S0458
         ST    @10,DATEVALU                                     02S0458
*HOURVALU=TIVRCDTS;                    /* JOB OR STEP STOP TIME.     */
         MVC   HOURVALU(3),TIVRCDTS+1(RECORD)                   02S0459
*UNPK(DATE,DATEVAL);                   /* STOP DATE TO MESSAGE.      */
         LA    @10,MSGAREA                                      02S0460
         UNPK  DATE(5,@10),DATEVAL(3)                           02S0460
*WORK=HOURVAL/HOUR;                    /* STOP HOUR CALCULATED.      */
         SLR   @07,@07                                          02S0461
         ICM   @07,7,HOURVAL                                    02S0461
         L     @05,HOUR                                         02S0461
         LR    @01,@07                                          02S0461
         SLR   @00,@00                                          02S0461
         DR    @00,@05                                          02S0461
         ST    @01,WORK                                         02S0461
*WORKA=HOURVAL//HOUR;                  /* STOP 'MINUTES' IS REMAINDER*/
         LR    @08,@07                                          02S0462
         SRDA  @08,32                                           02S0462
         DR    @08,@05                                          02S0462
         ST    @08,WORKA                                        02S0462
*CVD(WORK,DBLWORK);                    /* CONVERT STOP HOURS TO DEC. */
         CVD   @01,DBLWORK                                      02S0463
*SIGN=SIGN×'0F'X;                      /* SIGN VALUE TO DECIMAL DIGIT*/
         OI    SIGN,X'0F'                                       02S0464
*UNPK(HOURON,DBLWORK);                 /* STOP HOUR TO MESSAGE       */
         UNPK  HOURON(2,@10),DBLWORK(8)                         02S0465
*WORK=WORKA/MINCONVT;                  /* STOP MINUTE VALUE CALCULATE*/
         L     @07,MINCONVT                                     02S0466
         SRDA  @08,32                                           02S0466
         DR    @08,@07                                          02S0466
         ST    @09,WORK                                         02S0466
*CVD(WORK,DBLWORK);                    /* CONVERT MINUTES TO DECIMAL.*/
         CVD   @09,DBLWORK                                      02S0467
*SIGN=SIGN×'0F'X;                      /* SIGN VALUE TO DECIMAL DIGIT*/
         OI    SIGN,X'0F'                                       02S0468
*UNPK(MINON,DBLWORK);                  /* STOP MINUTE VALUE TO MSG.  */
         UNPK  MINON(2,@10),DBLWORK(8)                          02S0469
*RFY IEFAACTB BASED(ACTPTR);                                    02S0470
*WORK=ACTJTIME/MINCONVT;               /* EXECUTION MINUTES CALCULATE*/
         L     @05,@PC00001                                     02S0471
         L     @05,ACTPTR(,@05)                                 02S0471
         SLR   @03,@03                                          02S0471
         ICM   @03,7,ACTJTIME(@05)                              02S0471
         LR    @01,@03                                          02S0471
         SLR   @00,@00                                          02S0471
         DR    @00,@07                                          02S0471
         ST    @01,WORK                                         02S0471
*WORKA=ACTJTIME//MINCONVT;             /* EXECUTION 'SECONDS' REMAIN.*/
         LR    @00,@03                                          02S0472
         SRDA  @00,32                                           02S0472
         DR    @00,@07                                          02S0472
         ST    @00,WORKA                                        02S0472
*EXTPTR=ADDR(TIMECPU);                 /* SET UP RECORD NAMES FOR
*                                         TIME CPU           @Z40FPH2*/
         LA    EXTPTR,TIMECPU(,@10)                             02S0473
*DO I=1 TO 2;                          /* DO FOR CPU TIME AND   02S0474
*                                         SRB TIME           @Z40FPH2*/
         LA    I,1                                              02S0474
@DL00474 DS    0H                                               02S0475
*CVD(WORK,DBLWORK);                    /* EXEC MINUTES TO DECIMAL.   */
         L     @10,WORK                                         02S0475
         CVD   @10,DBLWORK                                      02S0475
*SIGN=SIGN×'0F'X;                      /* SIGN VALUE TO DECIMAL DIGIT*/
         OI    SIGN,X'0F'                                       02S0476
*UNPK(MINUTE,DBLWORK);                 /* EXECUTION MINUTES TO MSG.  */
         UNPK  MINUTE(4,EXTPTR),DBLWORK(8)                      02S0477
*DO COUNT=1 TO 3 WHILE                 /* CHANGE LEADING ZEROES TO - */
*  MINUTE(COUNT) = 'F0'X;              /* BLANKS FOR MSG. READABILITY*/
         LA    COUNT,1                                          02S0478
@DL00478 LR    @10,EXTPTR                                       02S0478
         ALR   @10,COUNT                                        02S0478
         CLI   MINUTE-1(@10),X'F0'                              02S0478
         BNE   @DC00478                                         02S0478
*  MINUTE(COUNT) = '40'X;              /* BLANK TO MESSAGE.          */
         LR    @10,EXTPTR                                       02S0479
         ALR   @10,COUNT                                        02S0479
         MVI   MINUTE-1(@10),X'40'                              02S0479
*END;                                                           02S0480
         AL    COUNT,@CF00059                                   02S0480
         C     COUNT,@CF00100                                   02S0480
         BNH   @DL00478                                         02S0480
@DC00478 DS    0H                                               02S0481
*WORK=WORKA/HUNDREDS;                  /* NUMBER OF EXECUTED SECONDS.*/
         L     @10,WORKA                                        02S0481
         L     @07,HUNDREDS                                     02S0481
         LR    @00,@10                                          02S0481
         SRDA  @00,32                                           02S0481
         DR    @00,@07                                          02S0481
         ST    @01,WORK                                         02S0481
*WORKA=WORKA//HUNDREDS;                /* AND HUNDREDS OF SECONDS.   */
         LR    @08,@10                                          02S0482
         SRDA  @08,32                                           02S0482
         DR    @08,@07                                          02S0482
         ST    @08,WORKA                                        02S0482
*CVD(WORK,DBLWORK);                    /* CONVERT SECONDS TO DECIMAL */
         CVD   @01,DBLWORK                                      02S0483
*SIGN=SIGN×'0F'X;                      /* SIGN VALUE TO DECIMAL DIGIT*/
         OI    SIGN,X'0F'                                       02S0484
*UNPK(SECNDS,DBLWORK);                 /* SECONDS OF EXEC TIME TO MSG*/
         UNPK  SECNDS(2,EXTPTR),DBLWORK(8)                      02S0485
*CVD(WORKA,DBLWORK);                   /* CONVERT HUNDS. SECS TO DEC.*/
         CVD   @08,DBLWORK                                      02S0486
*SIGN=SIGN×'0F'X;                      /* SIGN VALUE TO DECIMAL DIGIT*/
         OI    SIGN,X'0F'                                       02S0487
*UNPK(HUNSEC,DBLWORK);                 /* HUNDREDS SECONDS EXEC TIME.*/
         UNPK  HUNSEC(2,EXTPTR),DBLWORK(8)                      02S0488
*IF I=1 THEN                           /* IF FIRST TIME THRU @Z40FPH2*/
         C     I,@CF00059                                       02S0489
         BNE   @RF00489                                         02S0489
*  DO;                                 /* SET UP FOR SRB TIME@Z40FPH2*/
*    WORK=SAVESRBT/MINCONVT;           /* CALC MINUTES UNDER SRB
*                                                            @Z40FPH2*/
         L     @10,MINCONVT                                     02S0491
         LR    @00,SAVESRBT                                     02S0491
         SRDA  @00,32                                           02S0491
         DR    @00,@10                                          02S0491
         ST    @01,WORK                                         02S0491
*    WORKA=SAVESRBT//MINCONVT;         /* REMAINDER=SECS UNDER SRB
*                                                            @Z40FPH2*/
         LR    @00,SAVESRBT                                     02S0492
         SRDA  @00,32                                           02S0492
         DR    @00,@10                                          02S0492
         ST    @00,WORKA                                        02S0492
*    EXTPTR=ADDR(TIMESRB);             /* NAMES OVER SRB TIME@Z40FPH2*/
         LA    EXTPTR,MSGAREA                                   02S0493
         LA    EXTPTR,TIMESRB(,EXTPTR)                          02S0493
*  END;                                /* END SRB TIME SETUP @Z40FPH2*/
*END;                                  /* END TIME CONVERSION   02S0495
*                                                            @Z40FPH2*/
@RF00489 AL    I,@CF00059                                       02S0495
         C     I,@CF00057                                       02S0495
         BNH   @DL00474                                         02S0495
*CALL IEEAB400(ADDR(MSGAREA),LCTJSCB); /* BUFFER WTP MESSAGE @YM04713*/
         LA    @10,MSGAREA                                      02S0496
         ST    @10,@TF00001                                     02S0496
         LA    @10,@TF00001                                     02S0496
         ST    @10,@AL00001                                     02S0496
         LA    @10,LCTJSCB(,LCTPTR)                             02S0496
         ST    @10,@AL00001+4                                   02S0496
         L     @15,@CV00095                                     02S0496
         LA    @01,@AL00001                                     02S0496
         BALR  @14,@15                                          02S0496
*RETURN;                                                        02S0497
@EL00004 DS    0H                                               02S0497
@EF00004 DS    0H                                               02S0497
@ER00004 LM    @14,@12,@SA00004                                 02S0497
         BR    @14                                              02S0497
*END SIGNOFF;                                                   02S0498
*END IEFTB722                         /* RETURN TO IEFTB721 - THE
*                                        RECORD HAS BEEN CONSTRUCTED */
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (TB722SPC)                                        *
*/*%INCLUDE SYSLIB  (TB722DCL)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEFALLCT)                                        *
*/*%INCLUDE SYSLIB  (IEFAJCTB)                                        *
*/*%INCLUDE SYSLIB  (IEFASCTB)                                        *
*/*%INCLUDE SYSLIB  (IEFJMR  )                                        *
*/*%INCLUDE SYSLIB  (IEFTCT  )                                        *
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        *
*/*%INCLUDE SYSLIB  (IHAGDA  )                                        *
*/*%INCLUDE SYSLIB  (IKJTCB  )                                        *
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        *
*/*%INCLUDE SYSLIB  (IFASMFR )                                        *
*/*%INCLUDE SYSLIB  (IFASMFR1)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR2)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR3)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR4)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR5)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR6)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR7)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR8)                                        *
*/*%INCLUDE SYSLIB  (IFASMFR9)                                        *
*/*%INCLUDE SYSLIB  (IFASMFRA)                                        *
*/*%INCLUDE SYSLIB  (IFASMFRB)                                        *
*/*%INCLUDE SYSLIB  (IFASMFRC)                                        *
*/*%INCLUDE SYSLIB  (IFASMFRD)                                        *
*/*%INCLUDE SYSLIB  (STEPPROC)                                        *
*/*%INCLUDE SYSLIB  (STEPSPEC)                                        *
*/*%INCLUDE SYSLIB  (DEVACT  )                                        *
*/*%INCLUDE SYSLIB  (DVACTSPC)                                        *
*/*%INCLUDE SYSLIB  (JOBPROC )                                        *
*/*%INCLUDE SYSLIB  (JOBSPEC )                                        *
*/*%INCLUDE SYSLIB  (SYSEVENT)                                        *
*/*%INCLUDE SYSLIB  (SYSEVSPC)                                        *
*/*%INCLUDE SYSLIB  (SIGNON  )                                        *
*/*%INCLUDE SYSLIB  (SIGNONSP)                                        *
*/*%INCLUDE SYSLIB  (SIGNOFF )                                        *
*/*%INCLUDE SYSLIB  (SIGNOFFS)                                        *
*;                                                              01S0499
@DATA    DS    0H
@SX02674 XC    SMFRCD34(0,@10),SMFRCD34(@10)
@SM02678 MVC   TIVACFL1(0,VRECRDPT),ACTACCNT(@10)
@SM02680 MVC   TLGACFL1(0,VRECRDPT),ACTACCNT(@10)
@SM02682 MVC   MSGAREA(0),STEPSTRT(@10)
@SM02684 MVC   MSGAREA(0),JOBSTRT(@10)
@SM02686 MVC   MSGAREA(0),STEPSTOP(@10)
@SM02688 MVC   MSGAREA(0),JOBSTOP(@10)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    8F
@SA00002 DS    15F
@SA00004 DS    0F
@SA00003 DS    0F
         DS    15F
@AL00001 DS    2A
@TF00001 DS    F
IEFTB722 CSECT
         DS    0F
@CF00059 DC    F'1'
@CF00057 DC    F'2'
@CF00100 DC    F'3'
@CF00053 DC    F'4'
@CF00069 DC    F'8'
@CF00166 DC    F'24'
@CF02669 DC    F'74'
@CF00857 DC    F'256'
@CF02632 DC    XL4'00000000'
@CF02677 DC    XL4'0000FFFF'
@CF00201 DC    XL4'0F'
@DATD    DSECT
         DS    0D
WORK     DS    FL4
         ORG   WORK
@NM00026 DS    FL1
WORK1    DS    FL3
         ORG   WORK+4
WORKA    DS    FL4
         ORG   WORKA
@NM00027 DS    FL1
WORK2    DS    FL3
         ORG   WORKA+4
DATEVALU DS    FL4
         ORG   DATEVALU
@NM00029 DS    FL1
DATEVAL  DS    CL3
         ORG   DATEVALU+4
DEVPTR   DS    A
TIOTPTR  DS    A
         DS    CL4
MSGAREA  DS    CL113
         DS    CL7
DBLWORK  DS    CL8
         ORG   DBLWORK
@NM00028 DS    CL7
SIGN     DS    CL1
         ORG   DBLWORK+8
HOURVALU DS    CL3
         ORG   HOURVALU
HOURVAL  DS    FL3
         ORG   HOURVALU+3
@OLDKEY  DS    AL1
IEFTB722 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00091 DC    V(IEF373I)
@CV00092 DC    V(IEF374I)
@CV00093 DC    V(IEF375I)
@CV00094 DC    V(IEF376I)
@CV00095 DC    V(IEEAB400)
         DS    0D
HOUR     DC    F'360000'
MINCONVT DC    F'6000'
HUNDREDS DC    F'100'
@CB00215 DC    X'2009'
@CB02622 DC    X'0000'
@CB02629 DC    X'0100'
@CB02630 DC    X'0200'
@CB02636 DC    X'0FFF'
REFRBACK DC    CL8'PGM=*.DD'
VIRT     DC    CL4'VIRT'
IEFTB722 CSECT
         DS   0H
PATCHES DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFTB722 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
START    EQU   @03
VRECRDPT EQU   @02
UCBPTR   EQU   @09
TCTIOTDD EQU   @04
RECORD   EQU   @05
LOOKUP   EQU   @08
LCTPTR   EQU   @06
JMRPTR   EQU   @07
REMSIZE  EQU   @02
SIZE     EQU   @03
I        EQU   @05
COUNT    EQU   @03
SAVESRBT EQU   @04
SYSEVPTR EQU   @07
EXTPTR   EQU   @02
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
CVTPTR   EQU   16
EXTIME   EQU   0
MINUTE   EQU   EXTIME+4
SECNDS   EQU   EXTIME+12
HUNSEC   EQU   EXTIME+15
MSGMAP   EQU   0
NAME     EQU   MSGMAP+18
DATE     EQU   MSGMAP+34
HOURON   EQU   MSGMAP+40
MINON    EQU   MSGMAP+42
TIMECPU  EQU   MSGMAP+45
TIMESRB  EQU   MSGMAP+66
REALVIRT EQU   MSGMAP+87
LOWCOR   EQU   MSGMAP+92
HICORE   EQU   MSGMAP+103
STEPSTRT EQU   0
L373I    EQU   STEPSTRT
STEPSTOP EQU   0
L374I    EQU   STEPSTOP
JOBSTRT  EQU   0
L375I    EQU   JOBSTRT
JOBSTOP  EQU   0
L376I    EQU   JOBSTOP
SYSEVPRM EQU   0
PAGINCNT EQU   SYSEVPRM
JOBSRVCE EQU   PAGINCNT
PAGOUTCT EQU   SYSEVPRM+4
TRANSACT EQU   PAGOUTCT
RECLAIMS EQU   SYSEVPRM+8
PERFRMGP EQU   RECLAIMS
FORETRAN EQU   RECLAIMS+2
VAMPAGIN EQU   SYSEVPRM+12
TRANRTIM EQU   VAMPAGIN
VAMPGOUT EQU   SYSEVPRM+16
VAMRCLAM EQU   SYSEVPRM+20
PGSWAPIN EQU   SYSEVPRM+24
PGSWPOUT EQU   SYSEVPRM+28
SWPOUTCT EQU   SYSEVPRM+32
CPAGEINS EQU   SYSEVPRM+36
CRECLAIM EQU   SYSEVPRM+40
PAGESTOL EQU   SYSEVPRM+44
PAGESECS EQU   SYSEVPRM+48
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
LCT      EQU   0
LCTQDRTY EQU   LCT
LCTSRTAD EQU   LCT+4
LCTTCBAD EQU   LCT+8
LCTQENTY EQU   LCT+12
@NM00038 EQU   LCTQENTY
LCTJCTAD EQU   LCT+16
LCTSCTAD EQU   LCT+20
LCTSCTDA EQU   LCT+24
LCTWORKA EQU   LCTSCTDA
LCTPSPAR EQU   LCT+28
LCTERROR EQU   LCT+32
LCTERR   EQU   LCTERROR
LCTPARM1 EQU   LCT+36
LCTCMCBA EQU   LCT+52
LCTNSPAD EQU   LCT+56
LCTJFCBH EQU   LCT+57
LCTSNUMB EQU   LCT+58
LCTSMBAD EQU   LCT+60
LCTCOMCD EQU   LCT+68
LCTRTRN  EQU   LCT+72
LCTSREG  EQU   LCTRTRN
@NM00065 EQU   LCT+76
LCTINTSW EQU   @NM00065
LCTPUBYT EQU   @NM00065+1
LCTTMWRK EQU   LCT+80
LCTTJTU4 EQU   LCTTMWRK
LCTTSTL4 EQU   LCTTMWRK+4
LCTTSTR4 EQU   LCTTMWRK+8
LCTSMF   EQU   LCTTSTR4
LCTTMBYT EQU   LCTSMF
LCTTSTU4 EQU   LCTTMWRK+12
LCTTSTU3 EQU   LCTTSTU4+1
LCTJOBLB EQU   LCT+96
LCTATLST EQU   LCT+100
LCTECBAD EQU   LCT+328
ECBLIST  EQU   LCTECBAD
LCTIDENT EQU   LCT+332
LCTSPIL  EQU   LCTIDENT+4
LCTALCFG EQU   LCTSPIL+2
LCTTSRB4 EQU   LCT+348
LCTENTR  EQU   LCT+352
LCTEXIT  EQU   LCTENTR
LCTOPSW1 EQU   LCTEXIT
@NM00095 EQU   LCT+356
LCTOPSW2 EQU   @NM00095
LCTJSCB  EQU   LCT+360
LCTOPSW3 EQU   LCTJSCB
LCTJCTDA EQU   LCT+408
LCTSTATA EQU   LCT+416
LCTSTATB EQU   LCT+417
LCTRFB   EQU   LCT+418
@NM00107 EQU   LCT+420
LCTINTS2 EQU   @NM00107+1
INJMJCT  EQU   0
JCTJSTAT EQU   INJMJCT+5
INDMCTLG EQU   JCTJSTAT
JCTJBYTE EQU   INJMJCT+7
JCTJMGLV EQU   JCTJBYTE
JCTJCSMF EQU   INJMJCT+31
JCTCCODE EQU   INJMJCT+54
JCTRSW1  EQU   INJMJCT+86
JCTWARMS EQU   JCTRSW1
JCTCKPTR EQU   JCTRSW1
JCTSTEPR EQU   JCTRSW1
JCTRSW2  EQU   INJMJCT+87
JCTJSB   EQU   INJMJCT+111
JCTSTAT2 EQU   INJMJCT+116
JCTJMROP EQU   INJMJCT+138
JCTJMRCL EQU   INJMJCT+139
JCTJMRSS EQU   INJMJCT+143
JCTJMRJT EQU   INJMJCT+146
JCTJMRJD EQU   INJMJCT+149
JCTSRBT  EQU   INJMJCT+152
JCTSSD   EQU   INJMJCT+157
IEFAACTB EQU   0
ACTPRGNM EQU   IEFAACTB+8
ACTJTIME EQU   IEFAACTB+28
ACTJNFLD EQU   IEFAACTB+31
ACTACCNT EQU   IEFAACTB+32
INSMSCT  EQU   0
SCTSSTAT EQU   INSMSCT+4
EAADDRBT EQU   SCTSSTAT
SCTSNAME EQU   INSMSCT+52
SCTSTYPE EQU   INSMSCT+67
SCTGOSTP EQU   SCTSTYPE
SCTSRBT  EQU   INSMSCT+76
SCTSDPTY EQU   INSMSCT+94
SCTSMF   EQU   INSMSCT+96
SCTSTAT2 EQU   INSMSCT+104
SCTBCT   EQU   SCTSTAT2
SCTPGMNM EQU   INSMSCT+108
SCTCDENT EQU   INSMSCT+118
SCTSTEND EQU   INSMSCT+172
@NM00149 EQU   0
SCTABCND EQU   @NM00149
JMR      EQU   0
JMRJOB   EQU   JMR
JMRENTRY EQU   JMR+8
JMREDATE EQU   JMR+12
JMRCPUID EQU   JMR+16
JMRUSEID EQU   JMR+20
JMRFLG   EQU   JMR+30
JMRDRSTP EQU   JMR+40
JMRJOBIN EQU   JMR+48
JMRRDR   EQU   JMR+52
JMROPT   EQU   JMR+54
SMFTCT   EQU   0
TCTSW    EQU   SMFTCT+3
TCTIEX   EQU   TCTSW
TCTCRTBL EQU   SMFTCT+8
TCTIOTBL EQU   SMFTCT+12
TCTPOOL  EQU   SMFTCT+16
TCTJSTX  EQU   SMFTCT+36
TCTTJLM  EQU   SMFTCT+40
TCTLIN   EQU   SMFTCT+48
TCTLOUT  EQU   SMFTCT+52
TCTAST   EQU   SMFTCT+56
TCTPPST  EQU   SMFTCT+60
TCTPGSMF EQU   SMFTCT+64
TCTPGIN  EQU   TCTPGSMF
TCTAJS   EQU   TCTPGIN
TCTPGOUT EQU   TCTPGSMF+4
TCTACT   EQU   TCTPGOUT
TCTRGNS  EQU   TCTPGSMF+8
TCTATR   EQU   TCTRGNS
TCTCORE  EQU   0
TCTLWM   EQU   TCTCORE
TCTHWM   EQU   TCTCORE+4
TCTRSZ   EQU   TCTCORE+10
TCTRBA   EQU   TCTCORE+12
TCTTIOT  EQU   0
TCTPLEXT EQU   TCTTIOT
TCTIODSP EQU   0
TCTDCBTD EQU   TCTIODSP
TCTIOTSD EQU   TCTIODSP+2
TCTDDENT EQU   0
TCTUCBP  EQU   TCTDDENT
TCTSCTR  EQU   TCTDDENT+2
TCTFLGS  EQU   TCTDDENT+3
TCTVAMDS EQU   TCTFLGS
TCTDCTR  EQU   TCTDDENT+4
UCB      EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCBRVDEV EQU   UCBRWTAU
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00162 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
GDA      EQU   0
GVSMFLAG EQU   GDA
GDAFLAGS EQU   GVSMFLAG
PASTRT   EQU   GDA+16
PASIZE   EQU   GDA+20
VRPOSTQ  EQU   GDA+32
VRWAITQ  EQU   GDA+40
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBCMPC  EQU   TCBCMP+1
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFA    EQU   TCBFLGS1
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBSTAWA EQU   TCB+252
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
SMFRCD04 EQU   0
SMF4RTY  EQU   SMFRCD04+5
SMF4STID EQU   SMFRCD04+47
SMF4NCI  EQU   SMFRCD04+51
SMF4PRV  EQU   SMFRCD04+74
SMF4STU  EQU   SMFRCD04+78
SMF4STI  EQU   SMFRCD04+87
SMF4RIN  EQU   SMFRCD04+102
SMF4EXPS EQU   0
SMF4CUT  EQU   SMF4EXPS
SMF4CUAD EQU   SMF4EXPS+2
SMF4CPUA EQU   0
SMF4ACTF EQU   0
SMF4RELS EQU   0
SMF4NSW  EQU   SMF4RELS+8
SMF4PSI  EQU   SMF4RELS+12
SMF4PSO  EQU   SMF4RELS+16
SMFRCD05 EQU   0
SMF5RTY  EQU   SMFRCD05+5
SMF5JIT  EQU   SMFRCD05+43
SMF5JID  EQU   SMFRCD05+47
SMF5NCI  EQU   SMFRCD05+51
SMF5CKRE EQU   SMFRCD05+72
SMF5RDCL EQU   SMFRCD05+73
SMF5RUTY EQU   SMFRCD05+74
SMF5JICL EQU   SMFRCD05+75
SMF5RV2  EQU   SMFRCD05+88
SMF5RV3  EQU   SMFRCD05+94
SMF5PRGN EQU   SMFRCD05+97
SMF5JSAF EQU   0
SMFRCD34 EQU   0
TIVRLEN  EQU   SMFRCD34
TIVRSEG  EQU   SMFRCD34+2
TIVRFLG  EQU   SMFRCD34+4
TIVRCDTY EQU   SMFRCD34+5
TIVRCDTS EQU   SMFRCD34+6
TIVRCDTE EQU   SMFRCD34+10
TIVCPUID EQU   SMFRCD34+14
TIVUIF   EQU   SMFRCD34+18
TIVONTME EQU   SMFRCD34+26
TIVONDTE EQU   SMFRCD34+30
TIVUDATA EQU   SMFRCD34+34
TIVINVSQ EQU   SMFRCD34+42
TIVSIT   EQU   SMFRCD34+43
TIVCRTME EQU   TIVSIT
TIVOUTCT EQU   SMFRCD34+47
TIVINCT  EQU   SMFRCD34+51
TIVSTAT  EQU   SMFRCD34+55
TIVPRI   EQU   SMFRCD34+57
TIVPRGNM EQU   SMFRCD34+58
TIVINVNM EQU   SMFRCD34+66
TIVPRV   EQU   SMFRCD34+74
TIVSYST  EQU   SMFRCD34+76
TIVSTU   EQU   SMFRCD34+78
TIVRVC   EQU   SMFRCD34+80
TIVSPK   EQU   SMFRCD34+86
TIVSTI   EQU   SMFRCD34+87
TIVRV1   EQU   SMFRCD34+88
TIVAST   EQU   SMFRCD34+90
TIVPPST  EQU   SMFRCD34+94
TIVRV2   EQU   SMFRCD34+98
TIVSRBT  EQU   SMFRCD34+99
TIVRIN   EQU   SMFRCD34+102
TIVRLCT  EQU   SMFRCD34+104
TIVVAR   EQU   SMFRCD34+106
TIVEXCP  EQU   0
TIVCUT   EQU   TIVEXCP
TIVDEVC  EQU   TIVCUT
TIVUTYP  EQU   TIVCUT+1
TIVCUAD  EQU   TIVEXCP+2
TIVVDV   EQU   TIVCUAD
TIVNEXCP EQU   TIVEXCP+4
TIVCPUA  EQU   0
TIVVARA  EQU   TIVCPUA
TIVCPUTM EQU   TIVCPUA+1
TIVNBRAC EQU   TIVCPUA+4
TIVACFL1 EQU   0
TIVRELS  EQU   0
TIVPGIN  EQU   TIVRELS
TIVPGOT  EQU   TIVRELS+4
TIVNSW   EQU   TIVRELS+8
TIVPSI   EQU   TIVRELS+12
TIVPSO   EQU   TIVRELS+16
TIVVPI   EQU   TIVRELS+20
TIVVPO   EQU   TIVRELS+24
TIVSST   EQU   TIVRELS+28
TIVTAT   EQU   TIVRELS+32
TIVPGNO  EQU   TIVRELS+36
TIVTRANT EQU   TIVRELS+38
TIVRECLM EQU   TIVRELS+42
TIVRCLAM EQU   TIVRELS+46
TIVCPGIN EQU   TIVRELS+50
TIVCRECL EQU   TIVRELS+54
TIVPGSTL EQU   TIVRELS+58
TIVPGSEC EQU   TIVRELS+62
SMFRCD35 EQU   0
TLGRCDTY EQU   SMFRCD35+5
TLGUIF   EQU   SMFRCD35+18
TLGCRTME EQU   SMFRCD35+43
TLGOUTCT EQU   SMFRCD35+47
TLGINCT  EQU   SMFRCD35+51
TLGPRI   EQU   SMFRCD35+57
TLGNQTME EQU   SMFRCD35+58
TLGNQDTE EQU   SMFRCD35+62
TLGTRMI  EQU   SMFRCD35+66
TLGOUTCL EQU   SMFRCD35+67
TLGTRANT EQU   SMFRCD35+68
TLGRVC   EQU   SMFRCD35+72
TLGSPK   EQU   SMFRCD35+76
TLGSRBT  EQU   SMFRCD35+77
TLGTJS   EQU   SMFRCD35+80
TLGTTAT  EQU   SMFRCD35+84
TLGNTSN  EQU   SMFRCD35+88
TLGPGNO  EQU   SMFRCD35+92
TLGRV2   EQU   SMFRCD35+94
TLGVAR   EQU   SMFRCD35+96
TLGRVB   EQU   SMFRCD35+97
TLGCPUTM EQU   SMFRCD35+117
TLGNBRAC EQU   SMFRCD35+120
TLGACFL1 EQU   0
INDMDSNT EQU   0
UCBBGN   EQU   0
ACTPTR   EQU   0
JMRLOC   EQU   0
LCTLOC   EQU   0
RECRDPTR EQU   0
ACTLEN   EQU   0
TCTIOTLN EQU   0
COMPCOD  EQU   0
COMPCODE EQU   COMPCOD
USERABND EQU   COMPCODE
RECORDLN EQU   0
SCTSMFSW EQU   SCTSDPTY
SMFBYTE1 EQU   SCTSMFSW
SMFDFPRY EQU   SMFBYTE1
SMFBYTE2 EQU   SCTSMFSW+1
JCTSMFSW EQU   JCTJMROP
JCTFORGD EQU   JCTSMFSW
TERMBYTE EQU   LCTPARM1
TERMTYPE EQU   TERMBYTE+3
ENQTIME  EQU   TLGNQTME
SMF5JIT1 EQU   SMF5JIT
TIVSTART EQU   TIVCRTME
DTIVSTI  EQU   TIVSTI
FLUSH    EQU   DTIVSTI
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTAPG   EQU   CVTS01+51
CVTGDA   EQU   CVTS01+212
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00161 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00171 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00170 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00161
UCBSKPFG EQU   @NM00161
UCBRIPND EQU   @NM00161
UCBRTIAC EQU   @NM00161
UCBRSV79 EQU   @NM00161
UCBRSV78 EQU   @NM00161
UCBRSV77 EQU   @NM00161
UCBOLTEP EQU   @NM00161
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00160 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00025 EQU   DTIVSTI
@NM00024 EQU   TERMBYTE
@NM00023 EQU   JCTSMFSW
JCTEXITS EQU   JCTSMFSW
JCTOPT2  EQU   JCTSMFSW
JCTOPT1  EQU   JCTSMFSW
SMFPRY02 EQU   SMFBYTE2
@NM00018 EQU   SMFBYTE2
SMFPRY01 EQU   SMFBYTE1
@NM00017 EQU   SMFBYTE1
TLGBCD   EQU   TLGACFL1+1
TLGANC   EQU   TLGACFL1
TLGSTAT  EQU   SMFRCD35+55
TLGSTPCT EQU   SMFRCD35+42
TLGUDATA EQU   SMFRCD35+34
TLGONDTE EQU   SMFRCD35+30
TLGONTME EQU   SMFRCD35+26
TLGUID   EQU   TLGUIF
TLGCPUID EQU   SMFRCD35+14
TLGRCDTE EQU   SMFRCD35+10
TLGRCDTS EQU   SMFRCD35+6
TLGRFLG  EQU   SMFRCD35+4
TLGRSEG  EQU   SMFRCD35+2
TLGRLEN  EQU   SMFRCD35
TIVSOUT  EQU   TIVPSO
TIVSIN   EQU   TIVPSI
TIVRGNS  EQU   TIVNSW
TIVPGOUT EQU   TIVPGOT
TIVBCD   EQU   TIVACFL1+1
TIVANC   EQU   TIVACFL1
@NM00175 EQU   TIVRIN
TIVIEX   EQU   TIVRIN
@NM00174 EQU   TIVRIN
TIVMCRE  EQU   TIVSTU
TIVRVB   EQU   TIVSYST
TIVEFRGN EQU   TIVPRV
TIVUID   EQU   TIVUIF
SMF5BCD  EQU   SMF5JSAF+1
SMF5ANC  EQU   SMF5JSAF
SMF5ACTF EQU   SMFRCD05+120
SMF5JCPU EQU   SMFRCD05+117
SMF5TLEN EQU   SMFRCD05+96
SMF5PGNO EQU   SMFRCD05+92
SMF5TTAT EQU   SMFRCD05+84
SMF5TJS  EQU   SMFRCD05+80
SMF5SRBT EQU   SMFRCD05+77
SMF5SPK  EQU   SMFRCD05+76
SMF5TRAN EQU   SMFRCD05+68
SMF5SMCI EQU   SMFRCD05+67
SMF5JBTI EQU   SMFRCD05+66
SMF5RSTD EQU   SMFRCD05+62
SMF5RSTT EQU   SMFRCD05+58
SMF5JPTY EQU   SMFRCD05+57
SMF5JCC  EQU   SMFRCD05+55
SMF5NST  EQU   SMFRCD05+42
SMF5UIF  EQU   SMFRCD05+34
SMF5RSD  EQU   SMFRCD05+30
SMF5RST  EQU   SMFRCD05+26
SMF5JBN  EQU   SMFRCD05+18
SMF5SID  EQU   SMFRCD05+14
SMF5DTE  EQU   SMFRCD05+10
SMF5TME  EQU   SMFRCD05+6
SMF5FLG  EQU   SMFRCD05+4
SMF5SEG  EQU   SMFRCD05+2
SMF5LEN  EQU   SMFRCD05
SMF4PSEC EQU   SMF4RELS+62
SMF4PGST EQU   SMF4RELS+58
SMF4CRCL EQU   SMF4RELS+54
SMF4CPGN EQU   SMF4RELS+50
SMF4RCLM EQU   SMF4RELS+46
SMF4RECL EQU   SMF4RELS+42
SMF4TRAN EQU   SMF4RELS+38
SMF4PGNO EQU   SMF4RELS+36
SMF4TAT  EQU   SMF4RELS+32
SMF4SST  EQU   SMF4RELS+28
SMF4VPO  EQU   SMF4RELS+24
SMF4VPI  EQU   SMF4RELS+20
SMF4SOUT EQU   SMF4PSO
SMF4SIN  EQU   SMF4PSI
SMF4RGNS EQU   SMF4NSW
SMF4PGOT EQU   SMF4RELS+4
SMF4PGIN EQU   SMF4RELS
SMF4BCD  EQU   SMF4ACTF+1
SMF4ANC  EQU   SMF4ACTF
SMF4NAF  EQU   SMF4CPUA+4
SMF4SETM EQU   SMF4CPUA+1
SMF4LNTH EQU   SMF4CPUA
SMF4EXCP EQU   SMF4EXPS+4
SMF4VDV  EQU   SMF4CUAD
SMF4UTYP EQU   SMF4CUT+1
SMF4DEVC EQU   SMF4CUT
SMF4LENN EQU   SMFRCD04+106
SMF4RLCT EQU   SMFRCD04+104
@NM00173 EQU   SMF4RIN
SMF4IEX  EQU   SMF4RIN
@NM00172 EQU   SMF4RIN
SMF4SRBT EQU   SMFRCD04+99
SMF4RV3  EQU   SMFRCD04+98
SMF4PPST EQU   SMFRCD04+94
SMF4AST  EQU   SMFRCD04+90
SMF4RV2  EQU   SMFRCD04+88
SMF4SPK  EQU   SMFRCD04+86
SMF4RV1  EQU   SMFRCD04+80
SMF4H0ST EQU   SMF4STU
SMF4SYST EQU   SMFRCD04+76
SMF4RSH0 EQU   SMF4PRV
SMF4STMN EQU   SMFRCD04+66
SMF4PGMN EQU   SMFRCD04+58
SMF4PRTY EQU   SMFRCD04+57
SMF4SCC  EQU   SMFRCD04+55
SMF4SIT  EQU   SMFRCD04+43
SMF4STN  EQU   SMFRCD04+42
SMF4UIF  EQU   SMFRCD04+34
SMF4RSD  EQU   SMFRCD04+30
SMF4RST  EQU   SMFRCD04+26
SMF4JBN  EQU   SMFRCD04+18
SMF4SID  EQU   SMFRCD04+14
SMF4DTE  EQU   SMFRCD04+10
SMF4TME  EQU   SMFRCD04+6
SMF4FLG  EQU   SMFRCD04+4
SMF4SEG  EQU   SMFRCD04+2
SMF4LEN  EQU   SMFRCD04
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00169 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00168 EQU   IEZJSCB
@NM00167 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00166 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAFX EQU   TCBSTAWA
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00165 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00164 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
GBLCELCT EQU   GDA+60
GLBLCELL EQU   GDA+56
CSASPQEP EQU   GDA+52
PFSTCPAB EQU   GDA+48
VRWLEL   EQU   VRWAITQ+4
VRWFEL   EQU   VRWAITQ
VRPLEL   EQU   VRPOSTQ+4
VRPFEL   EQU   VRPOSTQ
SQASPLFT EQU   GDA+28
SQASPQEP EQU   GDA+24
VRPQEP   EQU   GDA+12
CSAPQEP  EQU   GDA+8
VRDREG   EQU   GDA+4
RESV     EQU   GVSMFLAG+1
@NM00163 EQU   GDAFLAGS
WAITQUE  EQU   GDAFLAGS
SQATHRS2 EQU   GDAFLAGS
SQATHRS1 EQU   GDAFLAGS
GDAFLAG2 EQU   GDAFLAGS
NIPFOURK EQU   GDAFLAGS
GDAFLAG1 EQU   GDAFLAGS
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
UCBRV043 EQU   UCBCMEXT+16
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBRV036 EQU   UCBFLP1
UCBRV035 EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBRV033 EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00162
UCBHALI  EQU   @NM00162
UCBRSV09 EQU   @NM00162
UCBRSV08 EQU   @NM00162
UCBRSV07 EQU   @NM00162
UCBRSV06 EQU   @NM00162
UCBRSV05 EQU   @NM00162
UCBRSV04 EQU   @NM00162
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCB3TAPE EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00159 EQU   UCB
TCTTKRLD EQU   TCTDDENT+13
TCTEXRLD EQU   TCTDDENT+12
TCTRSV10 EQU   TCTDDENT+8
TCTRSV26 EQU   TCTFLGS
TCTRSV25 EQU   TCTFLGS
TCTRSV24 EQU   TCTFLGS
TCTRSV23 EQU   TCTFLGS
TCTRSV22 EQU   TCTFLGS
TCTNOCNT EQU   TCTFLGS
TCTDDIND EQU   TCTFLGS
TCTDCBLE EQU   TCTIODSP+4
TCTRSV11 EQU   TCTTIOT+6
TCTSZLKP EQU   TCTTIOT+4
TCTSZEXT EQU   TCTPLEXT+2
@NM00158 EQU   TCTPLEXT
TCTLCS   EQU   TCTCORE+16
TCTMINC  EQU   TCTCORE+8
TCTSOUT  EQU   TCTPGSMF+16
TCTSIN   EQU   TCTPGSMF+12
TCTWLMT  EQU   SMFTCT+44
TCTSACT  EQU   TCTTJLM
TCTSTOF  EQU   TCTJSTX
TCTRSV08 EQU   SMFTCT+32
TCTJMR   EQU   SMFTCT+28
TCTUDATA EQU   SMFTCT+24
TCTUTL   EQU   SMFTCT+20
TCTSZE   EQU   TCTPOOL+2
@NM00157 EQU   TCTPOOL
TCTTCB   EQU   SMFTCT+4
TCTRSV07 EQU   TCTSW
TCTRSV06 EQU   TCTSW
TCTRSV05 EQU   TCTSW
TCTRSV04 EQU   TCTSW
TCTRSV03 EQU   TCTSW
TCTRSV02 EQU   TCTSW
TCTJSTI  EQU   TCTSW
TCTQA    EQU   SMFTCT
JMRJCLCP EQU   JMR+72
JMRJCLP  EQU   JMR+68
JMRJOBP  EQU   JMR+64
@NM00156 EQU   JMR+62
JMRJCLCD EQU   JMR+61
JMRSYSOC EQU   JMR+56
@NM00155 EQU   JMR+55
JMRFIND  EQU   JMROPT
@NM00154 EQU   JMROPT
JMRXONLY EQU   JMROPT
JMREXITS EQU   JMROPT
JMRSTPSW EQU   JMROPT
JMRJOBSW EQU   JMROPT
JMRUJVP  EQU   JMR+36
JMRUCOM  EQU   JMR+32
JMRCLASS EQU   JMR+31
@NM00153 EQU   JMRFLG
JMRWARM  EQU   JMRFLG
@NM00152 EQU   JMRFLG
JMRCNRS  EQU   JMRFLG
JMRCHRS  EQU   JMRFLG
JMRSTRS  EQU   JMRFLG
JMRINDC  EQU   JMR+29
JMRSTEP  EQU   JMR+28
@NM00151 EQU   @NM00149+1
SCTONLY  EQU   SCTABCND
SCTEVEN  EQU   SCTABCND
SCTABEND EQU   SCTABCND
SCTONLYC EQU   SCTABCND
SCTABCAN EQU   SCTABCND
@NM00150 EQU   SCTABCND
@NM00148 EQU   INSMSCT+173
@NM00147 EQU   SCTSTEND
SCTSYSCK EQU   SCTSTEND
SCTSTPND EQU   SCTSTEND
SCTSTSRT EQU   SCTSTEND
@NM00146 EQU   INSMSCT+168
SCTCATCT EQU   INSMSCT+166
SCTSDPSA EQU   SCTCDENT+3
SCTSDPOP EQU   SCTCDENT+2
SCTSDPCD EQU   SCTCDENT
@NM00145 EQU   INSMSCT+117
SCTPRFMF EQU   INSMSCT+116
SCTTIOT  EQU   INSMSCT+105
@NM00144 EQU   SCTBCT
SCTJBEND EQU   SCTBCT
SCTSPSYS EQU   SCTBCT
SCTSTPLB EQU   SCTBCT
@NM00143 EQU   SCTBCT
SCTMCVOL EQU   SCTBCT
@NM00142 EQU   SCTBCT
SCTGOTTR EQU   INSMSCT+100
@NM00141 EQU   SCTSDPTY+1
SCTSDP   EQU   SCTSDPTY
SCTFSTEP EQU   SCTSDPTY
@NM00140 EQU   SCTSDPTY
@NM00139 EQU   SCTSDPTY
SCTNIUSL EQU   INSMSCT+92
@NM00138 EQU   INSMSCT+90
SCTMSSZE EQU   INSMSCT+88
SCTPCAT  EQU   INSMSCT+84
SCTLDSTB EQU   INSMSCT+80
SCTMSADR EQU   INSMSCT+72
@NM00137 EQU   INSMSCT+71
SCTXBTTR EQU   INSMSCT+68
SCTJSCAT EQU   SCTSTYPE
SCTINITB EQU   SCTSTYPE
SCTSJFHK EQU   SCTSTYPE
SCTOUTMC EQU   SCTSTYPE
SCTINPUT EQU   SCTSTYPE
@NM00136 EQU   INSMSCT+66
SCTNSMSG EQU   INSMSCT+65
SCTSNUMB EQU   INSMSCT+64
@NM00135 EQU   INSMSCT+62
SCTRPACT EQU   INSMSCT+60
SCTSCLPC EQU   INSMSCT+44
@NM00134 EQU   INSMSCT+43
SCTADSTB EQU   INSMSCT+40
@NM00133 EQU   INSMSCT+36
@NM00132 EQU   INSMSCT+35
SCTAFACT EQU   INSMSCT+32
SCTDDNT  EQU   INSMSCT+28
@NM00131 EQU   INSMSCT+27
SCTLSIOT EQU   INSMSCT+24
@NM00130 EQU   INSMSCT+23
SCTANSCT EQU   INSMSCT+20
@NM00129 EQU   INSMSCT+19
SCTAALOC EQU   INSMSCT+16
@NM00128 EQU   INSMSCT+15
SCTFSIOT EQU   INSMSCT+12
SCTLALOC EQU   INSMSCT+10
SCTSEXEC EQU   INSMSCT+8
SCTSTIME EQU   INSMSCT+5
INCMSSTS EQU   SCTSSTAT
SCTGRPH  EQU   SCTSSTAT
SCTKEY0  EQU   SCTSSTAT
SCTDORST EQU   SCTSSTAT
SCTNOCKP EQU   SCTSSTAT
SCTNORST EQU   SCTSSTAT
EACAUSER EQU   SCTSSTAT
SCTTBLID EQU   INSMSCT+3
SCTDISKA EQU   INSMSCT
@NM00127 EQU   IEFAACTB+7
ACTNEXT  EQU   IEFAACTB+4
ACTIDENT EQU   IEFAACTB+3
ACTDSKAD EQU   IEFAACTB
@NM00126 EQU   INJMJCT+175
JCTVULDP EQU   INJMJCT+172
JCTACODE EQU   INJMJCT+168
JCTPRFMF EQU   INJMJCT+167
JCTUSER  EQU   INJMJCT+160
@NM00125 EQU   INJMJCT+156
JCTJMRTL EQU   INJMJCT+140
JCTJMRD  EQU   INJMJCT+137
JCTJMR   EQU   INJMJCT+134
JCTCKIDT EQU   INJMJCT+118
JCTCKIDL EQU   INJMJCT+117
@NM00124 EQU   JCTSTAT2
JCTBLP   EQU   JCTSTAT2
JCTPERFM EQU   JCTSTAT2
JCTSWSM  EQU   JCTSTAT2
JCTENDIT EQU   JCTSTAT2
JCTADSPC EQU   JCTSTAT2
JCTSPSYS EQU   JCTSTAT2
@NM00123 EQU   INJMJCT+115
JCTSSTR  EQU   INJMJCT+112
JCTJSBTM EQU   JCTJSB
JCTJSBEX EQU   JCTJSB
JCTJSBAL EQU   JCTJSB
JCTJSBIN EQU   JCTJSB
@NM00122 EQU   JCTJSB
JCTVOLSQ EQU   INJMJCT+110
JCTNRCKP EQU   INJMJCT+108
JCTNTRK  EQU   INJMJCT+107
JCTCKTTR EQU   INJMJCT+104
JCTDEVT  EQU   INJMJCT+100
@NM00121 EQU   INJMJCT+99
JCTSTIOT EQU   INJMJCT+96
JCTSNUMB EQU   INJMJCT+95
JCTQIDNT EQU   INJMJCT+94
JCTEQREG EQU   INJMJCT+92
@NM00120 EQU   INJMJCT+91
JCTDETDA EQU   INJMJCT+88
JCTDSDRA EQU   JCTRSW2
JCTDSOJB EQU   JCTRSW2
JCTDSOCR EQU   JCTRSW2
JCTRESTT EQU   JCTRSW2
JCTNOCKP EQU   JCTRSW2
JCTNORST EQU   JCTRSW2
JCTNARST EQU   JCTRSW2
JCTSYSCK EQU   JCTRSW2
@NM00119 EQU   JCTRSW1
JCTCKFT  EQU   JCTRSW1
JCTCONTR EQU   JCTRSW1
JCTSTERM EQU   JCTRSW1
@NM00118 EQU   JCTCCODE+3
JCTJDPOP EQU   JCTCCODE+2
JCTJDPCD EQU   JCTCCODE
@NM00117 EQU   INJMJCT+53
JCTSCT   EQU   INJMJCT+52
JCTSMRBA EQU   INJMJCT+44
@NM00116 EQU   INJMJCT+43
JCTACTAD EQU   INJMJCT+40
@NM00115 EQU   INJMJCT+39
JCTJCTX  EQU   INJMJCT+36
@NM00114 EQU   INJMJCT+35
JCTSDKAD EQU   INJMJCT+32
JCTGDGNT EQU   INJMJCT+28
@NM00113 EQU   INJMJCT+27
JCTPDIP  EQU   INJMJCT+24
JCTJTPTN EQU   INJMJCT+16
JCTJNAME EQU   INJMJCT+8
JCTJPRTY EQU   JCTJBYTE
INCMMGL1 EQU   JCTJMGLV
INCMMGL2 EQU   JCTJMGLV
@NM00112 EQU   JCTJMGLV
INCMALL  EQU   JCTJMGLV
JCTJMGPO EQU   INJMJCT+6
INCMNSET EQU   JCTJSTAT
INCMCAT  EQU   INDMCTLG
INCMSTS  EQU   JCTJSTAT
JCTABEND EQU   JCTJSTAT
@NM00111 EQU   JCTJSTAT
JCTJSTPC EQU   JCTJSTAT
@NM00110 EQU   JCTJSTAT
JCTJBLBS EQU   JCTJSTAT
JCTJSRNO EQU   INJMJCT+4
JCTIDENT EQU   INJMJCT+3
JCTDSKAD EQU   INJMJCT
LCTLABEL EQU   LCT+504
LCTIWORK EQU   LCT+440
@NM00109 EQU   LCT+436
LCTIMSG  EQU   LCT+432
LCTLBWAP EQU   LCT+428
@NM00108 EQU   LCT+424
LCTATTC  EQU   LCTINTS2
LCTTSWPC EQU   LCTINTS2
LCTBPPAS EQU   LCTINTS2
LCTSYS   EQU   LCTINTS2
LCTTSIZ  EQU   @NM00107
LCTRFB1  EQU   LCT+419
@NM00106 EQU   LCTRFB
LCTRFBRP EQU   LCTRFB
LCTRFBEF EQU   LCTRFB
LCTRFBMS EQU   LCTRFB
LCTRFBDC EQU   LCTRFB
LCTRFBRV EQU   LCTRFB
LCTRFBCR EQU   LCTRFB
LCTRFBSM EQU   LCTRFB
LCTMFTIO EQU   LCTSTATB
LCTNPKEY EQU   LCTSTATB
LCTSBPOL EQU   LCTSTATB
LCTNREAD EQU   LCTSTATB
LCTWRITE EQU   LCTSTATB
LCTNOATC EQU   LCTSTATB
LCTNOREG EQU   LCTSTATB
LCTECBPB EQU   LCTSTATB
LCTCPART EQU   LCTSTATA
LCTNOGCB EQU   LCTSTATA
LCTNOSDP EQU   LCTSTATA
LCTJCPIB EQU   LCTSTATA
LCTNECBL EQU   LCTSTATA
LCTBTJOB EQU   LCTSTATA
LCTSNOWK EQU   LCTSTATA
LCTSUSPD EQU   LCTSTATA
LCTTIOTI EQU   LCT+412
@NM00105 EQU   LCTJCTDA+3
LCTJCTVA EQU   LCTJCTDA
LCTSSOBA EQU   LCT+404
LCTSTEPL EQU   LCT+400
@NM00104 EQU   LCT+364
@NM00103 EQU   LCTJSCB+1
@NM00102 EQU   LCTOPSW3
@NM00101 EQU   LCTOPSW3
LCTALERR EQU   LCTOPSW3
LCTJNLF  EQU   LCTOPSW3
@NM00100 EQU   LCTOPSW3
LCTNSYS  EQU   LCTOPSW3
LCTRDER  EQU   LCTOPSW3
@NM00099 EQU   LCTOPSW3
@NM00098 EQU   @NM00095+1
LCTENQU  EQU   LCTOPSW2
LCTNORC  EQU   LCTOPSW2
LCTBPRAC EQU   LCTOPSW2
@NM00097 EQU   LCTOPSW2
@NM00096 EQU   LCTOPSW2
LCTCKRST EQU   LCTOPSW2
LCTCRF   EQU   LCTOPSW2
LCTTIMEF EQU   LCTOPSW2
@NM00094 EQU   LCTEXIT+1
@NM00093 EQU   LCTOPSW1
@NM00092 EQU   LCTOPSW1
LCTONEJF EQU   LCTOPSW1
LCTCANF  EQU   LCTOPSW1
@NM00091 EQU   LCTOPSW1
@NM00090 EQU   LCTOPSW1
LCTDWFF  EQU   LCTOPSW1
LCTDPSWA EQU   LCTOPSW1
LCTTSRB3 EQU   LCTTSRB4+1
@NM00089 EQU   LCTTSRB4
@NM00088 EQU   LCT+340
@NM00087 EQU   LCTSPIL+3
@NM00086 EQU   LCTALCFG
@NM00085 EQU   LCTALCFG
@NM00084 EQU   LCTALCFG
@NM00083 EQU   LCTALCFG
@NM00082 EQU   LCTALCFG
@NM00081 EQU   LCTALCFG
LCTMSGWT EQU   LCTALCFG
LCTODSFL EQU   LCTALCFG
LCTDSBCT EQU   LCTSPIL
LCTPIB   EQU   LCTIDENT
@NM00080 EQU   ECBLIST+1
@NM00079 EQU   ECBLIST
LCTJMRAD EQU   LCT+324
LCTASCBA EQU   LCT+320
@NM00078 EQU   LCT+284
QMGR1    EQU   LCT+248
REGSAVE  EQU   LCT+104
@NM00077 EQU   LCTATLST+1
@NM00076 EQU   LCTATLST
@NM00075 EQU   LCTJOBLB+1
@NM00074 EQU   LCTJOBLB
@NM00073 EQU   LCTTSTU4
LCTTSTR3 EQU   LCTSMF+1
LCTTTIFJ EQU   LCTTMBYT
LCTTSTL3 EQU   LCTTSTL4+1
@NM00072 EQU   LCTTSTL4
LCTTJTU3 EQU   LCTTJTU4+1
@NM00071 EQU   LCTTJTU4
@NM00070 EQU   @NM00065+2
@NM00069 EQU   LCTPUBYT
@NM00068 EQU   LCTPUBYT
@NM00067 EQU   LCTPUBYT
@NM00066 EQU   LCTPUBYT
LCTNSWP  EQU   LCTPUBYT
LCTN2LP  EQU   LCTPUBYT
LCT1LPU  EQU   LCTPUBYT
LCT2LPU  EQU   LCTPUBYT
LCTNDSI  EQU   LCTINTSW
LCTABEND EQU   LCTINTSW
LCTSTOP  EQU   LCTINTSW
LCTSTART EQU   LCTINTSW
LCTMINRG EQU   LCTINTSW
LCTPPAA  EQU   LCTINTSW
LCTPRIV  EQU   LCTINTSW
LCTINPPT EQU   LCTINTSW
@NM00064 EQU   LCTSREG+1
@NM00063 EQU   LCTSREG
LCTCOMD2 EQU   LCTCOMCD+2
LCTCOMD1 EQU   LCTCOMCD
LCTBATMN EQU   LCT+64
@NM00062 EQU   LCTSMBAD+1
@NM00061 EQU   LCTSMBAD
LCTACTON EQU   LCT+59
@NM00060 EQU   LCTJFCBH
@NM00059 EQU   LCTJFCBH
@NM00058 EQU   LCTJFCBH
@NM00057 EQU   LCTJFCBH
@NM00056 EQU   LCTJFCBH
LCTS2FES EQU   LCTJFCBH
LCTS2COP EQU   LCTJFCBH
LCTS2PEM EQU   LCTJFCBH
LCTSTIND EQU   LCTNSPAD
@NM00055 EQU   LCTCMCBA+1
@NM00054 EQU   LCTCMCBA
LCTPARM4 EQU   LCT+48
LCTPARM3 EQU   LCT+44
LCTPARM2 EQU   LCT+40
LCTJCFAL EQU   LCTERR
LCTACOMP EQU   LCTERR
LCTSFAIL EQU   LCTERR
LCTPALCD EQU   LCTERR
LCTSALCD EQU   LCTERR
LCTJFAIL EQU   LCTERR
@NM00053 EQU   LCTPSPAR+1
@NM00052 EQU   LCTPSPAR
@NM00051 EQU   LCTWORKA+3
LCTSCTVA EQU   LCTWORKA
@NM00050 EQU   LCTSCTAD+1
@NM00049 EQU   LCTSCTAD
@NM00048 EQU   LCTJCTAD+1
@NM00047 EQU   LCTJCTAD
@NM00046 EQU   LCTQENTY+1
LCTERRM  EQU   @NM00038
@NM00045 EQU   @NM00038
@NM00044 EQU   @NM00038
@NM00043 EQU   @NM00038
@NM00042 EQU   @NM00038
@NM00041 EQU   @NM00038
@NM00040 EQU   @NM00038
@NM00039 EQU   @NM00038
@NM00037 EQU   LCTTCBAD+1
@NM00036 EQU   LCTTCBAD
@NM00035 EQU   LCTSRTAD+1
@NM00034 EQU   LCTSRTAD
@NM00033 EQU   LCTQDRTY+1
@NM00032 EQU   LCTQDRTY
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00031 EQU   CVTFIX+248
@NM00030 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
BACKTRAN EQU   FORETRAN
@NM00022 EQU   JOBSTOP+2
@NM00021 EQU   JOBSTRT+2
@NM00020 EQU   STEPSTOP+2
@NM00019 EQU   STEPSTRT+2
@NM00016 EQU   MSGMAP+111
@NM00015 EQU   MSGMAP+109
@NM00014 EQU   MSGMAP+108
@NM00013 EQU   MSGMAP+97
@NM00012 EQU   MSGMAP+91
@NM00011 EQU   MSGMAP+44
@NM00010 EQU   MSGMAP+39
@NM00009 EQU   MSGMAP+26
@NM00008 EQU   MSGMAP+12
@NM00007 EQU   MSGMAP+4
@NM00006 EQU   MSGMAP+2
@NM00005 EQU   MSGMAP
@NM00004 EQU   EXTIME+17
@NM00003 EQU   EXTIME+14
@NM00002 EQU   EXTIME+8
@NM00001 EQU   EXTIME
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00161 EQU   @RC00151
@RF00242 EQU   @RC00235
@RC00274 EQU   @RC00176
@RF00346 EQU   @EL00002
@PB00004 EQU   @EL00001
@RF00163 EQU   @RC00161
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEFTB722,(C'PLS1902',0701,77334)
