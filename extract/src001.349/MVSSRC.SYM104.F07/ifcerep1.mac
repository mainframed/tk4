         TITLE 'IFCEREP1-CONTROL MODULE ALL EREP PROCESSING            *
                        '
IFCEREP1 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IFCEREP1  77.315'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         B     @PB00002                                            0088
PRINTIT  STM   @14,@12,@SA00002                                    0088
*  PRINTADR = ADDR(PRINTLIN);                              /*@Z427VLS*/
         LA    @14,PRINTLIN                                        0089
         ST    @14,PRINTADR                                        0089
*  CALL IOHND(RITEPRTR);             /*PUT THE MESSAGE OUT   @Z427VLS*/
         L     @15,ADIOHND                                         0090
         LA    @01,@AL00090                                        0090
         BALR  @14,@15                                             0090
*END;                                                      /*@Z427VLS*/
@EL00002 DS    0H                                                  0091
@EF00002 DS    0H                                                  0091
@ER00002 LM    @14,@12,@SA00002                                    0091
         BR    @14                                                 0091
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL LOAD THE MODULES REQUIRED TO DO NORMAL EDIT    */
*/*    AND SUMMARY PROCESSING                                @Z427VLS*/
*/*                                                          @Z427VLS*/
*DONORMAL: PROC;                                           /*@Z427VLS*/
DONORMAL STM   @14,@12,@SA00003                                    0092
*    CHARLINE = 10;                                        /*@G51DGVS*/
         MVC   CHARLINE(4),@CF00272                                0093
*   IF DEBUG4 = ON                   /*DO THEY WANT THE TIME PRINTED */
*     THEN                                                         0094
         TM    DEBUG4,B'00001000'                                  0094
         BNO   @RF00094                                            0094
*      DO;                                                 /*@Z427VLS*/
*      PNAME = IFCFILT1;             /*SET THE NAME TO CORRECT MODULE*/
         MVC   PNAME(8),IFCFILT1                                   0096
*      STARSTOP = STARTNME;          /*SET MESSAGE FOR START TIME    */
         MVC   STARSTOP(5),STARTNME                                0097
*      CALL TIME;                    /*GO GET THE TYIME AND PRINT IT */
         BAL   @14,TIME                                            0098
*      END;                                                /*@Z427VLS*/
*   GEN(LINK  EPLOC=IFCFILT1);       /*LOAD EDIT AND SUM FILTER      */
@RF00094 DS    0H                                                  0100
         LINK  EPLOC=IFCFILT1
* IF (R15 = ZERO × DEBUG20 = ON) & SORTNUM ^= ZERO THEN            0101
         LTR   R15,R15                                             0101
         BZ    @GL00001                                            0101
         TM    DEBUG20,B'00001000'                                 0101
         BNO   @RF00101                                            0101
@GL00001 L     @14,SORTNUM                                         0101
         LTR   @14,@14                                             0101
         BZ    @RF00101                                            0101
* /*IF PRINT = NO OR NO RECORDS PASS FILTERING DON'T LOAD EDSUM*/  0102
*    DO;                                                   /*@Z427VLS*/
*     IF DEBUG4 = ON                 /*DO THEY WANT TIME PRINTED     */
*      THEN                                                        0103
         TM    DEBUG4,B'00001000'                                  0103
         BNO   @RF00103                                            0103
*       DO;                                                /*@Z427VLS*/
*       STARSTOP = STOPNME;          /*SET MESSAGE FOR THE STOP TIME */
         MVC   STARSTOP(5),STOPNME                                 0105
*       CALL TIME;                                         /*@Z427VLS*/
         BAL   @14,TIME                                            0106
*       END;                                               /*@Z427VLS*/
*     IF DEBUG8 = ON                 /*DO THEY WANT SORT TABLE DUMPED*/
*      THEN                                                        0108
@RF00103 TM    DEBUG8,B'10000000'                                  0108
         BNO   @RF00108                                            0108
*       CALL DUMP;                   /*GO DUMP THE SORT TABLE        */
         BAL   @14,DUMP                                            0109
*     IF DEBUG4 = ON                 /*DO THEY WANT THE TIME PRINTED */
*      THEN                                                        0110
@RF00108 TM    DEBUG4,B'00001000'                                  0110
         BNO   @RF00110                                            0110
*       DO;                                                /*@Z427VLS*/
*       PNAME = IFCEDSUM;            /*SET THE PROGRAM NAME  @Z427VLS*/
         MVC   PNAME(8),IFCEDSUM                                   0112
*       STARSTOP = STARTNME;         /*SET MESSAGE FOR THE START LINE*/
         MVC   STARSTOP(5),STARTNME                                0113
*       CALL TIME;                   /*GO FIND THE TIME AND PRINT IT */
         BAL   @14,TIME                                            0114
*       END;                                               /*@Z427VLS*/
*     GEN(LINK  EPLOC=IFCEDSUM);     /*LOAD THE EDIT AND SUMMRY CNTRL*/
@RF00110 DS    0H                                                  0116
         LINK  EPLOC=IFCEDSUM
*     IF DEBUG4 = ON                 /*DO THEY WANT THE TIME @Z427VLS*/
*      THEN                                                        0117
         TM    DEBUG4,B'00001000'                                  0117
         BNO   @RF00117                                            0117
*       DO;                                                /*@Z427VLS*/
*       STARSTOP = STOPNME;          /*SET MESSAGE TO THE STOP ONE   */
         MVC   STARSTOP(5),STOPNME                                 0119
*       CALL TIME;                   /*GO FIND THE TIME AND PRINT IT */
         BAL   @14,TIME                                            0120
*       END;                                               /*@Z427VLS*/
*    END;                                                  /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00003 DS    0H                                                  0123
@EF00003 DS    0H                                                  0123
@ER00003 LM    @14,@12,@SA00003                                    0123
         BR    @14                                                 0123
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL LOAD THE MODULE TO DO MES/THRESHOLD    @Z427VLS*/
*/*                                                          @Z427VLS*/
*DOMES: PROC;                                              /*@Z427VLS*/
DOMES    STM   @14,@12,@SA00004                                    0124
*IF PARMTHR = ON THEN                                              0125
         TM    PARMTHR,B'00001000'                                 0125
         BNO   @RF00125                                            0125
*  IFCMES01 = IFCTHRSH;                   /* CHANGE MODULE NAME     */
         MVC   IFCMES01(8),IFCTHRSH                                0126
*   IF DEBUG4 = ON                   /*DO THEY WANT THE TIME PRINTED */
*     THEN                                                         0127
@RF00125 TM    DEBUG4,B'00001000'                                  0127
         BNO   @RF00127                                            0127
*      DO;                                                 /*@Z427VLS*/
*       PNAME = IFCMES01;            /*INSERT THE CORRECT MODULE NAME*/
         MVC   PNAME(8),IFCMES01                                   0129
*       STARSTOP = STARTNME;         /*SET UP THE START MESSAGE      */
         MVC   STARSTOP(5),STARTNME                                0130
*       CALL TIME;                   /*GO FIND THE TIME AND PRINT IT */
         BAL   @14,TIME                                            0131
*       END;                                               /*@Z427VLS*/
*   GEN(LINK  EPLOC=IFCMES01);       /*LOAD AND PROCESS MES OR THRES */
@RF00127 DS    0H                                                  0133
         LINK  EPLOC=IFCMES01
*   IF DEBUG4 = ON                   /*DO THEY WANT THE CURRENT TIME */
*     THEN                                                         0134
         TM    DEBUG4,B'00001000'                                  0134
         BNO   @RF00134                                            0134
*      DO;                                                 /*@Z427VLS*/
*       STARSTOP = STOPNME;          /*SET TO STOP MESSAGE   @Z427VLS*/
         MVC   STARSTOP(5),STOPNME                                 0136
*       CALL TIME ;                  /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0137
*      END;                                                /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00004 DS    0H                                                  0139
@EF00004 DS    0H                                                  0139
@ER00004 LM    @14,@12,@SA00004                                    0139
         BR    @14                                                 0139
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL PRINT THE CURRENT TIME                 @Z427VLS*/
*/*                                                          @Z427VLS*/
*DORDESUM: PROC;                                           /*@Z427VLS*/
DORDESUM STM   @14,@12,@SA00005                                    0140
*   IF DEBUG4 = ON                   /*DO THEY WANT THE TIME PRINTED */
*     THEN                                                         0141
         TM    DEBUG4,B'00001000'                                  0141
         BNO   @RF00141                                            0141
*      DO;                                                 /*@Z427VLS*/
*       PNAME = IFCRDESM;            /*SET THE PROGRAM NAME  @Z427VLS*/
         MVC   PNAME(8),IFCRDESM                                   0143
*       STARSTOP = STARTNME;         /*SET THE MESSAGE TO START      */
         MVC   STARSTOP(5),STARTNME                                0144
*       CALL TIME;                   /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0145
*      END;                                                /*@Z427VLS*/
*   GEN(LINK  EPLOC=IFCRDESM);       /*PROCESS UNDER RDESUM  @Z427VLS*/
@RF00141 DS    0H                                                  0147
         LINK  EPLOC=IFCRDESM
*   IF DEBUG4 = ON                   /*DO THEY WAN THE CURRENT TIME  */
*     THEN                                                         0148
         TM    DEBUG4,B'00001000'                                  0148
         BNO   @RF00148                                            0148
*      DO;                                                 /*@Z427VLS*/
*       STARSTOP = STOPNME;          /*SET MESSAGE TO THE STOP       */
         MVC   STARSTOP(5),STOPNME                                 0150
*       CALL TIME;                   /*GO GET TIME AND PRINT IT      */
         BAL   @14,TIME                                            0151
*      END;                                                /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00005 DS    0H                                                  0153
@EF00005 DS    0H                                                  0153
@ER00005 LM    @14,@12,@SA00005                                    0153
         BR    @14                                                 0153
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL LOAD THE MODULES REQUIRED TO PROVIDE EVENT     */
*/*    HISTORY OUTPUT                                        @Z427VLS*/
*/*                                                          @Z427VLS*/
*DOEVENT: PROC;                                            /*@Z427VLS*/
DOEVENT  STM   @14,@12,@SA00006                                    0154
*   IF DEBUG4 = ON                   /*DO THEY WANT THE TIME PRINTED */
*     THEN                                                         0155
         TM    DEBUG4,B'00001000'                                  0155
         BNO   @RF00155                                            0155
*      DO;                                                 /*@Z427VLS*/
*       PNAME = IFCFILT4;            /*SET THE PROGRAM NAME IN MES   */
         MVC   PNAME(8),IFCFILT4                                   0157
*       STARSTOP = STARTNME;         /*SET THE MESSAGE TO START      */
         MVC   STARSTOP(5),STARTNME                                0158
*       CALL TIME;                   /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0159
*      END;                                                /*@Z427VLS*/
*   GEN(LINK  EPLOC=IFCFILT4);       /*LOAD THE FILTER FOR EVENT HIST*/
@RF00155 DS    0H                                                  0161
         LINK  EPLOC=IFCFILT4
*   IF R15 = ZERO × DEBUG20 = ON THEN/*STOP ON ANY ERROR     @Z427VLS*/
         LTR   R15,R15                                             0162
         BZ    @RT00162                                            0162
         TM    DEBUG20,B'00001000'                                 0162
         BNO   @RF00162                                            0162
@RT00162 DS    0H                                                  0163
*    DO;                                                   /*@Z427VLS*/
*     IF DEBUG4 = ON                 /*DO THEY WANT THE TIME PRINTED */
*       THEN                                                       0164
         TM    DEBUG4,B'00001000'                                  0164
         BNO   @RF00164                                            0164
*        DO;                                               /*@Z427VLS*/
*         STARSTOP = STOPNME;        /*SET MESSAGE TO STOP   @Z427VLS*/
         MVC   STARSTOP(5),STOPNME                                 0166
*         CALL TIME  ;               /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0167
*        END;                                              /*@Z427VLS*/
*     IF DEBUG8 = ON                 /*DO WE DUMP THE SORT TABLE     */
*      THEN                                                        0169
@RF00164 TM    DEBUG8,B'10000000'                                  0169
         BNO   @RF00169                                            0169
*       CALL DUMP;                   /*GO DUMP THE SORT TABLE        */
         BAL   @14,DUMP                                            0170
*     IF DEBUG4 = ON                 /*PRINT START TIME FOR EVENT    */
*      THEN                                                        0171
@RF00169 TM    DEBUG4,B'00001000'                                  0171
         BNO   @RF00171                                            0171
*       DO;                                                /*@Z427VLS*/
*        PNAME = IFCEVENT;           /*SET PROGRAME NAME INTO MESSAGE*/
         MVC   PNAME(8),IFCEVENT                                   0173
*        STARSTOP = STARTNME;        /*SET MESSAGE TO START TIME     */
         MVC   STARSTOP(5),STARTNME                                0174
*        CALL TIME;                  /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0175
*       END;                                               /*@Z427VLS*/
*     GEN(LINK  EPLOC=IFCEVENT);     /*LOAD EVENT HISTORY    @Z427VLS*/
@RF00171 DS    0H                                                  0177
         LINK  EPLOC=IFCEVENT
*     IF DEBUG4 = ON                 /*DO THEY WANT THE CURRENT TIME */
*      THEN                                                        0178
         TM    DEBUG4,B'00001000'                                  0178
         BNO   @RF00178                                            0178
*       DO;                                                /*@Z427VLS*/
*        STARSTOP = STOPNME;         /*SET THE MESSAGE TO STOP       */
         MVC   STARSTOP(5),STOPNME                                 0180
*        CALL TIME;                  /*GET THE TIME AND PRINT IT     */
         BAL   @14,TIME                                            0181
*       END;                                               /*@Z427VLS*/
*    END;                                                  /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00006 DS    0H                                                  0184
@EF00006 DS    0H                                                  0184
@ER00006 LM    @14,@12,@SA00006                                    0184
         BR    @14                                                 0184
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL LOAD THE MODULES TO PROVIDE THE TREND REPORT   */
*/*                                                          @Z427VLS*/
*DOTREND: PROC;                                            /*@Z427VLS*/
DOTREND  STM   @14,@12,@SA00007                                    0185
*  CHARLINE = 14;                                          /*@0001VLS*/
         MVC   CHARLINE(4),@CF00583                                0186
*   IF DEBUG4 = ON THEN              /*DO THEY WANT THE TIME PRINTED */
         TM    DEBUG4,B'00001000'                                  0187
         BNO   @RF00187                                            0187
*      DO;                                                 /*@Z427VLS*/
*       STARSTOP = STARTNME;         /*SET UP THE START MESSAGE      */
         MVC   STARSTOP(5),STARTNME                                0189
*       PNAME = IFCFILT3;            /*PUT IN THE PROGRAM NAME       */
         MVC   PNAME(8),IFCFILT3                                   0190
*       CALL TIME;                   /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0191
*      END;                                                /*@Z427VLS*/
*   GEN(LINK  EPLOC=IFCFILT3);       /*LOAD THE FILTER FOR TREND     */
@RF00187 DS    0H                                                  0193
         LINK  EPLOC=IFCFILT3
*   IF R15 = ZERO × DEBUG20 = ON THEN/*STOP IF ERROR         @Z427VLS*/
         LTR   R15,R15                                             0194
         BZ    @RT00194                                            0194
         TM    DEBUG20,B'00001000'                                 0194
         BNO   @RF00194                                            0194
@RT00194 DS    0H                                                  0195
*    DO;                                                   /*@Z427VLS*/
*     IF DEBUG4 = ON THEN            /*DO THEY WANT THE TIME PRINTED */
         TM    DEBUG4,B'00001000'                                  0196
         BNO   @RF00196                                            0196
*       DO;                                                /*@Z427VLS*/
*        STARSTOP = STOPNME;         /*SET UP STOP MESSAGE   @Z427VLS*/
         MVC   STARSTOP(5),STOPNME                                 0198
*        CALL TIME;                  /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0199
*       END;                                               /*@Z427VLS*/
*     IF DEBUG8 = ON THEN            /*DO WE DUMP THE SORT TABLE     */
@RF00196 TM    DEBUG8,B'10000000'                                  0201
         BNO   @RF00201                                            0201
*        CALL DUMP;                  /*GO DUMP THE SORT TABLE        */
         BAL   @14,DUMP                                            0202
*     IF DEBUG4 = ON THEN            /*DO WE PRINT THE TIME  @Z427VLS*/
@RF00201 TM    DEBUG4,B'00001000'                                  0203
         BNO   @RF00203                                            0203
*       DO;                                                /*@Z427VLS*/
*        STARSTOP = STARTNME;        /*SET UP FOR A START MESSAGE    */
         MVC   STARSTOP(5),STARTNME                                0205
*        PNAME = IFCTREND;           /*PUT PROGRAM NAME INTO MESSAGE */
         MVC   PNAME(8),IFCTREND                                   0206
*        CALL TIME;                  /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0207
*       END;                                               /*@Z427VLS*/
*     GEN(LINK  EPLOC=IFCTREND);     /*LOAD THE TREND PROGRAM        */
@RF00203 DS    0H                                                  0209
         LINK  EPLOC=IFCTREND
*     IF DEBUG4 = ON THEN            /*DO THEY WANT THE CURRENT TIME */
         TM    DEBUG4,B'00001000'                                  0210
         BNO   @RF00210                                            0210
*       DO;                                                /*@Z427VLS*/
*        STARSTOP = STOPNME ;        /*SET THE STOP MESSAGE UP       */
         MVC   STARSTOP(5),STOPNME                                 0212
*        CALL TIME;                  /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0213
*       END;                                               /*@Z427VLS*/
*    END;                                                  /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00007 DS    0H                                                  0216
@EF00007 DS    0H                                                  0216
@ER00007 LM    @14,@12,@SA00007                                    0216
         BR    @14                                                 0216
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL LOAD THE MODULES REQUIRED TO PROVIDE SYSSUMMRY */
*/*                                                          @Z427VLS*/
*DOSYSSUM: PROC;                                           /*@Z427VLS*/
DOSYSSUM STM   @14,@12,@SA00008                                    0217
*  CHARLINE = 13;                                          /*@0001VLS*/
         MVC   CHARLINE(4),@CF00588                                0218
*   IF DEBUG4 = ON THEN              /*DO THEY WANT THE TIME PRINTED */
         TM    DEBUG4,B'00001000'                                  0219
         BNO   @RF00219                                            0219
*      DO;                                                 /*@Z427VLS*/
*       PNAME = IFCFILT2;            /*INSERT THE PROGRAM NAME       */
         MVC   PNAME(8),IFCFILT2                                   0221
*       STARSTOP = STARTNME;         /*SET UP THE START MESSAGE      */
         MVC   STARSTOP(5),STARTNME                                0222
*       CALL TIME;                   /*GO PRINT THE CURRENT TIME     */
         BAL   @14,TIME                                            0223
*      END;                                                /*@Z427VLS*/
*   GEN(LINK  EPLOC=IFCFILT2);       /*LOAD THE SYSTEM FILTER        */
@RF00219 DS    0H                                                  0225
         LINK  EPLOC=IFCFILT2
*   IF R15 = ZERO × DEBUG20 = ON     /*STOP IF ANY ERROR     @Z427VLS*/
*    THEN                                                          0226
         LTR   R15,R15                                             0226
         BZ    @RT00226                                            0226
         TM    DEBUG20,B'00001000'                                 0226
         BNO   @RF00226                                            0226
@RT00226 DS    0H                                                  0227
*     DO;                                                  /*@Z427VLS*/
*      IF DEBUG4 = ON THEN          /*DO THEY WANT THE CURRENT TIME */
         TM    DEBUG4,B'00001000'                                  0228
         BNO   @RF00228                                            0228
*       DO;                                                /*@Z427VLS*/
*        STARSTOP= STOPNME;          /*SET UP THE STOP MESSAGE       */
         MVC   STARSTOP(5),STOPNME                                 0230
*        CALL TIME;                  /*GO GET THE TI=ME AND PRINT IT */
         BAL   @14,TIME                                            0231
*       END;                                               /*@Z427VLS*/
*       IF DEBUG8 = ON               /*DO WE DUMP THE SORT TABLE     */
*        THEN                                                      0233
@RF00228 TM    DEBUG8,B'10000000'                                  0233
         BNO   @RF00233                                            0233
*          CALL DUMP;                /*DUMP THE SORT TABLE   @Z427VLS*/
         BAL   @14,DUMP                                            0234
*       IF DEBUG4 = ON               /*DO THEY WANT THE CURRENT TIME */
*        THEN                                                      0235
@RF00233 TM    DEBUG4,B'00001000'                                  0235
         BNO   @RF00235                                            0235
*         DO;                                              /*@Z427VLS*/
*          PNAME = IFCSYSUM;         /*SET THE PROGRAM NAME UP       */
         MVC   PNAME(8),IFCSYSUM                                   0237
*          STARSTOP  = STARTNME;     /*SET UP THE START MESSAGE      */
         MVC   STARSTOP(5),STARTNME                                0238
*          CALL TIME;                /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0239
*         END;                                             /*@Z427VLS*/
*       GEN(LINK EPLOC=IFCSYSUM);    /*LOAD THE SYSUM SUMMRY MODULE  */
@RF00235 DS    0H                                                  0241
         LINK EPLOC=IFCSYSUM
*       IF DEBUG4 = ON               /*DO THEY WANT THE CURRENT TIME */
*        THEN                                                      0242
         TM    DEBUG4,B'00001000'                                  0242
         BNO   @RF00242                                            0242
*         DO;                                              /*@Z427VLS*/
*          STARSTOP = STOPNME;       /*SET UP STOP MESSAGE   @Z427VLS*/
         MVC   STARSTOP(5),STOPNME                                 0244
*          CALL TIME;                /*GO GET THE TIME AND PRINT IT  */
         BAL   @14,TIME                                            0245
*         END;                                             /*@Z427VLS*/
*  END;                                                    /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00008 DS    0H                                                  0248
@EF00008 DS    0H                                                  0248
@ER00008 LM    @14,@12,@SA00008                                    0248
         BR    @14                                                 0248
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL FREE ANY CORE SO I/O WILL HAVE MAX AVAIBLE     */
*/*    WHEN IT HAS TO READ IN ALL LOGREC RECORDS WRITTEN DURING EREP */
*/*    EXECUTION  (ANY CORE WE KNOW ABOUT )                  @Z427VLS*/
* FREECORE: PROC;                                          /*@Z427VLS*/
FREECORE STM   @14,@12,@SA00009                                    0249
*  RESPECIFY (R0,R1) RESTRICTED;                           /*@Z427VLS*/
* IF SORTNUM > ZERO THEN                                           0251
         L     @14,SORTNUM                                         0251
         SLR   @03,@03                                             0251
         CR    @14,@03                                             0251
         BNH   @RF00251                                            0251
*  DO;                                                     /*@Z427VLS*/
*  R1 = SORTADR;             /*SET WHERE THE CORE TO FREE IS AT      */
         L     R1,SORTADR                                          0253
*  R0 = SORTNUM * CHARLINE;  /*DETERMINE THE NUMBER OF BYTES IN CORE */
         LR    @05,@14                                             0254
         M     @04,CHARLINE                                        0254
         LR    R0,@05                                              0254
*  IF (R0 & '00000007'X) ^= ZERO   /*MUST BE ON DOUBLE WORD BOUNDRY  */
*    THEN                                                          0255
         LR    @14,R0                                              0255
         N     @14,@CF00593                                        0255
         CR    @14,@03                                             0255
         BE    @RF00255                                            0255
*      DO;                                                 /*@Z427VLS*/
*        R0 = (R0 & 'FFFFFFF8'X); /*DROP THE LOW ORDER BITS  @Z427VLS*/
         N     R0,@CF00594                                         0257
*        R0 = R0 + EIGHT;         /*ROUND UP AS FILTER DID IT        */
         AL    R0,@CF00063                                         0258
*      END;                                                /*@Z427VLS*/
*  GEN(FREEMAIN  R,LV=(0),A=(1)); /*GO FREE THE CORE FOR SDRCOUNTER  */
@RF00255 DS    0H                                                  0260
         FREEMAIN  R,LV=(0),A=(1)
*  END;                                                    /*@Z427VLS*/
* END;                                                     /*@Z427VLS*/
@EL00009 DS    0H                                                  0262
@EF00009 DS    0H                                                  0262
@ER00009 LM    @14,@12,@SA00009                                    0262
         BR    @14                                                 0262
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL PRINT THE CURRENT TIME                 @Z427VLS*/
*/*    SWITCH1 IS NEEDED SINCE I DON'T KNOW THE START TIME UNTILL    */
*/*    AFTER THE FIRST RECORD HAS BEEN READ IN AND THIS HAPPENS AFTER*/
*/*    THE PARM ROUTINE HAS COME AND GONE AND THEN WE FIND OUT THEY  */
*/*    WANTED THE START TIME AFTER THE FACT SO MUST DO IT EVEN THOUGH*/
*/*    IT MAY BE WASTED TIME                                 @Z427VLS*/
*/*                                                          @Z427VLS*/
*TIME: PROC;                                               /*@Z427VLS*/
TIME     STM   @14,@12,@SA00010                                    0263
*  GEN(TIME  DEC);                   /*GO AND GET THE CURRENT TIME   */
         TIME  DEC
*  TEMPSAVE = R0;                    /*STORE THE TIME VALUE  @Z427VLS*/
         ST    R0,TEMPSAVE                                         0265
*  NUMBER = FOUR;                    /*DO 4 BYTES OF DATA    @Z427VLS*/
         MVC   NUMBER(4),@CF00061                                  0266
*  NEXTBY = ADDR(TEMPSAVE);          /*SET UP WHERE THE DATA IS      */
         LA    @14,TEMPSAVE                                        0267
         ST    @14,NEXTBY                                          0267
*  ADDNXT = ADDR(CTIME);             /*SET UP WHERE TO PUT CONVERTED */
         LA    @14,CTIME                                           0268
         ST    @14,ADDNXT                                          0268
*  CALL CONVERT;                     /*GO CONVERT THE DATA TO PRINT  */
         BAL   @14,CONVERT                                         0269
*  IF SWITCH1 = OFF                  /*WILL BE OFF FIRST TIME THROUGH*/
*    THEN                                                          0270
         TM    SWITCH1,B'10000000'                                 0270
         BNZ   @RF00270                                            0270
*      SWITCH1 = ON ;                /*SET TO PRINT FROM NOW ON      */
         OI    SWITCH1,B'10000000'                                 0271
*    ELSE                                                          0272
*      DO;                                                 /*@Z427VLS*/
         B     @RC00270                                            0272
@RF00270 DS    0H                                                  0273
*        TIMEMESG = TIMEMES;         /*MOVE THE MESSAGE TO OUTPUT    */
         MVC   TIMEMESG(60),TIMEMES                                0273
*        CALL PRINTIT;               /*PRINT THE LINE NOW    @Z427VLS*/
         BAL   @14,PRINTIT                                         0274
*      END;                                                /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00010 DS    0H                                                  0276
@EF00010 DS    0H                                                  0276
@ER00010 LM    @14,@12,@SA00010                                    0276
         BR    @14                                                 0276
*/*******************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*/*    THIS PROC WILL DUMP THE SORT TABLE ONE ENTRY/LINE     @Z427VLS*/
*/*    THIS WILL BE CALLED AFTER EACH OF THE 4 FILTERS IFCFILT1-4    */
*/*    AS ONLY ONE ENTRY/LINE IS PRINTED A LARGE SORT TABLE WILL     */
*/*    CAUSE MUCH PRINTOUT                                   @Z427VLS*/
*/*                                                          @Z427VLS*/
*DUMP: PROC;                                               /*@Z427VLS*/
DUMP     STM   @14,@12,@SA00011                                    0277
*  NEXTBY = SORTADR;     /*SET ADDRESS OF THE SORT TABLE ITEM IS SET */
         L     @14,SORTADR                                         0278
         ST    @14,NEXTBY                                          0278
*                        /*BY WHICH EVER SORT TABLE WAS CALLED       */
*  NUMBER = CHARLINE;    /*ALLWAYS DO TEN BYTES AT A TIME    @Z427VLS*/
         L     @14,CHARLINE                                        0279
         ST    @14,NUMBER                                          0279
*  ADDNXT = ADDR(PRTLINE);/*SET UP ADDRESS OF WHERE TO PUT THE DATA  */
         LA    @14,PRTLINE                                         0280
         ST    @14,ADDNXT                                          0280
*  DO I = 1 BY 1 TO SORTNUM;/*PROCESS THE ENTIRE SORT TABLE  @Z427VLS*/
         LA    @14,1                                               0281
         ST    @14,I                                               0281
         B     @DE00281                                            0281
@DL00281 DS    0H                                                  0282
*  CALL CONVERT;         /*GO CHANGE TEN BYTES TO TWENTY IN PRINTABLE*/
         BAL   @14,CONVERT                                         0282
*  NEXTBY = NEXTBY + CHARLINE;                             /*@Z427VLS*/
         L     @14,NEXTBY                                          0283
         AL    @14,CHARLINE                                        0283
         ST    @14,NEXTBY                                          0283
*  CALL PRINTIT;         /*CALL PRINT IT AND PRINT THE DUMP  @Z427VLS*/
         BAL   @14,PRINTIT                                         0284
*  END;                                                    /*@Z427VLS*/
         LA    @14,1                                               0285
         AL    @14,I                                               0285
         ST    @14,I                                               0285
@DE00281 C     @14,SORTNUM                                         0285
         BNH   @DL00281                                            0285
*END;                                                      /*@Z427VLS*/
@EL00011 DS    0H                                                  0286
@EF00011 DS    0H                                                  0286
@ER00011 LM    @14,@12,@SA00011                                    0286
         BR    @14                                                 0286
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL CONVERT HEX DATA TO PRINTABLE          @Z427VLS*/
*/*    NO LIMIT TO THE NUMBER, THE ADD 1 TO THE REGS IS TO COMPENSATE*/
*/*    FOR THE 1 PLS TAKES AWAY                              @Z427VLS*/
*/*                                                          @Z427VLS*/
*CONVERT: PROC;                                            /*@Z427VLS*/
CONVERT  STM   @14,@12,12(@13)                                     0287
*  DO J = NUMBER BY -1 TO 1;            /*# = # OF BYTES TO CONVERT  */
         L     @14,NUMBER                                          0288
         ST    @14,J                                               0288
         B     @DE00288                                            0288
@DL00288 DS    0H                                                  0289
*    R8 = NEXTBYTE(J);                  /*LOAD NEXT BYTE TO CONVERT  */
         L     @03,NEXTBY                                          0289
         BCTR  @03,0                                               0289
         SLR   R8,R8                                               0289
         IC    R8,NEXTBYTE(@14,@03)                                0289
*    X = TWO * J;                       /*AS OUT IS TWICE IN NEED X  */
         LR    @03,@14                                             0290
         ALR   @03,@03                                             0290
         ST    @03,X                                               0290
*    SRDL (R8,FOUR);                    /*SPLIT THE BYTE IN HALF     */
         SRDL  R8,4                                                0291
*    SRL  (R9,TWOEIGHT);                /*POSITION THE BYTE CORRECT  */
         SRL   R9,28                                               0292
*    ADDNUM(X-ONE) = CHARS(R8+1);       /*PUT THE PRINT CHAR INTO OUT*/
         L     @11,ADDNXT                                          0293
         ALR   @03,@11                                             0293
         BCTR  @03,0                                               0293
         BCTR  @03,0                                               0293
         LA    @10,CHARS(R8)                                       0293
         MVC   ADDNUM(1,@03),0(@10)                                0293
*    ADDNUM(X)     = CHARS(R9+1);       /*PUT IN REST OF BYTE        */
         L     @03,X                                               0294
         ALR   @11,@03                                             0294
         BCTR  @11,0                                               0294
         LA    @03,CHARS(R9)                                       0294
         MVC   ADDNUM(1,@11),0(@03)                                0294
*  END;                                                    /*@Z427VLS*/
         BCTR  @14,0                                               0295
         ST    @14,J                                               0295
@DE00288 LTR   @14,@14                                             0295
         BP    @DL00288                                            0295
*END;                                                      /*@Z427VLS*/
@EL00012 DS    0H                                                  0296
@EF00012 DS    0H                                                  0296
@ER00012 LM    @14,@12,12(@13)                                     0296
         BR    @14                                                 0296
*/********************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **/
*/*    THIS PROC WILL DUMP THE COMM TABLE                    @Z427VLS*/
*/*                                                          @Z427VLS*/
*PARMDUMP: PROC;                                           /*@Z427VLS*/
PARMDUMP STM   @14,@12,@SA00013                                    0297
*  PRTLINE = BUG7;           /*MOVE THE DEBUG DISCRIPTION IN TO BUF*/
         MVI   PRTLINE+42,C' '                                     0298
         MVC   PRTLINE+43(89),PRTLINE+42                           0298
         MVC   PRTLINE(42),BUG7                                    0298
*  CALL PRINTIT;             /*TELL THAT DUMP IS AFTER PROCESSING  */
         BAL   @14,PRINTIT                                         0299
*  TEMPSAVE = ADDR(IFCEPARM) - ADDR(PARM); /*FIND THE LENGTH OF PARMS*/
         LA    @14,IFCEPARM                                        0300
         LA    @03,PARM                                            0300
         SLR   @14,@03                                             0300
         ST    @14,TEMPSAVE                                        0300
*  NUMBER = SIXSIX;                        /*SET CHARS TO 66 @Z427VLS*/
         LA    @14,66                                              0301
         ST    @14,NUMBER                                          0301
*  ADDNXT = ADDR(PRTLINE);                 /*ADDR OF PRINT LINE      */
         LA    @11,PRTLINE                                         0302
         ST    @11,ADDNXT                                          0302
*  NEXTBY = ADDR(PARM);                    /*ADD OF WHERE TO START   */
         ST    @03,NEXTBY                                          0303
*  DO I = 66 BY 66 TO TEMPSAVE ;                           /*@Z427VLS*/
         ST    @14,I                                               0304
         B     @DE00304                                            0304
@DL00304 DS    0H                                                  0305
*    CALL CONVERT;                         /*GO CONVERT TO PRINTABLE */
         BAL   @14,CONVERT                                         0305
*    NEXTBY = NEXTBY + SIXSIX;             /*MOVE WHERE DATA IS      */
         LA    @14,66                                              0306
         AL    @14,NEXTBY                                          0306
         ST    @14,NEXTBY                                          0306
*    CALL PRINTIT;                         /*PRINT LINE OF HEX DATA  */
         BAL   @14,PRINTIT                                         0307
*  END;                                                    /*@Z427VLS*/
         LA    @14,66                                              0308
         AL    @14,I                                               0308
         ST    @14,I                                               0308
@DE00304 C     @14,TEMPSAVE                                        0308
         BNH   @DL00304                                            0308
*  NUMBER = TEMPSAVE - (I - SIXSIX);       /*PICK UP ANY OVER FLOW   */
         LA    @14,66                                              0309
         SL    @14,I                                               0309
         AL    @14,TEMPSAVE                                        0309
         ST    @14,NUMBER                                          0309
*  IF NUMBER > ZERO                                                0310
*    THEN                                                          0310
         LTR   @14,@14                                             0310
         BNP   @RF00310                                            0310
*      DO;                                                 /*@Z427VLS*/
*       CALL CONVERT;                      /*CONVERT THE LEFTOVER    */
         BAL   @14,CONVERT                                         0312
*       CALL PRINTIT;                      /*PRINT THE LEFTOVER      */
         BAL   @14,PRINTIT                                         0313
*      END;                                                /*@Z427VLS*/
*END;                                                      /*@Z427VLS*/
@EL00013 DS    0H                                                  0315
@EF00013 DS    0H                                                  0315
@ER00013 LM    @14,@12,@SA00013                                    0315
         BR    @14                                                 0315
@PB00013 DS    0H                                                  0316
*/*******************************************************************/
*/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
*/*    THIS IS THE CONTROL ROUTINE FOR EREP1                 @Z427VLS*/
*/*                                                          @Z427VLS*/
*R2 = ADDR(PARM);                       /*LOAD ADDRESS OF PARM TABLE */
         LA    R2,PARM                                             0316
*SAVER1 = R1;                           /*CALL TO I/O WILL ZAP R1    */
         ST    R1,SAVER1                                           0317
*CALL IOHND(IOOPEN);                 /*WILL OPEN THE TOURIST DATA */
         L     @15,ADIOHND                                         0318
         LA    @01,@AL00318                                        0318
         BALR  @14,@15                                             0318
*IF R15 = ZERO THEN                     /*IF NOT I/O FAILED ON OPEN  */
         LTR   R15,R15                                             0319
         BNZ   @RF00319                                            0319
*DO;                                                       /*@Z427VLS*/
* CALL TIME;                            /*GO AND GET TIME NO PRINT   */
         BAL   @14,TIME                                            0321
* R1 = SAVER1;           /* RESTORE POINTER TO JCL           @0001VLS*/
         L     R1,SAVER1                                           0322
* GEN(LINK  EPLOC=IFCEPARM);            /*LET THE PARM ROUTINE IN    */
         LINK  EPLOC=IFCEPARM
* IF R15 = ZERO THEN                    /*DID PARM'S  LIVE OR DIE    */
         LTR   R15,R15                                             0324
         BNZ   @RF00324                                            0324
* DO;                                                      /*@Z427VLS*/
* IF DEBUG4 = ON                        /*DO THEY WANT THE TIME      */
*  THEN                                                            0326
         TM    DEBUG4,B'00001000'                                  0326
         BNO   @RF00326                                            0326
*   DO;                                                    /*@Z427VLS*/
*    R15 = R12 - 27;                    /*SET UP THE ADDRESS OF DATE */
         LR    R15,R12                                             0328
         SL    R15,@CF00612                                        0328
*    GEN(MVC  PRTLINE(16),0(R15));                         /*@Z427VLS*/
         MVC  PRTLINE(16),0(R15)
*    R15 = ADDR(IFCIOHND);                                 /*@Z427VLS*/
         L     R15,@CV00294                                        0330
*    GEN(MVC  PRTLINE+20(16),5(R15));                      /*@Z427VLS*/
         MVC  PRTLINE+20(16),5(R15)
*    R15 = ADDR(IFCMSG01);                                 /*@Z427VLS*/
         L     R15,@CV00295                                        0332
*    GEN(MVC  PRTLINE+40(16),5(R15));                      /*@Z427VLS*/
         MVC  PRTLINE+40(16),5(R15)
*    CALL PRINTIT;                                         /*@Z427VLS*/
         BAL   @14,PRINTIT                                         0334
*    TIMEMESG = TIMEMES;                /*SET UP THE TIME    @Z427VLS*/
         MVC   TIMEMESG(60),TIMEMES                                0335
*    R15 = ZERO;                                           /*@Z427VLS*/
         SLR   R15,R15                                             0336
*    CALL PRINTIT;                      /*PRINT LINE WAS SET UP EARLY*/
         BAL   @14,PRINTIT                                         0337
*                                       /*HAD TO SET START TIME PRIOR*/
*                                       /*LINK AS DIDN'T KNOW IF WANT*/
*    STARSTOP = STOPNME;                /*SET MESSAGE TO STOP TIME   */
         MVC   STARSTOP(5),STOPNME                                 0338
*    CALL TIME;                         /*GET AND PRINT THE TIME     */
         BAL   @14,TIME                                            0339
*   END;                                                   /*@Z427VLS*/
*  IF SYSUM   = ON                      /*IS SYSTEM SUMMARY REQUESTED*/
*   THEN                                                           0341
@RF00326 TM    SYSUM,B'00000100'                                   0341
         BNO   @RF00341                                            0341
*    CALL DOSYSSUM;                     /*CALL PROC TO DD SYSTEM SUM */
         BAL   @14,DOSYSSUM                                        0342
*   ELSE                                                           0343
*    IF TREND = ON                      /*DO THEY WANT TO DO TREND   */
*     THEN                                                         0343
         B     @RC00341                                            0343
@RF00341 TM    TREND,B'00010000'                                   0343
         BNO   @RF00343                                            0343
*      CALL DOTREND;                    /*CALL PROC TO DO TREND      */
         BAL   @14,DOTREND                                         0344
*     ELSE                                                         0345
*      IF TIMESEQ = ON                  /*WAS EVENT HISTORY ASKED FOR*/
*       THEN                                                       0345
         B     @RC00343                                            0345
@RF00343 TM    TIMESEQ,B'00000010'                                 0345
         BNO   @RF00345                                            0345
*        CALL DOEVENT;                  /*CALL PROC TO DO EVENT      */
         BAL   @14,DOEVENT                                         0346
*       ELSE                                                       0347
*        IF RDESUM = ON                 /*WAS RDESUM ASKED FOR       */
*         THEN                                                     0347
         B     @RC00345                                            0347
@RF00345 TM    RDESUM,B'10000000'                                  0347
         BNO   @RF00347                                            0347
*          CALL DORDESUM;               /*CALL PROC TO DO RDESUM     */
         BAL   @14,DORDESUM                                        0348
*         ELSE                                                     0349
*          IF PARMMES = ON              /*WAS MES/THRESHOLD  @Z427VLS*/
*           THEN                                                   0349
         B     @RC00347                                            0349
@RF00347 TM    PARMMES,B'01000000'                                 0349
         BNO   @RF00349                                            0349
*            CALL DOMES;                /*CALL PROC TO DO MES        */
         BAL   @14,DOMES                                           0350
*           ELSE                                                   0351
*            CALL DONORMAL;             /*DO NORMAL EDIT & SUMMRY    */
         B     @RC00349                                            0351
@RF00349 BAL   @14,DONORMAL                                        0351
*  END;                                                    /*@Z427VLS*/
@RC00349 DS    0H                                                  0352
@RC00347 DS    0H                                                  0352
@RC00345 DS    0H                                                  0352
@RC00343 DS    0H                                                  0352
@RC00341 DS    0H                                                  0353
*  IF DEBUG7 = ON                       /*DO WE DUMP THE PARM TABLES */
*   THEN                                                           0353
@RF00324 TM    DEBUG7,B'00000001'                                  0353
         BNO   @RF00353                                            0353
*    CALL PARMDUMP;                     /*GO & DUMP THE PARM TABLE   */
         BAL   @14,PARMDUMP                                        0354
*  IF ZEROALL = ON                      /*IF TRUE MAKE ALL CORE FREE */
*   THEN                                                           0355
@RF00353 TM    ZEROALL,B'01000000'                                 0355
         BNO   @RF00355                                            0355
*    CALL FREECORE;                                        /*@Z427VLS*/
         BAL   @14,FREECORE                                        0356
*  CLOSEIO = 'FFFF'X;                   /*SET TO CLOSE ALL DATA SETS */
@RF00355 MVC   CLOSEIO(2),@CB00259                                 0357
*  CALL IOHND(IOCLOSE);              /*CLOSE ANY OPEN DATA SETS   */
         L     @15,ADIOHND                                         0358
         LA    @01,@AL00358                                        0358
         BALR  @14,@15                                             0358
*  IF DEBUG30 = ON                   /*CAUSE A DUMP JUST FOR TEST    */
*    THEN                                                          0359
         TM    DEBUG30,B'00000010'                                 0359
         BNO   @RF00359                                            0359
*      GEN(ABEND  828,DUMP);                               /*@Z427VLS*/
         ABEND  828,DUMP
*     R15 = SYSRETRN;                                      /*@ZA25584*/
@RF00359 SLR   R15,R15                                             0361
         IC    R15,SYSRETRN                                        0361
* END;                                                     /*@Z427VLS*/
* END                                                      /*@Z427VLS*/
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (COMTABLE)                                        *
*;                                                                 0363
@EL00001 L     @13,4(,@13)                                         0363
@EF00001 DS    0H                                                  0363
@ER00001 L     @14,12(,@13)                                        0363
         LM    @00,@12,20(@13)                                     0363
         BR    @14                                                 0363
@DATA    DS    0H
@CH00052 DC    H'1'
@CH00071 DC    H'2'
@CH00080 DC    H'7'
         DS    0F
@AL00090 DC    A(@CH00071)             LIST WITH   1 ARGUMENT(S)
@AL00318 DC    A(@CH00052)             LIST WITH   1 ARGUMENT(S)
@AL00358 DC    A(@CH00080)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@SA00002 DS    15F
@SA00003 DS    15F
@SA00010 DS    15F
@SA00011 DS    15F
@SA00004 DS    15F
@SA00005 DS    15F
@SA00006 DS    15F
@SA00007 DS    15F
@SA00008 DS    15F
@SA00009 DS    15F
@SA00013 DS    15F
         DS    0F
@CF00061 DC    F'4'
@CF00063 DC    F'8'
@CF00272 DC    F'10'
@CF00588 DC    F'13'
@CF00583 DC    F'14'
@CF00612 DC    F'27'
@CF00593 DC    XL4'00000007'
@CF00594 DC    XL4'FFFFFFF8'
@CV00294 DC    V(IFCIOHND)
@CV00295 DC    V(IFCMSG01)
         DS    0D
NEXTBY   DC    F'0'
ADDNXT   DC    F'0'
SAVER1   DC    F'0'
I        DC    F'0'
J        DC    F'0'
X        DC    F'0'
NUMBER   DC    F'0'
TEMPSAVE DC    F'0'
CHARLINE DC    F'10'
@CB00259 DC    X'FFFF'
         DS    CL2
PARM     DS    CL328
         ORG   PARM
RECTYPE  DC    X'FFE0'
         ORG   RECTYPE
PMCH     DS    BL1
PCHAN    EQU   RECTYPE+0
POBR     EQU   RECTYPE+0
PSOFT    EQU   RECTYPE+0
PIPL     EQU   RECTYPE+0
PDDR     EQU   RECTYPE+0
PMIH     EQU   RECTYPE+0
PEOD     EQU   RECTYPE+0
PTTYP    DS    BL1
PMCHFRAM EQU   RECTYPE+1
PCCHFRAM EQU   RECTYPE+1
         ORG   PARM+2
SWITCHES DC    X'0100'
         ORG   SWITCHES
RDESUM   DS    BL1
PARMMES  EQU   SWITCHES+0
SHORTOBR EQU   SWITCHES+0
TREND    EQU   SWITCHES+0
PARMTHR  EQU   SWITCHES+0
SYSUM    EQU   SWITCHES+0
TIMESEQ  EQU   SWITCHES+0
NOSDR    EQU   SWITCHES+0
NOTALL   DS    BL1
ZEROALL  EQU   SWITCHES+1
DEVEXCL  EQU   SWITCHES+1
SHIFT3RD EQU   SWITCHES+1
ANALYSIS EQU   SWITCHES+1
COREFAIL EQU   SWITCHES+1
SORTBRK  EQU   SWITCHES+1
         ORG   PARM+4
DEBUG    DC    X'00000000'
         ORG   DEBUG
DEBUG0   DS    BL1
DEBUG1   EQU   DEBUG+0
DEBUG2   EQU   DEBUG+0
DEBUG3   EQU   DEBUG+0
DEBUG4   EQU   DEBUG+0
DEBUG5   EQU   DEBUG+0
DEBUG6   EQU   DEBUG+0
DEBUG7   EQU   DEBUG+0
DEBUG8   DS    BL1
DEBUG9   EQU   DEBUG+1
DEBUG10  EQU   DEBUG+1
DEBUG11  EQU   DEBUG+1
DEBUG12  EQU   DEBUG+1
DEBUG13  EQU   DEBUG+1
DEBUG14  EQU   DEBUG+1
DEBUG15  EQU   DEBUG+1
DEBUG16  DS    BL1
DEBUG17  EQU   DEBUG+2
DEBUG18  EQU   DEBUG+2
DEBUG19  EQU   DEBUG+2
DEBUG20  EQU   DEBUG+2
DEBUG21  EQU   DEBUG+2
DEBUG22  EQU   DEBUG+2
DEBUG23  EQU   DEBUG+2
DEBUG24  DS    BL1
DEBUG25  EQU   DEBUG+3
DEBUG26  EQU   DEBUG+3
DEBUG27  EQU   DEBUG+3
DEBUG28  EQU   DEBUG+3
DEBUG29  EQU   DEBUG+3
DEBUG30  EQU   DEBUG+3
DEBUG31  EQU   DEBUG+3
         ORG   PARM+8
DEBUGA   DC    X'00000000'
         ORG   DEBUGA
DEBUG32  DS    BL1
DEBUG33  EQU   DEBUGA+0
DEBUG34  EQU   DEBUGA+0
DEBUG35  EQU   DEBUGA+0
DEBUG36  EQU   DEBUGA+0
DEBUG37  EQU   DEBUGA+0
DEBUG38  EQU   DEBUGA+0
DEBUG39  EQU   DEBUGA+0
DEBUG40  DS    BL1
DEBUG41  EQU   DEBUGA+1
DEBUG42  EQU   DEBUGA+1
DEBUG43  EQU   DEBUGA+1
DEBUG44  EQU   DEBUGA+1
DEBUG45  EQU   DEBUGA+1
DEBUG46  EQU   DEBUGA+1
DEBUG47  EQU   DEBUGA+1
DEBUG48  DS    BL1
DEBUG49  EQU   DEBUGA+2
DEBUG50  EQU   DEBUGA+2
DEBUG51  EQU   DEBUGA+2
DEBUG52  EQU   DEBUGA+2
DEBUG53  EQU   DEBUGA+2
DEBUG54  EQU   DEBUGA+2
DEBUG55  EQU   DEBUGA+2
DEBUG56  DS    BL1
DEBUG57  EQU   DEBUGA+3
DEBUG58  EQU   DEBUGA+3
DEBUG59  EQU   DEBUGA+3
DEBUG60  EQU   DEBUGA+3
DEBUG61  EQU   DEBUGA+3
DEBUG62  EQU   DEBUGA+3
DEBUG63  EQU   DEBUGA+3
         ORG   PARM+12
MISC     DC    X'4A'
         ORG   MISC
PZERO    DS    BL1
PACC     EQU   MISC+0
PHIST    EQU   MISC+0
PRINTES  EQU   MISC+0
         ORG   PRINTES
PEDIT    EQU   PRINTES+0
PSUM     EQU   PRINTES+0
         ORG   MISC+0
ERRORID  EQU   MISC+0
PLOGREC  EQU   MISC+0
PASSFLAG EQU   MISC+0
         ORG   PARM+13
OPENCLSE DS    CL4
         ORG   OPENCLSE
OPENIO   DC    X'8000'
         ORG   OPENIO
OTOURIST DS    BL1
OEREPPT  EQU   OPENIO+0
OSERLOG  EQU   OPENIO+0
OACCIN   EQU   OPENIO+0
OACCDEV  EQU   OPENIO+0
OSYSIN   EQU   OPENIO+0
ODRCTWRK EQU   OPENIO+0
OSNAP    EQU   OPENIO+0
         ORG   OPENCLSE+2
CLOSEIO  DC    X'0000'
         ORG   CLOSEIO
CTOURIST DS    BL1
CEREPPT  EQU   CLOSEIO+0
CSERLOG  EQU   CLOSEIO+0
CACCIN   EQU   CLOSEIO+0
CACCDEV  EQU   CLOSEIO+0
CSYSIN   EQU   CLOSEIO+0
CDRCTWRK EQU   CLOSEIO+0
CSNAP    EQU   CLOSEIO+0
         ORG   PARM+17
DATENOW  DC    CL6' '
         ORG   DATENOW
DAYNOW   DS    CL3
@NM00001 DS    CL1
YEARNOW  DS    CL2
         ORG   PARM+23
STDT     DS    CL8
         ORG   STDT
STDATE   DS    CL4
         ORG   STDATE
@NM00002 DC    X'00'
PSTD     DC    X'00000F'
         ORG   PSTD
PSTYR    DS    BL1
PSTDY    DS    BL2
         ORG   STDT+4
@NM00003 DC    X'00000000'
         ORG   PARM+31
ENDDT    DS    CL8
         ORG   ENDDT
ENDDATE  DS    CL4
         ORG   ENDDATE
@NM00004 DC    X'7F'
PEND     DC    X'FFFFFF'
         ORG   PEND
PENYR    DS    BL1
PENDY    DS    BL2
         ORG   ENDDT+4
@NM00005 DC    X'24000000'
         ORG   PARM+39
STTIME1  DC    X'00000000'
         ORG   STTIME1
PSTHOUR1 DS    BL1
PSTMIN1  DS    BL1
PSTSEC1  DS    BL1
         ORG   PARM+43
ENDTIME1 DC    X'24000000'
         ORG   ENDTIME1
PENHOUR1 DS    BL1
PENMIN1  DS    BL1
PENSEC1  DS    BL1
         ORG   PARM+47
STTIME2  DC    X'00000000'
         ORG   STTIME2
PSTHOUR2 DS    BL1
PSTMIN2  DS    BL1
PSTSEC2  DS    BL1
         ORG   PARM+51
ENDTIME2 DC    X'24000000'
         ORG   ENDTIME2
PENHOUR2 DS    BL1
PENMIN2  DS    BL1
PENSEC2  DS    BL1
         ORG   PARM+55
STRTDATE DS    CL3
         ORG   STRTDATE
EVSYEAR  DC    X'7F'
EVSDAY   DC    X'FFFF'
         ORG   PARM+58
TERM     DC    CL8' '
RDTHRSH  DC    CL3'000'
WRTHRSH  DC    CL3'000'
@NM00006 DC    CL3'000'
@NM00007 DC    CL3'000'
         ORG   @NM00007
SYSRETRN DC    X'00'
         ORG   PARM+80
TABSIZE  DC    XL4'00006000'
SORTNUM  DC    F'0'
NUMDAYS  DC    F'0'
ERRID    DS    CL10
         ORG   ERRID
IDVALUE  DC    X'0000'
@NM00008 DC    X'00'
IDCPU    DC    X'FF'
IDASID   DC    X'0000'
IDTIMEA  DS    CL4
         ORG   IDTIMEA
IDTIME   DS    CL4
         ORG   IDTIME
IDHOUR   DC    XL1'00'
IDMIN    DC    XL1'00'
IDSEC    DC    XL1'00'
IDTSEC   DC    XL1'00'
         ORG   PARM+102
USERPGM  DC    CL8' '
         DS    CL2
CCHHRLNG DS    CL8
         ORG   CCHHRLNG
RECCCHHR DC    X'0000000000'
@NM00009 DS    CL1
RECLNGTH DC    H'0'
         ORG   PARM+120
LINECT   DC    H'50'
         DS    CL2
ADIOHND  DC    VL4(IFCIOHND)
ADIFCMSG DC    VL4(IFCMSG01)
ADEDITB  DC    A(0)
EVPTR    DC    A(0)
SORTADR  DC    A(0)
ADCPUT   DC    A(0)
PRINTADR DC    A(0)
CUAPTR   DC    A(0)
DEVPTR   DC    A(0)
MODPTR   DC    A(0)
SERPTR   DC    A(0)
VOLPTR   DC    A(0)
CPUPTR   DC    A(0)
CPCUAPTR DC    A(0)
LIBADPTR DC    A(0)
SYMCDPTR DC    A(0)
SYSUMPTR DC    A(0)
TRENPTR  DC    A(0)
SHAREPTR DC    A(0)
FRAMEPTR DC    A(0)
RECLNGT1 DC    F'0'
MERDCPTR DC    AL4(NEWCPU)
@NM00010 DC    A(0)
         DS    3XL4
DUMPTABL DS    CL100
         ORG   DUMPTABL
DUMPNUM  DC    H'1'
         DS    CL2
DUMPINFO DS    CL8
         ORG   DUMPINFO+0
DUMPADR  DC    F'0'
DUMPSIZE DC    F'0'
         ORG   PARM+328
NEWCPU   DS    CL8
         ORG   NEWCPU
MRDNUMBR DC    H'3'
MODEL    DC    X'3033'
         DC    X'3032'
         DC    X'3031'
         ORG   NEWCPU+8
IFCEPARM DC    CL8'IFCEPARM'
IFCFILT1 DC    CL8'IFCFILT1'
IFCFILT2 DC    CL8'IFCFILT2'
IFCFILT3 DC    CL8'IFCFILT3'
IFCFILT4 DC    CL8'IFCFILT4'
IFCSYSUM DC    CL8'IFCSYSUM'
IFCTREND DC    CL8'IFCTREND'
IFCEVENT DC    CL8'IFCEVENT'
IFCEDSUM DC    CL8'IFCEDSUM'
IFCMES01 DC    CL8'IFCMES01'
IFCRDESM DC    CL8'IFCRDESM'
IFCTHRSH DC    CL8'IFCTHRSH'
TIMEMES  DC    CL60' '
         ORG   TIMEMES
@NM00012 DC    CL8'DEBUG4  '
STARSTOP DC    CL5'START'
@NM00013 DC    CL17' TIME OF PROGRAM '
PNAME    DC    CL8'IFCEPARM'
@NM00014 DC    CL4' IS '
CTIME    DC    CL8'        '
         ORG   TIMEMES+60
BUG7     DC    CL42'DEBUG7 COMMUNIATION TABLE AFTER PROCESSING'
STOPNME  DC    CL5'STOP '
STARTNME DC    CL5'START'
PRINTLIN DS    CL134
         ORG   PRINTLIN
DDTYPE   DC    CL1'1'
CCONTROL DC    CL1'1'
PRTLINE  DC    CL132' '
         ORG   PRINTLIN+134
SWITCH1  DC    B'00000000'
TEMPBUF  DC    CL60' '
SUPERZAP DC    3CL10'SUPERZAP'
CHARS    DC    CL1'0'
         DC    CL1'1'
         DC    CL1'2'
         DC    CL1'3'
         DC    CL1'4'
         DC    CL1'5'
         DC    CL1'6'
         DC    CL1'7'
         DC    CL1'8'
         DC    CL1'9'
         DC    CL1'A'
         DC    CL1'B'
         DC    CL1'C'
         DC    CL1'D'
         DC    CL1'E'
         DC    CL1'F'
         DS    CL3
PATCH    DC    30F'0'
IFCEREP1 CSECT
         DC    S(SUPERZAP)
IFCEREP1 CSECT
         ENTRY PARM
IFCEREP1 CSECT
    DC  S(PATCH)     SET THE ADDRESSABILITY FOR THR PATCH AREA
IFCEREP1 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R8       EQU   @08
R9       EQU   @09
R12      EQU   @12
R15      EQU   @15
R10      EQU   @10
R11      EQU   @11
R13      EQU   @13
R14      EQU   @14
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
IOHND    EQU   0
TRENDONE EQU   0
TREGEN   EQU   TRENDONE+8
TRECCH0  EQU   TREGEN+8
TREND2   EQU   0
TRENDKEY EQU   TREND2
TRENDRT  EQU   TRENDKEY+1
TRENCPUS EQU   TRENDKEY+3
TRENDITM EQU   TRENDKEY+4
EVTABLE  EQU   0
EVSTOP   EQU   EVTABLE
EVKEY    EQU   EVTABLE+6
SORTABLE EQU   0
SORTKEY  EQU   SORTABLE
SORTCCHR EQU   SORTABLE+5
SYSUMONE EQU   0
SYSUM2   EQU   0
SYSUMKEY EQU   SYSUM2
SYSRT    EQU   SYSUMKEY+1
SYSCPUS  EQU   SYSUMKEY+3
SYSITEM  EQU   SYSUMKEY+4
SHARE    EQU   0
SHAREIO  EQU   SHARE+2
SHRCUCPU EQU   SHAREIO
SHARECUA EQU   SHRCUCPU
EDITLOAD EQU   0
EDITABLE EQU   EDITLOAD+4
CUA      EQU   0
CUAVAL   EQU   CUA+2
DEVICE   EQU   0
MODELS   EQU   0
DEVSERAL EQU   0
VOLUME   EQU   0
CPUS     EQU   0
CPUCUAS  EQU   0
CPUCUAV  EQU   CPUCUAS+2
LIBADR   EQU   0
SYMCODE  EQU   0
SYMVAL   EQU   SYMCODE+2
NEXTBYTE EQU   0
ADDNUM   EQU   0
IFCMSG   EQU   0
TIMEMESG EQU   PRTLINE
TRECCH   EQU   TRECCH0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
SYMVAL2  EQU   SYMVAL+2
SYMVAL1  EQU   SYMVAL
SYMCDNUM EQU   SYMCODE
LIBVAL   EQU   LIBADR+2
LIBADNUM EQU   LIBADR
CPUCUX3  EQU   CPUCUAV+5
CPUCUX2  EQU   CPUCUAV+3
CPUCUX1  EQU   CPUCUAV
CPCUANUM EQU   CPUCUAS
CPUVAL   EQU   CPUS+2
CPUNUM   EQU   CPUS
VOLVAL   EQU   VOLUME+2
VOLNUM   EQU   VOLUME
SERVAL   EQU   DEVSERAL+2
SERNUM   EQU   DEVSERAL
MODVAL   EQU   MODELS+2
MODNUM   EQU   MODELS
MDRVAL   EQU   DEVICE+204
MDRNUM   EQU   DEVICE+202
DEVVAL   EQU   DEVICE+2
DEVNUM   EQU   DEVICE
CUA2     EQU   CUAVAL+2
CUA1     EQU   CUAVAL
CUANUM   EQU   CUA
LOADPTR  EQU   EDITABLE+8
LOADNAME EQU   EDITABLE
EDITNUM  EQU   EDITLOAD
SHARLET  EQU   SHAREIO+10
SHARSERB EQU   SHAREIO+7
SHARECUB EQU   SHAREIO+5
SHARSERA EQU   SHRCUCPU+2
SHAREDX  EQU   SHARECUA
SHARENUM EQU   SHARE
SYSTEMP  EQU   SYSUM2+9
SYSPERM  EQU   SYSUM2+7
SYSDEV   EQU   SYSUM2+5
SYSOLDA  EQU   SYSITEM
SYS3705  EQU   SYSITEM
SYSOLD   EQU   SYSCPUS
SYSCPU   EQU   SYSCPUS
SYSCUA   EQU   SYSRT
SYSGROUP EQU   SYSUMKEY
SYSUMEOD EQU   SYSUMONE+96
SYSUMPER EQU   SYSUMONE+92
SYSUMPEA EQU   SYSUMONE+88
SYSUMPEI EQU   SYSUMONE+84
SYSUMCH  EQU   SYSUMONE+20
SYSUMMCN EQU   SYSUMONE+16
SYSUMMCR EQU   SYSUMONE+12
SYSUMNXT EQU   SYSUMONE+8
SYSUMIPL EQU   SYSUMONE+4
SYSUMNUM EQU   SYSUMONE
SORTCORE EQU   SORTCCHR
SORTTIME EQU   SORTKEY+1
SORTYEAR EQU   SORTKEY
EVLETTER EQU   EVKEY+5
EVSERIAL EQU   EVKEY+2
EVMODEL  EQU   EVKEY
EVNUM    EQU   EVTABLE+4
EVDAY    EQU   EVSTOP+1
EVYEAR   EQU   EVSTOP
TRETMP   EQU   TREND2+10
TREPRM   EQU   TREND2+8
TRENDDEV EQU   TREND2+6
TRENDDAT EQU   TRENDKEY+5
TRENDOD  EQU   TRENDITM
TREND037 EQU   TRENDITM
TRENDOLD EQU   TRENCPUS
TRENDCPU EQU   TRENCPUS
@NM00011 EQU   TRENDRT+1
TRENDCUA EQU   TRENDRT
TRENDGRP EQU   TRENDKEY
TREPRE   EQU   TREGEN+72
TRECCHF  EQU   TREGEN+68
TRECCHE  EQU   TREGEN+64
TRECCHD  EQU   TREGEN+60
TRECCHC  EQU   TREGEN+56
TRECCHB  EQU   TREGEN+52
TRECCHA  EQU   TREGEN+48
TRECCH9  EQU   TREGEN+44
TRECCH8  EQU   TREGEN+40
TRECCH7  EQU   TREGEN+36
TRECCH6  EQU   TREGEN+32
TRECCH5  EQU   TREGEN+28
TRECCH4  EQU   TREGEN+24
TRECCH3  EQU   TREGEN+20
TRECCH2  EQU   TREGEN+16
TRECCH1  EQU   TREGEN+12
TREMCH   EQU   TREGEN+4
TREIPL   EQU   TREGEN
TRENUM   EQU   TRENDONE+4
TRENEXT  EQU   TRENDONE
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00101 EQU   @EL00003
@RF00117 EQU   @EL00003
@RF00134 EQU   @EL00004
@RF00148 EQU   @EL00005
@RF00162 EQU   @EL00006
@RF00178 EQU   @EL00006
@RF00194 EQU   @EL00007
@RF00210 EQU   @EL00007
@RF00226 EQU   @EL00008
@RF00242 EQU   @EL00008
@RF00251 EQU   @EL00009
@RC00270 EQU   @EL00010
@PB00012 EQU   @PB00013
@RF00310 EQU   @EL00013
@RF00319 EQU   @EL00001
@PB00011 EQU   @PB00012
@PB00010 EQU   @PB00011
@PB00009 EQU   @PB00010
@PB00008 EQU   @PB00009
@PB00007 EQU   @PB00008
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IFCEREP1,(C'PLS0043',0701,77315)
