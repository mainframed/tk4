       TITLE   'IFCETRN3 FOR EREP SUPPORT OF 3705/27RN'
         EJECT
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000)
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         EJECT
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         AIF   (&NRENTS EQ 0).NORENTS   TEST FOR NO COUNT
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
.NORENTS ANOP
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         EJECT
         MACRO
         BIN
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLC  &DSECT
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         EJECT
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLC &LABELS(2000)
         GBLA  &LBLCTR(100)
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &NDX,&CTR
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         EJECT
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &NRENTS
         GBLC  &DSECT,&CSECT
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         EJECT
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
         MACRO
         HEX
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(1000),&DSECT
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
         MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         EJECT
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR,&INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         EJECT
         GBLC  &CSECT,&DSECT
IFCETRN3 CSECT
&CSECT   SETC  'IFCETRN3'
&DSECT   SETC  'C3705'
C3705    DSECT
         DS    0F
         DSGEN (RECT,8),(OPSYS,8),(SWITCH,24),(RCDID,8),(SPARE1,16)
         DSGEN (DATE,32),(TIME,32)
         DSGEN (SPARE2,8),(CPUSER,24),(MODEL,16),(SPARE3,16)
         DSGEN (CUA,16),(TERMN1,16),(TERMN2,32)
         DSGEN (TERMN3,16),(RESID,16),(LINEADD,16),(RECMD,8),(RECID,8)
         DSGEN (ISBOX,8),(BTUMOD,8),(REG100,1),(REG101,1),(REG102,1),  C
               (REG103,1),(REG104,1),(REG105,1),(REG106,1),(REG107,1), C
               (REG108,1),(REG109,1),(REG110,1),(REG111,1),(REG112,1), C
               (REG113,1),(REG114,1),(REG115,1),(REG200,1),(REG201,1), C
               (REG202,1),(REG203,1),(REG204,1),(REG205,1),(REG206,1), C
               (REG207,1),(REG208,1),(REG209,1),(REG210,1),(REG211,1), C
               (REG212,1),(REG213,1),(REG214,1),(REG215,1),(REG300,1), C
               (REG301,1),(REG302,1),(REG303,1),(REG304,1),(REG305,1), C
               (REG306,1),(REG307,1),(REG308,1),(REG309,1),(REG310,1), C
               (REG311,1),(REG312,1),(REG313,1),(REG314,1),(REG315,1)
         DSGEN (REG400,1),(REG401,1),(REG402,1),(REG403,1),(REG404,1), C
               (REG405,1),(REG406,1),(REG407,1),(REG408,1),(REG409,1), C
               (REG410,1),(REG411,1),(REG412,1),(REG413,1),(REG414,1), C
               (REG415,1),(REG500,1),(REG501,1),(REG502,1),(REG503,1), C
               (REG504,1),(REG505,1),(REG506,1),(REG507,1),(REG508,1), C
               (REG509,1),(REG510,1),(REG511,1),(REG512,1),(REG513,1), C
               (REG514,1),(REG515,1)
         DSGEN (REG600,1),(REG601,1),(REG602,1),(REG603,1),(REG604,1), C
               (REG605,1),(REG606,1),(REG607,1),(REG608,1),(REG609,1), C
               (REG610,1),(REG611,1),(REG612,1),(REG613,1),(REG614,1), C
               (REG615,1),(REG700,1),(REG701,1),(REG702,1),(REG703,1), C
               (REG704,1),(REG705,1),(REG706,1),(REG707,1),(REG708,1), C
               (REG709,1),(REG710,1),(REG711,1),(REG712,1),(REG713,1), C
               (REG714,1),(REG715,1)
         DSGEN (REG800,1),(REG801,1),(REG802,1),(REG803,1),(REG804,1), C
               (REG805,1),(REG806,1),(REG807,1),(REG808,1),(REG809,1), C
               (REG810,1),(REG811,1),(REG812,1),(REG813,1),(REG814,1), C
               (REG815,1),(REG900,1),(REG901,1),(REG902,1),(REG903,1), C
               (REG904,1),(REG905,1),(REG906,1),(REG907,1),(REG908,1), C
               (REG909,1),(REG910,1),(REG911,1),(REG912,1),(REG913,1), C
               (REG914,1),(REG915,1)
*
IFCETRN3 CSECT
         USING *,R9
         USING C3705,R2
*
*        CONSTANTS
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
L0       EQU   0
L1       EQU   1
L4       EQU   4
L8       EQU   8
L19      EQU   19
L3       EQU   3
L17      EQU   17
         SPACE 3
         DC    A(ENTRIES)
         DC    CL8'IFCETRN3'
XR9PTR   DC    F'0'
XLABELP  DC    F'0'
XSAVE    DC    F'0'
         SPACE 3
H00      EQU   X'00'
H01      EQU   X'01'
H02      EQU   X'02'                                           @Z40BICF
H03      EQU   X'03'
         EJECT
***********************************************************************
**                           SPECIAL ROUTINES                        **
***********************************************************************
CHKREC   MVC   L0(L19,R3),CHKMSG   MOVE MESSAGE INTO LINE
         ST    R6,XSAVE            SAVE REGS
         XR    R6,R6               CLEAR REG 6
         IC    R6,BTUMOD           GET LOST CK REC CNT
         CVD   R6,LCRCNT           CONVERT COUNT TO DECIMAL
         UNPK  L17(L3,R3),LCRCNT   UNPACK LOST CK REC CNT
         OI    L19(R3),X'F0'       SET ZONE FOR LAST DIGIT
         L     R6,XSAVE            RESTORE REG 6
         BR    R14
CHKMSG   DC    C'LOST CK REC CNT    '
LCRCNT   DS    D
         SPACE 3
CHK2     TM    REG114,H02
         BNOR  R14
         XR    R15,R15
         BR    R14
         SPACE 3
CHK3     TM    REG114,H02
         BOR   R14
         XR    R15,R15
         BR    R14
         SPACE 3
TYPE     CLI   ISBOX,H01
         BE    BOX01
         CLI   ISBOX,H03
         BE    BOX03
         MVC   XR9PTR(L8),LINEC
         XR    R15,R15
         BR    R14
BOX01    MVC   L0(L1,R3),MSGA
         BR    R14
BOX03    MVC   L0(L1,R3),MSGB
         BR    R14
         SPACE 3
DIREC    XR    R15,R15
         CLI   ISBOX,H01
         BER   R14
         MVC   XR9PTR(L8),LINEB
         BR    R14
         SPACE 3
BRANCH   XR    R15,R15
         MVC   XR9PTR(L4),LINEA
         BR    R14
         SPACE 3
MSGA     DC    C'1'
MSGB     DC    C'3'
LINEA    DC    A(LINC-4)
LINEB    DC    A(LINETY2-4)
         DC    A(LABTY2-1)
LINEC    DC    A(ERRLINE-4)
         DC    A(ERRLBL-1)
         EJECT
ENTRIES  DS    0F
         DC    XL4'00010001'
         DC    XL4'00010001'
         DC    A(LABELS)
         DC    H'0'
         DC    X'01'
         DC    X'000B0B00'
         SPACE 3
         LINE  (46,24),(2,57),SKIP=2
         ROUTINE   ISBOX,TYPE
         LABEL ''                                              @XA21839
         LINE  ,                                               @XA21839
         HEX   (LINEADD,0,2B)
         ROUTINE ISBOX,CHKREC                                  @XA14316
         LABEL 'RECORD TYPE - MISCELLANEOUS INTERRUPT LEVEL','ABEND CODX
               E'
         SPACE 3
         LINE
         ROUTINE REG100,DIREC
         LABEL ''
         SPACE 3
         LINE  (38,33),(5,44),SKIP=2                           X12811CG
         HEX   (REG200,0,4B),(REG400,0,4B)
         LABEL 'LAGGING ADDRESS REG 74','INTERRUPTED LEVEL IAR'
**                                                             X12811CG
**                                                             X12811CG
         LINE  (38),(5),SKIP=2                                 X12811CG
         HEX   (REG600,0,2B)
         LABEL 'PROGRAM LEVEL INTERRUPTED REG 79'              X12811CG
         SPACE 3
         LINE  (41,33),(9,40),SKIP=2
         HEX   (REG100,0,2B),(REG700,0,2B)
         LABEL 'ADPTR INTRRPT REQUEST - (76)','CCU INTRPT REQ -(7E)'
         SPACE 3
         LINE  (43,33),(9,40),SKIP=1                           @Z40BICF
         BIN   (REG100),(REG700)
         LABEL 'TYPE 4 CA L1','UNUSED'
         SPACE 3
         LINE
         BIN   (REG101),(REG701)
         LABEL 'TYPE 1/2/3 SCAN 1 L1','UNUSED'                 X12811CG
*
         LINE
         BIN   (REG102),(REG702)
         LABEL 'TYPE 2/3 SCAN 2 L1','UNUSED'                   @Z40BICF
*
         LINE
         BIN   (REG103),(REG703)
         LABEL 'TYPE 2/3 SCAN 3 L1','UNUSED'                   @Z40BICF
*
         LINE
         BIN   (REG104),(REG704)
         LABEL 'TYPE 2/3 SCAN 4 L1','UNUSED'                   X12811CG
*
         LINE
         BIN   (REG105),(REG705)
         LABEL 'TYPE 1/2/3/4 CA1 L1','UNUSED'                  X12811CG
*
         LINE
         BIN   (REG106),(REG706)
         LABEL 'TYPE 2/3/4 CA 2 L1','UNUSED'                   @Z40BICF
*
         LINE
         BIN   (REG107),(REG707)
         LABEL 'REMOTE PROGRAM LOADER L1','UNUSED'             @Z40BICF
*
         LINE
         BIN   (REG108),(REG708)
         LABEL 'UNUSED','ADDRESS COMPARE L1'
*
         LINE
         BIN   (REG109),(REG709)
         LABEL 'UNUSED','ADDRESS EXCEPTION CHECK L1'
*
         LINE
         BIN   (REG110),(REG710)
         LABEL 'UNUSED','IN/OUT CHECK L1'                      X12811CG
*
         LINE
         BIN   (REG111),(REG711)
         LABEL 'UNUSED','PROTECTION CHECK L1'
*
         LINE
         BIN   (REG112),(REG712)
         LABEL 'UNUSED','INVALID OP CHECK L1'
*
         LINE
         BIN   (REG113),(REG713)
         LABEL 'UNUSED','UNUSED'
*
         LINE
         BIN   (REG114),(REG714)
         LABEL 'UNUSED','IPL L1'
*
         LINE
         BIN   (REG115),(REG715)
         LABEL 'UNUSED','UNUSED'
*
         LINE
         ROUTINE   REG100,BRANCH
         LABEL ''
         SPACE 3
LINETY2  LINE  (41,33),(9,40),SKIP=2
         HEX   (REG100,0,2B),(REG700,0,2B)
LABTY2   LABEL 'ADPTR INTRRPT REQUEST - (77)','CCU INTRPT REQ - (7F)'
         SPACE 3
         LINE  (51,33),(9,50),SKIP=1
         BIN   (REG100),(REG700)
         LABEL 'UNUSED','DIAGNOSTIC L2'
         SPACE 3
         LINE
         BIN   (REG101),(REG701)
         LABEL 'TYPE 1/2/3 SCAN LEVEL 2','UNUSED'              X12811CG
*
         LINE
         BIN   (REG102),(REG702)
         LABEL 'UNUSED','UNUSED'
*
         LINE
         BIN   (REG103),(REG703)
         LABEL 'UNUSED','UNUSED'
*
         LINE
         BIN   (REG104),(REG704)
         LABEL 'UNUSED','UNUSED'
*
         LINE
         BIN   (REG105),(REG705)
         LABEL 'UNUSED','UNUSED'
*
         LINE
         BIN   (REG106),(REG706)
         LABEL 'UNUSED','PANEL INTERRUPT L3'
*
         LINE
         BIN   (REG107),(REG707)
         LABEL 'UNUSED','PCI L4'
*
         LINE
         BIN   (REG108),(REG708)
         LABEL 'TYPE CA L3','UNUSED'
         SPACE 3
         LINE
         BIN   (REG109),(REG709)
         LABEL 'REMOTE PROGRAM LOADER LEVEL 3','UNUSED'        @Z40BICF
*
         LINE
         BIN   (REG110),(REG710)
         LABEL 'TYPE 2/3 CA 2 L3','UNUSED'                     @Z40BICF
*
         LINE
         BIN   (REG111),(REG711)
         LABEL 'TYPE 1 OR SEL TYPE4 DATA/STATUS L3','UNUSED'   @Z40BICF
*
         LINE
         BIN   (REG112),(REG712)
         LABEL 'TYPE 1/2/3 CA1 OR SEL TYPE4 L3','UNUSED'       @Z40BICF
*
         LINE
         BIN   (REG113),(REG713)
         LABEL 'UNUSED','INTERVAL TIMER L3'
*
         LINE
         ROUTINE  REG114,CHK2                                  @Z40BICF
         BIN   (REG114,B33),(REG714,B33)                       @Z40BICF
         LABEL 'TYPE 4 CA1 SEL','PCI L3'
         SPACE 3
         LINE
         ROUTINE  REG114,CHK3                                  @Z40BICF
         BIN   (REG114,B33),(REG714,B33)                       @Z40BICF
         LABEL 'TYPE 4 CA2 SEL','PCI L3'                       @Z40BICF
*
         LINE
         BIN   (REG115),(REG715)
         LABEL 'UNUSED','SVC L4'
         SPACE 3
         DC    X'FF'
         DC    XL2'0038'
         DC    XL2'0018'
         DC    XL2'0018'
         SPACE 3
ERRLINE  LINE  ,(10),SKIP=1
ERRLBL   LABEL 'RECORD TYPE UNKNOWN - IFCETRN3'
         SPACE 3
LINC     DC    X'FF'
         DC    XL2'0038'
         DC    XL2'0018'
         DC    XL2'0018'
LABELS   DS    0F
         DC    C'$'
         LSTART
         END
