*** THIS MODULE SUPPORTS 3895 DEVICE --- SUPPORT CODE = G30HIMD ***
*** IT IS APPLICABLE FOR VS1 W/ SU01, MVS W/ SU27 AND AS SVS ICR ***
         MACRO
         BIN   ,
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S,&ARG
          ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&SUB EQ 1).SUB00
         AIF   ('&SYSLIST(3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(3)
         AGO   .SETT
.SUB00   AIF   ('&SYSLIST(&OP,3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(&OP,3)
.SETT    ANOP
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
.MEXIT   MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
&TEMP    SETA  &ISHIFT
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
         AIF   (&SUB EQ 1).BIN2
         AIF   ('&SYSLIST(2)' NE '').BIN3
         AGO   .BIN2A
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
.BIN2A   ANOP
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
&NAME    DSGEN ,
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
         AIF   (&ITEMITR EQ 0).START
 MNOTE   20,'DSGEN MACRO OCCURRS AFTER ITEMSORT MACRO HAS BEEN ISSUED.'
         MEXIT
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         MACRO
         CONVT ,
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &SUB
         LCLA  &OP
         LCLA  &OFFSET,&OUT,&IN,&IND,&IBITS,&ISHIFT
.*
.*       CONVERT BINARY TO DECIMAL
.*             &NAME IS THE REFERENCE INTO THE DSECT RECORD
.*             &OUT    IS THE NUMBER OF CHARS TO BE PUT ONTO PRINT LINE
.*                                      DEFAULT IS FOUR MAXIMUM IS 8
.*             &IN       IS THE NUMBER OF BYTES AS INPUT
.*                                      ERROR DEFAULT IS 2 MAXIMUM IS 4
.*
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LLOP
&SUB     SETB  1
.LLOP    ANOP
&OP      SETA  &OP+1
&OUT     SETA  4                        .BR NOT NULL ELSE SET TO 4
         AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(3)' EQ '').B  TEST FOR NULL INPUT
&OUT     SETA  &SYSLIST(3)             SET &OUT FROM INPUT
         AGO   .A
.SUBA    AIF   ('&SYSLIST(&OP,3)' EQ '').B
&OUT     SETA  &SYSLIST(&OP,3)          SET &OUT FROM INPUT
.A       AIF   (&OUT GT 0 AND &OUT LT 9).B   TEST RANGE
.AERR    MNOTE '*** BYTES OUT INCORRECTLY SPECIFIED DEFAULT USED ***'
&OUT     SETA  4
.B       AIF   (&SUB EQ 1).SUBB
         AIF   ('&SYSLIST(2)' EQ '').LOOP    BRANCH IF NULL
&IN      SETA  &SYSLIST(2)              .SET &IN FROM INPUT
         AGO   .BB
.SUBB    AIF   ('&SYSLIST(&OP,2)' EQ '').LOOP
&IN      SETA  &SYSLIST(&OP,2)          .SET &IN FROM INPUT
.BB      AIF   (&IN GT 0 AND &IN LT 5).D     TEST RANGE
.BERR    MNOTE '*** BYTES IN INCORRECTLY SPECIFIED DEFAULT USED ***'
&IN      SETA  2
         AGO   .D
.LOOP    ANOP                           .LOOP TO FIND &NAME IN DSECT
&IND     SETA  &IND+1                   .SET UP LOOP COUNTER
         AIF   ('&ITEM(&IND)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&IND LT &ITEMNBR).LOOP  .TEST FOR END OF DSECT
         MNOTE '*** LOG ITEM NOT DEFINED ***'
         MEXIT
.FOUND   ANOP
&IBITS   SETA  &BITS(&IND)              .SET UP NUMBER OF BITS SPEC
         AIF   (&IBITS-((&IBITS/8)*8) EQ 0).C  .TEST FOR MULTIPLE OF 8
         MNOTE '*** DATA NOT DEFINED A MULTIPLE OF 8 BITS ***'
         MEXIT
.C       ANOP
&IN      SETA  &IBITS/8                 .COMPUTE NUMBER OF BYTES
         AIF   (&IN LT 1 OR &IN GT 4).BERR  .TEST RANGE B IF IN ERROR
&ISHIFT  SETA  &SHIFT(&IND)             .SET UP FOR TEST OF BYTE BNDR
         AIF   (&ISHIFT EQ 0).D         .TEST FOR BYTE BNDRY
         MNOTE '*** DATA NOT ALIGNED ON A BYTE BOUNDARY ***'
         MEXIT
.*
.D       ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),AL.4(9)
         DC    X'&IN',X'&OUT'
&IND     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LLOP
.OUTA    ANOP
         MEND
         MACRO
         ITEMFIND &ARG,&ITFDIAG=
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &A,&B,&X,&I
         LCLC  &C1,&C2,&S
         ACTR  100000
&ITEMXPT SETA  0                  INDICATE ITEM NOT FOUND.
         AIF   ('&ARG' NE '').NORM
         AIF   ('&ITFDIAG' EQ 'OFF'  OR  '&ITFDIAG' EQ 'ON').DIAGSET
  MNOTE 0,'ITEMFIND - OPERAND (&ITFDIAG) INVALID FOR ITFDIAG KEYWORD.'
         MEXIT
.DIAGSET ANOP
&DIAGITF SETB  ('&ITFDIAG' EQ 'ON')
         MEXIT
.NORM    AIF   (&ITEMITR GT 0).SORTED
         ITEMSORT
.SORTED  ANOP
&I       SETA  &ITEMITR           COMPUTED ITTERATION COUNT.
&X       SETA  &ITEMMDX           COMPUTED MAXIMUM INDEX.
&C1      SETC  '&ARG'             ISOLATE SEARCH ARGUMENT.
&C1      SETC  '&C1'.'       '(1,8-K'&C1) PAD TO FULL 8 CHARACTERS.
.SRCHUP  ANOP
&A       SETA  &A+&X              CURRENT TABLE SUBSCRIPT + INDEX.
&S       SETC  '+'
         AIF   (&A  GT &ITEMNBR  AND  NOT &DIAGITF).SRCHDN1
         AIF   (&A  LE &ITEMNBR).SRCH00
&C2      SETC  '*-OVER-*'
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X'
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
.NOFIND  MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEXIT
.SRCH00  ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
         AIF   (&I LT 0).NOFIND   IF COUNT HAS GONE TO ZERO.
&X       SETA  &X/2               HALVE INDEX VALUE.
&B       SETA  &ITEMNDX(&A)       GET SUBSCRIPT FROM INDEX TABLE.
&C2      SETC  '&ITEM(&B)'.'       '(1,8-K'&ITEM(&B))  PAD COMPARAND.
         AIF   (NOT &DIAGITF).COMPARE
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X   POS = &B'
.COMPARE AIF   ('&C1' LT '&C2').SRCHDWN   ARGUMENT LOWER, MOVE DOWN.
         AIF   ('&C1' GT '&C2').SRCHUP    ARGUMENT HIGHER, MOVE UP.
&ITEMXPT SETA  &B                 FOUND. SET INDEX POINTER FOR RETURN.
&ITEMFST(&I+1)  SETA  &ITEMFST(&I+1)+1
         MEXIT
.SRCHDWN ANOP
&A       SETA  &A-&X              CURRENT POINTER MINUS INDEX VALUE.
&S       SETC  '-'
         AIF   (&A LE &ITEMNBR).SRCH00    IF WITHIN BOUNDS OF TABLE.
.SRCHDN1 ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
         MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEND
         MACRO
         ITEMSORT  &DUMMY
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &R,&ZI,&I,&A1,&A2,&TEMP
         LCLB  &SR,&GOTO,&TB
         LCLB   &SW(4000)
         LCLC  &C1,&C2
         ACTR   200000
&A1      SETA  0
         AIF   (&ITEMITR EQ 0).LOOP0   TEST FOR RE-ENTRY.
 MNOTE   0,'ITEMSORT MACRO OCCURRS MORE THAN ONCE. TABLE NOT RESORTED.'
         MEXIT
.LOOP0   ANOP
&A1      SETA  &A1+1
&ITEMNDX(&A1) SETA &A1
         AIF   (&A1 LT &ITEMNBR).LOOP0
         AIF   (&ITEMNBR LT 2).MEXIT
&A1      SETA  &ITEMNBR/2         HALF OF TOTAL ENTRIES.
&A2      SETA  0
.LOOP1   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  1                  SET FIRST HALF OF SWITCHES TO 1.
         AIF   (&A2 LT &A1).LOOP1
.LOOP2   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  0                  SET SECOND HALF TO ZERO.
         AIF   (&A2 LT &ITEMNBR).LOOP2
&R       SETA  0                  SET R TO FIRST TRIAL ITEM.
&ZI      SETA  &ITEMNBR-1         SET ZI TO LAST ITEM.
&I       SETA  &ZI-1
.T3      ANOP
&SR      SETB  (&SW(&R+1))        GET FLAG, WHICH WAY TO GO?
&R       SETA  (&R*2)+1+&SR       R=2R+(1 OR 2)
         AIF   (&R LE &I).T3
.T4      ANOP
&R       SETA  (&R-1)/2           R=(R-1)/2
&SR      SETB  (&SW(&R+1))        GET SUBTREE SELECT FLAG.
         AIF   (&SR EQ 0).T7
         AIF   (&GOTO EQ 0).T5
.T7      ANOP
&A1      SETA  &ITEMNDX(&R+1)
&A2      SETA  &ITEMNDX(&ZI+1)
&C1      SETC  '&ITEM(&A1)'.'       '(1,8-K'&ITEM(&A1))
&C2      SETC  '&ITEM(&A2)'.'       '(1,8-K'&ITEM(&A2))
         AIF   ('&C1' LT '&C2').T8
.T9      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
.T8      AIF   (&R GT 0).T4
&GOTO    SETB  1                  SET 'GO TO' T7
&ZI      SETA  &ZI-1
&I       SETA  &I-1
         AIF   (&I GE 0).T3
.MEXIT   ANOP
&ITEMITR SETA 1
&ITEMMDX SETA 1
.ITRLOOP ANOP
&ITEMITR SETA &ITEMITR+1
&ITEMMDX SETA &ITEMMDX+&ITEMMDX
         AIF  (&ITEMMDX LT &ITEMNBR).ITRLOOP
&ITEMITR SETA &ITEMITR-1
&ITEMMDX SETA &ITEMMDX/2
&A1      SETA &ITEMNBR
&A2      SETA &ITEMMDX
&TEMP    SETA &ITEMITR
 MNOTE *,' ITEMS = &A1, MAX INDEX = &A2, ITTERATION COUNT = &TEMP'
         MEXIT
.T5      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
         AGO   .T3
         MEND
           MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
&LASTCC  SETA  184
&TEST    SETB  1
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         MACRO
         LINEND ,
.*                                 THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         MACRO
         LSTART ,
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &NDX,&CTR
         ACTR  500000
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         MACRO
         SPECIAL &ROUTINE,&PARAM,&SPACE=
.*                            THIS MACRO GENERATES A SPECIAL ROUTINE
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M.
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT.
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE
.*                                 INTERPRETED AS AN ARGUMENT OF THE
.*                                 SPECIAL ROUTINE.
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO
.*                                 ALLOCATE FOR REQUIRED PROCESSING.
         GBLC  &CSECT
         GBLA  &COUNTR
         LCLA  &ADD
         DC    AL1(128)
         DC    BL.8'&PARAM'
         DC    AL2(&ROUTINE-&CSECT)
         DC    AL2(&COUNTR)
&ADD     SETA  1
         AIF   ('&SPACE' EQ '').NORM
&ADD     SETA  &SPACE
.NORM    ANOP
&COUNTR  SETA  &COUNTR+&ADD
         MEND
         MACRO
         HEX   ,
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER,&ARG
       ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND  &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
.MEXIT   MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&K EQ 1).ERR3
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
         AIF   ('&LETTER' EQ 'R').RIGHT
.ERR3    MNOTE '**PARAMETER 3 INCOMPLETE-DSGEN DEFINITION USED**'
         AGO   .USEDEFN
.RIGHT   ANOP
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         SUM   &LOGITEM,&MASK
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY
.*                                 FOR PROCESSING BY THE SUMMARY MODULE
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.
.*                                 THIS OPERAND SHOULD BE OMITTED FOR
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE
.*                                 MASK WILL BE SET ACCORDING TO THE
.*                                 OFF BYTE BIT DISPLACEMENT OF THE
.*                                 ITEM AS DEFINED BY THE MACRO 'DSGEN'
         GBLA  &COUNTR,&ITEMNBR,&BITS(3000),&SHIFT(3000)
         GBLC  &ITEM(3000),&DSECT
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOGITEM NOT FOUND'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   (&IBITS EQ 1).FORM1      TEST FOR OLD FORM
         AIF   ('&MASK' NE '').FORM1    TEST FOR MASK
         AIF   (&IBITS+&ISHIFT GT 8).MSG     TEST FOR MORE THAN EIGHT
         DC    AL.1(0),AL.3(&ISHIFT),AL.4(&IBITS)
         DC    AL1(0)
         AGO   .ITEM
.MSG     MNOTE '**BITS GREATER THAN 8**'
         MEXIT
.FORM1   ANOP
         DC    AL1(0)
         AIF   ('&MASK' EQ '').FORM
         DC    B'&MASK'
         AGO   .ITEM
.FORM    ANOP
&BITNBR  SETA  &ISHIFT-7
&BITNBR  SETA  0-&BITNBR
&M       SETA  1
.LOOP2   ANOP
         AIF   (&BITNBR EQ 0).GOTIT
&M       SETA  &M*2
&BITNBR  SETA  &BITNBR-1
         AGO   .LOOP2
.GOTIT   ANOP
         DC    AL1(&M)
.ITEM    DC    AL2(&LOGITEM-&DSECT)
         DC    AL2(&COUNTR)
&COUNTR  SETA  &COUNTR+1
         MEND
         TITLE 'IFCET00D -EDIT TABLE FOR 3895'
         GBLC  &DSECT,&CSECT
IFCET00D CSECT
&CSECT   SETC  'IFCET00D'
&DSECT   SETC  'T00D'
T00D     DSECT
         DSGEN (CLASSRC,8),(SYSREL,8),(SWITCHES,16)
         DSGEN (RECID,8),(SPARES,24)
         DSGEN (DAY,32),(TIME,32)
         DSGEN (SPARE1,8),(CPUSER,24),(MODEL,16),(MCEL,16)
         DSGEN (XCUA,16),(RECTYP,8),(XDUMZ,8)
         DSGEN (TWOBYT,16,0,62)                                @XA20899
         DSGEN (ONEBYT,8,0,96)                                 @XA20899
         DSGEN (O1BYT,8,97,112)                                @XA20899
         DS    4C
IFCET00D CSECT
         USING *,R9
         USING T00D,R2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
L13      EQU   13
L15      EQU   15
L16      EQU   16
L20      EQU   20
L46      EQU   46
L24      EQU   24
L29      EQU   29
L35      EQU   35
L36      EQU   36
L100     EQU   100
F5       EQU   X'04'
F4       EQU   X'08'
F3       EQU   X'10'
F2       EQU   X'20'
F1       EQU   X'40'
F0       EQU   X'80'
HEX02    EQU   X'02'
HEX90    EQU   X'90'                                           @M04AE95
OVFLO    EQU   X'01'
L19      EQU   19
FMT3     EQU   X'10'
         DC    A(ENTRIES)
         DC    CL8'IFCET00D'
XR9PTR   DC    F'0'
XLABELP  DC    F'0'
NONE     DC    C'NONE'
EXXXH    DC    X'FE'                                           @M04AE95
         DC    CL8'IFCEXXXH'                                   @M04AE95
WORK     DC    D'0'
RELTAB   DS    0C
         DC    C'OS  '
         DC    C'DOS '
         DC    C'VS1 '                                         @XA19168
         DC    C'V370'
         DC    C'VS2 '                                         @XA19168
         DC    C'    '
         DC    C'    '
         DC    C'    '
BLANKS   DC    13C' '                                          @M04AE95
ERRORMSG DC    C'/// ERROR ///'                                @M04AE95
OVERFLW  DC    C'COUNTER OVERFLOW    '                         @XA20891
OFFEOD   DC    C'OFFLINE/END-OF-DAY  '                         @XA20891
XSAVE    DC    5F'0'
CHARS    DC    C'0123456789ABCDEF'
SPACER1  LA    R3,L1(R3)
         BR    R14
SPACER19 LA    R3,L19(R3)
         BR    R14
SKIPPER  BR    R14
RETURN   LM    R5,R8,XSAVE         RESTORE REGS
         BR    14                  RETURN
BKSP1    BCTR  R3,0
         BR    R14
SETHEX   STM   R5,R8,XSAVE              SAVE REGS
         LA    R8,CHARS                 CHARACTER TABLE
         IC    R7,L0(R4)                PICK UP CHARACTER
         SLL   R7,L24                   MOVE TO HI R7
         SR    R6,R6                    CLEAR R6
         SLDL  R6,L4                    MOVE FOUR BITS
         AR    R6,R8                    ADD OFFSET & PTR
         MVC   L0(L1,R3),L0(R6)         MOVE TO LINE
         SR    R6,R6                    CLEAR R6
         SLDL  R6,L4                    MOVE LAST 4 BITS
         AR    R6,R8                    COMPUTE OFFSET
         MVC   L1(L1,R3),L0(R6)         MOVE LAST CHAR
         B     RETURN                   RETURN
***      SET DATE TO PRINT
*
SETDATE  UNPK  XSAVE(L8),L1(L3,R4)      UNPACK DATE
         MVC   L0(L3,R3),XSAVE+L5       MOVE DAY
         MVC   L4(L2,R3),XSAVE+L3       MOVE YEAR
         BR    R14                      RETURN
***      CONVERT RELEASE NUMBER
*
CONVREL  STM   R5,R8,XSAVE              SAVE REGS
         SR    R6,R6                    CLEAR R6
         IC    R6,L0(R4)                PICK UP RELEASE AND SYSTEM
         SRDL  R6,L5                    SAVE REL NO IN R7
         SLL   R6,L2                    MULTIPLY BY 4
         L     R8,XLABELP               PICK UP LABEL POINTER
         LA    R6,RELTAB(R6)            INDEX INTO TABLE OF SYSTEMS
         MVC   L100(L4,R8),L0(R6)         MOVE SYS NAME INTO LABEL
         SR    R6,R6                    CLEAR R6
         SLDL  R6,L5                    RETRIVE REL NO
         LTR   R6,R6                    IS IT ZERO
         BZ    NOREL                    YES-BR
         CVD   R6,WORK                  CONVERT IT
         UNPK  L0(L2,R3),WORK+L6(L2)    UNPACK IT INTO PRINT BUFF
         MVZ   L1(L1,R3),L0(R3)         MOVE IN ZONE
         B     RETURN                   EXIT
NOREL    MVC   L0(L4,R3),NONE           MOVE IN NONE
         B     RETURN                   EXIT
CKTYPE   STM   R5,R8,XSAVE                                     @M04AE95
         TM    CLASSRC,HEX90            IS IT REALLY MDR       @M04AE95
         BO    RETURN                   YES,RETURN             @M04AE95
         LA    R5,EXXXH-4               SET UP TO CALL IFCEXXXH@M04AE95
         ST    R5,XR9PTR                FOR OBR PROCESSING     @M04AE95
         B     RETURN                   RETURN                 @M04AE95
CHKERROR STM   R5,R8,XSAVE                                     @M04AE95
         L     R8,XLABELP               GET ADDR OF LABEL      @M04AE95
         TM    0(R4),X'80'              WAS THERE AN ERROR     @M04AE95
         BZ    NOERROR                  NO, BRANCH             @M04AE95
         MVC   L0(L13,R8),ERRORMSG      YES,MOVE ERROR MSG     @M04AE95
         B     RETURN                                          @M04AE95
NOERROR  MVC   L0(L13,R8),BLANKS        NO ERROR, MOVE BLANKS  @M04AE95
         B     RETURN                                          @M04AE95
*
TYPREC   STM   R5,R8,XSAVE
         L     R8,XLABELP          GET LABEL POINTER
TYPREC1  TM    L0(R4),F1           COUNTER OVERFLOW ?
         BZ    TYPREC4
         MVC   L35(L20,R8),OVERFLW                             @XA19168
         B     RETURN
TYPREC4  MVC   L35(L20,R8),OFFEOD  ASSUME OFFLINE/EOD RECORD   @XA19168
         B     RETURN
ENTRIES  DS    0F
         DC    XL4'00000000'            FORMAT1
         DC    XL4'00000000'            FORMAT2
         DC    A(LABELS)                LABEL PTR
         DC    H'0'                     DISP
         LINE
         ROUTINE CLASSRC,CKTYPE                                @M04AE95
         LABEL ''                                              @M04AE95
***   SKIP TO CHANNEL 1
         LINE  SKIP=E
         LABEL ''
         LINE  (35,84),(1,76),SKIP=0
         ROUTINE RECTYP,TYPREC
         ROUTINE SYSREL,CONVREL
         LABEL '---RECORD TYPE - PREDICTOR SENSE -                     X
                    MODEL ','SERIAL NO.                       XXXX REL'
         LINE  (67,21),(1,35),SKIP=2                           @M04AE95
         HEX   MODEL,0,2B
         HEX   CPUSER,0,3B
         LABEL ''
LINE0S   LINE  (23,1),(1,30),SKIP=0                            @XA20899
         HEX   XCUA,0,2B
LAB0S    LABEL 'CHANNEL/UNIT ADDRESS','DEVICE TYPE  3895'      @XA19168
         LINE  (1,1),(63,23),SKIP=0                            @XA20899
         LABEL 'DAY YEAR','HH MM SS.TH'                        @XA20899
         LINE  (1,1),(100),SKIP=1                              @XA20899
         ROUTINE RECTYP,CHKERROR                               @XA20899
         LABEL '             '                                 @XA20899
         LINE  (63,23),(57,23),SKIP=2                          @XA20899
         ROUTINE DAY,SETDATE                                   @XA20899
         HEX   TIME,1,4B                                       @XA20899
         LABEL  'DATE','TIME'                                  @XA20899
         LINE  (1,1),(1,28),SKIP=1                             @M04AE95
         LABEL '--OPERATIONS-----------',                      @M04AE95*
               '--MICR 1 PERFORMANCE---',                      @M04AE95*
               '--MICR 2 PERFORMANCE---',                      @M04AE95*
               '--FE COUNTERS----------'                       @M04AE95
         LINE  (19,28),(1,28),SKIP=1                           @XA20899
         CONVT TWOBYT0,2,5                                     @M04AE95
         CONVT TWOBYT32,2,5                                    @M04AE95
         CONVT TWOBYT40,2,5                                    @M04AE95
         CONVT TWOBYT44,2,5                                    @M04AE95
         LABEL 'TOTAL DOCS','AMT PRES, INVLD',                 @M04AE95*
               'ERROR DOCS','COUNTER 1, LOC 88'                @XA20891
         LINE  (19,28),(1,28),SKIP=1                           @XA20891
         CONVT TWOBYT1,2,5                                     @M04AE95
         CONVT TWOBYT33,2,5                                    @M04AE95
         CONVT TWOBYT41,2,5                                    @M04AE95
         CONVT TWOBYT45,2,5                                    @M04AE95
         LABEL 'MERGE DOCS','TPC PRES, INVLD',                 @M04AE95*
               'EARLY START','COUNTER 2, LOC 90'               @XA20891
         LINE  (19,28),(1,28),SKIP=1                           @XA20891
         CONVT TWOBYT2,2,5                                     @M04AE95
         CONVT TWOBYT34,2,5                                    @M04AE95
         CONVT TWOBYT42,2,5                                    @M04AE95
         CONVT TWOBYT46,2,5                                    @M04AE95
         LABEL 'DOCS INSCRIBED','ACT PRES, INVLD',             @M04AE95*
               'SHORT TERM ERR','COUNTER 3, LOC 92'            @XA20891
         LINE  (19,28),(1,28),SKIP=1                           @XA20891
         CONVT TWOBYT3,2,5                                     @M04AE95
         CONVT TWOBYT35,2,5                                    @M04AE95
         CONVT TWOBYT43,2,5                                    @M04AE95
         CONVT TWOBYT47,2,5                                    @M04AE95
         LABEL 'SEC FLD INSCRIBES','TNF PRES, INVLD',          @M04AE95*
               'LONG TERM ERR','COUNTER 4, LOC 94'             @XA20891
         LINE  (19,28),(1,28),SKIP=1                           @XA20899
         CONVT TWOBYT4,2,5                                     @M04AE95
         CONVT TWOBYT36,2,5                                    @M04AE95
         LABEL 'EXTENDED PRINTS','AUX PRES, INVLD'             @XA20890
         LINE  (19,28),(1,28),SKIP=1                           @XA20899
         CONVT TWOBYT5,2,5                                     @M04AE95
         CONVT TWOBYT37,2,5                                    @M04AE95
         LABEL 'LATE STOP','PEAK ERR','--ELECTRONIC DSF/IDENTICAL AMOUN*
               T------------------'                            @XA20897
         LINE  (19,28),(1,28),SKIP=1                           @M04AE95
         CONVT TWOBYT6,2,5                                     @M04AE95
         CONVT TWOBYT38,2,5                                    @M04AE95
         CONVT TWOBYT48,2,5                                    @XA20899
         CONVT TWOBYT49,2,5                                    @XA20899
         LABEL 'INCREMENT','CONFLICT','EDSF HEADER DOCS','CHECKS/EDSF'
         LINE  (19,28),(1,28),SKIP=2                           @M04AE95
         CONVT TWOBYT7,2,5                                     @M04AE95
         CONVT TWOBYT39,2,5                                    @M04AE95
         CONVT TWOBYT50,2,5                                    @XA20899
         CONVT TWOBYT51,2,5                                    @XA20899
         LABEL 'LATE CPU RESP','RESERVED','ACPTS/EDSF',        @XA20891*
               'CHECKS/IDENT AMT'                              @XA20899
         LINE  ,(1),SKIP=1                                     @M04AE95
         LABEL '--OCR PERFORMANCE--------------------------------------*
               ----------------------------------------------------'
         LINE  (19,28),(1,28),SKIP=1                           @M04AE95
         CONVT TWOBYT8,2,5                                     @M04AE95
         CONVT TWOBYT9,2,5                                     @M04AE95
         CONVT TWOBYT10,2,5                                    @M04AE95
         CONVT TWOBYT11,2,5                                    @M04AE95
         LABEL 'CASH TICKET','ADD MACH TAPE',                  @M04AE95*
               'FIX ENT DEP SLIP','CASH CHECK TRANS'           @M04AE95
         LINE  (19,28),(1,28),SKIP=1                           @M04AE95
         CONVT TWOBYT12,2,5                                    @M04AE95
         CONVT TWOBYT13,2,5                                    @M04AE95
         CONVT TWOBYT14,2,5                                    @M04AE95
         CONVT TWOBYT15,2,5                                    @M04AE95
         LABEL 'DIH MATCH','BAR CODES','BUSNS DEP SLIP',       @M04AE95*
               'PERS DEP SLIP'                                 @M04AE95
         LINE  (19,28),(1,28),SKIP=1                           @M04AE95
         CONVT TWOBYT16,2,5                                    @M04AE95
         CONVT TWOBYT17,2,5                                    @M04AE95
         CONVT TWOBYT18,2,5                                    @M04AE95
         CONVT TWOBYT19,2,5                                    @M04AE95
         LABEL 'ACPTS/DEP SLIP','CHECKS/DEP SLIP',             @XA20891*
               'CHECKS/AM TAPE','OCR1 VLD ON CHECK'            @XA20891
         LINE  (19,28),(1,28),SKIP=1                           @M04AE95
         CONVT TWOBYT20,2,5                                    @M04AE95
         CONVT TWOBYT21,2,5                                    @M04AE95
         CONVT TWOBYT22,2,5                                    @M04AE95
         CONVT TWOBYT23,2,5                                    @M04AE95
         LABEL 'OCR3 VLD ON CHECK','BUSNS CHECK',              @XA20891*
               'BUSNS CHECK FTF','BUSNS CHECK FGR'             @M04AE95
         LINE  (19,28),(1,28),SKIP=1                           @M04AE95
         CONVT TWOBYT24,2,5                                    @M04AE95
         CONVT TWOBYT25,2,5                                    @M04AE95
         CONVT TWOBYT26,2,5                                    @M04AE95
         CONVT TWOBYT27,2,5                                    @M04AE95
         LABEL 'PERS CHECK','PERS CHECK FTF',                  @M04AE95*
               'PERS CHECK FGR','DOC STOP RJCT'                @M04AE95
         LINE  (19,28),(1,28),SKIP=2                           @M04AE95
         CONVT TWOBYT28,2,5                                    @M04AE95
         CONVT TWOBYT29,2,5                                    @M04AE95
         CONVT TWOBYT30,2,5                                    @M04AE95
         CONVT TWOBYT31,2,5                                    @M04AE95
         LABEL 'CLIP LVL X-HIGH','CLIP LVL HIGH',              @M04AE95*
               'CLIP LVL MEDIUM','CLIP LVL LOW'                @M04AE95
         LINE  (105),(1,84),SKIP=1                             @XA20899
         CONVT ONEBYT74,1,3                                    @XA20899
         LABEL '--JAMS/STOPS, DEGRADATION-------','ABORTED DOCS'
         LINE  ,(15),SKIP=1                                    @XA20899
         LABEL 'DOC LATE   DEGRADE'                            @XA20899
         LINE  (17,11),(1,37),SKIP=1                           @XA20899
         CONVT ONEBYT0,1,3                                     @XA20899
         CONVT ONEBYT14,1,3                                    @XA20899
         LABEL 'ALIGNER DS',                                   @M04AE95*
               '--COMMON CHANNEL ERRORS--------------------------------*
               ------------------------'                       @XA20899
         LINE  (17,11),(1,37),SKIP=1                           @XA20899
         CONVT ONEBYT1,1,3                                     @XA20899
         CONVT ONEBYT15,1,3                                    @XA20899
         LABEL 'MICR 1 DS','ERROR UNIT       CHANNEL RUN CTL  MICR     *
               DIH   INS/PRT  RECO    MFILM   RSRVD'           @XA20891
         LINE  (17,11),(1,37),SKIP=0                           @XA20899
         CONVT ONEBYT2,1,3                                     @XA20899
         CONVT ONEBYT16,1,3                                    @XA20899
         LABEL 'PRESCAN DS','NON-SELECT CHK'                   @XA20899
         LINE  (57,8),,SKIP=1                                  @XA20899
         CONVT ONEBYT26,1,3                                    @XA20899
         CONVT ONEBYT27,1,3                                    @XA20899
         CONVT ONEBYT28,1,3                                    @XA20899
         CONVT ONEBYT29,1,3                                    @XA20899
         CONVT ONEBYT30,1,3                                    @XA20899
         CONVT ONEBYT31,1,3                                    @XA20899
         CONVT ONEBYT32,1,3                                    @XA20899
         CONVT ONEBYT33,1,3                                    @XA20899
         LABEL ''                                              @XA20899
         LINE  (28),(1,37),SKIP=0                              @XA20899
         CONVT ONEBYT17,1,3                                    @XA20899
         LABEL 'MERGE DS        ---','GET DATA CHK'            @XA20899
         LINE  (57,8),,SKIP=1                                  @XA20899
         CONVT ONEBYT34,1,3                                    @XA20899
         CONVT ONEBYT35,1,3                                    @XA20899
         CONVT ONEBYT36,1,3                                    @XA20899
         CONVT ONEBYT37,1,3                                    @XA20899
         CONVT ONEBYT38,1,3                                    @XA20899
         CONVT ONEBYT39,1,3                                    @XA20899
         CONVT ONEBYT40,1,3                                    @XA20899
         CONVT ONEBYT41,1,3                                    @XA20899
         LABEL ''                                              @XA20899
         LINE  (28),(1,37),SKIP=0                              @XA20899
         CONVT ONEBYT18,1,3                                    @XA20899
         LABEL 'SCAN DS         ---','PUT DATA CHK'            @XA20899
         LINE  (57,8),,SKIP=1                                  @XA20899
         CONVT ONEBYT42,1,3                                    @XA20899
         CONVT ONEBYT43,1,3                                    @XA20899
         CONVT ONEBYT44,1,3                                    @XA20899
         CONVT ONEBYT45,1,3                                    @XA20899
         CONVT ONEBYT46,1,3                                    @XA20899
         CONVT ONEBYT47,1,3                                    @XA20899
         CONVT ONEBYT48,1,3                                    @XA20899
         CONVT ONEBYT49,1,3                                    @XA20899
         LABEL ''                                              @XA20899
         LINE  (17),(1,27),SKIP=0                              @XA20899
         CONVT ONEBYT3,1,3                                     @XA20899
         LABEL 'SCAN DS, PRIM','---       TAG CHK'             @XA20891
         LINE  (57,8),,SKIP=1                                  @XA20899
         CONVT ONEBYT50,1,3                                    @XA20899
         CONVT ONEBYT51,1,3                                    @XA20899
         CONVT ONEBYT52,1,3                                    @XA20899
         CONVT ONEBYT53,1,3                                    @XA20899
         CONVT ONEBYT54,1,3                                    @XA20899
         CONVT ONEBYT55,1,3                                    @XA20899
         CONVT ONEBYT56,1,3                                    @XA20899
         CONVT ONEBYT57,1,3                                    @XA20899
         LABEL ''                                              @XA20899
         LINE  (17),(1,27),SKIP=0                              @XA20899
         CONVT ONEBYT4,1,3                                     @XA20899
         LABEL 'SCAN DS, MERGE','---       SELECT CHK'         @XA20891
         LINE  (57,8),,SKIP=1                                  @XA20899
         CONVT ONEBYT58,1,3                                    @XA20899
         CONVT ONEBYT59,1,3                                    @XA20899
         CONVT ONEBYT60,1,3                                    @XA20899
         CONVT ONEBYT61,1,3                                    @XA20899
         CONVT ONEBYT62,1,3                                    @XA20899
         CONVT ONEBYT63,1,3                                    @XA20899
         CONVT ONEBYT64,1,3                                    @XA20899
         CONVT ONEBYT65,1,3                                    @XA20899
         LABEL ''                                              @XA20899
         LINE  (17,11),(1,37),SKIP=0                           @XA20899
         CONVT ONEBYT5,1,3                                     @XA20899
         CONVT ONEBYT19,1,3                                    @XA20899
         LABEL 'PRE-INSCRIBE DS','ADDR CHK'                    @XA20899
         LINE  (57,8),,SKIP=1                                  @XA20899
         CONVT ONEBYT66,1,3                                    @XA20899
         CONVT ONEBYT67,1,3                                    @XA20899
         CONVT ONEBYT68,1,3                                    @XA20899
         CONVT ONEBYT69,1,3                                    @XA20899
         CONVT ONEBYT70,1,3                                    @XA20899
         CONVT ONEBYT71,1,3                                    @XA20899
         CONVT ONEBYT72,1,3                                    @XA20899
         CONVT ONEBYT73,1,3                                    @XA20899
         LABEL ''                                              @XA20899
         LINE  (17,11),(1),SKIP=1                              @XA20899
         CONVT ONEBYT6,1,3                                     @XA20899
         CONVT ONEBYT20,1,3                                    @XA20899
         LABEL 'INSCRIBE DS'                                   @XA20899
         LINE  (17,11),(1,37),SKIP=1                           @XA20899
         CONVT ONEBYT7,1,3                                     @XA20899
         CONVT ONEBYT21,1,3                                    @XA20899
         LABEL 'MICR 2 DS','--VIDEO ERRORS-------     --RECO ERRORS----*
               ----     --DIH ERRORS---------'                 @XA20899
         LINE  (17,11),(1),SKIP=0                              @XA20899
         CONVT ONEBYT8,1,3                                     @XA20899
         CONVT ONEBYT22,1,3                                    @XA20899
         LABEL '1ST BAY DS'                                    @XA20899
         LINE  (56,26),(38,26),SKIP=1                          @XA20899
         CONVT ONEBYT75,1,3                                    @XA20899
         CONVT ONEBYT85,1,3                                    @XA20899
         CONVT ONEBYT90,1,3                                    @XA20899
         LABEL 'SCF ON DEP DOC','MCS PRTY CHK','M-BUFR PRTY CHK'
         LINE  (17,11),(1),SKIP=0                              @XA20899
         CONVT ONEBYT9,1,3                                     @XA20899
         CONVT ONEBYT23,1,3                                    @XA20899
         LABEL '2ND BAY DS'                                    @XA20899
         LINE  (56,26),(38,26),SKIP=1                          @XA20899
         CONVT ONEBYT76,1,3                                    @XA20899
         CONVT ONEBYT86,1,3                                    @XA20899
         CONVT ONEBYT91,1,3                                    @XA20899
         LABEL 'SCF ON CHECK','MCS HANG CHK','M-BUFR ADDR CHK' @XA20899
         LINE  (28),(1),SKIP=0                                 @XA20899
         CONVT ONEBYT24,1,3                                    @XA20899
         LABEL 'MFILM RESYNC DS ---'                           @XA20899
         LINE  (56,26),(38,26),SKIP=1                          @XA20899
         CONVT ONEBYT77,1,3                                    @XA20899
         CONVT ONEBYT87,1,3                                    @XA20899
         CONVT ONEBYT92,1,3                                    @XA20899
         LABEL 'ROTATION ERR','INVLD OP CODE','CMP ST PRTY CHK'
         LINE  (28),(1),SKIP=0                                 @XA20899
         CONVT ONEBYT25,1,3                                    @XA20899
         LABEL 'MFILM EXIT DS   ---'                           @XA20899
         LINE  (56,26),(38,26),SKIP=1                          @XA20899
         CONVT ONEBYT78,1,3                                    @XA20899
         CONVT ONEBYT88,1,3                                    @XA20899
         CONVT ONEBYT93,1,3                                    @XA20899
         LABEL 'WINDOW OVRSCN','VIS ADDR CHK','CMP ST ADDR CHK'
         LINE  (21),(1),SKIP=0                                 @XA20899
         CONVT ONEBYT10,1,3                                    @XA20899
         LABEL 'STCKR SWTCH JAM'                               @XA20899
         LINE  (56,26),(38,26),SKIP=1                          @XA20899
         CONVT ONEBYT79,1,3                                    @XA20899
         CONVT ONEBYT89,1,3                                    @XA20899
         CONVT ONEBYT94,1,3                                    @XA20899
         LABEL 'RTS, NO TRACE','RESERVED','PROGRAM CHK'        @XA20899
         LINE  (21),(1),SKIP=0                                 @XA20899
         CONVT ONEBYT11,1,3                                    @XA20899
         LABEL 'STUB/LNG DOC STOP'                             @XA20899
         LINE  (56,52),(38,52),SKIP=1                          @XA20899
         CONVT ONEBYT80,1,3                                    @XA20899
         CONVT ONEBYT95,1,3                                    @XA20899
         LABEL 'BEAM NOT MVNG','TIME-OUT ERR'                  @XA20899
         LINE  (21),(1),SKIP=0                                 @XA20899
         CONVT ONEBYT12,1,3                                    @XA20899
         LABEL 'MICR RIBBON STOP'                              @XA20899
         LINE  (56,52),(38,26),SKIP=1                          @XA20899
         CONVT ONEBYT81,1,3                                    @XA20899
         CONVT ONEBYT96,1,3                                    @XA20899
         LABEL 'READ DATA CHK','--MICROFILM ERRORS---','DCS SPEC ERR'
         LINE  (21),(1),SKIP=0                                 @XA20899
         CONVT ONEBYT13,1,3                                    @XA20899
         LABEL 'MFILM JAM'                                     @XA20899
         LINE  (56,26),(38,26),SKIP=1                          @XA20899
         CONVT ONEBYT82,1,3                                    @XA20899
         CONVT O1BYT103,1,3                                    @XA20899
         CONVT O1BYT97,1,3                                     @XA20899
         LABEL 'WRITE DATA CHK','FILM CHK','RESERVED'          @XA20899
         LINE  (56,26),(38,26),SKIP=1                          @XA20899
         CONVT ONEBYT83,1,3                                    @XA20899
         CONVT O1BYT104,1,3                                    @XA20899
         LABEL 'LOW DOC PMT I','CAPSTAN CHK'                   @XA20899
         LINE  (56,26),(38,26),SKIP=1                          @XA20899
         CONVT ONEBYT84,1,3                                    @XA20899
         CONVT O1BYT105,1,3                                    @XA20899
         LABEL 'LOW CRT PMT I','SHUTTER CHK','--MICR ERRORS--------'
         LINE  (108),(90),SKIP=1                               @XA20899
         CONVT O1BYT102,1,3                                    @XA20899
         LABEL 'BUFR PRTY CHK'                                 @XA20899
         LINE  ,(1,63),SKIP=1                                  @XA20899
         LABEL '---OTHER COUNTERS----------------------------------',  *
               '--OTHER ERRORS-------'                         @XA20899
         LINE  (19,28),(1,28),SKIP=0                           @XA20899
         CONVT TWOBYT52,2,5                                    @XA20899
         CONVT TWOBYT53,2,5                                    @XA20899
         LABEL 'LOC 104','LOC 106'                             @XA20899
         LINE  (82,28),(64,28),SKIP=1                          @XA20899
         CONVT O1BYT106,1,3                                    @XA20899
         LABEL 'LOC 232','--INSCR/PRTR ERRORS--'               @XA20899
         LINE  (19,28),(1,28),SKIP=0                           @XA20899
         CONVT TWOBYT54,2,5                                    @XA20899
         CONVT TWOBYT55,2,5                                    @XA20899
         LABEL 'LOC 108','LOC 110'                             @XA20899
         LINE  (82,28),(64,28),SKIP=1                          @XA20899
         CONVT O1BYT107,1,3                                    @XA20899
         CONVT O1BYT98,1,3                                     @XA20899
         LABEL 'LOC 233','INVLD CHAR'                          @XA20899
         LINE  (19,28),(1,28),SKIP=0                           @XA20899
         CONVT TWOBYT56,2,5                                    @XA20899
         CONVT TWOBYT57,2,5                                    @XA20899
         LABEL 'LOC 112','LOC 114'                             @XA20899
         LINE  (82,28),(64,28),SKIP=1                          @XA20899
         CONVT O1BYT108,1,3                                    @XA20899
         CONVT O1BYT99,1,3                                     @XA20899
         LABEL 'LOC 234','CONTROL ERR'                         @XA20899
         LINE  (19,28),(1,28),SKIP=0                           @XA20899
         CONVT TWOBYT58,2,5                                    @XA20899
         CONVT TWOBYT59,2,5                                    @XA20899
         LABEL 'LOC 116','LOC 118'                             @XA20899
         LINE  (82,28),(64,28),SKIP=1                          @XA20899
         CONVT O1BYT109,1,3                                    @XA20899
         CONVT O1BYT100,1,3                                    @XA20899
         LABEL 'LOC 235','BUFR PRTY CHK'                       @XA20899
         LINE  (19,28),(1,28),SKIP=0                           @XA20899
         CONVT TWOBYT60,2,5                                    @XA20899
         CONVT TWOBYT61,2,5                                    @XA20899
         LABEL 'LOC 120','LOC 122'                             @XA20899
         LINE  (82,28),(64,28),SKIP=1                          @XA20899
         CONVT O1BYT110,1,3                                    @XA20899
         CONVT O1BYT101,1,3                                    @XA20899
         LABEL 'LOC 236','BUFR ADDR CHK'                       @XA20899
         LINE  (19,63),(1,63),SKIP=1                           @XA20899
         CONVT TWOBYT62,2,5                                    @XA20899
         CONVT O1BYT111,1,3                                    @XA20899
         LABEL 'LOC 124','LOC 237'                             @XA20899
         LINE  ,(1,1)
         LABEL ' '
         DC    X'FF'
         DC    X'0090'
         DC    X'0018'
         DC    X'0000'
LABELS   DS    0F
         LSTART
         END
