         TITLE 'IFCEXXXE- EDIT TABLE- LINKNAME-IFCEXXXE'
         MACRO
         CONVT
         GBLC  &ITEM(1000),&DSECT
         GBLA  &INITIAL
         GBLA  &BITS(1000),&ITEMNBR,&SHIFT(1000)
         GBLA  &NRENTS
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLB  &SUB
         LCLA  &OP
         LCLA  &OFFSET,&OUT,&IN,&IND,&IBITS,&ISHIFT
.*
.*       CONVERT BINARY TO DECIMAL
.*             &NAME IS THE REFERENCE INTO THE DSECT RECORD
.*             &OUT    IS THE NUMBER OF CHARS TO BE PUT ONTO PRINT LINE
.*                                      DEFAULT IS FOUR MAXIMUM IS 8
.*             &IN       IS THE NUMBER OF BYTES AS INPUT
.*                                      ERROR DEFAULT IS 2 MAXIMUM IS 4
.*
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LLOP
&SUB     SETB  1
.LLOP    ANOP
&OP      SETA  &OP+1
&OUT     SETA  4                        .BR NOT NULL ELSE SET TO 4
         AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(3)' EQ '').B  TEST FOR NULL INPUT
&OUT     SETA  &SYSLIST(3)             SET &OUT FROM INPUT
         AGO   .A
.SUBA    AIF   ('&SYSLIST(&OP,3)' EQ '').B
&OUT     SETA  &SYSLIST(&OP,3)          SET &OUT FROM INPUT
.A       AIF   (&OUT GT 0 AND &OUT LT 9).B   TEST RANGE
.AERR    MNOTE '*** BYTES OUT INCORRECTLY SPECIFIED DEFAULT USED ***'
&OUT     SETA  4
.B       AIF   (&SUB EQ 1).SUBB
         AIF   ('&SYSLIST(2)' EQ '').LOOP    BRANCH IF NULL
&IN      SETA  &SYSLIST(2)              .SET &IN FROM INPUT
         AGO   .BB
.SUBB    AIF   ('&SYSLIST(&OP,2)' EQ '').LOOP
&IN      SETA  &SYSLIST(&OP,2)          .SET &IN FROM INPUT
.BB      AIF   (&IN GT 0 AND &IN LT 5).D     TEST RANGE
.BERR    MNOTE '*** BYTES IN INCORRECTLY SPECIFIED DEFAULT USED ***'
&IN      SETA  2
         AGO   .D
.LOOP    ANOP                           .LOOP TO FIND &NAME IN DSECT
&IND     SETA  &IND+1                   .SET UP LOOP COUNTER
         AIF   ('&ITEM(&IND)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&IND LT &ITEMNBR).LOOP  .TEST FOR END OF DSECT
         MNOTE '*** LOG ITEM NOT DEFINED ***'
         MEXIT
.FOUND   ANOP
&IBITS   SETA  &BITS(&IND)              .SET UP NUMBER OF BITS SPEC
         AIF   (&IBITS-((&IBITS/8)*8) EQ 0).C  .TEST FOR MULTIPLE OF 8
         MNOTE '*** DATA NOT DEFINED A MULTIPLE OF 8 BITS ***'
         MEXIT
.C       ANOP
&IN      SETA  &IBITS/8                 .COMPUTE NUMBER OF BYTES
         AIF   (&IN LT 1 OR &IN GT 4).BERR  .TEST RANGE B IF IN ERROR
&ISHIFT  SETA  &SHIFT(&IND)             .SET UP FOR TEST OF BYTE BNDR
         AIF   (&ISHIFT EQ 0).D         .TEST FOR BYTE BNDRY  !R IF YES
         MNOTE '*** DATA NOT ALIGNED ON A BYTE BOUNDARY ***'
         MEXIT
.*
.D       ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),AL.4(9)
         DC    X'&IN',X'&OUT'
&IND     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LLOP
.OUTA    ANOP
         MEND
*
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         AIF   (&NRENTS EQ 0).NORENTS   TEST FOR NO COUNT
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
.NORENTS ANOP
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
*
         MACRO
         BIN
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLC  &DSECT
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   (&SUB EQ 1).SUB00
         AIF   ('&SYSLIST(3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(3)
         AGO   .SETT
.SUB00   AIF   ('&SYSLIST(&OP,3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(&OP,3)
.SETT    ANOP
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         HEX
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(1000),&DSECT
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLB  &B,&SUB
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
.LOOP1   ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP1
         MNOTE '**LOG ITEM NOT DEFINED**'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
         MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&K EQ 1).ERR3
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
         AIF   ('&LETTER' EQ 'R').RIGHT
.ERR3    MNOTE '**PARAMETER 3 INCOMPLETE-DSGEN DEFINITION USED**'
         AGO   .USEDEFN
.RIGHT   ANOP
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&NDX     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &LABELNR
         GBLC  &LBL(100)
         GBLC &LABELS(2000)
         GBLA  &LBLCTR(100)
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &NDX,&CTR
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLC &LABELS(2000)
         GBLC  &LBL(100)
         GBLA  &LBLCTR(100)
         GBLA  &LABELNR
         GBLA  &NRENTS,&LPTR,&INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &NRENTS
         GBLC  &DSECT,&CSECT
         GBLA  &INITIAL
         GBLB  &DIAGTST,&DIAGSET,&DIAGLIN
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000)
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         GBLC  &DSECT,&CSECT
IFCEXXXE CSECT
&CSECT   SETC  'IFCEXXXE'
&DSECT   SETC  'M3886'
M3886    DSECT
         DSGEN (CLASSRC,8),(SYSREL,8),(XDUM2,8),                       M
               (SW2B0,1),(SW2B1,1),(SW2B2,1),(SW2B3,1),                M
               (SW2B4,1),(SW2B5,1),(SW2B6,1),(SW2B7,1)
         DSGEN (SPARES,32)
         DSGEN (DUM1,8),(YEAR,8),(DAY,16),(TIME,32)
         DSGEN (SPARE1,8),(CPUSER,24),(CPUID,16),(SPARE2,16)
         DSGEN (XPGN1,32)
         DSGEN (XPGN2,32)
         DSGEN (XFCCWCC,8),(XFCCWDA,24)  FAILING CCW
         DSGEN (XFCCWFL,8),(XZERO,8),(XFCCWCT,16)    CCW
         DSGEN (CSWKEY,8),(XCSWCA,24)
         DSGEN (ATTEN,1),(XCSWSM,1),(XCSWCUE,1),(XCSWBSY,1),           M
               (XCSWCE,1),(XCSWDE,1),(XCSWUC,1),(XCSWUE,1),            M
               (XCSWPCI,1),(XCSWSILI,1),(XCSWPC,1),(XCSWPCHK,1),       V
               (XCSWCDC,1),(XCSWCCC,1),(XCSWICC,1),(XCSWCH,1),         M
               (XCSWCT,16)
         DSGEN (DDCOUNT,8),(SECONCUA,24)
         DSGEN (XDEVT1,16),(XDEVT2,16)       DEVICE TYPE
         DSGEN (SDRCOUNT,8),(PRIMCUA,24),(IORETRYS,16),(SNSBYTES,16)
         DSGEN (DEVDID,32)
         DSGEN (DEVDTA,32)
         DSGEN (STATFLG,8),(CEMODE,8)
         DSGEN (CTR,4,0,55),(SNB,1,0,5,0,7)
         ORG   SNB00
         DSGEN (SNSBYT,48)
*
EXPNOBR  DSECT
EXPNHDRA DS    CL52
EXPNDEVA DS    CL12
EXPNDA   DS    CL8
EXPNSDRA DS    CL30
*
SHRTOBR  DSECT
SHRTHDRA DS    CL24
SHRTDEVA DS    CL8
SHRTSDRA DS    CL30
*
IFCEXXXE CSECT
*                                                                     *
*                       EDIT TABLE FOR THE SHARK DEVICE
*                                                                     *
         USING *,R9
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R14      EQU   14
R15      EQU   15
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
L13      EQU   13
L16      EQU   16
L20      EQU   20
L21      EQU   21
L24      EQU   24
L27      EQU   27
L28      EQU   28
L30      EQU   30
L108     EQU   108
L4092    EQU   4092
CHAR0    EQU   X'F0'              ZONE USED IN BIT PRINT
RELONLY  EQU   X'1F'
DENS16   EQU   X'04'
DENS8    EQU   X'10'
DISMOUNT EQU   X'04'
FE       EQU   X'FE'
LONG     EQU   X'40'
SHORT    EQU   X'30'
SHRTRECD EQU   X'20'
ZEROHI   EQU   X'3F'
*
HEX20    EQU   X'20'
HEX3E    EQU   X'3E'
HEX6C    EQU   X'6C'
ONE      EQU   1
EIGHT    EQU   8
*
         USING M3886,R2
         DC    A(ENTRIES)
         DC    CL8'IFCEXXXE'
NINE     DC    F'0'
XLABELP  DC    F'0'
*                                                                     *
*                         SPECIAL ROUTINE SECTION                     *
*                                                                     *
* UPON ENTRY TO ANY SPECIAL ROUTINE REG4 POINTS TO THE FIELD IN THE   *
* LOGREC RECORD WHICH WILL BE PROCESSED. REG3 POINTS TO THE PRINT     *
* POSITION OF THE PRINT BUFFER WHERE THE DATA SHOULD BE PUT. REG9     *
* IS USED FOR ADDRESSABILITY. THEN REG15 IS ZEROED BEFORE A RETURN    *
* THE BUFFER THAT WAS JUST PROCESSED IS NOT PRINTED.                  *
*                                                                     *
*                                                                     *
* THIS ROUTINE UNPACKS THE RELEASE NUMBER AND PUTS IT AND THE         *
* CHARACTER STRING 'RELEASE' INTO THE PRINT BUFFER.                   *
*                                                                     *
RELEASE  ST    R5,STOREREG
         MVC   L0(L7,R3),REL      MOVE 'RELEASE' TO PRINT BUFFER
         MVC   DECBYTES(L1),L0(R4) MOVE RELEASE NBR TO LOCAL AREA
         NI   DECBYTES,RELONLY    AND OUT UNWANTED BITS
         SR    R5,R5              CLEAR REGISTER
         IC    R5,DECBYTES        PUT RELEASE NBR INTO REGISTER
         CVD   R5,DECBYTES        MAKE IT DECIMAL
         UNPK  L8(L2,R3),DECBYTES+L6(2) UNPACK RELEASE NUMBER
         OI    L9(R3),CHAR0       MAKE LAST CHARACTER PRINTABLE
         L     R5,STOREREG        RELOAD REGISTER
         BR    R14                RETURN
REL      DC    CL7'RELEASE'
*
TYPETEST MVC   TYPENT+L24(L10),UNCHK    PLUG IN UNIT CHECK TYPE
         MVI   DMPSIZE+ONE,HEX6C        SET DUMP SIZE
         TM    SW2B0,HEX20              TEST FOR SHORT RECORD
         BZ    TEST1                    LONG RE, BRANCH AROUND
         MVC   TYPENT+L24(L10),OVRFLOW  PLUG IN OVERFLOW TYPE
         MVI   DMPSIZE+ONE,HEX3E        SET DUMP SIZE FOR SHORT
TEST1    STM   R5,R6,XSAVE              SAVE WORK REGS
         LA    R5,OBRAREA               GET EXPAND AREA ADDRESS
         LR    R6,R2                    SWAP ADDRESS OF DSECT
        USING  EXPNOBR,R5
        USING  SHRTOBR,R6
         XC    OBRAREA(L108),OBRAREA    CLEAR AREA
         TM    SW2B0,HEX20              TEST FOR SHORT RECORD
         BO    MOVESHRT                 YES-GO MOVE SHORT RE
         MVC   EXPNOBR(L108),SHRTOBR    MOVE RE INTACT
         B     EXPNDRET                 SET UP FOR RETURN
*
MOVESHRT MVC   EXPNHDRA(L24),SHRTHDRA   MOVE HEADER
         MVC   EXPNDEVA(L8),SHRTDEVA    MOVE DEVTYPE AND CUA
         MVC   EXPNSDRA(L30),SHRTSDRA   MOVE SDR AREA
EXPNDRET ST    R2,SAVE2                 SAVE DSECT POINTER
         LR    R2,R5                    POINT R2 AT OBRAREA
         LM    R5,R6,XSAVE              GET SAVED REGS
NOPRINT  SR    R15,R15                  CLEAR REG 15
DONOTHNG BR    R14
STOREREG DC    6F'0'
OBRAREA  DS    CL108                    DSECT AREA
*                                                                     *
UNCHK    DC    C'UNIT CHECK'
OVRFLOW  DC    C'OVERFLOW  '
*
SHRTST   TM    SW2B0,HEX20              TEST FOR SHORT RECORD
         BCR   EIGHT,R14                LONG-RETURN TO PRINT
         B     NOPRINT                  DO NOT PRINT
*
LONGTST  TM    SW2B0,HEX20              TEST FOR SHORT RECORD
         BCR   ONE,R14                  YES-RETURN TO PRINT
         B     NOPRINT                  LONG-DO NOT PRINT
*
SKIPTST1 TM    SW2B0,HEX20              TEST FOR SHORT RECORD
         BCR   EIGHT,R14                NO-RETURN
         MVC   NINE(L8),SADCON          BUMP POINTERS
         B     NOPRINT                  DO NOT PRINT
*
SKIPTST2 TM    SW2B0,HEX20              TEST FOR SHORT RECORD
         BCR   EIGHT,R14                NO-RETURN
         MVC   NINE(L8),SADCON1         BUMP POINTERS
         B     NOPRINT                  RETURN-DO NOT PRINT
*
RESETR2  L     R2,SAVE2                 RESTORE R2 POINTER
         B     NOPRINT                  DO NOT PRINT
*
SAVE2    DC    F'0'
*
SADCON   DC    A(SHORT1-L4)
         DC    A(SHRTL1-L1)
SADCON1  DC    A(SHORT2-L4)
         DC    A(SHRTL2-L1)
*                                                                     *
* THIS CODE WILL MOVE THE JOB NAME AND VOLID FROM THE RECORD TO THE   *
* BUFFER                                                              *
*                                                                     *
JOBNAME  MVC   L0(L8,R3),L0(R4)   MOVE THE JOBID TO PRINT LINE
         BR    R14                RETURN
VOLNAME  MVC   L0(L6,R3),L0(R4)   MOVE THE VOLID TO PRINT LINE
         BR    R14                RETURN
FORMID   MVC   L0(L4,R3),L0(R4)         GET FORMAT ID
         BR    R14
*                                                                     *
SETHEX   STM   R5,R8,XSAVE        SAVE REGS
         LA    R8,CHARS           PTR TO CHARS
         IC    R7,L0(R4)          PICK CHAR
         SLL   R7,L24             MOVE IT TO HI OF R7
         SR    R6,R6              CLEAR REG
         SLDL  R6,L4              MOVE 4 BITS TO R6
         AR    R6,R8              COMPUTE OFFSET
         MVC   L0(L1,R3),L0(R6)   MOVE CHAF TO LINE
         SR    R6,R6              CLEAR
         SLDL  R6,L4              MOVE LAST 4 BITS TO R6
         AR    R6,R8              COMPUTE PFFSET
         MVC   L1(L1,R3),L0(R6)   MOVE CHAR TO LINE + 1
         B     RETURN          RETURN
SPACER16 LA    R3,L16(R3)
         BR    R14
SPACER1  LA    R3,L1(R3)
         BR    R14
*                                                                     *
* THIS CODE WILL TAKE THE DATE FROM THE RECORD UNPACK IT AND PUT IT   *
* IN THE PRINT BUFFER.                                                *
*                                                                     *
SETDATE  CLC   L1(L3,R4),ZERO          IS DATE ZERO
         BE    SETDTE                  BR- YES
         UNPK  XSAVE(L8),L1(L3,R4)     UNPACK DATE
         MVC   L5(L2,R3),XSAVE+L3      MOVE YEAR
         MVC   L0(L3,R3),XSAVE+L5
         BR    R14
SETDTE   MVC   L0(L4,R3),NONE     SET DATE TO NONE
         BR    R14                     RETURN
SETPGMN  TM    SW2B0,HEX20              TEST FOR SHORT RECORD
         BCR   ONE,R14                  YES-NO JOB ID
         MVC   0(L12,R3),JOBID          MOVE IN LABEL
         MVC   L13(L8,R3),XPGN1         MOVE IN NAME
         BR    R14
SETCONV  TM    L0(R4),HEX02             HAS RECORD BEEN CONVERTED KEY32
         BCR   ON,R14                   YES RETURN
         SR    R15,R15                  NO CLEAR R15 FOR NO PRINT OF
         BR    R14                      LINE BR-14
ON       EQU   1
HEX02    EQU   X'02'
*                                       SET DEVICE TYPE FIELD
*
*
*          ROUTINE TO CONVERT 4 BIT COUNTER
*                                                                     *
CONVLFT  STM   R5,R8,XSAVE              SAVE REGS
         SR    R6,R6                   CLEAR REGISTERS
         IC    R6,L0(R4)               PICK UP COUNTER IN QUEST
         SRL   R6,L4                   DROP OFF 4 LOW BITS
         B     SDRCVT                  BRANCH TO CONVERT IT
CONVRHT  STM   R5,R8,XSAVE             SAVE REGS
         IC    R6,L0(R4)               PICK CHAR
         SLL   R6,L28
         SRL   R6,L28                  DROP OFF HI ORDER BITS
SDRCVT   CVD   R6,WORK                 CONVERT IT
         UNPK  L0(L3,R3),WORK+L5(L3)     TO DECIMAL
         MVZ   L2(L1,R3),L0(R3)        PUT ON ZONE
         B     RETURN                  TERMINATE
ZERO     DC    XL4'00'
*                                                                     *
RETURN   LM    R5,R8,XSAVE              SAVE REGISTERS
         BR    R14
*                                                                     *
CONVREL  STM   R5,R8,XSAVE              SAVE WORK REGS
         SR    R6,R6                    CLEAR R6
         IC    R6,L0(R4)                PICK UP REL & SYS VALUES
         SRDL  R6,L5                    SAVE REL NO IN R7
         SLL   R6,L2                    MULTIPLY SYS VALUE BY 4
         L     R8,XLABELP               PICK UP LABEL POINTER
         LA    R6,RELTAB(R6)            INDEX INTO TABLE OF SYSTEMS
         MVC   L0(L4,R8),L0(R6)         MOVE SYSTEM NAME INTO LABEL
         SR    R6,R6                    CLEAR R6
         SLDL  R6,L5                    RETREIVE REL NO.
         LTR   R6,R6                    IS IT ZERO
         BZ    NOREL                    BR-YES
         CVD   R6,WORK                  CONVERT IT
         UNPK  L0(L2,R3),WORK+L6(L2)   UNPACK IT INTO PRINT BUFF
         MVZ   L1(L1,R3),L0(R3)         MOVE ON PROPER ZONE
         B     RETURN                   EXIT
NOREL    MVC   L0(L4,R3),NONE           MOVE IN NONE FOR REL
         B     RETURN
*                                                                     *
*                                                                     *
*                                                                     *
RELTAB   DS    0C
         DC    C'OS  '
           DC    C'DOS '
         DC    C'VS 1'
         DC    C'V370'
         DC    C'VS 2'
         DC    C'    '
         DC    C'    '
         DC    C'    '
TWO      DC    H'2'
FOUR     DC    H'4'
TWELVE   DC    H'12'
TWENTY   DC    H'20'
DECBYTES DC    D'0'               PACKED NUMERIC AREA
XSAVE    DC    5F'0'
CHARS    DC    C'0123456789ABCDEF'
WORK     DS    D
NONE     DC    C'NONE'
JOBID    DC    C'JOB IDENTITY'
TWOFOUR  DC    H'24'
LABELS   DC    X'00'
ENTRIES  DS    0F
         DC    XL4'00'            FORMAT 1
         DC    XL4'00'            FORMAT 2
         DC    A(LABLES)          LABEL POINTER
         DC    H'0'               DISP
         LINE  ,(1,)
         ROUTINE SPARES,TYPETEST
         LABEL ''
* THIS IS THE FULL OBR PRINTOUT FOR PERMANENT ERRORS                  *
         LINE  ,,SKIP=E
         LABEL ''
         LINE  (67,21),(1,76),SKIP=2
         HEX   CPUID,0,2B
         HEX   CPUSER,0,3B
TYPENT   LABEL '--- RECORD ENTRY TYPE - UNIT CHECK    SOURCE - OUTBOARDX
                   MODEL-','SERIAL NO.'
         LINE  (16,1),(4,1)                                      S21021
         ROUTINE    SYSREL,CONVREL
         LABEL      'XXXX REL.'
         LINE  (69,1),(31,19)                                    S21021
         ROUTINE XPGN1,SETPGMN                                   S21021
         LABEL 'DAY YEAR','HH MM SS.TH'                          S21021
         LINE  (82,8),SKIP=0
         HEX   (XPGN1,0),(XPGN2,0)
         ROUTINE SPARES,SHRTST
         LABEL ''
         LINE  (31,19),(25,19),SKIP=2
         ROUTINE    DUM1,SETDATE
         HEX   TIME,1,4B
         LABEL 'DATE-','TIME-'                                   S21021
         LINE  ,(2,1),SKIP=2
         LABEL 'DEVICE TYPE                     3886'
         LINE  (34,1),(2,1),SKIP=1
         HEX   PRIMCUA,B0,3B
         LABEL 'PRIMARY   CHANNEL UNIT ADDRESS'                  S21021
         LINE
         HEX   SECONCUA,B0,3B
         ROUTINE SPARES,SKIPTST1
         LABEL 'ALTERNATE CHANNEL UNIT ADDRESS  '                S21021
         LINE
         LABEL ' '                                               S21021
         LINE  (1,1),(23,38)                                     S21021
         LABEL 'CC   CA   FL     CT','K    CA   US CS  CT'       S21021
         LINE  (23,3),(5,51),SKIP=2                              S21021
         HEX   XFCCWCC,0,1B                                      S21021
         HEX   XFCCWDA,0,3B                                      S21021
         ROUTINE  XDUM2,SPACER1
         HEX   XFCCWFL,0,1B                                      S21021
         HEX   XZERO,0,1B                                        S21021
         HEX   XFCCWCT,0,2B                                      S21021
         ROUTINE  XDUM2,SPACER16
         HEX   CSWKEY,0,1B
         HEX   XCSWCA,0,3B                                       S21021
         ROUTINE  XDUM2,SPACER1
         ROUTINE   ATTEN,SETHEX
         ROUTINE XCSWPCI,SETHEX                                  S21021
         HEX   XCSWCT,0,2B                                       S21021
         LABEL 'FAILING CCW','CSW'                               S21021
         LINE  ,(21,52),SKIP=2
         LABEL 'UNIT STATUS','CHANNEL STATUS'
         LINE  (20,29),(1,29),SKIP=1
         BIN   (ATTEN),(XCSWCE),(XCSWPCI),(XCSWCDC)
         LABEL 'NOT USED','CHANNEL END','PRGM-CTLD TRPT',              X
               'CHAN DATA CHECK'
         LINE
         BIN   (XCSWSM),(XCSWDE),(XCSWICC),(XCSWCCC)
         LABEL 'NOT USED','DEVICE END','INCRCT LENGTH','CHAN CTL CHECK'
         LINE
         BIN   (XCSWCUE),(XCSWUC),(XCSWPC),(XCSWICC)
         LABEL 'NOT USED','UNIT CHECK','PROGRAM CHECK','I/F CTL CHECK'
         LINE  (20,29),(1,29),SKIP=2
         BIN   (XCSWBSY),(XCSWUE),(XCSWPCHK),(XCSWCH)
         LABEL 'BUSY','UNIT EXCEPTION','PROT CHECK','CHAINING CHECK'
         LINE  (30,42),(1,44)
         ROUTINE DEVDID,FORMID
         HEX   DEVDTA,0,4B
         LABEL 'CURRENT FORMAT RECORD ID','COMMAND DEPENDENT DATA'
SHORT1   LINE  SKIP=1
SHRTL1   LABEL ''
         LINE  (37,21),(3,38),SKIP=2
         HEX   STATFLG
         HEX   CEMODE
         LABEL 'STATISTICAL DATA-BYTE 0 (FLAGS)','BYTE 1 (SPARE)'
         LINE  ,(3,),SKIP=2
         LABEL 'STATISTICAL DATA COUNTERS 0-39'
         LINE  (20,29),(1,29),SKIP=1
         ROUTINE    CTR0,CONVLFT
         ROUTINE    CTR10,CONVLFT
         ROUTINE    CTR20,CONVLFT
         ROUTINE    CTR30,CONVLFT
         LABEL 'SPRTOR JAM SW','INTM TRNS OVRRUN','LINE MK REQ ERROR','X
               LINE MK PRT CHK'
         LINE
         ROUTINE    CTR1,CONVRHT
         ROUTINE    CTR11,CONVRHT
         ROUTINE    CTR21,CONVRHT
         ROUTINE    CTR31,CONVRHT
         LABEL 'SPRTOR TIMEOUT','STEP MOT STOP ERR','TRAV LIMIT SW','LIX
               NE MK DET ERR'
         LINE
         ROUTINE    CTR2,CONVLFT
         ROUTINE    CTR12,CONVLFT
         ROUTINE    CTR22,CONVLFT
         ROUTINE    CTR32,CONVLFT
         LABEL 'TOO LONG DOC','STACK A OR B JAM','TRAV TIME OVRRUN','LIX
               NE MK MISCOMP'
         LINE
         ROUTINE    CTR3,CONVRHT
         ROUTINE    CTR13,CONVRHT
         ROUTINE    CTR23,CONVRHT
         ROUTINE    CTR33,CONVRHT
         LABEL 'ALGN SCT TIMEOUT','STEP MOT STRT ERR','TRAV EMITTER ERRX
               ','CHAR OUT OF SCAN'
         LINE
         ROUTINE    CTR4,CONVLFT
         ROUTINE    CTR14,CONVLFT
         ROUTINE    CTR24,CONVLFT
         ROUTINE    CTR34,CONVLFT
         LABEL 'INTD TRANSPORT','STEP MOT SPD ERR','TRAV SPEED ERR','FLX
               D DELIM NOT FND'
         LINE
         ROUTINE    CTR5,CONVRHT
         ROUTINE    CTR15,CONVRHT
         ROUTINE    CTR25,CONVRHT
         ROUTINE    CTR35,CONVRHT
         LABEL 'STACKER SEL ERR','INC TIMEOUT','TRAV SCAN PITCH','CHAR X
               ON FLD BOUND'
         LINE
         ROUTINE    CTR6,CONVLFT
         ROUTINE    CTR16,CONVLFT
         ROUTINE    CTR26,CONVLFT
         ROUTINE    CTR36,CONVLFT
         LABEL 'HOP NOT IN POS','STACK SEL JAM','SPARE','VIDEO OVRRUN'
         LINE
         ROUTINE    CTR7,CONVRHT
         ROUTINE    CTR17,CONVRHT
         ROUTINE    CTR27,CONVRHT
         ROUTINE    CTR37,CONVRHT
         LABEL 'SER NO UPDATE CHK','CLUTCH FAIL PICK','SPARE','CHAR BUFX
               F OVRFLOW'
         LINE
         ROUTINE    CTR8,CONVLFT
         ROUTINE    CTR18,CONVLFT
         ROUTINE    CTR28,CONVLFT
         ROUTINE    CTR38,CONVLFT
         LABEL 'STACKER A JAM','SPARE','LINE MK NOT COMP','NOISE CHECK'
         LINE  (20,29),(1,29),SKIP=2
         ROUTINE    CTR9,CONVRHT
         ROUTINE    CTR19,CONVRHT
         ROUTINE    CTR29,CONVRHT
         ROUTINE    CTR39,CONVRHT
         LABEL 'STACKER B JAM','RD STA TIME MK CK','SER NO PRT CHK','SPX
               ARE'
         LINE  ,(3,),SKIP=2
         LABEL 'STATISTICAL DATA COUNTERS 40-55'
         LINE  (20,29),(1,29),SKIP=1
         ROUTINE CTR40,CONVLFT
         ROUTINE CTR50,CONVLFT
         LABEL 'SPARE','SPARE'
         LINE
         ROUTINE CTR41,CONVRHT
         ROUTINE CTR51,CONVRHT
         LABEL 'SPARE','SPARE'
         LINE
         ROUTINE CTR42,CONVLFT
         ROUTINE CTR52,CONVLFT
         LABEL 'SPARE','SPARE'
         LINE
         ROUTINE CTR43,CONVRHT
         ROUTINE CTR53,CONVRHT
         LABEL 'SPARE','SPARE'
         LINE
         ROUTINE CTR44,CONVLFT
         ROUTINE CTR54,CONVLFT
         LABEL 'SPARE','SPARE'
         LINE
         ROUTINE CTR45,CONVRHT
         ROUTINE CTR55,CONVRHT
         LABEL 'SPARE','SPARE'
         LINE
         ROUTINE CTR46,CONVLFT
         LABEL 'SPARE'
         LINE
         ROUTINE CTR47,CONVRHT
         LABEL 'SPARE'
         LINE
         ROUTINE CTR48,CONVLFT
         LABEL 'SPARE'
         LINE  SKIP=2
         ROUTINE CTR49,CONVRHT
         LABEL 'SPARE'
         LINE  (13,9),(1,19),SKIP=2
         HEX   SNSBYT,17,6B
         ROUTINE SPARES,SKIPTST2
         LABEL 'BYTE 0','BYTE 1','   BYTE 2','   BYTE 3','BYTE 4','BYTEH
                5'
         LINE  (14,19),(1,19),SKIP=0
         BIN   (SNB00),(SNB10)
         ROUTINE    SPARES,DONOTHNG
         ROUTINE    SPARES,DONOTHNG
         BIN   (SNB40),(SNB50)
         LABEL 'CMND REJ','NOT USED','','','ISM M SIZE','NOT USED'
         LINE  (52,19),SKIP=1
         BIN   (SNB20,,8),(SNB30,,8)
         LABEL ''
         LINE  (14,),(1,19),SKIP=1
         BIN   (SNB01),(SNB11)
         ROUTINE    SPARES,DONOTHNG
         ROUTINE    SPARES,DONOTHNG
         BIN   (SNB41),(SNB51)
         LABEL 'INTV REQD','MARK CHECK','','','ISM M SIZE','A DATA ST'
         LINE
         BIN   (SNB02),(SNB12)
         ROUTINE    SPARES,DONOTHNG
         ROUTINE    SPARES,DONOTHNG
         BIN   (SNB42),(SNB52)
         LABEL 'BUS O CHK','INV FORMAT','','','ISM M SIZE','NHP/G HARD'
         LINE
         BIN   (SNB03),(SNB13)
         ROUTINE    SPARES,DONOTHNG
         ROUTINE    SPARES,DONOTHNG
         BIN   (SNB43),(SNB53)
         LABEL 'EQUIP CHK','NOT USED','','','ISM M SIZE','ANAFNT PG RT'
         LINE
         BIN   (SNB04),(SNB14)
         ROUTINE    SPARES,DONOTHNG
         ROUTINE    SPARES,DONOTHNG
         BIN   (SNB44),(SNB54)
         LABEL 'NOT USED','INCP SCAN','','','NOT USED','NUM A-FONT'
         LINE
         BIN   (SNB05),(SNB15)
         ROUTINE    SPARES,DONOTHNG
         ROUTINE    SPARES,DONOTHNG
         BIN   (SNB45),(SNB55)
         LABEL 'NOT USED','NOT USED','','','INC HOP-STK','AN B-FONT'
         LINE
         BIN   (SNB06),(SNB16)
         ROUTINE    SPARES,DONOTHNG
         ROUTINE    SPARES,DONOTHNG
         BIN        (SNB46),(SNB56)
         LABEL 'NON INIT','NON RCVRY','','','SER NUMB','NUM B-FONT'
         LINE
         BIN   (SNB07),(SNB17)
         ROUTINE    SPARES,DONOTHNG
         ROUTINE    SPARES,DONOTHNG
         BIN   (SNB47),(SNB57)
         LABEL 'N IN/RCP E','OUTB RECD','','','LINE MKNG','NHP G ISM'
         LINE  ,(1,)
         ROUTINE    SPARES,DONOTHNG
         LABEL ''
SHORT2   LINE  SKIP=2
         ROUTINE SPARES,RESETR2
SHRTL2   LABEL ''
         LINE  SKIP=1
         ROUTINE SPARES,NOPRINT
         LABEL ''
         LABEL ''
         DC    X'FF'
DMPSIZE  DC    X'006C'
         DC    XL2'0018'
         DC    XL2'0000'
LABLES   DS    0F
         LSTART
         END
