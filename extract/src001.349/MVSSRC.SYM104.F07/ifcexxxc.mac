         TITLE 'IFCEXXXC  -  LOAD MODULE NAME : IFCE3330'      @XM09337
*  DSGEN MACRO     DSGEN MACRO     DSGEN MACRO     DSGEN MACRO        *
         SPACE 2
         MACRO
&NAME    DSGEN &X1,&X2,&X3,&X4,&X5,&X6,&X7,&X8,&X9,&X10,&X11,&X12,&X13,X
               &X14,&X15,&X16,&X17,&X18,&X19,&X20,&X21,&X22,&X23,&X24, X
               &X25,&X26,&X27,&X28,&X29,&X30,&X31,&X32
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000)
         LCLC  &SYMBOL
         LCLA  &OP,&COUNT,&BYTE
.LOOP    ANOP
&OP      SETA  &OP+1
&ITEMNBR SETA  &ITEMNBR+1
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE *,'NULL BIT COUNT FIELD'
         MEXIT
.OK1     ANOP
         AIF   ('&SYMBOL' NE '').OK
         MNOTE 'LOG ITEM SYMBOL NOT PROVIDED'
         AGO   .CNT
.OK      ANOP
         AIF   ('&SYMBOL'(1,1) EQ '''').CNT                *TEMP*
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR)  SETC '&SYSLIST(&OP,1)'
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF (&OP LT N'&SYSLIST).LOOP
         AIF   (&COUNT NE 32).NOT32
&NAME    DS    4C
         MEXIT
.NOT32   AIF   (&COUNT NE 64).ERR
&NAME    DS    8C
         MEXIT
.ERR     MNOTE '**BIT COUNT FIELDS DO NOT TOTAL 32 OR 64**'
         MEND
         EJECT
*  LINE MACRO     LINE MACRO     LINE MACRO     LINE MACRO            *
         SPACE 2
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &DB,&DT,&LB,&LT,&NRENTS
         GBLA  &LASTCC,&INITIAL
         GBLC  &NRENTSX
         GBLC  &CARRCON
         GBLB  &TEST
         LCLA  &S
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
&S       SETA  &LASTCC
         AGO   .DEFAULT
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
&S       SETA  &SKIP
.DEFAULT ANOP
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
&TEST    SETB  0
         AGO   .DD
.AB      AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    FL1'9'
&LASTCC  SETA  &SKIP
&TEST    SETB  1
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         EJECT
*  BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO     BIN MACRO  *
         SPACE 2
         MACRO
         BIN   &LOGITEM,&SKIP$OR
.*                                 &LOGITEM - NAME OF ITEM IN LOG
.*                                      RECORD DSECT
.*                                 &SKIP$OR - NBR OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLC &ITEM(1000)
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         GBLC  &DSECT
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K
         LCLA  &TEMP,&T
         LCLC  &S
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'YOU BLEW IT'
         ROUTINE DUM,SKIPPER
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
&TEMP    SETA  &ISHIFT
A&SYSNDX DC    AL.12(&LOGITEM-&DSECT),XL.4'&TEMP'
         AIF (&IBITS EQ 1 AND &B EQ 0).OUT
         ORG   A&SYSNDX
&B       SETB  1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
         MEND
         EJECT
*  HEX MACRO     HEX MACRO     HEX MACRO    HEXN MACRO     HEX MACRO  *
         SPACE 2
         MACRO
         HEX   &LOGITEM,&SKIP$OR,&BYTES
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &LOGITEM - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SKIP$OR - NUMBER OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &BYTES - NUMBER OF TOTAL INPUT BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLC &ITEM(1000),&DSECT
         GBLA &ITEMNBR,&BITS(1000),&SHIFT(1000),&NRENTS
         LCLB  &B
         LCLA  &IBITS,&NDX,&ISHIFT,&K,&T,&CODE,&BYTESP
         LCLC  &S,&LETTER
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
&CODE    SETA  1
&K       SETA  K'&BYTES
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE *,'BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL'
         MEXIT
.OK      AIF   ('&BYTES' EQ '').USEDEFN
&LETTER  SETC  '&BYTES'(&K,1)
&S       SETC  '&BYTES'(1,&K-1)
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).OK2
.ERR     MNOTE *,'DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY'
         MEXIT
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   ('&SKIP$OR' EQ '').BACKUP
&K       SETA  K'&SKIP$OR
&B       SETB  ('&SKIP$OR'(1,1) EQ 'B')
&S       SETC  '&SKIP$OR'(&B+1,&K-&B)
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&LOGITEM-&DSECT),XL.4'A'
         DC    BL.1'&B',FL.7'&S',FL.4'&BYTESP',FL.4'&CODE'
.OUT     ANOP
         MEND
         SPACE 2
*  ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO     ROUTINE MACRO*
         SPACE 2
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLC  &DSECT,&CSECT
         GBLC  &ITEM(1000)
         GBLA  &SHIFT(1000),&ITEMNBR
         GBLA  &NRENTS
         LCLA  &ISHIFT,&NDX
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOG ITEM NOT DEFINED'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL.4(&ISHIFT),AL.12(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         EJECT
*  LABEL MACRO     LABEL MACRO     LABEL MACRO     LABEL MACRO        *
         SPACE 2
         MACRO
         LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                            THIS MACRO ALLOWS UP TO ACHT LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN. THIS MACRO WILL ALSO ALERT
.*                                 THE PROGRAMMER TO EXACTLY WHERE THE
.*                                 TABLE MUST BE BROKEN IF NECESSARY
.*                                 TO AVOID EXCEEDING THE MAXIMUM LIMIT
         GBLC &LABELS(1000)
         GBLA  &LABELNR
         GBLA  &NRENTS
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
&MARGIN  SETC  '*'
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
         LSTART
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLC &LABELS(1000)
         GBLA  &LABELNR
         LCLA  &NDX
         LINEND
.LOOP    ANOP
&NDX     SETA  &NDX+1
         DC    C'&LABELS(&NDX)'
         AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
         LINEND
.*                            THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &NRENTS
         GBLC &NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         GBLC  &DSECT,&CSECT
         SPACE 2
IFCE3330 CSECT
&CSECT   SETC  'IFCE3330'
&DSECT   SETC  'M3330'
*
M3330    DSECT
         DSGEN (CLASRC,8),(SYSREL,8),(SWITCHES,16)
         DSGEN (RECID,8),(SPARE1,16),(TYPE,8)
         DSGEN (DAY,32)
         DSGEN (HOUR,32)
         DSGEN (SPARE2,8),(CPUSERL,24)
         DSGEN (CPUID,16),(SPARE3,16)
         DSGEN (JOBID1,32)
         DSGEN (JOBID2,32)
         DSGEN (FCCWCC,8),(FCCWDA,24)
         DSGEN (FCCWFL,8),(FCCW,8),(FCCWCT,16)
         DSGEN (CSWUS1,8),(CSWUS2,24)
         DSGEN (CSWUS3,8),(CSWUS4,8),(CSWUS5,16)
         DSGEN (DEVDPD,8),(SECCUA,24)                            S21926
         DSGEN (DEVTYP1,8),(DEVTYP1A,8),(DEVTYP2,16)
         DSGEN (SPARE4,8),(CUA,24)
         DSGEN (IORET,24),(SBCNT,8)
         DSGEN (VOLLAB1,8),(VOLLAB2,16),(VOLLAB3,8)
         DSGEN (VOLLAB4,8),(VOLLAB5,8),(SPARE5,16)
         DSGEN (LSKAD1,8),(LSKAD2,16),(LSKAD3,16),(LSKAD4,16),         C
               (LSKAD5,8)
         DSGEN (AHA1,32)
         DSGEN (AHA2,16),(SPARE6,16)
         DSGEN (SNB00,1),(SNB01,1),(SNB02,1),(SNB03,1),(SNB04,1),      C
               (SNB05,1),(SNB06,1),(SNB07,1),(SNB10,1),(SNB11,1),      C
               (SNB12,1),(SNB13,1),(SNB14,1),(SNB15,1),(SNB16,1),      C
               (SNB17,1),(SNB20,1),(SNB21,1),(SNB22,1),(SNB23,1),      C
               (SNB24,1),(SNB25,1),(SNB26,1),(SNB27,1),(SNB30,1),      C
               (SNB31,1),(SNB32,1),(SNB33,1),(SNB34,1),(SNB35,1),      C
               (SNB36,1),(SNB37,1)
         DSGEN (SNB40,1),(SNB41,1),(SNB42,1),(SNB43,1),(SNB44,1),      C
               (SNB45,1),(SNB46,1),(SNB47,1),(SNB50,1),(SNB51,1),      C
               (SNB52,1),(SNB53,1),(SNB54,1),(SNB55,1),(SNB56,1),      C
               (SNB57,1),(SNB60,1),(SNB61,1),(SNB62,1),(SNB63,1),      C
               (SNB64,1),(SNB65,1),(SNB66,1),(SNB67,1),(SNB70,1),      C
               (SNB71,1),(SNB72,1),(SNB73,1),(SNB74,1),(SNB75,1),      C
               (SNB76,1),(SNB77,1)
         DSGEN (SNB80,1),(SNB81,1),(SNB82,1),(SNB83,1),(SNB84,1),      C
               (SNB85,1),(SNB86,1),(SNB87,1),(SNB90,1),(SNB91,1),      C
               (SNB92,1),(SNB93,1),(SNB94,1),(SNB95,1),(SNB96,1),      C
               (SNB97,1),(SNB100,1),(SNB101,1),(SNB102,1),(SNB103,1),  C
               (SNB104,1),(SNB105,1),(SNB106,1),(SNB107,1),(SNB110,1), C
               (SNB111,1),(SNB112,1),(SNB113,1),(SNB114,1),(SNB115,1), C
               (SNB116,1),(SNB117,1)
         DSGEN (SNB120,1),(SNB121,1),(SNB122,1),(SNB123,1),(SNB124,1), C
               (SNB125,1),(SNB126,1),(SNB127,1),(SNB130,1),(SNB131,1), C
               (SNB132,1),(SNB133,1),(SNB134,1),(SNB135,1),(SNB136,1), C
               (SNB137,1),(SNB140,1),(SNB141,1),(SNB142,1),(SNB143,1), C
               (SNB144,1),(SNB145,1),(SNB146,1),(SNB147,1),(SNB150,1), C
               (SNB151,1),(SNB152,1),(SNB153,1),(SNB154,1),(SNB155,1), C
               (SNB156,1),(SNB157,1)
         DSGEN (SNB160,1),(SNB161,1),(SNB162,1),(SNB163,1),(SNB164,1), C
               (SNB165,1),(SNB166,1),(SNB167,1),(SNB170,1),(SNB171,1), C
               (SNB172,1),(SNB173,1),(SNB174,1),(SNB175,1),(SNB176,1), C
               (SNB177,1),(SNB180,1),(SNB181,1),(SNB182,1),(SNB183,1), C
               (SNB184,1),(SNB185,1),(SNB186,1),(SNB187,1),(SNB190,1), C
               (SNB191,1),(SNB192,1),(SNB193,1),(SNB194,1),(SNB195,1), C
               (SNB196,1),(SNB197,1)
         DSGEN (SNB200,1),(SNB201,1),(SNB202,1),(SNB203,1),(SNB204,1), C
               (SNB205,1),(SNB206,1),(SNB207,1),(SNB210,1),(SNB211,1), C
               (SNB212,1),(SNB213,1),(SNB214,1),(SNB215,1),(SNB216,1), C
               (SNB217,1),(SNB220,1),(SNB221,1),(SNB222,1),(SNB223,1), C
               (SNB224,1),(SNB225,1),(SNB226,1),(SNB227,1),(SNB230,1), C
               (SNB231,1),(SNB232,1),(SNB233,1),(SNB234,1),(SNB235,1), C
               (SNB236,1),(SNB237,1)
***********************************************************************
*                                                                     *
*              THIS ENTIRE MODULE IS IN SUPPORT OF  S20201            *
*              UNLESS OTHERWISE INDICATED                             *
*                                                                     *
***********************************************************************
IFCE3330 CSECT
         USING *,R9
         USING M3330,R2
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R14      EQU   14
R15      EQU   15
*
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L13      EQU   13
L14      EQU   14
L16      EQU   16
L17      EQU   17
L19      EQU   19
L22      EQU   22
L24      EQU   24
L29      EQU   29
L36      EQU   36
L46      EQU   46                                                S21926
HF0      EQU   X'F0'
H01      EQU   X'01'
H04      EQU   X'04'
H08      EQU   X'08'
HC0      EQU   X'C0'
H80      EQU   X'80'
H6F      EQU   X'6F'                                           Z12050VM
H60      EQU   X'60'                                           Z12050VM
H50      EQU   X'50'
H40      EQU   X'40'
H30      EQU   X'30'
H20      EQU   X'20'
H10      EQU   X'10'
H7F      EQU   X'7F'                   MASK TO CLR HI-ORDER BIT XL03130
CLRSGN   EQU   X'F0'
LOGMODE  EQU   X'10'
NOLOG    EQU   X'EF'                                             A44068
SETDR    EQU   X'3F'
EMU      EQU   X'08'               EMULATION BIT               @Z30RIVS
SS1CNT   EQU   28                      NUMBER OF SENSE BYTE    @Y17BSSS
*                                      FOR VIRTUAL 3330        @Y17BSSS
CV       EQU   C'V'                    CHARACTER V             @Y17BSSS
         DC    A(ENTRIES)
         DC    CL8'IFCE3330'
XR9PTR   DC    F'0'
XLABELP  DC    F'0'
*
FE0      DC    X'FE'
         DC    CL8'IFCEMER0'
FE1      DC    X'FE'
         DC    CL8'IFCEMER1'
FE2      DC    X'FE'
         DC    CL8'IFCEMER2'
FE3      DC    X'FE'
         DC    CL8'IFCEMER3'
FE4      DC    X'FE'
         DC    CL8'IFCEMER4'
FE5      DC    X'FE'
         DC    CL8'IFCEMER5'
FEWIN    DC    X'FE'                                            XL03130
         DC    CL8'IFCEWIN1'                                    XL03130
FEMAD    DC    X'FE'                                           @Z40RIVS
         DC    CL8'IFCEMAD1'                                   @Z40RIVS
         SPACE
*
*        SET HEX -PRINTS 1 CHAR HEX
*
SETHEX   STM   R5,R8,XSAVE             SAVE REGS
         LA    R8,CHARS                CHARACTER TABLE POINTER
         IC    R7,L0(R4)               PICK UP CHARACTER
         SLL   R7,L24                  MOVE TO HI R7
         SR    R6,R6                   CLEAR REGS
         SLDL  R6,L4                   MOVE FOUR BITS
         AR    R6,R8                   ADD OFFSET AND POINTER
         MVC   L0(L1,R3),L0(R6)        MOVE CHARACTER TO LINE
         SR    R6,R6                   CLEAR AGAIN
         SLDL  R6,L4                   MOVE LAST 4 BITS
         AR    R6,R8                   COMPUTE OFFSET
         MVC   L1(L1,R3),L0(R6)        MOVE LAST CHARACTER
         B     RETURN
*
*        TEST TO SEE IF RECORD IS IN AR-149 FORMAT
*
SETCONV  TM    L0(R4),HEX02            HAS RECORD BEEN CONVERTED KEY32
         BCR   ON,R14                  YES RETURN
         SR    R15,R15                 NO CLEAR R15 FOR NO PRINT OF
         BR    R14                     LINE
ON       EQU   1
HEX02    EQU   X'02'
*
*        NO OP RETURN
*
SKIPPER  BR    R14
*
*        TO ADD SPACES ON LINE
*
SPACER1  LA    R3,L1(R3)
         BR    R14
SPACER19 LA    R3,L19(R3)
         BR    R14
BKSP1    BCTR  R3,0
         BR    R14
*
*        RESTORE REGISTERS USED BY ROUTINES IN THIS MODULE
*
RETURN   LM    R5,R8,XSAVE             RESTORE REGS
         BR    R14                     RETURN
TEST5    TM    L0(R4),H50
         BO    TEST5ON
         BR    R14
TEST5ON  SR    R15,R15
         BR    R14
*
*        SET THE DATE READY FOR PRINT
*
SETDATE  UNPK  XSAVE(L8),L1(L3,R4)     UNPACK THE DATE
         MVC   L0(L3,R3),XSAVE+L5      MOVE DAY
         MVC   L6(L2,R3),XSAVE+L3      MOVE YEAR
         BR    R14
*
*        SET THE DEVICE TYPE READY FOR PRINT
*                THE FOLLOWING ROUTINE CHANGED FOR  XL03130 AND XL03145
*
SETDEVT  STM   R5,R8,XSAVE             SAVE REGS
         ST    R3,EMUSAV           SAVE LINE PTR               @Z30RIVS
         LA    R5,L4               LOAD # OF DEVICE TYPES      @Z30RIVS
         LA    R6,DEVTABLE             POIT TO DEVICE TYPES
SETDEVLP CLC   L0(L2,R4),L0(R6)        COMPARE TYPES
         BE    SDEVFND                 FOUND ONE SO BRANCH
         LA    R6,L9(R6)               BUMP PTR TO NXT DEV TYP  XL03145
         BCT   R5,SETDEVLP             BRANCH IF THERE ARE MORE
         MVC   L0(L4,R3),NONE          NO DEV TYPE MOVE IN NONE
         B     RETURN
SDEVFND  MVC   L0(L7,R3),L2(R6)        MOVE DEV NAME TO PRINT   XL03145
         CLC   L0(L2,R4),DEV3330       IS DEVICE 3330          @Y17BSSS
         BNE   RETURN                  NO, EXIT                @Y17BSSS
         CLI   SBCNT,SS1CNT            IS 3330 VIRTUAL         @Y17BSSS
         BNE   RETURN                  NO, EXIT                @Y17BSSS
         MVI   L4(R3),CV               INDICATE VIRTUAL DEV    @Y17BSSS
         B     RETURN
**                                                             @Z30RIVS
**       ROUTINE TO TEST FOR EMULATION AND CHANGE LABEL.       @Z30RIVS
**                                                             @Z30RIVS
EMUTEST0 STM   R5,R8,XSAVE         SAVE WORK REG.              @Z30RIVS
         TM    L0(R4),EMU          THIS DEV EMULATED ?         @Z30RIVS
         BNO   RETURN              NO, EXIT THIS RTNE.         @Z30RIVS
         L     R5,EMUSAV           GET PRNT LINE PTR           @Z30RIVS
         LA    R6,20               GET DECRE VALUE             @Z30RIVS
         SR    R5,R6               DECRE LINE PTR              @Z30RIVS
         MVC   L0(L13,R5),EMUL     MOVE IN EMU LABEL           @Z30RIVS
         B     RETURN              EXIT THIS RTNE.             @Z30RIVS
         SPACE 1                                               @Z30RIVS
**                                                             @Z30RIVS
*        CHECK FOR CPU AND SERIAL NUMBER
*
SETCPUNO STM   R5,R8,XSAVE             SAVE REGS
         SR    R5,R5                   CLEAR R5
         IC    R5,L0(R4)               PICK UP MODEL NO
         SLL   R5,L8                   IN TO
         IC    R5,L1(R4)               R5
         LTR   R5,R5                   TEST FOR ZERO
         LR    R5,R3                   PUT LINE ADDRESS IN R5    S21926
         BNZ   SETSER                  NON ZERO BR               S21926
         LA    R6,L46                  OFFSET IN REG SIX         S21926
         SR    R5,R6                   SUBTRACT OFFSET FROM POINTER
         MVC   L0(L29,R5),UNIVERS      PUT IN UNIVERSAL NONE     S21926
         B     RETURN                  BACK TO MAIN STREAM       S21926
*
SETSER   LA    R6,L36                  OFFSET IN REG SIX         S21926
         SR    R5,R6                   SUBTRACT OFFSET           S21926
         MVC   L0(L10,R5),SERNO        MOVE IN SERIAL NO.        S21926
         B     RETURN                  BACK TO MAIN STREAM
*
*        SET OS RELEASE NUMBER
*
CONVREL  STM   R5,R8,XSAVE              SAVE WORK REGS
         SR    R6,R6                    CLEAR R6
         IC    R6,L0(R4)                PICK UP REL & SYS VALUES
         SRDL  R6,L5                    SAVE REL NO IN R7
        SLL   R6,L2                    MULTIPLY SYS VALUE BY 4
         L     R8,XLABELP               PICK UP LABEL POINTER
         LA    R6,RELTAB(R6)            INDEX INTO TABLE OF SYSTEMS
         MVC   L0(L4,R8),L0(R6)         MOVE SYSTEM NAME INTO LABEL
         SR    R6,R6                    CLEAR R6
         SLDL  R6,L5                    RETREIVE REL NO.
         LTR   R6,R6                    IS IT ZERO
         BZ    NOREL                    BR-YES
         CVD   R6,WORK                  CONVERT IT
         UNPK  L0(L2,R3),WORK+L6(L2)    UNPACK IT INTO PRINT BUFF
         MVZ   L1(L1,R3),L0(R3)         MOVE ON PROPER ZONE
         B     RETURN                   EXIT
NOREL    MVC   L0(L4,R3),NONE           MOVE IN NONE FOR REL
         B     RETURN
*
*        SET PROGRAM NAME TO PRINT LINE
*
SETPGMN  MVC   L0(L8,R3),L0(R4)        MOVE 8 CHARS TO LINE
         BR    R14                     RETURN
*
*        SET BINARY WITH R4 POINTING TO THE CHAR
*
SETBIN2  STM   R5,R8,XSAVE
         IC    R7,L0(R4)
         SLL   R7,L24
         LR    R8,R3
         LA    R5,L8
         S     R8,ELEVEN
SETBINA  SR    R6,R6                   CLEAR REG 6
         SLDL  R6,L1                   MOVE BIT TO R6
         STC   R6,L0(R8)               PUT IT INTO PRINT LINE
         MVZ   L0(L1,R8),CHAR0
         LA    R8,L1(R8)               MOVE POINTER TO NEXT POS
         BCT   R5,SETBINA              LOOP TILL 8 PRINTED
         B     RETURN
*
*        THE TWO FOLLOWING ROUTINES DETERMINE IF THE RECORD
*        IS CONVERTED OR NOT.  IF IT IS A CONVERTED RECORD
*        ONLY THE DEVICE ADDRESS OF THE SECONDARY CUA IS PRINTED.
*
*        ONLY ONE OF THE TWO LABELS ARE PRINTED ON THE LINE,
*        DEPENDING ON WHETHER OR NOT IT IS A CONVERTED RECORD.
*
ISREL20  TM    CLASRC,HEX02            IS THIS A CONVERTED RECRD A49141
         BZ    NOTCONVT                N O  BRANCH               A49141
         BR    R14                     Y E S  RETURN             A49141
NOTCONVT SR    R15,R15                 DO NOT PRINT THIS LINE IF A49141
*                                      RECORD IS REL.21 OR HIGHR A49141
         BR    R14                     RETURN                    A49141
*
ISREL21  TM    CLASRC,HEX02            IS THIS A CONVERTED RECRD A49141
         BZ    NOTCHNGD                N O  BRANCH TO RETURN     A49141
         SR    R15,R15                 DO NOT PRINT THIS LINE IF A49141
*                                      RECORD IS REL. 20.1       A49141
NOTCHNGD BR    R14                     RETURN                    A49141
         SPACE
*
*      THE FOLLOWING WILL SUPPRESS PRINTING THIS LINE IF
**       THE DEVICE IS A 3340(WINCHESTER) OR 3350(MADRID)      @XM09337
*
CK3340   CLC   L0(L2,R4),DEV3350   IS THIS A 3350              @XM09337
         BE    DPRT                YES, DON'T PRINT LINE       @XM09337
         TM    SNB20,EMU           TEST FOR EMULATION          @ZA06044
         BO    DPRT                PRINT                       @ZA06044
         CLC   L0(L2,R4),DEV3340   IS THIS A WINCHESTER        @XM09337
         BNE   BACK                    NO - RETURN              XL03130
DPRT     SR    R15,R15             YES - DON'T PRITN LINE      @XM09337
BACK     BR    R14                     RETURN                   XL03130
         SPACE
*
*      THE FOLLOWING CONVERTS THE I/O RETRY BYTES TO PRINTABLE HEX
*        IF THIS IS A 3340 DEVICE
*        IF IT ISN'T THIS LINE ISN'T PRINTED
*
SETRETY  CLC   DEVTYP2(L2),DEV3340     IS THIS A 3340           XL03130
         BE    CONVRET                 YES BR TO CONVERT RETRYS XL03130
         SR    R15,R15                 NO-DONT PRINT THIS LINE  XL03130
         BR    R14                     RETURN                   XL03130
         SPACE
CONVRET  STM   R5,R8,XSAVE             SAVE REGS                XL03130
         SR    R6,R6                   CLEAR                    XL03130
         SR    R7,R7                        REGS                XL03130
         IC    R6,L0(R4)               INSERT                   XL03130
         IC    R7,L1(R4)                      COUNTS            XL03130
         LA    R5,H7F                  LOAD MASK FOR 'AND'      XL03130
         NR    R7,R5                   CLEAR HI-BIT OF LO-BYTE  XL03130
         AR    R6,R7                   ADD COUNTS               XL03130
         XC    READYP(L8),READYP       CLEAR WORK AREA          XL03130
         CVD   R6,READYP               CONVERT ERROR COUNTER TO DECI
         UNPK  READYP(L5),READYP+L5(L3)  UNPACK DECI COUNT
         OI    READYP+L4,CLRSGN        CLEAR SIGN
         MVC   L0(L4,R3),READYP+L1     MOVE COUNTER READY TO PRINT
         B     RETURN
ISLOG1   TM    L0(R4),LOGMODE          IS THIS RECORD IN LOGGING MODE
         BO    ISLOG2                  THIS TIME DO NOT PRINT
         BR    R14                     NO - RETURN
ISLOG2   NI    FMLOGSW,NOLOG           YES - CLR LOG'NG MODE SW
         SR    R15,R15                 DONT PRINT THIS LINE
         BR    R14                     RETURN
         SPACE
ISLOG    STM   R5,R8,XSAVE             SAVE REGS                 S21926
         SR    R5,R5                                             S21926
         TM    CLASRC,HEX02            HAS THIS RECORD BEEN CONVERTED
         BZ    ISLOGA                  NO IT HAS NOT-CONTINUE    S21926
         IC    R5,SBCNTL+L1            INSERT CHARACTER          S21926
         STC   R5,SBCNT                FOR REMAINING MODULES     S21926
         MVC   SNB00(L24),SNB100       YES THEN MOVE SENSE OVER SDR
ISLOGA   TM    L0(R4),LOGMODE          IS THIS RECORD IN LOGGING MODE
         BO    LOGISON                 YES
         NI    FMLOGSW,NOLOG           NO-CLEAR LOGGING MODE SW
         B     RETURN                  RETURN
LOGISON  OI    FMLOGSW,LOGMODE         TURN ON LOGGING MODE SWITCH
         MVC   L0(L13,R3),LGMD          MOVE IN LOGGING MODE     S21926
         B     RETURN                  RETURN
*
DRIEPH   STM   R5,R8,XSAVE             SAVE REGISTERS
         CLC   DEVTYP2(L2),DEV3340     IS THIS A 3340           XL03130
         BE    SETWIN                  YES - BR TO SET PHY DRIV XL03130
         CLC   DEVTYP2(L2),DEV3350 IS THIS A 3350              @XM09337
         BE    SETWIN              YES, BRANCH                 @XM09337
         TM    SNB24,EMU           THIS A EMULATED DEVICE      @XM09337
         BO    SETWIN              YES, BRANCH                 @XM09337
         LA    R5,DRIVTBLE             ADDRESS OF TABLE TO IDENT DRIVES
         LA    R6,L8                   NUMBER OF POSSIBILITIES   S21926
         MVC   READYP(L1),L0(R4)       MOVE CNTRL UNIT AND DRIVE TO CLR
         NI    READYP,SETDR            CLEAR CNTRL UNIT BITS
DRIEPH1   CLC   READYP(L1),L0(R5)      IS BYTE 4 EQUAL TO DRIVE A?,ETC.
         BE    DRIEPH2                  YES
         LA    R5,L2(R5)                UP POINTER TO LOOK AT NEXT DRV
         BCT   R6,DRIEPH1              LOOP
         MVC   L0(L4,R3),NONE          NONE MATCH MOVE IN NONE
         B     RETURN                  RETURN
DRIEPH2  MVC   L0(L1,R3),L1(R5)        MOVE PHYSICAL DRIVE ID
         B     RETURN                  RETURN
         SPACE
SETWIN   SR    R8,R8                   CLEAR REG                XL03130
         SR    R7,R7                   CLEAR REG                XL03130
         IC    R7,L0(R4)               INSERT SENSE BYTE 4      XL03130
ISBITON  LTR   R7,R7                   ARE THERE ANY BITS ON    XL03130
         BZ    MOVPHYDR                NO - BR TO MOVE IN PHY   XL03130
         LA    R8,L1(R8)               ADD ONE TO REG           XL03130
         SRL   R7,L1                   SHIFT RIGHTMOST BIT OUT  XL03130
         B     ISBITON                 BR TO CK FOR A BIT ON    XL03130
MOVPHYDR LA    R8,PHYDRVS(R8)          LOAD ADDR OF PHY DRIVE   XL03130
         MVC   L0(L1,R3),L0(R8)        MOVE PHYSICAL DRIVE ID   XL03130
         B     RETURN                  RETURN                   XL03130
         SPACE 2
SETVOL   MVC   L0(L6,R3),L0(R4)        MOVE VOLUME LABEL FOR PRINT
         BR    R14                     RETURN
*
CPUH     TM    L0(R4),HC0
         BO    CPUH3
         BZ    CPUH0
         TM    L0(R4),H80              IS THIS CONTROL UNIT 2
         BO    CPUH2
         TM    L0(R4),H40              IS THIS CONTROL UNIT 1
         BO    CPUH1
         BR    R14                     RETURN
*
CPUH3    MVC   L0(L1,R3),CHARS+L3
         BR    R14
CPUH0    MVC   L0(L1,R3),CHARS
         BR    R14
CPUH2    MVC   L0(L1,R3),CHARS+L2
         BR    R14
CPUH1    MVC   L0(L1,R3),CHARS+L1
         BR    R14
*
CHECKLGM STM   R5,R8,XSAVE             SAVE REGISTERS
         TM    FMLOGSW,LOGMODE         IS THIS LOGGING MODE
         BO    RECLOGM                 YES
LOGISOFF SR    R15,R15                 NO,DO NOT PRINT THIS LINE
         B     RETURN
*
RECLOGM  SR    R5,R5
         LR    R5,R3                   MOVE POINTER TO REG 5
         MVC   L0(L13,R5),LGMD         MOVE LOGMODE TO PRINT FIELD
         LA    R5,L14(R5)              BUMP POINTER
* FRMTLOG, ROUTINE TO DETERMINE DEVICE SENSE AREA RECORD FMTS  Z12050VM
*    AND SET LABELS ACCORDINGLY. RULES ARE FOR CHECKS          Z12050VM
*     FOR THE FOLLOWING FORMATS(ALL OTHERS ARE IGNORED):       Z12050VM
*            5,4,1                                             Z12050VM
FRMTLOG  EQU   *                        DETERMINE RECORD FMT   Z12050VM
         CLI   SNB70,H6F                ELIMINATE ALL BUT      Z12050VM
         BH    RETURN                    FMT 6 TO 0            Z12050VM
         TM    SNB70,H60                FORMAT 6?              Z12050VM
         BO    RETURN                    IGNORE FORMAT 6       Z12050VM
         TM    SNB70,H50                FORMAT 5?              Z12050VM
         BO    FRMTLOG5                  DATA CHECK-CORRECTABLEZ12050VM
         TM    SNB70,H40                FORMAT 4?              Z12050VM
         BO    FRMTLOG4                  DATA CHECK-RETRY      Z12050VM
         TM    SNB70,H30                FORMAT 3?              Z12050VM
         BO    RETURN                    IGNORE FORMAT 3       Z12050VM
         TM    SNB70,H20                FORMAT 2?              Z12050VM
         BO    RETURN                    IGNORE FORMAT 2       Z12050VM
         TM    SNB70,H10                FORMAT 1?              Z12050VM
         BO    FRMTLOG1                  SEEK CHECK            Z12050VM
         B     RETURN                    IGNORE FORMAT 0       Z12050VM
*                                                              Z12050VM
FRMTLOG1 MVC   L0(L'SEEKCHK,R5),SEEKCHK                        Z12050VM
         B     RETURN                                          Z12050VM
FRMTLOG4 MVC   L0(L'DATACHKR,R5),DATACHKR                      Z12050VM
         B     RETURN                                          Z12050VM
FRMTLOG5 MVC   L0(L'DATACHKC,R5),DATACHKC                      Z12050VM
         B     RETURN                                          Z12050VM
*                                                              Z12050VM
*
WHATKND  STM   R5,R8,XSAVE             SAVE REGISTERS
         TM    FMLOGSW,LOGMODE         IS THIS LOGGING MODE
         BO    LOGISOFF                YES,DO NOT PRINT THIS LINE
         SR    R5,R5                   NO
         LR    R5,R3                   MOVE POINTER TO REG 5
         MVC   SNBSAVE(L1),SNB10       MOVE SENSE BYTE 1        XL03130
WHATKND0 TM    L0(R4),H20              IS THIS BUS OUT PARITY
         BO    WHATKND1                YES
         TM    L0(R4),H10              IS THIS EQUIMENT CHECK
         BO    WHATKND2                YES
         TM    L0(R4),H08              IS THIS DATA CHECK
         BO    WHATKND3                YES
         TM    L0(R4),H04              IS THIS OVER RUN
         BO    WHATKND4                YES
         TM    SNB10,H40               IS THIS INVALID TRACK FORMAT
         BO    WHATKND5                YES
         TM    L0(R4),H01              IS THIS A SEEK CK(3340)   XM3751
         BO    WHATKND6                YES - BR                  XM3751
         MVC   L0(L16,R5),UNKN         NONE OF THE ABOVE
         B     RETURN
WHATKND1 MVC   L0(L16,R5),BUSOP
         B     RETURN
WHATKND2 MVC   L0(L16,R5),EQCHK        MOVE IN EQUIPMENT CHECK
         LA    R5,L17(R5)              BUMP POINTER FOR PRINT
         TM    SNB70,H30               IS THIS EQ CHK CNTRL UNIT F 3
         BO    KINDEQC1                YES
         TM    SNB70,H20
         BO    KINDEQC1                YES
         TM    SNB70,HF0
         BZ    KINDEQC1                YES
         TM    SNB70,H10               IS THIS EQ CHK DRIVE  F 1
         BO    KINDEQD1                YES
         B     RETURN                  NONE OF THE ABOVE   RETURN
KINDEQC1 MVC   L0(L13,R5),CNTRLUNT     MOVE IN CONTROL UNIT
         LA    R5,L13(R5)              BUMP PRINT POINTER
TESTPERM TM    SNBSAVE,H80             IS THIS ERROR PERMANENT   XM3751
         BO    KINDEQC2                YES
         TM    SWITCHES+1,X'40'    TEST HEADER FOR PERM        @ZA06044
         BZ    KINDEQC2            YES GO TO ADD               @ZA06044
         MVC   L0(L9,R5),TEMP          N/, THEN TEMPORARY
         B     RETURN
KINDEQC2 MVC   L0(L9,R5),PERM
         B     RETURN
*
KINDEQD1 MVC   L0(L6,R5),DRIVE         MOVE IN DRIVE
         LA    R5,L6(R5)               BUMP PRINT POINTER
         B     TESTPERM                GO TEST FOR PERM OR TEMP  XM3751
*
WHATKND3 MVC   L0(L11,R5),DATCK        MOVE IN DATA CHK
         LA    R5,L11(R5)              BUMP PRINT POINTER
         TM    SNBSAVE,H80             IS THIS ERROR PERMANENT  XL03130
         BO    DATCKP                  YES
         TM    SWITCHES+1,X'40'    TEST HEADER FOR PERM        @ZA06044
         BO    RETURN              NO, TEMP - EXIT             @ZA06044
DATCKP   MVC   L0(L9,R5),PERM
         B     RETURN
WHATKND4 MVC   L0(L16,R5),OVRN
         B     RETURN
WHATKND5 MVC   L0(L17,R5),INVTRKF
         B     RETURN
WHATKND6 MVC   L0(L11,R5),SEEKCHK      MOVE 'SEEK CHECK' TO LINE XM3751
         LA    R5,L11(R5)              BUMP PRINT POS PTR        XM3751
         B     TESTPERM                BR TO TEST FOR PERM/TEMP  XM3751
         SPACE 2
*
CHKFMT   STM   R5,R8,XSAVE
         SR    R5,R5
         TM    L0(R4),H50              IS THIS FORMAT 5
         BO    CALLFMT5                YES
         TM    L0(R4),H40              IS THIS FORMAT 4
         BO    CALLFMT4                YES
         TM    L0(R4),H30              IS THIS FORMAT 3
         BO    CALLFMT3                YES
         TM    L0(R4),H20              IS THIS FORMAT 2
         BO    CALLFMT2                YES
         TM    L0(R4),H10              IS THIS FORMAT 1
         BO    CALLFMT1                YES
         B     CALLFMT0
*
CALLFMT0 LA    R5,FE0-L4               SET UP TO CALL FORMAT 0
         ST    R5,XR9PTR
         B     RETURN
CALLFMT1 LA    R5,FE1-L4               SET UP TO CALL FORMAT 1
         ST    R5,XR9PTR
         B     RETURN
CALLFMT2 LA    R5,FE2-L4               SET UP TO CALL FORMAT 2
         ST    R5,XR9PTR
         B     RETURN
CALLFMT3 LA    R5,FE3-L4               SET UP TO CALL FORMAT 3
         ST    R5,XR9PTR
         B     RETURN
CALLFMT4 LA    R5,FE4-L4               SET UP TO CALL FORMAT 4
         ST    R5,XR9PTR
         B     RETURN
CALLFMT5 LA    R5,FE5-L4               SET UP TO CALL FORMAT 5
         ST    R5,XR9PTR
         B     RETURN
         SPACE
*
**       THE FOLLOWING CALLS A NEW MODULE IF THIS IS A 3340/3350
*
CKDEV    CLC   L0(L2,R4),DEV3340       IS THIS A 3340           XL03130
         BNE   CHK3350             NO, GO CHK FOR 3350         @Z40RIVS
         STM   R5,R8,XSAVE             YES - SAVE REGS          XL03130
         LA    R5,FEWIN-L4             SET UP TO CALL           XL03130
         ST    R5,XR9PTR                     3340 EDIT TABLE    XL03130
         SR    R15,R15                 DONT PRINT THIS LINE     XL03130
         B     RETURN                  RETURN                   XL03130
CHK3350  CLC   L0(L2,R4),DEV3350   IS THIS A 3350?             @Z40RIVS
         BE    YEAMAD              YES, GO TO IFCEMAD1         @XM09337
         TM    SNB24,EMU           THIS AN EMULATED DEVICE     @XM09337
         BNOR  R14                 NO, RETURN                  @XM09337
YEAMAD   EQU   *                   ENTRY TO CALL IFCEMAD1      @XM09337
         STM   R5,R8,XSAVE         SAVE REGS                   @Z40RIVS
         LA    R5,FEMAD-L4         SET UP TO CALL 3350 EDIT    @Z40RIVS
         ST    R5,XR9PTR                                       @Z40RIVS
         SR    R15,R15             DON'T PRINT THIS LINE       @Z40RIVS
         B     RETURN              EXIT                        @Z40RIVS
         SPACE
TESTMOD  STM   R5,R8,XSAVE             SAVE THE REGS
         TM    L0(R4),H30              IS THIS AN OBR OR TPER    S21926
         BO    YESOBR                  YES IT IS AN OBR          S21926
         SR    R15,R15                 NO,IT IS A TPER
         LA    R5,TPRLABEL-L4          FIXIT TO GO GET ANOTHER RECORD
         ST    R5,XR9PTR
YESOBR   B     RETURN
*
DRIVTBLE DC    X'38'
         DC    C'A'
         DC    X'31'
         DC    C'B'
         DC    X'2A'
         DC    C'C'
         DC    X'23'
         DC    C'D'
         DC    X'1C'
         DC    C'E'
         DC    X'15'                                             S21926
         DC    C'F'
         DC    X'0E'
         DC    C'G'
         DC    X'07'
         DC    C'H'
         SPACE
EMUL     DC    C'IS A EMULATED'                                @Z30RIVS
PHYDRVS  DC    C'0HGFEDCBA'            PHYSICAL DRIVE ID'S      XL03130
ELEVEN   DC    F'11'
PERM     DC    C'PERMANENT-      '
TEMP     DC    C'TEMPORARY-      '
DRIVE    DC    C'DRIVE-          '
CNTRLUNT DC    C'CONTROL UNIT-   '
INVTRKF  DC    C'INVALID TRACK FMT'
OVRN     DC    C'OVER RUN-       '
DATCK    DC    C'DATA CHECK-     '
EQCHK    DC    C'EQUIPMENT CHECK '
BUSOP    DC    C'BUS OUT PARITY- '
UNKN     DC    C'UNKNOWN-        '
LGMD     DC    C'LOGGING MODE '
DATACHKC DC    C'DATA CHECK-CORRECTABLE'
DATACHKR DC    C'DATA CHECK-RETRY'
SEEKCHK  DC    C'SEEK CHECK-'                                    XM3751
FMLOGSW  DC    X'00'
SNBSAVE  DC    X'00'                                            XL03130
         DS    0F
EMUSAV   DC    F'0'                CONTAINS PTR INTO LINE      @Z30RIVS
XSAVE    DC    5F'0'
NONE     DC    CL6'NONE  '
CHARS    DC    C'0123456789ABCDEF'
CHAR0    DC    C'0'
SERNO    DC    C'SERIAL NO.'
UNIVERS  DC    C'UNIVERSAL   SERIAL NO. NONE  '
         SPACE
         DS    0H                                               XL03130
DEVTABLE EQU   *                                               @Y17BSSS
DEV3330  DC    X'2009'                 MERLIN                  @Y17BSSS
         DC    C'3330   '                     DEVICE            XL03145
DEV3340  DC    X'200A'                 WINCHESTER               XL03130
         DC    C'3340   '                         DEVICE        XL03130
         DC    X'200D'                 ICEBERG                  XL03145
         DC    C'3330M11'                      DEVICE           XL03145
DEV3350  DC    X'200B'                                         @Z30RIVS
         DC    C'3350   '                                      @XM09337
         SPACE
         DS    0D
READYP   DC    CL8' '
RELTAB   DS    0C                                              @L03976
         DC    C'OS  '                                         @L03976
         DC    C'DOS '                                         @L03976
         DC    C'VS 1'                                         @L03976
         DC    C'V370'                                         @L03976
         DC    C'VS 2'                                         @L03976
         DC    C'    '                                         @L03976
         DC    C'    '                                         @L03976
         DC    C'    '                                         @L03976
WORK     EQU   READYP
TPRLABEL DC    XL1'FF'
         DC    XL2'0000'
         DC    XL2'0000'
         DC    XL2'0000'
ENTRIES  DS    0F
         DC    XL4'00010001'       FORMAT 1
         DC    XL4'00010001'       FORMAT 2
         DC    A(LABELS)           LABEL POINTER
         DC    H'0'                DISP
         LINE
         ROUTINE   CLASRC,TESTMOD      TEST FOR TPER OR OBR      S21926
         LABEL ' '
*
*        SKIP TO CHANNEL 1
*
         DC    X'01'
         DC    X'000B8B00'
*
STERTM   LINE  (78,23),(1,35),SKIP=1                             S21926
         HEX   CPUID,0,2B                                        S21926
         HEX   CPUSERL,0,3B                                      S21926
         ROUTINE   CPUID,SETCPUNO                                S21926
         LABEL '---RECORD ENTRY TYPE - UNIT CHECK','   SOURCE - OUTBOARC
               D','MODEL-'
*
         LINE  (16,38),(4,42)                                    S21926
         ROUTINE    SYSREL,CONVREL
         ROUTINE   SNB20,ISLOG                                   S21926
         LABEL      'XXXX REL.'
*
         LINE  (98,1),(27,29)                                    S21926
         ROUTINE   JOBID1,SETPGMN                                S21926
         LABEL 'DAY YEAR','HH MM SS.TH','JOB IDENTITY'           S21926
*
         LINE  (27,29),(21,30),SKIP=2                            S21926
         ROUTINE   DAY,SETDATE                                   S21926
         HEX   HOUR,1,4B                                         S21926
         ROUTINE   SPARE1,SKIPPER                                S21926
         HEX   JOBID1,B16,4B                                     S21926
         HEX   JOBID2,B37,4B                                     S21926
         LABEL 'DATE-','TIME'                                    S21926
*
         LINE  ,(1,1),SKIP=2                                     S21926
         ROUTINE   CLASRC,SETCONV                                S21021
         LABEL 'OBR RECORD CONVERTED TO THE STANDARD FORMAT'     S21021
         LINE  (34,1),(2,32),SKIP=1                              S21021
         ROUTINE   DEVTYP2,SETDEVT                              XL03130
         ROUTINE SNB20,EMUTEST0                                @Z30RIVS
         LABEL 'DEVICE TYPE'                                    XL03130
         LINE
         HEX   CUA,B0,3B                                         S21926
         LABEL 'PHYSICAL  CHANNEL UNIT ADDRESS'                  S21021
         LINE  (34,4),(2,32)                                     S21926
         HEX   SECCUA,0,3B                                       A49141
         ROUTINE   SPARE1,ISREL21      IF THIS IS A CONVERTED    A49141
*                                      RECORD THE FOLLOWING      A49141
*                                      LABEL IS  N O T  PRINTED  A49141
         LABEL 'LOGICAL   CHANNEL UNIT ADDRESS'                  A49141
         LINE  (38,1)
         HEX   DEVTYP1A,0,1B                                     A49141
         ROUTINE   SPARE1,ISREL20      IF THIS IS A CONVERTED    A49141
*                                      RECORD THE FOLLOWING      A49141
*                                      LABEL  I S  PRINTED       A49141
         LABEL 'LOGICAL   CHANNEL UNIT ADDRESS  000X'            A49141
         LINE  (34,1),(2,32)                                     S21926
         ROUTINE   SNB40,DRIEPH
         LABEL 'PHYSICAL DRIVE'
         LINE
         ROUTINE   SNB40,CPUH
         ROUTINE   DEVTYP2,CK3340                               XL03130
         LABEL 'PHYSICAL CONTROL UNIT'
         LINE
         ROUTINE   IORET,SETRETY                                XL03130
         LABEL 'NUMBER OF I/O RETRIES'                          XL03130
         LINE  ,,SKIP=2
         ROUTINE   VOLLAB1,SETVOL
         LABEL 'VOLUME LABEL'
         LINE  ,(1,1)
         ROUTINE   SNB00,CHECKLGM
         LABEL ' '
*
         LINE  (2,1),(1,1),SKIP=1
         ROUTINE   SNB00,WHATKND
         LABEL ' '
         LINE  (21,2),(1,1),SKIP=1
         ROUTINE   SNB220,SETHEX
         ROUTINE   SNB230,SETHEX
         ROUTINE   SNB70,TEST5
         LABEL 'ERROR SYMPTOM CODE-'
*
         LINE  ,(20,41)
         ROUTINE   SNB20,ISLOG1
         LABEL 'CC   CA   FL     CT','K    CA   US CS  CT'
*
         LINE  (20,3),(1,52),SKIP=2
         HEX   FCCWCC,0,1B
         HEX   FCCWDA,0,3B
         ROUTINE   SPARE1,SPACER1
         HEX   FCCWFL,0,1B
         HEX   FCCW,0,1B
         HEX   FCCWCT,0,2B
         ROUTINE   SPARE1,SPACER19
         HEX   CSWUS1,0,1B
         HEX   CSWUS2,0,3B
         ROUTINE   SPARE1,SPACER1
         HEX   CSWUS3,0,1B
         HEX   CSWUS4,0,1B
         HEX   CSWUS5,0,2B
         ROUTINE   SNB20,ISLOG1
         LABEL 'FAILING CCW','CSW'
*
         LINE  ,(20,1),SKIP=1
         ROUTINE   SNB20,ISLOG1
         LABEL 'M  B B  C C  H H  R'
         LINE  (20,3),(1,40),SKIP=2
         HEX   LSKAD1,0,1B
         HEX   LSKAD2,0,2B
         ROUTINE   SPARE1,BKSP1
         HEX   LSKAD3,0,2B
         ROUTINE   SPARE1,BKSP1
         HEX   LSKAD4,0,2B
         ROUTINE   SPARE1,BKSP1
         HEX   LSKAD5,0,1B
         ROUTINE   SNB20,ISLOG1
         LABEL 'LAST SEEK ADDRESS-'
*
         LINE  (26,1),(1,26)
         ROUTINE   SNB70,SETHEX
         LABEL 'SENSE BYTE DATA-  FORMAT',' '
*
         LINE  (12,15),(3,15),SKIP=1
         ROUTINE   SNB00,SETHEX
         ROUTINE   SNB10,SETHEX
         ROUTINE   SNB20,SETHEX
         ROUTINE   SNB30,SETHEX
         ROUTINE   SNB40,SETHEX
         ROUTINE   SNB50,SETHEX
         ROUTINE   SNB60,SETHEX
         ROUTINE   SNB70,SETHEX
         ROUTINE   DEVTYP2,CKDEV                                XL03130
         LABEL 'BYTE 0','BYTE 1','BYTE 2','BYTE 3','BYTE 4','BYTE 5','BC
               YTE 6','BYTE 7'
         LINE  ,(1,1),SKIP=2
         ROUTINE   SPARE1,SKIPPER
         LABEL '----------UNIT CHECK DESCRIPTION-----------  RESTART CMC
               ND   PHYSICAL ID    CYL(1 TO 128)--HEAD---------  FORMATC
               /MSG'
         LINE  (13,15),(1,15),SKIP=1
         BIN   SNB00
         BIN   SNB10
         BIN   SNB20
         ROUTINE   SNB30,SETBIN2
         BIN   SNB40
         BIN   SNB50
         BIN   SNB60
         BIN   SNB70
         LABEL 'COMMAND REJ','PERM ERROR','STAGE ERROR',' ',   @Y30LPDSC
               'CU/CTRLR   ','CYL 128',' ','FORMAT  8'          XL03145
*
         LINE  (13,15),(1,15)
         BIN   SNB01
         BIN   SNB11
         BIN   SNB21
         BIN   SNB31
         BIN   SNB41
         BIN   SNB51
         BIN   SNB61
         BIN   SNB71
         LABEL 'INTERVN REQ','INV TRK FMT','CORRECTABLE','             C
               ','CU/CTRLR','CYL  64','CYL 256/512','FORMAT  4' XL03145
*
         LINE  (13,15),(1,15)
         BIN   SNB02
         BIN   SNB12
         BIN   SNB22
         BIN   SNB32
         BIN   SNB42
         BIN   SNB52
         BIN   SNB62
         BIN   SNB72
         LABEL 'BUS OUT PAR','END OF CYL','DESTAGE ERR ',      @Y30LPDSC
               '             ','DRIVE 3/6','CYL  32',          @Y30LPDSC
               'DIF/CYL 256','FORMAT  2'                         XM3655
*
         LINE  (13,15),(1,15)
         BIN   SNB03
         BIN   SNB13
         BIN   SNB23
         BIN   SNB33
         BIN   SNB43
         BIN   SNB53
         BIN   SNB63
         BIN   SNB73
         LABEL 'EQUIPMNT CK','           ','ENV DATA PR','             C
                 ','DRIVE 3/6','CYL  16','HEAD 16','FORMAT  1'
*
         LINE  (13,15),(1,15)
         BIN   SNB04
         BIN   SNB14
         BIN   SNB24
         BIN   SNB34
         BIN   SNB44
         BIN   SNB54
         BIN   SNB64
         BIN   SNB74
         LABEL 'DATA CHECK','NO REC FND','            ',               C
               '             ',                                @Z30RIVSC
               'DRIVE 3/6','CYL   8','HEAD  8','MESSAGE 8'     @ZA06044
*
         LINE
         BIN   SNB05
         BIN   SNB15
         BIN   SNB25
         BIN   SNB35
         BIN   SNB45
         BIN   SNB55
         BIN   SNB65
         BIN   SNB75
         LABEL 'OVERRUN','FILE PROTCT','            ','              ',C
               'DRIVE 3/6','CYL   4','HEAD  4 ','MESSAGE 4'
*
         LINE
         BIN   SNB06
         BIN   SNB16
         BIN   SNB26
         BIN   SNB36
         BIN   SNB46
         BIN   SNB56
         BIN   SNB66
         BIN   SNB76
         LABEL '          ','WRT INHIBIT',' ','              ','DRIVE 3C
               /6','CYL   2','HEAD  2','MESSAGE 2'
*
         LINE  (13,15),(1,15)
         BIN   SNB07
         BIN   SNB17
         BIN   SNB27
         BIN   SNB37
         BIN   SNB47
         BIN   SNB57
         BIN   SNB67
         BIN   SNB77
         LABEL '           ','OP INCOMPLT','            ','            C
                   ','DRIVE 3/6','CYL   1','HEAD  1','MESSAGE 1'
         LINE  ,(1,1)
         ROUTINE   SNB70,CHKFMT
         LABEL ' '
         DC    X'FF'
         DC    XL2'007A'
SBCNTL   DC    XL2'0018'                                         S21021
         DC    XL2'0000'
LABELS   DS    0F
         DC    C'$'
         LSTART
         END
