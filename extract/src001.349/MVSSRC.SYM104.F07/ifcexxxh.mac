         TITLE 'IFCEXXXH - 3895 EDIT TABLE - ALIAS IFCE3895'
* ** THIS MODULE IS ENTIRELY IN SUPPORT OF CODE G30HIMD  ****
**** IT IS APPLICABLE FOR VS1 W/ SU01, MVS W/ SU27 AND AS SVS ICR ****
         SPACE 2
         MACRO
         BIN   ,
.*                                 &SYSLIST(&OP,1) - NAME OF LOG ITEM
.*                                      RECORD DSECT
.*                                 $SYSLIST(&OP,2) - NBR OF SPACES
.*                                      TO SKIP ON MULTIPLE
.*                                      PRINT OR NBR OF SPACES
.*                                      TO BACK UP FROM COLUMN FOR
.*                                      START OF PRINTING. THE LETTER
.*                                      B PRECEEDS THE NUMBER (B5) IF
.*                                      THE LATTER IS DESIRED. OMISSION
.*                                      OF THIS OPERAND FORCES OPTION 2
.*                                      WITH BACKUP SPACING EQUAL TO
.*                                 THE NUMBER OF BITS IN THE ITEM
.*                                 DEFINITION (VIA MACRO 'DSGEN').
.*                            A LIMIT OF 15 BITS IS IMPOSED FOR THE
.*                                 TOTAL NUMBER OF BITS TO PRINT.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K
         LCLA  &TEMP,&T,&OP
         LCLC  &S,&ARG
          ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&SUB EQ 1).SUB00
         AIF   ('&SYSLIST(3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(3)
         AGO   .SETT
.SUB00   AIF   ('&SYSLIST(&OP,3)' EQ '').SETT
&IBITS   SETA  &SYSLIST(&OP,3)
.SETT    ANOP
&T       SETA  &IBITS-1
&B       SETB  0
         AIF   (&IBITS GT 0 AND &IBITS LT 16).SUB0
         MNOTE '**NO. OF BITS OUTSIDE RANGE OF 1-15**'
.MEXIT   MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBB
.SUBA    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBB    ANOP
&T       SETA  &S
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&IBITS NE 1 OR &B NE 0).BIN2
&TEMP    SETA  &ISHIFT
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'&TEMP'
         AGO   .OUT
         AIF   (&SUB EQ 1).BIN2
         AIF   ('&SYSLIST(2)' NE '').BIN3
         AGO   .BIN2A
.BIN2    AIF   ('&SYSLIST(&OP,2)' NE '').BIN3
.BIN2A   ANOP
&B       SETB  1
.BIN3    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'C'
         DC    BL.1'&B',AL.7(&T),AL.4(&IBITS),FL.4'&ISHIFT'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
&NAME    DSGEN ,
.*                            THIS MACRO GENERATES ONE DSECT WORD
.*                                 FORMATTED FOR THE SUBJECT LOG RECORD
.*                                 EACH OPERAND HAS TWO SUB LISTS. THE
.*                                 FIRST IS THE NAME OF THE LOG ITEM
.*                                 WHILE THE SECOND IS THE # OF BITS TO
.*                                 ALLOCATE FOR THIS ITEM. ITEMS MUST
.*                                 BE DEFINED CONTIGUOUSLY WITHOUT GAPS
.*                                 UNUSED BIT GROUPS MUST BE GIVEN
.*                                 DUMMY NAMES. THE NAMES PROVIDED FOR
.*                                 THE LOG ITEMS MAY THEN BE USED IN
.*                                 THE CONVERSION MACRO INSTRUCTIONS.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &ONLY1,&CTIND
         LCLA  &START1,&START2,&END1,&END2
         LCLC  &SYMBOL,&EQUSYM
         LCLA  &OP,&COUNT,&BYTE,&EQUCNT
         ACTR  100000
         AIF   (&ITEMITR EQ 0).START
 MNOTE   20,'DSGEN MACRO OCCURRS AFTER ITEMSORT MACRO HAS BEEN ISSUED.'
         MEXIT
.START   AIF   (N'&SYSLIST(&OP+1) LT 3).LOOP
         AIF   ('&SYSLIST(&OP+1,3)' EQ 'EQU').LOOP     TEST FOR EQU
  AIF   ('&SYSLIST(&OP+1,3)' EQ '' OR '&SYSLIST(&OP+1,4)' EQ '').ERR1
         AIF   ('&SYSLIST(&OP+1,3)' GT '&SYSLIST(&OP+1,4)').ERR3
&START1  SETA  &SYSLIST(&OP+1,3)        GET START COUNT OF 1
&START2  SETA  &SYSLIST(&OP+1,4)        GET FIRST END COUNT
         AGO   .SET2A                   BRANCH AROUND
         AIF   ('&SYSLIST(&OP+1,5)' GT '&SYSLIST(&OP+1,6)').ERR3
.ERR1    MNOTE '**FIRST SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.SET2A   AIF   ('&SYSLIST(&OP+1,5)' EQ ''AND '&SYSLIST(&OP+1,6)' EQ '' X
               ).SET2                   TEST FOR NO SECOND
  AIF   ('&SYSLIST(&OP+1,5)' EQ '' OR '&SYSLIST(&OP+1,6)' EQ '').ERR2
&END1    SETA  &SYSLIST(&OP+1,5)        GET START COUNT OF 2
&END2    SETA  &SYSLIST(&OP+1,6)        GET END COUNT OF 2
         AGO   .LOOP
.SET2    ANOP
&ONLY1   SETB  1                        INDICATE ONLY ONE CONCATENATION
         AGO   .LOOP
.ERR2    MNOTE '**SECOND SYMBOL CONCATENATION INCOMPLETE**'
         MEXIT
.ERR3    MNOTE '**START GREATER THAN END CONCATENATION**'
         MEXIT
.LOOP    ANOP
&OP      SETA  &OP+1
         AIF   (&OP GT N'&SYSLIST).DONE      TEST IF ALL DONE
&ITEMNBR SETA  &ITEMNBR+1
         AIF   ('&SYSLIST(&OP,2)' NE '').OK1
         MNOTE '**NULL BIT COUNT FIELD**'
         MEXIT
.OK1     ANOP
&SYMBOL  SETC  '&SYSLIST(&OP,1)'
         AIF   ('&SYMBOL' NE '').OK
*              *****     LOG ITEM SYMBOL NOT PROVIDED     *****
         AIF   ('&SYSLIST(&OP,3)' NE 'EQU').CNT
         AGO   .START                   GET NEXT
.OK      AIF   (N'&SYSLIST(&OP) LT 3).NO3    TEST FOR OLD FORMAT
         AIF   ('&SYSLIST(&OP,3)' EQ 'EQU').EQU   TEST FOR EQU
         AIF   (&ONLY1).OK2             TEST FOR ONLY ONE CONCAT
&SYMBOL  SETC  '&SYMBOL.&START1.&END1'       GET 1 AND 2 CONCAT
         AGO   .NO3                     BRANCH AROUND
.OK2     ANOP
&SYMBOL  SETC  '&SYMBOL.&START1'        GET 1 CONCATENATED
.NO3     ANOP
&SYMBOL  EQU   *+&BYTE
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL IN GLOBAL
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)
&SHIFT(&ITEMNBR) SETA &COUNT-&BYTE*8
.CNT     ANOP
&CTIND   SETB  1                        SET COUNT INDICATOR
&COUNT   SETA  &COUNT+&SYSLIST(&OP,2)
&BYTE    SETA  &COUNT/8
         AIF   (N'&SYSLIST(&OP) LT 3).START  TEST FOR OLD FORMAT
         AIF   (&ONLY1).TSTST           TEST FOR ONLY ONE CONCAT
         AIF   (&END1 EQ &END2).TSTST   TEST FOR SECOND END
&END1    SETA  &END1+1                  INCREMENT COUNT
&OP      SETA  &OP-1                    DECREMENT INCREMENT
         AGO   .LOOP                    GENERATE NEXT
.TSTST   ANOP
         AIF   (&START1 EQ &START2).LPDONE   TEST FOR END
         AIF   (&ONLY1).NSET1           TEST FOR ONLY ONE CONCAT
&END1    SETA  &SYSLIST(&OP,5)          RE-INIT SECOND START COUNT
.NSET1   ANOP
&OP      SETA  &OP-1                    DECREMENT INDEX
&START1  SETA  &START1+1                INCREMENT FIRST COUNT
         AGO   .LOOP                    GO DO NEXT
.LPDONE  ANOP
&ONLY1   SETB  0                        CLEAR INDICATOR
         AGO   .START                   GO TEST FOR MORE SUB-LISTS
.DONE    AIF   (&COUNT-&COUNT/8*8 NE 0).ERR  TEST FOR MULTIPLE OF EIGHT
         AIF   (&CTIND EQ 0).END        NO DS IF NO COUNT
&COUNT   SETA  &COUNT/8                 GET NUMBER OF BYTES
&NAME    DS    &COUNT.C
.END     MEXIT
.ERR     MNOTE '**BIT COUNT FLDS DO NOT TOTAL MULTIPLE OF 8**'
         MEXIT
.EQU     AIF   ('&SYSLIST(&OP,4)' NE '').EQU1     TEST FOR NULL LABEL
.ERR4    MNOTE '**EQU OPERAND OMITTED OR NOT FOUND**'
         MEXIT
.EQU1    AIF   (&SYSLIST(&OP,2) LT 16).EQU2  COUNT OVER FIFTEEN
*****               THE FOLLOWING STATEMENT                *****
*****     NUMBER OF BITS EXCEED 15 - DO NOT USE AS BIN     *****
.EQU2    ANOP
&EQUCNT  SETA  0                        CLEAR COUNTER
&EQUSYM  SETC  '&SYSLIST(&OP,4)'        GET EQU OPERAND
.EQULOP  ANOP
&EQUCNT  SETA  &EQUCNT+1                INCREMENT INDEX
         AIF   ('&ITEM(&EQUCNT)' EQ '&EQUSYM').EQUOUT  LABEL FOUND?
         AIF   (&EQUCNT EQ &ITEMNBR).ERR4    ALL TESTED?
         AGO   .EQULOP                  NO-GET NEXT
.EQUOUT  ANOP
&ITEM(&ITEMNBR) SETC '&SYMBOL'          GET LABEL NAME
&BITS(&ITEMNBR) SETA &SYSLIST(&OP,2)    GET NUMBER OF BITS
&SHIFT(&ITEMNBR) SETA &SHIFT(&EQUCNT)   GET SHIFT COUNT
&SYMBOL  EQU   &EQUSYM                  THIS SYMBOL EQUATED
         AGO   .START                   RETURN FOR NEXT
         MEND
         MACRO
         CONVT ,
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &SUB
         LCLA  &OP
         LCLA  &OFFSET,&OUT,&IN,&IND,&IBITS,&ISHIFT
.*
.*       CONVERT BINARY TO DECIMAL
.*             &NAME IS THE REFERENCE INTO THE DSECT RECORD
.*             &OUT    IS THE NUMBER OF CHARS TO BE PUT ONTO PRINT LINE
.*                                      DEFAULT IS FOUR MAXIMUM IS 8
.*             &IN       IS THE NUMBER OF BYTES AS INPUT
.*                                      ERROR DEFAULT IS 2 MAXIMUM IS 4
.*
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LLOP
&SUB     SETB  1
.LLOP    ANOP
&OP      SETA  &OP+1
&OUT     SETA  4                        .BR NOT NULL ELSE SET TO 4
         AIF   (&SUB EQ 1).SUBA
         AIF   ('&SYSLIST(3)' EQ '').B  TEST FOR NULL INPUT
&OUT     SETA  &SYSLIST(3)             SET &OUT FROM INPUT
         AGO   .A
.SUBA    AIF   ('&SYSLIST(&OP,3)' EQ '').B
&OUT     SETA  &SYSLIST(&OP,3)          SET &OUT FROM INPUT
.A       AIF   (&OUT GT 0 AND &OUT LT 9).B   TEST RANGE
.AERR    MNOTE '*** BYTES OUT INCORRECTLY SPECIFIED DEFAULT USED ***'
&OUT     SETA  4
.B       AIF   (&SUB EQ 1).SUBB
         AIF   ('&SYSLIST(2)' EQ '').LOOP    BRANCH IF NULL
&IN      SETA  &SYSLIST(2)              .SET &IN FROM INPUT
         AGO   .BB
.SUBB    AIF   ('&SYSLIST(&OP,2)' EQ '').LOOP
&IN      SETA  &SYSLIST(&OP,2)          .SET &IN FROM INPUT
.BB      AIF   (&IN GT 0 AND &IN LT 5).D     TEST RANGE
.BERR    MNOTE '*** BYTES IN INCORRECTLY SPECIFIED DEFAULT USED ***'
&IN      SETA  2
         AGO   .D
.LOOP    ANOP                           .LOOP TO FIND &NAME IN DSECT
&IND     SETA  &IND+1                   .SET UP LOOP COUNTER
         AIF   ('&ITEM(&IND)' EQ '&SYSLIST(&OP,1)').FOUND
         AIF   (&IND LT &ITEMNBR).LOOP  .TEST FOR END OF DSECT
         MNOTE '*** LOG ITEM NOT DEFINED ***'
         MEXIT
.FOUND   ANOP
&IBITS   SETA  &BITS(&IND)              .SET UP NUMBER OF BITS SPEC
         AIF   (&IBITS-((&IBITS/8)*8) EQ 0).C  .TEST FOR MULTIPLE OF 8
         MNOTE '*** DATA NOT DEFINED A MULTIPLE OF 8 BITS ***'
         MEXIT
.C       ANOP
&IN      SETA  &IBITS/8                 .COMPUTE NUMBER OF BYTES
         AIF   (&IN LT 1 OR &IN GT 4).BERR  .TEST RANGE B IF IN ERROR
&ISHIFT  SETA  &SHIFT(&IND)             .SET UP FOR TEST OF BYTE BNDR
         AIF   (&ISHIFT EQ 0).D         .TEST FOR BYTE BNDRY
         MNOTE '*** DATA NOT ALIGNED ON A BYTE BOUNDARY ***'
         MEXIT
.*
.D       ANOP
&NRENTS  SETA  &NRENTS+1
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),AL.4(9)
         DC    X'&IN',X'&OUT'
&IND     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LLOP
.OUTA    ANOP
         MEND
         MACRO
         ITEMFIND &ARG,&ITFDIAG=
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &A,&B,&X,&I
         LCLC  &C1,&C2,&S
         ACTR  100000
&ITEMXPT SETA  0                  INDICATE ITEM NOT FOUND.
         AIF   ('&ARG' NE '').NORM
         AIF   ('&ITFDIAG' EQ 'OFF'  OR  '&ITFDIAG' EQ 'ON').DIAGSET
  MNOTE 0,'ITEMFIND - OPERAND (&ITFDIAG) INVALID FOR ITFDIAG KEYWORD.'
         MEXIT
.DIAGSET ANOP
&DIAGITF SETB  ('&ITFDIAG' EQ 'ON')
         MEXIT
.NORM    AIF   (&ITEMITR GT 0).SORTED
         ITEMSORT
.SORTED  ANOP
&I       SETA  &ITEMITR           COMPUTED ITTERATION COUNT.
&X       SETA  &ITEMMDX           COMPUTED MAXIMUM INDEX.
&C1      SETC  '&ARG'             ISOLATE SEARCH ARGUMENT.
&C1      SETC  '&C1'.'       '(1,8-K'&C1) PAD TO FULL 8 CHARACTERS.
.SRCHUP  ANOP
&A       SETA  &A+&X              CURRENT TABLE SUBSCRIPT + INDEX.
&S       SETC  '+'
         AIF   (&A  GT &ITEMNBR  AND  NOT &DIAGITF).SRCHDN1
         AIF   (&A  LE &ITEMNBR).SRCH00
&C2      SETC  '*-OVER-*'
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X'
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
.NOFIND  MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEXIT
.SRCH00  ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
         AIF   (&I LT 0).NOFIND   IF COUNT HAS GONE TO ZERO.
&X       SETA  &X/2               HALVE INDEX VALUE.
&B       SETA  &ITEMNDX(&A)       GET SUBSCRIPT FROM INDEX TABLE.
&C2      SETC  '&ITEM(&B)'.'       '(1,8-K'&ITEM(&B))  PAD COMPARAND.
         AIF   (NOT &DIAGITF).COMPARE
 MNOTE *,'&ARG - &C2   ITRCTR = &I   PTR = &A&S &X   POS = &B'
.COMPARE AIF   ('&C1' LT '&C2').SRCHDWN   ARGUMENT LOWER, MOVE DOWN.
         AIF   ('&C1' GT '&C2').SRCHUP    ARGUMENT HIGHER, MOVE UP.
&ITEMXPT SETA  &B                 FOUND. SET INDEX POINTER FOR RETURN.
&ITEMFST(&I+1)  SETA  &ITEMFST(&I+1)+1
         MEXIT
.SRCHDWN ANOP
&A       SETA  &A-&X              CURRENT POINTER MINUS INDEX VALUE.
&S       SETC  '-'
         AIF   (&A LE &ITEMNBR).SRCH00    IF WITHIN BOUNDS OF TABLE.
.SRCHDN1 ANOP
&I       SETA  &I-1               DECREMENT ITTERATION COUNTER.
&X       SETA  &X/2               HALVE INDEX VALUE.
         AIF   (&I GE 0).SRCHDWN  IF ITTERATION COUNT NOT EXPIRED.
         MNOTE  20,' ITEMFIND FAILED FOR NAME  &C1  '
         MEND
         MACRO
         ITEMSORT  &DUMMY
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &R,&ZI,&I,&A1,&A2,&TEMP
         LCLB  &SR,&GOTO,&TB
         LCLB   &SW(4000)
         LCLC  &C1,&C2
         ACTR   200000
&A1      SETA  0
         AIF   (&ITEMITR EQ 0).LOOP0   TEST FOR RE-ENTRY.
 MNOTE   0,'ITEMSORT MACRO OCCURRS MORE THAN ONCE. TABLE NOT RESORTED.'
         MEXIT
.LOOP0   ANOP
&A1      SETA  &A1+1
&ITEMNDX(&A1) SETA &A1
         AIF   (&A1 LT &ITEMNBR).LOOP0
         AIF   (&ITEMNBR LT 2).MEXIT
&A1      SETA  &ITEMNBR/2         HALF OF TOTAL ENTRIES.
&A2      SETA  0
.LOOP1   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  1                  SET FIRST HALF OF SWITCHES TO 1.
         AIF   (&A2 LT &A1).LOOP1
.LOOP2   ANOP
&A2      SETA  &A2+1
&SW(&A2) SETB  0                  SET SECOND HALF TO ZERO.
         AIF   (&A2 LT &ITEMNBR).LOOP2
&R       SETA  0                  SET R TO FIRST TRIAL ITEM.
&ZI      SETA  &ITEMNBR-1         SET ZI TO LAST ITEM.
&I       SETA  &ZI-1
.T3      ANOP
&SR      SETB  (&SW(&R+1))        GET FLAG, WHICH WAY TO GO?
&R       SETA  (&R*2)+1+&SR       R=2R+(1 OR 2)
         AIF   (&R LE &I).T3
.T4      ANOP
&R       SETA  (&R-1)/2           R=(R-1)/2
&SR      SETB  (&SW(&R+1))        GET SUBTREE SELECT FLAG.
         AIF   (&SR EQ 0).T7
         AIF   (&GOTO EQ 0).T5
.T7      ANOP
&A1      SETA  &ITEMNDX(&R+1)
&A2      SETA  &ITEMNDX(&ZI+1)
&C1      SETC  '&ITEM(&A1)'.'       '(1,8-K'&ITEM(&A1))
&C2      SETC  '&ITEM(&A2)'.'       '(1,8-K'&ITEM(&A2))
         AIF   ('&C1' LT '&C2').T8
.T9      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
.T8      AIF   (&R GT 0).T4
&GOTO    SETB  1                  SET 'GO TO' T7
&ZI      SETA  &ZI-1
&I       SETA  &I-1
         AIF   (&I GE 0).T3
.MEXIT   ANOP
&ITEMITR SETA 1
&ITEMMDX SETA 1
.ITRLOOP ANOP
&ITEMITR SETA &ITEMITR+1
&ITEMMDX SETA &ITEMMDX+&ITEMMDX
         AIF  (&ITEMMDX LT &ITEMNBR).ITRLOOP
&ITEMITR SETA &ITEMITR-1
&ITEMMDX SETA &ITEMMDX/2
&A1      SETA &ITEMNBR
&A2      SETA &ITEMMDX
&TEMP    SETA &ITEMITR
 MNOTE *,' ITEMS = &A1, MAX INDEX = &A2, ITTERATION COUNT = &TEMP'
         MEXIT
.T5      ANOP
&TEMP    SETA  &ITEMNDX(&R+1)     Z(R) TO TEMP.
&TB      SETB  (&SW(&R+1))
&ITEMNDX(&R+1) SETA &ITEMNDX(&ZI+1)    Z(I) TO Z(R)
&SW(&R+1) SETB (&SW(&ZI+1))
&ITEMNDX(&ZI+1) SETA &TEMP        TEMP TO Z(I)
&SW(&ZI+1) SETB (&TB)
&SR      SETB  (&SR EQ 0)
&SW(&R+1) SETB (&SR)
         AGO   .T3
         MEND
           MACRO
&NAME    LABEL &LABEL1,&LABEL2,&LABEL3,&LABEL4,&LABEL5,&LABEL6,        C
               &LABEL7,&LABEL8
.*                                 THIS MACRO ALLOWS LABELS TO
.*                                 BE SPECIFIED FOR A GIVEN LINE. THE
.*                                 LABELS SHOULD BE ENCLOSED IN QUOTA-
.*                                 TION MARKS. THE COLUMN AND LINE END
.*                                 CONTROLS WILL BE INSERTED BY THE
.*                                 MACRO. OMITTED OPERANDS MEAN NO
.*                                 LABEL REQUIRED FOR RESPECTIVE
.*                                 COLUMN.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLC  &MARGIN,&TACK
         LCLC  &TEXT
         LCLA  &OP,&K,&START,&NRCHAR,&REMAIN
         AIF   (&INITIAL EQ 0).DIAGCLR
         AIF   (&DIAGTST EQ 0).DIAGCLR
         AIF   (&DIAGLIN EQ 1).DIAGCLR
         MNOTE '**NO LINE ASSOCIATED WITH PREVIOUS LABEL**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LINE
         LINE
.DIAGCLR ANOP
&DIAGSET SETB  0
&DIAGLIN SETB  0
&MARGIN  SETC  '*'
         AIF   ('&NAME' EQ '').LOOPOUT
&LPTR    SETA  &LPTR+1
&LBL(&LPTR) SETC '&NAME'
&LBLCTR(&LPTR) SETA &LABELNR+1
.LOOPOUT ANOP
&OP      SETA  &OP+1
&K       SETA  K'&SYSLIST(&OP)
         AIF (&K GE 2).NORM
&K       SETA  2
.NORM    ANOP
&START   SETA  2
         AIF (&OP LT N'&SYSLIST).NOTLAST
&MARGIN  SETC  '$'
.NOTLAST ANOP
&NRCHAR  SETA  8
&TACK    SETC  ''
.LOOPIN  ANOP
&REMAIN  SETA  &K-&START
         AIF (&REMAIN GE 8).MORE
&TACK    SETC  '&MARGIN'
&NRCHAR  SETA  &REMAIN
.MORE    ANOP
&TEXT    SETC  ''
         AIF (&REMAIN EQ 0).ENDTEXT
&TEXT    SETC  '&SYSLIST(&OP)'(&START,&NRCHAR)
.ENDTEXT ANOP
&LABELNR SETA  &LABELNR+1
&LABELS(&LABELNR) SETC '&TEXT'.'&TACK'
&START   SETA  &START+8
         AIF ('&TACK' EQ '').LOOPIN
         AIF ('&TACK' EQ '*').LOOPOUT
         MEND
         MACRO
&NAME    LINE  &DATA,&LABEL,&SKIP=
.*                            THIS MACRO ESTABLISHES THE MARGINS OR
.*                                 COLUMN SETTINGS FOR EACH LINE. IT
.*                                 GENERATES NECESSARY CARRIAGE CONTROL
.*                                 ENTRIES. LASTLY IT DETERMINES THE
.*                                 NUMBER OF ENTRIES ASSOCIATED WITH
.*                                 THE PREVIOUS LINE AND STORES THAT #
.*                                 INTO THE APPROPRIATE BYTE.
.*                            &DATA(1) - CHARACTER POSITION TO BEGIN
.*                                 DATA.
.*                            &DATA(2) - # OF SPACES BETWEEN SUCCESSIVE
.*                                 DATA COLUMN STARTING CHARACTERS.
.*                            &LABEL(1) - CHAR. POS. TO BEGIN LABELS.
.*                            &LABEL(2) - # SPACES BETWEEN LINE'S LABEL
.*                                 STARTING CHARACTERS.
.*                            &SKIP= - # OF LINES TO ADVANCE CARRIAGE
.*                                 TO BEGIN NEXT PRINTED LINE.
.*                            NEW ENTRIES ARE GENERATED ONLY WHEN
.*                                 NECESSARY. OMISSION OF ITEMS MEANS
.*                                 THEY HAVE NOT CHANGED SINCE PREVIOUS
.*                                 SETTINGS. A LINE MACRO IS REQUIRED
.*                                 FOR EACH PRINTED LINE. IF NO SETTING
.*                                 CHANGES ARE REQUIRED ALL OPERANDS
.*                                 ARE OMITTED IN WHICH CASE ONLY THE
.*                                 # OF ENTRIES FOR THE PREVIOUS LINE
.*                                 IS COMPUTED. THIS MACRO MUST BE THE
.*                                 FIRST MACRO INSTRUCTION ISSUED FOR
.*                                 THE SUBJECT LINE
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &S
         AIF   (&INITIAL EQ 0 OR &DIAGTST EQ 0).DIAGSET
         AIF   (&DIAGSET EQ 0).DIAGSET
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.DIAGSET ANOP
&DIAGSET SETB  1
&DIAGLIN SETB  1
&NAME    DS    0C
         AIF   (&INITIAL EQ 0).FIRSTLN
         LINEND
         AGO   .NTFIRST
.FIRSTLN ANOP
&NRENTSX SETC  'N&SYSNDX'
&INITIAL SETA  1
N&SYSNDX EQU   *
.NTFIRST ANOP
         DC    AL1(0)
         AIF   ('&DATA(1)' EQ '').CKDTABS
         AIF   (&DATA(1) EQ &DB).CKDTABS
&DB      SETA  &DATA(1)
         AGO   .AA
.CKDTABS AIF   ('&DATA(2)' EQ '').NCDATA
         AIF   (&DATA(2) EQ &DT).NCDATA
         AGO   .CC
.AA      AIF   ('&DATA(2)' EQ '').BB
         AIF   (&DATA(2) EQ &DT).BB
.CC      ANOP
&DT      SETA  &DATA(2)
.BB      DC    XL2'FFFE'
         DC    FL1'&DB'
         DC    FL1'&DT'
&NRENTS  SETA  &NRENTS+1
.NCDATA  ANOP
         AIF   ('&LABEL(1)' EQ '').CKLTABS
         AIF   (&LABEL(1) EQ &LB).CKLTABS
&LB      SETA  &LABEL(1)
         AGO   .AAA
.CKLTABS AIF   ('&LABEL(2)' EQ '').NCLABEL
         AIF   (&LABEL(2) EQ &LT).NCLABEL
         AGO   .CCC
.AAA     AIF   ('&LABEL(2)' EQ '').BBB
         AIF   (&LABEL(2) EQ &LT).BBB
.CCC     ANOP
&LT      SETA  &LABEL(2)
.BBB     DC    XL2'FFFF'
         DC    FL1'&LB'
         DC    FL1'&LT'
&NRENTS  SETA  &NRENTS+1
.NCLABEL ANOP
         AIF   ('&SKIP' NE '').CONT
         AIF   (&TEST EQ 0).NOCHANG
         AGO   .DEFALTA
.CONT    ANOP
         AIF   (&TEST EQ 0).AB
         AIF   ('&SKIP' EQ 'E').AB
&S       SETA  &SKIP
.DEFAULT ANOP
         AIF   (&SKIP EQ &LASTCC).DEFALTA
         ORG   &CARRCON+3
         DC    AL.3(0),AL.2(&S),AL.3(1)
         ORG
&LASTCC  SETA  &S
.DEFALTA ANOP
&TEST    SETB  0
         AGO   .DD
.AB      AIF   ('&SKIP' NE 'E').ABB
A&SYSNDX DC    X'FFFB8B00'              EJECT
&LASTCC  SETA  184
&TEST    SETB  1
         AGO   .ABC
.ABB     AIF   (&SKIP EQ &LASTCC).NOCHANG
A&SYSNDX DC    XL2'FFFB'
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
         DC    AL.3(0),AL.2(&SKIP),AL.3(1)
&LASTCC  SETA  &SKIP
&TEST    SETB  1
.ABC     ANOP
&CARRCON SETC  'A&SYSNDX'
&NRENTS  SETA  &NRENTS+1
.DD      ANOP
.NOCHANG ANOP
         MEND
         MACRO
         LINEND ,
.*                                 THIS MACRO IS USED ONLY BY THE LINE
.*                                 MACRO TO SET THE NUMBER OF ENTRIES
.*                                 ASSOCIATED WITH EACH LINE.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         ORG   &NRENTSX
         DC    FL1'&NRENTS'
         ORG
&NRENTS  SETA  0
B&SYSNDX EQU   *
&NRENTSX SETC  'B&SYSNDX'
         MEND
         MACRO
         LSTART ,
.*                            THIS MACRO IS ISSUED WHEN THE LABEL AREA
.*                                 OF THE TABLE IS TO BEGIN.
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLA  &NDX,&CTR
         ACTR  500000
         AIF   (&DIAGTST EQ 0).NODIAG
         AIF   (&DIAGSET EQ 0).NODIAG
         MNOTE '**NO LABEL ASSOCIATED WITH LAST SET**'
***** THE FOLLOWING GENERATED FOR TEST PURPOSES *****
*        LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
               LABEL '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
.NODIAG  ANOP
         LINEND
&CTR     SETA  1
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   (&LBLCTR(&CTR) NE &NDX).NOLBL
&LBL(&CTR) DC  C'&LABELS(&NDX)'
&CTR     SETA  &CTR+1
         AGO   .LOOPCTL
.NOLBL   ANOP
         DC    C'&LABELS(&NDX)'
.LOOPCTL AIF   (&NDX LT &LABELNR).LOOP
         MEND
         MACRO
&NAME    ROUTINE &LOGITEM,&RNAME
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS ROUTINE**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
&NAME    DC    AL.12(&LOGITEM-&DSECT),XL.4'D'
         DC    AL2(&RNAME-&CSECT)
&NRENTS  SETA  &NRENTS+1
         MEND
         MACRO
         SPECIAL &ROUTINE,&PARAM,&SPACE=
.*                            THIS MACRO GENERATES A SPECIAL ROUTINE
.*                                 ENTRY TO BE PROCESSED BY THE SUM. M.
.*                            &ROUTINE - SYMBOL ON SPECIAL ROUTINE EWT.
.*                            &PARAM - AN 8 BIT BINARY REPRESENTATION
.*                                 TO OCCUPY THE 'MASK' FIELD BUT TO BE
.*                                 INTERPRETED AS AN ARGUMENT OF THE
.*                                 SPECIAL ROUTINE.
.*                            &SPACE - THE NUMBER OF 2BYTE COUNTERS TO
.*                                 ALLOCATE FOR REQUIRED PROCESSING.
         GBLC  &CSECT
         GBLA  &COUNTR
         LCLA  &ADD
         DC    AL1(128)
         DC    BL.8'&PARAM'
         DC    AL2(&ROUTINE-&CSECT)
         DC    AL2(&COUNTR)
&ADD     SETA  1
         AIF   ('&SPACE' EQ '').NORM
&ADD     SETA  &SPACE
.NORM    ANOP
&COUNTR  SETA  &COUNTR+&ADD
         MEND
         MACRO
         HEX   ,
.*                            THIS MACRO FACILITATES GENERATION OF THE
.*                                 TABLE ENTRIES SPECIFYING HEX TYPE
.*                                 CONVERSIONS.
.*                            &SYSLIST(&OP,1) - NAME OF DATA ITEM TO BE
.*                                 CONVERTED
.*                            &SYSLIST(&OP,2) - # OF SPACES TO SKIP ON
.*                                 MULTIPLE PRINT OR NBR OF SPACES TO
.*                                 BACK UP FROM COLUMN FOR START OF
.*                                 PRINTING. THE LETTER B PRECEEDS THE
.*                                 NUMBER (B8) IF THE LATTER OPTION IS
.*                                 DESIRED. OMISSION OF THIS OPERAND
.*                                 FORCES OPTION 2 WITH BACKUP SPACING
.*                                 EQUAL TO THE NUMBER OF BYTES SPECI-
.*                                 FIED BY THE NEXT OPERAND (TWICE THIS
.*                                 NUMBER IF SUFFIX IS EXPLICITLY OR
.*                                 IMPLICITLY B).
.*                            &SYSLIST(&OP,3) - NUMBER OF BYTES TO
.*                                 PROCESS. THIS NUMBER IS SUFFIXED
.*                                 WITH AN L,R, OR B TO STIPULATE
.*                                 PRINTING OF THE LEFT HALF, RIGHT
.*                                 HALF, OR BOTH HALVES OF THE BYTE
.*                                 RESPECTIVELY. OMISSION OF THIS
.*                                 OPERAND DEFAULTS TO B WITH THE NUM-
.*                                 BER OF BYTES EQUAL TO THE ITEM LNGTH
.*                            A NEW ENTRY IS GENERATED ONLY WHEN NECES-
.*                                 SARY. THIS MACRO MUST BE THE FIRST
.*                                 MACRO INSTRUCTION ISSUED FOR THE
.*                                 SUBJECT LINE(S).
         GBLA  &BITS(3000),&DB,&DT,&INITIAL
         GBLA  &ITEMITR,&ITEMFST(20),&ITEMNBR,&ITEMMDX
         GBLA  &ITEMNDX(3000),&ITEMXPT
         GBLA  &LABELNR,&LASTCC,&LB,&LBLCTR(100),&LPTR,&LT
         GBLA  &NRENTS,&SHIFT(3000)
         GBLB  &DIAGITF,&DIAGLIN,&DIAGSET,&DIAGTST,&FSW,&TEST
         GBLC  &CARRCON,&CSECT,&DSECT,&ITEM(3000)
         GBLC  &LABELS(3000),&LBL(100),&NRENTSX
         LCLB  &B,&SUB
         LCLA  &IBITS,&ISHIFT,&K,&T,&CODE,&BYTESP,&OP
         LCLC  &S,&LETTER,&ARG
       ACTR  500000
         AIF   (&DIAGTST EQ 0).NOMSG
         AIF   (&INITIAL EQ 0).NOMSG
         AIF   (&DIAGLIN EQ 1).NOMSG
         MNOTE '**NO LINE ASSOCIATED WITH THIS DATA**'
*****THE FOLLOWING GENERATED FOR TEST PURPOSES*****
*        LINE
         LINE
.NOMSG   ANOP
         AIF   (K'&SYSLIST(1) EQ K'&SYSLIST(1,1)).LOOP
&SUB     SETB  1
.LOOP    ANOP
&OP      SETA  &OP+1
&ARG     SETC  '&SYSLIST(&OP,1)'
         ITEMFIND  &ARG
         AIF   (&ITEMXPT EQ 0).MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&ITEMXPT)
&IBITS   SETA  &BITS(&ITEMXPT)
         AIF   (&ISHIFT EQ 0 OR &ISHIFT EQ 4).ALIGN
.ERR     MNOTE '**DATA NOT ALLIGNED ON HEX OR BYTE BOUNDARY**'
.MEXIT   MEXIT
.ALIGN   ANOP
&CODE    SETA  1
         AIF   (&SUB EQ 1).SUBA
&K       SETA  K'&SYSLIST(3)
         AGO   .SUBB
.SUBA    ANOP
&K       SETA  K'&SYSLIST(&OP,3)
.SUBB    ANOP
         AIF   (&K EQ 1).ERR3
         AIF   (&IBITS-(&IBITS/4)*4 EQ 0).OK
         MNOTE '**BIT LENGTH SPECIFICATION INCONSISTENT WITH CONTROL**'
         MEXIT
.OK      AIF   (&SUB EQ 1).SUBC
         AIF   ('&SYSLIST(3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(3)'(&K,1)
&S       SETC  '&SYSLIST(3)'(1,&K-1)
         AGO   .SUBD
.SUBC    ANOP
         AIF   ('&SYSLIST(&OP,3)' EQ '').USEDEFN
&LETTER  SETC  '&SYSLIST(&OP,3)'(&K,1)
&S       SETC  '&SYSLIST(&OP,3)'(1,&K-1)
.SUBD    ANOP
&BYTESP  SETA  &S
         AIF   ('&LETTER' EQ 'B').BOTH
         AIF   ('&LETTER' EQ 'L').LEFT
         AIF   ('&LETTER' EQ 'R').RIGHT
.ERR3    MNOTE '**PARAMETER 3 INCOMPLETE-DSGEN DEFINITION USED**'
         AGO   .USEDEFN
.RIGHT   ANOP
&CODE    SETA  2
         AGO   .L
.LEFT    ANOP
&CODE    SETA  1
         AGO   .L
.USEDEFN ANOP
&BYTESP  SETA  &IBITS/8
.BOTH    AIF   (&ISHIFT NE 0).ERR
&CODE    SETA  3
&T       SETA  &BYTESP*2-1
&S       SETC  '&T'
.OK2     AIF   (&ISHIFT EQ 0).L
&CODE    SETA  2
.L       ANOP
&B       SETB  1
         AIF   (&SUB EQ 1).SUBE
         AIF   ('&SYSLIST(2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(2)
&B       SETB  ('&SYSLIST(2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(2)'(&B+1,&K-&B)
         AGO   .SUBF
.SUBE    ANOP
         AIF   ('&SYSLIST(&OP,2)' EQ '').BACKUP
&K       SETA  K'&SYSLIST(&OP,2)
&B       SETB  ('&SYSLIST(&OP,2)'(1,1) EQ 'B')
&S       SETC  '&SYSLIST(&OP,2)'(&B+1,&K-&B)
.SUBF    ANOP
.BACKUP  ANOP
&NRENTS  SETA  &NRENTS+1
         AIF   (&BYTESP GT 0 AND &BYTESP LT 16).SUB0
         MNOTE '**NO. OF BYTES OUTSIDE RANGE OF 1-15**'
         MEXIT
.SUB0    AIF   (&SUB EQ 1).SUBG
         DC    AL.12(&SYSLIST(1)-&DSECT),XL.4'A'
         AGO   .SUBH
.SUBG    ANOP
         DC    AL.12(&SYSLIST(&OP,1)-&DSECT),XL.4'A'
.SUBH    ANOP
         DC    BL.1'&B',FL.7'&S',AL.4(&BYTESP),FL.4'&CODE'
.OUT     ANOP
&ITEMXPT     SETA  0
         AIF   (&SUB EQ 0).OUTA
         AIF   (&OP LT N'&SYSLIST).LOOP
.OUTA    ANOP
         MEND
         MACRO
         SUM   &LOGITEM,&MASK
.*                            THIS MACRO GENERATES A NORMAL EDIT ENTRY
.*                                 FOR PROCESSING BY THE SUMMARY MODULE
.*                            &LOGITEM - NAME OF DATA ITEM TO BE SUMMED
.*                            &MASK - BYTE MASK FOR BITS TO BE TESTED.
.*                                 THIS OPERAND SHOULD BE OMITTED FOR
.*                                 SINGLE BIT ITEMS IN WHICH CASE THE
.*                                 MASK WILL BE SET ACCORDING TO THE
.*                                 OFF BYTE BIT DISPLACEMENT OF THE
.*                                 ITEM AS DEFINED BY THE MACRO 'DSGEN'
         GBLA  &COUNTR,&ITEMNBR,&BITS(3000),&SHIFT(3000)
         GBLC  &ITEM(3000),&DSECT
         LCLA  &IBITS,&NDX,&ISHIFT,&M,&BITNBR
.LOOP    ANOP
&NDX     SETA  &NDX+1
         AIF   ('&ITEM(&NDX)' EQ '&LOGITEM').FOUND
         AIF   (&NDX LT &ITEMNBR).LOOP
         MNOTE *,'LOGITEM NOT FOUND'
         MEXIT
.FOUND   ANOP
&ISHIFT  SETA  &SHIFT(&NDX)
&IBITS   SETA  &BITS(&NDX)
         AIF   (&IBITS EQ 1).FORM1      TEST FOR OLD FORM
         AIF   ('&MASK' NE '').FORM1    TEST FOR MASK
         AIF   (&IBITS+&ISHIFT GT 8).MSG     TEST FOR MORE THAN EIGHT
         DC    AL.1(0),AL.3(&ISHIFT),AL.4(&IBITS)
         DC    AL1(0)
         AGO   .ITEM
.MSG     MNOTE '**BITS GREATER THAN 8**'
         MEXIT
.FORM1   ANOP
         DC    AL1(0)
         AIF   ('&MASK' EQ '').FORM
         DC    B'&MASK'
         AGO   .ITEM
.FORM    ANOP
&BITNBR  SETA  &ISHIFT-7
&BITNBR  SETA  0-&BITNBR
&M       SETA  1
.LOOP2   ANOP
         AIF   (&BITNBR EQ 0).GOTIT
&M       SETA  &M*2
&BITNBR  SETA  &BITNBR-1
         AGO   .LOOP2
.GOTIT   ANOP
         DC    AL1(&M)
.ITEM    DC    AL2(&LOGITEM-&DSECT)
         DC    AL2(&COUNTR)
&COUNTR  SETA  &COUNTR+1
         MEND
         GBLC  &DSECT,&CSECT
IFCEXXXH CSECT
&DSECT   SETC  'XXXH'
&CSECT   SETC  'IFCEXXXH'
*
*
*
XXXH     DSECT
         DSGEN (CLASS,8),(XRELN,8),(XDUM1,8),                    S21021X
               (SW2B0,1),(SW2B1,1),(SW2B2,1),(SW2B3,1),          S21021X
               (SW2B4,1),(SW2B5,1),(SW2B6,1),(SW2B7,1)           S21021
         DSGEN (XDUM3,32)                         SPARES
         DSGEN (XDATE,32)                         DATE
         DSGEN (XTIME,32)                         TIME
         DSGEN (XDUM4,8),(XSER,24)           SERIAL NO
         DSGEN (XMODEL,16),(XDUM5,16)        MODEL NUMBER & MCLEN
         DSGEN (XPGN1,32)                    PROGRAM
         DSGEN (XPGN2,32)                            NAME
         DSGEN (XFCCWCC,8),(XFCCWDA,24)  FAILING CCW
         DSGEN (XFCCWFL,8),(XZERO,8),(XFCCWCT,16)
         DSGEN (XCSWK,8),(XCSWCA,24)         CHAN  STATUS
         DSGEN (XCSWATTN,1),(XCSWSM,1),(XCSWCUE,1),      WORD  CSW     C
               (XCSWBSY,1),(XCSWCE,1),(XCSWDE,1),(XCSWUC,1),(XCSWUE,1),C
               (XCSWPCI,1),(XCSWSILI,1),(XCSWPC,1),(XCSWPCHK,1),       C
               (XCSWCDC,1),(XCSWCCC,1),(XCSWICC,1),(XCSWCH,1),         C
               (XCSWCT,16)
         DSGEN (XDUMA,16),(XCUA2,16)                             S21021
         DSGEN (XDEVT1,16),(XDEVT2,16)       DEVICE TYPE
         DSGEN (XDUM6,8),(XCUA,24)           DUMMY AND CUA
         DSGEN (XRETRY,16),(XNUMSNS,16) RTRY AND NO.SENSE BYTES
         DSGEN (SNS00,1,0,7)       SENSE
         DSGEN (SNS01,1,0,7)       BYTES
         DSGEN (SNS02,1,0,7)
         DSGEN (SNS03,1,0,7)
         DSGEN (SNS04,1,0,7)
         DSGEN (SNS05,1,0,7)
         DSGEN (SNS06,1,0,7)
         DSGEN (SNS07,1,0,7)
         DSGEN (SNS08,1,0,7)                                   @M04AE95
         DSGEN (SNS09,1,0,7)                                   @M04AE95
         DSGEN (SNS10,1,0,7)                                   @M04AE95
         DSGEN (SNS11,1,0,7)                                   @M04AE95
         DSGEN (SNS12,1,0,7)                                   @M04AE95
         DSGEN (SNS13,1,0,7)                                   @M04AE95
         DSGEN (SNS14,1,0,7)                                   @M04AE95
         DSGEN (SNS15,1,0,7)                                   @M04AE95
         DSGEN (SNS16,1,0,7)                                   @M04AE95
         DSGEN (SNS17,1,0,7)                                   @M04AE95
         DSGEN (SNS18,1,0,7)                                   @M04AE95
         DSGEN (SNS19,1,0,7)                                   @M04AE95
         DSGEN (SNS20,1,0,7)                                   @M04AE95
         DSGEN (SNS21,1,0,7)                                   @M04AE95
         DSGEN (SNS22,1,0,7)                                   @M04AE95
         DSGEN (SNS23,1,0,7)                                   @M04AE95
         DSGEN (SNS24,1,0,7)                                   @M04AE95
         DSGEN (SNS25,1,0,7)                                   @M04AE95
         DSGEN (SNS26,1,0,7)                                   @M04AE95
         DSGEN (SNS27,1,0,7)                                   @M04AE95
         DSGEN (SNS28,1,0,7)                                   @M04AE95
         DSGEN (SNS29,1,0,7)                                   @M04AE95
         DSGEN (SNS30,1,0,7)                                   @M04AE95
         DSGEN (SNS31,1,0,7)                                   @M04AE95
         ORG   SNS000                                          @M04AE95
         DSGEN (SNS,16,1,8,1,2)                                @M04AE95
         ORG   SNS000                                          @XA19168
         DSGEN (SNSRSV1,72)                                    @XA19168
         DSGEN (SNSMCS,16)                                     @XA19168
         DSGEN (SNSRSV2,168)                                   @XA19168
         DSGEN (SNSRSV,56)                                     @M04AE95
         DSGEN (SNSSTAT,1,0,7)                                 @XA19168
         DSGEN (BASC1,1,0,7)
         DSGEN (BASC2,1,0,7)
         DSGEN (XDUMZ,8),(XSIOCNT,24)        START I/O COUNT
*
*        END OF DSECT
*
IFCEXXXH CSECT
         USING *,R9
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
L0       EQU   0
L1       EQU   1
L2       EQU   2
L3       EQU   3
L4       EQU   4
L5       EQU   5
L6       EQU   6
L7       EQU   7
L8       EQU   8
L9       EQU   9
L10      EQU   10
L11      EQU   11
L12      EQU   12
L13      EQU   13
L14      EQU   14
L15      EQU   15
L16      EQU   16
L17      EQU   17
L18      EQU   18
L19      EQU   19
L20      EQU   20
L21      EQU   21                                                S21021
L24      EQU   24
L28      EQU   28
L29      EQU   29                                                S21021
L31      EQU   31                                                S21021
L34      EQU   34                                                S21021
L36      EQU   36                                                S21021
L40      EQU   40                                                S21021
L44      EQU   44                                                S21021
L46      EQU   46                                                S21021
L64      EQU   64                                                S21021
L104     EQU   104                                               S21021
L120     EQU   120                                               S21021
HEX01    EQU   X'01'                                           @M04AE95
HEX04    EQU  X'04'                                            @XA20899
HEX08    EQU   X'08'                                             S21021
HEX10    EQU   X'10'                                             S21021
HEX20    EQU   X'20'                                             S21021
HEX30    EQU   X'30'
HEX40    EQU   X'40'                                           @XA19168
HEX44    EQU   X'44'                                             S21021
HEX46    EQU   X'46'                                             S21021
HEX50    EQU   X'50'                                             S21021
HEX60    EQU   X'60'                                           @XA19168
HEX80    EQU   X'80'
HEXA0    EQU   X'A0'                                           @XA19168
HEXC0    EQU   X'C0'                                           @XA19168
HEXE0    EQU   X'E0'                                           @XA19168
XFF      EQU   X'FF'                                             S21021
A        EQU   C'A'                                              S21021
B        EQU   C'B'                                              S21021
         USING XXXH,R2                                           S21021
*
HEX05    EQU   X'05'
         DC    A(ENTRIES)               PTR TO EDIT ENTRIES
         DC    CL8'IFCEXXXH'                                   @XA19168
XR9PTR   DC    F'0'                     PTR TO NXT EDIT-4        S21021
XLABELP  DC    F'0'
*        SPECIAL ROUTINE SECTION
*
SKIPPER  BR    R14                      NOOP RTRN
*
*
SPACER1  LA    R3,L1(R3)                SPACE ONE BLANK          S21021
         BR    R14                      RETURN
*
SPACER16 LA    R3,L16(R3)          SPACE 16 BLANKS
         BR    14                  RETURN
*
*        SET BINARY
*              R4 HAS PTR TO CHAR
*
SETBIN   STM   R5,R8,XSAVE              SAVE REGS
         IC    R7,L0(R4)                PICK UP CHAR TO PRINT
         SLL   R7,L24                   MOVE IT TO HI OF R7
         LR    R8,R3                    PRINT POS POINTER
         LA    R5,L8                    LOOP COUNT
SETBINA  SR    R6,R6                    CLEAR REG 6
         SLDL  R6,L1                    MOVE BIT TO R6
         STC   R6,L0(R8)                PUT IT INTO PTINT LINE
         MVZ   L0(L1,R8),CHAR0          MOVE ON PRORPER ZONE
         LA    R8,L1(R8)                BUMP POINTER TO NEXT POS
         BCT   R5,SETBINA               LOOP TILL 8 PRINTED
         B     RETURN                   RETURN
*
*
*        SET PROGRAM NAME  R4 POINTS TO NAME FIELD
*
SETPGMN  DS    0H                                                S21021
         TM    SW2B0,HEX20              SHORT RECORD             S21021
         BCR   1,R14                    YES, NO JOB ID           S21021
         MVC   0(L12,R3),JOBID          MOVE IN LABEL            S21021
         MVC   L13(L8,R3),XPGN1         MOVE IN NAME             S21021
         BR    R14                                               S21021
NONAME   TM    L0(R4),HEX20             SHORT RECORD?            S21021
         BCR   14,R14                   NO, LET HEX JOBNAME PRNT S21021
         ST    R5,XSAVE                 SAVE REG                 S21021
         LA    R5,L44                   BACK UP BUFFER PNTR      S21021
         SR    R3,R5                                             S21021
         MVC   0(L17,R3),BLANKS         CLEAR OUT HEX JOBNAME    S21021
         L     R5,XSAVE                 RESTORE REG              S21021
         BR    R14                                               S21021
*
*
*        SET HEX  SAME AS BIN EXCPT PRINTS 1 CHAR HEX
*
SETHEX   STM   R5,R8,XSAVE              SAVE REGS
         LA    R8,CHARS                 CHAR TABLE POINTER
         IC    R7,L0(R4)                PICK UP CHAR
         SLL   R7,L24                   MOVE IT TO HI OF R7
         SR    R6,R6                    CLEAR REGS
         SLDL  R6,L4                    MOVE FOUR BITS
         AR    R6,R8                    ADD OFFSET & PTR
         MVC   L0(L1,R3),L0(R6)         MOVE CHAR TO LINE
         SR    R6,R6                    CLEAR AGAIN
         SLDL  R6,L4                    MOVE LAST 4 BOTS
         AR    R6,R8                    COMPUTE OFFSET
         MVC   L1(L1,R3),L0(R6)         MOVE LAST CHAR
         B     RETURN
*
*
*
SETCONV  TM    L0(R4),HEX02             HAS RECORD BEEN CONVERTED KEY32
         BCR   ON,R14                   YES RETURN
         SR    R15,R15                  NO CLEAR R15 FOR NO PRINT OF
         BR    R14                      LINE BR-14
ON       EQU   1
HEX02    EQU   X'02'
*                                       SET DEVICE TYPE FIELD
*
*
*
*                             CHECK ON CPU AND SERIAL NO
SETCPUNO STM   R5,R8,XSAVE
         SR    R5,R5               CLEAR R5
         IC    R5,L0(R4)           PICK UP MODEL NO
         SLL   R5,L8               IN TO
         IC    R5,L1(R4)           R5
         LTR   R5,R5                    TEST FOR ZERO MODEL      S21021
         LR    R5,R3                    POINT TO DATA FIELD      S21021
         BNZ   SETSER                   BRANCH IF MODEL NOT 0    S21021
         LA    R6,L46                   BACK UP TO SAY 'NONE'    S21021
         SR    R5,R6                    BACKUP BUFFER            S21021
         MVC   L0(L29,R5),UNIVERS       SAY NONE, MODEL UNIVERSALS21021
         B     RETURN                   RETURN  CONTROL
SETSER   LA    R6,L36                   SET UP TO ADD 'SERIAL NO.S21021
         SR    R5,R6                                             S21021
         MVC   0(L10,R5),SERNO                                   S21021
         B     RETURN                                            S21021
*
*        SET DATE
*
SETDATE  CLC   L1(L3,R4),ZERO           IS DATE ZERO
         BE    SETDTE                   BR-YES
         UNPK  XSAVE(L8),L1(L3,R4)      UNPACK DATE
         MVC  L5(L2,R3),XSAVE+L3  MOVE YEAR
         MVC   L0(L3,R3),XSAVE+L5       MOVE DAY
         BR    R14                      RETURN
SETDTE   MVC   L0(L4,R3),NONE           SET DATE TO NONE
         BR    R14
ZERO     DC    XL4'00'
*
*
*
RETURN   LM    R5,R8,XSAVE              RESTORE REG
         BR    R14                      RETURN
HEX03    EQU   X'03'
HEX18    EQU   X'18'
*
*                                                                S21021
CONVREL  STM   R5,R8,XSAVE              SAVE WORK REGS
         SR    R6,R6                    CLEAR R6
         IC    R6,L0(R4)                PICK UP REL & SYS VALUES
         SRDL  R6,L5                    SAVE REL NO IN R7
        SLL   R6,L2                    MULTIPLY SYS VALUE BY 4
         L     R8,XLABELP               PICK UP LABEL POINTER
         LA    R6,RELTAB(R6)            INDEX INTO TABLE OF SYSTEMS
         MVC   L0(L4,R8),L0(R6)         MOVE SYSTEM NAME INTO LABEL
         SR    R6,R6                    CLEAR R6
         SLDL  R6,L5                    RETREIVE REL NO.
         LTR   R6,R6                    IS IT ZERO
         BZ    NOREL                    BR-YES
         CVD   R6,WORK                  CONVERT IT
         UNPK  L0(L2,R3),WORK+L6(L2)    UNPACK IT INTO PRINT BUFF
         MVZ   L1(L1,R3),L0(R3)         MOVE ON PROPER ZONE
         B     RETURN                   EXIT
NOREL    MVC   L0(L4,R3),NONE           MOVE IN NONE FOR REL
         B     RETURN
CHKPROC  STM   R5,R8,XSAVE
         TM    L0(R4),HEX10        PRINT JUST SENSE DATA
         BZ    CHKPROC2            BRANCH IF YES
         LR    R5,R4               SAVE R4
         LA    R5,L1(R5)           GET TO BASIC SENSE BYT 2    @M04AE95
         TM    L0(R5),HEX01        PROCESSOR OR EXTENDED       @M04AE95
         BO    RETURN              BRANCH IF PROCESSOR
         L     R5,EXTEND           RESET LABELS AND
         ST    R5,XR9PTR           LINE POINTERS FOR
         L     R5,EXTEND1          EXTENDED SENSE DATA
         ST    R5,XLABELP
         B     RETURN
CHKPROC2 L     R5,FINISH           BYPASS PROCESSOR AND
         ST    R5,XR9PTR           EXTENDED SENSE DATA
         L     R5,FINISH1
         ST    R5,XLABELP
         B     RETURN
*
CKTYPE   STM   R5,R8,XSAVE         SAVE REGISTERS
         TM    CLASS,HEX30         IS IT REALLY OBR?
         BO    RETURN              RETURN IF YES
         LA    R5,ET00D-4          SET UP TO CALL IFCET00D
         ST    R5,XR9PTR           FOR MDR PROCESSING
         B     RETURN
CCTYPE   STM   R5,R8,XSAVE       SAVE REGISTERS                @XA19168
         L     R8,XLABELP        GET ADDR OF LABEL             @XA19168
         CLI   0(R4),HEX01        IS IT GENERAL                @XA20885
         BNE   CCTYPE0            NO,CONTINUE CHECK            @XA20885
         MVC   L0(L12,R8),GEN     SET UP LABEL                 @XA20885
         B     RETURN             RETURN                       @XA20885
CCTYPE0  CLI   0(R4),HEX02        IS IT MICROFILM              @XA20885
         BNE   CCTYPE1            NO,CONTINUE CHECK            @XA20885
         MVC   L0(L12,R8),MICRFILM  SET UP LABEL               @XA20885
         B     RETURN             RETURN                       @XA20885
CCTYPE1  CLI   0(R4),HEX20        IS IT MICR                   @XA20885
         BNE   CCTYPE2            NO,CONTINUE CHECK            @XA20885
         MVC   L0(L12,R8),MICR    SET UP LABEL                 @XA20885
         B     RETURN             RETURN                       @XA20885
CCTYPE2  CLI   0(R4),HEX40        IS IT RUN CTL                @XA20885
         BNE   CCTYPE3            NO,CONTINUE CHECK            @XA20885
         MVC   L0(L12,R8),RUNCTL  SET UP LABEL                 @XA20885
         B     RETURN             RETURN                       @XA20885
CCTYPE3  CLI   0(R4),HEX08        IS IT INSCRIBER/PRINTER      @XA20885
         BNE   CCTYPE4            NO,CONTINUE CHECK            @XA20885
         MVC   L0(L12,R8),INSPRT  SET UP LABEL                 @XA20885
         B     RETURN             RETURN                       @XA20885
CCTYPE4  CLI   0(R4),HEX10        IS IT DIH                    @XA20885
         BNE   CCTYPE5            NO,CONTINUE CHECK            @XA20885
         MVC   L0(L12,R8),DIH     SET UP LABEL                 @XA20885
         B     RETURN             RETURN                       @XA20885
CCTYPE5  CLI   0(R4),HEX80        IS IT CHANNEL ADAPT          @XA20885
         BNE   CCTYPE6            NO,CONTINUE CHECK            @XA20885
         MVC   L0(L12,R8),CHANADPT  SET UP LABEL               @XA20885
         B     RETURN             RETURN                       @XA20885
CCTYPE6  CLI   0(R4),HEX04        IS IT OCR                    @XA20885
         BNE   CCTYPE7            NO,CONTINUE CHECK            @XA20885
         MVC   L0(L12,R8),OCR     SET UP LABEL                 @XA20885
         B     RETURN             RETURN                       @XA20885
CCTYPE7  MVC   L0(L12,R8),UNDEF   SET UP LABEL                 @XA20885
         B     RETURN           RETURN
CHKERROR STM   R5,R8,XSAVE                                     @M04AE95
         L     R8,XLABELP          GET ADDR OF LABEL           @M04AE95
         TM    0(R4),HEX80         ANY ERRORS                  @M04AE95
         BZ    NOERROR             NO,BRANCH                   @M04AE95
         MVC   L0(L13,R8),ERRORMSG YES,PUT ERROR IN LABEL      @M04AE95
         B     RETURN                                          @M04AE95
NOERROR  MVC   L0(L13,R8),BLANKS  ZERO LABEL,NO ERROR          @M04AE95
         B     RETURN                                          @M04AE95
*                                                                S21021
RECTYPE  STM   R5,R8,XSAVE                                       S21021
         LR    R5,R3                    SET UP DATA SLOT FOR TYPES21021
         LA    R6,L31                                            S21021
         SR     R5,R6                                            S21021
         TM    0(R4),HEX20              SHORT RECORD?            S21021
         BO    RECSHORT                                          S21021
         MVC   0(L10,R5),UNITCK         INSERT DATA 'UNIT CHECK' S21021
         B     RETURN                                            S21021
RECSHORT MVC   0(L10,R5),OVFL           DATA = 'OVERFLOW'        S21021
         B     RETURN                                            S21021
STLBLEND DC    F'0'                                              S21088
WORK     DS    D                                                 S21021
SAVE2    DS    F                                                 S21021
OBRAREA  DS    CL104                                             S21021
BLANKS   DC    CL25' '                                           S21021
ET00D    DC    X'FE'
         DC    CL8'IFCET00D'
HW21     DC    H'21'                                             S21021
HW13     DC    H'13'                                             S21021
ERRORMSG DC    C'/// ERROR ///'                                @M04AE95
UNITCK   DC    C'UNIT CHECK'                                     S21021
OVFL     DC    C'OVERFLOW  '                                     S21021
SERNO    DC    C'SERIAL NO.'                                     S21021
MPCPU    DC    C'MULTIPROCESSOR - CPU'                           S21021
UNIVERS  DC    C'UNIVERSAL   SERIAL NO. NONE  '                  S21021
JOBID    DC    C'JOB IDENTITY'                                   S21021
UNDEF    DC    C'UNDEFINED   '                                 @XA20885
MICR     DC    C'MICR        '                                 @XA20885
RUNCTL   DC    C'RUN CTL     '                                 @XA20885
INSPRT   DC    C'INS/PRT     '                                 @XA20885
DIH      DC    C'DIH         '                                 @XA20885
CHANADPT DC    C'CHAN ADAPT  '                                 @XA20885
RECO     DC    C'RECO        '                                 @XA20885
MICRFILM DC    C'MICROFILM   '                                 @XA20885
GEN      DC    C'GENERAL     '                                 @XA20885
OCR      DC    C'OCR         '                                 @XA20885
         DS    0F
XSAVE    DC    5F'0'
NONE     DC    CL6'NONE  '
CHARS    DC    C'0123456789ABCDEF'
CHAR0    DC    C'0'
RELTAB   DS    0C                                              @L03976
         DC    C'OS  '                                         @L03976
         DC    C'DOS '                                         @L03976
         DC    C'VS1 '                                         @L03976
         DC    C'V370'                                         @L03976
         DC    C'VS2 '                                         @L03976
         DC    C'    '                                         @L03976
         DC    C'    '                                         @L03976
         DC    C'    '                                         @L03976
EXTEND   DC    A(EXTSNS-4)
EXTEND1  DC    A(EXTSNS1-1)
FINISH   DC    A(FINIS-4)
FINISH1  DC    A(FINIS1-1)
*
HEX0F    EQU   X'0F'
*                       TABLE CONSTANTS
ENTRIES  DS    0F
         DC    XL4'00000000'       FORMAT1
         DC    XL4'00000000'       FORMAT2
         DC    A(LABELS)                LABEL PTR
         DC    H'0'                     DISP
         LINE
         ROUTINE CLASS,CKTYPE
         LABEL ''
         LINE  SKIP=E
         LABEL ''
         LINE  (55,22),(1,35),SKIP=1                             S21021
         ROUTINE  SW2B0,RECTYPE                                  S21021
         HEX   XMODEL,0,2B                                       S21021
         HEX   XSER,0,3B                                         S21021
         ROUTINE XMODEL,SETCPUNO                                 S21021
         LABEL '---RECORD ENTRY TYPE -','   SOURCE - OUTBOARD',        X
               'MODEL '                                          S21021
         LINE  (13,1),(4,1)                                      S21021
         ROUTINE    XRELN,CONVREL
         LABEL      'XXXX REL '                                @XA19168
         LINE  (69,1),(31,19)                                    S21021
         ROUTINE XPGN1,SETPGMN                                   S21021
         LABEL 'DAY YEAR','HH MM SS.TH'                          S21021
         LINE  (31,19),(25,19),SKIP=2
         ROUTINE XDATE,SETDATE                                   S21021
         HEX   XTIME,1,4B                                        S21021
         ROUTINE  XDUM1,SKIPPER                                  S21021
         HEX   XPGN1,B6,4B                                       S21021
         HEX   XPGN2,B16,4B                                      S21021
         ROUTINE  SW2B0,NONAME                                   S21021
         LABEL 'DATE ','TIME '                                   S21021
         LINE  ,(1,1),SKIP=2                                     S21021
         ROUTINE XDUM1,SETCONV                                   S21021
         LABEL 'OBR RECORD CONVERTED TO THE STANDARD FORMAT'     S21021
         LINE  (32,1),(2,41),SKIP=1                            @XA20899
         HEX   XCUA2,0,2B                                        S21021
         ROUTINE XDUM1,SKIPPER
         LABEL 'FAILING CHANNEL/UNIT ADDRESS','DEVICE TYPE  3895'
         LINE
         ROUTINE XDUM1,SKIPPER
         LABEL ' '                                               S21021
         LINE  (1,1),(23,38)                                     S21021
         ROUTINE XDUM1,SKIPPER
         LABEL 'CC   DA   FL     CT','K    CA   US CS  CT'       S21021
         LINE  (23,3),(5,46),SKIP=2                              S21021
         HEX   XFCCWCC,0,1B                                      S21021
         HEX   XFCCWDA,0,3B                                      S21021
         ROUTINE  XDUM1,SPACER1                                  S21021
         HEX   XFCCWFL,0,1B                                      S21021
         HEX   XZERO,0,1B                                        S21021
         HEX   XFCCWCT,0,2B                                      S21021
         ROUTINE  XDUM1,SPACER16                                 S21021
         HEX   XCSWK,0,1B                                        S21021
         HEX   XCSWCA,0,3B                                       S21021
         ROUTINE  XDUM1,SPACER1                                  S21021
         ROUTINE XCSWATTN,SETHEX
         ROUTINE XCSWPCI,SETHEX
         HEX   XCSWCT,0,2B                                       S21021
         LABEL 'FAILING CCW','CSW'                               S21021
         LINE  ,(16,55),SKIP=1                                 @XA20899
         ROUTINE XDUM1,SKIPPER
         LABEL '--- UNIT STATUS ---','--- CHANNEL STATUS ---'
         LINE  (20,28),(3,28),SKIP=1
         BIN   XCSWATTN
         BIN   XCSWCE
         BIN   XCSWPCI
         BIN   XCSWCDC
         LABEL 'ATTENTION','CHANNEL END','PRGM-CTLD IRPT',             *
               'CHAN DATA CHECK'
         LINE
         BIN   XCSWSM
         BIN   XCSWDE
         BIN   XCSWSILI
         BIN   XCSWCCC
         LABEL 'STATUS MODIFIER','DEVICE END','INCORRECT LENGTH',      *
               'CHAN CTL CHECK'
         LINE
         BIN   XCSWCUE
         BIN   XCSWUC
         BIN   XCSWPC
         BIN   XCSWICC
         LABEL 'CONTROL UNIT END','UNIT CHECK','PROGRAM CHECK',        *
               'I/F CTL CHECK'
         LINE  ,,SKIP=2
         BIN   XCSWBSY
         BIN   XCSWUE
         BIN   XCSWPCHK
         BIN   XCSWCH
         LABEL 'BUSY','UNIT EXCEPTION','PROTECTION CHECK',     @M04AE95*
               'CHAINING CHECK'
*
         LINE  (24,1),(1,28),SKIP=2
         ROUTINE    XDUM1,SKIPPER
         LABEL      'SENSE BYTE DATA'
*
         LINE  (19,40),(4,41),SKIP=1                           @XA20899
         ROUTINE  BASC10,SETHEX
         ROUTINE  BASC20,SETHEX
         LABEL 'BYTE 0','BYTE 1'                               @XA20891
         LINE  (20,17),(5,18),SKIP=0                           @XA20899
         BIN   BASC10                                          @XA20899
         BIN   BASC14                                          @XA20899
         LABEL  'COMMAND REJ','DATA CHK'                       @XA20899
         LINE  (60,18),(46,18),SKIP=1                          @XA20899
         BIN   BASC20                                          @XA20899
         BIN   BASC24                                          @XA20899
         LABEL 'PREDICTOR REQ','INVALID CMD'                   @XA20899
         LINE  (20,17),(5,18),SKIP=0                           @XA20899
         BIN   BASC11                                          @XA20899
         BIN   BASC15                                          @XA20899
         LABEL 'INTRVN REQD','BIT 5'                           @XA20899
         LINE  (60,18),(46,18),SKIP=1                          @XA20899
         BIN   BASC21                                          @XA20899
         BIN   BASC25                                          @XA20899
         LABEL 'FEATURE CHK','INCOMP PROC'                     @XA20899
         LINE  (20,17),(5,18),SKIP=0                           @XA20899
         BIN   BASC12                                          @XA20899
         BIN   BASC16                                          @XA20899
         LABEL 'BUS OUT CHK','NOT INIT'                        @XA20899
         LINE  (60,18),(46,18),SKIP=1                          @XA20899
         BIN   BASC22                                          @XA20899
         BIN   BASC26                                          @XA20899
         LABEL 'FEED CMD REQD','MERGE FEED'                    @XA20899
         LINE  (20,17),(5,18),SKIP=0                           @XA20899
         BIN   BASC13                                          @XA20899
         BIN   BASC17                                          @XA20899
         LABEL 'EQUIP CHK','RUNNING'                           @XA20899
         LINE  (60,18),(46,18),SKIP=2                          @XA20899
         BIN   BASC23                                          @XA20899
         BIN   BASC27                                          @XA20899
         LABEL 'BIT 3','PROC NOT FUNC'                         @XA20899
         LINE
         ROUTINE BASC13,CHKPROC                                @M04AE95
         LABEL ' '                                             @M04AE95
         LINE  (29,9),(1),SKIP=0                               @M04AE95
         HEX   (SNS11,0,4B)                                    @M04AE95
         HEX   (SNS21,0,4B)                                    @M04AE95
         HEX   (SNS31,0,4B)                                    @M04AE95
         HEX   (SNS41,0,4B)                                    @M04AE95
         LABEL ' '                                             @XA20899
         LINE  (66,9),(1),SKIP=0                               @XA20899
         HEX   (SNS51,0,4B)                                    @M04AE95
         HEX   (SNS61,0,4B)                                    @M04AE95
         HEX   (SNS71,0,4B)                                    @M04AE95
         HEX   (SNS81,0,4B)                                    @M04AE95
         LABEL 'PROCESSOR SENSE BYTE DATA -'                   @M04AE95
         LINE  ,(103),SKIP=2                                   @XA19168
         ROUTINE SNSSTAT0,CHKERROR                             @XA19168
         LABEL '             '                                 @XA19168
         LINE  (33),(4),SKIP=2                                 @XA20899
         HEX   (SNS11,0,3B)                                    @M04AE95
         LABEL  'CURRENT INSTRUCTION -0,1,2-'                  @XA20891
         LINE  (22,18),(4,22),SKIP=0                           @XA20891
         ROUTINE SNS040,SETHEX                                 @M04AE95
         ROUTINE SNS050,SETHEX                                 @M04AE95
         LABEL 'ERR REG -4-','ERR REG -5-'                     @XA20899
         LINE  (62,21),(44,22),SKIP=1                          @XA20899
         ROUTINE SNS060,SETHEX                                 @M04AE95
         ROUTINE SNS070,SETHEX                                 @M04AE95
         LABEL 'CTL LATCHES -6-','CTL LATCHES -7-'             @XA20891
         LINE  (23,18),(5,22),SKIP=0                           @M04AE95
         BIN   SNS040                                          @M04AE95
         BIN   SNS050                                          @M04AE95
         LABEL 'PROG SET HARD ERR','A-PRTY CHK'                @M04AE95
         LINE  (63,21),(45,22),SKIP=1                          @M04AE95
         BIN   SNS060                                          @M04AE95
         BIN   SNS070                                          @M04AE95
         LABEL 'WAIT STATE','DELAYED STOP'                     @M04AE95
         LINE  (23,18),(5,22),SKIP=0                           @M04AE95
         BIN   SNS041                                          @M04AE95
         BIN   SNS051                                          @M04AE95
         LABEL 'CS DATA CHK','B-PRTY CHK'                      @M04AE95
         LINE  (63,21),(45,22),SKIP=1                          @M04AE95
         BIN   SNS061                                          @M04AE95
         BIN   SNS071                                          @M04AE95
         LABEL 'PRIORITY RUN MODE','BUSY'                      @M04AE95
         LINE  (23,18),(5,22),SKIP=0                           @M04AE95
         BIN   SNS042                                          @M04AE95
         BIN   SNS052                                          @M04AE95
         LABEL 'CS ADDR CHK','SCAN BUFR CHK'                   @M04AE95
         LINE  (63,21),(45,22),SKIP=1                          @M04AE95
         BIN   SNS062                                          @M04AE95
         BIN   SNS072                                          @M04AE95
         LABEL 'INTRPT RUN MODE','RUN'                         @M04AE95
         LINE  (23,18),(5,22),SKIP=0                           @M04AE95
         BIN   SNS043                                          @M04AE95
         BIN   SNS053                                          @M04AE95
         LABEL 'CYCLE CTL CHK','CHAN TIME-OUT'                 @XA20886
         LINE  (63,21),(45,22),SKIP=1                          @M04AE95
         BIN   SNS063                                          @M04AE95
         BIN   SNS073                                          @M04AE95
         LABEL 'INTRPT LATCH','BIT 3'                          @M04AE95
         LINE  (23,18),(5,22),SKIP=0                           @M04AE95
         BIN   SNS044                                          @M04AE95
         BIN   SNS054                                          @M04AE95
         LABEL 'BIT 4','BIT 4'                                 @M04AE95
         LINE  (63,21),(45,22),SKIP=1                          @M04AE95
         BIN   SNS064                                          @M04AE95
         BIN   SNS074                                          @M04AE95
         LABEL 'BIT 4','REGS FULL'                             @M04AE95
         LINE  (23,18),(5,22),SKIP=0                           @M04AE95
         BIN   SNS045                                          @M04AE95
         BIN   SNS055                                          @M04AE95
         LABEL 'BIT 5','BIT 5'                                 @M04AE95
         LINE  (63,21),(45,22),SKIP=1                          @M04AE95
         BIN   SNS065                                          @M04AE95
         BIN   SNS075                                          @M04AE95
         LABEL 'BIT 5','PRE-FETCH INHBT'                       @M04AE95
         LINE  (23,18),(5,22),SKIP=0                           @M04AE95
         BIN   SNS046                                          @M04AE95
         BIN   SNS056                                          @M04AE95
         LABEL 'BIT 6','BIT 6'                                 @M04AE95
         LINE  (63,21),(45,22),SKIP=1                          @M04AE95
         BIN   SNS066                                          @M04AE95
         BIN   SNS076                                          @M04AE95
         LABEL 'BIT 6','FETCH 1'                               @M04AE95
         LINE  (23,18),(5,22),SKIP=0                           @M04AE95
         BIN   SNS047                                          @M04AE95
         BIN   SNS057                                          @M04AE95
         LABEL 'BIT 7','BIT 7'                                 @M04AE95
         LINE  (63,21),(45,22),SKIP=2                          @M04AE95
         BIN   SNS067                                          @M04AE95
         BIN   SNS077                                          @M04AE95
         LABEL 'BIT 7','USE 1'                                 @M04AE95
         LINE  (31),(4),SKIP=1                                 @XA20899
         HEX   (SNS41,0,2B)                                    @M04AE95
         LABEL 'C-ADDRESS COUNTER -12,13-'                     @XA20891
         LINE  (20,29),(4,26),SKIP=1                           @XA20891
         HEX   (SNS42,0,2B)                                    @M04AE95
         HEX   (SNS51,0,2B)                                    @M04AE95
         LABEL 'CSAR 1 -14,15-','BAL REG 1 -16,17-'            @XA20891
         LINE  (20,29),(4,26),SKIP=2                           @XA20891
         HEX   (SNS52,0,2B)                                    @M04AE95
         HEX   (SNS61,0,2B)                                    @M04AE95
         LABEL 'CSAR 2 -18,19-','BAL REG 2 -20,21-'            @XA20891
         LINE  ,(4,28),SKIP=1                                  @XA20891
         LABEL 'PRIORITY -    REQ REG -8-',                    @XA20891*
               'MASK REG -9-   REG 1 -10-    REG 2 -11-'       @XA20891
         LINE  (23,14),(5),SKIP=1                              @XA20891
         BIN   SNS080                                          @M04AE95
         BIN   SNS090                                          @M04AE95
         BIN   SNS100                                          @M04AE95
         BIN   SNS110                                          @M04AE95
         LABEL 'MACH CHK'                                      @M04AE95
         LINE  (23,14),(5),SKIP=1                              @XA20899
         BIN   SNS081                                          @M04AE95
         BIN   SNS091                                          @M04AE95
         BIN   SNS101                                          @M04AE95
         BIN   SNS111                                          @M04AE95
         LABEL 'TIMER'                                         @M04AE95
         LINE  (23,14),(5),SKIP=1                              @XA20899
         BIN   SNS082                                          @M04AE95
         BIN   SNS092                                          @M04AE95
         BIN   SNS102                                          @M04AE95
         BIN   SNS112                                          @M04AE95
         LABEL 'MICR'                                          @M04AE95
         LINE  (23,14),(5),SKIP=1                              @XA20899
         BIN   SNS083                                          @M04AE95
         BIN   SNS093                                          @M04AE95
         BIN   SNS103                                          @M04AE95
         BIN   SNS113                                          @M04AE95
         LABEL 'CHAN ADAPT'                                    @M04AE95
         LINE  (23,14),(5),SKIP=1                              @XA20899
         BIN   SNS084                                          @M04AE95
         BIN   SNS094                                          @M04AE95
         BIN   SNS104                                          @M04AE95
         BIN   SNS114                                          @M04AE95
         LABEL 'CE PANEL'                                      @M04AE95
         LINE  (23,14),(5),SKIP=1                              @XA20899
         BIN   SNS085                                          @M04AE95
         BIN   SNS095                                          @M04AE95
         BIN   SNS105                                          @M04AE95
         BIN   SNS115                                          @M04AE95
         LABEL 'DIH'                                           @M04AE95
         LINE  (23,14),(5),SKIP=1                              @XA20899
         BIN   SNS086                                          @M04AE95
         BIN   SNS096                                          @M04AE95
         BIN   SNS106                                          @M04AE95
         BIN   SNS116                                          @M04AE95
         LABEL 'TRANSPORT'                                     @M04AE95
         LINE  (23,14),(5),SKIP=1                              @XA20899
         BIN   SNS087                                          @M04AE95
         BIN   SNS097                                          @M04AE95
         BIN   SNS107                                          @M04AE95
         BIN   SNS117                                          @M04AE95
         LABEL 'OCR'                                           @M04AE95
FINIS    LINE  ,,SKIP=1
         ROUTINE XDUM1,SKIPPER
FINIS1   LABEL ''
         DC    X'FF'
         DC    X'006E'                                         @M04AE95
         DC    X'0018'
         DC    X'0000'
*
EXTSNS   LINE  (28,9),(1),SKIP=0                               @M04AE95
         HEX   (SNS11,0,4B)                                    @M04AE95
         HEX   (SNS21,0,4B)                                    @M04AE95
         HEX   (SNS31,0,4B)                                    @M04AE95
         HEX   (SNS41,0,4B)                                    @M04AE95
         HEX   (SNS51,0,4B)                                    @M04AE95
         HEX   (SNS61,0,4B)                                    @M04AE95
         HEX   (SNS71,0,4B)                                    @M04AE95
         HEX   (SNS81,0,4B)                                    @M04AE95
EXTSNS1  LABEL 'EXTENDED SENSE BYTE DATA - '                   @M04AE95
         LINE  ,(103),SKIP=2                                   @XA19168
         ROUTINE SNSSTAT0,CHKERROR                             @XA19168
         LABEL '             '                                 @XA19168
         LINE  (18,20),(2,20),SKIP=1                           @XA20899
         ROUTINE   SNS000,SETHEX
         ROUTINE   SNS010,SETHEX
         ROUTINE   SNS020,SETHEX
         ROUTINE   SNS030,SETHEX
         ROUTINE   SNS040,SETHEX
         ROUTINE   SNS050,SETHEX
         LABEL 'INS/PRT -0-','MICR 1 -1-','DIH -2-',           @XA20891*
               'VIDEO -3-','RUN CTL -4-','RECO -5-'            @XA20891
         LINE  (19,20),(3,20),SKIP=1                           @M04AE95
         BIN   SNS000
         BIN   SNS010
         BIN   SNS020
         BIN   SNS030
         BIN   SNS040
         BIN   SNS050
         LABEL 'CTL ERR','BIT 0','M-BUFR PRTY CHK',            @M04AE95*
               'BEAM NOT MVNG','ENDORSER CHK','MCS PRTY CHK'   @M04AE95
         LINE  (19,20),(3,20),SKIP=1                           @M04AE95
         BIN   SNS001
         BIN   SNS011
         BIN   SNS021
         BIN   SNS031
         BIN   SNS041
         BIN   SNS051
         LABEL 'PRT COIL ERR','BUFR PRTY CHK',                 @M04AE95*
               'CMP ST PRTY CHK','RTS, NO TRACE','BIT 1',      @M04AE95*
               'MCS HANG CHK'                                  @M04AE95
         LINE  (19,20),(3,20),SKIP=1                           @M04AE95
         BIN   SNS002
         BIN   SNS012
         BIN   SNS022
         BIN   SNS032
         BIN   SNS042
         BIN   SNS052
         LABEL 'INS COIL ERR','BIT 2','M-BUFR ADDR CHK',       @M04AE95*
               'WINDOW OVRSCN','BIT 2','INVLD OP CODE'         @M04AE95
         LINE  (19,20),(3,20),SKIP=1                           @M04AE95
         BIN   SNS003
         BIN   SNS013
         BIN   SNS023
         BIN   SNS033
         BIN   SNS043
         BIN   SNS053
         LABEL 'BUFR PRTY CHK','BIT 3','CMP ST ADDR CHK',      @M04AE95*
               'ROTATION ERR','BIT 3','VIS ADDR CHK'           @M04AE95
         LINE  (19,20),(3,20),SKIP=1                           @M04AE95
         BIN   SNS004
         BIN   SNS014
         BIN   SNS024
         BIN   SNS034
         BIN   SNS044
         BIN   SNS054
         LABEL 'BUFR ADDR CHK','BUFR CHR OVRN','PROG CHK',     @M04AE95*
               'READ DATA CHK','BIT 4','BIT 4'                 @M04AE95
         LINE  (19,20),(3,20),SKIP=1                           @M04AE95
         BIN   SNS005
         BIN   SNS015
         BIN   SNS025
         BIN   SNS035
         BIN   SNS045
         BIN   SNS055
         LABEL 'BIT 5','BIT 5','TIME-OUT ERR',                 @M04AE95*
               'WRITE DATA CHK','BIT 5','BIT 5'                @M04AE95
         LINE  (19,20),(3,20),SKIP=1                           @M04AE95
         BIN   SNS006
         BIN   SNS016
         BIN   SNS026
         BIN   SNS036
         BIN   SNS046
         BIN   SNS056
         LABEL 'BIT 6','BIT 6','DCS SPEC ERR','LOW CRT PMT I',         *
               'BIT 6','BIT 6'                                 @XA20889
         LINE  (19,20),(3,20),SKIP=2                           @M04AE95
         BIN   SNS007
         BIN   SNS017
         BIN   SNS027
         BIN   SNS037
         BIN   SNS047
         BIN   SNS057
         LABEL 'BIT 7','BIT 7','BIT 7','LOW DOC PMT I','BIT 7','BIT 7'
         LINE  (23,91),(2,94),SKIP=0                           @XA20899
         ROUTINE SNS170,SETHEX                                 @M04AE95
         HEX   (SNS22,0,3B)                                    @M04AE95
         LABEL 'CC ADDRESS REG -17-','MCS DATA -6,7,8-'        @XA20891
         LINE  ,(28),SKIP=1                                    @XA20891
         ROUTINE SNS170,CCTYPE                                 @XA19168
         LABEL '            '                                  @XA19168
         LINE  (22,94),(2,94),SKIP=0                           @XA20899
         HEX   (SNS61,0,2B)                                    @M04AE95
         HEX   (SNSMCS,0,2B)                                   @M04AE95
         LABEL 'ERROR CODE -20,21-','MCS ADDRESS -9,10-'       @XA20885
         LINE  ,(28),SKIP=2                                    @XA20891
         ROUTINE SNS200,CCTYPE                                 @XA20891
         LABEL '            '                                  @XA20891
         LINE  (22,24),(2,24),SKIP=1                           @XA20891
         ROUTINE SNS160,SETHEX                                 @M04AE95
         ROUTINE SNS180,SETHEX                                 @M04AE95
         ROUTINE SNS190,SETHEX                                 @M04AE95
         ROUTINE SNS220,SETHEX                                 @XA20899
         ROUTINE SNS230,SETHEX                                 @XA20899
         LABEL 'CC ERR REG -16-','UNIT STAT REG -18-',         @XA20891*
               'CC STAT REG -19-',                             @XA20891*
               'MICROFILM -22-','OCR PROC -23-'                @XA20891
         LINE  (23,24),(3,24),SKIP=1                           @M04AE95
         BIN   SNS160                                          @M04AE95
         BIN   SNS180                                          @M04AE95
         BIN   SNS190                                          @M04AE95
         BIN   SNS220                                          @XA20899
         BIN   SNS230                                          @XA20899
         LABEL 'BIT 0','BIT 0','ANY CHAN CHK','LAMP CHK FRT',  @XA20899*
               'A-PRTY CHK'                                    @XA20899
         LINE  (23,24),(3,24),SKIP=1                           @M04AE95
         BIN   SNS161                                          @M04AE95
         BIN   SNS181                                          @M04AE95
         BIN   SNS191                                          @M04AE95
         BIN   SNS221                                          @XA20899
         BIN   SNS231                                          @XA20899
         LABEL 'BIT 1','BIT 1','UNIT RESP TAG','LAMP CHK RR',  @XA20899*
               'B-PRTY CHK'                                    @XA20899
         LINE  (23,24),(3,24),SKIP=1                           @M04AE95
         BIN   SNS162                                          @M04AE95
         BIN   SNS182                                          @M04AE95
         BIN   SNS192                                          @M04AE95
         BIN   SNS222                                          @XA20899
         BIN   SNS232                                          @XA20899
         LABEL 'NON-SELECT CHK','BIT 2','ACTIVE','CAPSTAN CHK',        *
               'FE ADDR CHK'                                   @XA20899
         LINE  (23,24),(3,24),SKIP=1                           @M04AE95
         BIN   SNS163                                          @M04AE95
         BIN   SNS183                                          @M04AE95
         BIN   SNS193                                          @M04AE95
         BIN   SNS223                                          @XA20899
         BIN   SNS233                                          @XA20899
         LABEL 'GET DATA CHK','BIT 3','GET DATA TAG',          @XA20899*
               'SHUTTER CHK','VB ADDR CHK'                     @XA20899
         LINE  (23,24),(3,24),SKIP=1                           @M04AE95
         BIN   SNS164                                          @M04AE95
         BIN   SNS184                                          @M04AE95
         BIN   SNS194                                          @M04AE95
         BIN   SNS224                                          @XA20899
         BIN   SNS234                                          @XA20899
         LABEL 'PUT DATA CHK','UNIT SELECTED','PUT DATA TAG',  @M04AE95*
               'BIT 4','FB PRTY CHK'                           @XA20891
         LINE  (23,24),(3,24),SKIP=1                           @M04AE95
         BIN   SNS165                                          @M04AE95
         BIN   SNS185                                          @M04AE95
         BIN   SNS195                                          @M04AE95
         BIN   SNS225                                          @XA20899
         BIN   SNS235                                          @XA20899
         LABEL 'TAG CHK','PREDICTOR DATA','SET TAG','BIT 5',   @XA20891*
               'VB PRTY CHK'                                   @XA20899
         LINE  (23,24),(3,24),SKIP=1                           @M04AE95
         BIN   SNS166                                          @M04AE95
         BIN   SNS186                                          @M04AE95
         BIN   SNS196                                          @M04AE95
         BIN   SNS226                                          @XA20899
         BIN   SNS236                                          @XA20899
         LABEL 'SELECT CHK','UNIT ERR','CHAN BUSY','BIT 6',    @XA20891*
               'CHAN TIME-OUT'                                 @XA20891
         LINE  (23,24),(3,24),SKIP=1                           @M04AE95
         BIN   SNS167                                          @M04AE95
         BIN   SNS187                                          @M04AE95
         BIN   SNS197                                          @M04AE95
         BIN   SNS227                                          @XA20899
         BIN   SNS237                                          @XA20899
         LABEL 'ADDR CHK','BIT 7','BURST MODE','BIT 7','BIT 7' @XA20891
         LINE  ,(1,1)                                          @M04AE95
         LABEL ''
         DC    X'FF'
         DC    X'006E'                                         @M04AE95
         DC    X'0018'
         DC    X'0000'
LABELS   DS    0F
         LSTART
         END
