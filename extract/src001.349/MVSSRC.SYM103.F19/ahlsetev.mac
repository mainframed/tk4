         TITLE 'AHLSETEV - SETEVENT SERVICE ENABLED PROCESSOR          *
                        '
AHLSETEV CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'AHLSETEV  77.321'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @11,0                                            01S0001
@PSTART  LA    @12,4095(,@11)                                   01S0001
         USING @PSTART,@11                                      01S0001
         USING @PSTART+4095,@12                                 01S0001
         L     @00,@SIZDATD                                     01S0001
         GETMAIN  R,LV=(0)
         LR    @09,@01                                          01S0001
         USING @DATD,@09                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @09,8(,@13)                                      01S0001
         LR    @13,@09                                          01S0001
         MVC   @PC00001(4),0(@01)                               01S0001
*   PLISTAD=R1PLSTAD;               /* SAVE PARMLIST ADDRESS         */
         ST    R1PLSTAD,PLISTAD                                 02S0087
*   RFY                                                         02S0088
*     R1PLSTAD UNRSTD;                                          02S0088
*   RTRNCODE=0;                     /* INITIALIZE RETURN CODE TO ZERO*/
         SLR   @08,@08                                          02S0089
         ST    @08,RTRNCODE                                     02S0089
*   RTRNMCQE=0;                     /* INITIALIZE MCQE ADDRESS TO BE
*                                      RETURNED IN REGISTER ZERO TO
*                                      ZERO. THIS WILL BE UPDATED
*                                      WITH NEWLY-GOTTEN MCQE ADDRESS
*                                      IF ONE IS AQUIRED ON THIS CALL
*                                      OF AHLSETEV.                  */
         SLR   RTRNMCQE,RTRNMCQE                                02S0090
*   FLAGS=0;                        /* CLEAR ALL FLAGS               */
         MVI   FLAGS,X'00'                                      02S0091
*   MCQEPTR=0;                      /* ZERO MCQE ADDRESS             */
         SLR   MCQEPTR,MCQEPTR                                  02S0092
*   LASTELM=0;                      /* INITIALIZE CHAIN VALUE TO
*                                      INDICATE THAT WE ARE AT  02S0093
*                                      BEGINNING                     */
         SLR   LASTELM,LASTELM                                  02S0093
*   MCHEADPT=ADDR(MCHEAD);          /* FIND MCHEAD ADDRESS AND SAVE
*                                      IT                            */
         L     @08,CVTPTR                                       02S0094
         L     @08,CVTGTFA-1(,@08)                              02S0094
         LA    @08,0(,@08)                                      02S0094
         ST    @08,MCHEADPT                                     02S0094
*   RFY                                                         02S0095
*     MCHEAD BASED(MCHEADPT);                                   02S0095
*                                                               02S0096
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING LOGIC CHECKS FOR A VALID CALLER VIA THE TESTAUTH*/
*   /* FACILITY, AND ESTABLISHES PROTECT KEY ZERO AND SUPERVISOR     */
*   /* STATE FOR VALID CALLERS. INVALID CALLERS ARE ABENDED.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0096
*   GENERATE;                                                   02S0096
          TESTAUTH STATE=YES,RBLEVEL=1   Q. WAS CALLER IN SUPER STATE
*   IF RETCOD15^=0 THEN                                         02S0097
         LTR   RETCOD15,RETCOD15                                02S0097
         BZ    @RF00097                                         02S0097
*     DO;                                                       02S0098
*                                                               02S0098
*       /*************************************************************/
*       /*                                                           */
*       /* CALLER WAS NOT IN SUPERVISOR STATE. ENSURE HIS VALIDITY   */
*       /* VIA TESTAUTH, CHECKING FOR APF OR PROTECT KEY 0-7         */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0099
*       GENERATE;                                               02S0099
         TESTAUTH FCTN=1,KEY=YES,RBLEVEL=1    IS CALLER PK 0-7, OR APF
*       IF RETCOD15^=0 THEN                                     02S0100
         LTR   RETCOD15,RETCOD15                                02S0100
         BZ    @RF00100                                         02S0100
*         DO;                                                   02S0101
*                                                               02S0101
*           /*********************************************************/
*           /*                                                       */
*           /* CALLER IS NOT VALID. ABEND HIM WITH PROPER INDICATOR  */
*           /* IN REGISTER 15                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0102
*           RFY                                                 02S0102
*             ABNDCODE RSTD;                                    02S0102
*           ABNDCODE=NOTAUTH;       /* SET NOT-AUTHORIZED CODE       */
         SLR   ABNDCODE,ABNDCODE                                02S0103
*           DO;                     /* ABEND(SETCMPCD) DUMP SYSTEM   */
*             RESPECIFY                                         02S0105
*              (GPR01F) RESTRICTED;                             02S0105
*             GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP CODE IN
*                                      BITS 8-19                     */
         L     GPR01F,@CF02503                                  02S0106
*             GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG   */
         O     GPR01F,@CF02273                                  02S0107
*             SVC(13);              /* ISSUE ABEND SVC               */
         SVC   13                                               02S0108
*             RESPECIFY                                         02S0109
*              (GPR01F) UNRESTRICTED;                           02S0109
*           END;                    /* ABEND(SETCMPCD) DUMP SYSTEM   */
*           RFY                                                 02S0111
*             ABNDCODE UNRSTD;                                  02S0111
*         END;                                                  02S0112
*                                                               02S0112
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUER IS VALID BUT NOT IN SUPERVISOR STATE. SET FLAG TO  */
*       /* INDICATE THAT STATE MUST BE CHANGED ON EXIT, AND CHANGE TO*/
*       /* SUPERVISOR STATE                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0113
*       PROBSTAT='1'B;              /* INDICATE CALLER WAS IN PROBLEM
*                                      STATE                         */
@RF00100 OI    PROBSTAT,B'10000000'                             02S0113
*       DO;                         /* MODESET MODE(SUP)             */
*         I10701='00000000'B;       /* OR MASK                       */
         MVI   I10701,B'00000000'                               02S0115
*         I10702='00000000'B;       /* AND MASK                      */
         MVI   I10702,B'00000000'                               02S0116
*         I10703='00000000'B;       /* RESERVED                      */
         MVI   I10703,B'00000000'                               02S0117
*         I10704='00001100'B;                                   02S0118
         MVI   I10704,B'00001100'                               02S0118
*         RESPECIFY                                             02S0119
*           GPR01F RESTRICTED;                                  02S0119
*         GPR01F=I107;              /* MODESET PARMLIST              */
         L     GPR01F,I107                                      02S0120
*         SVC(107);                 /* ISSUE MODESET SVC             */
         SVC   107                                              02S0121
*         RESPECIFY                                             02S0122
*          (GPR01F) UNRESTRICTED;                               02S0122
*       END;                        /* MODESET MODE(SUP) CHANGE TO
*                                      SUPR SATE                     */
*     END;                          /* END OF NON-SUPERVISOR STATE
*                                      PATH                          */
*                                                               02S0124
*   /*****************************************************************/
*   /*                                                               */
*   /* SUPERVISOR STATE IS ASSURED. CHANGE PROTECT KEY TO ZERO AND   */
*   /* SAVE CALLERS PROTECT KEY FOR LATER RESTORATION.               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0125
*   RFY                                                         02S0125
*     TEMPREG RSTD;                                             02S0125
@RF00097 DS    0H                                               02S0126
*   DO;                             /* MODESET SAVEKEY(HISKEY)  02S0126
*                                      EXTKEY(ZERO) WORKREG(TEMPREG) */
*     RESPECIFY                                                 02S0127
*      (GPR02F) RESTRICTED;                                     02S0127
*     TEMPREG=GPR02F;               /* SAVE REGISTER 2               */
         LR    TEMPREG,GPR02F                                   02S0128
*     IPK;                          /* SAVE CURRENT PSW KEY          */
         IPK                                                    02S0129
*     SPKA(0);                      /* SET PSW KEY                   */
         SLR   @14,@14                                          02S0130
         SPKA  0(@14)                                           02S0130
*     HISKEY=GPR02F;                                            02S0131
         LR    HISKEY,GPR02F                                    02S0131
*     GPR02F=TEMPREG;               /* RESTORE REGISTER 2            */
         LR    GPR02F,TEMPREG                                   02S0132
*     RESPECIFY                                                 02S0133
*      (GPR02F) UNRESTRICTED;                                   02S0133
*   END;                            /* MODESET SAVEKEY(HISKEY)  02S0134
*                                      EXTKEY(ZERO) WORKREG(TEMPREG) */
*   RFY                                                         02S0135
*     TEMPREG UNRSTD;                                           02S0135
*                                                               02S0136
*   /*****************************************************************/
*   /*                                                               */
*   /* COMPLETE THE INITIALIZATION BY ESTABLISHING ESTAE, ENQING FOR */
*   /* SERIALIZATION, THEN CHECKING BIT MCHTERM TO SEE IF THE MC     */
*   /* ROUTING FACILITY WAS TERMINATED BY MODULE AHLMCER. IF SO,     */
*   /* TERMINATION PHASE PROCESSING MUST BE ACCOMPLISHED BEFORE      */
*   /* SERVICING THIS REQUEST.                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0136
*   GENERATE;                                                   02S0136
*                                                          /*@YM03654*/
    MVC ESTAELST(16),ESTAE2                                  ZM40016
          ESTAE AHLSETES,CT,PARAM=(9),MF=(E,ESTAELST)        @YM03654
*   IF RETCOD15^=0 THEN             /*                       @YM03654*/
         LTR   RETCOD15,RETCOD15                                02S0137
         BZ    @RF00137                                         02S0137
*     DO;                           /* NONZERO R15 INDICATES    02S0138
*                                      UNSUCCESSFUL ESTAE    @YM03654*/
*       RTRNCODE=BADESTAE;          /* SET THE PROPER RETURN CODE IN
*                                      TEMPORARY AREA        @YM03654*/
         MVC   RTRNCODE(4),@CF00106                             02S0139
*       GO TO AHLXIT2;              /*                       @YM03654*/
         B     AHLXIT2                                          02S0140
*     END;                          /* END OF BAD ESTAE PATH @YM03654*/
*   DO;                             /* ENQ (SETQNM,SETRNM,E,,SYSTEMS)*/
@RF00137 DS    0H                                               02S0143
*     RESPECIFY                                                 02S0143
*      (GPR01P) RESTRICTED;                                     02S0143
*     I056(1:20)=I056(1:20)&&I056(1:20);/* ZERO OUT THE TABLE        */
         XC    I056(20),I056                                    02S0144
*     I05604(1)=LENGTH(SETRNM);     /* LENGTH OF MINOR RESOURCE NAME */
         MVI   I05604,X'03'                                     02S0145
*     I05606(1)=ADDR(SETQNM);       /* ADDRESS OF MAJOR RESOURCE NAME*/
         LA    @06,@CC00164                                     02S0146
         ST    @06,I05606                                       02S0146
*     I05607(1)=ADDR(SETRNM);       /* ADDRESS OF MINOR RESOURCE NAME*/
         LA    @06,@CC00166                                     02S0147
         ST    @06,I05607                                       02S0147
*     I05603(1)='01000000'B;        /* SET BIT STRING 1 FOR RESOURCE
*                                      ELEMENT                       */
         MVI   I05603,B'01000000'                               02S0148
*     I05605(1)='01001000'B;        /* SET BIT STRING 2 FOR RESOURCE
*                                      ELEMENT                       */
         MVI   I05605,B'01001000'                               02S0149
*     I05603(1,1)='1'B;             /* SET END OF LIST BIT           */
         OI    I05603,B'10000000'                               02S0150
*     GPR01P=ADDR(I05602);          /* LOAD LIST ADDRESS             */
         LA    GPR01P,I05602                                    02S0151
*     SVC(56);                      /* ISSUE ENQ SVC                 */
         SVC   56                                               02S0152
*     RESPECIFY                                                 02S0153
*      (GPR01P) UNRESTRICTED;                                   02S0153
*   END;                            /* ENQ (SETQNM,SETRNM,E,,SYSTEMS)*/
*   IF MCHTERM='1'B THEN                                        02S0155
         L     @06,MCHEADPT                                     02S0155
         TM    MCHTERM(@06),B'01000000'                         02S0155
         BNO   @RF00155                                         02S0155
*     DO;                           /* MCHTERM SET TO ONE INDICATES
*                                      AHLMCER HAS TERMINATED THE MC
*                                      ROUTING FACILITY              */
*                                                               03S0157
*       /*************************************************************/
*       /*                                                           */
*       /* MODULE AHLMCER HAS TERMINATED THE MC ROUTING FACILITY. THE*/
*       /* FOLLOWING CODE SETS UP AND SCHEDULES THE SRB IN THE       */
*       /* CURRENT MCCE, POSTING ALL APPLICATIONS TO TERMINATE.      */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0157
*       MCHTERM='0'B;               /* TURN OFF TERMINATION INDICATOR*/
         NI    MCHTERM(@06),B'10111111'                         03S0157
*       RFY                                                     03S0158
*         MCCE BASED(MCHCUR);                                   03S0158
*       RFY                                                     03S0159
*         SRBPTR RSTD;                                          03S0159
*                                                               03S0159
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP THE SRB IN THE CURRENT MCCE TO SCHEDULE ROUTINE    */
*       /* AHLMCPST TO POST ALL APPLICATIONS TO TERMINATE            */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0160
*       SRBPTR=ADDR(MCCESRB);       /* POINT TO CORRECT SRB          */
         L     @06,MCHCUR(,@06)                                 03S0160
         LA    SRBPTR,MCCESRB(,@06)                             03S0160
*       SRBEP=ADDR(AHLMCPST);       /* CHANGE EP TO CORRECT ROUTINE  */
         LA    @00,AHLMCPST                                     03S0161
         ST    @00,SRBEP(,SRBPTR)                               03S0161
*       SRBASCB=PSAAOLD;            /* HAVE IT RUN IN THIS MEMORY    */
         L     @00,PSAAOLD                                      03S0162
         ST    @00,SRBASCB(,SRBPTR)                             03S0162
*       RFY                                                     03S0163
*         SRBPTR UNRSTD;                                        03S0163
*       MCCEPTR=MCHCUR;             /* POINT TO MCCE TO BE REPLACED  */
         ST    @06,MCCEPTR                                      03S0164
*       NEWMCCE=0;                  /* NEWW MCCE ADDRESS TO BE USED
*                                      IS ZERO                       */
         SLR   @06,@06                                          03S0165
         ST    @06,NEWMCCE                                      03S0165
*       CALL CSDMCCE;               /* CALL SUBROUTINE TO SWAP ZERO
*                                      IN FOR MCCE ADDRESS, AND 03S0166
*                                      SCHEDULE SRB                  */
         BAL   @14,CSDMCCE                                      03S0166
*       RFY                                                     03S0167
*         MCCE BASED(MCCEPTR);                                  03S0167
*       DO;                         /* WAIT ECB(MCCEECB)             */
*         RESPECIFY                                             03S0169
*          (GPR00P,                                             03S0169
*           GPR01P) RESTRICTED;                                 03S0169
*         GPR00P=1;                 /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                         03S0170
*         GPR01P=ADDR(MCCEECB);     /* ADDRESS OF ECB                */
         L     GPR01P,MCCEPTR                                   03S0171
         LA    GPR01P,MCCEECB(,GPR01P)                          03S0171
*         SVC(1);                   /* WAIT SVC                      */
         SVC   1                                                03S0172
*         RESPECIFY                                             03S0173
*          (GPR00P,                                             03S0173
*           GPR01P) UNRESTRICTED;                               03S0173
*       END;                        /* WAIT ECB(MCCEECB) WAIT FOR SRB
*                                      ROUTINE AHLMCPST TO POST ECB
*                                      IN MCCE TO SIGNAL THAT IT IS
*                                      DONE.                         */
*                                                               03S0174
*       /*************************************************************/
*       /*                                                           */
*       /* FINISH CLEANING UP BY FREEING THE MCCE, PGFREEING MODULE  */
*       /* AHLSETD, AND CLEARING THE CONTROL REGISTER MASK. AFTER    */
*       /* THIS IS DONE, THE REQUESTED FUNCTION CAN BE SERVICED      */
*       /*                                                           */
*       /*************************************************************/
*                                                               03S0175
*       DO;                         /* FREEMAIN (E) LV(LENGTH(MCCE))
*                                      A(MCCEPTR) SP(SQA)            */
*         RESPECIFY                                             03S0176
*          (GPR01P) RESTRICTED;                                 03S0176
*         I005=I005&&I005;          /* INIT LIST                     */
         XC    I005(10),I005                                    03S0177
*         I00505='00'X;             /* SET TYPE                      */
         MVI   I00505,X'00'                                     03S0178
*         I00502=LENGTH(MCCE);      /* LENGTH                        */
         MVC   I00502(3),@CF02504+1                             03S0179
*         I00504=ADDR(MCCEPTR);     /* ADDR OF ADDR LIST             */
         LA    @06,MCCEPTR                                      03S0180
         STCM  @06,7,I00504                                     03S0180
*         I00506=SQA;               /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                     03S0181
*         GPR01P=ADDR(I005);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                      03S0182
*         SVC(5);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                03S0183
*         RESPECIFY                                             03S0184
*          (GPR01P) UNRESTRICTED;                               03S0184
*       END;                        /* FREEMAIN (E) LV(LENGTH(MCCE))
*                                      A(MCCEPTR) SP(SQA) FREE THE
*                                      MCCE SINCE ALL ARE DONE WITH
*                                      IT                            */
*       DO;                         /* PGFREE(R) A(SETDPTR)          */
*         RESPECIFY                                             03S0187
*          (GPR00P,                                             03S0187
*           GPR01P) RESTRICTED;                                 03S0187
*         GPR00P=0;                 /* INDICATE NO PAGE ECB          */
         SLR   GPR00P,GPR00P                                    03S0188
*         GPR01P=ADDR(SETDPTR);     /* PAGE ADDR                     */
         L     @06,MCHEADPT                                     03S0189
         L     @06,MCHSETD(,@06)                                03S0189
         LR    GPR01P,@06                                       03S0189
*         RESPECIFY                                             03S0190
*           GPR15P RESTRICTED;                                  03S0190
*         GPR15P=ADDR(SETDPTR)+1;   /* VSL ADDR OMITTED              */
         AL    @06,@CF00145                                     03S0191
         LR    GPR15P,@06                                       03S0191
*         GPR01P=GPR01P×'20000000'X;/* R, PGFREE & RELEASE FLAG      */
         O     GPR01P,@CF02311                                  03S0192
*         SVC(113);                 /* ISSUE PGFREE SVC              */
         SVC   113                                              03S0193
*         RESPECIFY                                             03S0194
*          (GPR00P,                                             03S0194
*           GPR01P,                                             03S0194
*           GPR15P) UNRESTRICTED;                               03S0194
*       END;                        /* PGFREE(R) A(SETDPTR) FREE
*                                      AHLSETD PAGE SINCE IT IS NO
*                                      LONGER REQUIRED TO BE FIXED   */
*       MCHCTL=0;                   /* SET THE CONTROL REGISTER MASK
*                                      TO ZERO                       */
         L     @06,MCHEADPT                                     03S0196
         SLR   @15,@15                                          03S0196
         ST    @15,MCHCTL(,@06)                                 03S0196
*       CALL CR8SET;                /* SET THE CONTROL REGISTER ON
*                                      ALL CPUS                      */
         BAL   @14,CR8SET                                       03S0197
*     END;                                                      02S0198
*                                                               01S0199
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERROGATE THE PARAMETER LIST TO DETERMINE THE REQUESTED     */
*   /* FUNCTION. ONCE A FUCTION SPECIFICATION HAS BEEN DETERMINED AND*/
*   /* PROCESSED, CONTROL IS PASSED TO THE EXIT ROUTINE AND NO OTHER */
*   /* BITS ARE CHECKED, EXCEPT THAT THE ACTIVATE FLAG IS CHECKED FOR*/
*   /* AFTER ADD HAS BEEN SUCCESSFULLY PERFORMED.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0199
*   IF ADD='1'B THEN                                            01S0199
@RF00155 L     @06,PLISTAD                                      01S0199
         TM    ADD(@06),B'10000000'                             01S0199
         BNO   @RF00199                                         01S0199
*     DO;                                                       01S0200
*                                                               02S0201
*       /*************************************************************/
*       /*                                                           */
*       /* ADD FUNCTION HAS BEEN SPECIFIED. THE FOLLOWING CODE       */
*       /* OBTAINS AND INTIALIZES THE EVENT AND CLASS ELEMENTS (MCEES*/
*       /* AND MCCLES) TO REPRESENT THE EIDS AND CLASSES IN THE      */
*       /* PARAMETER LIST. THESE MCEES/MCCLES CONTAIN THE EID/CLASS, */
*       /* AND THE ROUTINE ADDRESS TO RECEIVE CONTROL ON THAT EVENT. */
*       /* FIRST, THE MCQE MUST BE FOUND.                            */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0201
*       CALL GETMCQE;               /* CALL GETMCQE TO FIND OR OBTAIN
*                                      THE MCQE FOR THIS APPLICATION.*/
         BAL   @14,GETMCQE                                      02S0201
*       RFY                                                     02S0202
*         MCQE BASED(MCQEPTR);                                  02S0202
*       IF RTRNCODE=0 THEN                                      02S0203
         SLR   @06,@06                                          02S0203
         C     @06,RTRNCODE                                     02S0203
         BNE   @RF00203                                         02S0203
*         DO;                       /* THE RETURN CODE WILL HAVE
*                                      REMAINED ZERO IF GETMCQE DID
*                                      NOT ENCOUNTER ANY PROBLEMS.
*                                      OTHERWISE, CONTROL WILL BE
*                                      GIVEN TO THE EXIT ROUTINE     */
*           IF EVENTNUM=0 THEN                                  02S0205
         L     @01,PLISTAD                                      02S0205
         ICM   @15,12,EVENTNUM(@01)                             02S0205
         SRA   @15,16                                           02S0205
         CR    @06,@15                                          02S0205
         BNE   @RF00205                                         02S0205
*             DO;                   /* IF THERE ARE NO EVENTS OR
*                                      CLASSES GIVEN, THIS IS AN
*                                      INVALID SETEVENT CALL         */
*               RFY                                             02S0207
*                 ABNDCODE RSTD;                                02S0207
*               ABNDCODE=BADOPT;    /* SET ABEND INDICATOR           */
         LA    ABNDCODE,4                                       02S0208
*               DO;                 /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                 RESPECIFY                                     02S0210
*                  (GPR01F) RESTRICTED;                         02S0210
*                 GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP CODE
*                                      IN BITS 8-19                  */
         L     GPR01F,@CF02503                                  02S0211
*                 GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS
*                                      FLAG                          */
         O     GPR01F,@CF02273                                  02S0212
*                 SVC(13);          /* ISSUE ABEND SVC               */
         SVC   13                                               02S0213
*                 RESPECIFY                                     02S0214
*                  (GPR01F) UNRESTRICTED;                       02S0214
*               END;                /* ABEND(SETCMPCD) DUMP SYSTEM   */
*               RFY                                             02S0216
*                 ABNDCODE UNRSTD;                              02S0216
*             END;                                              02S0217
*                                                               02S0218
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS THE SPECIFIED EIDS IN THE EID LIST PASSED BY  */
*           /* THE CALLER.                                           */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0218
*           LISTELM=EIDLSTAD;       /* INITIALIZE TO THE FIRST ENTRY
*                                      IN THE EID LIST               */
@RF00205 L     @06,PLISTAD                                      02S0218
         ICM   LISTELM,15,EIDLSTAD(@06)                         02S0218
*           TMPCNT=EIDNUM;          /* PICK UP THE NUMBER OF EIDS IN
*                                      THE LIST                      */
         SLR   TMPCNT,TMPCNT                                    02S0219
         IC    TMPCNT,EIDNUM(,@06)                              02S0219
*           DO WHILE(TMPCNT^=0);    /* PERFORM THE FOLLOWING FOR EACH
*                                      ENTRY IN THE EID LIST         */
         B     @DE00220                                         02S0220
@DL00220 DS    0H                                               02S0221
*             ELEMAD=MCQEMCEE;      /* PICK UP FIRST MCEE ADDRESS    */
         L     @06,MCQEMCEE(,MCQEPTR)                           02S0221
         ST    @06,ELEMAD                                       02S0221
*             LASTELM=0;            /* INDICATE THAT THIS IS FIRST
*                                      ONE ON CHAIN                  */
*                                                               02S0222
         SLR   LASTELM,LASTELM                                  02S0222
*             /*******************************************************/
*             /*                                                     */
*             /* LOOP THRU THE MCEE CHAIN, CHECKING FOR AN EID THAT  */
*             /* MATCHES THE EID IN THE EIDLIST ENTRY UNDER          */
*             /* CONSIDERATION. IF A MATCHING EID IS FOUND, IT IS    */
*             /* IQNORED. THIS LOOP CONTINUES UNTIL THE END OF THE   */
*             /* MCEE CHAIN IS REACHED, INDICATED BY A ZERO LINK     */
*             /* FIELD.                                              */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0223
*             DO WHILE(ELEMAD^=0);  /* LOOP UNTIL END OF CHAIN       */
         B     @DE00223                                         02S0223
@DL00223 DS    0H                                               02S0224
*               RFY                                             02S0224
*                (MCEE,                                         02S0224
*                 MCCLE) BASED(ELEMAD);                         02S0224
*               IF MCEEEID=PLISTEID THEN                        02S0225
         L     @06,ELEMAD                                       02S0225
         CLC   MCEEEID(2,@06),PLISTEID(LISTELM)                 02S0225
         BE    @RT00225                                         02S0225
*                 GO TO AHLADD01;   /* GO PROCESS NEXT EIDLIST ENTRY
*                                      IF THIS EID IS ALREADY DEFINED
*                                      TO MCQE                       */
*               LASTELM=ELEMAD;     /* THIS MCEE NOW BECOMES PRIOR   */
         LR    LASTELM,@06                                      02S0227
*               ELEMAD=MCEEMCQL;    /* UPDATE POINTER TO THE NEXT
*                                      MCEE                          */
         L     @06,MCEEMCQL(,@06)                               02S0228
         ST    @06,ELEMAD                                       02S0228
*             END;                                              02S0229
*                                                               02S0229
@DE00223 L     @06,ELEMAD                                       02S0229
         LTR   @06,@06                                          02S0229
         BNZ   @DL00223                                         02S0229
*             /*******************************************************/
*             /*                                                     */
*             /* FALL THROUGH TO THE FOLLOWING CODE INDICATES THAT   */
*             /* THE EID IS NOT DEFINED IN THE PRESENT MCEE CHAIN. A */
*             /* NEW MCEE IS OBTAINED, INITIALIZED, AND ENTERED ON   */
*             /* THE CHAIN.                                          */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0230
*             DO;                   /* GETMAIN (EC) LV(LENGTH(MCEE))
*                                      A(GETMADDR) SP(SQA)           */
*               RESPECIFY                                       02S0231
*                (GPR01P) RESTRICTED;                           02S0231
*               I004=I004&&I004;    /* INIT LIST                     */
         XC    I004(10),I004                                    02S0232
*               I00404='20'X;       /* TYPE                          */
         MVI   I00404,X'20'                                     02S0233
*               I00401=LENGTH(MCEE);/* LENGTH                        */
         MVC   I00401(4),@CF00106                               02S0234
*               I00403=ADDR(GETMADDR);/* ADDR OF ADDR LIST           */
         LA    @06,GETMADDR                                     02S0235
         STCM  @06,7,I00403                                     02S0235
*               I00405=SQA;         /* SUBPOOL VALUE                 */
         MVI   I00405,X'F5'                                     02S0236
*               GPR01P=ADDR(I004);  /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                      02S0237
*               SVC(4);             /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                02S0238
*               RESPECIFY                                       02S0239
*                (GPR01P) UNRESTRICTED;                         02S0239
*             END;                  /* GETMAIN (EC) LV(LENGTH(MCEE))
*                                      A(GETMADDR) SP(SQA)           */
*             IF RETCOD15^=0 THEN                               02S0241
         LTR   RETCOD15,RETCOD15                                02S0241
         BZ    @RF00241                                         02S0241
*               DO;                 /* IF SQA IS FULL, INDICATE THE
*                                      INSUFFICIENT STORAGE CONDITION
*                                      AND PASS CONTROL TO THE EXIT
*                                      CODE                          */
*                 RTRNCODE=INSUFSTG;/* SET PROPER RETURN CODE        */
         MVC   RTRNCODE(4),@CF00101                             02S0243
*                 GO TO AHLEXIT;    /* EXIT FFROM AHLSETEV           */
         B     AHLEXIT                                          02S0244
*               END;                                            02S0245
*                                                               02S0245
*             /*******************************************************/
*             /*                                                     */
*             /* NEW MCEE HAS BEEN OBTAINED - INITIALIZE AND PLACE ON*/
*             /* CHAIN                                               */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0246
*             ELEMAD=GETMADDR;      /* POINT TO GOTTEN STORAGE       */
@RF00241 L     @06,GETMADDR                                     02S0246
         ST    @06,ELEMAD                                       02S0246
*             MCEEIDEN=MCEETAG;     /* PLACE TABLE IDENTIFIER IN
*                                      TABLE                         */
         MVC   MCEEIDEN(8,@06),@CC00174                         02S0247
*             MCEEFLGS=0;           /* CLEAR THE FLAGS AND EID FIELDS*/
         SLR   @15,@15                                          02S0248
         ST    @15,MCEEFLGS(,@06)                               02S0248
*             MCEEEID=PLISTEID;     /* MOVE EID FROM PLIST ENTRY INTO
*                                      NEW MCEE                      */
         MVC   MCEEEID(2,@06),PLISTEID(LISTELM)                 02S0249
*             MCEERTN=ELISTRTN;     /* MOVE ROUTINE ADDRESS FROM
*                                      PLIST ENTRY INTO MCEE         */
         MVC   MCEERTN(4,@06),ELISTRTN(LISTELM)                 02S0250
*             MCEEMCQE=MCQEPTR;     /* PLACE CORRESPONDING MCQE ADDR
*                                      INTO MCEE                     */
         ST    MCQEPTR,MCEEMCQE(,@06)                           02S0251
*             MCEEEIDL=0;           /* INDICATE THIS IS END OF CHAIN
*                                      FROM MCED                     */
         ST    @15,MCEEEIDL(,@06)                               02S0252
*             MCEEMCQL=0;           /* INDICATE THIS IS LAST IN CHAIN
*                                      FROM MCQE                     */
         ST    @15,MCEEMCQL(,@06)                               02S0253
*             IF LASTELM=0 THEN                                 02S0254
         CR    LASTELM,@15                                      02S0254
         BNE   @RF00254                                         02S0254
*               MCQEMCEE=ELEMAD;    /* IF THIS IS FIRST MCEE, STORE
*                                      ITS ADDR INTO MCQE            */
         ST    @06,MCQEMCEE(,MCQEPTR)                           02S0255
*             ELSE                                              02S0256
*               LASTELM->MCEEMCQL=ELEMAD;/* IF NOT THE FIRST ONE,
*                                      PLACE ITS ADDRESS IN LINK
*                                      FIELD OF THE PRIOR LAST ONE   */
*                                                               02S0256
         B     @RC00254                                         02S0256
@RF00254 L     @06,ELEMAD                                       02S0256
         ST    @06,MCEEMCQL(,LASTELM)                           02S0256
*             /*******************************************************/
*             /*                                                     */
*             /* UPDATE TO NEXT ENTRY IN EIDLIST                     */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0257
*AHLADD01:                                                      02S0257
*             LISTELM=LISTELM+LENGTH(EIDLIST);/* POINT TO NEXT ENTRY
*                                      IN EID LIST                   */
@RC00254 DS    0H                                               02S0257
AHLADD01 AL    LISTELM,@CF00250                                 02S0257
*             TMPCNT=TMPCNT-1;      /* DECREMENT COUNT BY THE ONE WE
*                                      JUST PROCESSED                */
         BCTR  TMPCNT,0                                         02S0258
*           END;                    /* END OF LOOP WHICH PROCESSES
*                                      EID LIST                      */
@DE00220 LTR   TMPCNT,TMPCNT                                    02S0259
         BNZ   @DL00220                                         02S0259
*                                                               02S0260
*           /*********************************************************/
*           /*                                                       */
*           /* PROCESS THE SPECIFIED CLASSES IN THE CLASS LIST PASSED*/
*           /* BY THE CALLER.                                        */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0260
*           LISTELM=CLSLSTAD;       /* INITIALIZE TO THE FIRST ENTRY
*                                      IN THE CLASS LIST             */
         L     @06,PLISTAD                                      02S0260
         ICM   LISTELM,15,CLSLSTAD(@06)                         02S0260
*           TMPCNT=CLSNUM;          /* PICK UP THE NUMBER OF CLASSES
*                                      IN THE LIST                   */
         SLR   TMPCNT,TMPCNT                                    02S0261
         IC    TMPCNT,CLSNUM(,@06)                              02S0261
*           DO WHILE(TMPCNT^=0);    /* PERFORM THE FOLLOWING FOR EACH
*                                      ENTRY IN THE CLASS LIST       */
         B     @DE00262                                         02S0262
@DL00262 DS    0H                                               02S0263
*             ELEMAD=MCQEMCCL;      /* PICK UP FIRST MCCLE ADDRESS   */
         L     @06,MCQEMCCL(,MCQEPTR)                           02S0263
         ST    @06,ELEMAD                                       02S0263
*             LASTELM=0;            /* INDICATE THAT THIS IS FIRST
*                                      ONE ON CHAIN                  */
*                                                               02S0264
         SLR   LASTELM,LASTELM                                  02S0264
*             /*******************************************************/
*             /*                                                     */
*             /* LOOP THRU THE MCCLE CHAIN, CHECKING FOR A CLASS THAT*/
*             /* MATCHES THE CLASS IN THE CLSLIST ENTRY UNDER        */
*             /* CONSIDERATION. IF A MATCHING CLASS IS FOUND, IT IS  */
*             /* IQNORED. THIS LOOP CONTINUES UNTIL THE END OF THE   */
*             /* MCCLE CHAIN IS REACHED, INDICATED BY A ZERO LINK    */
*             /* FIELD.                                              */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0265
*             DO WHILE(ELEMAD^=0);  /* LOOP UNTIL END OF CHAIN       */
         B     @DE00265                                         02S0265
@DL00265 DS    0H                                               02S0266
*               IF MCCLCLAS=PLISTCLS THEN                       02S0266
         L     @06,ELEMAD                                       02S0266
         CLC   MCCLCLAS(2,@06),PLISTCLS(LISTELM)                02S0266
         BE    @RT00266                                         02S0266
*                 GO TO AHLADD02;   /* GO PROCESS NEXT CLASS LIST
*                                      ENTRY IF THIS CLASS IS ALREADY
*                                      DEFINED TO MCQE               */
*               LASTELM=ELEMAD;     /* THIS MCCLE NOW BECOMES PRIOR  */
         LR    LASTELM,@06                                      02S0268
*               ELEMAD=MCCLMCQL;    /* UPDATE POINTER TO THE NEXT
*                                      MCCLE                         */
         L     @06,MCCLMCQL(,@06)                               02S0269
         ST    @06,ELEMAD                                       02S0269
*             END;                                              02S0270
*                                                               02S0270
@DE00265 L     @06,ELEMAD                                       02S0270
         LTR   @06,@06                                          02S0270
         BNZ   @DL00265                                         02S0270
*             /*******************************************************/
*             /*                                                     */
*             /* FALL THROUGH TO THE FOLLOWING CODE INDICATES THAT   */
*             /* THE CLASS IS NOT DEFINED IN THE PRESENT MCCLE CHAIN.*/
*             /* A NEW MCCLE IS OBTAINED, INITIALIZED, AND ENTERED ON*/
*             /* THE CHAIN.                                          */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0271
*             DO;                   /* GETMAIN (EC) LV(LENGTH(MCCLE))
*                                      A(GETMADDR) SP(SQA)           */
*               RESPECIFY                                       02S0272
*                (GPR01P) RESTRICTED;                           02S0272
*               I004=I004&&I004;    /* INIT LIST                     */
         XC    I004(10),I004                                    02S0273
*               I00404='20'X;       /* TYPE                          */
         MVI   I00404,X'20'                                     02S0274
*               I00401=LENGTH(MCCLE);/* LENGTH                       */
         MVC   I00401(4),@CF00106                               02S0275
*               I00403=ADDR(GETMADDR);/* ADDR OF ADDR LIST           */
         LA    @06,GETMADDR                                     02S0276
         STCM  @06,7,I00403                                     02S0276
*               I00405=SQA;         /* SUBPOOL VALUE                 */
         MVI   I00405,X'F5'                                     02S0277
*               GPR01P=ADDR(I004);  /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                      02S0278
*               SVC(4);             /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                02S0279
*               RESPECIFY                                       02S0280
*                (GPR01P) UNRESTRICTED;                         02S0280
*             END;                  /* GETMAIN (EC) LV(LENGTH(MCCLE))
*                                      A(GETMADDR) SP(SQA)           */
*             IF RETCOD15^=0 THEN                               02S0282
         LTR   RETCOD15,RETCOD15                                02S0282
         BZ    @RF00282                                         02S0282
*               DO;                 /* IF SQA IS FULL, INDICATE THE
*                                      INSUFFICIENT STORAGE CONDITION
*                                      AND PASS CONTROL TO THE EXIT
*                                      CODE                          */
*                 RTRNCODE=INSUFSTG;/* SET PROPER RETURN CODE        */
         MVC   RTRNCODE(4),@CF00101                             02S0284
*                 GO TO AHLEXIT;    /* EXIT FOR AHLSETEV             */
         B     AHLEXIT                                          02S0285
*               END;                                            02S0286
*                                                               02S0286
*             /*******************************************************/
*             /*                                                     */
*             /* NEW MCCLE HAS BEEN OBTAINED - INITIALIZE AND PLACE  */
*             /* ON CHAIN                                            */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0287
*             ELEMAD=GETMADDR;      /* POINT TO GOTTEN STORAGE       */
@RF00282 L     @06,GETMADDR                                     02S0287
         ST    @06,ELEMAD                                       02S0287
*             MCCLIDEN=MCCLETAG;    /* PLACE TABLE IDENTIFIER IN
*                                      TABLE                         */
         MVC   MCCLIDEN(8,@06),@CC00176                         02S0288
*             MCCLFLGS=0;           /* CLEAR THE FLAGS AND CLASS
*                                      FIELDS                        */
         SLR   @15,@15                                          02S0289
         ST    @15,MCCLFLGS(,@06)                               02S0289
*             MVZ(MCCLCLS2,PLSTCLS2);/* MOVE CLASS ONLY (HI ORDER 4
*                                      BITS) INTO MCCLE              */
         MVZ   MCCLCLS2(1,@06),PLSTCLS2(LISTELM)                02S0290
*             MCCLRTN=CLISTRTN;     /* MOVE ROUTINE ADDRESS FROM
*                                      PLIST ENTRY INTO MCCLE        */
         MVC   MCCLRTN(4,@06),CLISTRTN(LISTELM)                 02S0291
*             MCCLMCQE=MCQEPTR;     /* PLACE CORRESPONDING MCQE ADDR
*                                      INTO MCCLE                    */
         ST    MCQEPTR,MCCLMCQE(,@06)                           02S0292
*             MCCLEIDL=0;           /* INDICATE THIS IS END OF CHAIN
*                                      FROM MCCD                     */
         ST    @15,MCCLEIDL(,@06)                               02S0293
*             MCCLMCQL=0;           /* INDICATE THIS IS LAST IN CHAIN
*                                      FROM MCQE                     */
         ST    @15,MCCLMCQL(,@06)                               02S0294
*             IF LASTELM=0 THEN                                 02S0295
         CR    LASTELM,@15                                      02S0295
         BNE   @RF00295                                         02S0295
*               MCQEMCCL=ELEMAD;    /* IF THIS IS FIRST MCCLE, STORE
*                                      ITS ADDR INTO MCQE            */
         ST    @06,MCQEMCCL(,MCQEPTR)                           02S0296
*             ELSE                                              02S0297
*               LASTELM->MCCLMCQL=ELEMAD;/* IF NOT THE FIRST ONE,
*                                      PLACE ITS ADDRESS IN LINK
*                                      FIELD OF THE PRIOR LAST ONE   */
*                                                               02S0297
         B     @RC00295                                         02S0297
@RF00295 L     @06,ELEMAD                                       02S0297
         ST    @06,MCCLMCQL(,LASTELM)                           02S0297
*             /*******************************************************/
*             /*                                                     */
*             /* UPDATE TO NEXT ENTRY IN CLASS LIST                  */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0298
*AHLADD02:                                                      02S0298
*             LISTELM=LISTELM+LENGTH(CLSLIST);/* POINT TO NEXT ENTRY
*                                      IN EID LIST                   */
@RC00295 DS    0H                                               02S0298
AHLADD02 AL    LISTELM,@CF00250                                 02S0298
*             TMPCNT=TMPCNT-1;      /* DECREMENT COUNT BY THE ONE WE
*                                      JUST PROCESSED                */
         BCTR  TMPCNT,0                                         02S0299
*           END;                    /* END OF LOOP WHICH PROCESSES
*                                      CLASS LIST                    */
@DE00262 LTR   TMPCNT,TMPCNT                                    02S0300
         BNZ   @DL00262                                         02S0300
*         END;                      /* END OF ZERO RETURN CODE PATH. */
*       ELSE                                                    02S0302
*         GO TO AHLEXIT;            /* IF RETURN CODE FROM GETMCQE IS
*                                      BAD, PASS IT ON TO CALLER     */
*     END;                                                      01S0303
*   IF ACTIVATE='1'B THEN                                       01S0304
@RF00199 L     @06,PLISTAD                                      01S0304
         TM    ACTIVATE(@06),B'01000000'                        01S0304
         BNO   @RF00304                                         01S0304
*     DO;                                                       01S0305
*                                                               02S0306
*       /*************************************************************/
*       /*                                                           */
*       /* ACTIVATE FUNCTION HAS BEEN REQUESTED. THE CALLERS MCQE IS */
*       /* TO BE ACTIVATED BY INSERTING ALL MCEES AND MCCLES INTO THE*/
*       /* ROUTING TABLES, AND ENSURING THAT MC ROUTING IS ACTIVE    */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0306
*       RFY                                                     02S0306
*         MCCE BASED(MCHCUR);                                   02S0306
*       IF MCHCUR=0×MCCEQEA=0 THEN                              02S0307
         SLR   @06,@06                                          02S0307
         L     @04,MCHEADPT                                     02S0307
         L     @04,MCHCUR(,@04)                                 02S0307
         CR    @04,@06                                          02S0307
         BE    @RT00307                                         02S0307
         C     @06,MCCEQEA(,@04)                                02S0307
         BNE   @RF00307                                         02S0307
@RT00307 DS    0H                                               02S0308
*AHLACT01:                                                      02S0308
*         DO;                       /* IF THERE IS NO MCQE CHAIN, MC
*                                      ROUTING MUST HAVE TERMINATED  */
*                                                               02S0308
AHLACT01 DS    0H                                               02S0309
*           /*********************************************************/
*           /*                                                       */
*           /* THE FOLLOWING CODE IS ENTERED IF THE MCQE IN THE      */
*           /* PARAMETER LIST CANNOT BE FOUND ON THE MCQE CHAIN. THIS*/
*           /* CAN HAPPEN IF THE MC ROUTING FACILITY HAS TERMINATED, */
*           /* OR IF THE MCQE ADDRESS IN THE PARAMETER LIST IS       */
*           /* INVALID. THE FORMER CASE IS ASSUMED IF THE MCQE       */
*           /* CONTAINS A VALID IDENTIFIER AND APPLICATION NAME.     */
*           /* OTHERWISE, THE CALLER IS ABENDED.                     */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0309
*           RFY                                                 02S0309
*             MCQE BASED(PASSEDQE);                             02S0309
*           IF MCQEIDEN=MCQETAG&MCQENAME=PLISTNAM THEN          02S0310
         L     @06,PLISTAD                                      02S0310
         ICM   @15,15,PASSEDQE(@06)                             02S0310
         CLC   MCQEIDEN(8,@15),@CC00170                         02S0310
         BNE   @RF00310                                         02S0310
         CLC   MCQENAME(8,@15),PLISTNAM(@06)                    02S0310
         BNE   @RF00310                                         02S0310
*             RTRNCODE=TERMPHSE;    /* IF MCQE PASSES VALIDITY  02S0311
*                                      CHECKS, SET RETURN CODE TO
*                                      INDICATE TERMINATION          */
         MVC   RTRNCODE(4),@CF00097                             02S0311
*           ELSE                                                02S0312
*AHLACT02:                                                      02S0312
*             DO;                                               02S0312
*                                                               02S0312
         B     @RC00310                                         02S0312
@RF00310 DS    0H                                               02S0312
AHLACT02 DS    0H                                               02S0313
*               /*****************************************************/
*               /*                                                   */
*               /* ABEND CALLER DUE TO INVALID PARAMETER LIST        */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0313
*               RFY                                             02S0313
*                 ABNDCODE RSTD;                                02S0313
*               ABNDCODE=INVALQE1;  /* SET PROPER ABEND INDICATOR    */
         LA    ABNDCODE,8                                       02S0314
*               DO;                 /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                 RESPECIFY                                     02S0316
*                  (GPR01F) RESTRICTED;                         02S0316
*                 GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP CODE
*                                      IN BITS 8-19                  */
         L     GPR01F,@CF02503                                  02S0317
*                 GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS
*                                      FLAG                          */
         O     GPR01F,@CF02273                                  02S0318
*                 SVC(13);          /* ISSUE ABEND SVC               */
         SVC   13                                               02S0319
*                 RESPECIFY                                     02S0320
*                  (GPR01F) UNRESTRICTED;                       02S0320
*               END;                /* ABEND(SETCMPCD) DUMP SYSTEM   */
*               RFY                                             02S0322
*                 ABNDCODE UNRSTD;                              02S0322
*             END;                                              02S0323
*         END;                      /* END OF NO MCQE CHAIN PATH     */
*       ELSE                                                    02S0325
*         DO;                                                   02S0325
*                                                               02S0325
         B     @RC00307                                         02S0325
@RF00307 DS    0H                                               02S0326
*           /*********************************************************/
*           /*                                                       */
*           /* SEARCH MCQE CHAIN FOR AN MCQE WHICH CONTAINS THE SAME */
*           /* NAME AS IN THE PARAMETER LIST                         */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0326
*           MCQEPTR=MCCEQEA;        /* POINT TO FIRST MCQE ON THE
*                                      CHAIN                         */
         L     @06,MCHEADPT                                     02S0326
         L     @06,MCHCUR(,@06)                                 02S0326
         L     MCQEPTR,MCCEQEA(,@06)                            02S0326
*           RFY                                                 02S0327
*             MCQE BASED(MCQEPTR);                              02S0327
*AHLACT05:                                                      02S0328
*           IF MCQENAME=PLISTNAM THEN                           02S0328
AHLACT05 L     @06,PLISTAD                                      02S0328
         CLC   MCQENAME(8,MCQEPTR),PLISTNAM(@06)                02S0328
         BNE   @RF00328                                         02S0328
*             DO;                                               02S0329
*                                                               02S0329
*               /*****************************************************/
*               /*                                                   */
*               /* MCQE WITH SAME NAME HAS BEEN FOUND                */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0330
*               IF MCQEPTR^=PASSEDQE THEN                       02S0330
         ICM   @15,15,PASSEDQE(@06)                             02S0330
         CR    MCQEPTR,@15                                      02S0330
         BE    @RF00330                                         02S0330
*                 IF PASSEDQE^=0×ADD^='1'B THEN                 02S0331
         LTR   @15,@15                                          02S0331
         BNZ   @RT00331                                         02S0331
         TM    ADD(@06),B'10000000'                             02S0331
         BNO   @RT00331                                         02S0331
*                   GO TO AHLACT02; /* IF THIS IS NOT THE SAME  02S0332
*                                      ADDRESS AS IN THE PARAMETER
*                                      LIST, ABEND THE CALLER UNLESS
*                                      HIS MCQE HAS JUST BEEN GOTTEN
*                                      ON THIS CALL                  */
*                                                               02S0333
*               /*****************************************************/
*               /*                                                   */
*               /* THE MCQE TO BE ACTIVATED HAS BEEN FOUND. IF IT    */
*               /* CONTAINS NEITHER MCEES NOR MCCLES, THE CALLER IS  */
*               /* ABENDED. OTHERWISE, THE MCEES AND MCCLES ARE      */
*               /* INSERTED INTO THE PROPER ROUTING TABLES           */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0333
*               IF MCQEMCEE=0 THEN                              02S0333
@RF00330 SLR   @06,@06                                          02S0333
         C     @06,MCQEMCEE(,MCQEPTR)                           02S0333
         BNE   @RF00333                                         02S0333
*                 IF MCQEMCCL=0 THEN                            02S0334
         C     @06,MCQEMCCL(,MCQEPTR)                           02S0334
         BNE   @RF00334                                         02S0334
*                   DO;             /* IF BOTH CHAINS ARE NULL, ABEND
*                                      CALLER                        */
*                     RFY                                       02S0336
*                       ABNDCODE RSTD;                          02S0336
*                     ABNDCODE=INVALQE2;                        02S0337
         LA    ABNDCODE,12                                      02S0337
*                     DO;           /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                       RESPECIFY                               02S0339
*                        (GPR01F) RESTRICTED;                   02S0339
*                       GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP
*                                      CODE IN BITS 8-19             */
         L     GPR01F,@CF02503                                  02S0340
*                       GPR01F=GPR01F×'80000000'X;/*            02S0341
*                                      DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF02273                                  02S0341
*                       SVC(13);    /* ISSUE ABEND SVC               */
         SVC   13                                               02S0342
*                       RESPECIFY                               02S0343
*                        (GPR01F) UNRESTRICTED;                 02S0343
*                     END;          /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                     RFY                                       02S0345
*                       ABNDCODE UNRSTD;                        02S0345
*                   END;            /* END OF ABEND PATH             */
*                 ELSE                                          02S0347
*AHLACT03:                                                      02S0347
*                   DO;             /* MCCLES EXIST - INSERT THEM
*                                      INTO MCCD                     */
         B     @RC00334                                         02S0347
@RF00334 DS    0H                                               02S0347
AHLACT03 DS    0H                                               02S0348
*                                                               03S0348
*                     /***********************************************/
*                     /*                                             */
*                     /* MCCLES ARE TO BE INSERTED INTO THE CLASS    */
*                     /* DIRECTORY FOR THE MCQE POINTED TO BY        */
*                     /* MCQEPTR. FIRST, FIND OR OBTAIN THE CURRENT  */
*                     /* CLASS DIRECTORY (MCCD).                     */
*                     /*                                             */
*                     /***********************************************/
*                                                               03S0348
*                     IF MCCECDA=0 THEN                         03S0348
         L     @06,MCHEADPT                                     03S0348
         L     @06,MCHCUR(,@06)                                 03S0348
         L     @06,MCCECDA(,@06)                                03S0348
         LTR   @06,@06                                          03S0348
         BNZ   @RF00348                                         03S0348
*                       DO;         /* IF AN MCCD DOES NOT EXIST, GET
*                                      ONE                           */
*                         DO;       /* GETMAIN (EC) LV(LENGTH(MCCD))
*                                      A(GETMADDR) SP(SQA)           */
*                           RESPECIFY                           03S0351
*                            (GPR01P) RESTRICTED;               03S0351
*                           I004=I004&&I004;/* INIT LIST             */
         XC    I004(10),I004                                    03S0352
*                           I00404='20'X;/* TYPE                     */
         MVI   I00404,X'20'                                     03S0353
*                           I00401=LENGTH(MCCD);/* LENGTH            */
         MVC   I00401(4),@CF02505                               03S0354
*                           I00403=ADDR(GETMADDR);/* ADDR OF ADDR
*                                      LIST                          */
         LA    @06,GETMADDR                                     03S0355
         STCM  @06,7,I00403                                     03S0355
*                           I00405=SQA;/* SUBPOOL VALUE              */
         MVI   I00405,X'F5'                                     03S0356
*                           GPR01P=ADDR(I004);/* REG1 POINTS TO LIST */
         LA    GPR01P,I004                                      03S0357
*                           SVC(4); /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                03S0358
*                           RESPECIFY                           03S0359
*                            (GPR01P) UNRESTRICTED;             03S0359
*                         END;      /* GETMAIN (EC) LV(LENGTH(MCCD))
*                                      A(GETMADDR) SP(SQA)           */
*                         IF RETCOD15^=0 THEN                   03S0361
         LTR   RETCOD15,RETCOD15                                03S0361
         BZ    @RF00361                                         03S0361
*                           DO;     /* IF IT CANNOT BE OBTAINED,
*                                      INDICATE THIS CONDITION TO THE
*                                      CALLER                        */
*                             RTRNCODE=INSUFSTG;/* SET          03S0363
*                                      NOT-ENOUGH-STORAGE CODE       */
         MVC   RTRNCODE(4),@CF00101                             03S0363
*                             GO TO AHLEXIT;/* QUIT PROCESSING       */
         B     AHLEXIT                                          03S0364
*                           END;                                03S0365
*                         RFY                                   03S0366
*                           MCCD BASED(GETMADDR);               03S0366
*                                                               03S0366
@RF00361 DS    0H                                               03S0367
*                         /*******************************************/
*                         /*                                         */
*                         /* INITIALIZE NEW MCCD                     */
*                         /*                                         */
*                         /*******************************************/
*                                                               03S0367
*                         MCCD(1:LENGTH(MCCD))=''B;/* ZERO OUT ENTIRE
*                                      TABLE                         */
         L     @06,GETMADDR                                     03S0367
         XC    MCCD(76,@06),MCCD(@06)                           03S0367
*                         MCCDIDEN=MCCDTAG;/* PLACE TABLE IDENTIFIER
*                                      IN ITS PLACE                  */
         MVC   MCCDIDEN(8,@06),@CC00172                         03S0368
*                         MCCECDA=GETMADDR;/* PLACE ADDRESS INTO MCCE*/
         L     @01,MCHEADPT                                     03S0369
         L     @01,MCHCUR(,@01)                                 03S0369
         ST    @06,MCCECDA(,@01)                                03S0369
*                       END;                                    03S0370
*                                                               03S0371
*                     /***********************************************/
*                     /*                                             */
*                     /* USING EACH MCCLE OFF THE MCQE AS ARGUMENTS, */
*                     /* DETERMINE WHETHER EACH MCCLE IS OR IS NOT   */
*                     /* DEFINED TO THE MCCD. IF IT IS, IGNORE THAT  */
*                     /* MCCLE. IF NOT, INSERT IT INTO THE TABLE     */
*                     /* STRUCTURE.                                  */
*                     /*                                             */
*                     /***********************************************/
*                                                               03S0371
*                     RFY                                       03S0371
*                       MCCD BASED(MCCECDA);                    03S0371
@RF00348 DS    0H                                               03S0372
*                     ARGUMENT=MCQEMCCL;/* PICK UP FIRST MCCLE  03S0372
*                                      ADDRESS                       */
         L     ARGUMENT,MCQEMCCL(,MCQEPTR)                      03S0372
*                     RFY                                       03S0373
*                       MCCLE BASED(ARGUMENT);                  03S0373
*                     DO WHILE(ARGUMENT^=0);/* PROCESS UNTIL    03S0374
*                                      END-OF-CHAIN                  */
         B     @DE00374                                         03S0374
@DL00374 DS    0H                                               03S0375
*                       INDEX=(MCCLCLS/16)+1;/* CALCULATE INDEX INTO
*                                      THE MCCD BY USING THE CLASS IN
*                                      THE ARGUMENT MCCLE            */
         LA    @06,1                                            03S0375
         SLR   INDEX,INDEX                                      03S0375
         IC    INDEX,MCCLCLS(,ARGUMENT)                         03S0375
         SRL   INDEX,4                                          03S0375
         ALR   INDEX,@06                                        03S0375
*                       IF MCCDCLE(INDEX)=0 THEN                03S0376
         LR    @03,INDEX                                        03S0376
         SLA   @03,2                                            03S0376
         L     @01,MCHEADPT                                     03S0376
         L     @01,MCHCUR(,@01)                                 03S0376
         L     @15,MCCECDA(,@01)                                03S0376
         L     @00,MCCDCLE-4(@03,@15)                           03S0376
         LTR   @00,@00                                          03S0376
         BNZ   @RF00376                                         03S0376
*                         DO;                                   03S0377
*                                                               03S0377
*                           /*****************************************/
*                           /*                                       */
*                           /* IF THE INDEXED ELEMENT IS ZERO, THIS  */
*                           /* IS A NEW CLASS TO BE DEFINED.         */
*                           /*                                       */
*                           /*****************************************/
*                                                               03S0378
*                           MCCDCLE(INDEX)=ARGUMENT;/* DEFINE MCCLE
*                                      TO MCCD                       */
         ST    ARGUMENT,MCCDCLE-4(@03,@15)                      03S0378
*                           MCCDCNT=MCCDCNT+1;/* INCREMENT COUNT OF
*                                      ACTIVE CLASSES BY ONE.        */
         AH    @06,MCCDCNT(,@15)                                03S0379
         STH   @06,MCCDCNT(,@15)                                03S0379
*                         END;                                  03S0380
*                       ELSE                                    03S0381
*                         DO;                                   03S0381
*                                                               03S0381
         B     @RC00376                                         03S0381
@RF00376 DS    0H                                               03S0382
*                           /*****************************************/
*                           /*                                       */
*                           /* THIS CLASS ALREADY HAS MCCLES ACTIVE. */
*                           /* SEARCH THE MCCLE CHAIN POINTED TO BE  */
*                           /* THIS ENTRY TO SEE IF THE ARGUMENT     */
*                           /* MCCLE IS ON IT. IF IT IS, BYPASS THIS */
*                           /* MCCLE. IF NOT, PLACE IT ON THE END OF */
*                           /* THE CHAIN                             */
*                           /*                                       */
*                           /*****************************************/
*                                                               03S0382
*                           ELEMAD=MCCDCLE(INDEX);/* PICK UP CHAIN
*                                      HEAD                          */
         LR    @06,INDEX                                        03S0382
         SLA   @06,2                                            03S0382
         L     @03,MCHEADPT                                     03S0382
         L     @03,MCHCUR(,@03)                                 03S0382
         L     @03,MCCECDA(,@03)                                03S0382
         L     @06,MCCDCLE-4(@06,@03)                           03S0382
         ST    @06,ELEMAD                                       03S0382
*                           DO WHILE(ELEMAD^=0);/* LOOP UNTIL   03S0383
*                                      END-OF-CHAIN                  */
         B     @DE00383                                         03S0383
@DL00383 DS    0H                                               03S0384
*                             IF ELEMAD=ARGUMENT THEN           03S0384
         L     @06,ELEMAD                                       03S0384
         CR    @06,ARGUMENT                                     03S0384
         BE    @RT00384                                         03S0384
*                               GO TO AHLMCCL1;/* IF THE ARGUMENT
*                                      MCCLE IS ALREADY HERE, PROCESS
*                                      THE NEXT ONE OFF MCQE         */
*                             LASTELM=ELEMAD;/* INDICATE THIS MCCLE
*                                      AS THE LAST ONE               */
         LR    LASTELM,@06                                      03S0386
*                             ELEMAD=ELEMAD->MCCLEIDL;/* POINT TO THE
*                                      NEXT MCCLE OFF THE MCCD, FOUND
*                                      VIA THE MCCLEIDL FIELD        */
         L     @06,MCCLEIDL(,@06)                               03S0387
         ST    @06,ELEMAD                                       03S0387
*                           END;    /* LOOP THRU CHAIN UNTIL A ZERO
*                                      LINK FIELD IS FOUND           */
*                                                               03S0388
@DE00383 L     @06,ELEMAD                                       03S0388
         LTR   @06,@06                                          03S0388
         BNZ   @DL00383                                         03S0388
*                           /*****************************************/
*                           /*                                       */
*                           /* FALL THRU TO THIS CODE INDICATES THAT */
*                           /* THE ARGUMENT MCCLE IS NOT ON THE      */
*                           /* CHAIN. INSERT IT ONTO THE END OF THE  */
*                           /* CHAIN                                 */
*                           /*                                       */
*                           /*****************************************/
*                                                               03S0389
*                           LASTELM->MCCLEIDL=ARGUMENT;/* CHAIN 03S0389
*                                      ARGUMENT MCCLE TO THE LAST
*                                      MCCLE FOUND ON CHAIN          */
         ST    ARGUMENT,MCCLEIDL(,LASTELM)                      03S0389
*                         END;                                  03S0390
*                                                               03S0391
*                       /*********************************************/
*                       /*                                           */
*                       /* PROCESS NEXT MCCLE OFF MCQE               */
*                       /*                                           */
*                       /*********************************************/
*                                                               03S0391
*AHLMCCL1:                                                      03S0391
*                       ARGUMENT=MCCLMCQL;/* POINT TO NEXT MCCLE     */
@RC00376 DS    0H                                               03S0391
AHLMCCL1 L     ARGUMENT,MCCLMCQL(,ARGUMENT)                     03S0391
*                     END;          /* PROCESS UNTIL THE END-OF-CHAIN
*                                      IS FOUND                      */
@DE00374 LTR   ARGUMENT,ARGUMENT                                03S0392
         BNZ   @DL00374                                         03S0392
*                   END;                                        02S0393
*               ELSE                                            02S0394
*                 DO;               /* MCEES EXIST - INSERT THEM INTO
*                                      MCED                          */
         B     @RC00333                                         02S0394
@RF00333 DS    0H                                               02S0395
*                                                               03S0395
*                   /*************************************************/
*                   /*                                               */
*                   /* MCEES ARE TO BE INSERTED INTO THE EVENT       */
*                   /* DIRECTORY FOR THE MCQE POINTED TO BY MCQEPTR. */
*                   /* FIRST, FIND OR OBTAIN THE EVENT               */
*                   /* DIRECTORY(MCED).                              */
*                   /*                                               */
*                   /*************************************************/
*                                                               03S0395
*                   RFY                                         03S0395
*                     TREEAD RSTD;                              03S0395
*                   TREEAD=MCCEEDA; /* LOAD MCED ADDRESS             */
         L     @06,MCHEADPT                                     03S0396
         L     @06,MCHCUR(,@06)                                 03S0396
         L     TREEAD,MCCEEDA(,@06)                             03S0396
*                   IF TREEAD=0 THEN                            03S0397
         LTR   TREEAD,TREEAD                                    03S0397
         BNZ   @RF00397                                         03S0397
*                     DO;           /* IF THE MCED DOES NOT EXIST,
*                                      CREATE ONE USING THE RPTS
*                                      ROUTINES                      */
*                       GEN                                     03S0399
*(STREE (TREEAD),TSP=245,KEYL=2,OFFSET=10,TYPE=5);              03S0399
         STREE (TREEAD),TSP=245,KEYL=2,OFFSET=10,TYPE=5
*                       IF NOTREE<0 THEN                        03S0400
         LTR   NOTREE,NOTREE                                    03S0400
         BNM   @RF00400                                         03S0400
*                         DO;       /* IF RPTS WAS UNABLE TO OBTAIN
*                                      THE MCED, INDICATE THIS TO
*                                      CALLER                        */
*                           RTRNCODE=INSUFSTG;/* SET NO STORAGE 03S0402
*                                      RETURN CODE                   */
         MVC   RTRNCODE(4),@CF00101                             03S0402
*                           GO TO AHLEXIT;/* QUIT                    */
         B     AHLEXIT                                          03S0403
*                         END;                                  03S0404
*                       MCCEEDA=TREEAD;/* IF ONE WAS OBTAINED, PLACE
*                                      THE ADDRESS INTO THE MCCE.    */
@RF00400 L     @06,MCHEADPT                                     03S0405
         L     @06,MCHCUR(,@06)                                 03S0405
         ST    TREEAD,MCCEEDA(,@06)                             03S0405
*                     END;                                      03S0406
*                                                               03S0407
*                   /*************************************************/
*                   /*                                               */
*                   /* USING EACH MCEE OFF THIS MCQE AS ARGUMENTS,   */
*                   /* SEARCH THE MCED (VIA RPTS MACRO) TO SEE IF THE*/
*                   /* MCEE IS ALREADY DEFINED TO THE MCED. IF IT IS,*/
*                   /* IGNORE THIS MCEE AND PROCESS THE NEXT ONE. IF */
*                   /* IT IS NOT DEFINED TO THE MCED, INSERT IT      */
*                   /* EITHER INTO THE MCED OR ON THE END OF THE     */
*                   /* CHAIN POINTED TO BY THE MCED                  */
*                   /*                                               */
*                   /*************************************************/
*                                                               03S0407
*                   ARGUMENT=MCQEMCEE;/* PICK UP THE FIRST MCEE TO
*                                      INSERT                        */
@RF00397 L     ARGUMENT,MCQEMCEE(,MCQEPTR)                      03S0407
*                   DO WHILE(ARGUMENT^=0);/* PROCESS UNTIL THE LINK
*                                      FIELD INDICATE END-OF-CHAIN   */
         B     @DE00408                                         03S0408
@DL00408 DS    0H                                               03S0409
*                     GEN                                       03S0409
*(SRCH (TREEAD),SARG=MCEEEID(0,ARGUMENT),TYPE=5,KEYL=2);/* SEARCH THE
*                                      MCED FOR THE EID IN THIS MCEE */
         SRCH (TREEAD),SARG=MCEEEID(0,ARGUMENT),TYPE=5,KEYL=2
*                     RFY                                       03S0410
*                       SINKADDR RSTD;                          03S0410
*                     IF SINKIND<0×SINKADDR->MCEEEID^=ARGUMENT->MCEEEID
*                       THEN                                    03S0411
         LTR   SINKIND,SINKIND                                  03S0411
         BM    @RT00411                                         03S0411
         CLC   MCEEEID(2,SINKADDR),MCEEEID(ARGUMENT)            03S0411
         BE    @RF00411                                         03S0411
@RT00411 DS    0H                                               03S0412
*                       DO;                                     03S0412
*                                                               03S0412
*                         /*******************************************/
*                         /*                                         */
*                         /* A RETURNED NEGATIVE ADDRESS INDICATES AN*/
*                         /* EMPTY MCED. IF THIS IS TRUE, OR IF THE  */
*                         /* EID IN THE FOUND MCEE (POINTED TO BY    */
*                         /* REGISTER 15) DOES NOT MATCH THE EID IN  */
*                         /* THE ARGUMENT MCEE, THE ARGUMENT EID IS  */
*                         /* NOT DEFINED TO THE MCED. IT IS THEREFORE*/
*                         /* INSERTED INTO THE MCED VIA THE RPTS     */
*                         /* ROUTINES.                               */
*                         /*                                         */
*                         /*******************************************/
*                                                               03S0413
*                         GEN                                   03S0413
*(INS (TREEAD),TYPE=5,MOVE=NO,INSARG=(ARGUMENT));               03S0413
         INS (TREEAD),TYPE=5,MOVE=NO,INSARG=(ARGUMENT)
*                         IF SINKIND<0 THEN                     03S0414
         LTR   SINKIND,SINKIND                                  03S0414
         BNM   @RF00414                                         03S0414
*                           DO;     /* IF INS FUNCTION COULD NOT
*                                      OBTAIN THE NECESSARY STORAGE,
*                                      INDICATE THIS TO CALLER       */
*                             RTRNCODE=INSUFSTG;/* SET NO STORAGE
*                                      RETURN CODE                   */
         MVC   RTRNCODE(4),@CF00101                             03S0416
*                             GO TO AHLEXIT;/* QUIT                  */
         B     AHLEXIT                                          03S0417
*                           END;                                03S0418
*                       END;                                    03S0419
*                     ELSE                                      03S0420
*                       DO;                                     03S0420
*                                                               03S0420
         B     @RC00411                                         03S0420
@RF00411 DS    0H                                               03S0421
*                         /*******************************************/
*                         /*                                         */
*                         /* OTHERWISE, THE EID IS ALREADY DEFINED IN*/
*                         /* THE MCED. THE MCEE CHAIN HEADED BY THE  */
*                         /* MCEE POINTED TO BY REGISTER 15 IS       */
*                         /* SEARCHED TO SEE IF THE ARGUMENT MCEE IS */
*                         /* ALREADY DEFINED. IF IT IS, THIS MCEE IS */
*                         /* IGNORED.                                */
*                         /*                                         */
*                         /*******************************************/
*                                                               03S0421
*                         ELEMAD=SINKADDR;/* SAVE THE FOUND MCEE
*                                      ADDRESS                       */
         ST    SINKADDR,ELEMAD                                  03S0421
*                         RFY                                   03S0422
*                           SINKADDR UNRSTD;                    03S0422
*                         RFY                                   03S0423
*                           MCEE BASED(ELEMAD);                 03S0423
*                         DO WHILE(ELEMAD^=0);/* SEARCH UNTIL   03S0424
*                                      END-OF-CHAIN FOUND            */
         B     @DE00424                                         03S0424
@DL00424 DS    0H                                               03S0425
*                           IF ELEMAD=ARGUMENT THEN             03S0425
         L     @06,ELEMAD                                       03S0425
         CR    @06,ARGUMENT                                     03S0425
         BE    @RT00425                                         03S0425
*                             GO TO AHLEEIN2;/* IF ARGUMENT MCEE IS
*                                      ON THE CHAIN, IGNORE IT       */
*                           LASTELM=ELEMAD;/* SAVE THIS ONES ADDRESS
*                                      AS LAST ON CHAIN              */
         LR    LASTELM,@06                                      03S0427
*                           ELEMAD=MCEEEIDL;/* PICK UP ADDRESS OF
*                                      NEXT MCEE ON CHAIN OFF MCED,
*                                      VIA MCEEEIDL FIELD            */
         L     @06,MCEEEIDL(,@06)                               03S0428
         ST    @06,ELEMAD                                       03S0428
*                         END;                                  03S0429
*                                                               03S0429
@DE00424 L     @06,ELEMAD                                       03S0429
         LTR   @06,@06                                          03S0429
         BNZ   @DL00424                                         03S0429
*                         /*******************************************/
*                         /*                                         */
*                         /* FALL THRU TO THIS CODE INDICATES THAT   */
*                         /* THE ARGUMENT MCEE IS NOT DEFINED TO THE */
*                         /* MCED. ADD IT TO THE END OF THE CHAIN    */
*                         /*                                         */
*                         /*******************************************/
*                                                               03S0430
*                         LASTELM->MCEEEIDL=ARGUMENT;/* PLACE ITS
*                                      ADDRESS INTO THE LINK FIELD OF
*                                      THE LAST ONE ON THE CHAIN     */
         ST    ARGUMENT,MCEEEIDL(,LASTELM)                      03S0430
*                       END;        /* END OF DEFINED EID PATH       */
*                                                               03S0431
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESS NEXT MCEE OFF MCQE                  */
*                     /*                                             */
*                     /***********************************************/
*                                                               03S0432
*AHLEEIN2:                                                      03S0432
*                     ARGUMENT=ARGUMENT->MCEEMCQL;/* POINT TO NEXT
*                                      MCEE OFF MCQE TO PROCESS IT   */
@RC00411 DS    0H                                               03S0432
AHLEEIN2 L     ARGUMENT,MCEEMCQL(,ARGUMENT)                     03S0432
*                   END;            /* LOOP THRU ALL MCEES FOR THIS
*                                      MCQE                          */
@DE00408 SLR   @06,@06                                          03S0433
         CR    ARGUMENT,@06                                     03S0433
         BNE   @DL00408                                         03S0433
*                   RFY                                         03S0434
*                     TREEAD UNRSTD;                            03S0434
*                   IF MCQEMCCL^=0 THEN                         02S0435
         C     @06,MCQEMCCL(,MCQEPTR)                           02S0435
         BNE   @RT00435                                         02S0435
*                     GO TO AHLACT03;/* INSERT MCCLES ALSO, IF  02S0436
*                                      PRESENT                       */
*                 END;                                          02S0437
*                                                               02S0438
*               /*****************************************************/
*               /*                                                   */
*               /* ALL ROUTING TABLES HAVE BEEN UPDATED WITH THIS    */
*               /* MCQES ROUTING ELEMENTS. THE FOLLOWING CODE        */
*               /* COMPLETES THE ACTIVATION OF THIS MCQE BY          */
*               /* INITIALIZING CONTROL REGISTER 8, AND SETTING THE  */
*               /* PROPER ACTIVE FLAGS                               */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0438
*               CALL CR8MASK;       /* UPDATE CLASS MASK WITH NEW
*                                      CLASSES DUE TO THIS MCQE      */
@RC00333 BAL   @14,CR8MASK                                      02S0438
*               CALL CR8SET;        /* SET CONTROL REGISTER 8 ON ALL
*                                      CPUS                          */
         BAL   @14,CR8SET                                       02S0439
*               MCQEACT='1'B;       /* MARK THIS MCQE AS ACTIVE      */
         OI    MCQEACT(MCQEPTR),B'10000000'                     02S0440
*               IF MCHACT='0'B THEN                             02S0441
         L     @06,MCHEADPT                                     02S0441
         TM    MCHACT(@06),B'10000000'                          02S0441
         BNZ   @RF00441                                         02S0441
*                 DO;                                           02S0442
*                                                               02S0442
*                   /*************************************************/
*                   /*                                               */
*                   /* ROUTING IS NOT ACTIVE. CHECK THE TERMINATION  */
*                   /* FLAG TO SEE IF AHLMCER HAS TERMINATED ROUTING */
*                   /* AND IF SO, SET THE PROPER RETURN CODE. IF THE */
*                   /* TERMINATION FLAG IS NOT ON, SET THE ROUTING   */
*                   /* ACTIVE FLAG, MCHACT                           */
*                   /*                                               */
*                   /*************************************************/
*                                                               02S0443
*                   IF MCHTERM='1'B THEN                        02S0443
         TM    MCHTERM(@06),B'01000000'                         02S0443
         BNO   @RF00443                                         02S0443
*                     RTRNCODE=TERMPHSE;/* SET PROPER RC IF AHLMCER
*                                      HAS INDICATED TERMINATION     */
         MVC   RTRNCODE(4),@CF00097                             02S0444
*                   ELSE                                        02S0445
*                     MCHACT='1'B;  /* OTHERWISE, MARK ROUTING ACTIVE*/
         B     @RC00443                                         02S0445
@RF00443 L     @06,MCHEADPT                                     02S0445
         OI    MCHACT(@06),B'10000000'                          02S0445
*                 END;              /* END OF NOT ACTIVE PATH. IF
*                                      ROUTING IS ACTIVE, FLAG IS
*                                      ALREADY SET                   */
*             END;                  /* END OF FOUND MCQE PATH        */
*           ELSE                                                02S0448
*             DO;                                               02S0448
*                                                               02S0448
         B     @RC00328                                         02S0448
@RF00328 DS    0H                                               02S0449
*               /*****************************************************/
*               /*                                                   */
*               /* THIS MCQE IS NOT THE ONE - BUMP TO NEXT MCQE ON   */
*               /* CHAIN                                             */
*               /*                                                   */
*               /*****************************************************/
*                                                               02S0449
*               MCQEPTR=MCQEMCQE;                               02S0449
         L     MCQEPTR,MCQEMCQE(,MCQEPTR)                       02S0449
*               IF MCQEPTR=0 THEN                               02S0450
         LTR   MCQEPTR,MCQEPTR                                  02S0450
         BZ    @RT00450                                         02S0450
*                 GO TO AHLACT01;   /* IF THE END OF THE MCQE CHAIN
*                                      IS REACHED WITHOUT FINDING THE
*                                      MCQE, TERMINATION IS ASSUMED  */
*               ELSE                                            02S0452
*                 GO TO AHLACT05;   /* IF THIS IS NOT THE END OF THE
*                                      MCQE CHAIN GO CHECK TO SEE IF
*                                      THIS IS THE RIGHT ONE.        */
         B     AHLACT05                                         02S0452
*             END;                                              02S0453
*         END;                      /* END OF MCQE CHAIN SEARCH PATH */
*     END;                                                      01S0455
*                                                               01S0455
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR OTHER OPTIONS ONLY IF ADD WAS NOT SPECIFIED         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0456
*   ELSE                                                        01S0456
*     IF ADD='0'B THEN                                          01S0456
         B     @RC00304                                         01S0456
@RF00304 L     @06,PLISTAD                                      01S0456
         TM    ADD(@06),B'10000000'                             01S0456
         BNZ   @RF00456                                         01S0456
*       DO;                                                     01S0457
*         IF FREE='1'B THEN                                     01S0458
         TM    FREE(@06),B'00010000'                            01S0458
         BNO   @RF00458                                         01S0458
*           DO;                                                 01S0459
*                                                               02S0460
*             /*******************************************************/
*             /*                                                     */
*             /* FREE FUNCTION HAS BEEN REQUESTED. REMOVE THIS       */
*             /* APPLICATION FROM THE TABLES AND FREE ALL THE TABLES */
*             /* ASSOCIATED WITH THIS APPLICATION. BEGIN PROCESSING  */
*             /* BY FINDING ITS MCQE.                                */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0460
*             IF MCHCUR=0 THEN                                  02S0460
         L     @06,MCHEADPT                                     02S0460
         L     @06,MCHCUR(,@06)                                 02S0460
         LTR   @06,@06                                          02S0460
         BNZ   @RF00460                                         02S0460
*AHLFREE1:                                                      02S0461
*               DO;                                             02S0461
*                                                               02S0461
AHLFREE1 DS    0H                                               02S0462
*                 /***************************************************/
*                 /*                                                 */
*                 /* NO MCCE EXISTS - TERMINATION IS ASSUMED TO HAVE */
*                 /* OCCURRED. SINCE THE MCQE CANNOT BE FOUND IN THE */
*                 /* TABLES, THE FREEING OPERATION MUST BE PERFORMED */
*                 /* ON THE PASSED MCQE ADDRESS. FIRST VALIDITY CHECK*/
*                 /* THE PASSED MCQE BY CHECKING THE TABLE IDENTIFIER*/
*                 /* AND APPLICATION NAME FIELDS                     */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0462
*                 IF PASSEDQE=0 THEN                            02S0462
         L     @06,PLISTAD                                      02S0462
         ICM   @15,15,PASSEDQE(@06)                             02S0462
         BZ    @RT00462                                         02S0462
*                   GO TO AHLEXIT;  /* QUIT IF THIS APPLICATION HAS
*                                      NOTHING TO FREE               */
*                 RFY                                           02S0464
*                   MCQE BASED(PASSEDQE);                       02S0464
*AHLFREE3:                                                      02S0465
*                 IF MCQEIDEN^=MCQETAG×MCQENAME^=PLISTNAM THEN  02S0465
AHLFREE3 L     @06,PLISTAD                                      02S0465
         ICM   @15,15,PASSEDQE(@06)                             02S0465
         CLC   MCQEIDEN(8,@15),@CC00170                         02S0465
         BNE   @RT00465                                         02S0465
         CLC   MCQENAME(8,@15),PLISTNAM(@06)                    02S0465
         BE    @RF00465                                         02S0465
@RT00465 DS    0H                                               02S0466
*                   DO;                                         02S0466
*                                                               02S0466
*                     /***********************************************/
*                     /*                                             */
*                     /* MCQE ADDRESS IS INVALID. ABEND THE CALLER   */
*                     /*                                             */
*                     /***********************************************/
*                                                               02S0467
*                     RFY                                       02S0467
*                       ABNDCODE RSTD;                          02S0467
*                     ABNDCODE=INVALQE1;/* SET PROPER INDICATOR IN R
*                                      15                            */
         LA    ABNDCODE,8                                       02S0468
*                     DO;           /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                       RESPECIFY                               02S0470
*                        (GPR01F) RESTRICTED;                   02S0470
*                       GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP
*                                      CODE IN BITS 8-19             */
         L     GPR01F,@CF02503                                  02S0471
*                       GPR01F=GPR01F×'80000000'X;/*            02S0472
*                                      DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF02273                                  02S0472
*                       SVC(13);    /* ISSUE ABEND SVC               */
         SVC   13                                               02S0473
*                       RESPECIFY                               02S0474
*                        (GPR01F) UNRESTRICTED;                 02S0474
*                     END;          /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                     RFY                                       02S0476
*                       ABNDCODE UNRSTD;                        02S0476
*                   END;                                        02S0477
*                                                               02S0478
*                 /***************************************************/
*                 /*                                                 */
*                 /* PASSED MCQE PASSES VALIDITY CHECKS. FREE THE    */
*                 /* STORAGE ASSOCIATED WITH THIS MCQE               */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0478
*                 ELEMAD=MCQEMCEE;  /* LOAD FIRST MCEE ADDRESS       */
@RF00465 L     @06,PLISTAD                                      02S0478
         ICM   @01,15,PASSEDQE(@06)                             02S0478
         L     @06,MCQEMCEE(,@01)                               02S0478
         ST    @06,ELEMAD                                       02S0478
*                 IF ELEMAD^=0 THEN                             02S0479
         LTR   @06,@06                                          02S0479
         BZ    @RF00479                                         02S0479
*                   CALL FREEELMS;  /* GO TO SUBROUTINE TO FREE 02S0480
*                                      ELEMENTS IF THEY EXIST        */
         BAL   @14,FREEELMS                                     02S0480
*                 ELEMAD=MCQEMCCL;  /* LOAD FIRST MCCLE ADDRESS      */
@RF00479 L     @06,PLISTAD                                      02S0481
         ICM   @01,15,PASSEDQE(@06)                             02S0481
         L     @06,MCQEMCCL(,@01)                               02S0481
         ST    @06,ELEMAD                                       02S0481
*                 IF ELEMAD^=0 THEN                             02S0482
         LTR   @06,@06                                          02S0482
         BZ    @RF00482                                         02S0482
*                   CALL FREEELMS;  /* GO TO THE SAME SUBROUTINE TO
*                                      FREE MCCLES                   */
         BAL   @14,FREEELMS                                     02S0483
*                 DO;               /* FREEMAIN (E) LV(LENGTH(MCQE))
*                                      A(PASSEDQE) SP(SQA)           */
@RF00482 DS    0H                                               02S0485
*                   RESPECIFY                                   02S0485
*                    (GPR01P) RESTRICTED;                       02S0485
*                   I005=I005&&I005;/* INIT LIST                     */
         XC    I005(10),I005                                    02S0486
*                   I00505='00'X;   /* SET TYPE                      */
         MVI   I00505,X'00'                                     02S0487
*                   I00502=LENGTH(MCQE);/* LENGTH                    */
         MVC   I00502(3),@CF02504+1                             02S0488
*                   I00504=ADDR(PASSEDQE);/* ADDR OF ADDR LIST       */
         L     @06,PLISTAD                                      02S0489
         LA    @06,PASSEDQE(,@06)                               02S0489
         STCM  @06,7,I00504                                     02S0489
*                   I00506=SQA;     /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                     02S0490
*                   GPR01P=ADDR(I005);/* REG1 POINTS TO LIST         */
         LA    GPR01P,I005                                      02S0491
*                   SVC(5);         /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                02S0492
*                   RESPECIFY                                   02S0493
*                    (GPR01P) UNRESTRICTED;                     02S0493
*                 END;              /* FREEMAIN (E) LV(LENGTH(MCQE))
*                                      A(PASSEDQE) SP(SQA) FREE THE
*                                      MCQE.                         */
*               END;                /* END OF NO-MCCE PATH           */
*             ELSE                                              02S0496
*               DO;                                             02S0496
*                                                               02S0496
         B     @RC00460                                         02S0496
@RF00460 DS    0H                                               02S0497
*                 /***************************************************/
*                 /*                                                 */
*                 /* MCCE EXISTS. SEARCH THE MCQE CHAIN FOR A        */
*                 /* MATCHING APPLICATION NAME.                      */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0497
*                 MCCEPTR=MCHCUR;   /* SAVE THE CURRENT MCCE ADDRESS */
         L     @05,MCHEADPT                                     02S0497
         L     @05,MCHCUR(,@05)                                 02S0497
         ST    @05,MCCEPTR                                      02S0497
*                 RFY                                           02S0498
*                   MCCE BASED(MCCEPTR);                        02S0498
*                 MCQEPTR=MCCEQEA;  /* LOAD THE FIRST MCQE ADDRESS   */
         L     MCQEPTR,MCCEQEA(,@05)                            02S0499
*                 RFY                                           02S0500
*                   MCQE BASED(MCQEPTR);                        02S0500
*                 LASTMCQ=0;        /* INDICATE THAT THIS IS THE
*                                      FIRST ON CHAIN                */
         SLR   LASTMCQ,LASTMCQ                                  02S0501
*                 DO WHILE(MCQEPTR^=0);/* SEARCH ENTIRE MCQE CHAIN
*                                      (UNTIL ZERO LINK VALUE IS
*                                      FOUND)                        */
         B     @DE00502                                         02S0502
@DL00502 DS    0H                                               02S0503
*                   IF MCQENAME=PLISTNAM THEN                   02S0503
         L     @05,PLISTAD                                      02S0503
         CLC   MCQENAME(8,MCQEPTR),PLISTNAM(@05)                02S0503
         BE    @RT00503                                         02S0503
*                     GO TO AHLFREE2;/* LEAVE LOOP IF WE FIND THE
*                                      NAME IN AN MCQE ON THE CHAIN. */
*                   LASTMCQ=MCQEPTR;/* THIS MCQE DOES NOT CONTAIN THE
*                                      SAME NAME. IT NOW BECOMES
*                                      KNOWN AS THE PRIOR            */
         LR    LASTMCQ,MCQEPTR                                  02S0505
*                   MCQEPTR=MCQEMCQE;/* PICK UP THE PREDECESSOR AS
*                                      THE ONE TO PROCESS            */
         L     MCQEPTR,MCQEMCQE(,MCQEPTR)                       02S0506
*                 END;              /* LOOP THRU ENTIRE MCQE CHAIN   */
*                                                               02S0507
@DE00502 LTR   MCQEPTR,MCQEPTR                                  02S0507
         BNZ   @DL00502                                         02S0507
*                 /***************************************************/
*                 /*                                                 */
*                 /* FALL THRU TO HERE INDICATES THAT THE MCQE IS NOT*/
*                 /* ON THE CHAIN                                    */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0508
*                 GO TO AHLFREE1;   /* TREAT IT AS IF TERMINATION HAS
*                                      TAKEN PLACE                   */
         B     AHLFREE1                                         02S0508
*                                                               02S0509
*                 /***************************************************/
*                 /*                                                 */
*                 /* MCQE WITH THE SAME NAME HAS BEEN FOUND - VERIFY */
*                 /* THAT THE ADDRESS IS THE SAME AS THE ADDRESS IN  */
*                 /* THE PARAMETER LIST. IF NOT, ABEND THE CALLER.   */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0509
*AHLFREE2:                                                      02S0509
*                 IF MCQEPTR^=PASSEDQE THEN                     02S0509
AHLFREE2 L     @05,PLISTAD                                      02S0509
         ICM   @15,15,PASSEDQE(@05)                             02S0509
         CR    MCQEPTR,@15                                      02S0509
         BE    @RF00509                                         02S0509
*                   DO;             /* IF THE ADDRESSES ARE NOT THE
*                                      SAME, ABEND THE CALLER DUE TO
*                                      AN INVALID MCQE ADDRESS       */
*                     RFY                                       02S0511
*                       ABNDCODE RSTD;                          02S0511
*                     ABNDCODE=INVALQE1;/* SET THE PROPER INDICATOR  */
         LA    ABNDCODE,8                                       02S0512
*                     DO;           /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                       RESPECIFY                               02S0514
*                        (GPR01F) RESTRICTED;                   02S0514
*                       GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP
*                                      CODE IN BITS 8-19             */
         L     GPR01F,@CF02503                                  02S0515
*                       GPR01F=GPR01F×'80000000'X;/*            02S0516
*                                      DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF02273                                  02S0516
*                       SVC(13);    /* ISSUE ABEND SVC               */
         SVC   13                                               02S0517
*                       RESPECIFY                               02S0518
*                        (GPR01F) UNRESTRICTED;                 02S0518
*                     END;          /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                     RFY                                       02S0520
*                       ABNDCODE UNRSTD;                        02S0520
*                   END;                                        02S0521
*                                                               02S0521
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF THE MCQE IS ACTIVE, ITS ASSOCIATED MCEES AND */
*                 /* MCCLES MUST BE REMOVED FROM THE MCED AND MCCD,  */
*                 /* RESPECTIVELY. IF THE MCQE IS NOT YET ACTIVE, ITS*/
*                 /* MCEES AND MCCLES DO NOT HAVE TO BE REMOVED SINCE*/
*                 /* THEY HAVE NOT YET BEEN INSERTED INTO THOSE      */
*                 /* TABLES                                          */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0522
*                 IF MCQEACT='1'B THEN                          02S0522
@RF00509 TM    MCQEACT(MCQEPTR),B'10000000'                     02S0522
         BNO   @RF00522                                         02S0522
*                   DO;                                         02S0523
*                     IF MCQEMCEE^=0 THEN                       02S0524
         SLR   @05,@05                                          02S0524
         L     @15,MCQEMCEE(,MCQEPTR)                           02S0524
         CR    @15,@05                                          02S0524
         BE    @RF00524                                         02S0524
*                       DO;         /* REMOVE MCEES FROM MCED IF THEY
*                                      EXIST                         */
*                                                               03S0526
*                         /*******************************************/
*                         /*                                         */
*                         /* MCEES ARE TO BE DELETED FROM THE EVENT  */
*                         /* DIRECTORY (MCED). FIRST, FIND THE MCED. */
*                         /* IF IT DOES NOT EXIST, THERE IS NOTHING  */
*                         /* TO PROCESS                              */
*                         /*                                         */
*                         /*******************************************/
*                                                               03S0526
*                         IF MCCEEDA^=0 THEN                    03S0526
         L     @01,MCCEPTR                                      03S0526
         L     @14,MCCEEDA(,@01)                                03S0526
         CR    @14,@05                                          03S0526
         BE    @RF00526                                         03S0526
*                           DO;                                 03S0527
*                                                               03S0527
*                             /***************************************/
*                             /*                                     */
*                             /* MCED EXISTS - USING EACH MCEE OFF   */
*                             /* THE MCQE (POINTED TO BY MCQEPTR) AS */
*                             /* ARGUMENTS, PERFORM A RPTS SEARCH ON */
*                             /* THE MCED, TO FIND OUT IF THE MCEE IS*/
*                             /* DEFINED TO THE MCED                 */
*                             /*                                     */
*                             /***************************************/
*                                                               03S0528
*                             RFY                               03S0528
*                               TREEAD RSTD;                    03S0528
*                             TREEAD=MCCEEDA;/* SAVE THE MCED ADDRESS*/
         LR    TREEAD,@14                                       03S0529
*                             ARGUMENT=MCQEMCEE;/* PICK UP THE FIRST
*                                      MCEE TO PROCESS               */
         LR    ARGUMENT,@15                                     03S0530
*                             RFY                               03S0531
*                              (SINKADDR,                       03S0531
*                               MCEDSINK) RSTD;                 03S0531
*                             DO WHILE(ARGUMENT^=0);/* PROCESS UNTIL
*                                      THE END IS INDICATED          */
         B     @DE00532                                         03S0532
@DL00532 DS    0H                                               03S0533
*                               GEN                             03S0533
*(SRCH (TREEAD),SARG=MCEEEID(0,ARGUMENT),TYPE=5,KEYL=2);        03S0533
         SRCH (TREEAD),SARG=MCEEEID(0,ARGUMENT),TYPE=5,KEYL=2
*                                                               03S0534
*                               /*************************************/
*                               /*                                   */
*                               /* IF THE MCEE FOUND BY THE SRCH     */
*                               /* MACRO ( THE ADDRESS OF WHICH IS   */
*                               /* RETURNED IN SINKADDR (R 15) ) IS  */
*                               /* THE ONE USED AS THE ARGUMENT, IT  */
*                               /* IS TO BE DELETED FROM THE MCED.   */
*                               /* HOWEVER, BEFORE IT CAN BE DELETED,*/
*                               /* ITS EID LINK FIELD MUST BE        */
*                               /* INTERROGATED TO SEE IF THERE ARE  */
*                               /* OTHER MCEES DEFINED TO THE SAME   */
*                               /* EID. IF THERE ARE NOT (INDICATED  */
*                               /* BY A ZERO LINK FIELD) THE MCEE IS */
*                               /* DELETED VIA THE RPTS DEL MACRO. IF*/
*                               /* THERE ARE, THEY REMAIN DEFINED TO */
*                               /* THE MCED BY MOVING THE EID LINK   */
*                               /* FIELD OF THE FOUND MCEE INTO THE  */
*                               /* FULLWORD POINTED TO BY REGISTER 3 */
*                               /* AFTER THE SRCH MACRO. THIS WILL   */
*                               /* REPLACE THE ARGUMENT MCEE WITH THE*/
*                               /* NEXT MCEE ON THE CHAIN OFF THE    */
*                               /* MCED.                             */
*                               /*                                   */
*                               /*************************************/
*                                                               03S0534
*                               IF SINKADDR=ARGUMENT THEN       03S0534
         CR    SINKADDR,ARGUMENT                                03S0534
         BNE   @RF00534                                         03S0534
*                                 DO;                           03S0535
*                                                               03S0535
*                                   /*********************************/
*                                   /*                               */
*                                   /* MCED POINTS TO ARGUMENT MCEE  */
*                                   /*                               */
*                                   /*********************************/
*                                                               03S0536
*                                   IF ARGUMENT->MCEEEIDL^=0 THEN
         L     @14,MCEEEIDL(,ARGUMENT)                          03S0536
         LTR   @14,@14                                          03S0536
         BZ    @RF00536                                         03S0536
*                                    NEWSINK=ARGUMENT->MCEEEIDL;/*
*                                      REPLACE MCEE WITH ITS    03S0537
*                                      SUCCESSOR                     */
         ST    @14,NEWSINK(,MCEDSINK)                           03S0537
*                                   ELSE                        03S0538
*                                    DO;/* IF IT DOES NOT HAVE A
*                                      SUCCESSOR, DELETE IT FROM MCED
*                                      VIA RPTS MACRO                */
         B     @RC00536                                         03S0538
@RF00536 DS    0H                                               03S0539
*                                     GEN(DEL (TREEAD),FREE=NO,TYPE=5);
*                                                               03S0539
         DEL (TREEAD),FREE=NO,TYPE=5
*                                     /*******************************/
*                                     /*                             */
*                                     /* NOW CHECK TO SEE IF THIS WAS*/
*                                     /* THE LAST MCEE DEFINED TO THE*/
*                                     /* MCED BY PERFORMING SRCH. IF */
*                                     /* THE MCED IS NOW EMPTY, THE  */
*                                     /* SRCH WILL RETURN A ZERO     */
*                                     /* ADDRESS. IF THIS IS THE     */
*                                     /* CASE, SET UP THE MCED TO BE */
*                                     /* FREED BY PLACING ITS ADDRESS*/
*                                     /* INTO THE MCCEOEDA FIELD     */
*                                     /*                             */
*                                     /*******************************/
*                                                               03S0540
*                                     GEN                       03S0540
*(SRCH (TREEAD),SARG=MCEEEID(0,ARGUMENT),TYPE=5,KEYL=2);        03S0540
         SRCH (TREEAD),SARG=MCEEEID(0,ARGUMENT),TYPE=5,KEYL=2
*                                     IF SINKIND<0 THEN         03S0541
         LTR   SINKIND,SINKIND                                  03S0541
         BNM   @RF00541                                         03S0541
*AHLEEOT2:                                                      03S0542
*                                      DO;                      03S0542
*                                                               03S0542
AHLEEOT2 DS    0H                                               03S0543
*                                       /*****************************/
*                                       /*                           */
*                                       /* MCED IS NOW EMPTY         */
*                                       /*                           */
*                                       /*****************************/
*                                                               03S0543
*                                       MCCEOEDA=TREEAD;/* PLACE
*                                      ADDRESS IN TO-BE-FREED SLOT   */
         L     @14,MCCEPTR                                      03S0543
         ST    TREEAD,MCCEOEDA(,@14)                            03S0543
*                                       MCCEEDA=0;/* INDICATE THAT NO
*                                      MCED EXISTS                   */
         SLR   @05,@05                                          03S0544
         ST    @05,MCCEEDA(,@14)                                03S0544
*                                       GO TO AHLEEOT1;/* QUIT SINCE
*                                      THERE ARE NO MORE MCEES TO BE
*                                      REMOVED                       */
         B     AHLEEOT1                                         03S0545
*                                      END;                     03S0546
*                                    END;/* END OF NO SUCCESSOR PATH */
*                                 END;/* END OF PATH WHERE MCED 03S0548
*                                      POINTS TO THE ARGUMENT        */
*                                                               03S0549
*                               /*************************************/
*                               /*                                   */
*                               /* IF THE FOUND MCEE IS NOT THE SAME */
*                               /* AS THE ARGUMENT, CHECK FOR        */
*                               /* NEGATIVE. IF NEGATIVE, GO TO LABEL*/
*                               /* AHLEEOT2 TO REMOVE THE MCED SINCE */
*                               /* IT IS EMPTY.                      */
*                               /*                                   */
*                               /*************************************/
*                                                               03S0549
*                               ELSE                            03S0549
*                                 IF SINKIND<0 THEN             03S0549
         B     @RC00534                                         03S0549
@RF00534 LTR   SINKIND,SINKIND                                  03S0549
         BM    @RT00549                                         03S0549
*                                   GO TO AHLEEOT2;             03S0550
*                                                               03S0550
*                               /*************************************/
*                               /*                                   */
*                               /* OTHERWISE, CHECK THE EID IN THE   */
*                               /* FOUND MCEE FOR EQUALITY TO THE EID*/
*                               /* IN THE ARGUMENT MCEE. IF THE EIDS */
*                               /* ARE THE SAME, SEARCH THE CHAIN OFF*/
*                               /* THE FOUND MCEE FOR THE ARGUMENT   */
*                               /* MCEE ADDRESS. IF THE EIDS ARE NOT */
*                               /* THE SAME, THE EID IS NOT DEFINED  */
*                               /* TO THE MCED, SO BYPASS THIS       */
*                               /* ARGUMENT MCEE.                    */
*                               /*                                   */
*                               /*************************************/
*                                                               03S0551
*                                 ELSE                          03S0551
*                                   IF SINKADDR->MCEEEID=ARGUMENT->
*                                       MCEEEID THEN            03S0551
         CLC   MCEEEID(2,SINKADDR),MCEEEID(ARGUMENT)            03S0551
         BNE   @RF00551                                         03S0551
*                                    DO;                        03S0552
*                                                               03S0552
*                                     /*******************************/
*                                     /*                             */
*                                     /* EIDS MATCH                  */
*                                     /*                             */
*                                     /*******************************/
*                                                               03S0553
*                                     LASTELM=SINKADDR;/* SAVE FOUND
*                                      MCEE AS THE LAST ON CHAIN     */
         LR    LASTELM,SINKADDR                                 03S0553
*                                     ELEMAD=SINKADDR->MCEEEIDL;/*
*                                      POINT TO NEXT MCEE            */
         L     @14,MCEEEIDL(,SINKADDR)                          03S0554
         ST    @14,ELEMAD                                       03S0554
*                                     DO WHILE(ELEMAD^=0);/* PROCESS
*                                      UNTIL END-OF-CHAIN            */
         B     @DE00555                                         03S0555
@DL00555 DS    0H                                               03S0556
*                                      IF ELEMAD=ARGUMENT THEN  03S0556
         C     ARGUMENT,ELEMAD                                  03S0556
         BNE   @RF00556                                         03S0556
*                                       DO;                     03S0557
*                                                               03S0557
*                                        /****************************/
*                                        /*                          */
*                                        /* ARGUMENT MCEE FOUND ON   */
*                                        /* CHAIN                    */
*                                        /*                          */
*                                        /****************************/
*                                                               03S0558
*                                        LASTELM->MCEEEIDL=ARGUMENT->
*                                            MCEEEIDL;/* REMOVE 03S0558
*                                      ARGUMENT FROM CHAIN BY MOVING
*                                      LINK FIELD                    */
         L     @14,MCEEEIDL(,ARGUMENT)                          03S0558
         ST    @14,MCEEEIDL(,LASTELM)                           03S0558
*                                        GO TO AHLEEOT3;/* GO PROCESS
*                                      NEXT MCEE OFF MCQE            */
         B     AHLEEOT3                                         03S0559
*                                       END;                    03S0560
*                                                               03S0560
*                                      /******************************/
*                                      /*                            */
*                                      /* UPDATE TO PROCESS THE NEXT */
*                                      /* MCEE OFF MCED              */
*                                      /*                            */
*                                      /******************************/
*                                                               03S0561
*                                      LASTELM=ELEMAD;/* THIS ONE IS
*                                      NOT THE ARGUMENT, SO IT IS NOW
*                                      THE LAST ON CHAIN             */
@RF00556 L     @14,ELEMAD                                       03S0561
         LR    LASTELM,@14                                      03S0561
*                                      ELEMAD=ELEMAD->MCEEEIDL;/*
*                                      FIND NEXT MCEE ON CHAIN       */
         L     @14,MCEEEIDL(,@14)                               03S0562
         ST    @14,ELEMAD                                       03S0562
*                                     END;/* LOOP THROUGH CHAIN OFF
*                                      MCED.                         */
@DE00555 L     @14,ELEMAD                                       03S0563
         LTR   @14,@14                                          03S0563
         BNZ   @DL00555                                         03S0563
*                                    END;/* END OF DEFINED EID PATH  */
*                                                               03S0564
*                               /*************************************/
*                               /*                                   */
*                               /* UPDATE TO PROCESS THE NEXT MCEE   */
*                               /* OFF THE MCQE                      */
*                               /*                                   */
*                               /*************************************/
*                                                               03S0565
*AHLEEOT3:                                                      03S0565
*                               ARGUMENT=ARGUMENT->MCEEMCQL;/* NEXT
*                                      MCEE OFF MCQE NOW BECOMES THE
*                                      ARGUMENT MCEE                 */
@RF00551 DS    0H                                               03S0565
@RC00534 DS    0H                                               03S0565
AHLEEOT3 L     ARGUMENT,MCEEMCQL(,ARGUMENT)                     03S0565
*                             END;  /* LOOP THRU ALL MCEES UNTIL
*                                      END-OF-CHAIN IS REACHED       */
@DE00532 LTR   ARGUMENT,ARGUMENT                                03S0566
         BNZ   @DL00532                                         03S0566
*                           END;    /* END OF NON-ZERO MCED PATH     */
*                         ELSE                                  03S0568
*AHLEEOT1:                                                      03S0568
*                           ;                                   03S0568
@RF00526 DS    0H                                               03S0568
AHLEEOT1 DS    0H                                               03S0569
*                         RFY                                   03S0569
*                          (TREEAD,                             03S0569
*                           SINKADDR,                           03S0569
*                           MCEDSINK) UNRSTD;                   03S0569
*                       END;                                    02S0570
*                     IF MCQEMCCL^=0 THEN                       02S0571
@RF00524 SLR   @05,@05                                          02S0571
         L     @15,MCQEMCCL(,MCQEPTR)                           02S0571
         CR    @15,@05                                          02S0571
         BE    @RF00571                                         02S0571
*                       DO;         /* REMOVE MCCLES FROM MCCD IF
*                                      THEY EXIST                    */
*                                                               03S0573
*                         /*******************************************/
*                         /*                                         */
*                         /* MCCLES ARE TO BE REMOVED FROM THE MCCD  */
*                         /* STRUCTURE. FIRST, CHECK TO SEE IF AN    */
*                         /* MCCD EXISTS. IF ONE DOES NOT, THERE IS  */
*                         /* NOTHING TO PROCESS.                     */
*                         /*                                         */
*                         /*******************************************/
*                                                               03S0573
*                         ARGUMENT=MCQEMCCL;/* PICK UP FIRST MCCLE
*                                      OFF MCQE                      */
         LR    ARGUMENT,@15                                     03S0573
*                         IF MCCECDA^=0 THEN                    03S0574
         L     @01,MCCEPTR                                      03S0574
         C     @05,MCCECDA(,@01)                                03S0574
         BE    @RF00574                                         03S0574
*                           DO WHILE(ARGUMENT^=0);              03S0575
*                                                               03S0575
         B     @DE00575                                         03S0575
@DL00575 DS    0H                                               03S0576
*                             /***************************************/
*                             /*                                     */
*                             /* THE MCCD EXISTS - USING EACH MCCLE  */
*                             /* OFF THE MCQE AS AN ARGUMENT,        */
*                             /* INVESTIGATE THE MCCD TO SEE IF THE  */
*                             /* ARGUMENT MCCLE IS DEFINED TO THE    */
*                             /* MCCD. IF IT IS DEFINED, REMOVE IT   */
*                             /* FROM THE MCCD STRUCTURE. FIRST, THE */
*                             /* CLASS IN THE ARGUMENT MCCLE IS      */
*                             /* CONVERTED TO AN INDEX TO REFERENCE  */
*                             /* THE CORRECT MCCD ENTRY              */
*                             /*                                     */
*                             /***************************************/
*                                                               03S0576
*                             INDEX=(MCCLCLS/16)+1;/* CONVERT CLASS
*                                      TO INDEX                      */
         SLR   INDEX,INDEX                                      03S0576
         IC    INDEX,MCCLCLS(,ARGUMENT)                         03S0576
         SRL   INDEX,4                                          03S0576
         AL    INDEX,@CF00145                                   03S0576
*                             IF MCCDCLE(INDEX)=ARGUMENT THEN   03S0577
         LR    @05,INDEX                                        03S0577
         SLA   @05,2                                            03S0577
         L     @03,MCCEPTR                                      03S0577
         L     @15,MCCECDA(,@03)                                03S0577
         C     ARGUMENT,MCCDCLE-4(@05,@15)                      03S0577
         BNE   @RF00577                                         03S0577
*                               DO;                             03S0578
*                                                               03S0578
*                                 /***********************************/
*                                 /*                                 */
*                                 /* THE MCCD POINTS TO THE ARGUMENT */
*                                 /* MCCLE. REMOVE IT FROM THE MCCD  */
*                                 /* BY STORING ITS CHAIN FIELD INTO */
*                                 /* THE MCCD ENTRY                  */
*                                 /*                                 */
*                                 /***********************************/
*                                                               03S0579
*                                 MCCDCLE(INDEX)=ARGUMENT->MCCLEIDL;
         L     @14,MCCLEIDL(,ARGUMENT)                          03S0579
         ST    @14,MCCDCLE-4(@05,@15)                           03S0579
*                                   /* REMOVE THIS MCCLE             */
*                                 IF MCCDCLE(INDEX)=0 THEN      03S0580
         SLR   @05,@05                                          03S0580
         CR    @14,@05                                          03S0580
         BNE   @RF00580                                         03S0580
*                                   DO;                         03S0581
*                                                               03S0581
*                                    /********************************/
*                                    /*                              */
*                                    /* IF A ZERO HAS BEEN INSERTED  */
*                                    /* INTO THE MCCD, ONE LESS CLASS*/
*                                    /* IS NOW ACTIVE. INDICATE THIS */
*                                    /* BY DECREMENTING THE ACTIVE   */
*                                    /* CLASS COUNT                  */
*                                    /*                              */
*                                    /********************************/
*                                                               03S0582
*                                    MCCDCNT=MCCDCNT-1;/* DECREMENT
*                                      NUMBER OF CLASSES             */
         LH    @14,MCCDCNT(,@15)                                03S0582
         BCTR  @14,0                                            03S0582
         STH   @14,MCCDCNT(,@15)                                03S0582
*                                    IF MCCDCNT=0 THEN          03S0583
         CR    @14,@05                                          03S0583
         BNE   @RF00583                                         03S0583
*                                     DO;/* IF THIS COUNT HAS BECOME
*                                      ZERO, MCCD IS TO BE FREED     */
*                                      MCCEOCDA=MCCECDA;/* PLACE ITS
*                                      ADDRESS INTO MCCEOCDA FIELD TO
*                                      INDICATE THAT IT IS TO BE
*                                      FREED                         */
         ST    @15,MCCEOCDA(,@03)                               03S0585
*                                      MCCECDA=0;/* INDICATE THAT
*                                      THERE IS NO CURRENT MCCD      */
         ST    @05,MCCECDA(,@03)                                03S0586
*                                      GO TO AHLLEOT1;/* QUIT SINCE
*                                      THERE ARE NO MORE MCCLES TO BE
*                                      REMOVED                       */
         B     AHLLEOT1                                         03S0587
*                                     END;                      03S0588
*                                   END;/* END OF ZERO LINKFIELD PATH*/
*                               END;/* END OF FOUND MCCLE PATH       */
*                             ELSE                              03S0591
*                               DO;                             03S0591
*                                                               03S0591
         B     @RC00577                                         03S0591
@RF00577 DS    0H                                               03S0592
*                                 /***********************************/
*                                 /*                                 */
*                                 /* IF THE INDEXED ENTRY DOES NOT   */
*                                 /* ADDRESS THE ARGUMENT MCCLE, THEN*/
*                                 /* IT EITHER CONTAINS ZERO         */
*                                 /* (INDICATING AN INACTIVE CLASS)  */
*                                 /* OR CONTAINS THE ADDRESS OF      */
*                                 /* ANOTHER MCCLE FOR THE SAME      */
*                                 /* CLASS. IF ZERO, THE ARGUMENT    */
*                                 /* MCCLE IS BYPASSED. IF NONZERO,  */
*                                 /* THE MCCLE CHAIN HEADED BY THIS  */
*                                 /* ADDRESS IS SEARCHED FOR THE     */
*                                 /* ARGUMENT MCCLE                  */
*                                 /*                                 */
*                                 /***********************************/
*                                                               03S0592
*                                 IF MCCDCLE(INDEX)^=0 THEN     03S0592
         LR    @05,INDEX                                        03S0592
         SLA   @05,2                                            03S0592
         L     @03,MCCEPTR                                      03S0592
         L     @03,MCCECDA(,@03)                                03S0592
         L     @05,MCCDCLE-4(@05,@03)                           03S0592
         LTR   @05,@05                                          03S0592
         BZ    @RF00592                                         03S0592
*                                   DO;/* SEARCH THE MCCLE CHAIN     */
         ST    @05,@TF00001                                     03S0593
*                                    LASTELM=MCCDCLE(INDEX);/* SAVE
*                                      THIS FIRST MCCLE ADDRESS AS
*                                      THE LAST                      */
         L     LASTELM,@TF00001                                 03S0594
*                                    ELEMAD=LASTELM->MCCLEIDL;/*
*                                      POINT TO NEXT MCCLE ON CHAIN
*                                      OFF MCCD                      */
         L     @15,MCCLEIDL(,LASTELM)                           03S0595
         ST    @15,ELEMAD                                       03S0595
*                                    DO WHILE(ELEMAD^=0);/* LOOP
*                                      UNTIL END-OF-CHAIN            */
         B     @DE00596                                         03S0596
@DL00596 DS    0H                                               03S0597
*                                     IF ELEMAD=ARGUMENT THEN   03S0597
         L     @15,ELEMAD                                       03S0597
         CR    @15,ARGUMENT                                     03S0597
         BNE   @RF00597                                         03S0597
*                                      DO;/* IF WE FIND THE MCCLE WE
*                                      ARE LOOKING FOR, REMOVE IT
*                                      FROM CHAIN BY MOVING ITS LINK
*                                      FIELD INTO PRIOR MCCLE        */
*                                       LASTELM->MCCLEIDL=ELEMAD->
*                                           MCCLEIDL;           03S0599
         L     @15,MCCLEIDL(,@15)                               03S0599
         ST    @15,MCCLEIDL(,LASTELM)                           03S0599
*                                       GO TO AHLLEOT2;/* GO PROCESS
*                                      NEXT MCCLE OFF MCQE           */
         B     AHLLEOT2                                         03S0600
*                                      END;                     03S0601
*                                     LASTELM=ELEMAD;/* THIS ONE IS
*                                      NOT IT, SO MAKE IT THE PRIOR
*                                      ONE                           */
@RF00597 L     @15,ELEMAD                                       03S0602
         LR    LASTELM,@15                                      03S0602
*                                     ELEMAD=ELEMAD->MCCLEIDL;/*
*                                      POINT TO NEXT MCCLE ON CHAIN  */
         L     @15,MCCLEIDL(,@15)                               03S0603
         ST    @15,ELEMAD                                       03S0603
*                                    END;/* LOOP THRU ALL MCCLES ON
*                                      CHAIN OFF MCCD                */
@DE00596 L     @15,ELEMAD                                       03S0604
         LTR   @15,@15                                          03S0604
         BNZ   @DL00596                                         03S0604
*                                   END;/* END OF NON-ZERO ENTRY PATH*/
*                               END;/* END OF CHAIN SEARCH PATH      */
*                                                               03S0606
@RF00592 DS    0H                                               03S0607
*                             /***************************************/
*                             /*                                     */
*                             /* UPDATE TO NEXT MCCLE OFF THE MCQE   */
*                             /*                                     */
*                             /***************************************/
*                                                               03S0607
*AHLLEOT2:                                                      03S0607
*                             ARGUMENT=ARGUMENT->MCCLMCQL;/* POINT TO
*                                      THE NEXT MCCLE TO PROCESS     */
@RC00577 DS    0H                                               03S0607
AHLLEOT2 L     ARGUMENT,MCCLMCQL(,ARGUMENT)                     03S0607
*                           END;    /* PROCESS ALL MCCLES OFF MCQE   */
@DE00575 LTR   ARGUMENT,ARGUMENT                                03S0608
         BNZ   @DL00575                                         03S0608
*                         ELSE                                  03S0609
*AHLLEOT1:                                                      03S0609
*                           ;                                   03S0609
@RF00574 DS    0H                                               03S0609
AHLLEOT1 DS    0H                                               03S0610
*                       END;                                    02S0610
*                   END;            /* END OF ACTIVE ONLY PROCESSING */
*                                                               02S0611
@RF00571 DS    0H                                               02S0612
*                 /***************************************************/
*                 /*                                                 */
*                 /* SAVE THE MCQE ADDRESS IN FIELD MCCEOMCQ TO ALLOW*/
*                 /* SRB ROUTINE AHLTFREE TO FIND IT, SET UP THE SRB */
*                 /* IN THE MCCE TO SCHEDULE AHLTFREE, AND REMOVE THE*/
*                 /* MCQE FROM THE MCQE CHAIN.                       */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0612
*                 MCCEOMCQ=MCQEPTR; /* SAVE MCQE ADDRESS IN     02S0612
*                                      TO-BE-FREED FIELD             */
@RF00522 L     @05,MCCEPTR                                      02S0612
         ST    MCQEPTR,MCCEOMCQ(,@05)                           02S0612
*                 RFY                                           02S0613
*                   SRBPTR RSTD;                                02S0613
*                 SRBPTR=ADDR(MCCESRB);/* POINT TO TABLE FREEING SRB */
         LA    SRBPTR,MCCESRB(,@05)                             02S0614
*                 SRBASCB=PSAAOLD;  /* HAVE SRB RUN IN THIS MEMORY   */
         L     @00,PSAAOLD                                      02S0615
         ST    @00,SRBASCB(,SRBPTR)                             02S0615
*                 RFY                                           02S0616
*                   SRBPTR UNRSTD;                              02S0616
*                 IF LASTMCQ=0 THEN                             02S0617
         LTR   LASTMCQ,LASTMCQ                                  02S0617
         BNZ   @RF00617                                         02S0617
*                   MCCEQEA=MCQEMCQE;/* IF THIS IS THE FIRST MCQE,
*                                      CHANGE POINTER IN THE MCCE TO
*                                      POINT TO THE NEXT MCQE ON
*                                      CHAIN                         */
         L     @06,MCQEMCQE(,MCQEPTR)                           02S0618
         ST    @06,MCCEQEA(,@05)                                02S0618
*                 ELSE                                          02S0619
*                   LASTMCQ->MCQEMCQE=MCQEMCQE;/* OTHERWISE, REMOVE
*                                      FROM CHAIN BY STORING ITS LINK
*                                      FIELD INTO PRIOR MCQE         */
         B     @RC00617                                         02S0619
@RF00617 L     @05,MCQEMCQE(,MCQEPTR)                           02S0619
         ST    @05,MCQEMCQE(,LASTMCQ)                           02S0619
*                                                               02S0620
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF THIS IS THE LAST MCQE TO BE REMOVED, SET UP  */
*                 /* TO FREE ALL REMAINING TABLES                    */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0620
*                 IF MCCEQEA=0 THEN                             02S0620
@RC00617 SLR   @06,@06                                          02S0620
         L     @15,MCCEPTR                                      02S0620
         C     @06,MCCEQEA(,@15)                                02S0620
         BNE   @RF00620                                         02S0620
*                   DO;             /* HAVE WE REMOVED LAST MCQE     */
*                     NEWMCCE=0;    /* INDICATE THAT THE NEXT MCCE
*                                      ADDRESS IS TO BE ZERO         */
         ST    @06,NEWMCCE                                      02S0622
*                     MCHACT='0'B;  /* TURN OFF MC ROUTING SINCE THIS
*                                      IS THE LAST APPLICATION THAT
*                                      IS BEING REMOVED.             */
         L     @01,MCHEADPT                                     02S0623
         NI    MCHACT(@01),B'01111111'                          02S0623
*                     IF MCCEEDA^=0 THEN                        02S0624
         L     @14,MCCEEDA(,@15)                                02S0624
         CR    @14,@06                                          02S0624
         BE    @RF00624                                         02S0624
*                       MCCEOEDA=MCCEEDA;/* IF AN MCED STILL ESISTS,
*                                      INDICATE THAT IT IS TO BE
*                                      FREED BY MOVING ITS ADDRESS
*                                      INTO THE MCCEOEDA FIELD. THAT
*                                      TELLS AHLTFREE TO FREE IT.    */
         ST    @14,MCCEOEDA(,@15)                               02S0625
*                     IF MCCECDA^=0 THEN                        02S0626
@RF00624 L     @06,MCCEPTR                                      02S0626
         L     @15,MCCECDA(,@06)                                02S0626
         LTR   @15,@15                                          02S0626
         BZ    @RF00626                                         02S0626
*                       MCCEOCDA=MCCECDA;/* DO THE SAME WITH THE MCCD
*                                      IF IT EXISTS.                 */
         ST    @15,MCCEOCDA(,@06)                               02S0627
*                   END;                                        02S0628
*                 ELSE                                          02S0629
*                   DO;                                         02S0629
*                                                               02S0629
         B     @RC00620                                         02S0629
@RF00620 DS    0H                                               02S0630
*                     /***********************************************/
*                     /*                                             */
*                     /* OTHERWISE, THERE ARE MORE MCQES REMAINING. A*/
*                     /* NEW MCCE MUST MUST BE GOTTEN TO DESCRIBE THE*/
*                     /* REMAINING TABLES, WHILE THE OLD MCCE IS USED*/
*                     /* TO DESCRIBE THE TABLES TO BE FREED BY       */
*                     /* AHLTFREE                                    */
*                     /*                                             */
*                     /***********************************************/
*                                                               02S0630
*                     DO;           /* GETMAIN (EC) LV(LENGTH(MCCE))
*                                      A(GETMADDR) SP(SQA)           */
*                       RESPECIFY                               02S0631
*                        (GPR01P) RESTRICTED;                   02S0631
*                       I004=I004&&I004;/* INIT LIST                 */
         XC    I004(10),I004                                    02S0632
*                       I00404='20'X;/* TYPE                         */
         MVI   I00404,X'20'                                     02S0633
*                       I00401=LENGTH(MCCE);/* LENGTH                */
         MVC   I00401(4),@CF02504                               02S0634
*                       I00403=ADDR(GETMADDR);/* ADDR OF ADDR LIST   */
         LA    @06,GETMADDR                                     02S0635
         STCM  @06,7,I00403                                     02S0635
*                       I00405=SQA; /* SUBPOOL VALUE                 */
         MVI   I00405,X'F5'                                     02S0636
*                       GPR01P=ADDR(I004);/* REG1 POINTS TO LIST     */
         LA    GPR01P,I004                                      02S0637
*                       SVC(4);     /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                02S0638
*                       RESPECIFY                               02S0639
*                        (GPR01P) UNRESTRICTED;                 02S0639
*                     END;          /* GETMAIN (EC) LV(LENGTH(MCCE))
*                                      A(GETMADDR) SP(SQA) GET  02S0640
*                                      STORAGE FOR A NEW MCCE        */
*                     IF RETCOD15^=0 THEN                       02S0641
         SLR   @14,@14                                          02S0641
         CR    RETCOD15,@14                                     02S0641
         BE    @RF00641                                         02S0641
*                       DO;                                     02S0642
*                                                               02S0642
*                         /*******************************************/
*                         /*                                         */
*                         /* IF A NEW MCCE CANNOT BE GOTTEN, THE MC  */
*                         /* ROUTING FACILITY MUST TERMINATE SINCE   */
*                         /* THERE IS NOT ENOUGH SQA TO KEEP IT      */
*                         /* ALIVE. THIS TERMINATION PHASE IS        */
*                         /* ACCOMPLISHED BY SCHEDULING SRB ROUTINE  */
*                         /* AHLMCPST TO POST ALL APPLICATIONS TO    */
*                         /* TERMINATE AND FREE THE ROUTING TABLES.  */
*                         /*                                         */
*                         /*******************************************/
*                                                               02S0643
*                         MCHACT='0'B;/* DISABLE MC ROUTING          */
         L     @06,MCHEADPT                                     02S0643
         NI    MCHACT(@06),B'01111111'                          02S0643
*                         RFY                                   02S0644
*                           SRBPTR RSTD;                        02S0644
*                         SRBPTR=ADDR(MCCESRB);                 02S0645
         L     SRBPTR,MCCEPTR                                   02S0645
         LA    SRBPTR,MCCESRB(,SRBPTR)                          02S0645
*                         SRBEP=ADDR(AHLMCPST);/* CHANGE THE EP TO
*                                      REFERENCE AHLMCPST            */
         LA    @06,AHLMCPST                                     02S0646
         ST    @06,SRBEP(,SRBPTR)                               02S0646
*                         RFY                                   02S0647
*                           SRBPTR UNRSTD;                      02S0647
*                         NEWMCCE=0;/* INDICATE THAT THERE IS NO NEW
*                                      MCCE                          */
         ST    @14,NEWMCCE                                      02S0648
*                         CALL CSDMCCE;/* CALL SUBROUTINE TO SWAP IN
*                                      NEW MCCE ADRESS AND SCHEDULE
*                                      THE SRB IN THE OLD MCCE       */
         BAL   @14,CSDMCCE                                      02S0649
*                         DO;       /* WAIT ECB(MCCEECB)             */
*                           RESPECIFY                           02S0651
*                            (GPR00P,                           02S0651
*                             GPR01P) RESTRICTED;               02S0651
*                           GPR00P=1;/* LOAD WAIT COUNT              */
         LA    GPR00P,1                                         02S0652
*                           GPR01P=ADDR(MCCEECB);/* ADDRESS OF ECB   */
         L     GPR01P,MCCEPTR                                   02S0653
         LA    GPR01P,MCCEECB(,GPR01P)                          02S0653
*                           SVC(1); /* WAIT SVC                      */
         SVC   1                                                02S0654
*                           RESPECIFY                           02S0655
*                            (GPR00P,                           02S0655
*                             GPR01P) UNRESTRICTED;             02S0655
*                         END;      /* WAIT ECB(MCCEECB) WAIT UNTIL
*                                      AHLMCPST COMPLETES            */
*                                                               02S0656
*                         /*******************************************/
*                         /*                                         */
*                         /* FREE THE OLD MCCE                       */
*                         /*                                         */
*                         /*******************************************/
*                                                               02S0657
*                         DO;       /* FREEMAIN (E) LV(LENGTH(MCCE))
*                                      A(MCCEPTR) SP(SQA)            */
*                           RESPECIFY                           02S0658
*                            (GPR01P) RESTRICTED;               02S0658
*                           I005=I005&&I005;/* INIT LIST             */
         XC    I005(10),I005                                    02S0659
*                           I00505='00'X;/* SET TYPE                 */
         MVI   I00505,X'00'                                     02S0660
*                           I00502=LENGTH(MCCE);/* LENGTH            */
         MVC   I00502(3),@CF02504+1                             02S0661
*                           I00504=ADDR(MCCEPTR);/* ADDR OF ADDR LIST*/
         LA    @06,MCCEPTR                                      02S0662
         STCM  @06,7,I00504                                     02S0662
*                           I00506=SQA;/* SUBPOOL VALUE              */
         MVI   I00506,X'F5'                                     02S0663
*                           GPR01P=ADDR(I005);/* REG1 POINTS TO LIST */
         LA    GPR01P,I005                                      02S0664
*                           SVC(5); /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                02S0665
*                           RESPECIFY                           02S0666
*                            (GPR01P) UNRESTRICTED;             02S0666
*                         END;      /* FREEMAIN (E) LV(LENGTH(MCCE))
*                                      A(MCCEPTR) SP(SQA)            */
*                                                               02S0667
*                         /*******************************************/
*                         /*                                         */
*                         /* PGFREE AHLSETD SINCE IT IS NO LONGER    */
*                         /* NEEDED                                  */
*                         /*                                         */
*                         /*******************************************/
*                                                               02S0668
*                         DO;       /* PGFREE(R) A(SETDPTR)          */
*                           RESPECIFY                           02S0669
*                            (GPR00P,                           02S0669
*                             GPR01P) RESTRICTED;               02S0669
*                           GPR00P=0;/* INDICATE NO PAGE ECB         */
         SLR   GPR00P,GPR00P                                    02S0670
*                           GPR01P=ADDR(SETDPTR);/* PAGE ADDR        */
         L     @06,MCHEADPT                                     02S0671
         L     @06,MCHSETD(,@06)                                02S0671
         LR    GPR01P,@06                                       02S0671
*                           RESPECIFY                           02S0672
*                             GPR15P RESTRICTED;                02S0672
*                           GPR15P=ADDR(SETDPTR)+1;/* VSL ADDR  02S0673
*                                      OMITTED                       */
         AL    @06,@CF00145                                     02S0673
         LR    GPR15P,@06                                       02S0673
*                           GPR01P=GPR01P×'20000000'X;/* R, PGFREE &
*                                      RELEASE FLAG                  */
         O     GPR01P,@CF02311                                  02S0674
*                           SVC(113);/* ISSUE PGFREE SVC             */
         SVC   113                                              02S0675
*                           RESPECIFY                           02S0676
*                            (GPR00P,                           02S0676
*                             GPR01P,                           02S0676
*                             GPR15P) UNRESTRICTED;             02S0676
*                         END;      /* PGFREE(R) A(SETDPTR)          */
*                         MCHCTL=0; /* CLEAR THE CLASS MASK SINCE
*                                      THERE ARE NO MORE ACTIVE 02S0678
*                                      CLASSES                       */
         L     @06,MCHEADPT                                     02S0678
         SLR   @15,@15                                          02S0678
         ST    @15,MCHCTL(,@06)                                 02S0678
*                         CALL CR8SET;/* CLEAR CR 8 ON ALL CPUS      */
         BAL   @14,CR8SET                                       02S0679
*                         GO TO AHLFREE3;/* GO FREE THE MCQE AND ITS
*                                      ASSOCIATED ELEMENTS           */
         B     AHLFREE3                                         02S0680
*                       END;        /* END OF TERMINATION PHASE PATH */
*                                                               02S0682
*                     /***********************************************/
*                     /*                                             */
*                     /* IF MCCE HAS BEEN OBTAINED, CALL INITMCCE    */
*                     /* SUBROUTINE TO INITIALIZE IT.                */
*                     /*                                             */
*                     /***********************************************/
*                                                               02S0682
*                     ELSE                                      02S0682
*                       DO;                                     02S0682
@RF00641 DS    0H                                               02S0683
*                         CALL INITMCCE;                        02S0683
         BAL   @14,INITMCCE                                     02S0683
*                         NEWMCCE=GETMADDR;/* SAVE THIS NEW MCCE
*                                      ADDRESS                       */
         L     @06,GETMADDR                                     02S0684
         ST    @06,NEWMCCE                                      02S0684
*                       END;                                    02S0685
*                   END;            /* END OF NEW MCCE PATH          */
*                                                               02S0686
*                 /***************************************************/
*                 /*                                                 */
*                 /* THE OLD MCCE (POINTED TO BE MCCEPTR) HAS BEEN   */
*                 /* SET UP FOR TABLE FREEING PROCESSING BY AHLTFREE,*/
*                 /* AND THE NEW MCCE (POINTED TO BY NEWMCCE) HAS    */
*                 /* BEEN INITIALIZED TO REFLECT THE NEW ROUTING     */
*                 /* SCHEME. PROCESSING IS COMPLETED BY CALLING      */
*                 /* SUBROUTINE CSDMCCE, CREATING A NEW CONTROL      */
*                 /* REGISTER MASK FOR ALL CPUS IF NECESSARY, AND    */
*                 /* FREEING THE OLD MCCE.                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0687
*                 CALL CSDMCCE;     /* CALL SUBROUTINE TO SWAP IN THE
*                                      MCCE POINTED TO BY NEWMCCE TO
*                                      REPLACE THE CURRENT MCCE. THE
*                                      SUBROUTINE WILL ALSO CAUSE THE
*                                      SRB IN THE OLD MCCE TO BE
*                                      SCHEDULED                     */
*                                                               02S0687
@RC00620 BAL   @14,CSDMCCE                                      02S0687
*                 /***************************************************/
*                 /*                                                 */
*                 /* WAIT UNTIL AHLTFREE COMPLETES                   */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0688
*                 DO;               /* WAIT ECB(MCCEECB)             */
*                   RESPECIFY                                   02S0689
*                    (GPR00P,                                   02S0689
*                     GPR01P) RESTRICTED;                       02S0689
*                   GPR00P=1;       /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                         02S0690
*                   GPR01P=ADDR(MCCEECB);/* ADDRESS OF ECB           */
         L     GPR01P,MCCEPTR                                   02S0691
         LA    GPR01P,MCCEECB(,GPR01P)                          02S0691
*                   SVC(1);         /* WAIT SVC                      */
         SVC   1                                                02S0692
*                   RESPECIFY                                   02S0693
*                    (GPR00P,                                   02S0693
*                     GPR01P) UNRESTRICTED;                     02S0693
*                 END;              /* WAIT ECB(MCCEECB)             */
*                 MCHCTL=0;         /* CLEAR THE CONTROL REGISTER
*                                      MASK TO CREATE A CLEAN BASE TO
*                                      CREATE THE NEW MASK           */
*                                                               02S0695
         SLR   @06,@06                                          02S0695
         L     @15,MCHEADPT                                     02S0695
         ST    @06,MCHCTL(,@15)                                 02S0695
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF THE TABLES HAVE BEEN REMOVED, AHLSETD MUST BE*/
*                 /* FREED                                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0696
*                 IF NEWMCCE=0 THEN                             02S0696
         C     @06,NEWMCCE                                      02S0696
         BNE   @RF00696                                         02S0696
*                   DO;             /* PGFREE(R) A(SETDPTR)          */
*                     RESPECIFY                                 02S0698
*                      (GPR00P,                                 02S0698
*                       GPR01P) RESTRICTED;                     02S0698
*                     GPR00P=0;     /* INDICATE NO PAGE ECB          */
         SLR   GPR00P,GPR00P                                    02S0699
*                     GPR01P=ADDR(SETDPTR);/* PAGE ADDR              */
         L     @06,MCHSETD(,@15)                                02S0700
         LR    GPR01P,@06                                       02S0700
*                     RESPECIFY                                 02S0701
*                       GPR15P RESTRICTED;                      02S0701
*                     GPR15P=ADDR(SETDPTR)+1;/* VSL ADDR OMITTED     */
         AL    @06,@CF00145                                     02S0702
         LR    GPR15P,@06                                       02S0702
*                     GPR01P=GPR01P×'20000000'X;/* R, PGFREE &  02S0703
*                                      RELEASE FLAG                  */
         O     GPR01P,@CF02311                                  02S0703
*                     SVC(113);     /* ISSUE PGFREE SVC              */
         SVC   113                                              02S0704
*                     RESPECIFY                                 02S0705
*                      (GPR00P,                                 02S0705
*                       GPR01P,                                 02S0705
*                       GPR15P) UNRESTRICTED;                   02S0705
*                   END;            /* PGFREE(R) A(SETDPTR)          */
*                                                               02S0706
*                 /***************************************************/
*                 /*                                                 */
*                 /* OTHERWISE, A NEW CLASS MASK MUST BE CREATED BY  */
*                 /* INVESTIGATING ALL MCQES ON THE CHAIN.           */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0707
*                 ELSE                                          02S0707
*                   DO;                                         02S0707
         B     @RC00696                                         02S0707
@RF00696 DS    0H                                               02S0708
*                     RFY                                       02S0708
*                       MCCE BASED(NEWMCCE);                    02S0708
*                     MCQEPTR=MCCEQEA;/* PICK UP FIRST MCQE ON CHAIN */
         L     @06,NEWMCCE                                      02S0709
         L     MCQEPTR,MCCEQEA(,@06)                            02S0709
*                     DO WHILE(MCQEPTR^=0);/* PROCESS EVERY MCQE ON
*                                      CHAIN                         */
         B     @DE00710                                         02S0710
@DL00710 DS    0H                                               02S0711
*                       IF MCQEACT='1'B THEN                    02S0711
         TM    MCQEACT(MCQEPTR),B'10000000'                     02S0711
         BNO   @RF00711                                         02S0711
*                         CALL CR8MASK;/* FOR EVERY ACTIVE MCQE,
*                                      SUBROUTINE CR8MASK IS CALLED
*                                      TO CREATE A NEW MASK          */
         BAL   @14,CR8MASK                                      02S0712
*                       MCQEPTR=MCQEMCQE;/* INCREMENT TO NEXT MCQE ON
*                                      CHAIN                         */
@RF00711 L     MCQEPTR,MCQEMCQE(,MCQEPTR)                       02S0713
*                     END;          /* LOOP THROUGH ALL MCQES ON
*                                      CHAIN                         */
@DE00710 LTR   MCQEPTR,MCQEPTR                                  02S0714
         BNZ   @DL00710                                         02S0714
*                   END;            /* END OF MASK-CREATION PATH     */
*                 CALL CR8SET;      /* CALL SUBROUTINE TO SET THIS
*                                      NEW CLASS MASK ON ALL CPUS CR
*                                      8                             */
*                                                               02S0716
@RC00696 BAL   @14,CR8SET                                       02S0716
*                 /***************************************************/
*                 /*                                                 */
*                 /* FREE THE OLD MCCE                               */
*                 /*                                                 */
*                 /***************************************************/
*                                                               02S0717
*                 RFY                                           02S0717
*                   MCCE BASED(MCCEPTR);                        02S0717
*                 DO;               /* FREEMAIN (E) LV(LENGTH(MCCE))
*                                      A(MCCEPTR) SP(SQA)            */
*                   RESPECIFY                                   02S0719
*                    (GPR01P) RESTRICTED;                       02S0719
*                   I005=I005&&I005;/* INIT LIST                     */
         XC    I005(10),I005                                    02S0720
*                   I00505='00'X;   /* SET TYPE                      */
         MVI   I00505,X'00'                                     02S0721
*                   I00502=LENGTH(MCCE);/* LENGTH                    */
         MVC   I00502(3),@CF02504+1                             02S0722
*                   I00504=ADDR(MCCEPTR);/* ADDR OF ADDR LIST        */
         LA    @06,MCCEPTR                                      02S0723
         STCM  @06,7,I00504                                     02S0723
*                   I00506=SQA;     /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                     02S0724
*                   GPR01P=ADDR(I005);/* REG1 POINTS TO LIST         */
         LA    GPR01P,I005                                      02S0725
*                   SVC(5);         /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                02S0726
*                   RESPECIFY                                   02S0727
*                    (GPR01P) UNRESTRICTED;                     02S0727
*                 END;              /* FREEMAIN (E) LV(LENGTH(MCCE))
*                                      A(MCCEPTR) SP(SQA)            */
*               END;                /* END OF NON-ZERO MCCE PATH     */
*             RFY                                               02S0730
*               MCCE BASED(MCHCUR);                             02S0730
@RC00460 DS    0H                                               02S0731
*           END;                                                01S0731
*                                                               01S0732
*         /***********************************************************/
*         /*                                                         */
*         /* THE BITS THAT WERE CHECKED ABOVE (ADD,ACTIVATE, AND     */
*         /* FREE) ARE THE ONLY VALID FLAGS TO BE SET UPON ENTRANCE  */
*         /* TO AHLSETEV. THE ONLY OTHER VALID OPTION IS THE INIT    */
*         /* FUNCTION, INDICATED BY A ZERO OPTION BYTE. IN THIS CASE,*/
*         /* SUBROUTINE GETMCQE IS CALLED. ANY OTHER BIT SETTING IN  */
*         /* THE FLAG BYTE IS INVALID, AND THE CALLER IS ABENDED.    */
*         /*                                                         */
*         /***********************************************************/
*                                                               01S0732
*         ELSE                                                  01S0732
*           IF SETOPTS=0 THEN                                   01S0732
         B     @RC00458                                         01S0732
@RF00458 L     @06,PLISTAD                                      01S0732
         CLI   SETOPTS(@06),0                                   01S0732
         BNE   @RF00732                                         01S0732
*             CALL GETMCQE;                                     01S0733
         BAL   @14,GETMCQE                                      01S0733
*           ELSE                                                01S0734
*             DO;                                               01S0734
         B     @RC00732                                         01S0734
@RF00732 DS    0H                                               01S0735
*               RFY                                             01S0735
*                 ABNDCODE RSTD;                                01S0735
*               ABNDCODE=BADOPT;    /* SET CORRECT ABEND CODE        */
         LA    ABNDCODE,4                                       01S0736
*               DO;                 /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                 RESPECIFY                                     01S0738
*                  (GPR01F) RESTRICTED;                         01S0738
*                 GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP CODE
*                                      IN BITS 8-19                  */
         L     GPR01F,@CF02503                                  01S0739
*                 GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS
*                                      FLAG                          */
         O     GPR01F,@CF02273                                  01S0740
*                 SVC(13);          /* ISSUE ABEND SVC               */
         SVC   13                                               01S0741
*                 RESPECIFY                                     01S0742
*                  (GPR01F) UNRESTRICTED;                       01S0742
*               END;                /* ABEND(SETCMPCD) DUMP SYSTEM   */
*               RFY                                             01S0744
*                 ABNDCODE UNRSTD;                              01S0744
*             END;                                              01S0745
*       END;                        /* END OF PATH WITH ADD FUNCTION
*                                      OFF                           */
*                                                               01S0746
@RC00732 DS    0H                                               01S0746
@RC00458 DS    0H                                               01S0747
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESSING IS COMPLETED. CLEAN UP AND RETURN                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0747
*                                                               02S0747
*   /*****************************************************************/
*   /*                                                               */
*   /* EXIT CODE. DEQ FROM THE RESOURCE, REESTABLISH THE CALLERS     */
*   /* ENVIRONMENT, REMOVE THE ESTAE, AND SET THE PROPER RETURN CODE */
*   /* BEFORE RETURNING TO THE CALLER. THE RETURN CODE HAS BEEN SET  */
*   /* IN FIELD RTRNCODE. THIS ROUTINE PLACES THAT VALUE IN THE      */
*   /* CALLERS SAVE AREA BEFORE RESTORING REGISTERS.                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0747
*AHLEXIT:                                                       02S0747
*                                                               02S0747
*   /*****************************************************************/
*   /*                                                               */
*   /* DEQ FROM RESOURCE                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0747
*   DO;                             /* DEQ (SETQNM,SETRNM,3,SYSTEMS)
*                                      RET(HAVE)                     */
@RF00456 DS    0H                                               02S0747
@RC00304 DS    0H                                               02S0747
AHLEXIT  DS    0H                                               02S0748
*     I048(1:20)=I048(1:20)&&I048(1:20);                        02S0748
         XC    I048(20),I048                                    02S0748
*     RFY                                                       02S0749
*       GPR01F RESTRICTED;                                      02S0749
*     I04804(1)='11000000'B;        /* LISTEND BYTE                  */
         MVI   I04804,B'11000000'                               02S0750
*     I04805(1)=3;                  /* SET LENGTH                    */
         MVI   I04805,X'03'                                     02S0751
*     I04806(1)='01001001'B;        /* OPTIONS                       */
         MVI   I04806,B'01001001'                               02S0752
*     I04807(1)=ADDR(SETQNM);       /* QNAME ADDRESS                 */
         LA    @06,@CC00164                                     02S0753
         ST    @06,I04807                                       02S0753
*     I04808(1)=ADDR(SETRNM);       /* RNAME ADDRESS                 */
         LA    @06,@CC00166                                     02S0754
         ST    @06,I04808                                       02S0754
*     GPR01F=ADDR(I04802);                                      02S0755
         LA    GPR01F,I04802                                    02S0755
*     SVC(48);                                                  02S0756
         SVC   48                                               02S0756
*     RFY                                                       02S0757
*       GPR01F UNRESTRICTED;                                    02S0757
*   END;                            /* DEQ (SETQNM,SETRNM,3,SYSTEMS)
*                                      RET(HAVE)                     */
*   RFY                                                         02S0759
*     TEMPREG RSTD;                                             02S0759
*                                                               02S0759
*   /*****************************************************************/
*   /*                                                               */
*   /* REESTABLISH THE CALLERS PROTECT KEY FROM WHERE IT WAS SAVED   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0760
*   DO;                             /* MODESET KEYADDR(HISKEY)  02S0760
*                                      WORKREG(TEMPREG)              */
*     TEMPREG=HISKEY;               /* GET KEY FORM SAVE LOCATION    */
         LR    TEMPREG,HISKEY                                   02S0761
*     SPKA(TEMPREG);                /* SET PSW KEY                   */
         SPKA  0(TEMPREG)                                       02S0762
*   END;                            /* MODESET KEYADDR(HISKEY)  02S0763
*                                      WORKREG(TEMPREG)              */
*   RFY                                                         02S0764
*     TEMPREG UNRSTD;                                           02S0764
*                                                               02S0764
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE TO PROBLEM STATE IF CALLER WAS ORIGINALLY IN THAT     */
*   /* STATE                                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0765
*   IF PROBSTAT='1'B THEN                                       02S0765
         TM    PROBSTAT,B'10000000'                             02S0765
         BNO   @RF00765                                         02S0765
*     DO;                           /* MODESET MODE(PROB)            */
*       I10701='00000000'B;         /* OR MASK                       */
         MVI   I10701,B'00000000'                               02S0767
*       I10702='00000000'B;         /* AND MASK                      */
         MVI   I10702,B'00000000'                               02S0768
*       I10703='00000000'B;         /* RESERVED                      */
         MVI   I10703,B'00000000'                               02S0769
*       I10704='00000100'B;                                     02S0770
         MVI   I10704,B'00000100'                               02S0770
*       RESPECIFY                                               02S0771
*         GPR01F RESTRICTED;                                    02S0771
*       GPR01F=I107;                /* MODESET PARMLIST              */
         L     GPR01F,I107                                      02S0772
*       SVC(107);                   /* ISSUE MODESET SVC             */
         SVC   107                                              02S0773
*       RESPECIFY                                               02S0774
*        (GPR01F) UNRESTRICTED;                                 02S0774
*     END;                          /* MODESET MODE(PROB)            */
*                                                               02S0775
*   /*****************************************************************/
*   /*                                                               */
*   /* REMOVE THE ESTAE THAT WAS ESTABLISHED ON ENTRY                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0776
*   GENERATE;                                                   02S0776
@RF00765 DS    0H                                               02S0776
          ESTAE 0
*   RFY                                                         02S0777
*     SAVEAREA RSTD;                                            02S0777
*AHLXIT2:                                                       02S0778
*   HISREGF=RTRNCODE;               /* MOVE RETURN CODE TO REG 15
*                                      SAVE AREA                     */
AHLXIT2  L     @08,HISSAVAD(,SAVEAREA)                          02S0778
         MVC   HISREGF(4,@08),RTRNCODE                          02S0778
*   HISREG0=RTRNMCQE;               /* RETURN THE MCQE ADDRESS TO
*                                      CALLER, IF IT WAS GOTTEN ON
*                                      THIS CALL. OTHERWISE, RTRNMCQE
*                                      WILL BE ZERO.                 */
         STCM  RTRNMCQE,15,HISREG0(@08)                         02S0779
*   RETURN;                         /* GO BACK TO THE CALLER OF 02S0780
*                                      AHLSETEV                      */
@EL00001 L     @13,4(,@13)                                      02S0780
@EF00001 L     @00,@SIZDATD                                     02S0780
         LR    @01,@09                                          02S0780
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  02S0780
         BR    @14                                              02S0780
*   RFY                                                         02S0781
*     SAVEAREA UNRSTD;                                          02S0781
*   GEN;                                                        02S0782
ESTAE2 ESTAE MF=L                                            ZM40016
*                                                               01S0783
*   /*****************************************************************/
*   /*                                                               */
*   /* SUBROUTINES                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0783
*GETMCQE:                                                       02S0783
*   PROC;                                                       02S0783
*                                                               02S0783
         B     @PB00002                                         02S0783
GETMCQE  STM   @14,@03,@SA00002                                 02S0783
         STM   @06,@09,@SA00002+24                              02S0783
         STM   @11,@12,@SA00002+40                              02S0783
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING SUBROUTINE IS CALLED TO LOCATE OR OBTAIN THE    */
*   /* MCQE ASSOCIATED WITH THE CALLER. THE ADDRESS OF THIS MCQE IS  */
*   /* RETURNED IN MCQEPTR, AND THE RETURN CODE IN RTRNCODE IS       */
*   /* UPDATED WITH THE PROPER RETURN CODE, IF NECESSARY. IF ALL GOES*/
*   /* WELL, RTRNCODE WILL REMAIN AS IS                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0784
*   IF PASSEDQE^=0 THEN                                         02S0784
         SLR   @08,@08                                          02S0784
         L     @06,PLISTAD                                      02S0784
         ICM   @15,15,PASSEDQE(@06)                             02S0784
         CR    @08,@15                                          02S0784
         BE    @RF00784                                         02S0784
*     DO;                                                       02S0785
*                                                               02S0785
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE CALLER OF AHLSETEV HAS SPECIFIED AN MCQE ADDRESS IN*/
*       /* HIS PARAMETER LIST, THE MCQE CHAIN IS SEARCHED FOR AN MCQE*/
*       /* THAT CONTAINS THE SAME NAME AS THE NAME SPECIFIED IN THE  */
*       /* PARAMETER LIST. IF THE NAME IS NOT FOUND ON THE CHAIN, AND*/
*       /* THE PASSED MCQE IS VALID, THE MC ROUTING FACILITY IS      */
*       /* ASSUMED TO HAVE TERMINATED.                               */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0786
*       RFY                                                     02S0786
*         MCCE BASED(MCHCUR);                                   02S0786
*       RFY                                                     02S0787
*         MCQE BASED(PASSEDQE);                                 02S0787
*       IF MCHCUR=0×MCCEQEA=0 THEN                              02S0788
         L     @06,MCHEADPT                                     02S0788
         L     @06,MCHCUR(,@06)                                 02S0788
         CR    @06,@08                                          02S0788
         BE    @RT00788                                         02S0788
         C     @08,MCCEQEA(,@06)                                02S0788
         BNE   @RF00788                                         02S0788
@RT00788 DS    0H                                               02S0789
*AHLGET01:                                                      02S0789
*         DO;                       /* IF THERE IS NO CHAIN,    02S0789
*                                      TERMINATION MUST HAVE    02S0789
*                                      OCCURRED, OR THE MCQE ADDRESS
*                                      IN THE PARAMETER LIST IS 02S0789
*                                      INVALID.                      */
AHLGET01 DS    0H                                               02S0790
*           IF MCQEIDEN=MCQETAG&MCQENAME=PLISTNAM THEN          02S0790
         L     @08,PLISTAD                                      02S0790
         ICM   @06,15,PASSEDQE(@08)                             02S0790
         CLC   MCQEIDEN(8,@06),@CC00170                         02S0790
         BNE   @RF00790                                         02S0790
         CLC   MCQENAME(8,@06),PLISTNAM(@08)                    02S0790
         BNE   @RF00790                                         02S0790
*             DO;                   /* IF THE PASSED MCQE IS VALID,
*                                      SET THE TERMINATION RETURN
*                                      CODE AND RETURN               */
*               RTRNCODE=TERMPHSE;                              02S0792
         MVC   RTRNCODE(4),@CF00097                             02S0792
*               RETURN;                                         02S0793
@EL00002 DS    0H                                               02S0793
@EF00002 DS    0H                                               02S0793
@ER00002 LM    @14,@03,@SA00002                                 02S0793
         LM    @06,@09,@SA00002+24                              02S0793
         LM    @11,@12,@SA00002+40                              02S0793
         BR    @14                                              02S0793
*             END;                                              02S0794
*           ELSE                                                02S0795
*AHLGET02:                                                      02S0795
*             DO;                   /* OTHERWISE, THE MCQE ADDRESS IS
*                                      INVALID. ABEND THE CALLER     */
@RF00790 DS    0H                                               02S0795
AHLGET02 DS    0H                                               02S0796
*               RFY                                             02S0796
*                 ABNDCODE RSTD;                                02S0796
*               ABNDCODE=INVALQE1;  /* SET THE PROPER INDICATION     */
         LA    ABNDCODE,8                                       02S0797
*               DO;                 /* ABEND(SETCMPCD) DUMP SYSTEM   */
*                 RESPECIFY                                     02S0799
*                  (GPR01F) RESTRICTED;                         02S0799
*                 GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP CODE
*                                      IN BITS 8-19                  */
         L     GPR01F,@CF02503                                  02S0800
*                 GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS
*                                      FLAG                          */
         O     GPR01F,@CF02273                                  02S0801
*                 SVC(13);          /* ISSUE ABEND SVC               */
         SVC   13                                               02S0802
*                 RESPECIFY                                     02S0803
*                  (GPR01F) UNRESTRICTED;                       02S0803
*               END;                /* ABEND(SETCMPCD) DUMP SYSTEM   */
*               RFY                                             02S0805
*                 ABNDCODE UNRSTD;                              02S0805
*             END;                                              02S0806
*         END;                      /* END OF NO MCQE CHAIN PATH     */
*                                                               02S0808
*       /*************************************************************/
*       /*                                                           */
*       /* SEARCH THE MCQE CHAIN FOR ONE WHICH CONTAINS THE SAME NAME*/
*       /* AS THE ONE IN THE PARAMETER LIST.                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0808
*       MCQEPTR=MCCEQEA;            /* LOAD FIRST MCQE ADDRESS       */
@RF00788 L     @08,MCHEADPT                                     02S0808
         L     @08,MCHCUR(,@08)                                 02S0808
         L     MCQEPTR,MCCEQEA(,@08)                            02S0808
*       RFY                                                     02S0809
*         MCQE BASED(MCQEPTR);                                  02S0809
*       DO WHILE(MCQEPTR^=0);       /* LOOP UNTIL END OF MCQE CHAIN  */
         B     @DE00810                                         02S0810
@DL00810 DS    0H                                               02S0811
*         IF MCQENAME=PLISTNAM THEN                             02S0811
         L     @08,PLISTAD                                      02S0811
         CLC   MCQENAME(8,MCQEPTR),PLISTNAM(@08)                02S0811
         BNE   @RF00811                                         02S0811
*           IF MCQEPTR=PASSEDQE THEN                            02S0812
         ICM   @06,15,PASSEDQE(@08)                             02S0812
         CR    MCQEPTR,@06                                      02S0812
         BE    @RT00812                                         02S0812
*             RETURN;               /* IF THE MCQE IS FOUND WITH THE
*                                      SAME NAME, AND THE ADDRESS IS
*                                      THE SAME AS THE ONE PASSED,
*                                      RETURN FROM THE SUBROUTINE.
*                                      THIS IS THE CORRECT MCQE.     */
*           ELSE                                                02S0814
*             GO TO AHLGET02;       /* IF THE NAME IS FOUND, AND THE
*                                      ADDRESS IS NOT THE SAME, ABEND
*                                      THE CALLER                    */
         B     AHLGET02                                         02S0814
*         MCQEPTR=MCQEMCQE;         /* POINT TO NEXT MCQE ON THE
*                                      CHAIN                         */
@RF00811 L     MCQEPTR,MCQEMCQE(,MCQEPTR)                       02S0815
*       END;                        /* LOOP THRU THE MCQE CHAIN      */
*                                                               02S0816
@DE00810 LTR   MCQEPTR,MCQEPTR                                  02S0816
         BNZ   @DL00810                                         02S0816
*       /*************************************************************/
*       /*                                                           */
*       /* FALL THROUGH TO THIS CODE INDICATES THAT THE MCQE IS NOT  */
*       /* ON THE MCQE CHAIN. TERMINATION IS ASSUMED TO HAVE         */
*       /* OCCURRED.                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0817
*       GO TO AHLGET01;             /* GO TREAT AS IF MCQE CHAIN DID
*                                      NOT EXIST                     */
         B     AHLGET01                                         02S0817
*     END;                          /* END OF PASSED MCQE PATH       */
*                                                               02S0819
*   /*****************************************************************/
*   /*                                                               */
*   /* MCQE ADDRESS IN THE PARAMETER LIST IS ZERO. ONE IS TO BE      */
*   /* OBTAINED FOR THIS CALLER. FIRST, HOWEVER, CHECK TO SEE IF     */
*   /* THERE ALREADY EXISTS ONE WITH THE SAME NAME. IF SO, ABEND THE */
*   /* CALLER. IF NOT, GET ONE FOR HIM AND INITIALIZE IT             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0819
*   IF MCHCUR=0 THEN                                            02S0819
@RF00784 L     @08,MCHEADPT                                     02S0819
         L     @08,MCHCUR(,@08)                                 02S0819
         LTR   @08,@08                                          02S0819
         BNZ   @RF00819                                         02S0819
*     DO;                                                       02S0820
*                                                               02S0820
*       /*************************************************************/
*       /*                                                           */
*       /* IF THERE IS NO MCCE, GET ONE AND INITIALIZE IT            */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0821
*       DO;                         /* GETMAIN (EC) LV(LENGTH(MCCE))
*                                      A(GETMADDR) SP(SQA)           */
*         RESPECIFY                                             02S0822
*          (GPR01P) RESTRICTED;                                 02S0822
*         I004=I004&&I004;          /* INIT LIST                     */
         XC    I004(10),I004                                    02S0823
*         I00404='20'X;             /* TYPE                          */
         MVI   I00404,X'20'                                     02S0824
*         I00401=LENGTH(MCCE);      /* LENGTH                        */
         MVC   I00401(4),@CF02504                               02S0825
*         I00403=ADDR(GETMADDR);    /* ADDR OF ADDR LIST             */
         LA    @08,GETMADDR                                     02S0826
         STCM  @08,7,I00403                                     02S0826
*         I00405=SQA;               /* SUBPOOL VALUE                 */
         MVI   I00405,X'F5'                                     02S0827
*         GPR01P=ADDR(I004);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                      02S0828
*         SVC(4);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                02S0829
*         RESPECIFY                                             02S0830
*          (GPR01P) UNRESTRICTED;                               02S0830
*       END;                        /* GETMAIN (EC) LV(LENGTH(MCCE))
*                                      A(GETMADDR) SP(SQA)           */
*       IF RETCOD15^=0 THEN                                     02S0832
         LTR   RETCOD15,RETCOD15                                02S0832
         BZ    @RF00832                                         02S0832
*         DO;                       /* IF IT CANT BE GOTTEN, INDICATE
*                                      THIS CONDITION VIA THE RETURN
*                                      CODE AND RETURN FROM THE 02S0833
*                                      SUBROUTINE                    */
*           RTRNCODE=INSUFSTG;                                  02S0834
         MVC   RTRNCODE(4),@CF00101                             02S0834
*           RETURN;                                             02S0835
         B     @EL00002                                         02S0835
*         END;                                                  02S0836
*       CALL INITMCCE;              /* OTHERWISE, CALL SUBROUTINE TO
*                                      INITIALIZE THE NEWLY OBTAINED
*                                      MCCE                          */
@RF00832 BAL   @14,INITMCCE                                     02S0837
*                                                               02S0838
*       /*************************************************************/
*       /*                                                           */
*       /* COMPLTE THE INITIALIZATION INVOLVED WITH A NEW MCCE BY    */
*       /* STORING ITS ADDRESS INTO THE MCHEAD, AND PGFIXING MODULE  */
*       /* AHLSETD. THIS MODULE PERFORMS THE DISABLE AND CHANGE      */
*       /* FUCTIONS OF THE SETEVENT SERVICE AND MUST BE FIXED WHILE  */
*       /* MC ROUTING IS ACTIVE. IT IS FIXED EACH TIME A NEW MCCE    */
*       /* REPLACES A ZERO ADDRESS IN THE MCHEAD, AND IS FREED EACH  */
*       /* TIME A ZERO IS STORED INTO THE MCHEAD AS THE MCCE ADDRESS.*/
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0838
*       MCHCUR=GETMADDR;            /* STORE MCCE ADDRESS INTO MCHEAD*/
*                                                               02S0838
         L     @08,MCHEADPT                                     02S0838
         L     @06,GETMADDR                                     02S0838
         ST    @06,MCHCUR(,@08)                                 02S0838
*       /*************************************************************/
*       /*                                                           */
*       /* PGFIX AHLSETD                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0839
*       SETDECB=0;                  /* CLEAR THE ECB                 */
         SLR   @06,@06                                          02S0839
         ST    @06,SETDECB                                      02S0839
*       DO;                         /* PGFIX (R) A(SETDPTR)     02S0840
*                                      ECB(SETDECB)                  */
*         RESPECIFY                                             02S0841
*          (GPR00P,                                             02S0841
*           GPR01P) RESTRICTED;                                 02S0841
*         GPR00P=ADDR(SETDECB);     /* ECB ADDR                      */
         LA    GPR00P,SETDECB                                   02S0842
*         GPR01P=ADDR(SETDPTR);     /* PAGE ADDR                     */
         L     @08,MCHSETD(,@08)                                02S0843
         LR    GPR01P,@08                                       02S0843
*         RESPECIFY                                             02S0844
*           GPR15P RESTRICTED;                                  02S0844
*         GPR15P=ADDR(SETDPTR)+1;   /* VSL ADDR OMITTED              */
         AL    @08,@CF00145                                     02S0845
         LR    GPR15P,@08                                       02S0845
*         GPR01P=GPR01P×'52000000'X;/* R, PGFIX, RELEASE & LONG FLAGS*/
         O     GPR01P,@CF02397                                  02S0846
*         SVC(113);                 /* ISSUE PGFIX SVC               */
         SVC   113                                              02S0847
*         RESPECIFY                                             02S0848
*          (GPR00P,                                             02S0848
*           GPR01P) UNRESTRICTED;                               02S0848
*         RESPECIFY                                             02S0849
*           GPR15P UNRESTRICTED;                                02S0849
*       END;                        /* PGFIX (R) A(SETDPTR)     02S0850
*                                      ECB(SETDECB)                  */
*                                                               02S0850
*       /*************************************************************/
*       /*                                                           */
*       /* WAIT FOR FIX TO COMPLETE                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0851
*       DO;                         /* WAIT (1) ECB(SETDECB)         */
*         RESPECIFY                                             02S0852
*          (GPR00P,                                             02S0852
*           GPR01P) RESTRICTED;                                 02S0852
*         GPR00P=1;                 /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                         02S0853
*         GPR01P=ADDR(SETDECB);     /* ADDRESS OF ECB                */
         LA    GPR01P,SETDECB                                   02S0854
*         SVC(1);                   /* WAIT SVC                      */
         SVC   1                                                02S0855
*         RESPECIFY                                             02S0856
*          (GPR00P,                                             02S0856
*           GPR01P) UNRESTRICTED;                               02S0856
*       END;                        /* WAIT (1) ECB(SETDECB)         */
*       LASTELM=0;                  /* INDICATE THAT NO MCQES EXIST  */
         SLR   LASTELM,LASTELM                                  02S0858
*     END;                          /* END OF ZERO MCCE PATH         */
*   ELSE                                                        02S0860
*     DO;                                                       02S0860
*                                                               02S0860
         B     @RC00819                                         02S0860
@RF00819 DS    0H                                               02S0861
*       /*************************************************************/
*       /*                                                           */
*       /* IF AN MCCE DOES EXIST, SEARCH THE MCQE CHAIN FOR A        */
*       /* MATCHING NAME TO THAT IN THE PARAMETER LIST               */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0861
*       MCQEPTR=MCCEQEA;            /* LOAD FIRST MCQE ADDRESS       */
         L     @08,MCHEADPT                                     02S0861
         L     @08,MCHCUR(,@08)                                 02S0861
         L     MCQEPTR,MCCEQEA(,@08)                            02S0861
*       DO WHILE(MCQEPTR^=0);       /* SEARCH CHAIN UNTIL END        */
         B     @DE00862                                         02S0862
@DL00862 DS    0H                                               02S0863
*         IF MCQENAME=PLISTNAM THEN                             02S0863
         L     @08,PLISTAD                                      02S0863
         CLC   MCQENAME(8,MCQEPTR),PLISTNAM(@08)                02S0863
         BNE   @RF00863                                         02S0863
*           DO;                     /* IF WE FIND ONE WITH THE SAME
*                                      NAME, ABEND THE CALLER        */
*             RFY                                               02S0865
*               ABNDCODE RSTD;                                  02S0865
*             ABNDCODE=INVALQE1;    /* INDICATE INVALID MCQE ADDRESS */
         LA    ABNDCODE,8                                       02S0866
*             DO;                   /* ABEND(SETCMPCD) DUMP SYSTEM   */
*               RESPECIFY                                       02S0868
*                (GPR01F) RESTRICTED;                           02S0868
*               GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP CODE IN
*                                      BITS 8-19                     */
         L     GPR01F,@CF02503                                  02S0869
*               GPR01F=GPR01F×'80000000'X;/* DUMP/STEP/DUMPOPTS FLAG */
         O     GPR01F,@CF02273                                  02S0870
*               SVC(13);            /* ISSUE ABEND SVC               */
         SVC   13                                               02S0871
*               RESPECIFY                                       02S0872
*                (GPR01F) UNRESTRICTED;                         02S0872
*             END;                  /* ABEND(SETCMPCD) DUMP SYSTEM   */
*             RFY                                               02S0874
*               ABNDCODE UNRSTD;                                02S0874
*           END;                                                02S0875
*         LASTELM=MCQEPTR;          /* THIS ONE BECOMES LAST ONE     */
@RF00863 LR    LASTELM,MCQEPTR                                  02S0876
*         MCQEPTR=MCQEMCQE;         /* POINT TO NEXT MCQE ON CHAIN   */
         L     MCQEPTR,MCQEMCQE(,MCQEPTR)                       02S0877
*       END;                        /* END OF MCQE CHAIN SEARCH      */
@DE00862 LTR   MCQEPTR,MCQEPTR                                  02S0878
         BNZ   @DL00862                                         02S0878
*     END;                          /* END OF NON ZERO MCCE PATH     */
*                                                               02S0880
*   /*****************************************************************/
*   /*                                                               */
*   /* MCQE IS TO BE OBTAINED FOR THIS APPLICATION                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0880
*   DO;                             /* GETMAIN (EC) LV(LENGTH(MCQE))
*                                      A(GETMADDR) SP(SQA)           */
@RC00819 DS    0H                                               02S0881
*     RESPECIFY                                                 02S0881
*      (GPR01P) RESTRICTED;                                     02S0881
*     I004=I004&&I004;              /* INIT LIST                     */
         XC    I004(10),I004                                    02S0882
*     I00404='20'X;                 /* TYPE                          */
         MVI   I00404,X'20'                                     02S0883
*     I00401=LENGTH(MCQE);          /* LENGTH                        */
         MVC   I00401(4),@CF02504                               02S0884
*     I00403=ADDR(GETMADDR);        /* ADDR OF ADDR LIST             */
         LA    @08,GETMADDR                                     02S0885
         STCM  @08,7,I00403                                     02S0885
*     I00405=SQA;                   /* SUBPOOL VALUE                 */
         MVI   I00405,X'F5'                                     02S0886
*     GPR01P=ADDR(I004);            /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                      02S0887
*     SVC(4);                       /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                02S0888
*     RESPECIFY                                                 02S0889
*      (GPR01P) UNRESTRICTED;                                   02S0889
*   END;                            /* GETMAIN (EC) LV(LENGTH(MCQE))
*                                      A(GETMADDR) SP(SQA)           */
*   IF RETCOD15^=0 THEN                                         02S0891
         LTR   RETCOD15,RETCOD15                                02S0891
         BZ    @RF00891                                         02S0891
*     DO;                           /* IF IT CANT BE OBTAINED,  02S0892
*                                      INDICATE THIS CONDITION WITH A
*                                      RETURN CODE                   */
*       RTRNCODE=INSUFSTG;                                      02S0893
         MVC   RTRNCODE(4),@CF00101                             02S0893
*       RETURN;                     /* LEAVE SUBROUTINE              */
         B     @EL00002                                         02S0894
*     END;                                                      02S0895
*                                                               02S0895
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE MCQE FOR THIS APPLICATION                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0896
*   MCQEPTR=GETMADDR;               /* SAVE GOTTEN STORAGE ADDRESS   */
@RF00891 L     MCQEPTR,GETMADDR                                 02S0896
*   RTRNMCQE=MCQEPTR;               /* SAVE MCQE ADDRESS TO RETURN IT
*                                      TO CALLER                     */
         LR    RTRNMCQE,MCQEPTR                                 02S0897
*   MCQE(1:LENGTH(MCQE))=''B;       /* ZERO OUT ENTIRE MCQE          */
         XC    MCQE(88,MCQEPTR),MCQE(MCQEPTR)                   02S0898
*   MCQEIDEN=MCQETAG;               /* FILL IN TABLE IDENTIFIER      */
         MVC   MCQEIDEN(8,MCQEPTR),@CC00170                     02S0899
*   MCQENAME=PLISTNAM;              /* MOVE IN NAME FROM THE    02S0900
*                                      PARAMETER LIST                */
         L     @08,PLISTAD                                      02S0900
         MVC   MCQENAME(8,MCQEPTR),PLISTNAM(@08)                02S0900
*   MCQEASCB=PSAAOLD;               /* MOVE IN THIS ASCB ADDRESS     */
         L     @08,PSAAOLD                                      02S0901
         ST    @08,MCQEASCB(,MCQEPTR)                           02S0901
*   RFY                                                         02S0902
*     SRBPTR RSTD;                                              02S0902
*   SRBPTR=ADDR(MCQESRB);           /* SET UP TO INITIALIZE ITS SRB  */
         LA    SRBPTR,MCQESRB(,MCQEPTR)                         02S0903
*   SRBEP=ADDR(AHLMCQP);            /* SET EP TO THE SRB ROUTINE
*                                      WHICH WILL POST THE      02S0904
*                                      TERMINATION ECB               */
         LA    @06,AHLMCQP                                      02S0904
         ST    @06,SRBEP(,SRBPTR)                               02S0904
*   SRBPARM=ADDR(MCQE);             /* SET THE PARAMETER TO POINT TO
*                                      THE MCQE ITSELF               */
         ST    MCQEPTR,SRBPARM(,SRBPTR)                         02S0905
*   SRBASCB=PSAAOLD;                /* LET IT RUN IN THIS MEMORY WHEN
*                                      IT GETS SCHEDULED.            */
         ST    @08,SRBASCB(,SRBPTR)                             02S0906
*   RFY                                                         02S0907
*     SRBPTR UNRSTD;                                            02S0907
*   IF LASTELM=0 THEN                                           02S0908
         LTR   LASTELM,LASTELM                                  02S0908
         BNZ   @RF00908                                         02S0908
*     MCCEQEA=ADDR(MCQE);           /* IF THIS IS THE ONLY MCQE,
*                                      STORE ITS ADDRESS INTO MCCE   */
         L     @08,MCHEADPT                                     02S0909
         L     @08,MCHCUR(,@08)                                 02S0909
         ST    MCQEPTR,MCCEQEA(,@08)                            02S0909
*   ELSE                                                        02S0910
*     LASTELM->MCQEMCQE=ADDR(MCQE); /* OTHERWISE, PLACE IT ON END OF
*                                      MCQE CHAIN                    */
         B     @RC00908                                         02S0910
@RF00908 ST    MCQEPTR,MCQEMCQE(,LASTELM)                       02S0910
*   RETURN;                                                     02S0911
         B     @EL00002                                         02S0911
*   END GETMCQE;                                                02S0912
         B     @EL00002                                         02S0912
*INITMCCE:                                                      02S0913
*   PROC;                                                       02S0913
*                                                               02S0913
INITMCCE STM   @14,@12,12(@13)                                  02S0913
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE IS CALLED TO INITIALIZE THE MCCE POINTED TO BY*/
*   /* GETMADDR.                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0914
*   RFY                                                         02S0914
*     MCCE BASED(GETMADDR);                                     02S0914
*   MCCE(1:LENGTH(MCCE))=''B;       /* CLEAR MCCE                    */
         L     @10,GETMADDR                                     02S0915
         XC    MCCE(88,@10),MCCE(@10)                           02S0915
*   MCCEIDEN=MCCETAG;               /* PLACE TABLE IDENTIFIER INTO
*                                      MCCE                          */
         MVC   MCCEIDEN(8,@10),@CC00168                         02S0916
*   RFY                                                         02S0917
*     SRBPTR RSTD;                                              02S0917
*   SRBPTR=ADDR(MCCESRB);           /* SET UP TO INITIALIZE ITS SRB  */
         LA    SRBPTR,MCCESRB(,@10)                             02S0918
*   SRBEP=ADDR(AHLTFREE);           /* POINT SRB TO THE TABLE FREEING
*                                      ROUTINE, AHLTFREE             */
         LA    @08,AHLTFREE                                     02S0919
         ST    @08,SRBEP(,SRBPTR)                               02S0919
*   SRBPARM=ADDR(MCCE);             /* POINT PARAMETER TO MCCE ITSELF*/
         ST    @10,SRBPARM(,SRBPTR)                             02S0920
*   SRBASCB=PSAAOLD;                /* LET IT RUN IN THIS MEMORY WHEN
*                                      SCHEDULED                     */
         L     @08,PSAAOLD                                      02S0921
         ST    @08,SRBASCB(,SRBPTR)                             02S0921
*   RFY                                                         02S0922
*     SRBPTR UNRSTD;                                            02S0922
*   IF MCHCUR^=0 THEN                                           02S0923
         L     @08,MCHEADPT                                     02S0923
         L     @08,MCHCUR(,@08)                                 02S0923
         LTR   @08,@08                                          02S0923
         BZ    @RF00923                                         02S0923
*     DO;                           /* SUBROUTINE IS DONE IF THERE IS
*                                      NO CURRENT MCCE. IF THERE IS
*                                      ONE, THE MCQE, MCED AND MCCD
*                                      ADDRESSES ARE COPIED INTO THIS
*                                      NEW ONE                       */
*       MCCEQEA=MCHCUR->MCCEQEA;    /* COPY MCQE ADDRESS FROM OLD    */
         L     @06,MCCEQEA(,@08)                                02S0925
         ST    @06,MCCEQEA(,@10)                                02S0925
*       MCCEEDA=MCHCUR->MCCEEDA;    /* COPY EVENT DIRECTORY FROM OLD */
         L     @06,MCCEEDA(,@08)                                02S0926
         ST    @06,MCCEEDA(,@10)                                02S0926
*       MCCECDA=MCHCUR->MCCECDA;    /* COPY CLASS DIRECTORY FROM OLD */
         L     @06,MCCECDA(,@08)                                02S0927
         ST    @06,MCCECDA(,@10)                                02S0927
*       MCCEMCCE=MCHCUR;            /* SAVE THE OLD MCCE ADDRESS IN
*                                      THIS NEW MCCE FOR DIAGNOSTIC
*                                      PURPOSES.                     */
         ST    @08,MCCEMCCE(,@10)                               02S0928
*     END;                                                      02S0929
*   END INITMCCE;                                               02S0930
@EL00003 DS    0H                                               02S0930
@EF00003 DS    0H                                               02S0930
@ER00003 LM    @14,@12,12(@13)                                  02S0930
         BR    @14                                              02S0930
*CR8MASK:                                                       02S0931
*   PROC;                                                       02S0931
*                                                               02S0931
CR8MASK  STM   @14,@12,12(@13)                                  02S0931
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE IS CALLED TO UPDATE THE CONTROL REGISTER MASK */
*   /* AT MCHCTL TO REFLECT THE CLASSES REPRESENTED BY THE MCQE      */
*   /* POINTED TO BY MCQEPTR. FIRST, THE CLASS IN EACH MCEE OFF THIS */
*   /* MCQE IS CONVERTED INTO AN INDEX INTO A MASK TABLE. THIS       */
*   /* INDEXED MASK IS THEN ORED WITH MCHCTL, UPDATING IT TO REFLECT */
*   /* THE CLASS. THE PROCESSING IS THEN REPEATED FOR EACH MCCLE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0932
*   ELEMAD=MCQEMCEE;                /* PICK UP THE FIRST MCEE ADDRESS*/
         L     @10,MCQEMCEE(,MCQEPTR)                           02S0932
         ST    @10,ELEMAD                                       02S0932
*   RFY                                                         02S0933
*     MCEE BASED(ELEMAD);                                       02S0933
*   DO WHILE(ELEMAD^=0);            /* PROCESS ALL OF THE MCEES, IF
*                                      ANY EXIST                     */
         B     @DE00934                                         02S0934
@DL00934 DS    0H                                               02S0935
*     INDEX=(MCEECLS/16)+1;         /* CREATE INDEX INTO MASK TABLE  */
         L     @10,ELEMAD                                       02S0935
         SLR   INDEX,INDEX                                      02S0935
         IC    INDEX,MCEECLS(,@10)                              02S0935
         SRL   INDEX,4                                          02S0935
         AL    INDEX,@CF00145                                   02S0935
*     MCHCTL=MCHCTL×MASKTAB(INDEX); /* OR MASK TO TURN ON THIS CLASS
*                                      IF NOT ALREADY ON IN MCHCTL   */
         L     @08,MCHEADPT                                     02S0936
         LR    @06,INDEX                                        02S0936
         ALR   @06,@06                                          02S0936
         LH    @06,MASKTAB-2(@06)                               02S0936
         N     @06,@CF02511                                     02S0936
         O     @06,MCHCTL(,@08)                                 02S0936
         ST    @06,MCHCTL(,@08)                                 02S0936
*     ELEMAD=MCEEMCQL;              /* POINT TO NEXT MCEE ON CHAIN   */
         L     @10,MCEEMCQL(,@10)                               02S0937
         ST    @10,ELEMAD                                       02S0937
*   END;                            /* LOOP THRU ALL MCEES OFF MCQE  */
*                                                               02S0938
@DE00934 L     @10,ELEMAD                                       02S0938
         LTR   @10,@10                                          02S0938
         BNZ   @DL00934                                         02S0938
*   /*****************************************************************/
*   /*                                                               */
*   /* NEXT PROCESS THE MCCLES                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0939
*   ELEMAD=MCQEMCCL;                /* PICK UP FIRST MCCLE ADDRESS   */
         L     @10,MCQEMCCL(,MCQEPTR)                           02S0939
         ST    @10,ELEMAD                                       02S0939
*   RFY                                                         02S0940
*     MCCLE BASED(ELEMAD);                                      02S0940
*   DO WHILE(ELEMAD^=0);            /* PROCESS ALL MCCLES, IF ANY    */
         B     @DE00941                                         02S0941
@DL00941 DS    0H                                               02S0942
*     INDEX=(MCCLCLS/16)+1;         /* BUILD MASK TABLE INDEX        */
         L     @10,ELEMAD                                       02S0942
         SLR   INDEX,INDEX                                      02S0942
         IC    INDEX,MCCLCLS(,@10)                              02S0942
         SRL   INDEX,4                                          02S0942
         AL    INDEX,@CF00145                                   02S0942
*     MCHCTL=MCHCTL×MASKTAB(INDEX); /* UPDATE MASK TO REFLECT THIS
*                                      CLASS                         */
         L     @08,MCHEADPT                                     02S0943
         LR    @06,INDEX                                        02S0943
         ALR   @06,@06                                          02S0943
         LH    @06,MASKTAB-2(@06)                               02S0943
         N     @06,@CF02511                                     02S0943
         O     @06,MCHCTL(,@08)                                 02S0943
         ST    @06,MCHCTL(,@08)                                 02S0943
*     ELEMAD=MCCLMCQL;              /* POINT TO NEXT MCCLE OFF MCQE  */
         L     @10,MCCLMCQL(,@10)                               02S0944
         ST    @10,ELEMAD                                       02S0944
*   END;                            /* LOOP THRU ALL MCCLES          */
@DE00941 L     @10,ELEMAD                                       02S0945
         LTR   @10,@10                                          02S0945
         BNZ   @DL00941                                         02S0945
*   RETURN;                         /* RETURN FROM SUBROUTINE        */
@EL00004 DS    0H                                               02S0946
@EF00004 DS    0H                                               02S0946
@ER00004 LM    @14,@12,12(@13)                                  02S0946
         BR    @14                                              02S0946
*   END CR8MASK;                                                02S0947
*CR8SET:                                                        02S0948
*   PROC;                                                       02S0948
*                                                               02S0948
CR8SET   STM   @14,@12,@SA00005                                 02S0948
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE IS CALLED TO SET CONTROL REGISTER 8 ON ALL    */
*   /* ALIVE CPUS TO THE VALUE CONTAINED IN MCHCTL.                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0949
*   IF CSDMP='0'B THEN                                          02S0949
         L     @10,CVTPTR                                       02S0949
         L     @10,CVTCSD(,@10)                                 02S0949
         TM    CSDMP(@10),B'10000000'                           02S0949
         BNZ   @RF00949                                         02S0949
*     DO;                                                       02S0950
*                                                               02S0950
*       /*************************************************************/
*       /*                                                           */
*       /* IF THIS IS UNIPROCESSOR MODE, PROCESS ONLY THE CPU ON     */
*       /* WHICH WE ARE PROCESSING                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S0951
*       MCRWSAPT=ADDR(MCRWSA);      /* POINT TO THIS CPUS MCRWSA     */
         L     @10,PSALCCAV                                     02S0951
         L     @10,LCCACPUS(,@10)                               02S0951
         L     MCRWSAPT,WSACGTF(,@10)                           02S0951
*       CALL MCAWSART;              /* GET MCAWSA IF NEEDED          */
         BAL   @14,MCAWSART                                     02S0952
*       RFY                                                     02S0953
*         MCHEADA RSTD;                                         02S0953
*       MCHEADA=ADDR(MCHEAD);       /* POINT TO MCHEAD TO FIND MASK  */
         L     MCHEADA,MCHEADPT                                 02S0954
*       GEN(LCTL  CR8,CR8,MCHCTL(MCHEADA));/* LOAD THE CLASS MASK    */
         LCTL  CR8,CR8,MCHCTL(MCHEADA)
*       RFY                                                     02S0956
*         MCHEADA UNRSTD;                                       02S0956
*     END;                                                      02S0957
*                                                               02S0958
*   /*****************************************************************/
*   /*                                                               */
*   /* MP MODE - SET UP TO FIND ALIVE CPUS                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0958
*   ELSE                                                        02S0958
*     DO;                                                       02S0958
         B     @RC00949                                         02S0958
@RF00949 DS    0H                                               02S0959
*       PCCAVTP=CVTPCCAT;           /* POINT TO FIRST ENTRY IN PCCAVT*/
         L     @10,CVTPTR                                       02S0959
         L     @08,CVTPCCAT(,@10)                               02S0959
         ST    @08,PCCAVTP                                      02S0959
*       LCCAVTP=CVTLCCAT;           /* POINT TO FIRST ENTRY IN LCCAVT*/
         L     @08,CVTLCCAT(,@10)                               02S0960
         ST    @08,LCCAVTP                                      02S0960
*       RFY                                                     02S0961
*         CPUMSK RSTD;                                          02S0961
*       CPUMSK=CSDCPUAL;            /* LOAD THE ALIVE-CPU MASK INTO A
*                                      REGISTER                      */
         L     @10,CVTCSD(,@10)                                 02S0962
         LH    CPUMSK,CSDCPUAL(,@10)                            02S0962
         N     CPUMSK,@CF02511                                  02S0962
*       GEN(SLL CPUMSK,16);         /* SHIFT TO CORRECT PLACE        */
         SLL CPUMSK,16
*       DO WHILE(CPUMSK^=0);        /* PROCESS WHILE THERE ARE  02S0964
*                                      BITS(S) REMAINING IN THE 02S0964
*                                      REGISTER, INDICATING ALIVE
*                                      CPUS                          */
         B     @DE00964                                         02S0964
@DL00964 DS    0H                                               02S0965
*         GEN(ALR   CPUMSK,CPUMSK); /* THIS INSTRUCTION WILL SHIFT
*                                      REGISTER LEFT ONE BIT, AND
*                                      CAUSE OVERFLOW IF THE HI-ORDER
*                                      BIT WAS ON.                   */
*                                                               02S0965
         ALR   CPUMSK,CPUMSK
*         /***********************************************************/
*         /*                                                         */
*         /* IF A BIT HAS BEEN CARRIED, THIS CPU IS ALIVE. PCCAVTP   */
*         /* AND LCCAVTP POINT TO THE CORRECT ENTRIES IN THE PCCAVT  */
*         /* AND LCCAVT FOR THE CPU REPRESENTED BY THE BIT THAT WAS  */
*         /* CARRIED. IF A BIT HAS NOT BEEN CARRIED, CONTROL IS      */
*         /* PASSED TO LABEL AHL8SET1 TO PROCESS THE NEXT CPU BIT.   */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0966
*         BC(12,AHL8SET1);                                      02S0966
*                                                               02S0966
         BC    12,AHL8SET1                                      02S0966
*         /***********************************************************/
*         /*                                                         */
*         /* AN ALIVE CPU HAS BEEN FOUND                             */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0967
*         PCCAPTR=PVTSLOT;          /* PICK UP ADDRESS OF PCCA FOR
*                                      THAT CPU                      */
         L     @10,PCCAVTP                                      02S0967
         L     @10,PVTSLOT(,@10)                                02S0967
         ST    @10,PCCAPTR                                      02S0967
*         LCCAPTR=LVTSLOT;          /* PICK UP ADDRESS OF LCCA FOR
*                                      THAT CPU                      */
         L     @10,LCCAVTP                                      02S0968
         L     LCCAPTR,LVTSLOT(,@10)                            02S0968
*         RFY                                                   02S0969
*           LCCA BASED(LCCAPTR);                                02S0969
*         MCRWSAPT=ADDR(MCRWSA);    /* FIND MCRWSA ON THAT CPU       */
         L     @10,LCCACPUS(,LCCAPTR)                           02S0970
         L     MCRWSAPT,WSACGTF(,@10)                           02S0970
*         CALL MCAWSART;            /* GO GET MCAWSA IF NEEDED.      */
         BAL   @14,MCAWSART                                     02S0971
*         RFY                                                   02S0972
*           LCCA BASED(PSALCCAV);                               02S0972
*         RFY                                                   02S0973
*           PARMPTR RSTD;                                       02S0973
*         PARMPTR=PCCAPTR;          /* POINT TO PCCA FOR THAT CPU    */
         L     PARMPTR,PCCAPTR                                  02S0974
*         GEN(RPSGNL GTFCRM,CPU=(1));/* SIGNAL THAT CPU              */
         RPSGNL GTFCRM,CPU=(1)
*         IF RETCOD15^=0 THEN                                   02S0976
         SLR   @14,@14                                          02S0976
         CR    RETCOD15,@14                                     02S0976
         BE    @RF00976                                         02S0976
*           DO;                                                 02S0977
*                                                               02S0977
*             /*******************************************************/
*             /*                                                     */
*             /* IF THE RPSGNL FAILS, FREE THE MCAWSA IF IT WAS      */
*             /* GOTTEN, AND ISSUE AN ERROR MESSAGE                  */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0978
*             IF MCAGOTN='1'B THEN                              02S0978
         TM    MCAGOTN,B'01000000'                              02S0978
         BNO   @RF00978                                         02S0978
*               DO;                                             02S0979
*                 GETMADDR=MCRWSAPT->MCRMCA;/* FIND THE MCAWSA TO
*                                      FREE                          */
         L     @10,MCRMCA(,MCRWSAPT)                            02S0980
         ST    @10,GETMADDR                                     02S0980
*                 MCRWSAPT->MCRMCA=0;/* CLEAR THE POINTER TO IT      */
         ST    @14,MCRMCA(,MCRWSAPT)                            02S0981
*                 DO;               /* FREEMAIN (E)             02S0982
*                                      LV(LENGTH(MCAWSA)) A(GETMADDR)
*                                      SP(245)                       */
*                   RESPECIFY                                   02S0983
*                    (GPR01P) RESTRICTED;                       02S0983
*                   I005=I005&&I005;/* INIT LIST                     */
         XC    I005(10),I005                                    02S0984
*                   I00505='00'X;   /* SET TYPE                      */
         MVI   I00505,X'00'                                     02S0985
*                   I00502=LENGTH(MCAWSA);/* LENGTH                  */
         MVC   I00502(3),@CF02194+1                             02S0986
*                   I00504=ADDR(GETMADDR);/* ADDR OF ADDR LIST       */
         LA    @10,GETMADDR                                     02S0987
         STCM  @10,7,I00504                                     02S0987
*                   I00506=245;     /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                     02S0988
*                   GPR01P=ADDR(I005);/* REG1 POINTS TO LIST         */
         LA    GPR01P,I005                                      02S0989
*                   SVC(5);         /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                02S0990
*                   RESPECIFY                                   02S0991
*                    (GPR01P) UNRESTRICTED;                     02S0991
*                 END;              /* FREEMAIN (E)             02S0992
*                                      LV(LENGTH(MCAWSA)) A(GETMADDR)
*                                                             SP(245)*/
*               END;                                            02S0993
*AHLRC20:                                                       02S0994
*             RTRNCODE=CPUNOT;      /* INDICATE THAT ONE OR MORE CPUS
*                                      WOULD NOT INITIALIZE          */
@RF00978 DS    0H                                               02S0994
AHLRC20  MVC   RTRNCODE(4),@CF00103                             02S0994
*             UNPK(MSGCPUID,CPUADDR);/* PLACE CPU ADDRESS INTO  02S0995
*                                      MESSAGE                       */
         L     @10,@CA00135                                     02S0995
         L     @08,PCCAPTR                                      02S0995
         UNPK  MSGCPUID-AHL133(4,@10),CPUADDR(3,@08)            02S0995
*             XTRABYTE=' ';         /* CLEAR EXTRA UNPACKED BYTE     */
         MVI   XTRABYTE-AHL133(@10),C' '                        02S0996
*             MSGNAME=PLISTNAM;     /* MOVE APPLICATION NAME TO 02S0997
*                                      MESSAGE                       */
         L     @08,PLISTAD                                      02S0997
         MVC   MSGNAME-AHL133(8,@10),PLISTNAM(@08)              02S0997
*             DO;                   /* WTOP MF(E,AHL133)             */
*               RFY                                             02S0999
*                 GPR01P RSTD;      /* RESTRICT REG 1                */
*               GPR01P=ADDR(AHL133);/* ADDRESS CONTROL PROGRAM LIST  */
         LR    GPR01P,@10                                       02S1000
*               SVC(35);            /* ISSUE WTO SVC                 */
         SVC   35                                               02S1001
*               RFY                                             02S1002
*                 GPR01P UNRSTD;    /* RELEASE REG 1                 */
*             END;                  /* WTOP MF(E,AHL133) ISSUE WTO   */
*             IF CSDMP='0'B THEN                                02S1004
         L     @10,CVTPTR                                       02S1004
         L     @10,CVTCSD(,@10)                                 02S1004
         TM    CSDMP(@10),B'10000000'                           02S1004
         BZ    @RT01004                                         02S1004
*               RETURN;             /* DONE IF UNIPROCESSOR MODE     */
*           END;                    /* END OF BAD RPSGNL PATH        */
*         MCAGOTN='0'B;             /* RESET FLAG FOR NEXT TIME THRU
*                                      LOOP                          */
@RF00976 NI    MCAGOTN,B'10111111'                              02S1007
*AHL8SET1:                                                      02S1008
*         PCCAVTP=PCCAVTP+LENGTH(PVTSLOT);/* UPDATE TABLE POINTER TO
*                                      NEXT CPU SLOT                 */
AHL8SET1 LA    @10,4                                            02S1008
         L     @08,PCCAVTP                                      02S1008
         ALR   @08,@10                                          02S1008
         ST    @08,PCCAVTP                                      02S1008
*         LCCAVTP=LCCAVTP+LENGTH(LVTSLOT);/* SAME FOR LCCAVT         */
         AL    @10,LCCAVTP                                      02S1009
         ST    @10,LCCAVTP                                      02S1009
*       END;                        /* LOOP UNTIL ALL ALIVE CPUS ARE
*                                      PROCESSED                     */
@DE00964 LTR   CPUMSK,CPUMSK                                    02S1010
         BNZ   @DL00964                                         02S1010
*     END;                          /* END OF MP PROCESSING          */
*   RFY                                                         02S1012
*     CPUMSK UNRSTD;                                            02S1012
*   END CR8SET;                                                 02S1013
@EL00005 DS    0H                                               02S1013
@EF00005 DS    0H                                               02S1013
@ER00005 LM    @14,@12,@SA00005                                 02S1013
         BR    @14                                              02S1013
*MCAWSART:                                                      02S1014
*   PROC;                                                       02S1014
*                                                               02S1014
MCAWSART STM   @14,@12,12(@13)                                  02S1014
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE IS CALLED TO GET OR FREE THE MCAWSA ASSOCIATED*/
*   /* WITH THE MCRWSA POINTED TO BY MCRWSAPT. IF THE CLASS MASK IN  */
*   /* MCHCTL IS ZERO, THE MCAWSA IS TO BE FREED IF IT EXISTS.       */
*   /* OTHERWISE, THE MCAWSA IS TO BE GOTTEN IF IT DOES NOT EXIST    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1015
*   RFY                                                         02S1015
*     MCRWSA BASED(MCRWSAPT);                                   02S1015
*   IF MCHCTL=0 THEN                                            02S1016
         SLR   @10,@10                                          02S1016
         L     @08,MCHEADPT                                     02S1016
         C     @10,MCHCTL(,@08)                                 02S1016
         BNE   @RF01016                                         02S1016
*     IF MCRMCA^=0 THEN                                         02S1017
         L     @08,MCRMCA(,MCRWSAPT)                            02S1017
         CR    @08,@10                                          02S1017
         BE    @RF01017                                         02S1017
*       DO;                                                     02S1018
*                                                               02S1018
*         /***********************************************************/
*         /*                                                         */
*         /* FREE MCAWSA IF IT EXISTS                                */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S1019
*         GETMADDR=MCRMCA;          /* SAVE ITS ADDRESS              */
         ST    @08,GETMADDR                                     02S1019
*         MCRMCA=0;                 /* ZERO OUT THE POINTER TO IT    */
         ST    @10,MCRMCA(,MCRWSAPT)                            02S1020
*         DO;                       /* FREEMAIN (E)             02S1021
*                                      LV(LENGTH(MCAWSA)) A(GETMADDR)
*                                      SP(SQA)                       */
*           RESPECIFY                                           02S1022
*            (GPR01P) RESTRICTED;                               02S1022
*           I005=I005&&I005;        /* INIT LIST                     */
         XC    I005(10),I005                                    02S1023
*           I00505='00'X;           /* SET TYPE                      */
         MVI   I00505,X'00'                                     02S1024
*           I00502=LENGTH(MCAWSA);  /* LENGTH                        */
         MVC   I00502(3),@CF02194+1                             02S1025
*           I00504=ADDR(GETMADDR);  /* ADDR OF ADDR LIST             */
         LA    @10,GETMADDR                                     02S1026
         STCM  @10,7,I00504                                     02S1026
*           I00506=SQA;             /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                     02S1027
*           GPR01P=ADDR(I005);      /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                      02S1028
*           SVC(5);                 /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                02S1029
*           RESPECIFY                                           02S1030
*            (GPR01P) UNRESTRICTED;                             02S1030
*         END;                      /* FREEMAIN (E)             02S1031
*                                      LV(LENGTH(MCAWSA)) A(GETMADDR)
*                                                             SP(SQA)*/
*       END;                                                    02S1032
*     ELSE                                                      02S1033
*       ;                                                       02S1033
@RF01017 DS    0H                                               02S1034
*                                                               02S1034
*   /*****************************************************************/
*   /*                                                               */
*   /* MCAWSA TO BE GOTTEN IF ONE DOES NOT ALREADY EXIST             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1034
*   ELSE                                                        02S1034
*     IF MCRMCA=0 THEN                                          02S1034
         B     @RC01016                                         02S1034
@RF01016 L     @10,MCRMCA(,MCRWSAPT)                            02S1034
         LTR   @10,@10                                          02S1034
         BNZ   @RF01034                                         02S1034
*       DO;                         /* IF THE MCAWSA DOES NOT EXIST,
*                                      GET ONE                       */
*         DO;                       /* GETMAIN (EC)             02S1036
*                                      LV(LENGTH(MCAWSA)) A(GETMADDR)
*                                                             SP(SQA)*/
*           RESPECIFY                                           02S1037
*            (GPR01P) RESTRICTED;                               02S1037
*           I004=I004&&I004;        /* INIT LIST                     */
         XC    I004(10),I004                                    02S1038
*           I00404='20'X;           /* TYPE                          */
         MVI   I00404,X'20'                                     02S1039
*           I00401=LENGTH(MCAWSA);  /* LENGTH                        */
         MVC   I00401(4),@CF02194                               02S1040
*           I00403=ADDR(GETMADDR);  /* ADDR OF ADDR LIST             */
         LA    @10,GETMADDR                                     02S1041
         STCM  @10,7,I00403                                     02S1041
*           I00405=SQA;             /* SUBPOOL VALUE                 */
         MVI   I00405,X'F5'                                     02S1042
*           GPR01P=ADDR(I004);      /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                      02S1043
*           SVC(4);                 /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                02S1044
*           RESPECIFY                                           02S1045
*            (GPR01P) UNRESTRICTED;                             02S1045
*         END;                      /* GETMAIN (EC)             02S1046
*                                      LV(LENGTH(MCAWSA)) A(GETMADDR)
*                                      SP(SQA)                       */
*         IF RETCOD15^=0 THEN                                   02S1047
         LTR   RETCOD15,RETCOD15                                02S1047
         BZ    @RF01047                                         02S1047
*           DO;                     /* IF THE STORAGE CANNOT BE 02S1048
*                                      OBTAINED, RETURN IS MADE TO
*                                      AHLRC20 TO ISSUE AN ERROR
*                                      MESSAGE                       */
*             PCCAPTR=PSAPCCAV;     /* POINT TO THIS PCCA            */
         L     @10,PSAPCCAV                                     02S1049
         ST    @10,PCCAPTR                                      02S1049
*             RETURN TO AHLRC20;                                02S1050
         LA    @14,AHLRC20                                      02S1050
         LM    @15,@12,16(@13)                                  02S1050
         BR    @14                                              02S1050
*           END;                                                02S1051
*         MCRMCA=GETMADDR;          /* SAVE GOTTEN STORAGE ADDRESS   */
@RF01047 L     @10,GETMADDR                                     02S1052
         ST    @10,MCRMCA(,MCRWSAPT)                            02S1052
*         GETMADDR->MCAMCR=MCRWSAPT;/* BACK CHAIN THE MCAWSA TO THE
*                                      MCRWSA                        */
         ST    MCRWSAPT,MCAMCR(,@10)                            02S1053
*         MCAGOTN='1'B;             /* INDICATE THAT THE MCAWSA WAS
*                                      GOTTEN ON THIS CALL, SO IT CAN
*                                      BE FREED IF THE CONTROL  02S1054
*                                      REGISTER CANNOT BE SET        */
         OI    MCAGOTN,B'01000000'                              02S1054
*       END;                                                    02S1055
*   END MCAWSART;                                               02S1056
@EL00006 DS    0H                                               02S1056
@EF00006 DS    0H                                               02S1056
@ER00006 LM    @14,@12,12(@13)                                  02S1056
         BR    @14                                              02S1056
*CSDMCCE:                                                       02S1057
*   PROC;                                                       02S1057
*                                                               02S1057
CSDMCCE  STM   @14,@12,@SA00007                                 02S1057
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE IS CALLED TO PLACE THE MCCE POINTED TO BY     */
*   /* NEWMCCE INTO THE MCHEAD, AND ZERO THE USE COUNT TO INDICATE   */
*   /* THAT A NEW SET OF TABLES IS IN EFFECT. THIS IS DONE VIA       */
*   /* COMPARE AND SWAP LOGIC. ONCE IT HAS BEEN DONE, IT ADDS THE OLD*/
*   /* MCHEAD USE COUNT TO THE USE COUNT IN THE REPLACED MCCE, AND   */
*   /* SCHEDULES THE SRB IN THE OLD MCCE IF THE RESULT OF THIS       */
*   /* ADDITION IS ZERO                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1058
*   NEWCOUNT=0;                     /* INITIALIZE THE USE COUNT TO
*                                      ZERO, TO REPLACE THE CURRENT
*                                      ONE IN THE MCHEAD             */
         SLR   @10,@10                                          02S1058
         ST    @10,NEWCOUNT                                     02S1058
*   OLDMCCE=MCHCUR;                 /* LOAD THE OLD MCCE ADDRESS FROM
*                                      THE MCHEAD                    */
         L     @10,MCHEADPT                                     02S1059
         L     @08,MCHCUR(,@10)                                 02S1059
         ST    @08,OLDMCCE                                      02S1059
*   OLDCOUNT=MCHCNT;                /* LOAD THE CURRENT USE COUNT
*                                      ALSO                          */
         L     @10,MCHCNT(,@10)                                 02S1060
         ST    @10,OLDCOUNT                                     02S1060
*AHLCSD01:                                                      02S1061
*   CDS(OCDS,NCDS,ADDRCNT);         /* PLACE THE NEW MCCE ADDRESS AND
*                                      THE ZERO USE COUNT INTO THE
*                                      MCHEAD                        */
AHLCSD01 LM    @02,@03,OCDS                                     02S1061
         LM    @04,@05,NCDS                                     02S1061
         L     @10,MCHEADPT                                     02S1061
         CDS   @02,@04,ADDRCNT(@10)                             02S1061
         BZ    @BC01061                                         02S1061
         STM   @02,@03,OCDS                                     02S1061
@BC01061 DS    0H                                               02S1062
*   BC(7,AHLCSD01);                 /* IF THE COUNT CHANGES, REDO THE
*                                      CDS                           */
         BC    7,AHLCSD01                                       02S1062
*   RFY                                                         02S1063
*     MCCE BASED(OLDMCCE);          /* OLDMCCE NOW CONTAINS THE OLD
*                                      MCCE ADDRESS                  */
*   OMCCECNT=MCCECNT;               /* PICK UP THE COUNT FROM THE OLD
*                                      MCCE                          */
         L     @10,OLDMCCE                                      02S1064
         L     OMCCECNT,MCCECNT(,@10)                           02S1064
*AHLCSD02:                                                      02S1065
*   NEWCOUNT=OMCCECNT+OLDCOUNT;     /* ADD THE OLD MCCE USE COUNT TO
*                                      THE USE COUNT FROM THE MCHEAD
*                                      (IN OLDCOUNT)                 */
AHLCSD02 LR    @10,OMCCECNT                                     02S1065
         AL    @10,OLDCOUNT                                     02S1065
         ST    @10,NEWCOUNT                                     02S1065
*   CS(OMCCECNT,NEWCOUNT,MCCECNT);  /* PLACE THE SUM INTO THE OLD
*                                      MCCE                          */
         L     @08,OLDMCCE                                      02S1066
         CS    OMCCECNT,@10,MCCECNT(@08)                        02S1066
*   BC(7,AHLCSD02);                 /* IF THE OLD MCCE USE COUNT
*                                      CHANGED, REDO ARITHMETIC TO
*                                      ESTABLISH THE CORRECT COUNT   */
         BC    7,AHLCSD02                                       02S1067
*   IF NEWCOUNT=0 THEN                                          02S1068
         L     @10,NEWCOUNT                                     02S1068
         LTR   @10,@10                                          02S1068
         BNZ   @RF01068                                         02S1068
*     DO;                           /* IF THE STORED COUNT WAS ZERO,
*                                      ALL ROUTINES ARE DONE USING
*                                      THE TABLES DESCRIBED BY THE
*                                      OLD MCCE. SCHEDULE THE SRB IN
*                                      THE OLD MCCE TO CAUSE THE
*                                      FREEING OF THE TABLES         */
*       RFY                                                     02S1070
*         SRBPTR RSTD;                                          02S1070
*       SRBPTR=ADDR(MCCESRB);       /* POINT TO THE SRB              */
         L     SRBPTR,OLDMCCE                                   02S1071
         LA    SRBPTR,MCCESRB(,SRBPTR)                          02S1071
*       GEN(SCHEDULE SRB=(1));      /* SCHEDULE THE SRB              */
         SCHEDULE SRB=(1)
*       RFY                                                     02S1073
*         SRBPTR UNRSTD;                                        02S1073
*     END;                                                      02S1074
*   END CSDMCCE;                                                02S1075
@EL00007 DS    0H                                               02S1075
@EF00007 DS    0H                                               02S1075
@ER00007 LM    @14,@12,@SA00007                                 02S1075
         BR    @14                                              02S1075
*FREEELMS:                                                      02S1076
*   PROC;                                                       02S1076
*                                                               02S1076
FREEELMS STM   @14,@12,12(@13)                                  02S1076
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE IS CALLED TO FREE THE MCEES OR MCCLES ON THE  */
*   /* CHAIN HEADED BY THE ELEMENT POINTED TO BY ELEMAD. IT OPERATES */
*   /* ON BOTH MCEES AND MCCLES SINCE THEIR FORMATS ARE IDENTICAL    */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1077
*   DO WHILE(ELEMAD^=0);            /* LOOP THRU ALL MCEE/MCCLES     */
         B     @DE01077                                         02S1077
@DL01077 DS    0H                                               02S1078
*     NEXTELMT=ELEMAD->MCEEMCQL;    /* SAVE THE NEXT ELEMENT ADDRESS */
         L     @10,ELEMAD                                       02S1078
         L     NEXTELMT,MCEEMCQL(,@10)                          02S1078
*     DO;                           /* FREEMAIN (E) LV(LENGTH(MCEE))
*                                      A(ELEMAD) SP(SQA)             */
*       RESPECIFY                                               02S1080
*        (GPR01P) RESTRICTED;                                   02S1080
*       I005=I005&&I005;            /* INIT LIST                     */
         XC    I005(10),I005                                    02S1081
*       I00505='00'X;               /* SET TYPE                      */
         MVI   I00505,X'00'                                     02S1082
*       I00502=LENGTH(MCEE);        /* LENGTH                        */
         MVC   I00502(3),@CF00106+1                             02S1083
*       I00504=ADDR(ELEMAD);        /* ADDR OF ADDR LIST             */
         LA    @10,ELEMAD                                       02S1084
         STCM  @10,7,I00504                                     02S1084
*       I00506=SQA;                 /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                     02S1085
*       GPR01P=ADDR(I005);          /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                      02S1086
*       SVC(5);                     /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                02S1087
*       RESPECIFY                                               02S1088
*        (GPR01P) UNRESTRICTED;                                 02S1088
*     END;                          /* FREEMAIN (E) LV(LENGTH(MCEE))
*                                      A(ELEMAD) SP(SQA)             */
*     ELEMAD=NEXTELMT;              /* POINT TO NEXT ONE TO BE FREED */
         ST    NEXTELMT,ELEMAD                                  02S1090
*   END;                            /* LOOP UNTIL ZERO CHAIN IS 02S1091
*                                      NOTICED                       */
@DE01077 L     @10,ELEMAD                                       02S1091
         LTR   @10,@10                                          02S1091
         BNZ   @DL01077                                         02S1091
*   END FREEELMS;                                               02S1092
@EL00008 DS    0H                                               02S1092
@EF00008 DS    0H                                               02S1092
@ER00008 LM    @14,@12,12(@13)                                  02S1092
         BR    @14                                              02S1092
@PB00008 DS    0H                                               02S1093
*                                                               01S1093
*   /*****************************************************************/
*   /*                                                               */
*   /* SRB ROUTINES                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1093
*AHLTFREE:                                                      02S1093
*                                                               02S1093
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SRB ROUTINE RECEIVES CONTROL TO FREE THE OBSOLETE TABLES */
*   /* DESCRIBED BY THE MCCE WHOSE ADDRESS IS RECEIVED AS A          */
*   /* PARAMETER. FIRST, ERROR RECOVERY IS ESTABLISHED VIA SETFRR, TO*/
*   /* ENSURE THAT THE MCCEECB GETS POSTED, IF INDICATED, TO SIGNAL  */
*   /* THE COMPLETION OF THE TABLE FREEING PROCESS                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1093
*   GENERATE;                                                   02S1093
AHLTFREE DS    0H                                               02S1093
         BALR   BASEREG,0
         USING  *,BASEREG
         LA    FRRLIST,AHLTFFRR                     @YM01899
         SETFRR A,FRRAD=(FRRLIST),WRKREGS=(2,3),PARMAD=(FRRLIST)
*   RFY                                                         02S1094
*    (SRBPARM2,                                                 02S1094
*     FRRLIST,                                                  02S1094
*     BASEREG,                                                  02S1094
*     RETURNAD) RSTD;                                           02S1094
*   SRBPARM2=SRBPARM1;              /* SAVE MCCE ADDRESS IN SAFE
*                                      REGISTER                      */
         LR    SRBPARM2,SRBPARM1                                02S1095
*   RFY                                                         02S1096
*     MCCE BASED(SRBPARM2);                                     02S1096
*                                                               02S1096
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE FRR PARAMETER LIST                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1097
*   FRRTABL=ADDR(MCCE);             /* PASS MCCE ADDRESS TO FRR 02S1097
*                                      ROUTINE                       */
         ST    SRBPARM2,FRRTABL(,FRRLIST)                       02S1097
*   FRRRET=RETURNAD;                /* PASS RETURN ADDRESS TO FRR FOR
*                                      RETRY                         */
*                                                               02S1098
         ST    RETURNAD,FRRRET(,FRRLIST)                        02S1098
*   /*****************************************************************/
*   /*                                                               */
*   /* GET SALLOC LOCK FOR FREEMAINS                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1099
*   GENERATE;                                                   02S1099
AHLTFR00 SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,                       *
               RELATED=(FREEMCCE,AHLSETEV,(AHLTFR03,AHLTFR04))
*   FRRSALOC='80'X;                 /* INDICATE LOCK GOTTEN          */
         MVI   FRRSALOC(FRRLIST),X'80'                          02S1100
*                                                               02S1101
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE MCED IF IT IS INDICATED TO BE FREED                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1101
*   IF MCCEOEDA^=0 THEN                                         02S1101
         L     @15,MCCEOEDA(,SRBPARM2)                          02S1101
         LTR   @15,@15                                          02S1101
         BZ    @RF01101                                         02S1101
*     DO;                                                       02S1102
*                                                               02S1102
*       /*************************************************************/
*       /*                                                           */
*       /* MCED IS TO BE FREED. TO FREE IT, ALL ITS ASSOCIATED       */
*       /* STORAGE MUST BE DEFINED TO ITS FREESPACE QUEUE. TO FORCE  */
*       /* THIS, ALL REMAINING ENTRIES MUST BE DELETED FROM THE MCED.*/
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1103
*       RFY                                                     02S1103
*        (FTREEAD,                                              02S1103
*         SINKADDR) RSTD;                                       02S1103
*       FTREEAD=MCCEOEDA;                                       02S1104
         L     @06,MCCEOEDA(,SRBPARM2)                          02S1104
         LR    FTREEAD,@06                                      02S1104
*AHLTFR01:                                                      02S1105
*       GEN(SRCH  (FTREEAD),SARG=DUMMYARG,TYPE=5,KEYL=2);/* PERFORM
*                                      SEARCH FOR A DUMMY MCEE, TO
*                                      FIND OUT IF THERE ARE ANY
*                                      ENTRIES TO BE DELETED FROM THE
*                                      TREE                          */
AHLTFR01 SRCH  (FTREEAD),SARG=DUMMYARG,TYPE=5,KEYL=2
*       IF SINKIND<0 THEN                                       02S1106
         LTR   SINKIND,SINKIND                                  02S1106
         BM    @RT01106                                         02S1106
*         GO TO AHLTFR02;           /* IF RETURNED MCEE ADDRESS IS
*                                      NEGATIVE, ALL ENTRIES HAVE
*                                      BEEN DELETED. GO FREE THE
*                                      SPACE                         */
*       GEN(DEL  (FTREEAD),FREE=NO,TYPE=5);/* OTHERWISE, AN ENTRY
*                                      STILL EXISTS. DELETE IT FROM
*                                      THE MCED, CAUSING ITS STORAGE
*                                      TO BE PLACED ON THE FREESPACE
*                                      QUEUE                         */
         DEL  (FTREEAD),FREE=NO,TYPE=5
*       GO TO AHLTFR01;             /* LOOP BACK UNTIL ALL REMAINING
*                                      ENTRIES ARE DELETED FROM THE
*                                      MCED                          */
         B     AHLTFR01                                         02S1109
*       RFY                                                     02S1110
*         SINKADDR UNRSTD;                                      02S1110
*                                                               02S1111
*       /*************************************************************/
*       /*                                                           */
*       /* ALL ENTRIES HAVE BEEN DELETED FROM THE MCED, AND THEREFORE*/
*       /* ALL ITS STORAGE IS DEFINED BY THE FREESPACE QUEUE. THE    */
*       /* FOLLOWING CODE FREES ALL MCED STORAGE, STARTING WITH THE  */
*       /* PREFIX                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1111
*       RFY                                                     02S1111
*        (FRSPCELM,                                             02S1111
*         NXTFRSP) RSTD;                                        02S1111
*AHLTFR02:                                                      02S1112
*       GENERATE;                                               02S1112
*                                                               02S1112
AHLTFR02 DS    0H                                               02S1112
         USING IGARPTH5,FTREEAD
         L     FRSPCELM,IGAHVFC5     LOAD FREESPACE QUEUE ADDRESS
         LA    FRSPCELM,0(FRSPCELM)  CLEAR HI BYTE
         LA    REG0,IGATYP5S         SET LENGTH TO FREE PREEFIX OF MCED
         FREEMAIN RU,LV=(0),A=(FTREEAD),BRANCH=(YES,GLOBAL),SP=245
         DROP  FTREEAD
*       /*************************************************************/
*       /*                                                           */
*       /* FREE ALL STORAGE ON THE FREESPACE QUEUE                   */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1113
*       DO WHILE(FRSPCELM^=0);      /* IF THERE ARE ELEMENTS ON THE
*                                      FREESPACE QUEUE, FREE THEM    */
         B     @DE01113                                         02S1113
@DL01113 DS    0H                                               02S1114
*         NXTFRSP=FRESPLNK;         /* PICK UP ADDRESS OF NEXT  02S1114
*                                      FREESPACE QUEUE ELEMENT BEOFRE
*                                      FREEING THIS ONE              */
         L     NXTFRSP,FRESPLNK-1(,FRSPCELM)                    02S1114
         LA    NXTFRSP,0(,NXTFRSP)                              02S1114
*         DO;                       /* FREEMAIN(RU) LV(LENGTH(FRESPAC
*                                      E))A(FRESPACE) SP(SQA)   02S1115
*                                      BRANCH(GLOBAL)                */
*           RESPECIFY                                           02S1116
*            (GPR01F,                                           02S1116
*             GPR03F,                                           02S1116
*             GPR00F,                                           02S1116
*             GPR04P) RESTRICTED;                               02S1116
*           GPR01F=0;               /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                    02S1117
*           GPR03F=3;               /* SET TYPE                      */
         LA    GPR03F,3                                         02S1118
*           GPR00F=LENGTH(FRESPACE);/* LENGTH REQUESTED              */
         LA    GPR00F,8                                         02S1119
*           GPR01F=ADDR(FRESPACE);  /* SET REGISTER ONE              */
         LR    GPR01F,FRSPCELM                                  02S1120
*           GPR03F=GPR03F+((SQA)*256);/* SUBPOOL VALUE               */
         AL    GPR03F,@CF02506                                  02S1121
*           GPR04P=WSAGGMFM;        /* POINT TO SAVE AREA            */
         L     @15,CVTPTR                                       02S1122
         L     @02,CVTSPSA(,@15)                                02S1122
         L     GPR04P,WSAGGMFM(,@02)                            02S1122
*           CALL CVTGLMN;           /* BRANCH ENTRY POINT            */
         L     @15,CVTGLMN(,@15)                                02S1123
         BALR  @14,@15                                          02S1123
*           RESPECIFY                                           02S1124
*            (GPR01F,                                           02S1124
*             GPR03F,                                           02S1124
*             GPR00F,                                           02S1124
*             GPR04P) UNRESTRICTED;                             02S1124
*         END;                      /* FREEMAIN(RU) LV(LENGTH(FRESPAC
*                                      E))A(FRESPACE) SP(SQA)   02S1125
*                                      BRANCH(GLOBAL)                */
*         FRSPCELM=NXTFRSP;         /* PICK UP THE NEXT QUEUE ELEMENT
*                                      FROM WHERE IT WAS SAVED       */
         LR    FRSPCELM,NXTFRSP                                 02S1126
*       END;                        /* LOOP UNTIL ALL FREESPACE 02S1127
*                                      ELEMENTS ARE FREED            */
@DE01113 LTR   FRSPCELM,FRSPCELM                                02S1127
         BNZ   @DL01113                                         02S1127
*     END;                          /* END OF MCED FREEING PATH      */
*   RFY                                                         02S1129
*    (FRSPCELM,                                                 02S1129
*     NXTFRSP,                                                  02S1129
*     FTREEAD) UNRSTD;                                          02S1129
@RF01101 DS    0H                                               02S1130
*                                                               02S1130
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE MCCD STORAGE IF IT IS INDICATED TO BE FREED              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1130
*   IF MCCEOCDA^=0 THEN                                         02S1130
         L     @15,MCCEOCDA(,SRBPARM2)                          02S1130
         LTR   @15,@15                                          02S1130
         BZ    @RF01130                                         02S1130
*     DO;                                                       02S1131
*       RFY                                                     02S1132
*         MCCD BASED(MCCEOCDA);                                 02S1132
*       DO;                         /* FREEMAIN(RU)             02S1133
*                                      LV(LENGTH(MCCD))A(MCCD)  02S1133
*                                      SP(245) BRANCH(GLOBAL)        */
*         RESPECIFY                                             02S1134
*          (GPR01F,                                             02S1134
*           GPR03F,                                             02S1134
*           GPR00F,                                             02S1134
*           GPR04P) RESTRICTED;                                 02S1134
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                    02S1135
*         GPR03F=3;                 /* SET TYPE                      */
         LA    GPR03F,3                                         02S1136
*         GPR00F=LENGTH(MCCD);      /* LENGTH REQUESTED              */
         LA    GPR00F,76                                        02S1137
*         GPR01F=ADDR(MCCD);        /* SET REGISTER ONE              */
         LR    GPR01F,@15                                       02S1138
*         GPR03F=GPR03F+((245)*256);/* SUBPOOL VALUE                 */
         AL    GPR03F,@CF02506                                  02S1139
*         GPR04P=WSAGGMFM;          /* POINT TO SAVE AREA            */
         L     @15,CVTPTR                                       02S1140
         L     @10,CVTSPSA(,@15)                                02S1140
         L     GPR04P,WSAGGMFM(,@10)                            02S1140
*         CALL CVTGLMN;             /* BRANCH ENTRY POINT            */
         L     @15,CVTGLMN(,@15)                                02S1141
         BALR  @14,@15                                          02S1141
*         RESPECIFY                                             02S1142
*          (GPR01F,                                             02S1142
*           GPR03F,                                             02S1142
*           GPR00F,                                             02S1142
*           GPR04P) UNRESTRICTED;                               02S1142
*       END;                        /* FREEMAIN(RU)             02S1143
*                                      LV(LENGTH(MCCD))A(MCCD)  02S1143
*                                      SP(245) BRANCH(GLOBAL)        */
*     END;                                                      02S1144
*                                                               02S1145
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE MCCEOMCQ FIELD CONTAINS A ZERO ADDRESS, THE MCCE IS TO */
*   /* BE FREED. OTHERWISE, THE MCQE POINTED TO BY MCCEOMCQ AND ITS  */
*   /* ASSOCIATED MCEE/MCCLES ARE TO BE FREED, AND THE MCCEECB IS TO */
*   /* BE POSTED                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1145
*   IF MCCEOMCQ=0 THEN                                          02S1145
@RF01130 L     @15,MCCEOMCQ(,SRBPARM2)                          02S1145
         LTR   @15,@15                                          02S1145
         BNZ   @RF01145                                         02S1145
*     DO;                                                       02S1146
*                                                               02S1146
*       /*************************************************************/
*       /*                                                           */
*       /* FREE THE MCCE                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1147
*       DO;                         /* FREEMAIN(RU)             02S1147
*                                      LV(LENGTH(MCCE))A(MCCE)  02S1147
*                                      SP(SQA) BRANCH(GLOBAL)        */
*         RESPECIFY                                             02S1148
*          (GPR01F,                                             02S1148
*           GPR03F,                                             02S1148
*           GPR00F,                                             02S1148
*           GPR04P) RESTRICTED;                                 02S1148
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                    02S1149
*         GPR03F=3;                 /* SET TYPE                      */
         LA    GPR03F,3                                         02S1150
*         GPR00F=LENGTH(MCCE);      /* LENGTH REQUESTED              */
         LA    GPR00F,88                                        02S1151
*         GPR01F=ADDR(MCCE);        /* SET REGISTER ONE              */
         LR    GPR01F,SRBPARM2                                  02S1152
*         GPR03F=GPR03F+((SQA)*256);/* SUBPOOL VALUE                 */
         AL    GPR03F,@CF02506                                  02S1153
*         GPR04P=WSAGGMFM;          /* POINT TO SAVE AREA            */
         L     @15,CVTPTR                                       02S1154
         L     @10,CVTSPSA(,@15)                                02S1154
         L     GPR04P,WSAGGMFM(,@10)                            02S1154
*         CALL CVTGLMN;             /* BRANCH ENTRY POINT            */
         L     @15,CVTGLMN(,@15)                                02S1155
         BALR  @14,@15                                          02S1155
*         RESPECIFY                                             02S1156
*          (GPR01F,                                             02S1156
*           GPR03F,                                             02S1156
*           GPR00F,                                             02S1156
*           GPR04P) UNRESTRICTED;                               02S1156
*       END;                        /* FREEMAIN(RU)             02S1157
*                                      LV(LENGTH(MCCE))A(MCCE)  02S1157
*                                      SP(SQA) BRANCH(GLOBAL)        */
*       SRBRTRN=FRRRET;             /* LOAD RETURN ADDRESS           */
         L     SRBRTRN,FRRRET(,FRRLIST)                         02S1158
*       GENERATE;                                               02S1159
               SETFRR D,WRKREGS=(2,3)  DELETE ERROR RECOVERY
AHLTFR03       SETLOCK RELEASE,TYPE=SALLOC,                            *
               RELATED=(FREEMCCE,AHLSETEV,AHLTFR00) RELEASE SALLOC LOCK
*       GO TO SRBRTRN;              /* RETURN TO THE SYSTEM          */
         BR    SRBRTRN                                          02S1160
*     END;                          /* END OF NO MCQE PATH           */
*   ELSE                                                        02S1162
*     DO;                                                       02S1162
*                                                               02S1162
@RF01145 DS    0H                                               02S1163
*       /*************************************************************/
*       /*                                                           */
*       /* MCQE AND ITS ELEMENTS ARE TO BE FREED - START WITH THE    */
*       /* MCEES                                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1163
*       RFY                                                     02S1163
*         MCQE BASED(MCCEOMCQ);                                 02S1163
*       RFY                                                     02S1164
*        (MCEETOFR,                                             02S1164
*         NEXTMCEE) RSTD;                                       02S1164
*       MCEETOFR=MCQEMCEE;          /* LOAD FIRST MCEE ADDRESS       */
         L     @15,MCCEOMCQ(,SRBPARM2)                          02S1165
         L     MCEETOFR,MCQEMCEE(,@15)                          02S1165
*       DO WHILE(MCEETOFR^=0);      /* LOOP UNTIL LAST MCEE HAS BEEN
*                                      FREED                         */
         B     @DE01166                                         02S1166
@DL01166 DS    0H                                               02S1167
*         NEXTMCEE=MCEETOFR->MCEEMCQL;/* FIND THE NEXT MCEE BEFORE
*                                      FREEING THIS ONE              */
         L     NEXTMCEE,MCEEMCQL(,MCEETOFR)                     02S1167
*         RFY                                                   02S1168
*           MCEE BASED(MCEETOFR);                               02S1168
*         DO;                       /* FREEMAIN(RU)             02S1169
*                                      LV(LENGTH(MCEE))A(MCEE)  02S1169
*                                      SP(SQA) BRANCH(GLOBAL)        */
*           RESPECIFY                                           02S1170
*            (GPR01F,                                           02S1170
*             GPR03F,                                           02S1170
*             GPR00F,                                           02S1170
*             GPR04P) RESTRICTED;                               02S1170
*           GPR01F=0;               /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                    02S1171
*           GPR03F=3;               /* SET TYPE                      */
         LA    GPR03F,3                                         02S1172
*           GPR00F=LENGTH(MCEE);    /* LENGTH REQUESTED              */
         LA    GPR00F,28                                        02S1173
*           GPR01F=ADDR(MCEE);      /* SET REGISTER ONE              */
         LR    GPR01F,MCEETOFR                                  02S1174
*           GPR03F=GPR03F+((SQA)*256);/* SUBPOOL VALUE               */
         AL    GPR03F,@CF02506                                  02S1175
*           GPR04P=WSAGGMFM;        /* POINT TO SAVE AREA            */
         L     @15,CVTPTR                                       02S1176
         L     @10,CVTSPSA(,@15)                                02S1176
         L     GPR04P,WSAGGMFM(,@10)                            02S1176
*           CALL CVTGLMN;           /* BRANCH ENTRY POINT            */
         L     @15,CVTGLMN(,@15)                                02S1177
         BALR  @14,@15                                          02S1177
*           RESPECIFY                                           02S1178
*            (GPR01F,                                           02S1178
*             GPR03F,                                           02S1178
*             GPR00F,                                           02S1178
*             GPR04P) UNRESTRICTED;                             02S1178
*         END;                      /* FREEMAIN(RU)             02S1179
*                                      LV(LENGTH(MCEE))A(MCEE)  02S1179
*                                      SP(SQA) BRANCH(GLOBAL)        */
*         MCEETOFR=NEXTMCEE;        /* NEXT MCEE TO BE FREED         */
         LR    MCEETOFR,NEXTMCEE                                02S1180
*       END;                        /* LOOP THRU ALL MCEES, UNTIL
*                                      END-OF-CHAIN FOUND            */
@DE01166 LTR   MCEETOFR,MCEETOFR                                02S1181
         BNZ   @DL01166                                         02S1181
*       RFY                                                     02S1182
*        (MCEETOFR,                                             02S1182
*         NEXTMCEE) UNRSTD;                                     02S1182
*                                                               02S1183
*       /*************************************************************/
*       /*                                                           */
*       /* THEN FREE THE MCCLES                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1183
*       RFY                                                     02S1183
*         MCCLE BASED(MCCLTOFR);                                02S1183
*       RFY                                                     02S1184
*        (MCCLTOFR,                                             02S1184
*         NEXTMCCL) RSTD;                                       02S1184
*       MCCLTOFR=MCQEMCCL;          /* LOAD FIRST MCCLE ADDRESS      */
         L     @15,MCCEOMCQ(,SRBPARM2)                          02S1185
         L     MCCLTOFR,MCQEMCCL(,@15)                          02S1185
*       DO WHILE(MCCLTOFR^=0);      /* LOOP UNTIL LAST MCCLE HAS BEEN
*                                      FREED                         */
         B     @DE01186                                         02S1186
@DL01186 DS    0H                                               02S1187
*         NEXTMCCL=MCCLMCQL;        /* PICK UP SUCCESSOR BEFORE THIS
*                                      ONE IS FREED                  */
         L     NEXTMCCL,MCCLMCQL(,MCCLTOFR)                     02S1187
*         DO;                       /* FREEMAIN(RU)             02S1188
*                                      LV(LENGTH(MCCLE))A(MCCLE)
*                                      SP(SQA) BRANCH(GLOBAL)        */
*           RESPECIFY                                           02S1189
*            (GPR01F,                                           02S1189
*             GPR03F,                                           02S1189
*             GPR00F,                                           02S1189
*             GPR04P) RESTRICTED;                               02S1189
*           GPR01F=0;               /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                    02S1190
*           GPR03F=3;               /* SET TYPE                      */
         LA    GPR03F,3                                         02S1191
*           GPR00F=LENGTH(MCCLE);   /* LENGTH REQUESTED              */
         LA    GPR00F,28                                        02S1192
*           GPR01F=ADDR(MCCLE);     /* SET REGISTER ONE              */
         LR    GPR01F,MCCLTOFR                                  02S1193
*           GPR03F=GPR03F+((SQA)*256);/* SUBPOOL VALUE               */
         AL    GPR03F,@CF02506                                  02S1194
*           GPR04P=WSAGGMFM;        /* POINT TO SAVE AREA            */
         L     @15,CVTPTR                                       02S1195
         L     @10,CVTSPSA(,@15)                                02S1195
         L     GPR04P,WSAGGMFM(,@10)                            02S1195
*           CALL CVTGLMN;           /* BRANCH ENTRY POINT            */
         L     @15,CVTGLMN(,@15)                                02S1196
         BALR  @14,@15                                          02S1196
*           RESPECIFY                                           02S1197
*            (GPR01F,                                           02S1197
*             GPR03F,                                           02S1197
*             GPR00F,                                           02S1197
*             GPR04P) UNRESTRICTED;                             02S1197
*         END;                      /* FREEMAIN(RU)             02S1198
*                                      LV(LENGTH(MCCLE))A(MCCLE)
*                                      SP(SQA) BRANCH(GLOBAL)        */
*         MCCLTOFR=NEXTMCCL;        /* LOAD NEXT MCCLE TO BE FREED   */
         LR    MCCLTOFR,NEXTMCCL                                02S1199
*       END;                        /* LOOP UNTIL END-OF-CHAIN IS
*                                      FOUND                         */
@DE01186 LTR   MCCLTOFR,MCCLTOFR                                02S1200
         BNZ   @DL01186                                         02S1200
*       RFY                                                     02S1201
*        (MCCLTOFR,                                             02S1201
*         NEXTMCCL) UNRSTD;                                     02S1201
*                                                               02S1202
*       /*************************************************************/
*       /*                                                           */
*       /* NOW FREE THE MCQE                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1202
*       DO;                         /* FREEMAIN(RU)             02S1202
*                                      LV(LENGTH(MCQE))A(MCQE)  02S1202
*                                      SP(SQA) BRANCH(GLOBAL)        */
*         RESPECIFY                                             02S1203
*          (GPR01F,                                             02S1203
*           GPR03F,                                             02S1203
*           GPR00F,                                             02S1203
*           GPR04P) RESTRICTED;                                 02S1203
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                    02S1204
*         GPR03F=3;                 /* SET TYPE                      */
         LA    GPR03F,3                                         02S1205
*         GPR00F=LENGTH(MCQE);      /* LENGTH REQUESTED              */
         LA    GPR00F,88                                        02S1206
*         GPR01F=ADDR(MCQE);        /* SET REGISTER ONE              */
         L     GPR01F,MCCEOMCQ(,SRBPARM2)                       02S1207
*         GPR03F=GPR03F+((SQA)*256);/* SUBPOOL VALUE                 */
         AL    GPR03F,@CF02506                                  02S1208
*         GPR04P=WSAGGMFM;          /* POINT TO SAVE AREA            */
         L     @15,CVTPTR                                       02S1209
         L     @10,CVTSPSA(,@15)                                02S1209
         L     GPR04P,WSAGGMFM(,@10)                            02S1209
*         CALL CVTGLMN;             /* BRANCH ENTRY POINT            */
         L     @15,CVTGLMN(,@15)                                02S1210
         BALR  @14,@15                                          02S1210
*         RESPECIFY                                             02S1211
*          (GPR01F,                                             02S1211
*           GPR03F,                                             02S1211
*           GPR00F,                                             02S1211
*           GPR04P) UNRESTRICTED;                               02S1211
*       END;                        /* FREEMAIN(RU)             02S1212
*                                      LV(LENGTH(MCQE))A(MCQE)  02S1212
*                                      SP(SQA) BRANCH(GLOBAL)        */
*                                                               02S1213
*       /*************************************************************/
*       /*                                                           */
*       /* COMPLETE PROCESSING BY REMOVING THE FRR, RELEASING THE    */
*       /* SALLOC LOCK, AND POSTING COMPLTION VIA THE MCEEECB. THE   */
*       /* LOCAL LOCK MUST BE OBTAINED AND RELEASED AROUND THE BRANCH*/
*       /* ENTRY TO POST                                             */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1213
*       SRBRTRN=FRRRET;             /* LOAD RETURN ADDRESS           */
         L     SRBRTRN,FRRRET(,FRRLIST)                         02S1213
*       GENERATE;                                               02S1214
         SETFRR D,WRKREGS=(5,6) DELETE THE ERROR RECOVERY
AHLTFR04 SETLOCK RELEASE,TYPE=SALLOC,                                  *
               RELATED=(FREEMCCE,AHLSETEV,AHLTFR00)  RELEASE SALLOC
*                        SINCE IT IS NO LONGER NEEDED
AHLTFR05 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(POSTMCCE,AHLSETEV,AHLTFR06)  OBTAIN LOCAL
*                        TO POST THE MCCEECB
          SR    ECBCODE,ECBCODE            SET COMPLETION CODE TO 0
          LA    SRBECB,MCCEECB(SRBPARM2)   POINT TO MCCEECB TO POST
          L     TEMPREG,CVTPTR             FIND CVT ADDRESS
          L     TEMPREG,CVT0PT01(TEMPREG)  FIND BRANCH ENTRY TO POST
          BALR  RETURNAD,TEMPREG           CALL POST
AHLTFR06 SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(POSTMCCE,AHLSETEV,AHLTFR05) RELEASE LOCK
*       GO TO SRBRTRN;              /* RETURN TO THE SYSTEM          */
         BR    SRBRTRN                                          02S1215
*       GEN(DROP  BASEREG);                                     02S1216
         DROP  BASEREG
*       RFY                                                     02S1217
*         BASEREG UNRSTD;                                       02S1217
*     END;                          /* END OF MCQE PATH              */
*AHLMCQP:                                                       02S1219
*   GENERATE;                                                   02S1219
*                                                               02S1219
AHLMCQP  DS    0H                                               02S1219
          BALR  BASEREG,0
          USING *,BASEREG
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING SRB ROUTINE RECEIVES CONTROL WHEN THE SRB IN AN */
*   /* MCQE GETS SCHEDULED. ITS JOB IS TO POST THE TERMINATE ECB IN  */
*   /* THE MCQE, MCQETECB.                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1220
*   RFY                                                         02S1220
*     MCQE BASED(SRBPARM2);                                     02S1220
*   RFY                                                         02S1221
*    (SRBPARM2,                                                 02S1221
*     SRBRTRN,                                                  02S1221
*     BASEREG,                                                  02S1221
*     SRBPARM1,                                                 02S1221
*     RETURNAD) RSTD;                                           02S1221
*   SRBPARM2=SRBPARM1;              /* SAVE MCQE ADDRESS IN A SAFE
*                                      REGISTER                      */
         LR    SRBPARM2,SRBPARM1                                02S1222
*   SRBRTRN=RETURNAD;               /* SAVE RETURN ADDRESS           */
*                                                               02S1223
         LR    SRBRTRN,RETURNAD                                 02S1223
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE LOCAL LOCK FOR BRANCH ENTRY POST                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1224
*   GENERATE;                                                   02S1224
AHLMCQP1 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(MCQEPOST,AHLSETEV,AHLMCQP2)
*                                                               02S1225
*   /*****************************************************************/
*   /*                                                               */
*   /* POST THE MCQETECB TO CAUSE TERMINATION OF THE APPLICATION     */
*   /* DESCRIBED BY THIS MCQE                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1225
*   RFY                                                         02S1225
*    (ECBCODE,                                                  02S1225
*     SRBECB) RSTD;                                             02S1225
*   ECBCODE=0;                      /* SET THE ECB COMPLETION CODE TO
*                                      ZERO                          */
         SLR   ECBCODE,ECBCODE                                  02S1226
*   SRBECB=ADDR(MCQETECB);          /* POINT TO THE MCQE ECB TO POST */
         LA    SRBECB,MCQETECB(,SRBPARM2)                       02S1227
*   CALL BRPOST;                    /* GO TO POST TO SIGNAL ECB 02S1228
*                                      COMPLETION                    */
         L     @06,CVTPTR                                       02S1228
         L     @15,CVT0PT01(,@06)                               02S1228
         BALR  @14,@15                                          02S1228
*   RFY                                                         02S1229
*    (ECBCODE,                                                  02S1229
*     SRBECB) UNRSTD;                                           02S1229
*                                                               02S1229
*   /*****************************************************************/
*   /*                                                               */
*   /* RELEASE THE LOCAL LOCK                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1230
*   GENERATE;                                                   02S1230
*                                                               02S1230
AHLMCQP2 SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(MCQEPOST,AHLSETEV,AHLMCQP1)
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO THE SYSTEM                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1231
*   GO TO SRBRTRN;                                              02S1231
         BR    SRBRTRN                                          02S1231
*   GEN(DROP  BASEREG);                                         02S1232
         DROP  BASEREG
*   RFY                                                         02S1233
*     BASEREG UNRSTD;                                           02S1233
*                                                               02S1234
*   /*****************************************************************/
*   /*                                                               */
*   /* AHLMCPST SRB ROUTINE - THIS SRB ROUTINE RECEIVES CONTROL WHEN */
*   /* ALL MCQES OFF THE MCCE (POINTED TO BY R1) ARE TO BE POSTED TO */
*   /* TERMINATE DUE TO AN ERROR ENCOUNTERED IN THE MC ROUTING       */
*   /* FACILITY. THE POSTING IS ACCOMPLISHED BY SCHEDULING THE SRB IN*/
*   /* EACH MCQE, CAUSING SRB ROUTINE AHLMCQP TO POST EACH MCQE TO   */
*   /* TERMINATE                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1234
*AHLMCPST:                                                      02S1234
*   GENERATE;                                                   02S1234
*                                                               02S1234
AHLMCPST DS    0H                                               02S1234
         BALR  BASEREG,0
         USING *,BASEREG
         LA    TEMPREG,AHLTFFRR        LOAD FRR ROUTINE ADDRESS
         SETFRR A,FRRAD=(TEMPREG),WRKREGS=(2,3),PARMAD=(FRRLIST)
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR RECOVERY HAS BEEN SET UP TO ENSURE THAT THE MCCEECB GETS*/
*   /* POSTED. INITIALIZE THE FRR PARAMETER LIST TO ALLOW AHLTFFRR TO*/
*   /* FIND THE MCCE                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1235
*   RFY                                                         02S1235
*    (SRBPARM2,                                                 02S1235
*     BASEREG,                                                  02S1235
*     FRRLIST,                                                  02S1235
*     RETURNAD,                                                 02S1235
*     SRBPTR) RSTD;                                             02S1235
*   SRBPARM2=SRBPARM1;              /* SAVE THE MCCE ADDRESS IN SAFE
*                                      REG                           */
         LR    SRBPARM2,SRBPARM1                                02S1236
*   RFY                                                         02S1237
*     MCCE BASED(SRBPARM2);                                     02S1237
*   FRRTABL=ADDR(MCCE);             /* SAVE MCCE ADDRESS FOR FRR
*                                      ROUTINE                       */
         ST    SRBPARM2,FRRTABL(,FRRLIST)                       02S1238
*   FRRSALOC=0;                     /* INDICATE SALLOC LOCK NOT YET
*                                      GOTTEN                        */
         MVI   FRRSALOC(FRRLIST),X'00'                          02S1239
*   FRRRET=RETURNAD;                /* SAVE SYSTEM ROTURN ADDRESS FOR
*                                      RETRY                         */
         ST    RETURNAD,FRRRET(,FRRLIST)                        02S1240
*                                                               02S1241
*   /*****************************************************************/
*   /*                                                               */
*   /* SCHEDULE THE SRB IN EACH VALID MCQE IF IT HAS NOT ALREADY BEEN*/
*   /* SCHEDULED                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1241
*   RFY                                                         02S1241
*     MCQEADR RSTD;                                             02S1241
*   MCQEADR=MCCEQEA;                /* LOAD FIRST MCQE ADDRESS       */
         L     MCQEADR,MCCEQEA(,SRBPARM2)                       02S1242
*   RFY                                                         02S1243
*     MCQE BASED(MCQEADR);                                      02S1243
*   DO WHILE(MCQEADR^=0&MCQEIDEN=MCQETAG);/* LOOP UNTIL EITHER THE
*                                      VALID END IS REACHED, OR THE
*                                      CHAIN IS BROKEN               */
         B     @DE01244                                         02S1244
@DL01244 DS    0H                                               02S1245
*     GEN(TS    MCQESCHE(MCQEADR)); /* TEST MCQESCHE FLAG - IF  02S1245
*                                      ALREADY SET, SRB HAS ALREADY
*                                      BEEN SCHEDULED                */
         TS    MCQESCHE(MCQEADR)
*     BC(7,AHLMCP01);               /* IF SCHEDULED, DONT RESCHEDULE
*                                                            @YM01899*/
         BC    7,AHLMCP01                                       02S1246
*     SRBPTR=ADDR(MCQESRB);         /* POINT AT SRB TO BE SCHEDULED  */
         LA    SRBPTR,MCQESRB(,MCQEADR)                         02S1247
*     GEN(SCHEDULE SRB=(1));        /* SCHEDULE THE SRB              */
         SCHEDULE SRB=(1)
*AHLMCP01:                                                      02S1249
*     MCQEADR=MCQEMCQE;             /* LOAD NEXT MCQE ADDRESS        */
AHLMCP01 L     MCQEADR,MCQEMCQE(,MCQEADR)                       02S1249
*   END;                            /* LOOP UNTIL END IS REACHED     */
@DE01244 LTR   MCQEADR,MCQEADR                                  02S1250
         BZ    @DC01244                                         02S1250
         CLC   MCQEIDEN(8,MCQEADR),@CC00170                     02S1250
         BE    @DL01244                                         02S1250
@DC01244 DS    0H                                               02S1251
*   RFY                                                         02S1251
*     MCQEADR UNRSTD;                                           02S1251
*                                                               02S1252
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL APPLICATIONS HAVE BEEN POSTED. THE ROUTING TABLES, MCED   */
*   /* AND MCCD, MUST NOW BE FREED. THE MCQES WILL BE FREED WHEN THE */
*   /* APPLICATIONS ISSUE THEIR REQUIRED SETEVENT FREES. FIRST, THE  */
*   /* SALLOC LOCK MUST BE OBTAINED TO ISSUE THE FREEMAINS           */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1252
*   GENERATE;                                                   02S1252
AHLMCP02 SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,                       *
               RELATED=(MCCEFREE,AHLSETEV,AHLMCP03)
*   FRRSALOC='80'X;                 /* INDICATE TO FRR ROUTINE THAT
*                                      SALLOC LOCK MUST BE RELEASED  */
         MVI   FRRSALOC(FRRLIST),X'80'                          02S1253
*   RFY                                                         02S1254
*    (FTREEAD,                                                  02S1254
*     SINKADDR) RSTD;                                           02S1254
*                                                               02S1254
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE MCED IF IT IS INDICATED TO BE FREED                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1255
*   IF MCCEEDA^=0 THEN                                          02S1255
         L     @06,MCCEEDA(,SRBPARM2)                           02S1255
         LTR   @06,@06                                          02S1255
         BZ    @RF01255                                         02S1255
*     DO;                                                       02S1256
*                                                               02S1256
*       /*************************************************************/
*       /*                                                           */
*       /* MCED IS TO BE FREED. TO FREE IT, ALL ITS ASSOCIATED       */
*       /* STORAGE MUST BE DEFINED TO ITS FREESPACE QUEUE. TO FORCE  */
*       /* THIS, ALL REMAINING ENTRIES MUST BE DELETED FROM THE MCED.*/
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1257
*       FTREEAD=MCCEEDA;                                        02S1257
         LR    FTREEAD,@06                                      02S1257
*AHLMCPS1:                                                      02S1258
*       GEN(SRCH  (FTREEAD),SARG=DUMMYARG,TYPE=5,KEYL=2);/* PERFORM
*                                      SEARCH FOR A DUMMY MCEE, TO
*                                      FIND OUT IF THERE ARE ANY
*                                      ENTRIES TO BE DELETED FROM THE
*                                      TREE                          */
AHLMCPS1 SRCH  (FTREEAD),SARG=DUMMYARG,TYPE=5,KEYL=2
*       IF SINKIND<0 THEN                                       02S1259
         LTR   SINKIND,SINKIND                                  02S1259
         BM    @RT01259                                         02S1259
*         GO TO AHLMCPS2;           /* IF RETURNED MCEE ADDRESS IS
*                                      NEGATIVE, ALL ENTRIES HAVE
*                                      BEEN DELETED. GO FREE THE
*                                      SPACE                         */
*       GEN(DEL  (FTREEAD),FREE=NO,TYPE=5);/* OTHERWISE, AN ENTRY
*                                      STILL EXISTS. DELETE IT FROM
*                                      THE MCED, CAUSING ITS STORAGE
*                                      TO BE PLACED ON THE FREESPACE
*                                      QUEUE                         */
         DEL  (FTREEAD),FREE=NO,TYPE=5
*       GO TO AHLMCPS1;             /* LOOP BACK UNTIL ALL REMAINING
*                                      ENTRIES ARE DELETED FROM THE
*                                      MCED                          */
         B     AHLMCPS1                                         02S1262
*       RFY                                                     02S1263
*         SINKADDR UNRSTD;                                      02S1263
*                                                               02S1264
*       /*************************************************************/
*       /*                                                           */
*       /* ALL ENTRIES HAVE BEEN DELETED FROM THE MCED, AND THEREFORE*/
*       /* ALL ITS STORAGE IS DEFINED BY THE FREESPACE QUEUE. THE    */
*       /* FOLLOWING CODE FREES ALL MCED STORAGE, STARTING WITH THE  */
*       /* PREFIX                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1264
*       RFY                                                     02S1264
*        (FRSPCELM,                                             02S1264
*         NXTFRSP) RSTD;                                        02S1264
*AHLMCPS2:                                                      02S1265
*       GENERATE;                                               02S1265
*                                                               02S1265
AHLMCPS2 DS    0H                                               02S1265
         USING IGARPTH5,FTREEAD
         L     FRSPCELM,IGAHVFC5     LOAD FREESPACE QUEUE ADDRESS
         LA    FRSPCELM,0(FRSPCELM)  CLEAR HI BYTE
         LA    REG0,IGATYP5S         SET LENGTH TO FREE PREEFIX OF MCED
         FREEMAIN RU,LV=(0),A=(FTREEAD),BRANCH=(YES,GLOBAL),SP=245
         DROP  FTREEAD
*       /*************************************************************/
*       /*                                                           */
*       /* FREE ALL STORAGE ON THE FREESPACE QUEUE                   */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1266
*       DO WHILE(FRSPCELM^=0);      /* IF THERE ARE ELEMENTS ON THE
*                                      FREESPACE QUEUE, FREE THEM    */
         B     @DE01266                                         02S1266
@DL01266 DS    0H                                               02S1267
*         NXTFRSP=FRESPLNK;         /* PICK UP ADDRESS OF NEXT  02S1267
*                                      FREESPACE QUEUE ELEMENT BEOFRE
*                                      FREEING THIS ONE              */
         L     NXTFRSP,FRESPLNK-1(,FRSPCELM)                    02S1267
         LA    NXTFRSP,0(,NXTFRSP)                              02S1267
*         DO;                       /* FREEMAIN(RU) LV(LENGTH(FRESPAC
*                                      E))A(FRESPACE) SP(SQA)   02S1268
*                                      BRANCH(GLOBAL)                */
*           RESPECIFY                                           02S1269
*            (GPR01F,                                           02S1269
*             GPR03F,                                           02S1269
*             GPR00F,                                           02S1269
*             GPR04P) RESTRICTED;                               02S1269
*           GPR01F=0;               /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                    02S1270
*           GPR03F=3;               /* SET TYPE                      */
         LA    GPR03F,3                                         02S1271
*           GPR00F=LENGTH(FRESPACE);/* LENGTH REQUESTED              */
         LA    GPR00F,8                                         02S1272
*           GPR01F=ADDR(FRESPACE);  /* SET REGISTER ONE              */
         LR    GPR01F,FRSPCELM                                  02S1273
*           GPR03F=GPR03F+((SQA)*256);/* SUBPOOL VALUE               */
         AL    GPR03F,@CF02506                                  02S1274
*           GPR04P=WSAGGMFM;        /* POINT TO SAVE AREA            */
         L     @15,CVTPTR                                       02S1275
         L     @02,CVTSPSA(,@15)                                02S1275
         L     GPR04P,WSAGGMFM(,@02)                            02S1275
*           CALL CVTGLMN;           /* BRANCH ENTRY POINT            */
         L     @15,CVTGLMN(,@15)                                02S1276
         BALR  @14,@15                                          02S1276
*           RESPECIFY                                           02S1277
*            (GPR01F,                                           02S1277
*             GPR03F,                                           02S1277
*             GPR00F,                                           02S1277
*             GPR04P) UNRESTRICTED;                             02S1277
*         END;                      /* FREEMAIN(RU) LV(LENGTH(FRESPAC
*                                      E))A(FRESPACE) SP(SQA)   02S1278
*                                      BRANCH(GLOBAL)                */
*         FRSPCELM=NXTFRSP;         /* PICK UP THE NEXT QUEUE ELEMENT
*                                      FROM WHERE IT WAS SAVED       */
         LR    FRSPCELM,NXTFRSP                                 02S1279
*       END;                        /* LOOP UNTIL ALL FREESPACE 02S1280
*                                      ELEMENTS ARE FREED            */
@DE01266 LTR   FRSPCELM,FRSPCELM                                02S1280
         BNZ   @DL01266                                         02S1280
*     END;                          /* END OF MCED FREEING PATH      */
*   RFY                                                         02S1282
*    (FRSPCELM,                                                 02S1282
*     NXTFRSP,                                                  02S1282
*     FTREEAD) UNRSTD;                                          02S1282
@RF01255 DS    0H                                               02S1283
*                                                               02S1283
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE MCCD STORAGE IF IT IS INDICATED TO BE FREED              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1283
*   IF MCCECDA^=0 THEN                                          02S1283
         L     @15,MCCECDA(,SRBPARM2)                           02S1283
         LTR   @15,@15                                          02S1283
         BZ    @RF01283                                         02S1283
*     DO;                           /*                       @YM03654*/
*       RFY                                                     02S1285
*         MCCD BASED(MCCECDA);      /*                       @YM03654*/
*       DO;                         /* FREEMAIN(RU)             02S1286
*                                      LV(LENGTH(MCCD))A(MCCD)  02S1286
*                                      SP(245) BRANCH(GLOBAL)        */
*         RESPECIFY                                             02S1287
*          (GPR01F,                                             02S1287
*           GPR03F,                                             02S1287
*           GPR00F,                                             02S1287
*           GPR04P) RESTRICTED;                                 02S1287
*         GPR01F=0;                 /* REG 1 MUST BE ZERO            */
         SLR   GPR01F,GPR01F                                    02S1288
*         GPR03F=3;                 /* SET TYPE                      */
         LA    GPR03F,3                                         02S1289
*         GPR00F=LENGTH(MCCD);      /* LENGTH REQUESTED              */
         LA    GPR00F,76                                        02S1290
*         GPR01F=ADDR(MCCD);        /* SET REGISTER ONE              */
         LR    GPR01F,@15                                       02S1291
*         GPR03F=GPR03F+((245)*256);/* SUBPOOL VALUE                 */
         AL    GPR03F,@CF02506                                  02S1292
*         GPR04P=WSAGGMFM;          /* POINT TO SAVE AREA            */
         L     @15,CVTPTR                                       02S1293
         L     @10,CVTSPSA(,@15)                                02S1293
         L     GPR04P,WSAGGMFM(,@10)                            02S1293
*         CALL CVTGLMN;             /* BRANCH ENTRY POINT            */
         L     @15,CVTGLMN(,@15)                                02S1294
         BALR  @14,@15                                          02S1294
*         RESPECIFY                                             02S1295
*          (GPR01F,                                             02S1295
*           GPR03F,                                             02S1295
*           GPR00F,                                             02S1295
*           GPR04P) UNRESTRICTED;                               02S1295
*       END;                        /* FREEMAIN(RU)             02S1296
*                                      LV(LENGTH(MCCD))A(MCCD)  02S1296
*                                      SP(245) BRANCH(GLOBAL)        */
*     END;                                                      02S1297
*                                                               02S1297
*   /*****************************************************************/
*   /*                                                               */
*   /* REMOVE THE FRR, RELEASE THE SALLOC LOCK, AND OBTAIN THE LOCAL */
*   /* LOCK FOR BRANCH ENTRY TO POST                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1298
*   GENERATE;                                                   02S1298
@RF01283 DS    0H                                               02S1298
         SETFRR D,WRKREGS=(11,12)
AHLMCP03 SETLOCK RELEASE,TYPE=SALLOC,                                  *
               RELATED=(MCCEFREE,AHLSETEV,AHLMCP02)
AHLMCP04 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(MCCEPOST,AHLSETEV,AHLMCP05)
*   RFY                                                         02S1299
*    (ECBCODE,                                                  02S1299
*     SRBECB) RSTD;                                             02S1299
*   ECBCODE=0;                      /* SET THE COMPLETION CODE TO
*                                      ZERO                          */
         SLR   ECBCODE,ECBCODE                                  02S1300
*   SRBECB=ADDR(MCCEECB);           /* POINT TO THE ECB IN THE MCCE  */
         LA    SRBECB,MCCEECB(,SRBPARM2)                        02S1301
*   CALL BRPOST;                                                02S1302
         L     @06,CVTPTR                                       02S1302
         L     @15,CVT0PT01(,@06)                               02S1302
         BALR  @14,@15                                          02S1302
*   RFY                                                         02S1303
*    (ECBCODE,                                                  02S1303
*     SRBECB) UNRSTD;                                           02S1303
*   GENERATE;                                                   02S1304
AHLMCP05 SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(MCCEPOST,AHLSETEV,AHLMCP04)
*   GO TO FRRRET;                   /* RETURN TO THE SYSTEM  @YM01899*/
         L     @15,FRRRET(,FRRLIST)                             02S1305
         BR    @15                                              02S1305
*   GEN(DROP    BASEREG);           /*                       @YM01899*/
         DROP    BASEREG
*                                                               01S1307
*   /*****************************************************************/
*   /*                                                               */
*   /* ERROR RECOVERY ROUTINES                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S1307
*                                                               02S1307
*   /*****************************************************************/
*   /*                                                               */
*   /* AHLSETES - THIS IS THE ESTAE ROUTINE FOR AHLSETEV             */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1307
*   RFY                                                         02S1307
*    (ESTAECOD,                                                 02S1307
*     RETURNAD,                                                 02S1307
*     TEMPREG,                                                  02S1307
*     R1PLSTAD) RSTD;                                           02S1307
*                                                               02S1307
*   /*****************************************************************/
*   /*                                                               */
*   /* TEMPORARY ADDRESSIBILITY                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1308
*   GEN(USING *,TEMPREG);                                       02S1308
         USING *,TEMPREG
*AHLSETES:                                                      02S1309
*   IF ESTAECOD=NORTCA THEN                                     02S1309
AHLSETES C     ESTAECOD,@CF00034                                02S1309
         BNE   @RF01309                                         02S1309
*     DO;                           /* IF THE RTCA IS NOT AVAILABLE,
*                                      CONTINUE WITH TERMINATION     */
*       RETCOD15=SDWACWT;           /* SET PROPER RETURN CODE        */
         SLR   RETCOD15,RETCOD15                                02S1311
*       GO TO RETURNAD;                                         02S1312
         BR    RETURNAD                                         02S1312
*     END;                                                      02S1313
*                                                               02S1313
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP ESTAE ROUTINE ADDRESSIBILITY TO SAVE AREAS, ETC        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1314
*   GENERATE;                                                   02S1314
@RF01309 DS    0H                                               02S1314
         STM   14,12,12(13)
         LM    BASER1,BASER2,AHLBASES   LOAD BASE REGS WITH ORIGINAL
         USING @PSTART,BASER1
         USING @PSTART+4095,BASER2
         DROP  TEMPREG
*   RFY                                                         02S1315
*     SDWA BASED(R1PLSTAD);         /*                       @YM01899*/
*   BASER3=SDWAPARM;                /* LOAD WORK AREA ADDRESS        */
         L     BASER3,SDWAPARM(,R1PLSTAD)                       02S1316
*   ESTAESAV(2)=SAVEAREA;           /* BACK CHAIN SAVE AREAS         */
         ST    SAVEAREA,ESTAESAV+4                              02S1317
*   FORCHAIN=ADDR(ESTAESAV);        /* FORWARD CHAIN SAVE AREAS      */
         LA    @10,ESTAESAV                                     02S1318
         ST    @10,FORCHAIN(,SAVEAREA)                          02S1318
*   SAVEAREA=ADDR(ESTAESAV);        /* POINT TO CURRENT              */
         LR    SAVEAREA,@10                                     02S1319
*   SDWAPTR=R1PLSTAD;               /* SAVE RTCA ADDRESS             */
         LR    SDWAPTR,R1PLSTAD                                 02S1320
*   RFY                                                         02S1321
*     SDWA BASED(SDWAPTR);          /*                       @YM01899*/
*                                                               02S1321
*   /*****************************************************************/
*   /*                                                               */
*   /* ADDRESSIBILITY HAS BEEN SET UP - CHECK FOR ACR ENTRY. IF ALL  */
*   /* IS OK FOR RETRY AT THE INTERRUPTED ADDRESS, DO SO CONTINUE    */
*   /* WITH TERMINATION IF IT IS NOT A PROGRAM CHECK                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1322
*   IF SDWAPCHK='0'B THEN                                       02S1322
         TM    SDWAPCHK(SDWAPTR),B'01000000'                    02S1322
         BNZ   @RF01322                                         02S1322
*     DO;                                                       02S1323
*       DO;                         /* DEQ (SETQNM,SETRNM,3,SYSTEMS)
*                                      RET(HAVE)                     */
*         I048(1:20)=I048(1:20)&&I048(1:20);                    02S1325
         XC    I048(20),I048                                    02S1325
*         RFY                                                   02S1326
*           GPR01F RESTRICTED;                                  02S1326
*         I04804(1)='11000000'B;    /* LISTEND BYTE                  */
         MVI   I04804,B'11000000'                               02S1327
*         I04805(1)=3;              /* SET LENGTH                    */
         MVI   I04805,X'03'                                     02S1328
*         I04806(1)='01001001'B;    /* OPTIONS                       */
         MVI   I04806,B'01001001'                               02S1329
*         I04807(1)=ADDR(SETQNM);   /* QNAME ADDRESS                 */
         LA    @10,@CC00164                                     02S1330
         ST    @10,I04807                                       02S1330
*         I04808(1)=ADDR(SETRNM);   /* RNAME ADDRESS                 */
         LA    @10,@CC00166                                     02S1331
         ST    @10,I04808                                       02S1331
*         GPR01F=ADDR(I04802);                                  02S1332
         LA    GPR01F,I04802                                    02S1332
*         SVC(48);                                              02S1333
         SVC   48                                               02S1333
*         RFY                                                   02S1334
*           GPR01F UNRESTRICTED;                                02S1334
*       END;                        /* DEQ (SETQNM,SETRNM,3,SYSTEMS)
*                                      RET(HAVE)             @YM03654*/
*       DO;                         /* SETRP RC(SDWACWT)             */
*         RESPECIFY                                             02S1337
*          (GPR00P,                                             02S1337
*           GPR01P,                                             02S1337
*           GPR14P,                                             02S1337
*           GPR15P) RSTD;                                       02S1337
*         GPR01P->SDWARCDE=SDWACWT; /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                           02S1338
*         RESPECIFY                                             02S1339
*          (GPR00P,                                             02S1339
*           GPR01P,                                             02S1339
*           GPR14P,                                             02S1339
*           GPR15P) UNRSTD;                                     02S1339
*       END;                        /*                       @YM03654*/
*       GO TO AHLESTX;              /* EXIT FROM THE ESTAE ROUTINE   */
         B     AHLESTX                                          02S1341
*     END;                                                      02S1342
*                                                               02S1343
*   /*****************************************************************/
*   /*                                                               */
*   /* A PROGRAM CHECK HAS OCCURRED DURING AHLSETEV. INVESTIGATE THE */
*   /* PARAMETER LIST TO DETERMINE IF THAT WAS THE CAUSE. ESTAE      */
*   /* ROUTINE AHLPLERR IS SET UP WHILE REFERENCING ALL BYTES        */
*   /* ASSOCIATED WITH THE PLIST. IF A PROGRAM CHECK OCCURS DURING   */
*   /* THIS REFERENCING, AHLPLERR WILL ABEND THE SETEVENT CALLER DUE */
*   /* TO AN INVALID PARAMETER LIST                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1343
*   GENERATE;                                                   02S1343
@RF01322 DS    0H                                               02S1343
         XC    ESTAELST(4),ESTAELST
         ESTAE AHLPLERR,CT,MF=(E,ESTAELST)    ESTABLISH ERROR RECOVERY
*   RFY                                                         02S1344
*    (WORKREG,                                                  02S1344
*     TEMPREG) RSTD;                                            02S1344
*   WORKREG=SETOPTS;                /* REFERENCE 1ST BYTE OF    02S1345
*                                      PARAMETER LIST                */
         L     @10,PLISTAD                                      02S1345
         SLR   WORKREG,WORKREG                                  02S1345
         IC    WORKREG,SETOPTS(,@10)                            02S1345
*   WORKREG=PASSEDQE;               /* REFERENCE LAST BYTE OF PLIST  */
         ICM   WORKREG,15,PASSEDQE(@10)                         02S1346
*   IF EIDNUM^=0 THEN                                           02S1347
         CLI   EIDNUM(@10),0                                    02S1347
         BE    @RF01347                                         02S1347
*     DO;                           /* IF THE ISSUER SPECIFIED AN EID
*                                      LIST, REFERENCE FIRST AND LAST
*                                      BYTES OF IT                   */
*       TEMPREG=EIDLSTAD;           /* FIND THE EID LIST             */
         ICM   TEMPREG,15,EIDLSTAD(@10)                         02S1349
*       GEN(IC    WORKREG,0(TEMPREG));/* REFERENCE FIRST BYTE        */
         IC    WORKREG,0(TEMPREG)
*       TEMPREG=TEMPREG+(EIDNUM*6)-1;/* FIND LAST BYTE               */
         L     @10,PLISTAD                                      02S1351
         SLR   @06,@06                                          02S1351
         IC    @06,EIDNUM(,@10)                                 02S1351
         MH    @06,@CH00250                                     02S1351
         ALR   @06,TEMPREG                                      02S1351
         BCTR  @06,0                                            02S1351
         LR    TEMPREG,@06                                      02S1351
*       GEN(IC    WORKREG,0(TEMPREG));/* REFERENCE LAST BYTE         */
         IC    WORKREG,0(TEMPREG)
*     END;                                                      02S1353
*   IF CLSNUM^=0 THEN                                           02S1354
@RF01347 L     @10,PLISTAD                                      02S1354
         CLI   CLSNUM(@10),0                                    02S1354
         BE    @RF01354                                         02S1354
*     DO;                           /* IF THE ISSUER SPECIFIED A
*                                      CLASS LIST, REFERENCE FIRST
*                                      AND LAST BYTES OF IT          */
*       TEMPREG=CLSLSTAD;           /* FIND THE CLASS LIST           */
         ICM   TEMPREG,15,CLSLSTAD(@10)                         02S1356
*       GEN(IC    WORKREG,0(TEMPREG));/* REFERENCE FIRST BYTE        */
         IC    WORKREG,0(TEMPREG)
*       TEMPREG=TEMPREG+(CLSNUM*6)-1;/* FIND LAST BYTE               */
         L     @10,PLISTAD                                      02S1358
         SLR   @06,@06                                          02S1358
         IC    @06,CLSNUM(,@10)                                 02S1358
         MH    @06,@CH00250                                     02S1358
         ALR   @06,TEMPREG                                      02S1358
         BCTR  @06,0                                            02S1358
         LR    TEMPREG,@06                                      02S1358
*       GEN(IC    WORKREG,0(TEMPREG));/* REFERENCE LAST BYTE         */
         IC    WORKREG,0(TEMPREG)
*     END;                                                      02S1360
*                                                               02S1360
*   /*****************************************************************/
*   /*                                                               */
*   /* USERS PARAMETER LIST HAS CHECKED OUT - A PROGRAM CHECK MUST   */
*   /* HAVE OCCURRED IN THE MC TABLES. TAKE A DUMP AND TERMINATE THE */
*   /* ROUTING FACILITY                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1361
*   GENERATE;                                                   02S1361
@RF01354 DS    0H                                               02S1361
         XC    ESTAELST(4),ESTAELST
         ESTAE AHLTBERR,OV,MF(E,ESTAELST)  OVERLAY AHLPLERR
*   RFY                                                         02S1362
*     MCHEAD BASED(CVTGTF);                                     02S1362
*   RFY                                                         02S1363
*    (WORKREG,                                                  02S1363
*     TEMPREG) UNRSTD;                                          02S1363
*   MCHACT='0'B;                    /* DISABLE ROUTING               */
         L     @15,CVTPTR                                       02S1364
         L     @15,CVTGTF(,@15)                                 02S1364
         NI    MCHACT(@15),B'01111111'                          02S1364
*   DO;                             /* WTOP MF(E,AHL132)             */
*     RFY                                                       02S1366
*       GPR01P RSTD;                /* RESTRICT REG 1                */
*     GPR01P=ADDR(AHL132);          /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA00150                                  02S1367
*     SVC(35);                      /* ISSUE WTO SVC                 */
         SVC   35                                               02S1368
*     RFY                                                       02S1369
*       GPR01P UNRSTD;              /* RELEASE REG 1                 */
*   END;                            /* WTOP MF(E,AHL132) NOTIFY OF
*                                      ROUTING FAILURE               */
*   GEN(SDUMP HDR='ERROR IN AHLSETEV',SDATA=SQA);/* TAKE A DUMP      */
         SDUMP HDR='ERROR IN AHLSETEV',SDATA=SQA
*   RFY                                                         02S1372
*     MCCE BASED(MCHCUR);                                       02S1372
*   RFY                                                         02S1373
*     SRBPTR RSTD;                                              02S1373
*                                                               02S1373
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE SRB IN THE CURRENT MCCE TO SCHEDULE ROUTINE        */
*   /* AHLMCPST TO POST ALL APPLICATIONS TO TERMINATE                */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1374
*   SRBPTR=ADDR(MCCESRB);           /* POINT TO CORRECT SRB          */
         L     @15,CVTPTR                                       02S1374
         L     @15,CVTGTF(,@15)                                 02S1374
         L     @15,MCHCUR(,@15)                                 02S1374
         LA    SRBPTR,MCCESRB(,@15)                             02S1374
*   SRBEP=ADDR(AHLMCPST);           /* CHANGE EP TO CORRECT ROUTINE  */
         LA    @10,AHLMCPST                                     02S1375
         ST    @10,SRBEP(,SRBPTR)                               02S1375
*   SRBASCB=PSAAOLD;                /* HAVE IT RUN IN THIS MEMORY    */
         L     @10,PSAAOLD                                      02S1376
         ST    @10,SRBASCB(,SRBPTR)                             02S1376
*   RFY                                                         02S1377
*     SRBPTR UNRSTD;                                            02S1377
*   MCCEPTR=MCHCUR;                 /* POINT TO MCCE TO BE REPLACED  */
         ST    @15,MCCEPTR                                      02S1378
*   NEWMCCE=0;                      /* NEWW MCCE ADDRESS TO BE USED
*                                      IS ZERO                       */
         SLR   @15,@15                                          02S1379
         ST    @15,NEWMCCE                                      02S1379
*   CALL CSDMCCE;                   /* CALL SUBROUTINE TO SWAP ZERO
*                                      IN FOR MCCE ADDRESS, AND 02S1380
*                                      SCHEDULE SRB                  */
         BAL   @14,CSDMCCE                                      02S1380
*   RFY                                                         02S1381
*     MCCE BASED(MCCEPTR);                                      02S1381
*   DO;                             /* WAIT ECB(MCCEECB)             */
*     RESPECIFY                                                 02S1383
*      (GPR00P,                                                 02S1383
*       GPR01P) RESTRICTED;                                     02S1383
*     GPR00P=1;                     /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                         02S1384
*     GPR01P=ADDR(MCCEECB);         /* ADDRESS OF ECB                */
         L     GPR01P,MCCEPTR                                   02S1385
         LA    GPR01P,MCCEECB(,GPR01P)                          02S1385
*     SVC(1);                       /* WAIT SVC                      */
         SVC   1                                                02S1386
*     RESPECIFY                                                 02S1387
*      (GPR00P,                                                 02S1387
*       GPR01P) UNRESTRICTED;                                   02S1387
*   END;                            /* WAIT ECB(MCCEECB) WAIT FOR SRB
*                                      ROUTINE AHLMCPST TO POST ECB
*                                      IN MCCE TO SIGNAL THAT IT IS
*                                      DONE.                         */
*                                                               02S1388
*   /*****************************************************************/
*   /*                                                               */
*   /* FINISH CLEANING UP BY FREEING THE MCCE, PGFREEING MODULE      */
*   /* AHLSETD, AND CLEARING THE CONTROL REGISTER MASK.              */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1389
*   DO;                             /* FREEMAIN (E) LV(LENGTH(MCCE))
*                                      A(MCCEPTR) SP(SQA)            */
*     RESPECIFY                                                 02S1390
*      (GPR01P) RESTRICTED;                                     02S1390
*     I005=I005&&I005;              /* INIT LIST                     */
         XC    I005(10),I005                                    02S1391
*     I00505='00'X;                 /* SET TYPE                      */
         MVI   I00505,X'00'                                     02S1392
*     I00502=LENGTH(MCCE);          /* LENGTH                        */
         MVC   I00502(3),@CF02504+1                             02S1393
*     I00504=ADDR(MCCEPTR);         /* ADDR OF ADDR LIST             */
         LA    @15,MCCEPTR                                      02S1394
         STCM  @15,7,I00504                                     02S1394
*     I00506=SQA;                   /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                     02S1395
*     GPR01P=ADDR(I005);            /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                      02S1396
*     SVC(5);                       /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                02S1397
*     RESPECIFY                                                 02S1398
*      (GPR01P) UNRESTRICTED;                                   02S1398
*   END;                            /* FREEMAIN (E) LV(LENGTH(MCCE))
*                                      A(MCCEPTR) SP(SQA) FREE THE
*                                      MCCE SINCE ALL ARE DONE WITH
*                                      IT                            */
*   DO;                             /* PGFREE(R) A(SETDPTR)          */
*     RESPECIFY                                                 02S1401
*      (GPR00P,                                                 02S1401
*       GPR01P) RESTRICTED;                                     02S1401
*     GPR00P=0;                     /* INDICATE NO PAGE ECB          */
         SLR   GPR00P,GPR00P                                    02S1402
*     GPR01P=ADDR(SETDPTR);         /* PAGE ADDR                     */
         L     @15,CVTPTR                                       02S1403
         L     @15,CVTGTF(,@15)                                 02S1403
         L     @15,MCHSETD(,@15)                                02S1403
         LR    GPR01P,@15                                       02S1403
*     RESPECIFY                                                 02S1404
*       GPR15P RESTRICTED;                                      02S1404
*     GPR15P=ADDR(SETDPTR)+1;       /* VSL ADDR OMITTED              */
         ST    @15,@TF00001                                     02S1405
         LA    GPR15P,1                                         02S1405
         AL    GPR15P,@TF00001                                  02S1405
*     GPR01P=GPR01P×'20000000'X;    /* R, PGFREE & RELEASE FLAG      */
         O     GPR01P,@CF02311                                  02S1406
*     SVC(113);                     /* ISSUE PGFREE SVC              */
         SVC   113                                              02S1407
*     RESPECIFY                                                 02S1408
*      (GPR00P,                                                 02S1408
*       GPR01P,                                                 02S1408
*       GPR15P) UNRESTRICTED;                                   02S1408
*   END;                            /* PGFREE(R) A(SETDPTR) FREE
*                                      AHLSETD PAGE SINCE IT IS NO
*                                      LONGER REQUIRED TO BE FIXED   */
*   MCHCTL=0;                       /* SET THE CONTROL REGISTER MASK
*                                      TO ZERO                       */
         L     @15,CVTPTR                                       02S1410
         L     @15,CVTGTF(,@15)                                 02S1410
         SLR   @10,@10                                          02S1410
         ST    @10,MCHCTL(,@15)                                 02S1410
*   CALL CR8SET;                    /* SET THE CONTROL REGISTER ON
*                                      ALL CPUS                      */
         BAL   @14,CR8SET                                       02S1411
*   GEN(ESTAE 0);                   /* REMOVE THE ESTAE              */
         ESTAE 0
*AHLTBERR:                                                      02S1413
*   RTRNCODE=TERMPHSE;              /* SET TERMINATION RETURN CODE TO
*                                      ISSUER                        */
AHLTBERR MVC   RTRNCODE(4),@CF00097                             02S1413
*   R1PLSTAD=SDWAPTR;               /* FIND RTCA                     */
         LR    R1PLSTAD,SDWAPTR                                 02S1414
*   DO;                             /* SETRP RETADDR(AHLEXIT)RETREGS(
*                                      YES)RC(SDWARETY)FRESDWA(YES)  */
*     RESPECIFY                                                 02S1416
*      (GPR00P,                                                 02S1416
*       GPR01P,                                                 02S1416
*       GPR14P,                                                 02S1416
*       GPR15P) RSTD;                                           02S1416
*     GPR01P->SDWARCDE=SDWARETY;    /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                           02S1417
*     GPR01P->SDWARTYA=ADDR(AHLEXIT);/* SAVE RETRY ADDRESS           */
         LA    @10,AHLEXIT                                      02S1418
         ST    @10,SDWARTYA(,GPR01P)                            02S1418
*     GPR01P->SDWAFREE='1'B;        /* SET FLAG TO FREE SDWA         */
*     GPR01P->SDWAUPRG='1'B;        /* TURN ON RETREGS INDICATOR     */
         OI    SDWAFREE(GPR01P),B'00001100'                     02S1420
*     RESPECIFY                                                 02S1421
*      (GPR00P,                                                 02S1421
*       GPR01P,                                                 02S1421
*       GPR14P,                                                 02S1421
*       GPR15P) UNRSTD;                                         02S1421
*   END;                            /*                       @ZA27501
*                                      OZ27501                       */
*AHLESTX:                                                       02S1423
*   GENERATE;                                                   02S1423
AHLESTX  DS    0H                                               02S1423
         L     SAVEAREA,4(SAVEAREA)
         LM    14,12,12(SAVEAREA)
         BR    RETURNAD
*                                                               02S1424
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING ESATE ROUTINE WILL RECEIVE CONTROL IF A PROGRAM */
*   /* CHECK OCCURS WHILE INVESTIGATING THE ISSUERS PARAMETER LIST   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1424
*   RFY                                                         02S1424
*     ABNDCODE RSTD;                                            02S1424
*   GEN(USING *,TEMPREG);                                       02S1425
         USING *,TEMPREG
*AHLPLERR:                                                      02S1426
*   DO;                             /* DEQ (SETQNM,SETRNM,3,SYSTEMS)
*                                      RET(HAVE)                     */
AHLPLERR DS    0H                                               02S1427
*     I048(1:20)=I048(1:20)&&I048(1:20);                        02S1427
         XC    I048(20),I048                                    02S1427
*     RFY                                                       02S1428
*       GPR01F RESTRICTED;                                      02S1428
*     I04804(1)='11000000'B;        /* LISTEND BYTE                  */
         MVI   I04804,B'11000000'                               02S1429
*     I04805(1)=3;                  /* SET LENGTH                    */
         MVI   I04805,X'03'                                     02S1430
*     I04806(1)='01001001'B;        /* OPTIONS                       */
         MVI   I04806,B'01001001'                               02S1431
*     I04807(1)=ADDR(SETQNM);       /* QNAME ADDRESS                 */
         LA    @10,@CC00164                                     02S1432
         ST    @10,I04807                                       02S1432
*     I04808(1)=ADDR(SETRNM);       /* RNAME ADDRESS                 */
         LA    @10,@CC00166                                     02S1433
         ST    @10,I04808                                       02S1433
*     GPR01F=ADDR(I04802);                                      02S1434
         LA    GPR01F,I04802                                    02S1434
*     SVC(48);                                                  02S1435
         SVC   48                                               02S1435
*     RFY                                                       02S1436
*       GPR01F UNRESTRICTED;                                    02S1436
*   END;                            /* DEQ (SETQNM,SETRNM,3,SYSTEMS)
*                                      RET(HAVE)                     */
*   ABNDCODE=BADOPT;                /* INDICATE INVALID PARAMETER
*                                      LIST                          */
         LA    ABNDCODE,4                                       02S1438
*   DO;                             /* ABEND(SETCMPCD) DUMP SYSTEM   */
*     RESPECIFY                                                 02S1440
*      (GPR01F) RESTRICTED;                                     02S1440
*     GPR01F=((SETCMPCD)&'00000FFF'X)*4096;/* COMP CODE IN BITS 8-19 */
         L     GPR01F,@CF02503                                  02S1441
*     GPR01F=GPR01F×'80000000'X;    /* DUMP/STEP/DUMPOPTS FLAG       */
         O     GPR01F,@CF02273                                  02S1442
*     SVC(13);                      /* ISSUE ABEND SVC               */
         SVC   13                                               02S1443
*     RESPECIFY                                                 02S1444
*      (GPR01F) UNRESTRICTED;                                   02S1444
*   END;                            /* ABEND(SETCMPCD) DUMP SYSTEM
*                                      ABEND CALLER WITH NEW CODE    */
*   RFY                                                         02S1446
*     ABNDCODE UNRSTD;                                          02S1446
*   GEN(DROP TEMPREG);                                          02S1447
         DROP TEMPREG
*                                                               02S1448
*   /*****************************************************************/
*   /*                                                               */
*   /* AHLTFFRR FRR ROUTINE - THIS ROUTINE WILL RECEIVE CONTROL IS   */
*   /* SRB ROUTINES AHLTFREE OR AHLMCPST ENCOUNTER AN ERRO DURING    */
*   /* THEIR PROCESSING. ITS JOB IS TO POST THE ECB IN THE MCCE IF   */
*   /* NECESSARY                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S1448
*AHLTFFRR:                                                      02S1448
*   GENERATE;                                                   02S1448
AHLTFFRR DS    0H                                               02S1448
         BALR  BASEREG,0
         USING *,BASEREG
*   SRBPARM2=SRBPARM1;              /* SAVE RTCA ADDRESS             */
         LR    SRBPARM2,SRBPARM1                                02S1449
*   SRBRTRN=RETURNAD;               /* SAVE RETURN ADDRESS           */
         LR    SRBRTRN,RETURNAD                                 02S1450
*   RFY                                                         02S1451
*     SDWA BASED(SRBPARM2);                                     02S1451
*   RFY                                                         02S1452
*     FRRPARMS BASED(SDWAPARM);                                 02S1452
*   RFY                                                         02S1453
*     MCCE BASED(FRRTABL);                                      02S1453
*   IF FRRTABLE^=0 THEN                                         02S1454
         L     @15,SDWAPARM(,SRBPARM2)                          02S1454
         L     @10,FRRTABLE-1(,@15)                             02S1454
         LA    @10,0(,@10)                                      02S1454
         LTR   @10,@10                                          02S1454
         BZ    @RF01454                                         02S1454
*     DO;                           /* A NON-ZERO MCCE ADDRESS  02S1455
*                                      INDICATES THAT MCCEECB IS TO
*                                      BE POSTED                     */
*       IF FRRSALOC='80'X THEN                                  02S1456
         CLI   FRRSALOC(@15),128                                02S1456
         BNE   @RF01456                                         02S1456
*         DO;                       /*                       @YM03652*/
*           GENERATE;                                           02S1458
AHLTFF11 SETLOCK RELEASE,TYPE=SALLOC,                                  *
               RELATED=(MCCEPOST,AHLSETEV(AHLTFR00))
*         END;                                                  02S1459
*                                                               02S1459
*       /*************************************************************/
*       /*                                                           */
*       /* POST MCCEECB VIA BRANCH ENTRY                             */
*       /*                                                           */
*       /*************************************************************/
*                                                               02S1460
*       GENERATE;                                               02S1460
@RF01456 DS    0H                                               02S1460
AHLTFF01 SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(MCCEPOST,AHLSETEV(AHLTFF02))
*       RFY                                                     02S1461
*        (ECBCODE,                                              02S1461
*         SRBECB) RSTD;                                         02S1461
*       ECBCODE=TFFERROR;           /* SET POSTING CODE TO INDICATE
*                                      ERROR                         */
         LA    ECBCODE,4                                        02S1462
*       SRBECB=ADDR(MCCEECB);       /* POINT AT ECB TO POST          */
         L     @15,SDWAPARM(,SRBPARM2)                          02S1463
         L     SRBECB,FRRTABL(,@15)                             02S1463
         LA    SRBECB,MCCEECB(,SRBECB)                          02S1463
*       CALL BRPOST;                /* POST THE ECB                  */
         L     @06,CVTPTR                                       02S1464
         L     @15,CVT0PT01(,@06)                               02S1464
         BALR  @14,@15                                          02S1464
*       RFY                                                     02S1465
*        (ECBCODE,                                              02S1465
*         SRBECB) UNRSTD;                                       02S1465
*       GENERATE;                                               02S1466
*               /* FREE THE LOCAL LOCK */
AHLTFF02 SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(MCCEPOST,AHLSETEV(AHLTFF01))
*     END;                                                      02S1467
*   DO;                             /* SETRP                    02S1468
*                                      WRKAREA(SRBPARM2)RC(SDWACWT)  */
@RF01454 DS    0H                                               02S1469
*     RESPECIFY                                                 02S1469
*      (GPR00P,                                                 02S1469
*       GPR01P,                                                 02S1469
*       GPR14P,                                                 02S1469
*       GPR15P) RSTD;                                           02S1469
*     GPR01P->SDWARCDE=SDWACWT;     /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                           02S1470
*     RESPECIFY                                                 02S1471
*      (GPR00P,                                                 02S1471
*       GPR01P,                                                 02S1471
*       GPR14P,                                                 02S1471
*       GPR15P) UNRSTD;                                         02S1471
*   END;                            /* LET THE ERROR CONTINUE        */
*   GO TO SRBRTRN;                                              02S1473
         BR    SRBRTRN                                          02S1473
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                  01S1474
*     GPR01F FIXED(31) REG(1),                                  01S1474
*     GPR02F FIXED(31) REG(2),                                  01S1474
*     GPR03F FIXED(31) REG(3),                                  01S1474
*     GPR00P PTR(31) REG(0),                                    01S1474
*     GPR01P PTR(31) REG(1),                                    01S1474
*     GPR04P PTR(31) REG(4),                                    01S1474
*     GPR14P PTR(31) REG(14),                                   01S1474
*     GPR15P PTR(31) REG(15);                                   01S1474
*   DCL                                                         01S1475
*     1 I004 DEF(ILIST) BDY(WORD),  /* LIST FOR GETMAIN              */
*      2 I00401 PTR(31),            /* LENGTH                        */
*      2 I00402 CHAR(1),            /* HIARCHY                       */
*      2 I00403 PTR(24),            /* ADDR OF ADDR LIST             */
*      2 I00404 CHAR(1),            /* TYPE OF REQUEST               */
*      2 I00405 PTR(8);             /* SUBPOOL VALUE                 */
*   DCL                                                         01S1476
*     1 I005 DEF(ILIST) BDY(WORD),  /* LIST FOR FREEMAIN             */
*       3 I00501 PTR(8),            /* RESERVED                      */
*       3 I00502 PTR(24),           /* LENGTH                        */
*       3 I00503 PTR(8),            /* RESERVED                      */
*       3 I00504 PTR(24),           /* ADDR OF ADDR LIST             */
*       3 I00505 BIT(8),            /* TYPE OF FREEMAIN              */
*       3 I00506 PTR(8);            /* SUBPOOL VALUE                 */
*   DCL                                                         01S1477
*     1 I107 DEF(ILIST) BDY(WORD),  /* DEFINE LIST                   */
*      2 I10701 BIT(8),             /* OR MASK                       */
*      2 I10702 BIT(8),             /* AND MASK                      */
*      2 I10703 BIT(8),             /* RESERVED                      */
*      2 I10704 BIT(8);                                         01S1477
*   DCL                                                         01S1478
*     1 I056 DEF(ILIST) BDY(WORD) CHAR(32767),/* LIST FOR ENQ        */
*       3 I05600 PTR(31),           /* TCB ADDR IF BOTH TCB AND ECB  */
*       3 I05601 PTR(31),           /* TCB OR ECB ADDRESS            */
*       3 I05602(*) CHAR(12) BDY(WORD),/* ARRAY OF RESOURCE ELEMENTS */
*         5 I05603 BIT(8),          /* BIT FLAGS 1                   */
*         5 I05604 PTR(8),          /* MINOR RESOURCE NAME LENGTH    */
*         5 I05605 BIT(8),          /* BIT FLAGS 2                   */
*         5 I05655 CHAR(1),         /* CONTROL PGM USE               */
*         5 I05606 PTR(31),         /* MAJOR RESOURCE NAME ADDR      */
*         5 I05607 PTR(31);         /* MINOR RESOURCE NAME ADDR      */
*   DCL                                                         01S1479
*     1 I048 DEF(ILIST) CHAR(32767) BDY(WORD),                  01S1479
*       3 I04801 PTR(31),           /* TCB ADDR                      */
*       3 I04802(*) CHAR(12) BDY(WORD),                         01S1479
*         5 I04803 PTR(31),         /* UCB @ IN LAST ENTRY           */
*           7 I04804 BIT(8),        /* FLAGS                         */
*           7 I04805 PTR(8),        /* MINOR RESOURCE NAME LENGTH    */
*           7 I04806 BIT(8),        /* FLAGS                         */
*           7 * CHAR(1),            /* CONTROL PROGRAM USE           */
*         5 I04807 PTR(31),         /* MAJOR RESOURCE NAME @         */
*         5 I04808 PTR(31);         /* MINOR RESOURCE NAME @         */
*   DECLARE                                                     01S1480
*     ILIST CHAR(20) BDY(DWORD);    /* STANDARD LIST                 */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S1481
*     I031F FIXED(31) BASED,                                    01S1481
*     I031P PTR(31) BASED,                                      01S1481
*     I015F FIXED(15) BASED,                                    01S1481
*     I015P PTR(15) BASED,                                      01S1481
*     I008P PTR(8) BASED,                                       01S1481
*     I001C CHAR(1) BASED;                                      01S1481
*   END AHLSETEV                                                01S1482
*                                                               01S1482
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (PLOG    )                                       */
*/*%INCLUDE SYSUT5  (DCLS    )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHACSD  )                                       */
*/*%INCLUDE SYSLIB  (IHAPCCA )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (MCHEAD  )                                       */
*/*%INCLUDE SYSLIB  (MCCE    )                                       */
*/*%INCLUDE SYSLIB  (MCCD    )                                       */
*/*%INCLUDE SYSLIB  (MCQE    )                                       */
*/*%INCLUDE SYSLIB  (MCEE    )                                       */
*/*%INCLUDE SYSLIB  (MCCLE   )                                       */
*/*%INCLUDE SYSLIB  (MCRWSA  )                                       */
*/*%INCLUDE SYSLIB  (MCAWSA  )                                       */
*/*%INCLUDE SYSUT5  (SETUP   )                                       */
*/*%INCLUDE SYSUT5  (TERMPHSE)                                       */
*/*%INCLUDE SYSUT5  (AHLADD  )                                       */
*/*%INCLUDE SYSUT5  (AHLACTIV)                                       */
*/*%INCLUDE SYSUT5  (MCCLEIN )                                       */
*/*%INCLUDE SYSUT5  (MCEEIN  )                                       */
*/*%INCLUDE SYSUT5  (AHLFREE )                                       */
*/*%INCLUDE SYSUT5  (MCEEOUT )                                       */
*/*%INCLUDE SYSUT5  (MCCLEOUT)                                       */
*/*%INCLUDE SYSUT5  (CLEANUP )                                       */
*/*%INCLUDE SYSUT5  (GETMCQE )                                       */
*/*%INCLUDE SYSUT5  (INITMCCE)                                       */
*/*%INCLUDE SYSUT5  (CR8MASK )                                       */
*/*%INCLUDE SYSUT5  (CR8SET  )                                       */
*/*%INCLUDE SYSUT5  (MCAWSART)                                       */
*/*%INCLUDE SYSUT5  (CSDMCCE )                                       */
*/*%INCLUDE SYSUT5  (FREEELMS)                                       */
*/*%INCLUDE SYSUT5  (AHLTFREE)                                       */
*/*%INCLUDE SYSUT5  (AHLMCQP )                                       */
*/*%INCLUDE SYSUT5  (AHLMCPST)                                       */
*/*%INCLUDE SYSUT5  (AHLSETES)                                       */
*/*%INCLUDE SYSUT5  (AHLPLERR)                                       */
*/*%INCLUDE SYSUT5  (AHLTFFRR)                                       */
*                                                               01S1482
*       ;                                                       01S1482
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00007 DS    15F
@SA00005 DS    15F
@SA00002 DS    12F
@TF00001 DS    F
AHLSETEV CSECT
         DS    0F
@CF00145 DC    F'1'
@CF00250 DC    F'6'
@CH00250 EQU   @CF00250+2
@CF00034 DC    F'12'
@CF00101 DC    F'16'
@CF00103 DC    F'20'
@CF00097 DC    F'24'
@CF00106 DC    F'28'
@CF02505 DC    F'76'
@CF02504 DC    F'88'
@CF02194 DC    F'800'
@CF02506 DC    F'62720'
@CF02503 DC    F'1007616'
@CF02273 DC    XL4'80000000'
@CF02311 DC    XL4'20000000'
@CF02397 DC    XL4'52000000'
@CF02511 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
PLISTAD  DS    A
MCHEADPT DS    A
MCCEPTR  DS    A
ELEMAD   DS    A
GETMADDR DS    A
LCCAVTP  DS    A
PCCAVTP  DS    A
PCCAPTR  DS    A
SETDECB  DS    F
RTRNCODE DS    F
OCDS     DS    CL8
         ORG   OCDS
OLDMCCE  DS    AL4
OLDCOUNT DS    FL4
         ORG   OCDS+8
NCDS     DS    CL8
         ORG   NCDS
NEWMCCE  DS    AL4
NEWCOUNT DS    FL4
         ORG   NCDS+8
FLAGS    DS    BL1
         ORG   FLAGS
PROBSTAT DS    BL1
MCAGOTN  EQU   FLAGS+0
@NM00013 EQU   FLAGS+0
         ORG   FLAGS+1
         DS    CL7
ILIST    DS    CL20
ESTAESAV DS    18A
AHLSETEV CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA00135 DC    A(AHL133)
@CA00150 DC    A(AHL132)
         DS    0D
GOODFIX  DC    XL4'40000000'
SQASPID  DC    AL1(245)
@CC00164 DC    C'SYSZVARY'
@CC00168 DC    C'MCCE    '
@CC00170 DC    C'MCQE    '
@CC00172 DC    C'MCCD    '
@CC00174 DC    C'MCEE    '
@CC00176 DC    C'MCCLE   '
@CC00166 DC    C'CPU'
AHLBASES DS    CL8
         ORG   AHLBASES
@NM00006 DC    AL4(@PSTART)
@NM00007 DC    AL4(@PSTART+4095)
         ORG   AHLBASES+8
MASKTAB  DC    XL2'8000'
         DC    XL2'4000'
         DC    XL2'2000'
         DC    XL2'1000'
         DC    XL2'0800'
         DC    XL2'0400'
         DC    XL2'0200'
         DC    XL2'0100'
         DC    XL2'0080'
         DC    XL2'0040'
         DC    XL2'0020'
         DC    XL2'0010'
         DC    XL2'0008'
         DC    XL2'0004'
         DC    XL2'0002'
         DC    XL2'0001'
DUMMYARG DC    12X'00'
AHLSPTCH DC    400X'00'
@DATD    DSECT
ESTAELST ESTAE MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
AHLSETEV CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TMPCNT   EQU   @03
HISKEY   EQU   @08
RTRNMCQE EQU   @10
INDEX    EQU   @02
OMCCECNT EQU   @02
NEXTELMT EQU   @02
SDWAPTR  EQU   @04
LCCAPTR  EQU   @02
MCRWSAPT EQU   @04
LASTMCQ  EQU   @06
MCQEPTR  EQU   @04
LASTELM  EQU   @05
LISTELM  EQU   @02
ESTAECOD EQU   @00
R1PLSTAD EQU   @01
SRBPTR   EQU   @01
TREEAD   EQU   @01
NOTREE   EQU   @01
PARMPTR  EQU   @01
MCEDSINK EQU   @03
CPUMSK   EQU   @03
MCHEADA  EQU   @04
ARGUMENT EQU   @07
WORKREG  EQU   @08
BASER3   EQU   @09
SAVEAREA EQU   @13
SINKADDR EQU   @15
SINKIND  EQU   @15
ABNDCODE EQU   @15
TEMPREG  EQU   @15
RETCOD15 EQU   @15
SRBPARM1 EQU   @01
FRSPCELM EQU   @05
MCCLTOFR EQU   @05
MCEETOFR EQU   @05
NEXTMCCL EQU   @06
NEXTMCEE EQU   @06
NXTFRSP  EQU   @06
MCQEADR  EQU   @06
SRBRTRN  EQU   @07
FRRLIST  EQU   @07
BASEREG  EQU   @08
SRBPARM2 EQU   @09
ECBCODE  EQU   @10
FTREEAD  EQU   @10
SRBECB   EQU   @11
RETURNAD EQU   @14
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR01P   EQU   @01
GPR00P   EQU   @00
GPR15P   EQU   @15
GPR03F   EQU   @03
GPR00F   EQU   @00
GPR04P   EQU   @04
GPR14P   EQU   @14
BASER1   EQU   @11
BASER2   EQU   @12
CR8      EQU   @08
REG0     EQU   @00
         ENTRY AHLSPTCH
         EXTRN AHL133
         EXTRN AHL132
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAPCCAV EQU   PSA+520
PSALCCAV EQU   PSA+528
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
FRRPARMS EQU   0
FRRTABL  EQU   FRRPARMS
FRRSALOC EQU   FRRTABL
FRRTABLE EQU   FRRTABL+1
FRRRET   EQU   FRRPARMS+4
LVTSLOT  EQU   0
PVTSLOT  EQU   0
PARMLIST EQU   0
SETOPTS  EQU   PARMLIST
ADD      EQU   SETOPTS
ACTIVATE EQU   SETOPTS
FREE     EQU   SETOPTS
EVENTNUM EQU   PARMLIST+2
EIDNUM   EQU   EVENTNUM
CLSNUM   EQU   EVENTNUM+1
PLISTNAM EQU   PARMLIST+4
EIDLSTAD EQU   PARMLIST+12
CLSLSTAD EQU   PARMLIST+16
PASSEDQE EQU   PARMLIST+20
EIDLIST  EQU   0
PLISTEID EQU   EIDLIST
ELISTRTN EQU   EIDLIST+2
CLSLIST  EQU   0
PLISTCLS EQU   CLSLIST
CLISTRTN EQU   CLSLIST+2
SETDPTR  EQU   0
FRESPACE EQU   0
FRESPLNK EQU   FRESPACE+1
BRPOST   EQU   0
NEWSINK  EQU   0
MYSAVE   EQU   0
HISSAVAD EQU   MYSAVE+4
FORCHAIN EQU   MYSAVE+8
HISSAVE  EQU   0
HISREGF  EQU   HISSAVE+16
HISREG0  EQU   HISSAVE+20
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVT0PT01 EQU   CVTMAP+152
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTGTFA  EQU   CVTGTF+1
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBASCB  EQU   SRB+8
SRBFLC   EQU   SRB+12
SRBEP    EQU   SRB+20
SRBPARM  EQU   SRB+28
CSD      EQU   0
CSDCPUAL EQU   CSD+8
CSDSCWRD EQU   CSD+12
CSDSCFL1 EQU   CSDSCWRD
CSDSCFL2 EQU   CSDSCWRD+1
CSDSCFL3 EQU   CSDSCWRD+2
CSDSCFL4 EQU   CSDSCWRD+3
CSDFLAGS EQU   CSD+23
CSDMP    EQU   CSDFLAGS
PCCA     EQU   0
PCCACPUA EQU   PCCA+16
PCCATMST EQU   PCCA+128
PCCATMFL EQU   PCCATMST
PCCATODE EQU   PCCATMST+1
PCCACCE  EQU   PCCATMST+2
PCCAINTE EQU   PCCATMST+3
PCCAEMSB EQU   PCCA+136
PCCAEMSI EQU   PCCAEMSB
PCCARISP EQU   PCCAEMSI
PCCAEMS2 EQU   PCCAEMSI+1
PCCAEMS3 EQU   PCCAEMSI+2
PCCARMSB EQU   PCCAEMSI+3
PCCAWERP EQU   PCCA+280
PCCACHPF EQU   PCCAWERP+4
PCCACHBL EQU   PCCAWERP+5
PCCACHVA EQU   PCCAWERP+6
PCCACHTS EQU   PCCAWERP+7
PCCACHS1 EQU   PCCA+288
PCCACHS2 EQU   PCCA+289
PCCACHRB EQU   PCCA+290
PCCACHF1 EQU   PCCA+308
PCCACHF2 EQU   PCCA+309
PCCACHF3 EQU   PCCA+310
PCCACHF4 EQU   PCCA+311
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
WSAG     EQU   0
WSAGGMFM EQU   WSAG+4
WSAC     EQU   0
WSACGTF  EQU   WSAC+4
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAPCHK EQU   SDWAERRA
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWAUPRG EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
FRRSPTR  EQU   0
FRREPTR  EQU   0
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSENTR EQU   0
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
MCHEAD   EQU   0
MCHCUR   EQU   MCHEAD+8
MCHCNT   EQU   MCHEAD+12
MCHCTL   EQU   MCHEAD+16
MCHFLGS  EQU   MCHEAD+24
MCHFLG1  EQU   MCHFLGS
MCHACT   EQU   MCHFLG1
MCHTERM  EQU   MCHFLG1
MCHSETD  EQU   MCHEAD+32
MCCE     EQU   0
MCCEIDEN EQU   MCCE
MCCEEDA  EQU   MCCE+8
MCCECDA  EQU   MCCE+12
MCCEQEA  EQU   MCCE+16
MCCEOEDA EQU   MCCE+20
MCCEOCDA EQU   MCCE+24
MCCEOMCQ EQU   MCCE+28
MCCECNT  EQU   MCCE+32
MCCEMCCE EQU   MCCE+36
MCCEECB  EQU   MCCE+40
MCCESRB  EQU   MCCE+44
MCCD     EQU   0
MCCDIDEN EQU   MCCD
MCCDFLG1 EQU   MCCD+8
MCCDCNT  EQU   MCCD+10
MCCDCLE  EQU   MCCD+12
MCQE     EQU   0
MCQEIDEN EQU   MCQE
MCQENAME EQU   MCQE+8
MCQEASCB EQU   MCQE+16
MCQEMCQE EQU   MCQE+20
MCQEMCEE EQU   MCQE+24
MCQEMCCL EQU   MCQE+28
MCQETECB EQU   MCQE+36
MCQEFLGS EQU   MCQE+41
MCQEACT  EQU   MCQEFLGS
MCQESRB  EQU   MCQE+44
MCEE     EQU   0
MCEEIDEN EQU   MCEE
MCEEFLGS EQU   MCEE+8
MCEEFLG1 EQU   MCEEFLGS
MCEEEID  EQU   MCEEFLGS+2
MCEERTN  EQU   MCEE+12
MCEEMCQE EQU   MCEE+16
MCEEEIDL EQU   MCEE+20
MCEEMCQL EQU   MCEE+24
MCCLE    EQU   0
MCCLIDEN EQU   MCCLE
MCCLFLGS EQU   MCCLE+8
MCCLFLG1 EQU   MCCLFLGS
MCCLCLAS EQU   MCCLFLGS+2
MCCLRTN  EQU   MCCLE+12
MCCLMCQE EQU   MCCLE+16
MCCLEIDL EQU   MCCLE+20
MCCLMCQL EQU   MCCLE+24
MCRWSA   EQU   0
MCRMCA   EQU   MCRWSA+128
MCRWSAF  EQU   MCRWSA+132
MCAWSA   EQU   0
MCATRAIL EQU   MCAWSA+256
MCATRL1  EQU   MCATRAIL
MCATRL2  EQU   MCATRAIL+1
MCATRL3  EQU   MCATRAIL+2
MCATRL4  EQU   MCATRAIL+3
MCATRL5  EQU   MCATRAIL+4
MCATRL6  EQU   MCATRAIL+5
MCATRL7  EQU   MCATRAIL+6
MCATRL8  EQU   MCATRAIL+7
MCAMCR   EQU   MCAWSA+264
ACRRETRY EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
MSG133   EQU   AHL133+4
MSGCPUID EQU   MSG133+42
XTRABYTE EQU   MSGCPUID+3
MSGNAME  EQU   MSG133+50
PLIST    EQU   0
CPUADDR  EQU   PCCACPUA
ADDRCNT  EQU   MCHCUR
MCCLCLS  EQU   MCCLCLAS
MCEECLS  EQU   MCEEEID
MCCLCLS2 EQU   MCCLCLAS
PLSTCLS2 EQU   PLISTCLS
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTCSD   EQU   CVTS01+312
CVTGLMN  EQU   CVTS01+332
CVTSPSA  EQU   CVTS01+336
CVTPCCAT EQU   CVTS01+416
CVTLCCAT EQU   CVTS01+420
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
AWSAPTR  EQU   MCRMCA
I107     EQU   ILIST
I10701   EQU   I107
I10702   EQU   I107+1
I10703   EQU   I107+2
I10704   EQU   I107+3
I056     EQU   ILIST
I05602   EQU   I056+8
I05603   EQU   I05602
I05604   EQU   I05602+1
I05605   EQU   I05602+2
I05606   EQU   I05602+4
I05607   EQU   I05602+8
I005     EQU   ILIST
I00502   EQU   I005+1
I00504   EQU   I005+5
I00505   EQU   I005+8
I00506   EQU   I005+9
I004     EQU   ILIST
I00401   EQU   I004
I00403   EQU   I004+5
I00404   EQU   I004+8
I00405   EQU   I004+9
I048     EQU   ILIST
I04802   EQU   I048+4
I04803   EQU   I04802
I04804   EQU   I04803
I04805   EQU   I04803+1
I04806   EQU   I04803+2
I04807   EQU   I04802+4
I04808   EQU   I04802+8
FLC      EQU   PSA
*                                      START UNREFERENCED COMPONENTS
@NM00103 EQU   I04803+3
I04801   EQU   I048
I00402   EQU   I004+4
I00503   EQU   I005+4
I00501   EQU   I005
I05655   EQU   I05602+3
I05601   EQU   I056+4
I05600   EQU   I056
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00003 EQU   MSG133+46
MSGCPU   EQU   MSGCPUID
@NM00002 EQU   MSG133
@NM00001 EQU   AHL133
MCASWORK EQU   MCAWSA+644
MCAWORK  EQU   MCAWSA+584
MCAREC   EQU   MCAWSA+284
MCARECPR EQU   MCAWSA+268
@NM00102 EQU   MCATRL8
@NM00101 EQU   MCATRL8
@NM00100 EQU   MCATRL8
@NM00099 EQU   MCATRL8
MCAFRECT EQU   MCATRL7
MCAFRECC EQU   MCATRL7
MCAFRESP EQU   MCATRL7
MCAFREXJ EQU   MCATRL7
MCAFRSBR EQU   MCATRL6
MCAFRDMJ EQU   MCATRL6
MCAFRDPC EQU   MCATRL6
MCAFRPIC EQU   MCATRL6
MCAFRPIJ EQU   MCATRL6
@NM00098 EQU   MCATRL5
MCADREGS EQU   MCATRL5
MCAFRRB  EQU   MCATRL5
MCAFRRJ  EQU   MCATRL5
MCAFRRA  EQU   MCATRL5
MCAFRERT EQU   MCATRL5
MCAFREPC EQU   MCATRL5
MCAMJOBN EQU   MCATRL4
MCAMSDWA EQU   MCATRL4
MCAMBTU  EQU   MCATRL4
MCAMIOSB EQU   MCATRL4
MCAMTCB  EQU   MCATRL4
MCAMASCB EQU   MCATRL4
MCAMUCB  EQU   MCATRL4
MCAMEXT  EQU   MCATRL4
MCAFRFRT EQU   MCATRL3
MCAFRFA  EQU   MCATRL3
MCAFRSJ  EQU   MCATRL3
MCAFRSA  EQU   MCATRL3
MCAPIF   EQU   MCATRL3
MCASIOF  EQU   MCATRL3
MCAIOF   EQU   MCATRL3
MCASVCF  EQU   MCATRL3
MCATDIR  EQU   MCATRL2
MCALSR   EQU   MCATRL2
MCAERROR EQU   MCATRL2
MCAUIO   EQU   MCATRL2
MCASTA   EQU   MCATRL2
MCAFRR   EQU   MCATRL2
MCASRM   EQU   MCATRL2
MCARNIO  EQU   MCATRL2
MCAUSR   EQU   MCATRL1
MCAPI    EQU   MCATRL1
MCASRB   EQU   MCATRL1
MCADSP   EQU   MCATRL1
MCASIO   EQU   MCATRL1
MCAIO    EQU   MCATRL1
MCAEXT   EQU   MCATRL1
MCASVC   EQU   MCATRL1
MCAMSG   EQU   MCAWSA+192
MCASETEV EQU   MCAWSA+128
MCAFWORK EQU   MCAWSA+112
MCASFEOB EQU   MCAWSA+56
MCASBLOK EQU   MCAWSA
MCREID   EQU   MCRWSA+134
MCRRESV  EQU   MCRWSAF
MCRBRENT EQU   MCRWSAF
MCERROR  EQU   MCRWSAF
MCINFGBR EQU   MCRWSAF
MCINCTL  EQU   MCRWSAF
MCROUTSA EQU   MCRWSA+64
MCRMCIH  EQU   MCRWSA
MCCLFLG2 EQU   MCCLFLGS+1
MCCLRESV EQU   MCCLFLG1
MCCLDIS  EQU   MCCLFLG1
MCEEFLG2 EQU   MCEEFLGS+1
MCEERESV EQU   MCEEFLG1
MCEEDIS  EQU   MCEEFLG1
@NM00097 EQU   MCQE+42
@NM00096 EQU   MCQEFLGS
MCQESCHE EQU   MCQE+40
MCQEAT   EQU   MCQE+32
MCCDRESV EQU   MCCDFLG1
MCCDDEL  EQU   MCCDFLG1
MCHEADTR EQU   MCHEAD+48
MCHEADRD EQU   MCHEAD+44
MCHFRRAD EQU   MCHEAD+40
MCHMCER  EQU   MCHEAD+36
MCHSETE  EQU   MCHEAD+28
@NM00095 EQU   MCHFLGS+1
@NM00094 EQU   MCHFLG1
MCHDIS   EQU   MCHEAD+20
MCHIDEN  EQU   MCHEAD
FRRSPARM EQU   FRRSENTR+8
@NM00093 EQU   FRRSFLGS+1
@NM00092 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSFRRA EQU   FRRSENTR
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
FRRSCURR EQU   FRRSHEAD+12
FRRSELEN EQU   FRRSHEAD+8
FRRSLAST EQU   FRRSHEAD+4
FRRSEMP  EQU   FRRSHEAD
@NM00091 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00090 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00089 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00088 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00087 EQU   SDWADDAT+3
@NM00086 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00085 EQU   SDWADDAT+1
@NM00084 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00083 EQU   SDWADUMP+2
@NM00082 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00081 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00080 EQU   SDWALKWA+32
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00079 EQU   SDWAACF3
@NM00078 EQU   SDWAACF2
@NM00077 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00076 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00075 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00074 EQU   SDWA+239
@NM00073 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00072 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00071 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00070 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00069 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00068 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00067 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00066 EQU   SDWAINC2
@NM00065 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00064 EQU   SDWAILC2
@NM00063 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00062 EQU   SDWANXT2
@NM00061 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00060 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00059 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00058 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00057 EQU   SDWAINC1
@NM00056 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00055 EQU   SDWAILC1
@NM00054 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00053 EQU   SDWANXT1
@NM00052 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00051 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00050 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00049 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00048 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00047 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00046 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00045 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00044 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGPGIO EQU   WSAG
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
@NM00019 EQU   PCCA+512
PCCACAT  EQU   PCCA+384
PCCARV36 EQU   PCCA+380
PCCARV35 EQU   PCCA+378
PCCARV01 EQU   PCCA+377
PCCACPUM EQU   PCCA+376
PCCARV63 EQU   PCCA+372
PCCARV62 EQU   PCCA+368
PCCARV61 EQU   PCCA+364
PCCARV60 EQU   PCCA+360
PCCARV59 EQU   PCCA+356
PCCARV58 EQU   PCCA+352
PCCARV57 EQU   PCCA+348
PCCARV56 EQU   PCCA+344
PCCARV55 EQU   PCCA+340
PCCARV54 EQU   PCCA+336
PCCALOGA EQU   PCCA+332
PCCACHID EQU   PCCA+324
PCCACHSV EQU   PCCA+312
PCCARV79 EQU   PCCACHF4
PCCARV78 EQU   PCCACHF4
PCCARV77 EQU   PCCACHF4
PCCARV76 EQU   PCCACHF4
PCCARV75 EQU   PCCACHF4
PCCARV74 EQU   PCCACHF4
PCCARV73 EQU   PCCACHF4
PCCARV72 EQU   PCCACHF4
PCCARV71 EQU   PCCACHF3
PCCARV70 EQU   PCCACHF3
PCCARV69 EQU   PCCACHF3
PCCARV68 EQU   PCCACHF3
PCCARV67 EQU   PCCACHF3
PCCARV66 EQU   PCCACHF3
PCCARV65 EQU   PCCACHF3
PCCARV64 EQU   PCCACHF3
PCCACF28 EQU   PCCACHF2
PCCACF27 EQU   PCCACHF2
PCCACF26 EQU   PCCACHF2
PCCACF25 EQU   PCCACHF2
PCCACF24 EQU   PCCACHF2
PCCACF23 EQU   PCCACHF2
PCCACF22 EQU   PCCACHF2
PCCACF21 EQU   PCCACHF2
PCCACF18 EQU   PCCACHF1
PCCACF17 EQU   PCCACHF1
PCCACF16 EQU   PCCACHF1
PCCACF15 EQU   PCCACHF1
PCCACF14 EQU   PCCACHF1
PCCACF13 EQU   PCCACHF1
PCCACF12 EQU   PCCACHF1
PCCACF11 EQU   PCCACHF1
PCCARV05 EQU   PCCA+306
PCCACHPB EQU   PCCA+305
PCCALGP2 EQU   PCCA+304
PCCALGP1 EQU   PCCA+303
PCCALOGL EQU   PCCA+302
PCCARV80 EQU   PCCA+300
PCCACHW2 EQU   PCCA+296
PCCACHW1 EQU   PCCA+292
PCCAIOSI EQU   PCCA+291
PCCACNRB EQU   PCCACHRB
PCCACCVB EQU   PCCACHRB
PCCACSNB EQU   PCCACHRB
PCCARV52 EQU   PCCACHRB
PCCACHIB EQU   PCCACHRB
PCCACTIB EQU   PCCACHRB
PCCACINB EQU   PCCACHRB
PCCACSIB EQU   PCCACHRB
PCCARV51 EQU   PCCACHS2
PCCARV50 EQU   PCCACHS2
PCCACCRA EQU   PCCACHS2
PCCACURC EQU   PCCACHS2
PCCACNLG EQU   PCCACHS2
PCCACMOD EQU   PCCACHS2
PCCACALT EQU   PCCACHS2
PCCACIOR EQU   PCCACHS2
PCCARV47 EQU   PCCACHS1
PCCACUCB EQU   PCCACHS1
PCCACIBC EQU   PCCACHS1
PCCACAND EQU   PCCACHS1
PCCACNLS EQU   PCCACHS1
PCCACFRR EQU   PCCACHS1
PCCACNRE EQU   PCCACHS1
PCCACCMP EQU   PCCACHS1
PCCACSEQ EQU   PCCACHTS
PCCACDIN EQU   PCCACHTS
PCCARV44 EQU   PCCACHTS
PCCARV43 EQU   PCCACHTS
PCCACTEC EQU   PCCACHTS
PCCACDAV EQU   PCCACHVA
PCCACCHV EQU   PCCACHVA
PCCACCMD EQU   PCCACHVA
PCCACUNS EQU   PCCACHVA
PCCACSQV EQU   PCCACHVA
PCCARV42 EQU   PCCACHVA
PCCARV41 EQU   PCCACHVA
PCCACITF EQU   PCCACHVA
PCCARV40 EQU   PCCACHBL
PCCARV39 EQU   PCCACHBL
PCCARV38 EQU   PCCACHBL
PCCACCUE EQU   PCCACHBL
PCCACSTG EQU   PCCACHBL
PCCACSCU EQU   PCCACHBL
PCCACCHA EQU   PCCACHBL
PCCACCPU EQU   PCCACHBL
PCCACNOR EQU   PCCACHPF
PCCACCNT EQU   PCCACHPF
PCCACSNS EQU   PCCACHPF
PCCARV37 EQU   PCCACHPF
PCCACHIO EQU   PCCACHPF
PCCACTIO EQU   PCCACHPF
PCCACINT EQU   PCCACHPF
PCCACSIO EQU   PCCACHPF
PCCACHUB EQU   PCCAWERP
PCCACHEL EQU   PCCA+168
PCCALRBR EQU   PCCA+164
PCCALRBV EQU   PCCA+160
PCCAPWAR EQU   PCCA+156
PCCAPWAV EQU   PCCA+152
PCCAEMSA EQU   PCCAEMSB+12
PCCAEMSE EQU   PCCAEMSB+8
PCCAEMSP EQU   PCCAEMSB+4
PCCARMS  EQU   PCCARMSB
PCCARV34 EQU   PCCARMSB
PCCARV33 EQU   PCCARMSB
PCCARV32 EQU   PCCARMSB
PCCARV31 EQU   PCCARMSB
PCCARV30 EQU   PCCARMSB
PCCARV29 EQU   PCCARMSB
PCCARV28 EQU   PCCARMSB
PCCARV27 EQU   PCCAEMS3
PCCARV26 EQU   PCCAEMS3
PCCARV25 EQU   PCCAEMS3
PCCARV24 EQU   PCCAEMS3
PCCARV23 EQU   PCCAEMS3
PCCARV22 EQU   PCCAEMS3
PCCARV21 EQU   PCCAEMS3
PCCARV20 EQU   PCCAEMS3
PCCARV19 EQU   PCCAEMS2
PCCARV18 EQU   PCCAEMS2
PCCARV17 EQU   PCCAEMS2
PCCARV16 EQU   PCCAEMS2
PCCARV15 EQU   PCCAEMS2
PCCARV14 EQU   PCCAEMS2
PCCARV13 EQU   PCCAEMS2
PCCARV12 EQU   PCCAEMS2
PCCARV11 EQU   PCCARISP
PCCARV10 EQU   PCCARISP
PCCARV09 EQU   PCCARISP
PCCARV08 EQU   PCCARISP
PCCARV07 EQU   PCCARISP
PCCARV06 EQU   PCCARISP
PCCASERL EQU   PCCARISP
PCCAPARL EQU   PCCARISP
PCCARPB  EQU   PCCA+132
PCCACTIN EQU   PCCAINTE
PCCANFIN EQU   PCCAINTE
PCCANUIN EQU   PCCAINTE
PCCACTCC EQU   PCCACCE
PCCANFCC EQU   PCCACCE
PCCANUCC EQU   PCCACCE
PCCACTTD EQU   PCCATODE
PCCANFTD EQU   PCCATODE
PCCANUTD EQU   PCCATODE
PCCARV04 EQU   PCCATMFL
PCCARV03 EQU   PCCATMFL
PCCARV02 EQU   PCCATMFL
PCCAMINT EQU   PCCATMFL
PCCAMCC  EQU   PCCATMFL
PCCAVKIL EQU   PCCATMFL
PCCASYNC EQU   PCCATMFL
PCCAINIT EQU   PCCATMFL
PCCARV9E EQU   PCCA+124
PCCARV9D EQU   PCCA+120
PCCARV9C EQU   PCCA+116
PCCARV9B EQU   PCCA+112
PCCARV9A EQU   PCCA+108
PCCARV99 EQU   PCCA+104
PCCARV98 EQU   PCCA+100
PCCARV97 EQU   PCCA+96
PCCARV96 EQU   PCCA+92
PCCARV95 EQU   PCCA+88
PCCARV94 EQU   PCCA+84
PCCARV93 EQU   PCCA+80
PCCARV92 EQU   PCCA+76
PCCARV91 EQU   PCCA+72
PCCARV90 EQU   PCCA+68
PCCARV89 EQU   PCCA+64
PCCARV88 EQU   PCCA+60
PCCARV87 EQU   PCCA+56
PCCARV86 EQU   PCCA+52
PCCARV85 EQU   PCCA+48
PCCARV84 EQU   PCCA+44
PCCARV83 EQU   PCCA+40
PCCARV82 EQU   PCCA+36
PCCARV81 EQU   PCCA+32
PCCAPSAR EQU   PCCA+28
PCCAPSAV EQU   PCCA+24
PCCATQEP EQU   PCCA+20
PCCACAFM EQU   PCCA+18
PCCACPID EQU   PCCA+4
PCCAPCCA EQU   PCCA
@NM00018 EQU   CSD+160
CSDMASK  EQU   CSD+128
CSDUCNT  EQU   CSD+124
CSDTCNT  EQU   CSD+120
CSDGDTOD EQU   CSD+116
CSDGDINT EQU   CSD+112
CSDGDCC  EQU   CSD+108
CSDDDRCT EQU   CSD+106
CSDRV044 EQU   CSD+104
CSDMAFF  EQU   CSD+24
CSDRV038 EQU   CSDFLAGS
CSDRV037 EQU   CSDFLAGS
CSDRV036 EQU   CSDFLAGS
CSDRV035 EQU   CSDFLAGS
CSDRV034 EQU   CSDFLAGS
CSDRV033 EQU   CSDFLAGS
CSDRV032 EQU   CSDFLAGS
CSDACR   EQU   CSD+22
CSDMF1CP EQU   CSD+20
CSDRV043 EQU   CSD+16
CSDRV030 EQU   CSDSCFL4
CSDRV029 EQU   CSDSCFL4
CSDRV028 EQU   CSDSCFL4
CSDRV027 EQU   CSDSCFL4
CSDRV026 EQU   CSDSCFL4
CSDRV025 EQU   CSDSCFL4
CSDRV024 EQU   CSDSCFL4
CSDRV023 EQU   CSDSCFL4
CSDRV022 EQU   CSDSCFL3
CSDRV021 EQU   CSDSCFL3
CSDRV020 EQU   CSDSCFL3
CSDRV019 EQU   CSDSCFL3
CSDRV018 EQU   CSDSCFL3
CSDRV017 EQU   CSDSCFL3
CSDRV016 EQU   CSDSCFL3
CSDRV015 EQU   CSDSCFL3
CSDRV014 EQU   CSDSCFL2
CSDRV013 EQU   CSDSCFL2
CSDRV012 EQU   CSDSCFL2
CSDRV011 EQU   CSDSCFL2
CSDRV010 EQU   CSDSCFL2
CSDRV009 EQU   CSDSCFL2
CSDRV008 EQU   CSDSCFL2
CSDRV007 EQU   CSDSCFL2
CSDRV006 EQU   CSDSCFL1
CSDRV005 EQU   CSDSCFL1
CSDRV004 EQU   CSDSCFL1
CSDRV003 EQU   CSDSCFL1
CSDRV002 EQU   CSDSCFL1
CSDRV001 EQU   CSDSCFL1
CSDSYSND EQU   CSDSCFL1
CSDRV042 EQU   CSDSCFL1
CSDCPUOL EQU   CSD+10
CSDSAFF  EQU   CSDCPUAL
CSDCHAD  EQU   CSD+6
CSDCPUJS EQU   CSD+4
CSDCSD   EQU   CSD
@NM00017 EQU   SRB+40
@NM00016 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBRMTR  EQU   SRB+24
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBFLNK  EQU   SRB+4
SRBID    EQU   SRB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00015 EQU   CVTFIX+248
@NM00014 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00012 EQU   HISSAVE+24
@NM00011 EQU   HISSAVE
@NM00010 EQU   MYSAVE
@NM00009 EQU   FRESPACE+4
@NM00008 EQU   FRESPACE
@NM00005 EQU   PARMLIST+1
@NM00004 EQU   SETOPTS
CHANGE   EQU   SETOPTS
DISABLE  EQU   SETOPTS
@NM00043 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00042 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00041 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00040 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00039 EQU   FLCFSA
@NM00038 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00037 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00036 EQU   FLCIOA
@NM00035 EQU   FLCMCLA+15
@NM00034 EQU   FLCMCLA+14
@NM00033 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00032 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00031 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00030 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00029 EQU   FLCPER
@NM00028 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00027 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00026 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00025 EQU   FLCPIILC
@NM00024 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00023 EQU   FLCSVILC
@NM00022 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00021 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00020 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RT00225 EQU   AHLADD01
@RT00266 EQU   AHLADD02
@RF00203 EQU   AHLEXIT
@RT00331 EQU   AHLACT02
@RT00384 EQU   AHLMCCL1
@RC00334 EQU   @RC00333
@RF00414 EQU   @RC00411
@RT00425 EQU   AHLEEIN2
@RT00435 EQU   AHLACT03
@RT00450 EQU   AHLACT01
@RF00450 EQU   AHLACT05
@RC00307 EQU   @RC00304
@RC00328 EQU   @RC00304
@RT00462 EQU   AHLEXIT
@RT00503 EQU   AHLFREE2
@RC00536 EQU   @RC00534
@RF00541 EQU   @RC00534
@RT00549 EQU   AHLEEOT2
@RF00580 EQU   @RC00577
@RF00583 EQU   @RC00577
@RF00626 EQU   @RC00620
@RT00812 EQU   @EL00002
@RF00812 EQU   AHLGET02
@RC00908 EQU   @EL00002
@RF00923 EQU   @EL00003
@RT01004 EQU   @EL00005
@RC00949 EQU   @EL00005
@RF01034 EQU   @EL00006
@RC01016 EQU   @EL00006
@RF01068 EQU   @EL00007
@PB00007 EQU   @PB00008
@RT01106 EQU   AHLTFR02
@RT01259 EQU   AHLMCPS2
@RC00310 EQU   @RC00307
@RF00441 EQU   @RC00328
@RC00443 EQU   @RC00328
@PB00006 EQU   @PB00007
@PB00005 EQU   @PB00006
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   AHLSETEV,(C'PLS2048',0701,77321)
