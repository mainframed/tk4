         TITLE 'AHLGTFI - GTF INITIALIZATION ROUTINE                   *
                        '
AHLGTFI  CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'AHLGTFI   77.089'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  LA    @12,4095(,@11)                                      0001
         USING @PSTART,@11                                         0001
         USING @PSTART+4095,@12                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
*   SYSCODE=4;                      /* SET UP SYSTEM RETURN CODE TO
*                                      DEFAULT TO GTF FAILED   Y02014*/
         LA    SYSCODE,4                                           0131
*   ZEROESTA=''B;                   /* ZERO OUT ESTAE PARM LIST    0132
*                                                              Y02014*/
         XC    ZEROESTA(16),ZEROESTA                               0132
*   ESTAEPRM=PARMRG1;               /* PICK UP PTR TO EXEC PRM Y02014*/
         ST    PARMRG1,ESTAEPRM                                    0133
*   RFY                                                            0134
*     PARMRG1 UNRSTD;                                              0134
*                                                                  0134
*   /*****************************************************************/
*   /*                                                               */
*   /*                                                       @ZA15493*/
*   /* CHECK PROGRAM PROPERTIES TABLE FOR CORRECT            @ZA15493*/
*   /* ATTRIBUTES.GTF MUST BE RUN ONLY AS SYSTEM TASK        @ZA15493*/
*   /*                                                       @ZA15493*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0135
*   IF CHVCD^='04'X×                /* START COMMAND ?       @ZA15493*/
*       CHTRKID^='02'X THEN         /* STARTED JOB ?         @ZA15493*/
         L     @14,ASCBPTR                                         0135
         L     @14,CSCBPTR(,@14)                                   0135
         CLI   CHVCD(@14),X'04'                                    0135
         BNE   @RT00135                                            0135
         CLI   CHTRKID(@14),X'02'                                  0135
         BE    @RF00135                                            0135
@RT00135 DS    0H                                                  0136
*     DO;                           /* IMPROPER GTF START    @ZA15493*/
*       DO;                         /* WTOP MF(E,AHL005)             */
*         RFY                                                      0138
*           GPR01P RSTD;            /* RESTRICT REG 1                */
*         GPR01P=ADDR(AHL005);      /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02181                                     0139
*         SVC(35);                  /* ISSUE WTO SVC                 */
         SVC   35                                                  0140
*         RFY                                                      0141
*           GPR01P UNRSTD;          /* RELEASE REG 1                 */
*       END;                        /* WTOP MF(E,AHL005) ISSUE ERR 0142
*                                      MSG AHL005I           @ZA15493*/
*       RETURN CODE(SYSCODE);       /* RETURN TO SYSTEM      @ZA15493*/
         LR    @15,SYSCODE                                         0143
         L     @13,4(,@13)                                         0143
         L     @14,12(,@13)                                        0143
         LM    @00,@12,20(@13)                                     0143
         BR    @14                                                 0143
*     END;                          /*                       @ZA15493*/
*                                                                  0144
*   /*****************************************************************/
*   /*                                                               */
*   /* ENQUEUE LOGIC - ENQUEUE FOR LIFE OF GTF                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0145
*   DO;                             /* ENQ                         0145
*                                      (AHLQNAME,AHLRNAME,E,3,SYSTEM)
*                                      RET(USE)                      */
@RF00135 DS    0H                                                  0146
*     RESPECIFY                                                    0146
*      (GPR01P) RESTRICTED;                                        0146
*     I056(1:20)=I056(1:20)&&I056(1:20);/* ZERO OUT THE TABLE        */
         XC    I056(20),I056                                       0147
*     I05604(1)=3;                  /* LENGTH OF MINOR RESOURCE NAME */
         MVI   I05604,X'03'                                        0148
*     I05606(1)=ADDR(AHLQNAME);     /* ADDRESS OF MAJOR RESOURCE NAME*/
         LA    @14,AHLQNAME                                        0149
         ST    @14,I05606                                          0149
*     I05607(1)=ADDR(AHLRNAME);     /* ADDRESS OF MINOR RESOURCE NAME*/
         LA    @14,AHLRNAME                                        0150
         ST    @14,I05607                                          0150
*     I05603(1)='01000000'B;        /* SET BIT STRING 1 FOR RESOURCE
*                                      ELEMENT                       */
         MVI   I05603,B'01000000'                                  0151
*     I05605(1)='01000011'B;        /* SET BIT STRING 2 FOR RESOURCE
*                                      ELEMENT                       */
         MVI   I05605,B'01000011'                                  0152
*     I05603(1,1)='1'B;             /* SET END OF LIST BIT           */
         OI    I05603,B'10000000'                                  0153
*     GPR01P=ADDR(I05602);          /* LOAD LIST ADDRESS             */
         LA    GPR01P,I05602                                       0154
*     SVC(56);                      /* ISSUE ENQ SVC                 */
         SVC   56                                                  0155
*     RESPECIFY                                                    0156
*      (GPR01P) UNRESTRICTED;                                      0156
*   END;                            /* ENQ                         0157
*                                      (AHLQNAME,AHLRNAME,E,3,SYSTEM)
*                                      RET(USE) Y02014               */
*   IF RETCODE^=0 THEN              /* TEST FOR RESOURCE AVAIL Y02014*/
         LTR   RETCODE,RETCODE                                     0158
         BZ    @RF00158                                            0158
*     DO;                           /* ENQUEUE ERROR PATH      Y02014*/
*       DO;                         /* WTOP MF(E,AHL013)             */
*         RFY                                                      0161
*           GPR01P RSTD;            /* RESTRICT REG 1                */
*         GPR01P=ADDR(AHL013);      /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02182                                     0162
*         SVC(35);                  /* ISSUE WTO SVC                 */
         SVC   35                                                  0163
*         RFY                                                      0164
*           GPR01P UNRSTD;          /* RELEASE REG 1                 */
*       END;                        /* WTOP MF(E,AHL013) GO WRITE ERR
*                                      MSG Y02014                    */
*       RETURN CODE(SYSCODE);       /* RETURN TO SYSTEM        Y02014*/
         LR    @15,SYSCODE                                         0166
         L     @13,4(,@13)                                         0166
         L     @14,12(,@13)                                        0166
         LM    @00,@12,20(@13)                                     0166
         BR    @14                                                 0166
*     END;                          /* END OF ENQ ERR PATH     Y02014*/
*   AUDITENQ='1'B;                  /* INDICATE ENQ ISSUED     Y02014*/
@RF00158 OI    AUDITENQ,B'00000010'                                0168
*                                                                  0169
*   /*****************************************************************/
*   /*                                                               */
*   /* PROVIDE ESTAE PROTECTION DURING INITIALIZATION                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0169
*   RFY                                                            0169
*     GENREG RSTD;                                                 0169
*   GENREG=ADDR(AHLIESTA);          /* SET PTR TO ESTAE RTN    Y02014*/
         LA    GENREG,AHLIESTA                                     0170
*   GEN( ESTAE (GENREG),CT,PARAM=ESTAELST,TERM=YES);/*         Y02014*/
          ESTAE (GENREG),CT,PARAM=ESTAELST,TERM=YES
*   IF RETCODE^=0 THEN              /* TEST FOR ERROR IN ESTAE Y02014*/
         LTR   RETCODE,RETCODE                                     0172
         BZ    @RF00172                                            0172
*     DO;                           /* ESTAE ERROR PATH        Y02014*/
*       IF RETCODE=20 THEN          /* GETMAIN ERROR           Y02014*/
         C     RETCODE,@CF02121                                    0174
         BNE   @RF00174                                            0174
*         DO;                       /* START OF GETMAIN ERR PATH   0175
*                                                              Y02014*/
*           DO;                     /* WTOP MF(E,AHL130)             */
*             RFY                                                  0177
*               GPR01P RSTD;        /* RESTRICT REG 1                */
*             GPR01P=ADDR(AHL130);  /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02187                                     0178
*             SVC(35);              /* ISSUE WTO SVC                 */
         SVC   35                                                  0179
*             RFY                                                  0180
*               GPR01P UNRSTD;      /* RELEASE REG 1                 */
*           END;                    /* WTOP MF(E,AHL130) GETMAIN ERR
*                                      MSG Y02014                    */
*           DO;                     /* INITIALIZATION ERROR PATH   0182
*                                                              Y02014*/
*             GEN(ESTAE 0);         /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*             GO TO AHLITERM;       /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0184
*           END;                    /* INITIALIZATION ERROR PATH   0185
*                                                              Y02014*/
*         END;                      /* END OF GETMAIN ERR PATH Y02014*/
*       ELSE                                                       0187
*         DO;                       /* ANY OTHER ERR PATH      Y02014*/
@RF00174 DS    0H                                                  0188
*           DO;                     /* WTOP MF(E,AHL015)             */
*             RFY                                                  0189
*               GPR01P RSTD;        /* RESTRICT REG 1                */
*             GPR01P=ADDR(AHL015);  /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02183                                     0190
*             SVC(35);              /* ISSUE WTO SVC                 */
         SVC   35                                                  0191
*             RFY                                                  0192
*               GPR01P UNRSTD;      /* RELEASE REG 1                 */
*           END;                    /* WTOP MF(E,AHL015) INDICATE ERR
*                                      MSG Y02014                    */
*           DO;                     /* INITIALIZATION ERROR PATH   0194
*                                                              Y02014*/
*             GEN(ESTAE 0);         /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*             GO TO AHLITERM;       /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0196
*           END;                    /* INITIALIZATION ERROR PATH   0197
*                                                              Y02014*/
*         END;                      /* END OF ESTAE ERR PATH   Y02014*/
*     END;                          /* END OF ALL ESTAE ERR PATH   0199
*                                                              Y02014*/
*   RFY                                                            0200
*     GENREG UNRSTD;                                               0200
@RF00172 DS    0H                                                  0201
*                                                                  0201
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL TABLERTN: OBTAIN AND INITIALIZE TABLES                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0201
*   DO;                             /* TABLERTN                Y02014*/
*                                                                  0201
*     /***************************************************************/
*     /*                                                             */
*     /* TABLERTN THIS INTERNAL PROCEDURE ISSUES THE FIRST SETEVENT  */
*     /* TO OBTAIN THE MCQE AND ASSOCIATED TABLES, TO OBTAIN STORAGE */
*     /* FOR THE GTFPCT AND INITDATA,AND TO INITIALIZE THESE TABLES  */
*     /* WITH MINIMAL INFORMATION.                                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0202
*     RFY                                                          0202
*      (REG0,                                                      0202
*       PCTPTR,                                                    0202
*       RETCODE) RSTD;                                             0202
*     RFY                                                          0203
*       MCQE BASED(TEMPMCQE);                                      0203
*     DO;                           /* SETEVENT NAME('GTF')          */
*                                                                  0204
*       /*************************************************************/
*       /*                                                           */
*       /* THE FOLLOWING SECTION OF CODE IS GENERATED BY THE SETEVENT*/
*       /* MACRO. THIS CODE WILL BE EITHER AN INITIALIZED PARAMETER  */
*       /* LIST, OR IF IT IS THE RESULT OF STANDARD OR EXECUTE FORM  */
*       /* IT WILL FILL in the list, GENERATE ALL LINKAGES AND CALL  */
*       /* THE PROPER sERVICE, EITHER AHLSETEV OR AHLSETD            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0205
*       DCL                                                        0205
*         AHLPPTR REG(1) PTR(31) RSTD;/* PARAMETER LIST ADDRESS      */
*       DCL                                                        0206
*         AHLSETEV ENTRY OPTIONS(EXIT,SEQFLOW) BASED(MCHSETE) VALRG(0);
*                                   /* ENTRY FOR ADD ACTIVAT,FREE    */
*       DCL                                                        0207
*         AHLSETD ENTRY OPTIONS(EXIT,SEQFLOW) BASED(MCHSETD) VALRG(0);
*                                   /* ENTRY FOR DISABLE AND CHANGE  */
*       DCL                                                        0208
*         1 SEPL BASED(AHLPPTR) BDY(WORD),/* DSECT PARAMETER LIST    */
*          2 SEFG PTR(8),           /* ACTION GLAGS                  */
*          2 * PTR(8),                                             0208
*          2 SEEN PTR(8),           /* EID COUNT                     */
*          2 SECN PTR(8),           /* CLASS COUNT                   */
*          2 SENM CHAR(8),          /* APPLICATION NMAE              */
*          2 SEEL PTR(31),          /* ADDRESS OF LIST OF EIDS       */
*          2 SECL PTR(31),          /* ADDRESS OF LIST OF CLASSES    */
*          2 SEMC PTR(31);          /* MCQE ADDRESS                  */
*       DCL                                                        0209
*         1 SEPL0012 STATIC LOCAL BDY(WORD),/* ACTUAL PLIST FOR    0209
*                                      STANDARD INVOCATION           */
*          2 SEFG0012 PTR(8),                                      0209
*          2 * PTR(8),                                             0209
*          2 SEEN0012 PTR(8),                                      0209
*          2 SECN0012 PTR(8),                                      0209
*          2 SENM0012 CHAR(8),                                     0209
*          2 SEEL0012 PTR(31),                                     0209
*          2 SECL0012 PTR(31),                                     0209
*          2 SEMC0012 PTR(31);                                     0209
*       AHLPPTR=ADDR(SEPL0012);     /* INIT PLIST PTR                */
         LA    AHLPPTR,SEPL0012                                    0210
*       SEPL=SEPL&&SEPL;            /* ZERO OUT PLIST                */
         XC    SEPL(24,AHLPPTR),SEPL(AHLPPTR)                      0211
*       SENM='GTF';                 /* MOVE IN NAME                  */
         MVI   SENM+3(AHLPPTR),C' '                                0212
         MVC   SENM+4(4,AHLPPTR),SENM+3(AHLPPTR)                   0212
         MVC   SENM(3,AHLPPTR),@CC01940                            0212
*       CALL AHLSETEV;              /* CALL SERVICE                  */
         L     @10,CVTPTR                                          0213
         L     @10,CVTGTF(,@10)                                    0213
         L     @15,MCHSETE(,@10)                                   0213
         BALR  @14,@15                                             0213
*     END;                          /* ISSUE NULL SETEVENT-GET MCQE
*                                      AND ASSOC. TABLES Y02014      */
*     IF RETCODE^=0 THEN            /* CHECK RETURN CODE       Y02014*/
         LTR   RETCODE,RETCODE                                     0215
         BZ    @RF00215                                            0215
*       DO;                         /* ERROR PATH Y02014             */
*         DO;                       /* CONVERT RETURN CODE TO      0217
*                                      PRINTABLE HEX           Y02014*/
*           BINRYRC=RETCODE;        /* SET RETURN CODE IN MIDDLE OF
*                                      THREE BYTE AREA         Y02014*/
         STCM  RETCODE,3,BINRYRC                                   0218
*           UNPK(TEMPRC,RC);        /* UNPACK RETURN CODE      Y02014*/
         UNPK  TEMPRC(3),RC(3)                                     0219
*           RCIND=TEMPRC;           /* MOVE TO TWO BYTE AREA   Y02014*/
         L     @14,@CA02029                                        0220
         MVC   RCIND-AHL019(2,@14),TEMPRC                          0220
*           TR(RCIND,DEFTABLE);     /* TRANSLATE UNPACKED BYTES    0221
*                                                              Y02014*/
         TR    RCIND-AHL019(2,@14),DEFTABLE                        0221
*         END;                      /* END OF CONVERSION       Y02014*/
*         DO;                       /* WTOP MF(E,AHL019)             */
*           RFY                                                    0224
*             GPR01P RSTD;          /* RESTRICT REG 1                */
*           GPR01P=ADDR(AHL019);    /* ADDRESS CONTROL PROGRAM LIST  */
         LR    GPR01P,@14                                          0225
*           SVC(35);                /* ISSUE WTO SVC                 */
         SVC   35                                                  0226
*           RFY                                                    0227
*             GPR01P UNRSTD;        /* RELEASE REG 1                 */
*         END;                      /* WTOP MF(E,AHL019) INDICATE ERR
*                                      MSG Y02014                    */
*         DO;                       /* INITIALIZATION ERROR PATH   0229
*                                                              Y02014*/
*           GEN(ESTAE 0);           /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*           GO TO AHLITERM;         /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0231
*         END;                      /* INITIALIZATION ERROR PATH   0232
*                                                              Y02014*/
*       END;                        /* END OF ERR PATH         Y02014*/
*     AUDITSET='1'B;                                               0234
@RF00215 LA    AUDITSET,1                                          0234
*     TEMPMCQE=REG0;                /* SAVE MCQEPTR IN TEMP REG    0235
*                                                              Y02014*/
         LR    TEMPMCQE,REG0                                       0235
*     ESTAMCQE=REG0;                /* SAVE MCQEPTR IN ESTAE PARM  0236
*                                      LIST                    Y02014*/
         ST    REG0,ESTAMCQE                                       0236
*     RFY                                                          0237
*       REG0 UNRSTD;                                               0237
*                                                                  0238
*     /***************************************************************/
*     /*                                                             */
*     /* OBTAIN STORAGE FOR GTFPCT AND CLEAR STORAGE                 */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0238
*     DO;                           /* GETMAIN (EC)                0238
*                                      LV(LENGTH(GTFPCT)) A(MCQEAT)
*                                      SP(SQA)                       */
*       RESPECIFY                                                  0239
*        (GPR01P) RESTRICTED;                                      0239
*       I004=I004&&I004;            /* INIT LIST                     */
         XC    I004(10),I004                                       0240
*       I00404='20'X;               /* TYPE                          */
         MVI   I00404,X'20'                                        0241
*       I00401=LENGTH(GTFPCT);      /* LENGTH                        */
         MVC   I00401(4),@CF02435                                  0242
*       I00403=ADDR(MCQEAT);        /* ADDR OF ADDR LIST             */
         LA    @14,MCQEAT(,TEMPMCQE)                               0243
         STCM  @14,7,I00403                                        0243
*       I00405=SQA;                 /* SUBPOOL VALUE                 */
         MVI   I00405,X'F5'                                        0244
*       GPR01P=ADDR(I004);          /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                         0245
*       SVC(4);                     /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                   0246
*       RESPECIFY                                                  0247
*        (GPR01P) UNRESTRICTED;                                    0247
*     END;                          /* GETMAIN (EC)                0248
*                                      LV(LENGTH(GTFPCT)) A(MCQEAT)
*                                      SP(SQA) GET GTFPCT FROM SQA 0248
*                                      Y02014                        */
*     IF RETCODE^=0 THEN            /* TEST GETMAIN SUCCESS    Y02014*/
         LTR   RETCODE,RETCODE                                     0249
         BZ    @RF00249                                            0249
*       DO;                         /* GETMAIN FAILED PATH     Y02014*/
*         DO;                       /* WTOP MF(E,AHL130)             */
*           RFY                                                    0252
*             GPR01P RSTD;          /* RESTRICT REG 1                */
*           GPR01P=ADDR(AHL130);    /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02187                                     0253
*           SVC(35);                /* ISSUE WTO SVC                 */
         SVC   35                                                  0254
*           RFY                                                    0255
*             GPR01P UNRSTD;        /* RELEASE REG 1                 */
*         END;                      /* WTOP MF(E,AHL130) INDICATE  0256
*                                      ERROR MSG Y02014              */
*         DO;                       /* INITIALIZATION ERROR PATH   0257
*                                                              Y02014*/
*           GEN(ESTAE 0);           /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*           GO TO AHLITERM;         /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0259
*         END;                      /* INITIALIZATION ERROR PATH   0260
*                                                              Y02014*/
*       END;                        /* END OF GETMAIN ERR PATH Y02014*/
*     AUDITPCT='1'B;                /* INDICATE GTFPCT GOTTEN  Y02014*/
@RF00249 OI    AUDITPCT,B'00000100'                                0262
*     ESTAEPCT=MCQEAT;              /* SAVE GTFPCT ADDR IN ESTAE PARM
*                                      LIST                    Y02014*/
         L     @14,MCQEAT(,TEMPMCQE)                               0263
         ST    @14,ESTAEPCT                                        0263
*     PCTPTR=MCQEAT;                /* GET ADDR OF GTFPCT      Y02014*/
*                                                                  0264
         LR    PCTPTR,@14                                          0264
*     /***************************************************************/
*     /*                                                             */
*     /* THE FOLLOWING CODE FIRST ZEROES OUT THE GTFPCT IN MULTIPLES */
*     /* OF 256 AND THEN EXCLUSIVE ORS THE REMAINDER OF THE GTFPCT.  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0265
*     RESPECIFY                                                    0265
*      (GTFPCT) BASED(PCTPTR);                                     0265
*     X=((LENGTH(GTFPCT))/256)*256; /* DIVIDE LENGTH BY 256    Y02014*/
         LA    X,256                                               0266
*     DO I=1 TO X BY 256;           /* ZERO OUT GTFPCT BY 256S Y02014*/
         LA    I,1                                                 0267
         B     @DE00267                                            0267
@DL00267 DS    0H                                                  0268
*       GTFPCT(I:I+255)=(GTFPCT(I:I+255)&&GTFPCT(I:I+255));/* ZERO 0268
*                                      OUT GTFPCT BY 256S      Y02014*/
         LR    @14,PCTPTR                                          0268
         ALR   @14,I                                               0268
         BCTR  @14,0                                               0268
         XC    GTFPCT(256,@14),GTFPCT(@14)                         0268
*     END;                          /* END OF ZERO OUT GTFPCT  Y02014*/
         AL    I,@CF00681                                          0269
@DE00267 CR    I,X                                                 0269
         BNH   @DL00267                                            0269
*     GTFPCT(X:LENGTH(GTFPCT))=(GTFPCT(X:LENGTH(GTFPCT))&&GTFPCT(X:
*         LENGTH(GTFPCT)));         /* ZERO OUT REST OF GTFPCT Y02014*/
         LR    @14,PCTPTR                                          0270
         ALR   @14,X                                               0270
         BCTR  @14,0                                               0270
         LA    @10,316                                             0270
         SLR   @10,X                                               0270
         EX    @10,@SX02443                                        0270
*     GTFPCTID='GTFPCT  ';          /* PUT EBCDIC ID IN GTFPCT Y02014*/
         MVC   GTFPCTID(8,PCTPTR),@CC02288                         0271
*     MCQEPTR=TEMPMCQE;             /* PUT ADDR OF MCQE--GTFPCT    0272
*                                                              Y02014*/
         ST    TEMPMCQE,MCQEPTR(,PCTPTR)                           0272
*     GTFASCB=PSAAOLD;              /* GET GTFS ASCB ADDR      Y02014*/
         L     @14,PSAAOLD                                         0273
         ST    @14,GTFASCB(,PCTPTR)                                0273
*     WRITERDD='IEFRDER ';          /* GET DD NAME FOR TRACE DATA SET
*                                                              Y02014*/
         MVC   WRITERDD(8,PCTPTR),@CC02289                         0274
*     RFY                                                          0275
*       MCQE BASED(MCQEPTR);                                       0275
*                                                                  0276
*     /***************************************************************/
*     /*                                                             */
*     /* OBTAIN AND CLEAR STORAGE FOR INITDATA                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0276
*     DO;                           /* GETMAIN (EC)                0276
*                                      LV(LENGTH(INITDATA))        0276
*                                      A(INITPTR) SP(0)              */
*       RESPECIFY                                                  0277
*        (GPR01P) RESTRICTED;                                      0277
*       I004=I004&&I004;            /* INIT LIST                     */
         XC    I004(10),I004                                       0278
*       I00404='20'X;               /* TYPE                          */
         MVI   I00404,X'20'                                        0279
*       I00401=LENGTH(INITDATA);    /* LENGTH                        */
         MVC   I00401(4),@CF02436                                  0280
*       I00403=ADDR(INITPTR);       /* ADDR OF ADDR LIST             */
         LA    @14,INITPTR(,PCTPTR)                                0281
         STCM  @14,7,I00403                                        0281
*       I00405=0;                   /* SUBPOOL VALUE                 */
         MVI   I00405,X'00'                                        0282
*       GPR01P=ADDR(I004);          /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                         0283
*       SVC(4);                     /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                   0284
*       RESPECIFY                                                  0285
*        (GPR01P) UNRESTRICTED;                                    0285
*     END;                          /* GETMAIN (EC)                0286
*                                      LV(LENGTH(INITDATA))        0286
*                                      A(INITPTR) SP(0) GET INITDATA
*                                      FROM Y02014                   */
*     IF RETCODE^=0 THEN            /* TEST GETMAIN SUCCESS    Y02014*/
         LTR   RETCODE,RETCODE                                     0287
         BZ    @RF00287                                            0287
*       DO;                         /* GETMAIN FAILED PATH     Y02014*/
*         DO;                       /* WTOP MF(E,AHL130)             */
*           RFY                                                    0290
*             GPR01P RSTD;          /* RESTRICT REG 1                */
*           GPR01P=ADDR(AHL130);    /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02187                                     0291
*           SVC(35);                /* ISSUE WTO SVC                 */
         SVC   35                                                  0292
*           RFY                                                    0293
*             GPR01P UNRSTD;        /* RELEASE REG 1                 */
*         END;                      /* WTOP MF(E,AHL130) INDICATE  0294
*                                      ERROR MSG Y02014              */
*         DO;                       /* INITIALIZATION ERROR PATH   0295
*                                                              Y02014*/
*           GEN(ESTAE 0);           /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*           GO TO AHLITERM;         /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0297
*         END;                      /* INITIALIZATION ERROR PATH   0298
*                                                              Y02014*/
*       END;                        /* END OF GETMAIN ERR PATH Y02014*/
*     X=((LENGTH(INITDATA))/256)*256;/* GET LENGTH INITDATA/256    0300
*                                                              Y02014*/
@RF00287 LA    X,256                                               0300
*     DO I=1 TO X BY 256;           /* ZERO INITDATA LOOP Y02014     */
         LA    I,1                                                 0301
         B     @DE00301                                            0301
@DL00301 DS    0H                                                  0302
*       INITDATA(I:I+255)=(INITDATA(I:I+255)&&INITDATA(I:I+255));/*
*                                      ZERO OUT INITDATA BY 256S   0302
*                                                              Y02014*/
         L     @14,INITPTR(,PCTPTR)                                0302
         ALR   @14,I                                               0302
         BCTR  @14,0                                               0302
         XC    INITDATA(256,@14),INITDATA(@14)                     0302
*     END;                          /* END OF ZERO OUT BY 256S Y02014*/
         AL    I,@CF00681                                          0303
@DE00301 CR    I,X                                                 0303
         BNH   @DL00301                                            0303
*     INITDATA(X:LENGTH(INITDATA))=(INITDATA(X:LENGTH(INITDATA))&& 0304
*         INITDATA(X:LENGTH(INITDATA)));/* FINISH ZERO INITDATA    0304
*                                                              Y02014*/
         L     @14,INITPTR(,PCTPTR)                                0304
         ALR   @14,X                                               0304
         BCTR  @14,0                                               0304
         LA    @10,368                                             0304
         SLR   @10,X                                               0304
         EX    @10,@SX02445                                        0304
*     RESPECIFY                                                    0305
*      (INITDATA) BASED(INITPTR);                                  0305
*     GEN(EXTRACT CSCL,'S',FIELDS=(COMM));/* GET STOP ECB ADDR AND 0306
*                                      CIB PTR                 Y02014*/
         EXTRACT CSCL,'S',FIELDS=(COMM)
*     INITID='INITDATA';            /* PUT EBCDIC ID IN INITDATA   0307
*                                                              Y02014*/
         L     @14,INITPTR(,PCTPTR)                                0307
         MVC   INITID(8,@14),@CC02292                              0307
*     CIBPTR=EXTCIB;                /* PUT CIB PTR IN INITDATA Y02014*/
         L     @10,CSCL                                            0308
         L     @09,EXTCIB(,@10)                                    0308
         ST    @09,CIBPTR(,@14)                                    0308
*     STOPECBA=EXTECB;              /* PUT STOP ECB ADDR IN PCT    0309
*                                                              Y02014*/
         L     @10,EXTECB(,@10)                                    0309
         ST    @10,STOPECBA(,PCTPTR)                               0309
*     EXECPTR=ESTAEPRM;             /* PUT EXEC PARM ADDR IN INITDATA
*                                                              Y02014*/
         L     @09,ESTAEPRM                                        0310
         ST    @09,EXECPTR(,@14)                                   0310
*   END;                            /* TABLERTN                Y02014*/
*   RFY                                                            0312
*     PCTPTR RSTD;                                                 0312
*   IF STOPECBP='1'B THEN           /* HAS STOP GTF BEEN REQUEST   0313
*                                                              Y02014*/
         TM    STOPECBP(@10),B'01000000'                           0313
         BNO   @RF00313                                            0313
*     DO;                           /* STOP COMMAND PATH       Y02014*/
*       SYSCODE=0;                  /* SET UP SYSTEM RETURN CODE TO
*                                      INDICATE GTF INIT INCOMPLETE
*                                                              Y02014*/
         SLR   SYSCODE,SYSCODE                                     0315
*       DO;                         /* WTOP MF(E,AHL006)             */
*         RFY                                                      0317
*           GPR01P RSTD;            /* RESTRICT REG 1                */
*         GPR01P=ADDR(AHL006);      /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02180                                     0318
*         SVC(35);                  /* ISSUE WTO SVC                 */
         SVC   35                                                  0319
*         RFY                                                      0320
*           GPR01P UNRSTD;          /* RELEASE REG 1                 */
*       END;                        /* WTOP MF(E,AHL006) INDICATE ERR
*                                      MSG Y02014                    */
*       DO;                         /* INITIALIZATION ERROR PATH   0322
*                                                              Y02014*/
*         GEN(ESTAE 0);             /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*         GO TO AHLITERM;           /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0324
*       END;                        /* INITIALIZATION ERROR PATH   0325
*                                                              Y02014*/
*     END;                          /* END OF STOP COMMAND PATH    0326
*                                                              Y02014*/
*                                                                  0327
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL AHLSCAN: SCAN START AND OPTION COMMANDS                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0327
*   AUDITSCN='1'B;                  /* TURN AUDIT FOR AHLSCAN  Y02014*/
@RF00313 OI    AUDITSCN,B'00001000'                                0327
*   CALL AHLSCAN;                   /* SCAN COMMANDS           Y02014*/
         L     @15,@CV02000                                        0328
         BALR  @14,@15                                             0328
*   IF RETCODE=12 THEN              /* IF STOP COMMAND INDICATED   0329
*                                                              Y02014*/
         C     RETCODE,@CF00033                                    0329
         BNE   @RF00329                                            0329
*     DO;                           /* START OF STOP REQ PATH  Y02014*/
*       SYSCODE=0;                  /* SET SYSTEM RETURN CODE TO   0331
*                                      INDICATE GTF INIT INCOMPLETE
*                                                              Y02014*/
         SLR   SYSCODE,SYSCODE                                     0331
*       DO;                         /* WTOP MF(E,AHL006)             */
*         RFY                                                      0333
*           GPR01P RSTD;            /* RESTRICT REG 1                */
*         GPR01P=ADDR(AHL006);      /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02180                                     0334
*         SVC(35);                  /* ISSUE WTO SVC                 */
         SVC   35                                                  0335
*         RFY                                                      0336
*           GPR01P UNRSTD;          /* RELEASE REG 1                 */
*       END;                        /* WTOP MF(E,AHL006) WRITE     0337
*                                      ACKNOWLEDG STOP MSG Y02014    */
*       DO;                         /* INITIALIZATION ERROR PATH   0338
*                                                              Y02014*/
*         GEN(ESTAE 0);             /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*         GO TO AHLITERM;           /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0340
*       END;                        /* INITIALIZATION ERROR PATH   0341
*                                                              Y02014*/
*     END;                          /* END OF STOP COMMAND PATH    0342
*                                                              Y02014*/
*   IF RETCODE^=0 THEN              /* ANY OTHER ERROR INDICATED   0343
*                                                              Y02014*/
@RF00329 LTR   RETCODE,RETCODE                                     0343
         BZ    @RF00343                                            0343
*     DO;                           /* INITIALIZATION ERROR PATH   0344
*                                                              Y02014*/
*       GEN(ESTAE 0);               /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*       GO TO AHLITERM;             /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0346
*     END;                          /* INITIALIZATION ERROR PATH   0347
*                                                              Y02014*/
*                                                                  0348
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL MCQEINIT: CREATE EIDLIST AND FIXTAB(VIA RANGETAB) LOAD   */
*   /* AND PGFIX FGBRS ISSUE SETEVENT ON EIDLIST CREATED             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0348
*   DO;                             /* MCQEINIT                Y02014*/
*                                                                  0348
@RF00343 DS    0H                                                  0349
*     /***************************************************************/
*     /*                                                             */
*     /* MCQEINIT THIS INTERNAL PROCEDURE BUILDS RANGETAB AND THE    */
*     /* EIDLIST, CALLS FGBRFIX TO BUILD FIXTAB AND FIX FGBRS BEFORE */
*     /* ISSUING THE SETEVENT TO INITIALIZE THE MCQE, AND ITS        */
*     /* ASSOCIATED TABLES.                                          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0349
*     RFY                                                          0349
*       RETCODE RSTD;                                              0349
*     EIDLSTCT=NUMSYS*6;            /* CALCULATE MAX SIZE EIDLST   0350
*                                                              Y02014*/
         L     EIDLSTCT,NUMSYS                                     0350
         MH    EIDLSTCT,@CH00700                                   0350
*     LENTEMP=LENGTH(RANGETAB)+EIDLSTCT;/* GET LENGTH Y02014         */
         LA    LENTEMP,408                                         0351
         ALR   LENTEMP,EIDLSTCT                                    0351
*     DO;                           /* GETMAIN (EC) LV(LENTEMP)    0352
*                                      A(RANGPTR) SP(0)              */
*       RESPECIFY                                                  0353
*        (GPR01P) RESTRICTED;                                      0353
*       I004=I004&&I004;            /* INIT LIST                     */
         XC    I004(10),I004                                       0354
*       I00404='20'X;               /* TYPE                          */
         MVI   I00404,X'20'                                        0355
*       I00401=LENTEMP;             /* LENGTH                        */
         ST    LENTEMP,I00401                                      0356
*       I00403=ADDR(RANGPTR);       /* ADDR OF ADDR LIST             */
         L     @14,INITPTR(,PCTPTR)                                0357
         LA    @14,RANGPTR(,@14)                                   0357
         STCM  @14,7,I00403                                        0357
*       I00405=0;                   /* SUBPOOL VALUE                 */
         MVI   I00405,X'00'                                        0358
*       GPR01P=ADDR(I004);          /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                         0359
*       SVC(4);                     /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                   0360
*       RESPECIFY                                                  0361
*        (GPR01P) UNRESTRICTED;                                    0361
*     END;                          /* GETMAIN (EC) LV(LENTEMP)    0362
*                                      A(RANGPTR) SP(0) GET STORAGE
*                                      FOR RANGE TAB AND EIDLIST   0362
*                                      Y02014                        */
*     IF RETCODE^=0 THEN            /* ERROR DURING GETMAIN?   Y02014*/
         LTR   RETCODE,RETCODE                                     0363
         BZ    @RF00363                                            0363
*       DO;                         /* YES, GETMAIN ERROR PATH Y02014*/
*         DO;                       /* WTOP MF(E,AHL130)             */
*           RFY                                                    0366
*             GPR01P RSTD;          /* RESTRICT REG 1                */
*           GPR01P=ADDR(AHL130);    /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02187                                     0367
*           SVC(35);                /* ISSUE WTO SVC                 */
         SVC   35                                                  0368
*           RFY                                                    0369
*             GPR01P UNRSTD;        /* RELEASE REG 1                 */
*         END;                      /* WTOP MF(E,AHL130) INDICATE ERR
*                                      MSG Y02014                    */
*         DO;                       /* INITIALIZATION ERROR PATH   0371
*                                                              Y02014*/
*           GEN(ESTAE 0);           /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*           GO TO AHLITERM;         /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0373
*         END;                      /* INITIALIZATION ERROR PATH   0374
*                                                              Y02014*/
*       END;                        /* END OF GETMAIN ERR PATH Y02014*/
*                                                                  0376
*     /***************************************************************/
*     /*                                                             */
*     /* CALCULATE START OF EIDLIST AND SAVE IN INITDATA             */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0376
*     RFY                                                          0376
*       RANGETAB BASED(RANGPTR);                                   0376
@RF00363 DS    0H                                                  0377
*     GTFEIDL=ADDR(RANGETAB)+LENGTH(RANGETAB);/* CALCULATE START OF
*                                      EIDLIST, SAVE IN INITDATA   0377
*                                                              Y02014*/
*                                                                  0377
         L     @14,INITPTR(,PCTPTR)                                0377
         LA    @10,408                                             0377
         AL    @10,RANGPTR(,@14)                                   0377
         ST    @10,GTFEIDL(,PCTPTR)                                0377
*     /***************************************************************/
*     /*                                                             */
*     /* LOAD AHLTMON                                                */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0378
*     RFY                                                          0378
*       REG0 RSTD;                                                 0378
*     MODNAME3=TMON;                /* STORE NAME OF AHLTMON FOR MSG
*                                      IF LOAD FAILS Y05030          */
         L     @14,@CA01953                                        0379
         MVC   MODNAME3-AHL071(8,@14),TMON                         0379
*     DO;                           /* LOAD EP(TMON) ERRET(GTFI350)  */
*       RESPECIFY                                                  0381
*        (GPR00P,                                                  0381
*         GPR01P,                                                  0381
*         GPR15F) RESTRICTED;                                      0381
*       GPR00P=ADDR(TMON);          /* LOAD ENTRY POINT NAME ADDRESS */
         LA    GPR00P,TMON                                         0382
*       GPR01P=0;                   /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0383
*       GPR01P=GPR01P×'80000000'X;  /* ERROR RETURN LABEL SPECIFIED  */
         O     GPR01P,@CF02114                                     0384
*       SVC(8);                     /* ISSUE LOAD SVC                */
         SVC   8                                                   0385
*       IF GPR15F^=0 THEN           /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0386
         BNZ   @RT00386                                            0386
*         GOTO GTFI350;             /* BRANCH TO ERROR LOCATION      */
*       RESPECIFY                                                  0388
*        (GPR00P,                                                  0388
*         GPR01P,                                                  0388
*         GPR15F) UNRESTRICTED;                                    0388
*     END;                          /* LOAD EP(TMON) ERRET(GTFI350)
*                                      LOAD AHLTMON TO INSURE ITS  0389
*                                      EXISTENCE Y02014              */
*     RFY                                                          0390
*       REG0 UNRSTD;                                               0390
*                                                                  0391
*     /***************************************************************/
*     /*                                                             */
*     /* CREATION OF EIDLIST                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0391
*     IF OPTSYSM='1'B THEN          /* DETERMINE OPTION-SYSM?  Y02014*/
         TM    OPTSYSM(PCTPTR),B'10000000'                         0391
         BNO   @RF00391                                            0391
*       DO;                         /* SYSM PATH               Y02014*/
*         MAXEID=NUMSYS+NUMSYSM;    /* GET ENDING ADDR         Y02014*/
         L     @14,NUMSYS                                          0393
         LR    MAXEID,@14                                          0393
         AL    MAXEID,NUMSYSM                                      0393
*         DISP=NUMSYS+1;            /* POINTER TO EPALIST      Y02014*/
         AL    @14,@CF00062                                        0394
         LR    DISP,@14                                            0394
*       END;                        /* END OF SYSM PATH        Y02014*/
*     ELSE                                                         0396
*       DO;                         /* SYS PATH                Y02014*/
         B     @RC00391                                            0396
@RF00391 DS    0H                                                  0397
*         MAXEID=NUMSYS;            /* GET ENDING ADR FOR SYS  Y02014*/
         L     MAXEID,NUMSYS                                       0397
*         DISP=1;                   /* POINTR TO EPALIST-SYS   Y02014*/
         LA    DISP,1                                              0398
*       END;                        /* END OF                  Y02014*/
*     EIDREG=GTFEIDL;               /* GET PTR TO EIDLIST      Y02014*/
@RC00391 L     EIDREG,GTFEIDL(,PCTPTR)                             0400
*     NEXTFREE=ADDR(RANGETAB)+8;                                   0401
         L     @14,INITPTR(,PCTPTR)                                0401
         L     @14,RANGPTR(,@14)                                   0401
         LA    @10,8                                               0401
         ALR   @10,@14                                             0401
         ST    @10,NEXTFREE(,@14)                                  0401
*     RFY                                                          0402
*       EIDLIST BASED(EIDREG);                                     0402
*     DO I=DISP TO MAXEID BY 1;     /* LOOP TO SEARCH FOR GTFOPTS  0403
*                                      MATCH                   Y02014*/
         LR    I,DISP                                              0403
         B     @DE00403                                            0403
@DL00403 DS    0H                                                  0404
*       IF EPAOPT(I)=(EPAOPT(I)&GTFOPIND) THEN/* 'AND' GTFOPTS WITH
*                                      EPAMASK TO SEE IF OPTION    0404
*                                      REQUESTED               Y02014*/
         LR    @14,I                                               0404
         SLA   @14,4                                               0404
         L     @10,EPAOPT-16(@14)                                  0404
         L     @05,INITPTR(,PCTPTR)                                0404
         LR    @03,@10                                             0404
         N     @03,GTFOPIND(,@05)                                  0404
         CLR   @10,@03                                             0404
         BNE   @RF00404                                            0404
*/*   PLACE APPROPRIATE EID AND ENTRY POINT ADDR IN EIDLIST          */
*                                                                  0405
*         DO;                       /* OPTION REQUESTED PATH   Y02014*/
*           EIDCNT=EIDCNT+1;        /* UPDATE COUNT OF EIDS    Y02014*/
         LA    @10,1                                               0406
         AL    @10,EIDCNT                                          0406
         ST    @10,EIDCNT                                          0406
*           MODNAME3=EPNAME(I);     /* ENTRY POINT NAME IN CASE OF 0407
*                                      ERROR Y05030                  */
         L     @10,@CA01953                                        0407
         LA    @05,EPNAME-16(@14)                                  0407
         MVC   MODNAME3-AHL071(8,@10),0(@05)                       0407
*           DO;                     /* LOAD EP(EPNAME(I))          0408
*                                      ERRET(GTFI350)                */
*             RESPECIFY                                            0409
*              (GPR00P,                                            0409
*               GPR01P,                                            0409
*               GPR15F) RESTRICTED;                                0409
*             GPR00P=ADDR(EPNAME(I));/* LOAD ENTRY POINT NAME ADDRESS*/
         LA    GPR00P,EPNAME-16(@14)                               0410
*             GPR01P=0;             /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0411
*             GPR01P=GPR01P×'80000000'X;/* ERROR RETURN LABEL      0412
*                                      SPECIFIED                     */
         O     GPR01P,@CF02114                                     0412
*             SVC(8);               /* ISSUE LOAD SVC                */
         SVC   8                                                   0413
*             IF GPR15F^=0 THEN     /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0414
         BNZ   @RT00414                                            0414
*               GOTO GTFI350;       /* BRANCH TO ERROR LOCATION      */
*             RESPECIFY                                            0416
*              (GPR00P,                                            0416
*               GPR01P,                                            0416
*               GPR15F) UNRESTRICTED;                              0416
*           END;                    /* LOAD EP(EPNAME(I))          0417
*                                      ERRET(GTFI350) LOAD ENTRY   0417
*                                      POINT NAME TO DETERMINE     0417
*                                      STARTING ADDR OF E.P. ON ERROR
*                                      WILL TERMINATE GRACEFULLY   0417
*                                      Y05030                        */
*           RFY                                                    0418
*             REG0 RSTD;                                           0418
*           EID=EPAEID(I);          /* GET EID FROM EPALIST    Y02014*/
         LR    @14,I                                               0419
         SLA   @14,4                                               0419
         LH    @10,EPAEID-16(@14)                                  0419
         N     @10,@CF02447                                        0419
         STH   @10,EID(,EIDREG)                                    0419
*           ADDREID=REG0;           /* GET E.P. ADDRESS Y05030       */
         ST    REG0,ADDREID(,EIDREG)                               0420
*           RFY                                                    0421
*             REG0 UNRSTD;          /* Y05030                        */
*           DO;                     /* DELETE EP(EPNAME(I))          */
*             RESPECIFY                                            0423
*              (GPR00P) RESTRICTED;                                0423
*             GPR00P=ADDR(EPNAME(I));/* ->ENTRY NAME                 */
         LA    GPR00P,EPNAME-16(@14)                               0424
*             SVC(9);               /* DELETE SVC                    */
         SVC   9                                                   0425
*             RESPECIFY                                            0426
*              (GPR00P) UNRESTRICTED;                              0426
*           END;                    /* DELETE EP(EPNAME(I)) DELETE 0427
*                                      LOADED MODULE Y05030          */
*           EIDREG=EIDREG+6;        /* INCREMENT PTR TO EIDLIST    0428
*                                      Y02014                        */
         AL    EIDREG,@CF00700                                     0428
*         END;                      /* END OF OPT REQUESTED PATH   0429
*                                                              Y02014*/
*     END;                          /* END OF EPALIST SEARCH   Y02014*/
@RF00404 AL    I,@CF00062                                          0430
@DE00403 CR    I,MAXEID                                            0430
         BNH   @DL00403                                            0430
*                                                                  0431
*     /***************************************************************/
*     /*                                                             */
*     /* PCI AND IO FILTERING REQUESTED, ALTER EIDLIST TO REFLECT PCI*/
*     /* FILTERING DUPLICATES IO FILTERING                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0431
*     IF(GTFPCI='1'B)&(GTFIOP='1'B) THEN/* IS IO FILTERING AND PCI 0431
*                                      REQUESTED               Y02014*/
*                                                                  0431
         L     @14,INITPTR(,PCTPTR)                                0431
         TM    GTFPCI(@14),B'00000001'                             0431
         BNO   @RF00431                                            0431
         TM    GTFIOP(@14),B'00000001'                             0431
         BNO   @RF00431                                            0431
*       /*************************************************************/
*       /*                                                           */
*       /* IF SO, THEN THE EIDLIST PRESENTLY SAYS TRACE ALL PCI      */
*       /* INTERRUPTS AND NOW THE PCI EID ENTRY POINT ADDRESS SHOULD */
*       /* SPECIFY THE IO FILTERING ROUTINE.                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0432
*       DO I=GTFEIDL+12 TO EIDCNT*6+GTFEIDL BY 6;/* SEARCH FOR PCI 0432
*                                      EID                     Y02014*/
         LA    I,12                                                0432
         AL    I,GTFEIDL(,PCTPTR)                                  0432
         B     @DE00432                                            0432
@DL00432 DS    0H                                                  0433
*         IF I->EID=IECPCI THEN     /* IS THIS THE PCI EID     Y02014*/
         CLC   EID(2,I),@CH01832                                   0433
         BNE   @RF00433                                            0433
*           DO J=GTFEIDL+12 TO I BY 6;/* SEARCH FOR IO FILTER RTN  0434
*                                      ADDR                    Y02014*/
         LA    @14,12                                              0434
         AL    @14,GTFEIDL(,PCTPTR)                                0434
         ST    @14,J                                               0434
         B     @DE00434                                            0434
@DL00434 DS    0H                                                  0435
*             IF J->EID=IECEOS THEN /* IS THIS THE IO EID?     Y02014*/
         CLC   EID(2,@14),@CH01854                                 0435
         BNE   @RF00435                                            0435
*               DO;                 /* PLACE IO FILTER RTN ADDR IN 0436
*                                      EIDLIST ADDR FOR THE PCI EID
*                                                              Y02014*/
*                 I->ADDREID=J->ADDREID;/* FIX THE EID LIST    Y02014*/
         L     @14,ADDREID(,@14)                                   0437
         ST    @14,ADDREID(,I)                                     0437
*               END;                /* END OF REPLACE PATH     Y02014*/
*           END;                    /* END OF SEARCH FOR IO EID    0439
*                                                              Y02014*/
@RF00435 LA    @14,6                                               0439
         AL    @14,J                                               0439
         ST    @14,J                                               0439
@DE00434 CR    @14,I                                               0439
         BNH   @DL00434                                            0439
*       END;                        /* END OF SEARCH FOR PCI EID   0440
*                                                              Y02014*/
@RF00433 AL    I,@CF00700                                          0440
@DE00432 L     @14,EIDCNT                                          0440
         MH    @14,@CH00700                                        0440
         AL    @14,GTFEIDL(,PCTPTR)                                0440
         CR    I,@14                                               0440
         BNH   @DL00432                                            0440
*                                                                  0441
*     /***************************************************************/
*     /*                                                             */
*     /* USR OPTION EXAMINED AND ADDED TO RANGETAB IF REQUESTED      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0441
*     IF OPTUSR='1'B THEN           /*                         Y02014*/
@RF00431 TM    OPTUSR(PCTPTR),B'00010000'                          0441
         BNO   @RF00441                                            0441
*       DO;                                                        0442
*         MODNAME3=TUSR;            /* SET UP IN CASE OF LOAD FAILURE
*                                      Y05030                        */
         L     @14,@CA01953                                        0443
         MVC   MODNAME3-AHL071(8,@14),TUSR                         0443
*         DO;                       /* LOAD EP(TUSR) ERRET(GTFI350)  */
*           RESPECIFY                                              0445
*            (GPR00P,                                              0445
*             GPR01P,                                              0445
*             GPR15F) RESTRICTED;                                  0445
*           GPR00P=ADDR(TUSR);      /* LOAD ENTRY POINT NAME ADDRESS */
         LA    GPR00P,TUSR                                         0446
*           GPR01P=0;               /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0447
*           GPR01P=GPR01P×'80000000'X;/* ERROR RETURN LABEL SPECIFIED*/
         O     GPR01P,@CF02114                                     0448
*           SVC(8);                 /* ISSUE LOAD SVC                */
         SVC   8                                                   0449
*           IF GPR15F^=0 THEN       /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0450
         BNZ   @RT00450                                            0450
*             GOTO GTFI350;         /* BRANCH TO ERROR LOCATION      */
*           RESPECIFY                                              0452
*            (GPR00P,                                              0452
*             GPR01P,                                              0452
*             GPR15F) UNRESTRICTED;                                0452
*         END;                      /* LOAD EP(TUSR) ERRET(GTFI350)
*                                      LOAD AHLTUSR TO GET ADDRS TO
*                                      FIX THE ROUTINE Y02014        */
*         RFY                                                      0454
*          (REG0,                                                  0454
*           REG1) RSTD;                                            0454
*         REG1=REG1&'00FFFFFF'X;    /* ZERO HIGH ORDER BYTE OF LNG 0455
*                                      REG                   @YM08267*/
         N     REG1,@CF02298                                       0455
*         BEGRANGE=REG0;                                           0456
         L     @14,INITPTR(,PCTPTR)                                0456
         L     @14,RANGPTR(,@14)                                   0456
         L     @10,NEXTFREE(,@14)                                  0456
         ST    REG0,BEGRANGE(,@10)                                 0456
*         ENDRANGE=BEGRANGE+(REG1*8);/* COMPUTE END ADDR Y05030      */
         L     @09,INITPTR(,PCTPTR)                                0457
         L     @09,RANGPTR(,@09)                                   0457
         L     @09,NEXTFREE(,@09)                                  0457
         L     @09,BEGRANGE(,@09)                                  0457
         LR    @03,REG1                                            0457
         SLA   @03,3                                               0457
         ALR   @03,@09                                             0457
         ST    @03,ENDRANGE+4(,@10)                                0457
*         RFY                                                      0458
*          (REG0,                                                  0458
*           REG1) UNRSTD;                                          0458
*         CLASSADR=BEGRANGE;                                       0459
         ST    @09,CLASSADR                                        0459
*         NEXTFREE=NEXTFREE+LENGTH(RANGES);/* UPDATE RANGTABPTR    0460
*                                      Y02014                        */
         AL    @10,@CF00060                                        0460
         ST    @10,NEXTFREE(,@14)                                  0460
*         DO;                       /* DELETE EP(TUSR)               */
*           RESPECIFY                                              0462
*            (GPR00P) RESTRICTED;                                  0462
*           GPR00P=ADDR(TUSR);      /* ->ENTRY NAME                  */
         LA    GPR00P,TUSR                                         0463
*           SVC(9);                 /* DELETE SVC                    */
         SVC   9                                                   0464
*           RESPECIFY                                              0465
*            (GPR00P) UNRESTRICTED;                                0465
*         END;                      /* DELETE EP(TUSR) NOW DELETE  0466
*                                      MODULE LOADED Y02014          */
*       END;                        /* END OF USR REQUEST PATH Y02014*/
*                                                                  0468
*     /***************************************************************/
*     /*                                                             */
*     /* PUT ADDRESSES OF AHLDMPMD AND AHLWTOMD INTO GTFPCT AND ADD  */
*     /* THEIR ADDRESSES TO RANGETAB TO BE FIXED.                    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0468
*     MODNAME3=DMPMD;               /* MODULE NAME IN CASE OF ERROR
*                                      Y05030                        */
@RF00441 L     @14,@CA01953                                        0468
         MVC   MODNAME3-AHL071(8,@14),DMPMD                        0468
*     DO;                           /* LOAD EP(DMPMD) ERRET(GTFI350) */
*       RESPECIFY                                                  0470
*        (GPR00P,                                                  0470
*         GPR01P,                                                  0470
*         GPR15F) RESTRICTED;                                      0470
*       GPR00P=ADDR(DMPMD);         /* LOAD ENTRY POINT NAME ADDRESS */
         LA    GPR00P,DMPMD                                        0471
*       GPR01P=0;                   /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0472
*       GPR01P=GPR01P×'80000000'X;  /* ERROR RETURN LABEL SPECIFIED  */
         O     GPR01P,@CF02114                                     0473
*       SVC(8);                     /* ISSUE LOAD SVC                */
         SVC   8                                                   0474
*       IF GPR15F^=0 THEN           /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0475
         BNZ   @RT00475                                            0475
*         GOTO GTFI350;             /* BRANCH TO ERROR LOCATION      */
*       RESPECIFY                                                  0477
*        (GPR00P,                                                  0477
*         GPR01P,                                                  0477
*         GPR15F) UNRESTRICTED;                                    0477
*     END;                          /* LOAD EP(DMPMD) ERRET(GTFI350)
*                                      LOAD AHLDMPMD Y02014          */
*     RFY                                                          0479
*      (REG0,                                                      0479
*       REG1) RSTD;                                                0479
*     PCTDMPMD=REG0;                /* PUT AHLDMPMD ADDR IN GTFPCT 0480
*                                                              Y02014*/
         ST    REG0,PCTDMPMD(,PCTPTR)                              0480
*     RFY                                                          0481
*      (REG0,                                                      0481
*       REG1) UNRSTD;                                              0481
*     DO;                           /* DELETE EP(DMPMD)              */
*       RESPECIFY                                                  0483
*        (GPR00P) RESTRICTED;                                      0483
*       GPR00P=ADDR(DMPMD);         /* ->ENTRY NAME                  */
         LA    GPR00P,DMPMD                                        0484
*       SVC(9);                     /* DELETE SVC                    */
         SVC   9                                                   0485
*       RESPECIFY                                                  0486
*        (GPR00P) UNRESTRICTED;                                    0486
*     END;                          /* DELETE EP(DMPMD) DELETE     0487
*                                      AHLDMPMD Y02014               */
*     MODNAME3=WTOMD;               /* MODULE NAME IN CASE OF ERROR
*                                      Y05030                        */
         L     @14,@CA01953                                        0488
         MVC   MODNAME3-AHL071(8,@14),WTOMD                        0488
*     DO;                           /* LOAD EP(WTOMD) ERRET(GTFI350) */
*       RESPECIFY                                                  0490
*        (GPR00P,                                                  0490
*         GPR01P,                                                  0490
*         GPR15F) RESTRICTED;                                      0490
*       GPR00P=ADDR(WTOMD);         /* LOAD ENTRY POINT NAME ADDRESS */
         LA    GPR00P,WTOMD                                        0491
*       GPR01P=0;                   /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0492
*       GPR01P=GPR01P×'80000000'X;  /* ERROR RETURN LABEL SPECIFIED  */
         O     GPR01P,@CF02114                                     0493
*       SVC(8);                     /* ISSUE LOAD SVC                */
         SVC   8                                                   0494
*       IF GPR15F^=0 THEN           /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0495
         BNZ   @RT00495                                            0495
*         GOTO GTFI350;             /* BRANCH TO ERROR LOCATION      */
*       RESPECIFY                                                  0497
*        (GPR00P,                                                  0497
*         GPR01P,                                                  0497
*         GPR15F) UNRESTRICTED;                                    0497
*     END;                          /* LOAD EP(WTOMD) ERRET(GTFI350)
*                                      LOAD AHLWTOMD Y02014          */
*     RFY                                                          0499
*      (REG0,                                                      0499
*       REG1) RSTD;                                                0499
*     PCTWTOMD=REG0;                /* PUT AHLWTOMD ADDR IN GTFPCT 0500
*                                                              Y02014*/
         ST    REG0,PCTWTOMD(,PCTPTR)                              0500
*     RFY                                                          0501
*      (REG0,                                                      0501
*       REG1) UNRSTD;                                              0501
*     DO;                           /* DELETE EP(WTOMD)              */
*       RESPECIFY                                                  0503
*        (GPR00P) RESTRICTED;                                      0503
*       GPR00P=ADDR(WTOMD);         /* ->ENTRY NAME                  */
         LA    GPR00P,WTOMD                                        0504
*       SVC(9);                     /* DELETE SVC                    */
         SVC   9                                                   0505
*       RESPECIFY                                                  0506
*        (GPR00P) UNRESTRICTED;                                    0506
*     END;                          /* DELETE EP(WTOMD) DELETE     0507
*                                      AHLWTOMD Y02014               */
*                                                                  0508
*     /***************************************************************/
*     /*                                                             */
*     /* IF FILTERING REQUESTED,PUT FGBR ADDRESSES IN GTFPCT         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0508
*     J=1;                          /* SET INDX FOR TEMP STORAGE OF
*                                      FGBRS POINT NAMES TO 1  Y02014*/
         LA    @14,1                                               0508
         ST    @14,J                                               0508
*     DO I=1 TO 4 BY 1;             /* LOOP TO TEST FOR FILTERNG   0509
*                                                              Y02014*/
         LR    I,@14                                               0509
@DL00509 DS    0H                                                  0510
*       FGBREPN(I)=(FGBREPN(I)&&FGBREPN(I));/* ZERO OUT FGBREPN    0510
*                                                              Y02014*/
         LR    @14,I                                               0510
         SLA   @14,2                                               0510
         L     @10,FGBREPN-4(@14)                                  0510
         LR    @09,@10                                             0510
         XR    @09,@10                                             0510
         ST    @09,FGBREPN-4(@14)                                  0510
*       IF FTROPTS(I)=(FTROPTS(I)&GTFOPIND) THEN/* FILTER REQUEST  0511
*                                                              Y02014*/
         LR    @14,I                                               0511
         MH    @14,@CH00033                                        0511
         L     @10,FTROPTS-12(@14)                                 0511
         L     @09,INITPTR(,PCTPTR)                                0511
         LR    @07,@10                                             0511
         N     @07,GTFOPIND(,@09)                                  0511
         CLR   @10,@07                                             0511
         BNE   @RF00511                                            0511
*         DO;                       /* FILTER REQUEST PATH     Y02014*/
*           MODNAME3=FTRNAME(I);    /* E.P. NAME IN CASE OF ERROR  0513
*                                      Y05030                        */
         L     @10,@CA01953                                        0513
         LA    @09,FTRNAME-12(@14)                                 0513
         MVC   MODNAME3-AHL071(8,@10),0(@09)                       0513
*           DO;                     /* LOAD EP(FTRNAME(I))         0514
*                                      ERRET(GTFI350)                */
*             RESPECIFY                                            0515
*              (GPR00P,                                            0515
*               GPR01P,                                            0515
*               GPR15F) RESTRICTED;                                0515
*             GPR00P=ADDR(FTRNAME(I));/* LOAD ENTRY POINT NAME     0516
*                                      ADDRESS                       */
         LA    GPR00P,FTRNAME-12(@14)                              0516
*             GPR01P=0;             /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0517
*             GPR01P=GPR01P×'80000000'X;/* ERROR RETURN LABEL      0518
*                                      SPECIFIED                     */
         O     GPR01P,@CF02114                                     0518
*             SVC(8);               /* ISSUE LOAD SVC                */
         SVC   8                                                   0519
*             IF GPR15F^=0 THEN     /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0520
         BNZ   @RT00520                                            0520
*               GOTO GTFI350;       /* BRANCH TO ERROR LOCATION      */
*             RESPECIFY                                            0522
*              (GPR00P,                                            0522
*               GPR01P,                                            0522
*               GPR15F) UNRESTRICTED;                              0522
*           END;                    /* LOAD EP(FTRNAME(I))         0523
*                                      ERRET(GTFI350) LOAD E.P. TO 0523
*                                      DETERMINE STARTING ADD, ON  0523
*                                      ERROR WILL TERMINATE        0523
*                                      GRACEFULLY Y05030             */
*           RFY                                                    0524
*             REG0 RSTD;                                           0524
*           FGBREPN(I)=REG0;        /* SAVE ADDR FOR GTFPCT    Y05030*/
         LR    @14,I                                               0525
         SLA   @14,2                                               0525
         ST    REG0,FGBREPN-4(@14)                                 0525
*           RFY                                                    0526
*             REG0 UNRSTD;          /* Y05030                        */
*           J=J+1;                  /*                         Y02014*/
         LA    @14,1                                               0527
         AL    @14,J                                               0527
         ST    @14,J                                               0527
*           DO;                     /* DELETE EP(FTRNAME(I))         */
*             RESPECIFY                                            0529
*              (GPR00P) RESTRICTED;                                0529
*             GPR00P=ADDR(FTRNAME(I));/* ->ENTRY NAME                */
         LR    GPR00P,I                                            0530
         MH    GPR00P,@CH00033                                     0530
         LR    @14,GPR00P                                          0530
         LA    GPR00P,FTRNAME-12(@14)                              0530
*             SVC(9);               /* DELETE SVC                    */
         SVC   9                                                   0531
*             RESPECIFY                                            0532
*              (GPR00P) UNRESTRICTED;                              0532
*           END;                    /* DELETE EP(FTRNAME(I)) Y05030  */
*         END;                      /* END OF FILTER SEARCH LOOP   0534
*                                                              Y02014*/
*     END;                          /* END OF FILTER REQUESTLOOP   0535
*                                                              Y02014*/
@RF00511 AL    I,@CF00062                                          0535
         C     I,@CF00054                                          0535
         BNH   @DL00509                                            0535
*     MODNAME3='AHLSETD ';          /* LOAD MOD NAME IN CASE OF ERROR
*                                      Y05030                        */
         L     @14,@CA01953                                        0536
         MVC   MODNAME3-AHL071(8,@14),@CC02299                     0536
*     DO;                           /* LOAD EP('AHLSETD')          0537
*                                      ERRET(GTFI350)                */
*       RESPECIFY                                                  0538
*        (GPR00P,                                                  0538
*         GPR01P,                                                  0538
*         GPR15F) RESTRICTED;                                      0538
*       GPR00P=ADDR('AHLSETD ');    /* LOAD ENTRY POINT NAME ADDRESS */
         LA    GPR00P,@CC02299                                     0539
*       GPR01P=0;                   /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0540
*       GPR01P=GPR01P×'80000000'X;  /* ERROR RETURN LABEL SPECIFIED  */
         O     GPR01P,@CF02114                                     0541
*       SVC(8);                     /* ISSUE LOAD SVC                */
         SVC   8                                                   0542
*       IF GPR15F^=0 THEN           /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0543
         BNZ   @RT00543                                            0543
*         GOTO GTFI350;             /* BRANCH TO ERROR LOCATION      */
*       RESPECIFY                                                  0545
*        (GPR00P,                                                  0545
*         GPR01P,                                                  0545
*         GPR15F) UNRESTRICTED;                                    0545
*     END;                          /* LOAD EP('AHLSETD')          0546
*                                      ERRET(GTFI350) LOAD MODULE TO
*                                      DETERMINE STARTING AND ENDING
*                                      ADD FOR FIXING,WILL TERMINATE
*                                      GRACEFULLY Y05030             */
*     RFY                                                          0547
*      (REG0,                                                      0547
*       REG1) RSTD;                 /* CALULATE BEGINNING AND ENDING
*                                      ADD Y05030                    */
*     REG1=REG1&'00FFFFFF'X;        /* ZERO HIGH ORD BYTE OF LNG REG
*                                                            @YM08267*/
         N     REG1,@CF02298                                       0548
*     BEGRANGE=REG0;                /* AND STORE IN RANGETAB Y05030  */
         L     @14,INITPTR(,PCTPTR)                                0549
         L     @14,RANGPTR(,@14)                                   0549
         L     @14,NEXTFREE(,@14)                                  0549
         ST    REG0,BEGRANGE(,@14)                                 0549
*     ENDRANGE=REG0+(REG1*8);       /* Y05030                        */
         LR    @10,REG1                                            0550
         SLA   @10,3                                               0550
         ALR   @10,REG0                                            0550
         ST    @10,ENDRANGE+4(,@14)                                0550
*     RFY                                                          0551
*      (REG0,                                                      0551
*       REG1) UNRSTD;               /* Y05030                        */
*     DO;                           /* DELETE EP('AHLSETD ')         */
*       RESPECIFY                                                  0553
*        (GPR00P) RESTRICTED;                                      0553
*       GPR00P=ADDR('AHLSETD ');    /* ->ENTRY NAME                  */
         LA    GPR00P,@CC02299                                     0554
*       SVC(9);                     /* DELETE SVC                    */
         SVC   9                                                   0555
*       RESPECIFY                                                  0556
*        (GPR00P) UNRESTRICTED;                                    0556
*     END;                          /* DELETE EP('AHLSETD ') Y05030  */
*     NEXTFREE=NEXTFREE+LENGTH(RANGES);/* UPDATE PTR TO NEXT FREE  0558
*                                      AREA IN RANGETAB Y05030       */
         L     @14,INITPTR(,PCTPTR)                                0558
         L     @14,RANGPTR(,@14)                                   0558
         LA    @10,8                                               0558
         AL    @10,NEXTFREE(,@14)                                  0558
         ST    @10,NEXTFREE(,@14)                                  0558
*     DO I=1 TO LMLENGTH BY 1;      /* LOOP THROUGH LMNLIST TO LOAD
*                                      MODULES Y05030                */
         LA    I,1                                                 0559
         B     @DE00559                                            0559
@DL00559 DS    0H                                                  0560
*       TEMP1=(LMAOPT(I)&GTFOPIND); /*                         Y05030*/
         LR    @14,I                                               0560
         MH    @14,@CH00033                                        0560
         L     @10,INITPTR(,PCTPTR)                                0560
         L     TEMP1,LMAOPT-12(@14)                                0560
         N     TEMP1,GTFOPIND(,@10)                                0560
*       IF TEMP1^=0 THEN            /* IF LOAD MODULE SELECTED AS  0561
*                                      SPECIFIED IN GTFOPIND Y05030  */
         LTR   TEMP1,TEMP1                                         0561
         BZ    @RF00561                                            0561
*         DO;                       /* Y05030                        */
*           MODNAME3=LMNAME(I);     /* L. MOD. NAME IN CASE OF ERROR
*                                      Y05030                        */
         L     @10,@CA01953                                        0563
         LA    @09,LMNAME-12(@14)                                  0563
         MVC   MODNAME3-AHL071(8,@10),0(@09)                       0563
*           DO;                     /* LOAD EP(LMNAME(I))          0564
*                                      ERRET(GTFI350)                */
*             RESPECIFY                                            0565
*              (GPR00P,                                            0565
*               GPR01P,                                            0565
*               GPR15F) RESTRICTED;                                0565
*             GPR00P=ADDR(LMNAME(I));/* LOAD ENTRY POINT NAME ADDRESS*/
         LA    GPR00P,LMNAME-12(@14)                               0566
*             GPR01P=0;             /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0567
*             GPR01P=GPR01P×'80000000'X;/* ERROR RETURN LABEL      0568
*                                      SPECIFIED                     */
         O     GPR01P,@CF02114                                     0568
*             SVC(8);               /* ISSUE LOAD SVC                */
         SVC   8                                                   0569
*             IF GPR15F^=0 THEN     /* LOAD WAS UNSUCCESSFUL         */
         LTR   GPR15F,GPR15F                                       0570
         BNZ   @RT00570                                            0570
*               GOTO GTFI350;       /* BRANCH TO ERROR LOCATION      */
*             RESPECIFY                                            0572
*              (GPR00P,                                            0572
*               GPR01P,                                            0572
*               GPR15F) UNRESTRICTED;                              0572
*           END;                    /* LOAD EP(LMNAME(I))          0573
*                                      ERRET(GTFI350) LOAD TO      0573
*                                      DETERMINE START AND END     0573
*                                      ADDRESS FOR FIXING, WILL    0573
*                                      TERMINATE GRACEFULLY Y05030   */
*           RFY                                                    0574
*            (REG0,                                                0574
*             REG1) RSTD;           /* Y05030                        */
*           REG1=REG1&'00FFFFFF'X;  /* ZERO HIGH ORD BYTE OF LNG REG
*                                                            @YM08267*/
         N     REG1,@CF02298                                       0575
*           BEGRANGE=REG0;          /* STORE START AND END ADD IN  0576
*                                      Y05030                        */
         L     @14,INITPTR(,PCTPTR)                                0576
         L     @14,RANGPTR(,@14)                                   0576
         L     @14,NEXTFREE(,@14)                                  0576
         ST    REG0,BEGRANGE(,@14)                                 0576
*           ENDRANGE=REG0+(REG1*8); /* RANGETAB Y05030               */
         LR    @10,REG1                                            0577
         SLA   @10,3                                               0577
         ALR   @10,REG0                                            0577
         ST    @10,ENDRANGE+4(,@14)                                0577
*           RFY                                                    0578
*            (REG0,                                                0578
*             REG1) UNRSTD;         /* Y05030                        */
*           DO;                     /* DELETE EP(LMNAME(I))          */
*             RESPECIFY                                            0580
*              (GPR00P) RESTRICTED;                                0580
*             GPR00P=ADDR(LMNAME(I));/* ->ENTRY NAME                 */
         LR    GPR00P,I                                            0581
         MH    GPR00P,@CH00033                                     0581
         LR    @14,GPR00P                                          0581
         LA    GPR00P,LMNAME-12(@14)                               0581
*             SVC(9);               /* DELETE SVC                    */
         SVC   9                                                   0582
*             RESPECIFY                                            0583
*              (GPR00P) UNRESTRICTED;                              0583
*           END;                    /* DELETE EP(LMNAME(I)) DELETE 0584
*                                      MODULE Y05030                 */
*           NEXTFREE=NEXTFREE+LENGTH(RANGES);/* UPDATE PTR TO NEXT 0585
*                                      EMPTY SPACE IN RANGETAB Y05030*/
         L     @14,INITPTR(,PCTPTR)                                0585
         L     @14,RANGPTR(,@14)                                   0585
         LA    @10,8                                               0585
         AL    @10,NEXTFREE(,@14)                                  0585
         ST    @10,NEXTFREE(,@14)                                  0585
*         END;                      /* Y05030                        */
*     END;                          /* END OF LOADING MODULES Y05030 */
@RF00561 AL    I,@CF00062                                          0587
@DE00559 C     I,LMLENGTH                                          0587
         BNH   @DL00559                                            0587
*     GTFSIOBL=FGBREPN(1);          /* GET SIO RTN ADDR        Y02014*/
         L     @14,FGBREPN                                         0588
         ST    @14,GTFSIOBL(,PCTPTR)                               0588
*     GTFIOBL=FGBREPN(2);           /* GET IO RTN ADDR         Y02014*/
         L     @14,FGBREPN+4                                       0589
         ST    @14,GTFIOBL(,PCTPTR)                                0589
*     GTFSVCBL=FGBREPN(3);          /* GET SVC RNT ADDR        Y02014*/
         L     @14,FGBREPN+8                                       0590
         ST    @14,GTFSVCBL(,PCTPTR)                               0590
*     GTFPIBL=FGBREPN(4);           /* GET PI RTN ADDR         Y02014*/
         L     @14,FGBREPN+12                                      0591
         ST    @14,GTFPIBL(,PCTPTR)                                0591
*                                                                  0592
*     /***************************************************************/
*     /*                                                             */
*     /* CALL FGBRFIX AND ISSUE SETEVENT TO ENABLE                   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0592
*     DO;                           /* FGBRFIX Y02014                */
*                                                                  0592
*       /*************************************************************/
*       /*                                                           */
*       /* FGBRFIX THE FUNCTION OF THIS INNER PROCEDURE IS:          */
*       /* 1)ROUND-OFF AND ARRANGE RANGETAB ENTRIES,2)STACK SQUEEZE  */
*       /* RANGETAB, 3) THUS BUILDING FIXTAB AND 4) PGFIX FGBRS.     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0593
*       RFY                                                        0593
*         GTFPCT BASED(PCTPTR);                                    0593
*       RFY                                                        0594
*         FIXTAB BASED(FIXPTR);                                    0594
*       RFY                                                        0595
*         INITDATA BASED(INITPTR);                                 0595
*       RFY                                                        0596
*         RANGETAB BASED(RANGPTR);                                 0596
*       RFY                                                        0597
*        (RETCODE,                                                 0597
*         PCTPTR) RSTD;                                            0597
*       ENDVAL=(NEXTFREE-(ADDR(RANGETAB)+8))/8;/* CALCULATE NUMBER OF
*                                      ENTRIES IN RANGETAB     Y02014*/
         LA    @14,8                                               0598
         L     @10,INITPTR(,PCTPTR)                                0598
         L     @10,RANGPTR(,@10)                                   0598
         LR    ENDVAL,@10                                          0598
         ALR   ENDVAL,@14                                          0598
         LCR   ENDVAL,ENDVAL                                       0598
         AL    ENDVAL,NEXTFREE(,@10)                               0598
         SRDA  ENDVAL,32                                           0598
         DR    ENDVAL,@14                                          0598
         LR    ENDVAL,@05                                          0598
*       DO I=1 TO ENDVAL;           /* ROUND-OFF LOOP FOR RANGTB   0599
*                                                              Y02014*/
         LA    I,1                                                 0599
         B     @DE00599                                            0599
@DL00599 DS    0H                                                  0600
*         STARTADR(I)=STARTADR(I)&ROUND4K;/* ROUND STARTING ADDRESSES
*                                      DOWN TO 4K BOUNDARIES   Y02014*/
         LR    @14,I                                               0600
         SLA   @14,3                                               0600
         L     @10,INITPTR(,PCTPTR)                                0600
         L     @10,RANGPTR(,@10)                                   0600
         ICM   @09,15,ROUND4K                                      0600
         L     @07,STARTADR-8(@14,@10)                             0600
         NR    @07,@09                                             0600
         ST    @07,STARTADR-8(@14,@10)                             0600
*         ENDADR(I)=ENDADR(I)+FORKMIN1;/* ROUND ENDING ADDRS   Y02014*/
         LH    @07,FORKMIN1                                        0601
         AL    @07,ENDADR-8(@14,@10)                               0601
         ST    @07,ENDADR-8(@14,@10)                               0601
*         ENDADR(I)=ENDADR(I)&ROUND4K;/* UP TO 4K BOUNDARIES   Y02014*/
         NR    @07,@09                                             0602
         ST    @07,ENDADR-8(@14,@10)                               0602
*       END;                        /* END OF ROUND-OFF LOOP   Y02014*/
         AL    I,@CF00062                                          0603
@DE00599 CR    I,ENDVAL                                            0603
         BNH   @DL00599                                            0603
*       DO I=1 TO ENDVAL BY 1;      /* BUBBLE SORT RANGETAB    Y02014*/
         LA    I,1                                                 0604
         B     @DE00604                                            0604
@DL00604 DS    0H                                                  0605
*         DO J=ENDVAL TO I+1 BY-1;  /* ARRANGE RANGETAB ASCENDNG   0605
*                                                              Y02014*/
         LR    @14,ENDVAL                                          0605
         ST    @14,J                                               0605
         B     @DE00605                                            0605
@DL00605 DS    0H                                                  0606
*           IF STARTADR(J)<STARTADR(I) THEN/* IF LATER ENTRY IS    0606
*                                                              Y02014*/
         SLA   @14,3                                               0606
         L     @10,INITPTR(,PCTPTR)                                0606
         L     @10,RANGPTR(,@10)                                   0606
         LR    @09,I                                               0606
         SLA   @09,3                                               0606
         L     @07,STARTADR-8(@14,@10)                             0606
         C     @07,STARTADR-8(@09,@10)                             0606
         BNL   @RF00606                                            0606
*             DO;                   /* LOWER THAN FIRST ENTRY, SWAP
*                                      ENTRIES PATH            Y02014*/
*               TEMPELEM=RANGES(I); /* SWAP LATER              Y02014*/
         ST    @09,@TF00001                                        0608
         ALR   @09,@10                                             0608
         MVC   TEMPELEM(8),RANGES-8(@09)                           0608
*               RANGES(I)=RANGES(J);/* ENTRY WITH              Y02014*/
         LR    @09,@10                                             0609
         AL    @09,@TF00001                                        0609
         ST    @14,@TF00001                                        0609
         ALR   @14,@10                                             0609
         MVC   @TS00001(8),RANGES-8(@14)                           0609
         MVC   RANGES-8(8,@09),@TS00001                            0609
*               RANGES(J)=TEMPELEM; /* EARLIER ENTRY           Y02014*/
         AL    @10,@TF00001                                        0610
         MVC   RANGES-8(8,@10),TEMPELEM                            0610
*             END;                  /* END OF SWAP ENTRIES PATH    0611
*                                                              Y02014*/
*         END;                      /* END OF J BASED LOOP     Y02014*/
@RF00606 SLR   @14,@14                                             0612
         BCTR  @14,0                                               0612
         AL    @14,J                                               0612
         ST    @14,J                                               0612
@DE00605 LA    @10,1                                               0612
         ALR   @10,I                                               0612
         CR    @14,@10                                             0612
         BNL   @DL00605                                            0612
*       END;                        /* END OF I BASED LOOP     Y02014*/
         AL    I,@CF00062                                          0613
@DE00604 CR    I,ENDVAL                                            0613
         BNH   @DL00604                                            0613
*                                                                  0614
*       /*************************************************************/
*       /*                                                           */
*       /* STACK SQUEEZE RANGETAB                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0614
*       I=1;                        /* STARTING VALUE FOR LOOP Y02014*/
         LA    I,1                                                 0614
*       DO J=2 TO ENDVAL;           /* LOOP THROUGH ALL RANGETAB   0615
*                                                              Y02014*/
         LA    @14,2                                               0615
         B     @DE00615                                            0615
@DL00615 DS    0H                                                  0616
*         IF STARTADR(J)>ENDADR(I) THEN                            0616
         LR    @10,@14                                             0616
         SLA   @10,3                                               0616
         L     @09,INITPTR(,PCTPTR)                                0616
         L     @09,RANGPTR(,@09)                                   0616
         LR    @07,I                                               0616
         SLA   @07,3                                               0616
         L     @05,STARTADR-8(@10,@09)                             0616
         C     @05,ENDADR-8(@07,@09)                               0616
         BNH   @RF00616                                            0616
*           DO;                     /* IF STARTING ADDRESS OF LATER
*                                      IS BEYOND END OF EARLIER ONE,
*                                      THEN SECOND ENTRY IS NEEDED 0617
*                                                              Y02014*/
*             I=I+1;                /* INCREMENT POINTER       Y02014*/
         AL    I,@CF00062                                          0618
*             IF I=J THEN           /* IF NO HOLES OR DUPES,   Y02014*/
         CR    I,@14                                               0619
         BE    @RT00619                                            0619
*               GO TO GTFI225;      /* TRY NEXT SET OF ENTRIES Y02014*/
*             RANGES(I)=RANGES(J);  /* MOVE INTO EARLIER ONE   Y02014*/
         LR    @14,I                                               0621
         SLA   @14,3                                               0621
         ALR   @14,@09                                             0621
         ALR   @09,@10                                             0621
         MVC   @TS00001(8),RANGES-8(@09)                           0621
         MVC   RANGES-8(8,@14),@TS00001                            0621
*           END;                    /* END OF FILL HOLES PATH  Y02014*/
*         ELSE                                                     0623
*           IF ENDADR(J)>ENDADR(I) THEN                            0623
         B     @RC00616                                            0623
@RF00616 L     @14,J                                               0623
         SLA   @14,3                                               0623
         L     @10,INITPTR(,PCTPTR)                                0623
         L     @10,RANGPTR(,@10)                                   0623
         L     @14,ENDADR-8(@14,@10)                               0623
         LR    @09,I                                               0623
         SLA   @09,3                                               0623
         C     @14,ENDADR-8(@09,@10)                               0623
         BNH   @RF00623                                            0623
*             ENDADR(I)=ENDADR(J);  /* IF LATER ENTRY ENDS AFTER   0624
*                                      EARLIER AND STARTS RIGHT AFTER
*                                      EARLIER THEN INCORPORATE THE
*                                      TWO                     Y02014*/
         ST    @14,ENDADR-8(@09,@10)                               0624
*         STARTADR(J)=0;            /* ZERO OUT LATER ENTRY    Y02014*/
@RF00623 DS    0H                                                  0625
@RC00616 SLR   @14,@14                                             0625
         L     @10,J                                               0625
         SLA   @10,3                                               0625
         L     @09,INITPTR(,PCTPTR)                                0625
         L     @09,RANGPTR(,@09)                                   0625
         ST    @14,STARTADR-8(@10,@09)                             0625
*         ENDADR(J)=0;              /* ZERO OUT LATER ENTRY    Y02014*/
         ST    @14,ENDADR-8(@10,@09)                               0626
*GTFI225:                                                          0627
*       END;                        /* LOOP FOR ALL OF RANGETAB    0627
*                                                              Y02014*/
GTFI225  LA    @14,1                                               0627
         AL    @14,J                                               0627
@DE00615 ST    @14,J                                               0627
         CR    @14,ENDVAL                                          0627
         BNH   @DL00615                                            0627
*       FIXLEN=I*LENGTH(RANGES);    /* CALCULATE ELNGTH-FIXTAB Y02014*/
         LR    @14,I                                               0628
         SLA   @14,3                                               0628
         ST    @14,FIXLEN(,PCTPTR)                                 0628
*       DO;                         /* GETMAIN (EC) LV(FIXLEN)     0629
*                                      A(FIXPTR) SP(SQA)             */
*         RESPECIFY                                                0630
*          (GPR01P) RESTRICTED;                                    0630
*         I004=I004&&I004;          /* INIT LIST                     */
         XC    I004(10),I004                                       0631
*         I00404='20'X;             /* TYPE                          */
         MVI   I00404,X'20'                                        0632
*         I00401=FIXLEN;            /* LENGTH                        */
         ST    @14,I00401                                          0633
*         I00403=ADDR(FIXPTR);      /* ADDR OF ADDR LIST             */
         LA    @14,FIXPTR(,PCTPTR)                                 0634
         STCM  @14,7,I00403                                        0634
*         I00405=SQA;               /* SUBPOOL VALUE                 */
         MVI   I00405,X'F5'                                        0635
*         GPR01P=ADDR(I004);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                         0636
*         SVC(4);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                   0637
*         RESPECIFY                                                0638
*          (GPR01P) UNRESTRICTED;                                  0638
*       END;                        /* GETMAIN (EC) LV(FIXLEN)     0639
*                                      A(FIXPTR) SP(SQA) GET STORAGE
*                                      FOR FIXTAB IN SQA Y02014      */
*       IF RETCODE^=0 THEN          /* RETURN CODE CHECK       Y02014*/
         LTR   RETCODE,RETCODE                                     0640
         BZ    @RF00640                                            0640
*         DO;                       /* GETMAIN FAILED PATH     Y02014*/
*           DO;                     /* WTOP MF(E,AHL130)             */
*             RFY                                                  0643
*               GPR01P RSTD;        /* RESTRICT REG 1                */
*             GPR01P=ADDR(AHL130);  /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02187                                     0644
*             SVC(35);              /* ISSUE WTO SVC                 */
         SVC   35                                                  0645
*             RFY                                                  0646
*               GPR01P UNRSTD;      /* RELEASE REG 1                 */
*           END;                    /* WTOP MF(E,AHL130) INDICATE ERR
*                                      MSG Y02014                    */
*           DO;                     /* INITIALIZATION ERROR PATH   0648
*                                                              Y02014*/
*             GEN(ESTAE 0);         /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*             GO TO AHLITERM;       /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0650
*           END;                    /* INITIALIZATION ERROR PATH   0651
*                                                              Y02014*/
*         END;                      /* END OF GETMAIN FAILED   Y02014*/
*       RESPECIFY                                                  0653
*        (FIXTAB) BASED(FIXPTR);                                   0653
@RF00640 DS    0H                                                  0654
*       FIXTAB(1,1:FIXLEN)=RANGES(1,1:FIXLEN);/* MOVE RANGES TO    0654
*                                      FIXTAB                  Y02014*/
         L     @14,FIXPTR(,PCTPTR)                                 0654
         L     @10,FIXLEN(,PCTPTR)                                 0654
         BCTR  @10,0                                               0654
         L     @09,INITPTR(,PCTPTR)                                0654
         L     @09,RANGPTR(,@09)                                   0654
         EX    @10,@SM02448                                        0654
*       FREEADDR=ADDR(RANGETAB);    /* GET ADDR OF RANGETAB    Y02014*/
         ST    @09,FREEADDR                                        0655
*       FREELEN=LENGTH(RANGETAB);   /* GET LENGTH OF RANGETAB  Y02014*/
         MVC   FREELEN(4),@CF02437                                 0656
*       DO;                         /* FREEMAIN (V) A(PLSFREE)       */
*         RESPECIFY                                                0658
*          (GPR01P) RESTRICTED;                                    0658
*         I005=I005&&I005;          /* INIT LIST                     */
         XC    I005(10),I005                                       0659
*         I00505='C0'X;             /* SET TYPE                      */
         MVI   I00505,X'C0'                                        0660
*         I00504=ADDR(PLSFREE);     /* ADDR OF ADDR LIST             */
         LA    @14,PLSFREE                                         0661
         STCM  @14,7,I00504                                        0661
*         GPR01P=ADDR(I005);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         0662
*         SVC(5);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   0663
*         RESPECIFY                                                0664
*          (GPR01P) UNRESTRICTED;                                  0664
*       END;                        /* FREEMAIN (V) A(PLSFREE) FREE
*                                      RANGETAB Y02014               */
*       DO J=1 TO I;                /* ZERO OUT FLAGS IN FIXTAB    0666
*                                                              Y02014*/
         LA    @14,1                                               0666
         B     @DE00666                                            0666
@DL00666 DS    0H                                                  0667
*         FLAGA(J)=0;               /* CLEAR 1ST WORD FLAG     Y02014*/
         SLR   @10,@10                                             0667
         LR    @09,@14                                             0667
         SLA   @09,3                                               0667
         L     @07,FIXPTR(,PCTPTR)                                 0667
         LA    @03,0(@09,@07)                                      0667
         AL    @03,@CF02450                                        0667
         STC   @10,FLAGA(,@03)                                     0667
*         FLAGB(J)=0;               /* CLEAR 2ND WORD FLAG     Y02014*/
         AL    @07,@CF02451                                        0668
         STC   @10,FLAGB-4(@09,@07)                                0668
*       END;                        /* END OF ZERO FLAGS PATH  Y02014*/
         AL    @14,@CF00062                                        0669
@DE00666 ST    @14,J                                               0669
         CR    @14,I                                               0669
         BNH   @DL00666                                            0669
*       ENDFIX(I)='1'B;             /* INDICATE LAST VSL ENTRY Y02014*/
         LR    @14,I                                               0670
         SLA   @14,3                                               0670
         L     @10,FIXPTR(,PCTPTR)                                 0670
         ALR   @14,@10                                             0670
         AL    @14,@CF02451                                        0670
         OI    ENDFIX-4(@14),B'10000000'                           0670
*       FIXECB=FIXECB&&FIXECB;      /* CLEAR OUT PGFIX ECB     Y02014*/
         XC    FIXECB(4),FIXECB                                    0671
*       DO;                         /* PGFIX (L) LA(FIXTAB)        0672
*                                      ECB(FIXECB) LONG(Y)           */
*         RESPECIFY                                                0673
*          (GPR00P,                                                0673
*           GPR01P) RESTRICTED;                                    0673
*         GPR00P=ADDR(FIXECB);      /* ECB ADDR                      */
         LA    GPR00P,FIXECB                                       0674
*         GPR01P=ADDR(FIXTAB);      /* LIST ADDR                     */
         LR    GPR01P,@10                                          0675
*         GPR01P=GPR01P×'80000000'X;/* L FORM                        */
         O     GPR01P,@CF02114                                     0676
*         GPR01P->I001C=(GPR01P->I001C&'80'X)×'01010010'B;/* L,    0677
*                                      PGFIX, RELEASE & LONG FLAGS   */
         MVC   @TS00001(1),I001C(GPR01P)                           0677
         NI    @TS00001,X'80'                                      0677
         OI    @TS00001,B'01010010'                                0677
         MVC   I001C(1,GPR01P),@TS00001                            0677
*         RESPECIFY                                                0678
*           I001C BASED(GPR01P+4);  /* PTR TO PARMLIST BYTE 4        */
*         I001C=(I001C&'C0'X)×'00000000'B;/* RSAOPT FLAG             */
         LA    @14,4                                               0679
         ALR   @14,GPR01P                                          0679
         MVC   @TS00001(1),I001C(@14)                              0679
         NI    @TS00001,X'C0'                                      0679
         OI    @TS00001,B'00000000'                                0679
         MVC   I001C(1,@14),@TS00001                               0679
*         SVC(113);                 /* ISSUE PGFIX SVC               */
         SVC   113                                                 0680
*         RESPECIFY                                                0681
*          (GPR00P,                                                0681
*           GPR01P) UNRESTRICTED;                                  0681
*       END;                        /* PGFIX (L) LA(FIXTAB)        0682
*                                      ECB(FIXECB) LONG(Y) FIX GTF 0682
*                                      MODULES Y02014                */
*       DO;                         /* WAIT ECB(FIXECB)              */
*         RESPECIFY                                                0684
*          (GPR00P,                                                0684
*           GPR01P) RESTRICTED;                                    0684
*         GPR00P=1;                 /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                            0685
*         GPR01P=ADDR(FIXECB);      /* ADDRESS OF ECB                */
         LA    GPR01P,FIXECB                                       0686
*         SVC(1);                   /* WAIT SVC                      */
         SVC   1                                                   0687
*         RESPECIFY                                                0688
*          (GPR00P,                                                0688
*           GPR01P) UNRESTRICTED;                                  0688
*       END;                        /* WAIT ECB(FIXECB) WAIT FOR FIX
*                                      Y02014                        */
*       AUDITFXF='1'B;              /* INDICATE FIXTAB FIXED   Y02014*/
         OI    AUDITFXF,B'00100000'                                0690
*     END;                          /* END OF FGBRFIX          Y02014*/
*     RFY                                                          0692
*       EIDLIST BASED(GTFEIDL);                                    0692
*     IF OPTUSR='1'B THEN           /* IS USR REQUESTED?       Y02014*/
         TM    OPTUSR(PCTPTR),B'00010000'                          0693
         BNO   @RF00693                                            0693
*       DO;                         /* START OF USR REQ PATH   Y02014*/
*         DO;                       /* SETEVENT NAME('GTF')ACTION(ADD
*                                      )CLASSAD(CLASSLST)CLASSNO(1)MC
*                                      QE(MCQEPTR->MCQE)             */
*                                                                  0695
*           /*********************************************************/
*           /*                                                       */
*           /* THE FOLLOWING SECTION OF CODE IS GENERATED BY THE     */
*           /* SETEVENT MACRO. THIS CODE WILL BE EITHER AN           */
*           /* INITIALIZED PARAMETER LIST, OR IF IT IS THE RESULT OF */
*           /* STANDARD OR EXECUTE FORM IT WILL FILL in the list,    */
*           /* GENERATE ALL LINKAGES AND CALL THE PROPER sERVICE,    */
*           /* EITHER AHLSETEV OR AHLSETD                            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0696
*           DCL                                                    0696
*             1 SEPL0071 STATIC LOCAL BDY(WORD),/* ACTUAL PLIST FOR
*                                      STANDARD INVOCATION           */
*              2 SEFG0071 PTR(8),                                  0696
*              2 * PTR(8),                                         0696
*              2 SEEN0071 PTR(8),                                  0696
*              2 SECN0071 PTR(8),                                  0696
*              2 SENM0071 CHAR(8),                                 0696
*              2 SEEL0071 PTR(31),                                 0696
*              2 SECL0071 PTR(31),                                 0696
*              2 SEMC0071 PTR(31);                                 0696
*           AHLPPTR=ADDR(SEPL0071); /* INIT PLIST PTR                */
         LA    AHLPPTR,SEPL0071                                    0697
*           SEPL=SEPL&&SEPL;        /* ZERO OUT PLIST                */
         XC    SEPL(24,AHLPPTR),SEPL(AHLPPTR)                      0698
*           SEMC=ADDR(MCQEPTR->MCQE);/* INIT MCQE PTR                */
         L     @14,MCQEPTR(,PCTPTR)                                0699
         ST    @14,SEMC(,AHLPPTR)                                  0699
*           SENM='GTF';             /* MOVE IN NAME                  */
         MVI   SENM+3(AHLPPTR),C' '                                0700
         MVC   SENM+4(4,AHLPPTR),SENM+3(AHLPPTR)                   0700
         MVC   SENM(3,AHLPPTR),@CC01940                            0700
*           SEFG=128;               /* MOVE IN FLAGS                 */
         MVI   SEFG(AHLPPTR),X'80'                                 0701
*           SECL=ADDR(CLASSLST);    /* SET CLASS LIST ADDR           */
         LA    @14,CLASSLST                                        0702
         ST    @14,SECL(,AHLPPTR)                                  0702
*           SECN=1;                 /* SET TO VALUE SPECIFIED        */
         MVI   SECN(AHLPPTR),X'01'                                 0703
*           CALL AHLSETEV;          /* CALL SERVICE                  */
         L     @10,CVTPTR                                          0704
         L     @10,CVTGTF(,@10)                                    0704
         L     @15,MCHSETE(,@10)                                   0704
         BALR  @14,@15                                             0704
*         END;                      /* ISSUE SETEVENT FOR USER Y02014*/
*         IF RETCODE^=0 THEN        /* IF ERR IN SETEVENT      Y02014*/
         LTR   RETCODE,RETCODE                                     0706
         BZ    @RF00706                                            0706
*           DO;                     /* START OF SETEVNT ERR PATH   0707
*                                                              Y02014*/
*             DO;                   /* CONVERT RETURN CODE TO      0708
*                                      PRINTABLE HEX           Y02014*/
*               BINRYRC=RETCODE;    /* SET RETURN CODE IN MIDDLE OF
*                                      THREE BYTE AREA         Y02014*/
         STCM  RETCODE,3,BINRYRC                                   0709
*               UNPK(TEMPRC,RC);    /* UNPACK RETURN CODE      Y02014*/
         UNPK  TEMPRC(3),RC(3)                                     0710
*               RCIND=TEMPRC;       /* MOVE TO TWO BYTE AREA   Y02014*/
         L     @14,@CA02029                                        0711
         MVC   RCIND-AHL019(2,@14),TEMPRC                          0711
*               TR(RCIND,DEFTABLE); /* TRANSLATE UNPACKED BYTES    0712
*                                                              Y02014*/
         TR    RCIND-AHL019(2,@14),DEFTABLE                        0712
*             END;                  /* END OF CONVERSION       Y02014*/
*             DO;                   /* WTOP MF(E,AHL019)             */
*               RFY                                                0715
*                 GPR01P RSTD;      /* RESTRICT REG 1                */
*               GPR01P=ADDR(AHL019);/* ADDRESS CONTROL PROGRAM LIST  */
         LR    GPR01P,@14                                          0716
*               SVC(35);            /* ISSUE WTO SVC                 */
         SVC   35                                                  0717
*               RFY                                                0718
*                 GPR01P UNRSTD;    /* RELEASE REG 1                 */
*             END;                  /* WTOP MF(E,AHL019) WRITE ERR 0719
*                                      MSG Y02014                    */
*             DO;                   /* INITIALIZATION ERROR PATH   0720
*                                                              Y02014*/
*               GEN(ESTAE 0);       /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*               GO TO AHLITERM;     /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0722
*             END;                  /* INITIALIZATION ERROR PATH   0723
*                                                              Y02014*/
*           END;                    /* END OF SETEVENT ERR PATH    0724
*                                                              Y02014*/
*       END;                        /* END OF USR REQ PATH     Y02014*/
@RF00706 DS    0H                                                  0726
*     IF EIDCNT^=0 THEN             /* ARE OTHER OPTIONS REQ   Y02014*/
@RF00693 L     @14,EIDCNT                                          0726
         LTR   @14,@14                                             0726
         BZ    @RF00726                                            0726
*       DO;                         /* START OF USR & OTHER OPTS   0727
*                                                              Y02014*/
*         DO;                       /* SETEVENT NAME('GTF')MCQE(MCQEP
*                                      TR->MCQE)EIDAD(EIDLIST)EIDNO(E
*                                      IDCNT)ACTION(ADD)             */
*                                                                  0728
*           /*********************************************************/
*           /*                                                       */
*           /* THE FOLLOWING SECTION OF CODE IS GENERATED BY THE     */
*           /* SETEVENT MACRO. THIS CODE WILL BE EITHER AN           */
*           /* INITIALIZED PARAMETER LIST, OR IF IT IS THE RESULT OF */
*           /* STANDARD OR EXECUTE FORM IT WILL FILL in the list,    */
*           /* GENERATE ALL LINKAGES AND CALL THE PROPER sERVICE,    */
*           /* EITHER AHLSETEV OR AHLSETD                            */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0729
*           DCL                                                    0729
*             1 SEPL0074 STATIC LOCAL BDY(WORD),/* ACTUAL PLIST FOR
*                                      STANDARD INVOCATION           */
*              2 SEFG0074 PTR(8),                                  0729
*              2 * PTR(8),                                         0729
*              2 SEEN0074 PTR(8),                                  0729
*              2 SECN0074 PTR(8),                                  0729
*              2 SENM0074 CHAR(8),                                 0729
*              2 SEEL0074 PTR(31),                                 0729
*              2 SECL0074 PTR(31),                                 0729
*              2 SEMC0074 PTR(31);                                 0729
*           AHLPPTR=ADDR(SEPL0074); /* INIT PLIST PTR                */
         LA    AHLPPTR,SEPL0074                                    0730
*           SEPL=SEPL&&SEPL;        /* ZERO OUT PLIST                */
         XC    SEPL(24,AHLPPTR),SEPL(AHLPPTR)                      0731
*           SEMC=ADDR(MCQEPTR->MCQE);/* INIT MCQE PTR                */
         L     @10,MCQEPTR(,PCTPTR)                                0732
         ST    @10,SEMC(,AHLPPTR)                                  0732
*           SENM='GTF';             /* MOVE IN NAME                  */
         MVI   SENM+3(AHLPPTR),C' '                                0733
         MVC   SENM+4(4,AHLPPTR),SENM+3(AHLPPTR)                   0733
         MVC   SENM(3,AHLPPTR),@CC01940                            0733
*           SEFG=128;               /* MOVE IN FLAGS                 */
         MVI   SEFG(AHLPPTR),X'80'                                 0734
*           SEEL=ADDR(EIDLIST);     /* SET EID LIST ADDR             */
         L     @10,GTFEIDL(,PCTPTR)                                0735
         ST    @10,SEEL(,AHLPPTR)                                  0735
*           SEEN=EIDCNT;            /* SET TO VALUE SPECIFIED        */
         STC   @14,SEEN(,AHLPPTR)                                  0736
*           CALL AHLSETEV;          /* CALL SERVICE                  */
         L     @10,CVTPTR                                          0737
         L     @10,CVTGTF(,@10)                                    0737
         L     @15,MCHSETE(,@10)                                   0737
         BALR  @14,@15                                             0737
*         END;                      /* ISSUE STEVNT FOR OTHERS Y02014*/
*         IF RETCODE^=0 THEN        /* IF ERR IN SETEVENT      Y02014*/
         LTR   RETCODE,RETCODE                                     0739
         BZ    @RF00739                                            0739
*           DO;                     /* START OF SETEVNT ERR PATH   0740
*                                                              Y02014*/
*             DO;                   /* CONVERT RETURN CODE TO      0741
*                                      PRINTABLE HEX           Y02014*/
*               BINRYRC=RETCODE;    /* SET RETURN CODE IN MIDDLE OF
*                                      THREE BYTE AREA         Y02014*/
         STCM  RETCODE,3,BINRYRC                                   0742
*               UNPK(TEMPRC,RC);    /* UNPACK RETURN CODE      Y02014*/
         UNPK  TEMPRC(3),RC(3)                                     0743
*               RCIND=TEMPRC;       /* MOVE TO TWO BYTE AREA   Y02014*/
         L     @14,@CA02029                                        0744
         MVC   RCIND-AHL019(2,@14),TEMPRC                          0744
*               TR(RCIND,DEFTABLE); /* TRANSLATE UNPACKED BYTES    0745
*                                                              Y02014*/
         TR    RCIND-AHL019(2,@14),DEFTABLE                        0745
*             END;                  /* END OF CONVERSION       Y02014*/
*             DO;                   /* WTOP MF(E,AHL019)             */
*               RFY                                                0748
*                 GPR01P RSTD;      /* RESTRICT REG 1                */
*               GPR01P=ADDR(AHL019);/* ADDRESS CONTROL PROGRAM LIST  */
         LR    GPR01P,@14                                          0749
*               SVC(35);            /* ISSUE WTO SVC                 */
         SVC   35                                                  0750
*               RFY                                                0751
*                 GPR01P UNRSTD;    /* RELEASE REG 1                 */
*             END;                  /* WTOP MF(E,AHL019) WRITE ERR 0752
*                                      MSG Y02014                    */
*             DO;                   /* INITIALIZATION ERROR PATH   0753
*                                                              Y02014*/
*               GEN(ESTAE 0);       /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*               GO TO AHLITERM;     /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0755
*             END;                  /* INITIALIZATION ERROR PATH   0756
*                                                              Y02014*/
*           END;                    /* END OF SETEVENT ERR PATH    0757
*                                                              Y02014*/
*       END;                        /* END OF OTHER EID REQ PATH   0758
*                                                              Y02014*/
@RF00739 DS    0H                                                  0759
*     RFY                                                          0759
*       RETCODE RSTD;                                              0759
@RF00726 DS    0H                                                  0760
*     RETCODE=0;                    /* GET AROUND LOAD ERROR RTN   0760
*                                                              Y02014*/
         SLR   RETCODE,RETCODE                                     0760
*                                                                  0761
*     /***************************************************************/
*     /*                                                             */
*     /* ERROR ON LOAD ROUTINE                                       */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0761
*     RFY                                                          0761
*       REG0 RSTD;                                                 0761
*GTFI350:                                                          0762
*     IF RETCODE^=0 THEN            /* LOAD ERROR              Y02014*/
GTFI350  LTR   RETCODE,RETCODE                                     0762
         BZ    @RF00762                                            0762
*       DO;                         /* LOAD ERROR RTN          Y02014*/
*         ABEND=REG0;                                              0764
         STCM  REG0,15,ABEND                                       0764
*         RFY                                                      0765
*           REG0 UNRSTD;                                           0765
*         UNPK(TEMPABND,ABRC);                                     0766
         UNPK  TEMPABND(5),ABRC(5)                                 0766
*         ABNDCODE=TEMPABND;                                       0767
         L     @14,@CA01953                                        0767
         MVC   ABNDCODE-AHL071(4,@14),TEMPABND                     0767
*         TR(ABNDCODE,DEFTABLE);                                   0768
         TR    ABNDCODE-AHL071(4,@14),DEFTABLE                     0768
*         DO;                       /* CONVERT RETURN CODE TO      0769
*                                      PRINTABLE HEX           Y02014*/
*           BINRYRC=RETCODE;        /* SET RETURN CODE IN MIDDLE OF
*                                      THREE BYTE AREA         Y02014*/
         STCM  RETCODE,3,BINRYRC                                   0770
*           UNPK(TEMPRC,RC);        /* UNPACK RETURN CODE      Y02014*/
         UNPK  TEMPRC(3),RC(3)                                     0771
*           RCIND=TEMPRC;           /* MOVE TO TWO BYTE AREA   Y02014*/
         L     @10,@CA02029                                        0772
         MVC   RCIND-AHL019(2,@10),TEMPRC                          0772
*           TR(RCIND,DEFTABLE);     /* TRANSLATE UNPACKED BYTES    0773
*                                                              Y02014*/
         TR    RCIND-AHL019(2,@10),DEFTABLE                        0773
*         END;                      /* END OF CONVERSION       Y02014*/
*         RCIND2=RCIND;             /* PLACE RETURN CODE OF PRINTABLE
*                                      HEX INTO CORRECT MSG, AHL071
*                                                              Y02014*/
         MVC   RCIND2-AHL071(2,@14),RCIND-AHL019(@10)              0775
*         DO;                       /* WTOP MF(E,AHL071)             */
*           RFY                                                    0777
*             GPR01P RSTD;          /* RESTRICT REG 1                */
*           GPR01P=ADDR(AHL071);    /* ADDRESS CONTROL PROGRAM LIST  */
         LR    GPR01P,@14                                          0778
*           SVC(35);                /* ISSUE WTO SVC                 */
         SVC   35                                                  0779
*           RFY                                                    0780
*             GPR01P UNRSTD;        /* RELEASE REG 1                 */
*         END;                      /* WTOP MF(E,AHL071) WRITE ERROR
*                                      MSG Y02014                    */
*         DO;                       /* INITIALIZATION ERROR PATH   0782
*                                                              Y02014*/
*           GEN(ESTAE 0);           /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*           GO TO AHLITERM;         /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0784
*         END;                      /* INITIALIZATION ERROR PATH   0785
*                                                              Y02014*/
*       END;                        /* END OF LOAD ERROR RTN   Y02014*/
*   END;                            /* END OF MCQEINIT         Y02014*/
@RF00762 DS    0H                                                  0788
*   IF STOPECBP='1'B THEN           /* STOP COMMAND REQUESTED? Y02014*/
         L     @14,STOPECBA(,PCTPTR)                               0788
         TM    STOPECBP(@14),B'01000000'                           0788
         BNO   @RF00788                                            0788
*     DO;                           /* STOP COMMAND PATH       Y02014*/
*       SYSCODE=0;                  /* SET UP SYSTEM RETURN CODE TO
*                                      INDICATE GTF INIT INCOMPLETE
*                                                              Y02014*/
         SLR   SYSCODE,SYSCODE                                     0790
*       DO;                         /* WTOP MF(E,AHL006)             */
*         RFY                                                      0792
*           GPR01P RSTD;            /* RESTRICT REG 1                */
*         GPR01P=ADDR(AHL006);      /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02180                                     0793
*         SVC(35);                  /* ISSUE WTO SVC                 */
         SVC   35                                                  0794
*         RFY                                                      0795
*           GPR01P UNRSTD;          /* RELEASE REG 1                 */
*       END;                        /* WTOP MF(E,AHL006) INDICATE ERR
*                                      MSG Y02014                    */
*       DO;                         /* INITIALIZATION ERROR PATH   0797
*                                                              Y02014*/
*         GEN(ESTAE 0);             /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*         GO TO AHLITERM;           /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0799
*       END;                        /* INITIALIZATION ERROR PATH   0800
*                                                              Y02014*/
*     END;                          /* END OF STOP COMMAND PATH    0801
*                                                              Y02014*/
*                                                                  0802
*   /*****************************************************************/
*   /*                                                               */
*   /* ATTACH AHLWTASK                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0802
*   RFY                                                            0802
*     PARMRG1 RSTD;                                                0802
@RF00788 DS    0H                                                  0803
*   PARMRG1=MCQEPTR;                /* PARM FOR ATTACH=@MCQE   Y02014*/
         L     PARMRG1,MCQEPTR(,PCTPTR)                            0803
*   DO;                             /* ATTACH EP('AHLWTASK')       0804
*                                      ECB(WTSKATTH)                 */
*     I042=I042&&I042;              /* ZERO THE LIST                 */
         XC    I042(60),I042                                       0805
*     I04202=ADDR('AHLWTASK');      /* EP/DE ADDRESS                 */
         LA    @14,@CC02340                                        0806
         STCM  @14,7,I04202                                        0806
*     I04216='AHLWTASK';            /* ENTRY POINT NAME              */
         MVC   I04216(8),@CC02340                                  0807
*     I04205=I04205×'00001000'B;    /* STATUS BYTE                   */
         LA    @14,8                                               0808
         SLR   @10,@10                                             0808
         IC    @10,I04205                                          0808
         OR    @14,@10                                             0808
         STC   @14,I04205                                          0808
*     I04206=ADDR(WTSKATTH);        /* ECB ADDRESS                   */
         LA    @14,WTSKATTH(,PCTPTR)                               0809
         STCM  @14,7,I04206                                        0809
*     I04226=LENGTH(I042);          /* LENGTH OF LIST                */
         MVC   I04226(2),@CH02429                                  0810
*     RFY                                                          0811
*      (GPR01P,                                                    0811
*       GPR15P) RSTD;                                              0811
*     GPR15P=ADDR(I042);            /* ATTACH LIST ADDRESS           */
         LA    GPR15P,I042                                         0812
*     SVC(42);                      /* ATTACH SVC                    */
         SVC   42                                                  0813
*     RFY                                                          0814
*      (GPR01P,                                                    0814
*       GPR15P) UNRSTD;                                            0814
*   END;                            /* ATTACH EP('AHLWTASK')       0815
*                                      ECB(WTSKATTH) NOTE: REG 1 = 0815
*                                      PARM Y02014                   */
*   WTSKTCBA=PARMRG1;               /* SAVE TCB ADDR OF WTSK   Y02014*/
*                                                                  0816
         ST    PARMRG1,WTSKTCBA(,PCTPTR)                           0816
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD ECBLISTS TO WAIT FOR WRITER AND WTASK TO INITIALIZE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0817
*   ECBLSTA1=ADDR(WTSKINIT);        /* ECB INIT COMPLETE-WTASK Y02014*/
         LA    @14,WTSKINIT(,PCTPTR)                               0817
         ST    @14,ECBLSTA1                                        0817
*   ECBLSTA2=ADDR(WTSKATTH);        /* ECB INIT FAILED-WTASK   Y02014*/
         LA    @14,WTSKATTH(,PCTPTR)                               0818
         STCM  @14,7,ECBLSTA2                                      0818
*   ECBLSTB1=ADDR(GTFCMECB);        /* ECB INIT COMPLETE-WRTR  Y02014*/
         LA    @14,GTFCMECB(,PCTPTR)                               0819
         ST    @14,ECBLSTB1                                        0819
*   ECBLSTB2=ADDR(ATTCHECB);        /* ECB INIT FAILED-WRTR    Y02014*/
         LA    @14,ATTCHECB(,PCTPTR)                               0820
         STCM  @14,7,ECBLSTB2                                      0820
*   ECBLSTAB='1'B;                  /* INDICATE LAST ECB IN LIST   0821
*                                                              Y02014*/
         OI    ECBLSTAB,B'10000000'                                0821
*   ECBLSTBB='1'B;                  /* INDICATE LAST ECB IN LIST   0822
*                                                              Y02014*/
         OI    ECBLSTBB,B'10000000'                                0822
*   DO;                             /* WAIT (1) ECBLIST(WAITWTSK)    */
*     RESPECIFY                                                    0824
*      (GPR00P,                                                    0824
*       GPR01P) RESTRICTED;                                        0824
*     GPR00P=1;                     /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                            0825
*     GPR01P=-ADDR(WAITWTSK);       /* ADDRESS OF LIST OF ECB'S      */
         LA    GPR01P,WAITWTSK                                     0826
         LCR   GPR01P,GPR01P                                       0826
*     SVC(1);                       /* WAIT SVC                      */
         SVC   1                                                   0827
*     RESPECIFY                                                    0828
*      (GPR00P,                                                    0828
*       GPR01P) UNRESTRICTED;                                      0828
*   END;                            /* WAIT (1) ECBLIST(WAITWTSK)  0829
*                                      WAIT FOR WTASK TO FINISH    0829
*                                      Y02014                        */
*   IF WTASKPST='1'B THEN           /* WTASK INIT FAILED?      Y02014*/
         TM    WTASKPST(PCTPTR),B'01000000'                        0830
         BNO   @RF00830                                            0830
*     DO;                           /* WTASK FAILED PATH       Y02014*/
*       AUDITWTK='1'B;              /* INDICATE WTASK ATTACHED Y02014*/
         OI    AUDITWTK,B'01000000'                                0832
*       DO;                         /* INITIALIZATION ERROR PATH   0833
*                                                              Y02014*/
*         GEN(ESTAE 0);             /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*         GO TO AHLITERM;           /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0835
*       END;                        /* INITIALIZATION ERROR PATH   0836
*                                                              Y02014*/
*     END;                          /* END OF INIT FAILED PATH Y02014*/
*   AUDITWTK='1'B;                  /* INDICATE WTASK ATTACHED Y02014*/
*                                                                  0838
@RF00830 OI    AUDITWTK,B'01000000'                                0838
*   /*****************************************************************/
*   /*                                                               */
*   /* ATTACH APPROPRIATE WRITER                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0839
*   PARMRG1=MCQEPTR;                /* PARM FOR ATTACH=@MCQE   Y02014*/
         L     PARMRG1,MCQEPTR(,PCTPTR)                            0839
*   IF GTFMODE='0'B THEN            /* IS GTF MDE = INTERNAL?  Y02014*/
         TM    GTFMODE(PCTPTR),B'10000000'                         0840
         BNZ   @RF00840                                            0840
*     DO;                           /* GTF INT PATH            Y02014*/
*       DO;                         /* ATTACH EP('AHLIWRIT')       0842
*                                      ECB(ATTCHECB)                 */
*         I042=I042&&I042;          /* ZERO THE LIST                 */
         XC    I042(60),I042                                       0843
*         I04202=ADDR('AHLIWRIT');  /* EP/DE ADDRESS                 */
         LA    @14,@CC02348                                        0844
         STCM  @14,7,I04202                                        0844
*         I04216='AHLIWRIT';        /* ENTRY POINT NAME              */
         MVC   I04216(8),@CC02348                                  0845
*         I04205=I04205×'00001000'B;/* STATUS BYTE                   */
         LA    @14,8                                               0846
         SLR   @10,@10                                             0846
         IC    @10,I04205                                          0846
         OR    @14,@10                                             0846
         STC   @14,I04205                                          0846
*         I04206=ADDR(ATTCHECB);    /* ECB ADDRESS                   */
         LA    @14,ATTCHECB(,PCTPTR)                               0847
         STCM  @14,7,I04206                                        0847
*         I04226=LENGTH(I042);      /* LENGTH OF LIST                */
         MVC   I04226(2),@CH02429                                  0848
*         RFY                                                      0849
*          (GPR01P,                                                0849
*           GPR15P) RSTD;                                          0849
*         GPR15P=ADDR(I042);        /* ATTACH LIST ADDRESS           */
         LA    GPR15P,I042                                         0850
*         SVC(42);                  /* ATTACH SVC                    */
         SVC   42                                                  0851
*         RFY                                                      0852
*          (GPR01P,                                                0852
*           GPR15P) UNRSTD;                                        0852
*       END;                        /* ATTACH EP('AHLIWRIT')       0853
*                                      ECB(ATTCHECB) NOTE:REG1=PARM
*                                      Y02014                        */
*     END;                          /* END OF INT PATH         Y02014*/
*   ELSE                                                           0855
*     DO;                           /* NOT TAPE PATH           Y02014*/
         B     @RC00840                                            0855
@RF00840 DS    0H                                                  0856
*       GEN( DEVTYPE WRITERDD(,PCTPTR),DEVLIST);/* DETERMINE I/O   0856
*                                      DEVICE                  Y02014*/
          DEVTYPE WRITERDD(,PCTPTR),DEVLIST
*       IF RETCODE^=0 THEN          /* DEVTYPE FAILED          Y02014*/
         LTR   RETCODE,RETCODE                                     0857
         BZ    @RF00857                                            0857
*         DO;                       /* DEVTYPE FAILED PATH     Y02014*/
*           DO;                     /* WTOP MF(E,AHL039)             */
*             RFY                                                  0860
*               GPR01P RSTD;        /* RESTRICT REG 1                */
*             GPR01P=ADDR(AHL039);  /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02185                                     0861
*             SVC(35);              /* ISSUE WTO SVC                 */
         SVC   35                                                  0862
*             RFY                                                  0863
*               GPR01P UNRSTD;      /* RELEASE REG 1                 */
*           END;                    /* WTOP MF(E,AHL039) IEFRDER DD
*                                      CARD MISSING Y02014           */
*           DO;                     /* INITIALIZATION ERROR PATH   0865
*                                                              Y02014*/
*             GEN(ESTAE 0);         /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*             GO TO AHLITERM;       /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0867
*           END;                    /* INITIALIZATION ERROR PATH   0868
*                                                              Y02014*/
*         END;                      /* END OF DEVTYPE ERR PATH Y02014*/
*       PARMRG1=MCQEPTR;            /* PARM FOR ATTACH=@MCQE   Y02014*/
@RF00857 L     PARMRG1,MCQEPTR(,PCTPTR)                            0870
*       IF UCBDEVB3='80'X THEN      /* WRD1,BYT3 INFO FROM DEVTP   0871
*                                      INDICATES TAPE OR DISK  Y02014*/
         CLI   UCBDEVB3,128                                        0871
         BNE   @RF00871                                            0871
*         DO;                       /* TAPE PROCESSING         Y02014*/
*           DO;                     /* ATTACH EP('AHLCWRIT')       0873
*                                      ECB(ATTCHECB)                 */
*             I042=I042&&I042;      /* ZERO THE LIST                 */
         XC    I042(60),I042                                       0874
*             I04202=ADDR('AHLCWRIT');/* EP/DE ADDRESS               */
         LA    @14,@CC02349                                        0875
         STCM  @14,7,I04202                                        0875
*             I04216='AHLCWRIT';    /* ENTRY POINT NAME              */
         MVC   I04216(8),@CC02349                                  0876
*             I04205=I04205×'00001000'B;/* STATUS BYTE               */
         LA    @14,8                                               0877
         SLR   @10,@10                                             0877
         IC    @10,I04205                                          0877
         OR    @14,@10                                             0877
         STC   @14,I04205                                          0877
*             I04206=ADDR(ATTCHECB);/* ECB ADDRESS                   */
         LA    @14,ATTCHECB(,PCTPTR)                               0878
         STCM  @14,7,I04206                                        0878
*             I04226=LENGTH(I042);  /* LENGTH OF LIST                */
         MVC   I04226(2),@CH02429                                  0879
*             RFY                                                  0880
*              (GPR01P,                                            0880
*               GPR15P) RSTD;                                      0880
*             GPR15P=ADDR(I042);    /* ATTACH LIST ADDRESS           */
         LA    GPR15P,I042                                         0881
*             SVC(42);              /* ATTACH SVC                    */
         SVC   42                                                  0882
*             RFY                                                  0883
*              (GPR01P,                                            0883
*               GPR15P) UNRSTD;                                    0883
*           END;                    /* ATTACH EP('AHLCWRIT')       0884
*                                      ECB(ATTCHECB) REG1=PARM Y02014*/
*         END;                      /* END OF TAPE             Y02014*/
*       ELSE                                                       0886
*         IF UCBDEVB3='20'X THEN    /* WRD1,BYT3 INDICATE DISK?    0886
*                                                              Y02014*/
         B     @RC00871                                            0886
@RF00871 CLI   UCBDEVB3,32                                         0886
         BNE   @RF00886                                            0886
*           DO;                     /* ATTACH EP('AHLWWRIT')       0887
*                                      ECB(ATTCHECB)                 */
*             I042=I042&&I042;      /* ZERO THE LIST                 */
         XC    I042(60),I042                                       0888
*             I04202=ADDR('AHLWWRIT');/* EP/DE ADDRESS               */
         LA    @14,@CC02350                                        0889
         STCM  @14,7,I04202                                        0889
*             I04216='AHLWWRIT';    /* ENTRY POINT NAME              */
         MVC   I04216(8),@CC02350                                  0890
*             I04205=I04205×'00001000'B;/* STATUS BYTE               */
         LA    @14,8                                               0891
         SLR   @10,@10                                             0891
         IC    @10,I04205                                          0891
         OR    @14,@10                                             0891
         STC   @14,I04205                                          0891
*             I04206=ADDR(ATTCHECB);/* ECB ADDRESS                   */
         LA    @14,ATTCHECB(,PCTPTR)                               0892
         STCM  @14,7,I04206                                        0892
*             I04226=LENGTH(I042);  /* LENGTH OF LIST                */
         MVC   I04226(2),@CH02429                                  0893
*             RFY                                                  0894
*              (GPR01P,                                            0894
*               GPR15P) RSTD;                                      0894
*             GPR15P=ADDR(I042);    /* ATTACH LIST ADDRESS           */
         LA    GPR15P,I042                                         0895
*             SVC(42);              /* ATTACH SVC                    */
         SVC   42                                                  0896
*             RFY                                                  0897
*              (GPR01P,                                            0897
*               GPR15P) UNRSTD;                                    0897
*           END;                    /* ATTACH EP('AHLWWRIT')       0898
*                                      ECB(ATTCHECB) REG1=PARM Y02014*/
*         ELSE                                                     0899
*           DO;                     /* IF NEITHER TAPE OR DISK PATH
*                                                              Y02014*/
         B     @RC00886                                            0899
@RF00886 DS    0H                                                  0900
*             DO;                   /* WTOP MF(E,AHL070)             */
*               RFY                                                0901
*                 GPR01P RSTD;      /* RESTRICT REG 1                */
*               GPR01P=ADDR(AHL070);/* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02186                                     0902
*               SVC(35);            /* ISSUE WTO SVC                 */
         SVC   35                                                  0903
*               RFY                                                0904
*                 GPR01P UNRSTD;    /* RELEASE REG 1                 */
*             END;                  /* WTOP MF(E,AHL070) INFORM NO 0905
*                                      DEVICE MSG Y02014             */
*             DO;                   /* INITIALIZATION ERROR PATH   0906
*                                                              Y02014*/
*               GEN(ESTAE 0);       /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*               GO TO AHLITERM;     /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0908
*             END;                  /* INITIALIZATION ERROR PATH   0909
*                                                              Y02014*/
*           END;                    /* END OF NEITHER TAPE OR DISK 0910
*                                      PATH                    Y02014*/
*     END;                          /* END OF NOT TAPE PATH    Y02014*/
@RC00886 DS    0H                                                  0911
@RC00871 DS    0H                                                  0912
*   WRTRTCBA=PARMRG1;               /* SAVE TCB ADDR OF WRTR   Y02014*/
@RC00840 ST    PARMRG1,WRTRTCBA(,PCTPTR)                           0912
*   DO;                             /* WAIT (1) ECBLIST(WAITWRTR)    */
*     RESPECIFY                                                    0914
*      (GPR00P,                                                    0914
*       GPR01P) RESTRICTED;                                        0914
*     GPR00P=1;                     /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                            0915
*     GPR01P=-ADDR(WAITWRTR);       /* ADDRESS OF LIST OF ECB'S      */
         LA    GPR01P,WAITWRTR                                     0916
         LCR   GPR01P,GPR01P                                       0916
*     SVC(1);                       /* WAIT SVC                      */
         SVC   1                                                   0917
*     RESPECIFY                                                    0918
*      (GPR00P,                                                    0918
*       GPR01P) UNRESTRICTED;                                      0918
*   END;                            /* WAIT (1) ECBLIST(WAITWRTR)  0919
*                                      WAIT ON WRTR TO FINISH Y02014 */
*   IF WTRPOST='1'B THEN            /* WRTR INIT FAILED?       Y02014*/
         TM    WTRPOST(PCTPTR),B'01000000'                         0920
         BNO   @RF00920                                            0920
*     DO;                           /* WRTR FAILED PATH        Y02014*/
*       AUDITWTR='1'B;              /* INDICATE WRITER ATTACHED    0922
*                                                              Y02014*/
         OI    AUDITWTR,B'10000000'                                0922
*       DO;                         /* INITIALIZATION ERROR PATH   0923
*                                                              Y02014*/
*         GEN(ESTAE 0);             /* CANCEL ESTAE            Y02014*/
         ESTAE 0
*         GO TO AHLITERM;           /* GO TERMINATE INIT       Y02014*/
         B     AHLITERM                                            0925
*       END;                        /* INITIALIZATION ERROR PATH   0926
*                                                              Y02014*/
*     END;                          /* END OF WRTR INIT FAILED Y02014*/
*   AUDITWTR='1'B;                  /* INDICATE WRITER ATTACHED    0928
*                                                              Y02014*/
@RF00920 OI    AUDITWTR,B'10000000'                                0928
*   RFY                                                            0929
*    (PARMRG1) UNRSTD;                                             0929
*   DO;                             /* FREEMAIN(R) LV(LENGTH(INITDATA
*                                      ))A(INITDATA)                 */
*     RESPECIFY                                                    0931
*      (GPR01F,                                                    0931
*       GPR00F) RESTRICTED;                                        0931
*     GPR00F=LENGTH(INITDATA);      /* LENGTH REQUESTED              */
         LA    GPR00F,368                                          0932
*     GPR01F=ADDR(INITDATA);        /* SET REGISTER ONE              */
         L     GPR01F,INITPTR(,PCTPTR)                             0933
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0934
*     RESPECIFY                                                    0935
*      (GPR01F,                                                    0935
*       GPR00F) UNRESTRICTED;                                      0935
*   END;                            /* FREEMAIN(R) LV(LENGTH(INITDATA
*                                      ))A(INITDATA) FREE INITDATA 0936
*                                      Y02014                        */
*   INITPTR=''B;                    /* ZERO OUT PTR TO INITDATA IN 0937
*                                      GTFPCT                  Y02014*/
         SLR   @14,@14                                             0937
         ST    @14,INITPTR(,PCTPTR)                                0937
*GTFXCTL:                                                          0938
*   GENERATE;                                                      0938
GTFXCTL  DS    0H                                                  0938
*                                 /* RETURN ADDR FOR AHLTMON   Y02014*/
         LA @15,GTFXCTL           ESTABLISH ADDRESSABILITY FOR THE XCTL
         USING GTFXCTL,@15
         L @13,4(,@13)             GET POINTER TO CALLERS SAVEAREA
         ST @02,24(,@13)           SAVE ADDR OF GTFPCT IN REG 1
         LM @00,@12,20(@13)       RESTORE CALLERS REGS FROM SAVEAREA
         L @14,12(,@13)           RESTORE RETURN ADDR IN REG 14
         XCTL EP=AHLTMON         TRANSFER CTL TO AHLTMON
         DROP @15
*                                                                  0939
*   /*****************************************************************/
*   /*                                                               */
*   /* AHIESTA - GTF INITIALIZATION ESTAE ROUTINE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0939
*   RFY                                                            0939
*    (PARMRG1,                                                     0939
*     PARMRG2,                                                     0939
*     SAVE14,                                                      0939
*     RETRTM) RSTD;                                                0939
*                                                                  0939
*   /*****************************************************************/
*   /*                                                               */
*   /* AHLIESTA THE FUNCTIONS OF THIS PROCEDURE ARE: 1) CHECK ESTAE  */
*   /* CODE ON ENTRY TO DETERMINE EXISTENCE OF RTCA 2) IF NOT        */
*   /* RTCA,THEN GET PTR TO ESTAE PARAMETER LIST AND GO TO           */
*   /* TERMINATION WITHOUT FURTHER ESTAE PROCESSING 3) IF RTCA EXISTS*/
*   /* THEN CHECK ACR BIT AND RETRY IF ON, OTHERWISE ISSUE SETRP TO  */
*   /* ALLOW SYSTEM TO PUT INFORMATION IN RTCA BEFORE GOING ON TO    */
*   /* TERMINATION.                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0940
*   RFY                                                            0940
*    (ESTACODE,                                                    0940
*     PARMRG2,                                                     0940
*     PARMRG1,                                                     0940
*     RETCODE,                                                     0940
*     PCTPTR) RSTD;                                                0940
*   RFY                                                            0941
*     FIXTAB BASED(FIXPTR);                                        0941
*AHLIESTA:                                                         0942
*   DO;                             /* START OF ESTAE RTN Y02014     */
AHLIESTA DS    0H                                                  0943
*     GENERATE;                                                    0943
       DROP @11
       DROP @12
       USING *,@15
*     IF ESTACODE=12 THEN           /* CHECK FOR EXISTING RTCA Y02014*/
         C     ESTACODE,@CF00033                                   0944
         BNE   @RF00944                                            0944
*       DO;                         /* START OF NO RTCA PATH Y02014  */
*         SAVE14=RETRTM;            /* SAVE RETURN ADDR TO RTM Y02014*/
         LR    SAVE14,RETRTM                                       0946
*         GENERATE;                                                0947
      LM @11,@12,GTFIBASE
      USING @PSTART,@11
      USING @PSTART+4095,@12
      DROP @15
      LA @13,ESTAESAV
*         SAVECODE=ESTACODE;        /* SAVE ESTAE CODE Y02014        */
         ST    ESTACODE,SAVECODE                                   0948
*       END;                        /* END OF NO RTCA PATH Y02014    */
*     ELSE                                                         0950
*       DO;                         /* START OF RTCA PATH Y02014     */
         B     @RC00944                                            0950
@RF00944 DS    0H                                                  0951
*         GENERATE;                                                0951
      DROP @11
      DROP @12
      USING AHLIESTA,@15
      STM @14,@12,12(@13)
      LM @11,@12,GTFIBASE
      USING @PSTART,@11
      USING @PSTART+4095,@12
      DROP @15
      ST @13,ESTAESAV+4
      LA @14,ESTAESAV
      ST @14,8(,@13)
      LR @13,@14
*         SAVECODE=ESTACODE;        /* SAVE ESTA CODE Y02014         */
         ST    ESTACODE,SAVECODE                                   0952
*         SDWAPTR=PARMRG1;          /* ESTABLISH ADDR FOR SDWA Y02014*/
*                                                                  0953
         LR    SDWAPTR,PARMRG1                                     0953
*         /***********************************************************/
*         /*                                                         */
*         /* RETRY IF ACR BIT INDICATES                              */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0954
*         IF SDWAMCHK='1'B THEN     /* CHECK FOR MACHINE CHECK Y02014*/
         TM    SDWAMCHK(SDWAPTR),B'10000000'                       0954
         BNO   @RF00954                                            0954
*           DO;                     /* MACHINE CHK PATH Y02014       */
*             IF SDWAINSF='1'B THEN /* CHECK FOR INSTRUCTION ERROR 0956
*                                                              Y02014*/
         TM    SDWAINSF(SDWAPTR),B'00000100'                       0956
         BNO   @RF00956                                            0956
*               DO;                 /* INSTRUCTION ERROR PATH  Y02014*/
*                 IF SDWAREGU='0'B&SDWAPSWU='0'B THEN              0958
         TM    SDWAREGU(SDWAPTR),B'01100000'                       0958
         BNZ   @RF00958                                            0958
*                   DO;             /* START OF RETRY PATH     Y02014*/
*                     DO;           /* SETRP RETADDR(MCHKRETY)RECORD(
*                                      YES)WKAREA(SDWAPTR)RECPARM(SET
*                                      RPARM)RC(SDWARETY)FRESDWA(YES)*/
*                       RESPECIFY                                  0961
*                        (GPR00P,                                  0961
*                         GPR01P,                                  0961
*                         GPR14P,                                  0961
*                         GPR15P) RSTD;                            0961
*                       GPR01P=SDWAPTR;                            0962
         LR    GPR01P,SDWAPTR                                      0962
*                       GPR01P->SDWARCDE=SDWARETY;/* STORE RC INTO 0963
*                                      SDWA                          */
         MVI   SDWARCDE(GPR01P),X'04'                              0963
*                       GPR01P->SDWARTYA=ADDR(MCHKRETY);/* SAVE RETRY
*                                      ADDRESS                       */
         L     @10,SDWANXT1(,SDWAPTR)                              0964
         ST    @10,SDWARTYA(,GPR01P)                               0964
*                       GPR01P->SDWAFREE='1'B;/* SET FLAG TO FREE  0965
*                                      SDWA                          */
*                       GPR01P->SDWARCRD='1'B;/* TURN ON RECORD    0966
*                                      INDICATOR                     */
         OI    SDWAFREE(GPR01P),B'10000100'                        0966
*                       GPR15P=ADDR(SETRPARM);/* ACCESS RECORD     0967
*                                      PARAMETER LIST                */
         LA    GPR15P,SETRPARM                                     0967
*                       GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY
*                                      RECORD PARAMETERS             */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0968
*                       RESPECIFY                                  0969
*                        (GPR00P,                                  0969
*                         GPR01P,                                  0969
*                         GPR14P,                                  0969
*                         GPR15P) UNRSTD;                          0969
*                     END;                                         0970
*                     RETURN;       /* RETURN TO RTM           Y02014*/
@EL00001 L     @13,4(,@13)                                         0971
@EF00001 DS    0H                                                  0971
@ER00001 LM    @14,@12,12(@13)                                     0971
         BR    @14                                                 0971
*                   END;            /* END OF RETRY PATH       Y02014*/
*               END;                /* END OF INSTRUCTION ERROR PATH */
@RF00958 DS    0H                                                  0974
*           END;                    /* END OF MACHINE CHK PATH Y02014*/
@RF00956 DS    0H                                                  0975
*         DO;                       /* SETRP RETADDR(TERM05)RECORD(YE
*                                      S)WKAREA(SDWAPTR)RECPARM(SETRP
*                                      ARM)RC(SDWARETY)FRESDWA(YES)  */
@RF00954 DS    0H                                                  0976
*           RESPECIFY                                              0976
*            (GPR00P,                                              0976
*             GPR01P,                                              0976
*             GPR14P,                                              0976
*             GPR15P) RSTD;                                        0976
*           GPR01P=SDWAPTR;                                        0977
         LR    GPR01P,SDWAPTR                                      0977
*           GPR01P->SDWARCDE=SDWARETY;/* STORE RC INTO SDWA          */
         MVI   SDWARCDE(GPR01P),X'04'                              0978
*           GPR01P->SDWARTYA=ADDR(TERM05);/* SAVE RETRY ADDRESS      */
         LA    @10,TERM05                                          0979
         ST    @10,SDWARTYA(,GPR01P)                               0979
*           GPR01P->SDWAFREE='1'B;  /* SET FLAG TO FREE SDWA         */
*           GPR01P->SDWARCRD='1'B;  /* TURN ON RECORD INDICATOR      */
         OI    SDWAFREE(GPR01P),B'10000100'                        0981
*           GPR15P=ADDR(SETRPARM);  /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,SETRPARM                                     0982
*           GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD    0983
*                                      PARAMETERS                    */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0983
*           RESPECIFY                                              0984
*            (GPR00P,                                              0984
*             GPR01P,                                              0984
*             GPR14P,                                              0984
*             GPR15P) UNRSTD;                                      0984
*         END;                                                     0985
*         GENERATE(ESTAE 0);                                       0986
         ESTAE 0
*         RETURN;                   /* RETURN TO RTM Y02014          */
         B     @EL00001                                            0987
*       END;                        /* END OF RTCA EXISTS PATH Y02014*/
*                                                                  0989
*     /***************************************************************/
*     /*                                                             */
*     /* THE FOLLOWING IS A BRANCH TABLE SEARCH USING AUDITWRD TO    */
*     /* COMPARE WITH EACH ARGUEMENT UNTIL ONE BIT IS FOUND ON.      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0989
*     RFY                                                          0989
*       GTFPCT BASED(PCTPTR);                                      0989
@RC00944 DS    0H                                                  0990
*TERM05:                                                           0990
*     GENERATE;                                                    0990
TERM05   DS    0H                                                  0990
*                                 /* ESTABLISH ADDR  @YM03651*/
  DROP @11                                           @YM03651
  DROP @12                                           @YM03651
  BALR @15,0                                         @YM03651
  USING *,@15                                        @YM03651
  LM @11,@12,GTFIBASE                                @YM03651
  USING @PSTART,@11                                  @YM03651
  USING @PSTART+4095,@12                             @YM03651
  DROP @15                                           @YM03651
  LA @13,@SA00001                                    @YM03651
*     PCTPTR=ESTAEPCT;              /* GET POINTER TO GTFPCT   Y02014*/
         L     PCTPTR,ESTAEPCT                                     0991
*     BEGMCHD=ADDR(MCHEAD);         /* ADDR OF MCHEAD FOR SDUMP    0992
*                                                              Y02014*/
         L     @10,CVTPTR                                          0992
         L     @10,CVTGTF(,@10)                                    0992
         ST    @10,BEGMCHD                                         0992
*     ENDMCHD=ADDR(MCHEAD)+LENGTH(MCHEAD);/* ENDING ADDR OF MCHEAD 0993
*                                                              Y02014*/
         LA    @10,52(,@10)                                        0993
         STCM  @10,7,ENDMCHD                                       0993
*     GENERATE;                                                    0994
   SDUMP HDR='AHL007I GTF TERMINATING ON ERROR CONDITION',             *
               SDATA=(SQA,RGN,LPA),LIST=SDUMPLST
*AHLITERM:                                                         0995
*     DO;                           /* WTOP MF(E,AHL016)             */
AHLITERM DS    0H                                                  0996
*       RFY                                                        0996
*         GPR01P RSTD;              /* RESTRICT REG 1                */
*       GPR01P=ADDR(AHL016);        /* ADDRESS CONTROL PROGRAM LIST  */
         L     GPR01P,@CA02184                                     0997
*       SVC(35);                    /* ISSUE WTO SVC                 */
         SVC   35                                                  0998
*       RFY                                                        0999
*         GPR01P UNRSTD;            /* RELEASE REG 1                 */
*     END;                          /* WTOP MF(E,AHL016) WRITE OUT 1000
*                                      ERR MAG Y02014                */
*     DO;                           /* SETEVENT NAME('GTF')MCQE(ESTAM
*                                      CQE->MCQE)ACTION(FREE)        */
*                                                                  1001
*       /*************************************************************/
*       /*                                                           */
*       /* THE FOLLOWING SECTION OF CODE IS GENERATED BY THE SETEVENT*/
*       /* MACRO. THIS CODE WILL BE EITHER AN INITIALIZED PARAMETER  */
*       /* LIST, OR IF IT IS THE RESULT OF STANDARD OR EXECUTE FORM  */
*       /* IT WILL FILL in the list, GENERATE ALL LINKAGES AND CALL  */
*       /* THE PROPER sERVICE, EITHER AHLSETEV OR AHLSETD            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1002
*       DCL                                                        1002
*         1 SEPL0105 STATIC LOCAL BDY(WORD),/* ACTUAL PLIST FOR    1002
*                                      STANDARD INVOCATION           */
*          2 SEFG0105 PTR(8),                                      1002
*          2 * PTR(8),                                             1002
*          2 SEEN0105 PTR(8),                                      1002
*          2 SECN0105 PTR(8),                                      1002
*          2 SENM0105 CHAR(8),                                     1002
*          2 SEEL0105 PTR(31),                                     1002
*          2 SECL0105 PTR(31),                                     1002
*          2 SEMC0105 PTR(31);                                     1002
*       AHLPPTR=ADDR(SEPL0105);     /* INIT PLIST PTR                */
         LA    AHLPPTR,SEPL0105                                    1003
*       SEPL=SEPL&&SEPL;            /* ZERO OUT PLIST                */
         XC    SEPL(24,AHLPPTR),SEPL(AHLPPTR)                      1004
*       SEMC=ADDR(ESTAMCQE->MCQE);  /* INIT MCQE PTR                 */
         L     @10,ESTAMCQE                                        1005
         ST    @10,SEMC(,AHLPPTR)                                  1005
*       SENM='GTF';                 /* MOVE IN NAME                  */
         MVI   SENM+3(AHLPPTR),C' '                                1006
         MVC   SENM+4(4,AHLPPTR),SENM+3(AHLPPTR)                   1006
         MVC   SENM(3,AHLPPTR),@CC01940                            1006
*       SEFG=16;                    /* MOVE IN FLAGS                 */
         MVI   SEFG(AHLPPTR),X'10'                                 1007
*       CALL AHLSETEV;              /* CALL SERVICE                  */
         L     @10,CVTPTR                                          1008
         L     @10,CVTGTF(,@10)                                    1008
         L     @15,MCHSETE(,@10)                                   1008
         BALR  @14,@15                                             1008
*     END;                          /* ISSUE SETEVENT Y02014         */
*     DO I=1 TO DIM(BRTAB) BY 1;    /* BRANCH TABLE SEARCH LOOP    1010
*                                      Y02014                        */
         LA    I,1                                                 1010
@DL01010 DS    0H                                                  1011
*       IF ARG(I)=(ARG(I)&AUDBYT1) THEN/* IF AUDIT WRD SHOWS   Y02014*/
         LR    @10,I                                               1011
         SLA   @10,2                                               1011
         LA    @09,ARG-4(@10)                                      1011
         MVC   @TS00001(1),0(@09)                                  1011
         NC    @TS00001(1),AUDBYT1                                 1011
         LA    @09,ARG-4(@10)                                      1011
         CLC   0(1,@09),@TS00001                                   1011
         BNE   @RF01011                                            1011
*         GO TO TERMADR(I);         /* GO TO BRANCH TABLE ADDR Y02014*/
         L     @10,TERMADR-5(@10)                                  1012
         LA    @10,0(,@10)                                         1012
         BR    @10                                                 1012
*     END;                          /* END OF BR TAB SEARCH LOOP   1013
*                                                              Y02014*/
@RF01011 AL    I,@CF00062                                          1013
         C     I,@CF00060                                          1013
         BNH   @DL01010                                            1013
*     GO TO TERM70;                 /* AUDITWRD DESTROYED?     Y02014*/
         B     TERM70                                              1014
*TERM10:                            /* AHLWRITER ATTACHED,ETC. Y02014*/
*     DO;                           /* POST (TRMWRIT)                */
TERM10   DS    0H                                                  1016
*       RESPECIFY                                                  1016
*        (GPR00F,                                                  1016
*         GPR01P) RESTRICTED;                                      1016
*       GPR00F=0;                   /* POST CODE IN R0               */
         SLR   GPR00F,GPR00F                                       1017
*       GPR01P=ADDR(TRMWRIT);       /* ECB ADDRESS                   */
         LA    GPR01P,TRMWRIT(,PCTPTR)                             1018
*       SVC(2);                     /* ISSUE POST SVC                */
         SVC   2                                                   1019
*       RESPECIFY                                                  1020
*        (GPR00F,                                                  1020
*         GPR01P) UNRESTRICTED;                                    1020
*     END;                          /* POST (TRMWRIT) POST WRITERS 1021
*                                      TERM ECB Y02014               */
*     DO;                           /* WAIT ECB(ATTCHECB)            */
*       RESPECIFY                                                  1023
*        (GPR00P,                                                  1023
*         GPR01P) RESTRICTED;                                      1023
*       GPR00P=1;                   /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                            1024
*       GPR01P=ADDR(ATTCHECB);      /* ADDRESS OF ECB                */
         LA    GPR01P,ATTCHECB(,PCTPTR)                            1025
*       SVC(1);                     /* WAIT SVC                      */
         SVC   1                                                   1026
*       RESPECIFY                                                  1027
*        (GPR00P,                                                  1027
*         GPR01P) UNRESTRICTED;                                    1027
*     END;                          /* WAIT ECB(ATTCHECB) WAIT ON  1028
*                                      WRITERS ATTCH ECB Y02014      */
*     DO;                           /* DETACH (WRTRTCBA)             */
*       RESPECIFY                                                  1030
*        (GPR01P) RESTRICTED;                                      1030
*       GPR01P=ADDR(WRTRTCBA);      /* TCB ADDRESS                   */
         LA    GPR01P,WRTRTCBA(,PCTPTR)                            1031
*       SVC(62);                    /* DETACH SVC                    */
         SVC   62                                                  1032
*       RESPECIFY                                                  1033
*        (GPR01P) UNRESTRICTED;                                    1033
*     END;                          /* DETACH (WRTRTCBA) DETACH    1034
*                                      WRITER Y02014                 */
*TERM20:                                                           1035
*     DO;                           /* POST (TRMWTASK)               */
TERM20   DS    0H                                                  1036
*       RESPECIFY                                                  1036
*        (GPR00F,                                                  1036
*         GPR01P) RESTRICTED;                                      1036
*       GPR00F=0;                   /* POST CODE IN R0               */
         SLR   GPR00F,GPR00F                                       1037
*       GPR01P=ADDR(TRMWTASK);      /* ECB ADDRESS                   */
         LA    GPR01P,TRMWTASK(,PCTPTR)                            1038
*       SVC(2);                     /* ISSUE POST SVC                */
         SVC   2                                                   1039
*       RESPECIFY                                                  1040
*        (GPR00F,                                                  1040
*         GPR01P) UNRESTRICTED;                                    1040
*     END;                          /* POST (TRMWTASK) POST AHLWTASKS
*                                      TERM ECB Y02014               */
*     DO;                           /* WAIT ECB(WTSKATTH)            */
*       RESPECIFY                                                  1043
*        (GPR00P,                                                  1043
*         GPR01P) RESTRICTED;                                      1043
*       GPR00P=1;                   /* LOAD WAIT COUNT               */
         LA    GPR00P,1                                            1044
*       GPR01P=ADDR(WTSKATTH);      /* ADDRESS OF ECB                */
         LA    GPR01P,WTSKATTH(,PCTPTR)                            1045
*       SVC(1);                     /* WAIT SVC                      */
         SVC   1                                                   1046
*       RESPECIFY                                                  1047
*        (GPR00P,                                                  1047
*         GPR01P) UNRESTRICTED;                                    1047
*     END;                          /* WAIT ECB(WTSKATTH) WAIT FOR 1048
*                                      WTASK TO TERMNAT Y02014       */
*     DO;                           /* DETACH (WTSKTCBA)             */
*       RESPECIFY                                                  1050
*        (GPR01P) RESTRICTED;                                      1050
*       GPR01P=ADDR(WTSKTCBA);      /* TCB ADDRESS                   */
         LA    GPR01P,WTSKTCBA(,PCTPTR)                            1051
*       SVC(62);                    /* DETACH SVC                    */
         SVC   62                                                  1052
*       RESPECIFY                                                  1053
*        (GPR01P) UNRESTRICTED;                                    1053
*     END;                          /* DETACH (WTSKTCBA) DETACH    1054
*                                      AHLWTASK Y02014               */
*TERM30:                                                           1055
*     DO;                           /* PGFREE(L) LA(FIXTAB)          */
TERM30   DS    0H                                                  1056
*       RESPECIFY                                                  1056
*        (GPR00P,                                                  1056
*         GPR01P) RESTRICTED;                                      1056
*       GPR00P=0;                   /* INDICATE NO PAGE ECB          */
         SLR   GPR00P,GPR00P                                       1057
*       GPR01P=ADDR(FIXTAB);        /* LIST ADDR                     */
         L     GPR01P,FIXPTR(,PCTPTR)                              1058
*       GPR01P=GPR01P×'80000000'X;  /* L FORM                        */
         O     GPR01P,@CF02114                                     1059
*       GPR01P->I001C=(GPR01P->I001C&'80'X)×'00100000'B;/* L, PGFREE
*                                      & RELEASE FLAG                */
         MVC   @TS00001(1),I001C(GPR01P)                           1060
         NI    @TS00001,X'80'                                      1060
         OI    @TS00001,B'00100000'                                1060
         MVC   I001C(1,GPR01P),@TS00001                            1060
*       RESPECIFY                                                  1061
*         I001C BASED(GPR01P+4);    /* PTR TO PARMLIST BYTE4         */
*       I001C=(I001C&'C0'X)×'00000000'B;/* RSAOPT FLAG               */
         LA    @10,4                                               1062
         ALR   @10,GPR01P                                          1062
         MVC   @TS00001(1),I001C(@10)                              1062
         NI    @TS00001,X'C0'                                      1062
         OI    @TS00001,B'00000000'                                1062
         MVC   I001C(1,@10),@TS00001                               1062
*       SVC(113);                   /* ISSUE PGFREE SVC              */
         SVC   113                                                 1063
*       RESPECIFY                                                  1064
*        (GPR00P,                                                  1064
*         GPR01P) UNRESTRICTED;                                    1064
*     END;                          /* PGFREE(L) LA(FIXTAB) FREE ALL
*                                      FIXED MODULES Y02014          */
*     RESPECIFY                                                    1066
*      (FIXTAB) BASED(FIXREG);                                     1066
*TERM40:                                                           1067
*     FREEADDR=FIXPTR;              /* ADDR OF FIXTAB FOR FREEMN   1067
*                                                              Y02014*/
TERM40   L     @10,FIXPTR(,PCTPTR)                                 1067
         ST    @10,FREEADDR                                        1067
*     FREELEN=FIXLEN;               /* LEN OF FIXTAB FOR FREEMN    1068
*                                                              Y02014*/
         L     @10,FIXLEN(,PCTPTR)                                 1068
         ST    @10,FREELEN                                         1068
*     DO;                           /* FREEMAIN (V) A(PLSFREE)     1069
*                                      SP(SQA)                       */
*       RESPECIFY                                                  1070
*        (GPR01P) RESTRICTED;                                      1070
*       I005=I005&&I005;            /* INIT LIST                     */
         XC    I005(10),I005                                       1071
*       I00505='C0'X;               /* SET TYPE                      */
         MVI   I00505,X'C0'                                        1072
*       I00504=ADDR(PLSFREE);       /* ADDR OF ADDR LIST             */
         LA    @10,PLSFREE                                         1073
         STCM  @10,7,I00504                                        1073
*       I00506=SQA;                 /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                        1074
*       GPR01P=ADDR(I005);          /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         1075
*       SVC(5);                     /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   1076
*       RESPECIFY                                                  1077
*        (GPR01P) UNRESTRICTED;                                    1077
*     END;                          /* FREEMAIN (V) A(PLSFREE)     1078
*                                      SP(SQA) FREE FIX Y02014       */
*TERM50:                                                           1079
*     IF GTFSIOFT^=0 THEN           /* SIO FILTER TABLE EXISTS Y02014*/
TERM50   L     @10,GTFSIOFT(,PCTPTR)                               1079
         LTR   @10,@10                                             1079
         BZ    @RF01079                                            1079
*       DO;                         /* FREE SIO FILTER TABLES  Y02014*/
*         FREEADDR=GTFSIOFT;        /* GET ADDR OF SIO FILTER  Y02014*/
         ST    @10,FREEADDR                                        1081
*         FREELEN=LENSIO;           /* GET LENGTH OF SIO FILTER    1082
*                                                              Y02014*/
         LH    @10,LENSIO(,@10)                                    1082
         ST    @10,FREELEN                                         1082
*         DO;                       /* FREEMAIN (V) A(PLSFREE)     1083
*                                      SP(SQA)                       */
*           RESPECIFY                                              1084
*            (GPR01P) RESTRICTED;                                  1084
*           I005=I005&&I005;        /* INIT LIST                     */
         XC    I005(10),I005                                       1085
*           I00505='C0'X;           /* SET TYPE                      */
         MVI   I00505,X'C0'                                        1086
*           I00504=ADDR(PLSFREE);   /* ADDR OF ADDR LIST             */
         LA    @10,PLSFREE                                         1087
         STCM  @10,7,I00504                                        1087
*           I00506=SQA;             /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                        1088
*           GPR01P=ADDR(I005);      /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         1089
*           SVC(5);                 /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   1090
*           RESPECIFY                                              1091
*            (GPR01P) UNRESTRICTED;                                1091
*         END;                      /* FREEMAIN (V) A(PLSFREE)     1092
*                                      SP(SQA) FREE SIO TABLE Y02014 */
*       END;                        /* END OF FREE SIO TABLE   Y02014*/
*     IF GTFSIOFT^=GTFIOFT THEN     /* CHECK IDENTICAL SIO,IO TABLES
*                                                              Y02014*/
@RF01079 L     @10,GTFIOFT(,PCTPTR)                                1094
         C     @10,GTFSIOFT(,PCTPTR)                               1094
         BE    @RF01094                                            1094
*       DO;                         /* IO,SIO TABLES NOT SAME PATH 1095
*                                                              Y02014*/
*         IF GTFIOFT^=0 THEN        /* IO FILTER TABLE EXISTS? Y02014*/
         LTR   @10,@10                                             1096
         BZ    @RF01096                                            1096
*           DO;                     /* IO FIL TAB EXISTS PATH  Y02014*/
*             FREEADDR=GTFIOFT;     /* GET ADDR OF FIL TABLE   Y02014*/
         ST    @10,FREEADDR                                        1098
*             FREELEN=LENIO;        /* GET LENGTH OF FIL TABLE Y02014*/
         LH    @10,LENIO(,@10)                                     1099
         ST    @10,FREELEN                                         1099
*             DO;                   /* FREEMAIN (V) A(PLSFREE)     1100
*                                      SP(SQA)                       */
*               RESPECIFY                                          1101
*                (GPR01P) RESTRICTED;                              1101
*               I005=I005&&I005;    /* INIT LIST                     */
         XC    I005(10),I005                                       1102
*               I00505='C0'X;       /* SET TYPE                      */
         MVI   I00505,X'C0'                                        1103
*               I00504=ADDR(PLSFREE);/* ADDR OF ADDR LIST            */
         LA    @10,PLSFREE                                         1104
         STCM  @10,7,I00504                                        1104
*               I00506=SQA;         /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                        1105
*               GPR01P=ADDR(I005);  /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         1106
*               SVC(5);             /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   1107
*               RESPECIFY                                          1108
*                (GPR01P) UNRESTRICTED;                            1108
*             END;                  /* FREEMAIN (V) A(PLSFREE)     1109
*                                      SP(SQA) Y02014                */
*           END;                    /* END OF FREE IO FT PATH  Y02014*/
*       END;                        /* END OF IO,SIO TABLES NOT SAME
*                                      PATH                    Y02014*/
@RF01096 DS    0H                                                  1112
*     IF GTFSVCFT^=0 THEN           /* SVC FILTER EXISTS?      Y02014*/
@RF01094 L     @10,GTFSVCFT(,PCTPTR)                               1112
         LTR   @10,@10                                             1112
         BZ    @RF01112                                            1112
*       DO;                         /* SVC FIL TAB EXISTS PATH Y02014*/
*         FREEADDR=GTFSVCFT;        /* GET ADDR OF FIL TABLE   Y02014*/
         ST    @10,FREEADDR                                        1114
*         FREELEN=LENSVC;           /* GET LENGTH OF FIL TAB   Y02014*/
         LH    @10,LENSVC(,@10)                                    1115
         ST    @10,FREELEN                                         1115
*         DO;                       /* FREEMAIN (V) A(PLSFREE)     1116
*                                      SP(SQA)                       */
*           RESPECIFY                                              1117
*            (GPR01P) RESTRICTED;                                  1117
*           I005=I005&&I005;        /* INIT LIST                     */
         XC    I005(10),I005                                       1118
*           I00505='C0'X;           /* SET TYPE                      */
         MVI   I00505,X'C0'                                        1119
*           I00504=ADDR(PLSFREE);   /* ADDR OF ADDR LIST             */
         LA    @10,PLSFREE                                         1120
         STCM  @10,7,I00504                                        1120
*           I00506=SQA;             /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                        1121
*           GPR01P=ADDR(I005);      /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         1122
*           SVC(5);                 /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   1123
*           RESPECIFY                                              1124
*            (GPR01P) UNRESTRICTED;                                1124
*         END;                      /* FREEMAIN (V) A(PLSFREE)     1125
*                                      SP(SQA) Y02014                */
*       END;                        /* END OF FREE SVC FT PATH Y02014*/
*     IF GTFPIFT^=0 THEN            /* PI FILTER TABLE EXISTS? Y02014*/
@RF01112 L     @10,GTFPIFT(,PCTPTR)                                1127
         LTR   @10,@10                                             1127
         BZ    @RF01127                                            1127
*       DO;                         /* PI FIL TAB EXISTS       Y02014*/
*         FREEADDR=GTFPIFT;         /* GET ADDR OF FIL TABLE   Y02014*/
         ST    @10,FREEADDR                                        1129
*         FREELEN=LENPI;            /* GET LENGTH OF PI FT     Y02014*/
         LH    @10,LENPI(,@10)                                     1130
         ST    @10,FREELEN                                         1130
*         DO;                       /* FREEMAIN (V) A(PLSFREE)     1131
*                                      SP(SQA)                       */
*           RESPECIFY                                              1132
*            (GPR01P) RESTRICTED;                                  1132
*           I005=I005&&I005;        /* INIT LIST                     */
         XC    I005(10),I005                                       1133
*           I00505='C0'X;           /* SET TYPE                      */
         MVI   I00505,X'C0'                                        1134
*           I00504=ADDR(PLSFREE);   /* ADDR OF ADDR LIST             */
         LA    @10,PLSFREE                                         1135
         STCM  @10,7,I00504                                        1135
*           I00506=SQA;             /* SUBPOOL VALUE                 */
         MVI   I00506,X'F5'                                        1136
*           GPR01P=ADDR(I005);      /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         1137
*           SVC(5);                 /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   1138
*           RESPECIFY                                              1139
*            (GPR01P) UNRESTRICTED;                                1139
*         END;                      /* FREEMAIN (V) A(PLSFREE)     1140
*                                      SP(SQA) Y02014                */
*       END;                        /* END OF FREE PI FT PATH  Y02014*/
*TERM60:                                                           1142
*     DO;                           /* FREEMAIN(R) LV(LENGTH(GTFPCT))
*                                      SP(SQA)A(GTFPCT)              */
@RF01127 DS    0H                                                  1142
TERM60   DS    0H                                                  1143
*       RESPECIFY                                                  1143
*        (GPR01F,                                                  1143
*         GPR00F) RESTRICTED;                                      1143
*       GPR00F=LENGTH(GTFPCT);      /* LENGTH REQUESTED              */
         LA    GPR00F,316                                          1144
*       GPR01F=SQA;                 /* SP IN REG 1                   */
         LA    GPR01F,245                                          1145
*       GEN(SLL   GPR01F,24)                                       1146
*       NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;               1146
         SLL   GPR01F,24
*       GPR00F=GPR00F×GPR01F;       /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       1147
*       GPR01F=ADDR(GTFPCT);        /* SET REGISTER ONE              */
         LR    GPR01F,PCTPTR                                       1148
*       SVC(10);                    /* R-FORM OF GETMAIN             */
         SVC   10                                                  1149
*       RESPECIFY                                                  1150
*        (GPR01F,                                                  1150
*         GPR00F) UNRESTRICTED;                                    1150
*     END;                          /* FREEMAIN(R) LV(LENGTH(GTFPCT))
*                                      SP(SQA)A(GTFPCT) FREE GTFPCT
*                                      Y02014                        */
*TERM70:                                                           1152
*     DO;                           /* DEQ                         1152
*                                      (AHLQNAME,AHLRNAME,3,SYSTEM)  */
TERM70   DS    0H                                                  1153
*       I048(1:20)=I048(1:20)&&I048(1:20);                         1153
         XC    I048(20),I048                                       1153
*       RFY                                                        1154
*         GPR01F RESTRICTED;                                       1154
*       I04804(1)='11000000'B;      /* LISTEND BYTE                  */
         MVI   I04804,B'11000000'                                  1155
*       I04805(1)=3;                /* SET LENGTH                    */
         MVI   I04805,X'03'                                        1156
*       I04806(1)='01000000'B;      /* OPTIONS                       */
         MVI   I04806,B'01000000'                                  1157
*       I04807(1)=ADDR(AHLQNAME);   /* QNAME ADDRESS                 */
         LA    @10,AHLQNAME                                        1158
         ST    @10,I04807                                          1158
*       I04808(1)=ADDR(AHLRNAME);   /* RNAME ADDRESS                 */
         LA    @10,AHLRNAME                                        1159
         ST    @10,I04808                                          1159
*       GPR01F=ADDR(I04802);                                       1160
         LA    GPR01F,I04802                                       1160
*       SVC(48);                                                   1161
         SVC   48                                                  1161
*       RFY                                                        1162
*         GPR01F UNRESTRICTED;                                     1162
*     END;                          /* DEQ                         1163
*                                      (AHLQNAME,AHLRNAME,3,SYSTEM)
*                                      DEQUEUE Y02014                */
*     IF SAVECODE=12 THEN           /* ESTAE NO RTCA? Y02014         */
         CLC   SAVECODE(4),@CF00033                                1164
         BNE   @RF01164                                            1164
*       DO;                         /* START OF ESTAE NO RTCA PATH 1165
*                                                              Y02014*/
*         RETCODE=SYSCODE;          /* GET RETURN CODE FOR SYSTEM  1166
*                                                              Y02014*/
         LR    RETCODE,SYSCODE                                     1166
*         RETRTM=SAVE14;            /* GET RETURN ADDR Y02014        */
         LR    RETRTM,SAVE14                                       1167
*         GENERATE(BR @14);         /* RETURN TO RTM Y02014          */
         BR @14
*       END;                        /* END OF ESTAE NO RTCA PATH   1169
*                                                              Y02014*/
*     ELSE                                                         1170
*       DO;                         /* START OF ALL OTHERS    Y020114*/
         B     @RC01164                                            1170
@RF01164 DS    0H                                                  1171
*         RETURN CODE(SYSCODE);                                    1171
         LR    @15,SYSCODE                                         1171
         L     @13,4(,@13)                                         1171
         L     @14,12(,@13)                                        1171
         LM    @00,@12,20(@13)                                     1171
         BR    @14                                                 1171
*       END;                        /* END OF ALL OTHERS Y02014      */
*   END;                            /* END OF ESTAE RTN Y02014       */
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     1174
*     GPR01F FIXED(31) REG(1),                                     1174
*     GPR15F FIXED(31) REG(15),                                    1174
*     GPR00P PTR(31) REG(0),                                       1174
*     GPR01P PTR(31) REG(1),                                       1174
*     GPR14P PTR(31) REG(14),                                      1174
*     GPR15P PTR(31) REG(15);                                      1174
*   DCL                                                            1175
*     1 I004 DEF(ILIST) BDY(WORD),  /* LIST FOR GETMAIN              */
*      2 I00401 PTR(31),            /* LENGTH                        */
*      2 I00402 CHAR(1),            /* HIARCHY                       */
*      2 I00403 PTR(24),            /* ADDR OF ADDR LIST             */
*      2 I00404 CHAR(1),            /* TYPE OF REQUEST               */
*      2 I00405 PTR(8);             /* SUBPOOL VALUE                 */
*   DCL                                                            1176
*     1 I005 DEF(ILIST) BDY(WORD),  /* LIST FOR FREEMAIN             */
*       3 I00501 PTR(8),            /* RESERVED                      */
*       3 I00502 PTR(24),           /* LENGTH                        */
*       3 I00503 PTR(8),            /* RESERVED                      */
*       3 I00504 PTR(24),           /* ADDR OF ADDR LIST             */
*       3 I00505 BIT(8),            /* TYPE OF FREEMAIN              */
*       3 I00506 PTR(8);            /* SUBPOOL VALUE                 */
*   DCL                                                            1177
*     1 I056 DEF(ILIST) BDY(WORD) CHAR(32767),/* LIST FOR ENQ        */
*       3 I05600 PTR(31),           /* TCB ADDR IF BOTH TCB AND ECB  */
*       3 I05601 PTR(31),           /* TCB OR ECB ADDRESS            */
*       3 I05602(*) CHAR(12) BDY(WORD),/* ARRAY OF RESOURCE ELEMENTS */
*         5 I05603 BIT(8),          /* BIT FLAGS 1                   */
*         5 I05604 PTR(8),          /* MINOR RESOURCE NAME LENGTH    */
*         5 I05605 BIT(8),          /* BIT FLAGS 2                   */
*         5 I05655 CHAR(1),         /* CONTROL PGM USE               */
*         5 I05606 PTR(31),         /* MAJOR RESOURCE NAME ADDR      */
*         5 I05607 PTR(31);         /* MINOR RESOURCE NAME ADDR      */
*   DCL                                                            1178
*     1 I048 DEF(ILIST) CHAR(32767) BDY(WORD),                     1178
*       3 I04801 PTR(31),           /* TCB ADDR                      */
*       3 I04802(*) CHAR(12) BDY(WORD),                            1178
*         5 I04803 PTR(31),         /* UCB @ IN LAST ENTRY           */
*           7 I04804 BIT(8),        /* FLAGS                         */
*           7 I04805 PTR(8),        /* MINOR RESOURCE NAME LENGTH    */
*           7 I04806 BIT(8),        /* FLAGS                         */
*           7 * CHAR(1),            /* CONTROL PROGRAM USE           */
*         5 I04807 PTR(31),         /* MAJOR RESOURCE NAME @         */
*         5 I04808 PTR(31);         /* MINOR RESOURCE NAME @         */
*   DCL                                                            1179
*     1 I042 DEF(ILIST),            /* ATTACH LIST                   */
*      2 I04201 PTR(8),             /* DE-FLAG                       */
*      2 I04202 PTR(24),            /* EP/DE ADDRESS                 */
*      2 I04203 PTR(8),             /* RESERVED                      */
*      2 I04204 PTR(24),            /* DCB ADDRESS                   */
*      2 I04205 PTR(8),             /* STATUS BYTE                   */
*      2 I04206 PTR(24),            /* ECB ADDRESS                   */
*      2 I04207 PTR(8),             /* STATUS BYTE                   */
*      2 I04208 PTR(24),            /* SUBPOOL LIST OR NUMBER        */
*      2 I04209 PTR(8),             /* STATUS BYTE                   */
*      2 I04210 PTR(24),            /* SUBPOOL LIST OR NUMBER        */
*      2 I04211 PTR(8),             /* RESERVED                      */
*      2 I04212 PTR(24),            /* END-OF-TASK EXIT ADDRESS      */
*      2 I04213 FIXED(15),          /* PRIORITY ADJUSTMENT VALUE     */
*      2 I04214 PTR(8),             /* PRIORITY ADJUSTMENT VALUE     */
*      2 I04215 PTR(8),             /* STATUS BYTE                   */
*      2 I04216 CHAR(8),            /* ENTRY POINT NAME              */
*      2 I04217 PTR(31),            /* JSCB ADDRESS                  */
*      2 I04218 PTR(8),             /* TASK ID                       */
*      2 I04219 PTR(24),            /* STAI/ESTAI PARM-LIST ADDR     */
*      2 I04220 PTR(8),             /* STATUS BYTE                   */
*      2 I04221 PTR(24),            /* STAI/ESTAI EXIT ADDRESS       */
*      2 I04222 PTR(8),             /* RESERVED                      */
*      2 I04223 PTR(24),            /* TASKLIB DCB ADDRESS           */
*      2 I04224 PTR(8),             /* STATUS BYTE                   */
*      2 I04225 PTR(8),             /* RESERVED                      */
*      2 I04226 FIXED(15),          /* LENGTH OF THIS LIST           */
*      2 I04227 PTR(31);            /* SUBPOOL LIST OR NUMBER        */
*   DECLARE                                                        1180
*     ILIST CHAR(60) BDY(DWORD);    /* STANDARD LIST                 */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       1181
*     I031F FIXED(31) BASED,                                       1181
*     I031P PTR(31) BASED,                                         1181
*     I015F FIXED(15) BASED,                                       1181
*     I015P PTR(15) BASED,                                         1181
*     I008P PTR(8) BASED,                                          1181
*     I001C CHAR(1) BASED;                                         1181
*   END AHLGTFI                                                    1182
*                                                                  1182
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (MCHEAD  )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (MCQE    )                                       */
*/*%INCLUDE SYSLIB  (GTFPCT  )                                       */
*/*%INCLUDE SYSLIB  (INITDATA)                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IMDMEDIT)                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (GTFIERR )                                       */
*/*%INCLUDE SYSUT5  (TABLERTN)                                       */
*/*%INCLUDE SYSUT5  (GTFHEX  )                                       */
*/*%INCLUDE SYSUT5  (GTFHEX  )                                       */
*/*%INCLUDE SYSUT5  (GTFHEX  )                                       */
*/*%INCLUDE SYSUT5  (GTFHEX  )                                       */
*/*%INCLUDE SYSUT5  (MCQEINIT)                                       */
*/*%INCLUDE SYSUT5  (FGBRFIX )                                       */
*                                                                  1182
*       ;                                                          1182
         B     @EL00001                                            1182
@DATA    DS    0H
@CH02429 DC    H'60'
@CH01832 DC    XL2'2100'
@CH01854 DC    XL2'5101'
@SX02443 XC    GTFPCT(0,@14),GTFPCT(@14)
@SX02445 XC    INITDATA(0,@14),INITDATA(@14)
@SM02448 MVC   FIXTAB(0,@14),RANGES(@09)
         DS    0F
@SA00001 DS    18F
@TF00001 DS    F
         DS    0F
@CF00062 DC    F'1'
@CF00054 DC    F'4'
@CF00700 DC    F'6'
@CH00700 EQU   @CF00700+2
@CF00060 DC    F'8'
@CF00033 DC    F'12'
@CH00033 EQU   @CF00033+2
@CF02121 DC    F'20'
@CF00681 DC    F'256'
@CF02435 DC    F'316'
@CF02436 DC    F'368'
@CF02437 DC    F'408'
@CF02450 DC    F'-8'
@CF02451 DC    F'-4'
@CF02114 DC    XL4'80000000'
@CF02298 DC    XL4'00FFFFFF'
@CF02447 DC    XL4'0000FFFF'
@CA01948 DC    A(AHL128)
@CA01950 DC    A(AHL129)
@CA01953 DC    A(AHL071)
@CV02000 DC    V(AHLSCAN)
@CA02029 DC    A(AHL019)
@CA02180 DC    A(AHL006)
@CA02181 DC    A(AHL005)
@CA02182 DC    A(AHL013)
@CA02183 DC    A(AHL015)
@CA02184 DC    A(AHL016)
@CA02185 DC    A(AHL039)
@CA02186 DC    A(AHL070)
@CA02187 DC    A(AHL130)
         DS    0D
SRBPTR   DS    A
CSCL     DS    A
J        DC    A(0)
LMLENGTH DC    F'8'
NUMSYSM  DC    F'20'
NUMSYS   DC    F'26'
EIDCNT   DC    F'0'
SAVECODE DC    F'0'
PARMPTR  DS    A
SYSMDISP DS    A
TMONPTR  DS    A
FORKMIN1 DC    XL2'0FFF'
@TS00001 DS    CL8
@CC02288 DC    C'GTFPCT  '
@CC02289 DC    C'IEFRDER '
@CC02292 DC    C'INITDATA'
@CC02299 DC    C'AHLSETD '
@CC02340 DC    C'AHLWTASK'
@CC02348 DC    C'AHLIWRIT'
@CC02349 DC    C'AHLCWRIT'
@CC02350 DC    C'AHLWWRIT'
@CC01940 EQU   @CC02288
         DS    CL2
AHLQNAME DC    CL8'VS2TRACE'
AHLRNAME DC    CL3'GTF'
         DS    CL1
ESTAELST DS    CL16
         ORG   ESTAELST
ESTAEPRM DS    FL4
ESTAEPCT DS    FL4
ESTAMCQE DS    AL4
ESTAEEID DS    FL4
         ORG   ESTAELST+16
DEVLIST  DS    CL8
         ORG   DEVLIST
UCBWRD1  DS    FL4
         ORG   UCBWRD1
UCBDEVB1 DS    FL2
UCBDEVB3 DS    FL1
@NM00100 DS    FL1
         ORG   DEVLIST+4
@NM00101 DS    FL4
         ORG   DEVLIST+8
AUDITWRD DS    CL4
         ORG   AUDITWRD
AUDBYT1  DC    B'00000000'
         ORG   AUDBYT1
AUDITWTR DS    BL1
AUDITWTK EQU   AUDBYT1+0
AUDITFXF EQU   AUDBYT1+0
AUDITFXG EQU   AUDBYT1+0
AUDITSCN EQU   AUDBYT1+0
AUDITPCT EQU   AUDBYT1+0
AUDITENQ EQU   AUDBYT1+0
AUDITRES EQU   AUDBYT1+0
         ORG   AUDITWRD+1
AUDBYTS  DC    B'00000000'
         DC    XL2'0'
         ORG   AUDITWRD+4
PLSFREE  DS    CL8
         ORG   PLSFREE
FREEADDR DS    AL4
FREELEN  DS    AL4
         ORG   PLSFREE+8
WAITWTSK DS    CL8
         ORG   WAITWTSK
ECBLSTA1 DS    AL4
@NM00102 DS    AL4
         ORG   @NM00102
ECBLSTAB DS    BL1
@NM00103 EQU   @NM00102+0
ECBLSTA2 DS    AL3
         ORG   WAITWTSK+8
WAITWRTR DS    CL8
         ORG   WAITWRTR
ECBLSTB1 DS    AL4
@NM00104 DS    AL4
         ORG   @NM00104
ECBLSTBB DS    BL1
@NM00105 EQU   @NM00104+0
ECBLSTB2 DS    AL3
         ORG   WAITWRTR+8
ROUND4K  DC    X'FFFFF000'
FIXECB   DS    CL4
         ORG   FIXECB
@NM00106 DS    CL3
FIXRC    DS    BL1
         ORG   FIXECB+4
TEMPELEM DS    CL8
RC       DS    CL3
         ORG   RC
BINRYRC  DS    CL2
         ORG   RC+3
DEFTABLE DS    CL256
         ORG   DEFTABLE
@NM00108 DS    CL240
TRTABLE  DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         ORG   DEFTABLE+256
TEMPRC   DS    CL3
DMPMD    DC    CL8'AHLDMPMD'
WTOMD    DC    CL8'AHLWTOMD'
TEMP     DC    CL8'0'
TMON     DC    CL8'AHLTMON'
TUSR     DC    CL8'AHLTUSR'
CLASSLST DS    CL6
         ORG   CLASSLST
CLASSEID DC    XL2'E000'
CLASSADR DS    AL4
         ORG   CLASSLST+6
SDUMPLST DS    CL8
         ORG   SDUMPLST
BEGMCHD  DS    AL4
@NM00110 DC    X'80'
         ORG   @NM00110
ENDFLAG  DS    BL1
         ORG   SDUMPLST+5
ENDMCHD  DS    AL3
         ORG   SDUMPLST+8
ABRC     DS    CL5
         ORG   ABRC
ABEND    DS    CL4
         ORG   ABRC+5
TEMPABND DS    CL5
         DS    CL2
GTFIBASE DS    CL8
         ORG   GTFIBASE
R11BASE  DC    AL4(@PSTART)
R12BASE  DC    AL4(@PSTART+4095)
         ORG   GTFIBASE+8
WTRECBS  DS    CL8
         ORG   WTRECBS
WTRINIT  DC    AL4(GTFCMECB)
WTRATCH  DC    AL4(ATTCHECB)
         ORG   WTRECBS+8
SETRPARM DS    CL24
         ORG   SETRPARM
SETMOD   DC    CL8'AHLGTF'
SETCSECT DC    CL8'AHLGTFI'
SETFRRID DC    CL8'AHLIESTA'
         ORG   SETRPARM+24
SEPL0012 DS    CL24
         ORG   SEPL0012
SEFG0012 DS    AL1
@NM00120 DS    AL1
SEEN0012 DS    AL1
SECN0012 DS    AL1
SENM0012 DS    CL8
SEEL0012 DS    AL4
SECL0012 DS    AL4
SEMC0012 DS    AL4
         ORG   SEPL0012+24
SEPL0071 DS    CL24
         ORG   SEPL0071
SEFG0071 DS    AL1
@NM00121 DS    AL1
SEEN0071 DS    AL1
SECN0071 DS    AL1
SENM0071 DS    CL8
SEEL0071 DS    AL4
SECL0071 DS    AL4
SEMC0071 DS    AL4
         ORG   SEPL0071+24
SEPL0074 DS    CL24
         ORG   SEPL0074
SEFG0074 DS    AL1
@NM00122 DS    AL1
SEEN0074 DS    AL1
SECN0074 DS    AL1
SENM0074 DS    CL8
SEEL0074 DS    AL4
SECL0074 DS    AL4
SEMC0074 DS    AL4
         ORG   SEPL0074+24
SEPL0105 DS    CL24
         ORG   SEPL0105
SEFG0105 DS    AL1
@NM00123 DS    AL1
SEEN0105 DS    AL1
SECN0105 DS    AL1
SENM0105 DS    CL8
SEEL0105 DS    AL4
SECL0105 DS    AL4
SEMC0105 DS    AL4
         ORG   SEPL0105+24
ILIST    DS    CL60
DECRC    DS    CL2
         DS    CL2
ESTAESAV DS    CL72
FGBREPN  DS    4A
EPALIST  DS    CL16
         ORG   EPALIST+0
EPAEID   DC    XL2'F100'
@NM00109 DC    XL2'0000'
EPNAME   DC    CL8'AHLTDIR'
EPAOPT   DC    XL4'00000000'
         ORG   EPALIST+16
         ORG   EPALIST+16
         DC    XL2'F200'
         DC    XL2'0000'
         DC    CL8'AHLTDIR'
         DC    XL4'00000000'
         ORG   EPALIST+32
         ORG   EPALIST+32
         DC    XL2'1000'
         DC    XL2'0000'
         DC    CL8'AHLTSVC'
         DC    XL4'00800000'
         ORG   EPALIST+48
         ORG   EPALIST+48
         DC    XL2'1000'
         DC    XL2'0000'
         DC    CL8'AHLFSVC'
         DC    XL4'00400000'
         ORG   EPALIST+64
         ORG   EPALIST+64
         DC    XL2'5100'
         DC    XL2'0000'
         DC    CL8'AHLTSIO1'
         DC    XL4'00200000'
         ORG   EPALIST+80
         ORG   EPALIST+80
         DC    XL2'5100'
         DC    XL2'0000'
         DC    CL8'AHLFSIO'
         DC    XL4'00100000'
         ORG   EPALIST+96
         ORG   EPALIST+96
         DC    XL2'5101'
         DC    XL2'0000'
         DC    CL8'AHLTIO'
         DC    XL4'00020000'
         ORG   EPALIST+112
         ORG   EPALIST+112
         DC    XL2'5101'
         DC    XL2'0000'
         DC    CL8'AHLFIO'
         DC    XL4'00010000'
         ORG   EPALIST+128
         ORG   EPALIST+128
         DC    XL2'5200'
         DC    XL2'0000'
         DC    CL8'AHLTIO'
         DC    XL4'00020000'
         ORG   EPALIST+144
         ORG   EPALIST+144
         DC    XL2'5200'
         DC    XL2'0000'
         DC    CL8'AHLFIO'
         DC    XL4'00010000'
         ORG   EPALIST+160
         ORG   EPALIST+160
         DC    XL2'5201'
         DC    XL2'0000'
         DC    CL8'AHLTUIO'
         DC    XL4'00020000'
         ORG   EPALIST+176
         ORG   EPALIST+176
         DC    XL2'2100'
         DC    XL2'0000'
         DC    CL8'AHLTIO'
         DC    XL4'01000000'
         ORG   EPALIST+192
         ORG   EPALIST+192
         DC    XL2'6201'
         DC    XL2'0000'
         DC    CL8'AHLTEXT'
         DC    XL4'00008000'
         ORG   EPALIST+208
         ORG   EPALIST+208
         DC    XL2'4002'
         DC    XL2'0000'
         DC    CL8'AHLTSTAE'
         DC    XL4'00001000'
         ORG   EPALIST+224
         ORG   EPALIST+224
         DC    XL2'4003'
         DC    XL2'0000'
         DC    CL8'AHLTFRR'
         DC    XL4'00001000'
         ORG   EPALIST+240
         ORG   EPALIST+240
         DC    XL2'4001'
         DC    XL2'0000'
         DC    CL8'AHLTSRM'
         DC    XL4'00002000'
         ORG   EPALIST+256
         ORG   EPALIST+256
         DC    XL2'8100'
         DC    XL2'0000'
         DC    CL8'AHLTRNIO'
         DC    XL4'00004000'
         ORG   EPALIST+272
         ORG   EPALIST+272
         DC    XL2'8200'
         DC    XL2'0000'
         DC    CL8'AHLTRNIO'
         DC    XL4'00004000'
         ORG   EPALIST+288
         ORG   EPALIST+288
         DC    XL2'6200'
         DC    XL2'0000'
         DC    CL8'AHLTPI'
         DC    XL4'00080000'
         ORG   EPALIST+304
         ORG   EPALIST+304
         DC    XL2'6200'
         DC    XL2'0000'
         DC    CL8'AHLFPI'
         DC    XL4'00040000'
         ORG   EPALIST+320
         ORG   EPALIST+320
         DC    XL2'6101'
         DC    XL2'0000'
         DC    CL8'AHLTPI'
         DC    XL4'00080000'
         ORG   EPALIST+336
         ORG   EPALIST+336
         DC    XL2'6101'
         DC    XL2'0000'
         DC    CL8'AHLFPI'
         DC    XL4'00040000'
         ORG   EPALIST+352
         ORG   EPALIST+352
         DC    XL2'0001'
         DC    XL2'0000'
         DC    CL8'AHLTSRB'
         DC    XL4'04000000'
         ORG   EPALIST+368
         ORG   EPALIST+368
         DC    XL2'0002'
         DC    XL2'0000'
         DC    CL8'AHLTLSR'
         DC    XL4'04000000'
         ORG   EPALIST+384
         ORG   EPALIST+384
         DC    XL2'0003'
         DC    XL2'0000'
         DC    CL8'AHLTDSP'
         DC    XL4'04000000'
         ORG   EPALIST+400
         ORG   EPALIST+400
         DC    XL2'0004'
         DC    XL2'0000'
         DC    CL8'AHLTDSP'
         DC    XL4'04000000'
         ORG   EPALIST+416
         ORG   EPALIST+416
         DC    XL2'F100'
         DC    XL2'0000'
         DC    CL8'AHLTDIR'
         DC    XL4'00000000'
         ORG   EPALIST+432
         ORG   EPALIST+432
         DC    XL2'F200'
         DC    XL2'0000'
         DC    CL8'AHLTDIR'
         DC    XL4'00000000'
         ORG   EPALIST+448
         ORG   EPALIST+448
         DC    XL2'1000'
         DC    XL2'0000'
         DC    CL8'AHLSVC'
         DC    XL4'00800000'
         ORG   EPALIST+464
         ORG   EPALIST+464
         DC    XL2'5100'
         DC    XL2'0000'
         DC    CL8'AHLSIO'
         DC    XL4'00200000'
         ORG   EPALIST+480
         ORG   EPALIST+480
         DC    XL2'5101'
         DC    XL2'0000'
         DC    CL8'AHLIO'
         DC    XL4'00020000'
         ORG   EPALIST+496
         ORG   EPALIST+496
         DC    XL2'5200'
         DC    XL2'0000'
         DC    CL8'AHLIO'
         DC    XL4'00020000'
         ORG   EPALIST+512
         ORG   EPALIST+512
         DC    XL2'5201'
         DC    XL2'0000'
         DC    CL8'AHLUIO'
         DC    XL4'00020000'
         ORG   EPALIST+528
         ORG   EPALIST+528
         DC    XL2'2100'
         DC    XL2'0000'
         DC    CL8'AHLIO'
         DC    XL4'01000000'
         ORG   EPALIST+544
         ORG   EPALIST+544
         DC    XL2'6201'
         DC    XL2'0000'
         DC    CL8'AHLEXT'
         DC    XL4'00008000'
         ORG   EPALIST+560
         ORG   EPALIST+560
         DC    XL2'4002'
         DC    XL2'0000'
         DC    CL8'AHLSTAE'
         DC    XL4'00001000'
         ORG   EPALIST+576
         ORG   EPALIST+576
         DC    XL2'4003'
         DC    XL2'0000'
         DC    CL8'AHLFRR'
         DC    XL4'00001000'
         ORG   EPALIST+592
         ORG   EPALIST+592
         DC    XL2'4001'
         DC    XL2'0000'
         DC    CL8'AHLSRM'
         DC    XL4'00002000'
         ORG   EPALIST+608
         ORG   EPALIST+608
         DC    XL2'8100'
         DC    XL2'0000'
         DC    CL8'AHLRNIO'
         DC    XL4'00004000'
         ORG   EPALIST+624
         ORG   EPALIST+624
         DC    XL2'8200'
         DC    XL2'0000'
         DC    CL8'AHLRNIO'
         DC    XL4'00004000'
         ORG   EPALIST+640
         ORG   EPALIST+640
         DC    XL2'6200'
         DC    XL2'0000'
         DC    CL8'AHLTINT'
         DC    XL4'00080000'
         ORG   EPALIST+656
         ORG   EPALIST+656
         DC    XL2'6101'
         DC    XL2'0000'
         DC    CL8'AHLPINT'
         DC    XL4'00080000'
         ORG   EPALIST+672
         ORG   EPALIST+672
         DC    XL2'0001'
         DC    XL2'0000'
         DC    CL8'AHLSRB'
         DC    XL4'04000000'
         ORG   EPALIST+688
         ORG   EPALIST+688
         DC    XL2'0002'
         DC    XL2'0000'
         DC    CL8'AHLDSP'
         DC    XL4'04000000'
         ORG   EPALIST+704
         ORG   EPALIST+704
         DC    XL2'0003'
         DC    XL2'0000'
         DC    CL8'AHLDSP'
         DC    XL4'04000000'
         ORG   EPALIST+720
         ORG   EPALIST+720
         DC    XL2'0004'
         DC    XL2'0000'
         DC    CL8'AHLDSP'
         DC    XL4'04000000'
         ORG   EPALIST+736
LMNLIST  DS    CL12
         ORG   LMNLIST+0
LMNAME   DC    CL8'AHLTSVC'
LMAOPT   DC    XL4'00C00000'
         ORG   LMNLIST+12
         ORG   LMNLIST+12
         DC    CL8'AHLTSYFL'
         DC    XL4'00550000'
         ORG   LMNLIST+24
         ORG   LMNLIST+24
         DC    CL8'AHLTSIO'
         DC    XL4'01330000'
         ORG   LMNLIST+36
         ORG   LMNLIST+36
         DC    CL8'AHLTEXT'
         DC    XL4'00008000'
         ORG   LMNLIST+48
         ORG   LMNLIST+48
         DC    CL8'AHLTFOR'
         DC    XL4'00007000'
         ORG   LMNLIST+60
         ORG   LMNLIST+60
         DC    CL8'AHLTPID'
         DC    XL4'040C0000'
         ORG   LMNLIST+72
         ORG   LMNLIST+72
         DC    CL8'AHLTSYSM'
         DC    XL4'80000000'
         ORG   LMNLIST+84
         ORG   LMNLIST+84
         DC    CL8'AHLTXSYS'
         DC    XL4'04006000'
         ORG   LMNLIST+96
FTRLIST  DS    CL12
         ORG   FTRLIST+0
FTRNAME  DC    CL8'AHLTSIO1'
FTROPTS  DC    XL4'00100000'
         ORG   FTRLIST+12
         ORG   FTRLIST+12
         DC    CL8'AHLTIO'
         DC    XL4'00010000'
         ORG   FTRLIST+24
         ORG   FTRLIST+24
         DC    CL8'AHLTSVC'
         DC    XL4'00400000'
         ORG   FTRLIST+36
         ORG   FTRLIST+36
         DC    CL8'AHLTPI'
         DC    XL4'00040000'
         ORG   FTRLIST+48
BRTAB    DS    CL4
         ORG   BRTAB+0
ARG      DC    X'80'
TERMADR  DC    AL3(TERM10)
         ORG   BRTAB+4
         ORG   BRTAB+4
         DC    X'40'
         DC    AL3(TERM20)
         ORG   BRTAB+8
         ORG   BRTAB+8
         DC    X'20'
         DC    AL3(TERM30)
         ORG   BRTAB+12
         ORG   BRTAB+12
         DC    X'10'
         DC    AL3(TERM40)
         ORG   BRTAB+16
         ORG   BRTAB+16
         DC    X'08'
         DC    AL3(TERM50)
         ORG   BRTAB+20
         ORG   BRTAB+20
         DC    X'04'
         DC    AL3(TERM60)
         ORG   BRTAB+24
         ORG   BRTAB+24
         DC    X'02'
         DC    AL3(TERM70)
         ORG   BRTAB+32
AHLGTFI  CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
AHLGTFI  CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
AUDITSET EQU   @04
SYSCODE  EQU   @08
X        EQU   @04
DISP     EQU   @09
MAXEID   EQU   @07
EIDLSTCT EQU   @05
EIDREG   EQU   @04
TEMP1    EQU   @04
I        EQU   @06
ENDVAL   EQU   @04
LENTEMP  EQU   @04
TEMPMCQE EQU   @07
SDWAPTR  EQU   @06
PCTPTR   EQU   @02
RETCODE  EQU   @15
PARMRG1  EQU   @01
GENREG   EQU   @09
FIXREG   EQU   @06
REG1     EQU   @01
REG0     EQU   @00
RETRTM   EQU   @14
SAVE14   EQU   @07
ESTACODE EQU   @00
PARMRG2  EQU   @02
GPR01P   EQU   @01
AHLPPTR  EQU   @01
GPR00P   EQU   @00
GPR15F   EQU   @15
GPR15P   EQU   @15
GPR01F   EQU   @01
GPR00F   EQU   @00
GPR14P   EQU   @14
EPADDR   EQU   @00
RNGETABP EQU   @05
         ENTRY AHLRNAME
         ENTRY AHLQNAME
         EXTRN AHL128
         EXTRN AHL129
         EXTRN AHL071
         EXTRN AHL019
         EXTRN AHL006
         EXTRN AHL005
         EXTRN AHL013
         EXTRN AHL015
         EXTRN AHL016
         EXTRN AHL039
         EXTRN AHL070
         EXTRN AHL130
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
MCHEAD   EQU   0
MCHFLGS  EQU   MCHEAD+24
MCHFLG1  EQU   MCHFLGS
MCHSETE  EQU   MCHEAD+28
MCHSETD  EQU   MCHEAD+32
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBFLC   EQU   SRB+12
ASCB     EQU   0
ASCBCSCB EQU   ASCB+56
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHVCD    EQU   CHFLG
CHSTS    EQU   CHFLG+2
CHACT    EQU   CHFLG+3
CHKEY    EQU   CHAIN+8
CHPARM   EQU   CHKEY
CHPKE    EQU   CHAIN+28
CHTRKID  EQU   CHPKE
CHTJID   EQU   CHAIN+30
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
MCQE     EQU   0
MCQEAT   EQU   MCQE+32
MCQEFLGS EQU   MCQE+41
GTFPCT   EQU   0
GTFPCTID EQU   GTFPCT
GTFSTAT  EQU   GTFPCT+8
GTFMODE  EQU   GTFSTAT
GTFOPTS  EQU   GTFPCT+12
GTFOPTS1 EQU   GTFOPTS
OPTSYSM  EQU   GTFOPTS1
OPTUSR   EQU   GTFOPTS1
GTFOPTS2 EQU   GTFOPTS+1
GTFOPTS3 EQU   GTFOPTS+2
GTFOPTS4 EQU   GTFOPTS+3
PCTCATF  EQU   GTFPCT+16
GTFSIOFT EQU   GTFPCT+20
GTFSIOBL EQU   GTFPCT+24
GTFIOFT  EQU   GTFPCT+28
GTFIOBL  EQU   GTFPCT+32
GTFSVCFT EQU   GTFPCT+36
GTFSVCBL EQU   GTFPCT+40
GTFPIFT  EQU   GTFPCT+44
GTFPIBL  EQU   GTFPCT+48
GTFEIDL  EQU   GTFPCT+52
MCQEPTR  EQU   GTFPCT+56
INITPTR  EQU   GTFPCT+60
FIXPTR   EQU   GTFPCT+64
FIXLEN   EQU   GTFPCT+68
STOPECBA EQU   GTFPCT+76
ATTCHECB EQU   GTFPCT+84
WTSKINIT EQU   GTFPCT+96
WTSKATTH EQU   GTFPCT+100
TRMWTASK EQU   GTFPCT+104
WRTRTCBA EQU   GTFPCT+108
WTSKTCBA EQU   GTFPCT+112
NEXTBLOK EQU   GTFPCT+180
WRTRCOM  EQU   GTFPCT+204
GTFCMECB EQU   GTFPCT+208
TRMWRIT  EQU   GTFPCT+212
WRTRERR  EQU   GTFPCT+216
GTFSSRB  EQU   GTFPCT+220
WRITERDD EQU   GTFPCT+228
QLOCKWRD EQU   GTFPCT+236
QLOCKECB EQU   GTFPCT+240
AUDITFLG EQU   GTFPCT+296
GTFASCB  EQU   GTFPCT+300
PCTDMPMD EQU   GTFPCT+308
PCTWTOMD EQU   GTFPCT+312
INITDATA EQU   0
INITID   EQU   INITDATA
CIBPTR   EQU   INITDATA+8
EXECPTR  EQU   INITDATA+12
ICT      EQU   INITDATA+16
ICTFLAGS EQU   ICT+2
GTFOPIND EQU   INITDATA+152
GTFOPT1  EQU   GTFOPIND
GTFPCI   EQU   GTFOPT1
GTFOPT2  EQU   GTFOPIND+1
GTFIOP   EQU   GTFOPT2
GTFOPT3  EQU   GTFOPIND+2
GTFOPT4  EQU   GTFOPIND+3
RANGPTR  EQU   INITDATA+172
TWT      EQU   INITDATA+176
SDWA     EQU   0
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWAREGU EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAMCHK EQU   SDWAERRA
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
@NM00095 EQU   0
EXTECB   EQU   @NM00095
EXTCIB   EQU   @NM00095+4
LENSIO   EQU   0
LENIO    EQU   0
LENSVC   EQU   0
LENPI    EQU   0
STOPECB  EQU   0
STOPECBP EQU   STOPECB
EIDLIST  EQU   0
EID      EQU   EIDLIST
ADDREID  EQU   EIDLIST+2
RANGETAB EQU   0
NEXTFREE EQU   RANGETAB
RANGES   EQU   RANGETAB+8
STARTADR EQU   RANGES
ENDADR   EQU   RANGES+4
BEGRANGE EQU   0
ENDRANGE EQU   0
FIXTAB   EQU   0
FLAGA    EQU   FIXTAB
FLAGB    EQU   FIXTAB+4
ENDFIX   EQU   FLAGB
MCHKRETY EQU   0
AHLSETEV EQU   0
SEPL     EQU   0
SEFG     EQU   SEPL
SEEN     EQU   SEPL+2
SECN     EQU   SEPL+3
SENM     EQU   SEPL+4
SEEL     EQU   SEPL+12
SECL     EQU   SEPL+16
SEMC     EQU   SEPL+20
I001C    EQU   0
I256C    EQU   0
AHLSETD  EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
PARMADR  EQU   0
TCB      EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
ASCBPTR  EQU   PSAAOLD
CSCBPTR  EQU   ASCBCSCB
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
MODNAME3 EQU   AHL071+35
@NM00096 EQU   WTSKATTH
WTASKPST EQU   @NM00096
@NM00098 EQU   ATTCHECB
WTRPOST  EQU   @NM00098
ZEROESTA EQU   ESTAELST
RCIND    EQU   AHL019+51
RCIND2   EQU   AHL071+49
ABNDCODE EQU   AHL071+44
@NM00111 EQU   WTSKINIT
@NM00113 EQU   WTSKATTH
@NM00115 EQU   GTFCMECB
@NM00117 EQU   ATTCHECB
I056     EQU   ILIST
I05602   EQU   I056+8
I05603   EQU   I05602
I05604   EQU   I05602+1
I05605   EQU   I05602+2
I05606   EQU   I05602+4
I05607   EQU   I05602+8
I004     EQU   ILIST
I00401   EQU   I004
I00403   EQU   I004+5
I00404   EQU   I004+8
I00405   EQU   I004+9
I005     EQU   ILIST
I00504   EQU   I005+5
I00505   EQU   I005+8
I00506   EQU   I005+9
I042     EQU   ILIST
I04202   EQU   I042+1
I04205   EQU   I042+8
I04206   EQU   I042+9
I04216   EQU   I042+28
I04226   EQU   I042+54
I048     EQU   ILIST
I04802   EQU   I048+4
I04803   EQU   I04802
I04804   EQU   I04803
I04805   EQU   I04803+1
I04806   EQU   I04803+2
I04807   EQU   I04802+4
I04808   EQU   I04802+8
FLC      EQU   PSA
MODNAME1 EQU   AHL128+29
MODNAME2 EQU   AHL129+52
*                                      START UNREFERENCED COMPONENTS
@NM00124 EQU   I04803+3
I04801   EQU   I048
I04227   EQU   I042+56
I04225   EQU   I042+53
I04224   EQU   I042+52
I04223   EQU   I042+49
I04222   EQU   I042+48
I04221   EQU   I042+45
I04220   EQU   I042+44
I04219   EQU   I042+41
I04218   EQU   I042+40
I04217   EQU   I042+36
I04215   EQU   I042+27
I04214   EQU   I042+26
I04213   EQU   I042+24
I04212   EQU   I042+21
I04211   EQU   I042+20
I04210   EQU   I042+17
I04209   EQU   I042+16
I04208   EQU   I042+13
I04207   EQU   I042+12
I04204   EQU   I042+5
I04203   EQU   I042+4
I04201   EQU   I042
I00503   EQU   I005+4
I00502   EQU   I005+1
I00501   EQU   I005
I00402   EQU   I004+4
I05655   EQU   I05602+3
I05601   EQU   I056+4
I05600   EQU   I056
WTRATTHP EQU   @NM00117
@NM00118 EQU   @NM00117
WTRINITP EQU   @NM00115
@NM00116 EQU   @NM00115
WTKATTHP EQU   @NM00113
@NM00114 EQU   @NM00113
WTKINITP EQU   @NM00111
@NM00112 EQU   @NM00111
@NM00099 EQU   @NM00098
@NM00097 EQU   @NM00096
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00034 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00119 EQU   SEPL+1
ENDADDR  EQU   FIXTAB+5
BEGADDR  EQU   FIXTAB+1
LASTELM  EQU   RANGETAB+4
@NM00107 EQU   STOPECB
@NM00094 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00093 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00092 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00091 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00090 EQU   SDWADDAT+3
@NM00089 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00088 EQU   SDWADDAT+1
@NM00087 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00086 EQU   SDWADUMP+2
@NM00085 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00084 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00083 EQU   SDWALKWA+32
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00082 EQU   SDWAACF3
@NM00081 EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00080 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00079 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00078 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00077 EQU   SDWA+239
@NM00076 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00075 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00074 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00073 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00072 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00071 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00070 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00069 EQU   SDWAINC2
@NM00068 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00067 EQU   SDWAILC2
@NM00066 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00065 EQU   SDWANXT2
@NM00064 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00063 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00062 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00061 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00060 EQU   SDWAINC1
@NM00059 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00058 EQU   SDWAILC1
@NM00057 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00056 EQU   SDWANXT1
@NM00055 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00054 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00053 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00052 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00051 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00050 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00049 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00048 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00047 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
SDWAPARM EQU   SDWA
TWTBUF   EQU   TWT+40
TWTWORK  EQU   TWT+8
@NM00046 EQU   TWT+4
@NM00045 EQU   TWT
PITAB    EQU   INITDATA+168
SVCTAB   EQU   INITDATA+164
SIOTAB   EQU   INITDATA+160
IOTAB    EQU   INITDATA+156
GTFTIME  EQU   GTFOPT4
GTFRES3  EQU   GTFOPT4
GTFIOSIO EQU   GTFOPT3
GTFRES2  EQU   GTFOPT3
GTFRR    EQU   GTFOPT3
GTFSRM   EQU   GTFOPT3
GTFRNIO  EQU   GTFOPT3
GTFEXT   EQU   GTFOPT3
GTFIO    EQU   GTFOPT2
GTFPIP   EQU   GTFOPT2
GTFPI    EQU   GTFOPT2
GTFSIOP  EQU   GTFOPT2
GTFSIO   EQU   GTFOPT2
GTFSVCP  EQU   GTFOPT2
GTFSVC   EQU   GTFOPT2
GTFRES1  EQU   GTFOPT1
GTFDSP   EQU   GTFOPT1
GTFTRC   EQU   GTFOPT1
GTFUSR   EQU   GTFOPT1
GTFSYS   EQU   GTFOPT1
GTFSYSP  EQU   GTFOPT1
GTFSYSM  EQU   GTFOPT1
MSGREPLY EQU   INITDATA+28
WTORECB  EQU   INITDATA+24
PARMDCB  EQU   INITDATA+20
ICTRESV  EQU   ICTFLAGS
ICTSTOP  EQU   ICTFLAGS
ICTTRCIN EQU   ICTFLAGS
ICTRETRY EQU   ICTFLAGS
ICTEOD   EQU   ICTFLAGS
ICTIOERR EQU   ICTFLAGS
ICTPLIB  EQU   ICTFLAGS
ICTIOTYP EQU   ICT+1
ICTMSGX  EQU   ICT
TRANSMAX EQU   GTFPCT+304
@NM00044 EQU   AUDITFLG+3
AFSLEBLD EQU   AUDITFLG+3
WSERFG06 EQU   AUDITFLG+3
WSERFG05 EQU   AUDITFLG+3
WSERFG04 EQU   AUDITFLG+3
WSERFG03 EQU   AUDITFLG+3
WSERFG02 EQU   AUDITFLG+2
WSERFLAG EQU   AUDITFLG+2
TERMFLAG EQU   AUDITFLG+2
AFXWRIT  EQU   AUDITFLG+2
AFQLWAIT EQU   AUDITFLG+2
AFSLEGET EQU   AUDITFLG+2
AFBUFGET EQU   AUDITFLG+2
AFFEOB   EQU   AUDITFLG+2
AFBLKFIX EQU   AUDITFLG+1
AFEQFIX  EQU   AUDITFLG+1
AFPGRLSE EQU   AUDITFLG+1
AFWRAP   EQU   AUDITFLG+1
AFBUFOFF EQU   AUDITFLG+1
AFLDFX   EQU   AUDITFLG+1
AFCLOSE  EQU   AUDITFLG+1
AFOPEN   EQU   AUDITFLG+1
AFGMBLOK EQU   AUDITFLG
AFGMSRB  EQU   AUDITFLG
AFWAIT   EQU   AUDITFLG
AFTERM   EQU   AUDITFLG
AFINIT   EQU   AUDITFLG
AFWWRIT  EQU   AUDITFLG
AFCWRIT  EQU   AUDITFLG
AFIWRIT  EQU   AUDITFLG
EQSHORT  EQU   GTFPCT+292
SLEMAX   EQU   GTFPCT+288
SLECNT   EQU   GTFPCT+284
RQPURGE  EQU   GTFPCT+280
RQTOTAL  EQU   GTFPCT+276
WRTDLST  EQU   GTFPCT+272
NUMOFBUF EQU   GTFPCT+268
SBUFDISA EQU   GTFPCT+264
SLESUSED EQU   GTFPCT+260
EQMIN    EQU   GTFPCT+256
EQLENGTH EQU   GTFPCT+252
WQMAX    EQU   GTFPCT+248
WQLENGTH EQU   GTFPCT+244
QLECBP   EQU   QLOCKECB
@NM00043 EQU   QLOCKECB
@NM00042 EQU   QLOCKWRD+3
SCHEDBUF EQU   QLOCKWRD+2
POSTWRIT EQU   QLOCKWRD+1
QLOCK    EQU   QLOCKWRD
GTFLOSTR EQU   GTFPCT+224
SRBAVAIL EQU   GTFSSRB
WRTRERRP EQU   WRTRERR
@NM00041 EQU   WRTRERR
TRMWRITP EQU   TRMWRIT
@NM00040 EQU   TRMWRIT
WRTRCOMP EQU   WRTRCOM
@NM00039 EQU   WRTRCOM
TRANSCNT EQU   GTFPCT+200
AHLRDPLQ EQU   GTFPCT+196
SFEOBRTN EQU   GTFPCT+192
SBLOKRTN EQU   GTFPCT+188
CURRBLOK EQU   GTFPCT+184
GBCDS    EQU   NEXTBLOK
WSMODEND EQU   GTFPCT+176
WSMODBEG EQU   GTFPCT+172
BCBPAGE  EQU   GTFPCT+156
SLEPAGE  EQU   GTFPCT+152
SAVECNT  EQU   GTFPCT+148
SLQHEAD  EQU   GTFPCT+144
HQLENGTH EQU   GTFPCT+140
QTAIL    EQU   GTFPCT+136
HQHEAD   EQU   GTFPCT+132
WQHEAD   EQU   GTFPCT+128
RQHEAD   EQU   GTFPCT+124
EQHEAD   EQU   GTFPCT+120
WPOSTSRB EQU   GTFPCT+116
WTASKECB EQU   GTFPCT+92
WMTABPTR EQU   GTFPCT+88
AHLECB   EQU   GTFPCT+80
ECBADRLT EQU   GTFPCT+72
@NM00038 EQU   PCTCATF+1
PCTPIF   EQU   PCTCATF+1
PCTSIOF  EQU   PCTCATF+1
PCTIOF   EQU   PCTCATF+1
PCTSVCF  EQU   PCTCATF+1
PCTRR    EQU   PCTCATF+1
PCTSRM   EQU   PCTCATF+1
PCTRNIO  EQU   PCTCATF+1
PCTUSR   EQU   PCTCATF
PCTPI    EQU   PCTCATF
@NM00037 EQU   PCTCATF
PCTDSP   EQU   PCTCATF
PCTSIO   EQU   PCTCATF
PCTIO    EQU   PCTCATF
PCTEXT   EQU   PCTCATF
PCTSVC   EQU   PCTCATF
OPTTIME  EQU   GTFOPTS4
OPTRES3  EQU   GTFOPTS4
OPTIOSIO EQU   GTFOPTS3
OPTRES2  EQU   GTFOPTS3
OPTRR    EQU   GTFOPTS3
OPTSRM   EQU   GTFOPTS3
OPTRNIO  EQU   GTFOPTS3
OPTEXT   EQU   GTFOPTS3
OPTIOP   EQU   GTFOPTS2
OPTIO    EQU   GTFOPTS2
OPTPIP   EQU   GTFOPTS2
OPTPI    EQU   GTFOPTS2
OPTSIOP  EQU   GTFOPTS2
OPTSIO   EQU   GTFOPTS2
OPTSVCP  EQU   GTFOPTS2
OPTSVC   EQU   GTFOPTS2
OPTPCI   EQU   GTFOPTS1
OPTRES1  EQU   GTFOPTS1
OPTDSP   EQU   GTFOPTS1
OPTTRC   EQU   GTFOPTS1
OPTSYS   EQU   GTFOPTS1
OPTSYSP  EQU   GTFOPTS1
GTFRESV  EQU   GTFSTAT
GTFDEBUG EQU   GTFSTAT
MCQESRB  EQU   MCQE+44
@NM00036 EQU   MCQE+42
@NM00035 EQU   MCQEFLGS
MCQEACT  EQU   MCQEFLGS
MCQESCHE EQU   MCQE+40
MCQETECB EQU   MCQE+36
MCQEMCCL EQU   MCQE+28
MCQEMCEE EQU   MCQE+24
MCQEMCQE EQU   MCQE+20
MCQEASCB EQU   MCQE+16
MCQENAME EQU   MCQE+8
MCQEIDEN EQU   MCQE
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00033 EQU   CHSHORT+84
@NM00032 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00031 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHASID   EQU   CHTJID
CHUCMP   EQU   CHAIN+29
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPCOI   EQU   CHPARM
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHFC     EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHPTR    EQU   CHAIN
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00006 EQU   SRB+40
@NM00005 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBPARM  EQU   SRB+28
SRBRMTR  EQU   SRB+24
SRBEP    EQU   SRB+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRB+8
SRBFLNK  EQU   SRB+4
SRBID    EQU   SRB
MCHEADTR EQU   MCHEAD+48
MCHEADRD EQU   MCHEAD+44
MCHFRRAD EQU   MCHEAD+40
MCHMCER  EQU   MCHEAD+36
@NM00004 EQU   MCHFLGS+1
@NM00003 EQU   MCHFLG1
MCHTERM  EQU   MCHFLG1
MCHACT   EQU   MCHFLG1
MCHDIS   EQU   MCHEAD+20
MCHCTL   EQU   MCHEAD+16
MCHCNT   EQU   MCHEAD+12
MCHCUR   EQU   MCHEAD+8
MCHIDEN  EQU   MCHEAD
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00030 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00029 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00028 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00027 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00026 EQU   FLCFSA
@NM00025 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00024 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00023 EQU   FLCIOA
@NM00022 EQU   FLCMCLA+15
@NM00021 EQU   FLCMCLA+14
@NM00020 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00019 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00018 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00017 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00016 EQU   FLCPER
@NM00015 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00014 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00013 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00012 EQU   FLCPIILC
@NM00011 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00010 EQU   FLCSVILC
@NM00009 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00008 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00007 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RT00386 EQU   GTFI350
@RT00414 EQU   GTFI350
@RT00450 EQU   GTFI350
@RT00475 EQU   GTFI350
@RT00495 EQU   GTFI350
@RT00520 EQU   GTFI350
@RT00543 EQU   GTFI350
@RT00570 EQU   GTFI350
@RT00619 EQU   GTFI225
@RC01164 EQU   @EL00001
@ENDDATA EQU   *
         END   AHLGTFI,(C'PLS1304',0701,77089)
