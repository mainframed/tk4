         TITLE 'HMASMSUP - SUPERSEDE PROCESS MODULE'
HMASMSUP CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMSUP  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0169
*   /*****************************************************************/
*   /*                                                               */
*   /* MAIN LINE HMASMSUP: INITIALIZE MSG PARMS AND ERROR CODES. SET */
*   /* THE ICT BASE POINTER TO THE ADDRESS OF THE ICT PTF ENTRY      */
*   /* PASSED AS A PARAMETER FROM THE CALLER.                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0170
*   HMASMMGP=''B;                   /* CLEAR MESSAGE PARAMETERS      */
         XC    HMASMMGP(28),HMASMMGP                               0170
*   MGPPRINT=ON;                    /* ALL MSGS TO PRINT AND LOG     */
*   MGPHLDS=ON;                     /*                               */
         OI    MGPPRINT,B'10010000'                                0172
*   SUPRTNCD=ZERO;                  /* INIT ERROR CODE               */
         SLR   SUPRTNCD,SUPRTNCD                                   0173
*   IOPPTR=CCAIOPTR;                /* SET UP IOP ADDRESS            */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0174
*   ADICTPTF=ADDR(PARMPTF);         /* INIT PTR TO ICTPTF ENTRY      */
         L     ADICTPTF,@PC00001                                   0175
*   SUPBITS=''B;                    /* INIT SWITCH           @Z67SP00*/
*                                                                  0176
         MVI   SUPBITS,X'00'                                       0176
*   /*****************************************************************/
*   /*                                                               */
*   /* IF APPLY OR ACCEPT CALL ROUTINE TO CREATE CDS OR ACDS PTF     */
*   /* ENTRIES .                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0177
*   RFY                                                            0177
*     RTNCODE RSTD;                 /*                               */
*   IF CCAAPPLY=ON                  /*                               */
*       ×CCAACCPT=ON                /*                               */
*     THEN                          /*                               */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0178
         BZ    @RF00178                                            0178
*     CALL SUPAPAC;                 /* APPLY/ACCEPT ROUTINE          */
*                                                                  0179
         BAL   @14,SUPAPAC                                         0179
*   /*****************************************************************/
*   /*                                                               */
*   /* IF RESTORE THEN CALL ROUTINE TO DELETE SUPERSEDE PTFS FROM THE*/
*   /* SMPCDS .                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0180
*   ELSE                            /*                               */
*     CALL SUPRES;                  /* RESTORE ROUTINE               */
*                                                                  0180
         B     @RC00178                                            0180
@RF00178 BAL   @14,SUPRES                                          0180
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW SAVE THE RETURN CODE FROM THE CALLED PROCEDURE    @Z67SP00*/
*   /* AND RETURN TO CALLER WITH THAT RETURN CODE                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0181
*   SUPRTNCD=MAX(SUPRTNCD,RTNCODE); /* SET ERROR CODE                */
@RC00178 CR    SUPRTNCD,RTNCODE                                    0181
         BNL   *+6
         LR    SUPRTNCD,RTNCODE                                    0181
*   RFY                                                            0182
*     RTNCODE UNRSTD;               /*                               */
*   RETURN CODE(SUPRTNCD);          /*                               */
         LR    @15,SUPRTNCD                                        0183
         L     @13,4(,@13)                                         0183
         L     @14,12(,@13)                                        0183
         LM    @00,@12,20(@13)                                     0183
         BR    @14                                                 0183
         EJECT
*                                                                  0184
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO ADD THE SUPERSEDING SYSMOD NUMBER TO*/
*   /* THE CDS OR ACDS SYSMOD ENTRIES FOR APPLY OR ACCEPT PROCESSING */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0184
*SUPAPAC:                                                          0184
*   PROCEDURE;                      /*                               */
SUPAPAC  STM   @14,@12,@SA00002                                    0184
*   DECLARE                                                        0185
*     A FIXED(31);                  /* LOOP CNTR FOR SUP ELEMENTS    */
*   DECLARE                                                        0186
*     B FIXED(31);                  /* LOOP CNTR FOR ELEMENT CHECK   */
*   DECLARE                                                        0187
*     APACRC FIXED(8);              /* RETURN CODE FOR THE ROUTINE   */
*   RFY                                                            0188
*     HMASMIOP BASED(IOPPTR);       /*                       @ZD00005*/
*   RFY                                                            0189
*     ICTPTF BASED(ADICTPTF);       /* ICT BASED ON ADDRESS OF PARM  */
*   RFY                             /*                       @Z67SP00*/
*     ICTSUPLS BASED(ICTPSCHN(1));  /* SUP LIST              @Z67SP00*/
*   APACRC=ZERO;                    /* INIT ERROR CODE               */
*                                                                  0191
         SLR   APACRC,APACRC                                       0191
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU THE SYSMODS SUPERSEDED LIST FOR THE CURRENT SYSMOD  */
*   /* AND PROCESS EACH ONE OF THEM                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0192
*   IF CCAAPPLY=ON                  /* IF APPLY USE CDS              */
*     THEN                          /*                               */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0192
         BNO   @RF00192                                            0192
*     IOPDSID=IOPCDS;               /*                               */
         MVI   IOPDSID(IOPPTR),X'02'                               0193
*   ELSE                            /* ACCEPT , USE ACDS             */
*     IOPDSID=IOPACDS;              /*                               */
         B     @RC00192                                            0194
@RF00192 MVI   IOPDSID(IOPPTR),X'0C'                               0194
*   IOPTYPE=IOPSMD;                 /*                               */
@RC00192 MVI   IOPTYPE(IOPPTR),X'0B'                               0195
*   DO A=1 BY 1 WHILE(ICTSUPND(A)^=ICTENDIX/* LIST LOOP              */
*         &APACRC<STOPFUNC);        /*                               */
*                                                                  0196
         LA    A,1                                                 0196
         B     @DE00196                                            0196
@DL00196 DS    0H                                                  0197
*     /***************************************************************/
*     /*                                                             */
*     /* LOCATE SUPERSEDED SYSMOD ON APPROPRIATE DATASET     @Z67SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0197
*     IOPFUNCT=IOPLOC;              /*                               */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0197
*     IOPNAME=ICTSUPNM(A);          /* GET PTF FROM LIST     @ZD00008*/
         MVI   IOPNAME+7(IOPPTR),C' '                              0198
         LR    @10,A                                               0198
         SLA   @10,3                                               0198
         L     @07,ICTPSCHN(,ADICTPTF)                             0198
         ALR   @07,@10                                             0198
         AL    @07,@CF01657                                        0198
         MVC   IOPNAME(7,IOPPTR),ICTSUPNM(@07)                     0198
*     IOPPTFNT=''B;                 /* ZERO PTF ENTRY AREA   @Z67SP00*/
         XC    IOPPTFNT(104,IOPPTR),IOPPTFNT(IOPPTR)               0199
*     CALL HMASMIO(HMASMIOP);       /* DO THE LOCATE                 */
*                                                                  0200
         ST    IOPPTR,@AL00001                                     0200
         L     @15,@CV01598                                        0200
         LA    @01,@AL00001                                        0200
         BALR  @14,@15                                             0200
*     /***************************************************************/
*     /*                                                             */
*     /* PTF EXISTS, PREPARE TO ADD SUPERCEEDING NUMBER TO ENTRY     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0201
*     IF IOPRETRN=IOPGOOD           /* SYSMOD ENTRY FOUND    @Z67SP00*/
*       THEN                        /*                       @Z67SP00*/
         CLI   IOPRETRN(IOPPTR),0                                  0201
         BNE   @RF00201                                            0201
*       DO;                         /*                       @Z67SP00*/
*                                                                  0202
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK TO INSURE THAT ALL ELEMENTS OF THE SUPERSEEDED PTF*/
*         /* ARE IN THE SUPERSEEDING PTF                     @ZD00005*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0203
*         DO B=1 BY 1 WHILE IOPPTFND(B)^=IOPEOLST;/* TO END  @ZD00004*/
         LA    B,1                                                 0203
         B     @DE00203                                            0203
@DL00203 DS    0H                                                  0204
*           IF IOPPIND(B)<IOPPTFS   /* ELEMENT TYPE          @ZD00005*/
*             THEN                  /*                       @Z67SP00*/
         LR    @10,B                                               0204
         MH    @10,@CH00434                                        0204
         SLR   @07,@07                                             0204
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0204
         CH    @07,@CH00860                                        0204
         BNL   @RF00204                                            0204
*             DO;                   /* PARM(SUPEDPTF,ELEMENT)      0205
*                                                            @ZD00005*/
*               CALL SUPELCHK(IOPNAME,IOPPNTRY(B));/*        @ZD00005*/
         LA    @07,IOPNAME(,IOPPTR)                                0206
         ST    @07,@AL00001                                        0206
         LA    @10,IOPPNTRY-9(@10,IOPPTR)                          0206
         ST    @10,@AL00001+4                                      0206
         LA    @01,@AL00001                                        0206
         BAL   @14,SUPELCHK                                        0206
*               RFY                                                0207
*                 RTNCODE RSTD;     /*                       @ZD00005*/
*               APACRC=MAX(APACRC,RTNCODE);/*                @ZD00005*/
         CR    APACRC,RTNCODE                                      0208
         BNL   *+6
         LR    APACRC,RTNCODE                                      0208
*               RFY                                                0209
*                 RTNCODE UNRSTD;   /*                       @ZD00005*/
*             END;                  /*                       @ZD00005*/
*         END;                      /* ELEMENT LIST FOR THIS PTF.    */
*                                                                  0211
@RF00204 AH    B,@CH00085                                          0211
@DE00203 LR    @10,B                                               0211
         MH    @10,@CH00434                                        0211
         SLR   @07,@07                                             0211
         IC    @07,IOPPTFND-9(@10,IOPPTR)                          0211
         CH    @07,@CH00623                                        0211
         BNE   @DL00203                                            0211
*         /***********************************************************/
*         /*                                                         */
*         /* IF EXISTING ENTRY FOUND AND HAS ALREADY BEEN SUPED THEN */
*         /* MOVE THE LASTSUP FIELD TO THE VARIABLE SUBENTRY LIST    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0212
*         IF IOPSBYNO^=BLANK7       /* IF LAST SUP EXISTS    @Z67SP00*/
*             &IOPSBYNO^=ICTPTFS(1) /* AND NOT EQUAL TO      @Z67SP00*/
*             &IOPDBYP=OFF          /* AND NOT DELETED TYPE  @Z67SP00*/
*           THEN                    /* CURRENT PTF           @Z67SP00*/
         CLC   IOPSBYNO(7,IOPPTR),@CC01587                         0212
         BE    @RF00212                                            0212
         CLC   IOPSBYNO(7,IOPPTR),ICTPTFS(ADICTPTF)                0212
         BE    @RF00212                                            0212
         TM    IOPDBYP(IOPPTR),B'01000000'                         0212
         BNZ   @RF00212                                            0212
*           DO;                     /*                       @Z67SP00*/
*             HMASMVLP=''B;         /*                               */
         XC    HMASMVLP(52),HMASMVLP                               0214
*             VLPLPTR=ADDR(IOPPNTRY(1));/* IOP IS LIST TO BE UPDATED
*                                                            @Z67SP00*/
         LA    @10,IOPPNTRY(,IOPPTR)                               0215
         ST    @10,VLPLPTR                                         0215
*             VLPDATA=IOPSBYNO;     /* SUPERSEDING SYSMOD NO @Z67SP00*/
         MVI   VLPDATA+7,C' '                                      0216
         MVC   VLPDATA(7),IOPSBYNO(IOPPTR)                         0216
*             VLPTYPE=IOPPSBY;      /* ENTRY TYPE IS THE SUPBY NUMBER
*                                                            @Z67SP00*/
         MVI   VLPTYPE,X'AA'                                       0217
*             VLPDLEN=LENGTH(IOPSBYNM);/* LEN OF KEY IN VLPDATA      */
         MVI   VLPDLEN,X'07'                                       0218
*             VLPFUNCT=VLPADD;      /* ADD ELEMENT TO LIST   @Z67SP00*/
         MVI   VLPFUNCT,X'01'                                      0219
*             VLPMTYPE=CCATYPEA(IOPSMD);/*                   @Z67SP00*/
         L     @10,CCATPAD(,CCAPTR)                                0220
         MVC   VLPMTYPE(8),CCATYPEA+80(@10)                        0220
*             VLPMNAME=IOPNAME;     /*                       @Z67SP00*/
         MVC   VLPMNAME(8),IOPNAME(IOPPTR)                         0221
*             VLPSTYPE=TXTSUP;      /*                       @Z67SP00*/
         MVC   VLPSTYPE(16),@CC01589                               0222
*             CALL HMASMVLU(HMASMVLP);/*                     @Z67SP00*/
         L     @15,@CV01599                                        0223
         LA    @01,@AL00223                                        0223
         BALR  @14,@15                                             0223
*             IOPDUMMP=OFF;         /* NO LONGER "DUMMY"     @Z67SP00*/
         NI    IOPDUMMP(IOPPTR),B'11111011'                        0224
*             IF VLPRETRN=VLPPEEXC  /* PEMAX EXCEEDED        @Z67SP00*/
*               THEN                /*                       @Z67SP00*/
         CLI   VLPRETRN,8                                          0225
         BNE   @RF00225                                            0225
*               APACRC=STOPFUNC;    /* STOP PROCESSING       @Z67SP00*/
         LA    APACRC,12                                           0226
*           END;                    /*                       @Z67SP00*/
*       END;                        /* END PROCESSING OF PTF ENTRY 0228
*                                      FOUND ON (A)CDS       @Z67SP00*/
*                                                                  0228
*     /***************************************************************/
*     /*                                                             */
*     /* IF (A)CDS SYSMOD ENTRY DOES NOT EXIST THEN INIT IOP TO SET  */
*     /* UP TO CREATE DUMMY SUP ONLY TYPE ENTRY              @Z67SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0229
*     ELSE                          /* IF PTF NOT LOCATED    @Z67SP00*/
*       IF IOPRETRN=IOPNOTFD        /*                               */
*         THEN                      /*                               */
         B     @RC00201                                            0229
@RF00201 CLI   IOPRETRN(IOPPTR),4                                  0229
         BNE   @RF00229                                            0229
*         DO;                       /*                               */
*           IOPDUMMP=ON;            /* "DUMMY" PTF ENTRY     @ZD00004*/
         OI    IOPDUMMP(IOPPTR),B'00000100'                        0231
*           IOPNTLVL=IOPPTFLC;      /*                       @ZD00004*/
         MVI   IOPNTLVL(IOPPTR),X'02'                              0232
*           IOPDBYNO=BLANK7;        /* BLANK OUT DELBY NUM   @Z67SP00*/
         MVC   IOPDBYNO(7,IOPPTR),@CC01587                         0233
*           IOPPFMID=BLANK7;        /* BLANK OUT FMID NUMBER @Z67SP00*/
         MVC   IOPPFMID(7,IOPPTR),@CC01587                         0234
*           IOPPTFND(1)=IOPEOLST;   /* END OF ELEMENT LIST   @ZD00004*/
         MVI   IOPPTFND(IOPPTR),X'FF'                              0235
*         END;                      /*                               */
*                                                                  0236
*     /***************************************************************/
*     /*                                                             */
*     /* IF ERROR IN LOCATING SYSMOD THEN SAVE RETURN CODE   @Z67SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0237
*       ELSE                        /* IF ERROR IN LOCATE    @Z67SP00*/
*         APACRC=IOPRETRN;          /*                       @Z67SP00*/
*                                                                  0237
         B     @RC00229                                            0237
@RF00229 SLR   APACRC,APACRC                                       0237
         IC    APACRC,IOPRETRN(,IOPPTR)                            0237
*     /***************************************************************/
*     /*                                                             */
*     /* IF NO ERRORS IN LOCATE OR ADDING SUP SYSMOD NUMBER THEN STOW*/
*     /* UPDATED OR CREATED SUPERSEDED SYSMOD                @Z67SP00*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0238
*     IF APACRC<=IOPNTFND           /* IF NO ERR IN LOC      @Z67SP00*/
*         &IOPDBYP=OFF              /* ANF NOT DELETED TYPE  @Z67SP00*/
*       THEN                        /*                               */
@RC00229 DS    0H                                                  0238
@RC00201 CH    APACRC,@CH00037                                     0238
         BH    @RF00238                                            0238
         TM    IOPDBYP(IOPPTR),B'01000000'                         0238
         BNZ   @RF00238                                            0238
*       DO;                         /*                               */
*         IOPSBYNO=ICTPTFS(1);      /* CURRENT SYSMOD BECOMES THE  0240
*                                      "LAST" SUP-BY SYSMOD  @Z67SP00*/
         MVC   IOPSBYNO(7,IOPPTR),ICTPTFS(ADICTPTF)                0240
*         IOPSBYP=ON;               /* SUPBY INDICATOR       @ZD00004*/
         OI    IOPSBYP(IOPPTR),B'10000000'                         0241
*         IOPFUNCT=IOPSTOWR;        /* DO STOW REP (ADD)     @ZD00008*/
         MVI   IOPFUNCT(IOPPTR),X'54'                              0242
*         CALL HMASMIO(HMASMIOP);   /* STOW IT                       */
         ST    IOPPTR,@AL00001                                     0243
         L     @15,@CV01598                                        0243
         LA    @01,@AL00001                                        0243
         BALR  @14,@15                                             0243
*         APACRC=MAX(APACRC,IOPRETRN);/* ERROR CODE                  */
         SLR   @10,@10                                             0244
         IC    @10,IOPRETRN(,IOPPTR)                               0244
         CR    APACRC,@10                                          0244
         BNL   *+6
         LR    APACRC,@10                                          0244
*       END;                        /*                               */
*   END;                            /* END LOOP THRU SUPED SYSMODS   */
@RF00238 AH    A,@CH00085                                          0246
@DE00196 LR    @10,A                                               0246
         SLA   @10,3                                               0246
         L     @07,ICTPSCHN(,ADICTPTF)                             0246
         AL    @07,@CF01657                                        0246
         L     @10,ICTSUPND(@10,@07)                               0246
         CL    @10,ICTENDIX                                        0246
         BE    @DC00196                                            0246
         CH    APACRC,@CH00175                                     0246
         BL    @DL00196                                            0246
@DC00196 DS    0H                                                  0247
*   RETURN CODE(APACRC);            /* RETURN TO CALLER              */
         LR    @15,APACRC                                          0247
         L     @14,@SA00002                                        0247
         LM    @00,@12,@SA00002+8                                  0247
         BR    @14                                                 0247
*   END SUPAPAC;                    /*                               */
         EJECT
*                                                                  0249
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE IS CALLED TO LOOP THRU THE LIST OF SUPED       */
*   /* SYSMODS AND FOR EACH SUPED SYSMOD LOCATE IT AND EITHER DELETE */
*   /* IT FROM THE CDS OR REMOVE THE CURRENT SYSMOD FROM THE         */
*   /* SUPERSEDING SYSMOD LIST                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0249
*SUPRES:                                                           0249
*   PROCEDURE;                                                     0249
SUPRES   STM   @14,@12,@SA00003                                    0249
*   DECLARE                                                        0250
*     C FIXED(31);                  /* SUPERCEED LIST CNTR           */
*   DECLARE                                                        0251
*     RESRC FIXED(8);               /* RETURN CODE FOR ROUTINE       */
*   RFY                                                            0252
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0253
*     ICTPTF BASED(ADICTPTF);       /* ICT BASED ON ADDR OF PARM     */
*   RFY                             /*                       @Z67SP00*/
*     ICTSUPLS BASED(ICTPSCHN(1));  /* SUP LIST              @Z67SP00*/
*   RESRC=ZERO;                     /* INIT ERROR CODE               */
*                                                                  0255
         SLR   RESRC,RESRC                                         0255
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU THE SUPERCEEDED LIST AND PROCESS EACH SUPED SYSMOD  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0256
*   IOPDSID=IOPCDS;                 /*                               */
         MVI   IOPDSID(IOPPTR),X'02'                               0256
*   IOPTYPE=IOPSMD;                 /*                               */
         MVI   IOPTYPE(IOPPTR),X'0B'                               0257
*   DO C=1 BY 1 WHILE(ICTSUPND(C)^=ICTENDIX/*                        */
*         &RESRC<STOPFUNC);         /*                               */
         LA    C,1                                                 0258
         B     @DE00258                                            0258
@DL00258 DS    0H                                                  0259
*     IOPFUNCT=IOPLOC;              /*                               */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0259
*     IOPNAME=ICTSUPNM(C);          /* SUPERCEEDED PTF       @ZD00008*/
         MVI   IOPNAME+7(IOPPTR),C' '                              0260
         LR    @10,C                                               0260
         SLA   @10,3                                               0260
         L     @01,ICTPSCHN(,ADICTPTF)                             0260
         ALR   @01,@10                                             0260
         AL    @01,@CF01657                                        0260
         MVC   IOPNAME(7,IOPPTR),ICTSUPNM(@01)                     0260
*     CALL HMASMIO(HMASMIOP);       /* LOCATE SUPED PTF              */
         ST    IOPPTR,@AL00001                                     0261
         L     @15,@CV01598                                        0261
         LA    @01,@AL00001                                        0261
         BALR  @14,@15                                             0261
*     IF IOPRETRN=IOPGOOD           /* IF SUPED SYSMOD FOUND         */
*         &IOPDBYP=OFF              /* AND NOT DELETED       @Z67SP00*/
*       THEN                        /* THEN                  @Z67SP00*/
         CLI   IOPRETRN(IOPPTR),0                                  0262
         BNE   @RF00262                                            0262
         TM    IOPDBYP(IOPPTR),B'01000000'                         0262
         BNZ   @RF00262                                            0262
*       CALL SUPDEL;                /* PROCESS IT            @Z67SP00*/
         BAL   @14,SUPDEL                                          0263
*     ELSE                          /* ELSE SAVE             @Z67SP00*/
*       IF IOPRETRN>IOPNTFND        /*                               */
*         THEN                      /*                               */
         B     @RC00262                                            0264
@RF00262 CLI   IOPRETRN(IOPPTR),4                                  0264
         BNH   @RF00264                                            0264
*         RESRC=MAX(RESRC,IOPRETRN);/* ERROR CODE                    */
         SLR   @10,@10                                             0265
         IC    @10,IOPRETRN(,IOPPTR)                               0265
         CR    RESRC,@10                                           0265
         BNL   *+6
         LR    RESRC,@10                                           0265
*   END;                            /*                               */
@RF00264 DS    0H                                                  0266
@RC00262 AH    C,@CH00085                                          0266
@DE00258 LR    @10,C                                               0266
         SLA   @10,3                                               0266
         L     @01,ICTPSCHN(,ADICTPTF)                             0266
         AL    @01,@CF01657                                        0266
         L     @10,ICTSUPND(@10,@01)                               0266
         CL    @10,ICTENDIX                                        0266
         BE    @DC00258                                            0266
         CH    RESRC,@CH00175                                      0266
         BL    @DL00258                                            0266
@DC00258 DS    0H                                                  0267
*   RETURN CODE(RESRC);             /* RETURN TO CALLER              */
         LR    @15,RESRC                                           0267
         L     @14,@SA00003                                        0267
         LM    @00,@12,@SA00003+8                                  0267
         BR    @14                                                 0267
*   END SUPRES;                     /*                               */
         EJECT
*                                                                  0269
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE IS CALLED TO DELETE THE SUP ENTRY FROM THE     */
*   /* SUPBY LIST                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0269
*SUPDEL:                            /*                       @Z67SP00*/
*   PROCEDURE;                      /*                       @Z67SP00*/
SUPDEL   STM   @14,@12,@SA00004                                    0269
*   RFY                                                            0270
*     HMASMIOP BASED(IOPPTR);       /* IOP BASE              @Z67SP00*/
*   RFY                             /*                       @Z67SP00*/
*     ICTPTF BASED(ADICTPTF);       /* BASED ON PASSED PTF   @Z67SP00*/
*   RFY                             /*                       @Z67SP00*/
*     ICTSUPLS BASED(ICTPSCHN(1));  /* SUP LIST              @Z67SP00*/
*   DECLARE                         /*                       @Z67SP00*/
*    (J,                            /*                       @Z67SP00*/
*     K) FIXED(31);                 /* LOOP INDEX            @Z67SP00*/
*   DECLARE                                                        0274
*     DELRC FIXED(8);               /* RETURN CODE FOR ROUTINE       */
*   DELRC=ZERO;                     /* INIT ERROR CODE               */
         SLR   DELRC,DELRC                                         0275
*   MATCHSW=OFF;                    /* NO CHANGE MADE SW     @Z67SP00*/
*                                                                  0276
         NI    MATCHSW,B'01111111'                                 0276
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE VALUE IN THE LASTSUP FIELD MATCHES THE CURRENT SYSMOD  */
*   /* NUMBER THEN BLANK IT OUT                              @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0277
*   IF IOPSBYNO=ICTPTFS(1)          /* IF LASTSUP=PTF        @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         CLC   IOPSBYNO(7,IOPPTR),ICTPTFS(ADICTPTF)                0277
         BNE   @RF00277                                            0277
*     DO;                           /*                       @Z67SP00*/
*       IOPSBYNO=BLANK7;            /*                       @Z67SP00*/
         MVC   IOPSBYNO(7,IOPPTR),@CC01587                         0279
*       MATCHSW=ON;                 /*                       @Z67SP00*/
         OI    MATCHSW,B'10000000'                                 0280
*     END;                                                         0281
*                                                                  0281
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LASTSUP DOES NOT MATCH CHECK TO SEE IF SYSMOD EXISTS IN THE*/
*   /* VARIABLE SUBENTRY LIST AND IF SO DELETE IT FROM THERE         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0282
*   ELSE                            /*                       @Z67SP00*/
*     DO;                           /*                       @Z67SP00*/
         B     @RC00277                                            0282
@RF00277 DS    0H                                                  0283
*       J=1;                        /* INIT TO INDEX         @Z67SP00*/
         LA    @10,1                                               0283
         LR    J,@10                                               0283
*       DO K=1 BY 1 WHILE(          /* LOOP THRU SUBENTRIES  @Z67SP00*/
*             IOPPTFND(K)^=IOPEOLST);/* TILL END             @Z67SP00*/
         LR    K,@10                                               0284
         B     @DE00284                                            0284
@DL00284 DS    0H                                                  0285
*         IF IOPPIND(K)=IOPPSBY     /* IF SUPBY TYPE ENTRY   @Z67SP00*/
*             &IOPSBYNM(K)=ICTPTFS(1)/* AND THIS SYSMOD      @Z67SP00*/
*           THEN                    /* THEN DONT MOVE IT     @Z67SP00*/
         LR    @10,K                                               0285
         MH    @10,@CH00434                                        0285
         SLR   @07,@07                                             0285
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0285
         CH    @07,@CH01067                                        0285
         BNE   @RF00285                                            0285
         ALR   @10,IOPPTR                                          0285
         CLC   IOPSBYNM-9(7,@10),ICTPTFS(ADICTPTF)                 0285
         BNE   @RF00285                                            0285
*           MATCHSW=ON;             /* AND SET CHANGE MADE   @Z67SP00*/
         OI    MATCHSW,B'10000000'                                 0286
*         ELSE                      /* IF NOT EQUAL THEN     @Z67SP00*/
*           DO;                     /* ENTRY OVER            @Z67SP00*/
         B     @RC00285                                            0287
@RF00285 DS    0H                                                  0288
*             IOPPMODS(J)=IOPPMODS(K);/* SHIFT ENTRY         @Z67SP00*/
         LA    @10,9                                               0288
         LR    @01,J                                               0288
         MR    @00,@10                                             0288
         ALR   @01,IOPPTR                                          0288
         LR    @09,@10                                             0288
         MR    @08,K                                               0288
         ALR   @09,IOPPTR                                          0288
         MVC   @TS00001(8),IOPPMODS-9(@09)                         0288
         MVC   IOPPMODS-9(8,@01),@TS00001                          0288
*             J=J+1;                /* INCR OUTPUT INDEX     @Z67SP00*/
         AH    J,@CH00085                                          0289
*           END;                    /* END ONE MOVE          @Z67SP00*/
*       END;                        /* END MOVE LOOP         @Z67SP00*/
@RC00285 AH    K,@CH00085                                          0291
@DE00284 LA    @10,255                                             0291
         LA    @07,9                                               0291
         LR    @01,K                                               0291
         MR    @00,@07                                             0291
         SLR   @00,@00                                             0291
         IC    @00,IOPPTFND-9(@01,IOPPTR)                          0291
         CR    @10,@00                                             0291
         BNE   @DL00284                                            0291
*       IOPPTFND(J)=IOPEOLST;       /* SHIFT EOF             @Z67SP00*/
         LR    @01,@07                                             0292
         MR    @00,J                                               0292
         STC   @10,IOPPTFND-9(@01,IOPPTR)                          0292
*     END;                          /* END NOT LASTSUP MATCH @Z67SP00*/
*                                                                  0293
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A CHANGE HAS BEEN MADE TO THE SUPED SYSMOD THEN MUST RESTOW*/
*   /* OR DELETE IT FROM CDS.                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0294
*   IF MATCHSW=ON                   /* IF CHANGE MADE        @Z67SP00*/
*     THEN                          /* THEN                  @Z67SP00*/
@RC00277 TM    MATCHSW,B'10000000'                                 0294
         BNO   @RF00294                                            0294
*     DO;                           /* CHECK FOR TYPE UPDATE @Z67SP00*/
*       IF IOPSBYNO=BLANK7          /* IF NO LASTSUP         @Z67SP00*/
*           &IOPPTFND(1)=IOPEOLST   /* AND NO SUBENTRIES     @Z67SP00*/
*         THEN                      /* THEN CAN              @Z67SP00*/
         CLC   IOPSBYNO(7,IOPPTR),@CC01587                         0296
         BNE   @RF00296                                            0296
         CLI   IOPPTFND(IOPPTR),255                                0296
         BNE   @RF00296                                            0296
*         IOPFUNCT=IOPSTOWD;        /* DELETE SYSMOD         @Z67SP00*/
         MVI   IOPFUNCT(IOPPTR),X'53'                              0297
*       ELSE                        /*                       @Z67SP00*/
*         DO;                       /*                       @Z67SP00*/
         B     @RC00296                                            0298
@RF00296 DS    0H                                                  0299
*           IOPFUNCT=IOPSTOWR;      /* MUST UPDATE SYSMOD    @Z67SP00*/
         MVI   IOPFUNCT(IOPPTR),X'54'                              0299
*           IOPDUMMP=OFF;           /* NOT DUMMY             @Z67SP00*/
         NI    IOPDUMMP(IOPPTR),B'11111011'                        0300
*           IOPSBYP=OFF;            /* NOT SUPED             @Z67SP00*/
         NI    IOPSBYP(IOPPTR),B'01111111'                         0301
*           IF IOPPTFND(1)=IOPEOLST /* IF NO SUBENTRIES      @Z67SP00*/
*             THEN                  /* THEN                  @Z67SP00*/
         CLI   IOPPTFND(IOPPTR),255                                0302
         BNE   @RF00302                                            0302
*             IOPDUMMP=ON;          /* DUMMY ONLY            @Z67SP00*/
         OI    IOPDUMMP(IOPPTR),B'00000100'                        0303
*           IF IOPSBYNO^=BLANK7     /* IF LASTSUP EXISTS     @Z67SP00*/
*             THEN                  /* THEN SET              @Z67SP00*/
@RF00302 CLC   IOPSBYNO(7,IOPPTR),@CC01587                         0304
         BE    @RF00304                                            0304
*             IOPSBYP=ON;           /* SUPBY PRESENT         @Z67SP00*/
         OI    IOPSBYP(IOPPTR),B'10000000'                         0305
*           ELSE                    /*                       @Z67SP00*/
*             DO;                   /*                       @Z67SP00*/
         B     @RC00304                                            0306
@RF00304 DS    0H                                                  0307
*               DO J=1 BY 1 WHILE(  /* LOOP THRU SUBENTRIES  @Z67SP00*/
*                     IOPPTFND(J)^=IOPEOLST/* TILL END       @Z67SP00*/
*                     &IOPPIND(J)^=IOPPSBY);/* OR SUPBY FOUND      0307
*                                                            @Z67SP00*/
         LA    J,1                                                 0307
         B     @DE00307                                            0307
@DL00307 DS    0H                                                  0308
*               END;                /*                       @Z67SP00*/
         AH    J,@CH00085                                          0308
@DE00307 LR    @10,J                                               0308
         MH    @10,@CH00434                                        0308
         SLR   @07,@07                                             0308
         IC    @07,IOPPTFND-9(@10,IOPPTR)                          0308
         CH    @07,@CH00623                                        0308
         BE    @DC00307                                            0308
         SLR   @07,@07                                             0308
         IC    @07,IOPPIND-9(@10,IOPPTR)                           0308
         CH    @07,@CH01067                                        0308
         BNE   @DL00307                                            0308
@DC00307 DS    0H                                                  0309
*               IF IOPPTFND(J)^=IOPEOLST/* IF SUPBY FOUND    @Z67SP00*/
*                 THEN              /*                       @Z67SP00*/
         LR    @10,J                                               0309
         MH    @10,@CH00434                                        0309
         SLR   @07,@07                                             0309
         IC    @07,IOPPTFND-9(@10,IOPPTR)                          0309
         CH    @07,@CH00623                                        0309
         BE    @RF00309                                            0309
*                 IOPSBYP=ON;       /*                       @Z67SP00*/
         OI    IOPSBYP(IOPPTR),B'10000000'                         0310
*             END;                  /* END NO LAST SUP       @Z67SP00*/
@RF00309 DS    0H                                                  0312
*         END;                      /* END NOT STOW DELETE   @Z67SP00*/
@RC00304 DS    0H                                                  0313
*       CALL HMASMIO(HMASMIOP);     /* UPDATE/DELETE SYSMOD  @Z67SP00*/
@RC00296 ST    IOPPTR,@AL00001                                     0313
         L     @15,@CV01598                                        0313
         LA    @01,@AL00001                                        0313
         BALR  @14,@15                                             0313
*       DELRC=MAX(DELRC,IOPRETRN);  /* SAVE RC                       */
         SLR   @10,@10                                             0314
         IC    @10,IOPRETRN(,IOPPTR)                               0314
         CR    DELRC,@10                                           0314
         BNL   *+6
         LR    DELRC,@10                                           0314
*     END;                          /* END MUST UPDATE               */
*   RETURN CODE(DELRC);             /*                       @Z67SP00*/
@RF00294 LR    @15,DELRC                                           0316
         L     @14,@SA00004                                        0316
         LM    @00,@12,@SA00004+8                                  0316
         BR    @14                                                 0316
*   END SUPDEL;                     /*                       @Z67SP00*/
*                                                                  0318
*   /*****************************************************************/
*   /*                                                               */
*   /* A CHECK IS DONE TO INSURE THAT ALL OF THE ELEMENT IN THE      */
*   /* SUPERSEEDED PTF ARE CONTAINED IN THE SUPERCEEDING PTF.        */
*   /*                                                       @ZD00005*/
*   /* INPUTS: AN ELEMENT FROM WITHIN THE CDS PTF ENTRY OF THE       */
*   /* SUPERSEEDED PTF (THE ROUTINE IS CALLED FOR EACH OF THESE      */
*   /* ELEMENTS                                              @ZD00005*/
*   /* THE ICT ENTRY FOR THE SUPERCEEDING PTF WHICH POINTS TO THE    */
*   /* LIST OF ELEMENTS IN THE PTF.                          @ZD00005*/
*   /* OUTPUT: RETURN CODE- 0 INDICATES THAT THIS ELEMENT OF THE     */
*   /* SUPPERSEEDED PTF IS ALSO IN THE SUPERCEEDING PTF      @ZD00005*/
*   /* 4 - INDICATED THE THIS ELEMENT WAS NOT IN THE SUPERSEEDING    */
*   /* PTF.                                                  @ZD00005*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0318
*SUPELCHK:                          /*                       @ZD00005*/
*   PROC(ELMPTF,ELMPNTRY);          /*                       @ZD00005*/
SUPELCHK STM   @14,@12,@SA00005                                    0318
         MVC   @PC00005(8),0(@01)                                  0318
*   DECLARE                                                        0319
*     ELMPTF CHAR(8);               /* SUPERSEDED PTF        @ZD00005*/
*   DECLARE                                                        0320
*     1 ELMPNTRY,                   /* ELEMENT OF THIS PTF   @ZD00005*/
*       3 ELMPMODS CHAR(8),         /* ELEMENT NAME          @ZD00005*/
*       3 ELMPIND CHAR(1);          /* ELEMENT TYPE          @ZD00005*/
*   DECLARE                                                        0321
*     ELMCODE FIXED(8);             /* ERROR CODE            @ZD00005*/
*   DECLARE                                                        0322
*     E FIXED(31);                  /* LOOP VARIABLE         @ZD00005*/
*   RFY                                                            0323
*     ICTPTF BASED(ADICTPTF);       /* SPECIFIC ICT PTF      @ZD00005*/
*   RFY                                                            0324
*     ICTIXPF BASED(ICTPCHN(1));    /* ITS PTR TO MOD LIST   @ZD00005*/
*   RFY                                                            0325
*     ICTMOD BASED(ICTIXP(E));      /* ICT MOD BASED ON PTF  @ZD00005*/
*   ELMCODE=PTFWARN;                /* DEFAULT ERROR CODE    @ZD00005*/
         LA    ELMCODE,4                                           0326
*   DO E=1 BY 1 WHILE ICTIXP(E)^=ICTENDIX;/* ELEMENT LOOP    @ZD00005*/
         LA    E,1                                                 0327
         B     @DE00327                                            0327
@DL00327 DS    0H                                                  0328
*     IF ICTMNAME(1)=ELMPMODS       /* NAME MATCH            @ZD00005*/
*       THEN                        /*                       @Z67SP00*/
         LR    @10,E                                               0328
         SLA   @10,2                                               0328
         L     @05,ICTPCHN(,ADICTPTF)                              0328
         AL    @05,@CF01662                                        0328
         L     @10,ICTIXP(@10,@05)                                 0328
         L     @05,@PC00005+4                                      0328
         CLC   ICTMNAME(8,@10),ELMPMODS(@05)                       0328
         BNE   @RF00328                                            0328
*       DO;                         /* CHECK FOR TYPE MATCH  @ZD00005*/
*         IF                        /* MOD TYPE              @ZD00005*/
*             ((ICTMMOD(1)=ON)×(ICTMASM(1)=ON)/*             @Z67SP00*/
*             &(ELMPIND=IOPPMOD     /*                       @Z67SP00*/
*             ×ELMPIND=IOPPRMOD     /*                       @ZD00005*/
*             ×ELMPIND=IOPPZAP      /*                       @ZD00005*/
*             ×ELMPIND=IOPPRZAP     /*                       @ZD00005*/
*             ×ELMPIND=IOPPXPD      /*                       @ZD00005*/
*             ×ELMPIND=IOPPRXPD))   /*                       @ZD00005*/
*           THEN                    /*                       @ZD00005*/
         TM    ICTMMOD(@10),B'10000000'                            0330
         BO    @RT00330                                            0330
         TM    ICTMASM(@10),B'01000000'                            0330
         BNO   @RF00330                                            0330
         CLI   ELMPIND(@05),1                                      0330
         BE    @RT00330                                            0330
         CLI   ELMPIND(@05),81                                     0330
         BE    @RT00330                                            0330
         CLI   ELMPIND(@05),2                                      0330
         BE    @RT00330                                            0330
         CLI   ELMPIND(@05),82                                     0330
         BE    @RT00330                                            0330
         CLI   ELMPIND(@05),3                                      0330
         BE    @RT00330                                            0330
         CLI   ELMPIND(@05),83                                     0330
         BNE   @RF00330                                            0330
@RT00330 DS    0H                                                  0331
*           ELMCODE=ZERO;           /*                       @ZD00005*/
         SLR   ELMCODE,ELMCODE                                     0331
*         IF                        /* ZAP TYPE              @ZD00005*/
*             ((ICTMZAP(1)=ON)×(ICTMASM(1)=ON)×/*            @Z67SP00*/
*             (ICTMXPND(1)=ON)&(ELMPIND=IOPPZAP/*            @Z67SP00*/
*             ×ELMPIND=IOPPRZAP     /*                       @ZD00005*/
*             ×ELMPIND=IOPPXPD      /*                       @ZD00005*/
*             ×ELMPIND=IOPPRXPD))   /*                       @ZD00005*/
*           THEN                    /*                       @ZD00005*/
@RF00330 LR    @10,E                                               0332
         SLA   @10,2                                               0332
         L     @05,ICTPCHN(,ADICTPTF)                              0332
         AL    @05,@CF01662                                        0332
         L     @10,ICTIXP(@10,@05)                                 0332
         TM    ICTMZAP(@10),B'01100000'                            0332
         BNZ   @RT00332                                            0332
         TM    ICTMXPND(@10),B'00010000'                           0332
         BNO   @RF00332                                            0332
         L     @10,@PC00005+4                                      0332
         CLI   ELMPIND(@10),2                                      0332
         BE    @RT00332                                            0332
         CLI   ELMPIND(@10),82                                     0332
         BE    @RT00332                                            0332
         CLI   ELMPIND(@10),3                                      0332
         BE    @RT00332                                            0332
         CLI   ELMPIND(@10),83                                     0332
         BNE   @RF00332                                            0332
@RT00332 DS    0H                                                  0333
*           ELMCODE=ZERO;           /*                       @ZD00005*/
         SLR   ELMCODE,ELMCODE                                     0333
*         IF                        /* MACRO TYPE            @ZD00005*/
*             (ICTMMACR(1)=ON&(ELMPIND=IOPPMACU/*            @ZD00005*/
*             ×ELMPIND=IOPPRMCU     /*                       @ZD00005*/
*             ×ELMPIND=IOPPMACR     /*                       @ZD00005*/
*             ×ELMPIND=IOPPRMCR))   /*                       @ZD00005*/
*           THEN                    /*                       @ZD00005*/
@RF00332 LR    @10,E                                               0334
         SLA   @10,2                                               0334
         L     @05,ICTPCHN(,ADICTPTF)                              0334
         AL    @05,@CF01662                                        0334
         L     @10,ICTIXP(@10,@05)                                 0334
         TM    ICTMMACR(@10),B'00001000'                           0334
         BNO   @RF00334                                            0334
         L     @10,@PC00005+4                                      0334
         CLI   ELMPIND(@10),5                                      0334
         BE    @RT00334                                            0334
         CLI   ELMPIND(@10),85                                     0334
         BE    @RT00334                                            0334
         CLI   ELMPIND(@10),4                                      0334
         BE    @RT00334                                            0334
         CLI   ELMPIND(@10),84                                     0334
         BNE   @RF00334                                            0334
@RT00334 DS    0H                                                  0335
*           ELMCODE=ZERO;           /*                       @ZD00005*/
         SLR   ELMCODE,ELMCODE                                     0335
*         IF                        /* MACRO UPDATE TYPE     @ZD00005*/
*             (ICTMMACU(1)=ON&(ELMPIND=IOPPMACU/*            @ZD00005*/
*             ×ELMPIND=IOPPRMCU))   /*                       @ZD00005*/
*           THEN                    /*                       @ZD00005*/
@RF00334 LR    @10,E                                               0336
         SLA   @10,2                                               0336
         L     @05,ICTPCHN(,ADICTPTF)                              0336
         AL    @05,@CF01662                                        0336
         L     @10,ICTIXP(@10,@05)                                 0336
         TM    ICTMMACU(@10),B'00000100'                           0336
         BNO   @RF00336                                            0336
         L     @10,@PC00005+4                                      0336
         CLI   ELMPIND(@10),5                                      0336
         BE    @RT00336                                            0336
         CLI   ELMPIND(@10),85                                     0336
         BNE   @RF00336                                            0336
@RT00336 DS    0H                                                  0337
*           ELMCODE=ZERO;           /*                       @ZD00005*/
         SLR   ELMCODE,ELMCODE                                     0337
*         IF                        /* SOURCE TYPE           @ZD00005*/
*             (ICTMSRCR(1)=ON&(ELMPIND=IOPPSRCR/*            @ZD00005*/
*             ×ELMPIND=IOPPRSCR     /*                       @ZD00005*/
*             ×ELMPIND=IOPPSRCU     /*                       @ZD00005*/
*             ×ELMPIND=IOPPRSCU))   /*                       @ZD00005*/
*           THEN                    /*                       @ZD00005*/
@RF00336 LR    @10,E                                               0338
         SLA   @10,2                                               0338
         L     @05,ICTPCHN(,ADICTPTF)                              0338
         AL    @05,@CF01662                                        0338
         L     @10,ICTIXP(@10,@05)                                 0338
         TM    ICTMSRCR(@10),B'00000010'                           0338
         BNO   @RF00338                                            0338
         L     @10,@PC00005+4                                      0338
         CLI   ELMPIND(@10),6                                      0338
         BE    @RT00338                                            0338
         CLI   ELMPIND(@10),86                                     0338
         BE    @RT00338                                            0338
         CLI   ELMPIND(@10),7                                      0338
         BE    @RT00338                                            0338
         CLI   ELMPIND(@10),87                                     0338
         BNE   @RF00338                                            0338
@RT00338 DS    0H                                                  0339
*           ELMCODE=ZERO;           /*                       @ZD00005*/
         SLR   ELMCODE,ELMCODE                                     0339
*         IF                        /* SOURCE UPDATE TYPE    @ZD00005*/
*             (ICTMSRCU(1)=ON&(ELMPIND=IOPPSRCU/*            @ZD00005*/
*             ×ELMPIND=IOPPRSCU))   /*                       @ZD00005*/
*           THEN                    /*                       @ZD00005*/
@RF00338 LR    @10,E                                               0340
         SLA   @10,2                                               0340
         L     @05,ICTPCHN(,ADICTPTF)                              0340
         AL    @05,@CF01662                                        0340
         L     @10,ICTIXP(@10,@05)                                 0340
         TM    ICTMSRCU(@10),B'00000001'                           0340
         BNO   @RF00340                                            0340
         L     @10,@PC00005+4                                      0340
         CLI   ELMPIND(@10),7                                      0340
         BE    @RT00340                                            0340
         CLI   ELMPIND(@10),87                                     0340
         BNE   @RF00340                                            0340
@RT00340 DS    0H                                                  0341
*           ELMCODE=ZERO;           /*                       @ZD00005*/
         SLR   ELMCODE,ELMCODE                                     0341
*       END;                        /*                       @ZD00005*/
@RF00340 DS    0H                                                  0343
*   END;                            /* END LOOP              @ZD00005*/
*                                                                  0343
@RF00328 AH    E,@CH00085                                          0343
@DE00327 LR    @10,E                                               0343
         SLA   @10,2                                               0343
         L     @05,ICTPCHN(,ADICTPTF)                              0343
         AL    @05,@CF01662                                        0343
         L     @10,ICTIXP(@10,@05)                                 0343
         CL    @10,ICTENDIX                                        0343
         BNE   @DL00327                                            0343
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ELEMENT NOT IN SUPERSEEDING PTF, WRITE WARNING MSG@ZD00005 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0344
*   IF ELMCODE=PTFWARN              /*                       @ZD00005*/
*     THEN                          /*                       @Z67SP00*/
         CH    ELMCODE,@CH00037                                    0344
         BNE   @RF00344                                            0344
*     DO;                           /*                       @ZD00005*/
*       MGPCLEAR=''B;               /* PTF X WHICH SUPS      @ZD00005*/
         XC    MGPCLEAR(6),MGPCLEAR                                0346
*       MGPMGNO1=HMA325I;           /* SUPS PTFY DOES NOT    @ZD00005*/
         MVC   MGPMGNO1(2),@CH01584                                0347
*       MGPVARPT(1)=ADDR(ICTPTFS(1));/* SUPERSEDING PTF      @ZD00005*/
         ST    ADICTPTF,MGPVARPT                                   0348
*       MGPVARPT(2)=ADDR(ELMPTF);   /* SUPERSEDED PTF        @ZD00005*/
         L     @10,@PC00005                                        0349
         ST    @10,MGPVARPT+4                                      0349
*       MGPVARPT(3)=ADDR(ELMPMODS); /*                       @ZD00005*/
         L     @10,@PC00005+4                                      0350
         ST    @10,MGPVARPT+8                                      0350
*       MGPTYPE=MGPWARN;            /*                       @ZD00005*/
         MVI   MGPTYPE,X'02'                                       0351
*       CALL HMASMMSG(HMASMMGP);    /* CONTAIN ELEMENT Z     @ZD00005*/
         L     @15,@CV01600                                        0352
         LA    @01,@AL00352                                        0352
         BALR  @14,@15                                             0352
*     END;                          /*                       @ZD00005*/
*   RETURN CODE(ELMCODE);           /*                       @ZD00005*/
@RF00344 LR    @15,ELMCODE                                         0354
         L     @14,@SA00005                                        0354
         LM    @00,@12,@SA00005+8                                  0354
         BR    @14                                                 0354
*   END SUPELCHK;                   /*                       @ZD00005*/
*   END HMASMSUP                    /*                       @Z67SP00*/
*                                                                  0356
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMVLP)                                       */
*                                                                  0356
*       ;                                                          0356
@DATA    DS    0H
@CH00085 DC    H'1'
@CH00037 DC    H'4'
@CH00434 DC    H'9'
@CH00175 DC    H'12'
@CH01584 DC    H'126'
@CH00860 DC    H'160'
@CH01067 DC    H'170'
@CH00623 DC    H'255'
         DS    0F
@AL00223 DC    A(HMASMVLP)             LIST WITH   1 ARGUMENT(S)
@AL00352 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    15F
@SA00003 DS    15F
@SA00004 DS    0F
@SA00005 DS    0F
@PC00005 EQU   @SA00005+60
         DS    17F
@AL00001 DS    2A
         DS    0F
@CF01657 DC    F'-8'
@CF01662 DC    F'-4'
@CV01598 DC    V(HMASMIO)
@CV01599 DC    V(HMASMVLU)
@CV01600 DC    V(HMASMMSG)
         DS    0D
@TS00001 DS    CL8
@CC01589 DC    C'SUPBY           '
@CC01587 DC    C'       '
         DS    CL1
ICTENDCH DC    X'FFFFFFFF'
HMASMMGP DS    CL28
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00216 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00217 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL16
         ORG   MGPVAR
MGPVARPT DS    4A
         ORG   HMASMMGP+28
HMASMVLP DS    CL52
         ORG   HMASMVLP
VLPFUNCT DS    FL1
VLPRETRN DS    FL1
VLPFLAG  DS    BL1
         ORG   VLPFLAG
VLPFMSG  DS    BL1
VLPFRSV  EQU   VLPFLAG+0
         ORG   HMASMVLP+3
VLPDLEN  DS    FL1
VLPSNTRY DS    CL9
         ORG   VLPSNTRY
VLPDATA  DS    CL8
VLPTYPE  DS    FL1
         ORG   HMASMVLP+13
@NM00218 DS    CL3
VLPLPTR  DS    AL4
VLPMTYPE DS    CL8
VLPMNAME DS    CL8
VLPSTYPE DS    CL16
         ORG   HMASMVLP+52
SUPBITS  DS    BL1
         ORG   SUPBITS
MATCHSW  DS    BL1
@NM00219 EQU   SUPBITS+0
         ORG   SUPBITS+1
         DS    CL1
PATCHSUP DS    CL80
         ORG   PATCHSUP
@NM00220 DC    80X'FF'
         ORG   PATCHSUP+80
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
E        EQU   @02
ELMCODE  EQU   @03
DELRC    EQU   @06
K        EQU   @05
J        EQU   @03
RESRC    EQU   @03
C        EQU   @05
APACRC   EQU   @03
B        EQU   @05
A        EQU   @06
SUPRTNCD EQU   @03
ADICTPTF EQU   @04
IOPPTR   EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00043 EQU   HMASMIOP+12
@NM00044 EQU   @NM00043
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00154 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPFLG8 EQU   ICTPTF+14
ICTPFLG9 EQU   ICTPTF+15
@NM00181 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTIXP   EQU   ICTIXPF
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTSUPND EQU   ICTSUPNM
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMFLG2 EQU   ICTMOD+8
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMMOD  EQU   ICTMMODR
ICTMASM  EQU   ICTMMODR
ICTMZAP  EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMSRCU EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTMFLG4 EQU   ICTMOD+11
ICTMFLG5 EQU   ICTMOD+12
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
CCADSIDA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
PARMPTF  EQU   0
ELMPTF   EQU   0
ELMPNTRY EQU   0
ELMPMODS EQU   ELMPNTRY
ELMPIND  EQU   ELMPNTRY+8
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00050 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00061 EQU   IOPUDATA
@NM00062 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPNTLVL EQU   IOPASMDR
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00071 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00082 EQU   IOPSRCDR+1
@NM00084 EQU   @NM00082+7
@NM00088 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00092 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00098 EQU   IOPMODDR+1
@NM00100 EQU   @NM00098+7
@NM00104 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00108 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00119 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00126 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPDUMMP EQU   IOPFLGS5
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPSBYP  EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPDBYNO EQU   IOPPTFDR+6
IOPSBYNO EQU   IOPPTFDR+13
IOPPTFFX EQU   IOPPTFNT+24
@NM00135 EQU   IOPPTFFX
@NM00136 EQU   @NM00135
IOPPDTES EQU   IOPPTFFX+41
@NM00139 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPFMID EQU   IOPPTFFX+73
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPPTFND EQU   IOPPMODS
IOPPIND  EQU   IOPPNTRY+8
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPSBYNM EQU   IOPSBYNT
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00164 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00164
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00168 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00168
IOPBFTB1 EQU   IOPBFTB0
ICTENDIX EQU   ICTENDCH
ICTENDNT EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00170 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00169 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00167 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00166 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00165 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00163 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00162 EQU   IOPPTSFX+35
@NM00161 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00160 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00159 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00158 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00157 EQU   IOPQFMDR
@NM00153 EQU   IOPQSMDR
@NM00152 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
@NM00151 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00150 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00149 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00148 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00147 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00146 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00145 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00144 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00143 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00142 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00141 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
@NM00140 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00139+3
IOPRECD  EQU   @NM00139
@NM00138 EQU   IOPPTFFX+8
@NM00137 EQU   @NM00135+7
IOPPRELN EQU   @NM00136
@NM00134 EQU   IOPPTFDR+20
@NM00133 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00132 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
@NM00131 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00130 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00129 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00128 EQU   @NM00126+7
@NM00127 EQU   @NM00126
@NM00125 EQU   IOPSYSDR+5
@NM00124 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00123 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00122 EQU   IOPDLBFX+8
@NM00121 EQU   @NM00119+7
@NM00120 EQU   @NM00119
@NM00118 EQU   IOPDLBDR+1
@NM00117 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00116 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00115 EQU   IOPMODFX+12
@NM00114 EQU   IOPMODF4
@NM00113 EQU   IOPMODF3
@NM00112 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00111 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00110 EQU   @NM00108+7
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR+17
@NM00106 EQU   @NM00104+7
@NM00105 EQU   @NM00104
@NM00103 EQU   @NM00100
@NM00102 EQU   @NM00100
@NM00101 EQU   @NM00100
@NM00099 EQU   @NM00098
@NM00097 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00096 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00095 EQU   IOPSRCFX+8
@NM00094 EQU   @NM00092+7
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00090 EQU   @NM00088+7
@NM00089 EQU   @NM00088
@NM00087 EQU   @NM00084
@NM00086 EQU   @NM00084
@NM00085 EQU   @NM00084
@NM00083 EQU   @NM00082
@NM00081 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00080 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00079 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00078 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00077 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00076 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00075 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00073 EQU   @NM00071+7
@NM00072 EQU   @NM00071
@NM00070 EQU   IOPLMDDR+6
@NM00069 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00068 EQU   IOPLMDF4
@NM00067 EQU   IOPLMDF3
@NM00066 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00065 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00064 EQU   IOPLMDDR
@NM00063 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPALLOC EQU   @NM00062+4
IOPUSED  EQU   @NM00062
IOPTPSEQ EQU   @NM00061+8
IOPVLSER EQU   @NM00061+2
IOPBLKSI EQU   @NM00061
IOPCQMAX EQU   IOPCQMAP+12
@NM00060 EQU   IOPCQMAP+11
@NM00059 EQU   IOPCQMAP+8
@NM00058 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00057 EQU   IOPSCMAP+11
@NM00056 EQU   IOPSCMAP+8
@NM00055 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00054 EQU   IOPNTMAX+11
@NM00053 EQU   IOPNTMAX+8
@NM00052 EQU   IOPNTMAX
@NM00051 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00050+5
IOPIPTF3 EQU   @NM00050
@NM00215 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00214 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTTALND EQU   ICTTALNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00213 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
ICTIXM   EQU   ICTIXMF
@NM00212 EQU   ICTMOD+128
ICTMICHA EQU   ICTMOD+108
ICTPPTR  EQU   ICTMOD+96
@NM00211 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00210 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMSYSL EQU   ICTMOD+56
ICTMDSTL EQU   ICTMOD+48
ICTMASLB EQU   ICTMOD+40
ICTTOLIB EQU   ICTMOD+32
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00209 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00208 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00207 EQU   ICTMLEP4
@NM00206 EQU   ICTMLEP3
@NM00205 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00204 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00203 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00202 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
ICTMISEL EQU   ICTMFLG4
@NM00201 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
@NM00200 EQU   ICTMFLG2
@NM00199 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMPROC EQU   ICTMFLG2
ICTMEND  EQU   ICTMNAME
@NM00198 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00197 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00196 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00195 EQU   ICTCSRST
@NM00194 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00193 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00192 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00191 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00190 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00189 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00188 EQU   ICTSUPNT+7
@NM00187 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00186 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00185 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00184 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
@NM00183 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00182 EQU   @NM00181
ICTPRQBY EQU   @NM00181
ICTPRQOK EQU   @NM00181
ICTPRQCK EQU   @NM00181
@NM00180 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00179 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00178 EQU   ICTPFLG4
@NM00177 EQU   ICTPFLG4
@NM00176 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00175 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00174 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00173 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00172 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00171 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTPEND  EQU   ICTPTFS
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00156 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00155 EQU   @NM00154+7
IOPQSMFM EQU   @NM00154
@NM00074 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00049 EQU   IOPUSERL
@NM00048 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00047 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00046 EQU   @NM00043+10
IOPSEQNO EQU   @NM00043+8
@NM00045 EQU   @NM00044+7
IOPPTFNM EQU   @NM00044
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
CCATBLPA EQU   @NM00009+12
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00212 EQU   @RC00201
@RF00225 EQU   @RC00201
@ENDDATA EQU   *
         END   HMASMSUP,(C'PLS2128',0802,78334)
