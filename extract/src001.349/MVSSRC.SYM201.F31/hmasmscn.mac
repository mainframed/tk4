         TITLE 'HMASMSCN- GENERAL SCAN ROUTINE'
HMASMSCN CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMSCN  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @10,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@10                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @12,@01                                             0001
         USING @DATD,@12                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @12,8(,@13)                                         0001
         LR    @13,@12                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*   SCPWKAR=ADDR(REGSAV);           /* PTR TO WORK AREA              */
         L     @11,@PC00001                                        0043
         LA    @02,REGSAV                                          0043
         ST    @02,SCPWKAR(,@11)                                   0043
*   SWITCHES=ZERO;                  /* ZERO SWITCHES                 */
         MVI   SWITCHES,X'00'                                      0044
*   SCTBLPTR=SCPSRCH;               /* PTR TO SEARCH ARGUMENT        */
         L     SCTBLPTR,SCPSRCH(,@11)                              0045
*   EORPTR=SCPCHAR+SCPINLN;         /* CALC PTR TO EOR               */
         LH    EORPTR,SCPINLN(,@11)                                0046
         AL    EORPTR,SCPCHAR(,@11)                                0046
*   ADIOPRM=SCPIOPAD;               /* SET I/O EXIT PARM     @Z67SP00*/
         MVC   ADIOPRM(4),SCPIOPAD(@11)                            0047
*   ADSCP=ADDR(HMASMSCP);           /* SET PTR BACK TO SCP   @Z67SP00*/
*                                                                  0048
         ST    @11,ADSCP                                           0048
*   /*****************************************************************/
*   /*                                                               */
*   /* ADJUST PTR TO INPUT STRING                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0049
*SCAN1:                                                            0049
*   SCANREG=SCPCHAR;                /* SET SCAN PTR                  */
*                                                                  0049
SCAN1    L     @11,@PC00001                                        0049
         L     SCANREG,SCPCHAR(,@11)                               0049
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR ENF OF RECORD CONDITION                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0050
*SCAN4:                                                            0050
*   IF SCANREG=EORPTR               /* IF END OF RECORD      @Z67SP00*/
*     THEN                          /* THEN CHECK TO SEE IF  @Z67SP00*/
SCAN4    CR    SCANREG,EORPTR                                      0050
         BNE   @RF00050                                            0050
*     DO;                           /* NEXT RCD REQUIRED     @Z67SP00*/
*       IF INCOMENT=OFF             /* IF NOT COMMENT        @Z67SP00*/
*           &DSCCONT=OFF            /* AND CONT CHAR PRESENT @Z67SP00*/
*         THEN                      /* YES - GO TO END IF COMMENT    */
         TM    INCOMENT,B'10000000'                                0052
         BNZ   @RF00052                                            0052
         TM    DSCCONT(SCTBLPTR),B'00010000'                       0052
         BNZ   @RF00052                                            0052
*         DO;                       /* CHECK FOR CONT        @Z67SP00*/
*           IF(SCPCONT=ON           /* CHECK FOR CONTINUATION        */
*               &STRING(1)=BLANK)   /* AND NO CONT CHAR      @Z67SP00*/
*               ×                   /* OR                    @Z67SP00*/
*               SCPNOCT=OFF         /* IF NO CONT EVER       @Z67SP00*/
*             THEN                  /* THEN                  @Z67SP00*/
         L     @11,@PC00001                                        0054
         TM    SCPCONT(@11),B'10000000'                            0054
         BNO   @GL00002                                            0054
         CLI   STRING(SCANREG),C' '                                0054
         BE    @RT00054                                            0054
@GL00002 L     @11,@PC00001                                        0054
         TM    SCPNOCT(@11),B'01000000'                            0054
         BZ    @RT00054                                            0054
*             GO TO GOOD;           /* STOP SCAN WITH RC=0   @Z67SP00*/
*         END;                      /* END CONT CHECK        @Z67SP00*/
*                                                                  0056
*       /*************************************************************/
*       /*                                                           */
*       /* READ NEXT RECORD TO SCAN                          @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0057
*       IF SCPIORTN=0               /* IF NO IO EXIT         @Z67SP00*/
*         THEN                      /* THEN NO CONTINUED             */
@RF00052 L     @11,@PC00001                                        0057
         L     @11,SCPIORTN(,@11)                                  0057
         LTR   @11,@11                                             0057
         BZ    @RT00057                                            0057
*         GO TO GOOD;               /* CARDS                         */
*       EXITADDR=SCPIORTN;          /* ADDR OF USER I/O RTN          */
         LR    EXITADDR,@11                                        0059
*       CALL EXIT;                  /* CALL IO ROUTINE               */
         BAL   @14,EXIT                                            0060
*       GO TO SCAN1;                /* CONTINUE SCANNING             */
         B     SCAN1                                               0061
*     END;                          /* END END OF RCD GROUP  @Z67SP00*/
*                                                                  0062
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR COMMENT START AND END                       @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0063
*   IF INCOMENT=ON                  /* ARE WE IN A COMMENT FIELD?    */
*     THEN                          /* YES - CHECK FOR END OF COMNT  */
@RF00050 TM    INCOMENT,B'10000000'                                0063
         BNO   @RF00063                                            0063
*     IF STRING(1:2)=ASTSLASH       /* END OF COMMENT?               */
*       THEN                        /* YES - INDICATE DONE           */
         CLC   STRING(2,SCANREG),@CC00138                          0064
         BNE   @RF00064                                            0064
*       DO;                         /*                               */
*         INCOMENT=OFF;             /* NO MORE COMMENT               */
         NI    INCOMENT,B'01111111'                                0066
*         SCANREG=SCANREG+2;        /* BUMP PAST ASTERIK SLASH       */
         LA    SCANREG,2(,SCANREG)                                 0067
*         GO TO SCAN4;              /* CONTINUE SCANNING             */
         B     SCAN4                                               0068
*       END;                        /*                               */
*     ELSE                          /* OTHERWISE - BUMP TILL ASTSLASH*/
*       DO;                         /*                       @Z67SP00*/
@RF00064 DS    0H                                                  0071
*         SCANREG=SCANREG+1;        /* BUMP TO NEXT CHAR     @Z67SP00*/
         LA    SCANREG,1(,SCANREG)                                 0071
*         GO TO SCAN4;              /* CONTINUE SCAN         @Z67SP00*/
         B     SCAN4                                               0072
*       END;                        /* END NOT COMMENT END   @Z67SP00*/
*   IF SCPCOMNT=ON                  /* SHOULD CHECK FOR COMMENTS?    */
*     THEN                          /* YES - CHECK FOR COMMENT       */
@RF00063 L     @11,@PC00001                                        0074
         TM    SCPCOMNT(@11),B'00100000'                           0074
         BNO   @RF00074                                            0074
*     IF STRING(1:2)=SLASHAST       /* IS THIS SLASH ASTERISK?       */
*       THEN                        /* YES - INDICATE COMMENT        */
         CLC   STRING(2,SCANREG),@CC00136                          0075
         BNE   @RF00075                                            0075
*       DO;                                                        0076
*         INCOMENT=ON;              /* INDICATE LOOKING AT COMMENT   */
         OI    INCOMENT,B'10000000'                                0077
*         SCANREG=SCANREG+2;        /* BUMP PAST IT                  */
         LA    SCANREG,2(,SCANREG)                                 0078
*         GO TO SCAN4;              /* CONTINUE                      */
         B     SCAN4                                               0079
*       END;                                                       0080
*                                                                  0080
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR COMMA AND BLANK SIGNIFICANCE                @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0081
*   IF(DSCCOMMA=OFF&STRING(1)=COMMA)/* IF COMMA AND COMMA NOT TO BE
*                                      SCANNED               @Z67SP00*/
*       ×(DSCBLANK=OFF&STRING(1)=BLANK)/* IF BLANK AND BLANK NOT TO
*                                      BE SCANNED            @Z67SP00*/
*     THEN                          /* NO - THEN SKIP PAST IF THIS   */
@RF00075 DS    0H                                                  0081
@RF00074 TM    DSCCOMMA(SCTBLPTR),B'00001000'                      0081
         BNZ   @GL00004                                            0081
         CLI   STRING(SCANREG),C','                                0081
         BE    @RT00081                                            0081
@GL00004 TM    DSCBLANK(SCTBLPTR),B'00100000'                      0081
         BNZ   @RF00081                                            0081
         CLI   STRING(SCANREG),C' '                                0081
         BNE   @RF00081                                            0081
@RT00081 DS    0H                                                  0082
*     DO;                           /*                       @Z67SP00*/
*       SCANREG=SCANREG+1;          /* MOVE TO NEXT CHARACTER        */
         LA    SCANREG,1(,SCANREG)                                 0083
*       GO TO SCAN4;                /* CONTINUE SCAN                 */
         B     SCAN4                                               0084
*     END;                          /*                       @Z67SP00*/
*                                                                  0085
*   /*****************************************************************/
*   /*                                                               */
*   /* STRING FOUND. SET PTR TO IT AND CHECK DSCAN KEYS      @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0086
*   SCPCHAR=SCANREG;                /* UPDATE SCAN PTR               */
@RF00081 L     @11,@PC00001                                        0086
         ST    SCANREG,SCPCHAR(,@11)                               0086
*SCAN5:                                                            0087
*   IF DSCKEYLN=0                   /* IF PARM ENTRY, CONTIN @Z67SP00*/
*     THEN                          /* SCAN                          */
SCAN5    CLI   DSCKEYLN(SCTBLPTR),0                                0087
         BE    @RT00087                                            0087
*     GO TO SCAN8;                                                 0088
*   IF STRING(1:DSCKEYLN)=DSCKEY(1:DSCKEYLN)/* MATCH?        @Z67SP00*/
*     THEN                                                         0089
         SLR   @11,@11                                             0089
         IC    @11,DSCKEYLN(,SCTBLPTR)                             0089
         BCTR  @11,0                                               0089
         EX    @11,@SC00183                                        0089
         BE    @RT00089                                            0089
*     GO TO SCAN6;                                                 0090
*   IF DSCALTAD=0                   /* IF ALT KEYWORD        @Z67SP00*/
*     THEN                          /* TRY IT. OTHERWISE, SYNTAX     */
         L     @11,DSCALTAD(,SCTBLPTR)                             0091
         LTR   @11,@11                                             0091
         BZ    @RT00091                                            0091
*     GO TO BAD;                    /* ERROR                         */
*   SCTBLPTR=DSCALTAD;              /* UPDATE SCAN PTR       @Z67SP00*/
         LR    SCTBLPTR,@11                                        0093
*   GO TO SCAN5;                                                   0094
         B     SCAN5                                               0094
*                                                                  0095
*   /*****************************************************************/
*   /*                                                               */
*   /* MATCH WITH INPUT FOUND - USER ROUTINE OR CONTINUE             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0095
*SCAN6:                             /*                               */
*   LENGTH=DSCKEYLN;                /* LENGTH TO BUMP PTR    @Z67SP00*/
SCAN6    SLR   LENGTH,LENGTH                                       0095
         IC    LENGTH,DSCKEYLN(,SCTBLPTR)                          0095
*   IF DSCRTAD^=0                   /* IF USER RTN PRESENT   @Z67SP00*/
*       &(SCPNORT=OFF               /* AND OK TO CALL IT     @Z67SP00*/
*       ×DSCCALRT=ON)               /*                       @Z67SP00*/
*     THEN                          /* CALL IT               @Z67SP00*/
         ICM   @11,15,DSCRTAD(SCTBLPTR)                            0096
         BZ    @RF00096                                            0096
         L     @11,@PC00001                                        0096
         TM    SCPNORT(@11),B'00000100'                            0096
         BZ    @RT00096                                            0096
         TM    DSCCALRT(SCTBLPTR),B'00000010'                      0096
         BNO   @RF00096                                            0096
@RT00096 DS    0H                                                  0097
*     DO;                           /*                               */
*       SCPPMLN=DSCKEYLN;           /* SET LENGTH FOR ROUT   @Z67SP00*/
         L     @11,@PC00001                                        0098
         SLR   @02,@02                                             0098
         IC    @02,DSCKEYLN(,SCTBLPTR)                             0098
         STH   @02,SCPPMLN(,@11)                                   0098
*       EXITADDR=DSCRTAD;           /* SET ROUTINE ADDRESS   @Z67SP00*/
         L     EXITADDR,DSCRTAD(,SCTBLPTR)                         0099
*       CALL EXIT;                  /* GO TO USER EXIT               */
         BAL   @14,EXIT                                            0100
*       LENGTH=SCPPMLN;             /* SET LENGTH IN CASE UPDATED    */
         L     @11,@PC00001                                        0101
         LH    LENGTH,SCPPMLN(,@11)                                0101
*     END;                                                         0102
*SCAN7:                                                            0103
*   SCANREG=SCPCHAR;                /* GET SCAN PTR                  */
@RF00096 DS    0H                                                  0103
SCAN7    L     @11,@PC00001                                        0103
         L     SCANREG,SCPCHAR(,@11)                               0103
*   SCANREG=SCANREG+LENGTH;         /* INCREMENT PAST KEY            */
         ALR   SCANREG,LENGTH                                      0104
*   SCPCHAR=SCANREG;                /* RESET PTR                     */
         ST    SCANREG,SCPCHAR(,@11)                               0105
*   IF DSCSUCAD=0                   /* IF NO SUCCESSOR       @Z67SP00*/
*     THEN                          /* END OF SCAN                   */
         L     @02,DSCSUCAD(,SCTBLPTR)                             0106
         LTR   @02,@02                                             0106
         BZ    @RT00106                                            0106
*     GO TO GOOD;                                                  0107
*   IF SCPNOSUC=OFF                 /* IF OK TO GO TO SUCC   @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         TM    SCPNOSUC(@11),B'00001000'                           0108
         BNZ   @RF00108                                            0108
*     SCTBLPTR=DSCSUCAD;            /* UPDATE SCAN PTR       @Z67SP00*/
         LR    SCTBLPTR,@02                                        0109
*   ELSE                            /* IF USER INDICATED GO  @Z67SP00*/
*     DO;                           /* TO ALT INSTEAD        @Z67SP00*/
         B     @RC00108                                            0110
@RF00108 DS    0H                                                  0111
*       SCPNOSUC=OFF;               /* RESET SW              @Z67SP00*/
         L     @11,@PC00001                                        0111
         NI    SCPNOSUC(@11),B'11110111'                           0111
*       SCTBLPTR=DSCALTAD;          /* SET ALT DSCAN ADDR    @Z67SP00*/
         L     SCTBLPTR,DSCALTAD(,SCTBLPTR)                        0112
*     END;                          /*                       @Z67SP00*/
*   GO TO SCAN1;                    /* ELSE, SCAN NEXT KEY OR PARM   */
         B     SCAN1                                               0114
*                                                                  0115
*   /*****************************************************************/
*   /*                                                               */
*   /* IF DSCAN WAS REQUEST FOR VARIABLE LENGTH CHARACTER STRING SET */
*   /* TO DO A TRT. MUST SET THE TRT TABLE TO RELECT THE TYPE OF DATA*/
*   /* REQUESTED(HEX,ALPABETIC,ALPHA-NUMERIC OR HEX. THEN SET ADDRESS*/
*   /* OF AREA TO SCAN AND MAXIMUM LENGTH FOR TRT. THEN DO TRT.      */
*   /*                                                       @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0115
*SCAN8:                                                            0115
*   TRTTBL=BLANK;                   /* INIT TRT TBL TO STOP ALL CHAR
*                                      THEN RESET TO ALLOW SPECIFIED
*                                      CHAR THRU             @Z40SP00*/
SCAN8    MVI   TRTTBL+1,C' '                                       0115
         MVC   TRTTBL+2(254),TRTTBL+1                              0115
         MVI   TRTTBL,C' '                                         0115
*   IF DSCHEX=ON                    /* CHECK FOR HEX DATA?   @Z67SP00*/
*     THEN                          /* YES                   @XA05941*/
         TM    DSCHEX(SCTBLPTR),B'00000100'                        0116
         BNO   @RF00116                                            0116
*     DO;                           /*                       @XA05941*/
*       HEX1=ZEROS;                 /* SET HEX FOR TRT       @XA05941*/
         MVC   HEX1(6),ZEROS                                       0118
*       HEX2=ZEROS;                 /* SET HEX FOR TRT       @XA05941*/
         MVC   HEX2(10),ZEROS                                      0119
*     END;                          /* END HEX ON GROUP      @XA05941*/
*   IF DSCALPHA=ON                  /* CHECK FOR ALPHA?      @Z67SP00*/
*     THEN                          /* YES                   @Z40SP00*/
@RF00116 TM    DSCALPHA(SCTBLPTR),B'10000000'                      0121
         BNO   @RF00121                                            0121
*     DO;                           /* SET ALPHA FOR TRT     @Z40SP00*/
*       ALPHA1=ZEROS;               /* SET ALPHA FOR TRT             */
         MVC   ALPHA1(1),ZEROS                                     0123
*       ALPHA2=ZEROS;                                              0124
         MVC   ALPHA2(2),ZEROS                                     0124
*       ALPHA3=ZEROS;                                              0125
         MVC   ALPHA3(10),ZEROS                                    0125
*       ALPHA4=ZEROS;                                              0126
         MVC   ALPHA4(9),ZEROS                                     0126
*       ALPHA5=ZEROS;                                              0127
         MVC   ALPHA5(8),ZEROS                                     0127
*     END;                          /* END ALPHA SET         @Z40SP00*/
*   IF DSCNUMER=ON                  /* CHECK FOR NUMERICS?   @Z67SP00*/
*     THEN                          /* YES                   @Z40SP00*/
@RF00121 TM    DSCNUMER(SCTBLPTR),B'01000000'                      0129
         BNO   @RF00129                                            0129
*     NUM=ZEROS;                    /* SET NUMERIC TRT GROUP @Z40SP00*/
         MVC   NUM(10),ZEROS                                       0130
*   R1=EORPTR;                      /* ASSUME SCAN WILL GO TILL END
*                                                            @Z40SP00*/
@RF00129 LR    R1,EORPTR                                           0131
*   LENREG=EORPTR-SCANREG-1;        /* CALCULATE LENGTH TO SCAN      */
         LR    LENREG,EORPTR                                       0132
         SLR   LENREG,SCANREG                                      0132
         BCTR  LENREG,0                                            0132
*   IF LENREG>TRTMAX                /* IF TRT LENGTH EXCEEDED      0133
*                                                            @Z40SP00*/
*     THEN                          /* THEN MUST LIMIT LENGTH      0133
*                                                            @Z4SP000*/
         LA    @11,255                                             0133
         CR    LENREG,@11                                          0133
         BNH   @RF00133                                            0133
*     LENREG=TRTMAX;                /* TO TRT MAX LENGTH     @Z40SP00*/
         LR    LENREG,@11                                          0134
*   GENERATE CODE;                                                 0135
@RF00133 DS    0H                                                  0135
         EX    LENREG,TEST             TRANSLATE AND TEST
*                                                                  0136
*   /*****************************************************************/
*   /*                                                               */
*   /* TRT COMPLETED, RE-INITIALIZE THE TRT TABLE, THEN CHECK THE    */
*   /* LENGTH OF STRING FOUND AND CHECK TO SEE IF TRT STOPPED AT MAX */
*   /* LENGTH OR 0 LENGTH OR IN BETWEEN. IF LENGTH ACCEPTABLE PUT IT */
*   /* IT SCP PASSBACK LENGTH FIELD AND CALL USER EXIT ROUTINE IF ONE*/
*   /* WAS SPEFIFIED. RESET INTERNAL LENGTH AFTER CALL TO ROUT IN    */
*   /* CASE USER EXIT CHANGED PASSBACK LENGTH                @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0136
*   LENGTH=R1-SCANREG;              /* CALC LEN OF STRING FOUND. R1
*                                      POINTS TO EITHER END OF RCD OR
*                                      CHAR THAT STOPPED SCN @Z40SP00*/
         LR    LENGTH,R1                                           0136
         SLR   LENGTH,SCANREG                                      0136
*   IF LENGTH<DSCMINLN              /* IF LENGTH FROM SCAN IS LESS 0137
*                                      THAN MINIMUM LENGTH   @Z67SP00*/
*       ×LENGTH>DSCMAXLN            /* OR LENGTH GREATER THAN THE  0137
*                                      MAXIMUM               @Z67SP00*/
*     THEN                          /*                       @Z40SP00*/
         SLR   @11,@11                                             0137
         IC    @11,DSCMINLN(,SCTBLPTR)                             0137
         CR    LENGTH,@11                                          0137
         BL    @RT00137                                            0137
         SLR   @11,@11                                             0137
         IC    @11,DSCMAXLN(,SCTBLPTR)                             0137
         CR    LENGTH,@11                                          0137
         BH    @RT00137                                            0137
*     GO TO BAD;                    /*                       @Z40SP00*/
*   SCPPMLN=LENGTH;                 /* SAVE IN PASSBACK LENGTH       */
         L     @11,@PC00001                                        0139
         STH   LENGTH,SCPPMLN(,@11)                                0139
*   IF DSCRTAD^=0                   /* IF USER SPECIFIED EXIT ROUTINE
*                                                            @Z67SP00*/
*       &(SCPNORT=OFF               /* AND OK TO CALL ROUT   @Z67SP00*/
*       ×DSCCALRT=ON)               /*                       @Z67SP00*/
*     THEN                          /* THEN CALL IT                  */
         ICM   @02,15,DSCRTAD(SCTBLPTR)                            0140
         BZ    @RF00140                                            0140
         TM    SCPNORT(@11),B'00000100'                            0140
         BZ    @RT00140                                            0140
         TM    DSCCALRT(SCTBLPTR),B'00000010'                      0140
         BNO   @RF00140                                            0140
@RT00140 DS    0H                                                  0141
*     DO;                           /*                       @Z40SP00*/
*       EXITADDR=DSCRTAD;           /* SET ADD OF EXIT       @Z67SP00*/
         L     EXITADDR,DSCRTAD(,SCTBLPTR)                         0142
*       CALL EXIT;                  /* CALL GENERAL EXIT PROC        */
         BAL   @14,EXIT                                            0143
*     END;                          /*                       @Z40SP00*/
*   LENGTH=SCPPMLN;                 /* LENGTH TO BUMP SCAN PTR       */
@RF00140 L     @11,@PC00001                                        0145
         LH    LENGTH,SCPPMLN(,@11)                                0145
*   GO TO SCAN7;                    /* CONTINUE SCAN                 */
         B     SCAN7                                               0146
*                                                                  0147
*   /*****************************************************************/
*   /*                                                               */
*   /* INTERFACE WITH USER ROUTINES                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0147
*EXIT:                                                             0147
*   PROCEDURE OPTIONS(NOSAVE);      /* USER RTN INTERFACE            */
EXIT     DS    0H                                                  0148
*   SCPRET=SCPGOOD;                 /* INIT RETURN CODE      @Z67SP00*/
         L     @11,@PC00001                                        0148
         MVI   SCPRET(@11),X'00'                                   0148
*   R15=EXITADDR;                                                  0149
         LR    R15,EXITADDR                                        0149
*   GENERATE CODE;                                                 0150
D4       EQU   4                       FOUR
D20      EQU   20                      TWENTY
D24      EQU   24                      TWENTYFOUR
D28      EQU   28                      TWENTYEIGHT
         STM   R0,R15,REGSAV           SAVE REGS
         L     R2,D4(R13)              PTR TO USER SAVE REA  @Z67SP00
         LA    R1,EXITPARM             ADDR OF EXIT PARM     @Z67SP00
         L     R0,D20(R2)              LOAD CALLER R0        @Z67SP00
         LM    R2,R12,D28(R2)          LOAD CALLER R2-R12    @Z67SP00
*   CALL USER;                      /* GO TO USER RTN                */
         BALR  @14,@15                                             0151
*   GENERATE CODE;                                                 0152
         L     R14,D4(R13)             GET PTR TO PREV SAVE AREA
         STM   R0,R12,D20(R14)         SAVE REGS IN CASE UPDATED
         L     R1,D4(R1)               LOAD ADDR OF SCP      @Z67SP00
         ST    R1,D24(R14)             SAVE ORIGINAL R1      @Z67SP00
         L     R1,SCPWKAR(R1)          LOAD ADDR OF SAVE AREA
         LM    R0,R15,0(R1)            RESTORE REGS
*   IF SCPRET=SCPGOOD               /* IF GOOD RETURN        @Z40SP00*/
*     THEN                          /* THEN RTN TO CALLER    @Z40SP00*/
         L     @11,@PC00001                                        0153
         CLI   SCPRET(@11),0                                       0153
         BE    @RT00153                                            0153
*     RETURN;                       /* IN SCAN MODULE        @Z40SP00*/
*   IF SCPRET=SCPNDSCN              /* WAS RTN CODE TO STOP SCAN AND
*                                      RTN WITH GOOD RTN CODE?     0155
*                                                            @Z40SP00*/
*     THEN                          /* YES                   @Z40SP00*/
         CLI   SCPRET(@11),4                                       0155
         BNE   @RF00155                                            0155
*     RETURN TO GOOD;               /* GO TO GOOD EXIT       @Z40SP00*/
         LA    @14,GOOD                                            0156
@EL00002 DS    0H                                                  0156
@EF00002 DS    0H                                                  0156
@ER00002 BR    @14                                                 0156
*   IF SCPRET=SCPSTOP               /* ROUT INDICATED STOP   @Z40SP00*/
*     THEN                          /* WITH BAD RETURN CODE  @Z40SP00*/
@RF00155 L     @11,@PC00001                                        0157
         CLI   SCPRET(@11),8                                       0157
         BNE   @RF00157                                            0157
*     RETURN TO BAD;                /* RETURN TO POINT TO CHANGE   0158
*                                      RETURN CODE AND RTURN @Z40SP00*/
         LA    @14,BAD                                             0158
         BR    @14                                                 0158
*   RETURN TO FINISH;               /* OTHERWISE, ERROR, RETURN WITH
*                                      CODE PASSED           @Z40SP00*/
@RF00157 LA    @14,FINISH                                          0159
         BR    @14                                                 0159
*   END EXIT;                                                      0160
         B     @EL00002                                            0160
*                                                                  0161
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN FROM SCAN TO CALLING MODULE                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0161
*GOOD:                                                             0161
*   SCPRET=SCPGOOD;                 /* SUCCESSFULL RETURN    @YA07506*/
GOOD     L     @11,@PC00001                                        0161
         MVI   SCPRET(@11),X'00'                                   0161
*   GO TO FINISH;                   /* AND RETURN TO CALLER          */
         B     FINISH                                              0162
*BAD:                                                              0163
*   SCPRET=SCPBAD;                  /* SYNTAX ERROR          @Z40SP00*/
BAD      L     @11,@PC00001                                        0163
         MVI   SCPRET(@11),X'04'                                   0163
*FINISH:                                                           0164
*   RETURN;                         /* RETURN TO CALLER              */
*                                                                  0164
@EL00001 L     @13,4(,@13)                                         0164
@EF00001 L     @00,@SIZDATD                                        0164
         LR    @01,@12                                             0164
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0164
         BR    @14                                                 0164
*   /*****************************************************************/
*   /*                                                               */
*   /* TRT INSTRUCTION EXECUTED WHEN LOOKING FOR VARIABLE LENGTH     */
*   /* PARAMETERS                                            @Z40SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0165
*   GENERATE CODE;                                                 0165
TEST     TRT   0(0,SCANREG),TRTTBL     SCAN PARM ENTRY
*   END HMASMSCN                                                   0166
*                                                                  0166
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMSCP)                                       */
*                                                                  0166
*       ;                                                          0166
         B     @EL00001                                            0166
@DATA    DS    0H
@SC00183 CLC   STRING(0,SCANREG),DSCKEY(SCTBLPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
HMASMSCN CSECT
         DS    0F
@DATD    DSECT
         DS    0D
TRTTBL   DS    CL256
         ORG   TRTTBL
NON1     DS    CL91
ALPHA1   DS    CL1
NON2     DS    CL31
ALPHA2   DS    CL2
NON3     DS    CL67
ALPHA3   DS    CL10
         ORG   ALPHA3
@NM00003 DS    CL1
HEX1     DS    CL6
@NM00004 DS    CL3
         ORG   TRTTBL+202
NON4     DS    CL7
ALPHA4   DS    CL9
NON5     DS    CL8
ALPHA5   DS    CL8
NON6     DS    CL6
NUM      DS    CL10
         ORG   NUM
HEX2     DS    CL10
         ORG   TRTTBL+250
NON7     DS    CL6
         ORG   TRTTBL+256
EXITPARM DS    CL8
         ORG   EXITPARM
ADIOPRM  DS    AL4
ADSCP    DS    AL4
         ORG   EXITPARM+8
SWITCHES DS    BL1
         ORG   SWITCHES
INCOMENT DS    BL1
@NM00005 EQU   SWITCHES+0
         ORG   SWITCHES+1
         DS    CL3
REGSAV   DS    16A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
HMASMSCN CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00136 DC    C'/*'
@CC00138 DC    C'*/'
ZEROS    DC    X'00000000000000000000'
PATCHSCN DS    CL80
         ORG   PATCHSCN
@NM00006 DC    80X'FF'
         ORG   PATCHSCN+80
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
EORPTR   EQU   @06
LENGTH   EQU   @02
R1       EQU   @01
SCANREG  EQU   @03
SCTBLPTR EQU   @04
EXITADDR EQU   @05
LENREG   EQU   @07
R14      EQU   @14
R15      EQU   @15
R0       EQU   @00
R12      EQU   @12
R13      EQU   @13
R2       EQU   @02
DSCANMAP EQU   0
DSCALTAD EQU   DSCANMAP
DSCSUCAD EQU   DSCANMAP+4
DSCRTAD  EQU   DSCANMAP+8
DSCFLAG  EQU   DSCANMAP+12
DSCALPHA EQU   DSCFLAG
DSCNUMER EQU   DSCFLAG
DSCBLANK EQU   DSCFLAG
DSCCONT  EQU   DSCFLAG
DSCCOMMA EQU   DSCFLAG
DSCHEX   EQU   DSCFLAG
DSCCALRT EQU   DSCFLAG
DSCMAXLN EQU   DSCANMAP+13
DSCMINLN EQU   DSCANMAP+14
DSCKEYLN EQU   DSCANMAP+15
DSCEND   EQU   DSCANMAP+16
USER     EQU   0
STRING   EQU   0
SCPIOPRM EQU   0
SCPSTRNG EQU   0
HMASMSCP EQU   0
SCPCHAR  EQU   HMASMSCP
SCPSRCH  EQU   HMASMSCP+4
SCPWKAR  EQU   HMASMSCP+8
SCPIORTN EQU   HMASMSCP+12
SCPIOPAD EQU   HMASMSCP+16
SCPINLN  EQU   HMASMSCP+20
SCPPMLN  EQU   HMASMSCP+22
SCPEOR   EQU   HMASMSCP+24
SCPCONT  EQU   SCPEOR
SCPNOCT  EQU   SCPEOR
SCPCOMNT EQU   SCPEOR
SCPNOSUC EQU   SCPEOR
SCPNORT  EQU   SCPEOR
SCPRETRN EQU   HMASMSCP+25
SCPRET   EQU   SCPRETRN
DSCKEY   EQU   DSCEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00001 EQU   SCPEOR
SCPRTERR EQU   SCPEOR
@NM00002 EQU   DSCFLAG
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00054 EQU   GOOD
@RT00057 EQU   GOOD
@RT00087 EQU   SCAN8
@RT00089 EQU   SCAN6
@RT00091 EQU   BAD
@RT00106 EQU   GOOD
@RC00108 EQU   SCAN1
@RT00137 EQU   BAD
@RT00153 EQU   @EL00002
FINISH   EQU   @EL00001
@ENDDATA EQU   *
         END   HMASMSCN,(C'PLS2114',0802,78334)
