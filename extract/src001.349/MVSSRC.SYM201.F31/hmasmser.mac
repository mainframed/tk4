         TITLE 'HMASMSER ******** DESCRIPTION *********'
HMASMSER CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMSER  78.334'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
        LR    R12,R15             SET NORMAL BASE REGISTERS
        USING HMASMSER,R12        ESTABLISH REAL BASES
*   SAVER14=R14;                    /* SAVE RETURN REGISTER          */
         LR    SAVER14,R14                                         0094
*   SAVER2=R2;                      /* RVA PTR IF NO SDWA FORM RTM   */
         LR    SAVER2,R2                                           0095
*   SAVER1=R1;                      /* BASE FOR SDWA                 */
         LR    SAVER1,R1                                           0096
*   SAVER0=R0;                      /* SDWA PRSENENT INDICATOR       */
         LR    SAVER0,R0                                           0097
*   RFY                                                            0098
*    (R0,                                                          0098
*     R1,                                                          0098
*     R2,                                                          0098
*     R14) UNRSTD;                                                 0098
*                                                                  0098
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP BASE FOR RVA. PTR WILL BE SET UP BELOW.                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0099
*   RFY                                                            0099
*     RVAPARM BASED(SRVAPTR);       /*                               */
*                                                                  0099
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REG 0 = C THEN THERE IS NO SDWA.                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0100
*   IF SAVER0='C'X THEN                                            0100
         CH    SAVER0,@CH00711                                     0100
         BNE   @RF00100                                            0100
*     DO;                           /* NO SDWA - RETURN TO RTM       */
*       SRVAPTR=SAVER2;             /* RVA PTR FROM REG2             */
         LR    SRVAPTR,SAVER2                                      0102
*       RVAABNDC=SAVER1;            /* PICK UP ABEND CODE            */
         ST    SAVER1,RVAABNDC(,SRVAPTR)                           0103
*       RVASDWFD=OFF;               /* NO SDWA FROM RTM              */
         NI    RVASDWFD(SRVAPTR),B'11011111'                       0104
*     END;                                                         0105
*                                                                  0105
*   /*****************************************************************/
*   /*                                                               */
*   /* SDWA WAS PROVIDED, SET UP FOR PROCESSING                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0106
*   ELSE                            /*                               */
*     DO;                           /*                               */
         B     @RC00100                                            0106
@RF00100 DS    0H                                                  0107
*       SDWAPTR=SAVER1;             /* BASE OF THE SDWA              */
         LR    SDWAPTR,SAVER1                                      0107
*       SRVAPTR=SDWAPARM;           /* BASE FOR THE RVA              */
         L     SRVAPTR,SDWAPARM(,SDWAPTR)                          0108
*       RVASDWFD=ON;                /* INDICATE SDWA PRESENT         */
         OI    RVASDWFD(SRVAPTR),B'00100000'                       0109
*       RVAABNDC=SDWAABCC;          /* SAVE ABEND CODE IN RVA        */
         MVC   RVAABNDC(4,SRVAPTR),SDWAABCC(SDWAPTR)               0110
*       RVASDWAP=SDWAPTR;           /* SAVE SDWA PTR IN RVA          */
         ST    SDWAPTR,RVASDWAP(,SRVAPTR)                          0111
*     END;                          /*                               */
*                                                                  0113
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEEDE WITH RECOVERY                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0113
*   SERHIRC=ZERO;                   /* INIT ERROR CODE               */
*                                                                  0113
@RC00100 SLR   SERHIRC,SERHIRC                                     0113
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP CCA PTR                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0114
*   CCAPTR=RVACCAP;                 /* SET CCA PTR FROM THE RVA      */
         L     CCAPTR,RVACCAP(,SRVAPTR)                            0114
*   IF CCACURDS=IOPHLDS             /* IF DS WAS LOG                 */
*     THEN                          /*                               */
         CLI   CCACURDS(CCAPTR),1                                  0115
         BNE   @RF00115                                            0115
*     DO;                           /*                               */
*       CCALOGNG=ON;                /* SET LOG DEAD BIT              */
         OI    CCALOGNG(CCAPTR),B'10000000'                        0117
*       CCATERM=ON;                 /* STOP SMP AT DRV NEXT TIME     */
         OI    CCATERM(CCAPTR),B'00100000'                         0118
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF CCACURDS=IOPPRINT          /* IF DS WAS SMPOUT              */
*       THEN                        /*                               */
         B     @RC00115                                            0120
@RF00115 CLI   CCACURDS(CCAPTR),11                                 0120
         BNE   @RF00120                                            0120
*       DO;                         /*                               */
*         CCAOUTNG=ON;              /* SET SMPOUT DEAD BIT           */
         OI    CCAOUTNG(CCAPTR),B'01000000'                        0122
*         CCATERM=ON;               /* STOP SMP AT DRV NEXT TIME     */
         OI    CCATERM(CCAPTR),B'00100000'                         0123
*       END;                        /*                               */
*   RFY                                                            0125
*     TBLPARM BASED(CCATBLPA);      /* BASE OF TBL PARMS             */
@RF00120 DS    0H                                                  0125
@RC00115 DS    0H                                                  0126
*   RFY                                                            0126
*     RECXPARM BASED(RVAREC);       /* BASE OF REC PARMS             */
*                                                                  0126
*   /*****************************************************************/
*   /*                                                               */
*   /* ESTABLISH SAVE AREA FOR CALLED PROGRAMS                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0127
*   RFY                                                            0127
*     R13 RSTD;                     /*                               */
*   R13=ADDR(REGSAVE);              /* LOCAL REG SAVE AREA           */
*                                                                  0128
         LA    R13,REGSAVE                                         0128
*   /*****************************************************************/
*   /*                                                               */
*   /* REWRITE THE DIRECTORIES IN STORAGE IF REQUIRED                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0129
*   CALL DISPROC;                   /*                               */
*                                                                  0129
         BAL   @14,DISPROC                                         0129
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE INFORMATIONAL MESSAGE.                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0130
*   IF SERHIRC=ZERO THEN            /*                               */
         LTR   SERHIRC,SERHIRC                                     0130
         BNZ   @RF00130                                            0130
*     CALL MSGPROC;                 /*                               */
         BAL   @14,MSGPROC                                         0131
*   IF RVASDWFD=ON THEN             /* DONT DO MORE IF NO SDWA       */
@RF00130 TM    RVASDWFD(SRVAPTR),B'00100000'                       0132
         BNO   @RF00132                                            0132
*     DO;                           /*                               */
*                                                                  0133
*       /*************************************************************/
*       /*                                                           */
*       /* DO SYSMOD COMPLETION PROCESSING.                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0134
*       IF SERHIRC=ZERO THEN        /*                               */
         LTR   SERHIRC,SERHIRC                                     0134
         BNZ   @RF00134                                            0134
*         CALL CPLPROC;             /*                               */
*                                                                  0135
         BAL   @14,CPLPROC                                         0135
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE SMP SUMMARY REPORTS.                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0136
*       IF SERHIRC<STOPSMP THEN     /* CALL UNLESS SMP ERROR         */
@RF00134 CH    SERHIRC,@CH00185                                    0136
         BNL   @RF00136                                            0136
*         CALL RPTPROC;             /*                               */
         BAL   @14,RPTPROC                                         0137
*     END;                          /*                               */
*                                                                  0138
@RF00136 DS    0H                                                  0139
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO RTM                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0139
*   RFY                                                            0139
*     R14 RSTD;                     /*                               */
@RF00132 DS    0H                                                  0140
*   RFY                                                            0140
*     R15 RSTD;                     /*                               */
*   R14=SAVER14;                    /* RETURN ADDRESS                */
         LR    R14,SAVER14                                         0141
*   R15=ZERO;                       /* CLEAR CODE                    */
         SLR   R15,R15                                             0142
*   RETURN;                                                        0143
@EL00001 DS    0H                                                  0143
@EF00001 DS    0H                                                  0143
@ER00001 BR    @14                                                 0143
*DISPROC:                                                          0144
*   PROC;                           /*                               */
*                                                                  0144
DISPROC  STM   @14,@01,@SA00002                                    0144
         STM   @03,@12,@SA00002+16                                 0144
*   /*****************************************************************/
*   /*                                                               */
*   /* HMASMDR2 IS CALLED TO PROCESS THE DIRECTORY RE-WRITE.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0145
*   DCL                                                            0145
*     SEVCODE FIXED(31) CONSTANT(16);/*                              */
*   CALL HMASMDR2(TBLPARM,TBLPARM,SEVCODE);/*                        */
         L     @10,CCATBLPA(,CCAPTR)                               0146
         ST    @10,@AL00001                                        0146
         ST    @10,@AL00001+4                                      0146
         LA    @10,@CF00185                                        0146
         ST    @10,@AL00001+8                                      0146
         L     @15,@CV00664                                        0146
         LA    @01,@AL00001                                        0146
         BALR  @14,@15                                             0146
*   RFY                                                            0147
*     RTNCODE RSTD;                 /*                               */
*   SERHIRC=MAX(SERHIRC,RTNCODE);   /*                               */
         CR    SERHIRC,RTNCODE                                     0148
         BNL   *+6
         LR    SERHIRC,RTNCODE                                     0148
*   END DISPROC;                    /*                               */
@EL00002 DS    0H                                                  0149
@EF00002 DS    0H                                                  0149
@ER00002 LM    @14,@01,@SA00002                                    0149
         LM    @03,@12,@SA00002+16                                 0149
         BR    @14                                                 0149
*MSGPROC:                                                          0150
*   PROC;                           /*                               */
*                                                                  0150
MSGPROC  STM   @14,@12,@SA00003                                    0150
*   /*****************************************************************/
*   /*                                                               */
*   /* PUT OUT PRIMARY FAILURE MESSAGE                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0151
*   RFY                                                            0151
*     R2 RSTD;                                                     0151
*   R2=RVAABNDC;                    /* GET ABEND CODE                */
         L     R2,RVAABNDC(,SRVAPTR)                               0152
*   SLL(R2,20);                     /* CHECK FOR USER ABEND          */
         SLL   R2,20                                               0153
*   IF R2^=0 THEN                                                  0154
         LTR   R2,R2                                               0154
         BZ    @RF00154                                            0154
*     DO;                           /* USER ABEND                    */
*       SRL(R2,20);                 /* PUT CODE INTO NORMAL POSITION */
         SRL   R2,20                                               0156
*       TYPE='USER  ';              /* INDICATE USER ABEND           */
         MVC   TYPE(6),@CC00729                                    0157
*     END;                                                         0158
*   ELSE                                                           0159
*     DO;                           /* SYSTEM ABEND                  */
         B     @RC00154                                            0159
@RF00154 DS    0H                                                  0160
*       R2=RVAABNDC;                /* GET SYSTEM ABEND CODE         */
         L     R2,RVAABNDC(,SRVAPTR)                               0160
*       SLL(R2,8);                                                 0161
         SLL   R2,8                                                0161
*       SRL(R2,20);                 /* PUT CODE INTO NORMAL POSITION */
         SRL   R2,20                                               0162
*       TYPE='SYSTEM';              /* INDICATE SYSTEM ABEND         */
         MVC   TYPE(6),@CC00730                                    0163
*     END;                                                         0164
*   ABENDCC=R2;                     /* FORMAT ABEND CODE             */
@RC00154 ST    R2,ABENDCC                                          0165
*   RFY                                                            0166
*     R2 UNRSTD;                                                   0166
*   AC=ABENDCC(3:4);                                               0167
         MVC   AC(2),ABENDCC+2                                     0167
*   UNPK(WORK5,ACCWORK);                                           0168
         UNPK  WORK5(5),ACCWORK(3)                                 0168
*   WORK5(1:4)=WORK5(1:4)&'0F0F0F0F'X;                             0169
         NC    WORK5(4),@CB00732                                   0169
*   TR(WORK5(1:4),HEXTAB);                                         0170
         TR    WORK5(4),HEXTAB                                     0170
*   ABCODE=WORK5(1:4);                                             0171
         MVC   ABCODE(4),WORK5                                     0171
*   HMASMMGP=''B;                   /*                               */
         XC    HMASMMGP(24),HMASMMGP                               0172
*   MGPHLDS=ON;                     /*                               */
*   MGPPRINT=ON;                    /*                               */
         OI    MGPHLDS,B'10010000'                                 0174
*   MGPMGNO1=HMA432I;               /*                               */
         MVC   MGPMGNO1(2),@CH00688                                0175
*   MGPVARPT(1)=ADDR(TYPE);         /* ABEND TYPE                    */
         LA    @10,TYPE                                            0176
         ST    @10,MGPVARPT                                        0176
*   MGPVARPT(2)=ADDR(ABCODE);       /* ABEND CODE                    */
         LA    @10,ABCODE                                          0177
         ST    @10,MGPVARPT+4                                      0177
*   MGPVARPT(3)=ADDR(RVAEPRNM);     /* CULPRET                       */
         LA    @10,RVAEPRNM(,SRVAPTR)                              0178
         ST    @10,MGPVARPT+8                                      0178
*   MGPTYPE=MGPTERM;                /* TERMINAL CONDITION RC=16      */
         MVI   MGPTYPE,X'05'                                       0179
*   CALL HMASMMSG(HMASMMGP);        /*                               */
         L     @15,@CV00668                                        0180
         LA    @01,@AL00180                                        0180
         BALR  @14,@15                                             0180
*   END MSGPROC;                                                   0181
@EL00003 DS    0H                                                  0181
@EF00003 DS    0H                                                  0181
@ER00003 LM    @14,@12,@SA00003                                    0181
         BR    @14                                                 0181
*                                                                  0182
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS COMPLETED SYSMODS.                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0182
*CPLPROC:                                                          0182
*   PROC;                           /*                               */
CPLPROC  STM   @14,@01,@SA00004                                    0182
         STM   @03,@12,@SA00004+16                                 0182
*   DECLARE                         /*                               */
*     STAENOGO CHAR(1) CONSTANT('S');/*                              */
*                                                                  0183
*   /*****************************************************************/
*   /*                                                               */
*   /* DO SYSMOD COMPLETION IF GOOD ICT BUILT.                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0184
*   IF CCAICTOK=ON THEN             /*                               */
         TM    CCAICTOK(CCAPTR),B'00000001'                        0184
         BNO   @RF00184                                            0184
*     DO;                           /*                               */
*       CALL HMASMCPL(STAENOGO);    /*                               */
         L     @15,@CV00666                                        0186
         LA    @01,@AL00186                                        0186
         BALR  @14,@15                                             0186
*       RFY                                                        0187
*         RTNCODE RSTD;             /*                               */
*       SERHIRC=MAX(SERHIRC,RTNCODE);/*                              */
         CR    SERHIRC,RTNCODE                                     0188
         BNL   *+6
         LR    SERHIRC,RTNCODE                                     0188
*       RFY                                                        0189
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*   END CPLPROC;                    /*                               */
@EL00004 DS    0H                                                  0191
@EF00004 DS    0H                                                  0191
@ER00004 LM    @14,@01,@SA00004                                    0191
         LM    @03,@12,@SA00004+16                                 0191
         BR    @14                                                 0191
*RPTPROC:                                                          0192
*   PROC;                           /*                               */
*                                                                  0192
RPTPROC  STM   @14,@12,@SA00005                                    0192
*   /*****************************************************************/
*   /*                                                               */
*   /* ISSUE THE SMP SUMMARY REPORTS.                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0193
*   IF CCAICTOK=ON THEN             /* OK TO ISSUE REPORTS           */
         TM    CCAICTOK(CCAPTR),B'00000001'                        0193
         BNO   @RF00193                                            0193
*     DO;                           /*                               */
*       CALL HMASMARL(TBLPARM);     /*                               */
         L     @10,CCATBLPA(,CCAPTR)                               0195
         ST    @10,@AL00001                                        0195
         L     @15,@CV00665                                        0195
         LA    @01,@AL00001                                        0195
         BALR  @14,@15                                             0195
*       RFY                                                        0196
*         RTNCODE RSTD;             /*                               */
*       SERHIRC=MAX(SERHIRC,RTNCODE);/*                              */
         CR    SERHIRC,RTNCODE                                     0197
         BNL   *+6
         LR    SERHIRC,RTNCODE                                     0197
*       RFY                                                        0198
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*   IF CCAREC=ON THEN               /* RECEIVE REPORT NEEDED?        */
@RF00193 TM    CCAREC(CCAPTR),B'10000000'                          0200
         BNO   @RF00200                                            0200
*     DO;                           /*                               */
*       CALL HMASMRCL(RECXPARM);    /*                               */
         L     @10,RVAREC(,SRVAPTR)                                0202
         ST    @10,@AL00001                                        0202
         L     @15,@CV00667                                        0202
         LA    @01,@AL00001                                        0202
         BALR  @14,@15                                             0202
*       RFY                                                        0203
*         RTNCODE RSTD;             /*                               */
*       SERHIRC=MAX(SERHIRC,RTNCODE);/*                              */
         CR    SERHIRC,RTNCODE                                     0204
         BNL   *+6
         LR    SERHIRC,RTNCODE                                     0204
*       RFY                                                        0205
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*   END RPTPROC;                    /*                               */
@EL00005 DS    0H                                                  0207
@EF00005 DS    0H                                                  0207
@ER00005 LM    @14,@12,@SA00005                                    0207
         BR    @14                                                 0207
*   END HMASMSER                    /*                               */
*                                                                  0208
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*                                                                  0208
*       ;                                                          0208
@DATA    DS    0H
@CH00688 DC    H'233'
@CH00711 DC    XL2'C'
         DS    0F
@AL00180 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00186 DC    A(@CC00739)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00005 DS    0F
@SA00004 DS    0F
@SA00003 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    3A
         DS    0F
@CF00185 DC    F'16'
@CH00185 EQU   @CF00185+2
@CV00664 DC    V(HMASMDR2)
@CV00665 DC    V(HMASMARL)
@CV00666 DC    V(HMASMCPL)
@CV00667 DC    V(HMASMRCL)
@CV00668 DC    V(HMASMMSG)
         DS    0D
IOPPTR   DS    A
@CC00729 DC    C'USER  '
@CC00730 DC    C'SYSTEM'
@CC00739 EQU   @CC00730
@CB00732 DC    X'0F0F0F0F'
HMASMMGP DS    CL24
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00053 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00054 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL12
         ORG   MGPVAR
MGPVARPT DS    3A
         ORG   HMASMMGP+24
REGSAVE  DS    CL72
WORKCHAR DS    CL8
         DS    CL4
WORKAREA DS    CL8
ABENDCC  DS    CL4
HEXTAB   DC    CL16'0123456789ABCDEF'
TYPE     DS    CL6
ABCODE   DS    CL4
PATCHSER DS    CL80
         ORG   PATCHSER
@NM00064 DC    80X'FF'
         ORG   PATCHSER+80
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SAVER14  EQU   @08
SAVER2   EQU   @07
SAVER1   EQU   @06
SAVER0   EQU   @05
SRVAPTR  EQU   @05
SERHIRC  EQU   @02
SDWAPTR  EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
RTNREG   EQU   @14
R10      EQU   @10
R11      EQU   @11
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCATBLPA EQU   @NM00009+12
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAREC   EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCATERM  EQU   CCAFLAG2
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAICTOK EQU   CCAFLAG3
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCALOGNG EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCACURDS EQU   CCAFDSNG+2
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPNAME  EQU   HMASMIOP+4
@NM00043 EQU   HMASMIOP+12
@NM00044 EQU   @NM00043
IOPDDNAM EQU   HMASMIOP+24
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
RVAPARM  EQU   0
RVAINFO  EQU   RVAPARM
RVACCAP  EQU   RVAINFO+4
RVAPASS  EQU   RVAPARM+12
RVAREC   EQU   RVAPASS+4
RVASTAE  EQU   RVAPARM+20
RVASDWAP EQU   RVASTAE
RVAEPRNM EQU   RVASTAE+4
RVAABNDC EQU   RVASTAE+12
@NM00055 EQU   RVASTAE+16
@NM00056 EQU   RVASTAE+20
RVAFLAGS EQU   RVASTAE+24
RVASDWFD EQU   RVAFLAGS
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
TBLPARM  EQU   0
RECXPARM EQU   0
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
WORK5    EQU   WORKCHAR
ACCWORK  EQU   WORKAREA
AC       EQU   ACCWORK
IOPUDATA EQU   IOPEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00063 EQU   ACCWORK+2
IOPPTMAX EQU   IOPCDMAX
@NM00052 EQU   IOPSCMAP+11
@NM00051 EQU   IOPSCMAP+8
@NM00050 EQU   IOPSCMAP
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00062 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00061 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00060 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00059 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00058 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
RVAEND   EQU   RVASTAE+25
@NM00057 EQU   RVAFLAGS
RVAVS1   EQU   RVAFLAGS
RVAMVS   EQU   RVAFLAGS
RVAUSRCH EQU   @NM00056+2
RVASYSCH EQU   @NM00056
RVAUSRCD EQU   @NM00055+2
RVASYSCD EQU   @NM00055
RVATBL   EQU   RVAPASS
RVAMAJNM EQU   RVAINFO+8
RVAHDR   EQU   RVAINFO
@NM00049 EQU   IOPUSERL
@NM00048 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
IOPBUFAD EQU   HMASMIOP+52
@NM00047 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00046 EQU   @NM00043+10
IOPSEQNO EQU   @NM00043+8
@NM00045 EQU   @NM00044+7
IOPPTFNM EQU   @NM00044
IOPNAM17 EQU   IOPNAME
IOPTYPE  EQU   HMASMIOP+3
IOPRETRN EQU   HMASMIOP+2
IOPFUNCT EQU   HMASMIOP+1
IOPDSID  EQU   HMASMIOP
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
@NM00023 EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
CCAIOPTR EQU   CCAFIOP
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00184 EQU   @EL00004
@RF00200 EQU   @EL00005
@ENDDATA EQU   *
         END   HMASMSER,(C'PLS2118',0802,78334)
