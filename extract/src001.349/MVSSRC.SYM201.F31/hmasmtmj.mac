         TITLE 'HMASMTMJ - INLINE JCLIN PROCESSOR'
HMASMTMJ CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMTMJ  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*   TMJRTNCD=ZERO;                  /* MAIN ROUTINE RETURN CODE      */
         SLR   TMJRTNCD,TMJRTNCD                                   0203
*   IOPPTR=CCAIOPTR;                /* INITIALIZE IOP POINTER        */
         MVC   IOPPTR(4),CCAIOPTR(CCAPTR)                          0204
*   MCBPTR=TBLXIOP3;                /* MCB BASED ON TBL IOP          */
         L     @10,@PC00001                                        0205
         L     MCBPTR,TBLXIOP3(,@10)                               0205
*   GTPPTR=TBLXASGT;                /*                               */
         L     GTPPTR,TBLXASGT(,@10)                               0206
*   HMASMGTP=''B;                   /*                               */
         XC    HMASMGTP(28,GTPPTR),HMASMGTP(GTPPTR)                0207
*   GTPPTR=TBLJCLGT;                /* JCLIN GTP                     */
         L     @10,TBLXTBL(,@10)                                   0208
         L     GTPPTR,TBLJCLGT(,@10)                               0208
*   HMASMMGP=''B;                   /* ZERO THE MESSAGE PARM         */
         XC    HMASMMGP(28),HMASMMGP                               0209
*   MGPPRINT=ON;                    /* ROUTE MESSAGES TO THE PRINTER */
*   MGPHLDS=ON;                     /* ROUTE MESSAGES TO THE SMPLOG  */
         OI    MGPPRINT,B'10010000'                                0211
*   IF CCAAPPLY=ON×CCAACCPT=ON      /*                               */
*     THEN                          /*                               */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0212
         BZ    @RF00212                                            0212
*     CON=ZERO;                     /*                               */
         SLR   @10,@10                                             0213
         STH   @10,CON                                             0213
*   ELSE                            /*                               */
*     CON=MAXNUM;                   /*                               */
         B     @RC00212                                            0214
@RF00212 MVC   CON(2),MAXNUM                                       0214
*                                                                  0215
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP PROCESSING SYSMODS TILL NO MORE APPLICABLE ONES FOUND.   */
*   /* PROC TMJNXSMD WILL LOOP THRU THE ICT TO FIND NEXT SYSMOD. WHEN*/
*   /* NO MORE SYSMODS IT WILL SET THE STOP BIT ON.                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0215
*   RFY                                                            0215
*     RTNCODE RSTD;                 /*                               */
@RC00212 DS    0H                                                  0216
*   STOP=OFF;                       /* LOOP TILL NO MORE SYSMODS     */
         NI    STOP,B'01111111'                                    0216
*   IF TBLNOJCL=OFF                 /* IF NOJCLIN NOT SPECIFIED      */
*       ×TBLJCLGT^=ZERO             /* OR IN NOJCLIN SELECT          */
*     THEN                          /*                               */
         L     @14,@PC00001                                        0217
         L     @14,TBLXTBL(,@14)                                   0217
         TM    TBLNOJCL(@14),B'00000001'                           0217
         BZ    @RT00217                                            0217
         ICM   @10,15,TBLJCLGT(@14)                                0217
         BZ    @RF00217                                            0217
@RT00217 DS    0H                                                  0218
*     DO;                           /*                               */
*       DO WHILE(                   /* LOOP                          */
*             STOP=OFF              /* TILL NO MORE SYSMODS          */
*             &TMJRTNCD<STOPFUNC);  /* OR ERR FOUND                  */
         B     @DE00219                                            0219
@DL00219 DS    0H                                                  0220
*         CALL TMJNXSMD(TMJX);      /* GET NEXT SYSMOD               */
         LA    @01,@AL00220                                        0220
         BAL   @14,TMJNXSMD                                        0220
*         TMJRTNCD=MAX(TMJRTNCD,RTNCODE);/* SAVE RC                  */
         CR    TMJRTNCD,RTNCODE                                    0221
         BNL   *+6
         LR    TMJRTNCD,RTNCODE                                    0221
*         IF STOP=OFF               /* IF ANOTHER SYSMOD FOUND       */
*           THEN                    /*                               */
         TM    STOP,B'10000000'                                    0222
         BNZ   @RF00222                                            0222
*           DO;                     /*                               */
*             IF CCAAPPLY=ON        /* IF APPLY                      */
*               THEN                /*                               */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0224
         BNO   @RF00224                                            0224
*               CALL TMJAPPLY(ICTPTF(TMJX));/*                       */
         L     @14,TMJX                                            0225
         MH    @14,@CH01920                                        0225
         L     @10,CCAICPTF(,CCAPTR)                               0225
         AL    @10,@CF01932                                        0225
         LA    @14,ICTPTF(@14,@10)                                 0225
         ST    @14,@AL00001                                        0225
         LA    @01,@AL00001                                        0225
         BAL   @14,TMJAPPLY                                        0225
*             ELSE                  /* IF RESTORE                    */
*               CALL TMJREST(ICTPTF(TMJX));/*                        */
         B     @RC00224                                            0226
@RF00224 L     @14,TMJX                                            0226
         MH    @14,@CH01920                                        0226
         L     @10,CCAICPTF(,CCAPTR)                               0226
         AL    @10,@CF01932                                        0226
         LA    @14,ICTPTF(@14,@10)                                 0226
         ST    @14,@AL00001                                        0226
         LA    @01,@AL00001                                        0226
         BAL   @14,TMJREST                                         0226
*             TMJRTNCD=MAX(TMJRTNCD,RTNCODE);/* SAVE RC              */
@RC00224 CR    TMJRTNCD,RTNCODE                                    0227
         BNL   *+6
         LR    TMJRTNCD,RTNCODE                                    0227
*             IF RTNCODE>=STOPPTF   /* IF JCLIN FAILED               */
*               THEN                /*                               */
         CH    RTNCODE,@CH00053                                    0228
         BL    @RF00228                                            0228
*               DO;                 /*                               */
*                 MGPCLEAR=''B;     /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0230
*                 MGPMGNO1=HMA302I; /* X8X PROCESSING TERMINATED FOR
*                                      SYSMOD X7X - REASON =         */
         MVC   MGPMGNO1(2),@CH01818                                0231
*                 MGPMGNO2=PART118; /* INLINE JCLIN FAILURE          */
         MVC   MGPMGNO2(2),@CH01824                                0232
*                 MGPTYPE=MGPINFO;  /*                               */
         MVI   MGPTYPE,X'01'                                       0233
*                 MGPVARPT(1)=ADDR(CCAFUNCT);/*                      */
         LA    @14,CCAFUNCT(,CCAPTR)                               0234
         ST    @14,MGPVARPT                                        0234
*                 MGPVARPT(2)=ADDR(ICTPTFS(TMJX));/*                 */
         L     @14,TMJX                                            0235
         MH    @14,@CH01920                                        0235
         L     @10,CCAICPTF(,CCAPTR)                               0235
         AL    @10,@CF01932                                        0235
         LA    @14,ICTPTFS(@14,@10)                                0235
         ST    @14,MGPVARPT+4                                      0235
*                 CALL HMASMMSG(HMASMMGP);/*                         */
         L     @15,@CV01809                                        0236
         LA    @01,@AL00236                                        0236
         BALR  @14,@15                                             0236
*                 ICTPNOGO(TMJX)=ON;/*                               */
*                 ICTPMSG(TMJX)=ON; /*                               */
*                 ICTPCPL(TMJX)=ON; /*                               */
         L     @14,TMJX                                            0239
         MH    @14,@CH01920                                        0239
         L     @10,CCAICPTF(,CCAPTR)                               0239
         ST    @14,@TF00001                                        0239
         ALR   @14,@10                                             0239
         AL    @14,@CF01933                                        0239
         OI    ICTPNOGO-8(@14),B'01110000'                         0239
*                 ICTPECPL(TMJX)=ON;/*                               */
         AL    @10,@TF00001                                        0240
         AL    @10,@CF01934                                        0240
         OI    ICTPECPL-14(@10),B'01000000'                        0240
*                 CALL HMASMTCR(TBLXPARM,'M');/* STOP ALL REQS       */
         L     @14,@PC00001                                        0241
         ST    @14,@AL00001                                        0241
         LA    @14,@CC00660                                        0241
         ST    @14,@AL00001+4                                      0241
         L     @15,@CV01811                                        0241
         LA    @01,@AL00001                                        0241
         BALR  @14,@15                                             0241
*                 TMJRTNCD=MAX(TMJRTNCD,RTNCODE);/* SAVE RC          */
         CR    TMJRTNCD,RTNCODE                                    0242
         BNL   *+6
         LR    TMJRTNCD,RTNCODE                                    0242
*               END;                /* END JCLIN FAILED              */
*           END;                    /* END SYSMOD FOUND              */
@RF00228 DS    0H                                                  0245
*       END;                        /* END PROCESS LOOP              */
@RF00222 DS    0H                                                  0245
@DE00219 TM    STOP,B'10000000'                                    0245
         BNZ   @DC00219                                            0245
         CH    TMJRTNCD,@CH00265                                   0245
         BL    @DL00219                                            0245
@DC00219 DS    0H                                                  0246
*     END;                          /*                               */
*   RFY                                                            0247
*     RTNCODE UNRSTD;               /*                               */
*                                                                  0247
@RF00217 DS    0H                                                  0248
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER WITH RETURN CODE IN REGISTER 15              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0248
*   RETURN CODE(TMJRTNCD);          /*                               */
         LR    @15,TMJRTNCD                                        0248
         L     @13,4(,@13)                                         0248
         L     @14,12(,@13)                                        0248
         LM    @00,@12,20(@13)                                     0248
         BR    @14                                                 0248
         EJECT
*                                                                  0249
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO SCAN THRU THE ICT SYSMODS LOOKING   */
*   /* FOR THE NEXT SYSMOD TO BE PROCESSED. SELECTION IS BASED ON    */
*   /* LOWEST ICTPONUM FOR APPLY AND HIGHEST ICTPONUM FOR RESTORE    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0249
*TMJNXSMD:                                                         0249
*   PROCEDURE(NXSMDX);              /*                               */
TMJNXSMD STM   @14,@12,@SA00002                                    0249
         MVC   @PC00002(4),0(@01)                                  0249
*   DECLARE                         /*                               */
*     NXSMDX FIXED(31);             /*                               */
*   DECLARE                         /*                               */
*     1 NXSMDSW BIT(8),             /*                               */
*       3 NXSMDEOF BIT(1),          /*                               */
*       3 NXSMDFND BIT(1),          /*                               */
*       3 * BIT(6);                 /*                               */
*   DECLARE                         /*                               */
*     NXTX FIXED(31),               /*                               */
*     NXTY FIXED(31);               /*                               */
*   DECLARE                         /*                               */
*     LON FIXED(15) INIT(0);        /*                               */
*   RFY                                                            0254
*     HMASMGTP BASED(GTPPTR);       /*                               */
*   RFY                                                            0255
*     ICTPTF BASED(CCAICPTF);       /*                               */
*   NXSMDEOF=OFF;                   /*                               */
*   NXSMDFND=OFF;                   /*                               */
         NI    NXSMDEOF,B'00111111'                                0257
*   IF CCAAPPLY=ON×CCAACCPT=ON      /*                               */
*     THEN                          /*                               */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0258
         BZ    @RF00258                                            0258
*     LON=MAXNUM;                   /*                               */
         MVC   LON(2),MAXNUM                                       0259
*   ELSE                            /*                               */
*     LON=ZERO;                     /*                               */
         B     @RC00258                                            0260
@RF00258 SLR   @10,@10                                             0260
         STH   @10,LON                                             0260
*   DO WHILE(                       /* LOOP TILL                     */
*         NXSMDEOF=OFF              /* END OF SYSMODS                */
*         &NXSMDFND=OFF);           /* OR SYSMOD FOUND               */
@RC00258 B     @DE00261                                            0261
@DL00261 DS    0H                                                  0262
*     NXSMDEOF=ON;                  /* NO SYSMODS FOUND              */
         OI    NXSMDEOF,B'10000000'                                0262
*     DO NXTX=1 BY 1 WHILE(         /* LOOP THRU ICT                 */
*           ICTPEND(NXTX)^=ICTENDNT);/* TILL END                     */
*                                                                  0263
         LA    NXTX,1                                              0263
         B     @DE00263                                            0263
@DL00263 DS    0H                                                  0264
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR SYSMOD APPLICABILITY                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0264
*       IF ICTPCPL(NXTX)=OFF        /* IF NOT COMPLETE               */
*           &ICTPDEXP(NXTX)=OFF     /* NOT DELETED                   */
*           &ICTPDIMP(NXTX)=OFF     /*                               */
*           &ICTPGELM(NXTX)=OFF     /* NOT ELIMINATED                */
*           &ICTPSUPN(NXTX)=ZERO    /* NOT SUPED                     */
*           &(ICTPJCLP(NXTX)=ON     /* IF IT HAS JCLIN               */
*           ×(CCARES=ON&ICTPMDLP(NXTX)=ON))/* OR RESTORE AND SYSMOD
*                                      HAD DELETES                   */
*         THEN                      /*                               */
         LR    @10,NXTX                                            0264
         MH    @10,@CH01920                                        0264
         L     @05,CCAICPTF(,CCAPTR)                               0264
         ST    @10,@TF00001                                        0264
         ALR   @10,@05                                             0264
         AL    @10,@CF01933                                        0264
         TM    ICTPCPL-8(@10),B'00100000'                          0264
         BNZ   @RF00264                                            0264
         LR    @10,@05                                             0264
         AL    @10,@TF00001                                        0264
         AL    @10,@CF01937                                        0264
         TM    ICTPDEXP-13(@10),B'00111000'                        0264
         BNZ   @RF00264                                            0264
         LR    @10,@05                                             0264
         AL    @10,@TF00001                                        0264
         AL    @10,@CF01938                                        0264
         SLR   @03,@03                                             0264
         ICM   @03,3,ICTPSUPN-20(@10)                              0264
         LTR   @03,@03                                             0264
         BNZ   @RF00264                                            0264
         LR    @10,@05                                             0264
         AL    @10,@TF00001                                        0264
         AL    @10,@CF01939                                        0264
         TM    ICTPJCLP-9(@10),B'00000010'                         0264
         BO    @RT00264                                            0264
         TM    CCARES(CCAPTR),B'00001000'                          0264
         BNO   @RF00264                                            0264
         AL    @05,@TF00001                                        0264
         AL    @05,@CF01940                                        0264
         TM    ICTPMDLP-10(@05),B'00000001'                        0264
         BNO   @RF00264                                            0264
@RT00264 DS    0H                                                  0265
*         DO;                       /*                               */
*           IF(CCAAPPLY=ON          /* IF APPLY                      */
*               &ICTPONUM(NXTX)>CON /* AND THIS IS HIGHER THAN CURR  */
*               &ICTPONUM(NXTX)<LON)/* AND LESS THEN LAST ONE FND    */
*               ×(CCARES=ON         /* OR RESTORE                    */
*               &ICTPONUM(NXTX)<CON /* AND THIS IS LESS THAN LAST    */
*               &ICTPONUM(NXTX)>LON)/* AND GREATER THAN CURR         */
*             THEN                  /*                               */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0266
         BNO   @GL00008                                            0266
         LR    @10,NXTX                                            0266
         MH    @10,@CH01920                                        0266
         L     @05,CCAICPTF(,CCAPTR)                               0266
         ALR   @05,@10                                             0266
         AL    @05,@CF01941                                        0266
         SLR   @10,@10                                             0266
         ICM   @10,3,ICTPONUM-18(@05)                              0266
         CH    @10,CON                                             0266
         BNH   @GL00008                                            0266
         CH    @10,LON                                             0266
         BL    @RT00266                                            0266
@GL00008 TM    CCARES(CCAPTR),B'00001000'                          0266
         BNO   @RF00266                                            0266
         LR    @10,NXTX                                            0266
         MH    @10,@CH01920                                        0266
         L     @05,CCAICPTF(,CCAPTR)                               0266
         ALR   @05,@10                                             0266
         AL    @05,@CF01941                                        0266
         SLR   @10,@10                                             0266
         ICM   @10,3,ICTPONUM-18(@05)                              0266
         CH    @10,CON                                             0266
         BNL   @RF00266                                            0266
         CH    @10,LON                                             0266
         BNH   @RF00266                                            0266
@RT00266 DS    0H                                                  0267
*             DO;                   /*                               */
*               LON=ICTPONUM(NXTX); /* SAVE ORDER NUMBER             */
         LR    @10,NXTX                                            0268
         MH    @10,@CH01920                                        0268
         L     @05,CCAICPTF(,CCAPTR)                               0268
         ALR   @05,@10                                             0268
         AL    @05,@CF01941                                        0268
         SLR   @10,@10                                             0268
         ICM   @10,3,ICTPONUM-18(@05)                              0268
         STH   @10,LON                                             0268
*               NXSMDFND=ON;        /* SET FOUND SW                  */
*               NXSMDEOF=OFF;       /* NO STOP AT EOF                */
         OI    NXSMDFND,B'01000000'                                0270
         NI    NXSMDEOF,B'01111111'                                0270
*               NXTY=NXTX;          /* KEEP INDEX OF THIS ONE        */
         ST    NXTX,NXTY                                           0271
*             END;                  /*                               */
*         END;                      /*                               */
@RF00266 DS    0H                                                  0274
*     END;                          /* END LOOP THRU ICT             */
*                                                                  0274
@RF00264 AH    NXTX,@CH00061                                       0274
@DE00263 LA    @10,116                                             0274
         LR    @01,NXTX                                            0274
         MR    @00,@10                                             0274
         L     @05,CCAICPTF(,CCAPTR)                               0274
         AL    @01,@CF01932                                        0274
         L     @03,ICTPEND(@01,@05)                                0274
         CL    @03,ICTENDNT                                        0274
         BNE   @DL00263                                            0274
*     /***************************************************************/
*     /*                                                             */
*     /* NOW THAT APPLIACABLE CANDIDATE FOUND SEE IF IT WAS SPECIFIED*/
*     /* FOR NOJCLIN PROCESSING ON THE STATEMENT                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0275
*     IF NXSMDFND=ON                /* IF SYSMOD FOUND               */
*       THEN                        /*                               */
         TM    NXSMDFND,B'01000000'                                0275
         BNO   @RF00275                                            0275
*       DO;                         /*                               */
*         CON=ICTPONUM(NXTY);       /* SAVE CURRENT NUMBER           */
         LR    @01,@10                                             0277
         M     @00,NXTY                                            0277
         ST    @01,@TF00001                                        0277
         ALR   @01,@05                                             0277
         AL    @01,@CF01941                                        0277
         SLR   @10,@10                                             0277
         ICM   @10,3,ICTPONUM-18(@01)                              0277
         STH   @10,CON                                             0277
*         IF TBLNOJCL=ON            /* AND NOJCLIN SPECIFIED         */
*           THEN                    /*                               */
         L     @10,@PC00001                                        0278
         L     @10,TBLXTBL(,@10)                                   0278
         TM    TBLNOJCL(@10),B'00000001'                           0278
         BNO   @RF00278                                            0278
*           DO;                     /*                               */
*             GTPFUNCT=GTPLOC;      /*                               */
         MVI   GTPFUNCT(GTPPTR),X'03'                              0280
*             GTPBUFAD=ADDR(HMASMSET);/*                             */
         LA    @10,HMASMSET                                        0281
         ST    @10,GTPBUFAD(,GTPPTR)                               0281
*             GTPRCDLN=LENGTH(HMASMSET);/*                           */
         MVC   GTPRCDLN(2,GTPPTR),@CH00265                         0282
*             GTPKEYLN=LENGTH(SELSTENT);/*                           */
         MVC   GTPKEYLN(2,GTPPTR),@CH00125                         0283
*             HMASMSET=''B;         /*                               */
         XC    HMASMSET(12),HMASMSET                               0284
*             SESMD=ON;             /* SYSMOD TYPE                   */
         OI    SESMD,B'00000001'                                   0285
*             SENAME=ICTPTFS(NXTY); /* SYSMOD NUMBER                 */
         MVI   SENAME+7,C' '                                       0286
         AL    @05,@TF00001                                        0286
         AL    @05,@CF01932                                        0286
         MVC   SENAME(7),ICTPTFS(@05)                              0286
*             CALL HMASMGTA(HMASMGTP);/* LOCATE ENTRY                */
         ST    GTPPTR,@AL00001                                     0287
         L     @15,@CV01808                                        0287
         LA    @01,@AL00001                                        0287
         BALR  @14,@15                                             0287
*             IF GTPRETRN=GTPGOOD   /* IF SYSMOD IN LIST             */
*               THEN                /*                               */
         CLI   GTPRETRN(GTPPTR),0                                  0288
         BNE   @RF00288                                            0288
*               NXSMDFND=OFF;       /* RESET FOUND SW                */
         NI    NXSMDFND,B'10111111'                                0289
*           END;                    /* END NOJCLIN SPECIFIED         */
@RF00288 DS    0H                                                  0291
*       END;                        /* END SYSMOD FOUND              */
@RF00278 DS    0H                                                  0292
*   END;                            /* END LOOP TILL FOUND           */
*                                                                  0292
@RF00275 DS    0H                                                  0292
@DE00261 TM    NXSMDEOF,B'11000000'                                0292
         BZ    @DL00261                                            0292
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL DONE WITH ALL SYSMODS IN ICT THEN SET SW TO CAUSE MAIN */
*   /* PROGRAM LOOP TO TERMINATE                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0293
*   IF NXSMDEOF=ON                  /*                               */
*     THEN                          /*                               */
         TM    NXSMDEOF,B'10000000'                                0293
         BNO   @RF00293                                            0293
*     STOP=ON;                      /*                               */
         OI    STOP,B'10000000'                                    0294
*   ELSE                            /*                               */
*     NXSMDX=NXTY;                  /*                               */
*                                                                  0295
         B     @RC00293                                            0295
@RF00293 L     @10,@PC00002                                        0295
         MVC   NXSMDX(4,@10),NXTY                                  0295
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0296
*   RETURN CODE(ZERO);              /*                               */
@RC00293 SLR   @15,@15                                             0296
         L     @14,@SA00002                                        0296
         LM    @00,@12,@SA00002+8                                  0296
         BR    @14                                                 0296
*   END TMJNXSMD;                   /*                               */
         EJECT
*                                                                  0298
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO PROCESS INLINE JCLIN FOR APPLY      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0298
*TMJAPPLY:                                                         0298
*   PROCEDURE(APPPTF);              /*                               */
TMJAPPLY STM   @14,@12,@SA00003                                    0298
         MVC   @PC00003(4),0(@01)                                  0298
*   DECLARE                         /*                               */
*     APPPTF CHAR(*);               /* CURRENT ICT PTF ENTRY         */
*   DECLARE                         /*                               */
*     APPRC FIXED(8);               /*                               */
*   RFY                                                            0301
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0302
*     ICTPTF BASED(ADDR(APPPTF));   /*                               */
*   RFY                                                            0303
*     MCBPTFMP BASED(MCBPTR);       /*                               */
*   RFY                                                            0304
*     MCBELEMP BASED(MCBPTR);       /*                               */
*   APPRC=ZERO;                     /*                               */
*                                                                  0305
         SLR   APPRC,APPRC                                         0305
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO GET JCLIN FROM MCS ENTRY                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0306
*   CALL TMJFJCL(ICTPTF(1));        /*                               */
         L     @10,@PC00003                                        0306
         ST    @10,@AL00001                                        0306
         LA    @01,@AL00001                                        0306
         BAL   @14,TMJFJCL                                         0306
*   RFY                                                            0307
*     RTNCODE RSTD;                 /*                               */
*   APPRC=RTNCODE;                  /*                               */
         LR    APPRC,RTNCODE                                       0308
*   RFY                                                            0309
*     RTNCODE UNRSTD;               /*                               */
*                                                                  0309
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO SET UP PARMS FOR HMASMUPD BASED ON DATA IN MCB*/
*   /* BUFFER                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0310
*   IF APPRC=ZERO                   /* IF NO SEVERE ERRORS           */
*     THEN                          /*                               */
         CH    APPRC,@CH00079                                      0310
         BNE   @RF00310                                            0310
*     DO;                           /*                               */
*       CALL TMJSTUPD(ICTPTF(1));   /*                               */
         L     @10,@PC00003                                        0312
         ST    @10,@AL00001                                        0312
         LA    @01,@AL00001                                        0312
         BAL   @14,TMJSTUPD                                        0312
*       RFY                                                        0313
*         RTNCODE RSTD;             /*                               */
*       APPRC=MAX(APPRC,RTNCODE);   /*                               */
         CR    APPRC,RTNCODE                                       0314
         BNL   *+6
         LR    APPRC,RTNCODE                                       0314
*       RFY                                                        0315
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0316
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PREV PROCESS OK THEN CALL HMASMSEC TO BUILD A CDS SYSMOD   */
*   /* ENTRY FOR THE SYSMOD BEING PROCESSED                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0317
*   IF APPRC=ZERO                   /* IF NO SEVERE ERRORS           */
*       &CCACHECK=OFF               /* AND NOT CHECK RUN             */
*     THEN                          /*                               */
@RF00310 CH    APPRC,@CH00079                                      0317
         BNE   @RF00317                                            0317
         TM    CCACHECK(CCAPTR),B'00010000'                        0317
         BNZ   @RF00317                                            0317
*     DO;                           /*                               */
*       CALL HMASMSEC(ICTPTFS(1),CCAIOPTR);/* PASS HMASMSEC THE    0319
*                                      SYSMOD NUMBER AND THE IOPPTR  */
         L     @10,@PC00003                                        0319
         ST    @10,@AL00001                                        0319
         LA    @10,CCAIOPTR(,CCAPTR)                               0319
         ST    @10,@AL00001+4                                      0319
         L     @15,@CV01813                                        0319
         LA    @01,@AL00001                                        0319
         BALR  @14,@15                                             0319
*       RFY                                                        0320
*         RTNCODE RSTD;             /*                               */
*       APPRC=RTNCODE;              /*                               */
         LR    APPRC,RTNCODE                                       0321
*       RFY                                                        0322
*         RTNCODE UNRSTD;           /*                               */
*       ICTPROCS(1)=ON;             /*                               */
         L     @10,@PC00003                                        0323
         OI    ICTPROCS(@10),B'10000000'                           0323
*     END;                          /*                               */
*                                                                  0324
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW INDICATE ICT SYSMOD IN PROCESS AND CALL HMASMUPD TO       */
*   /* PROCESS THE INLINE JCLIN                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0325
*   IF APPRC=ZERO                   /*                               */
*     THEN                          /*                               */
@RF00317 CH    APPRC,@CH00079                                      0325
         BNE   @RF00325                                            0325
*     DO;                           /*                               */
*       CALL HMASMUPD(UPDPARM);     /*                               */
         L     @15,@CV01812                                        0327
         LA    @01,@AL00327                                        0327
         BALR  @14,@15                                             0327
*       RFY                                                        0328
*         RTNCODE RSTD;             /*                               */
*       APPRC=RTNCODE;              /*                               */
         LR    APPRC,RTNCODE                                       0329
*       RFY                                                        0330
*         RTNCODE UNRSTD;           /*                               */
*       MGPCLEAR=''B;               /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0331
*       MGPMGNO1=HMA418I;           /* INLINE JCLIN PROCESSING X10X
*                                      COMPLETED FOR SYSMOD XXXXXXX  */
         MVC   MGPMGNO1(2),@CH01820                                0332
*       MGPVARPT(2)=ADDR(ICTPTFS(1));/*                              */
         L     @10,@PC00003                                        0333
         ST    @10,MGPVARPT+4                                      0333
*       MGPTYPE=MGPINFO;            /*                               */
         MVI   MGPTYPE,X'01'                                       0334
*       IF APPRC=ZERO               /*                               */
*         THEN                      /*                               */
         CH    APPRC,@CH00079                                      0335
         BNE   @RF00335                                            0335
*         MGPVARPT(1)=ADDR(TXTSUCC);/*                               */
         LA    @10,@CC01826                                        0336
         ST    @10,MGPVARPT                                        0336
*       ELSE                        /*                               */
*         MGPVARPT(1)=ADDR(TXTFAIL);/*                               */
         B     @RC00335                                            0337
@RF00335 LA    @10,@CC01829                                        0337
         ST    @10,MGPVARPT                                        0337
*       CALL HMASMMSG(HMASMMGP);    /*                               */
*                                                                  0338
@RC00335 L     @15,@CV01809                                        0338
         LA    @01,@AL00338                                        0338
         BALR  @14,@15                                             0338
*       /*************************************************************/
*       /*                                                           */
*       /* IF JCLIN FAILED THEN RESTORE ANY JCLIN THAT MIGHT HAVE    */
*       /* BEEN DONE                                                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0339
*       IF APPRC^=ZERO              /*                               */
*         THEN                      /*                               */
         CH    APPRC,@CH00079                                      0339
         BE    @RF00339                                            0339
*         DO;                       /*                               */
*           BUPPARM=''B;            /*                               */
         XC    BUPPARM(20),BUPPARM                                 0341
*           BUPFUNCT=BUPREST;       /*                               */
         MVI   BUPFUNCT,X'04'                                      0342
*           BUPSYSMD=UPDSYSMD;      /*                               */
         MVC   BUPSYSMD(7),UPDSYSMD                                0343
*           BUPSTYPE=ICTPTYPE(1);   /*                               */
         L     @10,@PC00003                                        0344
         MVC   BUPSTYPE(1),ICTPTYPE(@10)                           0344
*           BUPGTPAD=TBLXASGT;      /*                               */
         L     @10,@PC00001                                        0345
         MVC   BUPGTPAD(4),TBLXASGT(@10)                           0345
*           CALL HMASMBUR(BUPPARM); /*                               */
         L     @15,@CV01806                                        0346
         LA    @01,@AL00346                                        0346
         BALR  @14,@15                                             0346
*           BUPFUNCT=BUPSTOWD;      /*                               */
         MVI   BUPFUNCT,X'05'                                      0347
*           CALL HMASMBUR(BUPPARM); /*                               */
         L     @15,@CV01806                                        0348
         LA    @01,@AL00348                                        0348
         BALR  @14,@15                                             0348
*         END;                      /*                               */
*     END;                          /*                               */
*                                                                  0350
@RF00339 DS    0H                                                  0351
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0351
*   RETURN CODE(APPRC);             /*                               */
@RF00325 LR    @15,APPRC                                           0351
         L     @14,@SA00003                                        0351
         LM    @00,@12,@SA00003+8                                  0351
         BR    @14                                                 0351
*   END TMJAPPLY;                   /*                               */
         EJECT
*                                                                  0353
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO PROCESS INLINE JCLINE AT RESTORE            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0353
*TMJREST:                           /*                               */
*   PROCEDURE(RESTPTF);             /*                               */
TMJREST  STM   @14,@12,@SA00004                                    0353
         MVC   @PC00004(4),0(@01)                                  0353
*   DECLARE                         /*                               */
*     RESTPTF CHAR(*);              /*                               */
*   DECLARE                         /*                               */
*     RESRC FIXED(8);               /*                               */
*   RFY                                                            0356
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0357
*     ICTPTF BASED(ADDR(RESTPTF));  /*                               */
*   RESRC=ZERO;                     /*                               */
         SLR   RESRC,RESRC                                         0358
*   IF CCACHECK=OFF                 /* IF NOT CHECK RUN              */
*     THEN                          /*                               */
         TM    CCACHECK(CCAPTR),B'00010000'                        0359
         BNZ   @RF00359                                            0359
*     DO;                           /*                               */
*       ICTPPROC(1)=ON;             /*                               */
         L     @10,@PC00004                                        0361
         OI    ICTPPROC(@10),B'10000000'                           0361
*       CALL HMASMSEC(ICTPTF(1),IOPPTR);/* SET CDS SYSMOD ENTRY      */
         ST    @10,@AL00001                                        0362
         LA    @10,IOPPTR                                          0362
         ST    @10,@AL00001+4                                      0362
         L     @15,@CV01813                                        0362
         LA    @01,@AL00001                                        0362
         BALR  @14,@15                                             0362
*       RFY                                                        0363
*         RTNCODE RSTD;             /*                               */
*       RESRC=RTNCODE;              /*                               */
         LR    RESRC,RTNCODE                                       0364
*       RFY                                                        0365
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*   IF RESRC=ZERO                   /*                               */
*     THEN                          /*                               */
@RF00359 CH    RESRC,@CH00079                                      0367
         BNE   @RF00367                                            0367
*     DO;                           /*                               */
*       BUPPARM=''B;                /*                               */
         XC    BUPPARM(20),BUPPARM                                 0369
*       BUPFUNCT=BUPREST;           /* SET TO RESTORE CDS FROM SCDS  */
         MVI   BUPFUNCT,X'04'                                      0370
*       BUPSYSMD=ICTPTFS(1);        /*                               */
         L     @10,@PC00004                                        0371
         MVC   BUPSYSMD(7),ICTPTFS(@10)                            0371
*       BUPSTYPE=ICTPTYPE(1);       /*                               */
         MVC   BUPSTYPE(1),ICTPTYPE(@10)                           0372
*       BUPGTPAD=TBLXASGT;          /*                               */
         L     @10,@PC00001                                        0373
         MVC   BUPGTPAD(4),TBLXASGT(@10)                           0373
*       CALL HMASMBUR(BUPPARM);     /* RESTORE CDS                   */
         L     @15,@CV01806                                        0374
         LA    @01,@AL00374                                        0374
         BALR  @14,@15                                             0374
*       RFY                                                        0375
*         RTNCODE RSTD;             /*                               */
*       RESRC=RTNCODE;              /*                               */
         LR    RESRC,RTNCODE                                       0376
*       RFY                                                        0377
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*   RETURN CODE(RESRC);             /*                               */
@RF00367 LR    @15,RESRC                                           0379
         L     @14,@SA00004                                        0379
         LM    @00,@12,@SA00004+8                                  0379
         BR    @14                                                 0379
*   END TMJREST;                                                   0380
         EJECT
*                                                                  0381
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO FIND THE JCLIN INPUT IN THE SYSMOD  */
*   /* MCS ENTRY                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0381
*TMJFJCL:                           /*                               */
*   PROCEDURE(FJCLPTF);             /*                               */
TMJFJCL  STM   @14,@12,@SA00005                                    0381
         MVC   @PC00005(4),0(@01)                                  0381
*   DECLARE                         /*                               */
*     FJCLPTF CHAR(*);              /*                               */
*   DECLARE                         /*                               */
*     FJCLRC FIXED(8);              /*                               */
*   DECLARE                         /*                               */
*     1 FJCLSW BIT(8),              /*                               */
*       3 JCLFND BIT(1),            /*                               */
*       3 * BIT(7);                 /*                               */
*   RFY                                                            0385
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0386
*     MCBPTFMP BASED(MCBPTR);       /*                               */
*   RFY                                                            0387
*     MCBELEMP BASED(MCBPTR);       /*                               */
*   RFY                                                            0388
*     ICTPTF BASED(ADDR(FJCLPTF));  /*                               */
*                                                                  0388
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP HMASMCRD PARM LIST(HMASMCRP) AND HMASMMPD PARM LIST     */
*   /* (HMASMMPP)                                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0389
*   FJCLRC=ZERO;                    /*                               */
         SLR   FJCLRC,FJCLRC                                       0389
*   HMASMCRP=''B;                   /* CLEAR THE PARM LIST           */
         XC    HMASMCRP(106),HMASMCRP                              0390
*   CRPINDS=IOPPTS;                 /* INPUT DATASET IS SMPPTS       */
         MVI   CRPINDS,X'06'                                       0391
*   MPPPARM=''B;                    /* INIT MPD PARM                 */
         XC    MPPPARM(23),MPPPARM                                 0392
*   MPPIOPAD=0;                     /* NO IOP IS PASSED              */
         SLR   @10,@10                                             0393
         ST    @10,MPPIOPAD                                        0393
*   MPPMCBAD=MCBPTR;                /* POINT TO THE LOCAL MCB        */
         ST    MCBPTR,MPPMCBAD                                     0394
*   MPPCRDAD=ADDR(HMASMCRD);        /* GET ROUTINE FOR USE BY MPD    */
         L     @10,@CV01807                                        0395
         ST    @10,MPPCRDAD                                        0395
*   MPPCRDPM=ADDR(HMASMCRP);        /* GET ROUTINE PARM LIST         */
         LA    @10,HMASMCRP                                        0396
         ST    @10,MPPCRDPM                                        0396
*   MPPSMDNM=ICTPTFS(1);            /* PASS SYSMOD NUMBER            */
*                                                                  0397
         L     @10,@PC00005                                        0397
         MVC   MPPSMDNM(7),ICTPTFS(@10)                            0397
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCATE SYSMOD MCS ENTRY ON PTS. ISSUE ERROR MSG IF NOT FOUND  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0398
*   IOPDSID=IOPPTS;                 /* DO LOCATE ON PTS              */
         L     @15,IOPPTR                                          0398
         MVI   IOPDSID(@15),X'06'                                  0398
*   IOPNAME=ICTPTFS(1);             /* SYSMOD NUMBER                 */
         MVI   IOPNAME+7(@15),C' '                                 0399
         MVC   IOPNAME(7,@15),ICTPTFS(@10)                         0399
*   IOPTYPE=IOPMCS;                 /* LOCATE MCS ENTRY              */
         MVI   IOPTYPE(@15),X'10'                                  0400
*   IOPFUNCT=IOPLOC;                /* FUNCTION IS LOCATE            */
         MVI   IOPFUNCT(@15),X'03'                                 0401
*   CALL HMASMIO(HMASMIOP);         /* LOCATE MCS ENTRY              */
         ST    @15,@AL00001                                        0402
         L     @15,@CV01805                                        0402
         LA    @01,@AL00001                                        0402
         BALR  @14,@15                                             0402
*   IF IOPRETRN=IOPGOOD             /*                               */
*     THEN                          /*                               */
         L     @10,IOPPTR                                          0403
         CLI   IOPRETRN(@10),0                                     0403
         BNE   @RF00403                                            0403
*     DO;                           /*                               */
*       IOPFUNCT=IOPPOSI;           /* FUNCTION IS TO POSITION       */
         MVI   IOPFUNCT(@10),X'02'                                 0405
*       CALL HMASMIO(HMASMIOP);     /* CALL FOR POSITIONING          */
         ST    @10,@AL00001                                        0406
         L     @15,@CV01805                                        0406
         LA    @01,@AL00001                                        0406
         BALR  @14,@15                                             0406
*       FJCLRC=IOPRETRN;            /* SAVE RETURN CODE              */
         L     @10,IOPPTR                                          0407
         SLR   FJCLRC,FJCLRC                                       0407
         IC    FJCLRC,IOPRETRN(,@10)                               0407
*     END;                          /*                               */
*   ELSE                            /*                               */
*     IF FJCLRC=IOPNTFND            /* IF NOT FOUND                  */
*       THEN                        /*                               */
         B     @RC00403                                            0409
@RF00403 CH    FJCLRC,@CH00035                                     0409
         BNE   @RF00409                                            0409
*       DO;                         /*                               */
*         MGPCLEAR=''B;             /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0411
*         MGPMGNO1=HMA246I;         /* XXXXXXXX XXXXXXXX NOT FOUND ON
*                                      XXXXXXXX LIBRARY              */
         MVC   MGPMGNO1(2),@CH01816                                0412
*         MGPTYPE=MGPERR;           /* SEVERITY IS ERROR             */
         MVI   MGPTYPE,X'03'                                       0413
*         MGPVARPT(1)=ADDR(CCATYPEA(IOPMCS));/*                      */
         L     @10,CCATPAD(,CCAPTR)                                0414
         LA    @10,CCATYPEA+120(,@10)                              0414
         ST    @10,MGPVARPT                                        0414
*         MGPVARPT(2)=ADDR(IOPNAME);/* ENTRY                         */
         L     @10,IOPPTR                                          0415
         LA    @10,IOPNAME(,@10)                                   0415
         ST    @10,MGPVARPT+4                                      0415
*         MGPVARPT(3)=ADDR(CCADSIDA(IOPPTS));/*                      */
         L     @10,CCADSAD(,CCAPTR)                                0416
         LA    @10,CCADSIDA+40(,@10)                               0416
         ST    @10,MGPVARPT+8                                      0416
*         CALL HMASMMSG(HMASMMGP);  /* ISSUE MESSAGE                 */
         L     @15,@CV01809                                        0417
         LA    @01,@AL00417                                        0417
         BALR  @14,@15                                             0417
*         FJCLRC=STOPPTF;           /* SET RETURNCODE TO AN EIGHT    */
         LA    FJCLRC,8                                            0418
*       END;                        /*                               */
*     ELSE                          /*                               */
*       FJCLRC=IOPRETRN;            /*                               */
*                                                                  0420
         B     @RC00409                                            0420
@RF00409 L     @10,IOPPTR                                          0420
         SLR   FJCLRC,FJCLRC                                       0420
         IC    FJCLRC,IOPRETRN(,@10)                               0420
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP READING THRU PTS RECORDS TILL JCLIN RECORD FOUND OR TILL */
*   /* END OF FILE OR I/O ERROR                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0421
*   IF FJCLRC=ZERO                  /*                               */
*     THEN                          /*                               */
@RC00409 DS    0H                                                  0421
@RC00403 CH    FJCLRC,@CH00079                                     0421
         BNE   @RF00421                                            0421
*     DO;                           /*                               */
*       JCLFND=OFF;                 /*                               */
         NI    JCLFND,B'01111111'                                  0423
*       DO WHILE(                   /* LOOP TILL                     */
*             JCLFND=OFF            /* ++JCLIN FOUND                 */
*             &CRPRETRN=CRPGOOD);   /* OR BAD RC FROM READ           */
         B     @DE00424                                            0424
@DL00424 DS    0H                                                  0425
*         CALL HMASMCRD(HMASMCRP);  /* READ RECORD                   */
         L     @15,@CV01807                                        0425
         LA    @01,@AL00425                                        0425
         BALR  @14,@15                                             0425
*         IF CRPRETRN=CRPGOOD       /* IF RECORD READ OK             */
*             &CRPBUFFR(1:2)='++'   /* IF MCS CONTROL CARD           */
*           THEN                    /*                               */
         CLI   CRPRETRN,0                                          0426
         BNE   @RF00426                                            0426
         CLC   CRPBUFFR(2),@CC01902                                0426
         BNE   @RF00426                                            0426
*           DO;                     /*                               */
*             CALL HMASMMPD(MPPPARM);/* CALL MPD TO PARS RCD         */
         L     @15,@CV01810                                        0428
         LA    @01,@AL00428                                        0428
         BALR  @14,@15                                             0428
*             RFY                                                  0429
*               RTNCODE RSTD;       /*                               */
*             FJCLRC=RTNCODE;       /*                               */
         LR    FJCLRC,RTNCODE                                      0430
*             RFY                                                  0431
*               RTNCODE UNRSTD;     /*                               */
*             IF FJCLRC=ZERO        /* IF RCD PARSED OK              */
*                 &MCBTYPE=MCBJCLTP /* AND ++ JCLIN RECORD           */
*               THEN                /*                               */
         CH    FJCLRC,@CH00079                                     0432
         BNE   @RF00432                                            0432
         CLI   MCBTYPE(MCBPTR),10                                  0432
         BNE   @RF00432                                            0432
*               JCLFND=ON;          /* SET SW TO STOP LOOP           */
         OI    JCLFND,B'10000000'                                  0433
*           END;                    /* END ++ FOUND                  */
@RF00432 DS    0H                                                  0435
*       END;                        /* END READ LOOP                 */
@RF00426 DS    0H                                                  0435
@DE00424 TM    JCLFND,B'10000000'                                  0435
         BNZ   @DC00424                                            0435
         CLI   CRPRETRN,0                                          0435
         BE    @DL00424                                            0435
@DC00424 DS    0H                                                  0436
*       IF JCLFND=OFF               /* IF ++JCLIN NOT FOUND          */
*         THEN                      /*                               */
         TM    JCLFND,B'10000000'                                  0436
         BNZ   @RF00436                                            0436
*         DO;                       /*                               */
*           MGPCLEAR=''B;           /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0438
*           MGPMGNO1=HMA419I;       /* ++JCLIN NOT FOUND IN SYSMOD 0439
*                                      XXXXXXX MCS ENTRY             */
         MVC   MGPMGNO1(2),@CH01822                                0439
*           MGPVARPT(1)=ADDR(ICTPTFS(1));/* SYSMOD NUMBER            */
         L     @10,@PC00005                                        0440
         ST    @10,MGPVARPT                                        0440
*           MGPTYPE=MGPERR;         /*                               */
         MVI   MGPTYPE,X'03'                                       0441
*           CALL HMASMMSG(HMASMMGP);/*                               */
         L     @15,@CV01809                                        0442
         LA    @01,@AL00442                                        0442
         BALR  @14,@15                                             0442
*           FJCLRC=STOPPTF;         /*                               */
         LA    FJCLRC,8                                            0443
*         END;                      /*                               */
*     END;                          /*                               */
*                                                                  0445
@RF00436 DS    0H                                                  0446
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0446
*   RETURN CODE(FJCLRC);            /*                               */
@RF00421 LR    @15,FJCLRC                                          0446
         L     @14,@SA00005                                        0446
         LM    @00,@12,@SA00005+8                                  0446
         BR    @14                                                 0446
*   END TMJFJCL;                    /*                               */
         EJECT
*                                                                  0448
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO SETUP THE PARMS FOR HMASMUPD FROM THE MCB   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0448
*TMJSTUPD:                                                         0448
*   PROCEDURE(STUPDPTF);            /*                               */
TMJSTUPD STM   @14,@12,@SA00006                                    0448
         MVC   @PC00006(4),0(@01)                                  0448
*   DECLARE                         /*                               */
*     STUPDPTF CHAR(*);             /*                               */
*   DECLARE                         /*                               */
*     PKCHAR CHAR(4),               /* FORUNPACK OF RELFILE NUMBER   */
*     PKDEC CHAR(4),                /*                               */
*     PKBIN FIXED(15);              /*                               */
*   DECLARE                         /*                               */
*     ZEROS CHAR(4) CONSTANT('0000');/*                              */
*   DECLARE                         /*                               */
*     I FIXED(31);                  /*                               */
*   RFY                                                            0453
*     ICTPTF BASED(ADDR(STUPDPTF)); /*                               */
*   RFY                                                            0454
*     MCBPTFMP BASED(MCBPTR);       /*                               */
*   RFY                                                            0455
*     MCBELEMP BASED(MCBPTR);       /*                               */
*                                                                  0455
*   /*****************************************************************/
*   /*                                                               */
*   /* INIT PARM AND SET UP PROGRAM NAMES                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0456
*   UPDPARM=''B;                    /*                               */
         XC    UPDPARM(121),UPDPARM                                0456
*   IF MCBELASM^=ZERO               /* IF ASSEM NAME SPECIFIED       */
*     THEN                          /*                               */
         CLI   MCBELASM(MCBPTR),0                                  0457
         BE    @RF00457                                            0457
*     DO;                           /*                               */
*       UPDPGMLN(UPDASM)=MCBELASM;  /* LENGTH OF ASSEM PGM NAME      */
         MVC   UPDPGMLN(1),MCBELASM(MCBPTR)                        0459
*       UPDPGMNM(UPDASM)=MCBEJASM;  /* ASSEMBLER NAME                */
         MVC   UPDPGMNM(12),MCBEJASM(MCBPTR)                       0460
*     END;                          /*                               */
*   IF MCBELLKD^=ZERO               /* IF LKED NAME SPECIFIED        */
*     THEN                          /*                               */
@RF00457 CLI   MCBELLKD(MCBPTR),0                                  0462
         BE    @RF00462                                            0462
*     DO;                           /*                               */
*       UPDPGMLN(UPDLKD)=MCBELLKD;  /* LENGTH OF LKED PGM NAME       */
         MVC   UPDPGMLN+13(1),MCBELLKD(MCBPTR)                     0464
*       UPDPGMNM(UPDLKD)=MCBEJLKD;  /* LKED NAME                     */
         MVC   UPDPGMNM+13(12),MCBEJLKD(MCBPTR)                    0465
*     END;                          /*                               */
*   IF MCBELUPI^=ZERO               /* IF UPDTE NAME SPECIFIED       */
*     THEN                          /*                               */
@RF00462 CLI   MCBELUPI(MCBPTR),0                                  0467
         BE    @RF00467                                            0467
*     DO;                           /*                               */
*       UPDPGMLN(UPDUPD)=MCBELUPI;  /* LENGTH OF UPDTE PGM NAME      */
         MVC   UPDPGMLN+26(1),MCBELUPI(MCBPTR)                     0469
*       UPDPGMNM(UPDUPD)=MCBEJUPI;  /* UPDTE NAME                    */
         MVC   UPDPGMNM+26(12),MCBEJUPI(MCBPTR)                    0470
*     END;                          /*                               */
*   IF MCBELCPY^=ZERO               /* IF COPY NAME SPECIFIED        */
*     THEN                          /*                               */
@RF00467 CLI   MCBELCPY(MCBPTR),0                                  0472
         BE    @RF00472                                            0472
*     DO;                           /*                               */
*       UPDPGMLN(UPDCPY)=MCBELCPY;  /* LENGTH OF COPY PGM NAME       */
         MVC   UPDPGMLN+39(1),MCBELCPY(MCBPTR)                     0474
*       UPDPGMNM(UPDCPY)=MCBEJCPY;  /* COPY NAME                     */
         MVC   UPDPGMNM+39(12),MCBEJCPY(MCBPTR)                    0475
*     END;                          /*                               */
*                                                                  0476
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP SYSMOD NUMBER AND DATASET ID FOR INPUT                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0477
*   UPDSYSMD=ICTPTFS(1);            /*                               */
@RF00472 L     @10,@PC00006                                        0477
         MVC   UPDSYSMD(7),ICTPTFS(@10)                            0477
*   UPDSTYPE=ICTPTYPE(1);           /*                               */
         MVC   UPDSTYPE(1),ICTPTYPE(@10)                           0478
*   IF MCBETXLB(1)^=BLANK           /* IF TXLIB SPECIFIED            */
*     THEN                          /*                               */
         CLI   MCBETXLB(MCBPTR),C' '                               0479
         BE    @RF00479                                            0479
*     DO;                           /*                               */
*       UPDDSID=IOPANYDD;           /*                               */
         MVI   UPDDSID,X'18'                                       0481
*       UPDDDNAM=MCBETXLB;          /*                               */
         MVC   UPDDDNAM(8),MCBETXLB(MCBPTR)                        0482
*     END;                          /*                               */
*   ELSE                            /*                               */
*     DO;                           /*                               */
         B     @RC00479                                            0484
@RF00479 DS    0H                                                  0485
*       UPDDDNAM=BLANK;             /*                               */
         MVI   UPDDDNAM+1,C' '                                     0485
         MVC   UPDDDNAM+2(6),UPDDDNAM+1                            0485
         MVI   UPDDDNAM,C' '                                       0485
*       IF MCBERLF(1)^=BLANK        /* IF RELFILE                    */
*         THEN                      /*                               */
         CLI   MCBERLF(MCBPTR),C' '                                0486
         BE    @RF00486                                            0486
*         DO;                       /*                               */
*           DO I=1 BY 1 WHILE(      /* NUM OF SIG CHAR IN NUM        */
*                 MCBERLF(I)^=BLANK);/*                              */
         LA    I,1                                                 0488
         B     @DE00488                                            0488
@DL00488 DS    0H                                                  0489
*           END;                    /*                               */
         AH    I,@CH00061                                          0489
@DE00488 LR    @10,MCBPTR                                          0489
         ALR   @10,I                                               0489
         CLI   MCBERLF-1(@10),C' '                                 0489
         BNE   @DL00488                                            0489
*           I=I-1;                  /*                               */
         BCTR  I,0                                                 0490
*           PKCHAR=ZEROS;           /*                               */
         MVC   PKCHAR(4),@CC01912                                  0491
*           PKCHAR(5-I:4)=MCBERLF(1:I);/*                            */
         LA    @10,5                                               0492
         SLR   @10,I                                               0492
         LA    @01,PKCHAR-1(@10)                                   0492
         LCR   @10,@10                                             0492
         AH    @10,@CH00035                                        0492
         EX    @10,@SM01944                                        0492
*           PACK(PKDEC,PKCHAR);     /*                               */
         PACK  PKDEC(4),PKCHAR(4)                                  0493
*           CVB(PKBIN,PKDEC);       /*                               */
         XC    @TS00001(8),@TS00001                                0494
         MVC   @TS00001+4(4),PKDEC                                 0494
         CVB   PKBIN,@TS00001                                      0494
*           HMASMSPL=''B;           /*                               */
         XC    HMASMSPL(5),HMASMSPL                                0495
*           SPLPMAD=ADDR(PARMSUB);  /*                               */
         LA    @10,PARMSUB                                         0496
         ST    @10,SPLPMAD                                         0496
*           SPLFUNCT=SPLBDDSN;      /*                               */
         MVI   SPLFUNCT,X'05'                                      0497
*           SPLIPFX=ICTPTPFX(1);    /*                               */
         L     @03,@PC00006                                        0498
         MVC   SPLIPFX(26,@10),ICTPTPFX(@03)                       0498
*           SPLISMD=ICTPTFS(1);     /*                               */
         MVC   SPLISMD(7,@10),ICTPTFS(@03)                         0499
*           SPLIFIL=PKBIN;          /*                               */
         STH   PKBIN,SPLIFIL(,@10)                                 0500
*           CALL HMASMSUB(HMASMSPL);/*                               */
         L     @15,@CV01814                                        0501
         LA    @01,@AL00501                                        0501
         BALR  @14,@15                                             0501
*           UPDDSID=IOPLRF;         /*                               */
         MVI   UPDDSID,X'20'                                       0502
*           UPDDSNAM=SPLODSN;       /*                               */
         L     @10,SPLPMAD                                         0503
         MVC   UPDDSNAM(44),SPLODSN(@10)                           0503
*         END;                      /* END RELFILE                   */
*       ELSE                        /*                               */
*         DO;                       /*                               */
         B     @RC00486                                            0505
@RF00486 DS    0H                                                  0506
*           UPDDSID=IOPPTS;         /*                               */
         MVI   UPDDSID,X'06'                                       0506
*           UPDDSNAM=BLANK;         /*                               */
         MVI   UPDDSNAM+1,C' '                                     0507
         MVC   UPDDSNAM+2(42),UPDDSNAM+1                           0507
         MVI   UPDDSNAM,C' '                                       0507
*         END;                      /*                               */
*     END;                          /* END NOT TXLIB                 */
*                                                                  0509
@RC00486 DS    0H                                                  0510
*   /*****************************************************************/
*   /*                                                               */
*   /* SET CHECK BIT IF IN CHECK MODE                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0510
*   IF TBLCHECK=ON                  /*                               */
*     THEN                          /*                               */
@RC00479 L     @10,@PC00001                                        0510
         L     @10,TBLXTBL(,@10)                                   0510
         TM    TBLCHECK(@10),B'01000000'                           0510
         BNO   @RF00510                                            0510
*     UPDCHECK=ON;                  /*                               */
         OI    UPDCHECK,B'10000000'                                0511
*   IF ICTPREDO(1)=ON               /*                               */
*     THEN                          /*                               */
@RF00510 L     @10,@PC00006                                        0512
         TM    ICTPREDO(@10),B'01000000'                           0512
         BNO   @RF00512                                            0512
*     UPDREDO=ON;                   /*                               */
*                                                                  0513
         OI    UPDREDO,B'00100000'                                 0513
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0514
*   RETURN CODE(ZERO);              /*                               */
@RF00512 SLR   @15,@15                                             0514
         L     @14,@SA00006                                        0514
         LM    @00,@12,@SA00006+8                                  0514
         BR    @14                                                 0514
*   END TMJSTUPD;                   /*                               */
*   END HMASMTMJ                    /*                               */
*                                                                  0516
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMMCB)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMCRP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSET)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSPL)                                       */
*                                                                  0516
*       ;                                                          0516
@DATA    DS    0H
@CH00079 DC    H'0'
@CH00061 DC    H'1'
@CH00035 DC    H'4'
@CH00053 DC    H'8'
@CH00125 DC    H'10'
@CH00265 DC    H'12'
@CH01816 DC    H'47'
@CH01818 DC    H'103'
@CH01920 DC    H'116'
@CH01824 DC    H'118'
@CH01820 DC    H'219'
@CH01822 DC    H'220'
@SM01944 MVC   0(0,@01),MCBERLF(MCBPTR)
         DS    0F
@AL00220 DC    A(TMJX)                 LIST WITH   1 ARGUMENT(S)
@AL00236 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00338 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00417 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00442 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00327 DC    A(UPDPARM)              LIST WITH   1 ARGUMENT(S)
@AL00346 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00348 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00374 DC    A(BUPPARM)              LIST WITH   1 ARGUMENT(S)
@AL00425 DC    A(HMASMCRP)             LIST WITH   1 ARGUMENT(S)
@AL00428 DC    A(MPPPARM)              LIST WITH   1 ARGUMENT(S)
@AL00501 DC    A(HMASMSPL)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00003 DS    15F
@PC00003 DS    1F
@SA00006 DS    0F
@PC00006 EQU   @SA00006+60
@SA00005 DS    0F
@PC00005 EQU   @SA00005+60
@SA00004 DS    0F
@PC00004 EQU   @SA00004+60
@SA00002 DS    0F
@PC00002 EQU   @SA00002+60
         DS    16F
@AL00001 DS    2A
@TF00001 DS    F
         DS    0F
@CF01932 DC    F'-116'
@CF01933 DC    F'-108'
@CF01939 DC    F'-107'
@CF01940 DC    F'-106'
@CF01937 DC    F'-103'
@CF01934 DC    F'-102'
@CF01941 DC    F'-98'
@CF01938 DC    F'-96'
@CV01805 DC    V(HMASMIO)
@CV01806 DC    V(HMASMBUR)
@CV01807 DC    V(HMASMCRD)
@CV01808 DC    V(HMASMGTA)
@CV01809 DC    V(HMASMMSG)
@CV01810 DC    V(HMASMMPD)
@CV01811 DC    V(HMASMTCR)
@CV01812 DC    V(HMASMUPD)
@CV01813 DC    V(HMASMSEC)
@CV01814 DC    V(HMASMSUB)
         DS    0D
IOPPTR   DS    A
TMJX     DS    F
NXTY     DS    F
CON      DC    H'0'
MAXNUM   DC    XL2'7FFF'
LON      DC    H'0'
         DS    0D
@TS00001 DS    CL8
@CC01826 DC    C'SUCCESSFUL'
@CC01829 DC    C'FAILED    '
@CC01912 DC    C'0000'
@CC01902 DC    C'++'
@CC00660 DC    C'M'
         DS    CL1
ICTENDCH DC    X'FFFFFFFF'
HMASMMGP DS    CL28
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00224 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00225 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL16
         ORG   MGPVAR
MGPVARPT DS    4A
         ORG   HMASMMGP+28
HMASMCRP DS    CL106
         ORG   HMASMCRP
CRPUXNUM DS    FL1
@NM00226 DS    CL3
CRPSCPAD DS    AL4
CRPINDS  DS    FL1
CRPOUTDS DS    FL1
CRPRETRN DS    FL1
@NM00227 DS    CL3
CRPFLG1  DS    BL2
         ORG   CRPFLG1
CRPBFPRM DS    BL1
CRPLOGCK EQU   CRPFLG1+0
CRPPTS   EQU   CRPFLG1+0
CRPLOG   EQU   CRPFLG1+0
CRPPRINT EQU   CRPFLG1+0
CRPOTHER EQU   CRPFLG1+0
CRPOFFST EQU   CRPFLG1+0
CRPSCNCL EQU   CRPFLG1+0
CRPEOFEN DS    BL1
CRPTRMEX EQU   CRPFLG1+1
CRPNOWPP EQU   CRPFLG1+1
CRPLIST  EQU   CRPFLG1+1
CRPRPT   EQU   CRPFLG1+1
@NM00228 EQU   CRPFLG1+1
         ORG   HMASMCRP+16
CRPFLG2  DS    BL2
         ORG   CRPFLG2
CRPINSW0 DS    BL1
         ORG   CRPINSW0
CRPEOFSW DS    BL1
         ORG   CRPFLG2+0
CRPINSW1 EQU   CRPFLG2+0
         ORG   CRPINSW1
CRPEXADD EQU   CRPINSW1+0
         ORG   CRPFLG2+0
CRPINSW2 EQU   CRPFLG2+0
         ORG   CRPINSW2
CRPWRTLG EQU   CRPINSW2+0
         ORG   CRPFLG2+0
CRPINSW3 EQU   CRPFLG2+0
         ORG   CRPINSW3
CRPEOF1  EQU   CRPINSW3+0
         ORG   CRPFLG2+0
CRPINSW4 EQU   CRPFLG2+0
CRPINSW5 EQU   CRPFLG2+0
CRPINSW6 EQU   CRPFLG2+0
CRPINSW7 EQU   CRPFLG2+0
         DS    CL1
CRPINSW8 DS    BL1
CRPINSW9 EQU   CRPFLG2+1
CRPINSWA EQU   CRPFLG2+1
CRPINSWB EQU   CRPFLG2+1
CRPINSWC EQU   CRPFLG2+1
CRPINSWD EQU   CRPFLG2+1
CRPINSWE EQU   CRPFLG2+1
CRPINSWF EQU   CRPFLG2+1
         ORG   HMASMCRP+18
CRPBUFFR DS    CL80
         ORG   CRPBUFFR
CRPBFCTL DS    CL72
         ORG   CRPBFCTL
CRPBFDTA DS    CL71
CRPBFCNT DS    CL1
         ORG   CRPBUFFR+72
CRPBFSEQ DS    CL8
         ORG   HMASMCRP+98
CRPDDNAM DS    CL8
         ORG   HMASMCRP+106
HMASMSET DS    CL12
         ORG   HMASMSET
SELSTENT DS    CL10
         ORG   SELSTENT
SELSTFLG DS    BL2
         ORG   SELSTFLG
@NM00229 DS    BL1
SEMCS    EQU   SELSTFLG+0
SESMD    EQU   SELSTFLG+0
SESRC    DS    BL1
SEDLB    EQU   SELSTFLG+1
SEMOD    EQU   SELSTFLG+1
SEMAC    EQU   SELSTFLG+1
SELMD    EQU   SELSTFLG+1
SEASM    EQU   SELSTFLG+1
SEFMD    EQU   SELSTFLG+1
SESYS    EQU   SELSTFLG+1
         ORG   SELSTENT+2
SENAME   DS    CL8
         ORG   SENAME
SESMDNO  DS    CL7
         ORG   SESMDNO
SEPTFNO  DS    CL7
         ORG   SENAME+7
@NM00230 DS    CL1
         ORG   HMASMSET+10
SEFLAGS  DS    BL1
         ORG   SEFLAGS
SEGROUP  DS    BL1
SESELECT EQU   SEFLAGS+0
SEEXCLUD EQU   SEFLAGS+0
SENOJCL  EQU   SEFLAGS+0
SEFMID   EQU   SEFLAGS+0
@NM00231 EQU   SEFLAGS+0
SEFOUND  EQU   SEFLAGS+0
         ORG   HMASMSET+11
SEFLAG2  DS    BL1
         ORG   SEFLAG2
SEFLAG2A DS    BL1
SEFLAG2B EQU   SEFLAG2+0
SEFLAG2C EQU   SEFLAG2+0
SEFLAG2D EQU   SEFLAG2+0
SEFLAG2E EQU   SEFLAG2+0
SEFLAG2F EQU   SEFLAG2+0
SEFLAG2G EQU   SEFLAG2+0
SEFLAG2H EQU   SEFLAG2+0
         ORG   HMASMSET+12
         DS    CL2
HMASMSPL DS    CL5
         ORG   HMASMSPL
SPLPMAD  DS    AL4
SPLFUNCT DS    FL1
         ORG   HMASMSPL+5
         DS    CL3
BUPPARM  DS    CL20
         ORG   BUPPARM
BUPFUNCT DS    FL1
BUPTYPE  DS    FL1
BUPSTYPE DS    FL1
BUPFLAGS DS    BL1
         ORG   BUPFLAGS
BUPREDO  DS    BL1
@NM00235 EQU   BUPFLAGS+0
         ORG   BUPPARM+4
BUPSYSMD DS    CL7
@NM00236 DS    CL1
BUPIOPAD DS    AL4
BUPGTPAD DS    AL4
         ORG   BUPPARM+20
UPDPARM  DS    CL121
         ORG   UPDPARM
UPDPGMS  DS    CL13
         ORG   UPDPGMS+0
UPDPGMLN DS    FL1
UPDPGMNM DS    CL12
         ORG   UPDPARM+52
UPDSYSMD DS    CL7
UPDSTYPE DS    FL1
UPDDSID  DS    FL1
@NM00237 DS    CL3
UPDDDNAM DS    CL8
UPDDSNAM DS    CL44
UPDGTPAD DS    AL4
UPDFLAGS DS    CL1
         ORG   UPDFLAGS
UPDFLG1  DS    BL1
         ORG   UPDFLG1
UPDCHECK DS    BL1
         ORG   UPDFLAGS+0
UPDFLG2  EQU   UPDFLAGS+0
         ORG   UPDFLG2
UPDTRACE EQU   UPDFLG2+0
         ORG   UPDFLAGS+0
UPDFLG3  EQU   UPDFLAGS+0
         ORG   UPDFLG3
UPDREDO  EQU   UPDFLG3+0
         ORG   UPDFLAGS+0
UPDFLG4  EQU   UPDFLAGS+0
UPDFLG5  EQU   UPDFLAGS+0
UPDFLG6  EQU   UPDFLAGS+0
UPDFLG7  EQU   UPDFLAGS+0
UPDFLG8  EQU   UPDFLAGS+0
         ORG   UPDPARM+121
         DS    CL3
MPPPARM  DS    CL23
         ORG   MPPPARM
MPPIOPAD DS    AL4
MPPMCBAD DS    AL4
MPPCRDAD DS    AL4
MPPCRDPM DS    AL4
MPPSMDNM DS    CL7
         ORG   MPPPARM+23
PARMSUB  DS    CL44
TMJSW    DS    BL1
         ORG   TMJSW
STOP     DS    BL1
@NM00238 EQU   TMJSW+0
         ORG   TMJSW+1
NXSMDSW  DS    BL1
         ORG   NXSMDSW
NXSMDEOF DS    BL1
NXSMDFND EQU   NXSMDSW+0
@NM00239 EQU   NXSMDSW+0
         ORG   NXSMDSW+1
FJCLSW   DS    BL1
         ORG   FJCLSW
JCLFND   DS    BL1
@NM00240 EQU   FJCLSW+0
         ORG   FJCLSW+1
PKCHAR   DS    CL4
PKDEC    DS    CL4
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @02
PKBIN    EQU   @02
FJCLRC   EQU   @02
RESRC    EQU   @02
APPRC    EQU   @02
NXTX     EQU   @02
TMJRTNCD EQU   @02
GTPPTR   EQU   @04
MCBPTR   EQU   @03
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
TBLXOPTS EQU   0
TBLJCLGT EQU   TBLXOPTS
TBLFLAGS EQU   TBLXOPTS+8
TBLFLG1  EQU   TBLFLAGS
TBLCHECK EQU   TBLFLG1
TBLNOJCL EQU   TBLFLG1
TBLFLG2  EQU   TBLFLAGS+2
TBLFLG3  EQU   TBLFLAGS+3
TBLFLG4  EQU   TBLFLAGS+5
TBLFLG5  EQU   TBLFLAGS+7
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICPTF EQU   CCAFICT+4
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00023 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFUNCT EQU   CCAFFUNC
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCACHECK EQU   CCAFLAG2
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCADSIDA EQU   0
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00039 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00041 EQU   CCABLDLL
CCALKDRC EQU   @NM00041+20
@NM00043 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00043+20
@NM00045 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00045+20
@NM00047 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00047+20
@NM00049 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00049+20
@NM00051 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00051+20
@NM00053 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00053+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00057 EQU   HMASMIOP+12
@NM00058 EQU   @NM00057
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00168 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPEND  EQU   ICTPTFS
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTPNOGO EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPJCLP EQU   ICTPFLG5
ICTPMDLP EQU   ICTPFLG5+1
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPREDO EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPFLG8 EQU   ICTPTF+14
ICTPECPL EQU   ICTPFLG8
ICTPFLG9 EQU   ICTPTF+15
@NM00195 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPTYPE EQU   ICTPTF+17
ICTPONUM EQU   ICTPTF+18
ICTPSUPN EQU   ICTPTF+20
ICTPTPFX EQU   ICTPTF+38
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
MCBPTFMP EQU   0
MCBTYPE  EQU   MCBPTFMP
MCBVERMP EQU   0
MCBVEND  EQU   MCBVERMP+8
MCBIFMP  EQU   0
MCBIEND  EQU   MCBIFMP+8
MCBELEMP EQU   0
MCBETXLB EQU   MCBELEMP+33
MCBERLF  EQU   MCBELEMP+73
MCBEJASM EQU   MCBELEMP+77
MCBELASM EQU   MCBELEMP+89
MCBEJCPY EQU   MCBELEMP+90
MCBELCPY EQU   MCBELEMP+102
MCBEJUPI EQU   MCBELEMP+103
MCBELUPI EQU   MCBELEMP+115
MCBEJLKD EQU   MCBELEMP+116
MCBELLKD EQU   MCBELEMP+128
MCBELEPM EQU   MCBELEMP+136
MCBEFLG1 EQU   MCBELEPM
MCBEFLG2 EQU   MCBELEPM+1
MCBEFLG3 EQU   MCBELEPM+2
MCBEFLG4 EQU   MCBELEPM+3
MCBEFLG5 EQU   MCBELEMP+140
MCBEEND  EQU   MCBELEMP+141
HMASMGTP EQU   0
GTPFUNCT EQU   HMASMGTP
GTPRETRN EQU   HMASMGTP+1
GTPRCDLN EQU   HMASMGTP+4
GTPKEYLN EQU   HMASMGTP+6
GTPBUFAD EQU   HMASMGTP+12
GTPRESTR EQU   HMASMGTP+16
GTPFLGS1 EQU   HMASMGTP+26
SPLPPACK EQU   0
SPLPUNPK EQU   0
SPLPDSN  EQU   0
SPLODSN  EQU   SPLPDSN
SPLIPFX  EQU   SPLODSN
SPLISMD  EQU   SPLODSN+26
SPLIFIL  EQU   SPLODSN+33
IOPBS01  EQU   0
IOPBS03  EQU   0
TBLXPARM EQU   0
TBLXINDX EQU   TBLXPARM+4
TBLXTBL  EQU   TBLXPARM+28
TBLXASGT EQU   TBLXPARM+44
TBLXFLG1 EQU   TBLXPARM+80
TBLXRC   EQU   TBLXPARM+92
TBLXIOP3 EQU   TBLXPARM+104
NXSMDX   EQU   0
APPPTF   EQU   0
RESTPTF  EQU   0
FJCLPTF  EQU   0
STUPDPTF EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00064 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00075 EQU   IOPUDATA
@NM00076 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00085 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00096 EQU   IOPSRCDR+1
@NM00098 EQU   @NM00096+7
@NM00102 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00106 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00112 EQU   IOPMODDR+1
@NM00114 EQU   @NM00112+7
@NM00118 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00122 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00133 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00140 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00149 EQU   IOPPTFFX
@NM00150 EQU   @NM00149
IOPPDTES EQU   IOPPTFFX+41
@NM00153 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00178 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00178
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00182 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00182
IOPBFTB1 EQU   IOPBFTB0
ICTENDNT EQU   ICTENDCH
MCBVVLST EQU   MCBVEND
MCBVNTRY EQU   MCBVVLST
MCBVNUM  EQU   MCBVNTRY
MCBIVLST EQU   MCBIEND
MCBINTRY EQU   MCBIVLST
MCBINUM  EQU   MCBINTRY
MCBEVLST EQU   MCBEEND
MCBENTRY EQU   MCBEVLST
MCBENUM  EQU   MCBENTRY
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
MCBEIND  EQU   MCBEVLST+8
@NM00223 EQU   MCBENTRY+7
MCBEND   EQU   MCBENUM
MCBIIND  EQU   MCBIVLST+8
@NM00216 EQU   MCBINTRY+7
MCBIND   EQU   MCBINUM
MCBVIND  EQU   MCBVVLST+8
@NM00214 EQU   MCBVNTRY+7
MCBVND   EQU   MCBVNUM
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00184 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00183 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00181 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00180 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00179 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00177 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00176 EQU   IOPPTSFX+35
@NM00175 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00174 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00173 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00172 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00171 EQU   IOPQFMDR
@NM00167 EQU   IOPQSMDR
@NM00166 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00165 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00164 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00163 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00162 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00161 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00160 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00159 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00158 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00157 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00156 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00155 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00154 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00153+3
IOPRECD  EQU   @NM00153
@NM00152 EQU   IOPPTFFX+8
@NM00151 EQU   @NM00149+7
IOPPRELN EQU   @NM00150
@NM00148 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00147 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00146 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00145 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00144 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00143 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00142 EQU   @NM00140+7
@NM00141 EQU   @NM00140
@NM00139 EQU   IOPSYSDR+5
@NM00138 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00137 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00136 EQU   IOPDLBFX+8
@NM00135 EQU   @NM00133+7
@NM00134 EQU   @NM00133
@NM00132 EQU   IOPDLBDR+1
@NM00131 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00130 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00129 EQU   IOPMODFX+12
@NM00128 EQU   IOPMODF4
@NM00127 EQU   IOPMODF3
@NM00126 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00125 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00124 EQU   @NM00122+7
@NM00123 EQU   @NM00122
@NM00121 EQU   IOPMODDR+17
@NM00120 EQU   @NM00118+7
@NM00119 EQU   @NM00118
@NM00117 EQU   @NM00114
@NM00116 EQU   @NM00114
@NM00115 EQU   @NM00114
@NM00113 EQU   @NM00112
@NM00111 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00110 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00109 EQU   IOPSRCFX+8
@NM00108 EQU   @NM00106+7
@NM00107 EQU   @NM00106
@NM00105 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00104 EQU   @NM00102+7
@NM00103 EQU   @NM00102
@NM00101 EQU   @NM00098
@NM00100 EQU   @NM00098
@NM00099 EQU   @NM00098
@NM00097 EQU   @NM00096
@NM00095 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00094 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00093 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00092 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00091 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00090 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00089 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00087 EQU   @NM00085+7
@NM00086 EQU   @NM00085
@NM00084 EQU   IOPLMDDR+6
@NM00083 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00082 EQU   IOPLMDF4
@NM00081 EQU   IOPLMDF3
@NM00080 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00079 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00078 EQU   IOPLMDDR
@NM00077 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00076+4
IOPUSED  EQU   @NM00076
IOPTPSEQ EQU   @NM00075+8
IOPVLSER EQU   @NM00075+2
IOPBLKSI EQU   @NM00075
IOPCQMAX EQU   IOPCQMAP+12
@NM00074 EQU   IOPCQMAP+11
@NM00073 EQU   IOPCQMAP+8
@NM00072 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00071 EQU   IOPSCMAP+11
@NM00070 EQU   IOPSCMAP+8
@NM00069 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00068 EQU   IOPNTMAX+11
@NM00067 EQU   IOPNTMAX+8
@NM00066 EQU   IOPNTMAX
@NM00065 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00064+5
IOPIPTF3 EQU   @NM00064
TBLXEND0 EQU   TBLXPARM+124
@NM00007 EQU   TBLXPARM+108
TBLXD2GT EQU   TBLXPARM+100
TBLXDLGT EQU   TBLXPARM+96
@NM00006 EQU   TBLXRC+3
TBLXIRC  EQU   TBLXRC+2
TBLXLRC  EQU   TBLXRC+1
TBLXTRC  EQU   TBLXRC
TBLXIBGN EQU   TBLXPARM+88
TBLXTSLP EQU   TBLXPARM+84
@NM00005 EQU   TBLXPARM+83
@NM00004 EQU   TBLXPARM+82
@NM00003 EQU   TBLXPARM+81
@NM00002 EQU   TBLXFLG1
TBLXTCRC EQU   TBLXFLG1
TBLXFUND EQU   TBLXPARM+72
TBLXFUNC EQU   TBLXPARM+64
@NM00001 EQU   TBLXPARM+62
TBLXCRQI EQU   TBLXPARM+61
TBLXCDSI EQU   TBLXPARM+60
TBLXLMGT EQU   TBLXPARM+56
TBLXSCGT EQU   TBLXPARM+52
TBLXSREL EQU   TBLXPARM+48
TBLXIFGT EQU   TBLXPARM+40
TBLXNULL EQU   TBLXPARM+36
TBLXTOP  EQU   TBLXPARM+32
TBLXSEGT EQU   TBLXPARM+24
TBLXIOPF EQU   TBLXPARM+20
TBLXIOP2 EQU   TBLXPARM+16
TBLXEND  EQU   TBLXINDX+8
TBLXSTRT EQU   TBLXINDX+4
TBLXCUR  EQU   TBLXINDX
TBLXHDR  EQU   TBLXPARM
SPLIUNPK EQU   SPLPUNPK+8
SPLOUNPK EQU   SPLPUNPK
SPLOPACK EQU   SPLPPACK+8
SPLIPACK EQU   SPLPPACK
@NM00234 EQU   HMASMGTP+27
GTPPSIZE EQU   GTPFLGS1
@NM00233 EQU   GTPFLGS1
GTPRCDNF EQU   GTPFLGS1
GTPNOSPM EQU   GTPFLGS1
GTPPOS   EQU   GTPRESTR+8
GTPRCD   EQU   GTPRESTR+4
GTPPAG   EQU   GTPRESTR
GTPWKAD  EQU   HMASMGTP+8
@NM00232 EQU   HMASMGTP+2
@NM00222 EQU   MCBEFLG5
MCBEDEL  EQU   MCBEFLG5
MCBESTD  EQU   MCBEFLG5
@NM00221 EQU   MCBEFLG4
@NM00220 EQU   MCBEFLG3
@NM00219 EQU   MCBEFLG2
MCBEPAGA EQU   MCBEFLG2
MCBENE   EQU   MCBEFLG2
@NM00218 EQU   MCBEFLG1
MCBEDC   EQU   MCBEFLG1
MCBEREFR EQU   MCBEFLG1
MCBEOVLY EQU   MCBEFLG1
MCBESCTR EQU   MCBEFLG1
MCBEREUS EQU   MCBEFLG1
MCBERENT EQU   MCBEFLG1
MCBEAPF  EQU   MCBEFLG1
MCBERMID EQU   MCBELEMP+129
MCBESSI  EQU   MCBELEMP+65
MCBEDALS EQU   MCBELEMP+57
MCBEASLB EQU   MCBELEMP+49
MCBELKLB EQU   MCBELEMP+41
MCBESYS  EQU   MCBELEMP+25
MCBEDOBJ EQU   MCBELEMP+17
MCBEDIST EQU   MCBELEMP+9
MCBENAME EQU   MCBELEMP+1
@NM00217 EQU   MCBELEMP
MCBIFENV EQU   MCBIFMP+1
@NM00215 EQU   MCBIFMP
MCBSFMID EQU   MCBVERMP+1
@NM00213 EQU   MCBVERMP
MCBPTP   EQU   MCBPTFMP+10
MCBPRELN EQU   MCBPTFMP+8
MCBPNO   EQU   MCBPTFMP+1
@NM00212 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00211 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00210 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00209 EQU   ICTCSRST
@NM00208 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00207 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00206 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00205 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00204 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00203 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00202 EQU   ICTSUPNT+7
ICTSUPND EQU   ICTSUPNM
@NM00201 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00200 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00199 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00198 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
ICTIXP   EQU   ICTIXPF
@NM00197 EQU   ICTPTF+100
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00196 EQU   @NM00195
ICTPRQBY EQU   @NM00195
ICTPRQOK EQU   @NM00195
ICTPRQCK EQU   @NM00195
@NM00194 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00193 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00192 EQU   ICTPFLG4
@NM00191 EQU   ICTPFLG4
@NM00190 EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00189 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00188 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPADDP EQU   ICTPFLG5+1
@NM00187 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00186 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00185 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00170 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00169 EQU   @NM00168+7
IOPQSMFM EQU   @NM00168
@NM00088 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00063 EQU   IOPUSERL
@NM00062 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00061 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00060 EQU   @NM00057+10
IOPSEQNO EQU   @NM00057+8
@NM00059 EQU   @NM00058+7
IOPPTFNM EQU   @NM00058
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00056 EQU   CCABLDLM+2
@NM00055 EQU   CCABLDLM
CCAUPDPM EQU   @NM00053+24
@NM00054 EQU   @NM00053+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00053+12
CCAUPDTE EQU   @NM00053+8
CCAUPDNM EQU   @NM00053
CCASUPPM EQU   @NM00051+24
@NM00052 EQU   @NM00051+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00051+12
CCAIOSUP EQU   @NM00051+8
CCASUPNM EQU   @NM00051
CCAZAPPM EQU   @NM00049+24
@NM00050 EQU   @NM00049+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00049+12
CCASPZAP EQU   @NM00049+8
CCAZAPNM EQU   @NM00049
CCACOMPM EQU   @NM00047+24
@NM00048 EQU   @NM00047+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00047+12
CCACOMRS EQU   @NM00047+8
CCACOMNM EQU   @NM00047
CCACPYPM EQU   @NM00045+24
@NM00046 EQU   @NM00045+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00045+12
CCACOPY  EQU   @NM00045+8
CCACPYNM EQU   @NM00045
CCAASMPM EQU   @NM00043+24
@NM00044 EQU   @NM00043+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00043+12
CCAASM   EQU   @NM00043+8
CCAASMNM EQU   @NM00043
CCALKDPM EQU   @NM00041+24
@NM00042 EQU   @NM00041+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00041+12
CCALKED  EQU   @NM00041+8
CCALKDNM EQU   @NM00041
CCAPGMPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCABPGRC EQU   @NM00039+20
CCABPGSP EQU   @NM00039+12
CCABPGAD EQU   @NM00039+8
CCABPGNM EQU   @NM00039
CCAEND   EQU   HMASMCCA+371
@NM00038 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00037 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00036 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00035 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00034 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00033 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00032 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00031 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00030 EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00029 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
@NM00028 EQU   @NM00023+18
@NM00027 EQU   @NM00023+16
CCATBLPA EQU   @NM00023+12
@NM00026 EQU   @NM00023+8
@NM00025 EQU   @NM00023+4
@NM00024 EQU   @NM00023
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00022 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00021 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00020 EQU   CCAFBUFR+122
@NM00019 EQU   CCAFBUFR+120
@NM00018 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00017 EQU   CCAFBUFR+88
@NM00016 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00015 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
@NM00014 EQU   TBLFLG5
TBLICTOK EQU   TBLFLG5
@NM00013 EQU   TBLFLG4
TBLBPFM  EQU   TBLFLG4
@NM00012 EQU   TBLFLG4
TBLBPIRQ EQU   TBLFLG4
TBLBPREQ EQU   TBLFLG4
TBLBPPRE EQU   TBLFLG4
TBLBPID  EQU   TBLFLG4
@NM00011 EQU   TBLFLG3+1
TBLSTS   EQU   TBLFLG3
TBLMTS   EQU   TBLFLG3
TBLPTS   EQU   TBLFLG3
TBLACRQ  EQU   TBLFLG3
TBLCRQ   EQU   TBLFLG3
TBLSCDS  EQU   TBLFLG3
TBLACDS  EQU   TBLFLG3
TBLCDS   EQU   TBLFLG3
TBLMASS  EQU   TBLFLG2
@NM00010 EQU   TBLFLG2
TBLFMID  EQU   TBLFLG2
TBLGROUP EQU   TBLFLG2
TBLEXC   EQU   TBLFLG2
TBLSEL   EQU   TBLFLG2
@NM00009 EQU   TBLFLG1+1
TBLDISW  EQU   TBLFLG1+1
TBLDISR  EQU   TBLFLG1+1
TBLDISN  EQU   TBLFLG1+1
TBLFLUSH EQU   TBLFLG1
TBLUSER  EQU   TBLFLG1
TBLAPAR  EQU   TBLFLG1
TBLCOMP  EQU   TBLFLG1
TBLASSEM EQU   TBLFLG1
TBLNOAPP EQU   TBLFLG1
@NM00008 EQU   TBLXOPTS+5
TBLNUCID EQU   TBLXOPTS+4
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   HMASMTMJ,(C'PLS2152',0802,78334)
