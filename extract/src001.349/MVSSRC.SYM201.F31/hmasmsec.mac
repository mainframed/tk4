         TITLE 'HMASMSEC - CREATE (A)CDS SYSMOD FROM ICT SYSMOD ENTRY'
HMASMSEC CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMSEC  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(8),0(@01)                                  0001
*                                                                  0169
*   /*****************************************************************/
*   /*                                                               */
*   /* MAIN MODULE SEGMENT FOR HMASMSEC                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0169
*   SECRETCD=ZERO;                  /* INIT RETURN CODE COLLECTOR    */
         SLR   SECRETCD,SECRETCD                                   0169
*   SECBITS=''B;                    /* INIT CONTROL BITS             */
         MVI   SECBITS,X'00'                                       0170
*   RFY                                                            0171
*     ICTPTF BASED(ADDR(CURSYM));   /* BASE ON CURRENT ICT SYSMOD    */
*   RFY                                                            0172
*     HMASMIOP BASED(CURIOP);       /* BASE ON PASSED IOP TO USE     */
*                                                                  0172
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE 'IN PROCESS' BIT IS ON, AND AN ENTRY EXISTS ON THE     */
*   /* (A)CDS, THEN SET UP TO RETURN TO THE CALLER WITH RC=0         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0173
*   IF ICTPROCS(1)=ON               /* IS THE 'IN PROCESS' BIT ON AND*/
*       &ICTPCDSE(1)=ON THEN        /* IS AN ENTRY ON (A)CDS?        */
         L     @10,@PC00001                                        0173
         TM    ICTPROCS(@10),B'10000000'                           0173
         BNO   @RF00173                                            0173
         TM    ICTPCDSE(@10),B'10000000'                           0173
         BNO   @RF00173                                            0173
*     ALLDONE=ON;                   /* SET UP TO RETURN WITH RC=0    */
         OI    ALLDONE,B'01000000'                                 0174
*   ELSE                                                           0175
*     DO;                           /*                               */
         B     @RC00173                                            0175
@RF00173 DS    0H                                                  0176
*       ICTERROR(1)=ON;             /* SET ERROR BIT ON              */
*                                                                  0176
         L     @10,@PC00001                                        0176
         OI    ICTERROR(@10),B'00010000'                           0176
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE ICT SYSMOD IS MARKED FOR DELETE (EITHER EXPLICIT OR*/
*       /* IMPLICIT) THEN CALL THE DELETE PROCESSING SUBROUTINE AND  */
*       /* SET UP TO RETURN TO THE CALLER WITHOUT BUILDING A ENTRY.  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0177
*       IF ICTPDEXP(1)=ON           /* PTF ENTRY EXPLICITLY DELETED, */
*           ×ICTPDIMP(1)=ON THEN    /* PTF ENTRY IMPLICITLY DELETED? */
         TM    ICTPDEXP(@10),B'00110000'                           0177
         BZ    @RF00177                                            0177
*         DO;                       /* YES- THEN DO DELETE PROCESS   */
*           CALL SECDELET;          /* ROUTINE TO HANDLE DELETE      */
         BAL   @14,SECDELET                                        0179
*           RFY                                                    0180
*             RTNCODE RSTD;         /* RESTRICT REG 15               */
*           SECRETCD=MAX(SECRETCD,RTNCODE);/* PICK UP HIGHEST RETURN
*                                      CODE                          */
         CR    SECRETCD,RTNCODE                                    0181
         BNL   *+6
         LR    SECRETCD,RTNCODE                                    0181
*           RFY                                                    0182
*             RTNCODE UNRSTD;       /* RELEASE REG 15                */
*           ALLDONE=ON;             /* SET UP TO RETURN TO CALLER    */
         OI    ALLDONE,B'01000000'                                 0183
*         END;                      /* END OF THE DELETE PROCESS     */
*     END;                          /* END OF ELSE DO                */
@RF00177 DS    0H                                                  0186
*                                                                  0186
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NOT ALL COMPLETED ALREADY THEN CALL APPROPRIATE SUBROUTINE */
*   /* BASED ON FUNCTION BEING EXECUTED.                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0186
*   IF ALLDONE=OFF THEN             /* RETURN NOT DESIRED?           */
@RC00173 TM    ALLDONE,B'01000000'                                 0186
         BNZ   @RF00186                                            0186
*     DO;                           /*                               */
*       RFY                                                        0188
*         RTNCODE RSTD;             /* RESTRICT REG 15               */
*       IF CCAAPPLY=ON              /* IS FUNCTION APPLY, OR         */
*           ×CCAACCPT=ON            /* ACCEPT?                       */
*         THEN                      /*                               */
         TM    CCAAPPLY(CCAPTR),B'01100000'                        0189
         BZ    @RF00189                                            0189
*         CALL SECAPPAC;            /* YES- CALL APPLY/ACCEPT PROCESS*/
         BAL   @14,SECAPPAC                                        0190
*       ELSE                        /*                               */
*         CALL SECREST;             /* YES- CALL RESTORE PROCESS     */
         B     @RC00189                                            0191
@RF00189 BAL   @14,SECREST                                         0191
*       SECRETCD=MAX(SECRETCD,RTNCODE);/* PICK UP HIGHEST RETURN CODE*/
@RC00189 CR    SECRETCD,RTNCODE                                    0192
         BNL   *+6
         LR    SECRETCD,RTNCODE                                    0192
*       RFY                         /*                               */
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0194
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO THE CALLER WITH THE HIGHEST RETURN CODE ENCOUNTERED */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0195
*   RETURN CODE(SECRETCD);          /* RETURN TO CALLER WITH MAX RC  */
@RF00186 LR    @15,SECRETCD                                        0195
         L     @13,4(,@13)                                         0195
         L     @14,12(,@13)                                        0195
         LM    @00,@12,20(@13)                                     0195
         BR    @14                                                 0195
         EJECT
*                                                                  0196
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE SYSMOD PROCESSING ROUTINE                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0196
*SECDELET:                                                         0196
*   PROC;                           /*                               */
SECDELET STM   @14,@12,@SA00002                                    0196
*   DECLARE                                                        0197
*     SECDELRC FIXED(31);           /* RETURN CODE HOLDER            */
*   SECDELRC=0;                     /* CLEAR RETURN CODE             */
*                                                                  0198
         SLR   SECDELRC,SECDELRC                                   0198
*   /*****************************************************************/
*   /*                                                               */
*   /* DO A BLDL FOR THE SYSMOD ENTRY ON THE (A)CDS                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0199
*   IF CCAAPPLY=ON THEN             /* IS FUNCTION APPLY?            */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0199
         BNO   @RF00199                                            0199
*     IOPDSID=IOPCDS;               /* INDICATE CDS DATASET          */
         L     @10,@PC00001+4                                      0200
         L     @10,CURIOP(,@10)                                    0200
         MVI   IOPDSID(@10),X'02'                                  0200
*   ELSE                            /* MUST BE ACCEPT FUNCTION       */
*     IOPDSID=IOPACDS;              /* INDICATE ACDS DATASET         */
         B     @RC00199                                            0201
@RF00199 L     @10,@PC00001+4                                      0201
         L     @10,CURIOP(,@10)                                    0201
         MVI   IOPDSID(@10),X'0C'                                  0201
*   IOPFUNCT=IOPBLDL;               /* INDICATE BLDL OPERATION       */
@RC00199 L     @10,@PC00001+4                                      0202
         L     @10,CURIOP(,@10)                                    0202
         MVI   IOPFUNCT(@10),X'04'                                 0202
*   IOPNAME=ICTPTFS(1);             /* SYSMOD BEING PROCESSED        */
         MVI   IOPNAME+7(@10),C' '                                 0203
         L     @03,@PC00001                                        0203
         MVC   IOPNAME(7,@10),ICTPTFS(@03)                         0203
*   IOPTYPE=IOPSMD;                 /* SYSMOD TYPE ENTRY DESIRED     */
         MVI   IOPTYPE(@10),X'0B'                                  0204
*   CALL HMASMIO(HMASMIOP);         /* CALL SMP IO INTERFACE ROUTINE */
         ST    @10,@AL00001                                        0205
         L     @15,@CV01624                                        0205
         LA    @01,@AL00001                                        0205
         BALR  @14,@15                                             0205
*   IF IOPRETRN>IOPNOTFD            /* ERRORS ENCOUNTERED            */
*     THEN                                                         0206
         L     @10,@PC00001+4                                      0206
         L     @10,CURIOP(,@10)                                    0206
         CLI   IOPRETRN(@10),4                                     0206
         BNH   @RF00206                                            0206
*     SECDELRC=IOPRETRN;            /* SAVE RETURN CODE FROM I/O     */
         SLR   SECDELRC,SECDELRC                                   0207
         IC    SECDELRC,IOPRETRN(,@10)                             0207
*   IF IOPRETRN=IOPGOOD THEN        /* WAS THE SYSMOD ENTRY FOUND?   */
@RF00206 L     @10,@PC00001+4                                      0208
         L     @10,CURIOP(,@10)                                    0208
         CLI   IOPRETRN(@10),0                                     0208
         BNE   @RF00208                                            0208
*     DO;                           /* YES-                          */
*                                                                  0209
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP TO UPDATE THE DIRECTORY ONLY OPERATION WITH THE    */
*       /* ERROR FLAG SET ON (A)CDS                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0210
*       IOPERROR=ON;                /* TURN ON THE ERROR FLAG        */
         OI    IOPERROR(@10),B'00010000'                           0210
*       IOPFUNCT=IOPSTOWR;          /* ADD ENTRY                     */
         MVI   IOPFUNCT(@10),X'54'                                 0211
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE ROUTINE */
         ST    @10,@AL00001                                        0212
         L     @15,@CV01624                                        0212
         LA    @01,@AL00001                                        0212
         BALR  @14,@15                                             0212
*       SECDELRC=IOPRETRN;          /* SAVE I/O RETURN CODE          */
         L     @10,@PC00001+4                                      0213
         L     @10,CURIOP(,@10)                                    0213
         SLR   SECDELRC,SECDELRC                                   0213
         IC    SECDELRC,IOPRETRN(,@10)                             0213
*     END;                          /* END SYSMOD ENTRY ON (A)CDS    */
*   RETURN CODE(SECDELRC);          /* RETURN WITH RETURN CODE FROM
*                                      HMASMIO BLDL/UPDATE DIR OPER  */
@RF00208 LR    @15,SECDELRC                                        0215
         L     @14,@SA00002                                        0215
         LM    @00,@12,@SA00002+8                                  0215
         BR    @14                                                 0215
*   END SECDELET;                   /*                               */
         EJECT
*                                                                  0217
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE PROCESS SUBROUTINE                                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0217
*SECREST:                                                          0217
*   PROC;                           /*                               */
*                                                                  0217
SECREST  STM   @14,@12,@SA00003                                    0217
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCATE THE SYSMOD ENTRY ON THE ACDS                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0218
*   IOPFUNCT=IOPLOC;                /* INDICATE LOCATE OPERATION     */
         L     @10,@PC00001+4                                      0218
         L     @10,CURIOP(,@10)                                    0218
         MVI   IOPFUNCT(@10),X'03'                                 0218
*   IOPDSID=IOPCDS;                 /* CDS DATASET FOR THE RESTORE   */
         MVI   IOPDSID(@10),X'02'                                  0219
*   IOPNAME=ICTPTFS(1);             /* SYSMOD BEING PROCESSED        */
         MVI   IOPNAME+7(@10),C' '                                 0220
         L     @15,@PC00001                                        0220
         MVC   IOPNAME(7,@10),ICTPTFS(@15)                         0220
*   IOPTYPE=IOPSMD;                 /* SYSMOD TYPE ENTRY DESIRED     */
         MVI   IOPTYPE(@10),X'0B'                                  0221
*   CALL HMASMIO(HMASMIOP);         /* CALL SMP IO INTERFACE ROUTINE */
         ST    @10,@AL00001                                        0222
         L     @15,@CV01624                                        0222
         LA    @01,@AL00001                                        0222
         BALR  @14,@15                                             0222
*   IF IOPRETRN=IOPGOOD THEN        /* WAS THE SYSMOD ENTRY FOUND?   */
         L     @10,@PC00001+4                                      0223
         L     @10,CURIOP(,@10)                                    0223
         CLI   IOPRETRN(@10),0                                     0223
         BNE   @RF00223                                            0223
*     DO;                           /* YES-                          */
*                                                                  0224
*       /*************************************************************/
*       /*                                                           */
*       /* SET UP TO STOW THE SYSMOD WITH THE ERROR FLAG SET ON THE  */
*       /* CDS                                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0225
*       IOPERROR=ON;                /* TURN ON THE ERROR FLAG        */
         OI    IOPERROR(@10),B'00010000'                           0225
*       IF ICTBYP(1)=ON             /* BYPASS USED IN PROCESSING     */
*         THEN                                                     0226
         L     @15,@PC00001                                        0226
         TM    ICTBYP(@15),B'00000010'                             0226
         BNO   @RF00226                                            0226
*         IOPBYP=ON;                /* SET BYPASS FLAG IN IOP        */
         OI    IOPBYP(@10),B'00000010'                             0227
*       IOPRES=ON;                  /* TURN ON THE RESTORE FLAG      */
@RF00226 L     @10,@PC00001+4                                      0228
         L     @10,CURIOP(,@10)                                    0228
         OI    IOPRES(@10),B'01000000'                             0228
*       IOPRSTD=CCADATE;            /* SET CURRENT DATE              */
         MVC   IOPRSTD(3,@10),CCADATE(CCAPTR)                      0229
*       IOPRSTT=CCATIME;            /* SET CURRENT TIME              */
         MVC   IOPRSTT(3,@10),CCATIME(CCAPTR)                      0230
*       IOPDSID=IOPCDS;             /* STOW TO THE CDS DATASET       */
         MVI   IOPDSID(@10),X'02'                                  0231
*       IOPFUNCT=IOPSTOWR;          /* INDICATE STOW REPLACE OPER    */
         MVI   IOPFUNCT(@10),X'54'                                 0232
*       CALL HMASMIO(HMASMIOP);     /* CALL SMP IO INTERFACE ROUTINE */
         ST    @10,@AL00001                                        0233
         L     @15,@CV01624                                        0233
         LA    @01,@AL00001                                        0233
         BALR  @14,@15                                             0233
*     END;                          /*                               */
*   RETURN CODE(IOPRETRN);          /* RETURN WITH RETURN CODE FROM
*                                      HMASMIO LOCATE/STOWR OPER     */
@RF00223 L     @10,@PC00001+4                                      0235
         L     @10,CURIOP(,@10)                                    0235
         SLR   @15,@15                                             0235
         IC    @15,IOPRETRN(,@10)                                  0235
         L     @14,@SA00003                                        0235
         LM    @00,@12,@SA00003+8                                  0235
         BR    @14                                                 0235
*   END SECREST;                    /*                               */
         EJECT
*                                                                  0237
*   /*****************************************************************/
*   /*                                                               */
*   /* APPLY OR ACCEPT PROCESS SUBROUTINE                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0237
*SECAPPAC:                                                         0237
*   PROC;                           /*                               */
SECAPPAC STM   @14,@12,@SA00004                                    0237
*   DECLARE                         /*                               */
*     M1 FIXED(31),                 /* LOOP INDEX                    */
*     M2 FIXED(31);                 /* LOOP INDEX                    */
*   DECLARE                         /*                               */
*     APACRC FIXED(8);              /*                               */
*   APACRC=ZERO;                    /*                               */
         SLR   APACRC,APACRC                                       0240
*   IOPPTFDR=''B;                   /* CLEAR THE IOP FOR BUILD       */
         L     @10,@PC00001+4                                      0241
         L     @10,CURIOP(,@10)                                    0241
         XC    IOPPTFDR(24,@10),IOPPTFDR(@10)                      0241
*   IOPPTFFX=''B;                   /* CLEAR THE IOP FOR BUILD       */
*                                                                  0242
         XC    IOPPTFFX(80,@10),IOPPTFFX(@10)                      0242
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE THE FUNCTION AND SET UP THE PROPER DATASET, INSERT  */
*   /* THE CURRENT DATE AND TIME IN THE IOP BEING BUILT.             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0243
*   IF CCAAPPLY=ON THEN             /* IS FUNCTION APPLY?            */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0243
         BNO   @RF00243                                            0243
*     DO;                           /* YES-                          */
*                                                                  0244
*       /*************************************************************/
*       /*                                                           */
*       /* APPLY BEING EXECUTED                                      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0245
*       IOPDSID=IOPCDS;             /* INDICATE CDS DATASET          */
         MVI   IOPDSID(@10),X'02'                                  0245
*       IOPAPP=ON;                  /* INDICATE APPLY FUNCTION       */
         OI    IOPAPP(@10),B'10000000'                             0246
*       IOPAPPD=CCADATE;            /* FILL IN APPLY DATE            */
         MVC   IOPAPPD(3,@10),CCADATE(CCAPTR)                      0247
*       IOPAPPT=CCATIME;            /* FILL IN APPLY TIME            */
         MVC   IOPAPPT(3,@10),CCATIME(CCAPTR)                      0248
*     END;                          /*                               */
*   ELSE                            /* MUST BE ACCEPT FUNCTION       */
*     DO;                           /*                               */
*                                                                  0250
         B     @RC00243                                            0250
@RF00243 DS    0H                                                  0251
*       /*************************************************************/
*       /*                                                           */
*       /* ACCEPT BEING EXECUTED                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0251
*       IOPDSID=IOPACDS;            /* INDICATE ACDS DATASET         */
         L     @10,@PC00001+4                                      0251
         L     @10,CURIOP(,@10)                                    0251
         MVI   IOPDSID(@10),X'0C'                                  0251
*       IOPACC=ON;                  /* INDICATE ACCEPT FUNCTION      */
         OI    IOPACC(@10),B'00100000'                             0252
*       IOPACCD=CCADATE;            /* FILL IN ACCEPT DATE           */
         MVC   IOPACCD(3,@10),CCADATE(CCAPTR)                      0253
*       IOPACCT=CCATIME;            /* FILL IN ACCEPT TIME           */
         MVC   IOPACCT(3,@10),CCATIME(CCAPTR)                      0254
*     END;                          /*                               */
*                                                                  0256
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL IN VALUES FROM THE ICT PTF ENTRY FOR THE CURRENT SYSMOD  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0256
*   IOPNTLVL=IOPPTFLC;              /* CURRENT LEVEL                 */
@RC00243 L     @10,@PC00001+4                                      0256
         L     @10,CURIOP(,@10)                                    0256
         MVI   IOPNTLVL(@10),X'02'                                 0256
*   IOPERROR=ON;                    /* SET ON ERROR FLAG             */
         OI    IOPERROR(@10),B'00010000'                           0257
*   IF ICTBYP(1)=ON                 /* BYPASS USED IN PROCESSING     */
*     THEN                                                         0258
         L     @05,@PC00001                                        0258
         TM    ICTBYP(@05),B'00000010'                             0258
         BNO   @RF00258                                            0258
*     IOPBYP=ON;                    /* SET BYPASS FLAG IN IOP        */
         OI    IOPBYP(@10),B'00000010'                             0259
*   IOPPTYPE=ICTPTYPE(1);           /* PICK UP SYSMOD TYPE - APAR,PTF
*                                      USERMOD OR FUNCTION           */
@RF00258 L     @10,@PC00001+4                                      0260
         L     @10,CURIOP(,@10)                                    0260
         L     @05,@PC00001                                        0260
         MVC   IOPPTYPE(1,@10),ICTPTYPE(@05)                       0260
*   IOPPTFF2=ICTPFLG5(1);           /* COPY FLAG BYTE                */
         MVC   IOPPTFF2(2,@10),ICTPFLG5(@05)                       0261
*   IOPPTFF3=ICTPFLG6(1);           /* COPY FLAG BYTE                */
         MVC   IOPPTFF3(1,@10),ICTPFLG6(@05)                       0262
*   IOPDBYNO='';                    /* BLANK OUT DELETED BY NUMBER   */
         MVI   IOPDBYNO(@10),C' '                                  0263
         MVC   IOPDBYNO+1(6,@10),IOPDBYNO(@10)                     0263
*   IOPSBYNO='';                    /* BLANK OUT SUPED BY NUMBER     */
         MVI   IOPSBYNO(@10),C' '                                  0264
         MVC   IOPSBYNO+1(6,@10),IOPSBYNO(@10)                     0264
*   IOPBUSMD='';                    /* BLANK OUT LASTUPDATE FIELD    */
         MVI   IOPBUSMD(@10),C' '                                  0265
         MVC   IOPBUSMD+1(6,@10),IOPBUSMD(@10)                     0265
*   IOPPFMID=ICTPFMID(1);           /* FILL IN FMID FROM ICT PTF     */
         MVC   IOPPFMID(7,@10),ICTPFMID(@05)                       0266
*   IOPRECD=ICTPRECD(1);            /* FILL IN RECEIVED DATE         */
         MVC   IOPRECD(3,@10),ICTPRECD(@05)                        0267
*   IOPRECT=ICTPRECT(1);            /* FILL IN RECEIVED TIME         */
         MVC   IOPRECT(3,@10),ICTPRECT(@05)                        0268
*   IOPPTFND(1)=IOPEOLST;           /* SET END OF VARIABLE DATA FIELD*/
*                                                                  0269
         MVI   IOPPTFND(@10),X'FF'                                 0269
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP THE ARRAY TO BE USED TO BUILD THE (A)CDS ENTRY FROM THE*/
*   /* DATA IN THE ICT FOR THE CURRENT SYSMOD                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0270
*   CHAINPTR(1)=ICTPRCHN(1);        /* REQ/MREQ PTF NUMBER CHAIN     */
         MVC   CHAINPTR(4),ICTPRCHN(@05)                           0270
*   CHAINPTR(2)=ICTPSCHN(1);        /* SUPERCEDED PTF NUMBER CHAIN   */
         MVC   CHAINPTR+24(4),ICTPSCHN(@05)                        0271
*   CHAINPTR(3)=ICTPPCHN(1);        /* PREREQ PTF NUMBER CHAIN       */
         MVC   CHAINPTR+48(4),ICTPPCHN(@05)                        0272
*   CHAINPTR(4)=ICTPICHN(1);        /* IREQ PTF NUMBER CHAIN         */
         MVC   CHAINPTR+72(4),ICTPICHN(@05)                        0273
*   CHAINPTR(5)=ICTPDCHN(1);        /* DELETE PTF NUMBER CHAIN       */
         MVC   CHAINPTR+96(4),ICTPDCHN(@05)                        0274
*   CHAINPTR(6)=ICTPBCHN(1);        /* SUPBY PTF NUMBER CHAIN        */
         MVC   CHAINPTR+120(4),ICTPBCHN(@05)                       0275
*   CHAINPTR(7)=ICTPNCHN(1);        /* NPRE PTF NUMBER CHAIN         */
         MVC   CHAINPTR+144(4),ICTPNCHN(@05)                       0276
*   CHAINPTR(8)=ICTPVCHN(1);        /* VERSION PTF NUMBER CHAIN      */
*                                                                  0277
         MVC   CHAINPTR+168(4),ICTPVCHN(@05)                       0277
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP PARAMETERS TO HMASMVLU - VARIABLE LIST UPDATE MODULE   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0278
*   HMASMVLP=''B;                   /*                               */
         XC    HMASMVLP(52),HMASMVLP                               0278
*   VLPMTYPE=CCATYPEA(IOPSMD);      /*                               */
         L     @01,CCATPAD(,CCAPTR)                                0279
         MVC   VLPMTYPE(8),CCATYPEA+80(@01)                        0279
*   VLPMNAME=ICTPTFS(1);            /*                               */
         MVI   VLPMNAME+7,C' '                                     0280
         MVC   VLPMNAME(7),ICTPTFS(@05)                            0280
*   VLPFUNCT=VLPADD;                /* HMASMVLU WILL DO ADD OPERATION*/
         MVI   VLPFUNCT,X'01'                                      0281
*   VLPLPTR=ADDR(IOPPNTRY(1));      /* POINT TO VARIABLE ENTRY LIST  */
         LA    @10,IOPPNTRY(,@10)                                  0282
         ST    @10,VLPLPTR                                         0282
*   VLPFMSG=OFF;                    /* NO MSG EXCEPT PEMAX DESIRED   */
         NI    VLPFMSG,B'01111111'                                 0283
*                                                                  0284
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THROUGH THE CHAINS TILL END OF CHAIN OR ERROR            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0284
*   DO I=1 TO DIM(SECARRY1) BY 1    /* NUMBER OF LISTS TO PROCESS    */
*         WHILE APACRC=ZERO;        /* NO ERRORS                     */
         LA    I,1                                                 0284
@DL00284 CH    APACRC,@CH00253                                     0284
         BNE   @DC00284                                            0284
*     RFY                                                          0285
*       ICTENTLS BASED(CHAINPTR(I));/* BASE ON FIRST/NEXT CHAIN      */
*                                                                  0285
*     /***************************************************************/
*     /*                                                             */
*     /* FOR IREQ CHAIN (WHEN I=4), IREQ ENTRIES ARE DOUBLE LENGTH SO*/
*     /* BUMP BY AN INCREMENT OF 2 TO COMPENSATE FOR EXTRA LENGTH.   */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0286
*     IF CHAINTYP(I)=IOPPIRQ        /* IF IREQ PASS THEN             */
*       THEN                        /*                               */
         LR    @10,I                                               0286
         MH    @10,@CH00163                                        0286
         SLR   @05,@05                                             0286
         IC    @05,CHAINTYP-24(@10)                                0286
         CH    @05,@CH01061                                        0286
         BNE   @RF00286                                            0286
*       M=2;                        /* BUMP BY DOUBLE ENTRY LENGTH   */
         LA    M,2                                                 0287
*     ELSE                                                         0288
*       M=1;                        /* BUMP BY NORMAL ENTRY LENGTH   */
         B     @RC00286                                            0288
@RF00286 LA    M,1                                                 0288
*     DO J=1 BY M WHILE ICTENTND(J)^=ICTENDIX/* PROCESS EACH LIST  0289
*                                      TILL                          */
*           &APACRC=ZERO;           /* END-OF-LIST OR ERROR          */
@RC00286 LA    J,1                                                 0289
         B     @DE00289                                            0289
@DL00289 DS    0H                                                  0290
*       VLPDATA=ICTENTNT(J);        /* FILL IN ENTRY TO ADD TO IOP   */
         LR    @10,J                                               0290
         SLA   @10,3                                               0290
         LR    @15,I                                               0290
         MH    @15,@CH00163                                        0290
         L     @01,CHAINPTR-24(@15)                                0290
         ALR   @01,@10                                             0290
         AL    @01,@CF01726                                        0290
         MVC   VLPDATA(8),ICTENTNT(@01)                            0290
*       VLPTYPE=CHAINTYP(I);        /* TYPE OF CHAIN BEING PROCESSED */
         SLR   @10,@10                                             0291
         IC    @10,CHAINTYP-24(@15)                                0291
         STC   @10,VLPTYPE                                         0291
*       VLPDLEN=CHAINLEN(I);        /* LEN OF DATA IN VLPDATA        */
         SLR   @14,@14                                             0292
         IC    @14,CHAINLEN-24(@15)                                0292
         STC   @14,VLPDLEN                                         0292
*       VLPSTYPE=CHAINTXT(I);       /* SUBENTRY TYPE                 */
         LA    @14,CHAINTXT-24(@15)                                0293
         MVC   VLPSTYPE(16),0(@14)                                 0293
*       IF CHAINTYP(I)^=IOPPSBY     /* FOR ALL BUT SUPBY CHAIN, SET  */
*         THEN                      /*                               */
         CH    @10,@CH01069                                        0294
         BE    @RF00294                                            0294
*         VLPDATA(8)=ICTPVERN(1);   /* THE VER NUMBER USED FOR SYSMOD*/
         L     @10,@PC00001                                        0295
         MVC   VLPDATA+7(1),ICTPVERN(@10)                          0295
*       ELSE                                                       0296
*         VLPDATA(8)=''B;           /* FOR SUPBY CHAIN SET TO ZERO   */
         B     @RC00294                                            0296
@RF00294 MVI   VLPDATA+7,X'00'                                     0296
*       IF(CHAINTYP(I)=IOPPDEL      /* DELETE CHAIN ...              */
*           &CHAINPTR(I)->ICTDELEX(J)=OFF)/* NOT EXPLICIT DELETE     */
*           ×(CHAINTYP(I)=IOPPIRQ   /* IFREQ CHAIN ...               */
*           &ICTENTNM(J+1)^=ICTPTFS(1))/* CAUSER IS NOT THIS SYSMOD  */
*         THEN                                                     0297
@RC00294 LR    @10,I                                               0297
         MH    @10,@CH00163                                        0297
         SLR   @15,@15                                             0297
         IC    @15,CHAINTYP-24(@10)                                0297
         CH    @15,@CH01065                                        0297
         BNE   @GL00002                                            0297
         LR    @15,J                                               0297
         SLA   @15,3                                               0297
         L     @10,CHAINPTR-24(@10)                                0297
         ALR   @10,@15                                             0297
         BCTR  @10,0                                               0297
         TM    ICTDELEX-7(@10),B'10000000'                         0297
         BZ    @RT00297                                            0297
@GL00002 LR    @10,I                                               0297
         MH    @10,@CH00163                                        0297
         SLR   @15,@15                                             0297
         IC    @15,CHAINTYP-24(@10)                                0297
         CH    @15,@CH01061                                        0297
         BNE   @RF00297                                            0297
         LR    @15,J                                               0297
         SLA   @15,3                                               0297
         L     @10,CHAINPTR-24(@10)                                0297
         L     @14,@PC00001                                        0297
         ALR   @10,@15                                             0297
         CLC   ICTENTNM(7,@10),ICTPTFS(@14)                        0297
         BNE   @RT00297                                            0297
*         ;                         /* DO NOT ADD SUB-ENTRY TO IOP   */
*       ELSE                                                       0299
*         DO;                                                      0299
*                                                                  0299
@RF00297 DS    0H                                                  0300
*           /*********************************************************/
*           /*                                                       */
*           /* CALL HMASMVLU TO ADD THE VARIABLE DATA TO THE IOP     */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0300
*           CALL HMASMVLU(HMASMVLP);/* SMP VARIABLE LIST UPDATE MOD  */
         L     @15,@CV01625                                        0300
         LA    @01,@AL00300                                        0300
         BALR  @14,@15                                             0300
*           APACRC=MAX(APACRC,VLPRETRN);/* SAVE RC                   */
         SLR   @10,@10                                             0301
         IC    @10,VLPRETRN                                        0301
         CR    APACRC,@10                                          0301
         BNL   *+6
         LR    APACRC,@10                                          0301
*         END;                                                     0302
*     END;                          /* END OF EACH LIST DO LOOP      */
@RT00297 ALR   J,M                                                 0303
@DE00289 LR    @10,J                                               0303
         SLA   @10,3                                               0303
         LR    @15,I                                               0303
         MH    @15,@CH00163                                        0303
         L     @01,CHAINPTR-24(@15)                                0303
         AL    @01,@CF01726                                        0303
         L     @10,ICTENTND(@10,@01)                               0303
         CL    @10,ICTENDIX                                        0303
         BE    @DC00289                                            0303
         CH    APACRC,@CH00253                                     0303
         BE    @DL00289                                            0303
@DC00289 DS    0H                                                  0304
*   END;                            /* END OF 6 LIST DO LOOP         */
         AH    I,@CH00087                                          0304
         CH    I,@CH00112                                          0304
         BNH   @DL00284                                            0304
@DC00284 DS    0H                                                  0305
*                                                                  0305
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE ICT HAS BEEN BUILT (CCAICTOK) AND THERE HAVE BEEN NO   */
*   /* ERRORS FROM HMASMVLU, THEN PROCESS THE ICT MOD ENTRIES FROM   */
*   /* THE INDEX EXTENSION LIST.                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0305
*   IF CCAICTOK=ON                  /* HAS THE ICT BEEN BUILT AND    */
*       &APACRC=ZERO THEN           /* NO ERRORS FROM HMASMVLU?      */
         TM    CCAICTOK(CCAPTR),B'00000001'                        0305
         BNO   @RF00305                                            0305
         CH    APACRC,@CH00253                                     0305
         BNE   @RF00305                                            0305
*     DO;                           /* PROCESS FOR INDEX EXT CHAIN   */
*                                                                  0306
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESS THE INDEX EXTENSION LIST FOR THE MODS IN THE      */
*       /* SYSMOD                                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0307
*       DO J=1 BY 1 WHILE ICTIXP(J)^=ICTENDIX/* PROCESS MODULE LIST
*                                      TILL                          */
*             &APACRC=ZERO;         /* END-OF-LIST OR ERROR          */
         LA    J,1                                                 0307
         B     @DE00307                                            0307
@DL00307 DS    0H                                                  0308
*         RFY                                                      0308
*           ICTMOD BASED(ICTIXP(J));/* BASE ON FIRST/NEXT CHAIN      */
*                                                                  0308
*         /***********************************************************/
*         /*                                                         */
*         /* DETERMINE THE TYPE CODE FOR THE VARIABLE ENTRY          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0309
*         NOADD=OFF;                /* ASSUME ADD ENTRY              */
         NI    NOADD,B'01111111'                                   0309
*         IF ICTMASM(1)=ON          /* ASSEMBLY CAUSED BY MAC OR SRC
*                                      - SAVE                        */
*           THEN                    /*                               */
         LR    @10,J                                               0310
         SLA   @10,2                                               0310
         L     @05,@PC00001                                        0310
         L     @05,ICTPCHN(,@05)                                   0310
         AL    @05,@CF01727                                        0310
         L     @10,ICTIXP(@10,@05)                                 0310
         TM    ICTMASM(@10),B'01000000'                            0310
         BNO   @RF00310                                            0310
*           DO;                     /*                               */
*             VLPSTYPE=TXTASSEM;    /*                               */
         MVC   VLPSTYPE(16),@CC01654                               0312
*             VLPTYPE=IOPPASM;      /* ICT ENTRY A ASSM CAUSED BY MAC*/
         MVI   VLPTYPE,X'08'                                       0313
*             IF ICTMISEL(1)=OFF    /* IF NOT SELECTED               */
*               THEN                /*                               */
         TM    ICTMISEL(@10),B'10000000'                           0314
         BNZ   @RF00314                                            0314
*               DO;                 /*                               */
*                 NOADD=ON;         /* ASSUME NO TO BE ADDED         */
         OI    NOADD,B'10000000'                                   0316
*                 DO M2=1 BY 1 WHILE(/* LOOP THRU MODS               */
*                       CCAICMOD->ICTMEND(M2)^=ICTENDNT/* TILL END   */
*                       &NOADD=ON); /* OR SELECTED ASSEM FOUND       */
         LA    M2,1                                                0317
         B     @DE00317                                            0317
@DL00317 DS    0H                                                  0318
*                   IF CCAICMOD->ICTMNAME(M2)=ICTMNAME(1)/* IF SAME  */
*                       &CCAICMOD->ICTMASM(M2)=ON/* NAME AND ASSEM   */
*                       &CCAICMOD->ICTMMOD(M2)=ON/* AND NOT CANC.    */
*                       &CCAICMOD->ICTMISEL(M2)=ON/* AND SELECTED    */
*                     THEN          /*                               */
         LR    @10,M2                                              0318
         MH    @10,@CH01716                                        0318
         L     @05,CCAICMOD(,CCAPTR)                               0318
         LR    @15,J                                               0318
         SLA   @15,2                                               0318
         L     @14,@PC00001                                        0318
         L     @01,ICTPCHN(,@14)                                   0318
         AL    @01,@CF01727                                        0318
         L     @01,ICTIXP(@15,@01)                                 0318
         ST    @10,@TF00001                                        0318
         ALR   @10,@05                                             0318
         AL    @10,@CF01728                                        0318
         CLC   ICTMNAME(8,@10),ICTMNAME(@01)                       0318
         BNE   @RF00318                                            0318
         LR    @10,@05                                             0318
         AL    @10,@TF00001                                        0318
         AL    @10,@CF01729                                        0318
         TM    ICTMASM-9(@10),B'11000000'                          0318
         BNO   @RF00318                                            0318
         AL    @05,@TF00001                                        0318
         AL    @05,@CF01730                                        0318
         TM    ICTMISEL-11(@05),B'10000000'                        0318
         BNO   @RF00318                                            0318
*                     NOADD=OFF;    /* ADD ASSEM TO SYSMOD           */
         NI    NOADD,B'01111111'                                   0319
*                 END;              /*                               */
@RF00318 AH    M2,@CH00087                                         0320
@DE00317 LR    @10,M2                                              0320
         MH    @10,@CH01716                                        0320
         L     @05,CCAICMOD(,CCAPTR)                               0320
         AL    @05,@CF01728                                        0320
         L     @10,ICTMEND(@10,@05)                                0320
         CL    @10,ICTENDNT                                        0320
         BE    @DC00317                                            0320
         TM    NOADD,B'10000000'                                   0320
         BO    @DL00317                                            0320
@DC00317 DS    0H                                                  0321
*               END;                /*                               */
*           END;                    /*                               */
*         ELSE                                                     0323
*           IF ICTMMOD(1)=ON        /* ICT ENTRY A MOD REPLACEMENT?  */
*             THEN                  /*                               */
         B     @RC00310                                            0323
@RF00310 LR    @10,J                                               0323
         SLA   @10,2                                               0323
         L     @05,@PC00001                                        0323
         L     @05,ICTPCHN(,@05)                                   0323
         AL    @05,@CF01727                                        0323
         L     @10,ICTIXP(@10,@05)                                 0323
         TM    ICTMMOD(@10),B'10000000'                            0323
         BNO   @RF00323                                            0323
*             DO;                   /*                               */
*               VLPSTYPE=TXTMOD;    /*                               */
         MVC   VLPSTYPE(16),@CC01657                               0325
*               VLPTYPE=IOPPMOD;    /* YES-SET IOPPIND TO MOD REPL   */
         MVI   VLPTYPE,X'01'                                       0326
*             END;                  /*                               */
*           ELSE                                                   0328
*             IF ICTMZAP(1)=ON      /* ICT ENTRY A ZAP?              */
*               THEN                /*                               */
         B     @RC00323                                            0328
@RF00323 LR    @10,J                                               0328
         SLA   @10,2                                               0328
         L     @05,@PC00001                                        0328
         L     @05,ICTPCHN(,@05)                                   0328
         AL    @05,@CF01727                                        0328
         L     @10,ICTIXP(@10,@05)                                 0328
         TM    ICTMZAP(@10),B'00100000'                            0328
         BNO   @RF00328                                            0328
*               DO;                 /*                               */
*                 VLPSTYPE=TXTSZAP; /*                               */
         MVC   VLPSTYPE(16),@CC01660                               0330
*                 VLPTYPE=IOPPZAP;  /* YES-SET IOPPIND TO ZAP        */
         MVI   VLPTYPE,X'02'                                       0331
*                 DO M1=1 BY 1 WHILE(/* LOOP THRU ICT                */
*                       CCAICMOD->ICTMEND(M1)^=ICTENDNT/* TILL END   */
*                       &NOADD=OFF);/* OR XZAP FOUND                 */
         LA    M1,1                                                0332
         B     @DE00332                                            0332
@DL00332 DS    0H                                                  0333
*                   IF ICTMNAME(1)=CCAICMOD->ICTMNAME(M1)/* SAME     */
*                       &CCAICMOD->ICTMXPND(M1)=ON/* NAME AND XPAND  */
*                     THEN          /*                               */
         LR    @10,J                                               0333
         SLA   @10,2                                               0333
         L     @05,@PC00001                                        0333
         L     @05,ICTPCHN(,@05)                                   0333
         AL    @05,@CF01727                                        0333
         L     @10,ICTIXP(@10,@05)                                 0333
         LR    @05,M1                                              0333
         MH    @05,@CH01716                                        0333
         L     @15,CCAICMOD(,CCAPTR)                               0333
         ST    @05,@TF00001                                        0333
         ALR   @05,@15                                             0333
         AL    @05,@CF01728                                        0333
         CLC   ICTMNAME(8,@10),ICTMNAME(@05)                       0333
         BNE   @RF00333                                            0333
         AL    @15,@TF00001                                        0333
         AL    @15,@CF01729                                        0333
         TM    ICTMXPND-9(@15),B'00010000'                         0333
         BNO   @RF00333                                            0333
*                     NOADD=ON;     /* SKIP THIS ZAP                 */
         OI    NOADD,B'10000000'                                   0334
*                 END;              /*                               */
@RF00333 AH    M1,@CH00087                                         0335
@DE00332 LR    @10,M1                                              0335
         MH    @10,@CH01716                                        0335
         L     @05,CCAICMOD(,CCAPTR)                               0335
         AL    @05,@CF01728                                        0335
         L     @10,ICTMEND(@10,@05)                                0335
         CL    @10,ICTENDNT                                        0335
         BE    @DC00332                                            0335
         TM    NOADD,B'10000000'                                   0335
         BZ    @DL00332                                            0335
@DC00332 DS    0H                                                  0336
*               END;                /*                               */
*             ELSE                                                 0337
*               IF ICTMXPND(1)=ON   /* ICT ENTRY A EXPAND ZAP?       */
*                 THEN              /*                               */
         B     @RC00328                                            0337
@RF00328 LR    @10,J                                               0337
         SLA   @10,2                                               0337
         L     @05,@PC00001                                        0337
         L     @05,ICTPCHN(,@05)                                   0337
         AL    @05,@CF01727                                        0337
         L     @10,ICTIXP(@10,@05)                                 0337
         TM    ICTMXPND(@10),B'00010000'                           0337
         BNO   @RF00337                                            0337
*                 DO;               /*                               */
*                   VLPSTYPE=TXTXZAP;/*                              */
         MVC   VLPSTYPE(16),@CC01663                               0339
*                   VLPTYPE=IOPPXPD;/* YES-SET IOPPIND TO EXPAND ZAP */
         MVI   VLPTYPE,X'03'                                       0340
*                 END;              /*                               */
*               ELSE                                               0342
*                 IF ICTMMACR(1)=ON /* ICT ENTRY A MACRO REPLACEMENT?*/
*                   THEN            /*                               */
         B     @RC00337                                            0342
@RF00337 LR    @10,J                                               0342
         SLA   @10,2                                               0342
         L     @05,@PC00001                                        0342
         L     @05,ICTPCHN(,@05)                                   0342
         AL    @05,@CF01727                                        0342
         L     @10,ICTIXP(@10,@05)                                 0342
         TM    ICTMMACR(@10),B'00001000'                           0342
         BNO   @RF00342                                            0342
*                   DO;             /*                               */
*                     VLPSTYPE=TXTMCR;/*                             */
         MVC   VLPSTYPE(16),@CC01666                               0344
*                     VLPTYPE=IOPPMACR;/* YES-SET IOPPIND TO MAC REP */
         MVI   VLPTYPE,X'04'                                       0345
*                   END;            /*                               */
*                 ELSE                                             0347
*                   IF ICTMMACU(1)=ON/* ICT ENTRY A MACRO UPD        */
*                     THEN          /*                               */
         B     @RC00342                                            0347
@RF00342 LR    @10,J                                               0347
         SLA   @10,2                                               0347
         L     @05,@PC00001                                        0347
         L     @05,ICTPCHN(,@05)                                   0347
         AL    @05,@CF01727                                        0347
         L     @10,ICTIXP(@10,@05)                                 0347
         TM    ICTMMACU(@10),B'00000100'                           0347
         BNO   @RF00347                                            0347
*                     DO;           /*                               */
*                       VLPSTYPE=TXTMCU;/*                           */
         MVC   VLPSTYPE(16),@CC01669                               0349
*                       VLPTYPE=IOPPMACU;/* YES-SET IOPPIND TO MAC 0350
*                                      UPD                           */
         MVI   VLPTYPE,X'05'                                       0350
*                     END;          /*                               */
*                   ELSE                                           0352
*                     IF ICTMSRCR(1)=ON/* ICT ENTRY A SOURCE       0352
*                                      REPLACEMENT                   */
*                       THEN        /*                               */
         B     @RC00347                                            0352
@RF00347 LR    @10,J                                               0352
         SLA   @10,2                                               0352
         L     @05,@PC00001                                        0352
         L     @05,ICTPCHN(,@05)                                   0352
         AL    @05,@CF01727                                        0352
         L     @10,ICTIXP(@10,@05)                                 0352
         TM    ICTMSRCR(@10),B'00000010'                           0352
         BNO   @RF00352                                            0352
*                       DO;         /*                               */
*                         VLPSTYPE=TXTSCR;/*                         */
         MVC   VLPSTYPE(16),@CC01672                               0354
*                         VLPTYPE=IOPPSRCR;/* YES-SET IOPPIND TO   0355
*                                      SOURCE REPL                   */
         MVI   VLPTYPE,X'06'                                       0355
*                       END;        /*                               */
*                     ELSE                                         0357
*                       IF ICTMSRCU(1)=ON/* ICT ENTRY A SOURCE     0357
*                                      UPDATE?                       */
*                         THEN      /*                               */
         B     @RC00352                                            0357
@RF00352 LR    @10,J                                               0357
         SLA   @10,2                                               0357
         L     @05,@PC00001                                        0357
         L     @05,ICTPCHN(,@05)                                   0357
         AL    @05,@CF01727                                        0357
         L     @10,ICTIXP(@10,@05)                                 0357
         TM    ICTMSRCU(@10),B'00000001'                           0357
         BNO   @RF00357                                            0357
*                         DO;       /*                               */
*                           VLPSTYPE=TXTSCU;/*                       */
         MVC   VLPSTYPE(16),@CC01675                               0359
*                           VLPTYPE=IOPPSRCU;/* YES-SET IOPPIND TO 0360
*                                      SOURCE UPDT                   */
         MVI   VLPTYPE,X'07'                                       0360
*                         END;      /*                               */
*                                                                  0361
*         /***********************************************************/
*         /*                                                         */
*         /* IF NONE OF THE ABOVE TESTS WERE SUCCESSFULL, THEN THE   */
*         /* ENTRY WILL NOT BE SAVED IN THE SYSMOD VARIABLE LIST.    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0362
*                       ELSE                                       0362
*                         NOADD=ON; /* SET BIT TO BYPASS CALL TO VLU */
         B     @RC00357                                            0362
@RF00357 OI    NOADD,B'10000000'                                   0362
*         IF NOADD=OFF              /* IF ENTRY TO BE ADDED          */
*           THEN                    /* THEN DO IT NOW                */
@RC00357 DS    0H                                                  0363
@RC00352 DS    0H                                                  0363
@RC00347 DS    0H                                                  0363
@RC00342 DS    0H                                                  0363
@RC00337 DS    0H                                                  0363
@RC00328 DS    0H                                                  0363
@RC00323 DS    0H                                                  0363
@RC00310 TM    NOADD,B'10000000'                                   0363
         BNZ   @RF00363                                            0363
*           DO;                     /*                               */
*                                                                  0364
*             /*******************************************************/
*             /*                                                     */
*             /* FILL IN MODULE NAME TO BE ADDED TO THE IOP          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0365
*             VLPDATA=ICTMOD(1);    /* FILL IN ENTRY TO ADD TO IOP   */
         LR    @10,J                                               0365
         SLA   @10,2                                               0365
         L     @05,@PC00001                                        0365
         L     @05,ICTPCHN(,@05)                                   0365
         AL    @05,@CF01727                                        0365
         L     @10,ICTIXP(@10,@05)                                 0365
         MVC   VLPDATA(8),ICTMOD(@10)                              0365
*             VLPDLEN=LENGTH(IOPPMODS);/* LEN OF DATA                */
*                                                                  0366
         MVI   VLPDLEN,X'08'                                       0366
*             /*******************************************************/
*             /*                                                     */
*             /* CALL THE VARIABLE LIST UPDATE MODULE - HMASMVLU     */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0367
*             CALL HMASMVLU(HMASMVLP);/* SMP VARIABLE LIST UPDATE MOD*/
         L     @15,@CV01625                                        0367
         LA    @01,@AL00367                                        0367
         BALR  @14,@15                                             0367
*             APACRC=MAX(APACRC,VLPRETRN);/* SAVE RC                 */
         SLR   @10,@10                                             0368
         IC    @10,VLPRETRN                                        0368
         CR    APACRC,@10                                          0368
         BNL   *+6
         LR    APACRC,@10                                          0368
*           END;                    /* END OF ADD & CALL VLU         */
*       END;                        /* END OF 6 LIST DO LOOP         */
@RF00363 AH    J,@CH00087                                          0370
@DE00307 LR    @10,J                                               0370
         SLA   @10,2                                               0370
         L     @05,@PC00001                                        0370
         L     @05,ICTPCHN(,@05)                                   0370
         AL    @05,@CF01727                                        0370
         L     @10,ICTIXP(@10,@05)                                 0370
         CL    @10,ICTENDIX                                        0370
         BE    @DC00307                                            0370
         CH    APACRC,@CH00253                                     0370
         BE    @DL00307                                            0370
@DC00307 DS    0H                                                  0371
*     END;                          /* END OF INDEX EXT CHAIN LOOP   */
*                                                                  0372
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL HMASMIO TO STOW THE SYSMOD ENTRY JUST BUILT FROM THE ICT */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0372
*   IF APACRC=ZERO                  /* IF ALL SUBENTRY ADDS WERE OK, */
*     THEN                          /*                               */
@RF00305 CH    APACRC,@CH00253                                     0372
         BNE   @RF00372                                            0372
*     DO;                           /*                       @Z67SP00*/
*       IOPFUNCT=IOPSTOWR;          /* INDICATE A STOW REPLACE OPER  */
         L     @10,@PC00001+4                                      0374
         L     @10,CURIOP(,@10)                                    0374
         MVI   IOPFUNCT(@10),X'54'                                 0374
*       IOPTYPE=IOPSMD;             /* SYSMOD ENTRY BEING STOWED     */
         MVI   IOPTYPE(@10),X'0B'                                  0375
*       IOPNAM17=ICTPTFS(1);        /* CURRENT SYSMOD BEING PROCESSED*/
         L     @05,@PC00001                                        0376
         MVC   IOPNAM17(7,@10),ICTPTFS(@05)                        0376
*       CALL HMASMIO(HMASMIOP);     /* CALL IO TO STOW THE ENTRY     */
         ST    @10,@AL00001                                        0377
         L     @15,@CV01624                                        0377
         LA    @01,@AL00001                                        0377
         BALR  @14,@15                                             0377
*       APACRC=MAX(APACRC,IOPRETRN);/* PICK UP HIGHEST RET CODE HIT  */
         L     @10,@PC00001+4                                      0378
         L     @10,CURIOP(,@10)                                    0378
         SLR   @05,@05                                             0378
         IC    @05,IOPRETRN(,@10)                                  0378
         CR    APACRC,@05                                          0378
         BNL   *+6
         LR    APACRC,@05                                          0378
*     END;                          /*                               */
*                                                                  0379
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE STOW OF THE NEW (A)CDS ENTRY WAS OK, AND THE ICT HAS   */
*   /* BEEN BIULT, THEN INDICATE THAT A (A)CDS ENTRY EXISTS.         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0380
*   IF IOPRETRN=IOPGOOD             /* STOW OF ENTRY OK, AND THE ICT */
*       &CCAICTOK=ON THEN           /* HAS BEEN BUILT?               */
@RF00372 L     @10,@PC00001+4                                      0380
         L     @10,CURIOP(,@10)                                    0380
         CLI   IOPRETRN(@10),0                                     0380
         BNE   @RF00380                                            0380
         TM    CCAICTOK(CCAPTR),B'00000001'                        0380
         BNO   @RF00380                                            0380
*     ICTPCDSE(1)=ON;               /* INDICATE ENTRY ON (A)CDS      */
         L     @10,@PC00001                                        0381
         OI    ICTPCDSE(@10),B'10000000'                           0381
*   RETURN CODE(APACRC);            /* RETURN TO MAIN LINE WITH RC   */
@RF00380 LR    @15,APACRC                                          0382
         L     @14,@SA00004                                        0382
         LM    @00,@12,@SA00004+8                                  0382
         BR    @14                                                 0382
*   END SECAPPAC;                   /* END OF APPLY/ACCEPT PROCEDURE */
*   END HMASMSEC                    /* END OF MAIN MODULE HMASMSEC   */
*                                                                  0384
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMVLP)                                       */
*                                                                  0384
*       ;                                                          0384
@DATA    DS    0H
@CH00253 DC    H'0'
@CH00087 DC    H'1'
@CH00112 DC    H'8'
@CH00163 DC    H'24'
@CH01716 DC    H'144'
@CH01061 DC    H'166'
@CH01065 DC    H'168'
@CH01069 DC    H'170'
         DS    0F
@AL00300 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00367 DC    A(HMASMVLP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    2F
@SA00003 DS    0F
@SA00004 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    1A
@TF00001 DS    F
         DS    0F
@CF01728 DC    F'-144'
@CF01729 DC    F'-135'
@CF01730 DC    F'-133'
@CF01726 DC    F'-8'
@CF01727 DC    F'-4'
@CV01624 DC    V(HMASMIO)
@CV01625 DC    V(HMASMVLU)
         DS    0D
IOPPTR   DS    F
@CC01654 DC    C'ASSEM           '
@CC01657 DC    C'MOD             '
@CC01660 DC    C'SZAP            '
@CC01663 DC    C'XZAP            '
@CC01666 DC    C'MAC             '
@CC01669 DC    C'MACUPD          '
@CC01672 DC    C'SRC             '
@CC01675 DC    C'SRCUPD          '
ICTENDCH DC    X'FFFFFFFF'
HMASMVLP DS    CL52
         ORG   HMASMVLP
VLPFUNCT DS    FL1
VLPRETRN DS    FL1
VLPFLAG  DS    BL1
         ORG   VLPFLAG
VLPFMSG  DS    BL1
VLPFRSV  EQU   VLPFLAG+0
         ORG   HMASMVLP+3
VLPDLEN  DS    FL1
VLPSNTRY DS    CL9
         ORG   VLPSNTRY
VLPDATA  DS    CL8
VLPTYPE  DS    FL1
         ORG   HMASMVLP+13
@NM00225 DS    CL3
VLPLPTR  DS    AL4
VLPMTYPE DS    CL8
VLPMNAME DS    CL8
VLPSTYPE DS    CL16
         ORG   HMASMVLP+52
SECBITS  DS    CL1
         ORG   SECBITS
NOADD    DS    BL1
ALLDONE  EQU   SECBITS+0
@NM00227 EQU   SECBITS+0
         ORG   SECBITS+1
         DS    CL1
PATCHSEC DS    CL80
         ORG   PATCHSEC
@NM00228 DC    80X'FF'
         ORG   PATCHSEC+80
         DS    CL2
SECARRY1 DS    CL24
         ORG   SECARRY1+0
CHAINTYP DC    AL1(165)
CHAINLEN DC    AL1(7)
@NM00226 DC    CL2'  '
CHAINPTR DC    A(0)
CHAINTXT DC    CL16'REQ             '
         ORG   SECARRY1+24
         ORG   SECARRY1+24
         DC    AL1(164)
         DC    AL1(7)
         DC    CL2'  '
         DC    A(0)
         DC    CL16'SUPING          '
         ORG   SECARRY1+48
         ORG   SECARRY1+48
         DC    AL1(162)
         DC    AL1(7)
         DC    CL2'  '
         DC    A(0)
         DC    CL16'PRE             '
         ORG   SECARRY1+72
         ORG   SECARRY1+72
         DC    AL1(166)
         DC    AL1(7)
         DC    CL2'  '
         DC    A(0)
         DC    CL16'IFREQ           '
         ORG   SECARRY1+96
         ORG   SECARRY1+96
         DC    AL1(168)
         DC    AL1(7)
         DC    CL2'  '
         DC    A(0)
         DC    CL16'DELETE          '
         ORG   SECARRY1+120
         ORG   SECARRY1+120
         DC    AL1(170)
         DC    AL1(7)
         DC    CL2'  '
         DC    A(0)
         DC    CL16'SUPBY           '
         ORG   SECARRY1+144
         ORG   SECARRY1+144
         DC    AL1(163)
         DC    AL1(7)
         DC    CL2'  '
         DC    A(0)
         DC    CL16'NPRE            '
         ORG   SECARRY1+168
         ORG   SECARRY1+168
         DC    AL1(169)
         DC    AL1(7)
         DC    CL2'  '
         DC    A(0)
         DC    CL16'VERSION         '
         ORG   SECARRY1+192
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
APACRC   EQU   @04
M2       EQU   @02
M1       EQU   @02
SECDELRC EQU   @02
J        EQU   @03
M        EQU   @05
I        EQU   @02
SECRETCD EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAICTOK EQU   CCAFLAG3
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCADATE  EQU   CCAFCTL+1
CCATIME  EQU   CCAFCTL+4
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00043 EQU   HMASMIOP+12
@NM00044 EQU   @NM00043
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00154 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPFLG1 EQU   ICTPTF+7
ICTERROR EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPCDSE EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPFLG8 EQU   ICTPTF+14
ICTPFLG9 EQU   ICTPTF+15
@NM00181 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPTYPE EQU   ICTPTF+17
ICTPFMID EQU   ICTPTF+22
ICTPVERN EQU   ICTPTF+29
ICTPRECD EQU   ICTPTF+30
ICTPRECT EQU   ICTPTF+33
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTIXP   EQU   ICTIXPF
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTND EQU   ICTENTNM
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTDELEX EQU   ICTDELST
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMEND  EQU   ICTMNAME
ICTMFLG2 EQU   ICTMOD+8
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMMOD  EQU   ICTMMODR
ICTMASM  EQU   ICTMMODR
ICTMZAP  EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMSRCU EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTMFLG4 EQU   ICTMOD+11
ICTMISEL EQU   ICTMFLG4
ICTMFLG5 EQU   ICTMOD+12
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLFLG4 EQU   ICTLMOD+8
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLFLG3 EQU   ICTLMOD+14
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
CCADSIDA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
CURSYM   EQU   0
CURIOP   EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00050 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00061 EQU   IOPUDATA
@NM00062 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPNTLVL EQU   IOPASMDR
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00071 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPBUSMD EQU   IOPBUNT
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00082 EQU   IOPSRCDR+1
@NM00084 EQU   @NM00082+7
@NM00088 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00092 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00098 EQU   IOPMODDR+1
@NM00100 EQU   @NM00098+7
@NM00104 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00108 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00119 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00126 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPTYPE EQU   IOPPTFDR+1
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPAPP   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPDBYNO EQU   IOPPTFDR+6
IOPSBYNO EQU   IOPPTFDR+13
IOPPTFFX EQU   IOPPTFNT+24
@NM00135 EQU   IOPPTFFX
@NM00136 EQU   @NM00135
IOPPDTES EQU   IOPPTFFX+41
@NM00139 EQU   IOPPDTES
IOPRECD  EQU   @NM00139
IOPRECT  EQU   @NM00139+3
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPAPPD  EQU   IOPDATES
IOPAPPT  EQU   IOPDATES+3
IOPRSTD  EQU   IOPDATES+6
IOPRSTT  EQU   IOPDATES+9
IOPACCD  EQU   IOPDATES+12
IOPACCT  EQU   IOPDATES+15
IOPPFMID EQU   IOPPTFFX+73
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPPTFND EQU   IOPPMODS
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPPRENM EQU   IOPPRENT
IOPNPRNT EQU   IOPUDATA+104
IOPNPRNM EQU   IOPNPRNT
IOPSUPNT EQU   IOPUDATA+104
IOPSUPNM EQU   IOPSUPNT
IOPREQNT EQU   IOPUDATA+104
IOPREQNM EQU   IOPREQNT
IOPIRQNT EQU   IOPUDATA+104
IOPIRQNM EQU   IOPIRQNT
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPDELNM EQU   IOPDELNT
IOPVERNT EQU   IOPUDATA+104
IOPVERNM EQU   IOPVERNT
IOPSBYNT EQU   IOPUDATA+104
IOPSBYNM EQU   IOPSBYNT
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00164 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00164
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00168 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00168
IOPBFTB1 EQU   IOPBFTB0
ICTENDNT EQU   ICTENDCH
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00170 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00169 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00167 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00166 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00165 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00163 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00162 EQU   IOPPTSFX+35
@NM00161 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00160 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00159 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00158 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00157 EQU   IOPQFMDR
@NM00153 EQU   IOPQSMDR
@NM00152 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
@NM00151 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
@NM00150 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
@NM00149 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00148 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
@NM00147 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
@NM00146 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
@NM00145 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
@NM00144 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
@NM00143 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00142 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00141 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
@NM00140 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
@NM00138 EQU   IOPPTFFX+8
@NM00137 EQU   @NM00135+7
IOPPRELN EQU   @NM00136
@NM00134 EQU   IOPPTFDR+20
@NM00133 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00132 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00131 EQU   IOPFLGS5
@NM00130 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00129 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00128 EQU   @NM00126+7
@NM00127 EQU   @NM00126
@NM00125 EQU   IOPSYSDR+5
@NM00124 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00123 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00122 EQU   IOPDLBFX+8
@NM00121 EQU   @NM00119+7
@NM00120 EQU   @NM00119
@NM00118 EQU   IOPDLBDR+1
@NM00117 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00116 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00115 EQU   IOPMODFX+12
@NM00114 EQU   IOPMODF4
@NM00113 EQU   IOPMODF3
@NM00112 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00111 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00110 EQU   @NM00108+7
@NM00109 EQU   @NM00108
@NM00107 EQU   IOPMODDR+17
@NM00106 EQU   @NM00104+7
@NM00105 EQU   @NM00104
@NM00103 EQU   @NM00100
@NM00102 EQU   @NM00100
@NM00101 EQU   @NM00100
@NM00099 EQU   @NM00098
@NM00097 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00096 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00095 EQU   IOPSRCFX+8
@NM00094 EQU   @NM00092+7
@NM00093 EQU   @NM00092
@NM00091 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00090 EQU   @NM00088+7
@NM00089 EQU   @NM00088
@NM00087 EQU   @NM00084
@NM00086 EQU   @NM00084
@NM00085 EQU   @NM00084
@NM00083 EQU   @NM00082
@NM00081 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00080 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00079 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
@NM00078 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00077 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00076 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00075 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00073 EQU   @NM00071+7
@NM00072 EQU   @NM00071
@NM00070 EQU   IOPLMDDR+6
@NM00069 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00068 EQU   IOPLMDF4
@NM00067 EQU   IOPLMDF3
@NM00066 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00065 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00064 EQU   IOPLMDDR
@NM00063 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPALLOC EQU   @NM00062+4
IOPUSED  EQU   @NM00062
IOPTPSEQ EQU   @NM00061+8
IOPVLSER EQU   @NM00061+2
IOPBLKSI EQU   @NM00061
IOPCQMAX EQU   IOPCQMAP+12
@NM00060 EQU   IOPCQMAP+11
@NM00059 EQU   IOPCQMAP+8
@NM00058 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00057 EQU   IOPSCMAP+11
@NM00056 EQU   IOPSCMAP+8
@NM00055 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00054 EQU   IOPNTMAX+11
@NM00053 EQU   IOPNTMAX+8
@NM00052 EQU   IOPNTMAX
@NM00051 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00050+5
IOPIPTF3 EQU   @NM00050
ICTIXL   EQU   ICTIXLF
@NM00224 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
ICTTG2   EQU   ICTLMOD+23
ICTTG1   EQU   ICTLMOD+15
@NM00223 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTIND1 EQU   ICTLFLG3
@NM00222 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00221 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00220 EQU   ICTLFLG7
@NM00219 EQU   ICTLFLG6
@NM00218 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00217 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00216 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLPROC EQU   ICTLFLG4
ICTLEND  EQU   ICTLNAME
@NM00215 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00214 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTTALND EQU   ICTTALNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00213 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
ICTIXM   EQU   ICTIXMF
@NM00212 EQU   ICTMOD+128
ICTMICHA EQU   ICTMOD+108
ICTPPTR  EQU   ICTMOD+96
@NM00211 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00210 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMSYSL EQU   ICTMOD+56
ICTMDSTL EQU   ICTMOD+48
ICTMASLB EQU   ICTMOD+40
ICTTOLIB EQU   ICTMOD+32
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00209 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00208 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00207 EQU   ICTMLEP4
@NM00206 EQU   ICTMLEP3
@NM00205 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00204 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00203 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00202 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
@NM00201 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
@NM00200 EQU   ICTMFLG2
@NM00199 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMPROC EQU   ICTMFLG2
@NM00198 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELND EQU   ICTDELNM
@NM00197 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00196 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00195 EQU   ICTCSRST
@NM00194 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00193 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00192 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00191 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00190 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00189 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00188 EQU   ICTSUPNT+7
ICTSUPND EQU   ICTSUPNM
@NM00187 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00186 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00185 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00184 EQU   ICTENTST
@NM00183 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00182 EQU   @NM00181
ICTPRQBY EQU   @NM00181
ICTPRQOK EQU   @NM00181
ICTPRQCK EQU   @NM00181
@NM00180 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00179 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00178 EQU   ICTPFLG4
@NM00177 EQU   ICTPFLG4
@NM00176 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
@NM00175 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00174 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00173 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00172 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTREGEN EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00171 EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTPEND  EQU   ICTPTFS
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00156 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00155 EQU   @NM00154+7
IOPQSMFM EQU   @NM00154
@NM00074 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00049 EQU   IOPUSERL
@NM00048 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00047 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00046 EQU   @NM00043+10
IOPSEQNO EQU   @NM00043+8
@NM00045 EQU   @NM00044+7
IOPPTFNM EQU   @NM00044
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
CCATBLPA EQU   @NM00009+12
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
CCAIOPTR EQU   CCAFIOP
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00314 EQU   @RC00310
@ENDDATA EQU   *
         END   HMASMSEC,(C'PLS2116',0802,78334)
