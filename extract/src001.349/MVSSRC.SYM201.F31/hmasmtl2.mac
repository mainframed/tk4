         TITLE 'HMASMTL2 - HMASMP HMASMICT LMOD SECTION COMPLETE'
HMASMTL2 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMTL2  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @09,4095(,@12)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@09                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*   IOPPTR=CCAIOPTR;                /* PTR TO IOP FOR LMOD LOCATE    */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0189
*   IOPPTRF=TBLXIOPF;               /* PTR TO IOP FOR BLDL           */
         L     @10,@PC00001                                        0190
         L     IOPPTRF,TBLXIOPF(,@10)                              0190
*   HMASMMGP=HMASMMGP&&HMASMMGP;    /* ZERO ALL MGP FIELDS           */
         XC    HMASMMGP(24),HMASMMGP                               0191
*   MGPPRINT=ON;                    /* ALL MSGS TO PRINTER           */
*   MGPHLDS=ON;                     /* ALL MSGS TO LOG               */
         OI    MGPPRINT,B'10010000'                                0193
*   TL2RTNCD=ZERO;                  /* PRESET GOOD RTN CODE          */
         SLR   TL2RTNCD,TL2RTNCD                                   0194
*                                                                  0195
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL APPROPRIATE PROCEDURE DEPENDING ON FUNCTION              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0195
*   RFY                                                            0195
*     RTNCODE RSTD;                 /*                               */
*   IF CCAACCPT=ON                  /* IF ACCEPT                     */
*     THEN                          /* THEN                          */
         TM    CCAACCPT(CCAPTR),B'00100000'                        0196
         BNO   @RF00196                                            0196
*     DO;                           /*                               */
*       CALL PROCACPT;              /* BUILD LMODS FOR ACCEPT        */
         BAL   @14,PROCACPT                                        0198
*       TL2RTNCD=RTNCODE;           /* SAVE RETURN CODE              */
         LR    TL2RTNCD,RTNCODE                                    0199
*     END;                          /*                               */
*   IF CCAAPPLY=ON                  /* IF APPLY OR                   */
*       ×CCARES=ON                  /* RESTORE                       */
*     THEN                          /*                               */
@RF00196 TM    CCAAPPLY(CCAPTR),B'01001000'                        0201
         BZ    @RF00201                                            0201
*     DO;                           /*                               */
*       CALL PROCAPRS;              /* BUILD LMODS FOR APPLY/RESTORE */
         BAL   @14,PROCAPRS                                        0203
*       TL2RTNCD=RTNCODE;           /* SAVE RETURN CODE              */
         LR    TL2RTNCD,RTNCODE                                    0204
*     END;                          /*                               */
*   RFY                                                            0206
*     RTNCODE UNRSTD;               /*                               */
@RF00201 DS    0H                                                  0207
*   IOPFUNCT=IOPCLOSE;              /* SET TO CLOSE          @ZD00002*/
         MVI   IOPFUNCT(IOPPTR),X'50'                              0207
*   IOPDSID=IOPANYDD;               /* DCB FOR LAST          @ZD00002*/
         MVI   IOPDSID(IOPPTR),X'18'                               0208
*   CALL HMASMIO(HMASMIOP);         /* LIBRARY ACCESSED      @ZD00002*/
         ST    IOPPTR,@AL00001                                     0209
         L     @15,@CV01742                                        0209
         LA    @01,@AL00001                                        0209
         BALR  @14,@15                                             0209
*   TL2RTNCD=MAX(TL2RTNCD,IOPRETRN);/*                       @ZD00002*/
*                                                                  0210
         SLR   @10,@10                                             0210
         IC    @10,IOPRETRN(,IOPPTR)                               0210
         CR    TL2RTNCD,@10                                        0210
         BNL   *+6
         LR    TL2RTNCD,@10                                        0210
*   /*****************************************************************/
*   /*                                                               */
*   /* ALL PROCESSING DONE. RETURN WITH HIGHEST RETURN CODE FROM     */
*   /* CALLED PROCEDURES                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0211
*   RETURN CODE(TL2RTNCD);          /*                               */
         LR    @15,TL2RTNCD                                        0211
         L     @13,4(,@13)                                         0211
         L     @14,12(,@13)                                        0211
         LM    @00,@12,20(@13)                                     0211
         BR    @14                                                 0211
*                                                                  0212
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO COMPLETE LMOD SECTION FOR ACCEPT FUNCTION */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0212
*PROCACPT:                                                         0212
*   PROC;                           /*                               */
PROCACPT STM   @14,@12,@SA00002                                    0212
*   RFY                                                            0213
*     HMASMIOP BASED(IOPPTR);       /* IOP WITH CDS LMOD             */
*   RFY                                                            0214
*     ICTLMOD BASED(CCAICLMD);      /*                               */
*   RFY                                                            0215
*     ICTIXLF BASED(ICTLCHN(LMDX)); /* LMOD TO MOD CHAIN BASE        */
*   RFY                                                            0216
*     ICTMOD BASED(ICTIXL(LMDIX));  /* MOD BASE                      */
*   DECLARE                         /*                               */
*     ACPRTNCD FIXED(8);            /* RETURN CODE                   */
*   DCL                                                            0218
*     MODLKX FIXED(31);             /* LMOD TO MOD INDEX OF        0218
*                                      REPLACEMENT ELEMENT   @Z67SP00*/
*   ACPRTNCD=ZERO;                  /* INIT RETURN CODE              */
*                                                                  0219
         SLR   ACPRTNCD,ACPRTNCD                                   0219
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU LMODS                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0220
*   DO LMDX=1 BY 1 WHILE            /* LOOP THRU LMODS               */
*         (ACPRTNCD<STOPFUNC        /* UNTIL SEVERE ERROR            */
*         &ICTLEND(LMDX)^=ICTENDNT);/* OR END OF LMOD                */
*                                                                  0220
         LA    LMDX,1                                              0220
         B     @DE00220                                            0220
@DL00220 DS    0H                                                  0221
*     /***************************************************************/
*     /*                                                             */
*     /* IF LMOD IS COMPLETE THEN NOTHING TO DO                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0221
*     DO LMDIX=1 BY 1 WHILE         /* LOOP THRU MODS FOR LMOD       */
*           (ACPRTNCD<STOPFUNC      /* UNTIL SEVERE ERROR            */
*           &ICTIXL(LMDIX)^=ICTENDIX);/* OR END OF LMOD      @Z67SP00*/
         LA    LMDIX,1                                             0221
         B     @DE00221                                            0221
@DL00221 DS    0H                                                  0222
*       IF ICTMZAP(1)=ON            /* IF ZAP THEN SET LMOD ZAP FLAG */
*           ×ICTMXPND(1)=ON         /*                       @Z67SP00*/
*         THEN                      /*                       @Z67SP00*/
         LR    @10,LMDIX                                           0222
         SLA   @10,2                                               0222
         LR    @15,LMDX                                            0222
         MH    @15,@CH01093                                        0222
         L     @14,CCAICLMD(,CCAPTR)                               0222
         LA    @01,0(@15,@14)                                      0222
         AL    @01,@CF01856                                        0222
         L     @01,ICTLCHN-34(,@01)                                0222
         AL    @01,@CF01857                                        0222
         L     @10,ICTIXL(@10,@01)                                 0222
         TM    ICTMZAP(@10),B'00110000'                            0222
         BZ    @RF00222                                            0222
*         DO;                       /*                       @Z67SP00*/
*           ICTLZAP(LMDX)=ON;       /* TURN ON LMOD COTAINS ZAP    0224
*                                      ELEMENT               @Z67SP00*/
         ALR   @14,@15                                             0224
         AL    @14,@CF01858                                        0224
         OI    ICTLZAP-14(@14),B'00000100'                         0224
*         END;                      /*                       @Z67SP00*/
*       IF ICTMXPND(1)=ON           /* EXPAND ZAP?           @Z67SP00*/
*         THEN                      /*                       @Z67SP00*/
@RF00222 LR    @10,LMDIX                                           0226
         SLA   @10,2                                               0226
         LR    @15,LMDX                                            0226
         MH    @15,@CH01093                                        0226
         L     @14,CCAICLMD(,CCAPTR)                               0226
         LA    @01,0(@15,@14)                                      0226
         AL    @01,@CF01856                                        0226
         L     @01,ICTLCHN-34(,@01)                                0226
         AL    @01,@CF01857                                        0226
         L     @10,ICTIXL(@10,@01)                                 0226
         TM    ICTMXPND(@10),B'00010000'                           0226
         BNO   @RF00226                                            0226
*         DO;                       /*                       @Z67SP00*/
*           ICTLXPND(LMDX)=ON;      /* TURN ON LMOD COTAINS EXPAND 0228
*                                      ZAP                   @Z67SP00*/
         ALR   @14,@15                                             0228
         AL    @14,@CF01858                                        0228
         OI    ICTLXPND-14(@14),B'00100000'                        0228
*         END;                      /*                       @Z67SP00*/
*       IF(ICTMMOD(1)=ON            /* MOD REPLACEMENT OR            */
*           ×ICTMXPND(1)=ON)        /* EXPAND ZAP                    */
*         THEN                      /*                       @Z67SP00*/
@RF00226 LR    @10,LMDIX                                           0230
         SLA   @10,2                                               0230
         LR    @15,LMDX                                            0230
         MH    @15,@CH01093                                        0230
         L     @14,CCAICLMD(,CCAPTR)                               0230
         LA    @01,0(@15,@14)                                      0230
         AL    @01,@CF01856                                        0230
         L     @01,ICTLCHN-34(,@01)                                0230
         AL    @01,@CF01857                                        0230
         L     @01,ICTIXL(@10,@01)                                 0230
         TM    ICTMMOD(@01),B'10010000'                            0230
         BZ    @RF00230                                            0230
*         DO;                       /* YES, EITHER LINK OR COPY    0231
*                                      REQUIRED              @Z67SP00*/
*           MODLKX=LMDIX;           /* SAVE REPLACEMENT INDEX      0232
*                                                            @Z67SP00*/
         ST    LMDIX,MODLKX                                        0232
*           ICTLINK(LMDX)=ON;       /* MAY NEED TO GET LE PARMS    0233
*                                                            @Z67SP00*/
         ST    @15,@TF00001                                        0233
         ALR   @15,@14                                             0233
         AL    @15,@CF01861                                        0233
         OI    ICTLINK-13(@15),B'01000000'                         0233
*           IF ICTMXPND(1)=ON THEN  /* EXPAND ZAP?           @Z67SP00*/
         L     @15,@TF00001                                        0234
         AL    @15,@CF01856                                        0234
         L     @01,ICTLCHN-34(@15,@14)                             0234
         AL    @01,@CF01857                                        0234
         L     @10,ICTIXL(@10,@01)                                 0234
         TM    ICTMXPND(@10),B'00010000'                           0234
         BNO   @RF00234                                            0234
*             DO;                   /*                       @Z67SP00*/
*               ICTLLKD(LMDX)=ON;   /* LMOD MUST BE LINKEDITED     0236
*                                                            @Z67SP00*/
*               ICTLCPY(LMDX)=OFF;  /* AND NOT COPIED        @Z67SP00*/
         AL    @14,@TF00001                                        0237
         AL    @14,@CF01858                                        0237
         OI    ICTLLKD-14(@14),B'00001000'                         0237
         NI    ICTLCPY-14(@14),B'11101111'                         0237
*             END;                  /*                       @Z67SP00*/
*           ELSE                    /* IS A MODULE REPLACEMENT     0239
*                                                            @Z67SP00*/
*             DO;                   /*                       @Z67SP00*/
         B     @RC00234                                            0239
@RF00234 DS    0H                                                  0240
*               IF ICTMRELF(1)=ON   /* RELFILE               @Z67SP00*/
*                   ×ICTLIBLK(1)=ON /* OR LKLIB?             @Z67SP00*/
*                 THEN              /*                       @Z67SP00*/
         LR    @10,LMDIX                                           0240
         SLA   @10,2                                               0240
         LR    @15,LMDX                                            0240
         MH    @15,@CH01093                                        0240
         L     @14,CCAICLMD(,CCAPTR)                               0240
         LA    @01,0(@15,@14)                                      0240
         AL    @01,@CF01856                                        0240
         L     @01,ICTLCHN-34(,@01)                                0240
         AL    @01,@CF01857                                        0240
         L     @10,ICTIXL(@10,@01)                                 0240
         TM    ICTMRELF(@10),B'10100000'                           0240
         BZ    @RF00240                                            0240
*                 DO;               /* YES,                  @Z67SP00*/
*                   ICTLINK(LMDX)=OFF;/* ALREADY HAVE LE PARMS     0242
*                                                            @Z67SP00*/
         ST    @15,@TF00001                                        0242
         ALR   @15,@14                                             0242
         AL    @15,@CF01861                                        0242
         NI    ICTLINK-13(@15),B'10111111'                         0242
*                   IF ICTLLKD(LMDX)=OFF/* AND NOT ALREADY A LINK? 0243
*                                                            @Z67SP00*/
*                     THEN          /*                       @Z67SP00*/
         LR    @10,@14                                             0243
         AL    @10,@TF00001                                        0243
         AL    @10,@CF01858                                        0243
         TM    ICTLLKD-14(@10),B'00001000'                         0243
         BNZ   @RF00243                                            0243
*                     DO;           /*                       @Z67SP00*/
*                       ICTLCPY(LMDX)=ON;/* DO A COPY        @Z67SP00*/
         AL    @14,@TF00001                                        0245
         AL    @14,@CF01858                                        0245
         OI    ICTLCPY-14(@14),B'00010000'                         0245
*                     END;          /*                       @Z67SP00*/
*                 END;              /*                       @Z67SP00*/
*               ELSE                /*                       @Z67SP00*/
*                 DO;               /*                       @Z67SP00*/
         B     @RC00240                                            0248
@RF00240 DS    0H                                                  0249
*                   ICTLLKD(LMDX)=ON;/* LINKEDIT NEEDED      @Z67SP00*/
*                   ICTLCPY(LMDX)=OFF;/* NO COPY             @Z67SP00*/
         LR    @10,LMDX                                            0250
         MH    @10,@CH01093                                        0250
         L     @01,CCAICLMD(,CCAPTR)                               0250
         ALR   @01,@10                                             0250
         AL    @01,@CF01858                                        0250
         OI    ICTLLKD-14(@01),B'00001000'                         0250
         NI    ICTLCPY-14(@01),B'11101111'                         0250
*                 END;              /*                       @Z67SP00*/
*             END;                  /*                       @Z67SP00*/
@RC00240 DS    0H                                                  0253
*         END;                      /*                       @Z67SP00*/
@RC00234 DS    0H                                                  0254
*     END;                          /*                               */
@RF00230 AH    LMDIX,@CH00063                                      0254
@DE00221 CH    ACPRTNCD,@CH00033                                   0254
         BNL   @DC00221                                            0254
         LR    @10,LMDIX                                           0254
         SLA   @10,2                                               0254
         LR    @15,LMDX                                            0254
         MH    @15,@CH01093                                        0254
         L     @01,CCAICLMD(,CCAPTR)                               0254
         AL    @01,@CF01856                                        0254
         L     @01,ICTLCHN-34(@15,@01)                             0254
         AL    @01,@CF01857                                        0254
         L     @10,ICTIXL(@10,@01)                                 0254
         CL    @10,ICTENDIX                                        0254
         BNE   @DL00221                                            0254
@DC00221 DS    0H                                                  0255
*     IF ICTLCPL(LMDX)=OFF          /* IF COMPLETE                   */
*       THEN                        /* NO                            */
         LR    @10,LMDX                                            0255
         MH    @10,@CH01093                                        0255
         L     @15,CCAICLMD(,CCAPTR)                               0255
         ST    @10,@TF00001                                        0255
         ALR   @10,@15                                             0255
         AL    @10,@CF01865                                        0255
         TM    ICTLCPL-8(@10),B'00100000'                          0255
         BNZ   @RF00255                                            0255
*       DO;                         /* PROCESS IT                    */
*                                                                  0256
*         /***********************************************************/
*         /*                                                         */
*         /* IF TO SYSPUNCH THEN NOTHING TO DO                       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0257
*         IF ICTTG1(LMDX,1:7)=TXTSYSPN(1:7)/* DLIB=SYSPUNCH?         */
*           THEN                    /* YES                           */
         LR    @10,@15                                             0257
         AL    @10,@TF00001                                        0257
         AL    @10,@CF01866                                        0257
         CLC   ICTTG1-15(7,@10),TXTSYSPN                           0257
         BNE   @RF00257                                            0257
*           DO;                     /* NOTHING FOR THIS LMOD         */
*             ICTLPROC(LMDX)=ON;    /* LMOD IN PROCESS               */
*             ICTLCPL(LMDX)=ON;     /* AND COMPLETE                  */
         LR    @10,@15                                             0260
         AL    @10,@TF00001                                        0260
         AL    @10,@CF01865                                        0260
         OI    ICTLPROC-8(@10),B'10100000'                         0260
*             ICTMCPL(1)=ON;        /* MOD COMPLETE                  */
         LR    @10,LMDIX                                           0261
         SLA   @10,2                                               0261
         L     @14,@TF00001                                        0261
         AL    @15,@CF01856                                        0261
         L     @01,ICTLCHN-34(@14,@15)                             0261
         AL    @01,@CF01857                                        0261
         L     @10,ICTIXL(@10,@01)                                 0261
         OI    ICTMCPL(@10),B'00100000'                            0261
*           END;                    /* END SYSPUNCH                  */
*                                                                  0262
*         /***********************************************************/
*         /*                                                         */
*         /* MUST GET LE PARMS                                       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0263
*         IF ICTLINK(LMDX)=ON       /* NEED LINKEDIT PARMS SYSPUNCH  */
*             &ICTLLKD(LMDX)=ON     /* AND LINK TO BE DONE           */
*           THEN                    /* THEN MUST PROCESS LMOD        */
@RF00257 LR    @10,LMDX                                            0263
         MH    @10,@CH01093                                        0263
         L     @02,CCAICLMD(,CCAPTR)                               0263
         ST    @10,@TF00001                                        0263
         ALR   @10,@02                                             0263
         AL    @10,@CF01861                                        0263
         TM    ICTLINK-13(@10),B'01000000'                         0263
         BNO   @RF00263                                            0263
         LR    @10,@02                                             0263
         AL    @10,@TF00001                                        0263
         AL    @10,@CF01858                                        0263
         TM    ICTLLKD-14(@10),B'00001000'                         0263
         BNO   @RF00263                                            0263
*           DO;                     /*                               */
*             IOPLMDNT=IOPLMDNT&&IOPLMDNT;/* CLEAR IOP USER DATA   0265
*                                                            @ZD00004*/
         XC    IOPLMDNT(104,IOPPTR),IOPLMDNT(IOPPTR)               0265
*             CALL LMDBLDL(ICTIXL(MODLKX)->ICTMOD(1));/* GET LE PARMS
*                                                            @Z67SP00*/
         L     @10,MODLKX                                          0266
         SLA   @10,2                                               0266
         L     @01,@TF00001                                        0266
         AL    @02,@CF01856                                        0266
         L     @02,ICTLCHN-34(@01,@02)                             0266
         AL    @02,@CF01857                                        0266
         L     @10,ICTIXL(@10,@02)                                 0266
         ST    @10,@AL00001                                        0266
         LA    @01,@AL00001                                        0266
         BAL   @14,LMDBLDL                                         0266
*             RFY                                                  0267
*               RTNCODE RSTD;       /*                               */
*             ACPRTNCD=MAX(RTNCODE,ACPRTNCD);/* SAVE RTN CODE        */
         CR    ACPRTNCD,RTNCODE                                    0268
         BNL   *+6
         LR    ACPRTNCD,RTNCODE                                    0268
*             IF RTNCODE=ZERO       /* LE PARMS OBTAINED             */
*               THEN                /* YES                           */
         LTR   RTNCODE,RTNCODE                                     0269
         BNZ   @RF00269                                            0269
*               DO;                 /*                               */
*                 ICTLFLG1(LMDX)=IOPLMDF1;/* FIRST BYTE OF LE PRMS 0271
*                                                            @ZD00004*/
         LR    @14,LMDX                                            0271
         MH    @14,@CH01093                                        0271
         L     @10,CCAICLMD(,CCAPTR)                               0271
         ST    @14,@TF00001                                        0271
         ALR   @14,@10                                             0271
         AL    @14,@CF01867                                        0271
         MVC   ICTLFLG1-9(1,@14),IOPLMDF1(IOPPTR)                  0271
*                 ICTLFLG5(LMDX)=IOPLMDF2;/* SECOND          @ZD00004*/
         LR    @14,@10                                             0272
         AL    @14,@TF00001                                        0272
         AL    @14,@CF01868                                        0272
         MVC   ICTLFLG5-10(1,@14),IOPLMDF2(IOPPTR)                 0272
*                 ICTLFLG6(LMDX)=IOPLMDF3;/* THIRD           @ZD00004*/
         LR    @14,@10                                             0273
         AL    @14,@TF00001                                        0273
         AL    @14,@CF01869                                        0273
         MVC   ICTLFLG6-11(1,@14),IOPLMDF3(IOPPTR)                 0273
*                 ICTLFLG7(LMDX)=IOPLMDF4;/* FOURTH          @ZD00004*/
         AL    @10,@TF00001                                        0274
         AL    @10,@CF01870                                        0274
         MVC   ICTLFLG7-12(1,@10),IOPLMDF4(IOPPTR)                 0274
*               END;                /*                               */
*             IF RTNCODE=IOPNOTFD   /* LMOD NOT FOUND IN DLIB?       */
*               THEN                /* YES                           */
@RF00269 CH    RTNCODE,@CH00037                                    0276
         BNE   @RF00276                                            0276
*               DO;                 /* WARNING MSG ISSUED            */
*                 ICTLRENT(LMDX)=ON;/* USE DEFAULT PARMS             */
*                 ICTLREUS(LMDX)=ON;/*                               */
*                 ICTLDC(LMDX)=ON;  /*                               */
*                 ICTLREFR(LMDX)=ON;/*                               */
         LR    @14,LMDX                                            0281
         MH    @14,@CH01093                                        0281
         L     @10,CCAICLMD(,CCAPTR)                               0281
         ALR   @10,@14                                             0281
         AL    @10,@CF01867                                        0281
         OI    ICTLRENT-9(@10),B'01100110'                         0281
*               END;                /* END LMOD NOT FOUND            */
*             IF RTNCODE=STOPPTF    /* LMOD NOT PROCESSABLE          */
*               THEN                /* SO                            */
@RF00276 CH    RTNCODE,@CH00055                                    0283
         BNE   @RF00283                                            0283
*               CALL LMDERR;        /* MARK IT DONE                  */
         BAL   @14,LMDERR                                          0284
*             RFY                                                  0285
*               RTNCODE UNRSTD;     /*                               */
@RF00283 DS    0H                                                  0286
*           END;                    /* END NEED LE PARMS             */
*       END;                        /* END LMOD NOT COMPLETE         */
@RF00263 DS    0H                                                  0288
*   END;                            /* END LOOP ON LMODS             */
@RF00255 AH    LMDX,@CH00063                                       0288
@DE00220 CH    ACPRTNCD,@CH00033                                   0288
         BNL   @DC00220                                            0288
         LR    @10,LMDX                                            0288
         MH    @10,@CH01093                                        0288
         L     @02,CCAICLMD(,CCAPTR)                               0288
         AL    @02,@CF01871                                        0288
         L     @10,ICTLEND(@10,@02)                                0288
         CL    @10,ICTENDNT                                        0288
         BNE   @DL00220                                            0288
@DC00220 DS    0H                                                  0289
*   RETURN CODE(ACPRTNCD);          /* RETURN WITH HIGHEST RTN CODE  */
         LR    @15,ACPRTNCD                                        0289
         L     @14,@SA00002                                        0289
         LM    @00,@12,@SA00002+8                                  0289
         BR    @14                                                 0289
*   END PROCACPT;                   /*                               */
*                                                                  0291
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE TO PROCESS THE LMODS FOR APPLY AND RESTORE          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0291
*PROCAPRS:                                                         0291
*   PROC;                           /*                               */
PROCAPRS STM   @14,@12,@SA00003                                    0291
*   RFY                                                            0292
*     ICTLMOD BASED(CCAICLMD);      /* LMOD BASE                     */
*   RFY                                                            0293
*     ICTIXLF BASED(ICTLCHN(LMDX)); /* LMOD TO MOD CHAIN BASE        */
*   RFY                                                            0294
*     ICTMOD BASED(ICTIXL(LMDIX));  /* MOD BASE                      */
*   RFY                                                            0295
*     ICTPTF BASED(ICTPPTR(1));     /* PTF BASE                      */
*   RFY                                                            0296
*     HMASMIOP BASED(IOPPTR);       /* IOP WITH CDS LMOD             */
*   DECLARE                                                        0297
*     APRRTNCD FIXED(8);            /* PROC RETURN CODE              */
*   DECLARE                         /*                               */
*     LPRTNCD FIXED(8);             /*                               */
*   DCL                                                            0299
*     DDNICTX FIXED(8);             /* NUMBER OF DDNAMES IN THE ICT
*                                                            @ZD00004*/
*   DCL                                                            0300
*     LSYSNDX FIXED(8);             /* LIB NAME LOOP INDEX   @ZD00004*/
*   DCL                                                            0301
*     SVCLBFND BIT(1);              /* ONE OF SYSLIB DDNAMES IS    0301
*                                      SVCLIB FLAG           @ZD00004*/
*                                                                  0301
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP ON LMODS COMPLETING ENTRIES                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0302
*   APRRTNCD=ZERO;                  /* INIT RETURN CODE              */
         SLR   APRRTNCD,APRRTNCD                                   0302
*   DO LMDX=1 BY 1 WHILE            /* LOOP ON LMODS                 */
*         (APRRTNCD<STOPFUNC        /* UNTIL SEVERE ERROR            */
*         &ICTLEND(LMDX)^=ICTENDNT);/* OR END OF LMODS               */
         LA    LMDX,1                                              0303
         B     @DE00303                                            0303
@DL00303 DS    0H                                                  0304
*     LPRTNCD=ZERO;                 /* INIT LMOD RTN CD              */
         SLR   LPRTNCD,LPRTNCD                                     0304
*     IF ICTLCPL(LMDX)=OFF          /* IF LMOD IS NOT COMPLT         */
*       THEN                        /* THEN MUST FINISH LMOD         */
         LR    @10,LMDX                                            0305
         MH    @10,@CH01093                                        0305
         L     @07,CCAICLMD(,CCAPTR)                               0305
         ALR   @07,@10                                             0305
         AL    @07,@CF01865                                        0305
         TM    ICTLCPL-8(@07),B'00100000'                          0305
         BNZ   @RF00305                                            0305
*       DO;                         /* ENTRY BUILD                   */
*                                                                  0306
*         /***********************************************************/
*         /*                                                         */
*         /* LOCATE LMOD ON SMPCDS AND CHECK FOR ERROR CONDITIONS    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0307
*         CALL LMDLOC;              /* LOCATE LMOD ON SMPCDS         */
         BAL   @14,LMDLOC                                          0307
*         RFY                                                      0308
*           RTNCODE RSTD;           /*                               */
*         LPRTNCD=MAX(LPRTNCD,RTNCODE);/* SAVE RETURN CODE           */
         CR    LPRTNCD,RTNCODE                                     0309
         BNL   *+6
         LR    LPRTNCD,RTNCODE                                     0309
*         RFY                                                      0310
*           RTNCODE UNRSTD;                                        0310
*                                                                  0310
*         /***********************************************************/
*         /*                                                         */
*         /* LMOD FOUND ON SMPCDS. CHECK TO SEE IF IOSUP SHOULD BE   */
*         /* RUN                                                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0311
*         IF LPRTNCD<STOPPTF        /* IF LMOD FOUND OK              */
*           THEN                    /*                               */
         CH    LPRTNCD,@CH00055                                    0311
         BNL   @RF00311                                            0311
*           DO;                     /*                               */
*             DO LSYSNDX=1 BY 1     /* LOOP THRU DDNAME LIST @ZD00004*/
*                   WHILE(IOPLMDND(LSYSNDX)^=IOPEOLST);/*    @ZD00004*/
         LA    LSYSNDX,1                                           0313
         B     @DE00313                                            0313
@DL00313 DS    0H                                                  0314
*               IF IOPLMIND(LSYSNDX)=IOPLMSYS/* IS IT LIB NAME...  0314
*                                                            @ZD00004*/
*                   &IOPLSYS(LSYSNDX)=TXTSVCLB THEN/* AND ONE OF   0314
*                                      LIBARY DDNAME IS SVCLIB?    0314
*                                                            @ZD00004*/
         LR    @10,LSYSNDX                                         0314
         MH    @10,@CH00034                                        0314
         SLR   @07,@07                                             0314
         IC    @07,IOPLMIND-9(@10,IOPPTR)                          0314
         CH    @07,@CH00063                                        0314
         BNE   @RF00314                                            0314
         ALR   @10,IOPPTR                                          0314
         CLC   IOPLSYS-9(8,@10),@CC01734                           0314
         BNE   @RF00314                                            0314
*                 DO;               /* YES,                  @ZD00004*/
*                   SVCLBFND=ON;    /* SVCLIB IS PRESENT     @ZD00004*/
         OI    SVCLBFND,B'10000000'                                0316
*                 END;              /*                       @ZD00004*/
*               ELSE                                               0318
*                 ;                 /* NOT A LIB NAME        @ZD00004*/
@RF00314 DS    0H                                                  0319
*             END;                  /*                       @ZD00004*/
         AH    LSYSNDX,@CH00063                                    0319
@DE00313 LR    @10,LSYSNDX                                         0319
         MH    @10,@CH00034                                        0319
         SLR   @07,@07                                             0319
         IC    @07,IOPLMDND-9(@10,IOPPTR)                          0319
         CH    @07,@CH00708                                        0319
         BNE   @DL00313                                            0319
*             IF CCAIOSUP^=ZERO     /* IOSUP FOUND...        @ZD00004*/
*                 &SVCLBFND=ON      /* AND SVCLIB IS A LIB?  @ZD00004*/
*               THEN                /* THEN SET BIT TO INDICATE      */
         L     @10,CCABLDLP(,CCAPTR)                               0320
         ICM   @07,15,CCAIOSUP(@10)                                0320
         BZ    @RF00320                                            0320
         TM    SVCLBFND,B'10000000'                                0320
         BNO   @RF00320                                            0320
*               CCASVCLB=ON;        /* SVCLIB HIT                    */
*                                                                  0321
         OI    CCASVCLB(CCAPTR),B'01000000'                        0321
*             /*******************************************************/
*             /*                                                     */
*             /* MOVE IN THE TWO POSSIBLE LIBRARIES THAT LMOD MAY HIT*/
*             /* TO ICT AND SET TTR OF LINK EDIT CONTROL CARDS       */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0322
*             DDNICTX=0;            /* CLEAR LIB NAME COUNT  @ZD00004*/
@RF00320 SLR   DDNICTX,DDNICTX                                     0322
*             DO LSYSNDX=1 BY 1     /* LOOP THRU DDNAME LIST @ZD00004*/
*                   WHILE(IOPLMDND(LSYSNDX)^=IOPEOLST);/*    @ZD00004*/
         LA    LSYSNDX,1                                           0323
         B     @DE00323                                            0323
@DL00323 DS    0H                                                  0324
*               IF IOPLMIND(LSYSNDX)=IOPLMSYS THEN/* SYSLIB DDNAME?
*                                                            @ZD00004*/
         LA    @10,1                                               0324
         LR    @15,LSYSNDX                                         0324
         MH    @15,@CH00034                                        0324
         SLR   @14,@14                                             0324
         IC    @14,IOPLMIND-9(@15,IOPPTR)                          0324
         CR    @10,@14                                             0324
         BNE   @RF00324                                            0324
*                 DO;               /* YES,                  @ZD00004*/
*                   DDNICTX=DDNICTX+1;/* NUMBER OF DDN IN ICT@ZD00004*/
         ALR   DDNICTX,@10                                         0326
*                   IF DDNICTX=1 THEN/* FIRST DDNAME?        @ZD00004*/
         CR    DDNICTX,@10                                         0327
         BNE   @RF00327                                            0327
*                     DO;           /* YES,                  @ZD00004*/
*                       ICTTG1(LMDX)=IOPLSYS(LSYSNDX);/* SET FIRST 0329
*                                      TARGET LIBRARY DDNAME @ZD00004*/
         LR    @10,LMDX                                            0329
         MH    @10,@CH01093                                        0329
         L     @14,CCAICLMD(,CCAPTR)                               0329
         ST    @10,@TF00001                                        0329
         ALR   @10,@14                                             0329
         AL    @10,@CF01866                                        0329
         ALR   @15,IOPPTR                                          0329
         MVC   ICTTG1-15(8,@10),IOPLSYS-9(@15)                     0329
*                       ICTTIND1(LMDX)=ON;/* 1ST DD PRESENT  @ZD00004*/
         LR    @10,@14                                             0330
         AL    @10,@TF00001                                        0330
         AL    @10,@CF01858                                        0330
         OI    ICTTIND1-14(@10),B'10000000'                        0330
*                       ICTTG2(LMDX)=BLANK8;/* SET 2ND LIB NAME TO 0331
*                                      BLANKS                @ZD00004*/
         AL    @14,@TF00001                                        0331
         AL    @14,@CF01873                                        0331
         MVC   ICTTG2-23(8,@14),@CC01714                           0331
*                     END;          /*                       @ZD00004*/
*                   ELSE            /* NOT THE FIRST DDNAME  @ZD00004*/
*                     DO;           /*                       @ZD00004*/
         B     @RC00327                                            0333
@RF00327 DS    0H                                                  0334
*                       ICTTG2(LMDX)=IOPLSYS(LSYSNDX);/* SET SECOND
*                                      TARGET LIBRARY DDNAME @ZD00004*/
         LR    @10,LMDX                                            0334
         MH    @10,@CH01093                                        0334
         L     @15,CCAICLMD(,CCAPTR)                               0334
         ST    @10,@TF00001                                        0334
         ALR   @10,@15                                             0334
         AL    @10,@CF01873                                        0334
         LR    @14,LSYSNDX                                         0334
         MH    @14,@CH00034                                        0334
         ALR   @14,IOPPTR                                          0334
         MVC   ICTTG2-23(8,@10),IOPLSYS-9(@14)                     0334
*                       ICTTIND2(LMDX)=ON;/* 2ND DDNAME PRESENT    0335
*                                                            @ZD00004*/
         AL    @15,@TF00001                                        0335
         AL    @15,@CF01858                                        0335
         OI    ICTTIND2-14(@15),B'01000000'                        0335
*                     END;          /*                       @ZD00004*/
*                 END;              /*                       @ZD00004*/
*               ELSE                                               0338
*                 ;                 /* NOT A SYSLIB DDNAME   @ZD00004*/
@RF00324 DS    0H                                                  0339
*             END;                  /*                       @ZD00004*/
@RC00324 AH    LSYSNDX,@CH00063                                    0339
@DE00323 LR    @10,LSYSNDX                                         0339
         MH    @10,@CH00034                                        0339
         SLR   @15,@15                                             0339
         IC    @15,IOPLMDND-9(@10,IOPPTR)                          0339
         CH    @15,@CH00708                                        0339
         BNE   @DL00323                                            0339
*             ICTLTTR(LMDX)=IOPTTR; /* PUT TTR OF LMOD CONTROL CARDS
*                                      INTO ICT FOR FAST LKI ACCESS  */
         LR    @10,LMDX                                            0340
         MH    @10,@CH01093                                        0340
         L     @07,CCAICLMD(,CCAPTR)                               0340
         ALR   @07,@10                                             0340
         AL    @07,@CF01874                                        0340
         MVC   ICTLTTR-31(3,@07),IOPTTR(IOPPTR)                    0340
*           END;                    /* END LMOD FOUND OK             */
*                                                                  0341
*         /***********************************************************/
*         /*                                                         */
*         /* IF TABLE IS BEING BUILT FOR APPLY CALL PROCEDURE TO DO  */
*         /* THE PROCESSING NEEDED TO CHECK FOR COPY AND TO INSURE   */
*         /* THAT LINK EDIT PARMS ARE AVAILABLE IN THE LMOD IOP ENTRY*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0342
*         IF LPRTNCD<STOPPTF        /* IF ALL OK SO FAR              */
*             &CCAAPPLY=ON          /* IF APPLY                      */
*           THEN                    /* YES                           */
@RF00311 CH    LPRTNCD,@CH00055                                    0342
         BNL   @RF00342                                            0342
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0342
         BNO   @RF00342                                            0342
*           DO;                     /*                               */
*             CALL PROCAPP;         /* CALL APPLY PROCESSOR          */
         BAL   @14,PROCAPP                                         0344
*             RFY                                                  0345
*               RTNCODE RSTD;       /*                               */
*             LPRTNCD=MAX(LPRTNCD,RTNCODE);/* SET RETURN CODE        */
         CR    LPRTNCD,RTNCODE                                     0346
         BNL   *+6
         LR    LPRTNCD,RTNCODE                                     0346
*             RFY                                                  0347
*               RTNCODE UNRSTD;     /*                               */
*           END;                    /* END APPLY GROUP               */
*                                                                  0348
*         /***********************************************************/
*         /*                                                         */
*         /* MOVE LINKEDIT PARMS FROM IOP LMOD ENTRY TO ICT LMOD     */
*         /* ENTRY                                                   */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0349
*         IF LPRTNCD<STOPPTF        /* IF ALL OK SO FAR              */
*           THEN                    /*                               */
@RF00342 CH    LPRTNCD,@CH00055                                    0349
         BNL   @RF00349                                            0349
*           DO;                     /*                               */
*             ICTLFLG1(LMDX)=IOPLMDF1;/* FIRST BYTE OF LE          0351
*                                      PRMS@ZD00004                  */
         LR    @10,LMDX                                            0351
         MH    @10,@CH01093                                        0351
         L     @07,CCAICLMD(,CCAPTR)                               0351
         ST    @10,@TF00001                                        0351
         ALR   @10,@07                                             0351
         AL    @10,@CF01867                                        0351
         MVC   ICTLFLG1-9(1,@10),IOPLMDF1(IOPPTR)                  0351
*             ICTLFLG5(LMDX)=IOPLMDF2;/* SECOND S@ZD00004            */
         LR    @10,@07                                             0352
         AL    @10,@TF00001                                        0352
         AL    @10,@CF01868                                        0352
         MVC   ICTLFLG5-10(1,@10),IOPLMDF2(IOPPTR)                 0352
*             ICTLFLG6(LMDX)=IOPLMDF3;/* THIRD               @ZD00004*/
         LR    @10,@07                                             0353
         AL    @10,@TF00001                                        0353
         AL    @10,@CF01869                                        0353
         MVC   ICTLFLG6-11(1,@10),IOPLMDF3(IOPPTR)                 0353
*             ICTLFLG7(LMDX)=IOPLMDF4;/* FOURTH              @ZD00004*/
         LR    @10,@07                                             0354
         AL    @10,@TF00001                                        0354
         AL    @10,@CF01870                                        0354
         MVC   ICTLFLG7-12(1,@10),IOPLMDF4(IOPPTR)                 0354
*             ICTLFLG2(LMDX)=IOPLMDF5;/* FIFTH               @ZD00004*/
*                                                                  0355
         AL    @07,@TF00001                                        0355
         AL    @07,@CF01861                                        0355
         MVC   ICTLFLG2-13(1,@07),IOPLMDF5(IOPPTR)                 0355
*             /*******************************************************/
*             /*                                                     */
*             /* CALL PROCEDURE TO CHECK FOR COPY CONDITIONS         */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0356
*             CALL COPYCHCK;        /*                               */
         BAL   @14,COPYCHCK                                        0356
*             RFY                                                  0357
*               RTNCODE RSTD;       /*                               */
*             LPRTNCD=MAX(LPRTNCD,RTNCODE);/* SAVE RETURN CODE       */
         CR    LPRTNCD,RTNCODE                                     0358
         BNL   *+6
         LR    LPRTNCD,RTNCODE                                     0358
*             RFY                                                  0359
*               RTNCODE UNRSTD;     /*                               */
*           END;                    /*                               */
*       END;                        /* END LMOD NOT COMPLETE GROUP   */
@RF00349 DS    0H                                                  0362
*     APRRTNCD=MAX(APRRTNCD,LPRTNCD);/* SAVE CODE FOR THIS LMOD      */
@RF00305 CR    APRRTNCD,LPRTNCD                                    0362
         BNL   *+6
         LR    APRRTNCD,LPRTNCD                                    0362
*   END;                            /* END LMOD ICT LOOP WHEN SEVERE
*                                      ERR OR END OF LMODS           */
         AH    LMDX,@CH00063                                       0363
@DE00303 CH    APRRTNCD,@CH00033                                   0363
         BNL   @DC00303                                            0363
         LR    @10,LMDX                                            0363
         MH    @10,@CH01093                                        0363
         L     @07,CCAICLMD(,CCAPTR)                               0363
         AL    @07,@CF01871                                        0363
         L     @10,ICTLEND(@10,@07)                                0363
         CL    @10,ICTENDNT                                        0363
         BNE   @DL00303                                            0363
@DC00303 DS    0H                                                  0364
*   RETURN CODE(APRRTNCD);          /* RETURN                        */
         LR    @15,APRRTNCD                                        0364
         L     @14,@SA00003                                        0364
         LM    @00,@12,@SA00003+8                                  0364
         BR    @14                                                 0364
*   END PROCAPRS;                   /* END APPLY/RESTORE PROC        */
*                                                                  0366
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO LOCATE THE LMOD ON THE SMPCDS. IF NOT AN  */
*   /* ERROR MESSAGE IS WRITTEN AND THE ROUTINE TO MARK ALL RELATED  */
*   /* ENTRIES IS CALLED                                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0366
*LMDLOC:                                                           0366
*   PROC;                           /*                               */
LMDLOC   STM   @14,@12,@SA00004                                    0366
*   RFY                                                            0367
*     ICTLMOD BASED(CCAICLMD);      /* LMOD BASE                     */
*   RFY                                                            0368
*     HMASMIOP BASED(IOPPTR);       /* IOP BASE                      */
*   DECLARE                         /*                               */
*     LOCRTNCD FIXED(8);            /* RETURN CODE                   */
*   IOPFUNCT=IOPLOC;                /* SET TO LOCATE                 */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0370
*   IOPDSID=IOPCDSM;                /* ON THE SMPCDS DATA SET        */
         MVI   IOPDSID(IOPPTR),X'02'                               0371
*   IOPNAME=ICTLNAME(LMDX);         /* THE CURRENT LMOD              */
         LR    @10,LMDX                                            0372
         MH    @10,@CH01093                                        0372
         L     @02,CCAICLMD(,CCAPTR)                               0372
         ALR   @02,@10                                             0372
         AL    @02,@CF01871                                        0372
         MVC   IOPNAME(8,IOPPTR),ICTLNAME(@02)                     0372
*   IOPTYPE=IOPLMD;                 /* SET TYPE              @ZD00008*/
         MVI   IOPTYPE(IOPPTR),X'02'                               0373
*   CALL HMASMIO(HMASMIOP);         /* DO LOCATE                     */
         ST    IOPPTR,@AL00001                                     0374
         L     @15,@CV01742                                        0374
         LA    @01,@AL00001                                        0374
         BALR  @14,@15                                             0374
*   IF IOPRETRN^=IOPGOOD            /* IF LOCATE NOT SUCCESSFULL     */
*     THEN                          /* NO                            */
         CLI   IOPRETRN(IOPPTR),0                                  0375
         BE    @RF00375                                            0375
*     DO;                           /*                               */
*       IF IOPRETRN=IOPIOERR        /* IF I/O ERROR                  */
*         THEN                      /* YES                           */
         CLI   IOPRETRN(IOPPTR),16                                 0377
         BNE   @RF00377                                            0377
*         LOCRTNCD=IOPIOERR;        /* SET RETURN CODE FROM LOC      */
         LA    LOCRTNCD,16                                         0378
*       ELSE                        /* IF NOT I/O ERR                */
*         DO;                       /*                               */
         B     @RC00377                                            0379
@RF00377 DS    0H                                                  0380
*           LOCRTNCD=STOPPTF;       /* SET BAD LMOD RTN              */
         LA    LOCRTNCD,8                                          0380
*           MGPCLEAR=MGPCLEAR&&MGPCLEAR;/* ZERO MSG NUMBERS          */
         XC    MGPCLEAR(6),MGPCLEAR                                0381
*           MGPTYPE=MGPERR;         /* SET MESSAGE SEVERITY  @ZD00001*/
         MVI   MGPTYPE,X'03'                                       0382
*           MGPMGNO1=HMA246I;       /* XXXXXXXX XXXXXXXX NOT FOUND ON
*                                      XXXXXXX LIBRARY               */
         MVC   MGPMGNO1(2),@CH01726                                0383
*           MGPVARPT(1)=ADDR(TXTLMD);/* TYPE ENTRY                   */
         LA    @10,@CC01736                                        0384
         ST    @10,MGPVARPT                                        0384
*           MGPVARPT(2)=ADDR(ICTLNAME(LMDX));/* LMOD NAME            */
         LR    @10,LMDX                                            0385
         MH    @10,@CH01093                                        0385
         L     @01,CCAICLMD(,CCAPTR)                               0385
         AL    @01,@CF01871                                        0385
         LA    @10,ICTLNAME(@10,@01)                               0385
         ST    @10,MGPVARPT+4                                      0385
*           MGPVARPT(3)=ADDR(TXTCDS);/* LIB NAME                     */
         LA    @10,@CC01738                                        0386
         ST    @10,MGPVARPT+8                                      0386
*           CALL HMASMMSG(HMASMMGP);/* WRITE MSG                     */
         L     @15,@CV01743                                        0387
         LA    @01,@AL00387                                        0387
         BALR  @14,@15                                             0387
*           CALL LMDERR;            /* CALL PROC TO MARK ALL RELATED
*                                      ITEMS CORRECTLY               */
         BAL   @14,LMDERR                                          0388
*         END;                      /* END LOC NOT FOUND             */
*     END;                          /* END LOC NOT GOOD              */
*   ELSE                            /* IF LOCATE WAS GOOD            */
*     LOCRTNCD=IOPGOOD;             /* SET GOOD RETURN CODE          */
         B     @RC00375                                            0391
@RF00375 SLR   LOCRTNCD,LOCRTNCD                                   0391
*   RETURN CODE(LOCRTNCD);          /* RETURN                        */
@RC00375 LR    @15,LOCRTNCD                                        0392
         L     @14,@SA00004                                        0392
         LM    @00,@12,@SA00004+8                                  0392
         BR    @14                                                 0392
*   END LMDLOC;                     /* END LOCATE PROC               */
*                                                                  0394
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED WHEN A LMOD IS IN ERROR. THIS ROUTINE MARKS  */
*   /* MODS FOR THAT LMOD COMPLETE AND NOGO AND ALL PTFS FOR THE MODS*/
*   /* COMPLETE AND NOGO.                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0394
*LMDERR:                                                           0394
*   PROC;                           /*                               */
LMDERR   STM   @14,@12,12(@13)                                     0394
*   DECLARE                         /*                       @XA15537*/
*     ERRIX FIXED(31);              /* INDEX THRU LMOD CHAIN @XA15537*/
*   RFY                                                            0396
*     ICTLMOD BASED(CCAICLMD);      /* LMOD BASE                     */
*   RFY                                                            0397
*     ICTIXLF BASED(ICTLCHN(LMDX)); /* LMOD TO MOD CHAIN BASE        */
*   RFY                                                            0398
*     ICTMOD BASED(ICTIXL(ERRIX));  /* MOD BASE              @XA15537*/
*   RFY                                                            0399
*     ICTPTF BASED(ICTPPTR(1));     /* PTF BASE                      */
*   RFY                                                            0400
*     HMASMIOP BASED(IOPPTR);       /* IOP BASE                      */
*                                                                  0400
*   /*****************************************************************/
*   /*                                                               */
*   /* MARK CURRENT LMOD COMPLETED                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0401
*   ICTLNOGO(LMDX)=ON;              /* LMOD NOGO                     */
*   ICTLCPL(LMDX)=ON;               /* COMPLETE                      */
*   ICTLMSG(LMDX)=ON;               /* AND MSG WRITTEN               */
*                                                                  0403
         LR    @10,LMDX                                            0403
         MH    @10,@CH01093                                        0403
         L     @02,CCAICLMD(,CCAPTR)                               0403
         ALR   @02,@10                                             0403
         AL    @02,@CF01865                                        0403
         OI    ICTLNOGO-8(@02),B'01110000'                         0403
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU MOD FOR THE CURRENT LMOD. MARK EACH PTF FOR EACH MOD*/
*   /* AS NOGO.                                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0404
*   DO ERRIX=1 BY 1 WHILE ICTIXL(ERRIX)^=ICTENDIX;/* LOOP THRU LMOD
*                                      TO MOD CHAIN                  */
         LA    ERRIX,1                                             0404
         B     @DE00404                                            0404
@DL00404 DS    0H                                                  0405
*     ICTPNOGO(1)=ON;               /* PTF NOGO                      */
         LR    @10,ERRIX                                           0405
         SLA   @10,2                                               0405
         LR    @15,LMDX                                            0405
         MH    @15,@CH01093                                        0405
         L     @01,CCAICLMD(,CCAPTR)                               0405
         AL    @01,@CF01856                                        0405
         L     @01,ICTLCHN-34(@15,@01)                             0405
         AL    @01,@CF01857                                        0405
         L     @10,ICTIXL(@10,@01)                                 0405
         L     @10,ICTPPTR(,@10)                                   0405
         OI    ICTPNOGO(@10),B'01000000'                           0405
*   END;                            /* END LOOP ON MODS              */
         AH    ERRIX,@CH00063                                      0406
@DE00404 LR    @10,ERRIX                                           0406
         SLA   @10,2                                               0406
         LR    @15,LMDX                                            0406
         MH    @15,@CH01093                                        0406
         L     @01,CCAICLMD(,CCAPTR)                               0406
         AL    @01,@CF01856                                        0406
         L     @01,ICTLCHN-34(@15,@01)                             0406
         AL    @01,@CF01857                                        0406
         L     @10,ICTIXL(@10,@01)                                 0406
         CL    @10,ICTENDIX                                        0406
         BNE   @DL00404                                            0406
*   RETURN CODE(ZERO);              /* RETURN                        */
         SLR   @15,@15                                             0407
         L     @14,12(,@13)                                        0407
         LM    @00,@12,20(@13)                                     0407
         BR    @14                                                 0407
*   END LMDERR;                     /* END PROC                      */
*                                                                  0409
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO INSURE PRESENCE OF LMOD LINK EDIT PARMS   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0409
*PROCAPP:                                                          0409
*   PROC;                           /*                               */
PROCAPP  STM   @14,@12,@SA00006                                    0409
*   RFY                                                            0410
*     ICTLMOD BASED(CCAICLMD);      /* LMOD BASE                     */
*   RFY                                                            0411
*     ICTIXLF BASED(ICTLCHN(LMDX)); /* LMOD TO MOD CHAIN BASE        */
*   RFY                                                            0412
*     ICTMOD BASED(ICTIXL(LMDIX));  /* MOD BASE                      */
*   RFY                                                            0413
*     ICTPTF BASED(ICTPPTR(1));     /* PTF BASE                      */
*   RFY                                                            0414
*     HMASMIOP BASED(IOPPTR);       /* IOP BASE                      */
*   DECLARE                         /*                               */
*     APPRTNCD FIXED(8);            /* RETURN CODE                   */
*   DCL                                                            0416
*     APPMODX FIXED(31);            /* LMOD TO MOD INDEX OF        0416
*                                      REPLACEMENT ELEMENT   @Z67SP00*/
*   APPRTNCD=ZERO;                  /* PRESET RETURN CODE            */
         SLR   APPRTNCD,APPRTNCD                                   0417
*   IF IOPCOPY=ON                   /* MOD COPIED AT SYSGEN?         */
*     THEN                          /* THEN GET LE PARMS             */
         TM    IOPCOPY(IOPPTR),B'10000000'                         0418
         BNO   @RF00418                                            0418
*     DO;                           /*                               */
*       DO LMDIX=1 BY 1             /* LOOK AT ALL MOD ENTRIES     0420
*                                                            @Z67SP00*/
*             WHILE(ICTIXL(LMDIX)^=ICTENDIX);/*              @Z67SP00*/
         LA    LMDIX,1                                             0420
         B     @DE00420                                            0420
@DL00420 DS    0H                                                  0421
*         IF                        /*                       @Z67SP00*/
*             (ICTMMOD(1)=ON×       /* LINKEDIT REQUIRED     @Z67SP00*/
*             ICTMXPND(1)=ON)       /* ...                   @Z67SP00*/
*             &(ICTLIBLK(1)=OFF     /* MOD NOT IN LINK LIB   @Z67SP00*/
*             &ICTMRELF(1)=OFF)     /* ... OR RELFILE?               */
*           THEN                    /*                       @Z67SP00*/
         LR    @10,LMDIX                                           0421
         SLA   @10,2                                               0421
         LR    @15,LMDX                                            0421
         MH    @15,@CH01093                                        0421
         L     @14,CCAICLMD(,CCAPTR)                               0421
         LA    @01,0(@15,@14)                                      0421
         AL    @01,@CF01856                                        0421
         L     @01,ICTLCHN-34(,@01)                                0421
         AL    @01,@CF01857                                        0421
         L     @10,ICTIXL(@10,@01)                                 0421
         TM    ICTMMOD(@10),B'10010000'                            0421
         BZ    @RF00421                                            0421
         TM    ICTLIBLK(@10),B'10100000'                           0421
         BNZ   @RF00421                                            0421
*           DO;                     /*                       @Z67SP00*/
*             ICTLINK(LMDX)=ON;     /* CAN GET LE PARMS      @Z67SP00*/
         ALR   @14,@15                                             0423
         AL    @14,@CF01861                                        0423
         OI    ICTLINK-13(@14),B'01000000'                         0423
*             APPMODX=LMDIX;        /* SAVE REPLACEMENT INDEX      0424
*                                                            @Z67SP00*/
         ST    LMDIX,APPMODX                                       0424
*           END;                    /*                       @Z67SP00*/
*         ELSE                      /* EITHER LKLIB OR RELFILE     0426
*                                                            @Z67SP00*/
*           DO;                     /*                       @Z67SP00*/
         B     @RC00421                                            0426
@RF00421 DS    0H                                                  0427
*             ICTLINK(LMDX)=OFF;    /* DO NOT GET LE PARMS   @Z67SP00*/
         LR    @10,LMDX                                            0427
         MH    @10,@CH01093                                        0427
         L     @01,CCAICLMD(,CCAPTR)                               0427
         ALR   @01,@10                                             0427
         AL    @01,@CF01861                                        0427
         NI    ICTLINK-13(@01),B'10111111'                         0427
*           END;                    /*                       @Z67SP00*/
*       END;                        /* END OF MOD ENTRY SEARCH     0429
*                                                            @Z67SP00*/
@RC00421 AH    LMDIX,@CH00063                                      0429
@DE00420 LR    @10,LMDIX                                           0429
         SLA   @10,2                                               0429
         LR    @15,LMDX                                            0429
         MH    @15,@CH01093                                        0429
         L     @01,CCAICLMD(,CCAPTR)                               0429
         AL    @01,@CF01856                                        0429
         L     @01,ICTLCHN-34(@15,@01)                             0429
         AL    @01,@CF01857                                        0429
         L     @10,ICTIXL(@10,@01)                                 0429
         CL    @10,ICTENDIX                                        0429
         BNE   @DL00420                                            0429
*     END;                          /*                       @Z67SP00*/
*   IF ICTLINK(LMDX)=ON THEN        /* GET LE PARMS?         @Z67SP00*/
@RF00418 LR    @10,LMDX                                            0431
         MH    @10,@CH01093                                        0431
         L     @02,CCAICLMD(,CCAPTR)                               0431
         ST    @10,@TF00001                                        0431
         ALR   @10,@02                                             0431
         AL    @10,@CF01861                                        0431
         TM    ICTLINK-13(@10),B'01000000'                         0431
         BNO   @RF00431                                            0431
*     DO;                           /* YES,                  @Z67SP00*/
*       CALL LMDBLDL(ICTIXL(APPMODX)->ICTMOD(1));/* GET LE PARMS   0433
*                                                            @Z67SP00*/
         L     @10,APPMODX                                         0433
         SLA   @10,2                                               0433
         L     @01,@TF00001                                        0433
         AL    @02,@CF01856                                        0433
         L     @02,ICTLCHN-34(@01,@02)                             0433
         AL    @02,@CF01857                                        0433
         L     @10,ICTIXL(@10,@02)                                 0433
         ST    @10,@AL00001                                        0433
         LA    @01,@AL00001                                        0433
         BAL   @14,LMDBLDL                                         0433
*       RFY                                                        0434
*         RTNCODE RSTD;             /*                               */
*       APPRTNCD=MAX(APPRTNCD,RTNCODE);/* SAVE RETURN CODE           */
         CR    APPRTNCD,RTNCODE                                    0435
         BNL   *+6
         LR    APPRTNCD,RTNCODE                                    0435
*       RFY                                                        0436
*         RTNCODE UNRSTD;           /*                               */
*       IF APPRTNCD=STOPPTF         /* PARMS NOT AVAILABLE           */
*         THEN                      /* THEN                          */
         CH    APPRTNCD,@CH00055                                   0437
         BNE   @RF00437                                            0437
*         CALL LMDERR;              /* CALL ERROR ROUTINE            */
         BAL   @14,LMDERR                                          0438
*       IF LEPCHNGD=ON              /* IF BLDL WAS OK AND LE PARMS   */
*         THEN                      /* CHANGED THEN MUST RESET IN CDS*/
@RF00437 TM    LEPCHNGD,B'10000000'                                0439
         BNO   @RF00439                                            0439
*         DO;                       /* IF IO ERR BIT WILL NOT BE SET */
*           IOPLINK=ON;             /* SET GOT LE PARMS              */
         OI    IOPLINK(IOPPTR),B'01000000'                         0441
*           IOPFUNCT=IOPUDEO;       /* SET TO UPDATE DIRECT  @Z67SP00*/
         MVI   IOPFUNCT(IOPPTR),X'56'                              0442
*           CALL HMASMIO(HMASMIOP); /* DO IT                         */
         ST    IOPPTR,@AL00001                                     0443
         L     @15,@CV01742                                        0443
         LA    @01,@AL00001                                        0443
         BALR  @14,@15                                             0443
*           APPRTNCD=MAX(APPRTNCD,IOPRETRN);/* SAVE RETURN CODE      */
         SLR   @10,@10                                             0444
         IC    @10,IOPRETRN(,IOPPTR)                               0444
         CR    APPRTNCD,@10                                        0444
         BNL   *+6
         LR    APPRTNCD,@10                                        0444
*         END;                      /* END CHANGED LE PARMS          */
*     END;                          /* END COPY AND NOT LINKLIB      */
@RF00439 DS    0H                                                  0447
*   RETURN CODE(APPRTNCD);          /* RETURN WITH CODE SET OR CODE
*                                      FROM STOW REPLACE             */
@RF00431 LR    @15,APPRTNCD                                        0447
         L     @14,@SA00006                                        0447
         LM    @00,@12,@SA00006+8                                  0447
         BR    @14                                                 0447
*   END PROCAPP;                    /* END PROCEDURE                 */
*                                                                  0449
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO DETERMINE THE LINK EDIT PARMS THAT SHOULD */
*   /* BE USED. THIS IS DONE BY EITHER USING THE MODULE LE PARMS FROM*/
*   /* THE PTF OR BY DOING A BLDL ON THE MODULE IN THE LIBRARY THAT  */
*   /* IT EXISTS IN                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0449
*LMDBLDL:                                                          0449
*   PROC(LMDBMOD);                  /*                       @Z67SP00*/
LMDBLDL  STM   @14,@12,@SA00007                                    0449
         MVC   @PC00007(4),0(@01)                                  0449
*   DCL                                                            0450
*     LMDBMOD CHAR(*);              /* ICT REPLACEMENT MOD ENTRY   0450
*                                                            @Z67SP00*/
*   DECLARE                         /*                       @ZA16555*/
*     APFPTR PTR(31);               /* PTR TO APF SECTION TO CHECK 0451
*                                      FOR AUTHORIZATION     @ZA16555*/
*   RFY                                                            0452
*     HMASMIOP BASED(IOPPTR);       /* IOP WITH LMOD ENTRY           */
*   RFY                                                            0453
*     IOPBS04 BASED(APFPTR);        /* APF SECTION OF DIR    @ZA16555*/
*   RFY                                                            0454
*     ICTLMOD BASED(CCAICLMD);      /* ICT LMOD BASE                 */
*   RFY                                                            0455
*     ICTIXLF BASED(ICTLCHN(LMDX)); /* LMOD TO MOD CHAIN BASE        */
*   RFY                                                            0456
*     ICTMOD BASED(ADDR(LMDBMOD));  /* MOD ENTRY                     */
*   RFY                                                            0457
*     ICTPTF BASED(ICTPPTR(1));     /* PTF BASE                      */
*   LEPCHNGD=OFF;                   /* INIT STOW BIT TO INDICATED  0458
*                                      THAT LE PARMS NOT CHANGED     */
*                                                                  0458
         NI    LEPCHNGD,B'01111111'                                0458
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LE PARMS ARE AVAILABLE FROM THE PTF AND THIS IS ACCEPT OR  */
*   /* IF APPLY OR RESTORE AND MOD WAS COPIED AT SYSGEN THEN USE     */
*   /* THEM. ALSO SET BIT IF PARMS ARE NOT EQUAL TO THE EXISTING ONES*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0459
*   IOPPTRF->IOPRETRN=IOPGOOD;      /* INIT IOP RETURN THAT WILL BE
*                                      THE RETURN CODE FROM THIS PROC*/
         MVI   IOPRETRN(IOPPTRF),X'00'                             0459
*   IF ICTMPRMS(1)=ON               /* MOD PARMS AVAILABLE?          */
*       &(CCAACCPT=ON               /* AND ACCEPT?                   */
*       ×IOPCOPY=ON)                /* OR COPIED AT SYSGEN           */
*     THEN                          /* YES                           */
         L     @10,@PC00007                                        0460
         TM    ICTMPRMS(@10),B'00000010'                           0460
         BNO   @RF00460                                            0460
         TM    CCAACCPT(CCAPTR),B'00100000'                        0460
         BO    @RT00460                                            0460
         TM    IOPCOPY(IOPPTR),B'10000000'                         0460
         BNO   @RF00460                                            0460
@RT00460 DS    0H                                                  0461
*     DO;                           /* CHECK EXISTING ONES           */
*       IF ICTMLEP1(1)^=IOPLMDF1    /* IF FIRST BYTE NOT EQUAL     0462
*                                                            @ZD00004*/
*           ×ICTMLEP2(1)^=IOPLMDF2  /* OR SECOND             @ZD00004*/
*           ×ICTMLEP3(1)^=IOPLMDF3  /* OR THIRD              @ZD00004*/
*           ×ICTMLEP4(1)^=IOPLMDF4  /* OR FOURTH             @ZD00004*/
*         THEN                      /* IF NOT SAME                   */
         L     @10,@PC00007                                        0462
         CLC   ICTMLEP1(1,@10),IOPLMDF1(IOPPTR)                    0462
         BNE   @RT00462                                            0462
         CLC   ICTMLEP2(1,@10),IOPLMDF2(IOPPTR)                    0462
         BNE   @RT00462                                            0462
         CLC   ICTMLEP3(1,@10),IOPLMDF3(IOPPTR)                    0462
         BNE   @RT00462                                            0462
         CLC   ICTMLEP4(1,@10),IOPLMDF4(IOPPTR)                    0462
         BE    @RF00462                                            0462
@RT00462 DS    0H                                                  0463
*         DO;                       /*                       @ZA12359*/
*           LEPCHNGD=ON;            /* SET PARMS CHANGED BIT         */
         OI    LEPCHNGD,B'10000000'                                0464
*           IOPLMDF1=ICTMLEP1(1);   /* COPY LINKEDIT PARMS...@ZD00004*/
         L     @10,@PC00007                                        0465
         MVC   IOPLMDF1(1,IOPPTR),ICTMLEP1(@10)                    0465
*           IOPLMDF2=ICTMLEP2(1);   /* FROM ICT TO IOP...    @ZD00004*/
         MVC   IOPLMDF2(1,IOPPTR),ICTMLEP2(@10)                    0466
*           IOPLMDF3=ICTMLEP3(1);   /* ...                   @ZD00004*/
         MVC   IOPLMDF3(1,IOPPTR),ICTMLEP3(@10)                    0467
*           IOPLMDF4=ICTMLEP4(1);   /* ...                   @ZD00004*/
         MVC   IOPLMDF4(1,IOPPTR),ICTMLEP4(@10)                    0468
*         END;                      /* END PARM CHANGED      @ZA12359*/
*     END;                          /* END PTF LE PARMS AVAILABLE    */
*                                                                  0470
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LE PARMS WERE NOT AVAILABLE IN THE PTF OR CDS THEN MUST DO */
*   /* BLDL IN THE LMOD LIBRARY TO GET THE EXISTING ONES             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0471
*   ELSE                            /* PTF LE PARMS NOT AVAILABLE    */
*     IF IOPLINK=OFF                /* AND NOT IN CDS                */
*       THEN                        /* THEN NEED BLDL                */
         B     @RC00460                                            0471
@RF00460 TM    IOPLINK(IOPPTR),B'01000000'                         0471
         BNZ   @RF00471                                            0471
*       DO;                         /* MUST GET THEM                 */
*         DEVDDNAM=ICTTG1(LMDX);    /* SEE IF DD PRESENT     @Z67SP00*/
         LR    @10,LMDX                                            0473
         MH    @10,@CH01093                                        0473
         L     @05,CCAICLMD(,CCAPTR)                               0473
         ALR   @05,@10                                             0473
         AL    @05,@CF01866                                        0473
         MVC   DEVDDNAM(8),ICTTG1-15(@05)                          0473
*         GEN(DEVTYPE DEVDDNAM,DEVADDR)                            0474
*         REFS(DEVDDNAM,DEVADDR);   /*                       @Z67SP00*/
         DEVTYPE DEVDDNAM,DEVADDR
*         RFY                                                      0475
*           RTNCODE RSTD;           /*                       @Z67SP00*/
*         IF RTNCODE=ZERO           /* IF DD PRESENT         @Z67SP00*/
*           THEN                    /*                       @Z67SP00*/
         LTR   RTNCODE,RTNCODE                                     0476
         BNZ   @RF00476                                            0476
*           DO;                     /*                       @Z67SP00*/
*             RFY                                                  0478
*               RTNCODE UNRSTD;     /*                       @Z67SP00*/
*             RFY                                                  0479
*               HMASMIOP BASED(IOPPTRF);/* FIXED LEN IOP FOR BLDL    */
*             IOPFUNCT=IOPBLDL;     /* DO BLDL                       */
         MVI   IOPFUNCT(IOPPTRF),X'04'                             0480
*             IOPDSID=IOPANYDD;     /* TO LIBRARY                    */
         MVI   IOPDSID(IOPPTRF),X'18'                              0481
*             IOPDDNAM=ICTTG1(LMDX);/* TO LMOD LIB                   */
         LR    @10,LMDX                                            0482
         MH    @10,@CH01093                                        0482
         L     @05,CCAICLMD(,CCAPTR)                               0482
         ST    @10,@TF00001                                        0482
         ALR   @10,@05                                             0482
         AL    @10,@CF01866                                        0482
         MVC   IOPDDNAM(8,IOPPTRF),ICTTG1-15(@10)                  0482
*             IOPNAME=ICTLNAME(LMDX);/* FOR LMOD                     */
         AL    @05,@TF00001                                        0483
         AL    @05,@CF01871                                        0483
         MVC   IOPNAME(8,IOPPTRF),ICTLNAME(@05)                    0483
*             IOPTYPE=IOPMEM;       /*                       @Z67SP00*/
         MVI   IOPTYPE(IOPPTRF),X'11'                              0484
*             CALL HMASMIO(HMASMIOP);/* DO BLDL                      */
         ST    IOPPTRF,@AL00001                                    0485
         L     @15,@CV01742                                        0485
         LA    @01,@AL00001                                        0485
         BALR  @14,@15                                             0485
*             IF IOPRETRN=IOPGOOD   /* IF LMOD FOUND OK              */
*               THEN                /* YES                           */
         CLI   IOPRETRN(IOPPTRF),0                                 0486
         BNE   @RF00486                                            0486
*               DO;                 /* MOVE LE PARMS TO LMOD IOP     */
*                 LEPCHNGD=ON;      /* SET BIT TO CAUSE LMOD TO BE 0488
*                                      STOWED ON SMPCDS WITH LEPARMS
*                                      OBTAINED FROM BLDL    @ZA12359*/
         OI    LEPCHNGD,B'10000000'                                0488
*                 IF IOPBRENT=ON    /* LMOD RE-ENTRANT?              */
*                   THEN            /* YES                           */
         TM    IOPBRENT(IOPPTRF),B'10000000'                       0489
         BNO   @RF00489                                            0489
*                   IOPPTR->IOPRENT=ON;/* SET LMOD RENT BIT          */
         OI    IOPRENT(IOPPTR),B'01000000'                         0490
*                 IF IOPBREUS=ON    /* LMOD REUSEABLE?               */
*                   THEN            /* YES                           */
@RF00489 TM    IOPBREUS(IOPPTRF),B'01000000'                       0491
         BNO   @RF00491                                            0491
*                   IOPPTR->IOPREUS=ON;/* SET LMOD REUS BIT          */
         OI    IOPREUS(IOPPTR),B'00100000'                         0492
*                 IF IOPBOVLY=ON    /* LMOD IN OVERLAY?              */
*                   THEN            /* YES                           */
@RF00491 TM    IOPBOVLY(IOPPTRF),B'00100000'                       0493
         BNO   @RF00493                                            0493
*                   IOPPTR->IOPOVLY=ON;/* SET LMOD OVLY BIT          */
         OI    IOPOVLY(IOPPTR),B'00001000'                         0494
*                 IF IOPBSCTR=ON    /* LMOD SCATTER LOADABLE?        */
*                   THEN            /* YES                           */
@RF00493 TM    IOPBSCTR(IOPPTRF),B'00000100'                       0495
         BNO   @RF00495                                            0495
*                   IOPPTR->IOPBSCTR=ON;/* SET LMOD SCTR BIT @Z67SP00*/
         OI    IOPBSCTR(IOPPTR),B'00000100'                        0496
*                 IF IOPBDC=OFF     /* LMOD DC IF BIT IS OFF         */
*                   THEN            /* YES                           */
@RF00495 TM    IOPBDC(IOPPTRF),B'10000000'                         0497
         BNZ   @RF00497                                            0497
*                   IOPPTR->IOPDC=ON;/* SET LMOD DC BIT              */
         OI    IOPDC(IOPPTR),B'00000010'                           0498
*                 IF IOPBNE=ON      /* LMOD NOT EDITABLE?            */
*                   THEN            /* YES                           */
@RF00497 TM    IOPBNE(IOPPTRF),B'00001000'                         0499
         BNO   @RF00499                                            0499
*                   IOPPTR->IOPNE=ON;/* SET LMOD NE BIT              */
         OI    IOPNE(IOPPTR),B'10000000'                           0500
*                 IF IOPBREFR=ON    /* LMOD REFRESHABLE?             */
*                   THEN            /* YES                           */
@RF00499 TM    IOPBREFR(IOPPTRF),B'00000001'                       0501
         BNO   @RF00501                                            0501
*                   IOPPTR->IOPREFR=ON;/* SET LMOD REFR BIT          */
         OI    IOPREFR(IOPPTR),B'00000100'                         0502
*                 IF IOPBAOSL=ON    /* IF VS LINK-EDIT       @ZA16555*/
*                   THEN            /* THEN CHECK FOR                */
@RF00501 TM    IOPBAOSL(IOPPTRF),B'10000000'                       0503
         BNO   @RF00503                                            0503
*                   DO;             /* SPECIAL VS ATTRIBUTES         */
*                     IF IOPBAPFP=ON/* IF APF PRESENT        @ZA16555*/
*                       THEN        /* THEN CHECK APF        @ZA16555*/
         TM    IOPBAPFP(IOPPTRF),B'00001000'                       0505
         BNO   @RF00505                                            0505
*                       DO;         /*                       @ZA16555*/
*                         APFPTR=ADDR(IOPBCEND);/* START OF SCTR   0507
*                                                            @ZA16555*/
         LA    APFPTR,IOPBCEND(,IOPPTRF)                           0507
*                         IF IOPBSCTR=ON/* SCATTER?          @ZA16555*/
*                           THEN    /* YES- THEN BUMP PAST   @ZA16555*/
         TM    IOPBSCTR(IOPPTRF),B'00000100'                       0508
         BNO   @RF00508                                            0508
*                           APFPTR=APFPTR+LENGTH(IOPBS01);/* @ZA16555*/
         AH    APFPTR,@CH00055                                     0509
*                         IF IOPALIS=ON/* ALIAS PRESENT?     @ZA16555*/
*                           THEN    /* YES - THEM BUMP PAST  @ZA16555*/
@RF00508 TM    IOPALIS(IOPPTRF),B'10000000'                        0510
         BNO   @RF00510                                            0510
*                           APFPTR=APFPTR+LENGTH(IOPBS02);/* @ZA16555*/
         AH    APFPTR,@CH00522                                     0511
*                         IF IOPBSSI=ON/* SSI PRESENT        @ZA16555*/
*                           THEN    /* YES - INSURE ON HALF  @ZA16555*/
@RF00510 TM    IOPBSSI(IOPPTRF),B'00010000'                        0512
         BNO   @RF00512                                            0512
*                           DO;     /* WORD BDY AND BUMP     @ZA16555*/
*                             APFPTR=APFPTR+APFPTR//2;/* PAST      0514
*                                                            @ZA16555*/
         LR    @00,APFPTR                                          0514
         SRDA  @00,32                                              0514
         D     @00,@CF00273                                        0514
         ALR   APFPTR,@00                                          0514
*                             APFPTR=APFPTR+LENGTH(IOPBS03);/*     0515
*                                                            @ZA16555*/
         AH    APFPTR,@CH00037                                     0515
*                           END;    /* END SSI PRESENT       @ZA16555*/
*                         IF IOPBAPFC=1/* APF=1              @ZA16555*/
*                           THEN    /* YES                           */
@RF00512 CLI   IOPBAPFC(APFPTR),1                                  0517
         BNE   @RF00517                                            0517
*                           IOPPTR->IOPAPF=ON;/* SET APF BIT         */
         OI    IOPAPF(IOPPTR),B'10000000'                          0518
*                       END;        /* END APF PRESENT       @ZA16555*/
@RF00517 DS    0H                                                  0520
*                     IF IOPBPAGA=ON/* PAGE ALIGNMENT ON?            */
*                       THEN        /* YES                           */
@RF00505 TM    IOPBPAGA(IOPPTRF),B'00100000'                       0520
         BNO   @RF00520                                            0520
*                       IOPPTR->IOPPAGA=ON;/* SET PAGA BIT           */
         OI    IOPPAGA(IOPPTR),B'01000000'                         0521
*                   END;            /* END NOT OS SYSTEM             */
@RF00520 DS    0H                                                  0523
*               END;                /* END LMOD FOUND                */
*                                                                  0523
@RF00503 DS    0H                                                  0524
*             /*******************************************************/
*             /*                                                     */
*             /* IF LMOD NOT FOUND PUT OUT WARNING MSG               */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0524
*             IF IOPRETRN=IOPNOTFD  /* LMOD NOT FOUND                */
*               THEN                /* SO PUT OUT MSG                */
@RF00486 CLI   IOPRETRN(IOPPTRF),4                                 0524
         BNE   @RF00524                                            0524
*               DO;                 /*                               */
*                 MGPCLEAR=MGPCLEAR&&MGPCLEAR;/* ZERO MSG NUMBERS    */
         XC    MGPCLEAR(6),MGPCLEAR                                0526
*                 MGPTYPE=MGPWARN;  /* SET MESSAGE SEVERITY  @ZD00001*/
         MVI   MGPTYPE,X'02'                                       0527
*                 MGPMGNO1=HMA247I; /* BLDL FAILED IN LIBRARY      0528
*                                      XXXXXXXX FOR LOAD MODULE    0528
*                                      XXXXXXXX                      */
         MVC   MGPMGNO1(2),@CH00458                                0528
*                 MGPMGNO2=PART014; /* IN PTF XXXXXXX                */
         MVC   MGPMGNO2(2),@CH00333                                0529
*                 MGPVARPT(1)=ADDR(IOPDDNAM);/* DD NAME              */
         LA    @10,IOPDDNAM(,IOPPTRF)                              0530
         ST    @10,MGPVARPT                                        0530
*                 MGPVARPT(2)=ADDR(IOPNAME);/* LMOD NAME             */
         LA    @10,IOPNAME(,IOPPTRF)                               0531
         ST    @10,MGPVARPT+4                                      0531
*                 MGPVARPT(3)=ADDR(ICTPTF(1));/* PTF NUMBER          */
         L     @10,@PC00007                                        0532
         L     @10,ICTPPTR(,@10)                                   0532
         ST    @10,MGPVARPT+8                                      0532
*                 CALL HMASMMSG(HMASMMGP);/* SEND MSG                */
         L     @15,@CV01743                                        0533
         LA    @01,@AL00533                                        0533
         BALR  @14,@15                                             0533
*               END;                /* END LMOD NOT FOUND            */
*             IF IOPRETRN>=IOPNTOPN /* IF ERROR DOING OPEN           */
*               THEN                /* THEN IO WROTE MSG             */
@RF00524 CLI   IOPRETRN(IOPPTRF),12                                0535
         BL    @RF00535                                            0535
*               IOPRETRN=STOPPTF;   /* RESET RTN CODE TO STOP THIS 0536
*                                      PTF                           */
         MVI   IOPRETRN(IOPPTRF),X'08'                             0536
*           END;                    /* END DD PRESENT        @Z67SP00*/
*         ELSE                      /* IF DD NOT PRESENT     @Z67SP00*/
*           IOPRETRN=IOPGOOD;       /* SET DEFAULT RC        @Z67SP00*/
         B     @RC00476                                            0538
@RF00476 MVI   IOPRETRN(IOPPTRF),X'00'                             0538
*       END;                        /* END LE PARMS NOT AVAILABLE    */
*                                                                  0539
@RC00476 DS    0H                                                  0540
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH CODE FROM THE IO OPERATION PERFORMED              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0540
*   RFY                                                            0540
*     HMASMIOP BASED(IOPPTRF);      /*                               */
@RF00471 DS    0H                                                  0540
@RC00460 DS    0H                                                  0541
*   RETURN CODE(IOPRETRN);          /*                               */
         SLR   @15,@15                                             0541
         IC    @15,IOPRETRN(,IOPPTRF)                              0541
         L     @14,@SA00007                                        0541
         LM    @00,@12,@SA00007+8                                  0541
         BR    @14                                                 0541
*   END LMDBLDL;                    /* END BLDL PROC                 */
*                                                                  0543
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO CHECK TO SEE IF LMOD CAN BE COPIED OT     */
*   /* LINKED                                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0543
*COPYCHCK:                                                         0543
*   PROC;                           /*                               */
COPYCHCK STM   @14,@12,@SA00008                                    0543
*   RFY                                                            0544
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0545
*     ICTLMOD BASED(CCAICLMD);      /*                               */
*   RFY                                                            0546
*     ICTIXLF BASED(ICTLCHN(LMDX)); /* LMOD TO MOD CHAIN BASE        */
*   RFY                                                            0547
*     ICTMOD BASED(ICTIXL(LMDIX));  /* MOD BASE                      */
*   DECLARE                         /*                               */
*     CPYRTNCD FIXED(8);            /* RETURN CODE                   */
*                                                                  0548
*   /*****************************************************************/
*   /*                                                               */
*   /* INIT RETURN CODE. IF LMOD WAS COPIED AT SYSGEN AND MOD IS IN  */
*   /* LINK LIB OR THIS IS RESTORE THEN MOD CAN BE COPIED            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0549
*   CPYRTNCD=ZERO;                  /* INIT RETURN CODE              */
*                                                                  0549
         SLR   CPYRTNCD,CPYRTNCD                                   0549
*   /*****************************************************************/
*   /*                                                               */
*   /* SET LINK INDICATOR ON AS DEFAULT, IF IT IS FOUND THAT A COPY  */
*   /* IS TO BE DONE, TURN OFF LINK INDICATOR THEN                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0550
*   IF IOPCOPY=ON                   /* LMOD COPIED AT SYSGEN?        */
*     THEN                          /* YES                           */
         TM    IOPCOPY(IOPPTR),B'10000000'                         0550
         BNO   @RF00550                                            0550
*     DO;                                                          0551
*       DO LMDIX=1 BY 1             /*                       @Z67SP00*/
*             WHILE(ICTIXL(LMDIX)^=ICTENDIX);/*              @Z67SP00*/
         LA    LMDIX,1                                             0552
         B     @DE00552                                            0552
@DL00552 DS    0H                                                  0553
*         IF CCAAPPLY=ON            /* IF APPLY AND MODIFICATION IS  */
*             &(ICTMZAP(1)=ON       /* ZAP                           */
*             ×ICTMXPND(1)=ON)      /* OR EXPAND ZAP?                */
*           THEN                    /* LMOD SO TURN OFF COPY BIT     */
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0553
         BNO   @RF00553                                            0553
         LR    @10,LMDIX                                           0553
         SLA   @10,2                                               0553
         LR    @05,LMDX                                            0553
         MH    @05,@CH01093                                        0553
         L     @15,CCAICLMD(,CCAPTR)                               0553
         LA    @01,0(@05,@15)                                      0553
         AL    @01,@CF01856                                        0553
         L     @01,ICTLCHN-34(,@01)                                0553
         AL    @01,@CF01857                                        0553
         L     @01,ICTIXL(@10,@01)                                 0553
         TM    ICTMZAP(@01),B'00110000'                            0553
         BZ    @RF00553                                            0553
*           DO;                     /*                       @Z67SP00*/
*             ICTLZAP(LMDX)=ON;     /* LMOD HAS A ZAP        @Z67SP00*/
         ST    @05,@TF00001                                        0555
         ALR   @05,@15                                             0555
         AL    @05,@CF01858                                        0555
         OI    ICTLZAP-14(@05),B'00000100'                         0555
*             IF ICTMXPND(1)=ON THEN/* EXPAND ZAP?           @Z67SP00*/
         L     @05,@TF00001                                        0556
         AL    @05,@CF01856                                        0556
         L     @05,ICTLCHN-34(@05,@15)                             0556
         AL    @05,@CF01857                                        0556
         L     @10,ICTIXL(@10,@05)                                 0556
         TM    ICTMXPND(@10),B'00010000'                           0556
         BNO   @RF00556                                            0556
*               DO;                 /*                       @Z67SP00*/
*                 ICTLXPND(LMDX)=ON;/* DO AN EXPAND          @Z67SP00*/
*                 ICTLLKD(LMDX)=ON; /* DO A LINK             @Z67SP00*/
*                 ICTLCPY(LMDX)=OFF;/* NOT A COPY            @Z67SP00*/
         AL    @15,@TF00001                                        0560
         AL    @15,@CF01858                                        0560
         OI    ICTLXPND-14(@15),B'00101000'                        0560
         NI    ICTLCPY-14(@15),B'11101111'                         0560
*               END;                /*                       @Z67SP00*/
*           END;                    /*                       @Z67SP00*/
*         ELSE                      /* A MOD REPLACEMENT     @Z67SP00*/
*           DO;                     /*                       @Z67SP00*/
         B     @RC00553                                            0563
@RF00553 DS    0H                                                  0564
*             IF ICTLIBLK(1)=ON     /* MOD IN LINK LIB?              */
*                 ×ICTMRELF(1)=ON   /* ... OR RELFILE?               */
*                 ×(CCARES=ON&ICTMASM(1)=OFF)/* NOT ZAP RESTORE    0564
*                                                            @Z67SP00*/
*               THEN                /* YES                           */
         LR    @10,LMDIX                                           0564
         SLA   @10,2                                               0564
         LR    @05,LMDX                                            0564
         MH    @05,@CH01093                                        0564
         L     @01,CCAICLMD(,CCAPTR)                               0564
         AL    @01,@CF01856                                        0564
         L     @05,ICTLCHN-34(@05,@01)                             0564
         AL    @05,@CF01857                                        0564
         L     @10,ICTIXL(@10,@05)                                 0564
         TM    ICTLIBLK(@10),B'10100000'                           0564
         BNZ   @RT00564                                            0564
         TM    CCARES(CCAPTR),B'00001000'                          0564
         BNO   @RF00564                                            0564
         TM    ICTMASM(@10),B'01000000'                            0564
         BNZ   @RF00564                                            0564
@RT00564 DS    0H                                                  0565
*               DO;                 /*                       @Z67SP00*/
*                 IF ICTLLKD(LMDX)^=ON THEN/* LINK NOT NEEDED?     0566
*                                                            @Z67SP00*/
         LR    @10,LMDX                                            0566
         MH    @10,@CH01093                                        0566
         L     @05,CCAICLMD(,CCAPTR)                               0566
         ST    @10,@TF00001                                        0566
         ALR   @10,@05                                             0566
         AL    @10,@CF01858                                        0566
         TM    ICTLLKD-14(@10),B'00001000'                         0566
         BO    @RF00566                                            0566
*                   DO;             /*                       @Z67SP00*/
*                     ICTLCPY(LMDX)=ON;/* COPY IS TO BE DONE @Z67SP00*/
         AL    @05,@TF00001                                        0568
         AL    @05,@CF01858                                        0568
         OI    ICTLCPY-14(@05),B'00010000'                         0568
*                   END;            /*                       @Z67SP00*/
*               END;                /*                       @Z67SP00*/
*             ELSE                  /* MOD REPLACEMENT THAT CANNOT BE
*                                      COPIED                @Z67SP00*/
*               DO;                 /*                       @Z67SP00*/
         B     @RC00564                                            0571
@RF00564 DS    0H                                                  0572
*                 ICTLCPY(LMDX)=OFF;/* NOT A COPY            @Z67SP00*/
*                 ICTLLKD(LMDX)=ON; /* DO A LINKEDIT         @Z67SP00*/
         LR    @10,LMDX                                            0573
         MH    @10,@CH01093                                        0573
         L     @05,CCAICLMD(,CCAPTR)                               0573
         ALR   @05,@10                                             0573
         AL    @05,@CF01858                                        0573
         OI    ICTLLKD-14(@05),B'00001000'                         0573
         NI    ICTLCPY-14(@05),B'11101111'                         0573
*               END;                /*                       @Z67SP00*/
*           END;                    /*                       @Z67SP00*/
@RC00564 DS    0H                                                  0576
*       END;                        /*                       @Z67SP00*/
@RC00553 AH    LMDIX,@CH00063                                      0576
@DE00552 LR    @10,LMDIX                                           0576
         SLA   @10,2                                               0576
         LR    @05,LMDX                                            0576
         MH    @05,@CH01093                                        0576
         L     @01,CCAICLMD(,CCAPTR)                               0576
         AL    @01,@CF01856                                        0576
         L     @05,ICTLCHN-34(@05,@01)                             0576
         AL    @05,@CF01857                                        0576
         L     @10,ICTIXL(@10,@05)                                 0576
         CL    @10,ICTENDIX                                        0576
         BNE   @DL00552                                            0576
*     END;                          /* END LMOD COPIED AT SYSGEN     */
*                                                                  0577
*   /*****************************************************************/
*   /*                                                               */
*   /* IF MOD LINKED AT SYSGEN THEN CHECK TO SEE IF ANY MODS WERE    */
*   /* REPLACED IN THIS LMOD. CHECK FOR NUCLEUS HIT                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0578
*   ELSE                            /* LMOD LINKED AT SYSGEN         */
*     DO;                           /*                               */
         B     @RC00550                                            0578
@RF00550 DS    0H                                                  0579
*       DO LMDIX=1 BY 1 WHILE ICTIXL(LMDIX)^=ICTENDIX;/* LOOP THRU 0579
*                                      MODS                  @Z67SP00*/
         LA    LMDIX,1                                             0579
         B     @DE00579                                            0579
@DL00579 DS    0H                                                  0580
*         IF ICTMMOD(1)=ON          /* MOD REPLACEMENT       @Z67SP00*/
*             ×ICTMXPND(1)=ON THEN  /* OR EXPAND ZAP?        @Z67SP00*/
         LR    @10,LMDIX                                           0580
         SLA   @10,2                                               0580
         LR    @05,LMDX                                            0580
         MH    @05,@CH01093                                        0580
         L     @15,CCAICLMD(,CCAPTR)                               0580
         LA    @01,0(@05,@15)                                      0580
         AL    @01,@CF01856                                        0580
         L     @01,ICTLCHN-34(,@01)                                0580
         AL    @01,@CF01857                                        0580
         L     @10,ICTIXL(@10,@01)                                 0580
         TM    ICTMMOD(@10),B'10010000'                            0580
         BZ    @RF00580                                            0580
*           DO;                     /*                       @Z67SP00*/
*             ICTLLKD(LMDX)=ON;     /* LINK REQUIRED         @Z67SP00*/
         ALR   @15,@05                                             0582
         AL    @15,@CF01858                                        0582
         OI    ICTLLKD-14(@15),B'00001000'                         0582
*           END;                    /*                       @Z67SP00*/
*         IF ICTMZAP(1)=ON          /* ZAP                   @Z67SP00*/
*             ×ICTMXPND(1)=ON THEN  /* OR EXPAND ZAP?        @Z67SP00*/
@RF00580 LR    @10,LMDIX                                           0584
         SLA   @10,2                                               0584
         LR    @05,LMDX                                            0584
         MH    @05,@CH01093                                        0584
         L     @15,CCAICLMD(,CCAPTR)                               0584
         LA    @01,0(@05,@15)                                      0584
         AL    @01,@CF01856                                        0584
         L     @01,ICTLCHN-34(,@01)                                0584
         AL    @01,@CF01857                                        0584
         L     @10,ICTIXL(@10,@01)                                 0584
         TM    ICTMZAP(@10),B'00110000'                            0584
         BZ    @RF00584                                            0584
*           DO;                     /*                       @Z67SP00*/
*             ICTLZAP(LMDX)=ON;     /* ZAP REQUIRED          @Z67SP00*/
         ALR   @15,@05                                             0586
         AL    @15,@CF01858                                        0586
         OI    ICTLZAP-14(@15),B'00000100'                         0586
*           END;                    /*                       @Z67SP00*/
*       END;                        /*                       @Z67SP00*/
@RF00584 AH    LMDIX,@CH00063                                      0588
@DE00579 LR    @10,LMDIX                                           0588
         SLA   @10,2                                               0588
         LR    @05,LMDX                                            0588
         MH    @05,@CH01093                                        0588
         L     @15,CCAICLMD(,CCAPTR)                               0588
         LA    @01,0(@05,@15)                                      0588
         AL    @01,@CF01856                                        0588
         L     @01,ICTLCHN-34(,@01)                                0588
         AL    @01,@CF01857                                        0588
         L     @10,ICTIXL(@10,@01)                                 0588
         CL    @10,ICTENDIX                                        0588
         BNE   @DL00579                                            0588
*       IF ICTTG1(LMDX)=TXTNUCL     /* LMOD IN NUCLEUS?      @ZA12359*/
*           &ICTLNAME(LMDX,1:7)=TXTIEANC/* AND IT IS IEANUC0 @ZA12359*/
*         THEN                      /* THEN SEE IF LINK      @ZA12359*/
         ST    @05,@TF00001                                        0589
         ALR   @05,@15                                             0589
         AL    @05,@CF01866                                        0589
         CLC   ICTTG1-15(8,@05),@CC01718                           0589
         BNE   @RF00589                                            0589
         AL    @15,@TF00001                                        0589
         AL    @15,@CF01871                                        0589
         CLC   ICTLNAME(7,@15),@CC01722                            0589
         BNE   @RF00589                                            0589
*         DO;                       /* IS TO BE DONE         @ZA12359*/
*           DO LMDIX=1 BY 1 WHILE ICTIXL(LMDIX)^=ICTENDIX;/* LOOP  0591
*                                      THRU MODS                     */
         LA    LMDIX,1                                             0591
         B     @DE00591                                            0591
@DL00591 DS    0H                                                  0592
*             IF(ICTMMOD(1)=ON      /* IF MOD REP            @ZD00004*/
*                 ×ICTMXPND(1)=ON)  /* OR IS EXPAND ZAP              */
*               THEN                /* THEN                          */
         LR    @10,LMDIX                                           0592
         SLA   @10,2                                               0592
         LR    @05,LMDX                                            0592
         MH    @05,@CH01093                                        0592
         L     @01,CCAICLMD(,CCAPTR)                               0592
         AL    @01,@CF01856                                        0592
         L     @05,ICTLCHN-34(@05,@01)                             0592
         AL    @05,@CF01857                                        0592
         L     @10,ICTIXL(@10,@05)                                 0592
         TM    ICTMMOD(@10),B'10010000'                            0592
         BZ    @RF00592                                            0592
*               CCANCPTF=ON;        /* SET NUC HIT BIT       @XA15537*/
         OI    CCANCPTF(CCAPTR),B'10000000'                        0593
*           END;                    /* END MOD LOOP                  */
@RF00592 AH    LMDIX,@CH00063                                      0594
@DE00591 LR    @10,LMDIX                                           0594
         SLA   @10,2                                               0594
         LR    @05,LMDX                                            0594
         MH    @05,@CH01093                                        0594
         L     @01,CCAICLMD(,CCAPTR)                               0594
         AL    @01,@CF01856                                        0594
         L     @05,ICTLCHN-34(@05,@01)                             0594
         AL    @05,@CF01857                                        0594
         L     @10,ICTIXL(@10,@05)                                 0594
         CL    @10,ICTENDIX                                        0594
         BNE   @DL00591                                            0594
*           IF CCASREL(1)=SYSSVS    /* AND THIS IS VS SYSTEM @XA15537*/
*               &CCANCPTF=ON        /* AND NUCLEUS HIT?      @XA15537*/
*             THEN                  /* THEN MUST CHECK       @XA15537*/
         CLI   CCASREL(CCAPTR),C'Y'                                0595
         BNE   @RF00595                                            0595
         TM    CCANCPTF(CCAPTR),B'10000000'                        0595
         BNO   @RF00595                                            0595
*             DO;                   /* FOR PARMLIB DD CARD   @XA15537*/
*               DEVDDNAM=TXTPRMLB;  /* PARMLIB DD NAME       @XA15537*/
         MVC   DEVDDNAM(8),@CC01724                                0597
*               GEN(DEVTYPE DEVDDNAM,DEVADDR)                      0598
*               REFS(DEVDDNAM,DEVADDR);/* DD PRESENT?        @XA15537*/
         DEVTYPE DEVDDNAM,DEVADDR
*               RFY                                                0599
*                 RTNCODE RSTD;     /*                       @XA15537*/
*               IF RTNCODE^=ZERO    /* IF DD NOT PRESENT     @XA15537*/
*                 THEN              /* THEN ERR              @XA15537*/
         LTR   RTNCODE,RTNCODE                                     0600
         BZ    @RF00600                                            0600
*                 DO;               /* WRITE MSG             @XA15537*/
*                   RFY                                            0602
*                     RTNCODE UNRSTD;/*                      @XA15537*/
*                   MGPCLEAR=MGPCLEAR&&MGPCLEAR;/* ZERO MSG  @XA15537*/
         XC    MGPCLEAR(6),MGPCLEAR                                0603
*                   MGPTYPE=MGPERR; /* SET MESSAGE SEVERITY  @ZD00001*/
         MVI   MGPTYPE,X'03'                                       0604
*                   MGPMGNO1=HMA283I;/* ****ERROR**** XXXXXXXX DDCARD
*                                      MISSING               @XA15537*/
         MVC   MGPMGNO1(2),@CH00606                                0605
*                   MGPMGNO2=PART013;/* FOR LOAD MODULE XXXXXXXX   0606
*                                                            @XA15537*/
         MVC   MGPMGNO2(2),@CH00526                                0606
*                   MGPVARPT(1)=ADDR(DEVDDNAM);/* DD NAME    @XA15537*/
         LA    @10,DEVDDNAM                                        0607
         ST    @10,MGPVARPT                                        0607
*                   MGPVARPT(2)=ADDR(ICTLNAME(LMDX));/* NAME @XA15537*/
         LR    @10,LMDX                                            0608
         MH    @10,@CH01093                                        0608
         L     @02,CCAICLMD(,CCAPTR)                               0608
         AL    @02,@CF01871                                        0608
         LA    @10,ICTLNAME(@10,@02)                               0608
         ST    @10,MGPVARPT+4                                      0608
*                   CALL HMASMMSG(HMASMMGP);/* WRITE MSG     @XA15537*/
         L     @15,@CV01743                                        0609
         LA    @01,@AL00609                                        0609
         BALR  @14,@15                                             0609
*                   CALL LMDERR;    /* MARK THINGS NOGO ETC  @XA15537*/
         BAL   @14,LMDERR                                          0610
*                   CPYRTNCD=STOPPTF;/* SET RTN CODE         @XA15537*/
         LA    CPYRTNCD,8                                          0611
*                 END;              /* END PARMLIB DD MISS   @XA15537*/
*             END;                  /* END PARMLIB CHECK     @XA15537*/
@RF00600 DS    0H                                                  0614
*         END;                      /* END NUCLEAU HIT GROUP @ZA12359*/
@RF00595 DS    0H                                                  0615
*     END;                          /* END LMOD LINKED AT SYSGEN     */
@RF00589 DS    0H                                                  0616
*   RETURN CODE(CPYRTNCD);          /* RETURN                        */
@RC00550 LR    @15,CPYRTNCD                                        0616
         L     @14,@SA00008                                        0616
         LM    @00,@12,@SA00008+8                                  0616
         BR    @14                                                 0616
*   END COPYCHCK;                   /* END PROC                      */
*   END HMASMTL2                    /* END TABLE BUILD               */
*                                                                  0618
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*                                                                  0618
*       ;                                                          0618
@DATA    DS    0H
@CH00063 DC    H'1'
@CH00037 DC    H'4'
@CH00055 DC    H'8'
@CH00034 DC    H'9'
@CH00522 DC    H'11'
@CH00033 DC    H'12'
@CH00526 DC    H'13'
@CH00333 DC    H'14'
@CH01726 DC    H'47'
@CH00458 DC    H'48'
@CH01093 DC    H'54'
@CH00606 DC    H'84'
@CH00708 DC    H'255'
         DS    0F
@AL00387 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00533 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00609 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    15F
@SA00003 DS    15F
@SA00007 DS    15F
@PC00007 DS    1F
@SA00004 DS    15F
@SA00006 DS    15F
@SA00008 DS    15F
@AL00001 DS    1A
@TF00001 DS    F
         DS    0F
@CF00273 DC    F'2'
@CF01871 DC    F'-54'
@CF01865 DC    F'-46'
@CF01867 DC    F'-45'
@CF01868 DC    F'-44'
@CF01869 DC    F'-43'
@CF01870 DC    F'-42'
@CF01861 DC    F'-41'
@CF01858 DC    F'-40'
@CF01866 DC    F'-39'
@CF01873 DC    F'-31'
@CF01874 DC    F'-23'
@CF01856 DC    F'-20'
@CF01857 DC    F'-4'
@CV01742 DC    V(HMASMIO)
@CV01743 DC    V(HMASMMSG)
         DS    0D
MODLKX   DS    F
APPMODX  DS    F
@CC01714 DC    C'        '
@CC01718 DC    C'NUCLEUS '
@CC01724 DC    C'PARMLIB '
@CC01734 DC    C'SVCLIB  '
@CC01736 DC    C'LMOD    '
@CC01738 DC    C'SMPCDS  '
@CC01722 DC    C'IEANUC0'
         DS    CL1
ICTENDCH DC    X'FFFFFFFF'
HMASMMGP DS    CL24
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00239 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00240 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL12
         ORG   MGPVAR
MGPVARPT DS    3A
         ORG   HMASMMGP+24
DEVDDNAM DS    CL8
DEVADDR  DS    CL8
TL2FLGS  DS    CL1
         ORG   TL2FLGS
LEPCHNGD DS    BL1
@NM00241 EQU   TL2FLGS+0
         ORG   TL2FLGS+1
         DS    CL1
PATCHTL2 DS    CL80
         ORG   PATCHTL2
@NM00242 DC    80X'FF'
         ORG   PATCHTL2+80
TXTSYSPN DC    CL8'SYSPUNCH'
SVCLBFND DS    BL1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CPYRTNCD EQU   @04
APFPTR   EQU   @02
APPRTNCD EQU   @05
ERRIX    EQU   @02
LOCRTNCD EQU   @02
LSYSNDX  EQU   @02
DDNICTX  EQU   @07
LPRTNCD  EQU   @05
APRRTNCD EQU   @06
ACPRTNCD EQU   @05
TL2RTNCD EQU   @03
LMDIX    EQU   @02
LMDX     EQU   @03
IOPPTRF  EQU   @04
CCAPTR   EQU   @11
IOPPTR   EQU   @08
RTNCODE  EQU   @15
TBLXOPTS EQU   0
TBLFLAGS EQU   TBLXOPTS+8
TBLFLG1  EQU   TBLFLAGS
TBLFLG2  EQU   TBLFLAGS+2
TBLFLG3  EQU   TBLFLAGS+3
TBLFLG4  EQU   TBLFLAGS+5
TBLFLG5  EQU   TBLFLAGS+7
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00023 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCANCPTF EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00039 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00041 EQU   CCABLDLL
CCALKDRC EQU   @NM00041+20
@NM00043 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00043+20
@NM00045 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00045+20
@NM00047 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00047+20
@NM00049 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00049+20
@NM00051 EQU   CCABLDLL+620
CCAIOSUP EQU   @NM00051+8
CCASUPRC EQU   @NM00051+20
@NM00053 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00053+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00057 EQU   HMASMIOP+12
@NM00058 EQU   @NM00057
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPTTR   EQU   IOPDRMAP+8
IOPUSERL EQU   IOPDRMAP+11
IOPALIS  EQU   IOPUSERL
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00168 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS01  EQU   0
IOPBS02  EQU   0
IOPBS03  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
IOPBAPFC EQU   IOPBAPF+1
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPFLG8 EQU   ICTPTF+14
ICTPFLG9 EQU   ICTPTF+15
@NM00195 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMFLG2 EQU   ICTMOD+8
ICTMCPL  EQU   ICTMFLG2
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMMOD  EQU   ICTMMODR
ICTMASM  EQU   ICTMMODR
ICTMZAP  EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTLIBLK EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMFLG4 EQU   ICTMOD+11
ICTMFLG5 EQU   ICTMOD+12
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTPPTR  EQU   ICTMOD+96
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLEND  EQU   ICTLNAME
ICTLFLG4 EQU   ICTLMOD+8
ICTLPROC EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
ICTLFLG1 EQU   ICTLMOD+9
ICTLRENT EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLINK  EQU   ICTLFLG2
ICTLFLG3 EQU   ICTLMOD+14
ICTTIND1 EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTTG1   EQU   ICTLMOD+15
ICTTG2   EQU   ICTLMOD+23
ICTLTTR  EQU   ICTLMOD+31
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
ICTIXL   EQU   ICTIXLF
CCADSIDA EQU   0
CCATYPEA EQU   0
TBLXPARM EQU   0
TBLXINDX EQU   TBLXPARM+4
TBLXIOPF EQU   TBLXPARM+20
TBLXTBL  EQU   TBLXPARM+28
TBLXFLG1 EQU   TBLXPARM+80
TBLXRC   EQU   TBLXPARM+92
LMDBMOD  EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00064 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00075 EQU   IOPUDATA
@NM00076 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPAPF   EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPLMDF2 EQU   IOPLMLEP+1
IOPNE    EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPCOPY  EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPLMDFX EQU   IOPLMDNT+24
@NM00085 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPLMDND EQU   IOPSYSLB
IOPLMIND EQU   IOPLNTRY+8
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00096 EQU   IOPSRCDR+1
@NM00098 EQU   @NM00096+7
@NM00102 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00106 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00112 EQU   IOPMODDR+1
@NM00114 EQU   @NM00112+7
@NM00118 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00122 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00133 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00140 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00149 EQU   IOPPTFFX
@NM00150 EQU   @NM00149
IOPPDTES EQU   IOPPTFFX+41
@NM00153 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00178 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00178
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBRENT EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBLEP2 EQU   IOPBPDS+9
IOPBDC   EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
IOPBREFR EQU   IOPBLEP2
@NM00182 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00182
IOPBFTB1 EQU   IOPBFTB0
IOPBAOSL EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBCEND EQU   IOPBPDS+21
ICTENDNT EQU   ICTENDCH
ICTENDIX EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00184 EQU   IOPBFTB1
@NM00183 EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
@NM00181 EQU   IOPBLEP2
@NM00180 EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00179 EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00177 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00176 EQU   IOPPTSFX+35
@NM00175 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00174 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00173 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00172 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00171 EQU   IOPQFMDR
@NM00167 EQU   IOPQSMDR
@NM00166 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00165 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00164 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00163 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00162 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00161 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00160 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00159 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00158 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00157 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00156 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00155 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00154 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00153+3
IOPRECD  EQU   @NM00153
@NM00152 EQU   IOPPTFFX+8
@NM00151 EQU   @NM00149+7
IOPPRELN EQU   @NM00150
@NM00148 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00147 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00146 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00145 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00144 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00143 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00142 EQU   @NM00140+7
@NM00141 EQU   @NM00140
@NM00139 EQU   IOPSYSDR+5
@NM00138 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00137 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00136 EQU   IOPDLBFX+8
@NM00135 EQU   @NM00133+7
@NM00134 EQU   @NM00133
@NM00132 EQU   IOPDLBDR+1
@NM00131 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00130 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00129 EQU   IOPMODFX+12
@NM00128 EQU   IOPMODF4
@NM00127 EQU   IOPMODF3
@NM00126 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00125 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00124 EQU   @NM00122+7
@NM00123 EQU   @NM00122
@NM00121 EQU   IOPMODDR+17
@NM00120 EQU   @NM00118+7
@NM00119 EQU   @NM00118
@NM00117 EQU   @NM00114
@NM00116 EQU   @NM00114
@NM00115 EQU   @NM00114
@NM00113 EQU   @NM00112
@NM00111 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00110 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00109 EQU   IOPSRCFX+8
@NM00108 EQU   @NM00106+7
@NM00107 EQU   @NM00106
@NM00105 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00104 EQU   @NM00102+7
@NM00103 EQU   @NM00102
@NM00101 EQU   @NM00098
@NM00100 EQU   @NM00098
@NM00099 EQU   @NM00098
@NM00097 EQU   @NM00096
@NM00095 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00094 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00093 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00092 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00091 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00090 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00089 EQU   IOPMACDR
@NM00087 EQU   @NM00085+7
@NM00086 EQU   @NM00085
@NM00084 EQU   IOPLMDDR+6
@NM00083 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
@NM00082 EQU   IOPLMDF4
@NM00081 EQU   IOPLMDF3
@NM00080 EQU   IOPLMDF2
@NM00079 EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
@NM00078 EQU   IOPLMDDR
@NM00077 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00076+4
IOPUSED  EQU   @NM00076
IOPTPSEQ EQU   @NM00075+8
IOPVLSER EQU   @NM00075+2
IOPBLKSI EQU   @NM00075
IOPCQMAX EQU   IOPCQMAP+12
@NM00074 EQU   IOPCQMAP+11
@NM00073 EQU   IOPCQMAP+8
@NM00072 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00071 EQU   IOPSCMAP+11
@NM00070 EQU   IOPSCMAP+8
@NM00069 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00068 EQU   IOPNTMAX+11
@NM00067 EQU   IOPNTMAX+8
@NM00066 EQU   IOPNTMAX
@NM00065 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00064+5
IOPIPTF3 EQU   @NM00064
TBLXEND0 EQU   TBLXPARM+124
@NM00007 EQU   TBLXPARM+108
TBLXIOP3 EQU   TBLXPARM+104
TBLXD2GT EQU   TBLXPARM+100
TBLXDLGT EQU   TBLXPARM+96
@NM00006 EQU   TBLXRC+3
TBLXIRC  EQU   TBLXRC+2
TBLXLRC  EQU   TBLXRC+1
TBLXTRC  EQU   TBLXRC
TBLXIBGN EQU   TBLXPARM+88
TBLXTSLP EQU   TBLXPARM+84
@NM00005 EQU   TBLXPARM+83
@NM00004 EQU   TBLXPARM+82
@NM00003 EQU   TBLXPARM+81
@NM00002 EQU   TBLXFLG1
TBLXTCRC EQU   TBLXFLG1
TBLXFUND EQU   TBLXPARM+72
TBLXFUNC EQU   TBLXPARM+64
@NM00001 EQU   TBLXPARM+62
TBLXCRQI EQU   TBLXPARM+61
TBLXCDSI EQU   TBLXPARM+60
TBLXLMGT EQU   TBLXPARM+56
TBLXSCGT EQU   TBLXPARM+52
TBLXSREL EQU   TBLXPARM+48
TBLXASGT EQU   TBLXPARM+44
TBLXIFGT EQU   TBLXPARM+40
TBLXNULL EQU   TBLXPARM+36
TBLXTOP  EQU   TBLXPARM+32
TBLXSEGT EQU   TBLXPARM+24
TBLXIOP2 EQU   TBLXPARM+16
TBLXEND  EQU   TBLXINDX+8
TBLXSTRT EQU   TBLXINDX+4
TBLXCUR  EQU   TBLXINDX
TBLXHDR  EQU   TBLXPARM
@NM00238 EQU   ICTLMOD+38
@NM00237 EQU   ICTLFLG3
@NM00236 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00235 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00234 EQU   ICTLFLG7
@NM00233 EQU   ICTLFLG6
@NM00232 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00231 EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00230 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
@NM00229 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00228 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTTALND EQU   ICTTALNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00227 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
ICTIXM   EQU   ICTIXMF
@NM00226 EQU   ICTMOD+128
ICTMICHA EQU   ICTMOD+108
@NM00225 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00224 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMSYSL EQU   ICTMOD+56
ICTMDSTL EQU   ICTMOD+48
ICTMASLB EQU   ICTMOD+40
ICTTOLIB EQU   ICTMOD+32
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00223 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00222 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00221 EQU   ICTMLEP4
@NM00220 EQU   ICTMLEP3
@NM00219 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00218 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00217 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00216 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
ICTMISEL EQU   ICTMFLG4
@NM00215 EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTMSRCU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
@NM00214 EQU   ICTMFLG2
@NM00213 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMPROC EQU   ICTMFLG2
ICTMEND  EQU   ICTMNAME
@NM00212 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00211 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00210 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00209 EQU   ICTCSRST
@NM00208 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00207 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00206 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00205 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00204 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00203 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00202 EQU   ICTSUPNT+7
ICTSUPND EQU   ICTSUPNM
@NM00201 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00200 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00199 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00198 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
ICTIXP   EQU   ICTIXPF
@NM00197 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00196 EQU   @NM00195
ICTPRQBY EQU   @NM00195
ICTPRQOK EQU   @NM00195
ICTPRQCK EQU   @NM00195
@NM00194 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00193 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00192 EQU   ICTPFLG4
@NM00191 EQU   ICTPFLG4
@NM00190 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPDEXP EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00189 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00188 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00187 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00186 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00185 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTPEND  EQU   ICTPTFS
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
IOPBS04E EQU   IOPBS04+2
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00170 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00169 EQU   @NM00168+7
IOPQSMFM EQU   @NM00168
@NM00088 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00063 EQU   IOPUSERL
@NM00062 EQU   IOPUSERL
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00061 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00060 EQU   @NM00057+10
IOPSEQNO EQU   @NM00057+8
@NM00059 EQU   @NM00058+7
IOPPTFNM EQU   @NM00058
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00056 EQU   CCABLDLM+2
@NM00055 EQU   CCABLDLM
CCAUPDPM EQU   @NM00053+24
@NM00054 EQU   @NM00053+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00053+12
CCAUPDTE EQU   @NM00053+8
CCAUPDNM EQU   @NM00053
CCASUPPM EQU   @NM00051+24
@NM00052 EQU   @NM00051+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00051+12
CCASUPNM EQU   @NM00051
CCAZAPPM EQU   @NM00049+24
@NM00050 EQU   @NM00049+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00049+12
CCASPZAP EQU   @NM00049+8
CCAZAPNM EQU   @NM00049
CCACOMPM EQU   @NM00047+24
@NM00048 EQU   @NM00047+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00047+12
CCACOMRS EQU   @NM00047+8
CCACOMNM EQU   @NM00047
CCACPYPM EQU   @NM00045+24
@NM00046 EQU   @NM00045+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00045+12
CCACOPY  EQU   @NM00045+8
CCACPYNM EQU   @NM00045
CCAASMPM EQU   @NM00043+24
@NM00044 EQU   @NM00043+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00043+12
CCAASM   EQU   @NM00043+8
CCAASMNM EQU   @NM00043
CCALKDPM EQU   @NM00041+24
@NM00042 EQU   @NM00041+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00041+12
CCALKED  EQU   @NM00041+8
CCALKDNM EQU   @NM00041
CCAPGMPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCABPGRC EQU   @NM00039+20
CCABPGSP EQU   @NM00039+12
CCABPGAD EQU   @NM00039+8
CCABPGNM EQU   @NM00039
CCAEND   EQU   HMASMCCA+371
@NM00038 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00037 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00036 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00035 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00034 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00033 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00032 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00031 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00030 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
@NM00029 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00028 EQU   @NM00023+18
@NM00027 EQU   @NM00023+16
CCATBLPA EQU   @NM00023+12
@NM00026 EQU   @NM00023+8
@NM00025 EQU   @NM00023+4
@NM00024 EQU   @NM00023
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00022 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00021 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00020 EQU   CCAFBUFR+122
@NM00019 EQU   CCAFBUFR+120
@NM00018 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00017 EQU   CCAFBUFR+88
@NM00016 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00015 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
@NM00014 EQU   TBLFLG5
TBLICTOK EQU   TBLFLG5
@NM00013 EQU   TBLFLG4
TBLBPFM  EQU   TBLFLG4
@NM00012 EQU   TBLFLG4
TBLBPIRQ EQU   TBLFLG4
TBLBPREQ EQU   TBLFLG4
TBLBPPRE EQU   TBLFLG4
TBLBPID  EQU   TBLFLG4
@NM00011 EQU   TBLFLG3+1
TBLSTS   EQU   TBLFLG3
TBLMTS   EQU   TBLFLG3
TBLPTS   EQU   TBLFLG3
TBLACRQ  EQU   TBLFLG3
TBLCRQ   EQU   TBLFLG3
TBLSCDS  EQU   TBLFLG3
TBLACDS  EQU   TBLFLG3
TBLCDS   EQU   TBLFLG3
TBLMASS  EQU   TBLFLG2
@NM00010 EQU   TBLFLG2
TBLFMID  EQU   TBLFLG2
TBLGROUP EQU   TBLFLG2
TBLEXC   EQU   TBLFLG2
TBLSEL   EQU   TBLFLG2
@NM00009 EQU   TBLFLG1+1
TBLDISW  EQU   TBLFLG1+1
TBLDISR  EQU   TBLFLG1+1
TBLDISN  EQU   TBLFLG1+1
TBLNOJCL EQU   TBLFLG1
TBLFLUSH EQU   TBLFLG1
TBLUSER  EQU   TBLFLG1
TBLAPAR  EQU   TBLFLG1
TBLCOMP  EQU   TBLFLG1
TBLASSEM EQU   TBLFLG1
TBLCHECK EQU   TBLFLG1
TBLNOAPP EQU   TBLFLG1
@NM00008 EQU   TBLXOPTS+5
TBLNUCID EQU   TBLXOPTS+4
TBLJCLGT EQU   TBLXOPTS
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00243 EQU   @RC00240
@RC00327 EQU   @RC00324
@RC00377 EQU   @RC00375
@RF00462 EQU   @RC00460
@RF00535 EQU   @RC00476
@RF00556 EQU   @RC00553
@RF00566 EQU   @RC00564
@ENDDATA EQU   *
         END   HMASMTL2,(C'PLS2149',0802,78334)
