         TITLE 'HMASMRDS GENERAL DIRECTORY READ ROUTINE'
HMASMRDS CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMRDS  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0149
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE RETURN CODE AND CHECK PARAMETER                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0149
*   RDPRETRN=RDPGOOD;               /* INITIALIZE CODE               */
         L     @02,@PC00001                                        0149
         MVI   RDPRETRN(@02),X'00'                                 0149
*   IOPPTR=ADDR(RDSIOP);            /* SET POINTER TO IOP            */
         LA    IOPPTR,RDSIOP                                       0150
*   HMASMMGP=''B;                   /* ZERO MSG PARM AND     @Z67SP00*/
         XC    HMASMMGP(24),HMASMMGP                               0151
*   MGPPRINT=ON;                    /* SET FOR ALL MSG TO    @Z67SP00*/
*   MGPHLDS=ON;                     /* LOG AND OUT           @Z67SP00*/
*                                                                  0153
         OI    MGPPRINT,B'10010000'                                0153
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR VALID DATASET IT AND FUNCTION               @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0154
*   CALL RDSVER;                    /* CHECK PARM                    */
         BAL   @14,RDSVER                                          0154
*   RFY                                                            0155
*     RTNCODE RSTD;                 /*                               */
*   RDPRETRN=RTNCODE;               /* UPDATE RETURN CODE            */
         L     @14,@PC00001                                        0156
         STC   RTNCODE,RDPRETRN(,@14)                              0156
*   RFY                                                            0157
*     RTNCODE UNRSTD;               /*                               */
*                                                                  0157
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL RDSADDGM TO EITHER LOCATE OR ALLOCATE NEW WORK AREA TO BE*/
*   /* USED IN CONJUNCTION WITH REQUESTS ON THE DATASET PASSED       */
*   /*                                                       @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0158
*   IF RDPRETRN=RDPGOOD             /*                       @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         CLI   RDPRETRN(@14),0                                     0158
         BNE   @RF00158                                            0158
*     DO;                           /*                       @Z67SP00*/
*       CALL RDSADDGM;              /*                       @Z67SP00*/
         BAL   @14,RDSADDGM                                        0160
*       RFY                                                        0161
*         RTNCODE RSTD;             /*                       @Z67SP00*/
*       RDPRETRN=MAX(RDPRETRN,RTNCODE);/* UPDATE RETURN CODE @Z67SP00*/
         L     @14,@PC00001                                        0162
         SLR   @02,@02                                             0162
         IC    @02,RDPRETRN(,@14)                                  0162
         CR    @02,RTNCODE                                         0162
         BNL   *+6
         LR    @02,RTNCODE                                         0162
         STC   @02,RDPRETRN(,@14)                                  0162
*       RFY                                                        0163
*         RTNCODE UNRSTD;           /*                       @Z67SP00*/
*     END;                          /*                       @Z67SP00*/
*                                                                  0165
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PARM OK AND THIS IS REQUEST FOR NEXT ENTRY CALL GET ROUTINE*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0165
*   IF RDPRETRN=RDPGOOD             /* IF PREVIOUS FUNCTION OK       */
*       &(RDPFUNCT=RDPGETN          /* AND REQUEST FOR               */
*       ×RDPFUNCT=RDPGETNC)         /* NEXT ENTRY                    */
*     THEN                          /*                               */
@RF00158 L     @02,@PC00001                                        0165
         CLI   RDPRETRN(@02),0                                     0165
         BNE   @RF00165                                            0165
         CLI   RDPFUNCT(@02),1                                     0165
         BE    @RT00165                                            0165
         CLI   RDPFUNCT(@02),2                                     0165
         BNE   @RF00165                                            0165
@RT00165 DS    0H                                                  0166
*     DO;                           /*                               */
*       CALL RDSGET;                /*                               */
         BAL   @14,RDSGET                                          0167
*       RFY                                                        0168
*         RTNCODE RSTD;             /*                               */
*       RDPRETRN=RTNCODE;           /* UPDATE RETURN CODE            */
         L     @14,@PC00001                                        0169
         STC   RTNCODE,RDPRETRN(,@14)                              0169
*       RFY                                                        0170
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0171
*   /*****************************************************************/
*   /*                                                               */
*   /* IF END OF FILE,I/O ERROR, OR CLOSE REQUEST CALL CLOSE ROUTINE */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0172
*   IF RDPRETRN^=RDPGOOD            /* IF END OF FILE OR I/O         */
*       ×RDPFUNCT=RDPCLOSE          /* OR CLOSE                      */
*     THEN                          /*                               */
@RF00165 L     @02,@PC00001                                        0172
         CLI   RDPRETRN(@02),0                                     0172
         BNE   @RT00172                                            0172
         CLI   RDPFUNCT(@02),3                                     0172
         BNE   @RF00172                                            0172
@RT00172 DS    0H                                                  0173
*     DO;                           /*                               */
*       IOPFUNCT=IOPCLOSE;          /* SET TO CLOSE          @Z67SP00*/
         MVI   IOPFUNCT(IOPPTR),X'50'                              0174
*       IOPDSID=DSID;               /* DATASET               @Z67SP00*/
         MVC   IOPDSID(1,IOPPTR),DSID                              0175
*       CALL HMASMIO(HMASMIOP);     /*                       @Z67SP00*/
         ST    IOPPTR,@AL00001                                     0176
         L     @15,@CV01278                                        0176
         LA    @01,@AL00001                                        0176
         BALR  @14,@15                                             0176
*       RDPRETRN=MAX(RDPRETRN,IOPRETRN);/* SAVE RC           @Z67SP00*/
         L     @02,@PC00001                                        0177
         SLR   @15,@15                                             0177
         IC    @15,RDPRETRN(,@02)                                  0177
         SLR   @14,@14                                             0177
         IC    @14,IOPRETRN(,IOPPTR)                               0177
         CR    @15,@14                                             0177
         BNL   *+6
         LR    @15,@14                                             0177
         STC   @15,RDPRETRN(,@02)                                  0177
*       CALL RDSDELGM;              /* FREE WORK AREA                */
         BAL   @14,RDSDELGM                                        0178
*       RFY                                                        0179
*         RTNCODE RSTD;             /*                               */
*       RDPRETRN=MAX(RDPRETRN,RTNCODE);/*                            */
         L     @14,@PC00001                                        0180
         SLR   @11,@11                                             0180
         IC    @11,RDPRETRN(,@14)                                  0180
         CR    @11,RTNCODE                                         0180
         BNL   *+6
         LR    @11,RTNCODE                                         0180
         STC   @11,RDPRETRN(,@14)                                  0180
*       RFY                                                        0181
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0182
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH CODE SET IN                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0183
*   RETURN;                         /*                               */
@EL00001 L     @13,4(,@13)                                         0183
@EF00001 DS    0H                                                  0183
@ER00001 LM    @14,@12,12(@13)                                     0183
         BR    @14                                                 0183
         EJECT
*                                                                  0184
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO VERIFY THAT THE FUNCTION AND DATA   */
*   /* SET PASSED ARE VALID                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0184
*RDSVER:                            /*                               */
*   PROCEDURE;                      /*                               */
         B     @EL00001                                            0184
RDSVER   STM   @14,@12,12(@13)                                     0184
*   DECLARE                         /*                               */
*     VERRTNCD FIXED(8);            /* ROUTINE RETURN CODE           */
*                                                                  0185
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE RETURN CODE & CHECK DATA SET ID                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0186
*   VERRTNCD=RDPGOOD;               /*                               */
         SLR   VERRTNCD,VERRTNCD                                   0186
*   DISOSW=OFF;                     /* DIR NOT IN STORAGE FOR UPDATE
*                                      MODE                  @Z67SP00*/
         NI    DISOSW,B'01111111'                                  0187
*   IF RDPDSID=IOPCDS               /* IF CDS                @Z67SP00*/
*     THEN                          /* THEN                  @Z67SP00*/
         L     @02,@PC00001                                        0188
         CLI   RDPDSID(@02),2                                      0188
         BNE   @RF00188                                            0188
*     DO;                           /*                       @Z67SP00*/
*       DSID=IOPCDSD;               /* SET TO READ CDS DIR.  @Z67SP00*/
         MVI   DSID,X'08'                                          0190
*       IF CCACDSOS=ON              /* IF CDS FOR UPDATE     @Z67SP00*/
*         THEN                      /*                       @Z67SP00*/
         L     @02,@CA00061                                        0191
         TM    CCACDSOS-HMASMCCA(@02),B'10000000'                  0191
         BNO   @RF00191                                            0191
*         DISOSW=ON;                /* SET SW                @Z67SP00*/
         OI    DISOSW,B'10000000'                                  0192
*     END;                          /*                       @Z67SP00*/
*   ELSE                            /*                       @Z67SP00*/
*     IF RDPDSID=IOPPTS             /*                       @Z67SP00*/
*       THEN                        /*                       @Z67SP00*/
         B     @RC00188                                            0194
@RF00188 L     @02,@PC00001                                        0194
         CLI   RDPDSID(@02),6                                      0194
         BNE   @RF00194                                            0194
*       DSID=IOPPTSD;               /*                       @Z67SP00*/
         MVI   DSID,X'17'                                          0195
*     ELSE                          /*                       @Z67SP00*/
*       IF RDPDSID=IOPACDS          /*                       @Z67SP00*/
*         THEN                      /*                       @Z67SP00*/
         B     @RC00194                                            0196
@RF00194 L     @02,@PC00001                                        0196
         CLI   RDPDSID(@02),12                                     0196
         BNE   @RF00196                                            0196
*         DO;                       /*                       @Z67SP00*/
*           DSID=IOPACDSD;          /* SET TO READ ACDS DIR. @Z67SP00*/
         MVI   DSID,X'0D'                                          0198
*           IF CCAACDOS=ON          /* IF ACDS FOR UPDATE    @Z67SP00*/
*             THEN                  /*                       @Z67SP00*/
         L     @02,@CA00061                                        0199
         TM    CCAACDOS-HMASMCCA(@02),B'01000000'                  0199
         BNO   @RF00199                                            0199
*             DISOSW=ON;            /* SET SW                @Z67SP00*/
         OI    DISOSW,B'10000000'                                  0200
*         END;                      /*                       @Z67SP00*/
*       ELSE                        /*                       @Z67SP00*/
*         IF RDPDSID=IOPMTS         /*                       @Z67SP00*/
*           THEN                    /*                       @Z67SP00*/
         B     @RC00196                                            0202
@RF00196 L     @02,@PC00001                                        0202
         CLI   RDPDSID(@02),18                                     0202
         BNE   @RF00202                                            0202
*           DSID=IOPMTSD;           /*                       @Z67SP00*/
         MVI   DSID,X'13'                                          0203
*         ELSE                      /*                       @Z67SP00*/
*           IF RDPDSID=IOPSTS       /*                       @Z67SP00*/
*             THEN                  /*                       @Z67SP00*/
         B     @RC00202                                            0204
@RF00202 L     @02,@PC00001                                        0204
         CLI   RDPDSID(@02),26                                     0204
         BNE   @RF00204                                            0204
*             DSID=IOPSTSD;         /*                       @Z67SP00*/
         MVI   DSID,X'1B'                                          0205
*           ELSE                    /*                       @Z67SP00*/
*             IF RDPDSID=IOPCRQ     /*                       @Z67SP00*/
*               THEN                /*                       @Z67SP00*/
         B     @RC00204                                            0206
@RF00204 L     @02,@PC00001                                        0206
         CLI   RDPDSID(@02),28                                     0206
         BNE   @RF00206                                            0206
*               DO;                 /*                       @Z67SP00*/
*                 DSID=IOPCRQD;     /* SET TO READ CRQ DIR.  @Z67SP00*/
         MVI   DSID,X'1D'                                          0208
*                 IF CCACRQOS=ON    /* IF CRQ FOR UPDATE     @Z67SP00*/
*                   THEN            /*                       @Z67SP00*/
         L     @02,@CA00061                                        0209
         TM    CCACRQOS-HMASMCCA(@02),B'00100000'                  0209
         BNO   @RF00209                                            0209
*                   DISOSW=ON;      /* SET SW                @Z67SP00*/
         OI    DISOSW,B'10000000'                                  0210
*               END;                /*                       @Z67SP00*/
*             ELSE                  /*                       @Z67SP00*/
*               IF RDPDSID=IOPACRQ  /*                       @Z67SP00*/
*                 THEN              /*                       @Z67SP00*/
         B     @RC00206                                            0212
@RF00206 L     @02,@PC00001                                        0212
         CLI   RDPDSID(@02),30                                     0212
         BNE   @RF00212                                            0212
*                 DO;               /*                       @Z67SP00*/
*                   DSID=IOPACRQD;  /* SET TO READ ACRQ DIR. @Z67SP00*/
         MVI   DSID,X'1F'                                          0214
*                   IF CCAACROS=ON  /* IF ACRQ FOR UPDATE    @Z67SP00*/
*                     THEN          /*                       @Z67SP00*/
         L     @02,@CA00061                                        0215
         TM    CCAACROS-HMASMCCA(@02),B'00010000'                  0215
         BNO   @RF00215                                            0215
*                     DISOSW=ON;    /* SET SW                @Z67SP00*/
         OI    DISOSW,B'10000000'                                  0216
*                 END;              /*                       @Z67SP00*/
*               ELSE                /*                       @Z67SP00*/
*                 IF RDPDSID=IOPSCDS/*                       @Z67SP00*/
*                   THEN            /*                       @Z67SP00*/
         B     @RC00212                                            0218
@RF00212 L     @02,@PC00001                                        0218
         CLI   RDPDSID(@02),33                                     0218
         BNE   @RF00218                                            0218
*                   DSID=IOPSCDSD;  /*                       @Z67SP00*/
         MVI   DSID,X'22'                                          0219
*                 ELSE              /* IF NOT VALID DATASET  @Z67SP00*/
*                   VERRTNCD=RDPIOERR;/* SET BAD RC          @Z67SP00*/
*                                                                  0220
         B     @RC00218                                            0220
@RF00218 LA    VERRTNCD,16                                         0220
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FUNCTION                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0221
*   IF RDPFUNCT^=RDPGETN            /* IF                            */
*       &RDPFUNCT^=RDPGETNC         /* INVALID                       */
*       &RDPFUNCT^=RDPCLOSE         /* FUNCTION                      */
*     THEN                          /* THEN SET BAD                  */
@RC00218 DS    0H                                                  0221
@RC00212 DS    0H                                                  0221
@RC00206 DS    0H                                                  0221
@RC00204 DS    0H                                                  0221
@RC00202 DS    0H                                                  0221
@RC00196 DS    0H                                                  0221
@RC00194 DS    0H                                                  0221
@RC00188 L     @02,@PC00001                                        0221
         CLI   RDPFUNCT(@02),1                                     0221
         BE    @RF00221                                            0221
         CLI   RDPFUNCT(@02),2                                     0221
         BE    @RF00221                                            0221
         CLI   RDPFUNCT(@02),3                                     0221
         BE    @RF00221                                            0221
*     VERRTNCD=RDPIOERR;            /* RETURN CODE                   */
*                                                                  0222
         LA    VERRTNCD,16                                         0222
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH CODE SET IN                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0223
*   RETURN CODE(VERRTNCD);          /*                               */
@RF00221 LR    @15,VERRTNCD                                        0223
         L     @14,12(,@13)                                        0223
         LM    @00,@12,20(@13)                                     0223
         BR    @14                                                 0223
*   END RDSVER;                     /*                               */
         EJECT
*                                                                  0225
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO FIND WORK AREA FOR INPUT DATASET OR ALLOCATE*/
*   /* NEW AREA IF ONE DOES NOT ALREADY EXIST                @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0225
*RDSADDGM:                          /*                       @Z67SP00*/
*   PROCEDURE;                      /*                       @Z67SP00*/
RDSADDGM STM   @14,@12,@SA00003                                    0225
*   DECLARE                         /*                       @Z67SP00*/
*     ADDRC FIXED(8);               /*                       @Z67SP00*/
*   DECLARE                         /*                       @Z67SP00*/
*     ADDX FIXED(31);               /* LOOP VARIABLE         @Z67SP00*/
*   DECLARE                         /*                       @Z67SP00*/
*     PREVPTR PTR(31);              /* PTR TO PREV BLK       @Z67SP00*/
*   ADDRC=ZERO;                     /*                       @Z67SP00*/
*                                                                  0229
         SLR   ADDRC,ADDRC                                         0229
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU CHAIN TILL WORK AREA FOUND OR TILL END      @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0230
*   GMBFRPTR=ADDR(GMPINIT);         /* START OF CHAIN        @Z67SP00*/
         LA    @02,GMPINIT                                         0230
         ST    @02,GMBFRPTR                                        0230
*   DO UNTIL(                       /* LOOP TILL             @Z67SP00*/
*         GMBFRPTR=ZERO             /* END OF LIST           @Z67SP00*/
*         ×GMDSID=DSID);            /* OR TILL AREA FOUND    @Z67SP00*/
@DL00231 DS    0H                                                  0232
*     PREVPTR=GMBFRPTR;             /* SAVE CURRENT ADDR     @Z67SP00*/
         L     @02,GMBFRPTR                                        0232
         LR    PREVPTR,@02                                         0232
*     GMBFRPTR=GMBFRPTR->GMNEXT;    /* PTR TO NEXT AREA      @Z67SP00*/
         L     @04,GMNEXT(,@02)                                    0233
         ST    @04,GMBFRPTR                                        0233
*   END;                            /*                       @Z67SP00*/
*                                                                  0234
@DE00231 L     @04,GMBFRPTR                                        0234
         LTR   @04,@04                                             0234
         BZ    @DC00231                                            0234
         CLC   GMDSID(1,@04),DSID                                  0234
         BNE   @DL00231                                            0234
@DC00231 DS    0H                                                  0235
*   /*****************************************************************/
*   /*                                                               */
*   /* IF AREA NOT FOUND THEN GETMAIN NEW AREA               @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0235
*   IF GMBFRPTR=ZERO                /* IF AREA NOT FOUND     @Z67SP00*/
*       &RDPFUNCT^=RDPCLOSE         /* AND NOT CLOSE         @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         ICM   @04,15,GMBFRPTR                                     0235
         BNZ   @RF00235                                            0235
         L     @04,@PC00001                                        0235
         CLI   RDPFUNCT(@04),3                                     0235
         BE    @RF00235                                            0235
*     DO;                           /*                       @Z67SP00*/
*       RFY                                                        0237
*         SIZE RSTD;                /*                       @Z67SP00*/
*       SIZE=LENGTH(RDSGMBFR);      /* LENGTH FOR GETMAIN    @Z67SP00*/
         LA    SIZE,288                                            0238
*       GEN(GETMAIN  EC,LV=(SIZE),A=GMADDR)                        0239
*       REFS(SIZE,GMADDR);          /* GETMAIN AREA          @Z67SP00*/
         GETMAIN  EC,LV=(SIZE),A=GMADDR
*       RFY                                                        0240
*         SIZE UNRSTD;              /*                       @Z67SP00*/
*       RFY                                                        0241
*         RTNCODE RSTD;             /*                       @Z67SP00*/
*       IF RTNCODE^=ZERO            /* IF GETMAIN FAILS      @Z67SP00*/
*         THEN                      /*                       @Z67SP00*/
         LTR   RTNCODE,RTNCODE                                     0242
         BZ    @RF00242                                            0242
*         DO;                       /*                       @Z67SP00*/
*           MGPCLEAR=''B;           /* ZERO MSG PARM         @Z67SP00*/
         XC    MGPCLEAR(6),MGPCLEAR                                0244
*           MGPMGNO1=HMA202I;       /* UNABLE TO OBTAIN STORAGE FOR
*                                      FOR WORK AREAS        @Z67SP00*/
         MVC   MGPMGNO1(2),@CH00052                                0245
*           MGPTYPE=MGPSEV;         /*                       @Z67SP00*/
         MVI   MGPTYPE,X'04'                                       0246
*           CALL HMASMMSG(HMASMMGP);/* WRITE MSG             @Z67SP00*/
         L     @15,@CV01279                                        0247
         LA    @01,@AL00247                                        0247
         BALR  @14,@15                                             0247
*           ADDRC=MAX(ADDRC,RDPNTOPN);/*                     @Z67SP00*/
         LA    @14,12                                              0248
         CR    ADDRC,@14                                           0248
         BNL   *+6
         LR    ADDRC,@14                                           0248
*         END;                      /*                       @Z67SP00*/
*       ELSE                        /*                       @Z67SP00*/
*         DO;                       /*                       @Z67SP00*/
         B     @RC00242                                            0250
@RF00242 DS    0H                                                  0251
*           GMBFRPTR=GMADDR;        /* PTR TO NEW AREA       @Z67SP00*/
         MVC   GMBFRPTR(4),GMADDR                                  0251
*           DO ADDX=1 TO LENGTH(RDSGMBFR);/* LOOP THRU BFR   @Z67SP00*/
         LA    ADDX,1                                              0252
@DL00252 DS    0H                                                  0253
*             GMBFRPTR->RDSGMBFR(ADDX)=''B;/* TO ZERO        @Z67SP00*/
         L     @14,GMBFRPTR                                        0253
         ALR   @14,ADDX                                            0253
         BCTR  @14,0                                               0253
         MVI   RDSGMBFR(@14),X'00'                                 0253
*           END;                    /*                       @Z67SP00*/
         AH    ADDX,@CH00048                                       0254
         CH    ADDX,@CH01328                                       0254
         BNH   @DL00252                                            0254
*           PREVPTR->GMNEXT=GMADDR; /* CHAIN LAST TO NEW     @Z67SP00*/
         MVC   GMNEXT(4,PREVPTR),GMADDR                            0255
*           GMBFRPTR->GMPREV=PREVPTR;/* CHAIN NEW TO OLD     @Z67SP00*/
         L     @14,GMBFRPTR                                        0256
         ST    PREVPTR,GMPREV(,@14)                                0256
*           GMDSID=DSID;            /* PUT IN DATASET ID     @Z67SP00*/
         MVC   GMDSID(1,@14),DSID                                  0257
*         END;                      /*                       @Z67SP00*/
*       RFY                                                        0259
*         RTNCODE UNRSTD;           /*                       @Z67SP00*/
@RC00242 DS    0H                                                  0260
*     END;                          /* END AREA NOT FOUND    @Z67SP00*/
*                                                                  0260
*   /*****************************************************************/
*   /*                                                               */
*   /* AT THIS POINT GMBFRPTR WILL POINT TO THE AREA TO BE USED FOR  */
*   /* PROCESSING THIS DATASET. IF THE RETURN CODE IS NOT ZERO THEN  */
*   /* GMBFRPTR HAS NO MEANING                               @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0261
*   RETURN CODE(ADDRC);             /*                       @Z67SP00*/
@RF00235 LR    @15,ADDRC                                           0261
         L     @14,@SA00003                                        0261
         LM    @00,@12,@SA00003+8                                  0261
         BR    @14                                                 0261
*   END RDSADDGM;                   /*                       @Z67SP00*/
         EJECT
*                                                                  0263
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO GET THE NEXT SEQUENTIAL ENTRY IN THE*/
*   /* DIRECTORY DATA SET SPECIFIED                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0263
*RDSGET:                            /*                               */
*   PROCEDURE;                      /*                               */
RDSGET   STM   @14,@12,@SA00004                                    0263
*   DECLARE                         /*                               */
*     GETRTNCD FIXED(8);            /* ROUTINE RETURN CODE           */
*                                                                  0264
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE RETURN CODE. IF THIS IS FIRST CALL FOR THIS DATA   */
*   /* SET INSURE THAT DCB IS CLOSED IN ORDER TO START AT BEGINING.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0265
*   GETRTNCD=RDPGOOD;               /* INIT RETURN CODE              */
         SLR   GETRTNCD,GETRTNCD                                   0265
*   IF FIRST=OFF                    /* IF FIRST CALL                 */
*     THEN                          /*                               */
         L     @05,GMBFRPTR                                        0266
         TM    FIRST(@05),B'10000000'                              0266
         BNZ   @RF00266                                            0266
*     DO;                           /*                               */
*       IOPFUNCT=IOPCLOSE;          /* SET TO CLOSE          @Z67SP00*/
         MVI   IOPFUNCT(IOPPTR),X'50'                              0268
*       IOPDSID=DSID;               /* DATASET               @Z67SP00*/
         MVC   IOPDSID(1,IOPPTR),DSID                              0269
*       CALL HMASMIO(HMASMIOP);     /*                       @Z67SP00
*                                                            @Z67SP00*/
         ST    IOPPTR,@AL00001                                     0270
         L     @15,@CV01278                                        0270
         LA    @01,@AL00001                                        0270
         BALR  @14,@15                                             0270
*       GETRTNCD=MAX(GETRTNCD,IOPRETRN);/* SAVE RC           @Z67SP00*/
         SLR   @05,@05                                             0271
         IC    @05,IOPRETRN(,IOPPTR)                               0271
         CR    GETRTNCD,@05                                        0271
         BNL   *+6
         LR    GETRTNCD,@05                                        0271
*       FIRST=ON;                   /* FIRST DONE                    */
         L     @05,GMBFRPTR                                        0272
         OI    FIRST(@05),B'10000000'                              0272
*     END;                          /* END FIRST TIME                */
*                                                                  0274
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO MORE ENTRIES IN BLOCK IN BUFFER CALL HMASMIO TO READ    */
*   /* ANOTHER BLOCK. SET COUNTERS AND POINTERS                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0274
*   IF GETRTNCD=RDPGOOD             /* IF PREVIOUS FUNCTION OK       */
*       &REMLEN<=ZERO               /* AND NO DATA IN BUFFER         */
*     THEN                          /* THEN                          */
@RF00266 SLR   @05,@05                                             0274
         CR    GETRTNCD,@05                                        0274
         BNE   @RF00274                                            0274
         L     @02,GMBFRPTR                                        0274
         CH    @05,REMLEN(,@02)                                    0274
         BL    @RF00274                                            0274
*     DO;                           /* GET ANOTHER BLOCK             */
*       IOPFUNCT=IOPREAD;           /* SET TO READ                   */
         MVI   IOPFUNCT(IOPPTR),X'01'                              0276
*       IOPDSID=DSID;               /* A BLOCK               @Z67SP00*/
         MVC   IOPDSID(1,IOPPTR),DSID                              0277
*       IF DISOSW=ON                /* IF DIR IN STORAGE FOR UPDATE
*                                      THEN ALLOW ROOM FOR KEY     0278
*                                                            @Z67SP00*/
*         THEN                      /* ALLOW ROOM FOR KEY TO @ZD00005*/
         TM    DISOSW,B'10000000'                                  0278
         BNO   @RF00278                                            0278
*         IOPBUFAD=ADDR(UPDBUFFR);  /* BE RETURNED           @ZD00005*/
         LA    @02,UPDBUFFR(,@02)                                  0279
         ST    @02,IOPBUFAD(,IOPPTR)                               0279
*       ELSE                        /*                               */
*         IOPBUFAD=ADDR(DIRBUFFR);  /* INTO BUFFER                   */
         B     @RC00278                                            0280
@RF00278 L     @02,GMBFRPTR                                        0280
         LA    @02,DIRBUFFR(,@02)                                  0280
         ST    @02,IOPBUFAD(,IOPPTR)                               0280
*       CALL HMASMIO(HMASMIOP);     /* DO READ                       */
@RC00278 ST    IOPPTR,@AL00001                                     0281
         L     @15,@CV01278                                        0281
         LA    @01,@AL00001                                        0281
         BALR  @14,@15                                             0281
*       GETRTNCD=IOPRETRN;          /* UPDATE RETURN CODE            */
         SLR   GETRTNCD,GETRTNCD                                   0282
         IC    GETRTNCD,IOPRETRN(,IOPPTR)                          0282
*       IF IOPRETRN=IOPGOOD         /* IF BLOCK READ                 */
*         THEN                      /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0283
         BNE   @RF00283                                            0283
*         DO;                       /*                               */
*           ENTPTR=ADDR(DIRDATA);   /* PTR TO ENTRY                  */
         L     @05,GMBFRPTR                                        0285
         LA    @02,DIRDATA(,@05)                                   0285
         ST    @02,ENTPTR(,@05)                                    0285
*           REMLEN=DIRLEN-LENGTH(DIRLEN);/* LENGTH OF DATA IN BLOCK  */
         LH    @15,DIRLEN(,@05)                                    0286
         BCTR  @15,0                                               0286
         BCTR  @15,0                                               0286
         STH   @15,REMLEN(,@05)                                    0286
*           BLKALLOC=BLKALLOC+1;    /* ALLOCATED COUNT               */
         LA    @15,1                                               0287
         L     @14,BLKALLOC(,@05)                                  0287
         ALR   @14,@15                                             0287
         ST    @14,BLKALLOC(,@05)                                  0287
*           IF ENTNAME^=HEX8F       /* IF FIRST ENTRY NOT            */
*             THEN                  /* EOF THEN UPDATE               */
         CLC   ENTNAME(8,@02),HEX8F                                0288
         BE    @RF00288                                            0288
*             BLKUSED=BLKUSED+1;    /* BLOCK USED COUNT              */
         AL    @15,BLKUSED(,@05)                                   0289
         ST    @15,BLKUSED(,@05)                                   0289
*         END;                      /*                               */
@RF00288 DS    0H                                                  0291
*     END;                          /*                               */
@RF00283 DS    0H                                                  0292
*                                                                  0292
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PREVIOUS FUNCTIONS OK THEN CHECK ENTRY IN BUFFER AND RETURN*/
*   /* TO CALLER                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0292
*   IF GETRTNCD=RDPGOOD             /* IF PREVIOUS FUNCTION OK       */
*     THEN                          /*                               */
@RF00274 CH    GETRTNCD,@CH00054                                   0292
         BNE   @RF00292                                            0292
*     DO;                           /* THEN                          */
*                                                                  0293
*       /*************************************************************/
*       /*                                                           */
*       /* IF ENTRY IS NOT EOF MOVE IT TO USERS AREA                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0294
*       IF ENTNAME^=HEX8F           /* IF NOT EOF                    */
*         THEN                      /* THEN                          */
         L     @05,GMBFRPTR                                        0294
         L     @05,ENTPTR(,@05)                                    0294
         CLC   ENTNAME(8,@05),HEX8F                                0294
         BE    @RF00294                                            0294
*         DO;                       /*                               */
*           MVLEN=LENGTH(ENTNAME)   /* CALC ENTRY LENGTH             */
*               +LENGTH(ENTTTR)     /*                               */
*               +LENGTH(ENTLEN)     /*                               */
*               +((ENTLEN&NOALIAS)*2);/*                             */
         L     @02,GMBFRPTR                                        0296
         L     @02,ENTPTR(,@02)                                    0296
         LA    MVLEN,31                                            0296
         SLR   @15,@15                                             0296
         IC    @15,ENTLEN(,@02)                                    0296
         NR    MVLEN,@15                                           0296
         ALR   MVLEN,MVLEN                                         0296
         AH    MVLEN,@CH00058                                      0296
*           USRBUFFR(1:MVLEN)=DIRENT(1:MVLEN);/* MOVE ENTRY          */
         L     @15,@PC00001                                        0297
         L     @15,RDPBUFAD(,@15)                                  0297
         LR    @14,MVLEN                                           0297
         BCTR  @14,0                                               0297
         EX    @14,@SM01332                                        0297
*           IF ENTALIS=ON           /* IF THIS IS ALIAS TYPE MEMBER  */
*             THEN                  /* THEN SET EOF IN CASE THIS IS  */
         TM    ENTALIS(@02),B'10000000'                            0298
         BNO   @RF00298                                            0298
*             USRBUFFR(MVLEN+1)=IOPEOLST;/* DIRECTORY ONLY TYPE ENTRY
*                                      AND CALLING MODULE EXPECTS  0299
*                                      EOLST TO BE THERE AS IT WOULD
*                                      IF LOC WAS DONE               */
         LA    @02,255                                             0299
         STC   @02,USRBUFFR(MVLEN,@15)                             0299
*           ENTPTR=ENTPTR+MVLEN;    /* PTR TO NEXT ENTRY             */
@RF00298 L     @02,GMBFRPTR                                        0300
         LR    @15,MVLEN                                           0300
         AL    @15,ENTPTR(,@02)                                    0300
         ST    @15,ENTPTR(,@02)                                    0300
*           REMLEN=REMLEN-MVLEN;    /* DATA LEFT                     */
         LH    @15,REMLEN(,@02)                                    0301
         SLR   @15,MVLEN                                           0301
         STH   @15,REMLEN(,@02)                                    0301
*         END;                      /* END NOT EOF MEMBER            */
*                                                                  0302
*       /*************************************************************/
*       /*                                                           */
*       /* IF ENTYR IS EOF CHECK TO SEE IF USER WANTS ALLOCATED BLOCK*/
*       /* COUNT                                                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0303
*       ELSE                        /* IF EOF MEMBER                 */
*         DO;                       /*                               */
         B     @RC00294                                            0303
@RF00294 DS    0H                                                  0304
*           GETRTNCD=RDPEOF;        /* SET RETURN CODE               */
         LA    GETRTNCD,4                                          0304
*           IF RDPFUNCT=RDPGETNC    /* IF ALLOCATED COUNT            */
*             THEN                  /* NEEDED                        */
         L     @05,@PC00001                                        0305
         CLI   RDPFUNCT(@05),2                                     0305
         BNE   @RF00305                                            0305
*             DO;                   /* THEN                          */
*               CALL RDSRDEOF;      /* READ TILL END OF FILE         */
         BAL   @14,RDSRDEOF                                        0307
*               RFY                                                0308
*                 RTNCODE RSTD;     /*                               */
*               GETRTNCD=MAX(GETRTNCD,RTNCODE);/* UPDATE RETURNE CODE*/
         CR    GETRTNCD,RTNCODE                                    0309
         BNL   *+6
         LR    GETRTNCD,RTNCODE                                    0309
*               RFY                                                0310
*                 RTNCODE UNRSTD;   /*                               */
*             END;                  /*                               */
*         END;                      /*                               */
@RF00305 DS    0H                                                  0313
*     END;                          /* END ENTRY FOUND OK            */
*                                                                  0313
@RC00294 DS    0H                                                  0314
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN WITH CODE SET UP                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0314
*   RETURN CODE(GETRTNCD);          /*                               */
@RF00292 LR    @15,GETRTNCD                                        0314
         L     @14,@SA00004                                        0314
         LM    @00,@12,@SA00004+8                                  0314
         BR    @14                                                 0314
*   END RDSGET;                     /*                               */
         EJECT
*                                                                  0316
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO READ THE REMAINING DIRECTORY BLOCKS */
*   /* TILL EOF. IT SETS THE TWO COUNTS IN THE PARAMETER LIST        */
*   /* INDICATING BLOCKS ALLOCATED AND USED                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*RDSRDEOF:                          /*                               */
*   PROCEDURE;                      /*                               */
*                                                                  0316
RDSRDEOF STM   @14,@12,@SA00005                                    0316
*   /*****************************************************************/
*   /*                                                               */
*   /* SET USED COUNT IN PARM                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0317
*   RDPUSED=BLKUSED;                /*                               */
*                                                                  0317
         L     @02,@PC00001                                        0317
         L     @01,GMBFRPTR                                        0317
         MVC   RDPUSED(4,@02),BLKUSED(@01)                         0317
*   /*****************************************************************/
*   /*                                                               */
*   /* READ TILL EOF                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0318
*   IOPFUNCT=IOPREAD;               /* SET TO READ                   */
         MVI   IOPFUNCT(IOPPTR),X'01'                              0318
*   IOPDSID=DSID;                   /* SPECIFIED DIRECTORY   @Z67SP00*/
         MVC   IOPDSID(1,IOPPTR),DSID                              0319
*   DO UNTIL IOPRETRN^=IOPGOOD;     /*                               */
@DL00320 DS    0H                                                  0321
*     CALL HMASMIO(HMASMIOP);       /* DO READ                       */
         ST    IOPPTR,@AL00001                                     0321
         L     @15,@CV01278                                        0321
         LA    @01,@AL00001                                        0321
         BALR  @14,@15                                             0321
*     BLKALLOC=BLKALLOC+1;          /* INCR ALLOCATED COUNT          */
         L     @02,GMBFRPTR                                        0322
         LA    @15,1                                               0322
         AL    @15,BLKALLOC(,@02)                                  0322
         ST    @15,BLKALLOC(,@02)                                  0322
*   END;                            /* END READ AT EOF               */
@DE00320 CLI   IOPRETRN(IOPPTR),0                                  0323
         BE    @DL00320                                            0323
*   RDPALLOC=BLKALLOC-1;            /* ALLOCATED COUNT MINUS 1 FOR 0324
*                                      EXTRA READ TO GET EOF RETURN  */
         L     @02,@PC00001                                        0324
         L     @01,GMBFRPTR                                        0324
         L     @15,BLKALLOC(,@01)                                  0324
         BCTR  @15,0                                               0324
         ST    @15,RDPALLOC(,@02)                                  0324
*   RETURN CODE(IOPRETRN);          /*                               */
         SLR   @15,@15                                             0325
         IC    @15,IOPRETRN(,IOPPTR)                               0325
         L     @14,@SA00005                                        0325
         LM    @00,@12,@SA00005+8                                  0325
         BR    @14                                                 0325
*   END RDSRDEOF;                   /*                               */
         EJECT
*                                                                  0327
*   /*****************************************************************/
*   /*                                                               */
*   /* ROUTINE CALLED TO FREE GETMAIN WORK RAEA              @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0327
*RDSDELGM:                          /*                       @Z67SP00*/
*   PROCEDURE;                      /*                       @Z67SP00*/
RDSDELGM STM   @14,@12,@SA00006                                    0327
*   IF GMBFRPTR^=ZERO               /* IF AREA EXISTS        @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         L     @15,GMBFRPTR                                        0328
         SLR   @14,@14                                             0328
         CR    @15,@14                                             0328
         BE    @RF00328                                            0328
*     DO;                           /*                       @Z67SP00*/
*       GMPREV->GMNEXT=GMNEXT;      /* SET PREV NEXT PTR TO THE NEXT
*                                      PTR IN CURRENT BLOCK  @Z67SP00*/
         L     @11,GMPREV(,@15)                                    0330
         L     @10,GMNEXT(,@15)                                    0330
         ST    @10,GMNEXT(,@11)                                    0330
*       IF GMNEXT^=ZERO             /* IF THERE IS NEXT      @Z67SP00*/
*         THEN                      /*                       @Z67SP00*/
         CR    @10,@14                                             0331
         BE    @RF00331                                            0331
*         GMNEXT->GMPREV=GMPREV;    /* SET NEXT PREV PTR TO THE PREV
*                                      PTR IN CURRENT BLOCK  @Z67SP00*/
         ST    @11,GMPREV(,@10)                                    0332
*       GMADDR=GMBFRPTR;            /* PTR TO AREA TO FREE   @Z67SP00*/
@RF00331 MVC   GMADDR(4),GMBFRPTR                                  0333
*       RFY                                                        0334
*         SIZE RSTD;                /*                       @Z67SP00*/
*       SIZE=LENGTH(RDSGMBFR);      /* SIZE OF AREA          @Z67SP00*/
         LA    SIZE,288                                            0335
*       GEN(FREEMAIN  E,LV=(SIZE),A=GMADDR)                        0336
*       REFS(SIZE,GMADDR);          /* FREE AREA             @Z67SP00*/
         FREEMAIN  E,LV=(SIZE),A=GMADDR
*       RFY                                                        0337
*         SIZE UNRSTD;              /*                       @Z67SP00*/
*     END;                          /*                       @Z67SP00*/
*   RETURN CODE(ZERO);              /*                       @Z67SP00*/
@RF00328 SLR   @15,@15                                             0339
         L     @14,@SA00006                                        0339
         LM    @00,@12,@SA00006+8                                  0339
         BR    @14                                                 0339
*   END RDSDELGM;                   /*                       @Z67SP00*/
*   END HMASMRDS                    /* END READ MODULE               */
*                                                                  0341
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMRDP)                                       */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*                                                                  0341
*       ;                                                          0341
@DATA    DS    0H
@CH00054 DC    H'0'
@CH00048 DC    H'1'
@CH00052 DC    H'3'
@CH00058 DC    H'12'
@CH01328 DC    H'288'
@SM01332 MVC   USRBUFFR(0,@15),DIRENT(@02)
         DS    0F
@AL00247 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00006 DS    15F
@SA00005 DS    0F
         DS    15F
@AL00001 DS    1A
         DS    0F
@CA00061 DC    A(HMASMCCA)
@CV01278 DC    V(HMASMIO)
@CV01279 DC    V(HMASMMSG)
         DS    0D
GMADDR   DC    A(0)
GMBFRPTR DS    A
DSID     DS    FL1
         DS    CL3
HMASMMGP DS    CL24
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00172 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00173 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL12
         ORG   MGPVAR
MGPVARPT DS    3A
         ORG   HMASMMGP+24
RDSSW    DS    BL1
         ORG   RDSSW
DISOSW   DS    BL1
@NM00174 EQU   RDSSW+0
         ORG   RDSSW+1
RDSIOP   DS    CL68
         DS    CL1
PATCHRDS DS    CL80
         ORG   PATCHRDS
@NM00176 DC    80X'FF'
         ORG   PATCHRDS+80
HEX8F    DS    CL8
         ORG   HEX8F
@NM00177 DC    8X'FF'
         ORG   HEX8F+8
         DS    CL2
GMINIT   DS    CL8
         ORG   GMINIT
GMPINIT  DC    A(0)
GMNINIT  DC    A(0)
         ORG   GMINIT+8
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
GETRTNCD EQU   @04
PREVPTR  EQU   @05
ADDX     EQU   @04
ADDRC    EQU   @03
VERRTNCD EQU   @03
MVLEN    EQU   @05
IOPPTR   EQU   @03
SIZE     EQU   @02
RTNCODE  EQU   @15
         EXTRN HMASMCCA
CCABLDLA EQU   0
@NM00026 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00028 EQU   CCABLDLL
CCALKDRC EQU   @NM00028+20
@NM00030 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00030+20
@NM00032 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00032+20
@NM00034 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00034+20
@NM00036 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00036+20
@NM00038 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00038+20
@NM00040 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00040+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPNAME  EQU   HMASMIOP+4
@NM00044 EQU   HMASMIOP+12
@NM00045 EQU   @NM00044
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00155 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
USRBUFFR EQU   0
DIRENT   EQU   0
ENTNAME  EQU   DIRENT
ENTTTR   EQU   DIRENT+8
ENTLEN   EQU   DIRENT+11
ENTALIS  EQU   ENTLEN
RDSGMBFR EQU   0
GMPREV   EQU   RDSGMBFR
GMNEXT   EQU   RDSGMBFR+4
BLKUSED  EQU   RDSGMBFR+8
BLKALLOC EQU   RDSGMBFR+12
ENTPTR   EQU   RDSGMBFR+16
REMLEN   EQU   RDSGMBFR+20
GMDSID   EQU   RDSGMBFR+22
GMRDSSW  EQU   RDSGMBFR+23
FIRST    EQU   GMRDSSW
UPDBUFFR EQU   RDSGMBFR+24
DIRBUFFR EQU   UPDBUFFR+8
DIRLEN   EQU   DIRBUFFR
DIRDATA  EQU   DIRBUFFR+2
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00010 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCACDSOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
HMASMRDP EQU   0
RDPDSID  EQU   HMASMRDP
RDPFUNCT EQU   HMASMRDP+1
RDPRETRN EQU   HMASMRDP+2
RDPBUFAD EQU   HMASMRDP+4
RDPALLOC EQU   HMASMRDP+16
RDPUSED  EQU   HMASMRDP+20
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00051 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00062 EQU   IOPUDATA
@NM00063 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00072 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00083 EQU   IOPSRCDR+1
@NM00085 EQU   @NM00083+7
@NM00089 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00093 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00099 EQU   IOPMODDR+1
@NM00101 EQU   @NM00099+7
@NM00105 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00109 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00120 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00127 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00136 EQU   IOPPTFFX
@NM00137 EQU   @NM00136
IOPPDTES EQU   IOPPTFFX+41
@NM00140 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00165 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00165
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00169 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00169
IOPBFTB1 EQU   IOPBFTB0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00171 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00170 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00168 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00167 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00166 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00164 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00163 EQU   IOPPTSFX+35
@NM00162 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00161 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00160 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00159 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00158 EQU   IOPQFMDR
@NM00154 EQU   IOPQSMDR
@NM00153 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00152 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00151 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00150 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00149 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00148 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00147 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00146 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00145 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00144 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00143 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00142 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00141 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00140+3
IOPRECD  EQU   @NM00140
@NM00139 EQU   IOPPTFFX+8
@NM00138 EQU   @NM00136+7
IOPPRELN EQU   @NM00137
@NM00135 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00134 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00133 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00132 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00131 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00130 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00129 EQU   @NM00127+7
@NM00128 EQU   @NM00127
@NM00126 EQU   IOPSYSDR+5
@NM00125 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00124 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00123 EQU   IOPDLBFX+8
@NM00122 EQU   @NM00120+7
@NM00121 EQU   @NM00120
@NM00119 EQU   IOPDLBDR+1
@NM00118 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00117 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00116 EQU   IOPMODFX+12
@NM00115 EQU   IOPMODF4
@NM00114 EQU   IOPMODF3
@NM00113 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00112 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00111 EQU   @NM00109+7
@NM00110 EQU   @NM00109
@NM00108 EQU   IOPMODDR+17
@NM00107 EQU   @NM00105+7
@NM00106 EQU   @NM00105
@NM00104 EQU   @NM00101
@NM00103 EQU   @NM00101
@NM00102 EQU   @NM00101
@NM00100 EQU   @NM00099
@NM00098 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00097 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00096 EQU   IOPSRCFX+8
@NM00095 EQU   @NM00093+7
@NM00094 EQU   @NM00093
@NM00092 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00091 EQU   @NM00089+7
@NM00090 EQU   @NM00089
@NM00088 EQU   @NM00085
@NM00087 EQU   @NM00085
@NM00086 EQU   @NM00085
@NM00084 EQU   @NM00083
@NM00082 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00081 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00080 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00079 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00078 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00077 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00076 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00074 EQU   @NM00072+7
@NM00073 EQU   @NM00072
@NM00071 EQU   IOPLMDDR+6
@NM00070 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00069 EQU   IOPLMDF4
@NM00068 EQU   IOPLMDF3
@NM00067 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00066 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00065 EQU   IOPLMDDR
@NM00064 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00063+4
IOPUSED  EQU   @NM00063
IOPTPSEQ EQU   @NM00062+8
IOPVLSER EQU   @NM00062+2
IOPBLKSI EQU   @NM00062
IOPCQMAX EQU   IOPCQMAP+12
@NM00061 EQU   IOPCQMAP+11
@NM00060 EQU   IOPCQMAP+8
@NM00059 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00058 EQU   IOPSCMAP+11
@NM00057 EQU   IOPSCMAP+8
@NM00056 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00055 EQU   IOPNTMAX+11
@NM00054 EQU   IOPNTMAX+8
@NM00053 EQU   IOPNTMAX
@NM00052 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00051+5
IOPIPTF3 EQU   @NM00051
RDPTYPE  EQU   HMASMRDP+24
RDPENTS  EQU   HMASMRDP+12
RDPWKAD  EQU   HMASMRDP+8
@NM00001 EQU   HMASMRDP+3
CCAEND   EQU   HMASMCCA+371
@NM00025 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00024 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00023 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00022 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00021 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00020 EQU   CCAFLAG5
@NM00019 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00018 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00017 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00015 EQU   @NM00010+18
@NM00014 EQU   @NM00010+16
CCATBLPA EQU   @NM00010+12
@NM00013 EQU   @NM00010+8
@NM00012 EQU   @NM00010+4
@NM00011 EQU   @NM00010
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00009 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
CCAIOPTR EQU   CCAFIOP
@NM00008 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00007 EQU   CCAFBUFR+122
@NM00006 EQU   CCAFBUFR+120
@NM00005 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00004 EQU   CCAFBUFR+88
@NM00003 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00002 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
@NM00179 EQU   UPDBUFFR
@NM00178 EQU   GMRDSSW
ENTDATA  EQU   DIRENT+12
@NM00175 EQU   ENTLEN
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00157 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00156 EQU   @NM00155+7
IOPQSMFM EQU   @NM00155
@NM00075 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00050 EQU   IOPUSERL
@NM00049 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00048 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00047 EQU   @NM00044+10
IOPSEQNO EQU   @NM00044+8
@NM00046 EQU   @NM00045+7
IOPPTFNM EQU   @NM00045
IOPNAM17 EQU   IOPNAME
IOPTYPE  EQU   HMASMIOP+3
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00043 EQU   CCABLDLM+2
@NM00042 EQU   CCABLDLM
CCAUPDPM EQU   @NM00040+24
@NM00041 EQU   @NM00040+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00040+12
CCAUPDTE EQU   @NM00040+8
CCAUPDNM EQU   @NM00040
CCASUPPM EQU   @NM00038+24
@NM00039 EQU   @NM00038+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00038+12
CCAIOSUP EQU   @NM00038+8
CCASUPNM EQU   @NM00038
CCAZAPPM EQU   @NM00036+24
@NM00037 EQU   @NM00036+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00036+12
CCASPZAP EQU   @NM00036+8
CCAZAPNM EQU   @NM00036
CCACOMPM EQU   @NM00034+24
@NM00035 EQU   @NM00034+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00034+12
CCACOMRS EQU   @NM00034+8
CCACOMNM EQU   @NM00034
CCACPYPM EQU   @NM00032+24
@NM00033 EQU   @NM00032+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00032+12
CCACOPY  EQU   @NM00032+8
CCACPYNM EQU   @NM00032
CCAASMPM EQU   @NM00030+24
@NM00031 EQU   @NM00030+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00030+12
CCAASM   EQU   @NM00030+8
CCAASMNM EQU   @NM00030
CCALKDPM EQU   @NM00028+24
@NM00029 EQU   @NM00028+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00028+12
CCALKED  EQU   @NM00028+8
CCALKDNM EQU   @NM00028
CCAPGMPM EQU   @NM00026+24
@NM00027 EQU   @NM00026+21
CCABPGRC EQU   @NM00026+20
CCABPGSP EQU   @NM00026+12
CCABPGAD EQU   @NM00026+8
CCABPGNM EQU   @NM00026
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00172 EQU   @EL00001
@RF00191 EQU   @RC00188
@RF00199 EQU   @RC00196
@RF00209 EQU   @RC00206
@RF00215 EQU   @RC00212
@ENDDATA EQU   *
         END   HMASMRDS,(C'PLS2109',0802,78334)
