         TITLE 'HMASMREJ - SMP REJECT ROUTINE'
HMASMREJ CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMREJ  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*   REJRTNCD=ZERO;                  /* INITIALIZE RETURN CODE        */
         SLR   REJRTNCD,REJRTNCD                                   0165
*   REJBITS=''B;                    /* INITIALIZE THE REJECT BITS    */
         MVI   REJBITS,X'00'                                       0166
*   IOPPTR=CCAIOPTR;                /* INITIALIZE IOP POINTER        */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0167
*   REJRCD=''B;                     /* INITIALIZE THE REJRCD         */
         XC    REJRCD(38),REJRCD                                   0168
*   RLFPRE='';                      /* INITIALIZE RELFILE PREFIX     */
         MVI   RLFPRE,C' '                                         0169
         MVC   RLFPRE+1(25),RLFPRE                                 0169
*   FMIDDEL=N;                      /* INITIALIZE FMID DELETE        */
         MVC   FMIDDEL(1),N                                        0170
*   REJGTP=''B;                     /* ZERO THE REJECT GTP PARM      */
         XC    REJGTP(28),REJGTP                                   0171
*   HMASMMGP=''B;                   /* ZERO THE MESSAGE PARM         */
         XC    HMASMMGP(28),HMASMMGP                               0172
*   MGPPRINT=ON;                    /* ROUTE MESSAGES TO THE PRINTER */
*   MGPHLDS=ON;                     /* ROUTE MESSAGES TO THE SMPLOG  */
*                                                                  0174
         OI    MGPPRINT,B'10010000'                                0174
*   /*****************************************************************/
*   /*                                                               */
*   /* IF IN MASS OR EXCLUDE MODE CLOSE THE SMPPTS DCB BY CALLING    */
*   /* HMASMIO. THIS IS DONE FOR THE UPCOMING SEQUENTIAL READ        */
*   /* OPERATION                                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0175
*   IF TBLMASS=ON×TBLEXC=ON THEN                                   0175
         L     @10,@PC00001                                        0175
         TM    TBLMASS(@10),B'01000001'                            0175
         BZ    @RF00175                                            0175
*     DO;                           /*                               */
*       IOPDSID=IOPPTS;             /*                               */
         MVI   IOPDSID(IOPPTR),X'06'                               0177
*       IOPFUNCT=IOPCLOSN;          /*                               */
         MVI   IOPFUNCT(IOPPTR),X'0C'                              0178
*       CALL HMASMIO(HMASMIOP);     /* CLOSE SMPPTS DCB FOR        0179
*                                      SEQUENTIAL DIRECTORY READ     */
         ST    IOPPTR,@AL00001                                     0179
         L     @15,@CV01386                                        0179
         LA    @01,@AL00001                                        0179
         BALR  @14,@15                                             0179
*       REJRTNCD=MAX(REJRTNCD,IOPRETRN);/* SAVE THE RETURN CODE      */
         SLR   @10,@10                                             0180
         IC    @10,IOPRETRN(,IOPPTR)                               0180
         CR    REJRTNCD,@10                                        0180
         BNL   *+6
         LR    REJRTNCD,@10                                        0180
*     END;                          /*                               */
*                                                                  0181
*   /*****************************************************************/
*   /*                                                               */
*   /* IF IN SELECT MODE HMASMGTA IS CALLED TO PREPARE THE SET GTA   */
*   /* FILE FOR SEQUENTIAL READ                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0182
*   ELSE                                                           0182
*     DO;                           /* IS THE SELECT BIT ON??        */
         B     @RC00175                                            0182
@RF00175 DS    0H                                                  0183
*       GTPBUFAD=ADDR(HMASMSET);    /* YES                           */
         L     @10,CCASEGTP(,CCAPTR)                               0183
         LA    @05,HMASMSET                                        0183
         ST    @05,GTPBUFAD(,@10)                                  0183
*       GTPFUNCT=GTPOPENN;          /*                               */
         MVI   GTPFUNCT(@10),X'01'                                 0184
*       CALL HMASMGTA(HMASMGTP);    /* DO A GTP OPEN                 */
         ST    @10,@AL00001                                        0185
         L     @15,@CV01388                                        0185
         LA    @01,@AL00001                                        0185
         BALR  @14,@15                                             0185
*       REJRTNCD=MAX(REJRTNCD,GTPRETRN);/* SAVE THE RETURN CODE      */
         L     @10,CCASEGTP(,CCAPTR)                               0186
         SLR   @05,@05                                             0186
         IC    @05,GTPRETRN(,@10)                                  0186
         CR    REJRTNCD,@05                                        0186
         BNL   *+6
         LR    REJRTNCD,@05                                        0186
*     END;                          /*                               */
*                                                                  0188
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO DO SYSMOD SELECTION AND BUILD GTA FIKE USED TO*/
*   /* CONTROL ACTUAL REJECT PROCES                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0188
*   IF REJRTNCD=ZERO                /*                               */
*     THEN                          /*                               */
@RC00175 CH    REJRTNCD,@CH00297                                   0188
         BNE   @RF00188                                            0188
*     DO;                           /*                               */
*       CALL REJSEL;                /*                               */
         BAL   @14,REJSEL                                          0190
*       RFY                         /*                               */
*         RTNCODE RSTD;             /*                               */
*       REJRTNCD=MAX(REJRTNCD,RTNCODE);/*                            */
         CR    REJRTNCD,RTNCODE                                    0192
         BNL   *+6
         LR    REJRTNCD,RTNCODE                                    0192
*       RFY                         /*                               */
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0194
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO DO THE REJECTION OF THE REJECTABLE ELEMENTS   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0195
*   IF REJRTNCD<STOPFUNC            /*                               */
*     THEN                          /*                               */
@RF00188 CH    REJRTNCD,@CH00224                                   0195
         BNL   @RF00195                                            0195
*     DO;                           /*                               */
*       IF SMDREJ=ON                /* IF ANY THING REJECTABLE       */
*         THEN                      /*                               */
         TM    SMDREJ,B'10000000'                                  0197
         BNO   @RF00197                                            0197
*         DO;                       /*                               */
*           CALL REJDEL;                                           0199
         BAL   @14,REJDEL                                          0199
*           RFY                                                    0200
*             RTNCODE RSTD;                                        0200
*           REJRTNCD=MAX(REJRTNCD,RTNCODE);                        0201
         CR    REJRTNCD,RTNCODE                                    0201
         BNL   *+6
         LR    REJRTNCD,RTNCODE                                    0201
*           RFY                                                    0202
*             RTNCODE UNRSTD;                                      0202
*         END;                      /*                               */
*       ELSE                        /*                               */
*         DO;                       /*                               */
         B     @RC00197                                            0204
@RF00197 DS    0H                                                  0205
*           MGPCLEAR=''B;           /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0205
*           MGPMGNO1=HMA248I;       /* THE XXXXXXXX FUNCTION WAS   0206
*                                      REQUESTED - NO SYSMODS MEET 0206
*                                      SPECIFICATIONS                */
         MVC   MGPMGNO1(2),@CH01399                                0206
*           MGPVARPT(1)=ADDR(CCAFUNCT);/*                            */
         LA    @10,CCAFUNCT(,CCAPTR)                               0207
         ST    @10,MGPVARPT                                        0207
*           MGPTYPE=MGPSEV;         /*                               */
         MVI   MGPTYPE,X'04'                                       0208
*           CALL HMASMMSG(HMASMMGP);/*                               */
         L     @15,@CV01391                                        0209
         LA    @01,@AL00209                                        0209
         BALR  @14,@15                                             0209
*           REJRTNCD=STOPFUNC;      /* RC=12 IF NO SYSMODS           */
         LA    REJRTNCD,12                                         0210
*         END;                      /*                               */
*     END;                                                         0212
*                                                                  0212
@RC00197 DS    0H                                                  0213
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL ROUTINE TO DO CLEANUP AND COMPRESS OF DATASETS           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0213
*   CALL REJCLEAN;                                                 0213
@RF00195 BAL   @14,REJCLEAN                                        0213
*   RFY                                                            0214
*     RTNCODE RSTD;                                                0214
*   REJRTNCD=MAX(REJRTNCD,RTNCODE);                                0215
         CR    REJRTNCD,RTNCODE                                    0215
         BNL   *+6
         LR    REJRTNCD,RTNCODE                                    0215
*   RFY                                                            0216
*     RTNCODE UNRSTD;                                              0216
*   RETURN CODE(REJRTNCD);                                         0217
         LR    @15,REJRTNCD                                        0217
         L     @13,4(,@13)                                         0217
         L     @14,12(,@13)                                        0217
         LM    @00,@12,20(@13)                                     0217
         BR    @14                                                 0217
         EJECT
*                                                                  0218
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSMOD SELECTION ROUTINE                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0218
*REJSEL:                                                           0218
*   PROCEDURE;                      /*                               */
REJSEL   STM   @14,@12,@SA00002                                    0218
*   RFY                                                            0219
*     HMASMIOP BASED(IOPPTR);       /* RE-BASE THE IOP FOR A CALL TO
*                                      HMASMIO                       */
*   RFY                                                            0220
*     HMASMGTP BASED(CCASEGTP);     /* RE-BASE THE GTP FOR A CALL TO
*                                      HMASMGTA                      */
*   DECLARE                                                        0221
*     SELRC FIXED(8);               /* RETURN CODE AREA FOR ROUTINE  */
*   SELRC=ZERO;                     /* INITIALIZE RETURN CODE AREA   */
*                                                                  0222
         SLR   SELRC,SELRC                                         0222
*   /*****************************************************************/
*   /*                                                               */
*   /* LOOP THRU READING DIRECTORY OR SET FILE UNTIL EOF. FOR EACH   */
*   /* SYSMOD ELIGIBLE TO REJECT BUILD GTA FILE RECORD               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0223
*   DO WHILE(                       /*                               */
*         SELRC<STOPFUNC            /*                               */
*         &EOFFND=OFF);             /*                               */
         B     @DE00223                                            0223
@DL00223 DS    0H                                                  0224
*     SKIP=OFF;                     /*                               */
*                                                                  0224
         NI    SKIP,B'10111111'                                    0224
*     /***************************************************************/
*     /*                                                             */
*     /* IF IN MASS OR EXCLUDE MODE GET DIRECTORY ENTRY FROM THE     */
*     /* SMPPTS                                                      */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0225
*     IF TBLMASS=ON×TBLEXC=ON THEN                                 0225
         L     @10,@PC00001                                        0225
         TM    TBLMASS(@10),B'01000001'                            0225
         BZ    @RF00225                                            0225
*       DO;                         /*                               */
*         IOPDSID=IOPPTS;           /*                               */
         MVI   IOPDSID(IOPPTR),X'06'                               0227
*         IOPFUNCT=IOPGETN;         /*                               */
         MVI   IOPFUNCT(IOPPTR),X'0A'                              0228
*         CALL HMASMIO(HMASMIOP);   /*                               */
         ST    IOPPTR,@AL00001                                     0229
         L     @15,@CV01386                                        0229
         LA    @01,@AL00001                                        0229
         BALR  @14,@15                                             0229
*         IF IOPRETRN=IOPGOOD       /* IF RECORD OBTAINED            */
*             &IOPTYPE=IOPSMD       /* AND SYSMOD TYPE               */
*           THEN                    /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0230
         BNE   @RF00230                                            0230
         CLI   IOPTYPE(IOPPTR),11                                  0230
         BNE   @RF00230                                            0230
*           DO;                     /*                               */
*             IF TBLEXC=ON          /* IF EXCLUDE MODE               */
*               THEN                /*                               */
         L     @10,@PC00001                                        0232
         TM    TBLEXC(@10),B'01000000'                             0232
         BNO   @RF00232                                            0232
*               DO;                 /* SEE IF PTF EXCLUDED           */
*                 RFY                                              0234
*                   HMASMGTP BASED(CCASEGTP);/* RE-BASE HMASMGTP     */
*                 HMASMSET=''B;     /* CLEAR THE SET DATA SET        */
         XC    HMASMSET(12),HMASMSET                               0235
*                 SESMD=ON;         /* SYSMOD TYPE                   */
         OI    SESMD,B'00000001'                                   0236
*                 SENAME=IOPNAME;   /* WHAT IS THE SYSMOD NUMBER     */
         MVC   SENAME(8),IOPNAME(IOPPTR)                           0237
*                 GTPBUFAD=ADDR(HMASMSET);/* DOES SYSMOD MATCH THAT  */
         L     @10,CCASEGTP(,CCAPTR)                               0238
         LA    @15,HMASMSET                                        0238
         ST    @15,GTPBUFAD(,@10)                                  0238
*                 GTPFUNCT=GTPLOC;  /* LOCATED IN HMASMSET??         */
         MVI   GTPFUNCT(@10),X'03'                                 0239
*                 CALL HMASMGTA(HMASMGTP);/* DO LOCATE VIA CALL      */
         ST    @10,@AL00001                                        0240
         L     @15,@CV01388                                        0240
         LA    @01,@AL00001                                        0240
         BALR  @14,@15                                             0240
*                 IF GTPRETRN=GTPGOOD/*                              */
*                   THEN            /*                               */
         L     @10,CCASEGTP(,CCAPTR)                               0241
         CLI   GTPRETRN(@10),0                                     0241
         BNE   @RF00241                                            0241
*                   SKIP=ON;        /* DO NOT DO REJECT PROCESSING   */
         OI    SKIP,B'01000000'                                    0242
*               END;                /*                               */
@RF00241 DS    0H                                                  0244
*             IF(IOPAPP=ON×IOPACC=ON)/* AND APPLIED OR ACCEPTED      */
*               THEN                                               0244
@RF00232 TM    IOPAPP(IOPPTR),B'10100000'                          0244
         BZ    @RF00244                                            0244
*               SKIP=ON;            /*                               */
         OI    SKIP,B'01000000'                                    0245
*           END;                    /*                               */
*         ELSE                      /* IF NO RECORD RETURNED         */
*           IF IOPRETRN=IOPEOF      /* IF END OF FILE                */
*             THEN                                                 0247
         B     @RC00230                                            0247
@RF00230 CLI   IOPRETRN(IOPPTR),4                                  0247
         BNE   @RF00247                                            0247
*             DO;                   /*                               */
*               EOFFND=ON;          /* RETURN FROM I/O IS END OF FILE*/
*               SKIP=ON;            /* DO NOT DO ANY FURTHER       0250
*                                      PROCESSING                    */
         OI    EOFFND,B'01010000'                                  0250
*             END;                  /*                               */
*           ELSE                                                   0252
*             SELRC=MAX(SELRC,IOPRETRN);/* SAVE RC IF IO RETURN CODE
*                                      IS NOT EOF(4)                 */
         B     @RC00247                                            0252
@RF00247 SLR   @10,@10                                             0252
         IC    @10,IOPRETRN(,IOPPTR)                               0252
         CR    SELRC,@10                                           0252
         BNL   *+6
         LR    SELRC,@10                                           0252
*       END;                        /*                               */
*                                                                  0253
*     /***************************************************************/
*     /*                                                             */
*     /* IF IN SELECT MODE GET THE NEXT SYSMOD IN HMASMSET           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0254
*     ELSE                                                         0254
*       DO;                         /*                               */
         B     @RC00225                                            0254
@RF00225 DS    0H                                                  0255
*         RFY                                                      0255
*           HMASMGTP BASED(CCASEGTP);/*                              */
*         GTPBUFAD=ADDR(HMASMSET);  /*                               */
         L     @10,CCASEGTP(,CCAPTR)                               0256
         LA    @15,HMASMSET                                        0256
         ST    @15,GTPBUFAD(,@10)                                  0256
*         GTPFUNCT=GTPGETN;         /*                               */
         MVI   GTPFUNCT(@10),X'08'                                 0257
*         CALL HMASMGTA(HMASMGTP);  /*                               */
         ST    @10,@AL00001                                        0258
         L     @15,@CV01388                                        0258
         LA    @01,@AL00001                                        0258
         BALR  @14,@15                                             0258
*         IF GTPRETRN=GTPGOOD       /* IF NEXT RECORD RETURNED       */
*           THEN                                                   0259
         L     @10,CCASEGTP(,CCAPTR)                               0259
         CLI   GTPRETRN(@10),0                                     0259
         BNE   @RF00259                                            0259
*           DO;                     /*                               */
*             IOPDSID=IOPPTS;       /* SMPPTS DATASET                */
         MVI   IOPDSID(IOPPTR),X'06'                               0261
*             IOPNAME=SESMDNO;      /* SYSMOD NUMBER                 */
         MVI   IOPNAME+7(IOPPTR),C' '                              0262
         MVC   IOPNAME(7,IOPPTR),SESMDNO                           0262
*             IOPTYPE=IOPSMD;       /* SYSTEM ENTRIES                */
         MVI   IOPTYPE(IOPPTR),X'0B'                               0263
*             IOPFUNCT=IOPBLDL;     /* BUILDL FUNCTION               */
         MVI   IOPFUNCT(IOPPTR),X'04'                              0264
*             CALL HMASMIO(HMASMIOP);/*                              */
         ST    IOPPTR,@AL00001                                     0265
         L     @15,@CV01386                                        0265
         LA    @01,@AL00001                                        0265
         BALR  @14,@15                                             0265
*             SELRC=MAX(SELRC,IOPRETRN);/*                           */
         SLR   @10,@10                                             0266
         IC    @10,IOPRETRN(,IOPPTR)                               0266
         CR    SELRC,@10                                           0266
         BNL   *+6
         LR    SELRC,@10                                           0266
*             IF IOPRETRN=IOPNTFND THEN                            0267
         CLI   IOPRETRN(IOPPTR),4                                  0267
         BNE   @RF00267                                            0267
*               DO;                 /*                               */
*                 SKIP=ON;          /*                               */
         OI    SKIP,B'01000000'                                    0269
*                 MGPCLEAR=''B;     /* ZERO MESSAGE PARAMETER        */
         XC    MGPCLEAR(6),MGPCLEAR                                0270
*                 MGPMGNO1=HMA246I; /* XXXXXXXX XXXXXXXX NOT FOUND ON
*                                      XXXXXXX LIBRARY               */
         MVC   MGPMGNO1(2),@CH01397                                0271
*                 MGPVARPT(1)=ADDR(CCATYPEA(IOPSMD));/* SYSMOD       */
         L     @10,CCATPAD(,CCAPTR)                                0272
         LA    @10,CCATYPEA+80(,@10)                               0272
         ST    @10,MGPVARPT                                        0272
*                 MGPVARPT(2)=ADDR(IOPNAME);/* SYSMOD NUMBER         */
         LA    @10,IOPNAME(,IOPPTR)                                0273
         ST    @10,MGPVARPT+4                                      0273
*                 MGPVARPT(3)=ADDR(CCADSIDA(IOPPTS));/* SMPPTS       */
         L     @10,CCADSAD(,CCAPTR)                                0274
         LA    @10,CCADSIDA+40(,@10)                               0274
         ST    @10,MGPVARPT+8                                      0274
*                 MGPTYPE=MGPERR;   /* SEVERITY IS ERROR             */
         MVI   MGPTYPE,X'03'                                       0275
*                 CALL HMASMMSG(HMASMMGP);/*                         */
         L     @15,@CV01391                                        0276
         LA    @01,@AL00276                                        0276
         BALR  @14,@15                                             0276
*                 SELRC=STOPPTF;    /* SET RC TO 8                   */
         LA    SELRC,8                                             0277
*                 MGPCLEAR=''B;     /*                               */
         XC    MGPCLEAR(6),MGPCLEAR                                0278
*                 MGPMGNO1=HMA226I; /* XXXXXXXX PROCESSING TERMINATED*/
         MVC   MGPMGNO1(2),@CH00511                                0279
*                 MGPMGNO2=PART011; /* FOR SYSMOD XXXXXXX            */
         MVC   MGPMGNO2(2),@CH00482                                0280
*                 MGPVARPT(1)=ADDR(CCAFUNCT);/* REJECT               */
         LA    @10,CCAFUNCT(,CCAPTR)                               0281
         ST    @10,MGPVARPT                                        0281
*                 MGPVARPT(2)=ADDR(IOPNAME);/* SYSMOD NUMBER         */
         LA    @10,IOPNAME(,IOPPTR)                                0282
         ST    @10,MGPVARPT+4                                      0282
*                 MGPTYPE=MGPINFO;  /*                               */
         MVI   MGPTYPE,X'01'                                       0283
*                 CALL HMASMMSG(HMASMMGP);/*                         */
         L     @15,@CV01391                                        0284
         LA    @01,@AL00284                                        0284
         BALR  @14,@15                                             0284
*               END;                /*                               */
*           END;                    /*                               */
*         ELSE                                                     0287
*           DO;                     /*                               */
         B     @RC00259                                            0287
@RF00259 DS    0H                                                  0288
*             SKIP=ON;              /*                               */
*             EOFFND=ON;            /* RETURN FROM GTA IS END OF FILE*/
         OI    SKIP,B'01010000'                                    0289
*           END;                    /*                               */
*       END;                        /* END IN SELECT MODE            */
*                                                                  0291
@RC00259 DS    0H                                                  0292
*     /***************************************************************/
*     /*                                                             */
*     /* IF ALL OK WITH SYSMOD SO FAR CALL IO TO EXTEND ENTRY        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0292
*     IF SELRC<STOPFUNC             /* IF PREV FUNCTIONS OK          */
*         &IOPTYPE=IOPSMD           /* AND SYSMOD TYPE ENTRY         */
*         &SKIP=OFF                 /* AND NOT TO BE SKIPPED         */
*       THEN                        /*                               */
@RC00225 CH    SELRC,@CH00224                                      0292
         BNL   @RF00292                                            0292
         CLI   IOPTYPE(IOPPTR),11                                  0292
         BNE   @RF00292                                            0292
         TM    SKIP,B'01000000'                                    0292
         BNZ   @RF00292                                            0292
*       DO;                         /*                               */
*         IOPDSID=IOPPTS;           /*                               */
         MVI   IOPDSID(IOPPTR),X'06'                               0294
*         IOPFUNCT=IOPXTND;         /*                               */
         MVI   IOPFUNCT(IOPPTR),X'07'                              0295
*         CALL HMASMIO(HMASMIOP);   /*                               */
         ST    IOPPTR,@AL00001                                     0296
         L     @15,@CV01386                                        0296
         LA    @01,@AL00001                                        0296
         BALR  @14,@15                                             0296
*         SELRC=MAX(SELRC,IOPRETRN);/*                               */
         SLR   @10,@10                                             0297
         IC    @10,IOPRETRN(,IOPPTR)                               0297
         CR    SELRC,@10                                           0297
         BNL   *+6
         LR    SELRC,@10                                           0297
*       END;                        /*                               */
*                                                                  0298
*     /***************************************************************/
*     /*                                                             */
*     /* ISSUE WARNING MESSAGE AND SET RETURN CODE TO A FOUR IF DOING*/
*     /* A SELECTIVE REJECT OF A SYSMOD THAT HAS BEEN APPLIED BUT HAS*/
*     /* NOT BEEN ACCEPTED OR HAS BEEN ACCEPTED BUT NOT APPLIED.     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0299
*     IF TBLSEL=ON                  /* IF IN SELECT MODE             */
*         &SKIP=OFF                 /* AND NOT TO BE SKIPPED         */
*         &IOPTYPE=IOPSMD           /* AND SYSMOD TYPE               */
*         &((IOPAPP=ON&IOPACC=OFF)  /* AND APP BUT NOT ACC           */
*         ×(IOPACC=ON&IOPAPP=OFF))  /* OR ACC BUT NOT APP            */
*       THEN                                                       0299
@RF00292 L     @10,@PC00001                                        0299
         TM    TBLSEL(@10),B'10000000'                             0299
         BNO   @RF00299                                            0299
         TM    SKIP,B'01000000'                                    0299
         BNZ   @RF00299                                            0299
         CLI   IOPTYPE(IOPPTR),11                                  0299
         BNE   @RF00299                                            0299
         TM    IOPAPP(IOPPTR),B'10000000'                          0299
         BNO   @GL00007                                            0299
         TM    IOPACC(IOPPTR),B'00100000'                          0299
         BZ    @RT00299                                            0299
@GL00007 TM    IOPACC(IOPPTR),B'00100000'                          0299
         BNO   @RF00299                                            0299
         TM    IOPAPP(IOPPTR),B'10000000'                          0299
         BNZ   @RF00299                                            0299
@RT00299 DS    0H                                                  0300
*       DO;                         /*                               */
*         MGPCLEAR=''B;             /* ZERO MESSAGE PARAMETER        */
         XC    MGPCLEAR(6),MGPCLEAR                                0301
*         MGPMGNO1=HMA408I;         /* ISSUE MSG:SYSMOD XXXXXXX NOT
*                                      APPLIED OR NOT ACCEPTED       */
         MVC   MGPMGNO1(2),@CH01402                                0302
*         MGPVARPT(1)=ADDR(SESMDNO);/* SYSMOD NUMBER                 */
         LA    @10,SESMDNO                                         0303
         ST    @10,MGPVARPT                                        0303
*         MGPTYPE=MGPWARN;          /* SEVERITY IS WARN              */
         MVI   MGPTYPE,X'02'                                       0304
*         CALL HMASMMSG(HMASMMGP);                                 0305
         L     @15,@CV01391                                        0305
         LA    @01,@AL00305                                        0305
         BALR  @14,@15                                             0305
*         SELRC=MAX(SELRC,PTFWARN); /*                               */
         LA    @10,4                                               0306
         CR    SELRC,@10                                           0306
         BNL   *+6
         LR    SELRC,@10                                           0306
*       END;                        /*                               */
*                                                                  0307
*     /***************************************************************/
*     /*                                                             */
*     /* SETUP TO BUILD A GTA FILE OF ALL REJECTABLE ELEMENTS        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0308
*     IF SELRC<STOPFUNC             /* IF ALL OK                     */
*         &SKIP=OFF                 /* AND NOT TO BE SKIPPED         */
*         &EOFFND=OFF               /* AND NOT END OF FILE           */
*         &IOPTYPE=IOPSMD           /* AND SYSMOD TYPE ENTRY         */
*       THEN                                                       0308
@RF00299 CH    SELRC,@CH00224                                      0308
         BNL   @RF00308                                            0308
         TM    SKIP,B'01010000'                                    0308
         BNZ   @RF00308                                            0308
         CLI   IOPTYPE(IOPPTR),11                                  0308
         BNE   @RF00308                                            0308
*       DO;                         /*                               */
*         SMDNO=IOPNAM17;           /*                               */
         MVC   SMDNO(7),IOPNAM17(IOPPTR)                           0310
*         RLFNO=IOPPRELN;           /*                               */
         MVC   RLFNO(2),IOPPRELN(IOPPTR)                           0311
*         RLFPRE=IOPPTPFX;          /* PTS SYSTEM FIXED DATA         */
         MVC   RLFPRE(26),IOPPTPFX(IOPPTR)                         0312
*         SMDTYPE=IOPPTYPE;         /*                               */
         MVC   SMDTYPE(1),IOPPTYPE(IOPPTR)                         0313
*         IF IOPPTYPE=IOPPFUNC&IOPAPP=OFF&IOPACC=OFF THEN          0314
         CLI   IOPPTYPE(IOPPTR),4                                  0314
         BNE   @RF00314                                            0314
         TM    IOPAPP(IOPPTR),B'10100000'                          0314
         BNZ   @RF00314                                            0314
*           DO;                     /*                               */
*             FMIDDEL=Y;            /*                               */
         MVC   FMIDDEL(1),Y                                        0316
*             FUNCREJ=ON;           /* TURN REJ BIT ON FOR FUNCTION  */
         OI    FUNCREJ,B'00100000'                                 0317
*           END;                    /*                               */
*         ELSE                                                     0319
*           FMIDDEL=N;              /*                               */
*                                                                  0319
         B     @RC00314                                            0319
@RF00314 MVC   FMIDDEL(1),N                                        0319
*         /***********************************************************/
*         /*                                                         */
*         /* BUILD THE GTA FILE FOR ALL ELIGIBLE SYSMODS. ALSO SET   */
*         /* SYSMOD ELIGIBLE BIT AND IF FUNCTION SET FUNCTION TO     */
*         /* DELETE BIT                                              */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0320
*         RFY                                                      0320
*           HMASMGTP BASED(REJGTPAD);/* POINT TO REJRCD TO BE FREED  */
@RC00314 DS    0H                                                  0321
*         GTPBUFAD=ADDR(REJRCD);    /* ADDRESS OF REJRCD             */
         L     @10,REJGTPAD                                        0321
         LA    @15,REJRCD                                          0321
         ST    @15,GTPBUFAD(,@10)                                  0321
*         GTPKEYLN=LENGTH(SMDNO);   /* SYSMOD NUMBER LENGTH          */
         MVC   GTPKEYLN(2,@10),@CH00086                            0322
*         GTPRCDLN=LENGTH(REJRCD);  /* LENGTH OF REJRCD RECORD       */
         MVC   GTPRCDLN(2,@10),@CH00530                            0323
*         GTPFUNCT=GTPADD;          /*                               */
         MVI   GTPFUNCT(@10),X'04'                                 0324
*         CALL HMASMGTA(HMASMGTP);  /* ADD THE RECORD TO THE GTA FILE*/
         ST    @10,@AL00001                                        0325
         L     @15,@CV01388                                        0325
         LA    @01,@AL00001                                        0325
         BALR  @14,@15                                             0325
*         SELRC=MAX(SELRC,GTPRETRN);/* SAVE THE RETURN CODE          */
         L     @10,REJGTPAD                                        0326
         SLR   @15,@15                                             0326
         IC    @15,GTPRETRN(,@10)                                  0326
         CR    SELRC,@15                                           0326
         BNL   *+6
         LR    SELRC,@15                                           0326
*         SMDREJ=ON;                /* TURN REJECT BIT ON FOR SYSMOD */
         OI    SMDREJ,B'10000000'                                  0327
*       END;                        /*                               */
*   END;                            /* END SYSMOD SELECTION LOOP     */
@RF00308 DS    0H                                                  0329
@DE00223 CH    SELRC,@CH00224                                      0329
         BNL   @DC00223                                            0329
         TM    EOFFND,B'00010000'                                  0329
         BZ    @DL00223                                            0329
@DC00223 DS    0H                                                  0330
*   RETURN CODE(SELRC);             /* RETURN WITH HIGHEST RETUN CODE*/
         LR    @15,SELRC                                           0330
         L     @14,@SA00002                                        0330
         LM    @00,@12,@SA00002+8                                  0330
         BR    @14                                                 0330
*   END REJSEL;                     /*                               */
         EJECT
*                                                                  0332
*   /*****************************************************************/
*   /*                                                               */
*   /* REJECT ROUTINE                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0332
*REJDEL:                            /*                               */
*   PROCEDURE;                      /*                               */
REJDEL   STM   @14,@12,@SA00003                                    0332
*   RFY                                                            0333
*     HMASMIOP BASED(IOPPTR);       /* RE-BASE THE IOP FOR A CALL TO
*                                      HMASMIO                       */
*   RFY                                                            0334
*     HMASMGTP BASED(REJGTPAD);     /* RE-BASE THE GTP FOR A CALL TO
*                                      HMASMGTA                      */
*   DECLARE                                                        0335
*     DELRC FIXED(8);               /*                               */
*   DELRC=ZERO;                     /* INITIALIZE RETURN AREA        */
         SLR   DELRC,DELRC                                         0336
*   DECLARE                                                        0337
*     DELXRC FIXED(8);              /* INTERNAL LOOP RETURN CODES    */
*   DELXRC=ZERO;                    /* INITIALIZE RETURN AREA        */
*                                                                  0338
         SLR   DELXRC,DELXRC                                       0338
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ANY OF THE SYSMODS WERE ELIGIBLE FOR REJECT PROCESSING AND */
*   /* ONE OF THEM WAS A FUNCTION TYPE SYSMOD THEN LOCATE THE SMPPTS */
*   /* SYSTEM ENTRY                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0339
*   IF FUNCREJ=ON                   /* IF SYSMOD ELIGIBLE FOR REJECT */
*     THEN                          /* THEAT WILL CAUSE              */
         TM    FUNCREJ,B'00100000'                                 0339
         BNO   @RF00339                                            0339
*     DO;                           /* PTS SYSTEM ENTRY TO BE UPDATED*/
*       IOPDSID=IOPPTS;             /*                               */
         MVI   IOPDSID(IOPPTR),X'06'                               0341
*       IOPTYPE=IOPSYS;             /* SYSTEM ENTRY                  */
         MVI   IOPTYPE(IOPPTR),X'07'                               0342
*       IOPFUNCT=IOPLOC;            /* FUNCTION IS IOPLOC            */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0343
*       CALL HMASMIO(HMASMIOP);     /* DO LOCATE OF PTS SYSTM ENTRY  */
         ST    IOPPTR,@AL00001                                     0344
         L     @15,@CV01386                                        0344
         LA    @01,@AL00001                                        0344
         BALR  @14,@15                                             0344
*       DELRC=IOPRETRN;             /* SAVE RETURN CODE              */
         SLR   DELRC,DELRC                                         0345
         IC    DELRC,IOPRETRN(,IOPPTR)                             0345
*     END;                          /*                               */
*                                                                  0346
*   /*****************************************************************/
*   /*                                                               */
*   /* PREPARE REJRCD FOR A SEQUENTIAL READ                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0347
*   GTPBUFAD=ADDR(REJRCD);          /*                               */
@RF00339 L     @10,REJGTPAD                                        0347
         LA    @04,REJRCD                                          0347
         ST    @04,GTPBUFAD(,@10)                                  0347
*   GTPRCDLN=LENGTH(REJRCD);        /*                               */
         MVC   GTPRCDLN(2,@10),@CH00530                            0348
*   GTPFUNCT=GTPOPENN;              /*                               */
         MVI   GTPFUNCT(@10),X'01'                                 0349
*   CALL HMASMGTA(HMASMGTP);        /* SEQUENTIALL READ REJRCD       */
         ST    @10,@AL00001                                        0350
         L     @15,@CV01388                                        0350
         LA    @01,@AL00001                                        0350
         BALR  @14,@15                                             0350
*   DELRC=MAX(DELRC,GTPRETRN);      /* SAVE RETURN CODE              */
         L     @10,REJGTPAD                                        0351
         SLR   @04,@04                                             0351
         IC    @04,GTPRETRN(,@10)                                  0351
         CR    DELRC,@04                                           0351
         BNL   *+6
         LR    DELRC,@04                                           0351
*                                                                  0352
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP TO LOOP THROUGH THE REJRCD RECORDS                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0352
*   DO WHILE GTPRETRN=GTPGOOD&DELRC<STOPFUNC;/*                      */
         B     @DE00352                                            0352
@DL00352 DS    0H                                                  0353
*     DELXRC=ZERO;                  /* INTERNAL LOOP RETURN SET TO 0353
*                                      ZERO EACH PASS                */
         SLR   DELXRC,DELXRC                                       0353
*     GTPFUNCT=GTPGETN;             /*                               */
         L     @10,REJGTPAD                                        0354
         MVI   GTPFUNCT(@10),X'08'                                 0354
*     CALL HMASMGTA(HMASMGTP);      /* GET THE NEXT RECORD           */
*                                                                  0355
         ST    @10,@AL00001                                        0355
         L     @15,@CV01388                                        0355
         LA    @01,@AL00001                                        0355
         BALR  @14,@15                                             0355
*     /***************************************************************/
*     /*                                                             */
*     /* CALL ROUTINE TO DO SMPPTS DELETE AND RELFILE PROCESSING PASS*/
*     /* TO THE ROUTINE THE FOLLOWING: 1. THE SYSMOD NUMBER TO BE    */
*     /* DELETED 2. THE RELFILE DATASET PREFIX (BLANK IF NONE) 3. THE*/
*     /* NUMBER OF RELFILES (ZERO IF NONE)                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0356
*     IF GTPRETRN^=GTPEOF THEN                                     0356
         L     @10,REJGTPAD                                        0356
         CLI   GTPRETRN(@10),4                                     0356
         BE    @RF00356                                            0356
*       DO;                         /*                               */
*         CALL HMASMRJD(SMDNO,RLFPRE,RLFNO);/* CALL ROUTINE          */
         L     @15,@CV01389                                        0358
         LA    @01,@AL00358                                        0358
         BALR  @14,@15                                             0358
*         RFY                                                      0359
*           RTNCODE RSTD;           /*                               */
*         DELXRC=MAX(DELXRC,RTNCODE);/*                              */
*                                                                  0360
         CR    DELXRC,RTNCODE                                      0360
         BNL   *+6
         LR    DELXRC,RTNCODE                                      0360
*         /***********************************************************/
*         /*                                                         */
*         /* SETUP FOR DELETION OF FUNCTION ID FROM THE SMPPTS VIA   */
*         /* CALL TO HMASMVLU                                        */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0361
*         IF FMIDDEL=Y THEN                                        0361
         CLC   FMIDDEL(1),Y                                        0361
         BNE   @RF00361                                            0361
*           DO;                     /*                               */
*             HMASMVLP=''B;         /*                               */
         XC    HMASMVLP(52),HMASMVLP                               0363
*             VLPLPTR=ADDR(IOPPTNTR(1));/* IOP LIST TO BE DELETED    */
         LA    @14,IOPPTNTR(,IOPPTR)                               0364
         ST    @14,VLPLPTR                                         0364
*             VLPFMSG=OFF;          /* NO MESSAGE                    */
         NI    VLPFMSG,B'01111111'                                 0365
*             VLPDATA(1:LENGTH(IOPPTFMD))=SMDNO;/* FMID NUMBER       */
         MVC   VLPDATA(7),SMDNO                                    0366
*             VLPTYPE=IOPPTFM;      /* FMID TO BE DELETED            */
         MVI   VLPTYPE,X'01'                                       0367
*             VLPDLEN=LENGTH(IOPPTFMD);/* LEN OF KEY IN VLPDATA      */
         MVI   VLPDLEN,X'07'                                       0368
*             VLPFUNCT=VLPDEL;      /* DELETE ELEMENT FROM LIST      */
         MVI   VLPFUNCT,X'02'                                      0369
*             VLPMTYPE=CCADSIDA(IOPPTS);/* SMPPTS                    */
         L     @14,CCADSAD(,CCAPTR)                                0370
         MVC   VLPMTYPE(8),CCADSIDA+40(@14)                        0370
*             VLPMNAME=CCATYPEA(IOPSYS);/* SYSTEM                    */
         L     @14,CCATPAD(,CCAPTR)                                0371
         MVC   VLPMNAME(8),CCATYPEA+48(@14)                        0371
*             VLPSTYPE=CCATYPEA(IOPFMD);/*                           */
         MVI   VLPSTYPE+8,C' '                                     0372
         MVC   VLPSTYPE+9(7),VLPSTYPE+8                            0372
         MVC   VLPSTYPE(8),CCATYPEA+104(@14)                       0372
*             CALL HMASMVLU(HMASMVLP);/*                             */
         L     @15,@CV01390                                        0373
         LA    @01,@AL00373                                        0373
         BALR  @14,@15                                             0373
*             DELXRC=MAX(DELXRC,VLPRETRN);/*                         */
         SLR   @14,@14                                             0374
         IC    @14,VLPRETRN                                        0374
         CR    DELXRC,@14                                          0374
         BNL   *+6
         LR    DELXRC,@14                                          0374
*             IF VLPRETRN=VLPGOOD   /* IF FMID DELETED OK            */
*               THEN                /*                               */
         CLI   VLPRETRN,0                                          0375
         BNE   @RF00375                                            0375
*               DO;                 /*                               */
*                 IOPFUNCT=IOPSTOWR;/* REPLACE ENTRY                 */
         MVI   IOPFUNCT(IOPPTR),X'54'                              0377
*                 CALL HMASMIO(HMASMIOP);/*                          */
         ST    IOPPTR,@AL00001                                     0378
         L     @15,@CV01386                                        0378
         LA    @01,@AL00001                                        0378
         BALR  @14,@15                                             0378
*                 DELXRC=MAX(DELXRC,IOPRETRN);/*                     */
         SLR   @14,@14                                             0379
         IC    @14,IOPRETRN(,IOPPTR)                               0379
         CR    DELXRC,@14                                          0379
         BNL   *+6
         LR    DELXRC,@14                                          0379
*               END;                /*                               */
*           END;                    /*                               */
@RF00375 DS    0H                                                  0382
*         MGPCLEAR=''B;             /* ZERO MESSAGE PARAMETER        */
@RF00361 XC    MGPCLEAR(6),MGPCLEAR                                0382
*         MGPPRINT=ON;              /* ROUTE MESSAGES TO THE PRINTER */
*         MGPHLDS=ON;               /* ROUTE MESSAGES TO THE SMPLOG  */
         OI    MGPPRINT,B'10010000'                                0384
*         MGPVARPT(1)=ADDR(CCAFUNCT);/* REJECT                       */
         LA    @14,CCAFUNCT(,CCAPTR)                               0385
         ST    @14,MGPVARPT                                        0385
*         MGPVARPT(2)=ADDR(SMDNO);  /* SYSMOD NUMBER                 */
         LA    @14,SMDNO                                           0386
         ST    @14,MGPVARPT+4                                      0386
*         IF DELXRC<STOPPTF THEN                                   0387
         CH    DELXRC,@CH00057                                     0387
         BNL   @RF00387                                            0387
*           DO;                     /*                               */
*             MGPTYPE=MGPINFO;      /* SEVERITY IS INFORMATION       */
         MVI   MGPTYPE,X'01'                                       0389
*             MGPMGNO1=HMA227I;     /* ISSUE MSG:XXXXXXX PROCESSING
*                                      SUCESSFULLY COMPLETED         */
         MVC   MGPMGNO1(2),@CH00513                                0390
*           END;                    /*                               */
*         ELSE                                                     0392
*           DO;                     /*                               */
         B     @RC00387                                            0392
@RF00387 DS    0H                                                  0393
*             MGPTYPE=MGPINFO;      /* SEVERITY IS INFORMATION       */
         MVI   MGPTYPE,X'01'                                       0393
*             MGPMGNO1=HMA226I;     /* ISSUE MSG:XXXXXXX PROCESSING
*                                      TERMINATED                    */
         MVC   MGPMGNO1(2),@CH00511                                0394
*             MGPMGNO2=PART011;     /* FOR SYSMOD XXXXXXX            */
         MVC   MGPMGNO2(2),@CH00482                                0395
*           END;                    /*                               */
*         CALL HMASMMSG(HMASMMGP);                                 0397
@RC00387 L     @15,@CV01391                                        0397
         LA    @01,@AL00397                                        0397
         BALR  @14,@15                                             0397
*         RFY                                                      0398
*           RTNCODE UNRSTD;         /*                               */
*       END;                        /*                               */
*     DELRC=MAX(DELRC,DELXRC);      /* DETERMINE MAX ROUTINE R.C.    */
@RF00356 CR    DELRC,DELXRC                                        0400
         BNL   *+6
         LR    DELRC,DELXRC                                        0400
*   END;                            /*                               */
@DE00352 L     @10,REJGTPAD                                        0401
         CLI   GTPRETRN(@10),0                                     0401
         BNE   @DC00352                                            0401
         CH    DELRC,@CH00224                                      0401
         BL    @DL00352                                            0401
@DC00352 DS    0H                                                  0402
*   RETURN CODE(DELRC);             /* RETURN WITH MAX RETURN CODE   */
         LR    @15,DELRC                                           0402
         L     @14,@SA00003                                        0402
         LM    @00,@12,@SA00003+8                                  0402
         BR    @14                                                 0402
*   END REJDEL;                     /*                               */
         EJECT
*                                                                  0404
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEANUP ROUTINE                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0404
*REJCLEAN:                                                         0404
*   PROCEDURE;                      /*                               */
REJCLEAN STM   @14,@12,@SA00004                                    0404
*   DECLARE                                                        0405
*     CLEANRC FIXED(8);             /*                               */
*   CLEANRC=ZERO;                   /* INITIALIZE RETURN CODE AREA   */
*                                                                  0406
         SLR   CLEANRC,CLEANRC                                     0406
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE THE REJRCD                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0407
*   RFY                                                            0407
*     HMASMGTP BASED(REJGTPAD);     /* POINT TO REJRCD TO BE FREED   */
*   GTPFUNCT=GTPFREE;               /*                               */
         L     @10,REJGTPAD                                        0408
         MVI   GTPFUNCT(@10),X'0A'                                 0408
*   CALL HMASMGTA(HMASMGTP);        /* FREE THE REJRCD               */
         ST    @10,@AL00001                                        0409
         L     @15,@CV01388                                        0409
         LA    @01,@AL00001                                        0409
         BALR  @14,@15                                             0409
*   CLEANRC=GTPRETRN;               /*                               */
*                                                                  0410
         L     @10,REJGTPAD                                        0410
         SLR   CLEANRC,CLEANRC                                     0410
         IC    CLEANRC,GTPRETRN(,@10)                              0410
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP FOR COMPRESS IF NEEDED                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0411
*   IF CCACMPRS=ON&CLEANRC<STOPFUNC THEN                           0411
         TM    CCACMPRS(CCAPTR),B'00000100'                        0411
         BNO   @RF00411                                            0411
         CH    CLEANRC,@CH00224                                    0411
         BNL   @RF00411                                            0411
*     DO;                           /*                               */
*       CALL HMASMCOM;              /* CALL FOR COMPRESS             */
         L     @15,@CV01387                                        0413
         BALR  @14,@15                                             0413
*       RFY                                                        0414
*         RTNCODE RSTD;             /*                               */
*       CLEANRC=MAX(CLEANRC,RTNCODE);/* SAVE RETURN CODE             */
         CR    CLEANRC,RTNCODE                                     0415
         BNL   *+6
         LR    CLEANRC,RTNCODE                                     0415
*       RFY                                                        0416
*         RTNCODE UNRSTD;           /*                               */
*       CCACMPRS=OFF;               /* TURN OFF COMPRESS WHEN DONE   */
         NI    CCACMPRS(CCAPTR),B'11111011'                        0417
*     END;                          /*                               */
*   RETURN CODE(CLEANRC);           /* RETURN WITH HIGHEST RETURN  0419
*                                      CODE ENCOUNTERED              */
@RF00411 LR    @15,CLEANRC                                         0419
         L     @14,@SA00004                                        0419
         LM    @00,@12,@SA00004+8                                  0419
         BR    @14                                                 0419
*   END REJCLEAN;                   /*                               */
*   END HMASMREJ                                                   0421
*                                                                  0421
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSET)                                       */
*/*%INCLUDE SYSLIB  (HMASMVLP)                                       */
*                                                                  0421
*       ;                                                          0421
@DATA    DS    0H
@CH00297 DC    H'0'
@CH00086 DC    H'7'
@CH00057 DC    H'8'
@CH00482 DC    H'11'
@CH00224 DC    H'12'
@CH00511 DC    H'27'
@CH00513 DC    H'28'
@CH00530 DC    H'38'
@CH01397 DC    H'47'
@CH01399 DC    H'49'
@CH01402 DC    H'209'
         DS    0F
@AL00209 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00276 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00284 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00305 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00397 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
@AL00358 DC    A(SMDNO)                LIST WITH   3 ARGUMENT(S)
         DC    A(RLFPRE)
         DC    A(RLFNO)
@AL00373 DC    A(HMASMVLP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00004 DS    0F
@SA00003 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    1A
         DS    0F
@CV01386 DC    V(HMASMIO)
@CV01387 DC    V(HMASMCOM)
@CV01388 DC    V(HMASMGTA)
@CV01389 DC    V(HMASMRJD)
@CV01390 DC    V(HMASMVLU)
@CV01391 DC    V(HMASMMSG)
         DS    0D
REJGTPAD DC    AL4(REJGTP)
HMASMMGP DS    CL28
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00181 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00182 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL16
         ORG   MGPVAR
MGPVARPT DS    4A
         ORG   HMASMMGP+28
HMASMSET DS    CL12
         ORG   HMASMSET
SELSTENT DS    CL10
         ORG   SELSTENT
SELSTFLG DS    BL2
         ORG   SELSTFLG
@NM00183 DS    BL1
SEMCS    EQU   SELSTFLG+0
SESMD    EQU   SELSTFLG+0
SESRC    DS    BL1
SEDLB    EQU   SELSTFLG+1
SEMOD    EQU   SELSTFLG+1
SEMAC    EQU   SELSTFLG+1
SELMD    EQU   SELSTFLG+1
SEASM    EQU   SELSTFLG+1
SEFMD    EQU   SELSTFLG+1
SESYS    EQU   SELSTFLG+1
         ORG   SELSTENT+2
SENAME   DS    CL8
         ORG   SENAME
SESMDNO  DS    CL7
         ORG   SESMDNO
SEPTFNO  DS    CL7
         ORG   SENAME+7
@NM00184 DS    CL1
         ORG   HMASMSET+10
SEFLAGS  DS    BL1
         ORG   SEFLAGS
SEGROUP  DS    BL1
SESELECT EQU   SEFLAGS+0
SEEXCLUD EQU   SEFLAGS+0
SENOJCL  EQU   SEFLAGS+0
SEFMID   EQU   SEFLAGS+0
@NM00185 EQU   SEFLAGS+0
SEFOUND  EQU   SEFLAGS+0
         ORG   HMASMSET+11
SEFLAG2  DS    BL1
         ORG   SEFLAG2
SEFLAG2A DS    BL1
SEFLAG2B EQU   SEFLAG2+0
SEFLAG2C EQU   SEFLAG2+0
SEFLAG2D EQU   SEFLAG2+0
SEFLAG2E EQU   SEFLAG2+0
SEFLAG2F EQU   SEFLAG2+0
SEFLAG2G EQU   SEFLAG2+0
SEFLAG2H EQU   SEFLAG2+0
         ORG   HMASMSET+12
HMASMVLP DS    CL52
         ORG   HMASMVLP
VLPFUNCT DS    FL1
VLPRETRN DS    FL1
VLPFLAG  DS    BL1
         ORG   VLPFLAG
VLPFMSG  DS    BL1
VLPFRSV  EQU   VLPFLAG+0
         ORG   HMASMVLP+3
VLPDLEN  DS    FL1
VLPSNTRY DS    CL9
         ORG   VLPSNTRY
VLPDATA  DS    CL8
VLPTYPE  DS    FL1
         ORG   HMASMVLP+13
@NM00186 DS    CL3
VLPLPTR  DS    AL4
VLPMTYPE DS    CL8
VLPMNAME DS    CL8
VLPSTYPE DS    CL16
         ORG   HMASMVLP+52
PATCHREJ DS    CL80
         ORG   PATCHREJ
@NM00187 DC    80X'FF'
         ORG   PATCHREJ+80
REJGTP   DS    CL28
REJRCD   DS    CL38
         ORG   REJRCD
SMDNO    DS    CL7
@NM00188 DS    CL1
RLFNO    DS    FL2
RLFPRE   DS    CL26
SMDTYPE  DS    FL1
FMIDDEL  DS    CL1
         ORG   REJRCD+38
N        DC    CL1'N'
Y        DC    CL1'Y'
REJBITS  DS    BL1
         ORG   REJBITS
SMDREJ   DS    BL1
SKIP     EQU   REJBITS+0
FUNCREJ  EQU   REJBITS+0
EOFFND   EQU   REJBITS+0
@NM00189 EQU   REJBITS+0
         ORG   REJBITS+1
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CLEANRC  EQU   @03
DELXRC   EQU   @04
DELRC    EQU   @05
SELRC    EQU   @02
REJRTNCD EQU   @04
IOPPTR   EQU   @03
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00016 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFUNCT EQU   CCAFFUNC
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCACMPRS EQU   CCAFLAG3
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCADSIDA EQU   0
CCATYPEA EQU   0
CCABLDLA EQU   0
@NM00032 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00034 EQU   CCABLDLL
CCALKDRC EQU   @NM00034+20
@NM00036 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00036+20
@NM00038 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00038+20
@NM00040 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00040+20
@NM00042 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00042+20
@NM00044 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00044+20
@NM00046 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00046+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00050 EQU   HMASMIOP+12
@NM00051 EQU   @NM00050
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00161 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMGTP EQU   0
GTPFUNCT EQU   HMASMGTP
GTPRETRN EQU   HMASMGTP+1
GTPRCDLN EQU   HMASMGTP+4
GTPKEYLN EQU   HMASMGTP+6
GTPBUFAD EQU   HMASMGTP+12
GTPRESTR EQU   HMASMGTP+16
GTPFLGS1 EQU   HMASMGTP+26
IOPBS01  EQU   0
IOPBS03  EQU   0
TBLPARM  EQU   0
TBLFLAGS EQU   TBLPARM+8
TBLFLG1  EQU   TBLFLAGS
TBLFLG2  EQU   TBLFLAGS+2
TBLSEL   EQU   TBLFLG2
TBLEXC   EQU   TBLFLG2
TBLMASS  EQU   TBLFLG2
TBLFLG3  EQU   TBLFLAGS+3
TBLFLG4  EQU   TBLFLAGS+5
TBLFLG5  EQU   TBLFLAGS+7
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00057 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00068 EQU   IOPUDATA
@NM00069 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00078 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00089 EQU   IOPSRCDR+1
@NM00091 EQU   @NM00089+7
@NM00095 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00099 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00105 EQU   IOPMODDR+1
@NM00107 EQU   @NM00105+7
@NM00111 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00115 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00126 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00133 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPTYPE EQU   IOPPTFDR+1
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPAPP   EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00142 EQU   IOPPTFFX
@NM00143 EQU   @NM00142
IOPPRELN EQU   @NM00143
IOPPDTES EQU   IOPPTFFX+41
@NM00146 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00171 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00171
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00175 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00175
IOPBFTB1 EQU   IOPBFTB0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00177 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00176 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00174 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00173 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00172 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00170 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00169 EQU   IOPPTSFX+35
@NM00168 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00167 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00166 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00165 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00164 EQU   IOPQFMDR
@NM00160 EQU   IOPQSMDR
@NM00159 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00158 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00157 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00156 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00155 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00154 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00153 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00152 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00151 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00150 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00149 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00148 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00147 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00146+3
IOPRECD  EQU   @NM00146
@NM00145 EQU   IOPPTFFX+8
@NM00144 EQU   @NM00142+7
@NM00141 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00140 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00139 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00138 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
@NM00137 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00136 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00135 EQU   @NM00133+7
@NM00134 EQU   @NM00133
@NM00132 EQU   IOPSYSDR+5
@NM00131 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00130 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00129 EQU   IOPDLBFX+8
@NM00128 EQU   @NM00126+7
@NM00127 EQU   @NM00126
@NM00125 EQU   IOPDLBDR+1
@NM00124 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00123 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00122 EQU   IOPMODFX+12
@NM00121 EQU   IOPMODF4
@NM00120 EQU   IOPMODF3
@NM00119 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00118 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00117 EQU   @NM00115+7
@NM00116 EQU   @NM00115
@NM00114 EQU   IOPMODDR+17
@NM00113 EQU   @NM00111+7
@NM00112 EQU   @NM00111
@NM00110 EQU   @NM00107
@NM00109 EQU   @NM00107
@NM00108 EQU   @NM00107
@NM00106 EQU   @NM00105
@NM00104 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00103 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00102 EQU   IOPSRCFX+8
@NM00101 EQU   @NM00099+7
@NM00100 EQU   @NM00099
@NM00098 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00097 EQU   @NM00095+7
@NM00096 EQU   @NM00095
@NM00094 EQU   @NM00091
@NM00093 EQU   @NM00091
@NM00092 EQU   @NM00091
@NM00090 EQU   @NM00089
@NM00088 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00087 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00086 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00085 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00084 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00083 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00082 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00080 EQU   @NM00078+7
@NM00079 EQU   @NM00078
@NM00077 EQU   IOPLMDDR+6
@NM00076 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00075 EQU   IOPLMDF4
@NM00074 EQU   IOPLMDF3
@NM00073 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00072 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00071 EQU   IOPLMDDR
@NM00070 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00069+4
IOPUSED  EQU   @NM00069
IOPTPSEQ EQU   @NM00068+8
IOPVLSER EQU   @NM00068+2
IOPBLKSI EQU   @NM00068
IOPCQMAX EQU   IOPCQMAP+12
@NM00067 EQU   IOPCQMAP+11
@NM00066 EQU   IOPCQMAP+8
@NM00065 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00064 EQU   IOPSCMAP+11
@NM00063 EQU   IOPSCMAP+8
@NM00062 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00061 EQU   IOPNTMAX+11
@NM00060 EQU   IOPNTMAX+8
@NM00059 EQU   IOPNTMAX
@NM00058 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00057+5
IOPIPTF3 EQU   @NM00057
@NM00007 EQU   TBLFLG5
TBLICTOK EQU   TBLFLG5
@NM00006 EQU   TBLFLG4
TBLBPFM  EQU   TBLFLG4
@NM00005 EQU   TBLFLG4
TBLBPIRQ EQU   TBLFLG4
TBLBPREQ EQU   TBLFLG4
TBLBPPRE EQU   TBLFLG4
TBLBPID  EQU   TBLFLG4
@NM00004 EQU   TBLFLG3+1
TBLSTS   EQU   TBLFLG3
TBLMTS   EQU   TBLFLG3
TBLPTS   EQU   TBLFLG3
TBLACRQ  EQU   TBLFLG3
TBLCRQ   EQU   TBLFLG3
TBLSCDS  EQU   TBLFLG3
TBLACDS  EQU   TBLFLG3
TBLCDS   EQU   TBLFLG3
@NM00003 EQU   TBLFLG2
TBLFMID  EQU   TBLFLG2
TBLGROUP EQU   TBLFLG2
@NM00002 EQU   TBLFLG1+1
TBLDISW  EQU   TBLFLG1+1
TBLDISR  EQU   TBLFLG1+1
TBLDISN  EQU   TBLFLG1+1
TBLNOJCL EQU   TBLFLG1
TBLFLUSH EQU   TBLFLG1
TBLUSER  EQU   TBLFLG1
TBLAPAR  EQU   TBLFLG1
TBLCOMP  EQU   TBLFLG1
TBLASSEM EQU   TBLFLG1
TBLCHECK EQU   TBLFLG1
TBLNOAPP EQU   TBLFLG1
@NM00001 EQU   TBLPARM+5
TBLNUCID EQU   TBLPARM+4
TBLJCLGT EQU   TBLPARM
@NM00180 EQU   HMASMGTP+27
GTPPSIZE EQU   GTPFLGS1
@NM00179 EQU   GTPFLGS1
GTPRCDNF EQU   GTPFLGS1
GTPNOSPM EQU   GTPFLGS1
GTPPOS   EQU   GTPRESTR+8
GTPRCD   EQU   GTPRESTR+4
GTPPAG   EQU   GTPRESTR
GTPWKAD  EQU   HMASMGTP+8
@NM00178 EQU   HMASMGTP+2
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00163 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00162 EQU   @NM00161+7
IOPQSMFM EQU   @NM00161
@NM00081 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00056 EQU   IOPUSERL
@NM00055 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00054 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00053 EQU   @NM00050+10
IOPSEQNO EQU   @NM00050+8
@NM00052 EQU   @NM00051+7
IOPPTFNM EQU   @NM00051
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00049 EQU   CCABLDLM+2
@NM00048 EQU   CCABLDLM
CCAUPDPM EQU   @NM00046+24
@NM00047 EQU   @NM00046+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00046+12
CCAUPDTE EQU   @NM00046+8
CCAUPDNM EQU   @NM00046
CCASUPPM EQU   @NM00044+24
@NM00045 EQU   @NM00044+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00044+12
CCAIOSUP EQU   @NM00044+8
CCASUPNM EQU   @NM00044
CCAZAPPM EQU   @NM00042+24
@NM00043 EQU   @NM00042+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00042+12
CCASPZAP EQU   @NM00042+8
CCAZAPNM EQU   @NM00042
CCACOMPM EQU   @NM00040+24
@NM00041 EQU   @NM00040+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00040+12
CCACOMRS EQU   @NM00040+8
CCACOMNM EQU   @NM00040
CCACPYPM EQU   @NM00038+24
@NM00039 EQU   @NM00038+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00038+12
CCACOPY  EQU   @NM00038+8
CCACPYNM EQU   @NM00038
CCAASMPM EQU   @NM00036+24
@NM00037 EQU   @NM00036+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00036+12
CCAASM   EQU   @NM00036+8
CCAASMNM EQU   @NM00036
CCALKDPM EQU   @NM00034+24
@NM00035 EQU   @NM00034+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00034+12
CCALKED  EQU   @NM00034+8
CCALKDNM EQU   @NM00034
CCAPGMPM EQU   @NM00032+24
@NM00033 EQU   @NM00032+21
CCABPGRC EQU   @NM00032+20
CCABPGSP EQU   @NM00032+12
CCABPGAD EQU   @NM00032+8
CCABPGNM EQU   @NM00032
CCAEND   EQU   HMASMCCA+371
@NM00031 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00030 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00029 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00028 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00027 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00026 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00025 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00024 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00023 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00022 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
@NM00021 EQU   @NM00016+18
@NM00020 EQU   @NM00016+16
CCATBLPA EQU   @NM00016+12
@NM00019 EQU   @NM00016+8
@NM00018 EQU   @NM00016+4
@NM00017 EQU   @NM00016
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00015 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00014 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00013 EQU   CCAFBUFR+122
@NM00012 EQU   CCAFBUFR+120
@NM00011 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00010 EQU   CCAFBUFR+88
@NM00009 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00008 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00247 EQU   @RC00225
@RC00230 EQU   @RC00225
@RF00267 EQU   @RC00259
@RF00244 EQU   @RC00230
@ENDDATA EQU   *
         END   HMASMREJ,(C'PLS2110',0802,78334)
