* /* START OF SPECIFICATIONS ****
*
*01* MODULE-TYPE = MODULE
*
*02* PROCESSOR = ASSEMBLER
*
**** END OF SPECIFICATIONS ***/
 TITLE   'IGG019V2 - 1419 AND 1275 END-OF-BLOCK ROUTINE'
IGG019V2 CSECT
*
*
*STATUS - CHANGE LVL 000   VERSION LVL 000   MODIFICATION LVL 000
*
*        VS2 RELEASE 04.0 CHANGES                              @ZA07621
*C813000                                                       @ZA07621
*A414200,447500,771500-772000                                  @ZA27072
*A615300-617100                                                @ZA28962
*        VS2 RELEASE 03.0 CHANGES
*C510000         FOR  ALL RELEASES     XA08158/YA06791/SA72885 @ZA02240
*A584610-584640                                                @ZA07988
*        RELEASE 21.8 CHANGES
*A582500-584600  FOR  ALL RELEASES     XA05468/YA04572/SA71601 @ZA00970
*
*        VS2 RELEASE 1.8   PLUS CHANGES
*A210500,414500                        SA72880/XA06885/YA07184 @ZA02230
*C663000                               SA72880/XA06885/YA07184 @ZA02230
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*FUNCTION- END-OF-BLOCK ROUTINE FOR 1419 AND 1275.
*
*           1-DETERMINE IF THE DEVICE IS ON-LINE.  IF NOT ON-LINE EXIT
*           2-DETERMINE IF A WTO MESSAGE NEEDS DELETING--IF ONE DOES
*             DELETE IT USING THE DOM MACRO
*           3-UPDATE MICB POINTERS (READ AND PCI) SO THEY POINT
*             TO THE SAME MICB.
*           4-PUT THE ADDRESS OF THE SCU SENSE BYTE IN THE MSENSE CCW.
*             AND SET THE COMMAND CHAIN ON.
*           5-PUT THE ADDRESS OF THE PCU SENSE BYTES IN THE MSENSE
*             COMMANDS FOR THE PCU CCW STRING.  ALSO THE DATA ADDRESS
*             IN THE MREAD COMMANDS.
*           6-SET THE FIRST COMMAND CODE IN THE PCU CCW STRING TO
*             ENGAGE.
*           7-ISSUE AN EXCP (SVC 00) FOR THE PCU AND THE SCU.
*           8-RETURN TO READ ROUTINE
*
*ENTRY POINT - IGG019V2 FROM THE READ ROUTINE
*                L 15,DCBEOBR          PICK UP ADDR OF EOB MODULE
*                BALR  14,15           BRANCH TO EOB MODULE
*
*INPUT - DCB (ADDRESS OF DCB IS PASSED FROM READ IN REGISTER 2)
*         DCBIOBAD-ADDRESS OF PCU IOB
*         DCBIOBA -ADDRESS OF MICB
*         DCBWTOID-BEFORE FIRST ENGAGE CONTAINS WTO ID NUMBER
*         DCBDEBAD- ADDR OF DEB
*         DCBMRIND-X'08'-CONTROL ROUTINE HAS BEEN ENTERED
*         DCBMRFLG-X'20'-SUPPORT OR USER REQUESTED DISENGAGE BIT
*                  X'88'-USED BY PCI APPENDAGE
*                  X'02'-WTO MESSAGE PRESENT
*         DCBBUFL-LENGTH OF EACH BUFFER
*        IOB (SCU)
*         IOB+16-ADDRESS OF CCW STRING FOR SCU
*        IOB (PCU)
*         IOB+16-ADDRESS OF CCW STRING FOR PCU
*        MICB
*         MICBSENS-SCU SENSE BYTE
*         MICBSENS+1-PCU SENSE BYTES (2)
*         MICBFLAG-X'20' FOLLOW-UP DOCUMENTS PROCESSED
*                  X'10' FIRST MICB AFTER ENGAGE
*         MICBDATA-ADDRESS OF DATA AREA
*         MICBNEXT-ADDRESS OF NEXT MICB
*        DEB
*         DEBUCBAD- ADDR OF UCB
*        UCB
*         UCBFL1-X'40'-DEVICE READY
*
*OUTPUT- DCB
*         DCBAPPIN - SET TO ZERO
*         DCBMRIND-X'08'- CONTROL ROUTINE BIT SET TO ZERO
*         DCBMRFLG-X'10'-DISENGAGE BIT SET TO OFF
*                  X'20'-USER REQUESTED DISENGAGE BIT SET OFF.
*                  X'88'-SET TO ZERO FOR PCI APPENDAGE
*                  X'04'-SET TO ONE FOR PCI APPENDAGE
*                  X'02'-WTO MESSAGE BIT SET TO ZERO
*         DCBWTOID-AFTER FIRST ENGAGE CONTAINS MICB (PCI) ADDR
*        IOB (PCU)
*         IOB+4-ECB IS SET TO ZEROES
*        IOB (SCU)
*         IOB+4-ECB IS SET TO ZEROES
*        MICB-
*         MICBECB - ECB IN CURRENT MICB SET TO ZEROES
*         MICBFLAG-X'20'-ENGAGE THIS BUFFER BIT SET OFF
*                  X'10'-FIRST MICB AFTER ENGAGE SET ON
*                  X'04'-UNIT EXCEPTION ON THIS BUFFER SET OFF @ZA02230
*        CHANNEL PROGRAM
*          MSENSE CCW (FOR SCU)-COMMAND CHAIN BIT SET ON
*                     ADDRESS OF SENSE BYTE IN MICB PLACED IN DATA
*                       ADDRESS OF CCW.
*          MSENSE CCW (FOR PCU)-ADDRESS OF PCU SENSE BYTES IN MICB
*                       PLACED IN DATA ADDRESS PORTION OF CCW'S
*          MREAD-DATA ADDRESS PLACED IN ADDRESS PORTION OF CCW'S
*          FIRST CCW SET TO ENGAGE
*          FOURTH CCW SET TO NO-OP
*          SEVENTH CCW SET TO NO-OP
*        BUFFERS
*         THE BUFFER CORRESPONDING TO THE CURRENT MICB IS SET TO ZEROES
*         INTERVENTION REQUIRED BIT-X'08'-SET ON IF DEVICE NOT READY
*        WRITE DELAY BUFFER - SET TO ONES
*
*EXTERNAL ROUTINES - SVC 00 (EXCP) FOR PCU AND SCU.
*
*EXITS NORMAL - RETURN TO READ MODULE
*
*EXITS ERROR - NONE
*
*TABLES/WORKAREAS - NONE
*
*ATTRIBUTES - REENTERABLE
*
*NOTES - NONE
*
*
*
*
*        SYMBOLIC DEFINITIONS OF REGISTERS
PARMREG  EQU   1
R1       EQU   PARMREG
DCBREG   EQU   2                       BASE REGISTER FOR DCB
MICBREG  EQU   4                       BASE REGISTER FOR MICB
PCUIOBR  EQU   5                       CONTAINS PCU IOB ADDRESS
SCUIOBR  EQU   6                       CONTAINS SCU IOB ADDRESS
WRKREG7  EQU   7
CCWPNTR  EQU   8                       CCW STRING POINTER
WRKREG9  EQU   9
WRKREG10 EQU   10
BASEREG  EQU   11                      BASE REGISTER FOR THIS ROUTINE
RTNREG   EQU   14                      CONTAINS RETURN ADDRESS
ENTRYREG EQU   15                      ENTRY POINT REGISTER
*
*              SYMBOLIC DEFINITIONS FOR DISPLACEMENTS
*
CCWADDR  EQU   24                      DISP TO CCW ADDR IN IOB
COMNDCHN EQU   4                       DISP TO COMMAND CHAIN BIT IN CCW
DEBUCBAD EQU   36                      DISP TO SCU UCB ADDR IN DEB
ECBDISP  EQU   4                       DISP TO ECB IN IOB
IOBDISP  EQU   8                       DISP TO IOB FROM IOB PREFIX
NXTCCW   EQU   8                       DISP TO NEXT CCW IN STRING
NXTSENS  EQU   24                      DISP TO NEXT MSENSE CCW
RITEDLAY EQU   152                     DISP TO WRITE DELAY BUFF
SCUCCW   EQU   80                      DISP TO SCU CCW FROM PCU CCW
SCUIOB   EQU   48                      DISP TO SCU IOB FROM PCU IOB
UCBFL1   EQU   6                       DISP TO UCB DEVICE STATUS BYTE
ZERODISP EQU   0                       DISP OF ZERO
NOPDIS   EQU   16                 DISP TO NOP IN SCU CCW CHAIN
*
*              MISC DEFINITIONS
*
CCOFF    EQU   X'BF'                   SET COMMAND CHAIN BIT OFF
CMNDCHN  EQU   X'40'                   USED TO SET COMMAND CHAIN ON
CNTR     EQU   1                       COUNTER
CONTROL  EQU   X'08'                   CONTROL ROUTINE BEEN ENTERED
DVICERDY EQU   X'40'                   DEVICE READY FOR PROCESSING
ENDCNT   EQU   3                       MAXIMUM TIMES THRU COUNTED LOOP
ENGAGE   EQU   X'7F'                   ENGAGE FOR THIS BUFFER BIT
ERPOFF   EQU   3                       TO RESET ERP IND        @ZA27072
UNITEX   EQU   X'04'                   UNIT EXCEPT ON THIS BUFF@ZA02230
ENGAGECC EQU   X'EF'                   ENGAGE COMMAND CODE
FOUR     EQU   4
EIGHT    EQU   8                    LEN TO CLEAR SNS AND FLAG  @ZA00970
FRSTBUF  EQU   X'10'                   SET FIRST BUFFER AFTER ENGAGE
INITBITS EQU   X'67'                   REINITIALIZE DCBMRFLG
INTVRQD  EQU   X'08'                   BUFFER INTERVENTIN REQ BIT
MREADCC  EQU   X'4C'                   MODIFIED READ COMMAND CODE
MSENSECC EQU   X'24'                   MSENSE COMMAND CODE
NOPCC    EQU   X'03'                   NO-OP COMMAND CODE
ONE      EQU   1
ONES     EQU   X'FF'                   SET WRITE DELAY BUFERR TO ONES
ONE27    EQU   127                     LENGTH OF WRITE DELAY BUFFER
PFOFF    EQU   X'C0'                   TO RESET POST FLAGS     @ZA27072
PSTCMPLT EQU   X'7F'                   POST EVENT COMPLETE
SETBITON EQU   X'04'                   SET ON BIT IN DCB- REINITIALIZE
SETZERO  EQU   0
WTOID    EQU   X'02'
ZERO     EQU   0
*
*
         USING IGG019V2,BASEREG
         USING IHADCB,DCBREG
         USING MICBENTR,MICBREG
         LR    BASEREG,ENTRYREG        ESTABLISH BASE REGISTER
         L     MICBREG,DCBIOBA         ESTABLISH BASE REG. FOR MICB
         L     WRKREG10,MICBDATA       PICK UP ADDR OF CURRENT BUFFER
         L     WRKREG9,DCBDEBAD        LOAD ADDR OF DEB
         L     WRKREG9,DEBUCBAD(WRKREG9)   LOAD ADDR OF UCB
         TM    UCBFL1(WRKREG9),DVICERDY    IS THE DEVICE READY
         BZ    EOB010                  YES, BRANCH
         TM    DCBMRIND,CONTROL        CONTROL ROUTINE CAUSE NOT-READY
         BZ    EOB010                  NO, BRANCH
         XI    DCBMRIND,CONTROL        SET OFF CONTROL RTN BIT
         MVI   ZERODISP(WRKREG10),INTVRQD  SET ON INT REQ ONLY @ZA02240
         MVI   MICBECB,PSTCMPLT        POST AS COMPLETE
         B     EOB050                  BRANCH AND EXIT EOB
*
EOB010   EQU   *
*
         TM    DCBMRFLG,WTOID          IS THERE A WTO MESSAGE
         BZ    EOB020                  NO MESSAGE - BRANCH
         L     PARMREG,DCBWTOID        LOAD WTO ID FOR DOM MACRO
         LA    PARMREG,ZERODISP(PARMREG)    CLEAR OUT GARBAGE
         DOM   MSG=(R1)                ISSUE DOM MACRO
         XC    DCBWTOID(FOUR),DCBWTOID   ZERO THE WTO ID WORD IN DCB
         XI    DCBMRFLG,WTOID          SET THE WTO BIT TO ZERO
*
EOB020   EQU   *
*
         ST    MICBREG,DCBWTOID        UPDATE MICB ADDRESS FOR PCI
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* SET ECB'S IN SCUIOB AND PCUIOB AND CURRENT BUFFER TO ZERO BEFORE    *
* ISSUING AN ENGAGE.                                                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LH    WRKREG9,DCBBUFL         LOAD LENGTH OF BUFF N. (CURRENT)
         BCTR  WRKREG9,ZERO            DECREMENT LENGTH TO ZERO BUFF N
         EX    WRKREG9,CRNTBUFF        ZERO THE CURRENT BUFFER
         MVI   MICBECB,SETZERO         ZERO CURRENT MICB ECB
         L     WRKREG7,MICBNEXT        POINT TO NEXT MICB      @ZA00970
         XC    FOUR(EIGHT,WRKREG7),FOUR(WRKREG7)  CLR FLG SNS  @ZA00970
         L     WRKREG10,MICBDATA-MICBENTR(0,WRKREG7)  GET PTR  @ZA00970
         EX    WRKREG9,CRNTBUFF        CLEAR THE NEXT BUFFER   @ZA00970
         L     WRKREG7,MICBNM1         POINT TO PRIOR MICB     @ZA07988
         XC    FOUR(EIGHT,WRKREG7),FOUR(WRKREG7)  CLR FLG SNS  @ZA07988
         L     WRKREG10,MICBDATA-MICBENTR(0,WRKREG7)  GET PTR  @ZA07988
         EX    WRKREG9,CRNTBUFF        CLEAR THE PRIOR BUFFER  @ZA07988
         L     PCUIOBR,DCBIOBAD        PICK UP THE PCU IOB ADDRESS
         XC    ECBDISP(FOUR,PCUIOBR),ECBDISP(PCUIOBR)  ZERO PCU IOB ECB
         LA    SCUIOBR,SCUIOB(PCUIOBR) COMPUTE ADDRESS OF SCUIOB
         XC    ECBDISP(FOUR,SCUIOBR),ECBDISP(SCUIOBR)  ZERO SCU IOB ECB
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* THE FOLLOWING INSTRUCTIONS UPDATE THE CCW'S IN THE STRING FOR       *
* THE SCU SO AN ENGAGE CAN BE ISSUED TO START THE DEVICE.             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         L     CCWPNTR,CCWADDR(PCUIOBR)  PICK UP ADDR OF PCU CCW STRING
         L     PARMREG,DCBDEBAD          DEB POINTER           @ZA28962
         ST    PARMREG,0(CCWPNTR)        STORE DEB ADDRESS     @ZA28962
         MVI   0(CCWPNTR),X'A0'          STORE PURGE OPTIONS   @ZA28962
         LA    PARMREG,0(CCWPNTR)        CLEAR HI BYTE         @ZA28962
         PURGE (1)                       ISSUE PURGE           @ZA28962
         XC    0(5,CCWPNTR),0(CCWPNTR)   CLEAR PARM LIST       @ZA28962
         MVI   4(CCWPNTR),X'60'          RESTORE CCW FLAG      @ZA28962
         LA    CCWPNTR,SCUCCW(CCWPNTR) COMPUTE ADDR OF SCU CCW STRING
         ST    CCWPNTR,CCWADDR(SCUIOBR)  STORE SCU CCW ADDR IN SCU IOB
         LA    WRKREG9,MICBSENS        PICK UP ADDR OF SCU SENSE BYTE
         ST    WRKREG9,ZERODISP(CCWPNTR)  UPDTE ADDR IN MSENSE CCW
         MVI   ZERODISP(CCWPNTR),MSENSECC  RESTORE  MSENSE COMMAND CODE
         MVI   NOPDIS(CCWPNTR),MREADCC  SET FOR COMMAND REJECT
         OI    COMNDCHN(CCWPNTR),CMNDCHN  SET COMMAND CHAIN  ON
         ST    WRKREG9,NXTSENS(CCWPNTR)    PUT SENSE ADDR IN MSENSE CCW
         MVI   NXTSENS(CCWPNTR),MSENSECC   RESTORE COMMAND CODE
         NI    NXTSENS+COMNDCHN(CCWPNTR),CCOFF   TURN OFF COMMAND CHAIN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* THE FOLLOWING INSTRUCTIONS UPDATE THE CCW'S IN THE STRING FOR       *
* THE PCU SO AN ENGAGE CAN BE ISSUED TO START THE DEVICE.             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         NI    MICBFLAG,ENGAGE-UNITEX CLEAR ENGAGE-UNITEX     @ZA02230
         OI    MICBFLAG,FRSTBUF        SET FIRST BFR AFTER ENGAGE BIT
         L     CCWPNTR,CCWADDR(PCUIOBR)    PICK UP PCU CCW ADDR
         MVI   ZERODISP(CCWPNTR),ENGAGECC  SET COMMAND CODE TO ENGAGE
         LA    WRKREG10,CNTR           ESTABLISH LOOP COUNTER
         LA    WRKREG7,ENDCNT          ESTABLISH MAXIMUM TIME THRU LOOP
*
EOB030   EQU   *
*
         LA    CCWPNTR,NXTCCW(CCWPNTR) INCREMENT CCW POINTER
         L     WRKREG9,MICBDATA        PICK UP ADDRESS OF BUFFER
         AH    WRKREG9,DCBBUFL         ADD BFR LNG TO POINT TO LAST
         BCTR  WRKREG9,ZERO            BYTE FOR READ BACKWARDS.
         ST    WRKREG9,ZERODISP(CCWPNTR)   PUT DATA ADDR IN MREAD CCW
         MVI   ZERODISP(CCWPNTR),MREADCC   RESTORE MREAD COMMAND CODE
         LA    CCWPNTR,NXTCCW(CCWPNTR) INCREMENT CCW POINTER
         LA    WRKREG9,MICBSENS+ONE    PICK UP ADDR OF PCU SENSE BYTES
         ST    WRKREG9,ZERODISP(CCWPNTR)   STORE ADDR IN MSENSE CCW
         MVI   ZERODISP(CCWPNTR),MSENSECC  RESTORE MSENSE COMMAND CODE
         CR    WRKREG10,WRKREG7        PROCESSED ALL CCW'S
         BE    EOB040                  YES, BRANCH
         LA    CCWPNTR,NXTCCW(CCWPNTR) INCREMENT CCW POINTER
         MVI   ZERODISP(CCWPNTR),NOPCC SET COMMAND CODE TO NO-OP
         L     MICBREG,MICBNEXT        PICK UP ADDR OF NEXT MICB
         LA    WRKREG10,CNTR(WRKREG10) INCREMENT LOOP COUNTER
         B     EOB030                  BRANCH TO UPDATE NEXT 3 CCWS.
*
EOB040   EQU   *
*
         L     CCWPNTR,CCWADDR(PCUIOBR)  LOAD PCU CCW ADDR
         LA    CCWPNTR,RITEDLAY(CCWPNTR)  COMPUTE ADDR OF WRITE BUFFER
         MVI   ZERO(CCWPNTR),ONES             *  SET THE WRITE DELAY  *
         MVC   ONE(ONE27,CCWPNTR),ZERO(CCWPNTR)   *  BUFFER TO ONES *
         LA    WRKREG9,IOBDISP         LOAD DISP TO IOB FROM PREFIX
         AR    PCUIOBR,WRKREG9         COMPUTE PCU IOB ADDR
         AR    SCUIOBR,WRKREG9         COMPUTE SCU IOB ADDR
         MVI   DCBAPPIN,SETZERO        SET DCBAPPIN TO ZEROES
         NI    DCBMRFG,ONES-PFOFF      RESET POST FLAGS        @ZA27072
         NI    DCBMRIND,ONES-ERPOFF    RESET ERP INDICATORS    @ZA27072
         NI    DCBMRFLG,INITBITS       RE-INITIALIZE BITS IN THE DCB
         OI    DCBMRFLG,SETBITON       RE-INITIALIZE BITS IN THE DCB
         EXCP  (5)                     ISSUE EXCP FOR PCU
         EXCP  (6)                     ISSUE EXCP FOR SCU
*
EOB050   EQU   *
*
         BR    RTNREG                  RETURN TO READ MODULE
*
*
* THE FOLLOWING INSTRUCTION IS USED TO ZERO THE CURRENT BUFFER
CRNTBUFF XC    ZERO(ZERO,WRKREG10),ZERO(WRKREG10)
*
         DC    C'IGG019V2'                                     @ZA07621
         DC    CL8'&SYSDATE'                                   @ZA07621
         DC    C'Z28962'                                       @ZA07621
         DC    XL2'0'                                          @ZA07621
         DC    D'0'                                            @ZA07621
         DCBD  DSORG=BS,DEVD=MR
*        MICBD - DUMMY SECTION FOR THE MICB
MICBENTR DSECT
MICBNEXT DS    A
MICBECB  DS    A
MICBFLAG DS    AL1
MICBSENS DS    AL3
MICBECBA DS    A
MICBNM7  DS    A
MICBNM1  DS    A
MICBDATA DS    A
         END
