         TITLE 'IGG0197D - LOAD MICR MODULES'
IGG0197D CSECT
         SPACE
***********************************************************************
*                                                                     *
* MODULE NAME - IGG0197D                                              *
*                                                                     *
* DESCRIPTIVE NAME - MICR MODULE LOADER                               *
*                                                                     *
* COPYRIGHT - NONE                                                    *
*                                                                     *
* CHANGE ACTIVITY - AS FOLLOWS:                                       *
*                                                                     *
*          RELEASE 21 DELETIONS                                       *
*0000274000,380000                                               A41426
*0000250000,706000                                               A48612
*                                                                     *
*          VS2 RELEASE 02 DELETIONS                                   *
*D180000,210000-230000,238000,246000,252000-256000,277000-286000,Y02072
*D290400,292400,294400,295200,298000,300400-301200,301600-304000,Y02072
*D310500-311000,356000,368000-370600,430000-436000,454000,460000-Y02072
*D468000,478000-496000,506000-508000,522000,534000,540000,610000-Y02072
*D614000,626000-634000,638000-651200,663000,668000,672000-686000,Y02072
*D697200,730000,746000-752000,760000,764000-766000,770000-772000 Y02072
*C471224-471240                                                @ZA00107
*A260000,372000-375000,726100-729100                           @ZA06120
*                                                              @ZA07621
*          VS2 RELEASE 04.0 CHANGES                            @ZA07621
*C744002                                                       @ZA07621
*                                                                     *
* STATUS - VS2 RELEASE 2 LEVEL 0                                      *
*                                                                     *
*                                                                     *
* FUNCTION/OPERATION - THIS ROUTINE SUPPLEMENTS THE INITIAL OPEN      *
*      ROUTINE BY PERFORMING SPECIFIC FUNCTIONS FOR THE MAGNETIC      *
*      INK CHARACTER READER.                                          *
*      THIS ROUTINE WILL LOAD ALL NECESSARY I/O MODULES.  IT WILL     *
*      PLACE THE ADDRESSES OF THE LOADED MODULES IN THE APPROPRIATE   *
*      DCB FIELDS AND PLACE THE CORRESPONDING MODULE ID'S IN THE DEB. *
*      THE USER CODED STACKER SELECT ROUTINE IS LOADED FROM SVCLIB.   *
*      IF THE STACKER SELECT ROUTINE IS NOT LOCATED IN SVCLIB, OR IF  *
*      THE USER IS NOT AUTHORIZED TO RUN THE STACKER SELECT ROUTINE,  *
*      THEN A MESSAGE WILL BE WRITTEN TO THE PROGRAMMER INDICATING    *
*      SAME AND THE TASK WILL BE ABNORMALLY TERMINATED.               *
*      THIS ROUTINE WILL ALSO LOAD THE APPENDAGES REQUIRED TO         *
*      PROCESS THE MICR DEVICES AND PLACE THEIR ADDRESSES IN THE DEB. *
*      IF THE DD STATEMENT CONTAINED A VOLUME NUMBER, A MESSAGE WILL  *
*      BE PUT OUT INSTRUCTING THE OPERATOR TO MOUNT THE REQUIRED      *
*      VOLUME ON THE SPECIFIED MICR DEVICE.                           *
*                                                                     *
*                                                                     *
* ENTRY POINT - THIS ROUTINE IS ENTERED AT THE CSECT IGG0197D VIA AN  *
*               XCTL FROM IGG0197C.                                   *
*                                                                     *
*                                                                     *
* INPUT - REGISTER 5 - ADDRESS OF THE DCB PARAMETER LIST              *
*         REGISTER 6 - ADDRESS OF THE WHERE-TO-GO TABLE               *
*         REGISTER 7 - ADDR OF CURRENT ENTRY IN DCB PARAMETER LIST    *
*         REGISTER 8 - ADDR OF CURRENT ENTRY IN WHERE-TO-GO TABLE     *
*                                                                     *
*                                                                     *
* OUTPUT - OUTPUT IS AS FOLLOWS:                                      *
*                                                                     *
*      1. UPDATED DCB'S AND DEB'S.                                    *
*                                                                     *
*      2. ALL REQUIRED I/O MODULES FOR MICR PROCESSING ARE LOADED.    *
*                                                                     *
*      3. THE USER'S STACKER SELECT ROUTINE IS LOADED.                *
*                                                                     *
*      4. IF THE STACKER SELECT ROUTINE IS NOT LOCATED IN SVCLIB, OR  *
*         IF THE USER IS NOT AUTHORIZED TO RUN IT, THEN A WRITE TO    *
*         PROGRAMMER MESSAGE WILL BE ISSUED INDICATING THE SAME.      *
*                                                                     *
*      5. A MOUNT MESSAGE IF A VOLUME ID WAS SPECIFIED ON JCL CARD.   *
*                                                                     *
*      6. THE USER'S DCB IS REFRESHED.                                *
*                                                                     *
*                                                                     *
* EXTERNAL ROUTINES - IECVGENA - RESIDENT IOSGEN SUBROUTINE USED TO   *
*                     RESET THE DEVICE NOT READY FLAGS IN THE PRIMARY *
*                     AND SECONDARY UCB'S.                            *
*                                                                     *
*                                                                     *
* EXITS-NORMAL - XCTL TO THE NEXT OPEN EXECUTOR VIA THE WTG TABLE     *
*                                                                     *
* EXITS-ERROR - SYSTEM 006 ABEND IF THE STACKER SELECT ROUTINE IS NOT *
*               LOCATED IN SVCLIB OR THE USER IS NOT AUTHORIZED TO    *
*               RUN IT.                                               *
*                                                                     *
*                                                                     *
* TABLES/WORK AREAS - WHERE-TO-GO TABLE AND THE OPEN WORK AREA        *
*                                                                     *
*                                                                     *
* MACROS-ACTION - MODESET, GETMAIN, FREEMAIN, BLDL, TESTAUTH, IOSGEN, *
*                 LOAD, DELETE, WTO, ABEND, IECRES, XCTL              *
*                                                                     *
* MACROS-MAPPING - CVT, DCBD, IECDIOCM, IGGMSG, IEFUCBOB, IECDSECS    *
*                                                                     *
*                                                                     *
* ATTRIBUTES - REENTRANT, REUSABLE, NORMALLY RUNS IN DATA MANAGEMENT  *
*              KEY.                                                   *
*                                                                     *
***********************************************************************
         EJECT
****
****     REGISTER CONVENTIONS
****
R0       EQU   0         WORK/PARAMETER REG
R1       EQU   1         WORK/PARAMETER REG
RDCB     EQU   2         DCB REG
RBASE    EQU   3         BASE REG
RCORE    EQU   4         WORK AREA REG
RPAR     EQU   5         TOP OF PARAMETER LIST
RWTG     EQU   6         TOP OF WTG TABLE
RPARC    EQU   7         CURRENT PARAMETER
RWTGC    EQU   8         CURRENT TRANS LOAD
RCVT     EQU   9         CVT REG
RUCB     EQU   10        UCB REG
RDEB     EQU   11        WORK REG
R12      EQU   12        WORK REG
RB       EQU   R12       WORK REG
RWRK1    EQU   RB        WORK REGISTER                           Y02072
RC       EQU   13        WORK REG
RSAVE    EQU   RC        SAVE AREA ADDR                          Y02072
RAREA    EQU   RSAVE     WORK AREA ADDRESS                       Y02072
R14      EQU   14        WORK REGISTER                           Y02072
RD       EQU   R14       WORK REG
RRETURN  EQU   RD        RETURN ADDR REGISTER                    Y02072
R15      EQU   15        WORK REG
RJ       EQU   R15       WORK REG
         SPACE 2
****
****     MASKS, DISPLACEMENTS, AND OTHER EQUATES
****
UNIT     EQU   14                  DISP TO UNIT IN WTO MESSAGE
DEBNMSUB EQU   0                   DISP TO NUM SUBRTN'S LOADED
DEBDCBB  EQU   25                  ADDRESS OF THE DCB            Y02072
DEBAPPAD EQU   28                  DISP TO APPENDAGE VECTOR TABLE
DEBUCBAD EQU   32                  DISP TO UCB ADDR
DEBBINUM EQU   36                  DISP TO SCU UCB ADDR IN DEB
DEBSSAD  EQU   44                  ADDR OF USER'S STACKER SELECT Y02072
*                                  ROUTINE                       Y02072
DEBSUBID EQU   48                  DISP TO STACKER NAME          A48612
IDDEB    EQU   56                  DISP TO SUBRTN ID'S
SIOADDR  EQU   4                   DISP TO SIO ADDR IN THE AVT    41426
PCIADDR  EQU   8                   DISP TO PCI ADDR IN THE AVT
PCIENTRY EQU   12                  DISP TO PCI ENTRY IN V7     @ZA06120
ENTRYDSP EQU   4                   LENGTH OF APPENDAGE BR TABLE ENTRIES
CEADDR   EQU   12                  DISP TO CHAN END ADDR IN AVT
ABENDAD  EQU   16                  DISP TO ABNORMAL END ADDR IN DEB
EOEADDR  EQU   0                   DISP TO END-OF-EXTENT ADDR IN DEB
SUBID    EQU   0                   DISP TO ID IN WTG TABLE
ONE      EQU   1                   FOR GENERAL USE
VOLID    EQU   18                  DISP TO VOLUME ID IN WTO MESSAGE
WTOSIZE  EQU   X'18'               LENGTH OF WTO MESSAGE
BLANK    EQU   X'40'               EBCDIC BLANK
DCBADDR  EQU   0                   DISP TO DCB ADDR IN DCB LIST
WORKADDR EQU   4                   DISP TO WORK AREA ADDR IN WTG TABLE
CURRID   EQU   0                   DISP TO CURRENT ID IN WTG TABLE
X00      EQU   X'00'               HEX ZERO
ADDRL    EQU   3                   LENGTH OF AN ADDRESS IN BYTES
NEBLDL   EQU   0                   DISP TO NUM ENTRIES IN A BLDL LIST
BLDLL    EQU   58                  LENGTH OF BLDL ENTRY
ELBLDL   EQU   2                   DISP TO BLDL LIST ENTRY LENGTH
NBLDL    EQU   4                   DISP TO BLDL LIST MODULE NAME
MLENGTH  EQU   8                   LENGTH OF MODULE NAME
MODDISP  EQU   0                   DISP TO MODULE NAME
WTODISP  EQU   0                   DISP TO WTO MESSAGE
UNITL    EQU   3                   LENGTH OF UNIT IN WTO MESSAGE
VOLL     EQU   6                   LENGTH OF VOLID IN WTO MESSAGE
IDL      EQU   2                   LENGTH OF ID IN WTG TABLE
WTGID    EQU   6                   DISP TO ID IN WTG TABLE
WAOFF    EQU   32                  OFFSET OF FIRST ENTRY IN WTG TABLE
PLOFF    EQU   4                   OFFSET OF DCB ENTRIES
WGOFF    EQU   8                   OFFSET OF WTG ENTRIES
DELWTO   EQU   X'02'               INDICATE A WTO WAS ISSUED
NOTAUTH  EQU   X'006'              INCORRECT AUTHORIZATION ABEND Y02072
NOTAUTHM EQU   48                  OFFSET TO AUTHORIZATION MSG   Y02072
WORKSIZE EQU   64                  SIZE OF WORK AREA             Y02072
         EJECT
****
****     LOAD REGS WITH CONTROL BLOCK ADDRESSES
****
         BALR  RBASE,0
         USING *,RBASE
         USING IHADCB,RDCB
         USING FORCORE,RCORE       EST OPEN WORK AREA BASE REG   Y02072
         USING CVT,RCVT
         USING UCB,RUCB
         L     RDCB,DCBADDR(RPARC) GET DCB ADDR
         L     RDEB,DCBDEBAD       GET DEB ADDR
         L     RCVT,CVTPTR         LOAD CVT ADDR
         L     RCORE,WORKADDR(RWTGC)  GET WORK AREA ADDR
*
         MVI   CURRID(RWTGC),X00   ZERO CURRENT ID ENTRY
*
         MODESET EXTKEY=SUPR       CHANGE TO KEY 0               Y02072
         LA    RSAVE,DXCCW         GET ADDRESS OF SAVE AREA      Y02072
         L     RUCB,DEBUCBAD(RDEB) LOAD PCU UCB ADDR
         BAL   RRETURN,READYDEV    SET PCU UCB TO DEVICE READY   Y02072
         L     RUCB,DEBBINUM(RDEB) LOAD SCU UCB ADDR
         BAL   RRETURN,READYDEV    SET SCU UCB TO DEVICE READY   Y02072
         MODESET EXTKEY=DATAMGT    CHANGE TO DATA MANAGEMENT KEY Y02072
         SPACE 2
****
****     LOAD THE APPENDAGES FOR MICR SUPPORT
****
         LA    RB,IGG019V5
         L     RJ,CVTSVDCB         LOAD ADDR SVCLIB DCB
         LOAD  EPLOC=(RB),DCB=(RJ) LOAD APPENDAGES
         LR    R1,R0               SAVE ADDRESS OF APPENDAGES    Y02072
         LA    RB,APPENDID         LOAD ADDR OF APPENDAGE ID
         BAL   RC,ADDV5            INCLUDE APPENDAGE ID IN DEB
*
         L     RC,DEBAPPAD(RDEB)   LOAD ADDR OF APPENDAGE VECTO@ZA06120
         ST    R1,CEADDR(RC)       PLACE CHANNEL END ENTRY ADDR
         LA    R1,ENTRYDSP(R1)
         ST    R1,ABENDAD(RC)      PLACE ABEND ENTRY ADDR
         LA    R1,ENTRYDSP(R1)
         ST    R1,SIOADDR(RC)      PLACE START I/O ENTRY IN AVT   41426
*                                                              @ZA06120
         LA    RB,IGG019V7                                     @ZA06120
         L     RJ,CVTSVDCB         LOAD ADDR SVCLIB DCB        @ZA06120
         LOAD  EPLOC=(RB),DCB=(RJ) LOAD APPENDAGES             @ZA06120
         LR    R1,R0               SAVE ADDRESS OF APPENDAGES  @ZA06120
         LA    RB,PCIAPPID         LOAD ADDR OF PCI APPEND ID  @ZA06120
         BAL   RC,ADDV5            INCLUDE APPENDAGE ID IN DEB @ZA06120
*                                                              @ZA06120
         L     RC,DEBAPPAD(RDEB)   LOAD ADDR OF APPENDAGE VECTO@ZA06120
         LA    R1,PCIENTRY(R1)     POINT TO PCI ENTRY          @ZA06120
         ST    R1,PCIADDR(RC)      PLACE PCI ENTRY ADDR        @ZA06120
         LA    R1,CVTBRET
         ST    R1,EOEADDR(RC)      PLACE DUMMY E-O-E ADDR
         SPACE 2
****
****     LOAD THE READ, EOB, CHECK, AND CONTROL ROUTINES.
****
         LA    RB,READID           POINT TO READ ID
         BAL   RC,LOADMOD          LOAD READ
         STCM  R0,B'0111',DCBREAD+1  PLACE READ RTN ADDR IN DCB  Y02072
*
*
         LA    RB,EOBID            POINT TO EOB ID
         BAL   RC,LOADMOD          LOAD EOB
         STCM  R0,B'0111',DCBEOBRA  PLACE EOB RTN ADDR IN DCB    Y02072
*
*
         LA    RB,CHECKID          POINT TO CHECK ID
         BAL   RC,LOADMOD          LOAD CHECK
         STCM  R0,B'0111',DCBCHCKA PLACE CHECK RTN ADDR IN DCB   Y02072
*
*
         LA    RB,CNTRLID          POINT TO CONTROL ID
         BAL   RC,LOADMOD          LOAD CONTROL
         ST    R0,DCBCNTRL         PLACE CONTROL RTN ADDR IN DCB Y02072
         SPACE 2
****
****     GET CORE FOR A BLDL LIST AND A WRITE TO OPERATOR MESSAGE AREA.
****
         GETMAIN R,LV=WORKSIZE,SP=230  GET CORE FOR A WORK AREA  Y02072
         LR    RAREA,R1            SAVE ADDR OF GOTTEN CORE      Y02072
         SPACE 2
****
****     ISSUE THE BLDL MACRO TO DETERMINE IF THE STACKER SELECT
****     ROUTINE IS IN SVCLIB.
****
         LA    RWRK1,ONE           LOAD NUM ENTRIES              Y02072
         STH   RWRK1,NEBLDL(RAREA)  PLACE IN BLDL LIST           Y02072
         LA    RWRK1,BLDLL         LOAD LENGTH OF ENTRY          Y02072
         STH   RWRK1,ELBLDL(RAREA)  PLACE IN BLDL LIST           Y02072
         MVC   NBLDL(MLENGTH,RAREA),DEBSUBID(RDEB)  PUT MODULE   Y02072
*                                  NAME IN BLDL LIST             Y02072
         L     R1,CVTSVDCB         GET ADDR OF SVCLIB DCB        Y02072
*
         BLDL  (1),(RAREA)         BUILD LIST                    Y02072
*
         LTR   R15,R15             WAS BLDL SUCCESSFUL           Y02072
         BNZ   ABENDUSR            IF NOT, ABEND THE USER        Y02072
         SPACE 2
****
****     DETERMINE IF THE USER IS AUTHORIZED TO RUN THE STACKER SELECT
****     ROUTINE FOUND IN SVCLIB.
****
         TESTAUTH FCTN=1           CHECK AUTHORITY OF THE USER   Y02072
         LTR   R15,R15             IS USER AUTHORIZED TO RUN THE Y02072
*                                  STACKER SELECT ROUTINE        Y02072
         BZ    LOADSS              IF YES, GO TO LOAD SS ROUTINE Y02072
         SPACE 2
****
****     IF THE USER'S STACKER SELECT ROUTINE IS NOT IN SVCLIB OR IF
****     THE USER IS NOT AUTHORIZED TO RUN IT, THEN WRITE A MESSAGE TO
****     THE PROGRAMMER INDICATING SAME AND ABEND THE USER.
****
ABENDUSR EQU   *                                                 Y02072
         BAL   RRETURN,FREEMAIN    FREE THE WORK AREA            Y02072
         L     RWRK1,CVTLINK       GET ADDR OF LINKLIB DCB       Y02072
         LOAD  EP=IGGMSG01,DCB=(RWRK1)  LOAD MESSAGE CSECT       Y02072
         LR    R1,R0               GET ADDR OF MESSAGE CSECT     Y02072
         USING MSGINDEX,R1         EST BASE FOR MSG INDEX TABLE  Y02072
         AH    R1,MSGINDOF+NOTAUTHM  GET OFFSET TO DESIRED MSG   Y02072
         USING MSGENTRY,R1         ESTABLISH BASE FOR MESSAGE    Y02072
         SR    RWRK1,RWRK1         CLEAR REGISTER                Y02072
         IC    RWRK1,MSGOFF        GET OFFSET TO MESSAGE TEXT    Y02072
         AR    R1,RWRK1            CALCULATE ADDR OF MSG TEXT    Y02072
*
         WTO   MF=(E,(1))          WRITE MESSAGE TO PROGRAMMER   Y02072
*
         DELETE EP=IGGMSG01        DELETE MESSAGE CSECT          Y02072
*
         ABEND NOTAUTH,DUMP,,SYSTEM  ABEND THE USER              Y02072
         SPACE 2
****
****     LOAD THE USER'S STACKER SELECT ROUTINE.
****
LOADSS   EQU   *                                                 Y02072
         L     R1,CVTSVDCB         GET ADDR OF SVCLIB DCB        Y02072
         LA    0,4(,RAREA)         POINT TO NAME               @ZA00107
         LOAD  DE=(0),DCB=(1)      LOAD STACKER SELECT ROUTIN  @ZA00107
*
         ST    R0,DCBSSAD          PUT SS RTN ADDR IN THE DCB    Y02072
         ST    R0,DEBSSAD(RDEB)    PUT SS RTN ADDR IN THE DEB    Y02072
         SPACE 2
****
****     IF A VOLUME ID WAS SPECIFIED ON THE JCL, ISSUE A WRITE TO
****     OPERATOR REQUESTING THE VOLUME BE MOUNTED.
****
RDJFCB   EQU   *
         CLI   JFCBVOLS,BLANK      IS VOLID SPECIFIED
         BE    REFRESH             BRANCH IF NOT                 Y02072
*
         MVC   WTODISP(WTOSIZE,RAREA),WTO  BUILD MESSAGE         Y02072
*
         L     RUCB,DEBUCBAD(RDEB)  LOAD ADDR OF UCB
         MVC   UNIT(UNITL,RAREA),UCBNAME   PLACE UNIT IN MSG     Y02072
         MVC   VOLID(VOLL,RAREA),JFCBVOLS  PLACE VOLID IN MSG    Y02072
         WTO   MF=(E,(RAREA))      ISSUE MESSAGE                 Y02072
*
         OI    DCBMRFLG,DELWTO     INDICATE WTO WAS ISSUED
         ST    R1,DCBWTOID         PLACE MESSAGE ID
         SPACE 2
****
****     REFRESH THE USER'S DCB.
****
REFRESH  EQU   *                                                 Y02072
         BAL   RRETURN,FREEMAIN    FREE THE WORK AREA            Y02072
         USING WTG,RWTG            EST WHERE-TO-GO TBL BASE REG  Y02072
         IECRES INIT,DCBCOPY=FRWKAR,STM=(R0,R14,WTGPREFX)        Y02072
         MVC   DEBDCBB(ADDRL,RDEB),DXUDCBAD+1  POINT THE DEB TO  Y02072
*                                  THE USER'S DCB                Y02072
         DROP  RWTG                DROP WHERE-TO-GO TBL BASE REG Y02072
         SPACE 2
****
****     DETERMINE IF ANY MORE DCB'S NEED TO BE PROCESSED BY THIS
****     MODULE.
****
RELOOP   EQU   *
         LA    RWTGC,WGOFF(0,RWTGC) INCR CURRENT WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC) INCR CURRENT DCB ENTRY
         CLC   CURRID(IDL,RWTGC),AMIDCNST THIS RTN NEEDED AGAIN
         BER   RBASE               YES, BRANCH
*
*
         CLC   CURRID(IDL,RWTGC),OPIDCNST END OF TABLE
         BC    7,RELOOP             NO, BRANCH
*
*
         LR    RPARC,RPAR          REINITIALIZE DCB LIST PTR
         LA    RWTGC,WAOFF(0,RWTG) REINITIALIZE WTG LIST PTR
*
*
RELOOP1  EQU   *
         CLI   CURRID(RWTGC),X00   IS THIS ENTRY COMPLETE
         BC    7,XCTLRTN           NO, BRANCH
*
*
         LA    RWTGC,WGOFF(0,RWTGC) GET NEXT WTG ENTRY
         LA    RPARC,PLOFF(0,RPARC) GET NEXT DCB ENTRY
         B     RELOOP1              BR TO CHK NEXT ENTRY
*
*
XCTLRTN  EQU   *
         MVC   WTGID(IDL,RWTG),CURRID(RWTGC) STORE ID IN WTG TABLE
*
         XCTL  EPLOC=(RWTG),SF=(E,DXXCTL),DCB=0  XCTL TO THE     Y02072
*                                  NEXT LOAD                     Y02072
         SPACE 2
****
****     THE FOLLOWING ROUTINE IS USED TO LOAD THE READ, EOB, CHECK,
****     AND CONTROL ROUTINES AND INCLUDE THEIR ID'S IN THE DEB.
****
LOADMOD  EQU   *
         MVC   WTGID(IDL,RWTG),CURRID(RB)    PLACE ID IN WTG TABLE
         L     R1,CVTLINK          GET ADDR OF LINKLIB DCB       Y02072
         LOAD  EPLOC=(RWTG),DCB=(1)  LOAD MODULE                 Y02072
*
*
ADDV5    EQU   *         ENTER HERE TO INCLUDE IGG019V5 ID IN DEB
*
         SR    RJ,RJ
         IC    RJ,DEBNMSUB(RDEB)   GET NUM SUBROUTINES
         LR    RD,RJ               GET NUM SUBROUTINES
         SLL   RD,1                GET DISP TO ID IN DEB
         AR    RD,RDEB
         MVC   IDDEB(IDL,RD),SUBID(RB)  PLACE ID IN DEB
         LA    RJ,ONE(RJ)          INCR NUM SUBROUTINES
         STC   RJ,DEBNMSUB(RDEB)   PLACE NEW NUM SUBRTNS
         BR    RC                  RETURN
         SPACE 2
****
****     THE FOLLOWING ROUTINE IS USED TO FREE THE WORK AREA.
****
FREEMAIN FREEMAIN R,LV=WORKSIZE,A=(RAREA),SP=230  FREE WORK AREA Y02072
         BR    RRETURN             RETURN TO THE CALLER          Y02072
         SPACE 2
****
****     THE FOLLOWING ROUTINE IS USED TO TURN OFF THE DEVICE NOT
****     READY INDICATOR IN THE PRIMARY AND SECONDARY UCB'S.
****
READYDEV EQU   *                                                 Y02072
         IOSGEN UCBFLG,UCB=(RUCB),VAR=OFF,TABLE=UCBNRY           Y02072
         BR    RRETURN             RETURN TO THE CALLER          Y02072
         EJECT
****
****     CONSTANTS
****
WTO      WTO   'IEC001A M UNT,VOLUME',MF=L
AMIDCNST DC    C'7D'               CURRENT MODULE ID
OPIDCNST DC    C'0S'               END OF TABLE ID
         DS    0H
IGG019V7 DC    C'IGG019V7'         MODULE NAME OF 1419 PCI APPE@ZA06120
PCIAPPID EQU   IGG019V7+6          ID OF PCI APPENDAGE         @ZA06120
IGG019V5 DC    C'IGG019V5'         MODULE NAME OF 1419 APPENDAG@ZA06120
APPENDID EQU   IGG019V5+6          ID OF 1419 APPENDAGES         Y02072
READID   DC    C'V1'               ID OF READ ROUTINE            Y02072
EOBID    DC    C'V2'               ID OF END OF BLOCK ROUTINE    Y02072
CHECKID  DC    C'V3'               ID OF CHECK ROUTINE           Y02072
CNTRLID  DC    C'V4'               ID OF CONTROL ROUTINE         Y02072
         DC    C'IGG0197D'                    SIGHT INDICATOR  @ZA07621
         DC    CL8'&SYSDATE'                  SIGHT INDICATOR  @ZA07621
         DC    C'Z07621'                      SIGHT INDICATOR  @ZA07621
PATCH    DC    42X'0',D'0'                  PATCH AREA         @ZA07621
MODLEN   EQU   *                   LENGTH OF THIS MODULE         Y02072
         EJECT
****
****     CONTROL BLOCK DEFINITIONS
****
         CVT   DSECT=YES
         SPACE 3
DCB      DCBD  DSORG=BS,DEVD=MR
         EJECT
         IECDIOCM                                                Y02072
         EJECT
         IGGMSG                                                  Y02072
         EJECT
UCB      DSECT
         IEFUCBOB
         SPACE 3
         IECDSECS (MAIN,(IOB,NO)),PREFX,WTG,EXPAND=YES           Y02072
         END
