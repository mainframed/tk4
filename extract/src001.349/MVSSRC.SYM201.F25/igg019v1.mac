 TITLE   'IGG019V1 - 1419 AND 1275 READ ROUTINE'
IGG019V1 CSECT
*
*
*STATUS - CHANGE LVL 000   VERSION LVL 000   MODIFICATION LVL 000
*                                      XA05401 YA04503 SA71344 @ZA00741
*       RELEASE  21.8 CHANGES          XA05401 YA04503 SA71344 @ZA00741
*                                      XA05401 YA04503 SA71344 @ZA00741
*D820000                               XA05401 YA04503 SA71344 @ZA00741
*A835500                               XA05401 YA04503 SA71344 @ZA00741
*                                      XA05131 SA71441 YA04502 @ZA01356
*      VS1 RELEASE 3.1 CHANGES         XA05131 SA71441 YA04502 @ZA01356
*A645500                               XA05131 SA71441 YA04502 @ZA01356
*     VS2 REL 3.0 CHANGES
*A170500                               XA06885/SA72880/YA07184 @ZA02230
*C545000,665000                        XA06885/SA72880/YA07184 @ZA02230
*                                                              @ZA07621
*     VS2 REL 04.0 CHANGES                                     @ZA07621
*C940000                                                       @ZA07621
*FUNCTION - READ ROUTINE FOR 1419 AND 1275.
*        1- SET THE DATA AREA OF THE LAST BUFFER PROCESSED TO BINARY
*           ZEROES.
*        2- SET THE ECB IN THE MICB CORRESPONDING TO THE ABOVE BUFFER
*           TO ZERO.
*        3- DETERMINE IF THE DEVICE IS ENGAGED, IF IT IS NOT ENGAGED
*           BRANCH TO THE EOB ROUTINE TO ENGAGE THE DEVICE.
*        4- SET NO-OP BIT IN THE MICB SEVEN BEFORE THE CURRENT ONE.
*        5- SET DISENGAGE BIT IN THE MICB SIX BEFORE THE CURRENT ONE.
*        6- PUT THE IOB ADDRESS IN THE DECB.
*        7- PUT THE ADDRESS OF THE BUFFER TO BE PROCESSED IN THE DECB.
*
*ENTRY POINT - IGG019V1 FROM THE READ MACRO EXPANSION
*              LA 1,DECB
*              LA 14,DCB
*              L  15,48(14)
*              BALR 14,15
*INPUT- DECB
*        DECB+8 = DCB ADDRESS
*       DCB
*        DCBIOBA = ADDRESS OF CURRENT MICB.
*        DCBBUFL - BUFFER LENGTH
*        DCBMRFLG = X'10' - USER REQUESTED DISENGAGE
*        DCBEOBR = ADDRESS OF EOB ROUTINE
*        DCBIOBAD = ADDRESS OF IOB FOR THE PCU
*       MICB
*        MICBNM1 = ADDRESS OF MICB JUST PRIOR TO THE CURRENT ONE.
*        MICBDATA = ADDRESS OF THE BUFFER TO BE PROCESSED
*        MICBFLAG = X'80'  ENGAGE NECESSARY
*        MICBFLAG = X'04'  UNIT EXCEPTION                      @ZA02230
*        MICBNM7 = ADDRESS OF MICB SEVEN BEFORE THE CURRENT ONE.
*       BUFFER
*        BYTE 0 - X'10' - UNIT EXCEPTION
*
*OUTPUT-DECB
*        DECB+16 - ADDRESS OF IOB FOR THE PCU
*        DECB+12 - ADDRESS OF THE BUFFER TO BE PROCESSED
*       MICB
*        MICBFLAG - BIT 2 IS SET TO ZERO IN THE MICB SEVEN BEFORE
*                   THE CURRENT ONE.
*                   BIT 2 IS SET TO ONE IN THE MICB SIX BEFORE
*                   THE CURRENT ONE.
*        MICBECB - SET TO ZERO
*       BUFFER
*        THE DATA AREA IN THE BUFFER BEFORE THE CURRENT ONE IS
*        SET TO BINARY ZEROES
*       RETURN CODES
*        X'00' - EOB NOT ENTERED (ENGAGE NOT NECESSARY)
*        X'04' - EOB ENTERED (ENGAGE NECESSARY)
*
*EXTERNAL ROUTINES - IGG019V1 (EOB FOR 1419)
*
*EXITS NORMAL - RETURN TO CALLER ON REG 14 AFTER ENGAGING THE DEVICE
*               OR AFTER MAKING SURE BUFFER IS READY FOR PROCESSING.
*
*EXITS ERROR -  NONE
*
*TABLES/WORKAREAS - CALLERS SAVE AREA
*
*ATTRIBUTES - REENTERABLE
*
*NOTES - NONE
*
*
*
*              SYMBOLIC DEFINITIONS OF REGISTERS
*
RZERO    EQU   0
DECBR    EQU   1                       DECB ADDRESS UPON ENTRY
DCBR     EQU   2                       DCB ADDRESS
MICBR    EQU   3                       MICB ADDRESS
RFOUR    EQU   4                       WORK REG
RFIVE    EQU   5                       WORK REG
RSIX     EQU   6                       WORK REG
RSEVEN   EQU   7                       WORK REG
REIGHT   EQU   8                       WORK REG
RNINE    EQU   9                       WORK REG
RTEN     EQU   10                      WORK REG
RELEVEN  EQU   11                      WORK REG
BASER    EQU   12                       BASE REGISTER
SAVER    EQU   13
RETRNR   EQU   14
ENTRYR   EQU   15
*
*              SYMBOLIC DEFINITIONS FOR DISPLACEMENTS
*
DECBBUFF EQU   12                      DISP TO BUFFER ADDR IN DECB
DECBDCB  EQU   8                       DISP TO DCB ADDR IN DECB
DECBIOB  EQU   16                      DISP TO IOB ADDR IN DECB
DSPZERO  EQU   0                       ZERO DISPLACEMENT
ECBDSP   EQU   4                       DISP TO ECB IN MICB
IOBADDR  EQU   8                       DISP TO IOB FROM IOB PREFIX
LSTBUFF  EQU   24                      DISP TO ADDR OF BUFFER IN MICB
MICBFLG1 EQU   8                       DISP TO MICB FLAG (NOP-DSNGAGE)
RTNSVE   EQU   16                      DISP TO REG 15 IN SAVE AREA
SVEDSP   EQU   12                      DISP TO SAVE AREA
*
*              MISC DEFINITIONS
*
DSENFLG  EQU   X'40'                   DISENGAGE FLAG
ENGAGE   EQU   X'80'                   ENGAGE NECESSARY
FOUR     EQU   4                       TEST RETURN CODE
NOP      EQU   X'BF'                   NO-OP FLAG
ONE      EQU   1
UNITEXCP EQU   X'04'                   UNIT EXCEPTION POSTED   @ZA02230
USERDSEN EQU   X'20'                   USER REQUESTED DISENGAGE
ZERO     EQU   X'00'
*
*
         USING IGG019V1,BASER
         USING IHADCB,DCBR
         USING MICBENTR,MICBR
         STM   RETRNR,BASER,SVEDSP(SAVER)  SAVE THE USER'S REGISTERS
         LR    BASER,ENTRYR            ESTABLISH A BASE REGISTER
         L     DCBR,DECBDCB(DECBR)     ESTABLISH DCB ADDRESS
         L     MICBR,DCBIOBA           ESTABLISH MICB ADDRESS
         L     RFOUR,MICBNM1           PICK UP ADDRESS OF LAST MICB
         L     RFIVE,LSTBUFF(RFOUR)    PICK UP ADDRESS OF LAST BUFFER
         LH    RSIX,DCBBUFL            PICK UP LENGTH OF DATA AREA
         BCTR  RSIX,ZERO               DECREMENT TO CLEAR BUFFER
         BCTR  RSIX,ZERO               DITTO
         MVI   DSPZERO(RFIVE),ZERO     ZERO FIRST BYTE OF DATA AREA
         EX    RSIX,LSTBUF             ZERO DATA AREA IN LAST BUFFER
         SR    RSIX,RSIX               ZERO REG TO CLEAR ECB
         ST    RSIX,ECBDSP(RFOUR)      ZERO ECB IN LAST MICB
***********************************************************************
*                                                              @ZA01356
*     THE FOLLOWING INSTRUCTION WILL CLEAR THE SENSE BYTES SO THAT IF *
*      NO SENSE BYTES ARE TRANSFERED BY THE DEVICE NONE WILL APPEAR   *
*      IN THE MICB.                                            @ZA01356
*                                                              @ZA01356
***********************************************************************
*                                                              @ZA01356
         XC    MICBSENS-MICBENTR(3,RFOUR),MICBSENS-MICBENTR(4) @ZA01356
         TM    MICBFLAG,ENGAGE         READ ISSUED ON THIS BUFF BEFORE
         BO    READ010                 YES, BRANCH
         L     RSIX,MICBDATA           LOAD ADDRESS OF BUFFER
         TM    MICBFLAG,UNITEXCP       UNIT EXCEPTION          @ZA02230
         BZ    READ020                 NO, BRANCH
         TM    DCBMRFLG,USERDSEN       YES, WHO REQUESTED DISENGAGE
         BO    READ020            DONT GO TO EOB
*
READ010  EQU   *
*
         L     ENTRYR,DCBEOBR          PICK UP EOB ENTRY POINT
         ST    DECBR,RTNSVE(SAVER)     SAVE DECB ADDR
         BALR  RETRNR,ENTRYR           BRANCH TO EOB ROUTINE TO ENGAGE
         L     DECBR,RTNSVE(SAVER)     LOAD DECB ADDR
         LA    ENTRYR,FOUR             LOAD RETURN CODE
         ST    ENTRYR,RTNSVE(SAVER)    SET RETURN CODE
         B     READ020                 BRANCH AROUND MOVE
*
*
* THIS INSTRUCTION IS TO ZERO THE LAST BUFFER
*
LSTBUF   MVC   ONE(ZERO,RFIVE),ZERO(RFIVE)   ZERO BUFF N-1
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* THE NEXT FOUR INSTRUCTIONS PREVENT THE REFILLING OF BUFFERS         *
* THAT HAVE NOT BEEN PROCESSED YET.                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
READ020  EQU   *
*
         L     RFOUR,MICBNM7           PICK UP ADDRESS OF MICB SEVEN
*                                      BEFORE THE CURRENT MICB
         L     RFIVE,DSPZERO(RFOUR)    PICK UP ADDRESS OF MICB SIX
*                                      BEFORE THE CURRENT MICB
         OI    MICBFLG1(RFIVE),DSENFLG SET FLAG TO INDICATE DISENGAGE
         NI    MICBFLG1(RFOUR),NOP     SET FLAG TO IND NO-OP   @SA71344
         LA    RFOUR,FOUR              PICK UP EOB RETURN CODE
         CR    RFOUR,ENTRYR            BEEN TO EOB
         BE    READ030                 YES, BRANCH
         SR    ENTRYR,ENTRYR           SET RETURN CODE
         ST    ENTRYR,RTNSVE(SAVER)    STORE RETURN CODE IN SAVE AREA
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PUT ADDRESS OF IOB AND ADDRESS OF BUFFER TO BE PROCESSED IN THE     *
* DECB BEFORE EXITING THIS ROUTINE.                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
READ030  EQU   *
*
         L     RFOUR,DCBIOBAD          PICK UP IOB PREFIX ADDR
         LA    RFOUR,IOBADDR(RFOUR)    COMPUTE IOB ADDR
         ST    RFOUR,DECBIOB(DECBR)    UPDATE IOB ADDR IN DECB
         MVC   DECBBUFF(FOUR,DECBR),MICBDATA  MOVE BUFFER ADDR TO DECB
         LM    RETRNR,BASER,SVEDSP(SAVER)  LOAD THE USER'S REGISTERS
         BR    RETRNR                  RETURN TO USER
         DC    C'IGG019V1'                  SIGHT INDICATOR *  @ZA07621
         DC    CL8'&SYSDATE'                SIGHT INDICATOR *  @ZA07621
         DC    C'Z07621'                    SIGHT INDICATOR *  @ZA07621
PATCH    DC    XL20'00',D'0'                PATCH AREA         @ZA07621
         DCBD  DSORG=BS,DEVD=MR
*        MICBD - DUMMY SECTION FOR THE MICB
MICBENTR DSECT
MICBNEXT DS    A
MICBECB  DS    A
MICBFLAG DS    AL1
MICBSENS DS    AL3
MICBECBA DS    A
MICBNM7  DS    A
MICBNM1  DS    A
MICBDATA DS    A
         END
