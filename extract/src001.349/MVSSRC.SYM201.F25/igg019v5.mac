         TITLE 'IGG019V5 - 1419 APPENDAGES'
IGG019V5 CSECT
         SPACE
***********************************************************************
*                                                                     *
* MODULE NAME - IGG019V5                                              *
*                                                              @ZA06120
* ALIAS - IGG019V7                                             @ZA06120
*                                                                     *
* DESCRIPTIVE NAME - 1419 APPENDAGES                                  *
*                                                                     *
* COPYRIGHT - NONE                                                    *
*                                                                     *
* CHANGE ACTIVITY - AS FOLLOWS:                                       *
*                                                                     *
*          RELEASE 21 DELETIONS                                       *
*1022                                                            A46398
*1022                                                            A46625
*1022                                                            A41426
*1022                                                            A43711
*1022253200                                                      A43224
*1022001200                                                      A42476
*A525700                                                         A33935
*A829800                                                         A39662
*C717000                                                         A39662
*A270100-270400,525200-526000,528040-529120,845500-845800        A33924
*C913200                                                         A33924
*D525600,528600                                                  A33924
*                                                               SA60294
*                                                                     *
*          VS1 RELEASE 03 DELETIONS                                   *
*                                                       SA58043/OX01515
*                                                                     *
*          VS2 RELEASE 02 DELETIONS                                   *
*D065400-067200,072600-074400,076800-077400,079200,092400-093000,Y02072
*D126600-127800,177600-183600,186000-186600,201600-243000,249000-Y02072
*D249600,251400,254400-255000,256200,259800-261400,280200-283200,Y02072
*D284400-285900,288000,289800,291600,304800,313200,316800,318000-Y02072
*D320400,321600-324000,373800,375000-376200,377400,383400-384000,Y02072
*D386400,423600-426000,427200,431400-432000,433200,454200,457800,Y02072
*D473400,474600,475410,492580-492588,492596,498000-499200,500400,Y02072
*D502800-503400,520800,522600,533400-534600,535800,540600,546600,Y02072
*D550800,573600,574800-576000,580200,592800,601800,606600-609000,Y02072
*D622800,624600,672600-673800,675000,676200,679800,681400,697200-Y02072
*D699600,700800,734400-736800,756600-757800,758400,765110-889200,Y02072
*D901200,904200-912000,915600,916800-931200                      Y02072
*                                                                     *
*                                                                     *
* STATUS - VS2 RELEASE 2 LEVEL 0                                      *
*        VS2 REL 3.0 CHANGES
* A491300,856100                                               @ZA02230
*A765232-765312                                                @ZA07205
*                                                                     *
*        VS2 REL 3.7 CHANGES                                   @ZA07621
*C912840                                                       @ZA07621
*C770486-770492,771900-772100,773300-773600,773900-774900      @ZA07621
*C775200                                                       @ZA07621
*A913841-913870                                                @ZA07621
*A289257-289260                                                @ZA09994
*C636940                                                       @ZA09994
*A289257-289260                                                @ZA09992
*C901830                                                        ZA11089
*C773400                                                       @ZA14595
*C729000,C913110                                               @ZA14706
*C726450,A076275,A726000-726420                                @ZA26121
*C523676,A523340-523656                                        @ZA33065
*C342500,A342000-342300                                        @ZA33842
* FUNCTION/OPERATION -                                                *
*              THE APPENDAGES CONTAINED HEREIN MONITOR THE I/O        *
*              OPERATIONS OF THE 1419 MAGNETIC INK CHARACTER READER.  *
*              THE MAIN FUNCTION OF EACH APPENDAGE IS AS FOLLOWS:     *
*                                                                     *
***************************************************************@ZA06120
*                                                              @ZA06120
* NOTE  ***   THE PCI APPENDAGE IS NOW LOADED BY THE ALIAS OF  @ZA06120
*             IGG019V7 TO SEIALIAZE WHEN IN AN MP ENVIRONMENT  @ZA06120
*                                                              @ZA06120
*                                                              @ZA06120
*              1. PCI APPENDAGE-                                      *
*                                                                     *
*                   THIS ROUTINE HANDLES NORMAL POSTING OF BUFFERS    *
*                   AND THE UPDATING OF DATA ADDRESSES IN BOTH THE    *
*                   PCU AND SCU CCW STRINGS.  IT LINKS TO (OR SCHED-  *
*                   ULES THE USERS STACKER SELECT ROUTINE AND PLUGS   *
*                   THE RETURNED COMMAND INTO THE SCU CCW STRING.     *
*                                                                     *
*              2. ABNORMAL END APPENDAGE-                             *
*                                                                     *
*                   THIS ROUTINE HANDLES UNIT CHECK CONDITIONS        *
*                   OCCURING ON EITHER THE PCU OR SCU.  IT SETS       *
*                   ERROR INDICATIONS IN THE BUFFERS AND POSTS        *
*                   I/O  OPERATIONS IN THE MICB ECB.                  *
*                                                                     *
*              3. CHANNEL END APPENDAGE-                              *
*                                                                     *
*                   THIS ROUTINE HANDLES CHANNEL END CONDITIONS       *
*                   ON THE SCU  AND CHANNEL END OR UNIT EXCEPTION     *
*                   ON THE PCU.  BUFFER STATUS INDICATORS ARE SET     *
*                   AND POSTING IS DONE IN THE MICB ECBS.             *
*                                                                     *
*                                                                     *
* ENTRY POINTS - THE FOLLOWING FOUR ENTRY POINTS ARE USED:            *
*                                                                     *
*              1. PCIAPEN-                                            *
*                                                                     *
*                   THIS IS THE ENTRY POINT FOR THE PCI APPENDAGE.    *
*                   IT IS LINKED TO FROM IOS WHEN A PROGRAM CONTROLED *
*                   INTERRUPT OCCURS ON THE SCU CHANNEL PROGRAM.      *
*                                                                     *
*              2. ABNEND-                                             *
*                                                                     *
*                   THIS IS THE ENTRY POINT FOR THE ABNORMAL END      *
*                   APPENDAGE.  IT IS LINKED TO FROM IOS WHEN UNIT    *
*                   CHECK OR CHANNEL ERRORS OCCUR ON THE PCU OR SCU   *
*                                                                     *
*              3. CHANEND-                                            *
*                                                                     *
*                   THIS IS THE ENTRY POINT FOR THE CHANNEL END       *
*                   APPENDAGE.  IT IS LINKED TO FROM IOS WHEN         *
*                   CHANNEL END OR UNIT EXCEPTION OCCUR.              *
*                                                                     *
*                                                                     *
* INPUT -                                                             *
*                                                                     *
*              FOLLOWING IS THE INPUT TO THE APPENDAGES:              *
*                                                                     *
*                   GR1 CONTAINS THE ADDR OF THE REQUEST ELEMENT      *
*                   GR2 CONTAINS THE ADDR OF THE IOB                  *
*                   GR3 CONTAINS THE ADDR OF THE DEB                  *
*                   GR4 CONTAINS THE ADDR OF THE DCB                  *
*                   GR7 CONTAINS THE ADDR OF THE UCB                  *
*                   GR14 CONTAINS THE RETURN ADDR OF IOS              *
*                   GR15 CONTAINS THE ENTRY POINT ADDR                *
*                                                                     *
*                                                                     *
* OUTPUT -                                                            *
*              BUFFER STATUS INDICATORS ARE SET AND I/O OPERATIONS    *
*              ARE POSTED IN THE MICB ECBS.                           *
*                                                                     *
*                                                                     *
* EXTERNAL ROUTINES - THE USERS SS ROUTINE.                           *
*                                                                     *
*                                                                     *
* EXITS-NORMAL - RETURNS TO EXCP VIA A BR 14                          *
*                                                                     *
* EXITS-ERROR - NONE                                                  *
*                                                                     *
*                                                                     *
* TABLES/WORK AREAS - NONE                                            *
*                                                                     *
*                                                                     *
* MACROS-ACTION - MODESET, SETLOCK, PCIPOST, IOSGEN                   *
*                                                                     *
* MACROS-MAPPING - IHAASVT, CVT, DCBD, IEZIOB, IECDIOCM, IECDIOSB,    *
*                  IECDRQE, IHASRB, IEFUCBOB                          *
*                                                                     *
*                                                                     *
* ATTRIBUTES - SERIALLY REUSABLE, SUPERVISOR STATE, NORMALLY RUNS IN  *
*              THE USER'S KEY.                                        *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*   REGISTER EQUATES
***********************************************************************
*
R0       EQU   0                       REGISTER 0                Y02072
ZERO     EQU   R0                      PARM REG
PARM1    EQU   1                       PARM REG
RQEREG   EQU   PARM1                   ADDR OF RQE
PARM2    EQU   2                       PARM REG
IOBREG   EQU   PARM2                   ADDR OF IOB
DEBREG   EQU   3                       ADDR OF DEB
DCBREG   EQU   4                       ADDR OF DCB
GR5      EQU   5                       WORK REGISTER
RWRK1    EQU   GR5                     WORK REGISTER             Y02072
RMICB    EQU   RWRK1                   PTR TO MICB CONTAINING    Y02072
*                                      ECB TO BE POSTED          Y02072
GR6      EQU   6                       WORK REGISTER
GR7      EQU   7                       WORK REGISTER
RUCB     EQU   GR7                     UCB ADDRESS               Y02072
CMICB    EQU   RUCB                    ADDR CURRENT MICB
GR8      EQU   8                       WORK REGISTER
RTCB     EQU   GR8                     TCB ADDRESS               Y02072
CCWREG   EQU   RTCB                    ADDR CCW STRING
GR9      EQU   9                       WORK REG
GR10     EQU   10                      WORK REG
CCREG    EQU   GR10                    COMPLETION CODE REGISTER
ECBADR   EQU   11                      ADDR ECB TO BE POSTED
BAS3     EQU   ECBADR                  BASE FOR SCHEDULED ROUTINE
GR12     EQU   12                      TCB ADDR FOR POST
BA12     EQU   GR12                    BASE REG
R13      EQU   13                      WORK REGISTER             Y02072
SAVREG   EQU   R13                     ADDR SAVE AREA
RTRNREG  EQU   14                      RETURN REGISTER
R15      EQU   15                      REGISTER 15               Y02072
BASE     EQU   R15                     BASE REGISTER
BRANREG  EQU   BASE                    BRANCH REGISTER
         EJECT
***********************************************************************
*   MASKS, DISPLACEMENTS, AND OTHER EQUATES
***********************************************************************
*
*   FOLLOWING ARE EQUATES FOR MASKS AND IMMEDIATE DATA
*
LITEL    EQU   X'10'                   TO SEE IF ITS LAST LITE
OFFLITE  EQU   X'EF'                   TO TURN OFF LIGHT SW
UCHKCHND EQU   X'0A'                   MASK FOR TESTING UNIT CHECK AND
*                                      CHANNEL  END
ALL      EQU   X'FF'
XFF      EQU   X'FF'
REJOFF   EQU   X'7F'                   TO TURN OFF COMMAND REJECT
BADCOMI  EQU   X'08'                   TO INDICATE USER HAS ISSUED
*                                      REJECT COMMAND
BADOFF   EQU   X'F7'                   TO TURN OFF BADCOMI
CHANER   EQU   X'0F'                   MASK FOR TESTING CHANNEL ERRORS
SIT0     EQU   X'0F'                   MASK FOR TESTING WHATS
*                                      HAPPENING IN THE APPENDAGES
NOP      EQU   X'03'                   NO-OP COMMAND
ST2OR3   EQU   X'08'                   TEST FOR STRING 2 OR 3 ON PCU
ST1      EQU   X'04'                   FOR TESTING STRING 1 BIT
MSENS    EQU   X'24'                   MOD SENSE COMMAND CODE
OVERRUN  EQU   X'40'                   FOR TESTING IF BUFFER OVERRUN
*                                      IS IMMINENT
DISENG   EQU   X'DF'                   DISENGAGE COMMAND
CHAINOFF EQU   X'BF'                   TO TURN OFF COMMAND CHAINING
CHAINON  EQU   X'40'                   TO TURN ON COMMAND CHAINING
INITIAL  EQU   X'10'                   TO SEE IF ENGAGE JUST ISSUED
LATESS   EQU   X'04'                   FOR CHECKING LATE  SS
COMRLTSS EQU   X'84'                   COMMAND REJECT - LATE SS  A39662
SETLTSS  EQU   X'20'                   FOR SETTING LATE SS IN BUFFER
X02      EQU   X'02'                   TO INDICATE ERP IS EXECUTING
X01      EQU   X'01'                   TO INDICATE SCU ERP EXECUTING
PCURR    EQU   X'80'                   TO INDICATE POST CURRENT
PCURRP1  EQU   X'40'                   TO INDICATE POST CURR+1
XFD      EQU   X'FD'                   TO TURN OFF X02
X7F      EQU   X'7F'                   TO TURN OFF PCURR
XBF      EQU   X'BF'                   TO TURN OFF PCURRP1
XFE      EQU   X'FE'                   TO TURN OFF X01
AUTSEL   EQU   X'02'                   FOR CHECKING AUTO SELECT BIT
SETAUTS  EQU   X'80'                   FOR SETTING AUTO SEL IN BUFFER
WAIT     EQU   X'80'                   TO CHECK WAIT BIT IN ECB
ZBIT2    EQU   X'DF'                   FOR ZEROING DOC UNDER READ
OFFERR   EQU   X'DF'                   TO TURN OFF UNRECOV
*                                      HEAD BIT
ONBIT4   EQU   X'08'                   FOR TURNING ON BIT4 OF DCBMRFLG
OFFBIT5  EQU   X'FB'                   FOR TURNING OFF BIT5
ONBIT5   EQU   X'04'                   TO TURN ON BIT5
OFFBIT4  EQU   X'F7'                   TO TURN OFF BIT4
BATCH    EQU   X'80'                   TO TEST FOR BATCH NO. UPDATE
PCUABEND EQU   X'AB'                   TO TEST 'WHICH'  SWITCH
SSC0     EQU   X'0B'                   SS IND FOR POCKET 0 2ND   A33924
*                                      GROUP                     A33924
CSS0     EQU   X'DB'                   SS CMD FOR POCKET 0 2ND   A33924
*                                      GROUP                     A33924
UC       EQU   X'02'                   MASK FOR UNIT CHECK       A33924
PCIINCTL EQU   X'01'                   TO SET  'WHICH'  SWITCH
SETO5    EQU   X'A0'                   TO SET BUFFER COUNTER
INVALC   EQU   X'FF'                   TO FORCE COMMAND REJECT
MREAD    EQU   X'4C'                   MREAD BACKWARDS COMMAND
CMRJBOC  EQU   X'A1'                   TO TEST COM REJ,BOC,AND OP ATT
UNRECOV  EQU   X'20'                   TO SET UNRECOV I/O ERROR
INTREQ   EQU   X'40'                   INTERVENTION REQUIRED   @ZA26121
INTVR    EQU   X'41'                   MASK TO TEST INTVR REQ/OPR ATTN
OPATTN   EQU   X'01'                   MASK TO TEST SENS FOR OPR ATTN
SCUAB    EQU   X'BB'                   TO SAY SCU ABEND GOING
IR       EQU   X'08'                   TO SET INTV REQ BIT IN BUFFER
XF0      EQU   X'F0'                   FOR TESTING IF SCU HAS BROKEN
SITF     EQU   X'0F'                   FOR SETTING SITUATION F
SIT2     EQU   X'02'                   FOR SETTING SITUATION 2
CC3      EQU   X'70'                   FOR CHECKING CC=3
UEX      EQU   X'10'                   FOR SETTING UNIT EXCEPTION BIT
UNITEX   EQU   X'04'                    UNIT EX IN MICB        @ZA02230
UNITE    EQU   X'01'                   UNIT EXCEPTION IN CSW
SIT3     EQU   X'03'                   FOR SETTING SITUATION 3
PCUCE    EQU   X'F0'                   TO SAY PCU C.E. APPEN IS EXCTNG
SCUCE    EQU   X'F1'                   TO SAY SCU C.E. APPEN IS EXCTNG
NVAL     EQU   X'F7'                   FOR REMOVING BIT4 IN SS COMM
PCIMISD  EQU   X'04'                   TO INDICATE PCI MISSED
BDTCE    EQU   X'40'                   TO SAY BROKEN DUE TO CHAN END
COMREJ   EQU   X'80'                   FOR TESTING COMMAND REJ ON SCU
LLS      EQU   X'04'                   MASK TO SET ON LATE SS SENSE
CPCHECK  EQU   X'20'                   TO TEST CSW FOR PROGRAM CHECK
TURNOFF  EQU   X'EF'                   TO TURN OFF INITIAL BIT
XREJCOM  EQU   X'CF'                   REJECT POCKET
BDTUC    EQU   X'20'                   USED TO INDICATE IN DCBAPPIN
*                                      THAT THE SCU HAS BROKEN DUE
*                                      TO UNIT CHECK.
BDTLTPCI EQU   X'80'                   USED TO SET DCBAPPIN TO
*                                      INDICATE THE SCU HAS
*                                      BROKEN DUE TO LATE PCI.
PCIENTRY EQU   X'01'                                              41426
SIOENTRY EQU   X'02'                   SIGNAL FOR START I/O ENTRY 41426
IPPCCIC  EQU   X'7F'                   TO TEST ERRORS IN CSW
ASC      EQU   X'E0'                   TO TEST ATTENTION,S MOD,CU END
SIT5     EQU   X'05'                   SITUATION 5 INDICATOR
TIC      EQU   X'08'                   TIC COMMAND CODE
WRDELAY  EQU   X'E1'                   WRITE DELAY COMMAND CODE SA60294
OFF      EQU   X'FF'                   USED TO TURN OFF BITS     Y02072
EXIT     EQU   3                       SVC NO. FOR LEAVING SS ROUTINE
*
*
*   DISPLACEMENT EQUATES
*
*     FOR MICB -
*
MICBNEXT EQU   0                       ADDR  OF NEXT MICB
MICBECB  EQU   4                       EMBEDDED EVENT CONTROL BLOCK
MICBFLAG EQU   8                       FLAG  BITS
MICBSENS EQU   9                       SENSE INFORMATION
MICBECBA EQU   12                      ADDR OF ECB
MICBNM1  EQU   20                      ADDR OF CURRENT - 1
MICBDATA EQU   24                      ADDR OF BUFFER
*
*
*      FOR DEB -
*
DEBTCBAD EQU   0                       ADDR OF TCB
DEBUCBAD EQU   32                      DISP TO UCB ADDR
DEBSSAD  EQU   44                      ADDR OF THE USER'S SS RTN Y02072
*
*
*   FOLLOWING ARE EQUATES FOR VARIOUS DISPLACEMENTS AND LENGTHS
*
ONE      EQU   1                       DISP OF 1
FOUR     EQU   4                       BRANCH DISPLACEMENT
INDLEN   EQU   10                      LENGTH OF BUFFER STATUS
SEVEN    EQU   15                      FOR LENGTH IN MOVE
EIGHT    EQU   8                       DISP OF 8
TWEN4    EQU   24                      DISP OF 24
FORTY    EQU   40                      DISP OF 40
SIX4     EQU   64                      DISP OF 64
FIVE     EQU   5                       DISP OF 5
TWEN8    EQU   28                      DISP OF 28
THREE    EQU   3                       DISP OF 3
FOUR8    EQU   48                      DISP OF 48                A46625
TWO      EQU   2                       DISP OF 2
SIXTEEN  EQU   16                      DISP OF  16
THIR2    EQU   32                      DISP OF 32
SS1DIS   EQU   16                      DISP TO FIRST SS COMMAND IN THE
*                                      SCU CHAIN
SS2DIS   EQU   40                      DISP TO  2ND  SS COMMAND
CCWD     EQU   24                      DISP OF CCW ADDR IN IOB
IOBLN    EQU   48                      LENGTH OF PCU OR SCU IOB
XPCLEN   EQU   80                      LEN OF PCU CHAIN
ZER0     EQU   0
SCUSTRNG EQU   24                      DISP OF CCW ADDR IN IOB
STRNGLEN EQU   24                      LENGTH OF EACH PCU STRING
MSDIS    EQU   16                      DISP TO MSENS IN EACH STRING
MRDIS    EQU   8                       DISP TO MREAD IN EACH STRING
NOPDIS   EQU   0                       DISP TO NOP IN   EACH STRING
OFFREG1  EQU   4                       OFFSET TO REG 1 IN SA     Y02072
OFFREG12 EQU   48                      OFFSET TO REG 12 IN SA    Y02072
OFFREG13 EQU   52                      OFFSET TO REG 13 IN SA    Y02072
OFFREG14 EQU   56                      OFFSET TO REG 14 IN SA    Y02072
TABLE    EQU   8                       TABLE OFFSET FROM INDEX    41426
WORKA    EQU   7                                                  41426
TRCEDSP  EQU   168                     OFFSET OF TRACE TBL FR IOB 41426
TTPTR    EQU   6                                                  41426
WORKB    EQU   10                                                 41426
TRACRET  EQU   11                                                 41426
         EJECT
CHANEND  B     CHANDIS(BASE)           GO TO CHANNEL END HANDLER
ABNEND   B     ABNDIS(BASE)            GO TO ABNORMAL END HANDLER
SIOENTER B     SIODIS(BASE)            START I/O APPENDAGE        41426
*
PCIAPEN  EQU   *                       START OF PCI INTERRUPT HANDLER
         USING *,BA12                  ESTABLISH ADDRESSABILITY
         USING RQE,RQEREG              ESTABLISH RQE BASE REG    Y02072
         USING IHADCB,DCBREG           ESTABLISH DCB BASE REG    Y02072
         USING IOBSTDRD,IOBREG         ESTABLISH IOB BASE REG    Y02072
*
***********************************************************************
*   THE PCI APPENDAGE IS ENTERED WHENEVER A PROGRAM CONTROLLED
*   INTERRUPT OCCURS ON THE SCU COMMAND CHAIN.  THE PCI BIT IS ON IN
*   BOTH WRITE DELAY COMMANDS IN THE SCU CHAIN.  WHEN FUNCTIONING
*   NORMALLY, A PCI INTERRUPT SHOULD OCCUR SHORTLY AFTER THE CHANNEL
*   STARTS EXECUTING A WRITE DELAY COMMAND.  THE APPENDAGE GETS CONTROL
*   AND PERFORMS NECESSARY HOUSEKEEPING THEN LINKS TO THE USER'S
*   STACKER SELECT ROUTINE SO THAT A POCKET MAY BE DETERMINED FOR THE
*   DOCUMENT JUST READ.  THE USER LINKS BACK TO THE APPENDAGE WHICH
*   THEN PLUGS THE CHOSEN SS COMMAND CODE INTO THE NOP COMMAND
*   IMMEDIATELY FOLLOWING THE WRITE DELAY WHICH CAUSED THE INTERRUPT.
*   THE DOCUMENT WILL THEN BE SELECTED INTO THE POCKET CHOSEN BY THE
*   USER.
***********************************************************************
*
         LR    BA12,BASE
         STM   ZERO,BASE,KRESAV        SAVE REGISTERS
         MVI   WHAT,PCIENTRY           SET SWITCH FOR TRACE      Y02072
         MVI   WHICH,PCIINCTL          IND PCI APPEN EXECUTING @ZA07621
         BAL   TRACRET,TRACE           ENTER TRACE               Y02072
*
         L     GR8,IOBCMDA-1           GET COMMAND ADDRESS       Y02072
         L     CMICB,DCBWTOID          GET CURRENT MICB ADDRESS@ZA06142
         CLI   ZERO(GR8),MREAD         READ COMMAND, QQ
         BNE   WRNGCOM                 NO, PCI ON WRONG COMMAND
         MVI   ZERO(GR8),NOP           NOP INVALID COMMAND
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
         MODESET KEYADDR=RQEPRT,WORKREG=9  CHANGE TO USER'S KEY  Y02072
         L     CCWREG,IOBSTART         GET ADDR SCU CCW CHAIN    Y02072
         L     GR6,DCBIOBAD            GET PCU IOB ADDR
         L     GR5,CCWD(GR6)           GET ADDR PCU CCW CHAIN
         LR    GR10,GR5                SAVE ADDR PCU CHAIN
         TM    DCBMRFLG,ST2OR3         ARE WE IN STRING 2 OR 3,QQ
         BZ    ST1005                  NO, DONT BUMP POINTER
         TM    DCBMRFLG,ST1            IS IT STRING 3
         BZ    ST2001                  NO, GO BUMP TO STRING2
         LA    GR5,STRNGLEN(0,GR5)     BUMP TO NEXT STRING
*
ST2001   LA    GR5,STRNGLEN(0,GR5)     DITTO
*
ST1005   L     CMICB,DCBWTOID          PICK UP ADDR CURRENT MICB
         TM    MICBFLAG(CMICB),INITIAL FIRST AFTER AN ENGAGE, QQ
         BZ    NFIRST                  NOT FIRST BUF
         MVI   ZERO(GR10),NOP          SET ENGAGE TO NOP
         B     DONST006                CONTINUE PROCESSING
*
NFIRST   EQU   *
         L     GR9,MICBNM1(0,CMICB)    GET ADDR OF ZEROS
         L     GR9,MICBECBA(GR9)       SET BUFFER
         MVI   ZERO(GR9),XFF           TO
         MVC   ONE(SEVEN,GR9),ZERO(GR9)  ONES
*
DONST006 LA    GR9,EIGHT(CCWREG)       POINT AT FIRST WD COMMAND
         TM    DCBMRFLG,DCBMRSCC       IS THIS 2ND SCU STRING    Y02072
         BZ    DBMPT007                NO, DON'T BUMP POINTER
         LA    GR9,TWEN4(0,GR9)        POINT AT SECOND WD COMMAND
*
DBMPT007 L     GR9,ZERO(0,GR9)         GET ADDR WD BUFFER
         LA    GR8,FOUR8(ZERO,GR9)     LIMITING BUF ADDR         A46625
         LA    GR9,SIX4(0,GR9)         POINT AT BUFFER END
         SH    GR9,IOBCSW+5            SUBTRACT RESIDUAL COUNT   Y02072
         CR    GR9,GR8                 IS CALC BUF ADDR PAST     A46625
*                                      LIMIT                     A46625
         BNH   USEGR9                  WITHIN 16 BYTES OF BUF    A46625
         LR    GR9,GR8                 USE LIMITING ADDR         A46625
*
USEGR9   EQU   *                                                 A46625
         MVI   ZERO(GR9),ZERO          SET UP WD BUFFER
         MVC   ONE(SEVEN,GR9),ZERO(GR9)  TO ZEROS
         ST    GR9,MICBECBA(0,CMICB)   SAVE ADDR OF ZEROS
*
WRNGCOM  EQU   *
         TM    IOBCSW+3,UCHKCHND       UNIT CHECK/CHANNEL END,QQ Y02072
         BNZ   EXCPEXT2                YES, RETURN TO EXCP AND   Y02072
*                                      LET CHANNEL END OR ABNORMAL END
*                                      APPENDAGE HANDLE THE SITUATION
*
         TM    IOBCSW+4,CHANER         ANY OTHER ERRORS,QQ       Y02072
         BNZ   EXCPEXT2                YES, GO TO RETURN TO EXCP Y02072
*
         CLC   MICBSENS+1(TWO,CMICB),ZEROS   ANY SENSE FOR PCU @ZA07206
         BE    EXCPEXT2                NO RETRUN TO EXCP       @ZA04944
         L     GR8,IOBCMDA-1           GET COMMAND ADDR          Y02072
         CLI   ZERO(GR8),NOP           HAS WRITE BEEN NOPPED
         BNE   EXCPEXT2                NO, GO TO RETURN TO EXCP  Y02072
         TM    DCBAPPIN,SIT0           HAS THE PCU CHAIN STOPPED,QQ
         BNZ   EXCPEXT2                YES, GO TO RETURN TO EXCP Y02072
*
         L     GR8,MICBNEXT(0,CMICB)   GET ADDR CURRENT+1
         L     GR8,MICBNEXT(0,GR8)     GET ADDR CURRENT+2
         L     GR8,MICBNEXT(0,GR8)     GET ADDR CURRENT+3
         LA    GR6,MICBSENS+ONE(0,GR8) POINT AT PCU SENSE AREA
         ST    GR6,MSDIS(0,GR5)        PUT ADDR IN MSENSE COMMAND
         MVI   MSDIS(GR5),MSENS        PUT COMMAND BACK
         L     GR6,MICBDATA(0,GR8)     LOAD DATA ADDR
         AH    GR6,DCBBUFL             POINT AT BUFFER END
         BCTR  GR6,0                   DECREMENT BY ONE
         ST    GR6,MRDIS(0,GR5)        PUT ADDR IN MODIFIED READ
         MVI   MRDIS(GR5),MREAD        RESTORE COMMAND
         TM    DCBMRFLG,DCBMRDR        HAS DISENGAGE BEEN ISSUED Y02072
         BZ    SEIFSHUD                NO, SEE IF IT SHOULD BE
         SR    GR6,GR6                 CLEAR 6
         IC    GR6,DCBMRIND            PICK UP BUFFER COU TER
         SH    GR6,H32CON              DECREMENT IT BY ONE
         STC   GR6,DCBMRIND            REPLACE IT.
         SRA   GR6,FIVE                SHIFT OUT NOISE
         BNZ   NODIS010                NOT ZERO, ALL IS WELL
         MVI   NOPDIS(GR5),INVALC      SET NOP TO AN INVALID
*                                      COMMAND, THUS FORCING A
*                                      COMMAND REJECT IF THE
*                                      DISENGAGE WAS LOST.
         B     NODIS010                DONT TEST FOR DISENGAGE
*
SEIFSHUD EQU   *
         TM    MICBFLAG(GR8),OVERRUN   IS BUFFER OVERRUN IMMINENT
         BO    DISEN008                YES, GO SET FOR DISENGAGE
*
         TM    DCBMRFLG,DCBMRDRU       DID USER REQUEST DISNGAGE Y02072
         BZ    NODIS010                NO, DONT SET FOR STOP.
*
DISEN008 MVI   NOPDIS(GR10),DISENG     DITTO
         MVI   STRNGLEN(GR10),DISENG   DITTO
         MVI   STRNGLEN+STRNGLEN(GR10),DISENG  DITTO
         OI    DCBMRFLG,DCBMRDR        INDICATE DISENGAGE SET    Y02072
         OI    DCBMRIND,SETO5          SET BUFFER COUNTER SO WE CAN
*                                      FORCE COMMAND REJECT IF
*                                      DISENGAGE COMMAND IS LOST.
*
*
NODIS010 L     GR5,MICBNEXT(0,CMICB)   GET ADDR CURRENT+1 MICB
         ST    GR5,DCBWTOID            BUMP CURRENT POINTER
         LA    GR5,MICBSENS(0,GR5)     POINT AT SENSE LOCATION
         L     CCWREG,IOBSTART         GET ADDR SCU CCW CHAIN    Y02072
         TM    DCBMRFLG,DCBMRSCC       ARE WE IN 2ND SCU STRING  Y02072
         BO    SCSTR015                YES, GO UPDATE FIRST STRING
         ST    GR5,ZERO(0,CCWREG)      PUT SENSE ADDR IN COMMAND
         MVI   ZERO(CCWREG),MSENS      PUT COMMAND CODE BACK
         MVI   FORTY(CCWREG),MREAD     SET UP REJECT COMMAND IN CASE
*                                      OF MISSED PCI
         NI    FOUR(CCWREG),CHAINOFF   TURN CHAIN BIT OFF
         OI    TWEN8(CCWREG),CHAINON   TURN CHAIN BIT ON IN THIS STRNG
         B     SETSS020                GO SET SS INFO IN BUFFER
*
*
SCSTR015 ST    GR5,TWEN4(0,CCWREG)     PUT SENS ADDR IN COMMAND
         MVI   TWEN4(CCWREG),MSENS     PUT COMMAND CODE BACK
         MVI   SIXTEEN(CCWREG),MREAD   SET UP REJECT COMMAND IN CASE
*                                      OF MISSED PCI
         NI    TWEN8(CCWREG),CHAINOFF  TURN CHAIN BIT OFF
         OI    FOUR(CCWREG),CHAINON    TURN CHAIN BIT ON IN THIS STRNG
*
*
SETSS020 TM    MICBFLAG(CMICB),INITIAL  FIRST BUFFER AFTER ENGAGE
         BO    SETRD040                YES, DONT SET SS INFO
         L     GR5,MICBNM1(0,CMICB)    GET ADDR CURRENT-1 MICB
         L     GR8,MICBDATA(0,GR5)     GET ADDR BUFFER
         TM    MICBSENS(GR5),LATESS    LATE STACKER SELECT,QQ
         BZ    TSTAT025                NO, TEST AUTO SELECT
         OI    THREE(GR8),SETLTSS      INDICATE LATE SS IN BUFFER
         MVI   FIVE(GR8),XREJCOM       PUT X'CF' IN BYTE 5
*
TSTAT025 TM    MICBSENS(GR5),AUTSEL    WAS DOCUMENT AUTO SELECTED
         BZ    SETRD040                NO, GO SET READ STATUS    Y02072
         MVI   FIVE(GR8),XREJCOM       PUT X'CF' IN BYTE 5
         OI    TWO(GR8),SETAUTS        INDICATE AUTO SELECT
*
*
SETRD040 L     GR5,MICBDATA(0,CMICB)   GET BUFFER ADDR
         MVC   TWO(TWO,GR5),MICBSENS+ONE(CMICB)  SET READ STATUS
         NI    THREE(GR5),ZBIT2        ZERO BIT 2
         XI    DCBMRFLG,DCBMRSCC       UPDATE STRING IND FOR SCU Y02072
         TM    DCBMRFLG,ST2OR3         STRING 2 OR 3, QQ
         BO    WHICH045                GO SEE WHICH ONE
         NI    DCBMRFLG,OFFBIT5        TURN OFF BIT5
         OI    DCBMRFLG,ONBIT4         TURN ON BIT 4
         B     TSTAT055                GO TEST FOR AUTO SELECT
*
*
WHICH045 TM    DCBMRFLG,ONBIT5         STRING 3, QQ
         BZ    SETB5050                NO, GO TURN ON BIT5
         NI    DCBMRFLG,OFFBIT4        TURN OFF BIT4
*
SETB5050 OI    DCBMRFLG,ONBIT5         TURN ON BIT5
*
*
TSTAT055 TM    TWO(GR5),AUTSEL         WAS DOCUMENT AUTO SELECTED
         MVI   FIVE(GR5),XREJCOM       PUT X'CF' IN BYTE FIVE
         LA    BAS3,STPRM085+TWO       SET UP NEW BASE
         BO    EXIT0120                YES, DONT DO STACKER SELECT
         EJECT
***********************************************************************
*  FOLLOWING IS THE ENTRY POINT TO THE STACKER SELECT ROUTINE.
***********************************************************************
*
STPRM085 BALR  BAS3,0                  BASE
         USING *,BAS3                  REGISTERS
         L     PARM2,DCBIMAGE          GET IMAGE ADDR ADDR IN REG2
         L     PARM1,DCBWTOID          GET ADDR CURRENT MICB
         CLI   DCBAPPIN,SIT3           IS IT SIT. 3-BAD READ     A43224
         BNE   BACK                    NO, BACK UP CURR. PTR.    A43224
         XI    DCBMRFLG,DCBMRSCC       UPDATE SCU STRING INDR    Y02072
         B     NOBACK                  DONT BACK UP PTR.         A43224
*
BACK     L     PARM1,MICBNM1(0,PARM1)  GET ADDR PREV. MICB       A43224
*
NOBACK   EQU   *                                                 A43224
         L     PARM1,MICBDATA(0,PARM1) POINT AT BUFFER
         L     SAVREG,DCBIOBAD         GET ADDR PCU IOB          Y02072
         LA    SAVREG,IOBLN+IOBLN(0,SAVREG)  POINT AT SAVE AREA
*
         L     BRANREG,DEBSSAD(,DEBREG)  GET ADDR OF SS ROUTINE  Y02072
         LR    DEBREG,DCBREG           PUT DCB ADDR IN 3
         BALR  RTRNREG,BRANREG         GO TO  USER
*
         L     PARM2,DCBIOBAD          GET ADDR PCU IOB
         L     PARM2,IOBLN+SCUSTRNG(0,PARM2)  GET ADDR SCU CCW STRING
         IC    GR7,FOUR(0,PARM1)       PICK UP USERS SS CODE
         STC   GR7,FIVE(0,PARM1)       PUT COMMAND IN BYTE 5
         CLI   FOUR(PARM1),SSC0        IS SS INDICATOR A X'0B'   A33924
         BNE   TESTBNU                 NO/GO TEST FOR BNU        A33924
         LA    GR7,CSS0                LOAD COMMAND CODE FOR 0   A33924
*
TESTBNU  EQU   *                                                 A33924
         TM    ONE(PARM1),BATCH        BATCH NO. UPDATE SPECIFIED
         BO    DNTOR100                YES,LEAVE BIT 4 IN COMMAND
         LA    GR8,NVAL                GET X'F7'
         NR    GR7,GR8                 REMOVE BIT4
*
DNTOR100 LA    GR8,MREAD               GET READ OP CODE
         CR    GR7,GR8                 IS USER PLUGGING A READ
         BNE   SWCHAN                  NO,  CHECK WHICH CHAIN
         L     GR8,DCBWTOID            GET CURRENT MICB ADDR
         OI    MICBFLAG(GR8),BADCOMI   INDICATE USER HAS ISSUED READ
*
SWCHAN   TM    DCBMRFLG,DCBMRSCC       IS CHAIN2 INDICATED, QQ   Y02072
         BO    SET10105                YES, PUT COMMAND IN CHAIN1
         STC   GR7,SS2DIS(0,PARM2)     PUT COMMAND IN CHAIN2
         B     EXIT0120                GET READY TO GET OUT
*
SET10105 STC   GR7,SS1DIS(0,PARM2)     PUT COMMAND IN CHAIN 1
*
EXIT0120 EQU   *                                                 Y02072
         L     RTRNREG,KRESAV+OFFREG14  RESTORE RETURN ADDRESS   Y02072
         CLI   WHICH,PCUABEND          ARE WE IN ABNORMAL END APPENDAGE
         BE    TSTXERR                 YES, SEE WHY
*
         CLI   WHICH,PCIINCTL          IS PCI APPEND IN CONTROL  Y02072
         BNE   SSRETRN1                GO RETURN TO EXCP IF NOT  Y02072
         L     RWRK1,DCBWTOID          GET ADDR CURRENT+1 MICB @ZA06708
         L     RWRK1,MICBNM1(,RWRK1)   GET ADDR CURRENT MICB   @ZA06708
         TM    MICBFLAG(RWRK1),INITIAL FIRST BUFF AFTER ENGAGE @ZA09992
         BO    SSRETRN1                YES DONT POST           @ZA09992
         L     RWRK1,MICBNM1(,RWRK1)   GET ADDR CURRENT-1 MICB @ZA06708
         LA    RWRK1,MICBECB(,RWRK1)   GET ADDR CURRENT-1 ECB    Y02072
         OI    0(RWRK1),ZERO           PROG CHK IF NOT USER CORE Y02072
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
         L     RQEREG,KRESAV+OFFREG1   RESTORE RQE ADDRESS       Y02072
         L     SAVREG,KRESAV+OFFREG13     RESTORE EXCP'S SA PTR  Y02072
         L     GR10,KCODCON            GET COMPLETION CODE       Y02072
         PCIPOST ECB=(RWRK1),SVAREA=(SAVREG),RQE=(1),CODE=(10)   Y02072X
                                       POST ECB COMPLETE         Y02072
         B     SSRETRN2                GO TO RETURN TO EXCP      Y02072
*
TSTXERR  TM    ZERSAV,UNRECOV          CALL ERP, QQ
         BNZ   CALLERP                 YES, GO IND ERP TO EXEC   Y02072
         LA    RTRNREG,4(,RTRNREG)     INCR TO 2ND EXCP RTRN PT  Y02072
         B     SSRETRN1                GO TO RETURN TO EXCP      Y02072
*
CALLERP  EQU   *                                                 Y02072
         OI    DCBMRIND,X02            INDICATE ERP IS EXECUTING
*
SSRETRN1 EQU   *                       NOT IN KEY 0              Y02072
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
*
SSRETRN2 EQU   *                       ALREADY IN KEY 0          Y02072
         ST    RTRNREG,KRESAV+OFFREG14  UPDATE EXCP RETURN ADDR  Y02072
         MVI   WHICH,ZERO              ZERO SWITCH
         LM    R0,R15,KRESAV           RESTORE EXCP'S REGISTERS  Y02072
         BR    RTRNREG                 RETURN TO EXCP
         DROP  BAS3                    DROP BASE REGISTER
         EJECT
***********************************************************************
*   FOLLOWING IS THE ABNORMAL END APPENDAGE.  IT IS LINKED TO FROM
*   IOS WHENEVER UNIT CHECK OR CHANNEL ERRORS OCCUR ON THE CCW CHAINS.
*   THE APPENDAGE THEN SETS ERROR INFORMATION IN THE BUFFERS AND POSTS
*   THEM COMPLETE.  IF THE ERROR WAS ANYTHING OTHER THAN INTERVENTION
*   REQUIRED, THIS APPENDAGE SPECIFIES THAT THE ERP SHOULD BE SCHEDULED
*   WHEN IT RETURNS TO IOS.
***********************************************************************
*
AEAPEN   EQU   *
         USING PCIAPEN,BA12
         USING RQE,RQEREG              ESTABLISH RQE BASE REG   Y02072
         LA    BA12,PCIAPEN-ABNEND(0,BASE)  SET UP BASE
         L     GR10,DCBIOBAD           GET ADDR PCU IOB
         LA    GR10,EIGHT(0,GR10)      BUMP OVER PREFIX
         LA    IOBREG,ZERO(0,IOBREG)   CLEAR OUT GARBAGE
         STM   ZERO,BASE,KRESAV        SAVE IOS REGS             Y02072
         CR    GR10,IOBREG             PCU ABNORMAL END, QQ
         BNE   SCUAB800                NO GO HANDLE SCU ABNEND
         MVI   WHICH,PCUABEND          IND PCU ABEND GOING     @ZA07621
         BAL   TRACRET,TRACE           ENTER TRACE FOR BREAK IN   41426
*                                      CHAIN                      41426
         TM    DCBMRIND,X02            ERP JUST FINISHED, QQ
         BZ    GTCOM005                NO, GO GET COMMAND ADDR
         NI    DCBMRIND,XFD            TURN OFF ERP GOING BIT
         TM    DCBMRIND,X01            IS SCU ERP EXECUTING
         BO    EXCPEXT1                YES, LET IT POST BUFFER   Y02072
*
         TM    DCBMRFG,PCURR           CURRENT NEED POSTING
         BO    NPCURR                  YES, GO POST IT
         TM    DCBMRFG,PCURRP1         CURR+1 NEEDS POSTING, QQ
         BO    NPCURRP1                YES, GO POST IT
*
*   NOTHING NEEDS POSTING, GET OUT
*
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
*
NPCURR   NI    DCBMRFG,X7F             TURN OFF POST CURRENT FLAG
         L     GR5,DCBWTOID            GET ADDR CURRENT
*
DIDEW    EQU   *                                                 Y02072
         L     CCREG,KPCUER            INIT CC TO ERROR ON PCU   Y02072
         CLI   IOBSIOCC,CC3            IS CONDITION CODE 3       Y02072
         BNE   CHKWAIT                 POST ECB IN ERROR IF NOT  Y01072
         L     CCREG,KCODCON           CHANGE CC TO IND SUCCESS  Y02072
*
CHKWAIT  EQU   *                                                 Y02072
         TM    MICBECB(GR5),WAIT       DID USER WAIT             Y02072
         BNZ   POSTECB                 YES, GO TO POST ROUTINE   Y02072
         ST    CCREG,MICBECB(,GR5)     POST ECB                  Y02072
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
*
POSTECB  EQU   *                                                 Y02072
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
*
NPCURRP1 NI    DCBMRFG,XBF             TURN OFF POST FLAG
         L     GR5,DCBWTOID            GET ADDR OF CURRENT MICB
         L     GR5,MICBNEXT(GR5)       GET ADDR CURRENT+1
         B     DIDEW                   GO POST CURR+1
*
GTCOM005 EQU   *                                                 Y02072
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
*                                      APPENDAGE IS EXECUTING
         MODESET KEYADDR=RQEPRT,WORKREG=9  CHANGE TO USER'S KEY  Y02072
         CLI   IOBSIOCC,CC3            DEVICE NOT OPERATIONAL, @ZA06142
         L     CMICB,DCBWTOID          GET ADDR OF CURR MICB   @ZA06142
         BNE   XCHKCOM                 NO, SEE WHERE WE BLEW
         B     CURR020                 GO HANDLE BLOW UP ON CURRENT
*
XCHKCOM  EQU   *
         L     GR5,IOBCMDA-1           PICK UP COMMAND ADDR      Y02072
         LA    GR5,0(0,GR5)            GET RID OF GARBAGE
         LTR   GR5,GR5                 CSW ZERO                @ZA01359
         BZ    CURR020                 YES USE CURRENT BUFFER  @ZA01359
         SH    GR5,KEIGHT              POINT AT COMMAND THAT BLEW
         CLI   ZERO(GR5),MREAD         IS IT A MOD READ
         BNE   SEEIF010                NO, CHECK  MSENSE
*
         LA    GR5,EIGHT(0,GR5)        POINT AT MSENSE
         B     GSENS015                GO PICK OUT SENSE ADDR
*
SEEIF010 CLI   ZERO(GR5),MSENS         IS IT A MOD SENSE
         BE    GSENS015                YES, GO GET SENSE ADDR
         CLI   ZERO(GR5),TIC           IS IT A TIC?            @ZA33842
         BNE   ENGDIS                  NO - BRANCH AROUND      @ZA33842
         SH    GR5,KEIGHT              YES-BACK UP TO MSENSE   @ZA33842
         B     GSENS015                GO GET SENSE ADDR       @ZA33842
*
ENGDIS   LA    GR5,SIXTEEN(0,GR5)      MUST BE ENG OR DISENG   @ZA33842
*                                      BUMP BY 16 TO POINT AT MSENS
GSENS015 L     GR5,ZERO(0,GR5)         GET SENSE ADDR FROM COMMAND
         LA    GR5,ZERO(0,GR5)         GET RID OF GARBAGE
         SH    GR5,KTEN                GR5 NOW POINTS AT THE MICB
*                                      WHICH CORRESPONDS TO THE
*                                      COMMAND CHAIN THAT BLEW UP
         L     CMICB,DCBWTOID          GET ADDR OF CURRENT MICB
         LA    CMICB,0(0,CMICB)        GET RID OF GARBAGE
         CR    GR5,CMICB               DID WE BLOW UP ON CURRENT STRNG
         BE    CURR020                 YES,GO PROCESS ERROR
         L     GR5,MICBNM1(0,GR5)      POINT AT CURRENT-1
         CR    GR5,CMICB               DID WE BLOW UP ON CURRENT+1
         BE    CURP1065                YES, GO  PROCESS ERROR
*
         B     CURP2                   MUST HAVE BLOWN UP ON CURRENT+2
*
CURR020  TM    MICBFLAG(CMICB),INITIAL FIRST BUFF ATER AN ENGAGE
         BZ    SCUBR035                NO, GO SEE IF SCU STILL GOING
*
         L     GR5,MICBDATA(0,CMICB)   GET ADDR BUFFER
         BAL   RTRNREG,SESTAT          GO SET BUFFER STATUS
*
         TM    DCBAPPIN,XF0            HAS SCU CHAIN BROKEN
         BNZ   CHKWT050                YES,GO SEE IF USER WAITED
         MVI   DCBAPPIN,SITF           INDICATE  SITUATION F.
*                                      THIS INDICATES  TO THE SCU
*                                      APPENDAGES THAT ONLY THE
*                                      CURRENT BUFFER NEEDS TO BE
*                                      POSTED
*
         B     TSTIR060                GO CHECK FOR INTV REQUIRED
*
SCUBR035 TM    DCBAPPIN,XF0            HAS SCU CHAIN BEEN BROKEN
         BNZ   SETER040                YES, SET ERROR INFO IN BUFFER
         MVI   DCBAPPIN,SIT2           INDICATE SITUATION 2 SO THAT
*                                      SCU APPENDAGES KNOW THAT
*                                      CURRENT-1  BUFFER MUST STILL
*                                      BE SET FOR SS AND POSTED.
*
SETER040 L     GR5,MICBDATA(0,CMICB)   GET ADDR BUFFER
         BAL   RTRNREG,SESTAT          GO SET BUFFER STATUS
*
CHKWT050 TM    ZERSAV,UNRECOV          GOING TO ERP
         BNZ   REDPOST                 YES GO INDICATE WE ARE READY TO
*                                      POST UPON COMPLETION OF ERP
         TM    DCBMRIND,X01            IS SCU ERP EXECUTING
         BO    REDPOST                 YES,INDICATE WE ARE READY
*                                      ANYTIME YOU ARE.
         TM    MICBECB(CMICB),WAIT     DID USER WAIT FOR BUFFER
         BZ    IPOST055                NO I WILL POST IT
*
         L     CCREG,KCODCON           LOAD NORMAL COMPLETION CODE
         LR    RMICB,CMICB             SET UP MICB PTR FOR POST  Y02072
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
*
*
IPOST055 MVC   MICBECB(FOUR,CMICB),KCODCON  POST COMPLETE
         B     TSTIR060                GO LEAVE
*
REDPOST  OI    DCBMRFG,PCURR           SAY CURRENT MUST BE POSTED
*
TSTIR060 TM    ZERSAV,UNRECOV          ERRORS BESIDES I.R.
         BNZ   GO2ERP                  SET FOR ERP
         CLI   IOBSIOCC,CC3            DEVICE NOT READY, QQ
         BNE   EXCPEXT1                RETURN TO EXCP IF NOT     Y02072
*
GO2ERP   OI    DCBMRIND,X02            INDICATE ERP IS EXECUTING FOR
*                                      PCU
         B     EXCPEXT2                LET EXCP SCHEDULE ERP     Y02072
*
*
***********************************************************************
*   THE FOLLOWING CODE HANDLES THE SITUATION WHEN THE PCU CHAIN
*   BLOWS UP ON THE CURRENT+1 BUFFER.
***********************************************************************
*
CURP2    L     GR5,MICBNEXT(0,GR5)     POINT AT C+2 MICB
         L     GR5,MICBDATA(0,GR5)     POINT AT C+2 BUFFER
         LH    GR6,DCBBUFL             GET BUFFER LEN
         BCTR  GR6,ZERO                DECREMENT FOR EXECUTE
         EX    GR6,CLR                 CLEAR C+2 BUFFER
*
         B     CURP1065                GO HANDLE BLOW UP AS IF IT
*                                      OCCURRED ON C+1.
*
CURP1065 TM    DCBAPPIN,XF0            HAS SCU CHAIN BROKEN
         BZ    SETSS090                GO SET STACKER INFO IN C-1
*
         CLI   WHICH,PCUABEND          ARE WE IN CHAN END APPENDAGE
         BNE   CLRBUF75                YES, GO CLEAR C+1  BUFFER
*
         L     GR5,MICBDATA(0,CMICB)   GET ADDR CURRENT BUFFER
         BAL   RTRNREG,SESTAT          GO SET BUFFER STATUS
*
CLRBUF75 L     GR5,MICBNEXT(0,CMICB)   GET ADDR C+1 MICB
         L     GR5,MICBDATA(0,GR5)     GET ADDR C+1 BUFFER
         LH    GR6,DCBBUFL             GET BUFFER LENGTH
         BCTR  GR6,ZERO                DECREMENT FOR EXECUTE
         EX    GR6,CLR                 CLEAR C+1 BUFFER
*
*
         B     CHKWT050                GO POST AND EXIT
*
*
***********************************************************************
*   IF THE PCU CHAIN BLEW UP ON THE CURRENT+1 BUFFER AND THE SCU CHAIN
*   HAS NOT YET BROKEN, THE FOLLOWING CODE IS EXECUTED.
***********************************************************************
*
SETSS090 TM    MICBFLAG(CMICB),INITIAL  FIRST AFTER AN ENGAGE
         BO    SWHCH105                GO SEE TO C+1
         L     GR5,MICBNM1(0,CMICB)    GET ADDR C-1 MICB
         L     GR6,MICBDATA(0,GR5)     GET C-1 BUFFER ADDR
         TM    MICBSENS(GR5),LATESS    LATE STACKER SELECT,QQ
         BZ    TSTAT095                NO, TEST AUTO SELECT
         MVI   FIVE(GR6),XREJCOM       PUT X'CF' IN BYTE 5
         OI    THREE(GR6),SETLTSS      SET LATE STACKER BIT
*
TSTAT095 TM    MICBSENS(GR5),AUTSEL    WAS DOCUMENT AUTO SELECTED
         BZ    DPOST095
         OI    TWO(GR6),SETAUTS        INDICATE AUTO SELECT
         MVI   FIVE(GR6),XREJCOM       PUT X'CF' IN BYTE 5
*
DPOST095 TM    MICBECB(GR5),WAIT       DID USER WAIT
         BZ    MPST100                 NO, POST MYSELF
         L     CCREG,KCODCON           LOAD COMPLETION CODE
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
         B     SWHCH105                GO SEE WHICH APPENDAGE WERE IN
*
*
MPST100  MVC   MICBECB(FOUR,GR5),KCODCON  POST C-1 COMPLETE
*
SWHCH105 L     GR6,MICBNEXT(,CMICB)    GET ADDR OF C+1 MICB      Y02072
         L     GR5,MICBDATA(,GR6)      GET ADDR OF C+1 BUFF      Y02072
         BAL   RTRNREG,SESTAT          GO SET BUFFER STATUS
         TM    ZERSAV,UNRECOV          GOING TO ERP,QQ
         BNZ   RPOST                   YES, INDICATE READY FOR POST
         TM    DCBMRIND,X01            IS SCU EXECUTING
         BO    RPOST                   YES, INDICATE READY FOR POST
         MVC   MICBECB(FOUR,GR6),KCODCON  POST NORMAL COMPLETION Y02072
         B     LEVALON                 GET READY FOR SS
*
RPOST    OI    DCBMRFG,PCURRP1         CURRENT+1 MUST BE POSTED
*
LEVALON  EQU   *
         L     GR5,MICBDATA(0,CMICB)   PICK UP BUFFER ADDRESS
         MVC   TWO(TWO,GR5),MICBSENS+ONE(CMICB)  SET READ STATUS
         NI    THREE(GR5),ZBIT2        ZERO BIT 2
         MVI   DCBAPPIN,SIT3           SET SITUATION INDICATOR FOR
*                                      SCU APPENDAGES.
         B     TSTAT055                GO AND PREPARE  FOR EXIT TO
*                                      USERS  SS  ROUTINE.
*
***********************************************************************
*   THE FOLLOWING SUBROUTINE SETS BUFFER STATUS INDICATORS
***********************************************************************
*
SESTAT   EQU   *                                                 Y02072
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
         ST    CMICB,CSAV              SAVE CURRENT MICB
         ST    RTRNREG,RTRNSAVE        SAVE SUBROUTINE RETRN REG Y02072
         MODESET KEYADDR=RQEPRT,WORKREG=9  CHANGE TO USER'S KEY  Y02072
         TM    IOBCSW+3,ASC            ATTN, S MOD, OR CU END    Y02072
         BZ    OTHERR                  NO, SEE IF OTHER ERRORS
         OI    ZERO(GR5),UNRECOV       SET IO ERROR BIT
*
OTHERR   TM    IOBCSW+4,IPPCCIC        OTHER ERRORS IN STATUS    Y02072
         BZ    TSNS                    NO, TEST SENSE
         OI    ZERO(GR5),UNRECOV       SET IO ERROR BIT
*
TSNS     TM    IOBSENS0,CMRJBOC        CMD REJECT OR BUS OUT CHK Y02072
         BZ    CHKIRQ                  NO, CHECK I.R.
         OI    ZERO(GR5),UNRECOV       SET IO ERROR BIT
*
CHKIRQ   TM    IOBSENS0,INTVR          IS I.R. BIT ON            Y02072
         BNZ   SETIR                   YES GO SET I.R.         @ZA02234
         TM    IOBSENS0,XFF-INTVR-AUTSEL    ANY VALID SENSE    @ZA02234
         BZ    SETIR                   NO SET I.R. BIT ON      @ZA04946
         CLC   IOBSENS0(TWO),DUMSENS   DUMMY SENSE FROM IOS    @ZA04946
         BNE    SAVE0                  NO USE NORMAL SENSE     @ZA04946
         OI    ZERO(GR5),UNRECOV       SET I/O ERROR           @ZA04946
SETIR    EQU   *                                               @ZA02234
         OI    ZERO(GR5),IR            SET ON I.R. BIT
         NI    0(GR5),OFF-UEX          TURN OFF UNIT EXCEPTION  OX01515
         L     RUCB,DEBUCBAD(,DEBREG)  GET ADDR OF PCU UCB       Y02072
         BAL   RTRNREG,DEVNREDY        GO TO SET PCU NOT READY   Y02072
         CLI   WHICH,PCUABEND          PCU ABEND, QQ
         BE    SAVE0                   YES, DON'T SET SCU NOT    Y02072
*                                      READY                     Y02072
         L     RUCB,DEBUCBAD+4(,DEBREG)  GET ADDR OF SCU UCB     Y02072
         BAL   RTRNREG,DEVNREDY        GO TO SET SCU NOT READY   Y02072
*
SAVE0    EQU   *                                                 Y02072
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
         MVC   ZERSAV(ONE),ZERO(GR5)   SAVE BYTE ZERO
         MODESET KEYADDR=RQEPRT,WORKREG=9  CHANGE TO USER'S KEY  Y02072
         L     CMICB,CSAV              RESTORE MICB POINTER
         L     RTRNREG,RTRNSAVE        RESTORE RETURN ADDRESS    Y02072
         BR    RTRNREG                 RETURN
         DROP  RQEREG                  DROP RQE BASE REGISTER    Y02072
         EJECT
***********************************************************************
*   THE FOLLOWING IS THE CHANNEL END APPENDAGE.  IT IS ENTERED WHEN
*   CHANNEL END OCCURS ON THE PCU OR SCU CCW CHAINS.
***********************************************************************
*
CEAPEN   EQU   *
         USING RQE,RQEREG              ESTABLISH RQE BASE REG    Y02072
         LA    BA12,PCIAPEN-CHANEND(0,BASE)  SET BASE  REGISTER
         L     GR10,DCBIOBAD           GET ADDR PCU IOB
         LA    GR10,EIGHT(GR10)        BUMP OVER PREFIX
         LA    IOBREG,0(IOBREG)        CLEAR OUT GARBAGE
         STM   R0,R15,KRESAV           SAVE EXCP'S REGISTERS     Y02072
         CR    GR10,IOBREG             PCU CHANNEL END. QQ
         BNE   SCUCE005                NO, GO HANDLE SCU CHAN END
         MVI   WHICH,PCUCE             INDICATE PCU CHAN END     Y02072
*                                      APPEN IS BEING EXECUTED   Y02072
         BAL   TRACRET,TRACE           ENTER TRACE FOR BREAK IN   41426
*                                      CHAIN                      41426
         LA    GR5,IOBLN(GR10)         POINT TO SCU IOB
         TM    TWO(GR5),OPATTN         TEST IF OP ATTN LAST TIME
         BZ    CECONT                  NO, CONT CHANNEL END PROCESSING
         L     RUCB,DEBUCBAD(,DEBREG)  GET ADDR OF PCU UCB       Y02072
         BAL   RTRNREG,DEVNREDY        SET PCU UCB TO NOT READY  Y02072
*                                      TO SYNC PCU WITH SCU      Y02072
CECONT   EQU   *
         L     CMICB,DCBWTOID          PICK UP ADDR CURRENT MICB
*
         TM    DCBAPPIN,XF0-UEX        HAS SCU STOPPED           Y02072
         BNZ   GETGONX                 YES, POST AND LEAVE
*
         L     GR5,IOBCMDA-1           PICKUP COMMAND ADDR       Y02072
         L     GR5,ZERO(0,GR5)         GET SENSE ADDR
         LA    GR5,ZERO(0,GR5)         GET RID OF GARBAGE
         SH    GR5,KTEN                GR5 NOW POINTS AT THE MICB WHICH
*                                      CORRESPONDS TO THE COMAND STRING
*                                      THAT TERMINATED DUE TO UNIT EX.
         LA    CMICB,0(0,CMICB)        GET RID OF GARBAGE
         CR    GR5,CMICB               TERMINATE ON CURRENT
         BE    UEONC                   YES, GO HANDLE AS NORMAL
*
*
***********************************************************************
*   UNIT EXCEPTION ON THE PCU HAS OCCURRED ON THE CURRENT+1 BUFFER.
*   THIS MEANS THAT I/O ON THE SCU WAS NOT STARTED IN TIME TO PREVENT
*   THE PCU FROM TERMINATING. THIS SITUATION WILL BE TREATED AS A
*   LATE PCI.
***********************************************************************
*
         NI    DCBAPPIN,UEX            TURN OFF ALL BUT SCU CE @ZA05562
         OI    DCBAPPIN,SIT5           INDICATE SITUATION 5    @ZA05562
         B     EXCPEXT3                GO TO RETURN TO EXCP      Y02072
*
UEONC    EQU   *
         L     GR5,MICBDATA(0,CMICB)   GET ADDR C BUFFER
         OI    ZERO(GR5),UEX           TURN ON UNIT EXCEPTION
         OI    MICBFLAG(CMICB),UNITEX  SET UNIT EX IN MICB     @ZA02230
         TM    MICBECB(CMICB),WAIT     HAS USER WAITED ON THIS   A46398
         BZ    LVTME009                                          A46398
         L     CCREG,KCODCON           PUT COMP. CODE INTO R10   A46398
         LR    RMICB,CMICB             SET UP MICB PTR FOR POST  Y02072
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
*
LVTME009 MVC   MICBECB(FOUR,CMICB),KCODCON  POST MICB COMPLETE   A46398
         NI    DCBAPPIN,UEX            TURN OFF ALL BUT SCU    @ZA05562
*                                      CHAN END DELAYED BIT    @ZA05562
         OI    DCBAPPIN,SIT2           INDICATE C-1 MUST STILL @ZA05562
*                                      SET FOR SS AND POSTED
         B     EXCPEXT3                GO TO RETURN TO EXCP      Y02072
*
GETGONX  EQU   *
         TM    DCBMRIND,X01            IS SCU EXECUTING
         BNZ   RPOST2                  YES INDICATED POST NEEDED
         TM    MICBECB(CMICB),WAIT     HAS USER WAITED ON THIS BUFFER
         BZ    LVTME010                NO, DONT LINK TO POST ROUTINE
         L     CCREG,KSCUER            SET UP COMP CODE FOR POST Y02072
         LR    RMICB,CMICB             SET UP MICB PTR FOR POST  Y02072
         BAL   RTRNREG,POSTRTN         LINK TO  POST ROUTINE     Y02072
*
LVTME010 MVC   MICBECB(FOUR,CMICB),KSCUER  POST COMPLETE WITH ERROR
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
*
RPOST2   OI    DCBMRFG,PCURR           CURRENT NEEDS POSTING
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
         EJECT
***********************************************************************
*   THE FOLLOWING CODE HANDLES CHANNEL END CONDITIONS ON THE
*   SCU CCW CHAIN.
***********************************************************************
*
SCUCE005 EQU   *                                                 Y02072
         MVI   WHICH,SCUCE             IND SCU CHAN END        @ZA06136
         BAL   TRACRET,TRACE           ENTER TRACE FOR BREAK IN   41426
*                                      CHAIN                      41426
         L     GR5,IOBSTART            GET COMMAND CHAIN ADDR    Y02072
         L     GR6,DCBIOBAD            GET ADDR PCU IOB
         L     GR6,CCWD(0,GR6)         GET ADDR OF PCU CCW STRING
         LA    GR6,XPCLEN(0,GR6)       POINT AT SCU STRING
         LA    GR5,0(0,GR5)            GET RID OF GARBAGE
         CR    GR5,GR6                 DID THE CE  OCCUR ON THE
*                                      POCKET LIGHT CHAIN
         BE    WHPCU005                NO, GO HANDLE THE INTRPT  Y02072
         TM    DCBMRFG,LITEL           LAST LIT COMMAND, QQ
         BZ    EXCPEXT2                NO, GO TO RETURN TO EXCP  Y02072
         NI    DCBMRFG,OFFLITE         TURN OFF LIGHT SWITCH
*
         BAL   RTRNREG,DEVNREDY        GO TO SET SCU NOT READY   Y02072
         L     RUCB,DEBUCBAD(,DEBREG)  GET ADDR OF PCU UCB       Y02072
         BAL   RTRNREG,DEVNREDY        GO TO SET PCU NOT READY   Y02072
         B     EXCPEXT2                GO TO RETURN TO EXCP      Y02072
WHPCU005 EQU   *                                                 Y02072
         TM    DCBAPPIN,SITF           ANY PCU STATUS?           Y02072
         BNZ   WHPCU010                YES PCU CE OCCURRED FIRST Y02072
         TM    IOBCSW+3,UNITE          UNIT EXCEPTION ON?        Y02072
         BO    SETUE                   GO SET FLAG               Y02072
         L     GR5,IOBCMDA-1           LOAD ADDR OF NEXT CMND    Y02072
         CLI   0(GR5),WRDELAY          SPECIAL MS CONDITION?     Y02072
         BE    MSBREAK                 YES - GO HANDLE           Y02072
SETUE    EQU   *                                                 Y02072
         OI    DCBAPPIN,UEX            SET FLAG FOR PCU CE       Y02072
         L     CMICB,DCBWTOID          GET CURRENT MICB ADDR   @ZA33065
         TM    MICBFLAG(CMICB),INITIAL FIRST BUFFER AFTER ENG? @ZA33065
         BO    EXCPEXT1                YES-DONT SET SS INFO    @ZA33065
         L     GR5,MICBNM1(0,CMICB)    GET CURRENT-1 BUFFER    @ZA33065
         L     GR8,MICBDATA(0,GR5)     GET ADDR BUFFER         @ZA33065
         TM    MICBSENS(GR5),LATESS    LATE STACKER SELECT?    @ZA33065
         BZ    TSTSC025                NO-TEST AUTO SELECT     @ZA33065
         OI    THREE(GR8),SETLTSS      INDICATE LATE SS IN BFR @ZA33065
         MVI   FIVE(GR8),XREJCOM       PUT X'CF' IN BYTE 5     @ZA33065
TSTSC025 TM    MICBSENS(GR5),AUTSEL    WAS DOC AUTO SELECTED?  @ZA33065
         BZ    TSTMORE                 NO-GO DO MORE TESTS     @ZA33065
         MVI   FIVE(GR8),XREJCOM       PUT X'CF' IN BYTE 5     @ZA33065
         OI    TWO(GR8),SETAUTS        INDICATE AUTO SELECT    @ZA33065
TSTMORE  TM    MICBSENS(GR5),ALL       ANY ERRORS?             @ZA33065
         BNZ   HAVERR                  YES-GO GET POST CODE    @ZA33065
         L     CCREG,KCODCON           COMPLETION CODE 7F      @ZA33065
         B     TSTWAIT                 GO SEE IF WAITING       @ZA33065
HAVERR   L     CCREG,KSCUER            COMPLETION CODE 41      @ZA33065
TSTWAIT  TM    MICBECB(GR5),WAIT       DID USER WAIT?          @ZA33065
         BZ    POSTIT                  NO-GO POST MYSELF       @ZA33065
         BAL   RTRNREG,POSTRTN         YES-GO TO POST ROUTINE  @ZA33065
POSTIT   TM    MICBSENS(GR5),ALL       ANY ERRORS?             @ZA33065
         BNZ   POSTERR                 YES-POST SCU IN ERROR   @ZA33065
         MVC   MICBECB(4,GR5),KCODCON  POST ECB WITH 7F        @ZA33065
         B     EXCPEXT1                RETURN TO EXCP          @ZA33065
POSTERR  MVC   MICBECB(4,GR5),KSCUER   POST ECB WITH 41        @ZA33065
         B     EXCPEXT1                RETURN TO EXCP - SCU CE   Y02072
*                                      WILL BE HANDLED AFTER PCU Y02072
WHPCU010 OI    DCBAPPIN,BDTCE          INDICATE BROKEN DUE TO CHAN END
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
         MVN   CHECKARE(1),DCBAPPIN    MOVE SITUATION INDICATOR
         MODESET KEYADDR=RQEPRT,WORKREG=9  CHANGE TO USER'S KEY  Y02072
         CLI   CHECKARE,SIT5           LATE PCI, QQ
         BNE   NEXTSIT                 NO/GO TEST NEXT SIT       A33924
         L     GR5,IOBCMDA-1           LOAD ADDR OF FAILING CMND Y02072
         LA    GR5,0(0,GR5)            GET RID OF GARBAGE        A33924
         CLI   0(GR5),WRDELAY          IS THIS CCW WRITE DELAY  SA60294
         BE    MSBREAK                 IF SO, PREV CCW IS MS    SA60294
         OI    DCBAPPIN,BDTUC          INDICATE BROKEN DUE TO UC A33935
         B     HNDLLPCI                GO HANDLE LATE PCI        A33924
*
NEXTSIT  EQU   *                                                 A33924
         CLI   CHECKARE,SITF           HAS SITUATION F BEEN INDICATED
         BE    GETIT2                  YES, CURRENT MUST BE POSTED
         CLI   CHECKARE,SIT2           SITUATION 2
         BE    CHKFZ020                GO POST C-1
         CLI   CHECKARE,ZERO           IS IT SITUATION ZERO      A33924
         BNE   SIT3035                 NO/ASSUME SITUATION 3     A33924
*                                                                A33924
*
***********************************************************************
*   SITUATION 0 CAN OCCUR AT THIS POINT IN TIME ONLY IF THE PRECEEDING
*   PCI CAME IN SO LATE THAT THE APPENDAGE DID NOT HAVE ADEQUATE TIME
*   TO UPDATE THE FOLLOWING MS COMMAND BEFORE THE CHANNEL FETCHES IT.
*   CONSEQUENTLY, THE SCU CHAIN BROKE AT THE MS COMMAND WITH CHANNEL
*   END AND DEVICE END ONLY.  THIS SITUATION WILL BE HANDLED AS A
*   MISSED PCI.
***********************************************************************
*
MSBREAK  EQU   *                                                SA60294
         L     GR5,IOBCMDA-1           LOAD ADDR OF LAST COMMAND Y02072
         LA    GR5,0(0,GR5)            GET RID OF GARBAGE        A33924
         L     GR6,IOBSTART            LOAD ADDR SCU CHAN PGM    Y02072
         LA    GR6,EIGHT(0,GR6)        POINT TO SECOND COMMAND   A33924
         CR    GR5,GR6                 ARE WE ON 1ST OR 2ND MS   A33924
         BNE   SECMS                   SECOND MS                 A33924
         LA    GR6,THIR2(0,GR6)        POINT TO ASSOC NOP/SS CCW A33924
         B     UPDTCSW                 GO MODIFY IOBCSW          A33924
*
SECMS    EQU   *                                                 A33924
         LA    GR6,EIGHT(0,GR6)        POINT TO ASSOC NOP/SS CCW A33924
*
UPDTCSW  EQU   *                                                 A33924
         MVI   0(GR6),MREAD            SET NOP/SS TO MREAD COM   A33924
         LA    GR6,EIGHT(0,GR6)        POINT PAST COMMAND        A33924
         ST    GR6,IOBCMDA-1           MODIFY LAST COMMAND ADDR  Y02072
         OI    IOBCSW+3,UC             SET UNIT CHECK IN IOB     Y02072
         OI    IOBFLAG1,IOBIOERR       SET IOB EXCEPTION FLAG ON Y02072
         MVI   DCBAPPIN,SIT5           SET SITUATION 5 IN DCB    A33924
         MVI   IOBSENS0,COMREJ         SET IOBSENS0 TO COMREJ    A33924
         B     REGCH810                GO HANDLE MISSED PCI      A33924
*
GETIT    L     GR5,DCBWTOID            GET ADDR CURRENT MICB
*
POSTT011 TM    MICBECB(GR5),WAIT       HAS USER WAITED FOR BUFFER
         BZ    IPSTT015                NO, POST MYSELF
         L     CCREG,KCODCON           LOAD COMPLETION CODE
*
HDFRPST  EQU   *                                                 Y02072
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
*
BEGON012 EQU   *
         TM    DCBAPPIN,BDTLTPCI       DID UNIT CHECK OCCUR
*                                      ON SCU DUE TO MISSED PCI.
*                                      IF SO (TAKE NOTE) WE ARE
*                                      IN THE ABNORMAL END APPENDAGE
         BO    STPCI030                YES, GO INDICATE SAME
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
*
GETIT2   L     GR5,DCBWTOID            GET ADDR CURRENT MICB
         L     GR6,MICBDATA(0,GR5)     GET BUFFER ADDR
         TM    ZERO(GR6),UNRECOV       ERRORS BESIDESI.R.
         BO    NOTNORM                 YES, SEE IF POST IS NEEDED
         TM    DCBMRIND,X02            IS PCU ERP EXECUTING
         BZ    GETIT                   NO, GO POST NORMAL COMPLETION
*
GTPERR   OI    DCBMRFG,PCURR           INDICATE CURRENT NEEDS POSTING
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
*
NOTNORM  TM    DCBMRIND,X02            IS PCU ERP EXECUTING, QQ
         BO    GTPERR                  YES, INDICATE CURRENT NEEDS PST
         TM    MICBECB(GR5),WAIT       HAS USER WAITED
         BZ    HFTPERR                 NO, POST MYSELF
         L     CCREG,KPCUER            GET COMPLETION CODE
         B     HDFRPST                 GO POST ABNORMAL COMPLETION
*
HFTPERR  MVC   MICBECB(ONE,GR5),KPCUER  POST COMPLETION
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
*
IPSTT015 MVC   MICBECB(0,GR5),KCODCON  POST COMPLETE
         B     BEGON012                SEE  WHAT SIT WE RE  IN
*
CHKFZ020 L     CMICB,DCBWTOID          GET ADDR CURRENT MICB
         L     GR5,MICBNM1(0,CMICB)    GET ADDR C-1 MICB
         L     GR6,MICBDATA(0,GR5)     GET ADDR C-1 BUFFER
         TM    MICBFLAG(CMICB),INITIAL  FIRST BUFFER AFTER AN ENGAGE
         BO    BEGON012                YES, LEAVE.
*
CHKSS024 TM    MICBSENS(GR5),LATESS    LATE STACKER SELECT, QQ
         BZ    ISTAT025                NO, CHECK FOR AUTO SELECT
         MVI   FIVE(GR6),XREJCOM       PUT X'CF' IN BYTE 5
         OI    THREE(GR6),SETLTSS      INDICATE LATE SS IN BUFFER
*
ISTAT025 TM    MICBSENS(GR5),AUTSEL    WAS DOCUMENT AUTO SELECTED
         BZ    POSTT011                NO, GO POST COMPLETION,
         MVI   FIVE(GR6),XREJCOM       PUT X'CF' IN BYTE 5
         OI    TWO(GR6),SETAUTS        INDICATE AUTO SELECT
         B     POSTT011                GO  POST AS COMPLETE
*
*
STPCI030 L     GR5,MICBDATA(0,CMICB)   GET CURRENT BUFFER ADDR
         OI    ZERO(GR5),PCIMISD       INDICATE PCI WAS MISSED
         LA    GR5,INDLEN(0,GR5)       BUMP OVER BUFFER STATUS
         LH    GR6,DCBBUFL             GET BUFFER LENGTH
         SH    GR6,KELEVN              DECREMENT FOR EXECUTE
         EX    GR6,CLR                 CLEAR  C+1 BUFFER
*
         CLI   CHECKARE,SIT5           HAS PCU QUIT
         BNE   RESGO                   NO, GO EXIT
         TM    DCBAPPIN,BDTUC          ARE WE GOING TO ERP
         BO    RPOST3                  YES, SET POST READY
*
         TM    MICBECB(CMICB),WAIT     HAS USER WAITED
         BZ    DNGPST                  NO, POST MYSELF
         L     CCREG,KSCUER            GET COMPLETION CODE
         LR    RMICB,CMICB             SET UP MICB PTR FOR POST  Y02072
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
*
DNGPST   MVC   MICBECB(FOUR,CMICB),KSCUER  POST COMPLETION
*
RESGO    TM    DCBAPPIN,BDTUC          ARE WE GOING TO ERP
         BZ    EXCPEXT2                NO, GO TO RETURN TO EXCP  Y02072
         CLI   WHICH,PCUCE             ENTERED FROM PCU CH END @ZA06136
         BE    SETPRERP                YES GO IND PRI ERP      @ZA06136
         OI    DCBMRIND,X01            INDICATE SCU ERP EXEC   @ZA06136
         B     EXCPEXT2                RETRUN TO EXCP          @ZA06136
*                                                              @ZA06136
SETPRERP OI    DCBMRIND,X02            INDICATE PCU ERP EXEC   @ZA06136
         B     EXCPEXT2                GO TO RETURN TO EXCP      Y02072
*
RPOST3   OI    DCBMRFG,PCURR           CURRENT NEEDS POSTING
         B    RESGO                    GO GET OUT
*
*
SIT3035  L     GR5,DCBWTOID            GET ADDR CURRENT
         L     GR6,MICBDATA(0,GR5)     GET ADDR BUFFER
         B     CHKSS024                GO SET SS INFO
         DROP  RQEREG                  DROP RQE BASE REGISTER    Y02072
         EJECT
***********************************************************************
*   THE  FOLLOWING CODE IS  EXECUTED IF  ABNORMAL END  OCCURS  ON
*   THE SCU CCW  CHAIN.
***********************************************************************
*
SCUAB800 EQU   *                                                 Y02072
         USING RQE,RQEREG              ESTABLISH RQE BASE REG    Y02072
         MVI   WHICH,SCUAB             INDICATE SCU ABEND GOING  Y02072
         BAL   TRACRET,TRACE           ENTER TRACE FOR BREAK IN   41426
*                                      CHAIN                      41426
         TM    DCBMRIND,X01            ERP JUST FINISH, QQ
         BZ    CHKCN805                NO, CONTINUE
*
         NI    DCBMRIND,XFE            TURN OFF ERP GOING
         TM    DCBMRIND,X02            IS PCU ERP GOING
         BO    EXCPEXT1                YES, LET IT POST BUFFER   Y02072
*
         TM    DCBMRFG,PCURR           CURRENT NEED POSTING, QQ
         BO    XPCURR                  YES, GO DO IT
         TM    DCBMRFG,PCURRP1         CURR+1 NEED POSTING, QQ
         BO    XPCURRP1                YES, GO DO IT
*
*  NOTHING NEEDS POSTING.  GET OUT
*
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
*
XPCURR   NI    DCBMRFG,X7F             TURN OFF POST CURRENT FLAG
         L     GR5,DCBWTOID            GET ADDR CURRENT MICB
*
XDIDEW   TM    MICBECB(GR5),WAIT       DID USER WAIT, QQ
         BZ    XEYPOST                 NO, POST HERE
         L     CCREG,KSCUER            LOAD COMPLETION CODE
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
*
XEYPOST  MVC   MICBECB(FOUR,GR5),KSCUER  POST COMPLETE
         B     EXCPEXT1                GO TO RETURN TO EXCP      Y02072
*
XPCURRP1 NI    DCBMRFG,XBF             TURN OFF POST FLAG
         L     GR5,DCBWTOID            GET ADDR CURRENT MICB
         L     GR5,MICBNEXT(0,GR5)     GET ADDR CURR+1
         B     XDIDEW                  GO POST
*
CHKCN805 L     GR5,IOBSTART            GET COMMAND CHAIN ADDRESS Y02072
         L     GR6,DCBIOBAD            GET ADDR PCU IOB
         L     GR6,CCWD(0,GR6)         GET ADDR OF PCU CCW STRING
         LA    GR6,XPCLEN(0,GR6)       POINT AT SCU STRING
         LA    GR5,0(0,GR5)            GET RID OF GARBAGE
         CR    GR5,GR6                 ARE WE ON POCKET LIGHT CHAIN
         BE    REGCH810                NO, GO HANDLE INTERRUPT
         TM    DCBMRFG,LITEL           LAST LITE COMMAND, QQ
         BZ    EXCPEXT2                NO, GO TO RETURN TO EXCP  Y02072
         NI    DCBMRFG,OFFLITE         TURN OFF LITE SW
*
         BAL   RTRNREG,DEVNREDY        GO TO SET SCU NOT READY   Y02072
         L     RUCB,DEBUCBAD(,DEBREG)  GET ADDR OF PCU UCB       Y02072
         BAL   RTRNREG,DEVNREDY        GO TO SET PCU NOT READY   Y02072
         B     EXCPEXT2                GO TO RETURN TO EXCP      Y02072
*
*
REGCH810 OI    DCBAPPIN,BDTUC          INDICATE SCU CHAIN BROKEN DUE
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
         MVN   CHECKARE(1),DCBAPPIN    ISOLATE SITUATION
         MODESET KEYADDR=RQEPRT,WORKREG=9  CHANGE TO USER'S KEY  Y02072
         CLI   CHECKARE,SIT5           LATE PCI, QQ
         BE    HNDZR815                YES,GO HANDLE IT
         CLI   CHECKARE,SITF           IS IT SITUATION  F
         BE    HNDF3820                YES, GO HANDLE IT
         CLI   CHECKARE,SIT3           IS IT SITUATION 3
         BE    HNDSIT3                 YES, HANDLE IT
         CLI   CHECKARE,ZER0           IS IT SITUTATION 0
         BE    HNDZR815                YES HANDLE
         CLI   CHECKARE,SIT2           SITUATION 2
         BE    HNDST855                YES, HANDLE IT
*
HNDZR815 L     GR5,IOBCMDA-1           PICK UP COMMAND ADDR      Y02072
         LA    GR5,0(0,GR5)            GET RID OF GARBAGE
         SH    GR5,KEIGHT              POINT AT FAILING COMMAND
         BM    STPSS890                ZERO CSW USE CURR MICB  @ZA06142
*
         CLI   ZERO(GR5),WRDELAY       IS IT A WR DLY CMD      @ZA01358
         BNE   CHKREAD                 NO CHECK FOR MOD READ   @ZA03940
         TM    IOBSENS0,COMREJ         COMMAND REJECT          @ZA03940
         BNO   CHKREAD                 NO CONTINUE             @ZA04949
         LA    GR6,EIGHT(GR5)          POINT TO NOP SS         @ZA04949
         CLI   EIGHT(GR6),TIC         END OF STRING            @ZA04949
         BNE   UPDTCSW                YES HANDLE AS MISSED PCI @ZA09995
         SH    GR6,K24                BACK UP TO FIRST NOP SS  @ZA04949
         B     UPDTCSW                GO HANDLE AS MISSED PCI  @ZA04949
CHKREAD  EQU   *                                               @ZA04949
         CLI   ZERO(GR5),MREAD         IS IT A READ COMMAND
         BNE   RGUCK875                NO, GO HANDLE REGULAR UNIT CHECK
         TM    IOBSENS0,COMREJ         COMMAND REJECT, QQ        Y02072
         BZ    RGUCK875                NO, HANDLE AS REGULAR ERROR
         L     CMICB,DCBWTOID          GET CURRENT MICB ADDR
         TM    MICBFLAG(CMICB),BADCOMI  DID USER ISSUE THIS COMMAND
         BZ    MSPCI                   NO, ITS A MISSED PCI
         NI    MICBFLAG(CMICB),BADOFF  TURN OFF BAD COMMAND BIT
         B     RGUCK875                HANDLE AS COMMAND REJECT
*
MSPCI    EQU   *
         NI    IOBSENS0,REJOFF         TURN OFF COMMAND REJECT   Y02072
         OI    IOBSENS0,LLS            SET ON LATE SS SENSE      Y02072
*
*
***********************************************************************
*   COMMAND REJECT HAS OCCURRED ON A READ COMMAND TO THE SCU.
*   THIS MEANS THAT THE PCI INTERRUPT WAS NOT ACCEPTED IN TIME TO
*   RESET THE COMMAND TO A NOP
***********************************************************************
*
HNDLLPCI EQU   *
         OI    DCBAPPIN,BDTLTPCI       INDICATE SCU CHAIN BROKEN DUE
*                                      TO LATE PCI.
         CLI   EIGHT(GR5),TIC          IS IT A TIC COMMAND
         BNE   GSENS                   NO, GO PICK UP SENSE AREA ADDR
         S     GR5,FORTY8              YES, POINT TO FIRST SENSE COMND
*
GSENS    L     GR5,EIGHT(GR5)          POINT TO SENSE COMMAND
         LA    GR5,ZERO(0,GR5)         GET RID OF GARBAGE
         SH    GR5,KNINE               POINT AT ASSOCIATED MICB
         L     CMICB,DCBWTOID          GET CURRENT POINTER
         CR    GR5,CMICB               DID THE PCI INTERRUPT OCCUR
*                                      SO LATE THAT WE STILL GOT
*                                      COMMAND REJECT ON THE WRITE.
         BE    CHKFZ020                NO, GO SET PCI MISSED IN
*                                      CURRENT AND POST C-1.
         ST    GR5,DCBWTOID            YES, BACK UP CURRENT POINTER
         LR    CMICB,GR5               DITTO
         B     STPCI030                GO SET PCI MISSED IN CURRENT
*
*
HNDF3820 L     CMICB,DCBWTOID          GET ADDR C MICB
         L     GR5,MICBDATA(0,CMICB)   GET BUFFER ADDR
         BAL   RTRNREG,SESTAT          GO SET BUFFER STATUS
         TM    ZERSAV,UNRECOV          UNRECOVERABLE ERROR, QQ
         BZ    NONTALL                 NO, CONTINUE
         NI    ZERO(GR5),OFFERR        TURN OFF BIT 2
         OI    ZERO(GR5),BIT1          TURN ON UNRECOV SS ERROR
*
NONTALL  EQU   *
         TM    ZERSAV,UNRECOV          GOING TO ERP, QQ
         BO    RPOST4                  YES, INDICATE POST NEEDED
         TM    DCBMRIND,X02            IS PCU ERP EXECUTING
         BO    RPOST4                  YES, INDICATE POST NEEDED
         TM    MICBECB(CMICB),WAIT     HAS USER WAITED, QQ
         BZ    IPOST840                NO, POST IT MYSELF
*
         L     CCREG,KCODCON           GET NORMAL COMPLETION CODE
         LR    RMICB,CMICB             SET UP MICB PTR FOR POST  Y02072
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
*
*
IPOST840 MVC   MICBECB(FOUR,CMICB),KCODCON  POST COMPLETE
*
XIT0850  TM    ZERSAV,UNRECOV          ERRORS BESIDES   I.R.
         BZ    EXCPEXT1                DONT HAVE ERP SCHEDULED   Y02072
         OI    DCBMRIND,X01            INDICATE SCU ERP EXECUTING
         CLI   CHECKARE,SIT5           PCU DOWN, MISSED PCI      A43711
         BNE   EXCPEXT2                NO, GO TO RETURN TO EXCP  Y02072
         OI    DCBMRFG,PCURR           CURR MICB NEEDS POSTING   A43711
         B     EXCPEXT2                HAVE ERP SCHEDULED        Y02072
*
RPOST4   OI    DCBMRFG,PCURR           CURRENT NEEDS POSTING
         B     XIT0850                 GO GET OUT
*
HNDST855 L     CMICB,DCBWTOID          GET ADDR CURRENT MICB
         TM    MICBFLAG(CMICB),INITIAL  FIRST BUFFER AFTER AN ENGAGE
         BZ    SXTSS860                NO, SET SS INFO IN C-1
         NI    MICBFLAG(CMICB),TURNOFF  SET OFF INITIAL SWITCH
         B     HNDF3820                GO SET ERR INFO IN CURRENT
*
SXTSS860 L     GR5,MICBNM1(0,CMICB)    GET ADDR C-1 MICB
         L     GR8,MICBDATA(0,GR5)     GET ADDR BUFFER
         TM    MICBSENS(GR5),LATESS    LATE STACKER SELECT, QQ
         BZ    NTSTA865                NO, TEST AUTO SELECT
         MVI   FIVE(GR8),XREJCOM       PUT X'CF' IN BYTE 5
         OI    THREE(GR8),SETLTSS      SET LATE SS BIT
*
NTSTA865 TM    MICBSENS(GR5),AUTSEL    AUTO SELECT, QQ
         BZ    NPSTT870                NO, GO POST COMPLETE
         MVI   FIVE(GR8),XREJCOM       PUT X'CF' IN BYTE 5
         OI    TWO(GR8),SETAUTS        SET AUTO SELECT BIT
*
NPSTT870 TM    MICBECB(GR5),WAIT       DID USER WAIT
         BZ    NLPST872                NO, POST MYSELF
*
         L     CCREG,KCODCON           LOAD NORMAL COMPLETION CODE
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
         B     HNDF3820                GO SET ERR INFO IN CURRENT
*
NLPST872 MVC   MICBECB(0,GR5),KCODCON  POST BUFFER
         B     HNDF3820                GO SET ERR INFO
*
RGUCK875 L     GR6,IOBSTART            GET ADDR SCU CHAIN        Y02072
         LA    GR6,0(0,GR6)            GET RID OF GARBAGE
         CR    GR5,GR6                 BLOW IN STRING2
         BE    BINTW880                YES, SEE IF THATS CURRENT
*
         LA    GR6,THIR2(0,GR6)        POINT AT STRING 2
         CR    GR5,GR6                 BLOW IN STRING2
         BNL   BINTW880                YES SEE IF THATS CURRENT
*
         TM    DCBMRFLG,DCBMRSCC       IS CHAIN2 CURRENT         Y02072
         BO    BKUPT885                YES, WE BLEW IN C-1
         B     STPSS890                BLEW UP IN CURRENT
*
BINTW880 TM    DCBMRFLG,DCBMRSCC       IS CHAIN2 CURRENT         Y02072
         BO    STPSS890                YES, WE BLEW IN CURRENT
*
*
***********************************************************************
*  BLEW UP IN C-1 CHAIN. SET SS INFORMATION AND POST C-1 THEN SET
*  ERROR INFORMATION IN CURRENT.
***********************************************************************
*
BKUPT885 L     CMICB,DCBWTOID          GET ADDR C MICB
         L     GR5,MICBNM1(0,CMICB)    GET ADDR C-1 MICB
         L     GR5,MICBDATA(0,GR5)     GET BUFFER ADDR
         TM    IOBCSW+4,CPCHECK        PROGRAM CHECK, QQ         Y02072
         BO    MCF                     YES, SET BUFFER INFO
         TM    IOBSENS0,COMRLTSS       COMMAND REJ - LATE SS     Y02072
         BZ    NOTESA                  NO, TEST AUTO SELECT
*
MCF      EQU   *
         MVI   FIVE(GR5),XREJCOM       PUT X'CF' IN BYTE 5
         OI    THREE(GR5),SETLTSS      SET LATE STACKER BIT
*
NOTESA   TM    IOBSENS0,AUTSEL         WAS IT AUTO SELECTED, QQ  Y02072
         BZ    NXGO                    NO DONT SET BIT
         OI    TWO(GR5),SETAUTS        INDICATE AUTO SELECT
         MVI   FIVE(GR5),XREJCOM       PUT X'CF' IN BYTE 5
*
NXGO     L     GR5,MICBNM1(0,CMICB)    GO AND POST C-1
         B     PSTIT900                AND SET C.
*
*
STPSS890 L     CMICB,DCBWTOID          GET ADDR CMICB
         TM    MICBFLAG(CMICB),INITIAL FIRST BFR AFTER ENG?    @ZA26121
         BZ    SKIPIT                  IF NO-GO AROUND         @ZA26121
         CLI   CHECKARE,SIT5           SITUATION 5?            @ZA26121
         BNE   SKIPIT                  IF NO-GO AROUND         @ZA26121
         TM    MICBSENS(CMICB),INTREQ  INTERVENTION REQUIRED?  @ZA26121
         BZ    SKIPIT                  IF NO-GO AROUND         @ZA26121
         L     GR5,MICBDATA(0,CMICB)   CURRENT BFR ADDR        @ZA26121
         OI    0(GR5),UNRECOV          SET UNRECOV ERROR       @ZA26121
         OI    DCBMRIND,DCBMRERS       SET ERP FOR SCU         @ZA26121
         TM    MICBECB(CMICB),WAIT     DID USER WAIT?          @ZA26121
         BZ    IPOST                   IF NO-GO POST IT        @ZA26121
         L     CCREG,KSCUER            LOAD POST CODE          @ZA26121
         BAL   RTRNREG,POSTRTN         TO POST ROUTINE         @ZA26121
IPOST    MVC   MICBECB(4,CMICB),KSCUER MOVE POST CODE TO MICB  @ZA26121
         B     EXCPEXT2                TO EXCP TO GO TO ERP    @ZA26121
SKIPIT   L     GR5,MICBNM1(0,CMICB)    GET ADDR C-1            @ZA26121
         L     GR6,MICBDATA(0,CMICB)   GET BUFFER ADDR
         TM    MICBSENS(GR5),LATESS    LATE STACKER SELECT,QQ
         BZ    TSTAT895                NO, TEST FOR AUTO SELECT
         MVI   FIVE(GR6),XREJCOM       PUT X'CF' IN BYTE 5
         OI    THREE(GR6),SETLTSS      SET LATE SS BIT         @ZA14706
*
TSTAT895 TM    MICBSENS(GR5),AUTSEL    AUTO  SELECT,QQ
         BZ    PSTIT900                NO , GO  POST
         OI    TWO(GR6),SETAUTS        SET AUTO SELECT BIT
         MVI   FIVE(GR6),XREJCOM       PUT X'CF' IN BYTE 5
*
PSTIT900 TM    MICBECB(GR5),WAIT       DID USER WAIT
         BZ    PMYSF                   NO, POST IT MYSELF
         L     CCREG,KCODCON           LOAD  NORMAL COMPLETION CODE
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
*
PMYSF    MVC   MICBECB(FOUR,GR5),KCODCON  POST COMPLETE
         L     CMICB,DCBWTOID          GET CURRENT MICB ADDR
         L     GR5,MICBDATA(0,CMICB)   GET BUFFER ADDR.
         BAL   RTRNREG,SESTAT          GO SET BUFFER STATUS
         TM    ZERSAV,UNRECOV          ERRORS BESIDES I.R.
         BZ    NONTALL1                NO, CONTINUE
         NI    ZERO(GR5),OFFERR        TURN OFF BIT 2
         OI    ZERO(GR5),BIT1          TURN ON BIT 1
*
NONTALL1 EQU   *
         B     XIT0850
*
*
HNDSIT3  L     CMICB,DCBWTOID          GET ADDR C MICB
         L     GR5,MICBDATA(0,CMICB)   GET BUFFER ADDR
         TM    IOBSENS0,LATESS         LATE STACKER SELRCT, ,QQ  Y02072
         BZ    TESATX                  NO, TEST AUTO SELECT
         OI    THREE(GR5),SETLTSS      SET LATE STACKER BIT
         MVI   FIVE(GR5),XREJCOM       PUT X'CF' IN BYTE 5
*
TESATX   TM    IOBSENS0,AUTSEL         WAS DOCUMENT AUTO SELECTD Y02072
         BZ    NOWPS                   NO, POST AS COMPLETE
         MVI   FIVE(GR5),XREJCOM       PUT X'CF' IN BYTE 5
         OI    TWO(GR5),SETAUTS        INDICATE AUTO SELECT
*
NOWPS    EQU   *                                                 Y02072
         TM    MICBECB(CMICB),WAIT     HAS USER WAITED
         BZ    XYPOST                  NO, POST MYSELF
         L     CCREG,KCODCON           LOAD NORMAL COMPLETION CODE
         LR    RMICB,CMICB             SET UP MICB PTR FOR POST  Y02072
         BAL   RTRNREG,POSTRTN         LINK TO POST ROUTINE      Y02072
*
XYPOST   MVC   MICBECB(FOUR,CMICB),KCODCON  POST COMPLETION
         L     GR5,MICBNEXT(0,CMICB)   GET ADDR C+1 MICB
         L     GR5,MICBDATA(0,GR5)     GET ADDR C+1 BUFFER
         BAL   RTRNREG,SESTAT          GO SET BUFFER STATUS
         TM    ZERSAV,UNRECOV          ERRORS BESIDES I.R.
         BZ    NONTALL2                NO, CONTINUE
         NI    ZERO(GR5),OFFERR        TURN OFF BIT 2
         OI    ZERO(GR5),BIT1          TURN ON BIT1
*
NONTALL2 EQU   *
         B     XIT0850                 GET OUT
         DROP  RQEREG                  DROP RQE BASE REGISTER    Y02072
         EJECT
***********************************************************************
*   THE FOLLOWING SUBROUTINE PLACES ENTRIES INTO THE 1419 TRACE TABLE.
***********************************************************************
*
SIOTRAC  EQU   *                                                  41426
         USING RQE,RQEREG              ESTABLISH RQE BASE REG    Y02072
         DROP  BA12                    FORCE USE OF BASE REG 15   41426
         USING SIOENTER,BASE           SAVE REGS BEFORE USING 12  41426
         STM   0,15,KRESAV             STORE IOS REGISTERS        41426
         DROP  BASE                    RETURN TO BASE REG 12      41426
         USING PCIAPEN,BA12            RETURN TO BASE REG 12      41426
         LA    BA12,PCIAPEN-SIOENTER(0,BASE)  EST.                41426
*                                      ADDRESSIBILITY             41426
         MVI   WHAT,SIOENTRY           SET SWITCH                 41426
         MVI   WHICH,SIOENTRY          INDICATE SIO FOR TRACE  @ZA07621
         LR    RWRK1,RUCB              SAVE UCB ADDR           @ZA01360
         L     RUCB,DEBUCBAD(,DEBREG)  GET PRI UCB ADDR        @ZA07205
         BAL   RTRNREG,NRDYTST         SEE IF PRI IS READY     @ZA07205
         L     RUCB,DEBUCBAD+4(,DEBREG) GET SEC UCB ADDR       @ZA07205
         LA    RTRNREG,TRACIT          SET RETURN ADDR         @ZA07205
         BNZ   DEVNREDY                GO SET SEC NOT READY    @ZA07205
         L     RUCB,DEBUCBAD+4(,DEBREG) GET SEC UCB ADDR       @ZA07205
         BAL   RTRNREG,DEVREDY         GO SET SCU READY        @ZA07205
TRACIT   EQU   *                                               @ZA01360
         LR    RUCB,RWRK1              RESTORE UCB ADDRESS     @ZA01360
         BAL   TRACRET,TRACE           GO TRACE START I/O        Y02072
*
*
***********************************************************************
*   THE FOLLOWING CODE RESTORES REGISTERS AND RETURNS TO EXCP.
***********************************************************************
*
EXCPEXT2 EQU   *                                                 Y02072
         L     RTRNREG,KRESAV+OFFREG14  RESTORE RETURN ADDRESS   Y02072
*
EXCPEXIT EQU   *                                                 Y02072
         MODESET EXTKEY=SUPR           RETURN TO KEY 0           Y02072
         ST    RTRNREG,KRESAV+OFFREG14  UPDATE EXCP RETURN ADDR  Y02072
         LM    R0,R15,KRESAV           RESTORE EXCP'S REGISTERS  Y02072
         BR    RTRNREG                 RETURN TO EXCP            Y02072
*
EXCPEXT3 EQU   *                                                 Y02072
         TM    DCBAPPIN,UEX            WAS SCU CE DELAYED?       Y02072
         BZ    EXCPEXT1                YES RETURN TO EXCP        Y02072
         NI    DCBAPPIN,X'FF'-UEX      TURN OFF FLAG             Y02072
         L     IOBREG,DCBIOBAD         POINT TO PCU IOB        @ZA05562
         LA    IOBREG,IOBLN+EIGHT(,IOBREG) POINT TO SCU IOB    @ZA05562
         B     WHPCU010                NO - GO HANDLE            Y02072
EXCPEXT1 EQU   *                                                 Y02072
         L     RTRNREG,KRESAV+OFFREG14  RESTORE RETURN ADDRESS   Y02072
         LA    RTRNREG,4(,RTRNREG)     INCR TO SECND EXCP RTN PT Y02072
         B     EXCPEXIT                GO RETURN TO EXCP         Y02072
         EJECT
*
TRACE    EQU   *                                                  41426
         MODESET KEYADDR=RQEPRT,WORKREG=9  CHANGE TO USER'S KEY  Y02072
         L     TTPTR,DCBIOBAD      POINTER TO PCU IOB            41426
         LA    TTPTR,TRCEDSP-IOBLN(TTPTR) INCREMENT POINTER TO @ZA00738
*                                       TRACETABLE               41426
         TM    DCBMRIND,DCBMRSCU   DOES DCB POINTTO SCU IOB    @ZA00738
         BNZ   SCUPTR              YES DONT INCREASE POINTER   @ZA00738
         LA    TTPTR,IOBLN(,TTPTR) INCR PAST SCU IOB           @ZA00738
SCUPTR   EQU   *                                               @ZA00738
         USING TRACETBL,TTPTR                                  @ZA07621
         LR    GR8,TTPTR           SAVE POINTER TO START OF TT @ZA07621
         SR    WORKA,WORKA             ZERO REGISTER              41426
         IC    WORKA,0(TTPTR)          LOAD INDEX VALUE           41426
         SRA   WORKA,ONE               ALIGN AS MULIIPLE OF 8     41426
         LA    TTPTR,TABLE(WORKA,TTPTR)  POSITION POINTER,NEXT    41426
*                                      ENTRY                      41426
         CLI   WHAT,PCIENTRY           TEST ENTRY SWITCH          41426
         BNE   NOTPCI                                             41426
         MVC   TRCMD,RQEPRT              STORE PROT KEY IN TABL@ZA07621
         MVC   TRCSW,IOBCSW                STORE CSW IN THE TBL@ZA07621
         B     ADD                                                41426
*
NOTPCI   CLI   WHAT,SIOENTRY           TEST ENTRY SWITCH          41426
         BNE   NOTSIO                                             41426
         L     WORKB,IOBSTART          GET POINTER TO FIRST CCW  Y02072
         MVC   TRCMD,0(WORKB)          STORE COMMAND CODE      @ZA07621
         MVC   TRUCB,KRESAV+29         STORE UCB ADDRESS       @ZA14595
         MVC   INITMICB-TRACETBL(3,GR8),DCBWTOIA  APPEND CMICB @ZA07621
         MVC   INITBUFF-TRACETBL(3,GR8),DCBIOBA+1 USERS CMICB  @ZA07621
         B     ADD                                                41426
*
NOTSIO   MVC   TRCSW,IOBCSW            STORE CSW FROM IOB TO TB@ZA07621
         MVC   TRSNS,IOBSENS0          STORE SENSE BYTE 0 IN TB@ZA07621
*
ADD      EQU   *                                               @ZA07621
         MVC   TRMRIND,DCBMRIND  TRACE MICR INDICATORS         @ZA07621
         MVC   TRDCB0,DCBWTOID+1 TRACE CURRENT MICB ADDRESS    @ZA07621
         MVC   TRAPPIN,DCBAPPIN  TRACE APPENDAGE INDICATOR     @ZA07621
         MVC   TRMRFG,DCBMRFG    TRACE MICR FLAG               @ZA07621
         MVC   TRWHICH,WHICH     TRACE WHICH APPENDAGE IS IN   @ZA07621
         MVC   TRCKAREA,CHECKARE TRACE CHECK AREA              @ZA07621
         LA    WORKA,SIXTEEN(WORKA)    INCREMENT INDEX BY ONE  @ZA07621
         SLA   WORKA,ONE               SHIFT OUT HIGH ORDER       41426
*                                      UNWANTED BIT               41426
         STC   WORKA,0(GR8)         STORE NEW INDEX VALUE      @ZA07621
         L     WORKA,KRESAV+28         REPLACE UCB POINTER IN     41426
*                                      REGISTER                   41426
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
         MVI   WHAT,ZERO               RESET SWITCH              Y02072
         MODESET KEYADDR=RQEPRT,WORKREG=9  CHANGE TO USER'S KEY  Y02072
TRACEND  BR    TRACRET                 GO TO IN LINE CODE         41426
         EJECT
***********************************************************************
*   THE FOLLOWING SUBROUTINE IS USED TO POST THE ECB.  INPUT TO THIS
*   ROUTINE IS AS FOLLOWS:
*
*        REGISTER 1  - RQE ADDRESS
*        REGISTER 3  - DEB ADDRESS
*        REGISTER 5  - ADDRESS OF MICB CONTAINING ECB TO BE POSTED
*        REGISTER 10 - COMPLETION CODE TO BE POSTED IN THE ECB
*        REGISTER 14 - RETURN ADDRESS TO MAIN LINE CODE
*
*   FOLLOWING ARE THE REGISTERS PASED TO THE POST ROUTINE:
*
*        REGISTER 10 - COMPLETION CODE TO BE POSTED IN THE ECB
*        REGISTER 11 - ECB TO BE POSTED
*        REGISTER 12 - TCB ADDRESS
*        REGISTER 14 - RETURN ADDRESS TO THIS SUBROUTINE
*        REGISTER 15 - ENTRY ADDRESS TO POST
*
*   REGISTERS 12 AND 14 ARE RESTORED PRIOR TO RETURNING TO MAIN LINE
*   CODE.
***********************************************************************
*
POSTRTN  EQU   *                                                 Y02072
         LA    ECBADR,MICBECB(,RMICB)  GET ADDR OF ECB TO POST   Y02072
         OI    0(ECBADR),ZERO          PROG CHK IF NOT USER CORE Y02072
         L     R15,CVTPTR              GET ADDRESS OF THE CVT    Y02072
         L     R15,CVT0PT01-CVT(,R15)  GET ADDR OF POST ROUTINE  Y02072
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
         ST    RTRNREG,RTRNSAVE        SAVE RETURN ADDRESS       Y02072
         DROP  BA12                    DROP MODULE BASE REGISTER Y02072
         L     BA12,DEBTCBAD(,DEBREG)  GET TCB ADDRESS           Y02072
         BALR  RTRNREG,R15             GO TO POST ECB            Y02072
         MODESET KEYADDR=RQEPRT,WORKREG=15  CHANGE TO USER'S KEY Y02072
         BALR  BA12,0                  TEMP BASE REG LOCATION    Y02072
         USING *,BA12                  EST SUBROUTINE BASE REG   Y02072
         L     BA12,KRESAV+OFFREG12    RESTORE MODULE BASE REG   Y02072
         DROP  BA12                    DROP SUBROUTINE BASE REG  Y02072
         USING PCIAPEN,BA12            RE-ESTABLISH MODULE BASE  Y02072
         L     RTRNREG,RTRNSAVE        RESTORE RETURN ADDRESS    Y02072
         BR    RTRNREG                 RETURN TO MAINLINE CODE   Y02072
         EJECT
***********************************************************************
*   THE FOLLOWING SUBROUTINE IS USED TO SET A DEVICE TO NOT READY.
*   INPUT TO THIS ROUTINE IS AS FOLLOWS:
*
*        REGISTER 7  - UCB ADDRESS OF DEVICE TO BE MADE NOT READY
*        REGISTER 13 - EXCP SAVE AREA ADDRESS
***********************************************************************
*
DEVNREDY EQU   *                       SET DEVICE TO NOT READY   Y02072
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0           Y02072
         IOSGEN UCBFLG,UCB=(RUCB),VAR=ON,TABLE=UCBNRY,REG=COND   Y02072
         MODESET KEYADDR=RQEPRT,WORKREG=9  RETURN TO USER'S KEY  Y02072
         BR    RTRNREG                 RETURN TO CALLER          Y02072
NRDYTST  EQU   *                                               @ZA01360
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0         @ZA01360
         IOSGEN UCBFLG,UCB=(RUCB),VAR=TEST,TABLE=UCBNRY        @ZA01360
         MODESET KEYADDR=RQEPRT,WORKREG=9  RETURN TO USER KEY  @ZA01360
         BR    RTRNREG                 RETURN TO CALLER        @ZA01360
DEVREDY  EQU   *                                               @ZA01360
         MODESET EXTKEY=SUPR           CHANGE TO KEY 0         @ZA01360
         IOSGEN UCBFLG,UCB=(RUCB),VAR=OFF,TABLE=UCBNRY         @ZA04948
         MODESET KEYADDR=RQEPRT,WORKREG=9  RETURN TO USER KEY  @ZA01360
         BR    RTRNREG                 RETURN TO CALLER        @ZA01360
         EJECT
***********************************************************************
*   EQUATES FOR BRANCH TABLE AT BEGINNING OF THIS MODULE
***********************************************************************
*
CHANDIS  EQU   CEAPEN-CHANEND
ABNDIS   EQU   AEAPEN-ABNEND
SIODIS   EQU   SIOTRAC-SIOENTER                                   41426
*
*
***********************************************************************
*   THE FOLLOWING ARE CONSTANTS AND WORKAREAS USED BY THE APPENDAGES
***********************************************************************
*
         DS    0D                      FOR ALIGNMENT
*
CSAV     DC    F'0'                    SAVE AREA FOR CMICB
RTRNSAVE DC    F'0'                    POST RETRN ADDR SAVE AREA Y02072
KRESAV   DS    16F                     FOR SAVING SUPVS REGISTERS
*
KCODCON  DC    0F'0',X'7F000000'       SUCCESSFUL COMPLETION CDE Y02072
KPCUER   DC    0F'0',X'41000000'       ERROR COMPLETION CODE     Y02072
KSCUER   DC    0F'0',X'41000001'       SCU ERROR COMPLETION CODE Y02072
*
FORTY8   DC    F'48'                   CONSTANT OF 48
ZEROS    DC    H'0'                    CONSTANT OF ZERO        @ZA04944
K24      DC    H'24'                   CONSTANT OF 24          @ZA03940
DUMSENS  DC    X'10FE'                 DUMMY SENSE FROM IOS    @ZA11089
KEIGHT   DC    H'8'                    CONSTANT OF 8
KNINE    DC    H'9'                    CONSTANT NINE
KTEN     DC    H'10'                   CONSTANT OF 10
KELEVN   DC    H'11'                   CONSTANT 11
H32CON   DC    H'32'                   TO DECREMENT BUFF COUNTER
*
CLR      XC    0(0,GR5),0(GR5)         EXECUTED FOR ZEROING BUFFERS
*
WHAT     DC    X'00'                   CODE, TYPE ENTRY FROM IOS  41426
WHICH    DC    X'00'                   INDICATES WHICH APPENDAGE
CHECKARE DC    X'00'                   FOR ISOLATING SITUATION
*                                      IS EXECUTING AT ANY GIVEN TIME
ZERSAV   DC    X'00'                   FOR SAVING BUFFER STATUS
SVC13    DC    X'0A0D'                 USED TO CHECK FOR SVC 13  Y02072
*
MODID    DC    C'IGG019V5'             MODULE NAME             @ZA07621
DATE     DC    CL8'&SYSDATE'           COMPILATION DATE        @ZA07621
FIX      DC    C'OZ33842'              LATEST FIX              @ZA11089
PATCH    DC    XL((*-IGG019V5)/20)'0'  5% PATCH AREA           @ZA14706
         EJECT
***********************************************************************
*   CONTROL BLOCK DEFINITIONS
***********************************************************************
*
**       TRACE TABLE DSECT                                     @ZA07621
*                                                              @ZA07621
TRACETBL DSECT                                                 @ZA07621
*TRACE TABLE HEADER CONTAINS INDEX TO CURRENT ENTRY AND THE    @ZA07621
* CONTENTS OF DCB PLUS 0 AND PLUS 44 AT SIO TIME               @ZA07621
TRINDEX  DS    0BL4              FOUR BITS FOR INDEX TO CURR   @ZA07621
         DS    CL1                                             @ZA07621
INITMICB DS    CL3               CONTENTS OF DCB +0 FOR SIO    @ZA07621
         DS    CL1                                             @ZA07621
INITBUFF DS    CL3               CONTENTS OF DCB +44 FOR SIO   @ZA07621
*                                                              @ZA07621
         ORG   TRACETBL                                        @ZA07621
* THE FOLLOWING ARE THE SIXTEEN BYTE ENTRIES FOR EACH OF THE   @ZA07621
*  APPENDAGES                                                  @ZA07621
*                                                              @ZA07621
TRCMD    DS    0CL1              COMMAND CODE FOR SIO TRACE    @ZA07621
TRSNS    DS    CL1           SENSE BYTE ZERO FOR ABNORMAL END  @ZA07621
TRCSW    DS    0CL7          CSW FOR PCI ABEND AND CHAN END    @ZA07621
         DS    CL4                                             @ZA07621
TRUCB    DS    CL3               UCB ADDR OF DEV BEING STARTED @ZA07621
TRMRIND  DS    CL1               DCBMRIND                      @ZA07621
TRDCB0   DS    0CL3              CURR CONTENTS OF DCB PLUS 0   @ZA07621
TRCMICB  DS    CL3               CURENT MICB                   @ZA07621
TRAPPIN  DS    CL1               DCB APPENDAGE INDICATOR       @ZA07621
TRDCB44  DS    0CL3              CURR CONTENTS OF DCBPLUS 44   @ZA07621
TRMRFG   DS    CL1               DCB MICR FLAG                 @ZA07621
TRWHICH  DS    CL1               WHICH APPENDAGE IS IN CONTROL @ZA07621
TRCKAREA DS    CL1               BUFFER STATUS INDICATOR       @ZA07621
*                                                              @ZA07621
*                                                              @ZA07621
*                                                              @ZA07621
         IEZBITS                                                 Y02072
         IHAASVT                                                 Y02072
         EJECT
         CVT   DSECT=YES                                         Y02072
         SPACE 3
         DCBD  DSORG=BS,DEVD=MR
         EJECT
         IEZIOB                                                  Y02072
         EJECT
         IECDIOCM                                                Y02072
         EJECT
         IECDIOSB                                                Y02072
         EJECT
         IECDRQE                                                 Y02072
         EJECT
         IHASRB                                                  Y02072
         EJECT
UCB      DSECT                                                   Y02072
         IEFUCBOB                                                Y02072
         END
