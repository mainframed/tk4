         TITLE 'ISTINCOQ- OPERATOR QUERY                               *
                        '
ISTINCOQ CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTINCOQ  75.282'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*/*********************************************************************
**               CHAIN SAVEAREAS                                   0063
***********************************************************************
*  COQCFWC = COQR01;    /* SET CALLER FRWD CHAIN PTR               */
         ST    COQR01,COQCFWC(,COQR13)                             0063
*  COQR10 = COQR13;     /* SAVE CALLER SAVEAREA PTR                */
         LR    COQR10,COQR13                                       0064
*  COQR13 = COQR01;     /* SET R13 TO MY SAVEAREA                  */
         LR    COQR13,COQR01                                       0065
*  COQBCKPT = COQR10;   /* SET BACKWARD PTR                        */
         ST    COQR10,COQBCKPT(,COQR13)                            0066
*  COQFRWPT = ZERO;     /* ZERO OUT FORWARD PTR                    */
         SLR   @14,@14                                             0067
         ST    @14,COQFRWPT(,COQR13)                               0067
*/*********************************************************************
*  COQPAD = '40000000'X;    /* SET PADDING CHARACTER */            0068
         L     COQPAD,@CF00136                                     0068
*  COQR15 = FOUR;       /* SET RETURN CODE                         */
         LA    COQR15,4                                            0069
*  DO WHILE (COQR15=FOUR);                                         0070
         B     @DE00070                                            0070
@DL00070 DS    0H                                                  0071
*    COQR10 = FOUR;        /* SET INNER LOOP CONTROL      */       0071
         LA    COQR10,4                                            0071
*    DO WHILE (COQR10=FOUR);                                       0072
         B     @DE00072                                            0072
@DL00072 DS    0H                                                  0073
*      COQR02 = DLRPLUSR;     /* SAVE USER DATA FIELD      */      0073
         L     COQR02,DLRPLUSR(,COQR13)                            0073
*      DLRPLUSR = ZERO;       /* CLEAR ECB FIELD                 */
         SLR   @14,@14                                             0074
         ST    @14,DLRPLUSR(,COQR13)                               0074
*      TPMPLRNF = ADDR(DLRPLUSR);    /* SET UP ECB @ IN TPMPL     */
         LA    @14,84                                              0075
         ALR   @14,COQR13                                          0075
         LA    @11,DLRPLUSR(,COQR13)                               0075
         ST    @11,TPMPLRNF(,@14)                                  0075
*      DLRPLR15 = TPMPLCID;         /* SAVE CID IN R15 SAVE SLOT */
         L     @11,TPMPLCID(,@14)                                  0076
         ST    @11,DLRPLR15(,COQR13)                               0076
*      COQR01 = ADDR(ISTTPMPL);    /* POINT R1 TO ISTTPMPL      */ 0077
*                                                                  0077
         LR    COQR01,@14                                          0077
*       DO; /* LISATCVT CVTBASE(PAGEABLE,(COQR15)) */              0078
*         COQR15 = ATCLCPTR; /*SET UP ATCVT POINTER*/              0079
         L     COQR15,ATCLCPTR                                     0079
*       END; /*LISATCVT*/                                          0080
*      COQR15 = COQR15->ATCMSGP;  /* LOCATE PTR TO CFCTM ROUTINE */
         L     COQR15,ATCMSGP(,COQR15)                             0081
*      CALL COQR15->ISTCFCTM;    /* ISSUE MESSAGE */               0082
         BALR  @14,@15                                             0082
*/*VWAIT  ECB(DLRPLUSR)TASK(VTAM)*/                                0083
*       DO;                                                        0083
*                                                                  0083
*       DCL GPR01F FIXED(31) REG(01);                              0084
*       DCL GPR01P PTR(31)   REG(01);    /*DECLARE AND RESTRICT REG 1*/
*         RESPECIFY GPR01F RSTD;         /*INVOKE XREGSET MACRO TO*/
*                                        /*TEST ECB PARM VALIDITY */
*                                                                  0087
*/*XREGSET  PPARM(DLRPLUSR)RREG(1,GPR01F)PID('ECB')*/              0087
*       DO;                                                        0087
*         GPR01F=ADDR(DLRPLUSR);         /*SET RREG SYMBOL TO ADDRESS*/
         LA    GPR01F,DLRPLUSR(,COQR13)                            0088
*                                        /*OF PPARM OPERAND          */
*       END;  /* XREGSET */                                        0089
*         GEN;                                                     0090
         WAIT 1,ECB=(1)
*         RESPECIFY GPR01F UNRSTD;       /*UNRESTRICT REG 1          */
*       END;  /* VWAIT */  /* WAIT FOR ECB TO BE POSTED*/          0092
*      DLRPLUSR = COQR02;               /* RESTORE USER DATA FIELD    *
         ST    COQR02,DLRPLUSR(,COQR13)                            0093
*      IF DLRPLFOL = ON           /* IS FOLDING WANTED?         */ 0094
*        THEN                    /* YES                        */  0094
         TM    DLRPLFOL(COQR13),B'10000000'                        0094
         BNO   @RF00094                                            0094
*          DO COQR02=TPMPLRBA TO (TPMPLRBA + TPMPLRLN-1);/* FOLD EACH *
         L     COQR02,TPMPLRBA+83(,COQR13)                         0095
         LA    COQR02,0(,COQR02)                                   0095
         B     @DE00095                                            0095
@DL00095 DS    0H                                                  0096
*            COQBYTE = COQBYTE×COQFOLD;     /* BYTE OF REPLY BUFFER  */
         OI    COQBYTE(COQR02),X'40'                               0096
*          END;                                                    0097
         AL    COQR02,@CF00066                                     0097
@DE00095 L     @14,TPMPLRBA+83(,COQR13)                            0097
         LA    @14,0(,@14)                                         0097
         SLR   @11,@11                                             0097
         IC    @11,TPMPLRLN+84(,COQR13)                            0097
         ALR   @14,@11                                             0097
         BCTR  @14,0                                               0097
         CR    COQR02,@14                                          0097
         BNH   @DL00095                                            0097
*        ELSE;                                                     0098
@RF00094 DS    0H                                                  0099
*      IF DLRPLGYN = ON       /* IS VALID REPLY YES/NO ?     */    0099
*        THEN DO;           /* YES              */                 0099
         TM    DLRPLGYN(COQR13),B'01000000'                        0099
         BNO   @RF00099                                            0099
*              COQR02 = TPMPLRBA;     /* PUT REPLY @ IN WORKING REG */
         LA    @14,84                                              0101
         ALR   @14,COQR13                                          0101
         L     COQR02,TPMPLRBA-1(,@14)                             0101
         LA    COQR02,0(,COQR02)                                   0101
*              COQR03 = TPMPLRLN;     /* PUT LENGHT OF REPLY IN REG */
         SLR   COQR03,COQR03                                       0102
         IC    COQR03,TPMPLRLN(,@14)                               0102
*              COQR04 = ADDR(YES);     /* PUT VALID REPLY IN REG */
         LA    COQR04,@CC00630                                     0103
*              COQR05 = LENGTH(YES);/* PUT IN LENGTH OF VALID REPLY */
         LA    COQR05,3                                            0104
*              COQR05 = COQR05×COQPAD; /* PUT IN PADDING CHARACTER */
         OR    COQR05,COQPAD                                       0105
*              CLCL(COQR02,COQR04); /* COMPARE REPLIES */          0106
         CLCL  COQR02,COQR04                                       0106
*              BC(8,COQBROUT);     /* IF IT'S VALID GET OUT OF LOOP*/
         BC    8,COQBROUT                                          0107
*              COQR02 = TPMPLRBA;  /* OTHERWISE TEST FOR 'NO' BEING */
         LA    @14,84                                              0108
         ALR   @14,COQR13                                          0108
         L     COQR02,TPMPLRBA-1(,@14)                             0108
         LA    COQR02,0(,COQR02)                                   0108
*              COQR03 = TPMPLRLN;  /* A VALID REPLY           */   0109
         SLR   COQR03,COQR03                                       0109
         IC    COQR03,TPMPLRLN(,@14)                               0109
*              COQR04 = ADDR(NO);                                  0110
         LA    COQR04,@CC00632                                     0110
*              COQR05 = LENGTH(NO);                                0111
         LA    COQR05,2                                            0111
*              COQR05 = COQR05×COQPAD;                             0112
         OR    COQR05,COQPAD                                       0112
*              CLCL(COQR02,COQR04);                                0113
         CLCL  COQR02,COQR04                                       0113
*              BC(8,COQBROUT);     /* IF THE REPLY WAS VALID */    0114
         BC    8,COQBROUT                                          0114
*              COQR02 = TPMPLRBA;  /* GET OUT OF INNER LOOP */     0115
         LA    @14,84                                              0115
         ALR   @14,COQR13                                          0115
         L     COQR02,TPMPLRBA-1(,@14)                             0115
         LA    COQR02,0(,COQR02)                                   0115
*              COQR03 = TPMPLRLN;  /* OTHERWISE PARPARE TO */      0116
         SLR   COQR03,COQR03                                       0116
         IC    COQR03,TPMPLRLN(,@14)                               0116
*              COQR04 = ADDR(BLANK); /* CLEAR OUT BUFFER  */       0117
         LA    COQR04,@CC00634                                     0117
*              COQR05 = LENGTH(BLANK);/* IN ORDER TO RE-ISSUE THE */
         LA    COQR05,3                                            0118
*                                     /* MESSAGE         */        0119
*              COQR05 = COQR05×COQPAD;                             0119
         OR    COQR05,COQPAD                                       0119
*              MVCL(COQR02,COQR04);                                0120
         MVCL  COQR02,COQR04                                       0120
*             END;                                                 0121
*        ELSE            /* NO A VALID REPLY IS NOT YES/NO */      0122
*          COQR10 = ZERO;   /* THEN GET OUT OF INNER LOOP */       0122
         B     @RC00099                                            0122
@RF00099 SLR   COQR10,COQR10                                       0122
*    END;                                                          0123
@RC00099 DS    0H                                                  0123
@DE00072 C     COQR10,@CF00072                                     0123
         BE    @DL00072                                            0123
*COQBROUT:/* EXIT FROM INNER LOOP */ ;                             0124
COQBROUT DS    0H                                                  0125
*      /* TEST FUNCTION NOTIFICATION FLAG OF PARAMETER LIST        0125
*         IN ORDER TO KNOW WHAT IS TO BE DONE NEXT     */          0125
*    IF DLRPLRPF = DLRPLRTN /* IS A USER ROUTINE TO BE GIVEN CONTROL?*/
*      THEN DO;         /* YES      */                             0125
         CLI   DLRPLRPF(COQR13),1                                  0125
         BNE   @RF00125                                            0125
*            COQR01 =  ADDR(ISTDLRPL);   /* POINT R1 TO PARAM LIST  */
         LR    COQR01,COQR13                                       0127
*            COQR15 = DLRPLRNF;  /* POINT R15 TO USRTN ENTRY @ */  0128
         L     COQR15,DLRPLRNF-1(,COQR13)                          0128
         LA    COQR15,0(,COQR15)                                   0128
*            CALL COQR15->USRTN; /* EXECUTE FUNCTION IN USRTN  */  0129
         BALR  @14,@15                                             0129
*           END;    /* R15 WILL CONTAIN VALUE FOR OUTTER LOOP CONTROL*/
*      ELSE                                                        0131
*        COQR15 = ZERO;      /* SET RETRUN CODE IN R15  */         0131
         B     @RC00125                                            0131
@RF00125 SLR   COQR15,COQR15                                       0131
*  END;                                                            0132
@RC00125 DS    0H                                                  0132
@DE00070 C     COQR15,@CF00072                                     0132
         BE    @DL00070                                            0132
*    COQR01 = COQR13;      /*RPL NOW BASED ON REG1            @VS41726*
         LR    COQR01,COQR13                                       0133
*    RFY ISTDLRPL BASED(COQR01);                            /*@VS41726*
*    COQR13 = COQBCKPT;    /*RESTORE PTR TO CALLERS SAVEAREA  @VS41726*
         L     COQR13,COQBCKPT(,COQR13)                            0135
*  IF DLRPLRPF = DLRPLRPH  /* IS FLAG AN RPH? */                   0136
*    THEN             /* YES           */                          0136
*                                                                  0136
         CLI   DLRPLRPF(COQR01),2                                  0136
         BNE   @RF00136                                            0136
*/*TPPOST  (DLRPLRNF)  NSTR*/                                      0137
*         DO;                                                      0137
*                                                                  0137
*         DCL GPR00F FIXED(31) REG(00);                            0138
*         DCL GPR00P PTR(31)   REG(00);                            0139
*         DCL GPR02F FIXED(31) REG(02);                            0140
*         DCL GPR02P PTR(31)   REG(02);                            0141
*         DCL GPR03F FIXED(31) REG(03);                            0142
*         DCL GPR03P PTR(31)   REG(03);                            0143
*         DCL GPR04F FIXED(31) REG(04);                            0144
*         DCL GPR04P PTR(31)   REG(04);                            0145
*         DCL GPR05F FIXED(31) REG(05);                            0146
*         DCL GPR05P PTR(31)   REG(05);                            0147
*         DCL GPR06F FIXED(31) REG(06);                            0148
*         DCL GPR06P PTR(31)   REG(06);                            0149
*         DCL GPR14F FIXED(31) REG(14);                            0150
*         DCL GPR14P PTR(31)   REG(14);                            0151
*         DCL GPR15F FIXED(31) REG(15);                            0152
*         DCL GPR15P PTR(31)   REG(15); /*DECLARE AND RESTRICT REGS*/
*           RESPECIFY (GPR00F,GPR01F,GPR04F,GPR05F,                0154
*                     GPR06F,GPR14F,GPR15F) RSTD;                  0154
*                                       /*0,1,4,5,6,14, AND 15   */
*                                                                  0155
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTRPH,ISTAVT,ISTATCVT)  */           0155
*/* VTAM ADDRESS VECTOR TABLE */                                   0155
*/*  REVISIONS                                         002 03/06/75  */
*DCL  1  ISTAVT BDY(WORD) BASED,                                   0155
*       2  ISTACVT PTR(31),            /* ADDR OF VTAM CVT           */
*       2  ISTAS49 PTR(31),            /* ADDR OF SVC 49 CODE        */
*          3  ISTAHIP BIT(1),          /* HALT IN PROGRESS           */
*       2  ISTAS53 PTR(31),            /* ADDR OF SVC 53 CODE        */
*       2  ISTAPSTA PTR(31),           /* ADDR OF APS TABLE          */
*       2  AVTASID FIXED(15),          /* VTAM ASID                  */
*       2  ISTVTTIK FIXED(15),         /* VTAMRP TASK ID             */
*       2  ISTAPSEX PTR(31),           /* ADDR OF APS EXIT           */
*       2  ISTPHNM CHAR(5),            /* PHASE NAME OF TRANSIENT    */
*       2  ISTX1 CHAR(1),              /* TEST FIELD                 */
*       2  ISTARID PTR(15),            /* ADDR OF RID                */
*       2  ISTATRT PTR(15),            /* ADDR OF VTAM GATES IN RETAB*/
*       2  ISTAGTWT PTR(15),           /* ADDR OF GATEWAIT ROUTINE   */
*       2  ISTVTTP  PTR(15),           /* ADDR OF CODE TO CHECK FOR  */
*                                      /* PENDING TIMER INTERRUPT    */
*       2  ISTAVR01 CHAR(2),           /* RESERVED                   */
*       2  ISTPDAVP PTR(31);           /* VECTOR FOR PDAIDS SMS TRACE*/
*/* END OF ATBUILD */                                              0156
*           GPR04F=DLRPLRNF;            /*LOAD RPH PNTR INTO REG 4*/
         L     GPR04F,DLRPLRNF-1(,COQR01)                          0156
         LA    GPR04F,0(,GPR04F)                                   0156
*           RFY GPR03F RSTD;                                       0157
*           GPR03F=0;                                              0158
*                                                                  0158
         SLR   @11,@11                                             0158
         LR    GPR03F,@11                                          0158
*         DO; /*MODESET  SAVEKEY(GPR06F) KEYADDR(GPR03F) WORKREG(GPR05F
**/         RESPECIFY (GPR02F) RESTRICTED;                         0159
*           GPR05F = GPR02F; /*SAVE REGISTER 2*/                   0161
         LR    GPR05F,GPR02F                                       0161
*           IPK; /*SAVE CURRENT PSW KEY*/                          0162
         IPK                                                       0162
*           GPR06F = GPR02F;                                       0163
         LR    GPR06F,GPR02F                                       0163
*           GPR02F = GPR05F; /*RESTORE REGISTER 2*/                0164
         LR    GPR02F,GPR05F                                       0164
*           SPKA (GPR03F); /*SET PSW KEY*/                         0165
         SPKA  0(GPR03F)                                           0165
*           RESPECIFY (GPR02F) UNRESTRICTED;                       0166
*         END; /*MODESET  SAVEKEY(GPR06F) KEYADDR(GPR03F) WORKREG(GPR05
*)*/        RFY GPR03F UNRSTD;                                     0167
*           GPR05P=GPR04P->RPHMAJCB+GPR04P->RPHPABOF;              0169
         L     GPR05P,RPHMAJCB-1(,GPR04P)                          0169
         LA    GPR05P,0(,GPR05P)                                   0169
         SLR   @07,@07                                             0169
         IC    @07,RPHPABOF(,GPR04P)                               0169
         ALR   GPR05P,@07                                          0169
*                                       /*LOAD REG 5  WITH ADDR OF*/
*                                       /*MAJOR CONTROL BLOCK PLUS*/
*                                       /*OFFSET OF PAB IN BLOCK  */
*           GPR14P=0;                   /*LOAD 0 INTO REG 14      */
         LR    GPR14P,@11                                          0170
*           GPR15P='FFFFFFFF'X;         /*LOAD REG 15 WITH DUMMY  */
         SLR   GPR15P,GPR15P                                       0171
         BCTR  GPR15P,0                                            0171
*                                       /*ADDRESS                 */
*           CS (GPR14P,GPR15P,GPR04P->RPHRESMA);                   0172
         CS    GPR14P,@15,RPHRESMA(GPR04P)                         0172
*                                       /*COMPARE RESUME ADDRESS  */
*                                       /*WITH 0 AND,IF EQUAL, PUT*/
*                                       /*DUMMY ADDRESS IN CONTROL*/
*                                       /*BLOCK RESUME ADDRESS    */
*           BC (8,FMZT0011);            /*IF EQUAL, BYPASS REMAINDER*/
         BC    8,FMZT0011                                          0173
*                                       /*OF EXPANSION              */
*FMZL0011:  IF GPR04P->RPHWT='1'B THEN  /*WT/EXT CONTENTION FLAG ON */
FMZL0011 TM    RPHWT(GPR04P),B'00001000'                           0174
         BNO   @RF00174                                            0174
*           DO;                         /*IN RPH                    */
*             GPR14P=GPR04P->RPHRESMA×RPHWT1;                      0176
         L     GPR14P,RPHRESMA(,GPR04P)                            0176
         O     GPR14P,@CF00154                                     0176
*                                       /*LOAD REG 14 WITH FLAG FIELD*/
*                                       /*AND MAKE CERTAIN WT/EXT    */
*                                       /*CONTENTION FLAG STILL ON   */
*             GPR15P=GPR14P×RPHPT1;     /*LOAD REG 15 WITH FLAG FIELD*/
         LR    GPR15P,GPR14P                                       0177
         O     GPR15P,@CF00144                                     0177
*                                       /*AND TURN POST FLAG ON      */
*             CS (GPR14P,GPR15P,GPR04P->RPHRESMA);                 0178
         CS    GPR14P,@15,RPHRESMA(GPR04P)                         0178
*                                       /*COMPARE REG 14 WITH FLAG */
*                                       /*FIELD--IF WT/EXT BIT ON, */
*                                       /*TURN ON POST FLAG        */
*             BC (4,FMZL0011);          /*IF WT/EXT BIT WAS OFF, LOOP*/
         BC    4,FMZL0011                                          0179
*                                       /*TO TEST CONTENTION FLAG    */
*             BC (8,FMZT0011);          /*IF WT/EXT BIT WAS OFF,     */
         BC    8,FMZT0011                                          0180
*                                       /*BRANCH TO BYPASS CODE GEN  */
*           END;                        /*IF POST FLAG IS ON, FALL*/
*                                       /*THRU BOTTOM OF LOOP     */
*           ELSE;                       /*WT/EXT CONTENTION FLAG OFF*/
@RF00174 DS    0H                                                  0183
*           GPR00F=0;                   /*SET REG 0 TO INDICATE ENA*/
*                                                                  0183
         SLR   GPR00F,GPR00F                                       0183
*         DO; /* LISATCVT CVTBASE(PAGEABLE,(GPR15P)) */            0184
*           GPR15P = ATCLCPTR; /*SET UP ATCVT POINTER*/            0185
         L     GPR15P,ATCLCPTR                                     0185
*         END; /*LISATCVT*/             /*PUT POINTER TO ATCVT IN */
*                                       /*  IN REG 15             */
*           CALL GPR15P->ATCAP32;       /* CALL ISTAPC32: TPSCHED */
         L     @11,ATCAP32(,GPR15P)                                0187
         LR    @15,@11                                             0187
         BALR  @14,@15                                             0187
*FMZT0011:                                                         0188
*         DO; /*MODESET  KEYADDR(GPR06F) WORKREG(GPR05F)*/         0188
FMZT0011 DS    0H                                                  0189
*           GPR05F = GPR06F; /*GET KEY FORM SAVE LOCATION*/        0189
         LR    GPR05F,GPR06F                                       0189
*           SPKA (GPR05F); /*SET PSW KEY*/                         0190
         SPKA  0(GPR05F)                                           0190
*         END; /*MODESET  KEYADDR(GPR06F) WORKREG(GPR05F)*/        0191
*           RESPECIFY (GPR00F,GPR01F,GPR04F,GPR05F,GPR06F,         0192
*           GPR14F,GPR15F) UNRSTD;      /*UNRESTRICT REGS 0,1,    */
*                                       /*4,5,14, AND 15          */
*         END;  /****END OF TPPOST GENERATION****/                 0193
*    ELSE                                                          0194
*      IF DLRPLRPF = DLRPLPAB   /* IS FLAG A PAB?      */          0194
*        THEN                  /* YES                   */         0194
*                                                                  0194
         B     @RC00136                                            0194
@RF00136 CLI   DLRPLRPF(COQR01),4                                  0194
         BNE   @RF00194                                            0194
*/*  TPQUE (COQR01,DLRPLRNF) NORM NSTR */                          0195
*                                                                  0195
*                                                                  0195
*/*                          CMZVER = OS/VS2                          *
*           DO;                                                    0195
*           RFY (GPR00P,GPR01P,GPR04P,GPR05P,GPR15P) RSTD;         0196
*           GPR00P=0;                                              0197
         SLR   GPR00P,GPR00P                                       0197
*           GPR15P=ADDR(DLRPLRNF); /*HOLD PAB PTR*/                0198
         LA    GPR15P,DLRPLRNF(,COQR01)                            0198
*           GPR04P=COQR01; /*WORK ELE PTR*/                        0199
         LR    GPR04P,COQR01                                       0199
*           GPR05P=GPR15P; /*PASS PAB PTR*/                        0200
         LR    GPR05P,GPR15P                                       0200
*           CALL ATCLCPTR->ATCAP37->ISTAPC37;                      0201
         L     @11,ATCLCPTR                                        0201
         L     @15,ATCAP37(,@11)                                   0201
         BALR  @14,@15                                             0201
*           GEN(NOPR  8)NOSETS NOREFS;                             0202
         NOPR  8
*           RFY (GPR00P,GPR01P,GPR04P,GPR05P,GPR15P) UNRSTD;       0203
*           END; /**** END OF TPQUE GENERATION ****/             /*@VS4
*726*/                                                             0204
*        ELSE                                                      0205
*          IF DLRPLRPF = DLRPLECB  /* IS FLAG AN ECB?        */    0205
*            THEN      /* YES */                                   0205
         B     @RC00194                                            0205
@RF00194 CLI   DLRPLRPF(COQR01),3                                  0205
         BNE   @RF00205                                            0205
*                        DO;                                       0206
*                        COQR01 = DLRPLRNF;/* PUT ECB @ IN R1  */  0207
         L     @14,DLRPLRNF-1(,COQR01)                             0207
         LA    @14,0(,@14)                                         0207
         LR    COQR01,@14                                          0207
*                        GEN (POST (1));                           0208
         POST (1)
*                        END;                                      0209
*            ELSE;  /* NOTIFICATION FLAG IS NOTHING */             0210
*                                                                  0210
@RF00205 DS    0H                                                  0211
*/* TPEPILOG   */                                                  0211
*   GEN (PRINT OFF);                                               0211
*                                                                  0211
@RC00194 DS    0H                                                  0211
@RC00136 DS    0H                                                  0211
         PRINT OFF
*   DCL ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*); /*RESET ROUTINE*/  0212
*   DCL ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*); /*TPQUE ROUTINE*/  0213
*   GEN (PRINT ON);                                                0214
         PRINT ON
*/* END OF TPEPILOG */                                             0215
* END ISTINCOQ;                                                    0215
@EL00001 DS    0H                                                  0215
@EF00001 DS    0H                                                  0215
@ER00001 LM    @14,@12,12(@13)                                     0215
         BR    @14                                                 0215
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTINCOQ CSECT
         DS    0F
@CF00066 DC    F'1'
@CF00072 DC    F'4'
@CF00136 DC    XL4'40000000'
@CF00144 DC    XL4'04000000'
@CF00154 DC    XL4'08000000'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTINCOQ CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00630 DC    C'YES'
@CC00634 DC    C'   '
@CC00632 DC    C'NO'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
COQPAD   EQU   @06
COQR02   EQU   @02
COQR13   EQU   @13
COQR01   EQU   @01
COQR03   EQU   @03
COQR04   EQU   @04
COQR05   EQU   @05
COQR10   EQU   @10
COQR12   EQU   @12
COQR15   EQU   @15
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR02F   EQU   @02
GPR03F   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR06F   EQU   @06
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
GPR02P   EQU   @02
GPR03P   EQU   @03
GPR06P   EQU   @06
ATCLCPTR EQU   1032
ISTTPMPL EQU   0
TPMPLRLN EQU   ISTTPMPL+4
TPMPLRBA EQU   ISTTPMPL+5
TPMPLRNF EQU   ISTTPMPL+8
TPMPLCID EQU   ISTTPMPL+16
ISTDLRPL EQU   0
DLRPLRSA EQU   ISTDLRPL
DLRPLR15 EQU   DLRPLRSA+16
DLRPLRPF EQU   ISTDLRPL+72
DLRPLRNF EQU   ISTDLRPL+73
DLRPLUSR EQU   ISTDLRPL+76
DLRPLIST EQU   ISTDLRPL+80
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00004 EQU   LOKCHNG+2
ISTDYPAB EQU   0
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWT    EQU   RPHWPFLG
RPHPABOF EQU   ISTRPH+20
RPHMAJCB EQU   ISTRPH+21
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCMSGP  EQU   ISTATCVT+344
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
@NM00015 EQU   ISTATCVT+911
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP32  EQU   ATCAOSM+28
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
ISTCFCTM EQU   0
USRTN    EQU   0
COQBYTE  EQU   0
COQSAVAR EQU   0
COQBCKPT EQU   COQSAVAR+4
COQFRWPT EQU   COQSAVAR+8
ISTAVT   EQU   0
ISTAS49  EQU   ISTAVT+4
ISTAPC37 EQU   0
ISTAPC34 EQU   0
DLRPLCOQ EQU   DLRPLIST
DLRPLOPT EQU   DLRPLCOQ
DLRPLFOL EQU   DLRPLOPT
DLRPLGYN EQU   DLRPLOPT
DLRPLTPM EQU   DLRPLCOQ+4
DLRPLCR6 EQU   DLRPLIST
@NM00002 EQU   DLRPLCR6+8
COQCFWC  EQU   COQSAVAR+8
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DLRPLTPL EQU   DLRPLCR6+44
DLRPLMSG EQU   DLRPLCR6+24
DLRPLSA2 EQU   DLRPLCR6+20
DLRPLSA1 EQU   DLRPLCR6+16
DLRPLMID EQU   DLRPLCR6+12
DLRPLSWS EQU   @NM00002+1
DLRPLFNC EQU   @NM00002
DLRPLNOD EQU   DLRPLCR6+4
DLRPLCON EQU   DLRPLCR6
ISTPDAVP EQU   ISTAVT+40
ISTAVR01 EQU   ISTAVT+38
ISTVTTP  EQU   ISTAVT+36
ISTAGTWT EQU   ISTAVT+34
ISTATRT  EQU   ISTAVT+32
ISTARID  EQU   ISTAVT+30
ISTX1    EQU   ISTAVT+29
ISTPHNM  EQU   ISTAVT+24
ISTAPSEX EQU   ISTAVT+20
ISTVTTIK EQU   ISTAVT+18
AVTASID  EQU   ISTAVT+16
ISTAPSTA EQU   ISTAVT+12
ISTAS53  EQU   ISTAVT+8
ISTAHIP  EQU   ISTAS49
ISTACVT  EQU   ISTAVT
@NM00018 EQU   COQSAVAR
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00017 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPT18 EQU   ATCAOSM+300
ATCRPT17 EQU   ATCAOSM+296
ATCRPT16 EQU   ATCAOSM+292
ATCRPT15 EQU   ATCAOSM+288
ATCRPT14 EQU   ATCAOSM+284
ATCRPT13 EQU   ATCAOSM+280
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00016 EQU   @NM00015
ATCVTMAB EQU   @NM00015
@NM00014 EQU   ISTATCVT+908
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00013 EQU   ISTATCVT+819
@NM00012 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00011 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00010 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00009 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHCRR   EQU   ISTRPH+32
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00008 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00007 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00006 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
LOKXCL   EQU   @NM00004
LOKPRY   EQU   @NM00004
@NM00005 EQU   @NM00004
@NM00003 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
@NM00001 EQU   DLRPLRSA+8
DLRPLQPT EQU   DLRPLRSA+4
DLRPLRCD EQU   DLRPLRSA+3
DLRPLFCD EQU   DLRPLRSA+2
DLRPLLTH EQU   DLRPLRSA+1
DLRPLIDF EQU   DLRPLRSA
TPMPLTXT EQU   ISTTPMPL+12
TPMPLMID EQU   ISTTPMPL
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   ISTINCOQ,(C'PLS1716',0603,75282)
