SVTM     TITLE 'ISTINCRD-INITIALIZATION PARAMETER READ ROUTINE         *
                        '
ISTINCRD CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTINCRD  77.305'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @00,@SA00001                                        0001
         ST    @00,8(,@13)                                         0001
         LR    @13,@00                                             0001
*                                                                  0235
*/********************************************************************
*                                                                    */
*/*   THE FUNCTION OF ISTINCRD IS TO EDIT RECORDS READ FROM THE VTAM-*/
*/* LST DATASET. THE RECORDS PROCESSED WILL BE EITHER ASSEMBLER LAN- */
*/* GUAGE MACRO STATEMENTS, START PARAMETERS, OR CONFIGURATION       */
*/* PARAMETERS.                                                      */
*/*   IF THE RECORDS ARE START PARAMETERS OR CONFIGURATION PAR-      */
*/* AMETERS, THE OUTPUT IS EDITED INTO THE OUTPUT BUFFER BEGINNING   */
*/* IN COLUMN1 WITH NO BLANKS INCLUDED.                              */
*/*   IF THE RECORDS ARE ASSEMBLER LANGUAGE MACROS, SCANS ARE MADE FOR
*                                                                    */
*/* NAME FIELD AND OP CODE FIELD RESPECTIVELY. A BLANK IS LEFT       */
*/* BETWEEN NAME FIELD AND OP CODE FIELD AND OP CODE FIELD AND       */
*/* PARAMETERS. IF THERE IS NO NAME FIELD, A BLANK IS LEFT AT THE    */
*/* BEGINNING OF THE BUFFER.                                         */
*/********************************************************************
*                                                                    */
*                                                                  0236
*   RSPTR=R1;                       /* SAVE PTR TO INPUT PARM LIST   */
*                                                                  0236
         ST    R1,RSPTR                                            0236
*    DO; /* LISATCVT CVTBASE(PAGEABLE,(VCVTPTR)) */                0237
*      VCVTPTR = ATCLCPTR; /*SET UP ATCVT POINTER*/                0238
         L     @00,ATCLCPTR                                        0238
         ST    @00,VCVTPTR                                         0238
*    END; /*LISATCVT*//* GET PTR TO VTAM CVT     */                0239
*/********************************************************************
*                                                                    */
*/*   MAINLINE ISTINCRD CHECKS THE BUFFER SIZE IN THE VTAM CON-      */
*/* FIGURATION TABLE(CONBUFSZ) TO DETERMINE IF ANY VGTMAINS OR       */
*/* VFRMAINS NEED BE DONE. IF CONBUFSZ=256 THEN A BUFFER ALREADY     */
*/* EXISTS & IS THE CORRECT SIZE. THEREFORE, NO VGTMAIN OR VFRMAIN   */
*/* IS NEEDED. IF CONBUFSZ=0 NO BUFFER EXISTS & VGTMAIN IS NEEDED.   */
*/* IF CONBUFSZ>256, THE 1ST BUFFER MUST BE FREED & A SUBSEQUENT     */
*/* VGTMAIN DONE FOR 256 BYTES.                                      */
*/********************************************************************
*                                                                    */
*                                                                  0240
*   RCREG=CRDCLEAR;                 /* CLEAR RETURN REG              */
         SLR   RCREG,RCREG                                         0240
*   BADSTORE=CRDOFF;                /* TURN OFF BAD GETSTOR FLAG     */
*   CONTERR=CRDOFF;                 /* INITIALIZE TO NO ERROR      0242
*                                                            @DM12512*/
         NI    BADSTORE,B'11101011'                                0242
*   IF LDPMBR^=MEMBZERO THEN                                       0243
         L     @11,RSPTR                                           0243
         CLC   LDPMBR(8,@11),MEMBZERO                              0243
         BE    @RF00243                                            0243
*     MEMBSAVE=LDPMBR;              /* SAVE MEMBER NAME IF NOT ZERO
*                                                            @DM12432*/
         MVC   MEMBSAVE(8),LDPMBR(@11)                             0244
*   ELSE                                                           0245
*     ;                                                            0245
@RF00243 DS    0H                                                  0246
*   IF CONBUFSZ=BUFSIZE THEN                                       0246
         L     @11,VCVTPTR                                         0246
         L     @11,ATCCONFT(,@11)                                  0246
         LH    @00,CONBUFSZ(,@11)                                  0246
         C     @00,BUFSIZE                                         0246
         BE    @RT00246                                            0246
*     ;                             /* CHECK IF BUFFER IS NOW 256    */
*   ELSE                                                           0248
*     DO;                           /* IF NOT, GET NEW BUFFER        */
*       IF CONBUFSZ=CRDCLEAR THEN                                  0249
         L     @11,VCVTPTR                                         0249
         L     @11,ATCCONFT(,@11)                                  0249
         LH    @00,CONBUFSZ(,@11)                                  0249
         LTR   @00,@00                                             0249
         BZ    @RT00249                                            0249
*         ;                         /* IF NO BUF              @-DON'T
*                                      DO FREESTOR                   */
*       ELSE                                                       0251
*         DO;                                                      0251
*                                                                  0251
*/*VFRMAIN  SIZE(CONBUFSZ)STORAGE((CONRDBUF))SUBPOOL((ADDR(CRDPOOL)))*/
*            DO;                                                   0252
*                                                                  0252
*            RFY (GPR00P) RSTD;          /*PUT VALUE PASSED AS SIZE  */
*                                        /*PARM IN  THREE LOW-ORDER  */
*                                        /*BYTES OF REG 0            */
*              GPR00F=CONBUFSZ & '00FFFFFF'X;                      0254
*                                                                  0254
         L     @11,VCVTPTR                                         0254
         L     @11,ATCCONFT(,@11)                                  0254
         LH    GPR00F,CONBUFSZ(,@11)                               0254
         N     GPR00F,@CF02374                                     0254
*            RFY (GPR15P) RSTD;                                    0255
*              DCL CMZB0011 FIXED(31) BASED(ADDR(CRDPOOL));        0256
*                                        /*PUT VALUE POINTED TO BY   */
*                                        /*SUBPOOL PARM IN HIGH-     */
*                                        /*ORDER BYTE  OF REG 15     */
*              GPR15F=CMZB0011;                                    0257
         LA    @10,CRDPOOL                                         0257
         L     GPR15F,CMZB0011(,@10)                               0257
*              SLL (GPR15P,24);          /*COMBINE SUBPOOL AND SIZE  */
         SLL   GPR15P,24                                           0258
*                                        /*IN REGISTER 0             */
*              GPR00P=GPR00P × GPR15P;                             0259
*                                                                  0259
         OR    GPR00P,GPR15P                                       0259
*            RFY (GPR15P) UNRSTD;        /*DECLARE AND RESTRICT REG 1*/
*                                                                  0260
*            RFY (GPR01P) RSTD;          /*INVOKE XREGSET MACRO TO   */
*                                        /*CHECK STORAGE PARM AND PUT*/
*                                        /*ADDR IN REGISTER 1        */
*                                                                  0262
*/*XREGSET  PID('STORAGE')PPARM((CONRDBUF))RREG(1,GPR01P)*/        0262
*            DO;                                                   0262
*              GPR01P=CONRDBUF;          /*SET RREG SYMBOL TO VALUE*/
         L     GPR01P,CONRDBUF(,@11)                               0263
*                                        /*OF PPARM OPERAND        */
*            END;  /* XREGSET */         /*INVOKE FREEMAIN MACRO     */
*              GEN;                                                0265
         FREEMAIN R,LV=(0),A=(1)
*                                        /*UNRESTRICT REG 1          */
*                                                                  0266
*            RFY (GPR01P) UNRSTD;        /* UNRESTRICT REG 0         */
*                                                                  0266
*            RFY (GPR00P) UNRSTD;                                  0267
*            END;  /* VFRMAIN */                                   0268
*           CONBUFSZ=CRDCLEAR;      /* ZERO BUFFER SIZE              */
         SLR   @11,@11                                             0269
         L     @10,VCVTPTR                                         0269
         L     @10,ATCCONFT(,@10)                                  0269
         STH   @11,CONBUFSZ(,@10)                                  0269
*           CONRDBUF=CRDCLEAR;      /* ZERO BUFFER @                 */
         ST    @11,CONRDBUF(,@10)                                  0270
*         END;                                                     0271
*       GEN SETS(SMSREGS)(STM    2,4,SMSREGS);/* SAVE REGS CLOBBERRED
*                                      BY GETSTOR                    */
@RT00249 DS    0H                                                  0272
         STM    2,4,SMSREGS
*/*VGTMAIN SIZE(BUFSIZE)STORAGE((ADDR(CONRDBUF)))SUBPOOL((ADDR(CRDPOOL)
*)*/                                                               0273
*        DO;                             /*DECLARE AND RESTRICT      */
*                                        /* REGISTERS 2,3, AND 4     */
*                                                                  0274
*        RFY (GPR02P,GPR03P,GPR04P) RSTD;                          0274
*                                        /*INVOKE XREGSET MACRO TO */
*                                        /*CHECK SIZE PARM AND PUT */
*                                        /*VALUE IN REGISTER 2     */
*                                                                  0275
*/*XREGSET  PID('SIZE')PPARM(BUFSIZE)RREG(,GPR02F)OUTPUT(PARM)*/   0275
*        DO;                                                       0275
*          GPR02F=BUFSIZE;               /*SET RREG SYMBOL TO VALUE*/
         L     GPR02F,BUFSIZE                                      0276
*                                        /*OF PPARM OPERAND        */
*        END;  /* XREGSET */             /*INVOKE XREGSET MACRO TO */
*                                        /*CHECK STORAGE PARM AND  */
*                                        /*PUT VALUE IN REGISTER 3 */
*                                                                  0278
*/*XREGSET  PID('STORAGE')PPARM((ADDR(CONRDBUF)))RREG(,GPR03F)*/   0278
*        DO;                                                       0278
*          GPR03F=ADDR(CONRDBUF);        /*SET RREG SYMBOL TO VALUE*/
         L     @11,VCVTPTR                                         0279
         L     GPR03F,ATCCONFT(,@11)                               0279
         LA    GPR03F,CONRDBUF(,GPR03F)                            0279
*                                        /*OF PPARM OPERAND        */
*        END;  /* XREGSET */             /*INVOKE XREGSET MACRO TO */
*                                        /*CHECK SUBPOOL PARM AND  */
*                                        /*PUT VALUE IN REGISTER 4 */
*                                                                  0281
*/*XREGSET  PID('SUBPOOL')PPARM((ADDR(CRDPOOL)))RREG(,GPR04F)OUTPUT(PAR
*)*/                                                               0281
*        DO;                                                       0281
*          DCL DUME0024 CHAR(4) BASED(ADDR(CRDPOOL));              0282
*                                        /*DEFINE DUMMY VARIABLE SO*/
*                                        /*THAT PPARM OPERAND CAN BE*/
*                                        /*USED AS A POINTER        */
*          GPR04F=DUME0024;              /*SET RREG SYMBOL TO VALUE*/
         LA    @11,CRDPOOL                                         0283
         ICM   GPR04F,15,DUME0024(@11)                             0283
*                                        /*POINTED TO BY PPARM OPER*/
*        END;  /* XREGSET */             /* INVOKE GETMAIN MACRO     */
*          GEN REFS(GPR02F,GPR03P,GPR04F) SETS(GPR03P,GPR15F);     0285
         GETMAIN EC,LV=(2),A=(3),SP=(4)
*                                        /*UNRESTRICT REGS 2,3, AND 4*/
*                                                                  0286
*        RFY (GPR02P,GPR03P,GPR04P) UNRSTD;                        0286
*        END;  /* VGTMAIN */                                       0287
*       GEN REFS(SMSREGS)(LM     2,4,SMSREGS);/* RESTORE REGS        */
         LM     2,4,SMSREGS
*       IF RCREG=CRDCLEAR THEN                                     0289
         LTR   RCREG,RCREG                                         0289
         BNZ   @RF00289                                            0289
*         DO;                                                      0290
*           CONBUFSZ=BUFSIZE;       /* SET BUFFER SIZE               */
         L     @11,VCVTPTR                                         0291
         L     @11,ATCCONFT(,@11)                                  0291
         L     @00,BUFSIZE                                         0291
         STH   @00,CONBUFSZ(,@11)                                  0291
*         END;                                                     0292
*       ELSE                                                       0293
*         DO;                                                      0293
         B     @RC00289                                            0293
@RF00289 DS    0H                                                  0294
*           BADSTORE=CRDON;         /* SET BAD GETSTORE FLAG ON      */
         OI    BADSTORE,B'00010000'                                0294
*         END;                                                     0295
*     END;                                                         0296
@RC00289 DS    0H                                                  0297
*   IF RCREG=CRDCLEAR THEN                                         0297
@RT00246 SLR   @11,@11                                             0297
         CR    RCREG,@11                                           0297
         BNE   @RF00297                                            0297
*     DO;                                                          0298
*       CURRENTP=ADDR(INBUF);       /* PT. CURRENT PTR AT BUFFER   0299
*                                      BEGIN                         */
         LA    CURRENTP,INBUF                                      0299
*       RSPLIBN=LDPPDS;             /* MOVE LIB NAME TO MY PARM LIST */
         L     @10,RSPTR                                           0300
         MVC   RSPLIBN(8),LDPPDS(@10)                              0300
*/* MOVE 3RD FIELD FROM INPUT PARM LIST TO CRS PARM LIST             */
*                                                                  0301
*       ISTRSPRM(CRDWRD5B:CRDWRD5E)=ISTLDPRM(CRDWRD5B:CRDWRD5E);   0301
         MVC   ISTRSPRM+16(4),ISTLDPRM+16(@10)                     0301
*       RSPMEMBN=LDPMBR;            /* MOVE MEMBER NAME INTO MY LIST */
         MVC   RSPMEMBN(8),LDPMBR(@10)                             0302
*       QUOTECNT=CRDCLEAR;          /* CLEAR QUOTE COUNT             */
         ST    @11,QUOTECNT                                        0303
*       NOPARMS=CRDOFF;             /* CLEAR NOPARMS FLAG            */
         NI    NOPARMS,B'11110111'                                 0304
*       CRDOBPTR=CONRDBUF;          /* SET INTERNAL OUTPUT BUFFER PTR*/
         L     @11,VCVTPTR                                         0305
         L     @11,ATCCONFT(,@11)                                  0305
         L     @00,CONRDBUF(,@11)                                  0305
         ST    @00,CRDOBPTR                                        0305
*       CRDENDSP=CRDON;             /* SET FLAG ON FOR GOREAD FOR  0306
*                                      CONTINUATION OK               */
         OI    CRDENDSP,B'10000000'                                0306
*/* GOREAD AND EDITRCD ARE NOW CALLED TO READ A RECORD AND EDIT IT   */
*                                                                  0307
*       CALL GOREAD;                /* CALL ISTINCRS INTERFACE     0307
*                                      SUBROUTINE                    */
         BAL   @14,GOREAD                                          0307
*       IF RCREG=CRDCLEAR THEN      /* IS READ SUCCESSFUL?           */
         LTR   RCREG,RCREG                                         0308
         BNZ   @RF00308                                            0308
*         DO;                                                      0309
*           CALL STNB;              /* CALL SUBRTN. TO SCAN TO     0310
*                                      NON-BLANKS                    */
         BAL   @14,STNB                                            0310
*           IF CONTERR^=CRDON THEN  /* DONT SEND ERR MSG 114 @DM12512*/
         TM    CONTERR,B'00000100'                                 0311
         BO    @RF00311                                            0311
*             IF RCREG^=CRDCLEAR THEN/* CHECK IF STNB O.K.           */
         LTR   RCREG,RCREG                                         0312
         BZ    @RF00312                                            0312
*               DO;                                                0313
*                                                                  0313
*/*TPMSG MSGID('114I')MSG((ADDR(MEMBSAVE)))*/                      0314
*                                                                  0314
*                  DO;                                             0314
*                    DCL REG1026  REG(1)  PTR;                     0315
*                    RFY (REG1026) RSTD;                           0316
*                                                                  0316
*                  RFY (EMCR13) RSTD;                              0317
*                    DCL 1 * BASED(REG1026),                       0318
*                        2 CMZID026 PTR(31),                       0318
*                        2 *,                                      0318
*                          3 CMZRL026 PTR(8),                      0318
*                          3 CMZRA026 PTR(24) BDY(BYTE),           0318
*                        2 CMZEA026 PTR(31),                       0318
*                        2 CMZVP026 PTR(31);                       0318
*                    DCL CMZPL026(4) FIXED INIT((4)0);             0319
*                    REG1026 = ADDR(CMZPL026);                     0320
         LA    REG1026,CMZPL026                                    0320
*                    DCL CMZAA026 CHAR(4) INIT('114I');            0321
*                    CMZID026 = ADDR(CMZAA026);                    0322
         LA    @00,CMZAA026                                        0322
         ST    @00,CMZID026(,REG1026)                              0322
*                    CMZVP026 = ADDR(MEMBSAVE);                    0323
         LA    @00,MEMBSAVE                                        0323
         ST    @00,CMZVP026(,REG1026)                              0323
*                    DCL CMZSA026 (18) PTR(31) BASED(EMCR13);      0324
*                    DCL CMZZO026 (1) FIXED(31) INIT(0);           0325
*                    CMZSA026(5) = CMZZO026;                       0326
*                                                                  0326
         L     @00,CMZZO026                                        0326
         ST    @00,CMZSA026+16(,EMCR13)                            0326
*                    DCL REG15026 REG(15) PTR;                     0327
*                    RFY REG15026 RSTD;                            0328
*                                                                  0328
*                  DO; /* LISATCVT CVTBASE(PAGEABLE,(REG15026)) */ 0329
*                    REG15026 = ATCLCPTR; /*SET UP ATCVT POINTER*/ 0330
         L     REG15026,ATCLCPTR                                   0330
*                  END; /*LISATCVT*/                               0331
*                    DCL CMTA026 BASED(REG15026) ENTRY VALUERANGE(*);
*                    REG15026 = REG15026->ATCMSGP;                 0333
         L     REG15026,ATCMSGP(,REG15026)                         0333
*                    CALL CMTA026;                                 0334
         BALR  @14,@15                                             0334
*                    RESPECIFY (REG1026,REG15026)  UNRESTRICTED;   0335
*                                                                  0335
*                  RFY (EMCR13) UNRSTD;                            0336
*                  END;                                            0337
*                 RCREG=RETURN12;   /* SET 12 R.C.                   */
         LA    RCREG,12                                            0338
*               END;                                               0339
*             ELSE                                                 0340
*               CALL EDITRCD;       /* IF R.C.=0 THEN CALL EDITRCD   */
         B     @RC00312                                            0340
@RF00312 BAL   @14,EDITRCD                                         0340
*           ELSE                                                   0341
*             ;                     /*                       @DM12512*/
@RF00311 DS    0H                                                  0342
*         END;                                                     0342
*       ELSE                                                       0343
*         ;                         /* READ NOT SUCCESSFUL           */
@RF00308 DS    0H                                                  0344
*     END;                                                         0344
*   ELSE                                                           0345
*     DO;                                                          0345
*                                                                  0345
         B     @RC00297                                            0345
@RF00297 DS    0H                                                  0346
*/*TPMSG MSGID('115I')MSG((ADDR(MEMBSAVE)))*/                      0346
*                                                                  0346
*        DO;                                                       0346
*          DCL REG1034  REG(1)  PTR;                               0347
*          RFY (REG1034) RSTD;                                     0348
*                                                                  0348
*        RFY (EMCR13) RSTD;                                        0349
*          DCL 1 * BASED(REG1034),                                 0350
*              2 CMZID034 PTR(31),                                 0350
*              2 *,                                                0350
*                3 CMZRL034 PTR(8),                                0350
*                3 CMZRA034 PTR(24) BDY(BYTE),                     0350
*              2 CMZEA034 PTR(31),                                 0350
*              2 CMZVP034 PTR(31);                                 0350
*          DCL CMZPL034(4) FIXED INIT((4)0);                       0351
*          REG1034 = ADDR(CMZPL034);                               0352
         LA    REG1034,CMZPL034                                    0352
*          DCL CMZAA034 CHAR(4) INIT('115I');                      0353
*          CMZID034 = ADDR(CMZAA034);                              0354
         LA    @00,CMZAA034                                        0354
         ST    @00,CMZID034(,REG1034)                              0354
*          CMZVP034 = ADDR(MEMBSAVE);                              0355
         LA    @00,MEMBSAVE                                        0355
         ST    @00,CMZVP034(,REG1034)                              0355
*          DCL CMZSA034 (18) PTR(31) BASED(EMCR13);                0356
*          DCL CMZZO034 (1) FIXED(31) INIT(0);                     0357
*          CMZSA034(5) = CMZZO034;                                 0358
*                                                                  0358
         L     @00,CMZZO034                                        0358
         ST    @00,CMZSA034+16(,EMCR13)                            0358
*          DCL REG15034 REG(15) PTR;                               0359
*          RFY REG15034 RSTD;                                      0360
*                                                                  0360
*        DO; /* LISATCVT CVTBASE(PAGEABLE,(REG15034)) */           0361
*          REG15034 = ATCLCPTR; /*SET UP ATCVT POINTER*/           0362
         L     REG15034,ATCLCPTR                                   0362
*        END; /*LISATCVT*/                                         0363
*          DCL CMTA034 BASED(REG15034) ENTRY VALUERANGE(*);        0364
*          REG15034 = REG15034->ATCMSGP;                           0365
         L     REG15034,ATCMSGP(,REG15034)                         0365
*          CALL CMTA034;                                           0366
         BALR  @14,@15                                             0366
*          RESPECIFY (REG1034,REG15034)  UNRESTRICTED;             0367
*                                                                  0367
*        RFY (EMCR13) UNRSTD;                                      0368
*        END;/*        @DM12432*/                                  0369
*       RCREG=RETURN12;             /* SET 12 R.C.                   */
         LA    RCREG,12                                            0370
*     END;                                                         0371
*   IF RCREG=CRDCLEAR×BADSTORE=CRDON THEN                          0372
@RC00297 LTR   RCREG,RCREG                                         0372
         BZ    @RT00372                                            0372
         TM    BADSTORE,B'00010000'                                0372
         BO    @RT00372                                            0372
*     ;                             /* DON'T DO FREESTOR HERE        */
*   ELSE                                                           0374
*     DO;                                                          0374
*       TEMPRC=RCREG;               /* SAVE R.C. OVER FREESTOR       */
*                                                                  0375
         ST    RCREG,TEMPRC                                        0375
*/*VFRMAIN  SIZE(CONBUFSZ)STORAGE((CONRDBUF))SUBPOOL((ADDR(CRDPOOL)))*/
*        DO;                                                       0376
*                                                                  0376
*        RFY (GPR00P) RSTD;              /*PUT VALUE PASSED AS SIZE  */
*                                        /*PARM IN  THREE LOW-ORDER  */
*                                        /*BYTES OF REG 0            */
*          GPR00F=CONBUFSZ & '00FFFFFF'X;                          0378
*                                                                  0378
         L     @11,VCVTPTR                                         0378
         L     @11,ATCCONFT(,@11)                                  0378
         LH    GPR00F,CONBUFSZ(,@11)                               0378
         N     GPR00F,@CF02374                                     0378
*        RFY (GPR15P) RSTD;                                        0379
*          DCL CMZB0042 FIXED(31) BASED(ADDR(CRDPOOL));            0380
*                                        /*PUT VALUE POINTED TO BY   */
*                                        /*SUBPOOL PARM IN HIGH-     */
*                                        /*ORDER BYTE  OF REG 15     */
*          GPR15F=CMZB0042;                                        0381
         LA    @10,CRDPOOL                                         0381
         L     GPR15F,CMZB0042(,@10)                               0381
*          SLL (GPR15P,24);              /*COMBINE SUBPOOL AND SIZE  */
         SLL   GPR15P,24                                           0382
*                                        /*IN REGISTER 0             */
*          GPR00P=GPR00P × GPR15P;                                 0383
*                                                                  0383
         OR    GPR00P,GPR15P                                       0383
*        RFY (GPR15P) UNRSTD;            /*DECLARE AND RESTRICT REG 1*/
*                                                                  0384
*        RFY (GPR01P) RSTD;              /*INVOKE XREGSET MACRO TO   */
*                                        /*CHECK STORAGE PARM AND PUT*/
*                                        /*ADDR IN REGISTER 1        */
*                                                                  0386
*/*XREGSET  PID('STORAGE')PPARM((CONRDBUF))RREG(1,GPR01P)*/        0386
*        DO;                                                       0386
*          GPR01P=CONRDBUF;              /*SET RREG SYMBOL TO VALUE*/
         L     GPR01P,CONRDBUF(,@11)                               0387
*                                        /*OF PPARM OPERAND        */
*        END;  /* XREGSET */             /*INVOKE FREEMAIN MACRO     */
*          GEN;                                                    0389
         FREEMAIN R,LV=(0),A=(1)
*                                        /*UNRESTRICT REG 1          */
*                                                                  0390
*        RFY (GPR01P) UNRSTD;            /* UNRESTRICT REG 0         */
*                                                                  0390
*        RFY (GPR00P) UNRSTD;                                      0391
*        END;  /* VFRMAIN */                                       0392
*       CONRDBUF=CRDCLEAR;          /* ZERO CONRDBUF                 */
         SLR   @11,@11                                             0393
         L     @10,VCVTPTR                                         0393
         L     @10,ATCCONFT(,@10)                                  0393
         ST    @11,CONRDBUF(,@10)                                  0393
*       CONBUFSZ=CRDCLEAR;          /* CLEAR BUFFER SIZE             */
         STH   @11,CONBUFSZ(,@10)                                  0394
*       RCREG=TEMPRC;               /* RESTORE R.C.                  */
         L     RCREG,TEMPRC                                        0395
*     END;                                                         0396
*   RETURN;                         /* RETURN TO CALLER              */
@EL00001 L     @13,4(,@13)                                         0397
@EF00001 DS    0H                                                  0397
@ER00001 L     @14,12(,@13)                                        0397
         LM    @00,@12,20(@13)                                     0397
         BR    @14                                                 0397
*EDITRCD:                                                          0398
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0398
*                                                                  0398
EDITRCD  DS    0H                                                  0399
*/********************************************************************
*                                                                    */
*/*   THE EDITRCD SUBROUTINE DETERMINES HOW ISTINCRD WAS ENTERED.    */
*/* I.E. WAS IT ENTERED FOR START PARAMETERS, CONFIGURATION PARAMETERS
*                                                                    */
*/* OR ASSEMBLER LANGUAGE MACRO STATEMENTS. IF IT WAS ENTERED FOR    */
*/* ASSEMBLER LANGUAGE MACRO STATEMENTS, THE NAME & OP CODE FIELDS   */
*/* ARE PROPERLY EDITED. PARMSCAN IS CALLED FOR BOTH TYPES OF ENTRIES*/
*/* TO SCAN PARAMETERS.                                              */
*/********************************************************************
*                                                                    */
*                                                                  0399
*   DCL                                                            0399
*     EDITSAVE;                     /* SAVE FOR REG 14               */
*   EDITSAVE=R14;                   /* SAVE REG 14                   */
         ST    R14,EDITSAVE                                        0400
*   CRDENDST=CRDOFF;                /* SET FLAG OFF FOR LOOP         */
         NI    CRDENDST,B'10111111'                                0401
*   IF MEMBSAVE(START:FIRST6)='ATCCON'×MEMBSAVE(START:FIRST6)='ATCSTR'
*     THEN                          /* IF 1ST 6 CHARS OF MEMBER NAME
*                                      ARE ATCCON OR ATCSTR          */
         CLC   MEMBSAVE(6),@CC02418                                0402
         BE    @RT00402                                            0402
         CLC   MEMBSAVE(6),@CC02419                                0402
         BNE   @RF00402                                            0402
@RT00402 DS    0H                                                  0403
*     CALL PARMSCAN;                /* CALL ROUTINE TO SCAN        0403
*                                      PARAMETERS                    */
         BAL   @14,PARMSCAN                                        0403
*   ELSE                                                           0404
*     DO;                                                          0404
         B     @RC00402                                            0404
@RF00402 DS    0H                                                  0405
*       IF INBUF(START:START)=BLANK THEN/* CHECK FOR BLANK IN COL. 1 */
         CLI   INBUF,C' '                                          0405
         BNE   @RF00405                                            0405
*         DO;                                                      0406
*           OUTAREA(START:START)=BLANK;/* MOVE A BLANK TO OUTPUT AREA*/
         L     @11,CRDOBPTR                                        0407
         MVI   OUTAREA(@11),C' '                                   0407
*           CRDOBPTR=CRDOBPTR+CONS1;/* BUMP OUTPUT PTR               */
         AL    @11,@CF00061                                        0408
         ST    @11,CRDOBPTR                                        0408
*         END;                                                     0409
*       ELSE                                                       0410
*         DO;                       /* IF NOT BLANK, THEN PROCESS  0410
*                                      NAME FIELD                    */
         B     @RC00405                                            0410
@RF00405 DS    0H                                                  0411
*           CALL MTB;               /* MOVE TO BLANKS                */
         BAL   @14,MTB                                             0411
*           CALL STNB;              /* SCAN TO NON-BLANKS            */
         BAL   @14,STNB                                            0412
*         END;                                                     0413
*       IF RCREG=CRDCLEAR THEN      /* IF R.C. =0 THEN SCAN REST OF
*                                      CARD                          */
@RC00405 LTR   RCREG,RCREG                                         0414
         BNZ   @RF00414                                            0414
*         DO;                                                      0415
*           CALL MTB;               /* MOVE TO BLANKS                */
         BAL   @14,MTB                                             0416
*           NOPARMS=CRDON;          /* INDICATE NO PARAMS ON CARD IS
*                                      OK                            */
         OI    NOPARMS,B'00001000'                                 0417
*           CALL STNB;              /* SCAN TO NON-BLANKS            */
         BAL   @14,STNB                                            0418
*           IF RCREG=CRDCLEAR THEN  /* CHECK IF NON-BLANK FOUND      */
         LTR   RCREG,RCREG                                         0419
         BNZ   @RF00419                                            0419
*             DO;                                                  0420
*               NOPARMS=CRDOFF;     /* TURN OFF NOPARMS FLAG         */
         NI    NOPARMS,B'11110111'                                 0421
*               CALL PARMSCAN;      /* IF NON-BLANK FOUND, PROCESS 0422
*                                      PARMS                         */
         BAL   @14,PARMSCAN                                        0422
*             END;                                                 0423
*           ELSE                                                   0424
*             ;                     /* RETURN CODE ^= 0 FROM PARMSCAN*/
@RF00419 DS    0H                                                  0425
*         END;                                                     0425
*       ELSE                                                       0426
*         ;                         /* RETURN CODE ^= 0 FROM MTB     */
@RF00414 DS    0H                                                  0427
*     END;                                                         0427
*   IF RCREG=CRDCLEAR THEN                                         0428
@RC00402 LTR   RCREG,RCREG                                         0428
         BNZ   @RF00428                                            0428
*     OUTAREA(START:START2)=BLANKS; /* ADD 2 BLANKS TO OUTPUT AREA   */
         L     @11,CRDOBPTR                                        0429
         MVC   OUTAREA(2,@11),@CC02325                             0429
*   R14=EDITSAVE;                   /* RESTORE REG 14 FOR RETURN     */
@RF00428 L     R14,EDITSAVE                                        0430
*   END EDITRCD;                                                   0431
@EL00002 DS    0H                                                  0431
@EF00002 DS    0H                                                  0431
@ER00002 BR    @14                                                 0431
*PARMSCAN:                                                         0432
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0432
*                                                                  0432
PARMSCAN DS    0H                                                  0433
*/********************************************************************
*                                                                    */
*/*   THE PARMSCAN SUBROUTINE IS CALLED TO SCAN THE PARAMETERS OF THE*/
*/* RECORD. ALL IMBEDDED BLANKS, NOT INSIDE A QUOTE, ARE TREATED AS  */
*/* EXTRANEOUS & NOT MOVED TO THE OUTPUT BUFFER.                     */
*/*   CHK72 IS CALLED AT THE END OF THE CURRENT RECORD TO DETERMINE  */
*/* IF THE PARAMETERS ARE CONTINUED ON ANOTHER CARD.                 */
*/********************************************************************
*                                                                    */
*/* THE FOLLOWING DECLARES ARE LOCAL TO PARMSCAN                     */
*                                                                  0433
*   DCL                                                            0433
*     PARMSAVE;                     /* SAVE VAR. FOR REG 14          */
*   DCL                                                            0434
*     FUNCBYTE CHAR(1) BASED(STOPPTR);/* BYTE WHERE TRT STOPS        */
*   DCL                                                            0435
*     QUOTECHR CHAR(1) INIT('7D'X); /* QUOTE FOR QUOTE CHECK         */
*   DCL                                                            0436
*     1 PARMFLGS CHAR(1),                                          0436
*      2 * BIT(1),                                                 0436
*      2 CC0FLAG BIT(1),            /* FLAG INDICATING C.C=0         */
*      2 * BIT(6);                                                 0436
*   DCL                                                            0437
*     CONS7 CONSTANT(7);            /* USED FOR C.C. CHECK           */
*   DCL                                                            0438
*     PREVBYTE CHAR(1) BASED(STOPPTR-CONS1);/* BYTE BEFORE TRT STOPS */
*   DCL                                                            0439
*     CHARCNT;                      /* USED TO CALCULATE # CHARS   0439
*                                      SCANNED                       */
*   DCL                                                            0440
*     CONS13 CONSTANT(13);          /* USE FOR C.C. CHECK            */
*   DCL                                                            0441
*     1 PARMTAB CHAR(256),          /* TRANSLATE & TEST TABLE FOR  0441
*                                      PARMSCAN                      */
*      2 * CHAR(64),                                               0441
*       3 *(64) CHAR(1) INIT((64)'00'X),                           0441
*      2 BLANKSTP CHAR(1) INIT('04'X),/* BLANK STOP                  */
*      2 * CHAR(60),                                               0441
*       3 *(60) CHAR(1) INIT((60)'00'X),                           0441
*      2 QUOTESTP CHAR(1) INIT('08'X),/* QUOTE STOP                  */
*      2 * CHAR(130),                                              0441
*       3 *(130) CHAR(1) INIT((130)'00'X);                         0441
*                                                                  0441
*/* THE FOLLOWING TRT WILL STOP ON A BLANK OR QUOTE                  */
*                                                                  0442
*   GEN DATA REFS(CURRENTP,PARMTAB);                               0442
*   PARMSAVE=R14;                   /* SAVE REG 14                   */
         ST    R14,PARMSAVE                                        0443
*   CRDENDSP=CRDOFF;                /* TURN OFF ALL LOOP CONTROL   0444
*                                      FLAGS                         */
*   CRDENDST=CRDOFF;                                               0445
*   CRDENTRT=CRDOFF;                                               0446
         NI    CRDENDSP,B'00011111'                                0446
*   RCREG=CRDCLEAR;                                                0447
         SLR   RCREG,RCREG                                         0447
*   DO WHILE(RCREG=CRDCLEAR&CRDENDST=CRDOFF);/* MAJOR DO WHILE SCAN
*                                      ENTIRE STRING                 */
         B     @DE00448                                            0448
@DL00448 DS    0H                                                  0449
*     DO WHILE(RCREG=CRDCLEAR&CRDENTRT=CRDOFF);/* MINOR DO WHILE FOR
*                                      SUB PARMS                     */
         B     @DE00449                                            0449
@DL00449 DS    0H                                                  0450
*       CC0FLAG=CRDOFF;             /* TURN OFF C.C. 0 FLAG          */
         NI    CC0FLAG,B'10111111'                                 0450
*       IF CRDENDSP=CRDON THEN                                     0451
         TM    CRDENDSP,B'10000000'                                0451
         BNO   @RF00451                                            0451
*         CRDENTRT=CRDON;           /* CHECK END SUBPRM FLAG         */
         OI    CRDENTRT,B'00100000'                                0452
*       ELSE                                                       0453
*         DO;                                                      0453
         B     @RC00451                                            0453
@RF00451 DS    0H                                                  0454
*           TRTREG=ADDR(INBUF)+ENDCARD-CURRENTP-CONS1;/* CALCULATE 0454
*                                      LENGTH OF STRING              */
         LA    TRTREG,INBUF                                        0454
         AL    TRTREG,@CF02360                                     0454
         SLR   TRTREG,CURRENTP                                     0454
         BCTR  TRTREG,0                                            0454
*           GEN(EX    TRTREG,TRANSLT);/* EXECUTE THE TRT FOR PARMSCAN*/
         EX    TRTREG,TRANSLT
*           STOPPTR=R1;             /* SAVE STOP POSITION            */
         ST    R1,STOPPTR                                          0456
*           BC(CONS7,CONCODE2);     /* IF C.C IS NOT ZERO BRANCH     */
         BC    7,CONCODE2                                          0457
*           CC0FLAG=CRDON;          /* INDICATE C.C. =0              */
         OI    CC0FLAG,B'01000000'                                 0458
*           CRDENTRT=CRDON;         /* SET FLAG TO GET OUT OF TRT  0459
*                                      LOOP                          */
         OI    CRDENTRT,B'00100000'                                0459
*           GOTO RCCHECK;           /* THIS IS NEEDED BECAUSE OF C.C.
*                                      CHECK                         */
         B     RCCHECK                                             0460
*CONCODE2:                                                         0461
*           BC(CONS13,QUOTECHK);    /* CHECK FOR C.C. = 2            */
CONCODE2 BC    13,QUOTECHK                                         0461
*           CRDENTRT=CRDON;         /* SET END TRT FLAG              */
         OI    CRDENTRT,B'00100000'                                0462
*QUOTECHK:                                                         0463
*           IF FUNCBYTE=QUOTECHR THEN/* IS THE STOP BYTE A QUOTE?    */
QUOTECHK L     @11,STOPPTR                                         0463
         CLC   FUNCBYTE(1,@11),QUOTECHR                            0463
         BNE   @RF00463                                            0463
*             DO;                                                  0464
*               QUOTECNS=CONS1;     /* WE WANT TO ADD QUOTE          */
         LA    @11,1                                               0465
         ST    @11,QUOTECNS                                        0465
*               QUOTECNT=QUOTECNT+CONS1;/* IF YES, ADD 1 TO QUOTE CNT*/
         AL    @11,QUOTECNT                                        0466
         ST    @11,QUOTECNT                                        0466
*             END;                                                 0467
*           ELSE                                                   0468
*             DO;                                                  0468
         B     @RC00463                                            0468
@RF00463 DS    0H                                                  0469
*               IF QUOTECNT//2=CRDCLEAR THEN/* CHECK FOR PAIRED    0469
*                                      QUOTES                        */
         SLR   @11,@11                                             0469
         L     @06,QUOTECNT                                        0469
         SRDA  @06,32                                              0469
         D     @06,@CF00073                                        0469
         CR    @06,@11                                             0469
         BNE   @RF00469                                            0469
*                 DO;                                              0470
*                   QUOTECNS=CRDCLEAR;/* SET CONS TO 0 SO BLANK NOT
*                                      INCL.                         */
         ST    @11,QUOTECNS                                        0471
*                   IF PREVBYTE=',' THEN                           0472
         L     @11,STOPPTR                                         0472
         AL    @11,@CF02629                                        0472
         CLI   PREVBYTE(@11),C','                                  0472
         BE    @RT00472                                            0472
*                     ;             /* CHECK IF PREVIOUS BYTE WAS A
*                                      COMMA                         */
*                   ELSE                                           0474
*                     CRDENDSP=CRDON;/* OUT OF SUB-PARM SCAN         */
         OI    CRDENDSP,B'10000000'                                0474
*                   CRDENTRT=CRDON; /* OUT OF TRT LOOP               */
@RT00472 OI    CRDENTRT,B'00100000'                                0475
*                 END;                                             0476
*               ELSE                                               0477
*                 QUOTECNS=CONS1;   /* WANT TO ADD BLANK IF INSIDE 0477
*                                      QUOTES                        */
         B     @RC00469                                            0477
@RF00469 MVC   QUOTECNS(4),@CF00061                                0477
*             END;                                                 0478
@RC00469 DS    0H                                                  0479
*RCCHECK:                                                          0479
*           IF RCREG=CRDCLEAR THEN                                 0479
@RC00463 DS    0H                                                  0479
RCCHECK  LTR   RCREG,RCREG                                         0479
         BNZ   @RF00479                                            0479
*             DO;                                                  0480
*                                                                  0480
*               /*****************************************************/
*               /*                                                   */
*               /* CALCULATE # CHARS. SCANNED                        */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0481
*               IF CC0FLAG=CRDON THEN                              0481
         TM    CC0FLAG,B'01000000'                                 0481
         BNO   @RF00481                                            0481
*                 CHARCNT=ADDR(INBUF)+ENDCARD-CURRENTP;            0482
*                                                                  0482
         LA    @00,INBUF                                           0482
         AL    @00,@CF02360                                        0482
         SLR   @00,CURRENTP                                        0482
         ST    @00,CHARCNT                                         0482
*               /*****************************************************/
*               /*                                                   */
*               /* IF C.C = 0 REG 1 NOT UPDATED                      */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0483
*               ELSE                                               0483
*                 CHARCNT=STOPPTR-CURRENTP+QUOTECNS;/* GET NORMAL  0483
*                                      CHAR COUNT                    */
         B     @RC00481                                            0483
@RF00481 L     @00,STOPPTR                                         0483
         SLR   @00,CURRENTP                                        0483
         AL    @00,QUOTECNS                                        0483
         ST    @00,CHARCNT                                         0483
*               IF CHARCNT^=CRDCLEAR THEN/* CHECK SO WE DON'T TRY TO
*                                      MOVE 0 BYTES                  */
@RC00481 L     @11,CHARCNT                                         0484
         LTR   @11,@11                                             0484
         BZ    @RF00484                                            0484
*                 DO;                                              0485
*                                                                  0485
*                   /*************************************************/
*                   /*                                               */
*                   /* MOVE CHARS TO OUTPUT AREA                     */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0486
*                   OUTAREA(START:CHARCNT)=INBUFNOW(START:CHARCNT);
         L     @10,CRDOBPTR                                        0486
         BCTR  @11,0                                               0486
         EX    @11,@SM02630                                        0486
*                 END;                                             0487
*               ELSE                                               0488
*                 ;                                                0488
@RF00484 DS    0H                                                  0489
*               CURRENTP=STOPPTR+CONS1;/* UPDATE CURRENT PTR         */
         LA    CURRENTP,1                                          0489
         AL    CURRENTP,STOPPTR                                    0489
*               CRDOBPTR=CRDOBPTR+CHARCNT;/* UPDATE OUTPUT PTR       */
         L     @00,CRDOBPTR                                        0490
         AL    @00,CHARCNT                                         0490
         ST    @00,CRDOBPTR                                        0490
*             END;                                                 0491
*           ELSE                                                   0492
*             ;                                                    0492
@RF00479 DS    0H                                                  0493
*         END;                      /* END ELSE CLAUSE FOR CRDENDSP
*                                      CHECK                         */
*     END;                          /* END MINOR LOOP                */
@RC00451 DS    0H                                                  0494
@DE00449 LTR   RCREG,RCREG                                         0494
         BNZ   @DC00449                                            0494
         TM    CRDENTRT,B'00100000'                                0494
         BZ    @DL00449                                            0494
@DC00449 DS    0H                                                  0495
*     CALL CHK72;                   /* CALL SUBRTN. TO PROCESS COL.
*                                      72                            */
         BAL   @14,CHK72                                           0495
*   END;                            /* END MAJOR LOOP                */
@DE00448 LTR   RCREG,RCREG                                         0496
         BNZ   @DC00448                                            0496
         TM    CRDENDST,B'01000000'                                0496
         BZ    @DL00448                                            0496
@DC00448 DS    0H                                                  0497
*   R14=PARMSAVE;                   /* RESTORE REG 14                */
         L     R14,PARMSAVE                                        0497
*   END PARMSCAN;                                                  0498
@EL00003 DS    0H                                                  0498
@EF00003 DS    0H                                                  0498
@ER00003 BR    @14                                                 0498
*GOREAD:                                                           0499
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0499
*                                                                  0499
GOREAD   DS    0H                                                  0500
*/********************************************************************
*                                                                    */
*/*   THE GOREAD SUBROUTINE CALLS ISTINCRS TO READ A RECORD FROM THE */
*/* VTAMLST DATA SET. IF THE RETURN CODE IS 0, THE CARD IS CHECKED   */
*/* FOR A COMMENT CARD.                                              */
*/*   IF IT IS A COMMENT CARD, THE ONLY PROCESSING DONE IS TO CHECK  */
*/* THAT IT IS NOT A COMMENT CARD IMBEDDED IN THE MIDDLE OF PARAMETERS
*                                                                    */
*/* IF THIS IS THE CASE, A MESSAGE IS PUT OUT.                       */
*/*   IF IT IS NOT A COMMENT CARD, THE SUBROUTINE EXITS.             */
*/*   IF THE RETURN CODE FROM ISTINCRS IS NON ZERO, AN APPROPRIATE   */
*/* MESSAGE IS PUT OUT.                                              */
*/********************************************************************
*                                                                    */
*                                                                  0500
*   DCL                                                            0500
*     ON BIT(8) CONSTANT('01'X);    /* USED TO SET COMMFLAG ON       */
*   DCL                                                            0501
*     OFF BIT(8) CONSTANT('00'X);   /* USED TO SET COMMFLAG OFF      */
*/* LOCAL DECLARE FOR GOREAD                                         */
*                                                                  0502
*   DCL                                                            0502
*     GORDSAVE;                     /* SAVE VAR. FOR REG 14          */
*   DCL                                                            0503
*     COMMFLAG BIT(8) INIT('01'X);  /* FLAG INDICATIONG A COMMENT    */
*   GORDSAVE=R14;                   /* SAVE REG 14                   */
         ST    R14,GORDSAVE                                        0504
*   COMMFLAG=ON;                    /* TURN ON COMMENT FLAG FOR LOOP */
         MVI   COMMFLAG,X'01'                                      0505
*COMMCHK:                                                          0506
*   DO WHILE COMMFLAG=ON;           /* GO THRU LOOP WHILE COMMENT  0506
*                                      FLAG IS ON                    */
COMMCHK  B     @DE00506                                            0506
@DL00506 DS    0H                                                  0507
*     COMMFLAG=OFF;                 /* TURN COMMENT FLAG OFF         */
         MVI   COMMFLAG,X'00'                                      0507
*     R1=ADDR(ISTRSPRM);            /* SET UP REG 1 FOR CRS          */
         LA    R1,ISTRSPRM                                         0508
*     CALL ISTINCRS;                /* GO TO READ IN A RECORD        */
         L     @15,@CV02466                                        0509
         BALR  @14,@15                                             0509
*     IF RCREG=CRDCLEAR THEN        /* IF R.C. =0                    */
         LTR   RCREG,RCREG                                         0510
         BNZ   @RF00510                                            0510
*       DO;                                                        0511
*         IF INBUF(START:START)=ASTERISK THEN/* IF COL 1 IS AN     0512
*                                      ASTERISK TURN ON FLAG       0512
*                                      INDICATING COMMENT            */
         CLI   INBUF,C'*'                                          0512
         BNE   @RF00512                                            0512
*           DO;                                                    0513
*                                                                  0513
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK IF CONTINUATION FOLLOWED BY AN ENTIRE COMMENT */
*             /* CARD-AN INVALID SITUATION                           */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0514
*             IF CRDENDSP=CRDOFF THEN                              0514
         TM    CRDENDSP,B'10000000'                                0514
         BNZ   @RF00514                                            0514
*               DO;                                                0515
*                                                                  0515
*/*TPMSG MSGID('114I')MSG((ADDR(MEMBSAVE)))*/                      0516
*                                                                  0516
*                  DO;                                             0516
*                    DCL REG1050  REG(1)  PTR;                     0517
*                    RFY (REG1050) RSTD;                           0518
*                                                                  0518
*                  RFY (EMCR13) RSTD;                              0519
*                    DCL 1 * BASED(REG1050),                       0520
*                        2 CMZID050 PTR(31),                       0520
*                        2 *,                                      0520
*                          3 CMZRL050 PTR(8),                      0520
*                          3 CMZRA050 PTR(24) BDY(BYTE),           0520
*                        2 CMZEA050 PTR(31),                       0520
*                        2 CMZVP050 PTR(31);                       0520
*                    DCL CMZPL050(4) FIXED INIT((4)0);             0521
*                    REG1050 = ADDR(CMZPL050);                     0522
         LA    REG1050,CMZPL050                                    0522
*                    DCL CMZAA050 CHAR(4) INIT('114I');            0523
*                    CMZID050 = ADDR(CMZAA050);                    0524
         LA    @00,CMZAA050                                        0524
         ST    @00,CMZID050(,REG1050)                              0524
*                    CMZVP050 = ADDR(MEMBSAVE);                    0525
         LA    @00,MEMBSAVE                                        0525
         ST    @00,CMZVP050(,REG1050)                              0525
*                    DCL CMZSA050 (18) PTR(31) BASED(EMCR13);      0526
*                    DCL CMZZO050 (1) FIXED(31) INIT(0);           0527
*                    CMZSA050(5) = CMZZO050;                       0528
*                                                                  0528
         L     @00,CMZZO050                                        0528
         ST    @00,CMZSA050+16(,EMCR13)                            0528
*                    DCL REG15050 REG(15) PTR;                     0529
*                    RFY REG15050 RSTD;                            0530
*                                                                  0530
*                  DO; /* LISATCVT CVTBASE(PAGEABLE,(REG15050)) */ 0531
*                    REG15050 = ATCLCPTR; /*SET UP ATCVT POINTER*/ 0532
         L     REG15050,ATCLCPTR                                   0532
*                  END; /*LISATCVT*/                               0533
*                    DCL CMTA050 BASED(REG15050) ENTRY VALUERANGE(*);
*                    REG15050 = REG15050->ATCMSGP;                 0535
         L     REG15050,ATCMSGP(,REG15050)                         0535
*                    CALL CMTA050;                                 0536
         BALR  @14,@15                                             0536
*                    RESPECIFY (REG1050,REG15050)  UNRESTRICTED;   0537
*                                                                  0537
*                  RFY (EMCR13) UNRSTD;                            0538
*                  END;                                            0539
*                 RCREG=RETURN12;                                  0540
         LA    RCREG,12                                            0540
*               END;                                               0541
*             ELSE                                                 0542
*               DO;                 /* ELSE READ ANOTHER CARD        */
         B     @RC00514                                            0542
@RF00514 DS    0H                                                  0543
*                 COMMFLAG=ON;      /* STAY IN LOOP                  */
         MVI   COMMFLAG,X'01'                                      0543
*                 RSPMEMBN=RSPMEMBN&&RSPMEMBN;/* CLEAR MEMBER NAME   */
         XC    RSPMEMBN(8),RSPMEMBN                                0544
*               END;                                               0545
*           END;                                                   0546
*         ELSE                                                     0547
*           ;                                                      0547
@RF00512 DS    0H                                                  0548
*       END;                                                       0548
*     ELSE                                                         0549
*       DO;                                                        0549
         B     @RC00510                                            0549
@RF00510 DS    0H                                                  0550
*         IF RCREG=RETURN12 THEN                                   0550
         C     RCREG,@CF01468                                      0550
         BNE   @RF00550                                            0550
*           DO;                                                    0551
*                                                                  0551
*/*TPMSG MSGID('116I')MSG((ADDR(MEMBSAVE)))*/                      0552
*                                                                  0552
*              DO;                                                 0552
*                DCL REG1058  REG(1)  PTR;                         0553
*                RFY (REG1058) RSTD;                               0554
*                                                                  0554
*              RFY (EMCR13) RSTD;                                  0555
*                DCL 1 * BASED(REG1058),                           0556
*                    2 CMZID058 PTR(31),                           0556
*                    2 *,                                          0556
*                      3 CMZRL058 PTR(8),                          0556
*                      3 CMZRA058 PTR(24) BDY(BYTE),               0556
*                    2 CMZEA058 PTR(31),                           0556
*                    2 CMZVP058 PTR(31);                           0556
*                DCL CMZPL058(4) FIXED INIT((4)0);                 0557
*                REG1058 = ADDR(CMZPL058);                         0558
         LA    REG1058,CMZPL058                                    0558
*                DCL CMZAA058 CHAR(4) INIT('116I');                0559
*                CMZID058 = ADDR(CMZAA058);                        0560
         LA    @00,CMZAA058                                        0560
         ST    @00,CMZID058(,REG1058)                              0560
*                CMZVP058 = ADDR(MEMBSAVE);                        0561
         LA    @00,MEMBSAVE                                        0561
         ST    @00,CMZVP058(,REG1058)                              0561
*                DCL CMZSA058 (18) PTR(31) BASED(EMCR13);          0562
*                DCL CMZZO058 (1) FIXED(31) INIT(0);               0563
*                CMZSA058(5) = CMZZO058;                           0564
*                                                                  0564
         L     @00,CMZZO058                                        0564
         ST    @00,CMZSA058+16(,EMCR13)                            0564
*                DCL REG15058 REG(15) PTR;                         0565
*                RFY REG15058 RSTD;                                0566
*                                                                  0566
*              DO; /* LISATCVT CVTBASE(PAGEABLE,(REG15058)) */     0567
*                REG15058 = ATCLCPTR; /*SET UP ATCVT POINTER*/     0568
         L     REG15058,ATCLCPTR                                   0568
*              END; /*LISATCVT*/                                   0569
*                DCL CMTA058 BASED(REG15058) ENTRY VALUERANGE(*);  0570
*                REG15058 = REG15058->ATCMSGP;                     0571
         L     REG15058,ATCMSGP(,REG15058)                         0571
*                CALL CMTA058;                                     0572
         BALR  @14,@15                                             0572
*                RESPECIFY (REG1058,REG15058)  UNRESTRICTED;       0573
*                                                                  0573
*              RFY (EMCR13) UNRSTD;                                0574
*              END;                                                0575
*             RCREG=RETURN12;       /* RESTORE RET. CODE             */
         LA    RCREG,12                                            0576
*           END;                                                   0577
*         ELSE                                                     0578
*           DO;                                                    0578
         B     @RC00550                                            0578
@RF00550 DS    0H                                                  0579
*             IF RCREG=RETURN8 THEN                                0579
         C     RCREG,@CF00059                                      0579
         BNE   @RF00579                                            0579
*               DO;                                                0580
*                                                                  0580
*/*TPMSG MSGID('117I')MSG((ADDR(MEMBSAVE)))*/                      0581
*                                                                  0581
*                  DO;                                             0581
*                    DCL REG1066  REG(1)  PTR;                     0582
*                    RFY (REG1066) RSTD;                           0583
*                                                                  0583
*                  RFY (EMCR13) RSTD;                              0584
*                    DCL 1 * BASED(REG1066),                       0585
*                        2 CMZID066 PTR(31),                       0585
*                        2 *,                                      0585
*                          3 CMZRL066 PTR(8),                      0585
*                          3 CMZRA066 PTR(24) BDY(BYTE),           0585
*                        2 CMZEA066 PTR(31),                       0585
*                        2 CMZVP066 PTR(31);                       0585
*                    DCL CMZPL066(4) FIXED INIT((4)0);             0586
*                    REG1066 = ADDR(CMZPL066);                     0587
         LA    REG1066,CMZPL066                                    0587
*                    DCL CMZAA066 CHAR(4) INIT('117I');            0588
*                    CMZID066 = ADDR(CMZAA066);                    0589
         LA    @00,CMZAA066                                        0589
         ST    @00,CMZID066(,REG1066)                              0589
*                    CMZVP066 = ADDR(MEMBSAVE);                    0590
         LA    @00,MEMBSAVE                                        0590
         ST    @00,CMZVP066(,REG1066)                              0590
*                    DCL CMZSA066 (18) PTR(31) BASED(EMCR13);      0591
*                    DCL CMZZO066 (1) FIXED(31) INIT(0);           0592
*                    CMZSA066(5) = CMZZO066;                       0593
*                                                                  0593
         L     @00,CMZZO066                                        0593
         ST    @00,CMZSA066+16(,EMCR13)                            0593
*                    DCL REG15066 REG(15) PTR;                     0594
*                    RFY REG15066 RSTD;                            0595
*                                                                  0595
*                  DO; /* LISATCVT CVTBASE(PAGEABLE,(REG15066)) */ 0596
*                    REG15066 = ATCLCPTR; /*SET UP ATCVT POINTER*/ 0597
         L     REG15066,ATCLCPTR                                   0597
*                  END; /*LISATCVT*/                               0598
*                    DCL CMTA066 BASED(REG15066) ENTRY VALUERANGE(*);
*                    REG15066 = REG15066->ATCMSGP;                 0600
         L     REG15066,ATCMSGP(,REG15066)                         0600
*                    CALL CMTA066;                                 0601
         BALR  @14,@15                                             0601
*                    RESPECIFY (REG1066,REG15066)  UNRESTRICTED;   0602
*                                                                  0602
*                  RFY (EMCR13) UNRSTD;                            0603
*                  END;                                            0604
*                 RCREG=RETURN8;    /* RESTORE RETURN CODE           */
         LA    RCREG,8                                             0605
*               END;                                               0606
*             ELSE                                                 0607
*               ;                                                  0607
@RF00579 DS    0H                                                  0608
*           END;                                                   0608
*       END;                                                       0609
@RC00550 DS    0H                                                  0610
*   END COMMCHK;                                                   0610
@RC00510 DS    0H                                                  0610
@DE00506 CLI   COMMFLAG,X'01'                                      0610
         BE    @DL00506                                            0610
*   R14=GORDSAVE;                   /* RESTORE REG 14                */
         L     R14,GORDSAVE                                        0611
*   END GOREAD;                                                    0612
@EL00004 DS    0H                                                  0612
@EF00004 DS    0H                                                  0612
@ER00004 BR    @14                                                 0612
*MTB:                                                              0613
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0613
*                                                                  0613
MTB      DS    0H                                                  0614
*/********************************************************************
*                                                                    */
*/*   THE MOVE TO BLANKS SUBROUTINE SCANS FOR A BLANK CHARACTER AND  */
*/* IF FOUND, MOVES THE CHARACTERS SCANNED TO THE OUTPUT AREA.       */
*/* THE ROUTINE IS USED TO SCAN THE NAME FIELD AND/OR THE OP CODE    */
*/* FIELD OF ASSEMBLER LANGUAGE MACRO STATEMENTS.                    */
*/*   IF NO BLANK IS FOUND, A NON ZERO R.C. IS PASSED BACK.          */
*/********************************************************************
*                                                                    */
*/* THE FOLLOWING ARE LOCAL DECLARES FOR MTB SUBRTN                  */
*                                                                  0614
*   DCL                                                            0614
*     MTBSAVE;                      /* SAVE VAR. FOR REG 14          */
*   DCL                                                            0615
*     1 MOVETAB CHAR(256),          /* TABLE FOR TRT                 */
*      2 * CHAR(64),                                               0615
*       3 *(64) CHAR(1) INIT((64)'00'X),                           0615
*      2 BLANKONE CHAR(1) INIT('04'X),/* BLANK STOP                  */
*      2 * CHAR(191),                                              0615
*       3 *(191) CHAR(1) INIT((191)'00'X);                         0615
*   DCL                                                            0616
*     STRING;                       /* USED TO SET LENGTH FOR MOVING
*                                      CHARS TO OUTPUT AREA          */
*   GEN DATA REFS(CURRENTP,MOVETAB);                               0617
*                                                                  0617
*/* SET UP REG FOR TRT EXECUTE                                       */
*                                                                  0618
*   MTBSAVE=R14;                    /* SAVE REG 14                   */
         ST    R14,MTBSAVE                                         0618
*   TRTREG=ADDR(INBUF)+ENDCARD-CURRENTP-CONS1;                     0619
         LA    TRTREG,INBUF                                        0619
         AL    TRTREG,@CF02360                                     0619
         SLR   TRTREG,CURRENTP                                     0619
         BCTR  TRTREG,0                                            0619
*   GEN(EX   TRTREG,MOVETRT);       /* EXECUTE TRT TO GET BLANK      */
         EX   TRTREG,MOVETRT
*   STOPPTR=R1;                     /* SAVE STOPPTR                  */
         ST    R1,STOPPTR                                          0621
*   BC(CONS8,NOBLANKS);             /* IF NO BLANK FOUN BRANCH       */
         BC    8,NOBLANKS                                          0622
*   STRING=STOPPTR-CURRENTP+CONS1;  /* SET LENGTH FOR MOVE= ENTIRE 0623
*                                      STRING + BLANK                */
         L     @00,STOPPTR                                         0623
         SLR   @00,CURRENTP                                        0623
         AL    @00,@CF00061                                        0623
         ST    @00,STRING                                          0623
*   OUTAREA(START:STRING)=INBUFNOW(START:STRING);/* MOVE SCANNED   0624
*                                      STRING                        */
         L     @11,CRDOBPTR                                        0624
         LR    @10,@00                                             0624
         BCTR  @10,0                                               0624
         EX    @10,@SM02632                                        0624
*   CRDOBPTR=CRDOBPTR+STRING;       /* UPDATE OUTPUT PTR             */
         ALR   @11,@00                                             0625
         ST    @11,CRDOBPTR                                        0625
*   CURRENTP=CURRENTP+STRING;       /* UPDATE INPUT PTR              */
         ALR   CURRENTP,@00                                        0626
*   RCREG=CRDCLEAR;                                                0627
         SLR   RCREG,RCREG                                         0627
*   GOTO DONE;                      /* THIS IS NEEDE BECAUSE OF    0628
*                                      C.C.'S                        */
         B     DONE                                                0628
*NOBLANKS:                                                         0629
*                                                                  0629
*/*TPMSG MSGID('114I')MSG((ADDR(MEMBSAVE)))*/                      0629
*                                                                  0629
*    DO;                                                           0629
NOBLANKS DS    0H                                                  0630
*      DCL REG1074  REG(1)  PTR;                                   0630
*      RFY (REG1074) RSTD;                                         0631
*                                                                  0631
*    RFY (EMCR13) RSTD;                                            0632
*      DCL 1 * BASED(REG1074),                                     0633
*          2 CMZID074 PTR(31),                                     0633
*          2 *,                                                    0633
*            3 CMZRL074 PTR(8),                                    0633
*            3 CMZRA074 PTR(24) BDY(BYTE),                         0633
*          2 CMZEA074 PTR(31),                                     0633
*          2 CMZVP074 PTR(31);                                     0633
*      DCL CMZPL074(4) FIXED INIT((4)0);                           0634
*      REG1074 = ADDR(CMZPL074);                                   0635
         LA    REG1074,CMZPL074                                    0635
*      DCL CMZAA074 CHAR(4) INIT('114I');                          0636
*      CMZID074 = ADDR(CMZAA074);                                  0637
         LA    @00,CMZAA074                                        0637
         ST    @00,CMZID074(,REG1074)                              0637
*      CMZVP074 = ADDR(MEMBSAVE);                                  0638
         LA    @00,MEMBSAVE                                        0638
         ST    @00,CMZVP074(,REG1074)                              0638
*      DCL CMZSA074 (18) PTR(31) BASED(EMCR13);                    0639
*      DCL CMZZO074 (1) FIXED(31) INIT(0);                         0640
*      CMZSA074(5) = CMZZO074;                                     0641
*                                                                  0641
         L     @00,CMZZO074                                        0641
         ST    @00,CMZSA074+16(,EMCR13)                            0641
*      DCL REG15074 REG(15) PTR;                                   0642
*      RFY REG15074 RSTD;                                          0643
*                                                                  0643
*    DO; /* LISATCVT CVTBASE(PAGEABLE,(REG15074)) */               0644
*      REG15074 = ATCLCPTR; /*SET UP ATCVT POINTER*/               0645
         L     REG15074,ATCLCPTR                                   0645
*    END; /*LISATCVT*/                                             0646
*      DCL CMTA074 BASED(REG15074) ENTRY VALUERANGE(*);            0647
*      REG15074 = REG15074->ATCMSGP;                               0648
         L     REG15074,ATCMSGP(,REG15074)                         0648
*      CALL CMTA074;                                               0649
         BALR  @14,@15                                             0649
*      RESPECIFY (REG1074,REG15074)  UNRESTRICTED;                 0650
*                                                                  0650
*    RFY (EMCR13) UNRSTD;                                          0651
*    END;/* AS08633            */                                  0652
*   RCREG=RETURN12;                 /* SET R.C. TO 12                */
         LA    RCREG,12                                            0653
*   CURRENTP=ADDR(INBUF)+ENDCARD;   /* UPDATE CURRENT PTR TO LAST COL*/
         LA    CURRENTP,INBUF                                      0654
         AL    CURRENTP,@CF02360                                   0654
*DONE:                                                             0655
*   ;                                                              0655
DONE     DS    0H                                                  0656
*   R14=MTBSAVE;                    /* RESTORE REG 14                */
         L     R14,MTBSAVE                                         0656
*   END MTB;                                                       0657
@EL00005 DS    0H                                                  0657
@EF00005 DS    0H                                                  0657
@ER00005 BR    @14                                                 0657
*STNB:                                                             0658
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0658
*                                                                  0658
STNB     DS    0H                                                  0659
*/********************************************************************
*                                                                    */
*/*   THE SCAN TO NON BLANKS SUBROUTINE SCANS FOR A NON BLANK CHAR-  */
*/* ACTER. IF FOUND, THE CURRENT PTR TO THE NEXT BYTE IN THE INPUT   */
*/* AREA IS UPDATED.                                                 */
*/*   IF NO NON BLANK CHARACTER IS FOUND & THIS IS NOT THE FIRST CARD*/
*/* A NON ZERO R.C. IS PASSED BACK. IF THIS IS THE FIRST CARD, CHK72 */
*/* IS CALLED TO PROCESS CONTINUATION.                               */
*/********************************************************************
*                                                                    */
*/* THE FOLLOWING DECLARES ARE LOCAL TO STNB SUBRTN                  */
*                                                                  0659
*   DCL                                                            0659
*     STNBSAVE;                     /* SAVE VAR. FOR REG 14          */
*   DCL                                                            0660
*     BLNKCONS FIXED(31) INIT('40000000'X);/* PAD CHAR FOR CLCL      */
*   STNBSAVE=R14;                   /* SAVE REG 14                   */
         ST    R14,STNBSAVE                                        0661
*   R5=ADDR(INBUF)+ENDCARD-CURRENTP;/* SET UP REG5 FOR CLCL          */
         LA    R5,INBUF                                            0662
         AL    R5,@CF02360                                         0662
         SLR   R5,CURRENTP                                         0662
*   R3=BLNKCONS;                    /* SET UP REG 3 FOR BLANK SCAN   */
         L     R3,BLNKCONS                                         0663
*   GEN SETS(CURRENTP) REFS(R2,CODEOK);                            0664
         CLCL  CURRENTP,R2          SCAN LOOKING FOR NON BLANK
         BNZ   CODEOK               IF NOT FOUND, BRANCH AROUND 12 R.C.
*   IF NOPARMS=CRDOFF THEN                                         0665
         TM    NOPARMS,B'00001000'                                 0665
         BNZ   @RF00665                                            0665
*     RCREG=RETURN12;               /* CHECK IF 1ST CALL WITH NO   0666
*                                      PARMS                         */
         LA    RCREG,12                                            0666
*   ELSE                                                           0667
*     CALL CHK72;                   /* IF 1ST CALL SEE IF CONT.      */
         B     @RC00665                                            0667
@RF00665 BAL   @14,CHK72                                           0667
*CODEOK:                                                           0668
*   ;                                                              0668
@RC00665 DS    0H                                                  0668
CODEOK   DS    0H                                                  0669
*   R14=STNBSAVE;                   /* RESTORE REG 14                */
         L     R14,STNBSAVE                                        0669
*   END STNB;                                                      0670
@EL00006 DS    0H                                                  0670
@EF00006 DS    0H                                                  0670
@ER00006 BR    @14                                                 0670
*CHK72:                                                            0671
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0671
*                                                                  0671
CHK72    DS    0H                                                  0672
*/********************************************************************
*                                                                    */
*/*   THE CHK72 SUBROUTINE PROCESSES COLUMN 72 TO DETERMINE IF A     */
*/* CONTINUATION HAS BEEN INDICATED. IF COL. 72 IS NON BLANK, THE    */
*/* CONTINUE SUBROUTINE IS CALLED TO PREPARE ANOTHER CARD FOR SCAN   */
*/*   IF COL. 72 IS BLANK & QUOTES ARE PAIRED, REG. 15 IS SET TO 0   */
*/* AND THE END OF STRING INDICATOR TURNED ON. IF QUOTES ARE NOT     */
*/* PAIRED, A R.C. OF 12 IS SET.                                     */
*/********************************************************************
*                                                                    */
*                                                                  0672
*   DCL                                                            0672
*     CHKSAVE FIXED(31);            /* SAVE VAR. FOR REG 14          */
*   CHKSAVE=R14;                    /* SAVE REG 14                   */
         ST    R14,CHKSAVE                                         0673
*   IF COL72=BLANK THEN             /* CHECK FOR CONTINUATION        */
         LA    @11,INBUF                                           0674
         CLI   COL72+71(@11),C' '                                  0674
         BNE   @RF00674                                            0674
*     DO;                                                          0675
*       IF QUOTECNT//2=CRDCLEAR THEN/* CHECK IF QUOTES PAIRED        */
         SLR   @11,@11                                             0676
         L     @06,QUOTECNT                                        0676
         SRDA  @06,32                                              0676
         D     @06,@CF00073                                        0676
         CR    @06,@11                                             0676
         BNE   @RF00676                                            0676
*         DO;                                                      0677
*           RCREG=CRDCLEAR;                                        0678
         LR    RCREG,@11                                           0678
*           CRDENDST=CRDON;         /* GET OUT OF PARMSCAN LOOP      */
         OI    CRDENDST,B'01000000'                                0679
*         END;                                                     0680
*       ELSE                                                       0681
*         RCREG=RETURN12;           /* ELSE SET 12 R.C.              */
         B     @RC00676                                            0681
@RF00676 LA    RCREG,12                                            0681
*     END;                                                         0682
*   ELSE                                                           0683
*     DO;                                                          0683
         B     @RC00674                                            0683
@RF00674 DS    0H                                                  0684
*       CALL CONTINUE;              /* CALL CONTINUE TO READ NEXT  0684
*                                      CARD                          */
         BAL   @14,CONTINUE                                        0684
*       CRDENTRT=CRDOFF;            /* STAY IN TRT LOOP              */
         NI    CRDENTRT,B'11011111'                                0685
*     END;                                                         0686
*   R14=CHKSAVE;                    /* RESTORE REG 14                */
@RC00674 L     R14,CHKSAVE                                         0687
*   END CHK72;                                                     0688
@EL00007 DS    0H                                                  0688
@EF00007 DS    0H                                                  0688
@ER00007 BR    @14                                                 0688
*CONTINUE:                                                         0689
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0689
*                                                                  0689
CONTINUE DS    0H                                                  0690
*/********************************************************************
*                                                                    */
*/*   THE CONTINUE SUBROUTINE HANDLES PROCESSING OF CONTINUATION     */
*/* CARDS FOR CURRENT PARAMETERS BEING PROCESSED.                    */
*/*   IT FIRST CHECKS TO DETERMINE IF THE REMAINING SPACE IN THE OUT-*/
*/* BUFFER IS LARGE ENOUGH TO ACCOMODATE ANOTHER RECORD. IF NOT, A   */
*/* VGTMAIN & SUBSEQUENT VFRMAIN ARE DONE TO GET ANOTHER OUTPUT BUF. */
*/*   GOREAD IS CALLED TO READ IN THE CONTINUATION CARD.             */
*/*   IF THE CONTINUATION CARD IS A CONTINUATION FOR AN ASSEMBLER    */
*/* LANGUAGE MACRO THEN COLUMNS 1-15 MUST BE BLANK. IF NOT BLANK, A  */
*/* NON ZERO R.C. IS PASSED BACK. IF COL. 16 IS BLANK, THERE ARE NO  */
*/* MORE PARAMETERS.                                                 */
*/*   FOR START PARAMETERS OR CONFIGURATION PARAMETERS, STNB IS      */
*/* CALLED TO GET THE ADDRESS OF THE NEXT PARAMETER.                 */
*/********************************************************************
*                                                                    */
*                                                                  0690
*   DCL                                                            0690
*     CONTSAVE FIXED(31);           /* SAVE VAR. FOR REG 14          */
*/* THE FOLLOWING DECLARES ARE LOCAL TO SUBRTN CONTINUE              */
*                                                                  0691
*   DCL                                                            0691
*     COLS15 CHAR(15) BASED(ADDR(INBUF));/* USED TO CHECK COLS.1-15  */
*   DCL                                                            0692
*     CONS15 CONSTANT(15);                                         0692
*   DCL                                                            0693
*     FIRST15 CONSTANT(15);         /* USED TO REFERENCE 1ST 15 CHARS
*                                      IN CARD                       */
*   DCL                                                            0694
*     BLANKS15 CHAR(15) CONSTANT('               ');/* CHECKS COLS.
*                                      1-15 FOR BLANKS               */
*   DCL                                                            0695
*     COL16 CHAR(1) BASED(ADDR(INBUF)+CONS15);/* USED TO CHECK COL 16
*                                      IN CARD                       */
*   DCL                                                            0696
*     REMSPACE;                     /* REMAINING SPACE IN OUTPUT   0696
*                                      BUFFER                        */
*   DCL                                                            0697
*     BUFENUFF CONSTANT(71);        /* USED TO CHECK IF 71 BYTES LEFT
*                                      IN OUTPUT BUFFER              */
*   DCL                                                            0698
*     TEMPSIZE;                     /* USED FOR TEMPORARY AREA FOR 0698
*                                      BUFFER SIZE. IF GETSTOR FAILS
*                                      WE DON'T WANT TO UPDATE     0698
*                                      CONBUFSZ                      */
*   DCL                                                            0699
*     TEMPBUFF;                     /* TEMP SAVE AREA FOR CONRDBUF   */
*   DCL                                                            0700
*     NEXTSIZE;                     /* TEMP AREA FOR NEXT BUFFER SIZE*/
*   DCL                                                            0701
*     R15SAVE;                      /* AREA TO SAVE REG 15 FROM    0701
*                                      FREESTOR                      */
*   DCL                                                            0702
*     OLDADDR REG(6);               /* CONTAINS OLD OUTPUT AREA ADD. */
*   DCL                                                            0703
*     NEWADDR REG(8);               /* CONTAINS NEW OUTPUT AREA ADD. */
*   DCL                                                            0704
*     OLDCOUNT REG(7);              /* CONTAINS COUNT OF BYTES USED  */
*   DCL                                                            0705
*     NEWCOUNT REG(9);              /* SAME COUNT AS OLD             */
*   CONTSAVE=R14;                   /* SAVE REG 14                   */
         ST    R14,CONTSAVE                                        0706
*   REMSPACE=CONRDBUF+CONBUFSZ-CRDOBPTR;/* COMPUTE REMAINING SPACE IN
*                                      OUTPUT BUFFER                 */
         L     @11,VCVTPTR                                         0707
         L     @11,ATCCONFT(,@11)                                  0707
         LH    @00,CONBUFSZ(,@11)                                  0707
         AL    @00,CONRDBUF(,@11)                                  0707
         SL    @00,CRDOBPTR                                        0707
         ST    @00,REMSPACE                                        0707
*   IF REMSPACE>=BUFENUFF THEN                                     0708
         C     @00,@CF02360                                        0708
         BL    @RF00708                                            0708
*     RCREG=CRDCLEAR;               /* IF SPACE >=71 THEN BUFFER   0709
*                                      STILL BIG ENOUGH              */
         SLR   RCREG,RCREG                                         0709
*   ELSE                                                           0710
*     DO;                                                          0710
         B     @RC00708                                            0710
@RF00708 DS    0H                                                  0711
*       TEMPBUFF=CONRDBUF;          /* SAVE CONRDBUF                 */
         L     @11,VCVTPTR                                         0711
         L     @11,ATCCONFT(,@11)                                  0711
         L     @00,CONRDBUF(,@11)                                  0711
         ST    @00,TEMPBUFF                                        0711
*       TEMPSIZE=CONBUFSZ;          /* SAVE CONBUFSZ                 */
         LH    @11,CONBUFSZ(,@11)                                  0712
         ST    @11,TEMPSIZE                                        0712
*       NEXTSIZE=CONBUFSZ+BUFSIZE;  /* GET NEXT BUFFER SIZE          */
         AL    @11,BUFSIZE                                         0713
         ST    @11,NEXTSIZE                                        0713
*       GEN SETS(SMSREGS)(STM    2,4,SMSREGS);/* SAVE SMS-CLOBBERRED
*                                      REGS                          */
*                                                                  0714
         STM    2,4,SMSREGS
*/*VGTMAIN SIZE(NEXTSIZE)STORAGE((ADDR(CONRDBUF)))SUBPOOL((ADDR(CRDPOOL
*))*/                                                              0715
*        DO;                             /*DECLARE AND RESTRICT      */
*                                        /* REGISTERS 2,3, AND 4     */
*                                                                  0716
*        RFY (GPR02P,GPR03P,GPR04P) RSTD;                          0716
*                                        /*INVOKE XREGSET MACRO TO */
*                                        /*CHECK SIZE PARM AND PUT */
*                                        /*VALUE IN REGISTER 2     */
*                                                                  0717
*/*XREGSET  PID('SIZE')PPARM(NEXTSIZE)RREG(,GPR02F)OUTPUT(PARM)*/  0717
*        DO;                                                       0717
*          GPR02F=NEXTSIZE;              /*SET RREG SYMBOL TO VALUE*/
         L     GPR02F,NEXTSIZE                                     0718
*                                        /*OF PPARM OPERAND        */
*        END;  /* XREGSET */             /*INVOKE XREGSET MACRO TO */
*                                        /*CHECK STORAGE PARM AND  */
*                                        /*PUT VALUE IN REGISTER 3 */
*                                                                  0720
*/*XREGSET  PID('STORAGE')PPARM((ADDR(CONRDBUF)))RREG(,GPR03F)*/   0720
*        DO;                                                       0720
*          GPR03F=ADDR(CONRDBUF);        /*SET RREG SYMBOL TO VALUE*/
         L     @11,VCVTPTR                                         0721
         L     GPR03F,ATCCONFT(,@11)                               0721
         LA    GPR03F,CONRDBUF(,GPR03F)                            0721
*                                        /*OF PPARM OPERAND        */
*        END;  /* XREGSET */             /*INVOKE XREGSET MACRO TO */
*                                        /*CHECK SUBPOOL PARM AND  */
*                                        /*PUT VALUE IN REGISTER 4 */
*                                                                  0723
*/*XREGSET  PID('SUBPOOL')PPARM((ADDR(CRDPOOL)))RREG(,GPR04F)OUTPUT(PAR
*)*/                                                               0723
*        DO;                                                       0723
*          DCL DUME0087 CHAR(4) BASED(ADDR(CRDPOOL));              0724
*                                        /*DEFINE DUMMY VARIABLE SO*/
*                                        /*THAT PPARM OPERAND CAN BE*/
*                                        /*USED AS A POINTER        */
*          GPR04F=DUME0087;              /*SET RREG SYMBOL TO VALUE*/
         LA    @11,CRDPOOL                                         0725
         ICM   GPR04F,15,DUME0087(@11)                             0725
*                                        /*POINTED TO BY PPARM OPER*/
*        END;  /* XREGSET */             /* INVOKE GETMAIN MACRO     */
*          GEN REFS(GPR02F,GPR03P,GPR04F) SETS(GPR03P,GPR15F);     0727
         GETMAIN EC,LV=(2),A=(3),SP=(4)
*                                        /*UNRESTRICT REGS 2,3, AND 4*/
*                                                                  0728
*        RFY (GPR02P,GPR03P,GPR04P) UNRSTD;                        0728
*        END;  /* VGTMAIN */                                       0729
*       GEN REFS(SMSREGS)(LM     2,4,SMSREGS);/* RESTORE REGS        */
         LM     2,4,SMSREGS
*       IF RCREG=CRDCLEAR THEN                                     0731
         LTR   RCREG,RCREG                                         0731
         BNZ   @RF00731                                            0731
*         DO;                                                      0732
*           RFY                                                    0733
*            (OLDADDR,                                             0733
*             NEWADDR,                                             0733
*             OLDCOUNT,                                            0733
*             NEWCOUNT) RSTD;                                      0733
*           OLDADDR=TEMPBUFF;       /* SET ADD. FOR MVCL             */
         L     OLDADDR,TEMPBUFF                                    0734
*           NEWADDR=CONRDBUF;       /* SET NEW ADDRESS               */
         L     @11,VCVTPTR                                         0735
         L     @11,ATCCONFT(,@11)                                  0735
         L     NEWADDR,CONRDBUF(,@11)                              0735
*           OLDCOUNT=CRDOBPTR-OLDADDR;/* SET BYTE COUNT FOR MOVE     */
         L     OLDCOUNT,CRDOBPTR                                   0736
         SLR   OLDCOUNT,OLDADDR                                    0736
*           NEWCOUNT=OLDCOUNT;                                     0737
         LR    NEWCOUNT,OLDCOUNT                                   0737
*           GEN REFS(NEWADDR,OLDADDR);                             0738
         MVCL  NEWADDR,OLDADDR
*           CONBUFSZ=NEXTSIZE;      /* UPDATE CONBUFSZ               */
         L     @11,VCVTPTR                                         0739
         L     @11,ATCCONFT(,@11)                                  0739
         L     @00,NEXTSIZE                                        0739
         STH   @00,CONBUFSZ(,@11)                                  0739
*           CRDOBPTR=CONRDBUF+CRDOBPTR-TEMPBUFF;/* UPDATE OUTPUT PTR */
         L     @10,TEMPBUFF                                        0740
         L     @00,CONRDBUF(,@11)                                  0740
         AL    @00,CRDOBPTR                                        0740
         SLR   @00,@10                                             0740
         ST    @00,CRDOBPTR                                        0740
*           RFY                                                    0741
*            (OLDADDR,                                             0741
*             NEWADDR,                                             0741
*             OLDCOUNT,                                            0741
*             NEWCOUNT) UNRSTD;                                    0741
*           TEMPRC=RCREG;           /* SAVE REG 15                   */
*                                                                  0742
         ST    RCREG,TEMPRC                                        0742
*/*VFRMAIN  SIZE(TEMPSIZE)STORAGE((TEMPBUFF))SUBPOOL((ADDR(CRDPOOL)))*/
*            DO;                                                   0743
*                                                                  0743
*            RFY (GPR00P) RSTD;          /*PUT VALUE PASSED AS SIZE  */
*                                        /*PARM IN  THREE LOW-ORDER  */
*                                        /*BYTES OF REG 0            */
*              GPR00F=TEMPSIZE & '00FFFFFF'X;                      0745
*                                                                  0745
         L     GPR00F,TEMPSIZE                                     0745
         N     GPR00F,@CF02374                                     0745
*            RFY (GPR15P) RSTD;                                    0746
*              DCL CMZB0089 FIXED(31) BASED(ADDR(CRDPOOL));        0747
*                                        /*PUT VALUE POINTED TO BY   */
*                                        /*SUBPOOL PARM IN HIGH-     */
*                                        /*ORDER BYTE  OF REG 15     */
*              GPR15F=CMZB0089;                                    0748
         LA    @11,CRDPOOL                                         0748
         L     GPR15F,CMZB0089(,@11)                               0748
*              SLL (GPR15P,24);          /*COMBINE SUBPOOL AND SIZE  */
         SLL   GPR15P,24                                           0749
*                                        /*IN REGISTER 0             */
*              GPR00P=GPR00P × GPR15P;                             0750
*                                                                  0750
         OR    GPR00P,GPR15P                                       0750
*            RFY (GPR15P) UNRSTD;        /*DECLARE AND RESTRICT REG 1*/
*                                                                  0751
*            RFY (GPR01P) RSTD;          /*INVOKE XREGSET MACRO TO   */
*                                        /*CHECK STORAGE PARM AND PUT*/
*                                        /*ADDR IN REGISTER 1        */
*                                                                  0753
*/*XREGSET  PID('STORAGE')PPARM((TEMPBUFF))RREG(1,GPR01P)*/        0753
*            DO;                                                   0753
*              GPR01P=TEMPBUFF;          /*SET RREG SYMBOL TO VALUE*/
         LR    GPR01P,@10                                          0754
*                                        /*OF PPARM OPERAND        */
*            END;  /* XREGSET */         /*INVOKE FREEMAIN MACRO     */
*              GEN;                                                0756
         FREEMAIN R,LV=(0),A=(1)
*                                        /*UNRESTRICT REG 1          */
*                                                                  0757
*            RFY (GPR01P) UNRSTD;        /* UNRESTRICT REG 0         */
*                                                                  0757
*            RFY (GPR00P) UNRSTD;                                  0758
*            END;  /* VFRMAIN */                                   0759
*           RCREG=TEMPRC;           /* RESTORE REG 15                */
         L     RCREG,TEMPRC                                        0760
*         END;                                                     0761
*       ELSE                                                       0762
*         DO;                                                      0762
*                                                                  0762
         B     @RC00731                                            0762
@RF00731 DS    0H                                                  0763
*/*TPMSG MSGID('115I')MSG((ADDR(MEMBSAVE)))*/                      0763
*                                                                  0763
*            DO;                                                   0763
*              DCL REG1097  REG(1)  PTR;                           0764
*              RFY (REG1097) RSTD;                                 0765
*                                                                  0765
*            RFY (EMCR13) RSTD;                                    0766
*              DCL 1 * BASED(REG1097),                             0767
*                  2 CMZID097 PTR(31),                             0767
*                  2 *,                                            0767
*                    3 CMZRL097 PTR(8),                            0767
*                    3 CMZRA097 PTR(24) BDY(BYTE),                 0767
*                  2 CMZEA097 PTR(31),                             0767
*                  2 CMZVP097 PTR(31);                             0767
*              DCL CMZPL097(4) FIXED INIT((4)0);                   0768
*              REG1097 = ADDR(CMZPL097);                           0769
         LA    REG1097,CMZPL097                                    0769
*              DCL CMZAA097 CHAR(4) INIT('115I');                  0770
*              CMZID097 = ADDR(CMZAA097);                          0771
         LA    @00,CMZAA097                                        0771
         ST    @00,CMZID097(,REG1097)                              0771
*              CMZVP097 = ADDR(MEMBSAVE);                          0772
         LA    @00,MEMBSAVE                                        0772
         ST    @00,CMZVP097(,REG1097)                              0772
*              DCL CMZSA097 (18) PTR(31) BASED(EMCR13);            0773
*              DCL CMZZO097 (1) FIXED(31) INIT(0);                 0774
*              CMZSA097(5) = CMZZO097;                             0775
*                                                                  0775
         L     @00,CMZZO097                                        0775
         ST    @00,CMZSA097+16(,EMCR13)                            0775
*              DCL REG15097 REG(15) PTR;                           0776
*              RFY REG15097 RSTD;                                  0777
*                                                                  0777
*            DO; /* LISATCVT CVTBASE(PAGEABLE,(REG15097)) */       0778
*              REG15097 = ATCLCPTR; /*SET UP ATCVT POINTER*/       0779
         L     REG15097,ATCLCPTR                                   0779
*            END; /*LISATCVT*/                                     0780
*              DCL CMTA097 BASED(REG15097) ENTRY VALUERANGE(*);    0781
*              REG15097 = REG15097->ATCMSGP;                       0782
         L     REG15097,ATCMSGP(,REG15097)                         0782
*              CALL CMTA097;                                       0783
         BALR  @14,@15                                             0783
*              RESPECIFY (REG1097,REG15097)  UNRESTRICTED;         0784
*                                                                  0784
*            RFY (EMCR13) UNRSTD;                                  0785
*            END;/*    @DM12432*/                                  0786
*           RCREG=RETURN12;         /* RESTORE RETURN CODE   @DM12436*/
         LA    RCREG,12                                            0787
*           CONTERR=CRDON;          /* SET CONT SUBRTN ERR   @DM12512*/
         OI    CONTERR,B'00000100'                                 0788
*         END;                                                     0789
*     END;                                                         0790
@RC00731 DS    0H                                                  0791
*   IF RCREG=CRDCLEAR THEN          /* IF R.C. =0                    */
@RC00708 LTR   RCREG,RCREG                                         0791
         BNZ   @RF00791                                            0791
*     DO;                                                          0792
*       RSPMEMBN=MEMBZERO;          /* ZERO MEMBERNAME FOR CRS     0793
*                                      INTERFACE                     */
         MVC   RSPMEMBN(8),MEMBZERO                                0793
*       CALL GOREAD;                /* GO READ ANOTHER CARD          */
         BAL   @14,GOREAD                                          0794
*       IF RCREG=CRDCLEAR THEN                                     0795
         LTR   RCREG,RCREG                                         0795
         BNZ   @RF00795                                            0795
*         DO;                                                      0796
*           IF MEMBSAVE(START:FIRST6)='ATCCON'×MEMBSAVE(START:FIRST6)=
*               'ATCSTR' THEN       /* CHECK 1ST 6 CHARS OF MEMBER 0797
*                                      NAME                          */
         CLC   MEMBSAVE(6),@CC02418                                0797
         BE    @RT00797                                            0797
         CLC   MEMBSAVE(6),@CC02419                                0797
         BNE   @RF00797                                            0797
@RT00797 DS    0H                                                  0798
*             DO;                                                  0798
*               CURRENTP=ADDR(INBUF);/* RESET INPUT PTR              */
         LA    CURRENTP,INBUF                                      0799
*               CALL STNB;          /* SCAN PAST BLANKS              */
         BAL   @14,STNB                                            0800
*             END;                                                 0801
*           ELSE                                                   0802
*             DO;                                                  0802
         B     @RC00797                                            0802
@RF00797 DS    0H                                                  0803
*               IF COLS15(START:FIRST15)=BLANKS15&/* CK 1ST 15 COLS
*                                      FOR BLANKS            @ZA26606*/
*                   COL16^=BLANK THEN/* COL 16 NOT BLANK     @ZA26606*/
         LA    @11,INBUF                                           0803
         CLC   COLS15(15,@11),@CC02561                             0803
         BNE   @RF00803                                            0803
         AL    @11,@CF00032                                        0803
         CLI   COL16(@11),C' '                                     0803
         BE    @RF00803                                            0803
*                 DO;                                              0804
*                   IF QUOTECNT//2=CRDCLEAR THEN/* CHECK PAIRED    0805
*                                      QUOTES                        */
         L     @06,QUOTECNT                                        0805
         SRDA  @06,32                                              0805
         D     @06,@CF00073                                        0805
         LTR   @06,@06                                             0805
         BNZ   @RF00805                                            0805
*                     CURRENTP=ADDR(INBUF)+CONS15;/* UPDATE CURRENT
*                                      PTR                           */
         LR    CURRENTP,@11                                        0806
*                   ELSE                                           0807
*                     ;             /* QUOTES NOT PAIRED             */
@RF00805 DS    0H                                                  0808
*                 END;                                             0808
*               ELSE                                               0809
*                 DO;               /* ELSE SYNTAX ERROR             */
*                                                                  0809
         B     @RC00803                                            0809
@RF00803 DS    0H                                                  0810
*/*TPMSG MSGID('114I')MSG((ADDR(MEMBSAVE)))*/                      0810
*                                                                  0810
*                    DO;                                           0810
*                      DCL REG1105  REG(1)  PTR;                   0811
*                      RFY (REG1105) RSTD;                         0812
*                                                                  0812
*                    RFY (EMCR13) RSTD;                            0813
*                      DCL 1 * BASED(REG1105),                     0814
*                          2 CMZID105 PTR(31),                     0814
*                          2 *,                                    0814
*                            3 CMZRL105 PTR(8),                    0814
*                            3 CMZRA105 PTR(24) BDY(BYTE),         0814
*                          2 CMZEA105 PTR(31),                     0814
*                          2 CMZVP105 PTR(31);                     0814
*                      DCL CMZPL105(4) FIXED INIT((4)0);           0815
*                      REG1105 = ADDR(CMZPL105);                   0816
         LA    REG1105,CMZPL105                                    0816
*                      DCL CMZAA105 CHAR(4) INIT('114I');          0817
*                      CMZID105 = ADDR(CMZAA105);                  0818
         LA    @00,CMZAA105                                        0818
         ST    @00,CMZID105(,REG1105)                              0818
*                      CMZVP105 = ADDR(MEMBSAVE);                  0819
         LA    @00,MEMBSAVE                                        0819
         ST    @00,CMZVP105(,REG1105)                              0819
*                      DCL CMZSA105 (18) PTR(31) BASED(EMCR13);    0820
*                      DCL CMZZO105 (1) FIXED(31) INIT(0);         0821
*                      CMZSA105(5) = CMZZO105;                     0822
*                                                                  0822
         L     @00,CMZZO105                                        0822
         ST    @00,CMZSA105+16(,EMCR13)                            0822
*                      DCL REG15105 REG(15) PTR;                   0823
*                      RFY REG15105 RSTD;                          0824
*                                                                  0824
*                    DO; /* LISATCVT CVTBASE(PAGEABLE,(REG15105)) */
*                      REG15105 = ATCLCPTR; /*SET UP ATCVT POINTER*/
         L     REG15105,ATCLCPTR                                   0826
*                    END; /*LISATCVT*/                             0827
*                      DCL CMTA105 BASED(REG15105) ENTRY VALUERANGE(*);
*                      REG15105 = REG15105->ATCMSGP;               0829
         L     REG15105,ATCMSGP(,REG15105)                         0829
*                      CALL CMTA105;                               0830
         BALR  @14,@15                                             0830
*                      RESPECIFY (REG1105,REG15105)  UNRESTRICTED; 0831
*                                                                  0831
*                    RFY (EMCR13) UNRSTD;                          0832
*                    END;                                          0833
*                   RCREG=RETURN12;                                0834
         LA    RCREG,12                                            0834
*                 END;                                             0835
*             END;                                                 0836
*         END;                                                     0837
*       ELSE                                                       0838
*         ;                         /* R.C. FROM GOREAD ^= 0         */
@RF00795 DS    0H                                                  0839
*     END;                                                         0839
*   ELSE                                                           0840
*     ;                             /* R.C. REG ^= 0                 */
@RF00791 DS    0H                                                  0841
*   R14=CONTSAVE;                   /* RESTORE RETURN REG            */
@RC00791 L     R14,CONTSAVE                                        0841
*   END CONTINUE;                                                  0842
*                                                                  0842
@EL00008 DS    0H                                                  0842
@EF00008 DS    0H                                                  0842
@ER00008 BR    @14                                                 0842
*/* TPEPILOG   */                                                  0843
*    GEN (PRINT OFF);                                              0843
*                                                                  0843
*                                                                  0843
         PRINT OFF
*    DECLARE                                                       0844
*      EMCR0 PTR REG(0),                                           0844
*      EMCR1 PTR REG(1),                                           0844
*      EMCR2 PTR REG(2),                                           0844
*      EMCR3 PTR REG(3),                                           0844
*      EMCR4 PTR REG(4),                                           0844
*      EMCR5 PTR REG(5),                                           0844
*      EMCR6 PTR REG(6),                                           0844
*      EMCR7 PTR REG(7),                                           0844
*      EMCR8 PTR REG(8),                                           0844
*      EMCR9 PTR REG(9),                                           0844
*      EMCR10 PTR REG(10),                                         0844
*      EMCR11 PTR REG(11),                                         0844
*      EMCR12 PTR REG(12),                                         0844
*      EMCR13 PTR REG(13),                                         0844
*      EMCR14 PTR REG(14),                                         0844
*      EMCR15 PTR REG(15);                                         0844
*    GEN (PRINT ON);                                               0845
         PRINT ON
*/* END OF TPEPILOG */                                             0846
*                                                                  0846
*/* ATDSPLY   INVOKED. */                                          0846
*/********************************************************************/
*/* THE FOLLOWING ATBUILD INCLUSIONS HAVE BEEN MADE IN THIS          */
*/* COMPILATION:                                                     */
*/*             ISTLOK                                               */
*/*             ISTDEVCH                                             */
*/*             ISTLDPRM                                             */
*/*             ISTRDT                                               */
*/*             ISTCONFT                                             */
*/*             ISTAVT                                               */
*/*             ISTPAB                                               */
*/*             ISTDYPAB                                             */
*/*             ISTRPH                                               */
*/*             ISTATCVT                                             */
*/********************************************************************/
*/* END OF ATDSPLY. */                                             0846
*   END ISTINCRD                                                   0846
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*;                                                                 0846
         B     @EL00001                                            0846
@DATA    DS    0H
@SM02630 MVC   OUTAREA(0,@10),INBUFNOW(CURRENTP)
@SM02632 MVC   OUTAREA(0,@11),INBUFNOW(CURRENTP)
         DS    0F
@SA00001 DS    18F
         DS    0F
@CF00061 DC    F'1'
@CF00073 DC    F'2'
@CF00059 DC    F'8'
@CF01468 DC    F'12'
@CF00032 DC    F'15'
@CF02360 DC    F'71'
@CF02629 DC    F'-1'
@CF02374 DC    XL4'00FFFFFF'
@CV02466 DC    V(ISTINCRS)
         DS    0D
CVTPTR   DS    A
BUFSIZE  DC    F'256'
TEMPRC   DS    F
VCVTPTR  DS    A
CRDOBPTR DS    A
STOPPTR  DS    A
QUOTECNT DC    F'0'
QUOTECNS DS    F
RSPTR    DS    A
CRDPOOL  DC    F'241'
EDITSAVE DS    F
PARMSAVE DS    F
CHARCNT  DS    F
GORDSAVE DS    F
MTBSAVE  DS    F
STRING   DS    F
STNBSAVE DS    F
BLNKCONS DC    XL4'40000000'
CHKSAVE  DS    F
CONTSAVE DS    F
REMSPACE DS    F
TEMPSIZE DS    F
TEMPBUFF DS    F
NEXTSIZE DS    F
R15SAVE  DS    F
@CC02561 DC    C'               '
@CC02418 DC    C'ATCCON'
@CC02419 DC    C'ATCSTR'
@CC02325 EQU   @CC02561
         DS    CL1
ISTRSPRM DS    CL24
         ORG   ISTRSPRM
RSPLIBN  DS    CL8
RSPMEMBN DS    CL8
@NM00036 DS    CL4
RSPBUFA  DC    AL4(INBUF)
         ORG   ISTRSPRM+24
INBUF    DS    CL80
MEMBSAVE DS    CL8
MEMBZERO DS    CL8
         ORG   MEMBZERO
@NM00037 DC    8X'00'
         ORG   MEMBZERO+8
CRDFLAGS DS    CL1
         ORG   CRDFLAGS
CRDENDSP DS    BL1
CRDENDST EQU   CRDFLAGS+0
CRDENTRT EQU   CRDFLAGS+0
BADSTORE EQU   CRDFLAGS+0
NOPARMS  EQU   CRDFLAGS+0
CONTERR  EQU   CRDFLAGS+0
@NM00038 EQU   CRDFLAGS+0
         ORG   CRDFLAGS+1
         DS    CL3
SMSREGS  DS    CL12
CMZAA026 DC    CL4'114I'
CMZAA034 DC    CL4'115I'
QUOTECHR DC    X'7D'
PARMFLGS DS    CL1
         ORG   PARMFLGS
@NM00043 DS    BL1
CC0FLAG  EQU   PARMFLGS+0
@NM00044 EQU   PARMFLGS+0
         ORG   PARMFLGS+1
PARMTAB  DS    CL256
         ORG   PARMTAB
@NM00045 DS    CL64
         ORG   @NM00045
@NM00046 DC    64X'00'
         ORG   PARMTAB+64
BLANKSTP DC    X'04'
@NM00047 DS    CL60
         ORG   @NM00047
@NM00048 DC    60X'00'
         ORG   PARMTAB+125
QUOTESTP DC    X'08'
@NM00049 DS    CL130
         ORG   @NM00049
@NM00050 DC    130X'00'
         ORG   PARMTAB+256
COMMFLAG DC    X'01'
CMZAA050 DC    CL4'114I'
CMZAA058 DC    CL4'116I'
CMZAA066 DC    CL4'117I'
MOVETAB  DS    CL256
         ORG   MOVETAB
@NM00057 DS    CL64
         ORG   @NM00057
@NM00058 DC    64X'00'
         ORG   MOVETAB+64
BLANKONE DC    X'04'
@NM00059 DS    CL191
         ORG   @NM00059
@NM00060 DC    191X'00'
         ORG   MOVETAB+256
CMZAA074 DC    CL4'114I'
CMZAA097 DC    CL4'115I'
CMZAA105 DC    CL4'114I'
         DS    CL1
CMZPL026 DC    4F'0'
CMZZO026 DC    F'0'
CMZPL034 DC    4F'0'
CMZZO034 DC    F'0'
CMZPL050 DC    4F'0'
CMZZO050 DC    F'0'
CMZPL058 DC    4F'0'
CMZZO058 DC    F'0'
CMZPL066 DC    4F'0'
CMZZO066 DC    F'0'
CMZPL074 DC    4F'0'
CMZZO074 DC    F'0'
CMZPL097 DC    4F'0'
CMZZO097 DC    F'0'
CMZPL105 DC    4F'0'
CMZZO105 DC    F'0'
ISTINCRD CSECT
TRANSLT  TRT   0(0,CURRENTP),PARMTAB
ISTINCRD CSECT
*                                 /* THIS IS THE TRT FOR MTB */
MOVETRT  TRT   0(0,CURRENTP),MOVETAB
ISTINCRD CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
LDPRMPTR EQU   @01
RPHPTR   EQU   @01
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR15F   EQU   @15
GPR15P   EQU   @15
RCREG    EQU   @15
CURRENTP EQU   @04
R2       EQU   @02
TRTREG   EQU   @05
R1       EQU   @01
R3       EQU   @03
R5       EQU   @05
R14      EQU   @14
REG1026  EQU   @01
EMCR13   EQU   @13
REG15026 EQU   @15
REG1034  EQU   @01
REG15034 EQU   @15
REG1050  EQU   @01
REG15050 EQU   @15
REG1058  EQU   @01
REG15058 EQU   @15
REG1066  EQU   @01
REG15066 EQU   @15
REG1074  EQU   @01
REG15074 EQU   @15
OLDADDR  EQU   @06
NEWADDR  EQU   @08
OLDCOUNT EQU   @07
NEWCOUNT EQU   @09
REG1097  EQU   @01
REG15097 EQU   @15
REG1105  EQU   @01
REG15105 EQU   @15
EMCR0    EQU   @00
EMCR1    EQU   @01
EMCR10   EQU   @10
EMCR11   EQU   @11
EMCR12   EQU   @12
EMCR14   EQU   @14
EMCR15   EQU   @15
EMCR2    EQU   @02
EMCR3    EQU   @03
EMCR4    EQU   @04
EMCR5    EQU   @05
EMCR6    EQU   @06
EMCR7    EQU   @07
EMCR8    EQU   @08
EMCR9    EQU   @09
GPR01F   EQU   @01
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR06F   EQU   @06
GPR06P   EQU   @06
GPR07F   EQU   @07
GPR07P   EQU   @07
GPR08F   EQU   @08
GPR08P   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR13P   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
ATCLCPTR EQU   1032
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00004 EQU   LOKCHNG+2
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTLDPRM EQU   0
LDPMBR   EQU   ISTLDPRM
LDPPDS   EQU   ISTLDPRM+8
LDPFG    EQU   ISTLDPRM+20
LDPFB2   EQU   ISTLDPRM+21
ISTRPRE  EQU   0
RPRCOMID EQU   ISTRPRE+8
RPRFLAGA EQU   ISTRPRE+21
RPRFLAGB EQU   ISTRPRE+22
RPRCAUSE EQU   ISTRPRE+23
RPRFLAGD EQU   ISTRPRE+61
RPRFLAGC EQU   ISTRPRE+62
ISTRCPRE EQU   0
RCPPMODE EQU   ISTRCPRE+91
RCPLGNIN EQU   ISTRCPRE+92
ISTRDT   EQU   0
RDTPLEN  EQU   ISTRDT+72
RDTPRIOR EQU   RDTPLEN
RDTFLAGB EQU   ISTRDT+91
RDTVYRPH EQU   ISTRDT+108
RDTSTCNT EQU   ISTRDT+112
ISTRAP   EQU   0
RAPFLG   EQU   ISTRAP+108
RAPFLGB  EQU   ISTRAP+109
RAPFLGC  EQU   ISTRAP+110
ISTRLC   EQU   0
RLCADR   EQU   ISTRLC+72
RLCFLAG  EQU   RLCADR
ISTRRN   EQU   0
RRNADR   EQU   ISTRRN+136
RRNFLAG  EQU   RRNADR
RRNUCBAD EQU   RRNADR+1
RRNRDF   EQU   ISTRRN+172
RRNRDFA  EQU   RRNRDF
RRNRDFB  EQU   RRNRDF+1
RRNCMF   EQU   ISTRRN+176
RRNCMFA  EQU   RRNCMF
RRNCMFB  EQU   RRNCMF+1
RRNCMFC  EQU   RRNCMF+2
RRNCMFD  EQU   RRNCMF+3
RRNNMDPD EQU   ISTRRN+192
RRNHPRE  EQU   ISTRRN+216
ISTRGP   EQU   0
RGPFLG   EQU   ISTRGP+72
ISTRLN   EQU   0
RLNADR   EQU   ISTRLN+72
RLNFLAG  EQU   RLNADR
RLNUCBAD EQU   RLNADR+1
RLNSTAT1 EQU   ISTRLN+86
RLNSTAT2 EQU   ISTRLN+87
RLNRDF   EQU   ISTRLN+88
RLNRDFA  EQU   RLNRDF
RLNRACNT EQU   RLNRDFA
RLNRDFB  EQU   RLNRDF+1
RLNCRFLG EQU   ISTRLN+102
RLNLSCMD EQU   RLNCRFLG
ISTRPT   EQU   0
RPTLNCID EQU   ISTRPT+116
RPTDITT  EQU   ISTRPT+128
RPTFLAG1 EQU   ISTRPT+140
ISTRCL   EQU   0
RCLADR   EQU   ISTRCL+72
RCLFLAG  EQU   RCLADR
ISTRTR   EQU   0
RTRADR   EQU   ISTRTR+124
RTRFLAG  EQU   RTRADR
RTRRDFA  EQU   ISTRTR+136
RTRRAALL EQU   RTRRDFA
RTRRDFB  EQU   ISTRTR+137
RTRRDFC  EQU   ISTRTR+138
RTRRDFD  EQU   ISTRTR+139
RTRRDFE  EQU   ISTRTR+140
RTRRDFF  EQU   ISTRTR+141
RTRCRFLG EQU   ISTRTR+143
RTRLSCMD EQU   RTRCRFLG
RTRBSCID EQU   ISTRTR+188
ISTRIN   EQU   0
RINDFD   EQU   ISTRIN+124
RINREMPO EQU   RINDFD
RINNODEF EQU   RINDFD
RINLDISC EQU   RINDFD
RINNODID EQU   ISTRIN+125
RINRLDAF EQU   ISTRIN+126
RINREMOT EQU   ISTRIN+128
RINVPAB  EQU   ISTRIN+132
RINRPHCN EQU   ISTRIN+136
RINNCSPL EQU   ISTRIN+140
RINCNCNT EQU   ISTRIN+144
ISTRDS   EQU   0
ISTDOT   EQU   0
ISTRCC   EQU   0
RCCFLAG  EQU   ISTRCC+73
RCCFLAGB EQU   ISTRCC+74
RCCSTAID EQU   ISTRCC+78
RCCID48  EQU   RCCSTAID+2
RCCCRFLG EQU   ISTRCC+108
ISTRLU   EQU   0
RLUFLAG  EQU   ISTRLU+125
RLUCRFLG EQU   ISTRLU+126
RLUPACE  EQU   ISTRLU+132
RLUNCPPC EQU   ISTRLU+134
RLUUSSTB EQU   ISTRLU+140
RLUMODET EQU   ISTRLU+152
ISTRPX   EQU   0
ISTRLX   EQU   0
RLXFLAGA EQU   ISTRLX+76
ISTRSW   EQU   0
ISTRDA   EQU   0
RDAADR   EQU   ISTRDA+72
RDAFLAG  EQU   RDAADR
RDAUCBAD EQU   RDAADR+1
ISTRLS   EQU   0
ISTDNT   EQU   0
ISTGNT   EQU   0
ISTPAT   EQU   0
PATFLAGA EQU   ISTPAT+7
ISTCONFT EQU   0
CONRDBUF EQU   ISTCONFT+76
CONBUFSZ EQU   ISTCONFT+100
CONHALT  EQU   ISTCONFT+106
CONFLAGS EQU   ISTCONFT+110
CONDSFLG EQU   CONFLAGS
CONOPTFL EQU   CONFLAGS+1
CONSTAT  EQU   CONFLAGS+2
CONBUFF  EQU   CONFLAGS+3
CONFLG01 EQU   ISTCONFT+416
CONSCPID EQU   ISTCONFT+1356
CONSTAID EQU   CONSCPID+3
ISTAVT   EQU   0
ISTAS49  EQU   ISTAVT+4
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCCONFT EQU   ATCCOM+112
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCMSGP  EQU   ISTATCVT+344
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00030 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00032 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCZFLAG EQU   ATCAOSM+588
OUTAREA  EQU   0
INBUFNOW EQU   0
COL72    EQU   0
CMZB0011 EQU   0
DUME0024 EQU   0
@NM00039 EQU   0
CMZID026 EQU   @NM00039
@NM00040 EQU   @NM00039+4
CMZVP026 EQU   @NM00039+12
CMZSA026 EQU   0
CMTA026  EQU   0
@NM00041 EQU   0
CMZID034 EQU   @NM00041
@NM00042 EQU   @NM00041+4
CMZVP034 EQU   @NM00041+12
CMZSA034 EQU   0
CMTA034  EQU   0
CMZB0042 EQU   0
FUNCBYTE EQU   0
PREVBYTE EQU   0
@NM00051 EQU   0
CMZID050 EQU   @NM00051
@NM00052 EQU   @NM00051+4
CMZVP050 EQU   @NM00051+12
CMZSA050 EQU   0
CMTA050  EQU   0
@NM00053 EQU   0
CMZID058 EQU   @NM00053
@NM00054 EQU   @NM00053+4
CMZVP058 EQU   @NM00053+12
CMZSA058 EQU   0
CMTA058  EQU   0
@NM00055 EQU   0
CMZID066 EQU   @NM00055
@NM00056 EQU   @NM00055+4
CMZVP066 EQU   @NM00055+12
CMZSA066 EQU   0
CMTA066  EQU   0
@NM00061 EQU   0
CMZID074 EQU   @NM00061
@NM00062 EQU   @NM00061+4
CMZVP074 EQU   @NM00061+12
CMZSA074 EQU   0
CMTA074  EQU   0
COLS15   EQU   0
COL16    EQU   0
DUME0087 EQU   0
CMZB0089 EQU   0
@NM00063 EQU   0
CMZID097 EQU   @NM00063
@NM00064 EQU   @NM00063+4
CMZVP097 EQU   @NM00063+12
CMZSA097 EQU   0
CMTA097  EQU   0
@NM00065 EQU   0
CMZID105 EQU   @NM00065
@NM00066 EQU   @NM00065+4
CMZVP105 EQU   @NM00065+12
CMZSA105 EQU   0
CMTA105  EQU   0
OUTAREA2 EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
RTRDNCBA EQU   ISTRTR+40
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CMZEA105 EQU   @NM00065+8
CMZRA105 EQU   @NM00066+1
CMZRL105 EQU   @NM00066
CMZEA097 EQU   @NM00063+8
CMZRA097 EQU   @NM00064+1
CMZRL097 EQU   @NM00064
CMZEA074 EQU   @NM00061+8
CMZRA074 EQU   @NM00062+1
CMZRL074 EQU   @NM00062
CMZEA066 EQU   @NM00055+8
CMZRA066 EQU   @NM00056+1
CMZRL066 EQU   @NM00056
CMZEA058 EQU   @NM00053+8
CMZRA058 EQU   @NM00054+1
CMZRL058 EQU   @NM00054
CMZEA050 EQU   @NM00051+8
CMZRA050 EQU   @NM00052+1
CMZRL050 EQU   @NM00052
CMZEA034 EQU   @NM00041+8
CMZRA034 EQU   @NM00042+1
CMZRL034 EQU   @NM00042
CMZEA026 EQU   @NM00039+8
CMZRA026 EQU   @NM00040+1
CMZRL026 EQU   @NM00040
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00035 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00034 EQU   ATCAOSM+333
@NM00033 EQU   @NM00032
ATCSNUF  EQU   @NM00032
ATCOPKL  EQU   @NM00032
ATCABEN  EQU   @NM00032
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00031 EQU   @NM00030
ATCVTMAB EQU   @NM00030
@NM00029 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00028 EQU   ISTATCVT+819
@NM00027 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00026 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00025 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00024 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHCRR   EQU   ISTRPH+32
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00023 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00022 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00021 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
ISTPDAVP EQU   ISTAVT+40
ISTAVR01 EQU   ISTAVT+38
ISTVTTP  EQU   ISTAVT+36
ISTAGTWT EQU   ISTAVT+34
ISTATRT  EQU   ISTAVT+32
ISTARID  EQU   ISTAVT+30
ISTX1    EQU   ISTAVT+29
ISTPHNM  EQU   ISTAVT+24
ISTAPSEX EQU   ISTAVT+20
ISTVTTIK EQU   ISTAVT+18
AVTASID  EQU   ISTAVT+16
ISTAPSTA EQU   ISTAVT+12
ISTAS53  EQU   ISTAVT+8
ISTAHIP  EQU   ISTAS49
ISTACVT  EQU   ISTAVT
CONUESBF EQU   ISTCONFT+1362
CONSTVAR EQU   CONSTAID+1
CONSTFIL EQU   CONSTAID
CONBLKNO EQU   CONSCPID+2
CONFILL  EQU   CONSCPID+1
CONFCNL  EQU   CONSCPID
CONF01SV EQU   ISTCONFT+1352
CONSDMLC EQU   ISTCONFT+1348
CONSDECB EQU   ISTCONFT+1344
CONUNITS EQU   ISTCONFT+1342
CONRVPT1 EQU   ISTCONFT+1341
CONGLBBH EQU   ISTCONFT+1340
CONRSV24 EQU   ISTCONFT+1312
CONFTTAT EQU   ISTCONFT+1284
CONFXXAT EQU   ISTCONFT+1256
CONFLDAT EQU   ISTCONFT+1228
CONFTRAT EQU   ISTCONFT+1200
CONFNSAT EQU   ISTCONFT+1172
CONCSCB  EQU   ISTCONFT+1168
CONRSV50 EQU   ISTCONFT+1166
CONLIST  EQU   ISTCONFT+1164
CONSTAFP EQU   ISTCONFT+1160
CONECDET EQU   ISTCONFT+1156
CONRECON EQU   ISTCONFT+1036
CONNTSOL EQU   ISTCONFT+916
CONTRACE EQU   ISTCONFT+796
CONTOLTP EQU   ISTCONFT+676
CONVVTAM EQU   ISTCONFT+556
CONVTHDR EQU   ISTCONFT+420
CONRSV01 EQU   ISTCONFT+417
CONNSNEC EQU   CONFLG01
CONFTPSA EQU   CONFLG01
CONFTTA  EQU   CONFLG01
CONFTNSA EQU   CONFLG01
CONFTNAC EQU   CONFLG01
CONFTEXS EQU   CONFLG01
CONFTTMR EQU   CONFLG01
CONFTSTM EQU   CONFLG01
CONCRPLD EQU   ISTCONFT+404
CONPPDBF EQU   ISTCONFT+392
CONNPDBF EQU   ISTCONFT+380
CONAPDBF EQU   ISTCONFT+368
CONWPDBF EQU   ISTCONFT+356
CONIODBF EQU   ISTCONFT+344
CONUEDBF EQU   ISTCONFT+332
CONVPDBF EQU   ISTCONFT+320
CONVFDBF EQU   ISTCONFT+308
CONLPDBF EQU   ISTCONFT+296
CONLFDBF EQU   ISTCONFT+284
CONSPDBF EQU   ISTCONFT+272
CONSFDBF EQU   ISTCONFT+260
CONCRPLS EQU   ISTCONFT+248
CONPPSBF EQU   ISTCONFT+236
CONNPSBF EQU   ISTCONFT+224
CONAPSBF EQU   ISTCONFT+212
CONWPSBF EQU   ISTCONFT+200
CONIOSBF EQU   ISTCONFT+188
CONVPSBF EQU   ISTCONFT+176
CONVFSBF EQU   ISTCONFT+164
CONLPSBF EQU   ISTCONFT+152
CONLFSBF EQU   ISTCONFT+140
CONSPSBF EQU   ISTCONFT+128
CONSFSBF EQU   ISTCONFT+116
CONRSV17 EQU   ISTCONFT+115
CONCRPL  EQU   CONBUFF+1
CONPPEX  EQU   CONBUFF+1
CONNPEX  EQU   CONBUFF+1
CONAPEX  EQU   CONBUFF+1
CONWPEX  EQU   CONBUFF+1
CONIOEX  EQU   CONBUFF
CONUECB  EQU   CONBUFF
CONVPEX  EQU   CONBUFF
CONVFEX  EQU   CONBUFF
CONLPEX  EQU   CONBUFF
CONLFEX  EQU   CONBUFF
CONSPEX  EQU   CONBUFF
CONSFEX  EQU   CONBUFF
CONACTV  EQU   CONSTAT
CONVRYIN EQU   CONSTAT
CONLODED EQU   CONSTAT
CONDSOPN EQU   CONSTAT
CONSTOR  EQU   CONSTAT
@NM00020 EQU   CONSTAT
@NM00019 EQU   CONSTAT
@NM00018 EQU   CONSTAT
CONIOTR  EQU   CONOPTFL
CONMODTR EQU   CONOPTFL
CONBTUTR EQU   CONOPTFL
CONBUFTR EQU   CONOPTFL
@NM00017 EQU   CONOPTFL
@NM00016 EQU   CONOPTFL
@NM00015 EQU   CONOPTFL
CONWRMST EQU   CONOPTFL
CONSYLST EQU   CONDSFLG
CONSYLIB EQU   CONDSFLG
CONSYOBJ EQU   CONDSFLG
@NM00014 EQU   CONDSFLG
@NM00013 EQU   CONDSFLG
@NM00012 EQU   CONDSFLG
CONMODFY EQU   ISTCONFT+109
CONDISPL EQU   ISTCONFT+108
CONVARY  EQU   ISTCONFT+107
CONHLTS  EQU   CONHALT
CONHLTQ  EQU   CONHALT
CONLAST  EQU   ISTCONFT+105
CONRES2  EQU   ISTCONFT+104
CONCID   EQU   ISTCONFT+102
CONRSV02 EQU   ISTCONFT+96
CONDCBBA EQU   ISTCONFT+92
CONDCBLA EQU   ISTCONFT+88
CONDCBOA EQU   ISTCONFT+84
CONLDPRM EQU   ISTCONFT+80
CONSTCIB EQU   ISTCONFT+72
CONENDLA EQU   ISTCONFT+68
CONVARLA EQU   ISTCONFT+64
CONMODLA EQU   ISTCONFT+60
CONHLTLA EQU   ISTCONFT+56
CONNCSLA EQU   ISTCONFT+52
CONDISLA EQU   ISTCONFT+48
CONCIBAD EQU   ISTCONFT+44
CONACB   EQU   ISTCONFT+40
CONFBPNM EQU   ISTCONFT+32
CONDMNM  EQU   ISTCONFT+24
CONAPSNM EQU   ISTCONFT+16
CONAPINM EQU   ISTCONFT+8
CONCONFG EQU   ISTCONFT
PATRSV01 EQU   PATFLAGA
PATUSEFG EQU   PATFLAGA
PATRDCNT EQU   ISTPAT+6
PATGRPID EQU   ISTPAT+5
PATPTHID EQU   ISTPAT+4
PATDINDX EQU   ISTPAT+2
PATGINDX EQU   ISTPAT
GNTGRPNM EQU   ISTGNT
DNTTELNO EQU   ISTDNT+1
DNTCTDIG EQU   ISTDNT
RLSRSV02 EQU   ISTRLS+140
RLSRSV01 EQU   ISTRLS+138
RLSCTELU EQU   ISTRLS+136
RLSPRE   EQU   ISTRLS
RDARSVPT EQU   ISTRDA+84
RDAPUBI  EQU   ISTRDA+83
RDADFCUA EQU   ISTRDA+80
RDACTPCC EQU   ISTRDA+79
RDADACUA EQU   ISTRDA+76
RDALUBA  EQU   RDAUCBAD+1
RDACHQI  EQU   RDAUCBAD
RDARSV01 EQU   RDAFLAG
RDARBISA EQU   RDAFLAG
RDAPRE   EQU   ISTRDA
RSWRSV01 EQU   ISTRSW+152
RSWRSV02 EQU   ISTRSW+150
RSWCTELU EQU   ISTRSW+148
RSWGRUPZ EQU   ISTRSW+146
RSWDIALZ EQU   ISTRSW+144
RSWGRUPT EQU   ISTRSW+140
RSWDIALT EQU   ISTRSW+136
RSWPRE   EQU   ISTRSW
RLXRSV03 EQU   ISTRLX+80
RLXRSV02 EQU   ISTRLX+77
RLXRSV01 EQU   RLXFLAGA
RLXINUSE EQU   RLXFLAGA
RLXNLUX  EQU   ISTRLX+72
RLXPRE   EQU   ISTRLX
RPXRSV01 EQU   ISTRPX+80
RPXRSV02 EQU   ISTRPX+77
RPXMAXLU EQU   ISTRPX+76
RPXFLUX  EQU   ISTRPX+72
RPXPRE   EQU   ISTRPX
RLURSV02 EQU   ISTRLU+172
RLULGMOD EQU   ISTRLU+164
RLUMODEP EQU   RLUMODET+8
RLUMODEN EQU   RLUMODET
RLUUSSPT EQU   RLUUSSTB+8
RLUUSSNM EQU   RLUUSSTB
RLURSV01 EQU   ISTRLU+137
RLULOCAD EQU   ISTRLU+136
RLUNCPPM EQU   RLUNCPPC+1
RLUNCPPN EQU   RLUNCPPC
RLUPACEM EQU   RLUPACE+1
RLUPACEN EQU   RLUPACE
RLUINTA  EQU   ISTRLU+128
RLUSSCFM EQU   ISTRLU+127
RLUCRRSV EQU   RLUCRFLG
RLUACTLU EQU   RLUCRFLG
RLURSV00 EQU   RLUFLAG
RLUNDSES EQU   RLUFLAG
RLUGSTAT EQU   RLUFLAG
RLUBATCH EQU   RLUFLAG
RLURBISA EQU   RLUFLAG
RLUTYPE  EQU   ISTRLU+124
RLUCRPR  EQU   ISTRLU
RCCRVPT2 EQU   ISTRCC+144
RCCXTOSW EQU   ISTRCC+140
RCCSWTOX EQU   ISTRCC+136
RCCRSPT2 EQU   ISTRCC+133
RCCADDR  EQU   ISTRCC+132
RCCPASSL EQU   ISTRCC+131
RCCMXOUT EQU   ISTRCC+130
RCCMXDAT EQU   ISTRCC+128
RCCINDEX EQU   ISTRCC+126
RCCPATHZ EQU   ISTRCC+124
RCCPATHT EQU   ISTRCC+120
RCCDPQ   EQU   ISTRCC+116
RCCTPAB  EQU   ISTRCC+112
RCCRSV02 EQU   ISTRCC+109
RCCCRRSV EQU   RCCCRFLG
RCCCTCFL EQU   RCCCRFLG
RCCACTPU EQU   RCCCRFLG
RCCNCSPL EQU   ISTRCC+104
RCCRPHCN EQU   ISTRCC+100
RCCEPAB  EQU   ISTRCC+96
RCCDPAB  EQU   ISTRCC+92
RCCVPAB  EQU   ISTRCC+88
@NM00011 EQU   ISTRCC+87
RCCSESCT EQU   ISTRCC+86
RCCIDNUM EQU   RCCID48+3
RCCIDBLK EQU   RCCID48+2
RCCIDPA2 EQU   RCCID48+1
RCCIDPUT EQU   RCCID48
RCCIDPA1 EQU   RCCSTAID
RCCCTELU EQU   ISTRCC+76
RCCCNCNT EQU   ISTRCC+75
RCCRTGOH EQU   RCCFLAGB
RCCBRKCN EQU   RCCFLAGB
RCCRESET EQU   RCCFLAGB
RCCFINAL EQU   RCCFLAGB
RCCBNNSP EQU   RCCFLAGB
RCCIRETR EQU   RCCFLAGB
RCCDIALP EQU   RCCFLAGB
RCCDSTCT EQU   RCCFLAGB
RCCCTPGD EQU   RCCFLAG
RCCPRGDN EQU   RCCFLAG
RCCOUERP EQU   RCCFLAG
RCCOHIMM EQU   RCCFLAG
RCCLDISC EQU   RCCFLAG
RCCERPIP EQU   RCCFLAG
RCCCUDIE EQU   RCCFLAG
RCCRBISA EQU   RCCFLAG
RCCTYPE  EQU   ISTRCC+72
RCCPRE   EQU   ISTRCC
DOTADTRM EQU   ISTDOT
RDSADDOT EQU   ISTRDS+76
RDSCTATR EQU   ISTRDS+74
RDSCTTRM EQU   ISTRDS+72
RDSPRE   EQU   ISTRDS
RINRSV05 EQU   ISTRIN+156
RINRSV04 EQU   ISTRIN+152
RINLOCRN EQU   ISTRIN+148
RINRSV02 EQU   ISTRIN+145
RTRCNCNT EQU   RINCNCNT
RTRNCSPL EQU   RINNCSPL
RTRRPHCN EQU   RINRPHCN
RTRVPAB  EQU   RINVPAB
RTRREMOT EQU   RINREMOT
RTRRLDAF EQU   RINRLDAF
RTRNODID EQU   RINNODID
RINRSV01 EQU   RINDFD
RTRLDISC EQU   RINLDISC
RTRNODEF EQU   RINNODEF
RTRREMPO EQU   RINREMPO
RINCRPRE EQU   ISTRIN
RTRRSV04 EQU   ISTRTR+210
RTRLCTI  EQU   ISTRTR+209
RTRIDCAS EQU   RTRBSCID+1
RTRIDLEN EQU   RTRBSCID
RTRRSVDD EQU   ISTRTR+181
RTRRDFG  EQU   ISTRTR+180
RTRDIAA  EQU   ISTRTR+176
RTRPOLA  EQU   ISTRTR+172
RTRCADDR EQU   ISTRTR+164
RTRCTADR EQU   ISTRTR+162
RTRCTPOL EQU   ISTRTR+160
RTRCTDIA EQU   ISTRTR+158
RTRRSV03 EQU   ISTRTR+156
RTRRVPT1 EQU   ISTRTR+152
RTRBHSN1 EQU   ISTRTR+144
RTRCRSV2 EQU   RTRCRFLG
RTRDTRLM EQU   RTRLSCMD
RTRCRSV1 EQU   RTRCRFLG
RTRTRMAX EQU   ISTRTR+142
RTRRSV24 EQU   RTRRDFF
RTRRFDEK EQU   RTRRDFF
RTRRFANK EQU   RTRRDFF
RTRRFPFK EQU   RTRRDFF
RTRRFPEN EQU   RTRRDFF
RTRRFXCT EQU   RTRRDFF
RTRRESCT EQU   RTRRDFE
RTRRESUP EQU   RTRRDFE
RTRREATT EQU   RTRRDFE
RTRRECHK EQU   RTRRDFE
RTRREACR EQU   RTRRDFE
RTRRSV0A EQU   RTRRDFE
RTRREBRK EQU   RTRRDFE
RTRRSV11 EQU   RTRRDFD
RTRRSV10 EQU   RTRRDFD
RTRRDBHI EQU   RTRRDFD
RTRRDBHD EQU   RTRRDFD
RTRRDBHN EQU   RTRRDFD
RTRRSV23 EQU   RTRRDFC
RTRRCXMS EQU   RTRRDFC
RTRRCMSG EQU   RTRRDFC
RTRRCBLK EQU   RTRRDFC
RTRRCPT3 EQU   RTRRDFC
RTRRCIT2 EQU   RTRRDFC
RTRRCIT1 EQU   RTRRDFC
RTRRSV32 EQU   RTRRDFB
RTRRBEND EQU   RTRRDFB
RTRRBECT EQU   RTRRDFB
RTRRSV02 EQU   RTRRDFA
RTRRACTR EQU   RTRRDFA
RTRRSV60 EQU   RTRRDFA
RTRRACDT EQU   RTRRDFA
RTRRAPT3 EQU   RTRRAALL
RTRRAPT2 EQU   RTRRAALL
RTRRAPT1 EQU   RTRRAALL
RTRRAATN EQU   RTRRDFA
RTRRSV45 EQU   ISTRTR+132
RTRRSV01 EQU   ISTRTR+130
RTRCTECM EQU   ISTRTR+128
RTRADRPT EQU   RTRADR+1
RTRRSV22 EQU   RTRFLAG
RTRVTERM EQU   RTRFLAG
RTRRSV51 EQU   RTRFLAG
RTRRBISA EQU   RTRFLAG
RTRRSV21 EQU   RTRFLAG
RTRCRPR  EQU   ISTRTR
RCLRVPT2 EQU   ISTRCL+92
RCLRVPT1 EQU   ISTRCL+88
RCLGPOLA EQU   ISTRCL+84
RCLCTNGP EQU   ISTRCL+82
RCLRSV01 EQU   ISTRCL+80
RCLCTECM EQU   ISTRCL+78
RCLCTETR EQU   ISTRCL+76
RCLGPADR EQU   RCLADR+1
RCLRSV33 EQU   RCLFLAG
RCLBATCH EQU   RCLFLAG
RCLRBISA EQU   RCLFLAG
RCLRSV22 EQU   RCLFLAG
RCLPRE   EQU   ISTRCL
RPTRSV03 EQU   ISTRPT+156
RPTRSV02 EQU   ISTRPT+152
RPTNSNSV EQU   ISTRPT+148
RPTPTHCT EQU   ISTRPT+146
RPTPEPCT EQU   ISTRPT+144
RPTDAFSV EQU   ISTRPT+142
RPTRSV01 EQU   ISTRPT+141
RPTISTAT EQU   RPTFLAG1
RPTDYNAM EQU   RPTFLAG1
RPTVYIMM EQU   RPTFLAG1
RPTVIODN EQU   RPTFLAG1
RPTONLIN EQU   RPTFLAG1
RPTHLVPD EQU   RPTFLAG1
RPTVRYPD EQU   RPTFLAG1
RPTASLEP EQU   RPTFLAG1
RPTUTERM EQU   ISTRPT+136
RPTATERM EQU   ISTRPT+132
RPTDIVT  EQU   RPTDITT
RPTCTNM  EQU   ISTRPT+120
RPTLNDAF EQU   RPTLNCID+2
RPTLNSAF EQU   RPTLNCID
RPTLN    EQU   ISTRPT
RLNRVPT2 EQU   ISTRLN+112
RLNNCSPL EQU   ISTRLN+108
RLNX2SW  EQU   ISTRLN+104
@NM00010 EQU   ISTRLN+103
RLNCRRSV EQU   RLNCRFLG
RLNSWEP  EQU   RLNCRFLG
RLNSVSKP EQU   RLNLSCMD
RLNSESLM EQU   RLNLSCMD
RLNNPRLM EQU   RLNLSCMD
RLNSWNCP EQU   RLNCRFLG
RLNACTLN EQU   RLNCRFLG
RLNPAUSE EQU   ISTRLN+101
RLNPOLMT EQU   ISTRLN+100
RLNACTSN EQU   ISTRLN+98
RLNRESV1 EQU   ISTRLN+97
RLNACTRM EQU   ISTRLN+96
RLNCTSES EQU   ISTRLN+95
RLNRDSLM EQU   ISTRLN+94
RLNAUTOA EQU   ISTRLN+92
RLNRDFD  EQU   RLNRDF+3
RLNRDFC  EQU   RLNRDF+2
RLNMULTP EQU   RLNRDFB
RLNRATRN EQU   RLNRDFB
RLNRAPOL EQU   RLNRDFB
RLNTTV   EQU   RLNRDFB
RLNRSV0B EQU   RLNRDFB
RLNAUTOD EQU   RLNRDFB
RLNANSWR EQU   RLNRDFB
RLNRBUSE EQU   RLNRDFB
RLNRAPEP EQU   RLNRDFA
RLNRANCP EQU   RLNRDFA
RLNRAEP  EQU   RLNRDFA
RLNIDV   EQU   RLNRDFA
RLNPORT  EQU   RLNRDFA
RLNGANSW EQU   RLNRDFA
RLNRACAN EQU   RLNRACNT
RLNRACAT EQU   RLNRACNT
RLNRSV04 EQU   RLNSTAT2
RLNINUSE EQU   RLNSTAT2
RLNOHIN  EQU   RLNSTAT2
RLNRSV03 EQU   RLNSTAT1
RLNVD    EQU   RLNSTAT1
RLNINOPP EQU   RLNSTAT1
RLNINOPL EQU   RLNSTAT1
RLNLRST  EQU   RLNSTAT1
RLNTRAP  EQU   RLNSTAT1
RLNACTCT EQU   ISTRLN+84
RLNCTECM EQU   ISTRLN+82
RLNCTEIN EQU   ISTRLN+80
RLNCTETR EQU   ISTRLN+78
RLNCTECL EQU   ISTRLN+76
RLNCUA   EQU   RLNUCBAD
RLNRSV01 EQU   RLNFLAG
RLNRBISA EQU   RLNFLAG
RLNEAM   EQU   RLNFLAG
RLNPRE   EQU   ISTRLN
RGPRVPT2 EQU   ISTRGP+88
RGPRVPT1 EQU   ISTRGP+84
RGPCTECM EQU   ISTRGP+82
RGPCTEIN EQU   ISTRGP+80
RGPCTETR EQU   ISTRGP+78
RGPCTECL EQU   ISTRGP+76
RGPCTELN EQU   ISTRGP+74
RGPRSV03 EQU   ISTRGP+73
RGPRSV02 EQU   RGPFLG
RGPASDLC EQU   RGPFLG
RGPABSC  EQU   RGPFLG
RGPASS   EQU   RGPFLG
RGPADIL  EQU   RGPFLG
RGPPRE   EQU   ISTRGP
RRNRINNM EQU   ISTRRN+248
@NM00009 EQU   ISTRRN+247
RRNRDCUA EQU   ISTRRN+244
RRNLASTE EQU   ISTRRN+240
RRNNCSPL EQU   ISTRRN+236
RRNRPLPT EQU   ISTRRN+232
RRNMSIZE EQU   ISTRRN+228
RRNNCPNM EQU   ISTRRN+221
RRNCTPCC EQU   ISTRRN+220
RRNHBUFS EQU   ISTRRN+218
RRNHLENT EQU   RRNHPRE+1
RRNHLENH EQU   RRNHPRE
RRNNMNCP EQU   ISTRRN+208
RRNDELAY EQU   ISTRRN+206
RRNRSV04 EQU   ISTRRN+200
RRNRSV88 EQU   RRNNMDPD+7
RRNPUBI  EQU   RRNNMDPD+6
RRNDPLUB EQU   RRNNMDPD
RRNEPADR EQU   ISTRRN+190
RRNCPLUB EQU   ISTRRN+184
RRNFLUX  EQU   ISTRRN+180
RRNRSV05 EQU   RRNCMFD
RRNREMPO EQU   RRNCMFD
RRNCDREC EQU   RRNCMFD
RRNCDDSI EQU   RRNCMFD
RRNCDBCK EQU   RRNCMFD
RRNCDDTL EQU   RRNCMFD
RRNCDSTD EQU   RRNCMFD
RRNCDCSP EQU   RRNCMFD
RRNCCCSL EQU   RRNCMFC
RRNCCSIM EQU   RRNCMFC
RRNCCRCM EQU   RRNCMFC
RRNCCRIM EQU   RRNCMFC
RRNCCCRC EQU   RRNCMFC
RRNCCRST EQU   RRNCMFC
RRNCCRDQ EQU   RRNCMFC
RRNCCRCN EQU   RRNCMFC
RRNCBALT EQU   RRNCMFB
RRNCBMOD EQU   RRNCMFB
RRNCBNPL EQU   RRNCMFB
RRNCBRLS EQU   RRNCMFB
RRNCBRDS EQU   RRNCMFB
RRNCBDLR EQU   RRNCMFB
RRNCBDLH EQU   RRNCMFB
RRNCBDLO EQU   RRNCMFB
RRNCADGO EQU   RRNCMFA
RRNCADTD EQU   RRNCMFA
RRNCACDT EQU   RRNCMFA
RRNCAMBH EQU   RRNCMFA
RRNCAATI EQU   RRNCMFA
RRNCAATG EQU   RRNCMFA
RRNCAATD EQU   RRNCMFA
RRNCAALL EQU   RRNCMFA
RRNRSV55 EQU   RRNRDF+3
RRNPTASL EQU   RRNRDFB+1
RRNRSV01 EQU   RRNRDFB+1
RRNVYDON EQU   RRNRDFB+1
RRNRBBUP EQU   RRNRDFB+1
RRNRSV03 EQU   RRNRDFB
RRNRBCT2 EQU   RRNRDFB
RRNRBCT1 EQU   RRNRDFB
RRNRBSEC EQU   RRNRDFB
RRNRBCCT EQU   RRNRDFB
RRNRBCCL EQU   RRNRDFB
RRNRSV02 EQU   RRNRDFB
RRNRBMDL EQU   RRNRDFB
RRNRAPEP EQU   RRNRDFA
RRNRANCP EQU   RRNRDFA
RRNRBREM EQU   RRNRDFA
RRNRAOLT EQU   RRNRDFA
RRNRASYN EQU   RRNRDFA
RRNRADMP EQU   RRNRDFA
RRNRAIPL EQU   RRNRDFA
RRNRASHT EQU   RRNRDFA
RRNCTENT EQU   ISTRRN+170
RRNCTECM EQU   ISTRRN+168
RRNCTEIN EQU   ISTRRN+166
RRNCTETR EQU   ISTRRN+164
RRNCTECL EQU   ISTRRN+162
RRNCTELI EQU   ISTRRN+160
RRNCTEGP EQU   ISTRRN+158
RRNCTBHS EQU   ISTRRN+156
RRNBHSET EQU   ISTRRN+152
RRNTRENT EQU   ISTRRN+148
RRNRLDIP EQU   ISTRRN+147
RRNRNCUA EQU   ISTRRN+144
RRNGRPA  EQU   ISTRRN+140
RRNLUBA  EQU   RRNUCBAD+1
RRNCHQI  EQU   RRNUCBAD
RRNRSV11 EQU   RRNFLAG
RRNDSTCT EQU   RRNFLAG
RRNERPIP EQU   RRNFLAG
RRNLCDIP EQU   RRNFLAG
RRNLCDIE EQU   RRNFLAG
RRNLCSIP EQU   RRNFLAG
RRNRBISA EQU   RRNFLAG
RRNRSV89 EQU   RRNFLAG
RRNPRE   EQU   ISTRRN
RLCRVPT2 EQU   ISTRLC+80
RLCRVPT1 EQU   ISTRLC+79
RLCLCCUA EQU   ISTRLC+76
RLCUCBAD EQU   RLCADR+1
RLCRSVDE EQU   RLCFLAG
RLCACNT  EQU   RLCFLAG
RLCRSV14 EQU   RLCFLAG
RLCRBISA EQU   RLCFLAG
RLCRSV22 EQU   RLCFLAG
RLCPRE   EQU   ISTRLC
RAPRVPT2 EQU   ISTRAP+116
RAPRVPT1 EQU   ISTRAP+112
RAPBFACT EQU   ISTRAP+111
RAPRSV17 EQU   RAPFLGC
RAPRSV16 EQU   RAPFLGC
RAPRSV15 EQU   RAPFLGC
RAPRSV14 EQU   RAPFLGC
RAPRSV13 EQU   RAPFLGC
RAPRSV12 EQU   RAPFLGC
RAPRSV11 EQU   RAPFLGC
RAPRSV10 EQU   RAPFLGC
RAPANVPC EQU   RAPFLGB
RAPASPO  EQU   RAPFLGB
RAPAPPO  EQU   RAPFLGB
RAPAACQ  EQU   RAPFLGB
RAPAPRMT EQU   RAPFLGB
RAPAPASS EQU   RAPFLGB
RAPABLCK EQU   RAPFLGB
RAPALLF  EQU   RAPFLGB
RAPRSV06 EQU   RAPFLG
RAPRSV05 EQU   RAPFLG
RAPRSV04 EQU   RAPFLG
RAPRSV03 EQU   RAPFLG
RAPATLGN EQU   RAPFLG
RAPASLGI EQU   RAPFLG
RAPAQUI  EQU   RAPFLG
RAPABLGN EQU   RAPFLG
RAPACEQD EQU   ISTRAP+106
RAPTRPRE EQU   ISTRAP+104
RAPACEAP EQU   ISTRAP+100
RAPICEAQ EQU   ISTRAP+96
RAPICEAC EQU   ISTRAP+92
RAPICELG EQU   ISTRAP+88
RAPAPPWD EQU   ISTRAP+80
RAPACDEB EQU   ISTRAP+76
RAPACBA  EQU   ISTRAP+72
RAPPRE   EQU   ISTRAP
RDTVSRPL EQU   ISTRDT+132
RDTCRSPW EQU   ISTRDT+124
RDTCRSDS EQU   ISTRDT+116
@NM00008 EQU   ISTRDT+113
RRNSTCNT EQU   RDTSTCNT
RRNVYRPH EQU   RDTVYRPH
RDTTPAB  EQU   ISTRDT+104
RDTDPAB  EQU   ISTRDT+100
RDTEPAB  EQU   ISTRDT+96
RDTVPAB  EQU   ISTRDT+92
RDTRSV01 EQU   RDTFLAGB
RDTBHSET EQU   RDTFLAGB
RDTCTCFL EQU   RDTFLAGB
RDTCTPGD EQU   RDTFLAGB
RDTPRGDN EQU   RDTFLAGB
RDTOUERP EQU   RDTFLAGB
RDTLGCT  EQU   ISTRDT+90
RDTNODID EQU   ISTRDT+89
RDTMAXID EQU   ISTRDT+88
RDTCTSNT EQU   ISTRDT+86
RDTFLAGS EQU   ISTRDT+84
RDTBACK  EQU   ISTRDT+80
RDTFORW  EQU   ISTRDT+76
RDTLEN   EQU   RDTPLEN+1
RDTPRILS EQU   RDTPRIOR
RDTPRISW EQU   RDTPRIOR
RDTPRIRN EQU   RDTPRIOR
RDTPRILC EQU   RDTPRIOR
RDTPRIAP EQU   RDTPRIOR
@NM00007 EQU   RDTPRIOR
RDTPRE   EQU   ISTRDT
RCPRSV05 EQU   ISTRCPRE+120
RCPRSV04 EQU   ISTRCPRE+116
RCPRSV03 EQU   ISTRCPRE+112
RCPINTA  EQU   RCPLGNIN+16
RCPLGNCT EQU   RCPLGNIN+8
RCPLGNAP EQU   RCPLGNIN
@NM00006 EQU   RCPPMODE
RCPRRECD EQU   RCPPMODE
RCPRBASC EQU   RCPPMODE
RCPBFLIM EQU   ISTRCPRE+90
RCPBHSI2 EQU   ISTRCPRE+89
RCPBHSI1 EQU   ISTRCPRE+88
RCPACETR EQU   ISTRCPRE+84
RCPICEAQ EQU   ISTRCPRE+80
RCPLNAPA EQU   ISTRCPRE+76
RCPICELN EQU   ISTRCPRE+72
RCPPRE   EQU   ISTRCPRE
RPRCONID EQU   ISTRPRE+63
RPRCLVPD EQU   RPRFLAGC
RPRINIMM EQU   RPRFLAGD
RPRRSV05 EQU   RPRFLAGD
RPRCONP  EQU   RPRFLAGD
RPRACTP  EQU   RPRFLAGD
RPRRSON  EQU   RPRFLAGD
RPRCONCT EQU   RPRFLAGD
RPRLTASN EQU   RPRFLAGD
RPRPTHCT EQU   ISTRPRE+60
RPRSWDAF EQU   ISTRPRE+58
RPRSTPCT EQU   ISTRPRE+56
RPRRVPT1 EQU   ISTRPRE+52
RPRDEVCH EQU   ISTRPRE+44
RPRNCBA  EQU   ISTRPRE+40
RPRNSNEA EQU   ISTRPRE+36
RPRLGONB EQU   ISTRPRE+32
RPRLGONF EQU   ISTRPRE+28
RPRHDTYP EQU   ISTRPRE+27
RPRTIOCT EQU   ISTRPRE+26
RPRPEPCT EQU   ISTRPRE+24
RPRRSV03 EQU   RPRCAUSE
RPRRSYNC EQU   RPRCAUSE
RPRCRCPT EQU   RPRCAUSE
RPRNOSRT EQU   RPRCAUSE
RPRINTST EQU   RPRFLAGB
RPRVYIMM EQU   RPRFLAGB
RPRHLVPD EQU   RPRFLAGB
RPRONLIN EQU   RPRFLAGB
RPRVIODN EQU   RPRFLAGB
RPRAOPN  EQU   RPRFLAGB
RPRENTVT EQU   RPRFLAGB
RPRENTVH EQU   RPRFLAGB
RPRLIVE  EQU   RPRFLAGA
RPRVRYPD EQU   RPRFLAGA
RPRENTED EQU   RPRFLAGA
RPRENTIO EQU   RPRFLAGA
RPRENTBF EQU   RPRFLAGA
RPRTIED  EQU   RPRFLAGA
RPRINV   EQU   RPRFLAGA
RPRACT   EQU   RPRFLAGA
RPRENTRY EQU   ISTRPRE+20
RPRPELEN EQU   ISTRPRE+18
RPRELEN  EQU   ISTRPRE+16
RPRRLOCK EQU   ISTRPRE+12
RPRDAF   EQU   RPRCOMID+2
RPRSAF   EQU   RPRCOMID
RPRNAME  EQU   ISTRPRE
LDPTCEP  EQU   ISTLDPRM+24
LDPRSV02 EQU   ISTLDPRM+22
LDPRSV01 EQU   LDPFB2
LDPACTIF EQU   LDPFB2
LDPATACH EQU   LDPFB2
LDPFLAST EQU   LDPFB2
LDPRSV03 EQU   LDPFG
LDPPB    EQU   LDPFG
LDPFX    EQU   LDPFG
LDPDCBA  EQU   ISTLDPRM+16
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
LOKXCL   EQU   @NM00004
LOKPRY   EQU   @NM00004
@NM00005 EQU   @NM00004
@NM00003 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00308 EQU   @RC00297
@RT00372 EQU   @EL00001
@RC00512 EQU   @RC00510
@RC00676 EQU   @RC00674
@RC00795 EQU   @RC00791
@RC00311 EQU   @RC00308
@RC00514 EQU   @RC00512
@RC00797 EQU   @RC00795
@RC00803 EQU   @RC00795
@RC00312 EQU   @RC00311
@ENDDATA EQU   *
         END   ISTINCRD,(C'PLS1341',0603,77305)
