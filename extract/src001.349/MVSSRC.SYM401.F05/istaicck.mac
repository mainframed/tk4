         TITLE 'API CHECK PROCESSOR                                    *
                        '
ISTAICCK CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTAICCK  77.244'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                             /* ALLOW TWO ENTRY POINTS(VS1) @DM12938*/
          BALR  12,0
CCKBASE   DS    0H
          USING CCKBASE,12
*CCKADDR:                                                          0035
*   ;                               /* BASE ADDRESS          @XM01124*/
CCKADDR  DS    0H                                                  0036
*   CCKERSW=0;                      /* INITIALIZE ERROR SWITCH       */
*                                                                  0036
         SLR   @06,@06                                             0036
         LR    CCKERSW,@06                                         0036
*   /*****************************************************************/
*   /*                                                               */
*   /* IF AN RPL EXIT IS SPECIFIED BUT NOT SCHEDULED, THEN HANDLE AS */
*   /* A CONTROL BLOCK ERROR.                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0037
*   CCKEXTBS=CCKRPLAD->RPLDACB->ACBUEL;                            0037
         L     @09,RPLDACB(,CCKRPLAD)                              0037
         L     CCKEXTBS,ACBUEL(,@09)                               0037
*   RFY                                                            0038
*     IFGEXLST BASED(CCKEXTBS);                                    0038
*   IF RPLNEXIT='0'B THEN                                          0039
         TM    RPLNEXIT(CCKRPLAD),B'01000000'                      0039
         BNZ   @RF00039                                            0039
*     DO;                                                          0040
*       IF RPLEXSCH='0'B THEN                                      0041
         TM    RPLEXSCH(CCKRPLAD),B'10000000'                      0041
         BNZ   @RF00041                                            0041
*         DO;                                                      0042
*           CCKREG0='18'X;          /*                       @D31KKLQ*/
*                                                                  0043
         LA    CCKREG0,24                                          0043
*           /*********************************************************/
*           /*                                                       */
*           /* IF LOGICAL ERROR EXIT ADDRESS IS IN APPLICATION EXLST */
*           /* AND ACTIVE FLAG SET, THEN BRANCH TO THAT EXIT FOR A   */
*           /* CONTROL BLOCK ERROR. RE-ESTABLISH BASE REGISTER UPON  */
*           /* RETURN.                                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0044
*           IF CCKEXTBS>0&EXLLEN2>=20&EXLLERP^='00'X/*       @ZA18898*/
*             THEN                                                 0044
         CR    CCKEXTBS,@06                                        0044
         BNH   @RF00044                                            0044
         LH    @09,EXLLEN2(,CCKEXTBS)                              0044
         CH    @09,@CH00616                                        0044
         BL    @RF00044                                            0044
         L     @09,EXLLERP(,CCKEXTBS)                              0044
         LTR   @09,@09                                             0044
         BZ    @RF00044                                            0044
*             DO;                   /*                       @D31JKNL*/
*               RFY                                                0046
*                 CCKLNKRG RSTD;                                   0046
*               CCKLNKRG=EXLLERP;                                  0047
         LR    CCKLNKRG,@09                                        0047
*               GENERATE SETS(CREG2,CREG3,CREG4,CREG5,CREG6,CREG7,CREG8
*                   ,CREG9,CREGA,CREGB,CREGC,CREGD,CREGE,CREGF);   0048
               LM 2,12,28(13)
               BALR 14,15
CCKDISP1 EQU *-CCKADDR
               LR 12,14
               LA 14,CCKDISP1
               SR 12,14
*             END;                                                 0049
*           ELSE                                                   0050
*             CREGF=4;              /* RETURN CODE=ERROR     @D31KKLQ*/
         B     @RC00044                                            0050
@RF00044 LA    CREGF,4                                             0050
*           CCKERSW=1;              /* SET ERROR SWITCH              */
@RC00044 LA    CCKERSW,1                                           0051
*         END;                                                     0052
*       ELSE                                                       0053
*         RPLEXSCH='0'B;            /* TURN OFF EXIT SCHEDULED       */
         B     @RC00041                                            0053
@RF00041 NI    RPLEXSCH(CCKRPLAD),B'01111111'                      0053
*     END;                                                         0054
*   ELSE                                                           0055
*     DO;                                                          0055
*                                                                  0055
         B     @RC00039                                            0055
@RF00039 DS    0H                                                  0056
*       /*************************************************************/
*       /*                                                           */
*       /* SET BASE ADDRESS FOR THE APPLICATION ECB. IF ECB IS       */
*       /* POINTED TO BY THE RPL, THEN SET THE BASE SO THE RPLECB    */
*       /* DISPLACEMENT ADDED TO THE BASE EQUALS THE ECB ADDRESS.    */
*       /* OTHERWISE, SET THE BASE TO THE ADDRESS OF THE RPL.        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0056
*       RFY                                                        0056
*         CCKECB RSTD;                                             0056
*       IF RPLECBIN='1'B THEN                                      0057
         TM    RPLECBIN(CCKRPLAD),B'00000001'                      0057
         BNO   @RF00057                                            0057
*         CCKECB=RPLECB-(ADDR(RPLECB)-CCKRPLAD);                   0058
         LA    CCKECB,RPLECB(,CCKRPLAD)                            0058
         SLR   CCKECB,CCKRPLAD                                     0058
         LCR   CCKECB,CCKECB                                       0058
         AL    CCKECB,RPLECB(,CCKRPLAD)                            0058
*       ELSE                                                       0059
*         CCKECB=CCKRPLAD;                                         0059
*                                                                  0059
         B     @RC00057                                            0059
@RF00057 LR    CCKECB,CCKRPLAD                                     0059
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE ECB IS NOT POSTED COMPLETE, THEN WAIT FOR THE      */
*       /* POSTING TO OCCUR.                                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0060
*       IF CCKECB->RPLPOST='0'B THEN                               0060
@RC00057 TM    RPLPOST(CCKECB),B'01000000'                         0060
         BNZ   @RF00060                                            0060
*         DO;                                                      0061
*           RFY                                                    0062
*            (CCKSAVE0,                                            0062
*             CCKSAVE1) RSTD;                                      0062
*           CCKSAVE0=CCKREG0;                                      0063
         LR    CCKSAVE0,CCKREG0                                    0063
*           RFY                                                    0064
*             CCKREG0 UNRSTD;                                      0064
*           CCKSAVE1=CCKRPLAD;      /* SAVE RPL ADDRESS ACROSS VWAIT */
         LR    CCKSAVE1,CCKRPLAD                                   0065
*           CCKRPLAD=CCKECB+(ADDR(RPLECB)-CCKRPLAD);               0066
         LA    @06,RPLECB(,CCKRPLAD)                               0066
         SLR   @06,CCKRPLAD                                        0066
         ALR   @06,CCKECB                                          0066
         LR    CCKRPLAD,@06                                        0066
*                                                                  0067
*/*VWAIT  ECB((1))                                                   */
*                                                                  0067
*           DO;                                                    0067
*             DCL                                                  0068
*               GPR01F FIXED(31) REG(01);                          0068
*             DCL                                                  0069
*               GPR01P PTR(31) REG(01);/* DECLARE AND RESTRICT REG 1 */
*             RESPECIFY                                            0070
*               GPR01F RSTD;        /* INVOKE XREGSET MACRO TO TEST
*                                      ECB PARM VALIDITY             */
*/*XREGSET  PPARM((1))RREG(1,GPR01F)PID('ECB')                       */
*                                                                  0071
*             DO;                                                  0071
*                                                                  0071
*/*PARM ALREADY IN PROPER REGISTER                                   */
*                                                                  0072
*             END;                  /* XREGSET                       */
*             GEN;                                                 0073
         WAIT 1,ECB=(1)
*             RESPECIFY                                            0074
*               GPR01F UNRSTD;      /* UNRESTRICT REG 1              */
*           END;                    /* VWAIT                         */
*           RFY                                                    0076
*             CCKREG0 RSTD;                                        0076
*CCKRIUWT:                                                         0077
*           BC(15,NOTHALT);         /* BRANCH AROUND HALT CODE     0077
*                                                            @ZA26004*/
*                                                                  0077
CCKRIUWT BC    15,NOTHALT                                          0077
*           /*********************************************************/
*           /*                                                       */
*           /* THE FOLLOWING CODE GETS ENTERED WHEN VTAM IS          */
*           /* TERMINATING AND ISTRAMA2 FINDS AN RB WITH RESUME      */
*           /* ADDRESS OF CCKRIUWT. ISTRAMA2 BUMPS THE RESUME ADDRESS*/
*           /* BY 4 (TO POINT TO THIS CODE) AND SETS THE RB WAIT     */
*           /* COUNT TO 0 (TO MAKE THE RB DISPATCHABLE).             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0078
*           CCKSAVE1->RPLRTNCD='10'X;/* SET HALT RETURN CODE @ZA26004*/
         MVI   RPLRTNCD(CCKSAVE1),X'10'                            0078
*           CCKSAVE1->RPLFDB2='0D'X;/* AND MINOR CODE        @ZA26004*/
         MVI   RPLFDB2(CCKSAVE1),X'0D'                             0079
*           ECBCCKPT='0'B;          /* TURN OFF THE ECB WAIT BIT   0080
*                                                            @ZA26004*/
         NI    ECBCCKPT(CCKRPLAD),B'01111111'                      0080
*NOTHALT:                                                          0081
*           CCKREG0=CCKSAVE0;                                      0081
NOTHALT  LR    CCKREG0,CCKSAVE0                                    0081
*           CCKRPLAD=CCKSAVE1;                                     0082
         LR    CCKRPLAD,CCKSAVE1                                   0082
*           RFY                                                    0083
*            (CCKSAVE0,                                            0083
*             CCKSAVE1) UNRSTD;                                    0083
*         END;                                                     0084
*       ELSE                                                       0085
*         ;                                                        0085
@RF00060 DS    0H                                                  0086
*       CCKECB->RPLPOST='0'B;       /* TURN OFF THE POST BIT         */
         NI    RPLPOST(CCKECB),B'10111111'                         0086
*     END;                                                         0087
*   IF CCKERSW=0 THEN                                              0088
@RC00039 SLR   @06,@06                                             0088
         CR    CCKERSW,@06                                         0088
         BNE   @RF00088                                            0088
*     DO;                                                          0089
*       RFY                                                        0090
*         CCKERSW UNRSTD;                                          0090
*       RPLACTIV=CCKBYTOF;                                         0091
         MVC   RPLACTIV(1,CCKRPLAD),CCKBYTOF                       0091
*       IF RPLRTNCD=0 THEN                                         0092
         CLI   RPLRTNCD(CCKRPLAD),0                                0092
         BNE   @RF00092                                            0092
*         DO;                       /*                       @D31KKLQ*/
*           CCKREG0=RPLFDB2;        /*                       @D31KKLQ*/
         SLR   CCKREG0,CCKREG0                                     0094
         IC    CCKREG0,RPLFDB2(,CCKRPLAD)                          0094
*           CREGF=0;                /*                       @D31KKLQ*/
         LR    CREGF,@06                                           0095
*         END;                                                     0096
*       ELSE                                                       0097
*         DO;                       /*                       @D31KKLQ*/
*                                                                  0097
         B     @RC00092                                            0097
@RF00092 DS    0H                                                  0098
*           /*********************************************************/
*           /*                                                       */
*           /* IF THE RPL RETURN CODE INDICATES A LOGICAL ERROR, THEN*/
*           /* CHECK FOR AN APPLICATION LOGICAL ERROR EXIT.          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0098
*           IF CCKEXTBS>0&EXLLEN2>=20 THEN                         0098
         LTR   CCKEXTBS,CCKEXTBS                                   0098
         BNP   @RF00098                                            0098
         LH    @08,EXLLEN2(,CCKEXTBS)                              0098
         CH    @08,@CH00616                                        0098
         BL    @RF00098                                            0098
*             CREGE=EXLLERP;        /*                       @D31JKNL*/
         L     CREGE,EXLLERP(,CCKEXTBS)                            0099
*           ELSE                                                   0100
*             CREGE=0;              /*                       @D31KKLQ*/
         B     @RC00098                                            0100
@RF00098 SLR   CREGE,CREGE                                         0100
*           IF CCKEXTBS>0&EXLLEN2>=15 THEN                         0101
@RC00098 LTR   CCKEXTBS,CCKEXTBS                                   0101
         BNP   @RF00101                                            0101
         LH    @08,EXLLEN2(,CCKEXTBS)                              0101
         CH    @08,@CH00078                                        0101
         BL    @RF00101                                            0101
*             CCKLNKRG=EXLSYNP;     /* D31JKNL                       */
         L     CCKLNKRG,EXLSYNP(,CCKEXTBS)                         0102
*           ELSE                                                   0103
*             CCKLNKRG=0;                                          0103
         B     @RC00101                                            0103
@RF00101 SLR   CCKLNKRG,CCKLNKRG                                   0103
*CCKRTNCD:                                                         0104
*           ;                                                      0104
@RC00101 DS    0H                                                  0104
CCKRTNCD DS    0H                                                  0105
*           CCKREG0=RPLRTNCD;       /*                       @D31KKLQ*/
         SLR   CCKREG0,CCKREG0                                     0105
         IC    CCKREG0,RPLRTNCD(,CCKRPLAD)                         0105
*           IF CCKREG0^>'10'X THEN                                 0106
         CH    CCKREG0,@CH00624                                    0106
         BH    @RF00106                                            0106
*             DO;                   /*                       @D31KKLQ*/
*               IF CREGF=0 THEN                                    0108
         LTR   CREGF,CREGF                                         0108
         BNZ   @RF00108                                            0108
*                 CREGF=4;          /*                       @D31KKLQ*/
         LA    CREGF,4                                             0109
*               ELSE                                               0110
*                 DO;               /*                       @D31KKLQ*/
         B     @RC00108                                            0110
@RF00108 DS    0H                                                  0111
*                   GENERATE SETS(CREG2,CREG3,CREG4,CREG5,CREG6,CREG7,
*                       CREG8,CREG9,CREGA,CREGB,CREGC,CREGD,CREGE,CREGF
*                       );                                         0111
               LM 2,12,28(13)                                  @D31KKLQ
               BALR 14,15                                      @D31KKLQ
CCKDISPB EQU *-CCKADDR                                         @D31KKLQ
               LR 12,14                                        @D31KKLQ
               LA 14,CCKDISPB                                  @D31KKLQ
               SR 12,14                                        @D31KKLQ
*                 END;              /*                       @D31KKLQ*/
*             END;                  /*                       @D31KKLQ*/
*           ELSE                                                   0114
*             DO;                   /*                       @D31KKLQ*/
         B     @RC00106                                            0114
@RF00106 DS    0H                                                  0115
*               IF CREGE=0 THEN                                    0115
         LTR   CREGE,CREGE                                         0115
         BNZ   @RF00115                                            0115
*                 CREGF=4;          /*                       @D31KKLQ*/
         LA    CREGF,4                                             0116
*               ELSE                                               0117
*                 DO;               /*                       @D31KKLQ*/
         B     @RC00115                                            0117
@RF00115 DS    0H                                                  0118
*                   GENERATE SETS(CREG2,CREG3,CREG4,CREG5,CREG6,CREG7,
*                       CREG8,CREG9,CREGA,CREGB,CREGC,CREGD,CREGE,CREGF
*                       );                                         0118
               LM 2,12,28(13)                                  @D31KKLQ
               LR 15,14                                        @D31KKLQ
               BALR 14,15                                      @D31KKLQ
CCKDISPC EQU *-CCKADDR                                         @D31KKLQ
               LR 12,14                                        @D31KKLQ
               LA 14,CCKDISPC                                  @D31KKLQ
               SR 12,14                                        @D31KKLQ
*                 END;              /*                       @D31KKLQ*/
*             END;                  /*                       @D31KKLQ*/
*         END;                      /*                       @D31KKLQ*/
*     END;                          /*                       @D31KKLQ*/
*   ELSE                                                           0123
*     ;                             /*                       @D31KKLQ*/
*                                                                  0123
@RF00088 DS    0H                                                  0124
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE APPLICATION REGISTERS AND RETURN TO THE APPLICATION.  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0124
*CCKFINIS:                                                         0124
*   ;                               /* LABEL FOR SYNAD/LERAD HANDLING
*                                      BRANCH                @D31KKLQ*/
@RC00088 DS    0H                                                  0124
CCKFINIS DS    0H                                                  0125
*   GENERATE SETS(CREG2,CREG3,CREG4,CREG5,CREG6,CREG7,CREG8,CREG9,CREGA
*       ,CREGB,CREGC,CREGD,CREGE,CREGF);                           0125
         LM    1,12,24(13)
         L     14,12(13)
         BR    14
*   GEN(EJECT);                                                    0126
*                                                                  0126
         EJECT
*/* TPEPILOG                                                         */
*                                                                  0127
*   GEN(PRINT OFF);                                                0127
         PRINT OFF
*   GEN(PRINT ON);                                                 0128
*                                                                  0128
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0129
*   END ISTAICCK                                                   0129
*                                                                  0129
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IFGACBVT)                                       */
*/*%INCLUDE SYSLIB  (IFGEXLST)                                       */
*/*%INCLUDE SYSLIB  (IFGEXLVT)                                       */
*                                                                  0129
*       ;                                                          0129
@DATA    DS    0H
@CH00078 DC    H'15'
@CH00616 DC    H'20'
@CH00624 DC    XL2'10'
@DATD    DSECT
         DS    0F
ISTAICCK CSECT
         DS    0F
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTAICCK CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
CCKBITON DC    X'80000000'
CCKBYTOF DC    AL1(0)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CCKREG0  EQU   @00
CCKRPLAD EQU   @01
CCKUSRSV EQU   @13
CCKEXTBS EQU   @07
CCKERSW  EQU   @08
CCKLNKRG EQU   @15
CCKSAVE0 EQU   @10
CCKSAVE1 EQU   @11
CCKECB   EQU   @09
CREG2    EQU   @02
CREG3    EQU   @03
CREG4    EQU   @04
CREG5    EQU   @05
CREG6    EQU   @06
CREG7    EQU   @07
CREG8    EQU   @08
CREG9    EQU   @09
CREGA    EQU   @10
CREGB    EQU   @11
CREGC    EQU   @12
CREGD    EQU   @13
CREGE    EQU   @14
CREGF    EQU   @15
GPR01F   EQU   @01
CREG1    EQU   @01
GPR01P   EQU   @01
         ENTRY CCKRIUWT
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLPOST  EQU   RPLECB
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLDACB  EQU   RPLCOMN+24
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLECBIN EQU   RPLECBSW
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLEXSCH EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLACTIV EQU   RPLCOMN+69
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBUEL   EQU   ACBEXLST
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBVVIC  EQU   ACBINFLG
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBVTEXT EQU   IFGACB+76
IFGEXLST EQU   0
EXLCOMN  EQU   IFGEXLST
EXLLEN   EQU   EXLCOMN+2
EXLLEN2  EQU   EXLLEN
EXLEODF  EQU   EXLCOMN+5
EXLSYNF  EQU   EXLCOMN+10
EXLSYNP  EQU   EXLCOMN+11
EXLLERF  EQU   EXLCOMN+15
EXLLERP  EQU   EXLCOMN+16
EXLSCIPF EQU   EXLCOMN+20
EXLLGNF  EQU   EXLCOMN+25
EXLJRNF  EQU   EXLCOMN+30
EXLOPNF  EQU   EXLCOMN+35
EXLVTEXT EQU   IFGEXLST+40
EXLNLGNF EQU   EXLVTEXT
EXLRLRQF EQU   EXLVTEXT+5
EXLATTNF EQU   EXLVTEXT+15
EXLTPNDF EQU   EXLVTEXT+20
EXLDFAS  EQU   0
EXLDFASF EQU   EXLDFAS
EXLRESP  EQU   0
EXLRESPF EQU   EXLRESP
IFGEXLEF EQU   0
EXLENTRY EQU   IFGEXLEF
EXLFLAG  EQU   EXLENTRY
EXLENFL  EQU   EXLFLAG
EXLEXITP EQU   EXLENTRY+1
ECBCCK   EQU   0
ECBCCK1  EQU   ECBCCK
ECBCCKPT EQU   ECBCCK1
ISTACB   EQU   0
ISTRPL   EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
EXLEADDR EQU   EXLEXITP
@NM00056 EQU   EXLENFL
EXLLNK   EQU   EXLENFL
EXLACTM  EQU   EXLENFL
EXLSPEC  EQU   EXLENFL
EXLRESPP EQU   EXLRESP+1
@NM00055 EQU   EXLRESPF
EXLRESPK EQU   EXLRESPF
EXLRESPA EQU   EXLRESPF
EXLRESPS EQU   EXLRESPF
EXLDFASP EQU   EXLDFAS+1
@NM00054 EQU   EXLDFASF
EXLDFASK EQU   EXLDFASF
EXLDFASA EQU   EXLDFASF
EXLDFASS EQU   EXLDFASF
EXLTPNDP EQU   EXLVTEXT+21
@NM00053 EQU   EXLTPNDF
EXLTPNDK EQU   EXLTPNDF
EXLTPNDA EQU   EXLTPNDF
EXLTPNDS EQU   EXLTPNDF
EXLATTNP EQU   EXLVTEXT+16
@NM00052 EQU   EXLATTNF
EXLATTNK EQU   EXLATTNF
EXLATTNA EQU   EXLATTNF
EXLATTNS EQU   EXLATTNF
@NM00051 EQU   EXLVTEXT+10
EXLRLRQP EQU   EXLVTEXT+6
@NM00050 EQU   EXLRLRQF
EXLRLRQK EQU   EXLRLRQF
EXLRLRQA EQU   EXLRLRQF
EXLRLRQS EQU   EXLRLRQF
EXLNLGNP EQU   EXLVTEXT+1
@NM00049 EQU   EXLNLGNF
EXLNLGNK EQU   EXLNLGNF
EXLNLGNA EQU   EXLNLGNF
EXLNLGNS EQU   EXLNLGNF
EXLOPNP  EQU   EXLCOMN+36
@NM00048 EQU   EXLOPNF
EXLOPNK  EQU   EXLOPNF
EXLOPNA  EQU   EXLOPNF
EXLOPNS  EQU   EXLOPNF
EXLJRNP  EQU   EXLCOMN+31
@NM00047 EQU   EXLJRNF
EXLJRNK  EQU   EXLJRNF
EXLJRNA  EQU   EXLJRNF
EXLJRNS  EQU   EXLJRNF
EXLLGNP  EQU   EXLCOMN+26
@NM00046 EQU   EXLLGNF
EXLLGNK  EQU   EXLLGNF
EXLLGNA  EQU   EXLLGNF
EXLLGNS  EQU   EXLLGNF
EXLSCIPP EQU   EXLCOMN+21
@NM00045 EQU   EXLSCIPF
EXLSCIPK EQU   EXLSCIPF
EXLSCIPA EQU   EXLSCIPF
EXLSCIPS EQU   EXLSCIPF
@NM00044 EQU   EXLLERF
EXLLERK  EQU   EXLLERF
EXLLERA  EQU   EXLLERF
EXLLERS  EQU   EXLLERF
@NM00043 EQU   EXLSYNF
EXLSYNK  EQU   EXLSYNF
EXLSYNA  EQU   EXLSYNF
EXLSYNS  EQU   EXLSYNF
EXLEODP  EQU   EXLCOMN+6
@NM00042 EQU   EXLEODF
EXLEODK  EQU   EXLEODF
EXLEODA  EQU   EXLEODF
EXLEODS  EQU   EXLEODF
@NM00041 EQU   EXLCOMN+4
EXLSTYP  EQU   EXLCOMN+1
EXLID    EQU   EXLCOMN
@NM00040 EQU   ACBVTEXT+8
@NM00039 EQU   ACBVTEXT+6
ACBRTN   EQU   ACBVTEXT
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00038 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00037 EQU   ACBINFLG+1
ACBBYPSS EQU   ACBINFLG
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00036 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00035 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00034 EQU   ACBOFLGS
ACBDEB   EQU   ACBDDNM+5
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00033 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00032 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00031 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00030 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00029 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00028 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00027 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
RPLSEQNO EQU   RPLOF60+6
@NM00026 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00025 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00024 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00023 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00022 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00021 EQU   RPLRESP
@NM00020 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00019 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00018 EQU   RPLVTFL1
@NM00017 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00016 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00015 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00014 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00013 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00012 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00011 EQU   RPLOPT12
@NM00010 EQU   RPLOPT12
@NM00009 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00008 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00007 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00006 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00005 EQU   RPLRBAR+3
@NM00004 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00003 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00002 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00001 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00041 EQU   @RC00039
@RC00092 EQU   @RC00088
@RC00106 EQU   @RC00088
@RC00115 EQU   @RC00088
@RC00108 EQU   @RC00106
@ENDDATA EQU   *
         END   ISTAICCK,(C'PLS1947',0603,77244)
