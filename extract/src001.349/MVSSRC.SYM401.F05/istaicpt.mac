         TITLE 'ISTAICPT -- VS2 API USER POST ROUTINE                  *
                        '
ISTAICPT CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTAICPT  78.158'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
*                                                                  0295
          USING ISTAICPT,CRETCODE RE ESTABLISH BASE REG 15    @Z30APGF
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                          START OF CODE                              *
*                                                                     *
*  THIS MODULE CAN BE ENTERED WITH REGISTER 13 EITHER POINTING        *
*   TO A SAVE AREA OR EQUAL TO ZERO                                   *
*  CONSEQUENTLY REGISTER 15 IS USED AS THE BASE REGISTER UNTIL        *
*   THE CONTENTS OF REGISTER 13 CAN BE EVALUATED                      *
*  WHEN WE LEAVE THIS GENERATED CODE REGISTER 7  WILL BE EITHER       *
*   ZERO OR WILL CONTAIN THE RETURN ADDRESS OF THE CALLER             *
*                                                                     *
*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - **
*                                                                     *
CPTBEG1   EQU   *
          LTR   CSAVE,CSAVE     IS THERE A SAVE AREA ADDRESS IN REG 13
          BNZ   CPTBEG2         BRANCH IF ADDRESS IS PRESENT
          LR    CREGSV,CRETURN           SAVE RETURN ADDRESS IN REG7
          B     CPTBEG3
CPTBEG2   EQU   *
          STM   CRETURN,CBASE,12(CSAVE)        SAVE CALLERS REGISTERS
          SR    CREGSV,CREGSV                  CLEAR REG 7
CPTBEG3   EQU   *
          BALR  CBASE,0            ESTABLISH THE BASE REG FOR ISTAICPT
          DROP  CRETCODE
          USING *,CBASE
          SR    CRETCODE,CRETCODE    INITAILIZE REG FOR RETURN CODES
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*  IF REGISTER 7  IS ZERO THEN                                     */
*/*   THE USER PROVIDED A SAVE AREA POINTER IN REGISTER 13           */
*/*                                                                  */
*/*  SINCE REGISTER 13 WILL PROBABLY BE DESTROYED ACROSS SOME        */
*/*   MACRO CALLED ROUTINES  REGISTER 7  IS USED TO SAVE THE         */
*/*   CONTENTS OF REGISTER 13 AND WILL  HAVE ITS HIGH ORDER BIT      */
*/*   SET ON                                                         */
*/*                                                                  */
*/*  IF REGISTER 7  WAS NOT ZERO THEN                                */
*/*   THEN NO SAVE AREA POINTER WAS PASSED BY THE CALLER AND         */
*/*   REGISTER 7  NOW CONTAINS THE RETURN ADDRESS OF THE CALLER      */
*/*   WITH ITS HIGH ORDER BIT CLEARED TO INDICATE IT CONTAINS        */
*/*   THE RETURN ADDRESS OF THE CALLER                               */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0296
*   IF CREGSV=0 THEN                                               0296
         LTR   CREGSV,CREGSV                                       0296
         BNZ   @RF00296                                            0296
*     DO;                           /* WAS A SAVE AREA PROVIDED      */
*       CREGSV=CSAVE;               /* SAVE POINTER ACROSS MODULE    */
         LR    CREGSV,CSAVE                                        0298
*       CREGSV=CREGSV×CHIBIT;       /* INDICATE SAVE AREA POINTER    */
         O     CREGSV,@CF01794                                     0299
*     END;                                                         0300
*   ELSE                            /* NO SAVE AREA PTR PROVIDED     */
*     CREGSV=CREGSV&CHIOFF;         /* INDICATE RETURN ADDRESS       */
         B     @RC00296                                            0301
@RF00296 N     CREGSV,@CF01792                                     0301
*   CSAVE=ADDR(RPHWORK);            /* SET REG SAVE AREA     @Z30PPGF*/
@RC00296 LA    CSAVE,RPHWORK(,RPHPTR)                              0302
*                                                                  0303
*/*VMDESET  ((CRETCODE),ZERO)                                        */
*                                                                  0303
*   DO;                             /* INVOKE MODESET MACRO          */
*     GEN;                                                         0304
         MODESET EXTKEY=ZERO,WORKREG=2
*     CRETCODE=0;                   /* PUT RETURN CODE IN RCREG      */
         SLR   CRETCODE,CRETCODE                                   0305
*   END;                            /* VMDESET GET INTO KEY ZERO   0306
*                                                            @ZM40773*/
*   RFY                                                            0307
*     COPYRPL RSTD;                                                0307
*   CRPLPTR=RPHWEA;                 /* GET PTR TO COPIED RPL FOR RPL
*                                      BASE                  @Z30PPGF*/
         L     CRPLPTR,RPHWEA(,RPHPTR)                             0308
*   RFY                                                            0309
*     MPSTPTR RSTD;                 /* RESTRICT MPST PTR FOR REST OF
*                                      MODULE                @ZM32701*/
*   MPSTPTR=RPHTSKID->PSTMPSTP;     /* GET MPST ADDRESS      @ZM32701*/
         L     @14,RPHTSKID(,RPHPTR)                               0310
         L     MPSTPTR,PSTMPSTP(,@14)                              0310
*   RFY                                                            0311
*     ISTMPST BASED(MPSTPTR);       /* COVER MPST WITH OVERLAY     0311
*                                                            @ZM32701*/
*   RFY                                                            0312
*     ISTACDEB BASED(ACBDEB-(LENGTH(ACDDBPFX)+LENGTH(ACDVTPRX)));/*
*                                                            @Z40GKD1*/
*   IF ACDABEND=CBITON              /* CHECK IF ABEND IN PROGRESS  0313
*                                                            @Z40GKD1*/
*     THEN                                                         0313
         L     @14,RPLDACB(,CRPLPTR)                               0313
         L     @14,ACBDEB-1(,@14)                                  0313
         LA    @14,0(,@14)                                         0313
         TM    ACDABEND-24(@14),B'01000000'                        0313
         BNO   @RF00313                                            0313
*     DO;                           /* ABEND IS IN PROGFRESS THEN  0314
*                                                            @Z40GKD1*/
*       RFY                                                        0315
*        (ATCVTPTR,                                                0315
*         OLDCRPL,                                                 0315
*         NEWCRPL,                                                 0315
*         OLDRCNT,                                                 0315
*         NEWCNT) RSTD;             /*                       @ZM32701*/
*       DO;                         /* LISATCVT                    0316
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*         ATCVTPTR=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0317
*       END;                        /* LISATCVT                      */
*       RFY                                                        0319
*         ISTATCVT BASED(ATCVTPTR); /*                       @Z30PPGF*/
*       IF ATCRPLAC>=ATCRPLCT THEN  /* IF LIMIT OF CRPL ON ATCVT   0320
*                                      REACHED RELSTORE THE CRPL DCR
*                                      4214                          */
         CLC   ATCRPLAC(2,ATCVTPTR),ATCRPLCT(ATCVTPTR)             0320
         BL    @RF00320                                            0320
*/* RELSTORE BUFADDR(CRPLPTR)SAVE(YES)CLEAR(NO)                      */
*                                                                  0321
*         DO;                                                      0321
*                                                                  0321
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0322
*           DCL                                                    0322
*             GPR00F FIXED(31) REG(00);                            0322
*           DCL                                                    0323
*             GPR00P PTR(31) REG(00);                              0323
*           DCL                                                    0324
*             GPR01F FIXED(31) REG(01);                            0324
*           DCL                                                    0325
*             GPR01P PTR(31) REG(01);                              0325
*           DCL                                                    0326
*             GPR02F FIXED(31) REG(02);                            0326
*           DCL                                                    0327
*             GPR02P PTR(31) REG(02);                              0327
*           DCL                                                    0328
*             GPR03F FIXED(31) REG(03);                            0328
*           DCL                                                    0329
*             GPR03P PTR(31) REG(03);                              0329
*           DCL                                                    0330
*             GPR04F FIXED(31) REG(04);                            0330
*           DCL                                                    0331
*             GPR04P PTR(31) REG(04);                              0331
*           DCL                                                    0332
*             GPR05F FIXED(31) REG(05);                            0332
*           DCL                                                    0333
*             GPR05P PTR(31) REG(05);                              0333
*           DCL                                                    0334
*             GPR06F FIXED(31) REG(06);                            0334
*           DCL                                                    0335
*             GPR06P PTR(31) REG(06);                              0335
*           DCL                                                    0336
*             GPR07F FIXED(31) REG(07);                            0336
*           DCL                                                    0337
*             GPR07P PTR(31) REG(07);                              0337
*           DCL                                                    0338
*             GPR08F FIXED(31) REG(08);                            0338
*           DCL                                                    0339
*             GPR08P PTR(31) REG(08);                              0339
*           DCL                                                    0340
*             GPR09F FIXED(31) REG(09);                            0340
*           DCL                                                    0341
*             GPR09P PTR(31) REG(09);                              0341
*           DCL                                                    0342
*             GPR10F FIXED(31) REG(10);                            0342
*           DCL                                                    0343
*             GPR10P PTR(31) REG(10);                              0343
*           DCL                                                    0344
*             GPR11F FIXED(31) REG(11);                            0344
*           DCL                                                    0345
*             GPR11P PTR(31) REG(11);                              0345
*           DCL                                                    0346
*             GPR12F FIXED(31) REG(12);                            0346
*           DCL                                                    0347
*             GPR12P PTR(31) REG(12);                              0347
*           DCL                                                    0348
*             GPR13F FIXED(31) REG(13);                            0348
*           DCL                                                    0349
*             GPR13P PTR(31) REG(13);                              0349
*           DCL                                                    0350
*             GPR14F FIXED(31) REG(14);                            0350
*           DCL                                                    0351
*             GPR14P PTR(31) REG(14);                              0351
*           DCL                                                    0352
*             GPR15F FIXED(31) REG(15);                            0352
*           DCL                                                    0353
*             GPR15P PTR(31) REG(15);                              0353
*           RFY                                                    0354
*            (GPR02P,                                              0354
*             GPR03P,                                              0354
*             GPR04P,                                              0354
*             GPR15P) RSTD;                                        0354
*           RFY                                                    0355
*            (GPR01P,                                              0355
*             GPR13P) RSTD;                                        0355
*           GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);     0356
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*           RFY                                                    0357
*             GPR13P UNRSTD;                                       0357
*           GPR04P=CRPLPTR;                                        0358
         LR    GPR04P,CRPLPTR                                      0358
*           DCL                                                    0359
*             1 FMZA0010 FIXED(31) STATIC LOCAL,                   0359
*              2 * FIXED(8) INIT(64),                              0359
*              2 * PTR(24) INIT(0);                                0359
*           GPR03F=FMZA0010;                                       0360
         L     GPR03F,FMZA0010                                     0360
*           DO;                     /* LISATCVT                    0361
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*             GPR15P=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0362
*           END;                    /* LISATCVT                      */
*           GPR02P=GPR15P->ATCBPDA;                                0364
         L     GPR02P,ATCBPDA(,GPR15P)                             0364
*           GPR15P=GPR15P->ATCSMRS;                                0365
         L     GPR15P,ATCSMRS(,GPR15P)                             0365
*           DCL                                                    0366
*             FMZL0010 BASED(GPR15P) LABEL VALUERANGE(*);          0366
*           CALL FMZL0010;                                         0367
         BALR  @14,@15                                             0367
*           RFY                                                    0368
*             GPR13P RSTD;                                         0368
*           GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);     0369
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*           RFY                                                    0370
*            (GPR01P,                                              0370
*             GPR13P) UNRSTD;                                      0370
*           RFY                                                    0371
*            (GPR02P,                                              0371
*             GPR03P,                                              0371
*             GPR04P,                                              0371
*             GPR15P) UNRSTD;                                      0371
*         END;                      /* *********END OF RELSTORE    0372
*                                      EXPANSION*********            */
*       ELSE                                                       0373
*         DO;                       /* LESS THAN LIMIT, PUT CRPL ON
*                                      MPST QUEUE            @Z30PPGF*/
         B     @RC00320                                            0373
@RF00320 DS    0H                                                  0374
*           COPYRPL=CRPLPTR;        /* PUT RPL ADDR IN COPYRPL     0374
*                                                            @ZA17887*/
         LR    COPYRPL,CRPLPTR                                     0374
*/*SMSID  BUFF(COPYRPL)TSKID(0)                                      */
*                                                                  0375
*           DO;                                                    0375
*             DCL                                                  0376
*               1 CMZ0026A PTR(31) BASED((COPYRPL)-8),             0376
*                2 * BIT(8),                                       0376
*                2 CMZ0026 PTR(24);                                0376
*             CMZ0026=(0);                                         0377
         LR    @11,COPYRPL                                         0377
         AL    @11,@CF03619                                        0377
         SLR   @08,@08                                             0377
         STCM  @08,7,CMZ0026-1(@11)                                0377
*           END;                    /* SMSID DISSOCIATE CRPL FROM  0378
*                                      USER TASK             @Z40GKD1*/
*           OLDRCNT=ATCRPLCN;       /* GET CURRENT COUNT FIELD DCR 0379
*                                      4214                          */
         L     OLDRCNT,ATCRPLCN(,ATCVTPTR)                         0379
*           OLDCRPL=ATCCRPLQ;       /* GET CURRENT CRPL PTR ON ATCVT
*                                      DCR4214                       */
         L     OLDCRPL,ATCCRPLQ(,ATCVTPTR)                         0380
*           NEWCRPL=COPYRPL;        /* SET UP ADDR OF NEW CRPL FOR 0381
*                                      MPST                  @Z30PPGF*/
         LR    NEWCRPL,COPYRPL                                     0381
*NQCRPLL1:                                                         0382
*           CRPRRPLP=OLDCRPL;       /* SET UP LINK FIELD     @Z30PPGF*/
NQCRPLL1 ST    OLDCRPL,CRPRRPLP(,COPYRPL)                          0382
*           NEWCNT=OLDRCNT+'00010001'X;/* ADD ONE TO EACH CNT      0383
*                                                            @Z30PPGF*/
         LR    NEWCNT,OLDRCNT                                      0383
         AL    NEWCNT,@CF03513                                     0383
*           CDS(OLDCRPL,NEWCRPL,ATCCRPL);/* PUT CRPL ON ATCVT DCR4214*/
         CDS   OLDCRPL,NEWCRPL,ATCCRPL(ATCVTPTR)                   0384
*           BC(7,NQCRPLL1);         /* IF FAILURE TRY AGAIN  @Z30PPGF*/
         BC    7,NQCRPLL1                                          0385
*           RFY                                                    0386
*            (OLDCRPL,                                             0386
*             NEWCRPL,                                             0386
*             OLDRCNT,                                             0386
*             NEWCNT) UNRSTD;       /*                       @Z30PPH3*/
*         END;                                                     0387
*     END;                          /* JUST RELSTORE THE COPIED RPL
*                                      AND QUIT              @ZM32701*/
*   ELSE                                                           0389
*     DO;                           /* NOT ABEND SO DO REGULAR     0389
*                                      PROCESSING            @ZM32701*/
         B     @RC00313                                            0389
@RF00313 DS    0H                                                  0390
*       IF RPLAUTUS=CBITON          /* AUTH USER             @Z30PPGF*/
*         THEN                                                     0390
         TM    RPLAUTUS+16(CRPLPTR),B'00100000'                    0390
         BNO   @RF00390                                            0390
*         DO;                       /* YES TAKE AUTHORIZED USER PATH
*                                                            @Z30PPGF*/
*           COPYRPL=CRPLPTR;        /* SET BASE FOR COPIED RPL     0392
*                                                            @Z30PPGF*/
         LR    COPYRPL,CRPLPTR                                     0392
*           CRPLPTR=CRPRRPLP;       /* GET PTR TO USER RPL FROM    0393
*                                      COPIED RPL            @Z30PPGF*/
         L     CRPLPTR,CRPRRPLP(,COPYRPL)                          0393
*           CIFGRPL(13:RPLLEN)=(C12+COPYRPL)->CISTCRPL;/* MOVE COPIED
*                                      RPL TO USER RPL BYPASSING 1ST
*                                      12 BYTES              @Z30PPGF*/
         SLR   @14,@14                                             0394
         IC    @14,RPLLEN(,CRPLPTR)                                0394
         SL    @14,@CF00365                                        0394
         EX    @14,@SM03620                                        0394
*           RFY                                                    0395
*            (ATCVTPTR,                                            0395
*             OLDCRPL,                                             0395
*             NEWCRPL,                                             0395
*             OLDRCNT,                                             0395
*             NEWCNT) RSTD;         /*                       @ZM32701*/
*           DO;                     /* LISATCVT                    0396
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*             ATCVTPTR=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0397
*           END;                    /* LISATCVT                      */
*           RFY                                                    0399
*             ISTATCVT BASED(ATCVTPTR);/*                    @Z30PPGF*/
*           IF ATCRPLAC>=ATCRPLCT THEN/* IF LIMIT OF CRPL ON ATCVT 0400
*                                      REACHED RELSTORE THE CRPL DCR
*                                      4214                          */
         CLC   ATCRPLAC(2,ATCVTPTR),ATCRPLCT(ATCVTPTR)             0400
         BL    @RF00400                                            0400
*/* RELSTORE BUFADDR(COPYRPL)SAVE(YES)CLEAR(NO)                      */
*                                                                  0401
*             DO;                                                  0401
*                                                                  0401
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0402
*               RFY                                                0402
*                (GPR02P,                                          0402
*                 GPR03P,                                          0402
*                 GPR04P,                                          0402
*                 GPR15P) RSTD;                                    0402
*               RFY                                                0403
*                (GPR01P,                                          0403
*                 GPR13P) RSTD;                                    0403
*               GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK); 0404
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*               RFY                                                0405
*                 GPR13P UNRSTD;                                   0405
*               GPR04P=COPYRPL;                                    0406
         LR    GPR04P,COPYRPL                                      0406
*               DCL                                                0407
*                 1 FMZA0032 FIXED(31) STATIC LOCAL,               0407
*                  2 * FIXED(8) INIT(64),                          0407
*                  2 * PTR(24) INIT(0);                            0407
*               GPR03F=FMZA0032;                                   0408
         L     GPR03F,FMZA0032                                     0408
*               DO;                 /* LISATCVT                    0409
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                 GPR15P=ATCLCPTR;  /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0410
*               END;                /* LISATCVT                      */
*               GPR02P=GPR15P->ATCBPDA;                            0412
         L     GPR02P,ATCBPDA(,GPR15P)                             0412
*               GPR15P=GPR15P->ATCSMRS;                            0413
         L     GPR15P,ATCSMRS(,GPR15P)                             0413
*               DCL                                                0414
*                 FMZL0032 BASED(GPR15P) LABEL VALUERANGE(*);      0414
*               CALL FMZL0032;                                     0415
         BALR  @14,@15                                             0415
*               RFY                                                0416
*                 GPR13P RSTD;                                     0416
*               GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P); 0417
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*               RFY                                                0418
*                (GPR01P,                                          0418
*                 GPR13P) UNRSTD;                                  0418
*               RFY                                                0419
*                (GPR02P,                                          0419
*                 GPR03P,                                          0419
*                 GPR04P,                                          0419
*                 GPR15P) UNRSTD;                                  0419
*             END;                  /* *********END OF RELSTORE    0420
*                                      EXPANSION*********            */
*           ELSE                                                   0421
*             DO;                   /* LESS THAN LIMIT, PUT CRPL ON
*                                      ATCVTQUEUE DCR 4214           */
         B     @RC00400                                            0421
@RF00400 DS    0H                                                  0422
*/*SMSID  BUFF(COPYRPL)TSKID(0)                                      */
*                                                                  0422
*               DO;                                                0422
*                 DCL                                              0423
*                   1 CMZ0048A PTR(31) BASED((COPYRPL)-8),         0423
*                    2 * BIT(8),                                   0423
*                    2 CMZ0048 PTR(24);                            0423
*                 CMZ0048=(0);                                     0424
         LR    @11,COPYRPL                                         0424
         AL    @11,@CF03619                                        0424
         SLR   @08,@08                                             0424
         STCM  @08,7,CMZ0048-1(@11)                                0424
*               END;                /* SMSID DISSOCIATE CRPL FROM  0425
*                                      USER TASK             @Z40GKD1*/
*               OLDRCNT=ATCRPLCN;   /* GET CURRENT COUNT FIELD DCR 0426
*                                      4214                          */
         L     OLDRCNT,ATCRPLCN(,ATCVTPTR)                         0426
*               OLDCRPL=ATCCRPLQ;   /* GET CURRENT CRPL PTR ON ATCVT
*                                      DCR4214                       */
         L     OLDCRPL,ATCCRPLQ(,ATCVTPTR)                         0427
*               NEWCRPL=COPYRPL;    /* SET UP ADDR OF NEW CRPL FOR 0428
*                                      MPST                  @Z30PPGF*/
         LR    NEWCRPL,COPYRPL                                     0428
*NQCRPLLP:                                                         0429
*               CRPRRPLP=OLDCRPL;   /* SET UP LINK FIELD     @Z30PPGF*/
NQCRPLLP ST    OLDCRPL,CRPRRPLP(,COPYRPL)                          0429
*               NEWCNT=OLDRCNT+'00010001'X;/* ADD ONE TO EACH CNT  0430
*                                                            @Z30PPGF*/
         LR    NEWCNT,OLDRCNT                                      0430
         AL    NEWCNT,@CF03513                                     0430
*               CDS(OLDCRPL,NEWCRPL,ATCCRPL);/* PUT CRPL ON ATCVT  0431
*                                      DCR4214                       */
         CDS   OLDCRPL,NEWCRPL,ATCCRPL(ATCVTPTR)                   0431
*               BC(7,NQCRPLLP);     /* IF FAILURE TRY AGAIN  @Z30PPGF*/
         BC    7,NQCRPLLP                                          0432
*               RFY                                                0433
*                (OLDCRPL,                                         0433
*                 NEWCRPL,                                         0433
*                 OLDRCNT,                                         0433
*                 NEWCNT) UNRSTD;   /*                       @Z30PPH3*/
*             END;                                                 0434
*           RPLSSNSO=CHALF0;        /* CLEAR SENSE FIELDS    @Z30PPGF*/
@RC00400 MVC   RPLSSNSO(2,CRPLPTR),CHALF0                          0435
*           RPLUSNSO=CHALF0;        /* CLEAR SENSE FIELDS    @Z30PPGF*/
         MVC   RPLUSNSO(2,CRPLPTR),CHALF0                          0436
*           IF RPLRTNCD^=0×RPLFDB2^=0/* CHECK CODES BEFOR          0437
*                                      CALL@Z30PPH3                  */
*             THEN                                                 0437
         CLI   RPLRTNCD(CRPLPTR),0                                 0437
         BNE   @RT00437                                            0437
         CLI   RPLFDB2(CRPLPTR),0                                  0437
         BE    @RF00437                                            0437
@RT00437 DS    0H                                                  0438
*             CALL ATCAICTN;        /* CODES NON-ZERO CALL         0438
*                                      TRANSLATION           @Z30PPH3*/
         L     @15,ATCAICTN(,ATCVTPTR)                             0438
         BALR  @14,@15                                             0438
*           RFY                                                    0439
*             ATCVTPTR UNRSTD;      /* RELEASE ATCVT POINTER REGISTER
*                                                            @Z30PPH3*/
@RF00437 DS    0H                                                  0440
*           IF RPHAUTEX=CBITOFF     /* EXIT TO USER FLAG ALREADY SET
*                                                            @Z30PPGF*/
*             THEN                                                 0440
         TM    RPHAUTEX(RPHPTR),B'00100000'                        0440
         BNZ   @RF00440                                            0440
*             DO;                   /* NO, TURN IT ON        @Z30PPGF*/
*               RPHAUTEX=CBITON;    /*                       @Z30PPGF*/
         OI    RPHAUTEX(RPHPTR),B'00100000'                        0442
*               APCRTRN=RPLSAV13;   /* SET UP SAVE AREA FOR PSS    0443
*                                                            @Z30PPGF*/
         L     @14,RPHCRR(,RPHPTR)                                 0443
         L     @11,RPLSAV13(,CRPLPTR)                              0443
         ST    @11,APCRTRN+160(,@14)                               0443
*             END;                                                 0444
*           ELSE                                                   0445
*             DO;                   /* EXIT TO USER FLAG ALREADY ON
*                                                            @Z30PPGF*/
         B     @RC00440                                            0445
@RF00440 DS    0H                                                  0446
*               RFY                                                0446
*                 ATCVTPTR RSTD;    /* DCR 4214                      */
*               RFY                                                0447
*                 ISTATCVT BASED(ATCVTPTR);/* DCR4214                */
*               DO;                 /* LISATCVT                    0448
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*                 ATCVTPTR=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0449
*               END;                /* LISATCVT DCR4214              */
*               RFY                                                0451
*                (OLDSRB,                                          0451
*                 OLDCNT,                                          0451
*                 NEWSRB,                                          0451
*                 NEWCNT,                                          0451
*                 SRBPTR) RSTD;     /*                       @Z30PPGF*/
*               OLDSRB=ATCSRBQ;     /* GET PTR TO 1ST SRB ON ATCVT 0452
*                                      DCR4214                       */
         L     OLDSRB,ATCSRBQ(,ATCVTPTR)                           0452
*               OLDCNT=ATCSRBCN;    /* GET SRB COUNT WORD DCR 4214   */
         L     OLDCNT,ATCSRBCN(,ATCVTPTR)                          0453
*DQSRBLP:                                                          0454
*               IF ATCSRBAC>0 THEN  /* ANY SRB ON ATCVT DCR4214      */
DQSRBLP  CLC   ATCSRBAC(2,ATCVTPTR),@CH00347                       0454
         BNH   @RF00454                                            0454
*                 DO;               /* YES                   @Z30PPGF*/
*                   NEWCNT=OLDCNT-1;/* SET UP NEW AVAIL. #   @Z30PPGF*/
         LR    NEWCNT,OLDCNT                                       0456
         BCTR  NEWCNT,0                                            0456
*                   NEWSRB=OLDSRB->SRBFLNK;/* SET UP NEW CURRENT PTR
*                                                            @Z30PPGF*/
         L     NEWSRB,SRBFLNK(,OLDSRB)                             0457
*                   CDS(OLDSRB,NEWSRB,ATCSRB);/* TRY TO GET SRB FROM
*                                      ATCVT DCR4214                 */
         CDS   OLDSRB,NEWSRB,ATCSRB(ATCVTPTR)                      0458
*                   BC(7,DQSRBLP);  /* IF FAILURE TRY AGAIN  @Z30PPGF*/
         BC    7,DQSRBLP                                           0459
*                   SRBPTR=OLDSRB;  /*                       @Z30PPGF*/
         LR    SRBPTR,OLDSRB                                       0460
*                   RFY                                            0461
*                    (NEWCNT,                                      0461
*                     NEWSRB,                                      0461
*                     OLDCNT,                                      0461
*                     OLDSRB) UNRSTD;/*                      @Z30PPGF*/
*                 END;              /*                       @Z30PPGF*/
*               ELSE                                               0463
*                 DO;               /* NO SRB ON ATCVT REQSTORE IT 0463
*                                                            @Z30PPGF*/
         B     @RC00454                                            0463
@RF00454 DS    0H                                                  0464
*                   RFY                                            0464
*                     ATCVTPTR UNRSTD;/* DCR4214                     */
*/* REQSTORE CBID(SRB)CLEAR(NO)SAVE(YES)RPH(YES)                     */
*                                                                  0465
*                   DO;                                            0465
*                                                                  0465
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0466
*                     RFY                                          0466
*                      (GPR02P,                                    0466
*                       GPR03P,                                    0466
*                       GPR04P,                                    0466
*                       GPR15P) RSTD;                              0466
*                     RFY                                          0467
*                      (GPR01P,                                    0467
*                       GPR13P) RSTD;                              0467
*                     GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK)
*                         ;                                        0468
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*                     RFY                                          0469
*                      (GPR01P,                                    0469
*                       GPR13P) UNRSTD;                            0469
*                     DO;           /* LISATCVT                    0470
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                       GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER      */
         L     GPR15P,ATCLCPTR                                     0471
*                     END;          /* LISATCVT                      */
*                     GPR02P=GPR15P->ATCBPDA×'80000000'X;          0473
         L     GPR02P,ATCBPDA(,GPR15P)                             0473
         O     GPR02P,@CF01794                                     0473
*                     DCL                                          0474
*                       1 FMZA0054 FIXED(31) STATIC LOCAL,         0474
*                        2 * FIXED(8) INIT(56),                    0474
*                        2 * PTR(24) INIT(0);                      0474
*                     GPR03F=FMZA0054;                             0475
         L     GPR03F,FMZA0054                                     0475
*                     GPR04F=16;                                   0476
         LA    GPR04F,16                                           0476
*                     GPR15P=GPR15P->ATCSMRQ;                      0477
         L     GPR15P,ATCSMRQ(,GPR15P)                             0477
*                     DCL                                          0478
*                       FMZL0054 BASED(GPR15P) LABEL VALUERANGE(*);
*                     CALL FMZL0054;                               0479
         BALR  @14,@15                                             0479
*                     RFY                                          0480
*                      (GPR13P) RSTD;                              0480
*                     GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P)
*                         ;                                        0481
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*                     RFY                                          0482
*                      (GPR13P) UNRSTD;                            0482
*                     RFY                                          0483
*                      (GPR02P,                                    0483
*                       GPR03P,                                    0483
*                       GPR04P,                                    0483
*                       GPR15P) UNRSTD;                            0483
*                   END;            /* ******** END OF REQSTORE    0484
*                                      EXPANSION                     */
*                   IF CRETCODE>4 THEN/* WAS SRB GOTTEN      @Z30PPGF*/
         C     CRETCODE,@CF00035                                   0485
         BNH   @RF00485                                            0485
*                     DO;           /* NO, WE MUST TPWAIT    @Z30PPGF*/
*/*  TPWAIT                                                          */
*                                                                  0487
*                       DO;         /* BEGIN TPWAIT GENERATION       */
*                         RFY                                      0488
*                          (GPR01P,                                0488
*                           GPR14P,                                0488
*                           GPR15P) RSTD;                          0488
*                         RFY                                      0489
*                          (GPR00P) RSTD;                          0489
*                         GEN(STM   GPR00P,GPR15P,RPHWORK(GPR01P)) 0490
*                         REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*                         RFY                                      0491
*                          (GPR00P) UNRSTD;                        0491
*                         GPR15P=ADDR(LHAA0073);                   0492
         LA    GPR15P,LHAA0073                                     0492
*                         GPR14P=0;                                0493
         SLR   GPR14P,GPR14P                                       0493
*                         GPR15P=GPR15P&'00FFFFFF'X;               0494
         N     GPR15P,@CF03534                                     0494
*                         GPR15P=GPR15P×RPHWT1;                    0495
         O     GPR15P,@CF01753                                     0495
*                         CS(GPR14P,GPR15P,GPR01P->RPHRESMA);      0496
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0496
*                         BC(7,LHAB0073);                          0497
*                                                                  0497
         BC    7,LHAB0073                                          0497
*/* TPEXIT  NONE                                                     */
*                                                                  0498
*                         DO;                                      0498
*                           RESPECIFY                              0499
*                             GPR15P RSTD;                         0499
*                                                                  0499
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0500
*                           DO;     /* LISATCVT                    0500
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                             GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER*/
         L     GPR15P,ATCLCPTR                                     0501
*                           END;    /* LISATCVT                      */
*                           RESPECIFY                              0503
*                             GPR00F RSTD;                         0503
*                           GPR00F=0;/* SET PARAMETER REGISTER TO 0  */
         SLR   GPR00F,GPR00F                                       0504
*                           GPR15P=GPR15P->ATCAP31;                0505
         L     GPR15P,ATCAP31(,GPR15P)                             0505
*                           DCL                                    0506
*                             FMZL0078 BASED(GPR15P) LABEL VALUERANGE(*
*                                 );                               0506
*                           CALL FMZL0078;                         0507
         BALR  @14,@15                                             0507
*                           RESPECIFY                              0508
*                            (GPR00F,                              0508
*                             GPR15P) UNRSTD;                      0508
*                         END;      /* **** END OF TPEXIT            */
*LHAB0073:                                                         0510
*                         ;                                        0510
LHAB0073 DS    0H                                                  0511
*                         GPR01P->RPHRESMA=0;                      0511
         SLR   @11,@11                                             0511
         ST    @11,RPHRESMA(,GPR01P)                               0511
*                         RFY                                      0512
*                          (GPR00P) RSTD;                          0512
*LHAA0073:                                                         0513
*                         ;                                        0513
LHAA0073 DS    0H                                                  0514
*                         GEN(LM    GPR00P,GPR15P,RPHWORK(GPR01P)) 0514
*                         REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*                         RFY                                      0515
*                          (GPR00P,                                0515
*                           GPR01P,                                0515
*                           GPR14P,                                0515
*                           GPR15P) UNRSTD;                        0515
*                       END;        /* ****END OF TPWAIT             */
*                     END;          /*                       @Z30PPGF*/
*                   ELSE                                           0518
*                     ;             /* SRB OBTAINED          @Z30PPGF*/
@RF00485 DS    0H                                                  0519
*                   SRBPTR=RPHSRPRM;/* GET ADDR OF SRB       @Z30PPGF*/
         L     SRBPTR,RPHSRPRM(,RPHPTR)                            0519
*                 END;              /*                       @Z30PPGF*/
*               RFY                                                0521
*                 ATCVTPTR RSTD;    /*                       @Z30PPGF*/
@RC00454 DS    0H                                                  0522
*               RFY                                                0522
*                 ISTATCVT BASED(ATCVTPTR);/*                @Z30PPGF*/
*               DO;                 /* LISATCVT                    0523
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*                 ATCVTPTR=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0524
*               END;                /* LISATCVT                      */
*               SRB=SRB&&SRB;       /* CLEAR SRB             @Z30PPGF*/
         XC    SRB(44,SRBPTR),SRB(SRBPTR)                          0526
*               SRBID='PSBE';       /*                       @Z30PPGF*/
         MVC   SRBID(4,SRBPTR),@CC03541                            0527
*               SRBASCB=MPSASCB;    /*                       @Z30PPGF*/
         L     @14,MPSASCB(,MPSTPTR)                               0528
         ST    @14,SRBASCB(,SRBPTR)                                0528
*               SRBEP=ADDR(AICPTBE);/* ADDR OF ROUTINE TO GET CONTROL
*                                                            @Z30PPGF*/
         LA    @14,AICPTBE                                         0529
         ST    @14,SRBEP(,SRBPTR)                                  0529
*               SRBPARM=CRPLPTR;    /*                       @Z30PPGF*/
         ST    CRPLPTR,SRBPARM(,SRBPTR)                            0530
*               SRBRMTR=ATCAP83;    /* SET UP FRR ROUTINE ADDRESS  0531
*                                                            @Z40GKD1*/
         L     @14,ATCAP83(,ATCVTPTR)                              0531
         ST    @14,SRBRMTR(,SRBPTR)                                0531
*               SRBPASID=MPSASID;   /*                       @Z30PPGF*/
         MVC   SRBPASID(2,SRBPTR),MPSASID(MPSTPTR)                 0532
*               GEN(SCHEDULE SRB=(SRBPTR),SCOPE=LOCAL)             0533
*               REFS(CVTLSMQ,CVTMAP,SRBFLNK,SRBSECT,CVTPTR) FLOWS( 0533
*                   AICPTBE);                                      0533
         SCHEDULE SRB=(SRBPTR),SCOPE=LOCAL
*               RFY                                                0534
*                (SRBPTR,                                          0534
*                 ATCVTPTR) UNRSTD;                                0534
*             END;                  /* END OF SRB SCHED      @Z30PPGF*/
*           RFY                                                    0536
*             COPYRPL UNRSTD;                                      0536
@RC00440 DS    0H                                                  0537
*         END;                      /* END OF PROCESSA       @Z30PPGF*/
*       ELSE                                                       0538
*         DO;                       /* NON AUTH PATH         @Z30PPGF*/
         B     @RC00390                                            0538
@RF00390 DS    0H                                                  0539
*/*VSETLCK  (CRETCODE,OBTAIN,LOCAL,(LOCAL,ISTAICPT(CPTREL,CPTREL2,CPTRE
*3,CPTREL4)))                                                        */
*                                                                  0539
*CPTOBT1:                                                          0539
*           DO;                     /* DECLARE AND RESTRICT REGS   0539
*                                      2,10,11,12,13,14, AND 15      */
CPTOBT1  DS    0H                                                  0540
*             RFY                                                  0540
*              (GPR02P,                                            0540
*               GPR10P,                                            0540
*               GPR11P,                                            0540
*               GPR12P,                                            0540
*               GPR13P,                                            0540
*               GPR14P,                                            0540
*               GPR15P) RSTD;       /* SAVE REGS 2 AND 10 THRU 14    */
*             GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,GPR13P); 0541
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*             GEN SETS(2);                                         0542
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*             GPR10P=GPR13P;        /* PUT SAVE AREA ADDR IN R 10  0543
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0543
*             GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);           0544
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(LOCAL,ISTAICPT(CPTREL,CPTREL2,CPTREL3,CPTREL4))
*             GPR15P=GPR13P;        /* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       0545
*             DO;                   /* RESTORE PSW PROTECTION KEY    */
*               GEN SETS(2);                                       0547
         MODESET KEYADDR=(2),WORKREG=2
*             END;                  /* RESTORE REGISTERS             */
*             GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F,GPR13F,
*                 GPR14F,GPR02F);                                  0549
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*             IF GPR15F=4 THEN                                     0550
         C     GPR15F,@CF00035                                     0550
         BNE   @RF00550                                            0550
*               GPR15F=0;                                          0551
         SLR   GPR15F,GPR15F                                       0551
*             CRETCODE=GPR15F;      /* PUT RETURN CODE IN RCREG      */
@RF00550 DS    0H                                                  0553
*             RFY                                                  0553
*              (GPR02P,                                            0553
*               GPR10P,                                            0553
*               GPR11P,                                            0553
*               GPR12P,                                            0553
*               GPR13P,                                            0553
*               GPR14P,                                            0553
*               GPR15P) UNRSTD;                                    0553
*           END;                    /* CPTOBT1:VSETLCK LOCK USER   0554
*                                      RPLECB                        */
*           IF CRETCODE^=0 THEN     /* COULD NOT OBTAIN LOCAL        */
         LTR   CRETCODE,CRETCODE                                   0555
         BZ    @RF00555                                            0555
*             DO;                   /* MEMORY LOCK                   */
*               RFY                                                0557
*                 COMPREG RSTD;                                    0557
*               RFY                                                0558
*                 REASNREG RSTD;                                   0558
*               COMPREG=CVTAM;      /* SET UP FOR VTAM ABEND         */
         LA    COMPREG,169                                         0559
*               REASNREG=CRC7004;   /* SET UP REASON CODE            */
         SLR   REASNREG,REASNREG                                   0560
         ICM   REASNREG,3,CRC7004                                  0560
*               CALL CPTABEND;      /* ABEND VTAM                    */
         BAL   @14,CPTABEND                                        0561
*               RFY                                                0562
*                 COMPREG UNRSTD;                                  0562
*               RFY                                                0563
*                 REASNREG UNRSTD;                                 0563
*             END;                                                 0564
*           ELSE                                                   0565
*             ;                                                    0565
@RF00555 DS    0H                                                  0566
*           GEN(EJECT);                                            0566
         EJECT
*                                                                  0567
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*           CPTRPL -    RPL PROCESSING                             */
*/*                                                                  */
*/*   THERE ARE TWO TYPES OF RPLS TO CONSIDER  IN OS/VS SYSTEMS      */
*/*     THE COPIED RPL    POINTER CONTAINED IN THE RPHWEA            */
*/*     THE USER RPL    POINTER CONTAINED IN THE COPIED RPL          */
*/*                                                                  */
*/*   A VALIDITY CHECK IS MADE OF THE USER RPL ADDRESS TO CHECK      */
*/*     IF IT IS IN THE USER REGION                                  */
*/*    AS INPUT TO THE CPTVALCK SUBROUTINE CLENPTR MUST POINT TO     */
*/*     A FOUR BYTE AREA CONTAINING THE LENGTH OF THE RPL TO BE      */
*/*     VALIDITY CHECKED                                             */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*/* CPTRPL                                 BEGIN CPTPROC PROCESSING  */
*                                                                  0567
*           RFY                                                    0567
*             COPYRPL RESTRICTED;                                  0567
*           RFY                                                    0568
*             CREG8 RESTRICTED;                                    0568
*           CREG8=0;                /* CLEAR SWITCH INDCIATOR        */
         SLR   CREG8,CREG8                                         0569
*           COPYRPL=RPHWEA;         /* SET UP COPIED RPL PTR         */
         L     COPYRPL,RPHWEA(,RPHPTR)                             0570
*           CRPLPTR=CRPRRPLP;       /* GET ADDRESS OF USER RPL       */
         L     CRPLPTR,CRPRRPLP(,COPYRPL)                          0571
*           RPHSAVE1=LENGTH(IFGRPL);/* GET LENGTH OF USERS RPL     0572
*                                                            @ZM33507*/
         MVC   RPHSAVE1(4,RPHPTR),@CF03618                         0572
*           CLENPTR=ADDR(RPHSAVE1); /* POINT TO THE LENGTH OF THE RPL
*                                                             @DM8383*/
         LA    CLENPTR,RPHSAVE1(,RPHPTR)                           0573
*           CSAVE=ADDR(RPHSAVE2);   /* SET UP SAVE AREA PTR          */
         LA    CSAVE,RPHSAVE2(,RPHPTR)                             0574
*           CALL CPTVALCK;          /* VALIDTY CHECK THE USER RPL    */
         BAL   @14,CPTVALCK                                        0575
*           CSAVE=ADDR(RPHWORK);    /* REESTABLISH 16 WORD SAVE AREA
*                                      POINTER                       */
         LA    CSAVE,RPHWORK(,RPHPTR)                              0576
*           IF CRETCODE^=0 THEN     /* CHECK RETURN CODE FROM VALIDTY
*                                      CHECK                         */
         LTR   CRETCODE,CRETCODE                                   0577
         BZ    @RF00577                                            0577
*             CREG8=4;              /* INDICATE USER ERROR           */
         LA    CREG8,4                                             0578
*           ELSE                                                   0579
*             DO;                   /* VALCHEK WAS GOOD              */
         B     @RC00577                                            0579
@RF00577 DS    0H                                                  0580
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*   IF THE VALIDTY CHECK OF THE USER RPL IS GOOD THEN OVERLAY      */
*/*   THE USER RPL WITH THE COPIED RPL STARTING WITH THE FOURTH      */
*/*   WORD OF EACH RPL                                               */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0580
*               CIFGRPL(13:RPLLEN)=(COPYRPL+C12)->CISTCRPL;/* BYPASS
*                                      THE FIRST 12 BYTES AND OVERLAY
*                                      THE REMAINDER OF THE USER RPL
*                                      WITH THE COPIED RPL   @Z30PPGF*/
         SLR   @14,@14                                             0580
         IC    @14,RPLLEN(,CRPLPTR)                                0580
         SL    @14,@CF00365                                        0580
         EX    @14,@SM03620                                        0580
*             END;                                                 0581
*                                                                  0581
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*    ONCE THE USER RPL HAS BEEN OVERLAYED BY THE COPIED RPL        */
*/*    OR THE VALCHEK OF THE USER RPL FAILED                         */
*/*    RELEASE THE COPIED RPL STORAGE                                */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0582
*           RFY                                                    0582
*            (ATCVTPTR,                                            0582
*             OLDCRPL,                                             0582
*             NEWCRPL,                                             0582
*             OLDRCNT,                                             0582
*             NEWCNT) RSTD;         /*                       @ZM32701*/
@RC00577 DS    0H                                                  0583
*           DO;                     /* LISATCVT                    0583
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*             ATCVTPTR=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0584
*           END;                    /* LISATCVT                      */
*           RFY                                                    0586
*             ISTATCVT BASED(ATCVTPTR);/*                    @Z30PPGF*/
*           MPSTPTR=RPHTSKID->PSTMPSTP;/* GET ADDRESS OF MPST      0587
*                                                            @Z30PPGF*/
         L     @11,RPHTSKID(,RPHPTR)                               0587
         L     MPSTPTR,PSTMPSTP(,@11)                              0587
*           RFY                                                    0588
*             ISTMPST BASED(MPSTPTR);/*                      @Z30PPGF*/
*           IF ATCRPLAC>=ATCRPLCT THEN/* IF LIMIT OF CRPL ON ATCVT 0589
*                                      REACHED RELSTORE THE CRPL DCR
*                                      4214                          */
         CLC   ATCRPLAC(2,ATCVTPTR),ATCRPLCT(ATCVTPTR)             0589
         BL    @RF00589                                            0589
*/* RELSTORE BUFADDR(COPYRPL)SAVE(YES)CLEAR(NO)                      */
*                                                                  0590
*             DO;                                                  0590
*                                                                  0590
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0591
*               RFY                                                0591
*                (GPR02P,                                          0591
*                 GPR03P,                                          0591
*                 GPR04P,                                          0591
*                 GPR15P) RSTD;                                    0591
*               RFY                                                0592
*                (GPR01P,                                          0592
*                 GPR13P) RSTD;                                    0592
*               GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK); 0593
          STM GPR02P,GPR13P,RPHWORK(GPR01P)
*               RFY                                                0594
*                 GPR13P UNRSTD;                                   0594
*               GPR04P=COPYRPL;                                    0595
         LR    GPR04P,COPYRPL                                      0595
*               DCL                                                0596
*                 1 FMZA0101 FIXED(31) STATIC LOCAL,               0596
*                  2 * FIXED(8) INIT(64),                          0596
*                  2 * PTR(24) INIT(0);                            0596
*               GPR03F=FMZA0101;                                   0597
         L     GPR03F,FMZA0101                                     0597
*               DO;                 /* LISATCVT                    0598
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                 GPR15P=ATCLCPTR;  /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0599
*               END;                /* LISATCVT                      */
*               GPR02P=GPR15P->ATCBPDA;                            0601
         L     GPR02P,ATCBPDA(,GPR15P)                             0601
*               GPR15P=GPR15P->ATCSMRS;                            0602
         L     GPR15P,ATCSMRS(,GPR15P)                             0602
*               DCL                                                0603
*                 FMZL0101 BASED(GPR15P) LABEL VALUERANGE(*);      0603
*               CALL FMZL0101;                                     0604
         BALR  @14,@15                                             0604
*               RFY                                                0605
*                 GPR13P RSTD;                                     0605
*               GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P); 0606
          LM GPR02P,GPR13P,RPHWORK(GPR01P)
*               RFY                                                0607
*                (GPR01P,                                          0607
*                 GPR13P) UNRSTD;                                  0607
*               RFY                                                0608
*                (GPR02P,                                          0608
*                 GPR03P,                                          0608
*                 GPR04P,                                          0608
*                 GPR15P) UNRSTD;                                  0608
*             END;                  /* *********END OF RELSTORE    0609
*                                      EXPANSION*********            */
*           ELSE                                                   0610
*             DO;                   /* LESS THAN LIMIT, PUT CRPL ON
*                                      MPST QUEUE            @Z30PPGF*/
         B     @RC00589                                            0610
@RF00589 DS    0H                                                  0611
*/*SMSID  BUFF(COPYRPL)TSKID(0)                                      */
*                                                                  0611
*               DO;                                                0611
*                 DCL                                              0612
*                   1 CMZ0117A PTR(31) BASED((COPYRPL)-8),         0612
*                    2 * BIT(8),                                   0612
*                    2 CMZ0117 PTR(24);                            0612
*                 CMZ0117=(0);                                     0613
         LR    @11,COPYRPL                                         0613
         AL    @11,@CF03619                                        0613
         SLR   @02,@02                                             0613
         STCM  @02,7,CMZ0117-1(@11)                                0613
*               END;                /* SMSID DISASSOCIATE CRPL FROM
*                                      USER TASK             @Z40GKD1*/
*               OLDRCNT=ATCRPLCN;   /* GET CURRENT COUNT FIELD DCR 0615
*                                      4214                          */
         L     OLDRCNT,ATCRPLCN(,ATCVTPTR)                         0615
*               OLDCRPL=ATCCRPLQ;   /* GET CURRENT CRPL PTR ON ATCVT
*                                      DCR4214                       */
         L     OLDCRPL,ATCCRPLQ(,ATCVTPTR)                         0616
*               NEWCRPL=COPYRPL;    /* SET UP ADDR OF NEW CRPL FOR 0617
*                                      MPST                  @Z30PPGF*/
         LR    NEWCRPL,COPYRPL                                     0617
*NQCRPLLO:                                                         0618
*               CRPRRPLP=OLDCRPL;   /* SET UP LINK FIELD     @Z30PPGF*/
NQCRPLLO ST    OLDCRPL,CRPRRPLP(,COPYRPL)                          0618
*               NEWCNT=OLDRCNT+'00010001'X;/* ADD ONE TO EACH CNT  0619
*                                                            @Z30PPGF*/
         LR    NEWCNT,OLDRCNT                                      0619
         AL    NEWCNT,@CF03513                                     0619
*               CDS(OLDCRPL,NEWCRPL,ATCCRPL);/* PUT CRPL ON ATCVT  0620
*                                      DCR4214                       */
         CDS   OLDCRPL,NEWCRPL,ATCCRPL(ATCVTPTR)                   0620
*               BC(7,NQCRPLLO);     /* IF FAILURE TRY AGAIN  @Z30PPGF*/
         BC    7,NQCRPLLO                                          0621
*               CRETCODE=CRETCODE-CRETCODE;/* ZERO REG 15    @Z30PPGF*/
         SLR   CRETCODE,CRETCODE                                   0622
*               RFY                                                0623
*                (ATCVTPTR,                                        0623
*                 OLDCRPL,                                         0623
*                 NEWCRPL,                                         0623
*                 OLDRCNT,                                         0623
*                 NEWCNT) UNRSTD;   /*                       @Z30PPGF*/
*             END;                                                 0624
*           IF CRETCODE^=0 THEN                                    0625
@RC00589 LTR   CRETCODE,CRETCODE                                   0625
         BZ    @RF00625                                            0625
*             CREG8=8;              /* INDICATE VTAM ERROR           */
         LA    CREG8,8                                             0626
*           ELSE                                                   0627
*             ;                                                    0627
@RF00625 DS    0H                                                  0628
*           IF CREG8>0 THEN                                        0628
         LTR   CREG8,CREG8                                         0628
         BNP   @RF00628                                            0628
*             DO;                   /* SOMETHING WENT WRONG EITHER IN
*                                      VALCHEK OR RELSTORE           */
*/*VSETLCK  (CRETCODE,RELEASE,LOCAL,(LOCAL,ISTAICPT(CPTOBT1)))       */
*                                                                  0630
*CPTREL:                                                           0630
*               DO;                 /* DECLARE AND RESTRICT REGS   0630
*                                      2,10,11,12,13,14, AND 15      */
CPTREL   DS    0H                                                  0631
*                 RFY                                              0631
*                  (GPR02P,                                        0631
*                   GPR10P,                                        0631
*                   GPR11P,                                        0631
*                   GPR12P,                                        0631
*                   GPR13P,                                        0631
*                   GPR14P,                                        0631
*                   GPR15P) RSTD;   /* SAVE REGS 2 AND 10 THRU 14    */
*                 GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,GPR13P);
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*                 GEN SETS(2);                                     0633
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*                 GPR10P=GPR13P;    /* PUT SAVE AREA ADDR IN R 10  0634
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0634
*                 GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);       0635
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(LOCAL,ISTAICPT(CPTOBT1))
*                 GPR15P=GPR13P;    /* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       0636
*                 DO;               /* RESTORE PSW PROTECTION KEY    */
*                   GEN SETS(2);                                   0638
         MODESET KEYADDR=(2),WORKREG=2
*                 END;              /* RESTORE REGISTERS             */
*                 GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F,
*                     GPR13F,GPR14F,GPR02F);                       0640
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*                 IF GPR15F=4 THEN                                 0641
         C     GPR15F,@CF00035                                     0641
         BNE   @RF00641                                            0641
*                   GPR15F=0;                                      0642
         SLR   GPR15F,GPR15F                                       0642
*                 CRETCODE=GPR15F;  /* PUT RETURN CODE IN RCREG      */
@RF00641 DS    0H                                                  0644
*                 RFY                                              0644
*                  (GPR02P,                                        0644
*                   GPR10P,                                        0644
*                   GPR11P,                                        0644
*                   GPR12P,                                        0644
*                   GPR13P,                                        0644
*                   GPR14P,                                        0644
*                   GPR15P) UNRSTD;                                0644
*               END;                /* CPTREL:VSETLCK                */
*               IF CREG8=4 THEN                                    0646
         C     CREG8,@CF00035                                      0646
         BNE   @RF00646                                            0646
*                 DO;                                              0647
*                   RFY                                            0648
*                     COMPREG RSTD;                                0648
*                   RFY                                            0649
*                     REASNREG RSTD;                               0649
*                   COMPREG=CUSER;                                 0650
         LA    COMPREG,168                                         0650
*                   REASNREG=CRC7001;                              0651
         SLR   REASNREG,REASNREG                                   0651
         ICM   REASNREG,3,CRC7001                                  0651
*                   CALL CPTABEND;                                 0652
         BAL   @14,CPTABEND                                        0652
*                   RFY                                            0653
*                     COMPREG UNRSTD;                              0653
*                   RFY                                            0654
*                     REASNREG UNRSTD;                             0654
*                 END;                                             0655
*               ELSE                                               0656
*                 DO;                                              0656
         B     @RC00646                                            0656
@RF00646 DS    0H                                                  0657
*                   RFY                                            0657
*                     COMPREG RSTD;                                0657
*                   RFY                                            0658
*                     REASNREG RSTD;                               0658
*                   COMPREG=CVTAM;                                 0659
         LA    COMPREG,169                                         0659
*                   REASNREG=CRC7003;                              0660
         SLR   REASNREG,REASNREG                                   0660
         ICM   REASNREG,3,CRC7003                                  0660
*                   CALL CPTABEND;                                 0661
         BAL   @14,CPTABEND                                        0661
*                   RFY                                            0662
*                     COMPREG UNRSTD;                              0662
*                   RFY                                            0663
*                     REASNREG UNRSTD;                             0663
*                 END;                                             0664
*               GEN(EJECT);                                        0665
@RC00646 DS    0H                                                  0665
         EJECT
*             END;                  /* END RELSTORE OR VALCHEK FAIL
*                                      PROCESS                       */
*           ELSE                                                   0667
*             ;                     /* THE RELSTORE AND VALCHECK WERE
*                                      GOOD                          */
@RF00628 DS    0H                                                  0668
*           RFY                                                    0668
*             COPYRPL UNRSTD;       /* RELEASE REGISTER              */
*           RFY                                                    0669
*             CREG8 UNRSTD;                                        0669
*           RPLSSNSO=CHALF0;        /* CLEAR OUTPUT SENSE FIELD      */
         MVC   RPLSSNSO(2,CRPLPTR),CHALF0                          0670
*           RPLUSNSO=CHALF0;        /* CLEAR OUTPUT SENSE FIELD      */
         MVC   RPLUSNSO(2,CRPLPTR),CHALF0                          0671
*           IF RPLRTNCD^=0×RPLFDB2^=0/* CHECK RETURN CODES   @Z30PPH3*/
*             THEN                                                 0672
         CLI   RPLRTNCD(CRPLPTR),0                                 0672
         BNE   @RT00672                                            0672
         CLI   RPLFDB2(CRPLPTR),0                                  0672
         BE    @RF00672                                            0672
@RT00672 DS    0H                                                  0673
*             DO;                   /* CODES NON -ZERO       @Z30PPH3*/
*               RFY                                                0674
*                 ATCVTPTR RSTD;    /* RESTRICT ATCVTPTR     @Z30PPH3*/
*               RFY                                                0675
*                 ISTATCVT BASED(ATCVTPTR);/* BASE ATCVT FOR SAFTY 0675
*                                                            @Z30PPH3*/
*               DO;                 /* LISATCVT                    0676
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*                 ATCVTPTR=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0677
*               END;                /* LISATCVT              @Z30PPH3*/
*               CALL ATCAICTN;      /* CALL TRANSLATION ROUTINE    0679
*                                                            @Z30PPH3*/
         L     @15,ATCAICTN(,ATCVTPTR)                             0679
         BALR  @14,@15                                             0679
*               RFY                                                0680
*                 ATCVTPTR UNRSTD;  /* UNRESTRICT ATCVTPTR   @Z30PPH3*/
*             END;                  /* END OF NON-ZERO RTNCD DO    0681
*                                                            @Z30PPH3*/
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*    THE NEXT INSTRUCTION DETERMINES THE TYPE OF PROCCESSING       */
*/*         TO BE DONE FOR THE REMAINDER OF THE MODULE               */
*/*                 ECB OR EXIT PROCESSING                           */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0682
*           IF RPLNEXIT='1'B THEN                                  0682
@RF00672 TM    RPLNEXIT(CRPLPTR),B'01000000'                       0682
         BNO   @RF00682                                            0682
*             DO;                   /* IF NO EXIT IS SPECIFIED IN THE
*                                      RPL                           */
*                                                                  0684
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*              CPTECB    -   ECB PROCESSING                        */
*/*                                                                  */
*/*    DETERMINE IF THE RPL ECB FIELD CONTAINS THE ADDRESS OF THE    */
*/*    ECB TO BE POSTED OR IS THE ECB ITSELF TO BE POSTED            */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*/* CPTECBP                                   BEGIN ECB PROCESSING   */
*                                                                  0684
*               RFY                                                0684
*                 CRPHSAV RESTRICTED;                              0684
*               RFY                                                0685
*                 CRPLSAV RESTRICTED;                              0685
*               CRPHSAV=RPHPTR;     /* SAVE THE RPH POINTER ACROSS 0686
*                                      POST                          */
         LR    CRPHSAV,RPHPTR                                      0686
*               IF RPLECBIN='1'B THEN                              0687
         TM    RPLECBIN(CRPLPTR),B'00000001'                       0687
         BNO   @RF00687                                            0687
*                 DO;               /* IF THE EXTERNAL ECB IS      0688
*                                      SPECIFIED                     */
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*     VALIDTY CHECK THE ADDRESS SPECIFIED IN THE RPL ECB           */
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0689
*                   CRPLSAV=CRPLPTR;/* SAVE THE RPL ADDRESS          */
         LR    CRPLSAV,CRPLPTR                                     0689
*                   CRPLPTR=RPLECB; /* GET USER ECB ADDRESS  @ZM32745*/
         L     CRPLPTR,RPLECB(,CRPLPTR)                            0690
*                   CLENPTR=ADDR(CPTECB);/* POINT TO THE ECB LENGTH  */
         LA    CLENPTR,CPTECB                                      0691
*                   CALL CPTVALCK;  /* VALIDTY CHECK THE EXT ECB     */
         BAL   @14,CPTVALCK                                        0692
*                   GEN(EJECT);                                    0693
         EJECT
*                   IF CRETCODE^=0 THEN                            0694
         LTR   CRETCODE,CRETCODE                                   0694
         BZ    @RF00694                                            0694
*                     DO;           /* CHECK THE RETURN CODE         */
*/*VSETLCK  (CRETCODE,RELEASE,LOCAL,(LOCAL,ISTAICPT(CPTOBT1)))       */
*                                                                  0696
*CPTREL2:                                                          0696
*                       DO;         /* DECLARE AND RESTRICT REGS   0696
*                                      2,10,11,12,13,14, AND 15      */
CPTREL2  DS    0H                                                  0697
*                         RFY                                      0697
*                          (GPR02P,                                0697
*                           GPR10P,                                0697
*                           GPR11P,                                0697
*                           GPR12P,                                0697
*                           GPR13P,                                0697
*                           GPR14P,                                0697
*                           GPR15P) RSTD;/* SAVE REGS 2 AND 10 THRU
*                                      14                            */
*                         GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,
*                             GPR13P);                             0698
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*                         GEN SETS(2);                             0699
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*                         GPR10P=GPR13P;/* PUT SAVE AREA ADDR IN R 10
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0700
*                         GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(LOCAL,ISTAICPT(CPTOBT1))
*                         GPR15P=GPR13P;/* PUT RETURN CODE IN R 15 0702
*                                      INVOKE MODESET MACRO TO       */
         LR    GPR15P,GPR13P                                       0702
*                         DO;       /* RESTORE PSW PROTECTION KEY    */
*                           GEN SETS(2);                           0704
         MODESET KEYADDR=(2),WORKREG=2
*                         END;      /* RESTORE REGISTERS             */
*                         GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,
*                             GPR12F,GPR13F,GPR14F,GPR02F);        0706
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*                         IF GPR15F=4 THEN                         0707
         C     GPR15F,@CF00035                                     0707
         BNE   @RF00707                                            0707
*                           GPR15F=0;                              0708
         SLR   GPR15F,GPR15F                                       0708
*                         CRETCODE=GPR15F;/* PUT RETURN CODE IN RCREG*/
@RF00707 DS    0H                                                  0710
*                         RFY                                      0710
*                          (GPR02P,                                0710
*                           GPR10P,                                0710
*                           GPR11P,                                0710
*                           GPR12P,                                0710
*                           GPR13P,                                0710
*                           GPR14P,                                0710
*                           GPR15P) UNRSTD;                        0710
*                       END;        /* CPTREL2:VSETLCK               */
*                       RFY                                        0712
*                         COMPREG RSTD;                            0712
*                       RFY                                        0713
*                         REASNREG RSTD;                           0713
*                       COMPREG=CUSER;                             0714
         LA    COMPREG,168                                         0714
*                       REASNREG=CRC7001;                          0715
         SLR   REASNREG,REASNREG                                   0715
         ICM   REASNREG,3,CRC7001                                  0715
*                       CALL CPTABEND;                             0716
         BAL   @14,CPTABEND                                        0716
*                       RFY                                        0717
*                         COMPREG UNRSTD;                          0717
*                       RFY                                        0718
*                         REASNREG UNRSTD;                         0718
*                       GEN(EJECT);                                0719
         EJECT
*                       RFY                                        0720
*                         CECBADDR RSTD;                           0720
*                     END;                                         0721
*                                                                  0721
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                      POST THE EXTERNAL ECB                       */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0722
*                   ELSE                                           0722
*                     DO;           /* THE EXTERNAL ECB IS VALID     */
         B     @RC00694                                            0722
@RF00694 DS    0H                                                  0723
*                       CECBADDR=CRPLPTR;/* GET THE ADDRESS OF THE 0723
*                                      EXTERNAL ECB INTO REG 1 FROM
*                                      THE REGISTER IT       @ZA29643
*                                      WAS SAVED IN.         @ZA29643*/
         LR    CECBADDR,CRPLPTR                                    0723
*                       CRPLPTR=CRPLSAV;/* RESTORE THE RPL ADDRESS   */
         LR    CRPLPTR,CRPLSAV                                     0724
*                     END;                                         0725
*                 END;              /* END OF EXT ECB PROCESSING     */
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                    POST THE INTERNAL ECB                         */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0727
*               ELSE                /* POST THE ADDRESS OF THE     0727
*                                      INTERNAL ECB                  */
*                 CECBADDR=ADDR(RPLECB);/* GET THE ADDRESS OF THE  0727
*                                      INTERNAL ECB                  */
         B     @RC00687                                            0727
@RF00687 LA    CECBADDR,RPLECB(,CRPLPTR)                           0727
*                                                                  0728
*/*VPOST  ECB((CECBADDR))                                            */
*                                                                  0728
*               DO;                                                0728
@RC00687 DS    0H                                                  0729
*                 RFY                                              0729
*                  (GPR00P,                                        0729
*                   GPR01P,                                        0729
*                   GPR02P,                                        0729
*                   GPR05P,                                        0729
*                   GPR09P,                                        0729
*                   GPR10P,                                        0729
*                   GPR11P,                                        0729
*                   GPR12P,                                        0729
*                   GPR13P,                                        0729
*                   GPR14P,                                        0729
*                   GPR15P) RSTD;   /* DECLARE AND RESTRICT REGS SAVE
*                                      REGS                          */
*                 GEN REFS(GPR00F,GPR01F,GPR02F,GPR05F,GPR09F,GPR10F,
*                     GPR11F,GPR12P,GPR13P,GPR14F,GPR15F);         0730
         STM   GPR14F,GPR12F,0(GPR13P)
*                 GPR00P=GPR13P;    /* SAVE REG 13 IN REG 0 INVOKE 0731
*                                      XREGSET MACRO TO CHECK ECB  0731
*                                      PARAMETER AND PUT ADDRESS IN
*                                      REG 1                         */
         LR    GPR00P,GPR13P                                       0731
*/*XREGSET  PID('ECB')PPARM((CECBADDR))RREG(1,GPR01P)                */
*                                                                  0732
*                 DO;                                              0732
*                   GPR01P=CECBADDR;/* SET RREG SYMBOL TO VALUE OF 0733
*                                      PPARM OPERAND                 */
*                 END;              /* XREGSET                       */
*                 GPR10F=0;         /* SET COMPLETION CODE TO 0      */
         SLR   GPR10F,GPR10F                                       0735
*                 GPR11P=GPR01P;    /* PUT ECB ADDR IN REG 11        */
         LR    GPR11P,GPR01P                                       0736
*                 DCL                                              0737
*                   CMZP0129 PTR(31) LOCATION(16);/* ESTABLISH     0737
*                                      POINTER TO CVT                */
*/*VMDESET  ((15),ZERO,(2))                                          */
*                                                                  0738
*                 DO;               /* INVOKE MODESET MACRO          */
*                   GEN SETS(2);                                   0739
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*                   GPR15F=0;       /* PUT RETURN CODE IN RCREG      */
         SLR   GPR15F,GPR15F                                       0740
*                 END;              /* VMDESET                       */
*                 GPR05F=GPR02F;                                   0742
         LR    GPR05F,GPR02F                                       0742
*                 CALL CMZP0129->CVT0PT01;/* BRANCH TO TASK        0743
*                                      SUPERVISOR POST ROUTINE     0743
*                                      (IEA0PT01)                    */
         L     @08,CMZP0129                                        0743
         L     @15,CVT0PT01(,@08)                                  0743
         BALR  @14,@15                                             0743
*                 GPR02F=GPR05F;                                   0744
*                                                                  0744
         LR    GPR02F,GPR05F                                       0744
*/*VMDESET  ((15),,,(2))                                             */
*                                                                  0745
*                 DO;               /* INVOKE MODESET MACRO          */
*                   GEN SETS(2);                                   0746
         MODESET KEYADDR=(2),WORKREG=2
*                   GPR15F=0;       /* PUT RETURN CODE IN RCREG      */
         SLR   GPR15F,GPR15F                                       0747
*                 END;              /* VMDESET                       */
*                 GPR13P=GPR00P;    /* RESTORE SAVE AREA ADDR FROM 0749
*                                      REGISTER 0 RESTORE REGS       */
         LR    GPR13P,GPR00P                                       0749
*                 GEN REFS(GPR13P) SETS(GPR00F,GPR01F,GPR02F,GPR05F,
*                     GPR09F,GPR10F,GPR11F,GPR12F,GPR14F,GPR15F);  0750
         LM    GPR14F,GPR12F,0(GPR13P)
*                 RFY                                              0751
*                  (GPR00P,                                        0751
*                   GPR01P,                                        0751
*                   GPR02P,                                        0751
*                   GPR05P,                                        0751
*                   GPR09P,                                        0751
*                   GPR10P,                                        0751
*                   GPR11P,                                        0751
*                   GPR12P,                                        0751
*                   GPR13P,                                        0751
*                   GPR14P,                                        0751
*                   GPR15P) UNRSTD; /* UNRESTRICT REGS               */
*               END;                /* VPOST POST THE ECB COMPLETE   */
*               RPHPTR=CRPHSAV;     /* RESTORE RPH PTR IN REG 1      */
         LR    RPHPTR,CRPHSAV                                      0753
*/*VSETLCK  (CRETCODE,RELEASE,LOCAL,(LOCAL,ISTAICPT(CPTOBT1)))       */
*                                                                  0754
*CPTREL3:                                                          0754
*               DO;                 /* DECLARE AND RESTRICT REGS   0754
*                                      2,10,11,12,13,14, AND 15      */
CPTREL3  DS    0H                                                  0755
*                 RFY                                              0755
*                  (GPR02P,                                        0755
*                   GPR10P,                                        0755
*                   GPR11P,                                        0755
*                   GPR12P,                                        0755
*                   GPR13P,                                        0755
*                   GPR14P,                                        0755
*                   GPR15P) RSTD;   /* SAVE REGS 2 AND 10 THRU 14    */
*                 GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,GPR13P);
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*                 GEN SETS(2);                                     0757
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*                 GPR10P=GPR13P;    /* PUT SAVE AREA ADDR IN R 10  0758
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0758
*                 GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);       0759
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(LOCAL,ISTAICPT(CPTOBT1))
*                 GPR15P=GPR13P;    /* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       0760
*                 DO;               /* RESTORE PSW PROTECTION KEY    */
*                   GEN SETS(2);                                   0762
         MODESET KEYADDR=(2),WORKREG=2
*                 END;              /* RESTORE REGISTERS             */
*                 GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F,
*                     GPR13F,GPR14F,GPR02F);                       0764
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*                 IF GPR15F=4 THEN                                 0765
         C     GPR15F,@CF00035                                     0765
         BNE   @RF00765                                            0765
*                   GPR15F=0;                                      0766
         SLR   GPR15F,GPR15F                                       0766
*                 CRETCODE=GPR15F;  /* PUT RETURN CODE IN RCREG      */
@RF00765 DS    0H                                                  0768
*                 RFY                                              0768
*                  (GPR02P,                                        0768
*                   GPR10P,                                        0768
*                   GPR11P,                                        0768
*                   GPR12P,                                        0768
*                   GPR13P,                                        0768
*                   GPR14P,                                        0768
*                   GPR15P) UNRSTD;                                0768
*               END;                /* CPTREL3:VSETLCK               */
*               RFY                                                0770
*                 CECBADDR UNRSTD;                                 0770
*               RFY                                                0771
*                 CLENPTR UNRSTD;                                  0771
*               RFY                                                0772
*                 CRPHSAV UNRSTD;                                  0772
*               RFY                                                0773
*                 CRPLSAV UNRSTD;                                  0773
*               GEN(EJECT);                                        0774
         EJECT
*             END;                  /* END OF ECB PROCESSING         */
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                   CPTEXITP  -  EXIT PROCESSING                   */
*/*                                                                  */
*/*    IF THE USER IS CURRENTLY NOT ABENDING THEN THE FOLLOWING      */
*/*       OCCURS IN EXIT PROCESSING                                  */
*/*       1  STORAGE REQUEST FOR A UECB                              */
*/*          THIS UECB ALSO CONTAINS THE PAB                         */
*/*       2  IF STORAGE IS NOT AVAILABLE THEN A TPWAIT IS ISSUED     */
*/*       3  THE UECB AND PAB FIELDS ARE INITIALIZED                 */
*/*       4  QUEUE THE UECB ON THE PAB FOR EXIT SCHEDULING           */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*/* CPTEXITP                           CEXITP PROCESSING BEGINS      */
*                                                                  0776
*           ELSE                                                   0776
*             DO;                   /* EXIT SPECIFIED IN THE RPL     */
         B     @RC00682                                            0776
@RF00682 DS    0H                                                  0777
*/*VSETLCK  (CRETCODE,RELEASE,LOCAL,(LOCAL,ISTAICPT(CPTOBT1)))       */
*                                                                  0777
*CPTREL4:                                                          0777
*               DO;                 /* DECLARE AND RESTRICT REGS   0777
*                                      2,10,11,12,13,14, AND 15      */
CPTREL4  DS    0H                                                  0778
*                 RFY                                              0778
*                  (GPR02P,                                        0778
*                   GPR10P,                                        0778
*                   GPR11P,                                        0778
*                   GPR12P,                                        0778
*                   GPR13P,                                        0778
*                   GPR14P,                                        0778
*                   GPR15P) RSTD;   /* SAVE REGS 2 AND 10 THRU 14    */
*                 GEN REFS(GPR02F,GPR10F,GPR11F,GPR12F,GPR14F,GPR13P);
         STM   GPR10F,GPR12F,0(GPR13P)
         ST    GPR14F,12(GPR13P)
         ST    GPR02F,16(GPR13P)
*                                   /* INVOKE MODESET TO CHANGE PSW
*                                      PROTECTION KEY TO 0           */
*                 GEN SETS(2);                                     0780
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*                 GPR10P=GPR13P;    /* PUT SAVE AREA ADDR IN R 10  0781
*                                      INVOKE OS/VS SETLOCK MACRO    */
         LR    GPR10P,GPR13P                                       0781
*                 GEN REFS(GPR13P,PSALITA,FLC) SETS(GPR12F);       0782
         SETLOCK RELEASE,TYPE=LOCAL,                                   *
               RELATED=(LOCAL,ISTAICPT(CPTOBT1))
*                 GPR15P=GPR13P;    /* PUT RETURN CODE IN R 15 INVOKE
*                                      MODESET MACRO TO              */
         LR    GPR15P,GPR13P                                       0783
*                 DO;               /* RESTORE PSW PROTECTION KEY    */
*                   GEN SETS(2);                                   0785
         MODESET KEYADDR=(2),WORKREG=2
*                 END;              /* RESTORE REGISTERS             */
*                 GEN REFS(GPR10F,GPR13P) SETS(GPR10F,GPR11F,GPR12F,
*                     GPR13F,GPR14F,GPR02F);                       0787
         LR    GPR13F,GPR10F
         LM    GPR10F,GPR12F,0(GPR13P)
         L     GPR14F,12(GPR13P)
         L     GPR02F,16(GPR13P)
*                 IF GPR15F=4 THEN                                 0788
         C     GPR15F,@CF00035                                     0788
         BNE   @RF00788                                            0788
*                   GPR15F=0;                                      0789
         SLR   GPR15F,GPR15F                                       0789
*                 CRETCODE=GPR15F;  /* PUT RETURN CODE IN RCREG      */
@RF00788 DS    0H                                                  0791
*                 RFY                                              0791
*                  (GPR02P,                                        0791
*                   GPR10P,                                        0791
*                   GPR11P,                                        0791
*                   GPR12P,                                        0791
*                   GPR13P,                                        0791
*                   GPR14P,                                        0791
*                   GPR15P) UNRSTD;                                0791
*               END;                /* CPTREL4:VSETLCK               */
*/*     SET UP FOR REQSTOR         ALLOCATE SPACE FOR THE UECB       */
*                                                                  0793
*               /*****************************************************/
*               /*                                                   */
*               /* REQSTORE CBID(UECB)CLEAR(YES)SAVE(YES)RPH(YES)    */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0793
*               DO;                                                0793
*                                                                  0793
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0794
*                 RFY                                              0794
*                  (GPR02P,                                        0794
*                   GPR03P,                                        0794
*                   GPR04P,                                        0794
*                   GPR15P) RSTD;                                  0794
*                 RFY                                              0795
*                  (GPR01P,                                        0795
*                   GPR13P) RSTD;                                  0795
*                 GENERATE REFS(GPR01P,GPR02P,GPR13P) SETS(RPHWORK);
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*                 RFY                                              0797
*                  (GPR01P,                                        0797
*                   GPR13P) UNRSTD;                                0797
*                 DO;               /* LISATCVT                    0798
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                   GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0799
*                 END;              /* LISATCVT                      */
*                 GPR02P=GPR15P->ATCBPDA×'80000000'X;              0801
         L     GPR02P,ATCBPDA(,GPR15P)                             0801
         O     GPR02P,@CF01794                                     0801
*                 DCL                                              0802
*                   1 FMZA0145 FIXED(31) STATIC LOCAL,             0802
*                    2 * FIXED(8) INIT(184),                       0802
*                    2 * PTR(24) INIT(0);                          0802
*                 GPR03F=FMZA0145;                                 0803
         L     GPR03F,FMZA0145                                     0803
*                 GPR04F=17;                                       0804
         LA    GPR04F,17                                           0804
*                 GPR15P=GPR15P->ATCSMRQ;                          0805
         L     GPR15P,ATCSMRQ(,GPR15P)                             0805
*                 DCL                                              0806
*                   FMZL0145 BASED(GPR15P) LABEL VALUERANGE(*);    0806
*                 CALL FMZL0145;                                   0807
         BALR  @14,@15                                             0807
*                 RFY                                              0808
*                  (GPR13P) RSTD;                                  0808
*                 GENERATE REFS(GPR01P,RPHWORK) SETS(GPR02P,GPR13P);
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*                 RFY                                              0810
*                  (GPR13P) UNRSTD;                                0810
*                 RFY                                              0811
*                  (GPR02P,                                        0811
*                   GPR03P,                                        0811
*                   GPR04P,                                        0811
*                   GPR15P) UNRSTD;                                0811
*               END;                                               0812
*                                                                  0812
*               /*****************************************************/
*               /*                                                   */
*               /* ******** END OF REQSTORE EXPANSION                */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0813
*               GEN(EJECT);                                        0813
         EJECT
*               IF CRETCODE>8 THEN                                 0814
         C     CRETCODE,@CF00037                                   0814
         BNH   @RF00814                                            0814
*                 DO;                                              0815
*                   RFY                                            0816
*                     COMPREG RSTD;                                0816
*                   RFY                                            0817
*                     REASNREG RSTD;                               0817
*                   COMPREG=CVTAM;                                 0818
         LA    COMPREG,169                                         0818
*                   REASNREG=CRC7002;                              0819
         SLR   REASNREG,REASNREG                                   0819
         ICM   REASNREG,3,CRC7002                                  0819
*                   CALL CPTABEND;                                 0820
         BAL   @14,CPTABEND                                        0820
*                   RFY                                            0821
*                     COMPREG UNRSTD;                              0821
*                   RFY                                            0822
*                     REASNREG UNRSTD;                             0822
*                   GEN(EJECT);                                    0823
         EJECT
*                 END;              /* SYSTEM ABENDED                */
*               ELSE                                               0825
*                 ;                                                0825
@RF00814 DS    0H                                                  0826
*               IF CRETCODE=8 THEN                                 0826
         C     CRETCODE,@CF00037                                   0826
         BNE   @RF00826                                            0826
*                 DO;               /* CHECK RETURN CODE FROM REQSTOR*/
*/*  TPWAIT (CBASE,CRPLPTR,CREGSV)                                   */
*                                                                  0828
*                   DO;             /* BEGIN TPWAIT GENERATION       */
*                     RFY                                          0829
*                      (GPR01P,                                    0829
*                       GPR14P,                                    0829
*                       GPR15P) RSTD;                              0829
*                     RFY                                          0830
*                      (GPR00P) RSTD;                              0830
*                     GEN(STM   GPR00P,GPR15P,RPHWORK(GPR01P))     0831
*                     REFS(GPR00P,GPR01P,GPR15P) SETS(RPHWORK);    0831
         STM   GPR00P,GPR15P,RPHWORK(GPR01P)
*                     RFY                                          0832
*                      (GPR00P) UNRSTD;                            0832
*                     GPR15P=ADDR(LHAA0164);                       0833
         LA    GPR15P,LHAA0164                                     0833
*                     GPR14P=0;                                    0834
         SLR   GPR14P,GPR14P                                       0834
*                     GPR15P=GPR15P&'00FFFFFF'X;                   0835
         N     GPR15P,@CF03534                                     0835
*                     GPR15P=GPR15P×RPHWT1;                        0836
         O     GPR15P,@CF01753                                     0836
*                     CS(GPR14P,GPR15P,GPR01P->RPHRESMA);          0837
         CS    GPR14P,@15,RPHRESMA(GPR01P)                         0837
*                     BC(7,LHAB0164);                              0838
*                                                                  0838
         BC    7,LHAB0164                                          0838
*/* TPEXIT  NONE                                                     */
*                                                                  0839
*                     DO;                                          0839
*                       RESPECIFY                                  0840
*                         GPR15P RSTD;                             0840
*                                                                  0840
*/* ATBUILD (ISTPAB,ISTDYPAB,ISTATCVT)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0841
*                       DO;         /* LISATCVT                    0841
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                         GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER    */
         L     GPR15P,ATCLCPTR                                     0842
*                       END;        /* LISATCVT                      */
*                       RESPECIFY                                  0844
*                         GPR00F RSTD;                             0844
*                       GPR00F=0;   /* SET PARAMETER REGISTER TO 0   */
         SLR   GPR00F,GPR00F                                       0845
*                       GPR15P=GPR15P->ATCAP31;                    0846
         L     GPR15P,ATCAP31(,GPR15P)                             0846
*                       DCL                                        0847
*                         FMZL0169 BASED(GPR15P) LABEL VALUERANGE(*);
*                       CALL FMZL0169;                             0848
         BALR  @14,@15                                             0848
*                       RESPECIFY                                  0849
*                        (GPR00F,                                  0849
*                         GPR15P) UNRSTD;                          0849
*                     END;          /* **** END OF TPEXIT            */
*LHAB0164:                                                         0851
*                     ;                                            0851
LHAB0164 DS    0H                                                  0852
*                     GPR01P->RPHRESMA=0;                          0852
         SLR   @02,@02                                             0852
         ST    @02,RPHRESMA(,GPR01P)                               0852
*                     RFY                                          0853
*                      (GPR00P) RSTD;                              0853
*LHAA0164:                                                         0854
*                     ;                                            0854
LHAA0164 DS    0H                                                  0855
*                     GEN(LM    GPR00P,GPR15P,RPHWORK(GPR01P))     0855
*                     REFS(RPHWORK,GPR01P) SETS(GPR00P,GPR15P);    0855
         LM    GPR00P,GPR15P,RPHWORK(GPR01P)
*                     RFY                                          0856
*                      (GPR00P,                                    0856
*                       GPR01P,                                    0856
*                       GPR14P,                                    0856
*                       GPR15P) UNRSTD;                            0856
*                   END;            /* ****END OF TPWAIT WAIT FOR  0857
*                                      AVAILABLE SPACE               */
*                   GEN(EJECT);                                    0858
         EJECT
*                 END;                                             0859
*               ELSE                                               0860
*                 ;                                                0860
*                                                                  0860
@RF00826 DS    0H                                                  0861
*               /*****************************************************/
*               /*                                                   */
*               /* REQSTORE FOR A UECB HAS COMPLETED CONTINUE PROCESS*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0861
*               DCL                                                0861
*                 CACVTPTR REG(8) PTR(31);/* VTAM CVT BASE           */
*               RFY                                                0862
*                 CACVTPTR RESTRICTED;                             0862
*               RFY                                                0863
*                 ISTATCVT BASED(CACVTPTR);                        0863
*               DCL                                                0864
*                 CUECBPTR REG(9) PTR(31);                         0864
*               RFY                                                0865
*                 CUECBPTR RESTRICTED;                             0865
*               RFY                                                0866
*                 ISTUECB BASED(CUECBPTR);/* BASE FOR UECB           */
*               RFY                                                0867
*                 ISTPAB BASED(ADDR(UECPAB));/* BASE FOR PAB         */
*               CUECBPTR=RPHSRPRM;  /* SET UECB BASE                 */
         L     CUECBPTR,RPHSRPRM(,RPHPTR)                          0868
*               UECTSKID=RPHTSKID;  /* SET TASK ID                   */
         L     @14,RPHTSKID(,RPHPTR)                               0869
         ST    @14,UECTSKID(,CUECBPTR)                             0869
*               UECID=UEID;         /* SET ID IN UECB                */
         MVI   UECID(CUECBPTR),X'10'                               0870
*               UECTYPE=UECRPL;     /* INDICATE THAT THE EXIT ADDRESS
*                                      IS IN THE RPL                 */
         MVI   UECTYPE(CUECBPTR),X'00'                             0871
*               UECRPLAD=CRPLPTR;   /* SET RPL ADDRESS IN UECB       */
         ST    CRPLPTR,UECRPLAD(,CUECBPTR)                         0872
*               UECRPLAD=UECRPLAD&CHIOFF;/* CLEAR ANY GATING BIT     */
         L     @14,UECRPLAD(,CUECBPTR)                             0873
         N     @14,@CF01792                                        0873
         ST    @14,UECRPLAD(,CUECBPTR)                             0873
*               UECLEN=LENGTH(ISTUECB);/* SET LENGTH OF UECB         */
         MVI   UECLEN(CUECBPTR),X'54'                              0874
*               PABAPYP=CBITON;     /* SET USER EXIT SCHEDULING FLAG */
         LA    @14,16                                              0875
         ALR   @14,CUECBPTR                                        0875
         OI    PABAPYP(@14),B'10000000'                            0875
*               PABOFFST=ADDR(UECPAB)-ADDR(ISTUECB);/* SET OFFSET  0876
*                                      FROM THE BEGINNING OF THE UECB
*                                      INTO THE PAB                  */
         LA    @02,UECPAB(,CUECBPTR)                               0876
         SLR   @02,CUECBPTR                                        0876
         STC   @02,PABOFFST(,@14)                                  0876
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*    ESTABLISH THE ATCVT BASE IN ORDER TO GET THE ADDRESS OF THE   */
*/*    USER EXIT INTERFACE ROUTINE                                   */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0877
*               DO;                 /* LISATCVT                    0877
*                                      CVTBASE(PAGEABLE,(CACVTPTR))  */
*                 CACVTPTR=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     CACVTPTR,ATCLCPTR                                   0878
*               END;                /* LISATCVT                      */
*               GEN(EJECT);                                        0880
         EJECT
*                                                                  0881
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*/*    GET THE ADDRESS OF THE USER EXIT INTERFACE ROUTINE FROM       */
*/*      THE VTAM CVT AND INSERT IT INTO THE UECB                    */
*/*                                                                  */
*/*    GET THE ADDRESS OF THE FIELD IN THE UECB THAT CONTAINS THE    */
*/*      ADDRESS OF THE USER EXIT INTEFACE ROUTINE AND INSERT  IT    */
*/*      INTO THE PAB                                                */
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0881
*               UECDVTPT=ATCUEP;    /* SET ADDRESS OF THE USER EXIT
*                                      INTERFACE ROUTINE IN UECB     */
         L     @14,ATCUEP(,CACVTPTR)                               0881
         ST    @14,UECDVTPT(,CUECBPTR)                             0881
*               PABDVTA=ADDR(UECDVTPT);/* SET TO USER EXIT INTERFACE */
         LA    @14,UECDVTPT(,CUECBPTR)                             0882
         STCM  @14,7,PABDVTA+16(CUECBPTR)                          0882
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*/*           QUEUE THE UECB ON THE PAB FOR EXIT SCHEDULING          */
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*  TPQUE (CUECBPTR,UECPAB) NORM                                    */
*                                                                  0883
*               DO;                                                0883
*                 RFY                                              0884
*                  (GPR00P,                                        0884
*                   GPR01P,                                        0884
*                   GPR04P,                                        0884
*                   GPR05P,                                        0884
*                   GPR15P) RSTD;                                  0884
*                 GEN REFS(GPR01P) SETS(RPHWORK)                   0885
*                     (STM GPR02P,GPR08P,RPHWORK(GPR01P));         0885
         STM GPR02P,GPR08P,RPHWORK(GPR01P)
*                 GPR00P=0;                                        0886
         SLR   GPR00P,GPR00P                                       0886
*                 GPR15P=ADDR(UECPAB);/* HOLD PAB PTR                */
         LA    GPR15P,UECPAB(,CUECBPTR)                            0887
*                 GPR04P=CUECBPTR;  /* WORK ELE PTR                  */
         LR    GPR04P,CUECBPTR                                     0888
*                 GPR05P=GPR15P;    /* PASS PAB PTR                  */
         LR    GPR05P,GPR15P                                       0889
*                 CALL ATCLCPTR->ATCAP37->ISTAPC37;                0890
         L     @02,ATCLCPTR                                        0890
         L     @15,ATCAP37(,@02)                                   0890
         BALR  @14,@15                                             0890
*                 GEN(NOPR  0)                                     0891
*                 NOSETS NOREFS;                                   0891
         NOPR  0
*                 RFY                                              0892
*                  (GPR00P,                                        0892
*                   GPR01P,                                        0892
*                   GPR04P,                                        0892
*                   GPR05P,                                        0892
*                   GPR15P) UNRSTD;                                0892
*               END;                /* *** END OF TPQUE GENERATION 0893
*                                      UECB ON PAB FOR EXIT SCHED    */
*               GEN(EJECT);                                        0894
         EJECT
*             END;                  /* END OF EXIT PROCESSING        */
*         END;                      /* END OF NON AUTH -ONLY- PATH 0896
*                                                            @Z30PPGF*/
@RC00682 DS    0H                                                  0897
*     END;                          /* END OF NON-MEMTERM NORMAL   0897
*                                      PROCESSING            @ZM32701*/
@RC00390 DS    0H                                                  0898
*   GEN(MODESET EXTKEY=VTAM);       /* BACK IN VTAM KEY      @ZM40773*/
@RC00313 DS    0H                                                  0898
         MODESET EXTKEY=VTAM
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*      PREPARE TO RETURN TO CALLER OF THIS MODULE                  */
*/*                                                                  */
*/*    IF REGISTER 7  HAS ITS HI ORDER BIT SET ON THEN IT            */
*/*       CONTAINS THE CALLERS SAVE AREA POINTER                     */
*/*                                                                  */
*/*    REGISTER 13 THEN GETS RESTORED WITH THE POINTER IN            */
*/*        REGISTER 7                                                */
*/*                                                                  */
*/*    IF THE HI ORDER BIT IN REGISTER 7 IS ZERO THEN THE            */
*/*       CALLER DID NOT PROVIDE A SAVE AREA AND REGISTER 7          */
*/*       NOW CONTAINS THE CALLERS RETURN ADDRESS                    */
*/*    REGISTER 14 THEN GETS RESTORED WITH THE RETURN ADDRESS        */
*/*       IS REGISTER 7                                              */
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*                                                                  0899
*   RFY                                                            0899
*     CACVTPTR UNRSTD;                                             0899
*   RFY                                                            0900
*     CRPLPTR UNRSTD;                                              0900
*   IF CREGSVF<0 THEN                                              0901
         LTR   CREGSVF,CREGSVF                                     0901
         BNM   @RF00901                                            0901
*     DO;                           /* SAVE AREA WAS PROVIDED        */
*       GENERATE REFS(CRETCODE,CBASE,CREGSV) SETS(CSAVE,CRETURN);  0903
            LR    CSAVE,CREGSV          RESTORE REG 13
            L     CRETURN,12(CSAVE)
            LM    @00,CBASE,20(CSAVE) RESTORE ALL USER REGS/*@ZA32681*/
            BR   CRETURN                   RETURN TO CALLER
*     END;                                                         0904
*   ELSE                                                           0905
*     DO;                                                          0905
         B     @RC00901                                            0905
@RF00901 DS    0H                                                  0906
*       GENERATE REFS(CREGSV) SETS(CRETURN);                       0906
            LR   CRETURN,CREGSV           RESTORE RETURN ADDRESS
            BR   CRETURN
*     END;                                                         0907
*                                                                  0908
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*              CPTVALCK - VALIDTY CHECK PROCESSING                 */
*/*                                                                  */
*/*    THE INPUT TO THIS SUBROUTINE IS THE FOLLOWING                 */
*/*                                                                  */
*/*        REG 6 - CRPLPTR - MUST CONTAIN A POINTER TO THE           */
*/*        AREA TO BE VALIDTY CHECKED                                */
*/*                                                                  */
*/*        REG 10 - CLENPTR - MUST CONTAIN A POINTER TO THE          */
*/*        LENGTH OF THE FIELD TO BE VALIDITY CHECKED                */
*/*                                                                  */
*/*        REG 13 - CSAVE - MUST CONTAIN A POINTER TO A              */
*/*        REGISTER SAVE AREA FOR VALCHEK                            */
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0908
*CPTVALCK:                                                         0908
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0908
         B     @PB00002                                            0908
CPTVALCK DS    0H                                                  0909
*   RFY                                                            0909
*     CRPLPTR RSTD;                                                0909
*   RFY                                                            0910
*     CREGSAV RSTD;                                                0910
*   RFY                                                            0911
*    (CRETURN,                                                     0911
*     CLENPTR,                                                     0911
*     CREG8) RSTD;                  /*                       @Z30PPGF*/
*   CREGSAV=CRETURN;                /* SAVE RETURN ADDRESS           */
         LR    CREGSAV,CRETURN                                     0912
*                                                                  0913
*/*VALCHEK  (CRETCODE,(CSAVE),(CRPLPTR),UA,(CLENPTR))                */
*                                                                  0913
*   DO;                                                            0913
*     RFY                                                          0914
*      (GPR01P,                                                    0914
*       GPR02P,                                                    0914
*       GPR04P,                                                    0914
*       GPR06P,                                                    0914
*       GPR13P,                                                    0914
*       GPR14P,                                                    0914
*       GPR15P) RSTD;               /* DECLARE AND RESTRICT REGS 1,
*                                      2, 4, 6, 13,14, AND 15        */
*     CRETCODE=0;                   /* SET RETURN CODE TO NO ERROR 0915
*                                      INVOKE XREGSET MACRO TO VERIFY
*                                      SAVEAREA OPERAND AND PUT IT IN
*                                      REG 13                        */
         SLR   CRETCODE,CRETCODE                                   0915
*/*XREGSET  PID('SAVEAREA')PPARM((CSAVE))RREG(13,GPR13P)             */
*                                                                  0916
*     DO;                                                          0916
*       GPR13P=CSAVE;               /* SET RREG SYMBOL TO VALUE OF 0917
*                                      PPARM OPERAND                 */
*     END;                          /* XREGSET                       */
*     DCL                                                          0919
*       1 SAV0190 CHAR(20) BASED(GPR13P),/* ESTABLISH SAVE AREA MAP  */
*        2 SAV10190 CHAR(4),        /* TO SAVE REGS 1,2,4,6, AND 14  */
*        2 SAV20190 CHAR(4),                                       0919
*        2 SAV40190 CHAR(4),                                       0919
*        2 SAV60190 CHAR(4),                                       0919
*        2 SAVE0190 CHAR(4);                                       0919
*     SAV10190=GPR01F;              /* SAVE REGS ONE,                */
         STCM  GPR01F,15,SAV10190(GPR13P)                          0920
*     SAV20190=GPR02F;              /* TWO,                          */
         STCM  GPR02F,15,SAV20190(GPR13P)                          0921
*     SAV40190=GPR04F;              /* FOUR,                         */
         STCM  GPR04F,15,SAV40190(GPR13P)                          0922
*     SAV60190=GPR06F;              /* SIX,                          */
         STCM  GPR06F,15,SAV60190(GPR13P)                          0923
*     SAVE0190=GPR14F;              /* AND FOURTEEN                  */
         STCM  GPR14F,15,SAVE0190(GPR13P)                          0924
*     GPR04P=GPR01P->RPHTSKID;      /* PUT ADDR OF PROCESS     SCHED-
*                                      ULING TABLE IN REG 4          */
         L     GPR04P,RPHTSKID(,GPR01P)                            0925
*/* ATBUILD (ISTPST)                                                 */
*/* END OF ATBUILD                                                   */
*                                                                  0926
*                                   /* INCLUDE PROCESS SCHEDULING  0926
*                                      TABLE (ISTPST)                */
*     GPR15P=GPR04P->PSTTCBA;       /* PUT TASK CONTROL BLOCK ADDRESS
*                                      IN REGISTER 15                */
         L     GPR15P,PSTTCBA(,GPR04P)                             0926
*     GPR04F=SAV40190;              /* RESTORE REG 4 INVOKE XREGSET
*                                      MACRO TO VERIFY USER AREA   0927
*                                      OPERAND AND PUT ADDR IN REG 1 */
         ICM   @11,15,SAV40190(GPR13P)                             0927
         LR    GPR04F,@11                                          0927
*/*XREGSET  PID('USER AREA')PPARM((CRPLPTR))RREG(,GPR01P)            */
*                                                                  0928
*     DO;                                                          0928
*       GPR01P=CRPLPTR;             /* SET RREG SYMBOL TO VALUE OF 0929
*                                      PPARM OPERAND                 */
         LR    GPR01P,CRPLPTR                                      0929
*     END;                          /* XREGSET INVOKE XREGSET MACRO
*                                      TO VERIFY LENGTH OPERAND AND
*                                      PUT VALUE IN REG 14           */
*/*XREGSET  PID('LENGTH')PPARM((CLENPTR))RREG(,GPR14F)OUTPUT(PARM)   */
*                                                                  0931
*     DO;                                                          0931
*       DCL                                                        0932
*         DUME0195 CHAR(4) BASED(CLENPTR);/* DEFINE DUMMY VARIABLE SO
*                                      THAT PPARM OPERAND CAN BE USED
*                                      AS A POINTER                  */
*       GPR14F=DUME0195;            /* SET RREG SYMBOL TO VALUE    0933
*                                      POINTED TO BY PPARM OPER      */
         ICM   GPR14F,15,DUME0195(CLENPTR)                         0933
*     END;                          /* XREGSET                       */
*     GEN SETS(2);                                                 0935
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=2
*     GPR06P=GPR02P;                                               0936
         LR    GPR06P,GPR02P                                       0936
*     GPR04P=GPR15P;                /* RESTORE TCB ADDR              */
         LR    GPR04P,GPR15P                                       0937
*     GPR02F=GPR01F+GPR14F-1;       /* PUT END ADDRESS IN REG 2      */
         LR    GPR02F,GPR01F                                       0938
         ALR   GPR02F,GPR14F                                       0938
         BCTR  GPR02F,0                                            0938
*     DCL                                                          0939
*       CZMP0190 PTR(31) LOCATION(16);/* ESTABLISH POINTER TO CVT    */
*     CALL CZMP0190->CVT0VL00;      /* INVOKE TASK SUPERVISOR      0940
*                                      VALIDITY CHECKING ROUTINE UPON
*                                      RETURN, CHECK PSW CONDITION 0940
*                                      CODE SET BY THE VALIDITY    0940
*                                      CHECKING ROUTINE              */
         L     @11,CZMP0190                                        0940
         L     @15,CVT0VL00(,@11)                                  0940
         BALR  @14,@15                                             0940
*     BC(8,OKAY0190);               /* IF ADDR VALID, DON'T ALTER  0941
*                                      RETURN CODE VALUE FROM 0      */
         BC    8,OKAY0190                                          0941
*     CRETCODE=4;                   /* SET RETURN CODE TO ERROR      */
         LA    CRETCODE,4                                          0942
*     GO TO VC30190;                                               0943
         B     VC30190                                             0943
*OKAY0190:                                                         0944
*     CRETCODE=0;                   /* PUT RETURN CODE IN RCREG      */
OKAY0190 SLR   CRETCODE,CRETCODE                                   0944
*VC30190:                                                          0945
*     GPR02P=GPR06P;                                               0945
VC30190  LR    GPR02P,GPR06P                                       0945
*     GEN SETS(2);                                                 0946
         MODESET KEYADDR=(2),WORKREG=2
*     GPR01F=SAV10190;              /* RESTORE REGS ONE,             */
         ICM   GPR01F,15,SAV10190(GPR13P)                          0947
*     GPR02F=SAV20190;              /* TWO,                          */
         ICM   GPR02F,15,SAV20190(GPR13P)                          0948
*     GPR04F=SAV40190;              /* FOUR,                         */
         ICM   GPR04F,15,SAV40190(GPR13P)                          0949
*     GPR06F=SAV60190;              /* SIX,                          */
         ICM   GPR06F,15,SAV60190(GPR13P)                          0950
*     GPR14F=SAVE0190;              /* AND FOURTEEN                  */
         ICM   GPR14F,15,SAVE0190(GPR13P)                          0951
*     RFY                                                          0952
*      (GPR01P,                                                    0952
*       GPR02P,                                                    0952
*       GPR04P,                                                    0952
*       GPR06P,                                                    0952
*       GPR13P,                                                    0952
*       GPR14P,                                                    0952
*       GPR15P) UNRSTD;             /* UNRESTRICT REGISTERS          */
*   END;                            /* VALCHEK IS THE AREA IN THE  0953
*                                      USERS REGION                  */
*   CRETURN=CREGSAV;                /* RESTORE RETURN ADDRESS        */
         LR    CRETURN,CREGSAV                                     0954
*   RETURN;                                                        0955
@EL00002 DS    0H                                                  0955
@EF00002 DS    0H                                                  0955
@ER00002 BR    @14                                                 0955
*   RFY                                                            0956
*     CRPLPTR UNRSTD;                                              0956
*   RFY                                                            0957
*     CREGSAV UNRSTD;                                              0957
*   RFY                                                            0958
*    (CRETURN,                                                     0958
*     CLENPTR,                                                     0958
*     CREG8) UNRSTD;                /*                       @Z30PPGF*/
*   END CPTVALCK;                                                  0959
@PB00002 DS    0H                                                  0959
*   GEN(EJECT);                                                    0960
         EJECT
*                                                                  0961
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*              CPTABEND - VTAM OR USER ABEND PROCESSING            */
*/*                                                                  */
*/*    THE INPUT TO THIS SUBROUTINE IS THE FOLLOWING                 */
*/*                                                                  */
*/*        REG 8 - COMPREG - MUST CONTAIN A VTAM OR USER             */
*/*                          COMPLETION CODE                         */
*/*                                                                  */
*/*        REG 9 - REASNREG - MUST CONTAIN A REASON CODE             */
*/*                           FOR THE ABEND                          */
*/*                                                                  */
*/*    NOTE:  SINCE THIS SUBROUTINE ENDS IN A VTAM OR USER ABEND     */
*/*           NO RETURN REGISTER IS SAVED FROM THE CALLING ROUTINE   */
*/*                                                                  */
*/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
*/*                                                                  */
*                                                                  0961
*CPTABEND:                                                         0961
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0961
         B     @PB00003                                            0961
CPTABEND DS    0H                                                  0962
*   RFY                                                            0962
*     COMPREG RSTD;                                                0962
*   RFY                                                            0963
*     REASNREG RSTD;                                               0963
*   GEN(MODESET EXTKEY=VTAM);       /* BACK IN VTAM KEY      @Z30PPGF*/
         MODESET EXTKEY=VTAM
*/*VABEND COMPCODE((COMPREG))REASCODE((REASNREG))DUMP(YES)STEP(YES)  */
*                                                                  0965
*   DO;                             /* ****BEGIN VABEND            0965
*                                      GENERATION****                */
*     RFY                                                          0966
*      (GPR01P,                                                    0966
*       GPR15P) RSTD;               /* DECLARE AND RESTRICT REGS     */
*     GPR15F=REASNREG;              /* PUT REASON CODE IN REG15      */
         LR    GPR15F,REASNREG                                     0967
*     GPR01F=COMPREG;                                              0968
         LR    GPR01F,COMPREG                                      0968
*     SLL(GPR01F,12);               /* COMP CODE IN R1 BITS 8-19   0969
*                                      INVOKE OS/VS ABEND MACRO      */
         SLL   GPR01F,12                                           0969
*     GEN REFS(GPR01F);                                            0970
         ABEND (1),DUMP,STEP
*     RFY                                                          0971
*      (GPR01P,                                                    0971
*       GPR15P) UNRSTD;             /* UNRESTRICT REGS 1 AND 15      */
*   END;                            /* ****END OF VABEND           0972
*                                      GENERATION****        @ZA10976*/
*   RFY                                                            0973
*     COMPREG UNRSTD;                                              0973
*   RFY                                                            0974
*     REASNREG UNRSTD;                                             0974
*   END CPTABEND;                                                  0975
@EL00003 DS    0H                                                  0975
@EF00003 DS    0H                                                  0975
@ER00003 BR    @14                                                 0975
*                                                                  0976
*   /*****************************************************************/
*   /*                                                               */
*   /* BACK END THAT ALLOWS THE USER TO GET CONTROL UNDER AN SRB IF  */
*   /* THE CALLER OF CPT IS REDRIVING ITSELF WITH SAME RPH. MUST BE  */
*   /* LAST IN PROGRAM DUE TO BASE REG                       @Z30PPGF*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0976
*AICPTBE:                                                          0976
*   PROC OPTIONS(NOSAVE);           /*                       @Z30PPGF*/
AICPTBE  DS    0H                                                  0977
*   RFY                                                            0977
*     CREG0 RSTD;                                                  0977
*   GEN(USING   AICPTBE,CBASE);     /*                       @Z30PPGF*/
         USING   AICPTBE,CBASE
*   CBASE=CRETCODE;                 /* GET BASE VALUE FROM REG 15  0979
*                                                            @Z30PPGF*/
         LR    CBASE,CRETCODE                                      0979
*   RFY                                                            0980
*     IFGRPL BASED(RPHPTR);         /* REG 1 POINTS TO RPL   @Z30PPGF*/
*   RFY                                                            0981
*    (OLDSRB,                                                      0981
*     MPSTPTR,                                                     0981
*     OLDCNT,                                                      0981
*     NEWSRB,                                                      0981
*     NEWCNT,                                                      0981
*     ATCVTPTR,                                                    0981
*     SRBPTR) RSTD;                                                0981
*   DO;                             /* LISATCVT                    0982
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*     ATCVTPTR=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0983
*   END;                            /* LISATCVT                      */
*   RFY                                                            0985
*     ISTATCVT BASED(ATCVTPTR);     /*                       @Z30PPGF*/
*                                                                  0985
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP FRR ROUTINE ISTAPC66                           @Z30PPGF*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0986
*   OLDCNT=ATCAP66;                 /* GET FRR ROUTINE ADDR  @Z30PPGF*/
         L     OLDCNT,ATCAP66(,ATCVTPTR)                           0986
*   GEN REFS(PSACSTK,FRRSCURR,FRRS,FRRSEMP,FRRSELEN,FRRSLAST,FRRSENTR,
*       FRRSPARM,PSALSFCC,FRRSFRRA) SETS(OLDCNT,NEWSRB,NEWCNT);    0987
         SETFRR A,FRRAD=(OLDCNT),PARMAD=(NEWSRB),                      X
               WRKREGS=(NEWSRB,NEWCNT)
*   NEWSRB->R66RPL=RPHPTR;          /* PUT RPL ADDR IN FRR PARM LIST
*                                                            @Z30PPGF*/
         ST    RPHPTR,R66RPL(,NEWSRB)                              0988
*   NEWSRB->R66RTRYW=(RPLSAV13+12)->AWORD;/* PUT CIR RETURN ADDR AS
*                                      RETRY POINT           @Z30PPGF*/
         L     @14,RPLSAV13(,RPHPTR)                               0989
         L     @14,AWORD+12(,@14)                                  0989
         ST    @14,R66RTRYW(,NEWSRB)                               0989
*   SRBPTR=CREG0;                   /* ON ENTRY REG ZERO POINTS TO 0990
*                                      SRB                   @Z30PPGF*/
         LR    SRBPTR,CREG0                                        0990
*   RFY                                                            0991
*     CREG0 UNRSTD;                 /*                       @Z30PPGF*/
*   MPSTPTR=PSAAOLD->ASCBASXB->ASXBMPST;/*                   @Z30PPGF*/
         L     @14,PSAAOLD                                         0992
         L     @14,ASCBASXB(,@14)                                  0992
         L     MPSTPTR,ASXBMPST(,@14)                              0992
*   NEWSRB->R66MPSTW=MPSTPTR;       /* PUT MPST ADDR IN FRR PRM LST
*                                                            @Z30PPGF*/
         ST    MPSTPTR,R66MPSTW(,NEWSRB)                           0993
*   OLDCNT=ATCSRBCN;                /* GET SRB CNT WORD FROM ATCVT 0994
*                                      DCR4214                       */
         L     OLDCNT,ATCSRBCN(,ATCVTPTR)                          0994
*   OLDSRB=ATCSRBQ;                 /* GET PTR TO 1ST SRB ON ATCVT 0995
*                                      DCR4214                       */
         L     OLDSRB,ATCSRBQ(,ATCVTPTR)                           0995
*NQSRBLP:                                                          0996
*   IF ATCSRBAC>=ATCSRBCT           /* # OF SRB ON ATCVTAT LIMIT DCR
*                                      4214                          */
*     THEN                                                         0996
NQSRBLP  CLC   ATCSRBAC(2,ATCVTPTR),ATCSRBCT(ATCVTPTR)             0996
         BL    @RF00996                                            0996
*     DO;                           /* YES RELSTORE IT       @Z30PPGF*/
*/* RELSTORE BUFADDR(SRBPTR)SAVE(NO)CLEAR(NO)                        */
*                                                                  0998
*       DO;                                                        0998
*                                                                  0998
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0999
*         RFY                                                      0999
*          (GPR02P,                                                0999
*           GPR03P,                                                0999
*           GPR04P,                                                0999
*           GPR15P) RSTD;                                          0999
*         GPR04P=SRBPTR;                                           1000
         LR    GPR04P,SRBPTR                                       1000
*         DCL                                                      1001
*           1 FMZA0205 FIXED(31) STATIC LOCAL,                     1001
*            2 * FIXED(8) INIT(0),                                 1001
*            2 * PTR(24) INIT(0);                                  1001
*         GPR03F=FMZA0205;                                         1002
         L     GPR03F,FMZA0205                                     1002
*         DO;                       /* LISATCVT                    1003
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     1004
*         END;                      /* LISATCVT                      */
*         GPR02P=GPR15P->ATCBPDA;                                  1006
         L     GPR02P,ATCBPDA(,GPR15P)                             1006
*         GPR15P=GPR15P->ATCSMRS;                                  1007
         L     GPR15P,ATCSMRS(,GPR15P)                             1007
*         DCL                                                      1008
*           FMZL0205 BASED(GPR15P) LABEL VALUERANGE(*);            1008
*         CALL FMZL0205;                                           1009
         BALR  @14,@15                                             1009
*         RFY                                                      1010
*          (GPR02P,                                                1010
*           GPR03P,                                                1010
*           GPR04P,                                                1010
*           GPR15P) UNRSTD;                                        1010
*       END;                        /* *********END OF RELSTORE    1011
*                                      EXPANSION*********            */
*     END;                          /*                       @Z30PPGF*/
*   ELSE                                                           1013
*     DO;                           /* NOT AT LIMIT          @Z30PPGF*/
         B     @RC00996                                            1013
@RF00996 DS    0H                                                  1014
*       SRBFLNK=OLDSRB;             /* CHAIN 1ST SRB TO NEW SRB    1014
*                                                            @Z30PPGF*/
         ST    OLDSRB,SRBFLNK(,SRBPTR)                             1014
*       NEWCNT=OLDCNT+'00010001'X;  /* ADD ONE TO EACH CNT   @Z30PPGF*/
         LR    NEWCNT,OLDCNT                                       1015
         AL    NEWCNT,@CF03513                                     1015
*       NEWSRB=SRBPTR;              /*                       @Z30PPGF*/
         LR    NEWSRB,SRBPTR                                       1016
*       CDS(OLDSRB,NEWSRB,ATCSRB);  /* TRY TO PUT SRB ON ATCVT     1017
*                                      DCR4214                       */
         CDS   OLDSRB,NEWSRB,ATCSRB(ATCVTPTR)                      1017
*       BC(7,NQSRBLP);              /* IF FAILURE TRY AGAIN  @Z30PPGF*/
         BC    7,NQSRBLP                                           1018
*     END;                          /* SRB ENQUEUED          @Z30PPGF*/
*   CSAVE=RPLSAV13;                 /* GET RETURN ADDR PTR   @Z30PPGF*/
@RC00996 L     CSAVE,RPLSAV13(,RPHPTR)                             1020
*   GEN(L     CRETURN,12(CSAVE));   /* PUT RETURN ADDR IN REG 14   1021
*                                                            @Z30PPGF*/
         L     CRETURN,12(CSAVE)
*   GEN(BR    CRETURN);             /* RETURN TO CIR         @Z30PPGF*/
         BR    CRETURN
*   RFY                                                            1023
*    (OLDSRB,                                                      1023
*     MPSTPTR,                                                     1023
*     OLDCNT,                                                      1023
*     NEWSRB,                                                      1023
*     NEWCNT,                                                      1023
*     ATCVTPTR,                                                    1023
*     SRBPTR) UNRSTD;                                              1023
*   RFY                                                            1024
*     ISTATCVT BASED(CACVTPTR);     /*                       @Z30PPGF*/
*   END AICPTBE;                                                   1025
*                                                                  1025
@EL00004 DS    0H                                                  1025
@EF00004 DS    0H                                                  1025
@ER00004 BR    @14                                                 1025
@PB00004 DS    0H                                                  1025
*/* TPEPILOG                                                         */
*                                                                  1026
*   GEN(PRINT OFF);                                                1026
         PRINT OFF
*   DCL                                                            1027
*     ISTAPC34 ENTRY BASED(ATCAP34) VALRG(*);/* RESET ROUTINE        */
*   DCL                                                            1028
*     ISTAPC37 ENTRY BASED(ATCAP37) VALRG(*);/* TPQUE ROUTINE        */
*   GEN(PRINT ON);                                                 1029
*                                                                  1029
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  1030
*   END ISTAICPT                                                   1030
*                                                                  1030
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IFGACBVT)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (ISTR66M )                                       */
*/*%INCLUDE SYSUT5  (PROCESSA)                                       */
*/*%INCLUDE SYSUT5  (FREECRPL)                                       */
*/*%INCLUDE SYSUT5  (GETSRB  )                                       */
*/*%INCLUDE SYSUT5  (SCHEDSRB)                                       */
*/*%INCLUDE SYSUT5  (AICPTBE )                                       */
*                                                                  1030
*       ;                                                          1030
@DATA    DS    0H
@CH00347 DC    H'0'
@SM03620 MVC   CIFGRPL+12(0,CRPLPTR),CISTCRPL+12(COPYRPL)
@DATD    DSECT
         DS    0F
ISTAICPT CSECT
         DS    0F
@CF00035 DC    F'4'
@CF00037 DC    F'8'
@CF00365 DC    F'13'
@CF03618 DC    F'112'
@CF03619 DC    F'-7'
@CF01753 DC    XL4'08000000'
@CF01792 DC    XL4'7FFFFFFF'
@CF01794 DC    XL4'80000000'
@CF03513 DC    XL4'00010001'
@CF03534 DC    XL4'00FFFFFF'
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
ISTAICPT CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
CPTECB   DC    F'4'
FMZA0010 DS    FL4
         ORG   FMZA0010
@NM00105 DC    AL1(64)
@NM00106 DC    AL3(0)
         ORG   FMZA0010+4
FMZA0032 DS    FL4
         ORG   FMZA0032
@NM00108 DC    AL1(64)
@NM00109 DC    AL3(0)
         ORG   FMZA0032+4
FMZA0054 DS    FL4
         ORG   FMZA0054
@NM00111 DC    AL1(56)
@NM00112 DC    AL3(0)
         ORG   FMZA0054+4
FMZA0101 DS    FL4
         ORG   FMZA0101
@NM00113 DC    AL1(64)
@NM00114 DC    AL3(0)
         ORG   FMZA0101+4
FMZA0145 DS    FL4
         ORG   FMZA0145
@NM00116 DC    AL1(184)
@NM00117 DC    AL3(0)
         ORG   FMZA0145+4
FMZA0205 DS    FL4
         ORG   FMZA0205
@NM00118 DC    AL1(0)
@NM00119 DC    AL3(0)
         ORG   FMZA0205+4
@CC03541 DC    C'PSBE'
CHALF0   DC    X'0000'
CRC7001  DC    X'7001'
CRC7002  DC    X'7002'
CRC7003  DC    X'7003'
CRC7004  DC    X'7004'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SRBPTR   EQU   @02
RPHPTR   EQU   @01
CREG8    EQU   @08
COPYRPL  EQU   @09
CECBADDR EQU   @01
CRPHSAV  EQU   @09
CLENPTR  EQU   @10
CREGSAV  EQU   @04
CRPLSAV  EQU   @05
CRPLPTR  EQU   @06
COMPREG  EQU   @08
REASNREG EQU   @09
CBASE    EQU   @12
CSAVE    EQU   @13
CREGSV   EQU   @07
CREGSVF  EQU   @07
CRETURN  EQU   @14
CRETCODE EQU   @15
MPSTPTR  EQU   @03
OLDSRB   EQU   @08
OLDCNT   EQU   @09
NEWSRB   EQU   @04
NEWCNT   EQU   @05
OLDCRPL  EQU   @14
OLDRCNT  EQU   @15
NEWCRPL  EQU   @04
CREG0    EQU   @00
ATCVTPTR EQU   @10
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR06F   EQU   @06
GPR06P   EQU   @06
GPR09F   EQU   @09
GPR09P   EQU   @09
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR13P   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
GPR15P   EQU   @15
CACVTPTR EQU   @08
CUECBPTR EQU   @09
CODEPTR  EQU   @02
GPR07F   EQU   @07
GPR07P   EQU   @07
GPR08F   EQU   @08
GPR08P   EQU   @08
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
ATCLCPTR EQU   1032
CMZP0129 EQU   16
CZMP0190 EQU   16
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLDACB  EQU   RPLCOMN+24
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLECBIN EQU   RPLECBSW
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLNEXIT EQU   RPLEXTD1
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLUSNSO EQU   RPLOSENS+2
RPLSAV13 EQU   RPLVTEXT+28
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLAUTUS EQU   RPLVTFL1
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBDEB   EQU   ACBDDNM+5
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBVVIC  EQU   ACBINFLG
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBVTEXT EQU   IFGACB+76
CVTMAP   EQU   0
CVT0VL00 EQU   CVTMAP+24
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVT0PT01 EQU   CVTMAP+152
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
ISTCRPL  EQU   0
CRPRRPLP EQU   ISTCRPL+112
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASXB     EQU   0
ASXBMPST EQU   ASXB+16
ASXBAEQ  EQU   ASXB+168
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
SRBSECT  EQU   0
SRBID    EQU   SRBSECT
SRBFLNK  EQU   SRBSECT+4
SRBASCB  EQU   SRBSECT+8
SRBFLC   EQU   SRBSECT+12
SRBPASID EQU   SRBFLC+2
SRBEP    EQU   SRBSECT+20
SRBRMTR  EQU   SRBSECT+24
SRBPARM  EQU   SRBSECT+28
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
R66M     EQU   0
R66MPSTW EQU   R66M
R66RPL   EQU   R66M+8
R66RTRYW EQU   R66M+12
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHCVFLG EQU   RPHRPHA
RPHGATE  EQU   RPHCVFLG
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
RPHSAVE2 EQU   RPHWORK+4
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABOFFST EQU   ISTPAB+8
PABDVTA  EQU   ISTPAB+9
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABAPYP  EQU   PABFLAGS
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTUECB  EQU   0
UECID    EQU   ISTUECB
UECLEN   EQU   ISTUECB+1
UECTYPE  EQU   ISTUECB+3
UECTSKID EQU   ISTUECB+8
UECPAB   EQU   ISTUECB+16
UECPLIST EQU   ISTUECB+32
UECACB   EQU   UECPLIST
UECRPLAD EQU   UECACB
UECNDID  EQU   UECPLIST+4
UECTPNCD EQU   UECNDID
UECREQTR EQU   UECPLIST+8
UECDLEN  EQU   UECPLIST+12
UECRSNCD EQU   UECDLEN
UECDVTPT EQU   ISTUECB+68
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00076 EQU   LOKCHNG+2
ISTACDEB EQU   0
ACDVTPRX EQU   ISTACDEB
ACDDBPFX EQU   ISTACDEB+16
ACDTBLOF EQU   ACDDBPFX+6
ACDBASIC EQU   ISTACDEB+24
ACDTCBAD EQU   ACDBASIC
ACDNMSUB EQU   ACDTCBAD
ACDDEBAD EQU   ACDBASIC+4
ACDUSRPG EQU   ACDBASIC+16
ACDACBAD EQU   ACDBASIC+24
ACDAPPAD EQU   ACDBASIC+28
ACDVTAM  EQU   ISTACDEB+56
ACDSSFLG EQU   ACDVTAM+80
ACDABEND EQU   ACDSSFLG
ACDAPDAT EQU   ACDVTAM+83
ISTDYPAB EQU   0
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSMRQ  EQU   ATCCOM+180
ATCSMRS  EQU   ATCCOM+188
ATCCSMR  EQU   ISTATCVT+296
ATCUEP   EQU   ISTATCVT+304
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00085 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP31  EQU   ATCAOSM+24
ATCAP34  EQU   ATCAOSM+32
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCAP37  EQU   ATCAOSM+264
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBQ  EQU   ATCSRB
ATCSRBCN EQU   ATCSRB+4
ATCSRBAC EQU   ATCSRBCN+2
ATCCRPL  EQU   ATCAOSM+296
ATCCRPLQ EQU   ATCCRPL
ATCRPLCN EQU   ATCCRPL+4
ATCRPLAC EQU   ATCRPLCN+2
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00087 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCAP66  EQU   ATCAOSM+536
ATCAP83  EQU   ATCAOSM+548
ATCAICTN EQU   ATCAOSM+576
ATCZFLAG EQU   ATCAOSM+588
ATCSRBCT EQU   ATCAOSM+590
ATCRPLCT EQU   ATCAOSM+594
ISTMPST  EQU   0
MPSRSV07 EQU   ISTMPST+4
MPSRQUE  EQU   ISTMPST+8
MPSFLGA  EQU   ISTMPST+12
MPSASID  EQU   MPSFLGA+2
MPSCRA   EQU   ISTMPST+24
MPSCRACT EQU   MPSCRA+4
MPSSRB   EQU   ISTMPST+32
MPSSRBCT EQU   MPSSRB+4
MPSCRPL  EQU   ISTMPST+40
MPSRPLCT EQU   MPSCRPL+4
MPSASCB  EQU   ISTMPST+120
ISTPST   EQU   0
PSTRQFGA EQU   ISTPST+8
PSTRQUE  EQU   PSTRQFGA
PSTFLGA  EQU   PSTRQFGA+4
PSTABINP EQU   PSTFLGA
PSTTCBA  EQU   ISTPST+16
PSTMPSTP EQU   ISTPST+20
PSTDMPS  EQU   ISTPST+132
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCRTRN  EQU   ISTAPCRR+28
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRALKACT EQU   CRABASIC+8
CRAPSS   EQU   ISTCRA+160
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTAVT   EQU   0
ISTAS49  EQU   ISTAVT+4
AWORD    EQU   0
CISTCRPL EQU   0
CIFGRPL  EQU   0
FMZL0010 EQU   0
CMZ0026A EQU   0
CMZ0026  EQU   CMZ0026A+1
FMZL0032 EQU   0
CMZ0048A EQU   0
CMZ0048  EQU   CMZ0048A+1
FMZL0054 EQU   0
FMZL0078 EQU   0
FMZL0101 EQU   0
CMZ0117A EQU   0
CMZ0117  EQU   CMZ0117A+1
FMZL0145 EQU   0
FMZL0169 EQU   0
ISTAPC37 EQU   0
SAV0190  EQU   0
SAV10190 EQU   SAV0190
SAV20190 EQU   SAV0190+4
SAV40190 EQU   SAV0190+8
SAV60190 EQU   SAV0190+12
SAVE0190 EQU   SAV0190+16
DUME0195 EQU   0
FMZL0205 EQU   0
ISTACB   EQU   0
ISTAPC34 EQU   0
ISTRPL   EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTLSMQ  EQU   CVTS01+268
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
SRB      EQU   SRBSECT
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00115 EQU   CMZ0117A
@NM00110 EQU   CMZ0048A
@NM00107 EQU   CMZ0026A
ISTPDAVP EQU   ISTAVT+40
ISTAVR01 EQU   ISTAVT+38
ISTVTTP  EQU   ISTAVT+36
ISTAGTWT EQU   ISTAVT+34
ISTATRT  EQU   ISTAVT+32
ISTARID  EQU   ISTAVT+30
ISTX1    EQU   ISTAVT+29
ISTPHNM  EQU   ISTAVT+24
ISTAPSEX EQU   ISTAVT+20
ISTVTTIK EQU   ISTAVT+18
AVTASID  EQU   ISTAVT+16
ISTAPSTA EQU   ISTAVT+12
ISTAS53  EQU   ISTAVT+8
ISTAHIP  EQU   ISTAS49
ISTACVT  EQU   ISTAVT
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRARPH   EQU   ISTCRA+52
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
CRACRR   EQU   CRAHDR
@NM00104 EQU   ISTAPCRR+137
@NM00103 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00102 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00101 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00100 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00099 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCTCBA  EQU   ISTAPCRR+24
APCPSTA  EQU   ISTAPCRR+20
@NM00098 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00097 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00096 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
ZCRMDATA EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00095 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00094 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00093 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
PSTDRDYQ EQU   PSTDMPS+1
@NM00092 EQU   PSTDMPS
PSTDGATE EQU   PSTDMPS
PSTDEBP  EQU   ISTPST+128
PSTSAVE  EQU   ISTPST+96
PSTSMDYP EQU   ISTPST+64
PSTCRRS  EQU   ISTPST+60
PSTCRR1  EQU   ISTPST+56
PSTIQE22 EQU   ISTPST+52
PSTIQE21 EQU   ISTPST+48
PSTIQE12 EQU   ISTPST+44
PSTIQE11 EQU   ISTPST+40
PSTUEQ   EQU   ISTPST+36
PSTNSSQ  EQU   ISTPST+32
PSTPSSQ  EQU   ISTPST+28
PSTACBCT EQU   ISTPST+24
PSTRSV08 EQU   PSTFLGA+1
PSTDMPC  EQU   PSTFLGA+1
PSTABEND EQU   PSTABINP
PSTAUTH  EQU   PSTFLGA
PSTSMCU  EQU   PSTFLGA
PSTSMQR  EQU   PSTFLGA
PSTIRBU2 EQU   PSTFLGA
PSTIRBU1 EQU   PSTFLGA
PSTUERN  EQU   PSTFLGA
PSTSSRN  EQU   PSTFLGA
PSTRQUEA EQU   PSTRQUE+1
PSTRSV07 EQU   PSTRQUE
PSTRSV06 EQU   PSTRQUE
PSTRSV05 EQU   PSTRQUE
PSTRSV04 EQU   PSTRQUE
PSTRSV03 EQU   PSTRQUE
PSTRSV02 EQU   PSTRQUE
PSTRSV01 EQU   PSTRQUE
PSTRQFLG EQU   PSTRQUE
PSTCHAIN EQU   ISTPST+4
@NM00091 EQU   ISTPST+2
PSTLNGTH EQU   ISTPST+1
PSTTYPE  EQU   ISTPST
MPSSRB1  EQU   ISTMPST+172
MPSSAVE  EQU   ISTMPST+140
MPSMQLBP EQU   ISTMPST+136
MPSSYSRT EQU   ISTMPST+132
MPSQEL   EQU   ISTMPST+128
MPSDBTBL EQU   ISTMPST+124
MPSTPPAB EQU   ISTMPST+88
MPSSMPAB EQU   ISTMPST+56
MPSSMRPH EQU   ISTMPST+52
MPSSRB55 EQU   ISTMPST+48
MPSRPLAC EQU   MPSRPLCT+2
MPSRPLRC EQU   MPSRPLCT
MPSCRPLQ EQU   MPSCRPL
MPSSRBAC EQU   MPSSRBCT+2
MPSSRBRC EQU   MPSSRBCT
MPSSRBQ  EQU   MPSSRB
MPSCRAAC EQU   MPSCRACT+2
MPSCRARC EQU   MPSCRACT
MPSCRAQ  EQU   MPSCRA
MPSMPSTP EQU   ISTMPST+20
MPSPSTCT EQU   ISTMPST+16
MPSRSV02 EQU   MPSFLGA+1
MPSPSTAB EQU   MPSFLGA
MPSRSV01 EQU   MPSFLGA
MPSTPBU  EQU   MPSFLGA
MPMEMTRM EQU   MPSFLGA
MPSAUTH  EQU   MPSFLGA
MPSCRAO  EQU   MPSFLGA
MPSSRBO  EQU   MPSFLGA
MPSRQUEG EQU   MPSRQUE
MPSTSOIR EQU   MPSRSV07
MPSTSOIW EQU   MPSRSV07
MPSID    EQU   ISTMPST
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCCRACT EQU   ATCAOSM+592
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00090 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00089 EQU   ATCAOSM+333
@NM00088 EQU   @NM00087
ATCSNUF  EQU   @NM00087
ATCOPKL  EQU   @NM00087
ATCABEN  EQU   @NM00087
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLRC EQU   ATCRPLCN
ATCSRBRC EQU   ATCSRBCN
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP32  EQU   ATCAOSM+28
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00086 EQU   @NM00085
ATCVTMAB EQU   @NM00085
@NM00084 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00083 EQU   ISTATCVT+819
@NM00082 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00081 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00080 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00079 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
ACDREFQ  EQU   ISTACDEB+204
ACDASFQ  EQU   ISTACDEB+200
ACDSOP   EQU   ISTACDEB+184
ACDSIP   EQU   ISTACDEB+168
ACDRSV24 EQU   ACDVTAM+108
ACDRSV23 EQU   ACDVTAM+104
ACDRSV22 EQU   ACDVTAM+100
ACDOCWAD EQU   ACDVTAM+96
ACDRSV10 EQU   ACDVTAM+92
ACDAPDDT EQU   ACDAPDAT+1
ACDAPDLN EQU   ACDAPDAT
ACDRSV07 EQU   ACDVTAM+82
ACDRSV06 EQU   ACDVTAM+81
@NM00078 EQU   ACDSSFLG
ACDTSO   EQU   ACDSSFLG
ACDTPEND EQU   ACDSSFLG
ACDAICLS EQU   ACDSSFLG
ACDCACB  EQU   ACDSSFLG
ACDRSV21 EQU   ACDVTAM+64
ACDSSPAB EQU   ACDVTAM+48
ACDNEPAB EQU   ACDVTAM+32
ACDRSV20 EQU   ACDVTAM+20
ACDRARQ  EQU   ACDVTAM+16
ACDRAFQ  EQU   ACDVTAM+12
ACDFMCB  EQU   ACDVTAM+8
ACDRDTE  EQU   ACDVTAM+4
ACDLOCK  EQU   ACDVTAM
ACDAPP   EQU   ACDAPPAD+1
ACDEXSCL EQU   ACDAPPAD
ACDACB   EQU   ACDACBAD+1
ACDDEBID EQU   ACDACBAD
ACDPROTG EQU   ACDACBAD
ACDECBAD EQU   ACDBASIC+20
ACDUSRPB EQU   ACDUSRPG+1
ACDNMEXT EQU   ACDUSRPG
ACDPRLEN EQU   ACDBASIC+15
ACDFLGS1 EQU   ACDBASIC+14
ACDQSCNT EQU   ACDBASIC+13
ACDOPATB EQU   ACDBASIC+12
ACDIRBAD EQU   ACDBASIC+8
ACDDEB   EQU   ACDDEBAD+1
ACDAMLNG EQU   ACDDEBAD
ACDTCB   EQU   ACDTCBAD+1
ACDOPNAD EQU   ACDNMSUB
ACDRSV03 EQU   ACDTBLOF+1
ACDRSV02 EQU   ACDTBLOF
ACDAMTYP EQU   ACDDBPFX+5
ACDLENG  EQU   ACDDBPFX+4
ACDDEBX  EQU   ACDDBPFX
ACDRSV08 EQU   ACDVTPRX+12
ACDTSKID EQU   ACDVTPRX+8
ACDCHN   EQU   ACDVTPRX+4
ACDSAF   EQU   ACDVTPRX+2
ACDLNGTH EQU   ACDVTPRX+1
ACDTYPE  EQU   ACDVTPRX
LOKXCL   EQU   @NM00076
LOKPRY   EQU   @NM00076
@NM00077 EQU   @NM00076
@NM00075 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
UECRVPT4 EQU   ISTUECB+80
UECRVPT3 EQU   ISTUECB+76
UECLGDTA EQU   ISTUECB+72
UECREQNM EQU   ISTUECB+60
UECSYMNM EQU   ISTUECB+52
UECVRPL  EQU   UECPLIST+16
UECRSNBT EQU   UECRSNCD+3
@NM00074 EQU   UECRSNCD
UECUSFLD EQU   UECREQTR
UECDAF   EQU   UECTPNCD+2
UECSAF   EQU   UECTPNCD
UECEXLST EQU   ISTUECB+12
UECFORW  EQU   ISTUECB+4
UECRSV01 EQU   ISTUECB+2
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00073 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00072 EQU   RPHCVFLG
RPHFRRPH EQU   RPHCVFLG
RPHOWRPH EQU   RPHCVFLG
RPHCDRPH EQU   RPHCVFLG
RPHPSRPH EQU   RPHCVFLG
RPHVYRPH EQU   RPHGATE
@NM00071 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
R66RTRY  EQU   R66RTRYW+1
R66RSV03 EQU   R66RTRYW
R66RTYON EQU   R66RTRYW
R66PAB   EQU   R66M+4
R66MPST  EQU   R66MPSTW+1
R66RSV00 EQU   R66MPSTW
R6655R   EQU   R66MPSTW
@NM00070 EQU   FRRSFLGS+1
@NM00069 EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
@NM00068 EQU   SRBSECT+40
@NM00067 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPTCB  EQU   SRBFLC+4
SRBCPAFF EQU   SRBFLC
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBRV18 EQU   ASXB+200
ASXBRV17 EQU   ASXB+196
ASXBRV16 EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBSPSA EQU   ASXB+112
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
CRPCHAIN EQU   CRPRRPLP
CRPRRPL  EQU   ISTCRPL
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00042 EQU   CVTFIX+248
@NM00041 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00040 EQU   ACBVTEXT+8
@NM00039 EQU   ACBVTEXT+6
ACBRTN   EQU   ACBVTEXT
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00038 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00037 EQU   ACBINFLG+1
ACBBYPSS EQU   ACBINFLG
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00036 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00035 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00034 EQU   ACBOFLGS
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBUEL   EQU   ACBEXLST
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00033 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00032 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00031 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00030 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00029 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00028 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00027 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
RPLSEQNO EQU   RPLOF60+6
@NM00026 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00025 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00024 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00023 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00022 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00021 EQU   RPLRESP
@NM00020 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00019 EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00018 EQU   RPLVTFL1
@NM00017 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00016 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00015 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00014 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSSMO  EQU   RPLSSNSO+1
@NM00013 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00012 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00011 EQU   RPLOPT12
@NM00010 EQU   RPLOPT12
@NM00009 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00008 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00007 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00006 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00005 EQU   RPLRBAR+3
@NM00004 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00003 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00002 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00001 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
@NM00066 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00065 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00064 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00063 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00062 EQU   FLCFSA
@NM00061 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00060 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00059 EQU   FLCIOA
@NM00058 EQU   FLCMCLA+15
@NM00057 EQU   FLCMCLA+14
@NM00056 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00055 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00054 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00053 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00052 EQU   FLCPER
@NM00051 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00050 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00049 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00048 EQU   FLCPIILC
@NM00047 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00046 EQU   FLCSVILC
@NM00045 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00044 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00043 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00320 EQU   @RC00313
@RC00694 EQU   @RC00687
@RC00901 EQU   @PB00002
@PB00003 EQU   @PB00004
@ENDDATA EQU   *
         END   ISTAICPT,(C'PLS2203',0603,78158)
