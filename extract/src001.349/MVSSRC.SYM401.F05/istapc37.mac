         TITLE 'ISTAPC37-TPQUE PROCEDURE                               *
                        '
ISTAPC37 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTAPC37  76.055'                                 0001
         DROP  @15
@PROLOG  BALR  @08,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@08                                         0001
*                                                                  0060
*/********************************************************************/
*/* IF THE WORK ELEMENT QUEUE IS ALREADY GATED  AND THE PABDELAY FLAG*/
*/* IS OFF EITHER THE PROCESS IS RUNNING OR IS EXPLICITLY BLOCKED, SO*/
*/* QUEING IS PERFORMED BUT SCHEDULING IS NOT.  SIMILARLY IF THE     */
*/* PAB ERROR LOCK IS SET.                                           */
*/* FOR FIFO QUEING (OR LIFO, IF THE QUEUE IS EMPTY), THE ELEMENT    */
*/* IS QUEUED WITH THE GATE BIT ON IN THE PAB AND THE ELEMENT.       */
*/* FOR LIFO QUEUING, THE ELEMENT IS QUEUED AND ALL GATE BITS ARE    */
*/* ASSUMED ON.                                                      */
*/********************************************************************/
*                                                                  0060
*CSLOOP:                                                           0060
*   LM(GPR02P,GPR03P,PABWQCHN);     /* GET WK ELE Q AND PAB CHN      */
CSLOOP   LM    GPR02P,GPR03P,PABWQCHN(PABPTR)                      0060
*   IF PABERLCK=ON×                 /* PAB ERROR LOCK ON OR  @ZM42117*/
*       (GPR02F<0&PABDELAY=OFF) THEN/* QUEUE GATED ?         @Z40GKD9*/
         TM    PABERLCK(PABPTR),B'00000100'                        0061
         BO    @RT00061                                            0061
         LTR   GPR02F,GPR02F                                       0061
         BNM   @RF00061                                            0061
         TM    PABDELAY(PABPTR),B'00000010'                        0061
         BNZ   @RF00061                                            0061
@RT00061 DS    0H                                                  0062
*     IF(GPR02P&PABCHNG0)=0         /* YES - IS THE QUEUE EMPTY      */
*         ×LIFO=OFF THEN            /* OR FIFO?                      */
         LR    @15,GPR02P                                          0062
         N     @15,@CF00913                                        0062
         LTR   @15,@15                                             0062
         BZ    @RT00062                                            0062
         TM    LIFO(GPR14P),B'00000001'                            0062
         BNZ   @RF00062                                            0062
@RT00062 DS    0H                                                  0063
*       DO;                                                        0063
*         WELCHN=GPR02P×PABWEQG1;   /* YES - THIS WK ELE, SET        */
         L     @15,@CF00914                                        0064
         LR    @07,GPR02P                                          0064
         OR    @07,@15                                             0064
         ST    @07,WELCHN(,WELPTR)                                 0064
*         GPR03P=WELPTR×PABWEQG1;   /* BOTH GATE BITS,               */
         OR    @15,WELPTR                                          0065
         LR    GPR03P,@15                                          0065
*         CS(GPR02P,GPR03P,PABWEQA);/* QUEUE THIS ONE.               */
         CS    GPR02P,@03,PABWEQA(PABPTR)                          0066
*         BC(FAIL,CSLOOP);          /* FAILED? START OVER.           */
         BC    4,CSLOOP                                            0067
*       END;                                                       0068
*     ELSE                          /* LIFO QUEUING REQUIRED.        */
*       DO;                                                        0069
         B     @RC00062                                            0069
@RF00062 DS    0H                                                  0070
*         GPR03P=PABCHNG1;          /* PUT GATE MASK IN REG,         */
         L     GPR03P,@CF00914                                     0070
*         DO WHILE GPR02P->WELCHN^=GPR03P;/* GO DOWN QUEUE UNTIL     */
         B     @DE00071                                            0071
@DL00071 DS    0H                                                  0072
*           GPR02P=GPR02P->WELCHN;  /* ELEMENT IS FOUND GATED        */
         L     GPR02P,WELCHN(,GPR02P)                              0072
*         END;                      /* WITH NO FORWARD PTR.          */
@DE00071 C     GPR03P,WELCHN(,GPR02P)                              0073
         BNE   @DL00071                                            0073
*         WELCHN=GPR03P;            /* GATE ELEMENT BEING Q-ED.      */
         ST    GPR03P,WELCHN(,WELPTR)                              0074
*         GPR03P=GPR03P×WELPTR;     /* GATE PTR TO NEW ELEMENT,      */
         OR    GPR03P,WELPTR                                       0075
*         GPR02P->WELCHN=GPR03P;    /* AND ADD IT TO QUEUE.          */
         ST    GPR03P,WELCHN(,GPR02P)                              0076
*       END;                                                       0077
         EJECT
*                                                                  0078
*/********************************************************************/
*/* THE QUEUE IS NOT GATED OR THE PABDELAY FLAG IS ON WHICH MEANS    */
*/* THE PAB CANNOT BE GATED SO THE ELEMENT IS QUEUED AND BOTH THE    */
*/* WORK ELEMENT QUEUE AND PAB CHAIN ARE GATED AND THE PABDELAY FLAG */
*/* IS RESET.                                                        */
*/********************************************************************/
*                                                                  0078
*   ELSE                                                           0078
*     DO;                           /*                       @Z40GKD9*/
         B     @RC00061                                            0078
@RF00061 DS    0H                                                  0079
*       IF(GPR02P&PABCHNG0)=0       /* YES - IS THE QUEUE EMPTY    0079
*                                                            @Z40GKD9*/
*           ×LIFO=OFF THEN          /* OR FIFO?              @Z40GKD9*/
         LR    @15,GPR02P                                          0079
         N     @15,@CF00913                                        0079
         LTR   @15,@15                                             0079
         BZ    @RT00079                                            0079
         TM    LIFO(GPR14P),B'00000001'                            0079
         BNZ   @RF00079                                            0079
@RT00079 DS    0H                                                  0080
*         DO;                       /*                       @Z40GKD9*/
*           WELCHN=GPR02P×PABWEQG1; /* CHAIN WEL Q TO NEW ELEM     0081
*                                                            @Z40GKD9*/
         L     @15,@CF00914                                        0081
         LR    @07,GPR02P                                          0081
         OR    @07,@15                                             0081
         ST    @07,WELCHN(,WELPTR)                                 0081
*           RFY                                                    0082
*            (GPR06P,                                              0082
*             GPR07P) RSTD;         /*                       @Z40GKD9*/
*           GPR06P=WELPTR×PABWEQG1; /* GATE PTR TO NEW ELEMEMT     0083
*                                                            @Z40GDK9*/
         LR    GPR06P,WELPTR                                       0083
         OR    GPR06P,@15                                          0083
*           GPR07P=(GPR03P×PABCHNG1)&PABDLAY0;/* & GATE PAB & RESET
*                                      DELAY FLAG            @Z40GDK9*/
         OR    @15,GPR03P                                          0084
         N     @15,@CF00933                                        0084
         LR    GPR07P,@15                                          0084
*           CDS(GPR02P,GPR06P,PABWQCHN);/* QUEUE AND GATE.   @Z40GKD9*/
         CDS   GPR02P,GPR06P,PABWQCHN(PABPTR)                      0085
*           BC(FAIL,CSLOOP);        /* FAILED? START OVER    @Z40GKC9*/
         BC    4,CSLOOP                                            0086
*         END;                      /*                       @Z40GKD9*/
*       ELSE                        /* LIFO QUEUING REQUIRED @Z40GKD9*/
*         DO;                       /*                       @Z40GKD9*/
         B     @RC00079                                            0088
@RF00079 DS    0H                                                  0089
*           GPR07P=(GPR03P×PABCHNG1)&PABDLAY0;/* GATE PAB & REST   0089
*                                      DELAY FLAG            @Z40GKD9*/
         LR    GPR07P,GPR03P                                       0089
         O     GPR07P,@CF00914                                     0089
         N     GPR07P,@CF00933                                     0089
*           CS(GPR03P,GPR07P,PABCHAIN);/*                    @Z40GKD9*/
         CS    GPR03P,@07,PABCHAIN(PABPTR)                         0090
*           BC(FAIL,CSLOOP);        /* REPEAT UNTIL SUCCESSFUL     0091
*                                                            @Z40GKD9*/
         BC    4,CSLOOP                                            0091
*           GPR03P=PABCHNG1;        /* PUT GATE MASK IN REG  @Z40GKD9*/
         L     GPR03P,@CF00914                                     0092
*           DO WHILE GPR02P->WELCHN^=GPR03P;/* GO DOWN QUEUE UNTIL 0093
*                                                            @Z40GKD9*/
         B     @DE00093                                            0093
@DL00093 DS    0H                                                  0094
*             GPR02P=GPR02P->WELCHN;/* ELEMEMT IS FOUND GATED      0094
*                                                            @Z40GKD9*/
         L     GPR02P,WELCHN(,GPR02P)                              0094
*           END;                    /* WITH NO FORWARD PTR   @Z40GKD9*/
@DE00093 C     GPR03P,WELCHN(,GPR02P)                              0095
         BNE   @DL00093                                            0095
*           WELCHN=GPR03P;          /* GATE ELEMENT BEING QUEUED   0096
*                                                            @Z40GKD9*/
         ST    GPR03P,WELCHN(,WELPTR)                              0096
*           GPR03P=GPR03P×WELPTR;   /* GATE PTR TO NEW ELEMENT     0097
*                                                            @Z40GKD9*/
         OR    GPR03P,WELPTR                                       0097
*           GPR02P->WELCHN=GPR03P;  /* AND ADD IT TO QUEUE   @Z40GKD9*/
         ST    GPR03P,WELCHN(,GPR02P)                              0098
*         END;                      /*                       @Z40GKD9*/
*       RFY                                                        0100
*        (GPR06P,                                                  0100
*         GPR07P) UNRSTD;           /*                       @Z40GKD9*/
@RC00079 DS    0H                                                  0101
*/********************************************************************/
*/* THE PAB HAS BEEN GATED. CHECK FOR PRIORITY SCHEDULING (IMMED).   */
*/* IN VS2, IF DIRECT SCHEDULING (FASTPATH) HAS BEEN REQUESTED,      */
*/* LET THE ISTAPMDR MACRO DO IT. OTHERWISE QUEUE THE PAB ON THE RPH */
*/* OURSELVES, UNLESS THERE IS NO RPH (NSTR), THE PROCESS IS         */
*/* RUNNING DISABLED (DIS) OR THE RPH AND PAB                        */
*/* HAVE DIFFERENT TASK IDS.  FOR THOSE CASES,                       */
*/* ISTAPC32 WILL QUEUE THE PAB TO THE RPH READY QUEUE.              */
*/********************************************************************/
*                                                                  0101
*       PABPRIOR=OFF;                                              0101
         NI    PABPRIOR(PABPTR),B'10111111'                        0101
*       IF PRIORITY=ON THEN         /* SET PRIORITY FLAG, IF         */
         TM    PRIORITY(GPR14P),B'00000100'                        0102
         BNO   @RF00102                                            0102
*         PABPRIOR=ON;              /* REQUESTED.                    */
         OI    PABPRIOR(PABPTR),B'01000000'                        0103
*       IF GPR00P^=0 THEN           /* IF AN SRB WAS GIVEN,          */
@RF00102 LTR   GPR00P,GPR00P                                       0104
         BZ    @RF00104                                            0104
*         DO;                       /* DO FAST PATH SCHEDULING       */
*           RFY                                                    0106
*            (GPR06P) RSTD;                                        0106
*           GPR06P=GPR14P;          /* PROTECT RETURN ADDRESS        */
         LR    GPR06P,GPR14P                                       0107
*/*ISTAPMDR  SRB(GPR00P)PAB(PABPTR)                                  */
*                                                                  0108
*           DO;                                                    0108
*             RFY                                                  0109
*              (GPR01P,                                            0109
*               GPR05P,                                            0109
*               GPR15P) RSTD;                                      0109
*             RFY                                                  0110
*               ISTPST;                                            0110
*             RFY                                                  0111
*               ISTMPST;                                           0111
*             GPR02P=GPR01P;        /* SAVE REG1 IN REG2             */
         LR    GPR02P,GPR01P                                       0112
*             GPR01P=GPR00P;        /* REG1 = ADDR OF SRB            */
         LR    GPR01P,GPR00P                                       0113
*             GPR05P=PABPTR;        /* REG5 = ADDR OF PAB            */
*             GPR03P=GPR05P->PABOFFST;/* R3=OFFSET IN MAJCB          */
         SLR   GPR03P,GPR03P                                       0115
         IC    GPR03P,PABOFFST(,GPR05P)                            0115
*             GPR15P=(GPR05P-GPR03P);/* R15 = ADDR OF MAJCB          */
         LR    GPR15P,GPR05P                                       0116
         SLR   GPR15P,GPR03P                                       0116
*             GPR03P=GPR15P->DYPTSKID;/* R3 = ADDR OF PST            */
         L     GPR03P,DYPTSKID(,GPR15P)                            0117
*             GPR03P=GPR03P->PSTMPSTP;/* REG3=MPST ADDR              */
         L     GPR03P,PSTMPSTP(,GPR03P)                            0118
*             GPR03P=GPR03P->MPSSRB55;/* R3 POINTS TO SRB55          */
*                                                                  0119
         L     GPR03P,MPSSRB55(,GPR03P)                            0119
*             /*******************************************************/
*             /*                                                     */
*             /* COPY SRB55 INTO SRB                                 */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0120
*             GPR01P->SRBSECT(1:LENGTH(SRBSECT))=/* COPY TO SRB    0120
*                                      PASSED                        */
*                 GPR03P->SRBSECT(1:LENGTH(SRBSECT));/* FROM SRB55   */
         MVC   SRBSECT(44,GPR01P),SRBSECT(GPR03P)                  0120
*             GPR01P->SRBID='PS59'; /* SET SRB ID = PS59             */
         MVC   SRBID(4,GPR01P),@CC00790                            0121
*             GPR01P->SRBPARM=GPR05P;/* SET SRB PARM = PAB@          */
         ST    GPR05P,SRBPARM(,GPR01P)                             0122
*             GPR15P=ATCLCPTR->ATCAPC59;/* GET ADDR OF ISTAPC59      */
         L     @07,ATCLCPTR                                        0123
         L     GPR15P,ATCAPC59(,@07)                               0123
*             GPR01P->SRBEP=GPR15P; /* SRB ENTRY POINT IS ISTAPC59   */
         ST    GPR15P,SRBEP(,GPR01P)                               0124
*             GEN REFS(CVTPTR,CVTLSMQ,CVTMAP,SRBFLNK,SRBSECT);     0125
         SCHEDULE SRB=(1),SCOPE=LOCAL
*             GPR01P=GPR02P;        /* RESTORE REG 1                 */
         LR    GPR01P,GPR02P                                       0126
*             RFY                                                  0127
*              (GPR01P,                                            0127
*               GPR05P,                                            0127
*               GPR15P) UNRSTD;                                    0127
*           END;                    /* *** END ISTAPMDR ***          */
*           GPR14P=GPR06P;          /* RESTORE RETURN ADDRESS        */
         LR    GPR14P,GPR06P                                       0129
*           RFY                                                    0130
*            (GPR06P) UNRSTD;                                      0130
*           GO TO DONE;                                            0131
         B     DONE                                                0131
*         END;                                                     0132
         EJECT
*       RFY                                                        0133
*        (GPR15P) RSTD;                                            0133
@RF00104 DS    0H                                                  0134
*       GPR15P=PABPTR-PABOFFST;     /* GET DYNAMIC PAB ADDRESS       */
         LR    GPR15P,PABPTR                                       0134
         SLR   @07,@07                                             0134
         IC    @07,PABOFFST(,PABPTR)                               0134
         SLR   GPR15P,@07                                          0134
*       IF DISABLED=ON×NSTR=ON×GPR15P->DYPTSKID^=RPHTSKID THEN     0135
         TM    DISABLED(GPR14P),B'00001010'                        0135
         BNZ   @RT00135                                            0135
         CLC   DYPTSKID(4,GPR15P),RPHTSKID(RPHPTR)                 0135
         BE    @RF00135                                            0135
@RT00135 DS    0H                                                  0136
*         DO;                                                      0136
*           RFY                                                    0137
*            (GPR15P) UNRSTD;                                      0137
*           RFY                                                    0138
*            (GPR06P) RSTD;                                        0138
*           GPR06P=GPR14P;          /* SAVE RETURN ADDRESS           */
         LR    GPR06P,GPR14P                                       0139
*           GPR00F=0;               /* SET ENABLED CODE              */
         SLR   GPR00F,GPR00F                                       0140
*           IF DISABLED=ON THEN     /* UNLESS DISABLED WAS           */
         TM    DISABLED(GPR14P),B'00000010'                        0141
         BNO   @RF00141                                            0141
*             GPR00F=4;             /* REQUESTED                     */
         LA    GPR00F,4                                            0142
*           CALL ATCAP32->ISTAPC32; /* CALL SCHEDULING MODULE        */
@RF00141 L     @07,ATCLCPTR                                        0143
         L     @15,ATCAP32(,@07)                                   0143
         BALR  @14,@15                                             0143
*           GPR14P=GPR06P;          /* RESTORE RETURN ADDR           */
         LR    GPR14P,GPR06P                                       0144
*           RFY                                                    0145
*            (GPR06P) UNRSTD;                                      0145
*         END;                                                     0146
*       ELSE                                                       0147
*         DO;                                                      0147
         B     @RC00135                                            0147
@RF00135 DS    0H                                                  0148
*           PABCHNGP=RPHPABQP;      /* QUEUE PAB TO RPH PAB Q        */
         MVC   PABCHNGP(3,PABPTR),RPHPABQP(RPHPTR)                 0148
*           RPHPABQP=PABPTR;                                       0149
         STCM  PABPTR,7,RPHPABQP(RPHPTR)                           0149
*         END;                                                     0150
*     END;                                                         0151
@RC00135 DS    0H                                                  0152
*DONE:                                                             0152
*   ;                                                              0152
@RC00061 DS    0H                                                  0152
DONE     DS    0H                                                  0153
*   IF NSTR=OFF THEN                                               0153
         TM    NSTR(GPR14P),B'00001000'                            0153
         BNZ   @RF00153                                            0153
*     LM(GPR02P,GPR08P,RPHWORK);                                   0154
*                                                                  0154
         LM    GPR02P,GPR08P,RPHWORK(RPHPTR)                       0154
*/* TPEPILOG                                                         */
*                                                                  0155
*   GEN(PRINT OFF);                                                0155
@RF00153 DS    0H                                                  0155
         PRINT OFF
*/* RPL HEADER                                                        *
*/*  REVISIONS                                         006 04/09/75   *
*DCL RPHPTR PTR(31) REGISTER(1) RESTRICTED;                        0156
*DCL  1  ISTRPH BDY(WORD) BASED(RPHPTR),                           0157
*       2  RPHCNTL FIXED(32),          /* CONTROL INFORMATION         *
*       3  RPHTYPE CHAR(1),            /* CONTROL BLOCK TYPE          *
*       3  RPHLNGTH PTR(8),            /* LENGTH IN BYTES             *
*       3  RPHFLAGS BIT(8),            /* SYSTEM DEPENDENT FLAGS      *
*         4  RPHOGIND BIT(1),          /* OPEN GATE INDICATOR         *
*         4  RPHSPGIN BIT(1),          /* SPECIAL GATE OPEN IND.      *
*         4  RPHAPTYP BIT(1),          /* APS IS A USER EXIT          *
*            5  RPHAUTEX BIT(1),        /*EXIT TO AUTHORIZED USER VS2 *
*         4  RPHSMQ BIT(1),            /* INDICATOR IF RPH IS TO BE   *
*                                      /* QUEUED                      *
*         4  RPHSMTYP BIT(1),          /* REQUEST TYPE IS BUFFER OR   *
*                                      /* DOUBLE-WORD                 *
*         4  RPHSMCLR BIT(1),          /* INDICATOR IF BUFFER TO BE   *
*                                      /* CLEARED                     *
*           4  RPHMLTCP BIT(1),        /* USED BY LOCAL 3270  SUPPORT *
*                                      /* WHEN BUILDING MULTIPLE CHAN *
*                                      /* PROGRAM                     *
*           4  RPHFSTLC BIT(1),        /* USED BY LOCAL 3270 SUPPORT  *
*                                      /* TO INDICATE FIRST LCCW      *
*              5  RPHFNFLG BIT(1),     /* LCCW SET FUNCTION FLAGS     *
*        3  RPHFLGB BIT(8),            /* SECOND FLAG BYTE            *
*           4  RPHLOCK BIT(1),         /* LOCKING OPTION              *
*           4  RPHBSSP BIT(1),         /* SYSTEM SERVICES PROGRESS    *
*           4  RPHFBAPS BIT(1),        /* STG. OBTAINED BY APS        *
*           4  RPHPGCMP BIT(1),        /* BIT ON INDICATES RESOURCE   *
*                                      /* MGR HAS COMPLETED UNLOCK    *
*           4  RPHNRSAV BIT(1),        /* DO NOT SAVE ON ACTIVATE     *
*           4  RPHRLCRA BIT(1),        /* RPH CAN BE RELEASED         *
*                                      /* WHEN PURGE COMPLETE         *
*           4  *        BIT(2),        /* RESERVED                    *
*       2  RPHRPHA PTR(31),            /* ADDR.OF NEXT RPL HEADER     *
*         3  RPHGATE BIT(1),           /* GATING FLAG                 *
*         3  *       BIT(7),           /* RESERVED                    *
*         3  RPHRPHAP PTR(24),                                     0157
*       2  RPHTSKID PTR(31),           /* TASK IDENTIFICATION         *
*                                      /* OR ADDR.OF APS TABLE        *
*          3  *     CHAR(3),           /* RPH TSK ID                  *
*          3  RPHTIK PTR(8),           /* TIK                         *
*       2  RPHDVTA PTR(31),            /* ADDR.OF  CURRENT DVT        *
*       2  RPHRESMA PTR(31) BDY(WORD), /* TPWAIT-POST INFO */      0157
*         3 RPHWPFLG CHAR(1),          /* WAIT-POST FLAGS */       0157
*           4 RPHRSKEY BIT(4),         /* STORAGE PROTECT KEY TO RESUME
*                                         PROCESSING                  *
*           4 RPHWT BIT(1),            /* WAIT BIT */              0157
*           4 RPHPT BIT(1),            /* POST BIT */              0157
*           4 RPHPURGE BIT(1),         /* RPH FLAGGED BY RECOVERY    */
*                                      /* TO BE PURGED BY PSS        */
*                                      /* VS/2 ONLY                  */
*           4 RPHRSV01 BIT(1),        /* RESERVED                    */
*         3 RPHRESUM PTR(24),          /* RESUME ADDRESS */        0157
*       2  RPHPABOF PTR(8),            /* OFFSET OF PAB IN CONTROL BLK*
*       2  RPHMAJCB PTR(24),           /* ADDR.OF MAJOR CONTROL BLOCK *
*       2  RPHWEA PTR(31),             /* ADDR.OF WORK ELEMENT        *
*         3  RPHCSPA PTR(31),          /* ADDR OF ISTCSP              *
*           4  RPHWEGT BIT(1),         /* GATE FOR WORK ELEMENT PROC. *
*       2  RPHSRPRM PTR(31),           /* SERVICE ROUTINE PARM.FIELD  *
*         3 RPHSRP12 FIXED(15),        /* COUNT OF Q'ED SMS REQUESTS  *
*         3 RPHSRP34 FIXED(15),        /* SIZE OF Q'ED SMS REQUESTS   *
*       2  RPHCRR PTR(31),             /* ADDR.OF COMPONENT RECOVERY  *
*                                      /* RECORD                      *
*       2  RPHPABQA PTR(31),           /* PAB QUEUE ADDRESS           *
*          3 RPHPABFG CHAR(1),         /* FLAG BYTE CARRIED FROM PAB  *
*          3 RPHPABQP PTR(24),         /* POINTER TO QUEUE OF PAB'S   *
*       2  RPHWORK CHAR(64) BDY(WORD), /* 16 WORD WORK AREA           *
*         3  RPHSAVE1 FIXED(31),       /*                             *
*           4  RPHSBYTE CHAR(1),       /* 1-BYTE SAVE FIELD           *
*           4  RPHSBITS BIT(8),        /* SAVE FIELD FOR FLAG BYTE    *
*              5  RPHSBIT1 BIT(1),     /* 1ST SAVE FIELD              *
*              5  RPHSBIT2 BIT(1),     /* 2ND SAVE FIELD              *
*              5  RPHSBIT3 BIT(1),     /* 3RD SAVE FIELD              *
*              5  RPHSBIT4 BIT(1),     /* 4TH SAVE FIELD              *
*              5  RPHSBIT5 BIT(1),     /* 5TH SAVE FIELD              *
*              5  RPHSBIT6 BIT(1),     /* 6TH SAVE FIELD              *
*              5  RPHSBIT7 BIT(1),     /* 7TH SAVE FIELD              *
*              5  RPHSBIT8 BIT(1),     /* 8TH SAVE FIELD              *
*           4  RPHSHALF FIXED(15),     /* HALF WORD SAVE AREA         *
*         3  RPHSAVE2 FIXED(31),       /*                             *
*         3  RPHSAVE3 FIXED(31),       /*                             *
*         3  RPHSAVE4 FIXED(31),       /*                             *
*         3  RPHSAVE5 FIXED(31),       /*                             *
*         3  RPHSAVE6 FIXED(31),       /*                             *
*         3  RPHSAVE7 FIXED(31),       /*                             *
*         3  RPHSAVE8 FIXED(31),       /*                             *
*         3  RPHSAVE9 FIXED(31),       /*                             *
*         3  RPHSAV10 FIXED(31),       /*                             *
*         3  RPHSAV11 FIXED(31),       /*                             *
*         3  RPHSAV12 FIXED(31),       /*                             *
*         3  RPHSAV13 FIXED(31),       /*                             *
*         3  RPHSAV14 FIXED(31),       /*                             *
*         3  RPHSAV15 FIXED(31),       /*                             *
*         3  RPHSAV16 FIXED(31),       /*                             *
*       2  RPHNEXPO PTR(31);           /* ADDR.NEXT RPH TO BE POSTED  *
* DCL RPTYPE BIT(8) CONSTANT('01'X);   /* TYPE CODE FOR RPH           *
* DCL RPHWT0 BIT(32) CONSTANT('F7FFFFFF'X);   /* TURN RPHWT OFF */ 0159
* DCL RPHWT1 BIT(32) CONSTANT('08000000'X);   /* TURN RPHWT ON */  0160
* DCL RPHPT0 BIT(32) CONSTANT('FBFFFFFF'X);   /* TURN RPHPT OFF */ 0161
* DCL RPHPT1 BIT(32) CONSTANT('04000000'X);   /* TURN RPHPT ON */  0162
* DCL RPHPABQ1 BIT(24) CONSTANT('000000'X); /* TURN RPHPBQ GATE */ 0163
*/* PROCESS ANCHOR BLOCK                                              *
*/*  REVISIONS                                         002 11/16/75  */
*DCL  1  ISTPAB BDY(DWORD) BASED,                                  0164
*       2  PABWQCHN CHAR(8) BDY(DWORD), /* CPS SWAP FIELD FOR NEQ&CHN *
*        3  PABWEQA PTR(31) BDY(WORD), /* WORK ELEMENT QUEUE ADDRESS  *
*           4  PABWEQG BIT(1),         /* GATING BIT                  *
*           4  PABRSV01 BIT(7),        /* RESERVED                    *
*           4  PABWEQP PTR(24),        /* WKEL PTR                    *
*        3  PABCHAIN PTR(31) BDY(WORD), /* APS CHAIN                  *
*           4  PABCHNG BIT(1),         /* GATING BIT                  *
*           4  PABRESCH BIT(1),        /* RESCHEDULE PAB AT        0164
*                                         TPEXIT                      *
*           4  PABCDP BIT(1),          /* CLOSE DST/CHANGE IN PROGRESS*
*           4  PABUNCON BIT(1),        /* UNCONDITIONALLY RESCHEDULE
*                                         PAB AT TPEXIT               *
*           4  PABRESET BIT(1),        /* RESET ISSUED ON THIS PAB    *
*           4  PABRUNNG BIT(1),        /* PAB RUNNING                 *
*           4  PABDELAY BIT(1),        /* DELAY OPTION USED           *
*           4  PABRSV02 BIT(1),        /* RESERVED                    *
*           4  PABCHNGP PTR(24),       /* PSS CHAIN PTR               *
*        2  PABOFFST PTR(8),           /* OFFSET FROM CONTROL BLOCK   *
*        2  PABDVTA PTR(24),           /* DVT ADDRESS                 *
*        2  PABRPHFG PTR(31),          /* SCHED FLAGS AND RPH         *
*           3  PABFLAGS BIT(8),        /* SCHEDULING FLAGS            *
*              4  PABAPYP BIT(1),      /* APPLICATION IS A USER EXIT  *
*              4  PABPRIOR BIT(1),     /* IMMEDIATE PRIORITY          *
*              4  PABNORPR BIT(1),     /* NORMAL PRIORITY -           *
*                                      /* RESCHEDUALABLE              *
*              4  PABDYNAM BIT(1),     /* DYNAMIC                     *
*              4  PABSSN BIT(1),       /* SYSTEM SERVICES             *
*              4  PABERLCK BIT(1),     /* PAB ERROR LOCK FLAG         *
*                 5  PABERRLK BIT(1),  /* ERROR LOCK                  *
*                    6  PABERLOK BIT(1), /* ERROR LOCK                *
*/*    ABNORMAL TO ALLOW VARY COMPARE AND SWAP                        *
*              4  PABINHBT BIT(1) ABNL,/* 1=INHIBIT TRAFFIC,0=NO      *
*              4  PABNODQ BIT(1),      /* DO NOT DEQ WORK ELEMENT     *
*           3  PABRPHA PTR(24);        /* RPL HEADER ADDRESS          *
*DCL PABWEQG0 BIT(32) CONSTANT('7FFFFFFF'X),  /* TURN PABWEQG OFF     *
*    PABWEQG1 BIT(32) CONSTANT('80000000'X),  /* TURN PABWEQG ON      *
*    PABCHNG0 BIT(32) CONSTANT('7FFFFFFF'X),  /* TURN PABCHNG OFF     *
*    PABCHNG1 BIT(32) CONSTANT('80000000'X),  /* TURN PABCHNG ON      *
*    PABRESC0 BIT(32) CONSTANT('BFFFFFFF'X),  /* TURN PABRESCH OFF    *
*    PABRESC1 BIT(32) CONSTANT('40000000'X),  /* TURN PABRESCH ON     *
*    PABCDP0  BIT(32) CONSTANT ('DFFFFFFF'X), /* TURN PABCDP OFF      *
*    PABCDP1  BIT(32) CONSTANT ('20000000'X), /* TURN PABCDP ON       *
*    PABERLK0 BIT(32) CONSTANT('FBFFFFFF'X),  /* TURN PABERRLK ON     *
*    PABERLK1 BIT(32) CONSTANT('04000000'X),  /* TURN PABERRLK OFF    *
*    PABUNCO0 BIT(32) CONSTANT('EFFFFFFF'X),  /* TURN PABUNCON OFF    *
*    PABUNCO1 BIT(32) CONSTANT('10000000'X),  /* TURN PABUNCON ON     *
*    PABPRIR0 BIT(32) CONSTANT('BFFFFFFF'X),  /* TURN PAB PRIOR OFF   *
*    PABPRIR1 BIT(32) CONSTANT('40000000'X),  /* TURN PAB PRIOR ON    *
*    PABRST0  BIT(32) CONSTANT('F7FFFFFF'X),  /* TURN PABRESET OFF    *
*    PABRST1  BIT(32) CONSTANT('08000000'X),  /* TURN PABRESET ON     *
*    PABDLAY0 BIT(32) CONSTANT('FDFFFFFF'X),  /* TURN PAB DELAY OFF   *
*    PABDLAY1 BIT(32) CONSTANT('02000000'X);  /* TURN PAB DELAY ON    *
*              /* DYNAMIC PAB 1K633 */                             0166
* /* 1K0997 JAN 20, 1973  MB   */                                  0166
* /* 1K1142 MAR 03, 1973  MB   */                                  0166
* DCL 1 ISTDYPAB BDY(DWORD) BASED, /* LEVEL 1 DECLARE 1K633 */     0166
*       2  DYPTYPE CHAR(1), /* CONTROL BLOCK TYPE CODE 1K633 */    0166
*       2  DYPLNGTH PTR(8), /* CONTROL BLOCK LENGTH (BYTES)  1K633 */
*       2 DYPFLGS CHAR(2),     /* FLAGS 1K633 */                   0166
*       2 DYPCHAIN PTR(31),    /* CHAIN POINTER 1K633 */           0166
*       2 DYPTSKID PTR(31),    /* TASKID OR PTR TO PSS TABLES 1K633 */
*       2  DYPRSV01 PTR(31),   /* RESERVED TO PRESERVE ALIGNMENT   0166
*                                                             1K0997 */
*       2 DYPPAB CHAR(LENGTH(ISTPAB)) BDY(DWORD); /* LENGTH OF 1K0997
*                                                    PAB         */
*DCL DYTYP   BIT(8) CONSTANT ('11'X);   /* TYPE           1K1142 */
*/* LOCKWORD FORMAT DSECT                                            */
*/*  INITIAL LEVEL                                     001 05/24/74  */
*DCL 1 ISTLOK BDY(WORD) BASED,                                     0168
*     2  LOKCT CHAR(1) BDY(WORD),       /* COUNT OF LOCK OWNERS      */
*     2  LOKCHN PTR(24),                /* ADDR OF NEXT RPH WAITING
*                                          ON LOCK                   */
*        3  LOKCHNG CHAR(3),            /* CHAIN/FLAGS               */
*           4 *        CHAR(2),                                    0168
*           4 *        BIT(8),                                     0168
*             5 *        BIT(6),                                   0168
*             5  LOKPRY BIT(1),         /* PRIORITY FLAG, 1 = ON     */
*             5  LOKXCL BIT(1);         /* EXCLUSIVE FLAG, 1 = ON    */
*DCL LOKXCL1  BIT(32) CONSTANT('00000001'X); /* CONSTANT TO TURN LOKXCL
*                                          ON                        */
*DCL LOKPRY1  BIT(32) CONSTANT('00000002'X); /* CONSTANT TO TURN LOKPRY
*                                          ON                        */
*DCL LOKCHN1  BIT(32) CONSTANT('00FFFFFC'X); /* CONSTANT TO TURN LOKXCL
*                                          AND LOKPRY OFF            */
*DCL LOKCT1   BIT(32) CONSTANT('01000000'X); /* CONSTANT TO MAKE LOKCT
*                                          = 1                       */
*DCL LOKCT255 BIT(32) CONSTANT('FF000000'X); /* CONSTANT TO CHECK FOR
*                                          MAX LOKCT (255)           */
*/*  REVISIONS                                         015 11/16/75   *
*DCL ATCLCPTR PTR LOCATION(1032);      /* POINTER TO ATCVT            *
*DCL  1  ISTATCVT BDY(DWORD) BASED,                                0175
*        2  ATCCOM BDY(WORD),          /* SYSTEM INDEPENDENT FIELDS   *
*           3  ATCSTAT CHAR(4),        /* VTAM  STATUS INDICATORS     *
*              4  ATCSTAT1 CHAR(1),    /* VTAM  STATUS BYTE 1         *
*                 5  ATCSTART BIT(1),  /* VTAM  IS STARTING           *
*                 5  ATCACTIV BIT(1),  /* VTAM  IS ACTIVE             *
*                 5  ATCSNHLT BIT(1),  /* VTAM  SESSION HALT          *
*                 5  ATCQKHLT BIT(1),  /* VTAM  QUICK HALT            *
*                 5  ATCNETSL BIT(1),  /* NETSOL=YES SPECIFIED ON CMD *
*                 5  ATCINHLT BIT(1),  /* INTERNAL VTAM HALT QUICK    *
*                 5  ATCMDHLT BIT(1),  /* VTAM CMD PROC HALTED        *
*                 5 * BIT(1),          /* RESERVED                    *
*              4  ATCSTFLG BIT(8),     /* STORAGE MANAGEMENT FLAGS    *
*                 5  ATCHSDMF BIT(1),  /* SYSTEM SLOW DOWN FLAG       *
*              4  ATCPOFLG BIT(8),     /* PROGRAM OPERATOR            *
*                                      /* INTERFACE FLAGS             *
*                 5 ATCPOUNS BIT(1),   /* APPLICATION AUTHORIZED TO   *
*                                      /* RECEIVE UNSOLICITED MESSAGES*
*                                      /* 1 = YES                     *
*                 5 *        BIT(7),   /* RESERVED                    *
*              4  ATCSTAT4 CHAR(1),    /* VTAM  STATUS BYTE 4         *
*                 5  ATCPRTAT BIT(1),  /* 1 = TRACE PRINT ACTIVE,  0175
*                                         0 = NOT ACTIVE              *
*                 5  ATCTPRT BIT(1),   /* WHEN 1, TPRINT IN PROCESS   *
*                 5  ATCMTST BIT(1),   /* WHEN 1, MODIFY TEST IN   0175
*                                         PROCESS                     *
*                 5  ATCNCSD BIT(1),   /* NCS QUIESCED DURING HALT    *
*                 5  ATCVTTRC BIT(1),  /* VTAM TRACE, 1=ACTIVE        *
*                 5  ATCRSV04 BIT(3),  /* RESERVED                    *
*           3  ATCAPI PTR(31),         /* ADDR OF API ROUTINE         *
*           3  ATCDCFRR PTR(31),       /* POINTER TO FRR OF CONTROL
*                                         LAYER,INITIALIZED BY OPENDST*
*           3  ATCRDT PTR(31),         /* POINTER TO FIRST RDT        *
*           3  ATCSRT PTR(31),         /* POINTER TO SRT DIRECTORY    *
*           3  ATCASCHD PTR(31),       /* POINTER TO AP SCHEDULER     *
*           3  ATCECMOD CHAR(4),       /* ECB FOR MODIFY COMMAND PROC.*
*           3  ATCMODQ PTR(31),        /* POINTER FOR OUTPUT QUEUE    *
*                                      /* FOR MODIFY COMMAND          *
*           3  ATCECHLT CHAR(4),       /* ECB FOR HALT COMMAND        *
*           3  ATCHALTQ PTR(31),       /* POINTER TO OUTPUT QUEUE     *
*                                      /* FOR HALT COMMAND            *
*           3  ATCECVRY CHAR(4),       /* ECB FOR VARY COMMAND PROC.  *
*           3  ATCVARYQ PTR(31),       /* POINTER TO OUTPUT QUEUE     *
*                                      /* FOR VARY COMMAND            *
*           3  ATCECDSP CHAR(4),       /* ECB FOR DISPLAY COMMAND     *
*           3  ATCDSPLQ PTR(31),       /*  POINTER TO OUTPUT QUEUE    *
*                                      /* FOR DISPLAY COMMAND         *
*           3  ATCOCHA PTR(31),        /* POINTER TO OCT HEADER       *
*           3  ATCECSES CHAR(4),       /* ECB TO HALT SESSION MODE    *
*           3  ATCECVRQ CHAR(4),       /* ERP ECB FOR VARY REQ. INFO. *
*                                      /* REQUEST NOTIFICATION        *
*           3  ATCVPARM PTR(31),       /* ADDR OF VARY PARAMETERS     *
*           3  ATCECOPC CHAR(4),       /* ECB TOINDICATE OPERATOR     *
*                                      /* CONTROL PROCESSING COMPLETE *
*           3  ATCECNET CHAR(4),       /* ERP ECB FOR NETWORK         *
*                                      /* CONFIGURATION REQUEST       *
*           3  ATCECPRM PTR(31),       /* POINTER TO QAB FOR ERP'S    *
*                                      /* ECB PARAMETERS              *
*           3  ATCHLTMS PTR(31),       /* POINTER TO HALT COMMAND     *
*                                      /* OR HALT RETURN MESSAGE      *
*           3  ATCFSB PTR(31),         /* PTR TO FEEDBACK STATUS      *
*                                      /* BLOCK                       *
*           3  ATCFRSCH PTR(31),       /* POINTER TO FEEDBACK         *
*                                      /* ROUTINE SCHEDULER           *
*           3  ATCRDTH PTR(31),        /*  POINTER RDT HEADER         *
*           3  ATCACCTA PTR(31),       /* POINTER TO INSTALLATION     *
*                                      /* ACCOUNTING ROUTINE          *
*           3  ATCAUTHA PTR(31),       /* POINTER TO INSTALLATION     *
*                                      /* AUTHORISATION ROUTINE       *
*           3  ATCPTCHA PTR(31),       /* PTR TO VTAM PATCH AREA      *
*           3  ATCCONFT PTR(31),       /* POINTER TO VTAM             *
*                                      /* CONFIGURATION TABLE         *
*           3  ATCFDVT PTR(31),        /* PTR TO FIRST DVT FOR O/C    *
*           3  ATCFEPT PTR(31),        /* PTR TO FIRST EPT FOR O/C    *
*           3  ATCDVTPT PTR(31),       /* ADDR OF LOAD MOD FOR        *
*                                      /* TYPE=VTAM TRACING           *
*           3  ATCBPDA PTR(31),        /* PTR TO BUFFER POOL DIRECTORY*
*           3  ATCADD PTR(31),         /* POINTER TO ADD PROCEDURE    *
*           3  ATCREMOV PTR(31),       /* POINTER TO REMOVE PROCEDURE *
*           3  ATCIOTRC PTR(31),       /*  POINTER TO I/O TRACE       *
*                                      /* PROCEDURE                   *
*              4 ATCTHTRC PTR(31),     /* ADDR OF TH TRACE ROUTINE    *
*                5 ATCTPBUF PTR(31),   /* TPIOS BUFFER TRACE(ISTRARTP)*
*           3  ATCBFTRC PTR(31),       /* PTR TO BUFFER TRACE         *
*                                      /* PROCEDURE                   *
*           3  ATCFBRPH PTR(31),       /* ADDR OF FEEDBACK PROC RPH   *
*           3  ATCBLDLA PTR(31),       /* ADDR OF BLDL ROUTINE        *
*           3  ATCALOAD PTR(31),       /* ADDR OF ALOAD ROUTINE       *
*           3  ATCREADA PTR(31),       /* ADDR OF SOURCE READ ROUTINE *
*           3  ATCGTSTR PTR(31),       /* ADDR OF GETSTOR ROUTINE     *
*           3  ATCFRSTR PTR(31),       /* ADDR OF FREESTOR ROUTINE    *
*           3  ATCSTMA PTR(31),        /* ADDR OF SM INITIALIZATION   *
*                                      /* ROUTINE                     *
*           3  ATCACDA PTR(31),        /* ADDR OF FIRST ACDEB         *
*           3  ATCSMRQ PTR(31),        /* ADDR OF REQUEST STORAGE     *
*                                      /* ROUTINE                     *
*           3  ATCSMQU PTR(31),        /* ADDR OF QUEUE REQUEST RTNE
*                                         - DOS ONLY                  *
*           3  ATCSMRS PTR(31),        /* ADDR OF RELEASE STORAGE     *
*                                      /* ROUTINE                     *
*           3  ATCSMRC PTR(31),        /* ADDR OF RECOVER STORAGE     *
*                                      /* ROUTINE  - DOS ONLY         *
*           3  ATCSMBQ PTR(31),        /* PTR TO Q'ED REQ. SMS RTN.   *
*           3  ATCFIRA PTR(31),        /* ADDR OF FEEDBACK INITIATION *
*                                      /* RPH                         *
*           3  ATCSRTAD PTR(31),       /* PTR TO SRTADD ROUTINE       *
*           3  ATCSRTDF PTR(31),       /* PTR TO SRTDELE ROUTN        *
*           3  ATCDCC60 PTR(31),       /* PTR TO ISTDCC60 - CTL. LAYER
*                                         MOVE TO USER AREA           *
*           3  ATCDCC61 PTR(31),       /* PTR TO ISTDCC61 - CTL. LAYER
*                                         MOVE FIXED TO PAGABLE       *
*/*  BEGIN 'ANY' DVT                                                  *
*           3  ATCNERST PTR(31),       /* PTR TO ISTDCC00 - REQUEST-ST*
*           3  ATCNERCV PTR(31),       /* PTR TO ISTRCC21-RECEIVE OB  *
*           3  ATCNERNE PTR(31),      /* PTR TO ISTDCC25 - READ-ANY   *
*           3  ATCNERFN PTR(31),      /* PTR TO ISTDCC02 - REQUEST-FN *
*/*  END 'ANY' DVT                                                    *
*           3  ATCAPOST PTR(31),      /* PTR TO VTAM  POST ROUTINE    *
*           3  ATCVTMID CHAR(2),      /* HOST MAJOR NODE I.D.         *
*           3  ATCRSV11 CHAR(2),      /* RESERVED                     *
*           3 ATCRCC63 PTR(31),  /* HSKPANYQ POINTER                  *
*           3 ATCRCC26 PTR(31),  /* SEND RESPONSE POINTER             *
*           3 ATCRCC65 PTR(31),  /* SET RPL POINTER                   *
*           3  ATCNESAL PTR(31),      /* PTR TO ISTDCC24 - SOLICIT-ALL*
*           3  ATCNERAP PTR(31),       /* PTR TO ISTDCC85 - READ ANY
*                                         PURGE                       *
*           3 ATCACTRM FIXED(15),     /* COUNT OF ACTIVE TERMINALS    *
*           3 ATCCIDM BIT(16),        /* CID MASK                     *
*           3 ATCMSGSP BIT(8), /* RESERVED FOR MESAGE SURPRESSION     *
*         2 ATCMAXID PTR(8),   /* MAXIMUM NUMBER OF MAJOR NODES, 0 =
*                                 NUMBER OF ENTRIES IN THE MNT        *
*         2 ATCRSV16 CHAR(2),  /* NOT USED                            *
*         2 ATCMNT PTR(31),    /*PTR TO MAJOR NODE TABLE -SET BY SYS.
*                                DEF. REF. BY ISTSDCCB (CBDEF),    0175
*                                ISTSDCCI (CINDEXY)                   *
*         2 ATCCDADD PTR(31),  /*PTR TO CIDADD ROUTINE ISTSDCCA    0175
*                                 REF. BY CIDCTL MACRO                *
*         2 ATCCDDEL PTR(31),  /*PTR TO CIDDEL ROUTINE ISTSDCCD    0175
*                                 REF. BY CIDCTL MACRO                *
*         2 ATCCDFND PTR(31),  /*PTR TO CIDFND ROUTINE IATSDCCF    0175
*                                 REF. BY CIDCTL MACRO                *
*         2 ATCESC01 PTR(31),  /*PTR TO ESC01                         *
*         2 ATCESC02 PTR(31),  /*PTR TO ESC02                         *
*         2 ATCCSMR PTR(31),        /* PTR TO CONNECTION SERVICES     *
*                                   /*  MASTER ROUTINE                *
*           3 ATCCSMA PTR(31),      /* PTR TO CONNECTION SERVICES  0175
*                                      MASTER ROUTINE                 *
*         2 ATCOCRT PTR(31),        /* PTR TO OPEN/CLOSE ROUTINE      *
*         2 ATCUEP  PTR(31),        /* POINTER TO USER EXIT           *
*         2 ATCSHRTN CHAR(8),       /* NAME OF VTAM  SHARED RTN       *
*                                   /*  TO BE LOADED                  *
*         2 ATCSHRFG BIT(8),        /* ATTRIBUTE FLAGS                *
*           3 ATCLAST BIT(1),       /* INDICATE HTIS IS LAST MODULE   *
*         2 ATCXRANG CHAR(1),       /* NUMBER OT BITS IN X-VALUE   0175
*                                       PORTION   OF CID              *
*         2 ATCSAF   CHAR(2),       /* SUB AREA ADDRESS FIELD         *
*         2 ATCEPA PTR(31),         /* ENTRY POINT ADDR OF LOADED     *
*         2 ATCALERT PTR(31),       /* POINTER TO ALERT-ROUTINE    0175
*                                      ISTSDCAL                       *
*         2 ATCDVLOD PTR(31),       /* PTR TO ISTSDCOD                *
*         2 ATCTRCPT PTR(31),       /* POINTER TO TRACE PARM LIST     *
*         2 ATCDVT   PTR(31),       /* POINTER TO FIRST DVT ON CHAIN  *
*         2 ATCEPT   PTR(31),       /* POINTER TO FIRST EPT ON CHAIN  *
*         2 ATCMSGP PTR(31),        /* POINTER TO TPMSG PROCESSOR     *
*         2 ATCMSGM PTR(31),        /* POINTER TO TPMSG - MESSAGE  0175
*                                      CSECT                          *
*         2 ATCTRPAB  PTR(31),      /* ADDRESS OF TRACE WRITER PAB    *
*         2 ATCVTLOD PTR(31),       /* ADDR OF VTAM LOAD LIST         *
*         2 ATCECPRT CHAR(4),       /* ECB FOR TRACE FILE PRINT       *
*         2 ATCZDVTB PTR(31),       /* ADDRESS OF ISTZCFBI            *
*         2 ATCECTLP CHAR(4),       /* TOLTEP ECB                     *
*         2 ATCRVCHS CHAR(8),       /* RESERVED                       *
*         2 ATCCRME  PTR(31),       /* VARY PSS CONTROL MECHANISM     *
*         2 ATCHPGM,                /* BUFFER INFORMATION            */
*           3 ATCHBFNO FIXED(15),   /* NUMBER OF BUFFS FOR CHANNEL   */
*           3 ATCHBSIZ FIXED(15),   /* BUFFER SIZE IN BYTES          */
*         2 ATCDEBCH PTR(31),       /* CLOSE DEB CHAIN PTR           */
*         2 ATCTODVT PTR(31),       /* THE TOLTEP DVT PTR POINTED  0175
*                                      TO BY 3RD WORD OF PAB         */
*         2 ATCADEL  PTR(31),       /* A DELETE ROUTINE ADDRESS      */
*         2 ATCCDPTR PTR(31),       /* PTR TO ISTOCCCD - DOS ONLY    */
*         2 ATCLDNCS PTR(31),       /* PTR TO NCSPL FOR LOAD/DUMP    */
*         2 ATCLDECB BIT(32),       /* ECB FOR LOAD/DUMP SUBTASK     */
*         2 ATCAPCR5 PTR(31),       /* POINTER TO ISTINCR5           */
*         2 ATCRSV69 PTR(31),       /* RESERVED TO SYNCH WITH DOS    */
*         2 ATCNODEL CHAR(8),       /* VSAM DATA SET NAME            */
*         2 ATCNODDS PTR(31),       /* POINTER TO RPL                */
*         2 ATCONFIG CHAR(8),       /* START VTAM CONFIG = PARAMETER */
*         2 ATCRSV99 CHAR(4),       /* RESERVED FOR LATER POINTERS   */
*         2 ATCAP33 PTR(31),        /* PTR TO ISTAPC33               */
*         2 ATCAP35 PTR(31),        /* PTR TO ISTAPC35               */
*         2 ATCAP36 PTR(31),        /* PTR TO ISTAPC36               */
*         2 ATCDVTLK CHAR(LENGTH(ISTLOK)), /* LOCK WORD FOR DVT LOCK */
*         2 ATCCDFIN PTR(31),       /* POINTER TO ISTSDCRR           */
*         2 ATCCDFDN PTR(31),       /* POINTER TO ISTSDCCN           */
*         2 ATCVOCLK CHAR(LENGTH(ISTLOK)), /* VOCLOCK LOCK           */
*         2 ATCRDTLK CHAR(LENGTH(ISTLOK)), /* RDTLOCK LOCK           */
*         2 ATCRSV97 PTR(31),              /* DWORD ALIGNMENT        */
*         2 ATCVPAB1 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* PAB FOR VARY
*                                           UNDER PSS CONTROL        */
*         2 ATCPGPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* ERP PAB FOR
*                                      PURGE                         */
*         2 ATCDLRPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* DUMP LOAD &
*                                           RESTART PAB              */
*         2 ATCCCLAD PTR(31),       /* ADDRESS OF VARY ERP (ISTINCCL)*/
*         2 ATCCDLAD PTR(31),       /* ADDRESS OF VARY DUMP,LD RSTRT
*                                      (ISTINCDL)                    */
*         2 ATCOCCOB PTR(31),       /* ADDRESS ISTOCCOB              */
*         2 ATCOCCCB PTR(31),       /* ADDRESS ISTOCCCB              */
*         2 ATCTIPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB   0175
*                                           FOR ISTOLTP              */
*         2 ATCTCIPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB   0175
*                                           FOR TOLTEP CLIP          */
*         2 ATCVTIPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB   0175
*                                           FOR TOLTEP-VTAM INTERFACE*/
*         2 ATCTCLOM PTR(31),      /* ADDR TOLTEP CLOP PROC          */
*         2 ATCTCLIM PTR(31),      /* ADDR TOLTEP CLIP PROC          */
*         2 ATCVTINM PTR(31),      /* ADDR TOLTEP-VTAM INTF PROC     */
*         2 ATCTACB  PTR(31),      /* TOLTEP ACB                     */
*         2 ATCRSV10 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* RESERVED  */
*         2 ATCPTR00 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* A PAB     */
*         2 ATCCFEAD PTR(31),          /* ADDR OF ISTINCFE           */
*         2 ATCVLCNT CHAR(4) BDY(HWORD), /* VARY DEVICE ONLINE COUNTS*/
*           3 ATCRNCNT PTR(16),        /* 370X COUNT                 */
*           3 ATCLCLCT PTR(16),        /* 3270 COUNT                 */
*         2 ATCS49XI PTR(31),          /* ADDRESS OF ISTPICXI        */
*         2 ATCS49XL PTR(31),          /* ADDRESS OF ISTPICXL        */
*         2 ATCPODVT PTR(31),          /* PTR TO PROGRAM OPERATOR DVT*/
*         2 ATCRNO,                                                0175
*           3 *        CHAR(1),                                    0175
*           3 ATCPOIA  PTR(24),        /* PTR TO PROGRAM OPERATOR    */
*                                      /* INTERFACE AREA             */
*         2 ATCSOPD CHAR(8) BDY(WORD), /* SESSION CONTROL            */
*           3 ATCSEC01 PTR(31),        /* OUTBOUND PROCESSING        */
*           3 ATCSEC10 PTR(31),        /* DVT                        */
*         2 ATCSIPD CHAR(12) BDY(WORD),/* SESSION CONTROL            */
*           3 ATCSEC21 PTR(31),        /* INBOUND PROCESSING         */
*           3 ATCSEC30 PTR(31),        /* FEEDBACK                   */
*           3 ATCSEC40 PTR(31),        /* DVT                        */
*         2 ATCSECST CHAR(4) BDY(WORD),/* SESSION CONTROLSESS TERM   */
*           3 ATCSEC51 PTR(31),        /* RECOVERY DVT               */
*         2 ATCNMCTR FIXED(15),        /* NAME COUNTER               */
*         2 ATCSTAT2 BIT(8),           /* TRACE FLAGS                */
*           3 ATCTRAPI BIT(1),         /* API                        */
*           3 ATCTRESC BIT(1),         /* ESC                        */
*           3 ATCTRPSS BIT(1),         /* PSS                        */
*           3 ATCTRLOK BIT(1),         /* LOCKS                      */
*           3 ATCTRSMS BIT(1),         /* SMS                        */
*           3 *        BIT(3),         /* RESERVED                   */
*         2 *        BIT(8),           /* RESERVED                   */
*         2 ATCSRTAB PTR(31),          /* SEARCH LOGON MODE TABLE    */
*                                      /* RTN ADDRESS (ISTINCSH)     */
*         2 ATCUSSPT PTR(31),          /* DEFAULT USS DEFINITION     */
*                                      /* TABLE ADDRESS (ISTINCDT)   */
*         2 ATCMODTB PTR(31),          /* DEFAULT SYSTEM LOGON MODE  */
*                                      /* TABLE ADDRESS (ISTINCLM)   */
*         2 ATCINCW3 PTR(31),          /* ADDRESS OF ISTINCW3        */
*         2 ATCIOECB PTR(31),          /* ECB USED BY IOS -          */
*                                      /* POINTED TO BY IOBECBPT     */
* 2 ATCVDPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),                    0175
*                                    /* SSCP COMMAND PROCESSING PAB  */
* 2 ATCVFPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),                    0175
*                                    /* SSCP FRONT END PAB           */
* 2 ATCVDLOK CHAR(LENGTH(ISTLOK)),   /* SSCP SERIALIZATION LOCK      */
*/* END OF COMMON AREA                                               */
*/* VS1/VS2 COMMON CODE.                                             */
*        2  ATCVTBAM CHAR(4),                                      0175
*           3  *     CHAR(3),          /* RESERVED                    *
*           3  *     CHAR(1),          /* FLAGS                       *
*              4 ATCVTMAB BIT(1) ABNL, /* ABEND IN VTAM JOBSTEP       *
*              4 *        BIT(7),      /* RESERVED                    *
*        2  ATCAOSM BDY(DWORD),                                    0175
*/*                                                                   *
*           3  ATCSRBRT PTR(31),       /* POINTER TO ROUTINE UNDER    *
*                                      /* SRB CONTROL                 *
*           3  ATCGSRBQ PTR(31),       /* READY QUEUE FOR GLOBAL SRB'S*
*              4  ATCGSRBG BIT(8),     /* READY QUEUE GATE BYTE       *
*                 5  ATCGSRBF BIT(1),  /* READY QUEUE GATE BIT        *
*           3  ATCPRPH PTR(31),        /* PTR TO PREALLOCATED RPH     *
*           3  ATCCMTCB PTR(31),       /* PTR TO COMMUNICATIONS TASK  *
*                                      /* TCB                         *
*           3  ATCAP11 PTR(31),        /* PTR TO ISTAPC11             *
*           3  ATCAP12 PTR(31),        /* PTR TO ISTAPC12             *
*           3  ATCAP31 PTR(31),        /* PTR TO ISTAPC31             *
*           3  ATCAP32 PTR(31),        /* PTR TO ISTAPC32             *
*           3  ATCAP34 PTR(31),        /* PTR TO ISTAPC34             *
*           3  ATCAP52 PTR(31),        /* PTR TO ISTAPC52             *
*           3  ATCAP53 PTR(31),        /* PTR TO ISTAPC53             *
*           3  ATCAP54 PTR(31),        /* PTR TO ISTAPC54             *
*           3  ATCAP57 PTR(31),        /* PTR TO ISTAPC57             *
*           3  ATCAP58 PTR(31),        /* PTR TO ISTAPC58             *
*           3  ATCAP61 PTR(31),        /* PTR TO ISTAPC61             *
*           3  ATCAP63 PTR(31),        /* PTR TO ISTAPC63             *
*           3  ATCAP64 PTR(31),        /* PTR TO ISTAPC64             *
*           3  ATCZFSVT PTR(31),       /* TPIOS FIXED SRVICES VCTR TAB*
*           3  ATCZPSVT PTR(31),       /* TPIOS PAGBL SRVCES VCTR TABL*
*           3  ATCICNCB PTR(31),       /* HEAD OF ICNCB QUEUE         *
*           3  ATCZDVT1 PTR(31),       /* TPIOS SLODWN RECOVRY PRCSR  *
*           3  ATCZDVT3 PTR(31),       /* 370X FEEDBACK STAT CNTRL RTR*
*           3  ATCZDVT4 PTR(31),       /* OPERATOR MESSAGE SCHEDULER  *
*           3  ATCZDVT6 PTR(31),       /* DIALOGUE SCHEDULER (INBOUND)*
*           3  ATCAP65 PTR(31),        /* PTR TO ISTAPC65            */
*           3  ATCICAPP CHAR(20) BDY(WORD), /* 3705 APPENDAGE VECTOR  *
*              4  ATCCDRPH PTR(31),    /* ADDR CLOSE DEB RPH       0175
*                                         (DUMMY EOA APP.)           */
*              4  ATCZSIOA PTR(31),    /* ADDR 3705 SIO APPENDAGE    */
*              4  ATCCDTCB PTR(31),    /* VTAM TCB (DUMMY PCI APP.)  */
*              4  ATCZCEA PTR(31),     /* ADDR 3705 CHANNEL END    0175
*                                         APPENDAGE                  */
*              4  ATCZAEA PTR(31),     /* ADDR 3705 CHANNEL END    0175
*                                         APPENDAGE                  */
*           3  ATCLDAPP CHAR(20) BDY(WORD), /* LOCAL 3270 APPENDAGE
*                                         VECTOR                     */
*              4  ATCCDTID PTR(31),    /* TASK ID OF VTAM          0175
*                                         (DUMP EOE)                 */
*              4  ATCSMFRR PTR(31),    /* ADDR OF SMS FRR          0175
*                                         (DUMMY SIOA)               */
*              4  ATCRSV17 PTR(31),    /* RESERVED FOR ALIGNMENT     */
*              4  ATCZLCEA PTR(31),    /* ADDR 3270 CHANNEL END    0175
*                                         APPENDAGE                  */
*              4  ATCZLAEA PTR(31),    /* ADDR 3270 CHANNEL END    0175
*                                         APPENDAGE                  */
*           3  ATCDAPVT CHAR(24) BDY(WORD),  /* DUMMY APPENDAGE    0175
*                                         VECTOR TABLE FOR LOAD/DVMMY*/
*              4  ATCDEOEA PTR(31),    /* ADDRESS OF DUMMY END     0175
*                                         OF EXTENT APPENDAGE        */
*              4  ATCDSIOA PTR(31),    /* ADDRESS OF DUMMY END     0175
*                                         OF SIO APPENDAGE           */
*              4  ATCDPCIA PTR(31),    /* ADDRESS OF DUMMY PCI     0175
*                                         APPENDAGE                  */
*              4  ATCDCEA PTR(31),     /* ADDRESS OF CHANNEL END   0175
*                                         APPENDAGE                  */
*              4  ATCDXCEA PTR(31),    /* ADDRESS OF ABNORMAL      0175
*                                         END APPENDAGE              */
*              4  ATCDAPDG CHAR(2),    /* DUMMY APPENDAGE            */
*              4  ATCRSV56 CHAR(2),    /* RESERVED                   */
*           3  ATCZDVT7 PTR(31),       /* ADDR OF RESET CLEANUP    0175
*                                         (PHASE 1)                   *
*           3  ATCZDVT8 PTR(31),       /* 3270 LOCAL TEST AND CTL  0175
*                                         FEEDBACK ROUTER            */
*           3  ATCZDVT9 PTR(31),       /* ADDRESS OF ISTZDFKA        */
*           3  ATCZDVTA PTR(31),       /* ADDRESS OF ISTZCFIA        */
*           3  ATCZDVTX PTR(31),       /* ADDRESS OF TRUNK LINE    0175
*                                         DEACTIVATE ROUTINE         */
*           3  ATCZLPVT PTR(31),       /* ADDRESS OF ISTZPSVA        */
*           3  ATCZLFVT PTR(31),       /* TPIOS 3270 LOCAL FIXED   0175
*                                         SERVICES VECTOR TABLE      */
*           3  ATCZPAB1 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* PAB FOR
*                                         TEST AND CTL FEEDBACK ROUTER*
*           3  ATCZPAB2 CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* 370X 0175
*                                         STATUS AND FEEDBACK ROUTER
*                                         DYNAMIC PAB                */
*           3  ATCAP51  PTR(31),       /* PTR TO ISTAPC51            */
*           3  ATCZDFJ0 PTR(31),       /* ADDR OF ISTZDFJ0           */
*           3  ATCAP37  PTR(31),       /* PTR TO ISTAPC37            */
*           3  ATCAP38  PTR(31),       /* PTR TO ISTAPC38            */
*           3  ATCDMAPP PTR(31),       /* DUMMY APPENDAGE ROUTINE    */
*                                      /* FOR ABEND                  */
*           3  ATCRPT12 PTR(31),       /* RESERVED                   */
*        3  ATCCRA   CHAR(8) BDY(DWORD), /* AVAILABLE CRA             *
*           4 ATCCRAQ  PTR(31),          /* QUEUE OF AVAILABLE CRAS   *
*           4 ATCCRACN FIXED(31),        /* COUNTS                    *
*             5 ATCCRARC FIXED(16),      /* ENQUEUE COUNT TO ALLOW    *
*                                        /* MULTIPLE SIMUALTANIOUS    *
*                                        /* ENQUEUES AND DEQUEUES     *
*             5 ATCCRAAC FIXED(16),      /* COUNT OF CRAS ON AVAIL Q  *
*        3  ATCSRB   CHAR(8) BDY(DWORD), /* AVAILABLE SRBS            *
*             4 ATCSRBQ  PTR(31),        /* QUE OF AVAILABLE SRBS     *
*             4 ATCSRBCN FIXED(31),      /* COUNTS                    *
*               5 ATCSRBRC FIXED(16),    /* ENQUEUE COUNT TO ALLOW    *
*                                        /* MULTIPLE SIMUALTANIOUS    *
*                                        /* ENQUEUES AND DEQUEUES     *
*               5 ATCSRBAC FIXED(16),    /* COUNT OF SRBS ON AVAIL Q  *
*        3  ATCCRPL  CHAR(8) BDY(DWORD), /* AVAILABLE CRPLS           *
*             4 ATCCRPLQ PTR(31),        /* QUE OF AVAILABLE CRPLS    *
*             4 ATCRPLCN FIXED(31),      /* COUNTS                    *
*               5 ATCRPLRC FIXED(16),    /* ENQUEUE COUNT TO ALLOW    *
*                                        /* MULTIPLE SIMUALTANIOUS    *
*                                        /* ENQUEUES AND DEQUEUES     *
*               5 ATCRPLAC FIXED(16),    /* COUNT OF CRPLS ON AVAIL Q *
*           3  ATCRPT19 PTR(31),       /* RESERVED                   */
*           3  ATCRPT20 PTR(31),       /* RESERVED                   */
*           3  ATCRPT21 PTR(31),       /* RESERVED                   */
*           3  ATCRPT22 PTR(31),       /* RESERVED                   */
*           3  ATCRPT23 PTR(31),       /* RESERVED                   */
*           3  ATCRPT24 PTR(31),       /* RESERVED                   */
*           3  ATCRPT25 PTR(31),       /* RESERVED                   */
*           3  ATCRPT26 PTR(31),       /* RESERVED                   */
*           3  ATCRPT27 PTR(31),       /* RESERVED                   */
*           3  ATCRPT28 PTR(31),       /* RESERVED                   */
*           3  ATCRPT29 PTR(31),       /* RESERVED                   */
*           3  ATCRPT30 PTR(31),       /* RESERVED                   */
*           3  ATCRPT31 PTR(31),       /* RESERVED                   */
*           3  ATCRPT32 PTR(31),       /* RESERVED                   */
*           3  ATCRPT33 PTR(31),       /* RESERVED                   */
*           3  ATCRPT34 PTR(31),       /* RESERVED                   */
*           3  ATCRPT35 PTR(31),       /* RESERVED                   */
*           3  ATCRPT36 PTR(31),       /* RESERVED                   */
*           3  ATCRPT37 PTR(31),       /* RESERVED                   */
*           3  ATCRPT38 PTR(31),       /* RESERVED                   */
*           3  ATCRPT39 PTR(31),       /* RESERVED                   */
*           3  ATCRPT40 PTR(31),       /* RESERVED                   */
*/* END OF VS1/VS2 COMMON CODE.                                      */
*/* START OF VS2 UNIQUE CODE.                                        */
*           3  ATCVTFLG BIT(32),                                   0175
*              4 ATCVTACT BIT(1),      /* VTT ACTIVE                 */
*              4 *        BIT(31),     /* RESERVED                   */
*           3  ATCHLTCB PTR(31),       /* ECB FOR HALTING VTAM       */
*           3  ATCATA10 PTR(31),       /* PTR TO ISTATM10            */
*           3  ATCZLAAB PTR(31),       /* PTR TO ISTZLFAB            */
*           3  ATCCACXA PTR(31),       /* PTR TO ISTCFCXA            */
*           3  ATCSMARA PTR(31),       /* PTR TO ISTORFRA            */
*           3  ATCSMAID PTR(31),       /* PTR TO ISTORFID            */
*           3  ATCTPWQA PTR(31),       /* WAIT Q ANCHOR FOR TPIOS    */
*           3  ATCSMAPR PTR(31),       /* PTR TO ISTORFPR            */
*           3  ATCSMABF PTR(31),       /* PTR TO ISTORFBF            */
*           3  ATCPSTA  PTR(31),       /* ACTIVE PST QUEUE           */
*           3  ATCAPBE  PTR(31),       /* POINTER TO ISTAICBE        */
*           3  ATCTRMPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),         0175
*                                      /* PAB FOR VTAM TERM TASK     */
*           3  ATCTPSPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),         0175
*                                      /* PAB FOR TPIOS              */
*           3  ATCAP23  PTR(31),       /* PTR TO ISTAPC23            */
*           3  ATCAPC25 PTR(31),       /* PTR TO ISTAPC25            */
*           3  ATCAP41  PTR(31),       /* PTR TO ISTAPC41            */
*           3  ATCRCFY0 PTR(31),       /* PTR TO ISTRCFY0            */
*           3  ATCAP55  PTR(31),       /* PTR TO ISTAPC55            */
*           3  ATCAP56  PTR(31),       /* PTR TO ISTAPC56            */
*           3  ATCAPC59 PTR(31),       /* PTR TO ISTAPC59            */
*           3  ATCAP62  PTR(31),       /* PTR TO ISTAPC62            */
*           3  ATCAP66  PTR(31),       /* PTR TO ISTAPC66            */
*           3  ATCAP69  PTR(31),       /* PTR TO ISTAPM69            */
*           3  ATCAP82  PTR(31),       /* PTR TO ISTAPC82            */
*           3  ATCAP83  PTR(31),       /* PTR TO ISTAPC83            */
*           3  ATCAP84  PTR(31),       /* PTR TO ISTAPC84            */
*           3  ATCAP85  PTR(31),       /* PTR TO ISTAPC85            */
*           3  ATCAP86  PTR(31),       /* PTR TO ISTAPC86            */
*           3  ATCASCB  PTR(31),       /* PTR TO VTAM ASCB           */
*           3  ATCMPLTA  PTR(31),      /* PTR TO MPST LIST TABLE     */
*           3  ATCZR01  PTR(31),       /* PTR TO ISTZRM01            */
*           3  ATCAICTN PTR(31),       /* PTR TO ISTAICTN            */
*           3  ATCTPCP0 PTR(31),       /* PTR TO ISTZFSAV            */
*           3  ATCTPCP1 PTR(31),       /* PTR TO ISTZ19SV            */
*           3  ATCZFLAG BIT(8),        /* FLAG BYTE                  */
*              4 ATCZF001 BIT(1),      /* MDR RECORDING SUSPENDED    */
*              4 ATCRSV66 BIT(7),      /* RESERVED                   */
*           3  ATCRSV75 BIT(8),        /* RESERVED                   */
*           3  ATCSRBCT FIXED(16),     /* COUNT OF PREALLOCATED SRB'S*/
*           3  ATCCRACT FIXED(16),     /* COUNT OF PREALLOCATED CRA'S*/
*           3  ATCRPLCT FIXED(16),     /* COUNT OF PREALLOCATED CRPL */
*           3  ATCRSV88 PTR(31),       /* RESERVED                   */
*           3  ATCTPMPB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /*TP MSG PAB
*                                                         FOR VS2    */
*           3  ATCTPMMI PTR(31),        /* PTR TO ISTCFMMI - MSG ISSUER
*                                          FOR SRB MODE ROUTINES     */
*           3  ATCVIOPM PTR(31),       /* PTR TO ISTVIOPM            */
*           3  ATCPOPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD),         0175
*                   /* POPAB FOR REPLY PROCESSING, POI TERMINATION,  */
*                   /* AND VTAM MESSAGE PROCESSOR                    */
*        2  ATCAOS CHAR(0) BDY(WORD);  /* VS2 ONLY FIELDS            */
*/* ***** PROCESS SCHEDULING TABLE FOR VS/2       ****** */        0176
*/*  INITIAL LEVEL                                      001 04/09/75 */
*DCL  1  ISTPST BDY(DWORD) BASED,                                  0176
*        2  PSTTYPE  CHAR(1),          /* CONTROL BLOCK TYPE         */
*        2  PSTLNGTH PTR(8),           /* LENGTH IN BYTES            */
*        2  *        CHAR(2),          /* RESERVED                   */
*        2  PSTCHAIN PTR(31),          /* ADDRESS OF NEXT PST        */
*        2  PSTRQFGA CHAR(8) BDY(DWORD),  /* READY QUEUE AND FLAGS   */
*           3  PSTRQUE PTR(31),        /* READY QUEUE                */
*              4  PSTRQFLG BIT(1),     /* READY QUEUE GATE           */
*              4  PSTRSV01 BIT(1),     /* REVERVED                   */
*              4  PSTRSV02 BIT(1),     /* REVERVED                   */
*              4  PSTRSV03 BIT(1),     /* REVERVED                   */
*              4  PSTRSV04 BIT(1),     /* REVERVED                   */
*              4  PSTRSV05 BIT(1),     /* REVERVED                   */
*              4  PSTRSV06 BIT(1),     /* REVERVED                   */
*              4  PSTRSV07 BIT(1),     /* REVERVED                   */
*              4  PSTRQUEA PTR(24),    /* READY QUEUE                */
*           3  PSTFLGA PTR(32),        /* FLAG FIELD                 */
*              4  PSTSSRN BIT(1),      /* IRB RUNNING SYSTEM SERVICE
*                                         TYPE REQUESTS              */
*              4  PSTUERN BIT(1),      /* IRB RUNNING USER EXIT TYPE
*                                         REQUESTS                   */
*              4  PSTIRBU1 BIT(1),     /* IRB # 1 IN USE             */
*              4  PSTIRBU2 BIT(1),     /* IRB # 2 IN USE             */
*              4  PSTSMQR BIT(1),      /* SMS RPH QUEUED FOR STORAGE */
*              4  PSTSMCU BIT(1),      /* SMS CRA IN USE             */
*              4  PSTAUTH BIT(1),      /* THE TASK THIS PST IS OBTAINED
*                                         FOR IS AUTHORIZED          */
*              4  PSTABINP BIT(1),     /* ABEND IN PROGRESS ON THIS
*                                         TASK                       */
*                 5 PSTABEND BIT(1),   /* TASK ABEND IN PROGRESS     */
*              4  PSTDMPC BIT(1),      /* DUMP HAS BEEN REQUESTED    */
*              4  PSTRSV08 BIT(23),    /* RESERVED                   */
*        2  PSTTCBA PTR(31),           /* TCB POINTER                */
*        2  PSTMPSTP PTR(31),          /* MPST POINTER - PST 6TH WORD*/
*        2  PSTACBCT FIXED(31),        /* COUNT OF OPEN ACB'S USING
*                                         THIS PST                   */
*        2  PSTPSSQ PTR(31),           /* POSTED SYSTEM SERVICE QUEUE*/
*        2  PSTNSSQ PTR(31),           /* NORMAL SYSTEM SERVICE QUEUE*/
*        2  PSTUEQ  PTR(31),           /* USER EXIT QUEUE            */
*        2  PSTIQE11 PTR(31),          /* INACTIVE IQE FOR FIRST IRB */
*        2  PSTIQE12 PTR(31),          /* ACTIVE IQE FOR FIRST IRB   */
*        2  PSTIQE21 PTR(31),          /* INACTIVE IQE FOR 2ND IRB   */
*        2  PSTIQE22 PTR(31),          /* ACTIVE IQE FOR 2ND IRB     */
*        2  PSTCRR1 PTR(31),           /* PREALLOCATED CRA           */
*        2  PSTCRRS PTR(31),           /* SMS CRA                    */
*        2  PSTSMDYP CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* SMS PAB   */
*        2  PSTSAVE CHAR(32),          /* SAVE AREA                  */
*        2  PSTDEBP  PTR(31),          /* POINTER TO DEB CHAIN       */
*                                      /* WHEN TASK ABENDS           */
*        2  PSTDMPS  FIXED(31),        /* DUMMY MPST                 */
*           3 PSTDGATE BIT(1),         /* DUMMY MPST GATE BIT        */
*           3 *        BIT(7),         /* NOT TO BE USED             */
*           3 PSTDRDYQ PTR(24);        /* DUMMY MPST READY QUEUE     */
*DCL  PSTSSRN0 BIT(32) CONSTANT('7FFFFFFF'X); /* TURN PSTSSRN OFF    */
*DCL  PSTSSRN1 BIT(32) CONSTANT('80000000'X); /* TURN PSTSSRN ON     */
*DCL  PSTUERN0 BIT(32) CONSTANT('BFFFFFFF'X); /* TURN PSTUERN OFF    */
*DCL  PSTUERN1 BIT(32) CONSTANT('40000000'X); /* TURN PSTUERN ON     */
*DCL  PSTGATE0 BIT(32) CONSTANT('7FFFFFFF'X); /* TURN PST READY QUEUE
*                                                GATE OFF            */
*DCL  PSTGATE1 BIT(32) CONSTANT('80000000'X); /* TURN PST READY QUEUE
*                                                GATE ON             */
*DCL  PSTIRB10 BIT(32) CONSTANT('DFFFFFFF'X); /* TURN PSTIRBU1 OFF   */
*DCL  PSTIRB11 BIT(32) CONSTANT('20000000'X); /* TURN PSTIRBU1 ON    */
*DCL  PSTIRB20 BIT(32) CONSTANT('EFFFFFFF'X); /* TURN PSTIRBU2 OFF   */
*DCL  PSTIRB21 BIT(32) CONSTANT('10000000'X); /* TURN PSTIRBU2 ON    */
*DCL  PSTSMQR0 BIT(32) CONSTANT('F7FFFFFF'X); /* TURN PSTSMQR OFF    */
*DCL  PSTSMQR1 BIT(32) CONSTANT('08000000'X); /* TURN PSTSMQR ON     */
*DCL  PSTSMCU0 BIT(32) CONSTANT('FBFFFFFF'X); /* TURN PSTSMCU OFF    */
*DCL  PSTSMCU1 BIT(32) CONSTANT('04000000'X); /* TURN PSTSMCU ON     */
*DCL  PSTABIP1 BIT(32) CONSTANT('01000000'X); /* TURN PSTABINP ON    */
*DCL  PSTABIP0 BIT(32) CONSTANT('FEFFFFFF'X); /* TURN OFF PSTABINP   */
*DCL  PSTYPE   BIT(8) CONSTANT('61'X);        /* TYPE CODE FOR PST   */
*/* *****      MEMORY PROCESS SCHEDULE TABLE FOR VS2  ***** */     0194
*/*  REVISIONS                                          002 05/21/75 */
*DCL  1  ISTMPST BDY(DWORD) BASED,                                 0194
*        2  MPSID CHAR(4),               /* MPST EBCDIC ACRONYM */ 0194
*        2  MPSRSV07 PTR(31),          /*RESERVED                     *
*        2  MPSRQUE PTR(31),           /* READY QUEUE                */
*           3  MPSRQUEG BIT(1),        /* GATE FOR READY QUEUE       */
*        2  MPSFLGA CHAR(4) BDY(WORD), /* FLAGS                      */
*           3  MPSSRBO BIT(1),         /* IF ON SMS REQUEST FOR SRB
*                                         OUTSTANDING                */
*           3  MPSCRAO BIT(1),         /* IF ON REQUEST TO SMS FOR 0194
*                                         CRA OUSTANDING             */
*           3  MPSAUTH BIT(1),         /*THIS MEMORY IS AUTHRZD BY APF*
*           3  MPMEMTRM BIT(1),        /* MEMORY TERMINATION HAS OCCUR-
*                                         RED               @YL02HDM */
*           3  MPSTPBU  BIT(1),        /* TPIO PAB NEEDS CLEAN-UP    */
*           3  MPSRSV01 BIT(2),        /* RESERVED                   */
*           3  MPSPSTAB BIT(1),        /* RESERVED FOR MPST/PST      */
*                                      /* COMPATIBILITY              */
*           3  MPSRSV02 BIT(8),        /* RESERVED                   */
*           3  MPSASID CHAR(2),        /* ASID                       */
*        2  MPSPSTCT FIXED(31),        /* COUNT OF PST ASSOCIATED  0194
*                                         WITH THIS MPST             */
*        2  MPSMPSTP PTR(31),          /* PTR TO MPST - MUST BE 6TH
*                                         WORD OF THE MPST           */
*        2  MPSCRA CHAR(8) BDY(DWORD),                             0194
*           3  MPSCRAQ PTR(31),        /* QUEUE OF AVAILABLE CRA'S   */
*           3  MPSCRACT FIXED(31),     /* COUNT OF CRA'S ON THE    0194
*                                         AVAILABLE CRA QUEUE        */
*               4  MPSCRARC FIXED(16), /* RUNNING CNT OF CRA'S Q'D   */
*               4  MPSCRAAC FIXED(16), /*  CNT OF CRA'S ON AVAIL Q   */
*        2  MPSSRB CHAR(8) BDY(DWORD),                             0194
*           3  MPSSRBQ PTR(31),        /* QUEUE OF AVAILABLE PRE-  0194
*                                         ALLOCATED SRB'S            */
*           3  MPSSRBCT FIXED(31),     /* COUNT OF SRB'S ON AVAILABLE
*                                         SRB QUEUE                  */
*               4  MPSSRBRC FIXED(16), /* RUNNING CNT OF SRB'S Q'D   */
*               4  MPSSRBAC FIXED(16), /*  CNT OF SRB'S ON AVAIL Q   */
*        2  MPSCRPL CHAR(8) BDY(DWORD),                            0194
*           3  MPSCRPLQ PTR(31),         /* QUEUE OF AVAILABLE CRPLS*/
*           3  MPSRPLCT FIXED(31),       /* CNT OF CRPLS ON AVAIL Q */
*              4  MPSRPLRC FIXED(16),    /* RUNNING CNT OF CRPLS QED*/
*              4  MPSRPLAC FIXED(16),    /* CNT OF CRPLS ON AVAIL Q */
*        2  MPSSRB55 PTR(31),          /* PTR TO SRB TO SCHEDULE TO
*                                         DISPATCH ISTAPC55          */
*        2  MPSSMRPH PTR(31),          /*  POINTER TO RPH TO REQUEST
*                                         STORAGE FOR SRB'S OR CRA'S */
*        2  MPSSMPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* SMS PAB TO
*                                         ALLOCATE SRB'S & CRA'S WITH*/
*        2  MPSTPPAB CHAR(LENGTH(ISTDYPAB)) BDY(DWORD), /* PAB TO  0194
*                                         SERIALIZE TPIOS REQUEST    */
*        2  MPSASCB PTR(31),           /* POINTER TO ASCB            */
*        2  MPSDBTBL PTR(31),          /* ANCHOR FOR OPEN VTAM DEB'S
*                                         IN THIS MEMORY             */
*        2  MPSQEL  PTR(31),           /* QUEUE OF AVAILABLE QUEUING
*                                         ELEMENTS                   */
*        2  MPSSYSRT PTR(31),          /* ADDRESS TO RETRN TO FROM SRB*
*        2  MPSMQLBP PTR(31),          /* ANCHOR FOR MQL BLOCK ALLOC  *
*        2  MPSSAVE CHAR(32) BDY(WORD), /* SAVE AREA TO USE UNDER  0194
*                                          PROTECTION OF LOCAL MEMORY
*                                          LOCK          @YL02HDM  */
*        2  MPSSRB1 CHAR(LENGTH(SRBSECT));/* SRB FOR DIRECT TPIO SCHED*
*DCL  MPSMPST CHAR(4) CONSTANT('MPST');       /* CHARACTER C.B. ID    *
*DCL  MPSGATE0 BIT(32) CONSTANT('7FFFFFFF'X); /* TURN MPST READY QUEUE
*                                                GATE OFF             *
*DCL  MPSGATE1 BIT(32) CONSTANT('80000000'X); /* TURN MPST READY QUEUE
*                                                GATE ON              *
*DCL  MPSPRBO0 BIT(32) CONSTANT('7FFFFFFF'X); /* TURN OFF MPSPRBO     *
*DCL  MPSPRBO1 BIT(32) CONSTANT('80000000'X); /* TURN ON MPSPRBO      *
*DCL  MPSCRBO0 BIT(32) CONSTANT('BFFFFFFF'X); /* TURN OFF MPSCRBO     *
*DCL  MPSCRBO1 BIT(32) CONSTANT('40000000'X); /* TURN ON MPSCRBO      *
*DCL  MPSTERM1 BIT(32) CONSTANT('10000000'X); /* TURN ON MPMEMTRM     *
*DCL  MPSMTRM0 BIT(32) CONSTANT('EFFFFFFF'X); /* TURN OFF MPMEMTRM    *
*   GEN(PRINT ON);                                                 0204
*                                                                  0204
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0205
*   END ISTAPC37                                                   0205
*                                                                  0205
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*                                                                  0205
*       ;                                                          0205
@EL00001 DS    0H                                                  0205
@EF00001 DS    0H                                                  0205
@ER00001 BR    @14                                                 0205
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTAPC37 CSECT
         DS    0F
@CF00913 DC    XL4'7FFFFFFF'
@CF00914 DC    XL4'80000000'
@CF00933 DC    XL4'FDFFFFFF'
@DATD    DSECT
         DS    0D
SRBPTR   DS    A
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTAPC37 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00790 DC    C'PS59'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR03P   EQU   @03
GPR05P   EQU   @05
GPR06P   EQU   @06
GPR07P   EQU   @07
GPR08P   EQU   @08
GPR09P   EQU   @09
GPR10P   EQU   @10
GPR11P   EQU   @11
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR15P   EQU   @15
WELPTR   EQU   @04
PABPTR   EQU   @05
RPHPTR   EQU   @01
GPR01F   EQU   @01
GPR03F   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR09F   EQU   @09
GPR10F   EQU   @10
GPR11F   EQU   @11
GPR12F   EQU   @12
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR15F   EQU   @15
CVTPTR   EQU   16
ATCLCPTR EQU   1032
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SRBSECT  EQU   0
SRBID    EQU   SRBSECT
SRBFLNK  EQU   SRBSECT+4
SRBFLC   EQU   SRBSECT+12
SRBEP    EQU   SRBSECT+20
SRBPARM  EQU   SRBSECT+28
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHPABQA EQU   ISTRPH+36
RPHPABQP EQU   RPHPABQA+1
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABDELAY EQU   PABCHAIN
PABCHNGP EQU   PABCHAIN+1
PABOFFST EQU   ISTPAB+8
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABPRIOR EQU   PABFLAGS
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTDYPAB EQU   0
DYPTSKID EQU   ISTDYPAB+8
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00015 EQU   LOKCHNG+2
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00023 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP32  EQU   ATCAOSM+28
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCVTFLG EQU   ATCAOSM+392
ATCAPC59 EQU   ATCAOSM+528
ATCZFLAG EQU   ATCAOSM+588
ISTAPC32 EQU   0
@NM00005 EQU   0
@NM00007 EQU   @NM00005+1
NSTR     EQU   @NM00007
PRIORITY EQU   @NM00007
DISABLED EQU   @NM00007
LIFO     EQU   @NM00007
@NM00009 EQU   0
WELCHN   EQU   @NM00009+4
ISTPST   EQU   0
PSTRQFGA EQU   ISTPST+8
PSTRQUE  EQU   PSTRQFGA
PSTFLGA  EQU   PSTRQFGA+4
PSTABINP EQU   PSTFLGA
PSTMPSTP EQU   ISTPST+20
PSTDMPS  EQU   ISTPST+132
ISTMPST  EQU   0
MPSRQUE  EQU   ISTMPST+8
MPSFLGA  EQU   ISTMPST+12
MPSCRA   EQU   ISTMPST+24
MPSCRACT EQU   MPSCRA+4
MPSSRB   EQU   ISTMPST+32
MPSSRBCT EQU   MPSSRB+4
MPSCRPL  EQU   ISTMPST+40
MPSRPLCT EQU   MPSCRPL+4
MPSSRB55 EQU   ISTMPST+48
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTLSMQ  EQU   CVTS01+268
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
SRB      EQU   SRBSECT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
MPSSRB1  EQU   ISTMPST+172
MPSSAVE  EQU   ISTMPST+140
MPSMQLBP EQU   ISTMPST+136
MPSSYSRT EQU   ISTMPST+132
MPSQEL   EQU   ISTMPST+128
MPSDBTBL EQU   ISTMPST+124
MPSASCB  EQU   ISTMPST+120
MPSTPPAB EQU   ISTMPST+88
MPSSMPAB EQU   ISTMPST+56
MPSSMRPH EQU   ISTMPST+52
MPSRPLAC EQU   MPSRPLCT+2
MPSRPLRC EQU   MPSRPLCT
MPSCRPLQ EQU   MPSCRPL
MPSSRBAC EQU   MPSSRBCT+2
MPSSRBRC EQU   MPSSRBCT
MPSSRBQ  EQU   MPSSRB
MPSCRAAC EQU   MPSCRACT+2
MPSCRARC EQU   MPSCRACT
MPSCRAQ  EQU   MPSCRA
MPSMPSTP EQU   ISTMPST+20
MPSPSTCT EQU   ISTMPST+16
MPSASID  EQU   MPSFLGA+2
MPSRSV02 EQU   MPSFLGA+1
MPSPSTAB EQU   MPSFLGA
MPSRSV01 EQU   MPSFLGA
MPSTPBU  EQU   MPSFLGA
MPMEMTRM EQU   MPSFLGA
MPSAUTH  EQU   MPSFLGA
MPSCRAO  EQU   MPSFLGA
MPSSRBO  EQU   MPSFLGA
MPSRQUEG EQU   MPSRQUE
MPSRSV07 EQU   ISTMPST+4
MPSID    EQU   ISTMPST
PSTDRDYQ EQU   PSTDMPS+1
@NM00027 EQU   PSTDMPS
PSTDGATE EQU   PSTDMPS
PSTDEBP  EQU   ISTPST+128
PSTSAVE  EQU   ISTPST+96
PSTSMDYP EQU   ISTPST+64
PSTCRRS  EQU   ISTPST+60
PSTCRR1  EQU   ISTPST+56
PSTIQE22 EQU   ISTPST+52
PSTIQE21 EQU   ISTPST+48
PSTIQE12 EQU   ISTPST+44
PSTIQE11 EQU   ISTPST+40
PSTUEQ   EQU   ISTPST+36
PSTNSSQ  EQU   ISTPST+32
PSTPSSQ  EQU   ISTPST+28
PSTACBCT EQU   ISTPST+24
PSTTCBA  EQU   ISTPST+16
PSTRSV08 EQU   PSTFLGA+1
PSTDMPC  EQU   PSTFLGA+1
PSTABEND EQU   PSTABINP
PSTAUTH  EQU   PSTFLGA
PSTSMCU  EQU   PSTFLGA
PSTSMQR  EQU   PSTFLGA
PSTIRBU2 EQU   PSTFLGA
PSTIRBU1 EQU   PSTFLGA
PSTUERN  EQU   PSTFLGA
PSTSSRN  EQU   PSTFLGA
PSTRQUEA EQU   PSTRQUE+1
PSTRSV07 EQU   PSTRQUE
PSTRSV06 EQU   PSTRQUE
PSTRSV05 EQU   PSTRQUE
PSTRSV04 EQU   PSTRQUE
PSTRSV03 EQU   PSTRQUE
PSTRSV02 EQU   PSTRQUE
PSTRSV01 EQU   PSTRQUE
PSTRQFLG EQU   PSTRQUE
PSTCHAIN EQU   ISTPST+4
@NM00026 EQU   ISTPST+2
PSTLNGTH EQU   ISTPST+1
PSTTYPE  EQU   ISTPST
@NM00010 EQU   @NM00009
@NM00008 EQU   @NM00007
@NM00006 EQU   @NM00005
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00025 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
ATCRPT26 EQU   ATCAOSM+332
ATCRPT25 EQU   ATCAOSM+328
ATCRPT24 EQU   ATCAOSM+324
ATCRPT23 EQU   ATCAOSM+320
ATCRPT22 EQU   ATCAOSM+316
ATCRPT21 EQU   ATCAOSM+312
ATCRPT20 EQU   ATCAOSM+308
ATCRPT19 EQU   ATCAOSM+304
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00024 EQU   @NM00023
ATCVTMAB EQU   @NM00023
@NM00022 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00021 EQU   ISTATCVT+819
@NM00020 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00019 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCSMRQ  EQU   ATCCOM+180
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00018 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00017 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
LOKXCL   EQU   @NM00015
LOKPRY   EQU   @NM00015
@NM00016 EQU   @NM00015
@NM00014 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABRSV02 EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABFG EQU   RPHPABQA
RPHCRR   EQU   ISTRPH+32
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00013 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00012 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00011 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
@NM00004 EQU   SRBSECT+40
@NM00003 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBRMTR  EQU   SRBSECT+24
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00062 EQU   @RC00061
@ENDDATA EQU   *
         END   ISTAPC37,(C'PLS0627',0603,76055)
