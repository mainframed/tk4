         TITLE 'ISTAPC55-MPST DISPATCHER                               *
                        '
ISTAPC55 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTAPC55  77.266'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0263
*/********************************************************************/
*/*                                                                  */
*/*                           CODE                                   */
*/*                                                                  */
*/********************************************************************/
*                                                                  0263
*                                   /*                               */
*   MPSTREG=REG1;                   /* MPST ADDRESS FROM INPUT       */
         LR    MPSTREG,REG1                                        0263
*   RFY                                                            0264
*    (WRKA) RSTD;                                                  0264
*   DO;                             /* LISATCVT                    0265
*                                      CVTBASE(PAGEABLE,(VCVTREG))   */
*     VCVTREG=ATCLCPTR;             /* SET UP ATCVT POINTER          */
         L     VCVTREG,ATCLCPTR                                    0266
*   END;                            /* LISATCVT VTAM CVT PTR         */
*   FRRPREG=ATCAP66;                /* FOR RECOVERY                  */
         L     FRRPREG,ATCAP66(,VCVTREG)                           0268
*   GENERATE REFS(FRRPREG,PARREG,WRKA,WRKB,PSACSTK,PSA,FRRSCURR,FRRS,
*       FRRSLAST,FRRSELEN,FRRSFRRA,FRRSENTR,FRRSPARM,PSALSFCC);    0269
           SETFRR A,FRRAD=(FRRPREG),PARMAD=(PARREG),WRKREGS=(WRKA,WRKB)
*   RFY                                                            0270
*    (WRKA) UNRSTD;                                                0270
*   WORD0=MPSTREG×MPSGATE1;         /* MPST @ WITH HI BIT IN PARM  0271
*                                      AREA                          */
*                                                                  0271
         LR    @07,MPSTREG                                         0271
         O     @07,@CF01056                                        0271
         ST    @07,WORD0(,PARREG)                                  0271
*   /*****************************************************************/
*   /*                                                               */
*   /* TO IND APC55 RUNNING                                  @Y30APGA*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0272
*   EXSWREG=0;                      /* FOR EXIT LOOP CONTROL         */
         SLR   EXSWREG,EXSWREG                                     0272
*   MPSSYSRT=REG14;                 /* SAVE RETURN PTR TO SYSTEM     */
         ST    REG14,MPSSYSRT(,MPSTREG)                            0273
*TESTDONE:                                                         0274
*   DO WHILE(EXSWREG=0);            /* OVERALL LOOP CONTROL          */
TESTDONE B     @DE00274                                            0274
@DL00274 DS    0H                                                  0275
*     POSTPBSW=POSTPBSW&SWOFF;      /* RESET POSTED PAB SW   @ZM30835*/
         N     POSTPBSW,@CF01054                                   0275
*     IF MPSSRBO=ON×MPSCRAO=ON      /* SMS REQUEST OUTSTANDING       */
*       THEN                                                       0276
         TM    MPSSRBO(MPSTREG),B'11000000'                        0276
         BZ    @RF00276                                            0276
*SMSPAB:                                                           0277
*       DO;                         /*                               */
SMSPAB   DS    0H                                                  0278
*/* FROM HERE TO THE STATEMENT-END SMSPAB- IS THE SMSPAB ROUTINE.    */
*/* THE PABS ON THE MPST READY QUEUE ARE INSPECTED TO SEE IF A STOR. */
*/* MGT. PAB OR POSTED PAB CAN BE FOUND.IF NEITHER FOUND, THE MPST   */
*/* RDY Q IS UNGATED AND RETURN IS MADE TO THE SYSTEM.  IF THE SMS   */
*/* PAB IS FOUND, IT IS DEQUEUED FROM THE MPST READY QUEUE. THE SRB  */
*/* OR CRA STORAGE RETURNED IS PUT ON THE CRA OR SRB AVAILABLE QUE   */
*/* OF THE PST. IF A POSTED PAB IS FOUND, SEARCHING STOPS AND THE    */
*/* POSTED PAB WILL BE PASSED TO SUBSEQUENT ROUTINES FOR DISPATCH.   */
*/* IF NOT IRB TYPE, SRB55 WILL BE SCHEDULED TO REDRIVE THIS MODULE. */
*                                                                  0278
*                                   /*                               */
*         RFY                                                      0278
*          (SMPABREG,                                              0278
*           NWODDREG,                                              0278
*           DYREG,                                                 0278
*           OLODDREG) RSTD;                                        0278
*         SVPTRREG=MPSRQUE;         /* FIRST PAB ON READY QUE        */
         L     SVPTRREG,MPSRQUE(,MPSTREG)                          0279
*         CURPBREG=SVPTRREG&ZCLHIBYT;/* FIRST RDY Q PAB WITH HIGH  0280
*                                      ORDER BYTE CLEAR              */
         LR    CURPBREG,SVPTRREG                                   0280
         N     CURPBREG,@CF02683                                   0280
*         BKPABREG=0;               /* IND. NO PREV. PAB             */
         SLR   @02,@02                                             0281
         LR    BKPABREG,@02                                        0281
*         DYREG=ADDR(MPSSMPAB);     /* SMS DYN PAB WITH HDR          */
         LA    DYREG,MPSSMPAB(,MPSTREG)                            0282
*         SMPABREG=ADDR(DYPPAB);    /* SMS PAB WITHOUT HDR           */
         LA    SMPABREG,DYPPAB(,DYREG)                             0283
*         SRDSWREG=0;               /* SEARCH MPST RDY QUE FOR SMS 0284
*                                      PAB-NOT DONE                  */
         LR    SRDSWREG,@02                                        0284
*SMSPAB1:                                                          0285
*         DO WHILE(SRDSWREG=0);     /* SEARCH LOOP CONTROL           */
SMSPAB1  B     @DE00285                                            0285
@DL00285 DS    0H                                                  0286
*           IF CURPBREG>0           /* MORE PABS ON RDY QUE          */
*             THEN                                                 0286
         LTR   CURPBREG,CURPBREG                                   0286
         BNP   @RF00286                                            0286
*SMSPAB2:                                                          0287
*             DO;                                                  0287
SMSPAB2  DS    0H                                                  0288
*               IF CURPBREG=SMPABREG×PABRPHA^=0/* PAB EQUAL SMS PAB
*                                      POSTED PAB?           @ZM30835*/
*                 THEN                                             0288
         CR    CURPBREG,SMPABREG                                   0288
         BE    @RT00288                                            0288
         L     @02,PABRPHA-1(,CURPBREG)                            0288
         LA    @02,0(,@02)                                         0288
         LTR   @02,@02                                             0288
         BZ    @RF00288                                            0288
@RT00288 DS    0H                                                  0289
*SMSPAB3:                                                          0289
*                 DO;                                              0289
SMSPAB3  DS    0H                                                  0290
*                   IF BKPABREG=0   /* FIRST PAB WAS SMS PAB OR    0290
*                                      POSTED PAB            @ZM30835*/
*                     THEN          /* SO NEED CS TO TAKE OFF        */
         LTR   BKPABREG,BKPABREG                                   0290
         BNZ   @RF00290                                            0290
*SMSPAB4:                                                          0291
*                     DO;           /* MPST READY QUEUE              */
SMSPAB4  DS    0H                                                  0292
*                       NEWREG=PABCHNGP×(SVPTRREG&ZCLWBYTS);/*     0292
*                                      FORWARD PAB PTR WITH MPST RDY
*                                      QUE FLAG BITS FOR CS          */
         LR    NEWREG,SVPTRREG                                     0292
         N     NEWREG,@CF01103                                     0292
         L     @02,PABCHNGP-1(,CURPBREG)                           0292
         LA    @02,0(,@02)                                         0292
         OR    NEWREG,@02                                          0292
*                       CS(SVPTRREG,NEWREG,MPSRQUE);               0293
         CS    SVPTRREG,@06,MPSRQUE(MPSTREG)                       0293
*                       BC(NE,SMSPABA);/* CS FAILED-GO AGAIN         */
         BC    7,SMSPABA                                           0294
*                       SRDSWREG=1; /* CS EQUAL-SEARCH DONE          */
         LA    SRDSWREG,1                                          0295
*                       GOTO SMSPABB;                              0296
         B     SMSPABB                                             0296
*SMSPABA:                                                          0297
*                       CURPBREG=SVPTRREG&ZCLHIBYT;/* RELOAD WITH  0297
*                                      WHAT IS                       */
SMSPABA  LR    CURPBREG,SVPTRREG                                   0297
         N     CURPBREG,@CF02683                                   0297
*SMSPABB:                           /* NOW ON READY QUEUE            */
*                     END SMSPAB4;                                 0298
*                   ELSE            /* NOT FIRST PAB ON MPST         */
*SMSPAB5:                                                          0299
*                     DO;           /* READY QUEUE-NO CS TODQ        */
         B     @RC00290                                            0299
@RF00290 DS    0H                                                  0299
SMSPAB5  DS    0H                                                  0300
*                       BKPABREG->PABCHNGP=PABCHNGP;/* CHAIN PREVIOUS
*                                      PAB TO PAB NEXT AFTER SMS PAB */
         MVC   PABCHNGP(3,BKPABREG),PABCHNGP(CURPBREG)             0300
*                       SRDSWREG=1; /* SEARCH MPST RDY Q FOR SMS   0301
*                                      PAB-SET IS DONE SW            */
         LA    SRDSWREG,1                                          0301
*                     END SMSPAB5;                                 0302
*                   IF SRDSWREG=1   /* SEARCH DONE                   */
*                     THEN                                         0303
@RC00290 C     SRDSWREG,@CF00061                                   0303
         BNE   @RF00303                                            0303
*SMSPAB6:                                                          0304
*                     DO;                                          0304
SMSPAB6  DS    0H                                                  0305
*                       DO;         /* LISATCVT                    0305
*                                      CVTBASE(PAGEABLE,(VCVTREG))   */
*                         VCVTREG=ATCLCPTR;/* SET UP ATCVT POINTER   */
         L     VCVTREG,ATCLCPTR                                    0306
*                       END;        /* LISATCVT              @Z40GKF6*/
*                       IF CURPBREG=SMPABREG/* IS IT SMS PAB @ZM30835*/
*                         THEN      /* YES                   @ZM30835*/
         CR    CURPBREG,SMPABREG                                   0308
         BNE   @RF00308                                            0308
*                         DO;       /*                       @ZM30835*/
*                           RPHREG=MPSSMRPH;/* RPH USED TO REQ. STOR.
*                                      FOR SRB OR CRA                */
         L     RPHREG,MPSSMRPH(,MPSTREG)                           0310
*                           NWEVNREG=RPHSRPRM;/* PTR TO STOR BLK   0311
*                                      RETRND                        */
         L     NWEVNREG,RPHSRPRM(,RPHREG)                          0311
*                           SVPTRREG=MPSFLGA;/* FOR CS-CLEAR REQ. BIT*/
         L     SVPTRREG,MPSFLGA(,MPSTREG)                          0312
*                           IF MPSCRAO=ON/* STORAGE FOR CRA          */
*                             THEN                                 0313
         TM    MPSCRAO(MPSTREG),B'01000000'                        0313
         BNO   @RF00313                                            0313
*SMSPAB7:                                                          0314
*                             DO;                                  0314
SMSPAB7  DS    0H                                                  0315
*SMSPABC:                                                          0315
*                               SFLREG=SVPTRREG&'BFFFFFFF'X;/* CLEAR
*                                      CRA REQ. BIT                  */
SMSPABC  LR    SFLREG,SVPTRREG                                     0315
         N     SFLREG,@CF01060                                     0315
*                               CS(SVPTRREG,SFLREG,MPSFLGA);/* CS  0316
*                                      EQUAL-CRA BIT OFF             */
         CS    SVPTRREG,@14,MPSFLGA(MPSTREG)                       0316
*                               BC(NE,SMSPABC);/* FAIL-RELOAD AND  0317
*                                      AGAIN                         */
         BC    7,SMSPABC                                           0317
*                               OLDEVREG=ATCCRAQ;/* QUE OF AVAIL   0318
*                                      CRA'S ATCVT           @Z40GKF6*/
         L     OLDEVREG,ATCCRAQ(,VCVTREG)                          0318
*                               OLODDREG=ATCCRACN;/* CNT OF AVAIL  0319
*                                      CRA'S ATCVT           @Z40GKF6*/
         L     OLODDREG,ATCCRACN(,VCVTREG)                         0319
*SMSPABD:                                                          0320
*                               NWEVNREG->CRACHAIN=OLDEVREG;/*     0320
*                                      FORWARD PTR-NEW CRA           */
SMSPABD  ST    OLDEVREG,CRACHAIN(,NWEVNREG)                        0320
*                               NWODDREG=OLODDREG+'10001'X;/*      0321
*                                      INCREMENT CRA COUNT           */
         LR    NWODDREG,OLODDREG                                   0321
         AL    NWODDREG,@CF02728                                   0321
*                               CDS(OLDEVREG,NWEVNREG,ATCCRA);/*   0322
*                                                            @Z40GKF6*/
         CDS   OLDEVREG,NWEVNREG,ATCCRA(VCVTREG)                   0322
*                               BC(NE,SMSPABD);/* FAIL-RELOAD AND  0323
*                                      AGAIN                         */
         BC    7,SMSPABD                                           0323
*                             END SMSPAB7;                         0324
*                                                                  0324
*/*STORAGE NOT FOR CRA-SO MUST BE SRB                                */
*                                                                  0325
*                           ELSE                                   0325
*SMSPAB8:                                                          0325
*                             DO;                                  0325
         B     @RC00313                                            0325
@RF00313 DS    0H                                                  0325
SMSPAB8  DS    0H                                                  0326
*SMSPABE:                                                          0326
*                               SFLREG=SVPTRREG&'7FFFFFFF'X;/* CLEAR
*                                      SRB REQUEST BIT               */
SMSPABE  LR    SFLREG,SVPTRREG                                     0326
         N     SFLREG,@CF01054                                     0326
*                               CS(SVPTRREG,SFLREG,MPSFLGA);/* CS  0327
*                                      EQUAL-SRB BIT OFF             */
         CS    SVPTRREG,@14,MPSFLGA(MPSTREG)                       0327
*                               BC(NE,SMSPABE);/* FAIL-RELOAD AND  0328
*                                      AGAIN                         */
         BC    7,SMSPABE                                           0328
*                               OLDEVREG=ATCSRBQ;/* QUE OF AVAIL SRB */
         L     OLDEVREG,ATCSRBQ(,VCVTREG)                          0329
*                               OLODDREG=ATCSRBCN;/* COUNT OF AVAIL
*                                      SRB                           */
         L     OLODDREG,ATCSRBCN(,VCVTREG)                         0330
*SMSPABF:                                                          0331
*                               NWEVNREG->SRBFLNK=OLDEVREG;/* FORWARD
*                                      PTR-NEW SRB                   */
SMSPABF  ST    OLDEVREG,SRBFLNK(,NWEVNREG)                         0331
*                               NWODDREG=OLODDREG+'10001'X;/*      0332
*                                      INCREMENT SRB COUNT           */
         LR    NWODDREG,OLODDREG                                   0332
         AL    NWODDREG,@CF02728                                   0332
*                               CDS(OLDEVREG,NWEVNREG,ATCSRB);/*   0333
*                                      EQ-SRB QUE+CT. UPDATED        */
         CDS   OLDEVREG,NWEVNREG,ATCSRB(VCVTREG)                   0333
*                               BC(NE,SMSPABF);/* FAIL-RELOAD AND  0334
*                                      AGAIN                         */
         BC    7,SMSPABF                                           0334
*                             END SMSPAB8;                         0335
*                         END;      /*                       @ZM30835*/
*                       ELSE        /*                       @ZM30835*/
*                         DO;       /*                       @ZM30835*/
         B     @RC00308                                            0337
@RF00308 DS    0H                                                  0338
*                           POSTPBSW=POSTPBSW×SWON;/* SET DISPATCH 0338
*                                      POSTED PAB SW                 */
*                                                                  0338
         O     POSTPBSW,@CF01056                                   0338
*                           /*****************************************/
*                           /*                                       */
*                           /*                               @ZM30835*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  0339
*                           CURPAREG=CURPBREG;/* GET PAB PTR IN RIGHT
*                                      REG FOR                       */
*                                                                  0339
         LR    CURPAREG,CURPBREG                                   0339
*                           /*****************************************/
*                           /*                                       */
*                           /* DISPATCHING                   @ZM30835*/
*                           /*                                       */
*                           /*****************************************/
*                                                                  0340
*                           GO TO TESTUSER;/* GO DISPATCH PAB      0340
*                                                            @ZM30835*/
         B     TESTUSER                                            0340
*                         END;      /*                       @ZM30835*/
*                     END SMSPAB6;                                 0342
*                   ELSE                                           0343
*                     ;             /* TO MATCH SMSPAB6 THEN         */
@RF00303 DS    0H                                                  0344
*                 END SMSPAB3;                                     0344
*               ELSE                                               0345
*SMSPAB9:                                                          0345
*                 DO;               /* NOT SMS PAB OR POSTED PAB-GET
*                                      NEXT                  @ZM30835*/
         B     @RC00288                                            0345
@RF00288 DS    0H                                                  0345
SMSPAB9  DS    0H                                                  0346
*                   BKPABREG=CURPBREG;/* REMEMBER THIS PTR           */
         LR    BKPABREG,CURPBREG                                   0346
*                   CURPBREG=PABCHNGP;/* MAKE NEXT CURRENT           */
         L     @02,PABCHNGP-1(,CURPBREG)                           0347
         LA    @02,0(,@02)                                         0347
         LR    CURPBREG,@02                                        0347
*                 END SMSPAB9;                                     0348
*             END SMSPAB2;                                         0349
*           ELSE                    /* NO MORE PABS ON RDY Q         */
*SMSPAB10:                                                         0350
*             DO;                   /* SMS PAB NOT FOUND             */
         B     @RC00286                                            0350
@RF00286 DS    0H                                                  0350
SMSPAB10 DS    0H                                                  0351
*/*TURN MPST READY QUEUE GATE BIT OFF USING COMPARE AND SWAP INST.   */
*/*THIS WILL CAUSE ISTAPC55 TO BE RESCHEDULED LATER. AT THAT TIME THE*/
*/*MPST RDY QUEUE WILL AGAIN BE CHECKED FOR THE SMS PAB.             */
*                                                                  0351
*                                   /*                               */
*               VCVTREG=ATCLCPTR;   /* RESTORE ATCVT ADDR    @G35RKF6*/
         L     VCVTREG,ATCLCPTR                                    0351
*               IF ATCABEN=OFF      /* IF VTAM NOT GONE UNGATE MPST
*                                                            @G35RKF6*/
*                 THEN              /* HERE VTAM NOT ABENDING      0352
*                                                            @G35RKF6*/
         TM    ATCABEN(VCVTREG),B'10000000'                        0352
         BNZ   @RF00352                                            0352
*                 DO;               /* UNGATE MPST READY QUEUE     0353
*                                                            @G35RKF6*/
*                   NEWREG=SVPTRREG&MPSGATE0;/* CLEAR GATE BIT       */
         LR    NEWREG,SVPTRREG                                     0354
         N     NEWREG,@CF01054                                     0354
*                   CS(SVPTRREG,NEWREG,MPSRQUE);/* CS EQ-RDY Q     0355
*                                      UNGATED                       */
         CS    SVPTRREG,@06,MPSRQUE(MPSTREG)                       0355
*                   BC(NE,SMSPABG); /* FAIL-RDY Q CHANGED START    0356
*                                      SEARCH FROM Q HD              */
         BC    7,SMSPABG                                           0356
*                 END;              /* END VTAM NOT ABENDING @G35RKF6*/
*               ELSE                                               0358
*                 ;                 /* IF ABENDING JUST GET OUT    0358
*                                                            @G35RKF6*/
@RF00352 DS    0H                                                  0359
*               REG14=MPSSYSRT;     /* RETURN TO SYSTEM              */
         L     REG14,MPSSYSRT(,MPSTREG)                            0359
*               EXSWREG=1;          /* OUT OF EXIT LOOP CTRL         */
         LA    @02,1                                               0360
         LR    EXSWREG,@02                                         0360
*               SRDSWREG=1;         /* SEARCH MPST RDY Q FOR SMS PAB
*                                      NOW DONE IND.                 */
         LR    SRDSWREG,@02                                        0361
*               RFY                                                0362
*                (WRKA) RSTD;                                      0362
*               GENERATE REFS(FRRPREG,PARREG,WRKA,WRKB,PSACSTK,PSA,
*                   FRRSCURR,FRRS,FRRSLAST,FRRSELEN,FRRSFRRA,FRRSENTR,
*                   FRRSPARM,FRRSEMP);                             0363
           SETFRR D,WRKREGS=(WRKA,WRKB)
*               RFY                                                0364
*                (WRKA) UNRSTD;                                    0364
*               GOTO SMSPABH;                                      0365
         B     SMSPABH                                             0365
*SMSPABG:                                                          0366
*               CURPBREG=SVPTRREG&ZCLHIBYT;/* START SEARCH ALL OVER
*                                      WITH FIRST PAB+CL FLGS        */
SMSPABG  LR    CURPBREG,SVPTRREG                                   0366
         N     CURPBREG,@CF02683                                   0366
*               BKPABREG=0;         /* TO SHOW NO PREV. PAB          */
         SLR   BKPABREG,BKPABREG                                   0367
*SMSPABH:                                                          0368
*             END SMSPAB10;                                        0368
SMSPABH  DS    0H                                                  0369
*         END;                      /* DO WHILE(SRDSWREG=0)          */
@RC00286 DS    0H                                                  0369
@DE00285 LTR   SRDSWREG,SRDSWREG                                   0369
         BZ    @DL00285                                            0369
*         RFY                                                      0370
*          (SMPABREG,                                              0370
*           NWODDREG,                                              0370
*           DYREG,                                                 0370
*           OLODDREG) UNRSTD;                                      0370
*       END SMSPAB;                                                0371
*     ELSE                          /* NO SMS REQ. OUTSTANDIN        */
*TESTEX1:                                                          0372
*       DO;                                                        0372
         B     @RC00276                                            0372
@RF00276 DS    0H                                                  0372
TESTEX1  DS    0H                                                  0373
*         IF EXSWREG=1              /* EXIT SWITCH SET               */
*           THEN                                                   0373
         C     EXSWREG,@CF00061                                    0373
         BE    @RT00373                                            0373
*           ;                       /* YES-NOTHING TO DO-DROP TO END
*                                      OF OVERALL LOOP               */
*         ELSE                                                     0375
*TESTEX2:                                                          0375
*           DO;                     /*                               */
TESTEX2  DS    0H                                                  0376
*/*CHECK THE MPST READY QUE TO SEE IF EMPTY-IF SO UNGATE THE READY Q */
*                                                                  0376
*                                   /*                               */
*             CURPAREG=MPSRQUE;     /* PAB ON MPST READY QUE         */
         L     CURPAREG,MPSRQUE(,MPSTREG)                          0376
*             RFY                                                  0377
*               ISTPAB BASED(CURPAREG);/* CHG PAB ADDRESSABILITY     */
*             RFY                                                  0378
*              (PABINREG) RSTD;                                    0378
*             PABINREG=CURPAREG&ZCLHIBYT;/* CLEAR IND. HIORDER BYT   */
         LR    PABINREG,CURPAREG                                   0379
         N     PABINREG,@CF02683                                   0379
*             QCKSWREG=0;           /* CHK FOR EMPTY NOT DONE        */
         SLR   QCKSWREG,QCKSWREG                                   0380
*CKDONE:                                                           0381
*             DO WHILE(QCKSWREG=0); /* LOOP CTRL-CHK FOR EMPT        */
CKDONE   B     @DE00381                                            0381
@DL00381 DS    0H                                                  0382
*               IF PABINREG=0       /* MPST RDY QUE EMPTY            */
*                 THEN                                             0382
         LTR   PABINREG,PABINREG                                   0382
         BNZ   @RF00382                                            0382
*CKDONE1:                                                          0383
*                 DO;                                              0383
CKDONE1  DS    0H                                                  0384
*                   VCVTREG=ATCLCPTR;/* RESTORE ATCVT POINTER      0384
*                                                            @G35RKF6*/
         L     VCVTREG,ATCLCPTR                                    0384
*                   IF ATCABEN=OFF  /* IF VTAM GONE DONT UNGATE    0385
*                                                            @G35RKF6*/
*                     THEN          /* NOT ABENDING HERE     @G35RKF6*/
         TM    ATCABEN(VCVTREG),B'10000000'                        0385
         BNZ   @RF00385                                            0385
*                     DO;           /* SO UNGATE MPST READY QUE    0386
*                                                            @G35RKF6*/
*                       NEWREG=CURPAREG&MPSGATE0;/* GATE BIT OFF     */
         LR    NEWREG,CURPAREG                                     0387
         N     NEWREG,@CF01054                                     0387
*                       CS(CURPAREG,NEWREG,MPSRQUE);/* EQ-RDY Q    0388
*                                      UNGATED                       */
         CS    CURPAREG,@06,MPSRQUE(MPSTREG)                       0388
*                       BC(NE,CKDONEA);/* FAIL-RELOAD PABINREG AND 0389
*                                      TRY AGAIN                     */
         BC    7,CKDONEA                                           0389
*SETQDONE:                                                         0390
*                       QCKSWREG=1; /* OUT OF DOWHILE                */
SETQDONE LA    QCKSWREG,1                                          0390
*                       GOTO CKDONEB;                              0391
         B     CKDONEB                                             0391
*CKDONEA:                                                          0392
*                       PABINREG=CURPAREG&ZCLHIBYT;/* UPDATE PAB   0392
*                                      INDICATOR                     */
CKDONEA  LR    PABINREG,CURPAREG                                   0392
         N     PABINREG,@CF02683                                   0392
*CKDONEB:                                                          0393
*                     END;          /* END VTAM NOT ABENDING @G35RKF6*/
*                   ELSE                                           0394
*                     GOTO TESTPP1; /* GO TO SETFRR CODE     @G35RKF6*/
*                 END CKDONE1;                                     0395
*               ELSE                /* MPST READY Q NOT EMPTY        */
*QDONE:                                                            0396
*                 QCKSWREG=1;       /* OUT OF DOWHILE LOOP           */
         B     @RC00382                                            0396
@RF00382 DS    0H                                                  0396
QDONE    LA    QCKSWREG,1                                          0396
*             END;                  /* DO WHILE(QCKSWREG=0)          */
@RC00382 DS    0H                                                  0397
@DE00381 LTR   QCKSWREG,QCKSWREG                                   0397
         BZ    @DL00381                                            0397
*                                                                  0398
*/*IF NO PABS ON READY QUEUE OF MPST-RETURN TO SYSTEM. OTHERWISE,    */
*/*DEQUE THE LAST PAB ON THE MPST READY QUEUE. CS MUST BE USED IF    */
*/*ONLY ONE PAB ON QUEUE, AS ANOTHER COULD BE PUT ON WHILE THE CURR. */
*/*PAB IS BEING DEQUED.                                              */
*                                                                  0398
*                                   /*                               */
*TESTPPTR:                                                         0398
*             IF PABINREG=0         /* MPST RDY QUE EMPTY            */
*               THEN                /* YES-AND RDY QUE IS            */
TESTPPTR LTR   PABINREG,PABINREG                                   0398
         BNZ   @RF00398                                            0398
*TESTPP1:                                                          0399
*               DO;                 /* UNGATED-NO MORE TO DO         */
TESTPP1  DS    0H                                                  0400
*                 RFY                                              0400
*                  (PABINREG) UNRSTD;                              0400
*                 EXSWREG=1;        /* OVERALL LOOP EXIT-OUT         */
         LA    EXSWREG,1                                           0401
*                 REG14=MPSSYSRT;   /* SET RETURN TO SYS PTR         */
         L     REG14,MPSSYSRT(,MPSTREG)                            0402
*                 RFY                                              0403
*                  (WRKA) RSTD;                                    0403
*                 GENERATE REFS(FRRPREG,PARREG,WRKA,WRKB,PSACSTK,PSA,
*                     FRRSCURR,FRRS,FRRSLAST,FRRSELEN,FRRSFRRA,FRRSENTR
*                     ,FRRSPARM,FRRSEMP);                          0404
           SETFRR D,WRKREGS=(WRKA,WRKB)
*                 RFY                                              0405
*                  (WRKA) UNRSTD;                                  0405
*               END TESTPP1;                                       0406
*             ELSE                                                 0407
*TESTPP2:                                                          0407
*               DO;                                                0407
         B     @RC00398                                            0407
@RF00398 DS    0H                                                  0407
TESTPP2  DS    0H                                                  0408
*                 BKPABREG=0;       /* INDICATE NO PREV. PAB         */
         SLR   @07,@07                                             0408
         LR    BKPABREG,@07                                        0408
*                 DQDSWREG=0;       /* INDICATE DEQUE NOTDONE        */
         LR    DQDSWREG,@07                                        0409
*                 DO WHILE(DQDSWREG=0);/* DEQUE LOOP CONTROL         */
         B     @DE00410                                            0410
@DL00410 DS    0H                                                  0411
*                   IF PABCHNGP^=0  /* MORE PABS ON QUEUE            */
*                     THEN          /* YES-STEP TO NEXT PAB          */
         L     @07,PABCHNGP-1(,CURPAREG)                           0411
         LA    @07,0(,@07)                                         0411
         LTR   @07,@07                                             0411
         BZ    @RF00411                                            0411
*TESTPP3:                                                          0412
*                     DO;                                          0412
TESTPP3  DS    0H                                                  0413
*                       BKPABREG=CURPAREG;/* CURREN BECOMES PREV.    */
         LR    BKPABREG,CURPAREG                                   0413
*                       CURPAREG=PABCHNGP;/* NEXT BECOMES CURRENT    */
         L     @07,PABCHNGP-1(,CURPAREG)                           0414
         LA    @07,0(,@07)                                         0414
         LR    CURPAREG,@07                                        0414
*                     END TESTPP3;                                 0415
*                   ELSE            /* NO MORE PABS ON MPST          */
*TESTPP4:                                                          0416
*                     DO;           /* READY QUEUE-DEQUE THIS PAB  0416
*                                      FROM MPST READY Q             */
         B     @RC00411                                            0416
@RF00411 DS    0H                                                  0416
TESTPP4  DS    0H                                                  0417
*                       IF BKPABREG=0/* ONLY ONE PAB ON QUEUE        */
*                         THEN      /* THEN USE CS TO TAKE           */
         LTR   BKPABREG,BKPABREG                                   0417
         BNZ   @RF00417                                            0417
*TESTPP5:                                                          0418
*                         DO;       /* ONLY PAB OFF RDY QUEUE        */
TESTPP5  DS    0H                                                  0419
*                           NEWREG=CURPAREG&ZCLWBYTS;/* ZERO QUE   0419
*                                      ADDRESS BYTES WHILE SAVING  0419
*                                      FLAGS                         */
         LR    NEWREG,CURPAREG                                     0419
         N     NEWREG,@CF01103                                     0419
*                           CS(CURPAREG,NEWREG,MPSRQUE);/*         0420
*                                      EQ-MPSRQUE=PREVIOUS FLAGS+ZERO
*                                      ADDRESS PTR                   */
         CS    CURPAREG,@06,MPSRQUE(MPSTREG)                       0420
*                           BC(NE,DEQUE);/* FAIL-GO AROUND AGAIN     */
         BC    7,DEQUE                                             0421
*                           DQDSWREG=1;/* OUT OF DEQUE LOOP          */
         LA    DQDSWREG,1                                          0422
*                         END TESTPP5;                             0423
*                       ELSE        /* MORE THAN ONE PAB ON Q        */
*TESTPP6:                                                          0424
*                         DO;                                      0424
         B     @RC00417                                            0424
@RF00417 DS    0H                                                  0424
TESTPP6  DS    0H                                                  0425
*                           BKPABREG->PABCHNGP=0;/* ZERO PREV.PAB  0425
*                                      CHAINPTR                      */
         SLR   @07,@07                                             0425
         STCM  @07,7,PABCHNGP(BKPABREG)                            0425
*                           DQDSWREG=1;/* OUT OF DEQUE LOOP          */
         LA    DQDSWREG,1                                          0426
*                         END TESTPP6;                             0427
*                     END TESTPP4;                                 0428
@RC00417 DS    0H                                                  0429
*DEQUE:                                                            0429
*                 END;              /* FOR DOWHILE(DQDSWREG)         */
@RC00411 DS    0H                                                  0429
DEQUE    DS    0H                                                  0429
@DE00410 LTR   DQDSWREG,DQDSWREG                                   0429
         BZ    @DL00410                                            0429
*                                                                  0430
*/*CHECK THE DEQUED PAB TO SEE IF IT IS A USER EXIT OR SYS SERV. PAB.*/
*/*IF SO, SET UP INTERFACE REGS AND CALL ISTAPC32 TO PUT THE  USER   */
*/*EXIT OR SYS SERVICE PAB ON THE PST READY QUEUE AND SCHEDULE AN IRB*/
*/*IF NECESSARY. IF PAB IS NEITHER, THEN CONTINUE PROCESSING TO      */
*/*HANDLE THE I/O PAB. IF THE DEQUEUED PAB BELONGS TO AN ABENDING    */
*/*TASK IT WILL NOT BE DISPATCHED, AND ITS CRA WILL BE RELEASED.     */
*/*                                                                  */
*/*                                                                  */
*                                                                  0430
*TESTUSER:                          /*                               */
*                 DO;               /* LISATCVT                    0430
*                                      CVTBASE(PAGEABLE,(VCVTREG))   */
TESTUSER DS    0H                                                  0431
*                   VCVTREG=ATCLCPTR;/* SET UP ATCVT POINTER         */
         L     VCVTREG,ATCLCPTR                                    0431
*                 END;              /* LISATCVT VTAM CVT PTR         */
*                                                                  0432
*                 /***************************************************/
*                 /*                                                 */
*                 /* DETERMINE IF PAB IS FOR SYS SERVICE OR USER     */
*                 /* EXITS                                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0433
*                 WORD1=CURPAREG;                                  0433
         ST    CURPAREG,WORD1(,PARREG)                             0433
*                 IF(CURPAREG-PABOFFST)->DYPTSKID->PSTABINP=ON     0434
*                                                                  0434
*                 /***************************************************/
*                 /*                                                 */
*                 /* IS PAB TASK ABENDING                    @Z40GKF6*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0434
*                   THEN            /* YES                   @Z40GKF6*/
         LR    @07,CURPAREG                                        0434
         SLR   @05,@05                                             0434
         IC    @05,PABOFFST(,CURPAREG)                             0434
         SLR   @07,@05                                             0434
         L     @07,DYPTSKID(,@07)                                  0434
         TM    PSTABINP(@07),B'00000001'                           0434
         BNO   @RF00434                                            0434
*                   IF PABRPHA^=0   /* DOES PAB HAVE A CRA   @Z40GKF6*/
*                     THEN          /* YES                   @Z40GKF6*/
         L     @07,PABRPHA-1(,CURPAREG)                            0435
         LA    @07,0(,@07)                                         0435
         LTR   @07,@07                                             0435
         BZ    @RF00435                                            0435
*                     PABRPHA->RPHRLCRA=ON;/* TURN ON REL CRA FLAG 0436
*                                                            @Z40GKF6*/
         OI    RPHRLCRA(@07),B'00000100'                           0436
*                   ELSE                                           0437
*                     ;             /* NO CRA - DO NOTHING   @Z40GKF6*/
@RF00435 DS    0H                                                  0438
*                 ELSE                                             0438
*                   DO;             /* PROCESSING FOR NON ABENDING 0438
*                                      PAB                   @Z40GKF6*/
         B     @RC00434                                            0438
@RF00434 DS    0H                                                  0439
*                     PABMPSTA=(CURPAREG-PABOFFST)->DYPTSKID->PSTMPSTP;
         LR    @05,CURPAREG                                        0439
         SLR   @02,@02                                             0439
         IC    @02,PABOFFST(,CURPAREG)                             0439
         SLR   @05,@02                                             0439
         L     @05,DYPTSKID(,@05)                                  0439
         L     PABMPSTA,PSTMPSTP(,@05)                             0439
*                                   /*                       @ZM32636*/
*                     IF PABSSN=ON×PABAPYP=ON×PABMPSTA^=MPSTREG/*  0440
*                                                            @ZM32636*/
*                       THEN        /* YES-GO TO ISTAPC32            */
         TM    PABSSN(CURPAREG),B'10001000'                        0440
         BNZ   @RT00440                                            0440
         CR    PABMPSTA,MPSTREG                                    0440
         BE    @RF00440                                            0440
@RT00440 DS    0H                                                  0441
*TESTUS3:                                                          0441
*                       DO;                                        0441
TESTUS3  DS    0H                                                  0442
*                         RFY                                      0442
*                          (ZEROREG,                               0442
*                           REG5) RSTD;                            0442
*                         ZEROREG=0;/* REG INT. FOR ISTAPC32         */
         SLR   @07,@07                                             0443
         LR    ZEROREG,@07                                         0443
*                         REG5=CURPAREG;/* REG INT. FOR ISTAPC32     */
         LR    REG5,CURPAREG                                       0444
*                         REG15=ATCAP32;                           0445
         L     REG15,ATCAP32(,VCVTREG)                             0445
*                         WORD1=0;                                 0446
         ST    @07,WORD1(,PARREG)                                  0446
*                         REG9=PARREG;/* SAVE R3 ACROSS APC32 ITF1396
*                                                            @Z30APGA*/
         LR    REG9,PARREG                                         0447
*                         CALL APC32;/* DEQUED PAB TO PST RDYQ       */
         BALR  @14,@15                                             0448
*                         PARREG=REG9;/* RESTORE R3 - ITF1396      0449
*                                                            @Z30APGA*/
         LR    PARREG,REG9                                         0449
*                         RFY                                      0450
*                          (ZEROREG,                               0450
*                           REG5) UNRSTD;                          0450
*                       END TESTUS3;                               0451
*                                                                  0452
*/* PAB DEQUED NOT USER EXIT PAB OR SVS SERVICE PAB-MUST BE I/O PAB. */
*/*CHECK TO SEE IF DEQUED PAB HAS A CRA. IF NOT, EITHER GET ONE OR   */
*/*PUT THE PAB BACK ON MPST READY QUEUE AS OLDEST PAB, INDICATE SMS  */
*/*IF CRA IS PRESENT OR AFTER OBTAINED, CHECK TO SEE IF DEQUED PAB   */
*/*IS ONLY READY PAB,IE-MPST READY QUE EMPTY. IF EMPTY, SET UP RECOV.*/
*/*ENVIR. AND DISPATCH PAB DIRECTLY VIA ISTAPC57.                    */
*/*IF DEQUED PAB NOT ONLY READY PAB,IE-MPST READY QUEUE NOT EMPTY,   */
*/*THEN SCHEDULE PAB VIA ISTAPC56 UNDER SRB, IF AVAILABLE. IF SRB NOT*/
*/*AVAILABLE, THEN PLACE DEQUED PAB BACK ON MPST READY QUEUE AS      */
*/*OLDEST PAB, INDICATE SMS REQUEST OUTSTANDING, AND RETURN TO EXIT  */
*/*LOOP TO CHECK SMS REQUESTS. IF POSTED PAB AND SMS REQUEST         */
*/*OUTSTANDING, SCHEDULE SRB55 TO REDRIVE THIS MODULE SINCE PAB      */
*/*WILL BE DISPATCHED VIA ISTAPC57.                      @ZM30835    */
*                                                                  0452
*                                   /*                               */
*                     ELSE                                         0452
*TESTUS4:                                                          0452
*                       DO;                                        0452
         B     @RC00440                                            0452
@RF00440 DS    0H                                                  0452
TESTUS4  DS    0H                                                  0453
*                         IF PABRPHA^=0/* DOES PAB HAVE A CRA        */
*                           THEN    /* YES                           */
         L     @07,PABRPHA-1(,CURPAREG)                            0453
         LA    @07,0(,@07)                                         0453
         LTR   @07,@07                                             0453
         BZ    @RF00453                                            0453
*                           DO;     /*                       @ZM30835*/
*                             IF POSTPBSW<0/* IS DISPATCH POSTED PAB
*                                      SW ON                 @ZM38035*/
*                               THEN/* YES-SCHED SRB55 TO REDRIVE  0455
*                                      THIS MODULE           @ZM30835*/
         LTR   POSTPBSW,POSTPBSW                                   0455
         BNM   @RF00455                                            0455
*                               DO; /*                       @ZM30835*/
*                                 REG1=MPSSRB55;/* SRB TO SCHED SRB55
*                                                            @ZM30835*/
         L     REG1,MPSSRB55(,MPSTREG)                             0457
*                                 GENERATE REFS(REG1,CVTLSMQ,SRBFLNK,
*                                     SRBSECT,CVTPTR);             0458
                   SCHEDULE SRB=(REG1),SCOPE=LOCAL
*                               END;/*                       @ZM30835*/
*                             ELSE                                 0460
*                               ;   /* NO-HANDLE NORMALLY    @ZM30835*/
@RF00455 DS    0H                                                  0461
*                           END;    /*                       @ZM30835*/
*                                                                  0462
*/* A CRA IS OBTAINED FROM THE ATCVT IF ONE IS AVAILABLE.IF NOT, REQ-*/
*/*STORE IS USED TO GET ONE. IF NO STORAGE AVAILABLE, THE MPST IND.  */
*/*IS SET SHOWING AN OUTSTANDING SMS REQ. AND THE DEQUED PAB IS PUT  */
*/*BACK ON THE END OF THE MPST READY QUEUE VIA THE ENQUE SUBROUTINE. */
*/*IF A CRA IS OBTAINED, THE APPROPRIATE SLOTS IN THE CRA, RPH, AND  */
*/*PSS CRR ARE INITIALIZED.                                          */
*                                                                  0462
*                                   /*                               */
*                         ELSE      /* NO CRA-TRY TO OBTAIN 1        */
*GETCRA:                                                           0462
*                           DO;                                    0462
         B     @RC00453                                            0462
@RF00453 DS    0H                                                  0462
GETCRA   DS    0H                                                  0463
*                             RFY                                  0463
*                              (CRAREG,                            0463
*                               OLDCTREG,                          0463
*                               NEWCTREG) RSTD;                    0463
*                             SVPABREG=CURPAREG;/* SAVE PAB ACROSS 0464
*                                      CDS+CS                        */
         LR    SVPABREG,CURPAREG                                   0464
*                             CRASWREG=0;/* INDICATE CRA SEARCH NOT
*                                      COMPLETE                      */
         SLR   @02,@02                                             0465
         LR    CRASWREG,@02                                        0465
*                             CRAREG=0;/* INDICATE NO CRA            */
         LR    CRAREG,@02                                          0466
*                             DO;   /* LISATCVT                    0467
*                                      CVTBASE(PAGEABLE,(VCVTREG))   */
*                               VCVTREG=ATCLCPTR;/* SET UP ATCVT   0468
*                                      POINTER                       */
         L     VCVTREG,ATCLCPTR                                    0468
*                             END;  /* LISATCVT              @Z40GKF6*/
*                             OLDCTREG=ATCCRACN;/* CURRENT CRA CNT 0470
*                                      ATCVT                 @Z40GKF6*/
         L     OLDCTREG,ATCCRACN(,VCVTREG)                         0470
*                             DO WHILE(CRASWREG=0);/* CRA SEARCH LOOP
*                                      CTRL.                         */
         B     @DE00471                                            0471
@DL00471 DS    0H                                                  0472
*                               IF ATCCRAAC>0/* ANY CRA'S ON ATCVT?
*                                                            @Z40GKF6*/
*                                 THEN                             0472
         CLC   ATCCRAAC(2,VCVTREG),@CH00036                        0472
         BNH   @RF00472                                            0472
*GETCRA2:                                                          0473
*                                 DO;                              0473
GETCRA2  DS    0H                                                  0474
*                                   NEWCTREG=OLDCTREG-1;/* DECREMENT
*                                      PRES. CRA CT                  */
         LR    NEWCTREG,OLDCTREG                                   0474
         BCTR  NEWCTREG,0                                          0474
*                                   OLCRAREG=ATCCRAQ;/* FIRST CRA ON
*                                      ATCVT QUE             @Z40GKF6*/
         L     OLCRAREG,ATCCRAQ(,VCVTREG)                          0475
*                                   NWCRAREG=OLCRAREG->CRACHAIN;/* 0476
*                                      NEXT CRA PTR ON MPST          */
         L     NWCRAREG,CRACHAIN(,OLCRAREG)                        0476
*                                   CDS(OLCRAREG,NWCRAREG,ATCCRA);/*
*                                                            @Z40GKF6*/
         CDS   OLCRAREG,NWCRAREG,ATCCRA(VCVTREG)                   0477
*                                   BC(NE,GETCRA1);/* FAIL-LOOP AGAIN*/
         BC    7,GETCRA1                                           0478
*                                   CRASWREG=1;/* OUT OF LOOP IND.   */
         LA    CRASWREG,1                                          0479
*                                   CRAREG=OLCRAREG;/* SET CRA CTRL
*                                      BLK PTR                       */
         LR    CRAREG,OLCRAREG                                     0480
*                                 END GETCRA2;                     0481
*                               ELSE/* CRA NOT AVAIL ON MPST         */
*GETCRA6:                                                          0482
*                                 CRASWREG=1;/* OUT OF LOOP IND.     */
         B     @RC00472                                            0482
@RF00472 DS    0H                                                  0482
GETCRA6  LA    CRASWREG,1                                          0482
*GETCRA1:                                                          0483
*                             END;  /* DO WHILE(CRASWREG=0)          */
@RC00472 DS    0H                                                  0483
GETCRA1  DS    0H                                                  0483
@DE00471 SLR   @02,@02                                             0483
         CR    CRASWREG,@02                                        0483
         BE    @DL00471                                            0483
*                             RFY                                  0484
*                              (OLDCTREG,                          0484
*                               NEWCTREG) UNRSTD;                  0484
*                             IF CRAREG>0/* CRA GOTTEN OFF MPST      */
*                               THEN                               0485
         CR    CRAREG,@02                                          0485
         BH    @RT00485                                            0485
*                               ;   /* YES-NULL FOR STRUCTURE        */
*                             ELSE  /* NO-USE REQSTORE TO TRY        */
*GETCRA3:                                                          0487
*                               DO; /* TO OBTAIN A CRA               */
GETCRA3  DS    0H                                                  0488
*                                 SVPTRREG=MPSFLGA;/* COMP REG FOR CS
*                                                            @ZM32296*/
         L     SVPTRREG,MPSFLGA(,MPSTREG)                          0488
*CRAREQ:                                                           0489
*                                 NEWREG=SVPTRREG×MPSCRBO1;/* SWAP 0489
*                                      MPSCRAO ON            @ZM32296*/
CRAREQ   LR    NEWREG,SVPTRREG                                     0489
         O     NEWREG,@CF01062                                     0489
*                                 CS(SVPTRREG,NEWREG,MPSFLGA);/* USE
*                                      CS LOGIC              @ZM32296*/
         CS    SVPTRREG,@06,MPSFLGA(MPSTREG)                       0490
*                                 BC(7,CRAREQ);/* IF FAIL TRY AGAIN
*                                                            @ZM32296*/
         BC    7,CRAREQ                                            0491
*                                 RPHREG=MPSSMRPH;/* RPH TO REQ.CRA
*                                                             STORAGE*/
*                                                                  0492
         L     RPHREG,MPSSMRPH(,MPSTREG)                           0492
*                                 /***********************************/
*                                 /*                                 */
*                                 /* REQSTORE CBID(CRA)RPH(YES)CLEAR(*/
*                                 /* NO)SAVE(YES)                    */
*                                 /*                                 */
*                                 /***********************************/
*                                                                  0493
*                                 DO;                              0493
*                                                                  0493
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0494
*                                   DCL                            0494
*                                     GPR05F FIXED(31) REG(05);    0494
*                                   DCL                            0495
*                                     GPR05P PTR(31) REG(05);      0495
*                                   DCL                            0496
*                                     GPR06F FIXED(31) REG(06);    0496
*                                   DCL                            0497
*                                     GPR06P PTR(31) REG(06);      0497
*                                   DCL                            0498
*                                     GPR07F FIXED(31) REG(07);    0498
*                                   DCL                            0499
*                                     GPR07P PTR(31) REG(07);      0499
*                                   DCL                            0500
*                                     GPR08F FIXED(31) REG(08);    0500
*                                   DCL                            0501
*                                     GPR08P PTR(31) REG(08);      0501
*                                   DCL                            0502
*                                     GPR09F FIXED(31) REG(09);    0502
*                                   DCL                            0503
*                                     GPR09P PTR(31) REG(09);      0503
*                                   DCL                            0504
*                                     GPR10F FIXED(31) REG(10);    0504
*                                   DCL                            0505
*                                     GPR10P PTR(31) REG(10);      0505
*                                   DCL                            0506
*                                     GPR11F FIXED(31) REG(11);    0506
*                                   DCL                            0507
*                                     GPR11P PTR(31) REG(11);      0507
*                                   DCL                            0508
*                                     GPR12F FIXED(31) REG(12);    0508
*                                   DCL                            0509
*                                     GPR12P PTR(31) REG(12);      0509
*                                   RFY                            0510
*                                    (GPR02P,                      0510
*                                     GPR03P,                      0510
*                                     GPR04P,                      0510
*                                     GPR15P) RSTD;                0510
*                                   RFY                            0511
*                                    (GPR01P,                      0511
*                                     GPR13P) RSTD;                0511
*                                   GENERATE REFS(GPR01P,GPR02P,GPR13P)
*                                       SETS(RPHWORK);             0512
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*                                   RFY                            0513
*                                    (GPR01P,                      0513
*                                     GPR13P) UNRSTD;              0513
*                                   DO;/* LISATCVT                 0514
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                                    GPR15P=ATCLCPTR;/* SET UP ATCVT
*                                      POINTER                       */
         L     GPR15P,ATCLCPTR                                     0515
*                                   END;/* LISATCVT                  */
*                                   GPR02P=GPR15P->ATCBPDA×'80000000'X;
         L     GPR02P,ATCBPDA(,GPR15P)                             0517
         O     GPR02P,@CF01056                                     0517
*                                   DCL                            0518
*                                     1 FMZA0024 FIXED(31) STATIC LOCAL
*                                         ,                        0518
*                                      2 * FIXED(8) INIT(56),      0518
*                                      2 * PTR(24) INIT(0);        0518
*                                   GPR03F=FMZA0024;               0519
         L     GPR03F,FMZA0024                                     0519
*                                   GPR04F=23;                     0520
         LA    GPR04F,23                                           0520
*                                   GPR15P=GPR15P->ATCSMRQ;        0521
         L     GPR15P,ATCSMRQ(,GPR15P)                             0521
*                                   DCL                            0522
*                                     FMZL0024 BASED(GPR15P) LABEL 0522
*                                         VALUERANGE(*);           0522
*                                   CALL FMZL0024;                 0523
         BALR  @14,@15                                             0523
*                                   RFY                            0524
*                                    (GPR13P) RSTD;                0524
*                                   GENERATE REFS(GPR01P,RPHWORK) SETS(
*                                       GPR02P,GPR13P);            0525
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*                                   RFY                            0526
*                                    (GPR13P) UNRSTD;              0526
*                                   RFY                            0527
*                                    (GPR02P,                      0527
*                                     GPR03P,                      0527
*                                     GPR04P,                      0527
*                                     GPR15P) UNRSTD;              0527
*                                 END;                             0528
*                                                                  0528
*                                 /***********************************/
*                                 /*                                 */
*                                 /* ******** END OF REQSTORE        */
*                                 /* EXPANSION                       */
*                                 /*                                 */
*                                 /***********************************/
*                                                                  0529
*                                 IF REG15<8/* STORAGE OBTAINED      */
*                                   THEN/* YES - TURN OFF MPSCRA   0529
*                                                            @ZM32296*/
         C     REG15,@CF00059                                      0529
         BNL   @RF00529                                            0529
*                                   DO;/* AND GET ADDR OF CRA FROM 0530
*                                      SMSRPH                @ZM32296*/
*                                    CRAREG=RPHSRPRM;/* ADDR OF CRA
*                                      RTND BY SMS IN RPH            */
         L     CRAREG,RPHSRPRM(,RPHREG)                            0531
*                                    SVPTRREG=MPSFLGA;/* PRESENT FLAG
*                                      SETTINGS                      */
         L     SVPTRREG,MPSFLGA(,MPSTREG)                          0532
*GETCRAA:                                                          0533
*                                    NEWREG=SVPTRREG&MPSCRBO0;/*   0533
*                                      INDICATE SMS RPH NOT IN USE 0533
*                                                            @ZM32296*/
GETCRAA  LR    NEWREG,SVPTRREG                                     0533
         N     NEWREG,@CF01060                                     0533
*                                    CS(SVPTRREG,NEWREG,MPSFLGA);/*
*                                      EQ-SMS REQ IND OFF            */
         CS    SVPTRREG,@06,MPSFLGA(MPSTREG)                       0534
*                                    BC(NE,GETCRAA);/* FAIL-GO AGAIN */
         BC    7,GETCRAA                                           0535
*                                   END;/* END CRA STORAGE OBTAINED
*                                                            @ZM32296*/
*                                 ELSE/* NO CRA IN THE STORE @ZM32296*/
*GETCRA4:                                                          0537
*                                   DO;/* PUT PAB BACK ON RDY QUE  0537
*                                                            @ZM32296*/
         B     @RC00529                                            0537
@RF00529 DS    0H                                                  0537
GETCRA4  DS    0H                                                  0538
*                                    CURPAREG=SVPABREG;/* RESTORE  0538
*                                      AFTER CS                      */
         LR    CURPAREG,SVPABREG                                   0538
*                                    CALL ENQUE;/* QUE PAB ON BACK OF*/
         BAL   @14,ENQUE                                           0539
*                                   END GETCRA4;/* MPST RDY QUEUE    */
*                               END GETCRA3;                       0541
@RC00529 DS    0H                                                  0542
*                             CURPAREG=SVPABREG;/* RESTORE PAB     0542
*                                      AFT-CDS+CS                    */
@RT00485 LR    CURPAREG,SVPABREG                                   0542
*                             IF CRAREG>0/* CRA GOTTEN OFF MPST OR 0543
*                                      VIA REQSTORE                  */
*                               THEN                               0543
         LTR   CRAREG,CRAREG                                       0543
         BNP   @RF00543                                            0543
*GETCRA5:                                                          0544
*                               DO; /* YES-INITIALIZE IT             */
GETCRA5  DS    0H                                                  0545
*                                 CRACRR=ADDR(CRAPSS);/* ACTIVE CRR
*                                      PTR                           */
         LA    @07,CRAPSS(,CRAREG)                                 0545
         ST    @07,CRACRR(,CRAREG)                                 0545
*                                 DO;/* LISATCVT                   0546
*                                      CVTBASE(PAGEABLE,(VCVTREG))   */
*                                   VCVTREG=ATCLCPTR;/* SET UP ATCVT
*                                      POINTER                       */
         L     VCVTREG,ATCLCPTR                                    0547
*                                 END;/* LISATCVT VTAM CVT PTR       */
*                                 CRALKACT=0;/* CLEAR LOCK WORD      */
         SLR   @05,@05                                             0549
         ST    @05,CRALKACT(,CRAREG)                               0549
*                                 RPHREG=ADDR(CRARPH);/* LOAD RPH  0550
*                                      CTRL BLK PTR                  */
         LA    RPHREG,CRARPH(,CRAREG)                              0550
*                                 RPHRESMA=0;/* PROC APC57 WILL INIT.*/
         ST    @05,RPHRESMA(,RPHREG)                               0551
*                                 RPHCRR=CRAREG;/* INITIALIZE CRR  0552
*                                      SLOT                          */
         ST    CRAREG,RPHCRR(,RPHREG)                              0552
*                                 PABRPHA=RPHREG;/* RPH PTR IN PAB   */
         STCM  RPHREG,7,PABRPHA(CURPAREG)                          0553
*                                 RFY                              0554
*                                  (CRRREG) RSTD;                  0554
*                                 CRRREG=ADDR(CRAPSS);/* SET CRR CTRL
*                                      BLK PTR                       */
         LR    CRRREG,@07                                          0555
*                                 RFY                              0556
*                                  (CRAREG) UNRSTD;                0556
*                                 APCPSTA=(CURPAREG-PABOFFST)->DYPTSKID
*                                     ;/* PTR TO PSS TBLE            */
         LR    @07,CURPAREG                                        0557
         SLR   @02,@02                                             0557
         IC    @02,PABOFFST(,CURPAREG)                             0557
         SLR   @07,@02                                             0557
         L     @07,DYPTSKID(,@07)                                  0557
         ST    @07,APCPSTA(,CRRREG)                                0557
*/*ABOVE MAY NOT BE DYNAMIC PAB BUT OFFSET GETS TO PST SLOT.         */
*                                                                  0558
*                                 APCRTRN=MPSSYSRT;/* SYS RETURN   0558
*                                      ADDRESS                       */
         L     @02,MPSSYSRT(,MPSTREG)                              0558
         ST    @02,APCRTRN(,CRRREG)                                0558
*                                 APCRFLG=0;/* INITIALIZE CRR FLAGS  */
         STH   @05,APCRFLG(,CRRREG)                                0559
*                                 APCATFLG=0;                      0560
         STH   @05,APCATFLG(,CRRREG)                               0560
*                                 APCCOMF=0;                       0561
         ST    @05,APCCOMF(,CRRREG)                                0561
*                                 APCHDRSV=APCHDRSV&&APCHDRSV;     0562
*                                                                  0562
         XC    APCHDRSV(16,CRRREG),APCHDRSV(CRRREG)                0562
*/*SMSID  BUFF(RPHCRR)TSKID(APCPSTA)                                 */
*                                                                  0563
*                                 DO;                              0563
*                                   DCL                            0564
*                                     1 CMZ0048A PTR(31) BASED((RPHCRR)
*                                           -8),                   0564
*                                      2 * BIT(8),                 0564
*                                      2 CMZ0048 PTR(24);          0564
*                                   CMZ0048=(APCPSTA);             0565
         L     @05,RPHCRR(,RPHREG)                                 0565
         AL    @05,@CF02881                                        0565
         STCM  @07,7,CMZ0048-1(@05)                                0565
*                                 END;/* SMSID               @Z40GKF6*/
*                               END GETCRA5;                       0567
*                             ELSE                                 0568
*                               ;   /* NULL-FOR STRUCTURING          */
@RF00543 DS    0H                                                  0569
*                             RFY                                  0569
*                              (CRRREG) UNRSTD;                    0569
*                           END GETCRA;                            0570
*                                                                  0571
*/* CHECK TO SEE IF MPST READY QUEUE EMPTY. IF SO, ESTABLISH RECOV.  */
*/*ENVIRONMENT, SET EXIT SWITCH, AND GOTO ISTAPC57 TO DISPATCH THE   */
*/*DEQUED PAB DIRECTLY UNDER THE PRESENT SRB, 1E-THE SRB ISTAPC55 IS */
*/*RUNNING UNDER. IF READY QUEUE NOT EMPTY, GET SRB TO SCHEDULE THE  */
*/*DEQUEUED PAB UNDER VIA THE SCHEDULE SYSTEM MACRO. IF POSTED PAB   */
*/*AND SMS REQUEST OUTSTANDING, SRB55 HAS ALREADY BEEN SCHEDULED SO  */
*/*GO TO ISTAPC57 TO DISPATCH THE DEQUEUED PAB DIRECTLY UNDER THE    */
*/*PRESENT SRB.                                          @ZM30835    */
*                                                                  0571
*                                   /*                               */
*TESTRPHA:                                                         0571
*                         IF PABRPHA^=0/* DOES PAB HAVE A CRA        */
*                           THEN    /* YES-PROCESSING PROCEED        */
@RC00453 DS    0H                                                  0571
TESTRPHA L     @07,PABRPHA-1(,CURPAREG)                            0571
         LA    @07,0(,@07)                                         0571
         LTR   @07,@07                                             0571
         BZ    @RF00571                                            0571
*TESTRPH1:                                                         0572
*                           DO;     /* NO-LATER NULL ELSE TO         */
TESTRPH1 DS    0H                                                  0573
*                             RFY                                  0573
*                              (PABINREG,                          0573
*                               OLDREG) RSTD;/* GET TO EXIT LOOP TOP */
*                             QCKSWREG=0;/* QUE CHECK DONE INDICAT   */
         SLR   @07,@07                                             0574
         LR    QCKSWREG,@07                                        0574
*                             OLDREG=MPSRQUE;/* READY QUE CONTENTS   */
         L     OLDREG,MPSRQUE(,MPSTREG)                            0575
*                             PABINREG=OLDREG&ZCLHIBYT;/* LESS HIGH
*                                      ORDER FLAGS                   */
         LR    PABINREG,OLDREG                                     0576
         N     PABINREG,@CF02683                                   0576
*                             IF POSTPBSW<0/* IS DISPATCH POSTED PAB
*                                      ON                            */
*                                                                  0577
*                             /***************************************/
*                             /*                                     */
*                             /*                             @ZM30835*/
*                             /*                                     */
*                             /***************************************/
*                                                                  0577
*                               THEN/* YES                   @ZM30835*/
         CR    POSTPBSW,@07                                        0577
         BNL   @RF00577                                            0577
*                               DO; /* FAKE OUT DO WHILE LOOP TO GET
*                                      TO                            */
*                                 QCKSWREG=1;/* APC57        @ZM30835*/
         LA    QCKSWREG,1                                          0579
*                                 PABINREG=0;/*              @ZM30835*/
         LR    PABINREG,@07                                        0580
*                               END;/*                       @ZM30835*/
*                             ELSE                                 0582
*                               ;   /* NO                    @ZM30835*/
@RF00577 DS    0H                                                  0583
*CKQUEUE:                                                          0583
*                             DO WHILE(QCKSWREG=0);/* LOOP CTRL-CHECK
*                                      RDY Q                         */
CKQUEUE  B     @DE00583                                            0583
@DL00583 DS    0H                                                  0584
*                               IF PABINREG=0/* MPST RDY QUE EMPTY   */
*                                 THEN                             0584
         LTR   PABINREG,PABINREG                                   0584
         BNZ   @RF00584                                            0584
*CKQUEUE1:                                                         0585
*                                 DO;                              0585
CKQUEUE1 DS    0H                                                  0586
*                                   VCVTREG=ATCLCPTR;/* RESTORE ATCVT
*                                      PTR                   @G35RKF6*/
         L     VCVTREG,ATCLCPTR                                    0586
*                                   IF ATCABEN=ON/* VTAM ABENDING? 0587
*                                                            @G35RKF6*/
*                                     THEN/* YES- GET OUT    @G35RKF6*/
         TM    ATCABEN(VCVTREG),B'10000000'                        0587
         BNO   @RF00587                                            0587
*                                    DO;/* SETFRR DELETE & GOTO SYS
*                                                            @G35RKF6*/
*                                     RFY                          0589
*                                      (WRKA,                      0589
*                                       WRKB) RSTD;/*        @G35RKF6*/
*                                     GENERATE REFS(FRRPREG,PARREG,WRKA
*                                         ,WRKB,PSACSTK,PSA,FRRSCURR,
*                                         FRRS,FRRSLAST,FRRSELEN,  0590
*                                         FRRSFRRA,FRRSENTR,FRRSPARM,
*                                         FRRSEMP);                0590
                    SETFRR D,WRKREGS=(WRKA,WRKB)
*                                     RFY                          0591
*                                      (WRKA,                      0591
*                                       WRKB) UNRSTD;/*      @G35RKF6*/
*                                     RFY                          0592
*                                       REG14 RSTD;/*        @G35RKF6*/
*                                     REG14=MPSSYSRT;/* GET ADDR OF
*                                      SYSTEM                @G35RKF6*/
         L     REG14,MPSSYSRT(,MPSTREG)                            0593
*                                     RETURN;/* EXIT TO SYSTEM     0594
*                                                            @G35RKF6*/
@EL00001 DS    0H                                                  0594
@EF00001 DS    0H                                                  0594
@ER00001 BR    @14                                                 0594
*                                     RFY                          0595
*                                       REG14 UNRSTD;/*      @G35RKF6*/
*                                    END;/* CODE FOR RIU VTAM ABEND
*                                                            @G35RKF6*/
*                                   ELSE                           0597
*                                    ;/* NOT ABENDING SO UNGATE MPST
*                                      RDYQ                  @G35RKF6*/
@RF00587 DS    0H                                                  0598
*                                   NEWREG=OLDREG&MPSGATE0;/* UNGATE
*                                      RDY QUEUE                     */
         LR    NEWREG,OLDREG                                       0598
         N     NEWREG,@CF01054                                     0598
*                                   CS(OLDREG,NEWREG,MPSRQUE);/*   0599
*                                      EQ-QUEUE UNGATED              */
         CS    OLDREG,@06,MPSRQUE(MPSTREG)                         0599
*                                   BC(NE,CKQUEUEA);/*             0600
*                                      FAIL-RELOAD+TRY AGAIN         */
         BC    7,CKQUEUEA                                          0600
*                                   QCKSWREG=1;/* RDY QUE CHECKED    */
         LA    QCKSWREG,1                                          0601
*                                   GOTO CKQUEUEB;                 0602
         B     CKQUEUEB                                            0602
*CKQUEUEA:                                                         0603
*                                   PABINREG=OLDREG&ZCLHIBYT;/* RDY Q
*                                      NOW LESS HI.ORD.              */
CKQUEUEA LR    PABINREG,OLDREG                                     0603
         N     PABINREG,@CF02683                                   0603
*CKQUEUEB:                                                         0604
*                                 END CKQUEUE1;                    0604
*                               ELSE                               0605
*CKQUEUE2:                                                         0605
*                                 QCKSWREG=1;/* RDY QUE CHECKED      */
         B     @RC00584                                            0605
@RF00584 DS    0H                                                  0605
CKQUEUE2 LA    QCKSWREG,1                                          0605
*                             END;  /* DO WHILE(QCKSWREG=0)          */
@RC00584 DS    0H                                                  0606
@DE00583 SLR   @07,@07                                             0606
         CR    QCKSWREG,@07                                        0606
         BE    @DL00583                                            0606
*                             IF PABINREG=0/* MPST RDY Q EMPTY       */
*                               THEN                               0607
         CR    PABINREG,@07                                        0607
         BNE   @RF00607                                            0607
*SETFRR:                                                           0608
*                               DO;                                0608
SETFRR   DS    0H                                                  0609
*                                 RFY                              0609
*                                  (PABINREG,                      0609
*                                   OLDREG) UNRSTD;/*                */
*/*ESTABLISH RECOVERY ENVIRONMENT, LOAD ISTAPC57 INTERFACE REGISTERS,*/
*/*SET EXIT SWITCH, AND GO TO ISTAPC57 WITH NO RETURN TO DISPATCH THE*/
*/*DEQUED PAB.                                                       */
*                                                                  0610
*                                 RFY                              0610
*                                  (WRKA) RSTD;                    0610
*                                 DO;/* LISATCVT                   0611
*                                      CVTBASE(PAGEABLE,(VCVTREG))   */
*                                   VCVTREG=ATCLCPTR;/* SET UP ATCVT
*                                      POINTER                       */
         L     VCVTREG,ATCLCPTR                                    0612
*                                 END;/* LISATCVT VTAM CVT PTR       */
*                                 FRRPREG=ATCAP62;/* FOR RECOVERY    */
         L     FRRPREG,ATCAP62(,VCVTREG)                           0614
*                                 GENERATE REFS(FRRPREG,PARREG,WRKA,
*                                     WRKB,PSACSTK,PSA,FRRSCURR,FRRS,
*                                     FRRSLAST,FRRSELEN,FRRSFRRA,  0615
*                                     FRRSENTR,FRRSPARM,FRRSEMP);  0615
           SETFRR R,FRRAD=(FRRPREG),PARMAD=(PARREG),WRKREGS=(WRKA,WRKB)
*                                 RPHREG=PABRPHA;/* RPH PTR FROM   0616
*                                      DEQUED PAB                    */
         L     RPHREG,PABRPHA-1(,CURPAREG)                         0616
         LA    RPHREG,0(,RPHREG)                                   0616
*                                 WORD0=RPHCRR;/* SET FIRST WORD OF
*                                      AREA POINTED TO BY          0617
*                                      PARREG=CRAPTR                 */
         L     @07,RPHCRR(,RPHREG)                                 0617
         ST    @07,WORD0(,PARREG)                                  0617
*                                 RFY                              0618
*                                  (CRRREG) RSTD;                  0618
*                                 CRRREG=ADDR(RPHCRR->CRAPSS);/* CRR
*                                      ADDRESS IN CRA                */
         LA    CRRREG,CRAPSS(,@07)                                 0619
*                                 APCFRRPM=PARREG;/* SAVE PARMAD IN
*                                      THE PSS CRR                   */
         ST    PARREG,APCFRRPM(,CRRREG)                            0620
*                                 RFY                              0621
*                                  (CRRREG) UNRSTD;                0621
*                                 RPHREG=0;/* SET REGS FOR ISTAPC57  */
         SLR   RPHREG,RPHREG                                       0622
*                                 REG9=CURPAREG;                   0623
         LR    REG9,CURPAREG                                       0623
*                                 REG15=ATCAP57;                   0624
         L     REG15,ATCAP57(,VCVTREG)                             0624
*                                 GOTO APC57;                      0625
         BR    REG15                                               0625
*                                 RFY                              0626
*                                  (WRKA) UNRSTD;                  0626
*                               END SETFRR;                        0627
*                                                                  0628
*/*MPST READY QUEUE OF MPST NOT EMPTY. THEREFORE, A SRB IS OBTAINED  */
*/*FROM THE ATCVT IF ONE IS ABAILABLE.IF NOT, REQSTORE IS USED TO GET*/
*/*ONE. IF NO STORAGE AVAILABLE, THE MPST IND. IS SET SHOWING AN OUT-*/
*/*STANDING SMS REQUEST. THE DEQUED PAB IS THEN PUT BACK ON THE END  */
*/*OF THE MPST READY QUEUE VIA THE ENQUE SUBROUTINE. IF AN SRB IS    */
*/*OBTAINED, IT IS INITIALIZED AND THE NEW SRB IS SCHEDULED VIA THE  */
*/*SYSTEM SCHEDULE MACRO , CAUSING THE DEQUED PAB TO BE DISPATCHED IN*/
*/*AN ASYNCHRONOUS FASHION BY PROCEDURE ISTAPC56.                    */
*                                                                  0628
*                                   /*                               */
*                             ELSE                                 0628
*GETSRB:                                                           0628
*                               DO;                                0628
@RF00607 DS    0H                                                  0628
GETSRB   DS    0H                                                  0629
*                                 SRBSWREG=0;/* INDICATE SRB SEARCH  */
         SLR   @07,@07                                             0629
         LR    SRBSWREG,@07                                        0629
*                                 RFY                              0630
*                                  (SRBREG,                        0630
*                                   OLDCTREG,                      0630
*                                   NEWCTREG) RSTD;/* NOT COMPLETE   */
*                                 SVPABREG=CURPAREG;/* SAVE PAB    0631
*                                      ACROSS CDS+CS                 */
         LR    SVPABREG,CURPAREG                                   0631
*                                 SRBREG=0;/* INDICATE NO SRB        */
         SLR   @02,@02                                             0632
         LR    SRBREG,@02                                          0632
*                                 DO;/* LISATCVT                   0633
*                                      CVTBASE(PAGEABLE,(VCVTREG))   */
*                                   VCVTREG=ATCLCPTR;/* SET UP ATCVT
*                                      POINTER                       */
         L     VCVTREG,ATCLCPTR                                    0634
*                                 END;/* LISATCVT            @Z40GKF6*/
*                                 DO WHILE(SRBSWREG=0);/* SRB SEARCH
*                                      LOOP CONTRL                   */
         B     @DE00636                                            0636
@DL00636 DS    0H                                                  0637
*                                   IF ATCSRBAC>0/* ANY SRB'S      0637
*                                                            @Z40GKF6*/
*                                     THEN                         0637
         CLC   ATCSRBAC(2,VCVTREG),@CH00036                        0637
         BNH   @RF00637                                            0637
*GETSRB2:                                                          0638
*                                    DO;                           0638
GETSRB2  DS    0H                                                  0639
*                                     OLDCTREG=ATCSRBCN;/* ATCVT SRB
*                                      CNT                   @Z40GKF6*/
         L     OLDCTREG,ATCSRBCN(,VCVTREG)                         0639
*                                     NEWCTREG=OLDCTREG-1;/*       0640
*                                      DECREMENT PRES. SRB CT        */
         LR    NEWCTREG,OLDCTREG                                   0640
         BCTR  NEWCTREG,0                                          0640
*                                     OLSRBREG=ATCSRBQ;/* SRB-ATCVT
*                                                            @Z40GKF6*/
         L     OLSRBREG,ATCSRBQ(,VCVTREG)                          0641
*                                     NWSRBREG=OLSRBREG->SRBFLNK;/*
*                                      NEXT SRB PTR ON SRB           */
         L     NWSRBREG,SRBFLNK(,OLSRBREG)                         0642
*                                     CDS(OLSRBREG,NWSRBREG,ATCSRB);
         CDS   OLSRBREG,NWSRBREG,ATCSRB(VCVTREG)                   0643
*                                     /*                     @Z40GKF6*/
*                                     BC(NE,GETSRB1);/* FAIL-LOOP  0644
*                                      AGAIN                         */
         BC    7,GETSRB1                                           0644
*                                     SRBSWREG=1;/* OUT OF LOOP    0645
*                                      INDICATOR                     */
         LA    SRBSWREG,1                                          0645
*                                     SRBREG=OLSRBREG;/* SET SRB CTRL
*                                      BLK PTR                       */
         LR    SRBREG,OLSRBREG                                     0646
*                                    END GETSRB2;                  0647
*                                   ELSE                           0648
*GETSRB5:                                                          0648
*                                    SRBSWREG=1;/* OUT OF LOOP IND.  */
         B     @RC00637                                            0648
@RF00637 DS    0H                                                  0648
GETSRB5  LA    SRBSWREG,1                                          0648
*GETSRB1:                                                          0649
*                                 END;/* DO WHILE(SRBSWREG=0)        */
@RC00637 DS    0H                                                  0649
GETSRB1  DS    0H                                                  0649
@DE00636 SLR   @02,@02                                             0649
         CR    SRBSWREG,@02                                        0649
         BE    @DL00636                                            0649
*                                 RFY                              0650
*                                  (OLDCTREG,                      0650
*                                   NEWCTREG) UNRSTD;              0650
*                                 IF SRBREG^=0/* SRB GOTTEN OFF MPST */
*                                   THEN                           0651
         CR    SRBREG,@02                                          0651
         BNE   @RT00651                                            0651
*                                   ;/* YES-NULL FOR STRUCTURE       */
*                                 ELSE                             0653
*GETSRB3:                                                          0653
*                                   DO;/* TURN ON MPSSRBO AND USE SMS
*                                      RPH TO REQSTORE       @ZM32296*/
GETSRB3  DS    0H                                                  0654
*                                    SVPTRREG=MPSFLGA;/* COMP REG  0654
*                                      FFOR CS               @ZM32296*/
         L     SVPTRREG,MPSFLGA(,MPSTREG)                          0654
*SRBREQ:                                                           0655
*                                    NEWREG=SVPTRREG×MPSPRBO1;/* SWAP
*                                      SRBO ON               @ZM32296*/
SRBREQ   LR    NEWREG,SVPTRREG                                     0655
         O     NEWREG,@CF01056                                     0655
*                                    CS(SVPTRREG,NEWREG,MPSFLGA);/*
*                                      USE CS LOGIC          @ZM32296*/
         CS    SVPTRREG,@06,MPSFLGA(MPSTREG)                       0656
*                                    BC(7,SRBREQ);/* IF FAIL TRY   0657
*                                      AGAIN                 @ZM32296*/
         BC    7,SRBREQ                                            0657
*                                    RPHREG=MPSSMRPH;/* RPH TO     0658
*                                      REQ.SRB                STORAGE*/
*                                                                  0658
         L     RPHREG,MPSSMRPH(,MPSTREG)                           0658
*                                    /********************************/
*                                    /*                              */
*                                    /* REQSTORE CBID(SRB)RPH(YES)CLE*/
*                                    /* AR(NO)SAVE(YES)              */
*                                    /*                              */
*                                    /********************************/
*                                                                  0659
*                                    DO;                           0659
*                                                                  0659
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0660
*                                     RFY                          0660
*                                      (GPR02P,                    0660
*                                       GPR03P,                    0660
*                                       GPR04P,                    0660
*                                       GPR15P) RSTD;              0660
*                                     RFY                          0661
*                                      (GPR01P,                    0661
*                                       GPR13P) RSTD;              0661
*                                     GENERATE REFS(GPR01P,GPR02P, 0662
*                                         GPR13P) SETS(RPHWORK);   0662
           STM GPR02P,GPR13P,RPHWORK(GPR01P)
*                                     RFY                          0663
*                                      (GPR01P,                    0663
*                                       GPR13P) UNRSTD;            0663
*                                     DO;/* LISATCVT               0664
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                                      GPR15P=ATCLCPTR;/* SET UP   0665
*                                      ATCVT POINTER                 */
         L     GPR15P,ATCLCPTR                                     0665
*                                     END;/* LISATCVT                */
*                                     GPR02P=GPR15P->ATCBPDA×'80000000'
*                                         ;                        0667
         L     GPR02P,ATCBPDA(,GPR15P)                             0667
         O     GPR02P,@CF01056                                     0667
*                                     DCL                          0668
*                                       1 FMZA0059 FIXED(31) STATIC
*                                             LOCAL,               0668
*                                        2 * FIXED(8) INIT(56),    0668
*                                        2 * PTR(24) INIT(0);      0668
*                                     GPR03F=FMZA0059;             0669
         L     GPR03F,FMZA0059                                     0669
*                                     GPR04F=16;                   0670
         LA    GPR04F,16                                           0670
*                                     GPR15P=GPR15P->ATCSMRQ;      0671
         L     GPR15P,ATCSMRQ(,GPR15P)                             0671
*                                     DCL                          0672
*                                       FMZL0059 BASED(GPR15P) LABEL
*                                           VALUERANGE(*);         0672
*                                     CALL FMZL0059;               0673
         BALR  @14,@15                                             0673
*                                     RFY                          0674
*                                      (GPR13P) RSTD;              0674
*                                     GENERATE REFS(GPR01P,RPHWORK)
*                                         SETS(GPR02P,GPR13P);     0675
           LM GPR02P,GPR13P,RPHWORK(GPR01P)
*                                     RFY                          0676
*                                      (GPR13P) UNRSTD;            0676
*                                     RFY                          0677
*                                      (GPR02P,                    0677
*                                       GPR03P,                    0677
*                                       GPR04P,                    0677
*                                       GPR15P) UNRSTD;            0677
*                                    END;                          0678
*                                                                  0678
*                                    /********************************/
*                                    /*                              */
*                                    /* ******** END OF REQSTORE     */
*                                    /* EXPANSION                    */
*                                    /*                              */
*                                    /********************************/
*                                                                  0679
*                                    IF REG15<8/* STORAGE OBTAINED   */
*                                      THEN                        0679
         C     REG15,@CF00059                                      0679
         BNL   @RF00679                                            0679
*                                     DO;/* TURN OFF MPSSRBO @ZM32296*/
*                                      SVPTRREG=MPSFLGA;/* COMP REG
*                                      FOR CS                @ZM32296*/
         L     SVPTRREG,MPSFLGA(,MPSTREG)                          0681
*SRBROK:                                                           0682
*                                      NEWREG=SVPTRREG&MPSPRBO0;/* 0682
*                                      SWAP SRBO OFF         @ZM32296*/
SRBROK   LR    NEWREG,SVPTRREG                                     0682
         N     NEWREG,@CF01054                                     0682
*                                      CS(SVPTRREG,NEWREG,MPSFLGA);/*
*                                      USE CS LOGIC          @ZM32296*/
         CS    SVPTRREG,@06,MPSFLGA(MPSTREG)                       0683
*                                      BC(7,SRBROK);/* IF FAIL TRY 0684
*                                      AGAIN                 @ZM32296*/
         BC    7,SRBROK                                            0684
*                                      SRBREG=RPHSRPRM;/* RETURNED BY
*                                      SMS IN RPH                    */
         L     SRBREG,RPHSRPRM(,RPHREG)                            0685
*                                     END;/* END STORAGE OBTAINED  0686
*                                                            @ZM32296*/
*                                    ELSE                          0687
*                                     ;/* NULL-FOR STRUCTURE         */
@RF00679 DS    0H                                                  0688
*                                   END GETSRB3;                   0688
*                                 IF SRBREG^=0/* SRB OBTAINED        */
*                                   THEN                           0689
@RT00651 LTR   SRBREG,SRBREG                                       0689
         BZ    @RF00689                                            0689
*SCH56:                                                            0690
*                                   DO;/* INITIALIZE THE SRB         */
SCH56    DS    0H                                                  0691
*                                    SRBSECT=SRBSECT&&SRBSECT;/*   0691
*                                      CLEAR SRB CTRL BLK            */
         XC    SRBSECT(44,SRBREG),SRBSECT(SRBREG)                  0691
*                                    SRBASCB=MPSASCB;/* ADDR SPACE TO
*                                      BE DISP.                      */
         L     @07,MPSASCB(,MPSTREG)                               0692
         ST    @07,SRBASCB(,SRBREG)                                0692
*                                    DO;/* LISATCVT                0693
*                                      CVTBASE(PAGEABLE,(VCVTREG))   */
*                                     VCVTREG=ATCLCPTR;/* SET UP   0694
*                                      ATCVT POINTER                 */
         L     VCVTREG,ATCLCPTR                                    0694
*                                    END;/* LISATCVT VTAM CVT PTR    */
*                                    SRBEP=ATCAP56;/* ENTRY PT OF  0696
*                                      PROC TO DISPATCH PAB          */
         L     @07,ATCAP56(,VCVTREG)                               0696
         ST    @07,SRBEP(,SRBREG)                                  0696
*                                    SRBPARM=SVPABREG;/* PAB TO BE 0697
*                                      DISPATCHED                    */
         ST    SVPABREG,SRBPARM(,SRBREG)                           0697
*                                    SRBRMTR=ATCAP83;/* RESOURCE   0698
*                                      MANAGER ROUT.                 */
         L     @07,ATCAP83(,VCVTREG)                               0698
         ST    @07,SRBRMTR(,SRBREG)                                0698
*                                    SRBPASID=MPSASID;/* PURGEDQ ID  */
         MVC   SRBPASID(2,SRBREG),MPSASID(MPSTREG)                 0699
*                                    SRBID=NMSRB;/*          @ZM31976*/
         MVC   SRBID(4,SRBREG),@CC02686                            0700
*                                    GENERATE REFS(SRBREG,CVTLSMQ, 0701
*                                        SRBFLNK,SRBSECT,CVTPTR);  0701
               SCHEDULE SRB=(SRBREG),SCOPE=LOCAL
*                                    WORD1=0;                      0702
         SLR   @07,@07                                             0702
         ST    @07,WORD1(,PARREG)                                  0702
*                                   END SCH56;                     0703
*                                 ELSE                             0704
*GETSRB4:                                                          0704
*                                   DO;/* SRB NOT OBTAINED           */
         B     @RC00689                                            0704
@RF00689 DS    0H                                                  0704
GETSRB4  DS    0H                                                  0705
*                                    CURPAREG=SVPABREG;/* RESTORE  0705
*                                      AFTER CS                      */
         LR    CURPAREG,SVPABREG                                   0705
*                                    CALL ENQUE;/* QUE PAB ON BACK OF*/
         BAL   @14,ENQUE                                           0706
*                                   END GETSRB4;/* MPST READY QUEUE  */
*                                 RFY                              0708
*                                  (SRBREG) UNRSTD;                0708
@RC00689 DS    0H                                                  0709
*                               END GETSRB;                        0709
*                           END TESTRPH1;                          0710
*                         ELSE                                     0711
*                           ;       /* NO CRA-MATCHG TESTRPH1        */
@RF00571 DS    0H                                                  0712
*                       END TESTUS4;                               0712
*                   END;            /* END NON ABENDING PAB  @Z40GKF6*/
@RC00440 DS    0H                                                  0714
*               END TESTPP2;                                       0714
@RC00434 DS    0H                                                  0715
*           END TESTEX2;                                           0715
@RC00398 DS    0H                                                  0716
*       END TESTEX1;                                               0716
@RT00373 DS    0H                                                  0717
*   END;                            /* DOWHILE(EXSWREG=0)            */
@RC00276 DS    0H                                                  0717
@DE00274 LTR   EXSWREG,EXSWREG                                     0717
         BZ    @DL00274                                            0717
*                                                                  0718
*/*THIS ENQUE SUBROUTINE IS USED TO PLACE A PREVIOUSLY DEQUED PAB    */
*/*BACK ON THE END OF THE MPST READY QUEUE AS IT IS NOT POSSIBLE TO  */
*/*DISPATCH OR SCHEDULE ITS DISPATCH AT THIS TIME.                   */
*                                                                  0718
*                                   /*                               */
*/* NOTE-CURPAREG IS THE DEQUED PAB ON ENTRY AND IS NOT ALTERED BY   */
*/*THIS SUBROUTINE EXCEPT FOR THE HIGH ORDER BYTE FLAG INDICATORS.   */
*                                                                  0718
*                                   /*                               */
*ENQUE:                                                            0718
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0718
*                                                                  0718
         B     @PB00002                                            0718
ENQUE    DS    0H                                                  0719
*/*NOTE-R6=COMP.REG+R4=SWAP REG IN CS FOR THIS SUBROUTINE            */
*                                                                  0719
*   EQDSWREG=0;                     /* ENQUE NOT DONE IND.           */
         SLR   EQDSWREG,EQDSWREG                                   0719
*   CURRQREG=MPSRQUE;               /* PAB PRESENTLY ON RDY Q        */
         L     CURRQREG,MPSRQUE(,MPSTREG)                          0720
*   PABENREG=CURRQREG&ZCLHIBYT;     /* CLEAR HI ORDER BYTE FL        */
         LR    PABENREG,CURRQREG                                   0721
         N     PABENREG,@CF02683                                   0721
*ENQUE1:                                                           0722
*   DO WHILE(EQDSWREG=0);           /* ENQUE LOOP CONTROL            */
ENQUE1   B     @DE00722                                            0722
@DL00722 DS    0H                                                  0723
*     IF PABENREG=0                 /* WAS MPST RDV Q EMPTY          */
*       THEN                        /* YES-PUT DEQUED PAB ON         */
         LTR   PABENREG,PABENREG                                   0723
         BNZ   @RF00723                                            0723
*ENQUE2:                                                           0724
*       DO;                         /* MPST RDY Q VIA CS             */
ENQUE2   DS    0H                                                  0725
*         CURPAREG=(CURPAREG&ZCLHIBYT)×(CURRQREG&ZCLWBYTS);        0725
*                                                                  0725
         LR    @07,CURPAREG                                        0725
         N     @07,@CF02683                                        0725
         LR    @05,CURRQREG                                        0725
         N     @05,@CF01103                                        0725
         OR    @07,@05                                             0725
         LR    CURPAREG,@07                                        0725
*/*CURPAREG NOW CONTAINS THE DEQUED PAB WHICH IS TO BE ENQUED. THE   */
*/*HI ORDER BYTE HAS BEEN CLEARED OF WHAT WAS PASSED TO THIS SUBROUT.*/
*/*AND REPLACED BY FLAGS PRESENTLY ON MPST READY QUEUE.              */
*                                                                  0726
*         CS(CURRQREG,CURPAREG,MPSRQUE);/* EQ-RDY Q HAS CURPAREG     */
         CS    CURRQREG,@04,MPSRQUE(MPSTREG)                       0726
*         BC(NE,ENQUEA);            /* AS EXPLAINED ABOVE            */
         BC    7,ENQUEA                                            0727
*         WORD1=0;                                                 0728
         SLR   @07,@07                                             0728
         ST    @07,WORD1(,PARREG)                                  0728
*         EQDSWREG=1;               /* OUT OF ENQUE LOOP CTRL        */
         LA    EQDSWREG,1                                          0729
*ENQUEA:                                                           0730
*         PABENREG=CURRQREG&ZCLHIBYT;/* FAIL CS-PUT PABPTR NOW       */
ENQUEA   LR    PABENREG,CURRQREG                                   0730
         N     PABENREG,@CF02683                                   0730
*       END ENQUE2;                 /* ON RDY Q LESS FLGS            */
*     ELSE                          /* MPST RDY QUE NOT EMPT         */
*ENQUE3:                                                           0732
*       DO;                                                        0732
         B     @RC00723                                            0732
@RF00723 DS    0H                                                  0732
ENQUE3   DS    0H                                                  0733
*         IF PABENREG->PABCHNGP=0   /* LAST PAB ON QUEUE             */
*           THEN                                                   0733
         L     @07,PABCHNGP-1(,PABENREG)                           0733
         LA    @07,0(,@07)                                         0733
         LTR   @07,@07                                             0733
         BNZ   @RF00733                                            0733
*ENQUE4:                                                           0734
*           DO;                     /* YES-PUT DEQUED PAB ON         */
ENQUE4   DS    0H                                                  0735
*             PABENREG->PABCHNGP=CURPAREG;/* BACK OF MPST RDY QUE    */
         STCM  CURPAREG,7,PABCHNGP(PABENREG)                       0735
*             WORD1=0;                                             0736
         SLR   @07,@07                                             0736
         ST    @07,WORD1(,PARREG)                                  0736
*             EQDSWREG=1;           /* OUT OF ENQUE LOOP CTRL        */
         LA    EQDSWREG,1                                          0737
*           END ENQUE4;                                            0738
*         ELSE                      /* NOT LAST PAB ON QUEUE         */
*ENQUE5:                                                           0739
*           PABENREG=PABENREG->PABCHNGP;/* STEP TO NEXT PAB          */
         B     @RC00733                                            0739
@RF00733 DS    0H                                                  0739
ENQUE5   L     @07,PABCHNGP-1(,PABENREG)                           0739
         LA    @07,0(,@07)                                         0739
         LR    PABENREG,@07                                        0739
*       END ENQUE3;                                                0740
@RC00733 DS    0H                                                  0741
*   END;                            /* DO WHILE(EQDSWREG=0)          */
@RC00723 DS    0H                                                  0741
@DE00722 LTR   EQDSWREG,EQDSWREG                                   0741
         BZ    @DL00722                                            0741
*   END ENQUE;                                                     0742
*                                                                  0742
@EL00002 DS    0H                                                  0742
@EF00002 DS    0H                                                  0742
@ER00002 BR    @14                                                 0742
@PB00002 DS    0H                                                  0743
*/* TPEPILOG                                                         */
*                                                                  0743
*   GEN(PRINT OFF);                                                0743
         PRINT OFF
*   GEN(PRINT ON);                                                 0744
*                                                                  0744
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0745
*   END ISTAPC55                                                   0745
*                                                                  0745
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*                                                                  0745
*       ;                                                          0745
         B     @EL00001                                            0745
@DATA    DS    0H
@CH00036 DC    H'0'
@DATD    DSECT
         DS    0F
ISTAPC55 CSECT
         DS    0F
@CF00061 DC    F'1'
@CF00059 DC    F'8'
@CF02881 DC    F'-7'
@CF01054 DC    XL4'7FFFFFFF'
@CF01056 DC    XL4'80000000'
@CF01060 DC    XL4'BFFFFFFF'
@CF01062 DC    XL4'40000000'
@CF01103 DC    XL4'FF000000'
@CF02683 DC    XL4'00FFFFFF'
@CF02728 DC    XL4'10001'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTAPC55 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
FMZA0024 DS    FL4
         ORG   FMZA0024
@NM00065 DC    AL1(56)
@NM00066 DC    AL3(0)
         ORG   FMZA0024+4
FMZA0059 DS    FL4
         ORG   FMZA0059
@NM00068 DC    AL1(56)
@NM00069 DC    AL3(0)
         ORG   FMZA0059+4
@CC02686 DC    C'PS56'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RPHPTR   EQU   @01
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR13P   EQU   @13
GPR15P   EQU   @15
ZEROREG  EQU   @00
PABINREG EQU   @00
RPHREG   EQU   @01
REG1     EQU   @01
PARREG   EQU   @03
OLDEVREG EQU   @04
SVPTRREG EQU   @04
CURPAREG EQU   @04
OLSRBREG EQU   @04
OLCRAREG EQU   @04
OLDREG   EQU   @05
WRKA     EQU   @05
REG5     EQU   @05
OLDCTREG EQU   @05
DYREG    EQU   @05
OLODDREG EQU   @05
NWEVNREG EQU   @06
NEWREG   EQU   @06
NWSRBREG EQU   @06
NWCRAREG EQU   @06
CURRQREG EQU   @06
WRKB     EQU   @06
PABMPSTA EQU   @06
NEWCTREG EQU   @07
SMPABREG EQU   @07
NWODDREG EQU   @07
DQDSWREG EQU   @08
QCKSWREG EQU   @08
SRDSWREG EQU   @08
EQDSWREG EQU   @08
SRBSWREG EQU   @08
CRASWREG EQU   @08
CURPBREG EQU   @09
SVPABREG EQU   @09
FRRPREG  EQU   @09
REG9     EQU   @09
EXSWREG  EQU   @10
MPSTREG  EQU   @11
BASEREG  EQU   @12
POSTPBSW EQU   @12
SRBREG   EQU   @13
CRRREG   EQU   @13
CRAREG   EQU   @13
REG14    EQU   @14
SFLREG   EQU   @14
BKPABREG EQU   @15
VCVTREG  EQU   @15
REG15    EQU   @15
PABENREG EQU   @15
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR06F   EQU   @06
GPR06P   EQU   @06
GPR07F   EQU   @07
GPR07P   EQU   @07
GPR08F   EQU   @08
GPR08P   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR15F   EQU   @15
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
ATCLCPTR EQU   1032
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSPTR  EQU   0
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
FRREPTR  EQU   0
SRBSECT  EQU   0
SRBID    EQU   SRBSECT
SRBFLNK  EQU   SRBSECT+4
SRBASCB  EQU   SRBSECT+8
SRBFLC   EQU   SRBSECT+12
SRBPASID EQU   SRBFLC+2
SRBEP    EQU   SRBSECT+20
SRBRMTR  EQU   SRBSECT+24
SRBPARM  EQU   SRBSECT+28
SRBPTR   EQU   0
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABCHNGP EQU   PABCHAIN+1
PABOFFST EQU   ISTPAB+8
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABAPYP  EQU   PABFLAGS
PABSSN   EQU   PABFLAGS
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
PABRPHA  EQU   PABRPHFG+1
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00032 EQU   LOKCHNG+2
ISTDYPAB EQU   0
DYPTSKID EQU   ISTDYPAB+8
DYPPAB   EQU   ISTDYPAB+16
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRLCRA EQU   RPHFLGB
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSMRQ  EQU   ATCCOM+180
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00043 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP32  EQU   ATCAOSM+28
ATCAP57  EQU   ATCAOSM+48
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCCRA   EQU   ATCAOSM+280
ATCCRAQ  EQU   ATCCRA
ATCCRACN EQU   ATCCRA+4
ATCCRAAC EQU   ATCCRACN+2
ATCSRB   EQU   ATCAOSM+288
ATCSRBQ  EQU   ATCSRB
ATCSRBCN EQU   ATCSRB+4
ATCSRBAC EQU   ATCSRBCN+2
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00045 EQU   ATCAOSM+332
ATCABEN  EQU   @NM00045
ATCVTFLG EQU   ATCAOSM+392
ATCAP56  EQU   ATCAOSM+524
ATCAP62  EQU   ATCAOSM+532
ATCAP66  EQU   ATCAOSM+536
ATCAP83  EQU   ATCAOSM+548
ATCZFLAG EQU   ATCAOSM+588
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTAPCRR EQU   0
APCHDRSV EQU   ISTAPCRR
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APCPSTA  EQU   ISTAPCRR+20
APCRTRN  EQU   ISTAPCRR+28
APCFRRPM EQU   ISTAPCRR+40
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APC31FLG EQU   ISTAPCRR+132
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTPST   EQU   0
PSTRQFGA EQU   ISTPST+8
PSTRQUE  EQU   PSTRQFGA
PSTFLGA  EQU   PSTRQFGA+4
PSTABINP EQU   PSTFLGA
PSTMPSTP EQU   ISTPST+20
PSTDMPS  EQU   ISTPST+132
ISTMPST  EQU   0
MPSRSV07 EQU   ISTMPST+4
MPSRQUE  EQU   ISTMPST+8
MPSFLGA  EQU   ISTMPST+12
MPSSRBO  EQU   MPSFLGA
MPSCRAO  EQU   MPSFLGA
MPSASID  EQU   MPSFLGA+2
MPSCRA   EQU   ISTMPST+24
MPSCRACT EQU   MPSCRA+4
MPSSRB   EQU   ISTMPST+32
MPSSRBCT EQU   MPSSRB+4
MPSCRPL  EQU   ISTMPST+40
MPSRPLCT EQU   MPSCRPL+4
MPSSRB55 EQU   ISTMPST+48
MPSSMRPH EQU   ISTMPST+52
MPSSMPAB EQU   ISTMPST+56
MPSASCB  EQU   ISTMPST+120
MPSSYSRT EQU   ISTMPST+132
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
LCPBPTR  EQU   0
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRARPH   EQU   ISTCRA+52
CRAPSS   EQU   ISTCRA+160
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
CRACHAIN EQU   ISTCRA+928
APC32    EQU   0
APC57    EQU   0
SIXWORDS EQU   0
WORD0    EQU   SIXWORDS
WORD1    EQU   SIXWORDS+4
FMZL0024 EQU   0
CMZ0048A EQU   0
CMZ0048  EQU   CMZ0048A+1
FMZL0059 EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTLSMQ  EQU   CVTS01+268
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
FLC      EQU   PSA
SRB      EQU   SRBSECT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00067 EQU   CMZ0048A
@NM00064 EQU   SIXWORDS+8
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRAPROCR EQU   ISTCRA+312
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00063 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00062 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00061 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00060 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00059 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
MPSSRB1  EQU   ISTMPST+172
MPSSAVE  EQU   ISTMPST+140
MPSMQLBP EQU   ISTMPST+136
MPSQEL   EQU   ISTMPST+128
MPSDBTBL EQU   ISTMPST+124
MPSTPPAB EQU   ISTMPST+88
MPSRPLAC EQU   MPSRPLCT+2
MPSRPLRC EQU   MPSRPLCT
MPSCRPLQ EQU   MPSCRPL
MPSSRBAC EQU   MPSSRBCT+2
MPSSRBRC EQU   MPSSRBCT
MPSSRBQ  EQU   MPSSRB
MPSCRAAC EQU   MPSCRACT+2
MPSCRARC EQU   MPSCRACT
MPSCRAQ  EQU   MPSCRA
MPSMPSTP EQU   ISTMPST+20
MPSPSTCT EQU   ISTMPST+16
MPSRSV02 EQU   MPSFLGA+1
MPSPSTAB EQU   MPSFLGA
MPSRSV01 EQU   MPSFLGA
MPSTPBU  EQU   MPSFLGA
MPMEMTRM EQU   MPSFLGA
MPSAUTH  EQU   MPSFLGA
MPSRQUEG EQU   MPSRQUE
MPSTSOIR EQU   MPSRSV07
MPSTSOIW EQU   MPSRSV07
MPSID    EQU   ISTMPST
PSTDRDYQ EQU   PSTDMPS+1
@NM00058 EQU   PSTDMPS
PSTDGATE EQU   PSTDMPS
PSTDEBP  EQU   ISTPST+128
PSTSAVE  EQU   ISTPST+96
PSTSMDYP EQU   ISTPST+64
PSTCRRS  EQU   ISTPST+60
PSTCRR1  EQU   ISTPST+56
PSTIQE22 EQU   ISTPST+52
PSTIQE21 EQU   ISTPST+48
PSTIQE12 EQU   ISTPST+44
PSTIQE11 EQU   ISTPST+40
PSTUEQ   EQU   ISTPST+36
PSTNSSQ  EQU   ISTPST+32
PSTPSSQ  EQU   ISTPST+28
PSTACBCT EQU   ISTPST+24
PSTTCBA  EQU   ISTPST+16
PSTRSV08 EQU   PSTFLGA+1
PSTDMPC  EQU   PSTFLGA+1
PSTABEND EQU   PSTABINP
PSTAUTH  EQU   PSTFLGA
PSTSMCU  EQU   PSTFLGA
PSTSMQR  EQU   PSTFLGA
PSTIRBU2 EQU   PSTFLGA
PSTIRBU1 EQU   PSTFLGA
PSTUERN  EQU   PSTFLGA
PSTSSRN  EQU   PSTFLGA
PSTRQUEA EQU   PSTRQUE+1
PSTRSV07 EQU   PSTRQUE
PSTRSV06 EQU   PSTRQUE
PSTRSV05 EQU   PSTRQUE
PSTRSV04 EQU   PSTRQUE
PSTRSV03 EQU   PSTRQUE
PSTRSV02 EQU   PSTRQUE
PSTRSV01 EQU   PSTRQUE
PSTRQFLG EQU   PSTRQUE
PSTCHAIN EQU   ISTPST+4
@NM00057 EQU   ISTPST+2
PSTLNGTH EQU   ISTPST+1
PSTTYPE  EQU   ISTPST
@NM00056 EQU   ISTAPCRR+137
@NM00055 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00054 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00053 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00052 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCRESCH EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00051 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCSSTSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCTCBA  EQU   ISTAPCRR+24
@NM00050 EQU   APCRFLG+1
APC31R   EQU   APCRFLG
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00049 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAPC59 EQU   ATCAOSM+528
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00048 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00047 EQU   ATCAOSM+333
@NM00046 EQU   @NM00045
ATCSNUF  EQU   @NM00045
ATCOPKL  EQU   @NM00045
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBRC EQU   ATCSRBCN
ATCCRARC EQU   ATCCRACN
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00044 EQU   @NM00043
ATCVTMAB EQU   @NM00043
@NM00042 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00041 EQU   ISTATCVT+819
@NM00040 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00039 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMRS  EQU   ATCCOM+188
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00038 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00037 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00036 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00035 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00034 EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPRSV01 EQU   ISTDYPAB+12
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
LOKXCL   EQU   @NM00032
LOKPRY   EQU   @NM00032
@NM00033 EQU   @NM00032
@NM00031 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
@NM00030 EQU   SRBSECT+40
@NM00029 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPTCB  EQU   SRBFLC+4
SRBCPAFF EQU   SRBFLC
@NM00004 EQU   FRRSFLGS+1
@NM00003 EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00028 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00027 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00026 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00025 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00024 EQU   FLCFSA
@NM00023 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00022 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00021 EQU   FLCIOA
@NM00020 EQU   FLCMCLA+15
@NM00019 EQU   FLCMCLA+14
@NM00018 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00017 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00016 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00015 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00014 EQU   FLCPER
@NM00013 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00012 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00011 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00010 EQU   FLCPIILC
@NM00009 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00008 EQU   FLCSVILC
@NM00007 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00006 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00005 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
SMSPABB  EQU   @RC00290
@RC00288 EQU   @RC00286
@RF00385 EQU   TESTPP1
@RC00385 EQU   @RC00382
CKQUEUEB EQU   @RC00584
@RC00303 EQU   @RC00288
CKDONEB  EQU   @RC00385
@RC00308 EQU   @RC00303
@RC00313 EQU   @RC00308
@ENDDATA EQU   *
         END   ISTAPC55,(C'PLS1849',0603,77266)
