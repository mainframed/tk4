         TITLE 'ISTAICTN -- VS2 API RETURN CODE TRANSLATION ROUTINE    *
                        '
ISTAICTN CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTAICTN  77.157'                                 0001
         DROP  @15
@PROLOG  DS    0H                                                  0002
**********************************************************************
*                        START OF CODE                               *
*          ON ENTRY TO THIS MODULE THE VALUE IN REGISTER 12          *
*          (BASE REGISTER FOR ISTAICPT - THE CALLER) IS SAVED        *
*          IN REGISTER 11.  THIS MODULE USES REGISTER 12 AS          *
*          ITS BASE REGISTER. REGISTERS 3, 4, 5, 6, 7, 10, 11,       *
*          12 AND 14 ARE RESTRICTED IN ORDER TO SAVE THEIR           *
*          CONTENTS FOR RETURN TO AICPT                              *
**********************************************************************
@PSTART  EQU   *
         LR    BASESAVE,CBASE          SAVE CONTENTS OF REG 12
         BALR  CBASE,0                 GET ADDRESSABILITY
         USING *,CBASE                 SET UP CBASE AS BASE REG
         SR    CRETCODE,CRETCODE       CLEAR REG 15 FOR RETURN CODES
*   IF RPLRTNCD=0 THEN              /*                       @Z30PPH3*/
         CLI   RPLRTNCD(CRPLPTR),0                                 0046
         BNE   @RF00046                                            0046
*     DO;                           /*                       @Z30PPH3*/
*       IF RPLFDB2=4 THEN                                          0048
         CLI   RPLFDB2(CRPLPTR),4                                  0048
         BNE   @RF00048                                            0048
*         RPLFDB2='02'X;            /* TO '0002 RETURN CODE  @Z30PPH3*/
         MVI   RPLFDB2(CRPLPTR),X'02'                              0049
*       ELSE                                                       0050
*         GO TO SETVTERR;           /* NO OTHER 00'S SHOULD BE SEEN
*                                                            @Z30PPH3*/
*     END;                          /* END OF RPLRTNCD CHECK @Z30PPH3*/
*   ELSE                            /* RPLRTNCD NOT EQUAL TO ZERO  0052
*                                                            @Z30PPH3*/
*     DO;                           /* RPLRTNCD NOT ZERO TRANSLATE 0052
*                                      CODES                 @Z30PPH3*/
         B     @RC00046                                            0052
@RF00046 DS    0H                                                  0053
*       IF ATEBIT=CBITON×SEVBIT=CBITON×/* IF RPLRTNCD > 3C   @Z30PPGF*/
*           TWOBIT=CBITON×ONEBIT=CBITON/* OR IF NOT MULTIPLE OF 4  0053
*                                                            @Z30PPGF*/
*         THEN                                                     0053
         TM    ATEBIT(CRPLPTR),B'11000011'                         0053
         BNZ   @RT00053                                            0053
*         GOTO SETVTERR;            /* THIS IS A VTAM ERROR  @Z30PPGF*/
*       ELSE                        /* RPLRTNCD IS USEABLE FOR BRANCH
*                                      TABLE                 @Z30PPGF*/
*                                                                  0055
*         /***********************************************************/
*         /*                                                         */
*         /* RPLRTNCD AT THIS TIME SHOULD NEVER BE 0 OR 4. IF SO THIS*/
*         /* IS A VTAM ERROR AND THE BRANCH IS TO SETVTERR   @Z30PPGF*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0055
*         GOTO TRNLABEL;            /* BRANCH TO APPROPRIATE LABEL 0055
*                                      FOR XLATION           @Z30PPGF*/
         LA    @15,BCHPTRS                                         0055
         SLR   @09,@09                                             0055
         IC    @09,RPLRTNCD(,CRPLPTR)                              0055
         ALR   @15,@09                                             0055
         L     @15,LABPTR(,@15)                                    0055
         BR    @15                                                 0055
*CPTRC08:                                                          0056
*       IF RPLFDB2>'B7'X THEN       /* IF NOT IN TABLE       @Z30PPGF*/
CPTRC08  CLI   RPLFDB2(CRPLPTR),183                                0056
         BH    @RT00056                                            0056
*         GOTO SETVTERR;            /* THEN A VTAM ERROR     @Z30PPGF*/
*       ELSE                                                       0058
*         DO;                       /*                       @Z30PPGF*/
*           RFY                                                    0059
*             CODEPTR RSTD;         /*                       @Z30PPGF*/
*           CODEPTR=ADDR(RC08TAB)+(RPLFDB2*2);/* POINT TO TABLE    0060
*                                                            @Z30PPGF*/
         LA    CODEPTR,RC08TAB                                     0060
         SLR   @15,@15                                             0060
         IC    @15,RPLFDB2(,CRPLPTR)                               0060
         ALR   @15,@15                                             0060
         ALR   CODEPTR,@15                                         0060
*           NEWCODE=CODEPTR->NEWRC08;/* GET NEW FEEDBACK CODES     0061
*                                                            @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),NEWRC08(CODEPTR)                 0061
*           RFY                                                    0062
*             CODEPTR UNRSTD;       /*                       @Z30PPGF*/
*           GOTO EXIT;              /*                       @Z30PPGF*/
         B     EXIT                                                0063
*         END;                      /*                       @Z30PPGF*/
*CPTRC0C:                                                          0065
*       IF RPLFDB2='C0'X THEN       /*                       @Z30PPGF*/
CPTRC0C  CLI   RPLFDB2(CRPLPTR),192                                0065
         BNE   @RF00065                                            0065
*         NEWCODE='0400'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00757                         0066
*       ELSE                                                       0067
*         IF RPLFDB2='A0'X THEN     /*                       @Z30PPGF*/
         B     @RC00065                                            0067
@RF00065 CLI   RPLFDB2(CRPLPTR),160                                0067
         BNE   @RF00067                                            0067
*           NEWCODE='0401'X;        /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00759                         0068
*         ELSE                                                     0069
*           IF RPLFDB2='01'X THEN   /*                       @Z30PPGF*/
         B     @RC00067                                            0069
@RF00067 CLI   RPLFDB2(CRPLPTR),1                                  0069
         BNE   @RF00069                                            0069
*             NEWCODE='0402'X;      /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00761                         0070
*           ELSE                                                   0071
*             IF RPLDVUNS=CBITON THEN/* DEVICE UNUSEABLE     @Z30PPGF*/
         B     @RC00069                                            0071
@RF00069 TM    RPLDVUNS(CRPLPTR),B'00010000'                       0071
         BNO   @RF00071                                            0071
*               NEWCODE='0C01'X;    /* YES                   @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00762                         0072
*             ELSE                                                 0073
*               NEWCODE='0C00'X;    /*                       @Z30PPGF*/
         B     @RC00071                                            0073
@RF00071 MVC   NEWCODE(2,CRPLPTR),@CB00763                         0073
*       GOTO EXIT;                  /*                       @Z30PPGF*/
         B     EXIT                                                0074
*CPTRC10:                                                          0075
*       IF RPLFDB2=0 THEN           /*                       @Z30PPGF*/
CPTRC10  CLI   RPLFDB2(CRPLPTR),0                                  0075
         BNE   @RF00075                                            0075
*         NEWCODE='0001'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00765                         0076
*       ELSE                                                       0077
*         IF RPLFDB2='80'X THEN     /*                       @Z30PPGF*/
         B     @RC00075                                            0077
@RF00075 CLI   RPLFDB2(CRPLPTR),128                                0077
         BNE   @RF00077                                            0077
*           NEWCODE='0003'X;        /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00767                         0078
*         ELSE                                                     0079
*           IF RPLFDB2='84'X THEN   /*                       @Z30PPGF*/
         B     @RC00077                                            0079
@RF00077 CLI   RPLFDB2(CRPLPTR),132                                0079
         BNE   @RF00079                                            0079
*             NEWCODE='0004'X;      /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00769                         0080
*           ELSE                    /*                       @ZA18477*/
*             IF RPLFDB2='88'X THEN /*                       @ZA18477*/
         B     @RC00079                                            0081
@RF00079 CLI   RPLFDB2(CRPLPTR),136                                0081
         BNE   @RF00081                                            0081
*               NEWCODE='0C0F'X;    /*                       @ZA18477*/
         MVC   NEWCODE(2,CRPLPTR),@CB00771                         0082
*             ELSE                                                 0083
*               GOTO SETVTERR;      /*                       @Z30PPGF*/
*       GOTO EXIT;                  /*                       @Z30PPGF*/
         B     EXIT                                                0084
*CPTRC14:                                                          0085
*       IF RPLFDB2='01'X THEN       /*                       @Z30PPGF*/
CPTRC14  CLI   RPLFDB2(CRPLPTR),1                                  0085
         BNE   @RF00085                                            0085
*         NEWCODE='0800'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00773                         0086
*       ELSE                                                       0087
*         GOTO SETVTERR;            /*                       @Z30PPGF*/
*       GOTO EXIT;                  /*                       @Z30PPGF*/
         B     EXIT                                                0088
*CPTRC18:                                                          0089
*       IF RPLFDB2=0 THEN           /*                       @Z30PPGF*/
CPTRC18  CLI   RPLFDB2(CRPLPTR),0                                  0089
         BNE   @RF00089                                            0089
*         NEWCODE='0C0A'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00775                         0090
*       ELSE                                                       0091
*         IF RPLFDB2='81'X THEN     /*                       @Z30PPGF*/
         B     @RC00089                                            0091
@RF00089 CLI   RPLFDB2(CRPLPTR),129                                0091
         BNE   @RF00091                                            0091
*           NEWCODE='0C02'X;        /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00777                         0092
*         ELSE                                                     0093
*           GOTO SETVTERR;          /*                       @Z30PPGF*/
*       GOTO EXIT;                  /*                       @Z30PPGF*/
         B     EXIT                                                0094
*CPTRC1C:                                                          0095
*       IF RPLFDB2='81'X THEN       /*                       @Z30PPGF*/
CPTRC1C  CLI   RPLFDB2(CRPLPTR),129                                0095
         BNE   @RF00095                                            0095
*         NEWCODE='0C06'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00779                         0096
*       ELSE                                                       0097
*         IF RPLFDB2>'24'X THEN     /* IF NOT IN TABLE             0097
*                                      @ZM01165,@DA08599,@ZA13656    */
         B     @RC00095                                            0097
@RF00095 CLI   RPLFDB2(CRPLPTR),36                                 0097
         BH    @RT00097                                            0097
*           GOTO SETVTERR;          /* THIS IS A VTAM ERRRO  @Z30PPGF*/
*         ELSE                                                     0099
*           DO;                     /*                       @Z30PPGF*/
*             RFY                                                  0100
*               CODEPTR RSTD;       /*                       @Z30PPGF*/
*             CODEPTR=ADDR(RC1CTAB)+(RPLFDB2*2);/* POINT TO CODE   0101
*                                      TABLE                 @Z30PPGF*/
         LA    CODEPTR,RC1CTAB                                     0101
         SLR   @15,@15                                             0101
         IC    @15,RPLFDB2(,CRPLPTR)                               0101
         ALR   @15,@15                                             0101
         ALR   CODEPTR,@15                                         0101
*             NEWCODE=CODEPTR->NEWRC1C;/* GET NEW CODE FROM TABLE  0102
*                                                            @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),NEWRC1C(CODEPTR)                 0102
*             RFY                                                  0103
*               CODEPTR UNRSTD;     /*                       @Z30PPGF*/
*             GOTO EXIT;            /*                       @Z30PPGF*/
         B     EXIT                                                0104
*           END;                    /*                       @Z30PPGF*/
*       GOTO EXIT;                  /*                       @XM7975K*/
         B     EXIT                                                0106
*CPTRC20:                           /*                       @ZA16222*/
*       NEWCODE='100D'X;            /*                       @ZA16222*/
CPTRC20  MVC   NEWCODE(2,CRPLPTR),@CB00782                         0107
*       GOTO EXIT;                  /*                       @ZA16222*/
         B     EXIT                                                0108
*CPTRC28:                                                          0109
*       IF RPLFDB2='80'X THEN       /*                       @Z30PPGF*/
CPTRC28  CLI   RPLFDB2(CRPLPTR),128                                0109
         BNE   @RF00109                                            0109
*         NEWCODE='100B'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00785                         0110
*       ELSE                                                       0111
*         IF RPLFDB2='90'X THEN     /*                       @Z30PPGF*/
         B     @RC00109                                            0111
@RF00109 CLI   RPLFDB2(CRPLPTR),144                                0111
         BNE   @RF00111                                            0111
*           NEWCODE='100C'X;        /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00787                         0112
*         ELSE                                                     0113
*           GOTO SETVTERR;          /*                       @Z30PPGF*/
*       GOTO EXIT;                  /*                       @Z30PPGF*/
         B     EXIT                                                0114
*CPTRC2C:                                                          0115
*       IF RPLFDB2=0 THEN           /*                       @Z30PPGF*/
CPTRC2C  CLI   RPLFDB2(CRPLPTR),0                                  0115
         BNE   @RF00115                                            0115
*         NEWCODE='1444'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00789                         0116
*       ELSE                                                       0117
*         GOTO SETVTERR;            /*                       @Z30PPGF*/
*       GOTO EXIT;                  /*                       @Z30PPGF*/
         B     EXIT                                                0118
*CPTRC30:                                                          0119
*       IF RPLFDB2=0 THEN           /*                       @Z30PPGF*/
CPTRC30  CLI   RPLFDB2(CRPLPTR),0                                  0119
         BNE   @RF00119                                            0119
*         NEWCODE='0403'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00791                         0120
*       ELSE                                                       0121
*         GOTO SETVTERR;            /*                       @Z30PPGF*/
*       GOTO EXIT;                  /*                       @Z30PPGF*/
         B     EXIT                                                0122
*CPTRC34:                                                          0123
*       IF RPLFDB2=0 THEN           /*                       @Z30PPGF*/
CPTRC34  CLI   RPLFDB2(CRPLPTR),0                                  0123
         BNE   @RF00123                                            0123
*         NEWCODE='0404'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00793                         0124
*       ELSE                                                       0125
*         GOTO SETVTERR;            /*                       @Z30PPGF*/
*       GOTO EXIT;                  /*                       @Z30PPGF*/
         B     EXIT                                                0126
*CPTRC38:                                                          0127
*       IF RPLFDB2=0 THEN           /*                       @Z30PPGF*/
CPTRC38  CLI   RPLFDB2(CRPLPTR),0                                  0127
         BNE   @RF00127                                            0127
*         NEWCODE='0006'X;          /*                       @Z30PPGF*/
         MVC   NEWCODE(2,CRPLPTR),@CB00795                         0128
*       ELSE                                                       0129
*                                                                  0129
*         /***********************************************************/
*         /*                                                         */
*         /* SET VTAM ERROR TYPE FEEDBACK                            */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0129
*SETVTERR:                                                         0129
*         NEWCODE=VTAMERR;          /* A VTAM ERROR OCCURRED @Z30PPGF*/
         B     @RC00127                                            0129
@RF00127 DS    0H                                                  0129
SETVTERR MVC   NEWCODE(2,CRPLPTR),@CB00401                         0129
*     END;                                                         0130
@RC00127 DS    0H                                                  0131
*EXIT:                                                             0131
*   GENERATE REFS(BASESAVE,CRETURN) SETS(CBASE);                   0131
@RC00046 DS    0H                                                  0131
EXIT     DS    0H                                                  0131
***********************************************************************
*                          END OF CODE                                *
*         THE VALUE OF REGISTER 12 IS RESTORED TO THAT OF THE         *
*         BASE REGISTER FOR ISTAICPT.  CONTROL IS THEN RETURNED       *
*         TO THE MODULE ISTAICPT                                      *
***********************************************************************
         LR    CBASE,BASESAVE           RELOAD AICPT BASE REG
         BR    CRETURN                  RETURN TO ISTAICPT
*   END ISTAICTN                                                   0132
*                                                                  0132
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                       */
*                                                                  0132
*       ;                                                          0132
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTAICTN CSECT
         DS    0F
@DATD    DSECT
         DS    0D
@ENDDATD EQU   *
ISTAICTN CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CB00401 DC    X'100A'
@CB00757 DC    X'0400'
@CB00759 DC    X'0401'
@CB00761 DC    X'0402'
@CB00762 DC    X'0C01'
@CB00763 DC    X'0C00'
@CB00765 DC    X'0001'
@CB00767 DC    X'0003'
@CB00769 DC    X'0004'
@CB00771 DC    X'0C0F'
@CB00773 DC    X'0800'
@CB00775 DC    X'0C0A'
@CB00777 DC    X'0C02'
@CB00779 DC    X'0C06'
@CB00782 DC    X'100D'
@CB00785 DC    X'100B'
@CB00787 DC    X'100C'
@CB00789 DC    X'1444'
@CB00791 DC    X'0403'
@CB00793 DC    X'0404'
@CB00795 DC    X'0006'
RC08TAB  DS    CL368
         ORG   RC08TAB
RC0800   DC    X'100A'
RC0801   DC    X'1410'
RC0802   DC    X'1411'
RC0803   DC    X'1412'
RC0804   DC    X'100A'
RC0805   DC    X'1413'
RC0806   DC    X'1414'
RC0807   DC    X'1009'
RC0808   DC    X'1415'
RC0809   DC    X'100A'
RC080A   DC    X'100A'
RC080B   DC    X'100A'
RC080C   DC    X'100A'
RC080D   DC    X'100A'
RC080E   DC    X'1416'
RC080F   DC    X'0C04'
RC0810   DC    X'1417'
RC0811   DC    X'1418'
RC0812   DC    X'1419'
RC0813   DC    X'141A'
RC0814   DC    X'141B'
RC0815   DC    X'141C'
RC0816   DC    X'141D'
RC0817   DC    X'141E'
RC0818   DC    X'141F'
RC0819   DC    X'1420'
RC081A   DC    X'1421'
RC081B   DC    X'1422'
RC081C   DC    X'1423'
RC081D   DC    X'1424'
RC081E   DC    X'1425'
RC081F   DC    X'1426'
RC0820   DC    X'100A'
RC0821   DC    X'1427'
RC0822   DC    X'100A'
RC0823   DC    X'100A'
RC0824   DC    X'1428'
RC0825   DC    X'1429'
RC0826   DC    X'142A'
RC0827   DC    X'142B'
RC0828   DC    X'142C'
RC0829   DC    X'142D'
RC082A   DC    X'142E'
RC082B   DC    X'0005'
RC082C   DC    X'0007'
RC082D   DC    X'144A'
RC082E   DC    X'144B'
RC082F   DC    X'144C'
RC0830   DC    X'100A'
RC0831   DC    X'144D'
RC0832   DC    X'143A'
RC0833   DC    X'143B'
RC0834   DC    X'143C'
RC0835   DC    X'143D'
RC0836   DC    X'143E'
RC0837   DC    X'143F'
RC0838   DC    X'1440'
RC0839   DC    X'1441'
RC083A   DC    X'1442'
RC083B   DC    X'1443'
RC083C   DC    X'10FE'
RC083D   DC    X'1445'
RC083E   DC    X'1446'
RC083F   DC    X'1447'
RC0840   DC    X'144E'
RC0841   DC    X'144F'
RC0842   DC    X'1450'
RC0843   DC    X'1451'
RC0844   DC    X'100A'
RC0845   DC    X'100A'
RC0846   DC    X'1452'
RC0847   DC    X'1453'
RC0848   DC    X'1454'
RC0849   DC    X'1455'
RC084A   DC    X'1000'
RC084B   DC    X'0008'
RC084C   DC    X'0009'
RC084D   DC    X'0C09'
RC084E   DC    X'1456'
RC084F   DC    X'1457'
RC0850   DC    X'1458'
RC0851   DC    X'1459'
RC0852   DC    X'145A'
RC0853   DC    X'100A'
RC0854   DC    X'100A'
RC0855   DC    X'1002'
RC0856   DC    X'100A'
RC0857   DC    X'100A'
RC0858   DC    X'145B'
RC0859   DC    X'100A'
RC085A   DC    X'145C'
RC085B   DC    X'1003'
RC085C   DC    X'100A'
RC085D   DC    X'100A'
RC085E   DC    X'100A'
RC085F   DC    X'145D'
RC0860   DC    X'145E'
RC0861   DC    X'145F'
RC0862   DC    X'1460'
RC0863   DC    X'100A'
RC0864   DC    X'100A'
RC0865   DC    X'100A'
RC0866   DC    X'1461'
RC0867   DC    X'1462'
RC0868   DC    X'1001'
RC0869   DC    X'1448'
RC086A   DC    X'1449'
RC086B   DC    X'1011'
RC086C   DC    X'146C'
RC086D   DC    X'146D'
RC086E   DC    X'146E'
RC086F   DC    X'146F'
RC0870   DC    X'1470'
RC0871   DC    X'1471'
RC0872   DC    X'100A'
RC0873   DC    X'100A'
RC0874   DC    X'100A'
RC0875   DC    X'100A'
RC0876   DC    X'100A'
RC0877   DC    X'100A'
RC0878   DC    X'100A'
RC0879   DC    X'100A'
RC087A   DC    X'100A'
RC087B   DC    X'100A'
RC087C   DC    X'100A'
RC087D   DC    X'100A'
RC087E   DC    X'100A'
RC087F   DC    X'100A'
RC0880   DC    X'100A'
RC0881   DC    X'100A'
RC0882   DC    X'100A'
RC0883   DC    X'100A'
RC0884   DC    X'100A'
RC0885   DC    X'100A'
RC0886   DC    X'100A'
RC0887   DC    X'100A'
RC0888   DC    X'142F'
RC0889   DC    X'100A'
RC088A   DC    X'1430'
RC088B   DC    X'100A'
RC088C   DC    X'100A'
RC088D   DC    X'100A'
RC088E   DC    X'100A'
RC088F   DC    X'100A'
RC0890   DC    X'100A'
RC0891   DC    X'100A'
RC0892   DC    X'100A'
RC0893   DC    X'100A'
RC0894   DC    X'100A'
RC0895   DC    X'100A'
RC0896   DC    X'100A'
RC0897   DC    X'1431'
RC0898   DC    X'100A'
RC0899   DC    X'100A'
RC089A   DC    X'100A'
RC089B   DC    X'100A'
RC089C   DC    X'100A'
RC089D   DC    X'100A'
RC089E   DC    X'100A'
RC089F   DC    X'100A'
RC08A0   DC    X'100A'
RC08A1   DC    X'1004'
RC08A2   DC    X'100A'
RC08A3   DC    X'1432'
RC08A4   DC    X'100A'
RC08A5   DC    X'100A'
RC08A6   DC    X'100A'
RC08A7   DC    X'1433'
RC08A8   DC    X'100A'
RC08A9   DC    X'100A'
RC08AA   DC    X'100A'
RC08AB   DC    X'100A'
RC08AC   DC    X'1434'
RC08AD   DC    X'100A'
RC08AE   DC    X'100A'
RC08AF   DC    X'100A'
RC08B0   DC    X'100A'
RC08B1   DC    X'1435'
RC08B2   DC    X'1436'
RC08B3   DC    X'1437'
RC08B4   DC    X'100A'
RC08B5   DC    X'100A'
RC08B6   DC    X'1438'
RC08B7   DC    X'1439'
         ORG   RC08TAB+368
RC1CTAB  DS    CL74
         ORG   RC1CTAB
RC1C00   DC    X'100A'
RC1C01   DC    X'0C05'
RC1C02   DC    X'0C07'
RC1C03   DC    X'1005'
RC1C04   DC    X'1006'
RC1C05   DC    X'100A'
RC1C06   DC    X'0C0B'
RC1C07   DC    X'1007'
RC1C08   DC    X'1008'
RC1C09   DC    X'0C03'
RC1C0A   DC    X'0C0C'
RC1C0B   DC    X'1003'
RC1C0C   DC    X'100A'
RC1C0D   DC    X'0C0D'
RC1C0E   DC    X'100A'
RC1C0F   DC    X'100A'
RC1C10   DC    X'0C08'
RC1C11   DC    X'100A'
RC1C12   DC    X'100A'
RC1C13   DC    X'100A'
RC1C14   DC    X'1009'
RC1C15   DC    X'100A'
RC1C16   DC    X'100A'
RC1C17   DC    X'100A'
RC1C18   DC    X'100A'
RC1C19   DC    X'100A'
RC1C1A   DC    X'100A'
RC1C1B   DC    X'100A'
RC1C1C   DC    X'100A'
RC1C1D   DC    X'100A'
RC1C1E   DC    X'100A'
RC1C1F   DC    X'100A'
RC1C20   DC    X'1010'
RC1C21   DC    X'100A'
RC1C22   DC    X'100A'
RC1C23   DC    X'100A'
RC1C24   DC    X'100F'
         ORG   RC1CTAB+74
BCHPTRS  DC    2AL4(SETVTERR)
         DC    AL4(CPTRC08)
         DC    AL4(CPTRC0C)
         DC    AL4(CPTRC10)
         DC    AL4(CPTRC14)
         DC    AL4(CPTRC18)
         DC    AL4(CPTRC1C)
         DC    2AL4(SETVTERR)
         DC    AL4(CPTRC28)
         DC    AL4(CPTRC2C)
         DC    AL4(CPTRC30)
         DC    AL4(CPTRC34)
         DC    AL4(CPTRC38)
         DC    AL4(SETVTERR)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ATCVTPTR EQU   @10
NEWCRPL  EQU   @04
NEWCNT   EQU   @05
CREGSAV  EQU   @07
BASESAVE EQU   @11
CBASE    EQU   @12
CRPLPTR  EQU   @06
CRETURN  EQU   @14
CRETCODE EQU   @15
CODEPTR  EQU   @02
MPSTPTR  EQU   @03
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLDVUNS EQU   RPLFDB2
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
LABPTR   EQU   0
TRNLABEL EQU   0
NEWRC08  EQU   0
NEWRC1C  EQU   0
ISTRPL   EQU   0
NEWCODE  EQU   RPLRTNCD
@NM00027 EQU   RPLRTNCD
FIXRTNCD EQU   @NM00027
ATEBIT   EQU   FIXRTNCD
SEVBIT   EQU   FIXRTNCD
TWOBIT   EQU   FIXRTNCD
ONEBIT   EQU   FIXRTNCD
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
FIXFDB2  EQU   @NM00027+1
@NM00028 EQU   FIXRTNCD
RPLSEQNO EQU   RPLOF60+6
@NM00026 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00025 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00024 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00023 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00022 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00021 EQU   RPLRESP
@NM00020 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00019 EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00018 EQU   RPLVTFL1
@NM00017 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00016 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00015 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00014 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLSAV13 EQU   RPLVTEXT+28
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00013 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00012 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00011 EQU   RPLOPT12
@NM00010 EQU   RPLOPT12
@NM00009 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00008 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00007 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
@NM00006 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00005 EQU   RPLRBAR+3
@NM00004 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00003 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00002 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00001 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00048 EQU   SETVTERR
@RT00053 EQU   SETVTERR
@RT00056 EQU   SETVTERR
@RC00071 EQU   EXIT
@RC00069 EQU   EXIT
@RC00067 EQU   EXIT
@RC00065 EQU   EXIT
@RF00081 EQU   SETVTERR
@RC00079 EQU   EXIT
@RC00077 EQU   EXIT
@RC00075 EQU   EXIT
@RF00085 EQU   SETVTERR
@RF00091 EQU   SETVTERR
@RC00089 EQU   EXIT
@RT00097 EQU   SETVTERR
@RC00095 EQU   EXIT
@RF00111 EQU   SETVTERR
@RC00109 EQU   EXIT
@RF00115 EQU   SETVTERR
@RF00119 EQU   SETVTERR
@RF00123 EQU   SETVTERR
@ENDDATA EQU   *
         END   ISTAICTN,(C'PLS2020',0603,77157)
