         TITLE 'ISTAICIR -- VS2   API INTERFACE ROUTINE                *
                        '
ISTAICIR CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTAICIR  78.173'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                          /*@Z40GKD1*/
     ENTRY ISTAICBE
*                                                                  0210
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*/*                                                                  */
*/*    THE USER API MACRO GENERATED REQUEST CODE IS CHECKED TO       */
*/*    DETERMINE THAT IT IS A VALID EXPECTED VTAM REQUEST            */
*/*    THEN  EITHER THE API CHECK ROUTINE IS CALLED                  */
*/*     OR RPL PROCESSING IS CONTINUED FOR THE OTHER VALID REQUESTS  */
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*/*                                                                  */
*                                                                  0211
*   IF RPLID^=RPLCBCDE×             /* TEST RPL FOR VALID ID @ZM40559*/
*       RPLLEN2^=LENGTH(ISTRPL)     /* AND LENGTH            @ZM40559*/
*     THEN                                                         0211
         CLC   RPLID(1,CRPLPTR),RPLCBCDE                           0211
         BNE   @RT00211                                            0211
         CLI   RPLLEN2(CRPLPTR),112                                0211
         BE    @RF00211                                            0211
@RT00211 DS    0H                                                  0212
*     DO;                           /* IF INVALID            @ZM40559*/
*       CREG0=LGERRCD2;             /* INVALID RPL           @ZM40559*/
         LA    CREG0,24                                            0213
*       GO TO LOGICERR;             /* GO TO LERAD EXIT      @ZM40559*/
         B     LOGICERR                                            0214
*     END;                          /*                       @ZM40559*/
*   ELSE                                                           0216
*     ;                             /* ELSE CONTINUE PROC.   @ZM40559*/
@RF00211 DS    0H                                                  0217
*   IF CREQPTR=XECVALUE THEN        /* EXECRPL REQ                   */
         C     CREQPTR,@CF02796                                    0217
         BNE   @RF00217                                            0217
*     CREQPTR=RPLREQ;               /* GET REQ CODE FROM RPL         */
         SLR   CREQPTR,CREQPTR                                     0218
         IC    CREQPTR,RPLREQ(,CRPLPTR)                            0218
*   ELSE                                                           0219
*     IF CHKVALUE=CREQPTR           /* IS IT A CHECK REQ             */
*       THEN                                                       0219
         B     @RC00217                                            0219
@RF00217 C     CREQPTR,@CF00112                                    0219
         BNE   @RF00219                                            0219
*       DO;                         /* YES                           */
*         RFY                                                      0221
*           CREGE UNRSTD;                                          0221
*         IF RPLACTIV^=CBYTEON      /* IS RPL ACTIVE WITH A REQUEST  */
*           THEN                                                   0222
         CLI   RPLACTIV(CRPLPTR),X'FF'                             0222
         BE    @RF00222                                            0222
*           RPLFDB2='04'X;          /* NO, THIS IS AN ERROR          */
         MVI   RPLFDB2(CRPLPTR),X'04'                              0223
*         ELSE                                                     0224
*           DO;                     /* YES                           */
         B     @RC00222                                            0224
@RF00222 DS    0H                                                  0225
*             IF PSATOLD=ZEROPTR    /* ARE WE UNDER A SRB?   @ZM32718*/
*                 &RPLNEXIT=CBITON  /* AND NO EXIT IS SPECIFIED      */
*               THEN                                               0225
         L     @09,PSATOLD                                         0225
         LTR   @09,@09                                             0225
         BNZ   @RF00225                                            0225
         TM    RPLNEXIT(CRPLPTR),B'01000000'                       0225
         BNO   @RF00225                                            0225
*               RPLFDB2='74'X;      /* PROTOCOL ERROR, CAN'T WAIT  0226
*                                      UNDER SRB             @ZA10403*/
         MVI   RPLFDB2(CRPLPTR),X'74'                              0226
*             ELSE                  /* OTHERWISE OKAY TO CHECK THE 0227
*                                      REQUEST                       */
*               CALL ISTAICCK;      /* CHECK MODULE WILL RETURN TO 0227
*                                      CALLER                        */
         B     @RC00225                                            0227
@RF00225 L     @15,@CV00034                                        0227
         BALR  @14,@15                                             0227
*           END;                                                   0228
@RC00225 DS    0H                                                  0229
*         DO;                       /* INVALID CHECK REQUEST         */
@RC00222 DS    0H                                                  0230
*           RPLRTNCD=LGERRCD1;      /* SET ERROR CODE                */
         MVI   RPLRTNCD(CRPLPTR),X'14'                             0230
*           CREG0=LGERRCD1;                                        0231
         LA    CREG0,20                                            0231
*           GOTO LOGICERR;          /* GOTO LERAD EXIT IF PRESENT    */
         B     LOGICERR                                            0232
*         END;                                                     0233
*         RFY                                                      0234
*           CREGE RSTD;                                            0234
*       END;                                                       0235
*   IF CREQPTR<REQLOW×CREQPTR>REQHI THEN/* INVALID REQUEST FOR     0236
*                                      ISTAICIR                      */
@RF00219 DS    0H                                                  0236
@RC00217 C     CREQPTR,@CF02023                                    0236
         BL    @RT00236                                            0236
         C     CREQPTR,@CF02051                                    0236
         BNH   @RF00236                                            0236
@RT00236 DS    0H                                                  0237
*     DO;                                                          0237
*       RFY                                                        0238
*         TPIOTYPE RSTD;                                           0238
*       TPIOTYPE=INVALTPE;          /* SET UP TPIOTYPE SO THAT ERROR
*                                      PATH IS TAKEN                 */
         LA    TPIOTYPE,20                                         0239
*     END;                                                         0240
*   ELSE                                                           0241
*     TPIOTYPE=TPIOTAB(CREQPTR);    /* TRANSLATE REQUEST CODE        */
         B     @RC00236                                            0241
@RF00236 LA    @15,TYPETAB                                         0241
         LR    @06,CREQPTR                                         0241
         AL    @15,@CF03004                                        0241
         SLR   TPIOTYPE,TPIOTYPE                                   0241
         IC    TPIOTYPE,TPIOTAB(@06,@15)                           0241
*   MPSTPTR=PSAAOLD->ASCBASXB->ASXBMPST;/* GET MPST PTR              */
*                                                                  0242
@RC00236 L     @15,PSAAOLD                                         0242
         L     @15,ASCBASXB(,@15)                                  0242
         L     MPSTPTR,ASXBMPST(,@15)                              0242
*   /*****************************************************************/
*   /*                                                               */
*   /* PATH FOR AUTHORIZED USERS RUNNING UNDER AN SRB WITH AN        */
*   /* ASYNCHRONOUS REQUEST OR ANY AUTHORIZED USER RUNNING UNDER A   */
*   /* TCB                                                   @Z40GKD1*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0243
*   RFY                                                            0243
*     CREG5 RSTD;                   /*                       @ZA19513*/
*   CREG5=0;                        /* SAVE                  @ZA19513*/
         SLR   CREG5,CREG5                                         0244
*   IF RPLASY=CBITON                /* RPLASY                @ZA19513*/
*     THEN                                                         0245
         TM    RPLASY(CRPLPTR),B'00001000'                         0245
         BO    @RT00245                                            0245
*     ;                             /* ACROSS                @ZA19513*/
*   ELSE                                                           0247
*     CREG5=CBYTEON;                /* SCHEDULE              @ZA19513*/
         LA    CREG5,255                                           0247
*   IF((RPLBRANC=CBITON)&(PSATOLD^=ZEROPTR))×((PSATOLD=ZEROPTR)&(CREG5=
*       CBYTEOFF))                  /*                       @ZA19513*/
*     THEN                          /*                       @ZA19513*/
*                                                                  0248
@RT00245 TM    RPLBRANC(CRPLPTR),B'00000010'                       0248
         BNO   @GL00004                                            0248
         L     @15,PSATOLD                                         0248
         LTR   @15,@15                                             0248
         BNZ   @RT00248                                            0248
@GL00004 L     @15,PSATOLD                                         0248
         LTR   @15,@15                                             0248
         BNZ   @RF00248                                            0248
         LTR   CREG5,CREG5                                         0248
         BNZ   @RF00248                                            0248
@RT00248 DS    0H                                                  0249
*     /***************************************************************/
*     /*                                                             */
*     /* AUTH TCB OR SRB ASYNCH.                             @VS40394*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0249
*     DO;                           /*                       @Z40GKD1*/
*                                                                  0249
*       /*************************************************************/
*       /*                                                           */
*       /* SCHEDULE AN SRB TO RUN REQUEST. IF SUCCESSFUL, RETURN IS  */
*       /* DIRECT TO USER OR VIA CHECK. IF ERROR, RETURNS TO NSI.    */
*       /*                                                   @Z40GKD1*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0250
*       RFY                                                        0250
*        (TPIOTYPE,                                                0250
*         CREGE) RSTD;              /*                       @Z40GKD1*/
*       IF ATCLCPTR=0               /* IF NO ATCVT THEN      @ZA30266*/
*         THEN                      /* EXIT WITH ERROR       @ZA30266*/
         L     @15,ATCLCPTR                                        0251
         LTR   @15,@15                                             0251
         BNZ   @RF00251                                            0251
*         DO;                       /*                       @ZA30266*/
*           RPLRTNCD=SNERRCD4;      /* SET                   @ZA30266*/
         LA    @15,16                                              0253
         STC   @15,RPLRTNCD(,CRPLPTR)                              0253
*           RPLFDB2=INACTERR;       /* VTAM INACTIVE         @ZA30266*/
         MVI   RPLFDB2(CRPLPTR),X'0D'                              0254
*           CREG0=RPLRTNCD;         /* RETURN CODE           @ZA30266*/
         LR    CREG0,@15                                           0255
*           GOTO SYNADERR;          /*                       @ZA30266*/
         B     SYNADERR                                            0256
*         END;                      /*                       @ZA30266*/
*       CREGD->SRB00=CREGE;         /* SAVE RETURN ADDR IN REG 0 SAVE
*                                      WORD                          */
@RF00251 ST    CREGE,SRB00(,CREGD)                                 0258
*       RFY                                                        0259
*         CREG2 RSTD;                                              0259
*       IPK;                        /* GET CURRENT KEY               */
         IPK                                                       0260
*       CREGD->SRBKEY=CREG2;        /* SAVE CURRENT KEY IN SRBSV     */
         STC   CREG2,SRBKEY(,CREGD)                                0261
*       RFY                                                        0262
*         CREG2 UNRSTD;                                            0262
*       SPKA(0);                    /* CHANGE KEY TO ZERO            */
         SLR   @15,@15                                             0263
         SPKA  0(@15)                                              0263
*       IF TPIOTYPE^>AUANY THEN     /* VALID REQUEST FOR AUTH. PATH  */
         C     TPIOTYPE,@CF02001                                   0264
         BH    @RF00264                                            0264
*         DO;                       /* YES                           */
*           RPLACTIV=CBYTEON;       /* RPL IS ACTIVE WITH A REQUEST  */
         MVI   RPLACTIV(CRPLPTR),X'FF'                             0266
*           RPLREQ=CREQPTR;         /* PUT REQUEST CODE IN RPL       */
         STC   CREQPTR,RPLREQ(,CRPLPTR)                            0267
*           RPLFDBK=0;              /* SET FEEDBACK AREAS TO ZERO    */
         STCM  @15,7,RPLFDBK(CRPLPTR)                              0268
*           RPLFDBK2=0;                                            0269
         ST    @15,RPLFDBK2(,CRPLPTR)                              0269
*           IF RPLNEXIT=CBITON THEN /* IF NO EXIT THEN ECB   @Z40GKD1*/
         TM    RPLNEXIT(CRPLPTR),B'01000000'                       0270
         BNO   @RF00270                                            0270
*             DO;                   /*                       @Z40GKD1*/
*               IF RPLECBIN=CBITON THEN/* IF EXTERNAL ECB    @Z40GKD1*/
         TM    RPLECBIN(CRPLPTR),B'00000001'                       0272
         BNO   @RF00272                                            0272
*                 ECBPOST=CBITOFF;  /* CLEAR POST BIT        @Z40GKD1*/
         L     @15,RPLECB(,CRPLPTR)                                0273
         NI    ECBPOST(@15),B'10111111'                            0273
*             END;                  /*                       @Z40GKD1*/
*           ELSE                                                   0275
*             ;                     /* ELSE NO ECB           @Z40GKD1*/
@RF00270 DS    0H                                                  0276
*           RFY                                                    0276
*             CREGF RSTD;           /*                       @Z40GKD1*/
@RC00270 DS    0H                                                  0277
*           RPLAUTUS=CBITON;        /* INDICATE AUTH. USER           */
         OI    RPLAUTUS+16(CRPLPTR),B'00100000'                    0277
*           RFY                                                    0278
*            (OLDSRB,                                              0278
*             OLDCNT,                                              0278
*             NEWSRB,                                              0278
*             NEWCNT,                                              0278
*             SRBPTR,                                              0278
*             CREGB) RSTD;                                         0278
*           RFY                                                    0279
*             ATCVTPTR RSTD;        /* DCR 4214                      */
*           RFY                                                    0280
*             ISTATCVT BASED(ATCVTPTR);/* DCR4214                    */
*           DO;                     /* LISATCVT                    0281
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*             ATCVTPTR=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0282
*           END;                    /* LISATCVT DCR4214              */
*           OLDSRB=ATCSRBQ;         /* GET PTR TO 1ST SRB ON ATCVT   */
         L     OLDSRB,ATCSRBQ(,ATCVTPTR)                           0284
*           OLDCNT=ATCSRBCN;        /* GET CURRENT COUNT WORD ON   0285
*                                      ATCVT                         */
         L     OLDCNT,ATCSRBCN(,ATCVTPTR)                          0285
*DQSRBLP:                                                          0286
*           IF ATCSRBAC>0 THEN      /* ANY SRB ON ATCVT DCR4214      */
DQSRBLP  CLC   ATCSRBAC(2,ATCVTPTR),@CH00039                       0286
         BNH   @RF00286                                            0286
*             DO;                   /* YES                           */
*               NEWCNT=OLDCNT-1;    /* SET UP NEW AVAIL. CNT         */
         LR    NEWCNT,OLDCNT                                       0288
         BCTR  NEWCNT,0                                            0288
*               NEWSRB=OLDSRB->SRBFLNK;/* SET UP NEW SRB ADDR        */
         L     NEWSRB,SRBFLNK(,OLDSRB)                             0289
*               CDS(OLDSRB,NEWSRB,ATCSRB);/* TRY TO GET 1ST SRB FROM
*                                      ATCVT DCR4214                 */
         CDS   OLDSRB,NEWSRB,ATCSRB(ATCVTPTR)                      0290
*               BC(7,DQSRBLP);      /* TRY AGAIN                     */
         BC    7,DQSRBLP                                           0291
*               SRBPTR=OLDSRB;      /* SRB ADDR IN OLDSRB            */
         LR    SRBPTR,OLDSRB                                       0292
*               CREGF=0;            /* INDICATE SRB GOTTEN           */
         SLR   CREGF,CREGF                                         0293
*               RFY                                                0294
*                 ATCVTPTR UNRSTD;  /* DCR 4214                      */
*             END;                                                 0295
*           ELSE                                                   0296
*             DO;                   /* NO SRB ON ATCVT USE REQSTORE  */
         B     @RC00286                                            0296
@RF00286 DS    0H                                                  0297
*               CREGB=TPIOTYPE;     /* SAVE AROUND MACRO             */
         LR    CREGB,TPIOTYPE                                      0297
*/* REQSTORE CBID(SRB)CLEAR(NO)SAVE(NO)                              */
*                                                                  0298
*               DO;                                                0298
*                                                                  0298
*/* ATBUILD (ISTDYPAB,ISTATCVT,ISTRPH)                               */
*/* END OF ATBUILD                                                   */
*                                                                  0299
*                 DCL                                              0299
*                   GPR01F FIXED(31) REG(01);                      0299
*                 DCL                                              0300
*                   GPR01P PTR(31) REG(01);                        0300
*                 DCL                                              0301
*                   GPR02F FIXED(31) REG(02);                      0301
*                 DCL                                              0302
*                   GPR02P PTR(31) REG(02);                        0302
*                 DCL                                              0303
*                   GPR03F FIXED(31) REG(03);                      0303
*                 DCL                                              0304
*                   GPR03P PTR(31) REG(03);                        0304
*                 DCL                                              0305
*                   GPR04F FIXED(31) REG(04);                      0305
*                 DCL                                              0306
*                   GPR04P PTR(31) REG(04);                        0306
*                 DCL                                              0307
*                   GPR05F FIXED(31) REG(05);                      0307
*                 DCL                                              0308
*                   GPR05P PTR(31) REG(05);                        0308
*                 DCL                                              0309
*                   GPR06F FIXED(31) REG(06);                      0309
*                 DCL                                              0310
*                   GPR06P PTR(31) REG(06);                        0310
*                 DCL                                              0311
*                   GPR07F FIXED(31) REG(07);                      0311
*                 DCL                                              0312
*                   GPR07P PTR(31) REG(07);                        0312
*                 DCL                                              0313
*                   GPR08F FIXED(31) REG(08);                      0313
*                 DCL                                              0314
*                   GPR08P PTR(31) REG(08);                        0314
*                 DCL                                              0315
*                   GPR09F FIXED(31) REG(09);                      0315
*                 DCL                                              0316
*                   GPR09P PTR(31) REG(09);                        0316
*                 DCL                                              0317
*                   GPR10F FIXED(31) REG(10);                      0317
*                 DCL                                              0318
*                   GPR10P PTR(31) REG(10);                        0318
*                 DCL                                              0319
*                   GPR11F FIXED(31) REG(11);                      0319
*                 DCL                                              0320
*                   GPR11P PTR(31) REG(11);                        0320
*                 DCL                                              0321
*                   GPR12F FIXED(31) REG(12);                      0321
*                 DCL                                              0322
*                   GPR12P PTR(31) REG(12);                        0322
*                 DCL                                              0323
*                   GPR13F FIXED(31) REG(13);                      0323
*                 DCL                                              0324
*                   GPR13P PTR(31) REG(13);                        0324
*                 DCL                                              0325
*                   GPR15F FIXED(31) REG(15);                      0325
*                 DCL                                              0326
*                   GPR15P PTR(31) REG(15);                        0326
*                 RFY                                              0327
*                  (GPR02P,                                        0327
*                   GPR03P,                                        0327
*                   GPR04P,                                        0327
*                   GPR15P) RSTD;                                  0327
*                 DO;               /* LISATCVT                    0328
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                   GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0329
*                 END;              /* LISATCVT                      */
*                 GPR02P=GPR15P->ATCBPDA×'80000000'X;              0331
         L     GPR02P,ATCBPDA(,GPR15P)                             0331
         O     GPR02P,@CF02200                                     0331
*                 DCL                                              0332
*                   1 FMZA0007 FIXED(31) STATIC LOCAL,             0332
*                    2 * FIXED(8) INIT(16),                        0332
*                    2 * PTR(24) INIT(0);                          0332
*                 GPR03F=FMZA0007;                                 0333
         L     GPR03F,FMZA0007                                     0333
*                 GPR04F=16;                                       0334
         LA    GPR04F,16                                           0334
*                 GPR15P=GPR15P->ATCSMRQ;                          0335
         L     GPR15P,ATCSMRQ(,GPR15P)                             0335
*                 DCL                                              0336
*                   FMZL0007 BASED(GPR15P) LABEL VALUERANGE(*);    0336
*                 CALL FMZL0007;                                   0337
         BALR  @14,@15                                             0337
*                 RFY                                              0338
*                  (GPR02P,                                        0338
*                   GPR03P,                                        0338
*                   GPR04P,                                        0338
*                   GPR15P) UNRSTD;                                0338
*               END;                /* ******** END OF REQSTORE    0339
*                                      EXPANSION                     */
*               TPIOTYPE=CREGB;                                    0340
         LR    TPIOTYPE,CREGB                                      0340
*               MPSTPTR=PSAAOLD->ASCBASXB->ASXBMPST;/* RELOAD MPST 0341
*                                      PTR                           */
         L     @09,PSAAOLD                                         0341
         L     @09,ASCBASXB(,@09)                                  0341
         L     MPSTPTR,ASXBMPST(,@09)                              0341
*             END;                  /* IF OKAY, SRB ADDR IN REG 3  0342
*                                      WHICH IS SRBPTR               */
*           RFY                                                    0343
*             CREG5 RSTD;           /*                       @ZA19513*/
@RC00286 DS    0H                                                  0344
*           CREG5=0;                /* SAVE                  @ZA19513*/
         SLR   CREG5,CREG5                                         0344
*           IF RPLASY=CBITON        /* RPLASY                @ZA19513*/
*             THEN                                                 0345
         TM    RPLASY(CRPLPTR),B'00001000'                         0345
         BO    @RT00345                                            0345
*             ;                     /* ACROSS                @ZA19513*/
*           ELSE                                                   0347
*             CREG5=CBYTEON;        /* SCHEDULE              @ZA19513*/
         LA    CREG5,255                                           0347
*           IF CREGF>'04'X          /* SRB OBTAINED                  */
*             THEN                                                 0348
@RT00345 C     CREGF,@CF02001                                      0348
         BNH   @RF00348                                            0348
*             DO;                   /* NO, SET ERROR RETURN CODE     */
*               RPLRTNCD=SNERRCD2;  /* INDICATE STORAGE            0350
*                                      FAILURE,RPLFDB2 IS 0          */
         MVI   RPLRTNCD(CRPLPTR),X'08'                             0350
*             END;                                                 0351
*           ELSE                                                   0352
*             DO;                   /* SCHEDULE THE SRB TO RUN       */
         B     @RC00348                                            0352
@RF00348 DS    0H                                                  0353
*               RPLSAV13=ADDR(SRBXSAVE);/* SET UP EXTENDED SAVE AREA
*                                      BASE                          */
*                                                                  0353
         LA    @09,32                                              0353
         ALR   @09,SRBPTR                                          0353
         ST    @09,RPLSAV13(,CRPLPTR)                              0353
*               /*****************************************************/
*               /*                                                   */
*               /* INITIALIZE SRB                                    */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0354
*               RFY                                                0354
*                 ATCVTPTR RSTD;                                   0354
*               DO;                 /* LISATCVT                    0355
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*                 ATCVTPTR=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0356
*               END;                /* LISATCVT                      */
*               SRB=SRB&&SRB;       /* CLEAR SRB                     */
         XC    SRB(44,SRBPTR),SRB(SRBPTR)                          0358
*               SRBID='PS25';       /* INDICATE SRB IS FOR CALLING 0359
*                                      APC25                         */
         MVC   SRBID(4,SRBPTR),@CC02945                            0359
*               SRBASCB=MPSASCB;    /* ASCB ADDRESS                  */
         L     @02,MPSASCB(,MPSTPTR)                               0360
         ST    @02,SRBASCB(,SRBPTR)                                0360
*               SRBEP=ADDR(ISTAICBE);/* ROUTINE TO GET CONTROL       */
         LA    @02,ISTAICBE                                        0361
         ST    @02,SRBEP(,SRBPTR)                                  0361
*               SRBPARM=CRPLPTR;    /* RPL ADDR                      */
         ST    CRPLPTR,SRBPARM(,SRBPTR)                            0362
*               SRBRMTR=ATCAP84;    /* RECOVERY ROUTINE              */
         L     @02,ATCAP84(,ATCVTPTR)                              0363
         ST    @02,SRBRMTR(,SRBPTR)                                0363
*               SRBPASID=MPSASID;   /* ASID                          */
         MVC   SRBPASID(2,SRBPTR),MPSASID(MPSTPTR)                 0364
*               SRBTPTYP=TPIOTYPE;  /* SAVE TPIOTYPE IN SRB          */
         STC   TPIOTYPE,SRBTPTYP(,@09)                             0365
*               SRB01=CRPLPTR;      /* SAVE @ OF RPL IN SRBSV      0366
*                                                            @Z40GKD1*/
         ST    CRPLPTR,SRB01(,@09)                                 0366
*               SRBMPST=MPSTPTR;    /* SAVE MPST PTR IN SAVE AREA    */
         ST    MPSTPTR,SRBMPST(,@09)                               0367
*/******THE FOLLOWING LINES MOVED FROM 'CODECHK3' BY OZ29614**********
*                                                                    */
*                                                                  0368
*               /*****************************************************/
*               /*                                                   */
*               /* SET UP RPL PROPERLY FOR SYNCHRONOUS REQUEST       */
*               /* BECAUSE MACRO DOES NOT.                           */
*               /* ***************************************@ZA11980   */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0368
*               IF CREG5=CBYTEON THEN                              0368
         C     CREG5,@CF02810                                      0368
         BNE   @RF00368                                            0368
*                 DO;               /* SYN REQUEST           @ZA29614*/
*                   RPLNEXIT=CBITON;/* NO EXIT TO BE TAKEN   @ZA11980*/
*                   RPLEXIT=CBITOFF;/* NO EXIT AVAILABLE     @ZA11980*/
         OI    RPLNEXIT(CRPLPTR),B'01000000'                       0371
         NI    RPLEXIT(CRPLPTR),B'11011111'                        0371
*                   RPLECB=CZERO4;  /* USE INTERNAL ECB      @ZA11980*/
         SLR   @09,@09                                             0372
         ST    @09,RPLECB(,CRPLPTR)                                0372
*                   RPLECBIN=CBITOFF;/*                      @ZA11980*/
         NI    RPLECBIN(CRPLPTR),B'11111110'                       0373
*                 END;              /*                       @ZA29614*/
*/*******************************THE ABOVE LINES INSERTED BY  @ZA29614
*                                                                    */
*                                                                  0375
*               RFY                                                0375
*                 CRPLSAV RSTD;                                    0375
@RF00368 DS    0H                                                  0376
*               CRPLSAV=CREG1;      /* SAVE REG 1 OVER MACRO CALL    */
         LR    CRPLSAV,CREG1                                       0376
*               CREG1=SRBPTR;       /* PUT SRB ADDR IN REG 1 FOR   0377
*                                      MACRO                         */
         LR    CREG1,SRBPTR                                        0377
*               GEN(SCHEDULE  SRB=(1),SCOPE=LOCAL)                 0378
*               REFS(CVTPTR,CVTLSMQ,CVTMAP,SRBFLNK,SRBSECT);/* SCHED
*                                      CIR BACK END                  */
         SCHEDULE  SRB=(1),SCOPE=LOCAL
*               CREG1=CRPLSAV;      /* RESTORE BASE FOR RPL          */
         LR    CREG1,CRPLSAV                                       0379
*               SPKA(CREGD->SRBKEY);/* SET KEY TO USER KEY   @ZA30156*/
         SLR   @02,@02                                             0380
         IC    @02,SRBKEY(,CREGD)                                  0380
         SPKA  0(@02)                                              0380
*               CREGD->SRB14=CREGD->SRB00;/* RESTORE RETURN ADDR IN
*                                      S/A                   @ZA30156*/
         L     @02,SRB00(,CREGD)                                   0381
         ST    @02,SRB14(,CREGD)                                   0381
*               CREG0=0;            /* CLEAR RETURN CODE REG @ZA30156*/
         SLR   @02,@02                                             0382
         LR    CREG0,@02                                           0382
*               CREGF=0;            /* CLEAR RETURN CODE REG @ZA30156*/
         LR    CREGF,@02                                           0383
*               IF CREG5=CBYTEON THEN/* SYN REQUEST          @ZA30156*/
         C     CREG5,@CF02810                                      0384
         BNE   @RF00384                                            0384
*                 CALL ISTAICCK;    /* WAIT FOR COMPLETION, CHECK  0385
*                                      RETURNS DIRECTLY TO USER    0385
*                                                            @ZA30156*/
         L     @15,@CV00034                                        0385
         BALR  @14,@15                                             0385
*               ELSE                                               0386
*                 LM(CREG2,CREGC,LM2TOC);/* RESTORE REGS     @ZA30156*/
         B     @RC00384                                            0386
@RF00384 LM    CREG2,CREGC,LM2TOC+28(CREGD)                        0386
*               CREGE=CREGD->SRB14; /* RESTORE RETURN REGISTER     0387
*                                                            @ZA30156*/
@RC00384 L     CREGE,SRB14(,CREGD)                                 0387
*               GOTO CREGE->USER;   /* RETURN TO CALLER      @ZA30156*/
         BR    CREGE                                               0388
*               RFY                                                0389
*                 CRPLSAV UNRSTD;                                  0389
*               RFY                                                0390
*                 ATCVTPTR UNRSTD;                                 0390
*             END;                  /* SRB HAS BEEN SCHED            */
*         END;                      /* END OF NORMAL SCHED SRB PATH  */
*       ELSE                                                       0393
*         DO;                       /* INVALID REQUEST FOR AUTH. PATH*/
         B     @RC00264                                            0393
@RF00264 DS    0H                                                  0394
*           RPLRTNCD=LGERRCD1;      /* SET INVALID REQUEST ERROR     */
         MVI   RPLRTNCD(CRPLPTR),X'14'                             0394
*           RPLFDB2=0;                                             0395
         MVI   RPLFDB2(CRPLPTR),X'00'                              0395
*         END;                                                     0396
*       RFY                                                        0397
*         TPIOTYPE UNRSTD;          /*                       @Z40GKD1*/
@RC00264 DS    0H                                                  0398
*       CREG0=0;                    /* ERROR EXIT NOT CALLED YET     */
         SLR   @06,@06                                             0398
         LR    CREG0,@06                                           0398
*       SPKA(CREGD->SRBKEY);        /* SET KEY TO USER KEY           */
         SLR   @02,@02                                             0399
         IC    @02,SRBKEY(,CREGD)                                  0399
         SPKA  0(@02)                                              0399
*       CREGD->SRB14=CREGD->SRB00;  /* RESTORE RETURN ADDRESS IN SAVE
*                                      AREA                          */
         L     @02,SRB00(,CREGD)                                   0400
         ST    @02,SRB14(,CREGD)                                   0400
*       CREGF=RPLRTNCD;             /* PUT RETURN CODE IN REG 15     */
         SLR   CREGF,CREGF                                         0401
         IC    CREGF,RPLRTNCD(,CRPLPTR)                            0401
*       IF CREGF^=0 THEN            /* ERROR RETURN CODE             */
         CR    CREGF,@06                                           0402
         BE    @RF00402                                            0402
*         DO;                       /* YES                           */
*           RPLACTIV=CBYTEOFF;      /* FINISHED WITH RPL             */
         MVI   RPLACTIV(CRPLPTR),X'00'                             0404
*           GO TO CODECHK6;         /* SEE ABOUT ERROR EXIT  @Z40GKD1*/
         B     CODECHK6                                            0405
*         END;                                                     0406
*       ELSE                                                       0407
*         DO;                       /* GOOD RETURN CODE              */
@RF00402 DS    0H                                                  0408
*           IF CREG5=CBYTEON THEN   /* SYN REQUEST           @ZA19513*/
*                                                                  0408
         C     CREG5,@CF02810                                      0408
         BNE   @RF00408                                            0408
*             /*******************************************************/
*             /*                                                     */
*             /* *********FOLLOWING LINES OF CODE MOVED BY           */
*             /* OZ29614************** SET UP RPL PROPERLY BECAUSE   */
*             /* THE MACRO DOES NOT                          @ZA11980*/
*             /* RPLNEXIT = CBITON NO EXIT TO BE TAKEN       @ZA11980*/
*             /* RPLEXIT = CBITOFF NO EXIT AVAILABLE         @ZA11980*/
*             /* RPLECB = CZERO4 USE INTERNAL ECB            @ZA11980*/
*             /* RPLECBIN = CBITOFF                          @ZA11980*/
*             /* *****************************************************/
*             /* **@@ZA29614                                         */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0409
*             CALL ISTAICCK;        /* WAIT FOR COMPLETION, CHECK  0409
*                                      RETURNS DIRECTLY TO USER    0409
*                                                            @Z40GKD1*/
         L     @15,@CV00034                                        0409
         BALR  @14,@15                                             0409
*           ELSE                                                   0410
*                                                                  0410
*             /*******************************************************/
*             /*                                                     */
*             /* RESTORE REGS RETURN TO CALLER                       */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0410
*             LM(CREG2,CREGC,LM2TOC);                              0410
         B     @RC00408                                            0410
@RF00408 LM    CREG2,CREGC,LM2TOC+28(CREGD)                        0410
*           CREGE=CREGD->SRB14;                                    0411
@RC00408 L     CREGE,SRB14(,CREGD)                                 0411
*           GOTO CREGE->USER;       /*                       @Z40GKD1*/
         BR    CREGE                                               0412
*         END;                                                     0413
*       RFY                                                        0414
*        (TPIOTYPE) UNRSTD;         /*                       @ZM41309*/
*     END;                          /*                       @Z40GKD1*/
*   ELSE                                                           0416
*     IF PSATOLD=ZEROPTR THEN       /* MUST BE SYNCHRONOUS SRB     0416
*                                      REQUEST               @Z40GKD1*/
@RF00248 SLR   @06,@06                                             0416
         C     @06,PSATOLD                                         0416
         BNE   @RF00416                                            0416
*       DO;                         /*                       @Z40GKD1*/
*                                                                  0417
*         /***********************************************************/
*         /*                                                         */
*         /* PATH FOR AUTHORIZED USERS WITH A SYNCHRONOUS RPL REQUEST*/
*         /* RUNNING UNDER AN SRB                                    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0418
*         RFY                                                      0418
*          (TPIOTYPE,                                              0418
*           CREGE) RSTD;            /*                       @Z40GKD1*/
*         IF ATCLCPTR=0             /* IF NO ATCVT THEN      @ZA30266*/
*           THEN                    /* EXIT WITH ERROR       @ZA30266*/
         C     @06,ATCLCPTR                                        0419
         BNE   @RF00419                                            0419
*           DO;                     /*                       @ZA30266*/
*             RPLRTNCD=SNERRCD4;    /* SET                   @ZA30266*/
         LA    @09,16                                              0421
         STC   @09,RPLRTNCD(,CRPLPTR)                              0421
*             RPLFDB2=INACTERR;     /* VTAM INACTIVE         @ZA30266*/
         MVI   RPLFDB2(CRPLPTR),X'0D'                              0422
*             CREG0=RPLRTNCD;       /* RETURN CODE           @ZA30266*/
         LR    CREG0,@09                                           0423
*             GOTO SYNADERR;        /*                       @ZA30266*/
         B     SYNADERR                                            0424
*           END;                    /*                       @ZA30266*/
*         CREGD->SRB00=CREGE;       /* SAVE RETURN ADDR IN REG 0 SAVE
*                                      WORD                          */
@RF00419 ST    CREGE,SRB00(,CREGD)                                 0426
*         RFY                                                      0427
*           CREG2 RSTD;                                            0427
*         IPK;                      /* GET CURRENT KEY               */
         IPK                                                       0428
*         CREGD->SRBKEY=CREG2;      /* SAVE CURRENT KEY IN SRBSV     */
         STC   CREG2,SRBKEY(,CREGD)                                0429
*         RFY                                                      0430
*           CREG2 UNRSTD;                                          0430
*         SPKA(0);                  /* CHANGE KEY TO ZERO            */
         SLR   @09,@09                                             0431
         SPKA  0(@09)                                              0431
*         RPLSAV13=CREGD;           /* SAVE SAVE AREA ADDR           */
         ST    CREGD,RPLSAV13(,CRPLPTR)                            0432
*         RPLACTIV=CBYTEON;         /* RPL IS ACTIVE WITH A REQUEST  */
         MVI   RPLACTIV(CRPLPTR),X'FF'                             0433
*         RPLREQ=CREQPTR;           /* PUT REQUEST CODE IN RPL       */
         STC   CREQPTR,RPLREQ(,CRPLPTR)                            0434
*         RPLFDBK=0;                /* SET FEEDBACK AREAS TO ZERO    */
         STCM  @09,7,RPLFDBK(CRPLPTR)                              0435
*         RPLFDBK2=0;                                              0436
         ST    @09,RPLFDBK2(,CRPLPTR)                              0436
*         RPLAUTUS=CBITON;          /* INDICATE AUTHORIZED USER      */
         OI    RPLAUTUS+16(CRPLPTR),B'00100000'                    0437
*         GOTO BCHLAB1;             /* TAKE PATH BASED ON TPIO     0438
*                                      FUNCTION TYPE                 */
         LA    @09,BCHTAB1                                         0438
         ALR   @09,TPIOTYPE                                        0438
         L     @09,BCHPTR1(,@09)                                   0438
         BR    @09                                                 0438
*RUNERR:                                                           0439
*         RPLRTNCD=LGERRCD1;        /* SET ERROR CODE, RPLFDB2 IS 0  */
RUNERR   MVI   RPLRTNCD(CRPLPTR),X'14'                             0439
*         CREGE=ADDR(CODECHK1);     /* SET REG 14 SO ADDRESSIBILITY
*                                      LOGIC WILL WORK               */
         LA    CREGE,CODECHK1                                      0440
*         GOTO CODECHK1;                                           0441
         B     CODECHK1                                            0441
*RUNSPANY:                                                         0442
*         IF RPLNODE=CBITON THEN                                   0442
RUNSPANY TM    RPLNODE(CRPLPTR),B'00000010'                        0442
         BNO   @RF00442                                            0442
*           CREQPTR=ANYOPT;         /* SET ON ANY OPTION             */
         L     CREQPTR,@CF02214                                    0443
*         ELSE                                                     0444
*RUNSP:                                                            0444
*           IF CREQPTR='25'X THEN   /* IF SESSIONC REQ.      @Z40GKD1*/
         B     @RC00442                                            0444
@RF00442 DS    0H                                                  0444
RUNSP    C     CREQPTR,@CF02951                                    0444
         BNE   @RF00444                                            0444
*             CREQPTR=SCOPT;        /* SET ON SESSIONC OPTION      0445
*                                                            @Z40GKD1*/
         L     CREQPTR,@CF02218                                    0445
*           ELSE                                                   0446
*             CREQPTR=SPOPT;        /* SET ON SPECIFIC OPTION      0446
*                                                            @Z40GKD1*/
         B     @RC00444                                            0446
@RF00444 SLR   CREQPTR,CREQPTR                                     0446
*         CREQPTR=CREQPTR×RPLDACB->ACBDEB;/* PLUS DEB PTR            */
@RC00444 DS    0H                                                  0447
@RC00442 L     @09,RPLDACB(,CRPLPTR)                               0447
         L     @09,ACBDEB-1(,@09)                                  0447
         LA    @09,0(,@09)                                         0447
         OR    CREQPTR,@09                                         0447
*         RFY                                                      0448
*           ATCVTPTR RSTD;                                         0448
*         DO;                       /* LISATCVT                    0449
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*           ATCVTPTR=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0450
*         END;                      /* LISATCVT                      */
*                                                                  0451
*         /***********************************************************/
*         /*                                                         */
*         /* PURGE ALL FRR ROUTINES THEN ADD APC66 FRR               */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0452
*         RFY                                                      0452
*          (CREG2,                                                 0452
*           CREGE,                                                 0452
*           CREGF) RSTD;                                           0452
*         CREG2=ATCAP66;            /* SET UP FRR ROUTINE ADDRESS    */
         L     CREG2,ATCAP66(,ATCVTPTR)                            0453
*         GEN REFS(PSACSTK,FRRSCURR,FRRS,FRRSEMP,FRRSELEN,FRRSLAST,
*             FRRSENTR,FRRSPARM,PSALSFCC,FRRSFRRA) SETS(CREG2,CREGE,
*             CREGF);                                              0454
          SETFRR P,WRKREGS=(CREGE,CREGF)
          SETFRR A,FRRAD=(CREG2),PARMAD=(CREGE),WRKREGS=(CREGE,CREGF)
*         CREGE->R66MPSTW=MPSTPTR;  /* PUT MPST ADDR IN FRR PARM LIST*/
         ST    MPSTPTR,R66MPSTW(,CREGE)                            0455
*         CREGE->R66RPL=CRPLPTR;    /* PUT RPL ADDR IN PARM LIST     */
         ST    CRPLPTR,R66RPL(,CREGE)                              0456
*         CREGE->R66RTRYW=ADDR(CODECHK1);/* RETRY ADDRESS            */
         LA    @09,CODECHK1                                        0457
         ST    @09,R66RTRYW(,CREGE)                                0457
*         RFY                                                      0458
*          (CREG2,                                                 0458
*           CREGE,                                                 0458
*           CREGF) UNRSTD;                                         0458
*         CALL ISTAPC25;            /* CALL AUTH ENTRY PSS           */
         L     @15,ATCAPC25(,ATCVTPTR)                             0459
         BALR  @14,@15                                             0459
*         RFY                                                      0460
*          (ATCVTPTR,                                              0460
*           TPIOTYPE) UNRSTD;                                      0460
*                                                                  0460
*         /***********************************************************/
*         /*                                                         */
*         /* RE ESTABLISH BASE REGISTER SINCE APC25 DESTROYS ALL BU  */
*         /* REGS 1 AND 14                                           */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0461
*         RFY                                                      0461
*           CREGE RSTD;                                            0461
*CODECHK1:                                                         0462
*         GEN;                                                     0462
CODECHK1 DS    0H                                                  0462
CIRDIST1 EQU   *-@PSTART          DISPLACEMENT FROM BASE POINT TO HERE
    LR     CREGC,CREGE               GET CURRENT ADDRESS
    LA     CREGE,CIRDIST1            GET DISP FROM BASE POINT
    SR   CREGC,CREGE    PUT BASE VALUE IN BASE REG
*         CREGD=RPLSAV13;           /* GET USER SAVE ADDRESS         */
         L     CREGD,RPLSAV13(,CRPLPTR)                            0463
*         RPLACTIV=CBYTEOFF;        /* MAKE RPL NOT ACTIVE           */
         MVI   RPLACTIV(CRPLPTR),X'00'                             0464
*         CREG0=CREG0-CREG0;        /* DID NOT CALL ERROR EXIT YET   */
         SLR   CREG0,CREG0                                         0465
*         GEN(SETFRR P,WRKREGS=(CREGE,CREGF));/* PURGE FRR ROUTINES  */
         SETFRR P,WRKREGS=(CREGE,CREGF)
*         SPKA(CREGD->SRBKEY);      /* SET KEY TO USER KEY           */
         SLR   @15,@15                                             0467
         IC    @15,SRBKEY(,CREGD)                                  0467
         SPKA  0(@15)                                              0467
*         CREGD->SRB14=CREGD->SRB00;/* RESTORE RETURN ADDRESS IN SAVE
*                                      AREA                          */
         L     @15,SRB00(,CREGD)                                   0468
         ST    @15,SRB14(,CREGD)                                   0468
*         RFY                                                      0469
*           CREGF RSTD;             /*                       @Z40GKD1*/
*         CREGF=RPLRTNCD;           /* SET RETURN CODE IN RETURN CODE
*                                      REG                           */
         SLR   CREGF,CREGF                                         0470
         IC    CREGF,RPLRTNCD(,CRPLPTR)                            0470
*         IF CREGF^=0               /* GOOD RETURN CODE              */
*           THEN                                                   0471
         LTR   CREGF,CREGF                                         0471
         BNZ   @RT00471                                            0471
*           GOTO CODECHK6;          /* NO SEE ABOUT ERROR ROUTINE    */
*         ELSE                                                     0473
*           DO;                                                    0473
*             CREG0=RPLFDB2;        /* PUT REASON CODE IN REG 0      */
*                                                                  0474
         SLR   CREG0,CREG0                                         0474
         IC    CREG0,RPLFDB2(,CRPLPTR)                             0474
*             /*******************************************************/
*             /*                                                     */
*             /* RESTORE REGISTERS                                   */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0475
*             LM(CREG2,CREGC,LM2TOC);                              0475
         LM    CREG2,CREGC,LM2TOC+28(CREGD)                        0475
*             CREGE=CREGD->SRB14;                                  0476
         L     CREGE,SRB14(,CREGD)                                 0476
*             GOTO CREGE->USER;     /*                       @Z40GKD1*/
         BR    CREGE                                               0477
*           END;                                                   0478
*       END;                                                       0479
*     ELSE                          /* NO, NOT UNDER SRB AND NOT BRCH
*                                      ENTERED, SO USE THE SVC PATH  */
*                                                                  0480
*       /*************************************************************/
*       /*                                                           */
*       /* PATH FOR TCB USERS WITHOUT BRANCH =YES. THEREFORE, THE    */
*       /* TPIO SVC WILL BE ISSUED TO GET TO PSS                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0480
*       DO;                                                        0480
@RF00416 DS    0H                                                  0481
*         RFY                                                      0481
*          (CREGE) UNRSTD;          /*                       @Z40GKD1*/
*         RFY                                                      0482
*           TPIOTYPE RSTD;                                         0482
*         IF RPLACTIV=CBYTEON       /* RPL ALREADY ACTIVE WITH     0483
*                                      REQUEST                       */
*           THEN                                                   0483
         CLI   RPLACTIV(CRPLPTR),X'FF'                             0483
         BNE   @RF00483                                            0483
*           DO;                     /* YES, ERROR                    */
*             CREG0=LGERRCD2;       /* LOGIC ERROR , RPL NOT TOUCHED */
         LA    CREG0,24                                            0485
*             GOTO LOGICERR;                                       0486
         B     LOGICERR                                            0486
*           END;                                                   0487
*         ELSE                                                     0488
*           DO;                     /* NOT ACTIVE, GOOD THUS FAR.  0488
*                                      CONTINUE                      */
@RF00483 DS    0H                                                  0489
*             IF CREG5=CBYTEON      /* SYN REQ               @ZA19513*/
*                 &RPLNEXIT=CBITOFF /* AND USER EXIT SPECIFIED       */
*               THEN                                               0489
         C     CREG5,@CF02810                                      0489
         BNE   @RF00489                                            0489
         TM    RPLNEXIT(CRPLPTR),B'01000000'                       0489
         BNZ   @RF00489                                            0489
*               DO;                                                0490
*                                                                  0490
*                 /***************************************************/
*                 /*                                                 */
*                 /* SET UP RPL PROPERLY BECAUSE THE MACRO DOES NOT  */
*                 /*                                         @ZM31162*/
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0491
*                 RPLNEXIT=CBITON;  /* NO EXIT TO BE TAKEN   @ZM31162*/
*                 RPLEXIT=CBITOFF;  /* NO EXIT AVAILABLE     @ZM31162*/
         OI    RPLNEXIT(CRPLPTR),B'01000000'                       0492
         NI    RPLEXIT(CRPLPTR),B'11011111'                        0492
*                 RPLECB=CZERO4;    /* USE INTERNAL ECB      @ZM31162*/
         SLR   @14,@14                                             0493
         ST    @14,RPLECB(,CRPLPTR)                                0493
*                 RPLECBIN=CBITOFF; /*                       @ZM31162*/
         NI    RPLECBIN(CRPLPTR),B'11111110'                       0494
*               END;                                               0495
*             ELSE                                                 0496
*               DO;                                                0496
         B     @RC00489                                            0496
@RF00489 DS    0H                                                  0497
*                 IF RPLECB=CZERO4 THEN/* IF ECB OR EXIT ADDR IS ZERO*/
         L     @14,RPLECB(,CRPLPTR)                                0497
         LTR   @14,@14                                             0497
         BNZ   @RF00497                                            0497
*                   IF RPLEXIT=CBITON THEN                         0498
         TM    RPLEXIT(CRPLPTR),B'00100000'                        0498
         BNO   @RF00498                                            0498
*                     DO;           /* AND EXIT OR                   */
*                       RPLFDB2='02'X;                             0500
         MVI   RPLFDB2(CRPLPTR),X'02'                              0500
*                       GOTO CALLLERR;                             0501
         B     CALLLERR                                            0501
*                     END;                                         0502
*                   ELSE                                           0503
*                     IF RPLECBIN=CBITON/* EXT ECB SPECIFIED         */
*                       THEN                                       0503
@RF00498 TM    RPLECBIN(CRPLPTR),B'00000001'                       0503
         BNO   @RF00503                                            0503
*                       DO;                                        0504
*                         RPLFDB2='03'X;/* THESE ARE ERRORS          */
         MVI   RPLFDB2(CRPLPTR),X'03'                              0505
*CALLLERR:                                                         0506
*                         RPLRTNCD=LGERRCD1;                       0506
CALLLERR MVI   RPLRTNCD(CRPLPTR),X'14'                             0506
*                         CREG0=LGERRCD1;                          0507
         LA    CREG0,20                                            0507
*                         GOTO LOGICERR;                           0508
         B     LOGICERR                                            0508
*                       END;                                       0509
*                     ELSE                                         0510
*                       ;                                          0510
@RF00503 DS    0H                                                  0511
*               END;                /* END OF ERROR CHECKING @ZM31162*/
@RF00497 DS    0H                                                  0512
*             DO;                                                  0512
@RC00489 DS    0H                                                  0513
*               RPLACTIV=CBYTEON;   /* RPL IS ACTIVE WITH A REQUEST  */
         MVI   RPLACTIV(CRPLPTR),X'FF'                             0513
*               RPLREQ=CREQPTR;     /* PUT REQUEST CODE IN RPL       */
         STC   CREQPTR,RPLREQ(,CRPLPTR)                            0514
*               RPLFDBK=0;          /* SET FEEDBACK AREAS TO ZERO    */
         SLR   @14,@14                                             0515
         STCM  @14,7,RPLFDBK(CRPLPTR)                              0515
*               RPLFDBK2=0;                                        0516
         ST    @14,RPLFDBK2(,CRPLPTR)                              0516
*               IF RPLNEXIT=CBITON THEN/* IF NO EXIT THEN ECB      0517
*                                                            @Z40GKD1*/
         TM    RPLNEXIT(CRPLPTR),B'01000000'                       0517
         BNO   @RF00517                                            0517
*                 DO;               /*                       @Z40GKD1*/
*                   IF RPLECBIN=CBITON THEN/* IF EXTERNAL ECB      0519
*                                                            @Z40GKD1*/
         TM    RPLECBIN(CRPLPTR),B'00000001'                       0519
         BNO   @RF00519                                            0519
*                     ECBPOST=CBITOFF;/* CLEAR POST BIT      @Z40GKD1*/
         L     @14,RPLECB(,CRPLPTR)                                0520
         NI    ECBPOST(@14),B'10111111'                            0520
*                 END;              /*                       @Z40GKD1*/
*               ELSE                                               0522
*                 ;                 /* ELSE NO ECB           @Z40GKD1*/
@RF00517 DS    0H                                                  0523
*               GOTO BCHLAB2;       /* SET UP PROPER TPIO OPTION OR
*                                      PROCESS ERROR                 */
@RC00517 LA    @14,BCHTAB2                                         0523
         ALR   @14,TPIOTYPE                                        0523
         L     @14,BCHPTR2(,@14)                                   0523
         BR    @14                                                 0523
*             END;                                                 0524
*           END;                                                   0525
*SVCERR:                                                           0526
*         RPLRTNCD=LGERRCD1;        /* INVALID REQUEST               */
SVCERR   MVI   RPLRTNCD(CRPLPTR),X'14'                             0526
*         CREG0=LGERRCD1;                                          0527
         LA    CREG0,20                                            0527
*         RPLACTIV=CBYTEOFF;        /* FINISHED WITH RPL             */
         MVI   RPLACTIV(CRPLPTR),X'00'                             0528
*         GOTO LOGICERR;                                           0529
         B     LOGICERR                                            0529
*SVCOPEN:                                                          0530
*         CREQPTR=OPENOPT;          /* SET UP OPEN OPTION FOR SVC    */
SVCOPEN  L     CREQPTR,@CF02224                                    0530
*         GOTO SETDEBAD;            /* GO SET UP PTR TO DEB          */
         B     SETDEBAD                                            0531
*SVCSPANY:                                                         0532
*         IF RPLNODE=CBITON THEN    /* ANY REQUEST                   */
SVCSPANY TM    RPLNODE(CRPLPTR),B'00000010'                        0532
         BNO   @RF00532                                            0532
*           CREQPTR=ANYOPT;         /* SET UP ANY TPIO OPTION FOR SVC*/
         L     CREQPTR,@CF02214                                    0533
*         ELSE                                                     0534
*SVCSP:                                                            0534
*           DO;                                                    0534
         B     @RC00532                                            0534
@RF00532 DS    0H                                                  0534
SVCSP    DS    0H                                                  0535
*             IF CREQPTR='25'X THEN /* SESSIONC REQUEST              */
         C     CREQPTR,@CF02951                                    0535
         BNE   @RF00535                                            0535
*               CREQPTR=SCOPT;      /* YES, SETUP SESSIONC TPIO    0536
*                                      OPTION                        */
         L     CREQPTR,@CF02218                                    0536
*             ELSE                  /* MUST BE SPECIFIC REQUEST      */
*               CREQPTR=SPOPT;      /* SET UP SPECIFIC OPTION        */
         B     @RC00535                                            0537
@RF00535 SLR   CREQPTR,CREQPTR                                     0537
*           END;                                                   0538
@RC00535 DS    0H                                                  0539
*SETDEBAD:                                                         0539
*         CREQPTR=CREQPTR×RPLDACB->ACBDEB;/* PUT DEB ADDR IN @ZA19513*/
@RC00532 DS    0H                                                  0539
SETDEBAD L     @14,RPLDACB(,CRPLPTR)                               0539
         L     @14,ACBDEB-1(,@14)                                  0539
         LA    @14,0(,@14)                                         0539
         OR    CREQPTR,@14                                         0539
*         CRPLSAV=CREG1;            /* SAVE REG 1 ACROSS SVC @ZA19930*/
         LR    CRPLSAV,CREG1                                       0540
*         SVC(SVCTPIO);             /* ISSUE TPIO SVC                */
         SVC   124                                                 0541
*         CREG1=CRPLSAV;            /* RESTORE REG 1 AFTER SVC     0542
*                                                            @ZA19930*/
         LR    CREG1,CRPLSAV                                       0542
*         RFY                                                      0543
*           TPIOTYPE UNRSTD;                                       0543
*CODECHK4:                                                         0544
*         CREG0=0;                  /* ERROR EXIT NOT CALLED YET     */
CODECHK4 SLR   @14,@14                                             0544
         LR    CREG0,@14                                           0544
*         IF CREGF^=0               /* ERROR RETURN CODE             */
*           THEN                                                   0545
         CR    CREGF,@14                                           0545
         BE    @RF00545                                            0545
*           DO;                     /* YES                           */
*             RPLACTIV=CBYTEOFF;    /* FINISHED WITH RPL             */
         MVI   RPLACTIV(CRPLPTR),X'00'                             0547
*             IF CREGF=4 THEN                                      0548
         C     CREGF,@CF00048                                      0548
         BNE   @RF00548                                            0548
*               DO;                                                0549
*                 CREG0=LGERRCD2;   /* SET LOGIC ERROR BUT NOT IN RPL*/
         LA    CREG0,24                                            0550
*                 GOTO LOGICERR;                                   0551
         B     LOGICERR                                            0551
*               END;                                               0552
*             ELSE                                                 0553
*               IF CREGF='20'X THEN                                0553
@RF00548 C     CREGF,@CF02965                                      0553
         BNE   @RF00553                                            0553
*                 DO;                                              0554
*                   RPLRTNCD=SNERRCD4;/* VTAM INACTIVE               */
         MVI   RPLRTNCD(CRPLPTR),X'10'                             0555
*                   RPLFDB2='0D'X;                                 0556
         MVI   RPLFDB2(CRPLPTR),X'0D'                              0556
*                 END;                                             0557
*               ELSE                                               0558
*                 IF CREGF='3C'X THEN                              0558
         B     @RC00553                                            0558
@RF00553 C     CREGF,@CF02966                                      0558
         BNE   @RF00558                                            0558
*                   DO;             /* ABENDING                      */
*                     RPLRTNCD=SNERRCD4;                           0560
         MVI   RPLRTNCD(CRPLPTR),X'10'                             0560
*                     RPLFDB2='0E'X;                               0561
         MVI   RPLFDB2(CRPLPTR),X'0E'                              0561
*                   END;                                           0562
*                 ELSE                                             0563
*                   DO;                                            0563
         B     @RC00558                                            0563
@RF00558 DS    0H                                                  0564
*                     RPLRTNCD=SNERRCD2;                           0564
         MVI   RPLRTNCD(CRPLPTR),X'08'                             0564
*                     RPLFDB2=0;                                   0565
         MVI   RPLFDB2(CRPLPTR),X'00'                              0565
*                   END;                                           0566
*             GOTO CODECHK6;        /* SEE ABOUT ERROR EXIT          */
         B     CODECHK6                                            0567
*           END;                                                   0568
*         ELSE                                                     0569
*           DO;                     /* GOOD RETURN CODE              */
@RF00545 DS    0H                                                  0570
*             RFY                                                  0570
*               CREGE RSTD;         /*                       @Z40GKD1*/
*             IF CREG5=0            /* ASYN REQUEST IND. SAVED ACROSS
*                                      SVC                   @ZM41348*/
*               THEN                                               0571
         LTR   CREG5,CREG5                                         0571
         BNZ   @RF00571                                            0571
*               DO;                 /* YES, RETURN TO CALLER         */
*                 LM(CREG2,CREGC,LM2TOC);                          0573
         LM    CREG2,CREGC,LM2TOC+28(CREGD)                        0573
*                 CREGE=CREGD->SRB14;                              0574
         L     CREGE,SRB14(,CREGD)                                 0574
*                 GOTO CREGE->USER; /*                       @Z40GKD1*/
         BR    CREGE                                               0575
*                 RFY                                              0576
*                  (CREGE,                                         0576
*                   CREG5) UNRSTD;  /*                       @ZM41348*/
*               END;                                               0577
*             ELSE                  /* SYN REQUEST, WAIT FOR       0578
*                                      COMPLETION                    */
*               CALL ISTAICCK;      /* CHECK RETURNS DIRECTLY TO USER
*                                                            @Z40GKD1*/
@RF00571 L     @15,@CV00034                                        0578
         BALR  @14,@15                                             0578
*           END;                                                   0579
*       END;                                                       0580
*                                                                  0580
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS ENTERED HERE TO DIRECT THE PATH TO CALL THE   */
*   /* USER ERROR EXIT BASED ON THE RPL RETURN CODE                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0581
*CODECHK6:                                                         0581
*   CREG0=RPLRTNCD;                 /* GET RPL RETURN CODE           */
CODECHK6 SLR   CREG0,CREG0                                         0581
         IC    CREG0,RPLRTNCD(,CRPLPTR)                            0581
*   IF CREG0>'10'X                  /* IS VALUE LOGIC ERROR TYPE     */
*     THEN                                                         0582
         C     CREG0,@CF02801                                      0582
         BNH   @RF00582                                            0582
*     DO;                           /* YES GO TO LOGIC ERROR ROUTINE */
*LOGICERR:                                                         0584
*                                                                  0584
*       /*************************************************************/
*       /*                                                           */
*       /* ON ENTRY REG 0 CONTAINS THE RPLRTNCD OR X'18'. THIS       */
*       /* ROUTINE WILL INVOKE THE USER LOGIC ERROR EXIT IF PRESENT. */
*       /* REG 0 CONTAINS THE FEEDBACK CODE AND REG 15 A FOUR        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0584
*       RFY                                                        0584
*         CACBPTR RSTD;                                            0584
LOGICERR DS    0H                                                  0585
*       RFY                                                        0585
*         CEXLTPTR RSTD;                                           0585
*       CACBPTR=RPLDACB;                                           0586
         L     CACBPTR,RPLDACB(,CRPLPTR)                           0586
*       CEXLTPTR=ACBUEL;                                           0587
         L     @14,ACBUEL(,CACBPTR)                                0587
         LR    CEXLTPTR,@14                                        0587
*       IF ACBUEL=CZERO4×EXLLEN2<20×EXLLERA=CBITOFF×EXLLERP=CZERO4 THEN
         SLR   @06,@06                                             0588
         CR    @14,@06                                             0588
         BE    @RT00588                                            0588
         LH    @14,EXLLEN2(,CEXLTPTR)                              0588
         C     @14,@CF02590                                        0588
         BL    @RT00588                                            0588
         TM    EXLLERA(CEXLTPTR),B'01000000'                       0588
         BZ    @RT00588                                            0588
         ICM   @14,15,EXLLERP(CEXLTPTR)                            0588
         CR    @06,@14                                             0588
         BNE   @RF00588                                            0588
@RT00588 DS    0H                                                  0589
*         CREGF='04'X;              /* SET ERROR RETURN CODE         */
         LA    CREGF,4                                             0589
*       ELSE                                                       0590
*         DO;                                                      0590
*                                                                  0590
         B     @RC00588                                            0590
@RF00588 DS    0H                                                  0591
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*/*   IF A USER SUPPLIED LERAD ROUTINE IS AVAILABLE THEN             */
*/*       THE USER LERAD ROUTINE IS ENTERED                          */
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*                                                                  0591
*           CREGF=EXLLERP;          /* SET THE EXIT ADDRESS          */
         ICM   CREGF,15,EXLLERP(CEXLTPTR)                          0591
*           GENERATE REFS(CREGD,CREGF) SETS(CREG2,CREG3,CREG4,CREG5,
*               CREG6,CREG7,CREG8,CREG9,CREGA,CREGB,CREGC,CREGE);  0592
              LM   CREG2,CREGC,C28(CREGD)
              BALR  CREGE,CREGF
*         END;                                                     0593
*                                                                  0593
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*/*    IF THERE IS NO USER SUPPLIED LERAD ROUTINE OR IF THE USER     */
*/*    SUPPLIED LERAD ROUTINE DECIDED TO RETURN HERE WITH THE SAVE   */
*/*    REGISTER INTACT, THEN CONTROL IS                              */
*/*    RETURNED  TO THE USER MAINLINE PROGRAM AT THE NSI FOLLOWING   */
*/*    THE API REQUEST                                               */
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*                                                                  0594
*       GENERATE REFS(CREGD) SETS(CREG1,CREG2,CREG3,CREG4,CREG5,CREG6,
*           CREG7,CREG8,CREG9,CREGA,CREGB,CREGC,CREGE);            0594
@RC00588 DS    0H                                                  0594
              LM   CREG1,CREGC,C24(CREGD)
              L    CREGE,C12(CREGD)
*       RFY                                                        0595
*         CREGE RSTD;                                              0595
*       GOTO CREGE->USER;           /*                       @Z40GKD1*/
         BR    CREGE                                               0596
*       RFY                                                        0597
*         CACBPTR UNRSTD;                                          0597
*       RFY                                                        0598
*         CEXLTPTR UNRSTD;                                         0598
*     END;                          /* END OF LERAD LOGIC            */
*   ELSE                                                           0600
*     DO;                           /* MUST BE SYNAD ERROR           */
@RF00582 DS    0H                                                  0601
*SYNADERR:                                                         0601
*                                                                  0601
*       /*************************************************************/
*       /*                                                           */
*       /* REG 0 CONTAINS RPLRTNCD ON ENTRY                          */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0601
*       RFY                                                        0601
*         CACBPTR RSTD;                                            0601
SYNADERR DS    0H                                                  0602
*       RFY                                                        0602
*         CEXLTPTR RSTD;                                           0602
*       RFY                                                        0603
*         CREGE UNRSTD;                                            0603
*       CACBPTR=RPLDACB;                                           0604
         L     CACBPTR,RPLDACB(,CRPLPTR)                           0604
*       CEXLTPTR=ACBUEL;                                           0605
         L     @14,ACBUEL(,CACBPTR)                                0605
         LR    CEXLTPTR,@14                                        0605
*       IF ACBUEL=CZERO4×EXLLEN2<15×EXLSYNA=CBITOFF×EXLSYNP=CZERO4 THEN
         SLR   @06,@06                                             0606
         CR    @14,@06                                             0606
         BE    @RT00606                                            0606
         LH    @14,EXLLEN2(,CEXLTPTR)                              0606
         C     @14,@CF00067                                        0606
         BL    @RT00606                                            0606
         TM    EXLSYNA(CEXLTPTR),B'01000000'                       0606
         BZ    @RT00606                                            0606
         ICM   @14,15,EXLSYNP(CEXLTPTR)                            0606
         CR    @06,@14                                             0606
         BNE   @RF00606                                            0606
@RT00606 DS    0H                                                  0607
*         CREGF='04'X;              /* SET ERROR RETURN CODE FOR USER*/
         LA    CREGF,4                                             0607
*       ELSE                                                       0608
*         DO;                                                      0608
         B     @RC00606                                            0608
@RF00606 DS    0H                                                  0609
*           CREGF=EXLSYNP;          /* SET THE EXIT ADDRESS          */
         ICM   CREGF,15,EXLSYNP(CEXLTPTR)                          0609
*           GENERATE REFS(CREGD,CREGF) SETS(CREG2,CREG3,CREG4,CREG5,
*               CREG6,CREG7,CREG8,CREG9,CREGA,CREGB,CREGC,CREGE);  0610
              LM   CREG2,CREGC,C28(CREGD)
              BALR  CREGE,CREGF
*         END;                                                     0611
*                                                                  0611
*/*                                                                  */
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*/*    IF THERE IS NO USER SUPPLIED SYNAD ROUTINE OR IF THE USER     */
*/*    SUPPLIED SYNAD ROUTINE DECIDED TO RETURN HERE WITH THE SAVE   */
*/*    REGISTER INTACT, THEN THE USER REGS1-12,14 ARE RESTORED       */
*/*    PRIOR TO RETURNING TO THE USER MAINLINE PROGRAM AT THE        */
*/*    NSI FOLLOWING THE API REQUEST                                 */
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*/*                                                                  */
*                                                                  0612
*       RFY                                                        0612
*         CREGE RSTD;                                              0612
@RC00606 DS    0H                                                  0613
*       GENERATE REFS(CREGD) SETS(CREG1,CREG2,CREG3,CREG4,CREG5,CREG6,
*           CREG7,CREG8,CREG9,CREGA,CREGB,CREGC,CREGE);            0613
              LM   CREG1,CREGC,C24(CREGD)
              L    CREGE,C12(CREGD)
*       GOTO CREGE->USER;           /*                       @Z40GKD1*/
         BR    CREGE                                               0614
*       RFY                                                        0615
*        (CACBPTR,                                                 0615
*         CREGE) UNRSTD;                                           0615
*       RFY                                                        0616
*         CEXLTPTR UNRSTD;                                         0616
*     END;                          /* END OF SYNAD ERROR LOGIC      */
*                                                                  0617
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC MUST BE LAST DUE TO BASE REGISTER VALUE WHICH IS    */
*   /* DIFFERENT FROM REST OF MODULE. ISTAICBE IS ENTERED UNDER      */
*   /* CONTROL OF AN SRB SCHEDULED BY ISTAICIR MAINLINE OR BY        */
*   /* ISTAPM22 (WHEN APM22 IS INVOKED BY TCAMI FOR FAST PATH SUPPORT*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0618
*ISTAICBE:                                                         0618
*   PROC OPTIONS(NOSAVE,RETREG);                                   0618
ISTAICBE DS    0H                                                  0619
*   GEN(USING  ISTAICBE,CREGC);                                    0619
         USING  ISTAICBE,CREGC
*   RFY                                                            0620
*     CREGE RSTD;                   /*                       @ZM41309*/
*   CREGC=CREGF;                    /* GET NEW BASE VALUE FROM REG 15*/
         LR    CREGC,CREGF                                         0621
*   RFY                                                            0622
*     SRBPTR RSTD;                                                 0622
*   SRBPTR=CREG0;                   /* GET PTR TO SRB                */
         LR    SRBPTR,CREG0                                        0623
*   CREGD=ADDR(SRBXSAVE);           /* PUT SAVE AREA ADDR IN REG   0624
*                                                            @Z40GKD1*/
         LA    CREGD,32                                            0624
         ALR   CREGD,SRBPTR                                        0624
*   RFY                                                            0625
*     SRBXSAVE BASED(CREGD);        /*                       @Z40GKD1*/
*   RFY                                                            0626
*     ATCVTPTR RSTD;                                               0626
*   RFY                                                            0627
*     TPIOTYPE RSTD;                                               0627
*   TPIOTYPE=SRBTPTYP;              /* GET TPIOTYPE FROM SRB         */
         SLR   TPIOTYPE,TPIOTYPE                                   0628
         IC    TPIOTYPE,SRBTPTYP(,CREGD)                           0628
*   MPSTPTR=SRBMPST;                /* GET MPST PTR FROM SAVE AREA   */
         L     MPSTPTR,SRBMPST(,CREGD)                             0629
*   IF ATCLCPTR=0                   /* IF NO ATCVT THEN      @ZA30266*/
*     THEN                          /* EXIT WITH ERROR       @ZA30266*/
         SLR   @09,@09                                             0630
         C     @09,ATCLCPTR                                        0630
         BNE   @RF00630                                            0630
*     DO;                           /*                       @ZA30266*/
*       RPLRTNCD=SNERRCD4;          /* SET                   @ZA30266*/
         LA    @02,16                                              0632
         STC   @02,RPLRTNCD(,CRPLPTR)                              0632
*       RPLFDB2=INACTERR;           /* VTAM INACTIVE         @ZA30266*/
         MVI   RPLFDB2(CRPLPTR),X'0D'                              0633
*       CREG0=RPLRTNCD;             /* RETURN CODE           @ZA30266*/
*                                                                  0634
         LR    CREG0,@02                                           0634
*       /*************************************************************/
*       /*                                                           */
*       /* REG 0 CONTAINS RPLRTNCD ON ENTRY                  @ZA30266*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0635
*       RFY                                                        0635
*         CACBPTR RSTD;             /*                       @ZA30266*/
*       RFY                                                        0636
*         CEXLTPTR RSTD;            /*                       @ZA30266*/
*       RFY                                                        0637
*         CREGE UNRSTD;             /*                       @ZA30266*/
*       CACBPTR=RPLDACB;            /*                       @ZA30266*/
         L     CACBPTR,RPLDACB(,CRPLPTR)                           0638
*       CEXLTPTR=ACBUEL;            /*                       @ZA30266*/
         L     @14,ACBUEL(,CACBPTR)                                0639
         LR    CEXLTPTR,@14                                        0639
*       IF ACBUEL=CZERO4×           /*                       @ZA30266*/
*           EXLLEN2<15×             /*                       @ZA30266*/
*           EXLSYNA=CBITOFF×        /*                       @ZA30266*/
*           EXLSYNP=CZERO4          /*                       @ZA30266*/
*         THEN                                                     0640
         CR    @14,@09                                             0640
         BE    @RT00640                                            0640
         LH    @14,EXLLEN2(,CEXLTPTR)                              0640
         C     @14,@CF00067                                        0640
         BL    @RT00640                                            0640
         TM    EXLSYNA(CEXLTPTR),B'01000000'                       0640
         BZ    @RT00640                                            0640
         ICM   @14,15,EXLSYNP(CEXLTPTR)                            0640
         CR    @09,@14                                             0640
         BNE   @RF00640                                            0640
@RT00640 DS    0H                                                  0641
*         CREGF='04'X;              /* SET ERROR RETURN CODE FOR USER*/
         LA    CREGF,4                                             0641
*       ELSE                                                       0642
*         DO;                       /*                       @ZA30266*/
         B     @RC00640                                            0642
@RF00640 DS    0H                                                  0643
*           CREGF=EXLSYNP;          /* SET THE EXIT ADDRESS          */
         ICM   CREGF,15,EXLSYNP(CEXLTPTR)                          0643
*           GENERATE REFS(CREGD,CREGF) SETS(CREG2,CREG3,CREG4,CREG5,
*               CREG6,CREG7,CREG8,CREG9,CREGA,CREGB,CREGC,CREGE);  0644
              LM   CREG2,CREGC,C28(CREGD)
              BALR  CREGE,CREGF
*         END;                                                     0645
*                                                                  0645
*/*                                                                  */
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*/*    IF THERE IS NO USER SUPPLIED SYNAD ROUTINE OR IF THE USER     */
*/*    SUPPLIED SYNAD ROUTINE DECIDED TO RETURN HERE WITH THE SAVE   */
*/*    REGISTER INTACT, THEN THE USER REGS1-12,14 ARE RESTORED       */
*/*    PRIOR TO RETURNING TO THE USER MAINLINE PROGRAM AT THE        */
*/*    NSI FOLLOWING THE API REQUEST                                 */
*/*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
*/*                                                                  */
*                                                                  0646
*       RFY                                                        0646
*         CREGE RSTD;                                              0646
@RC00640 DS    0H                                                  0647
*       GENERATE REFS(CREGD) SETS(CREG1,CREG2,CREG3,CREG4,CREG5,CREG6,
*           CREG7,CREG8,CREG9,CREGA,CREGB,CREGC,CREGE);            0647
              LM   CREG1,CREGC,C24(CREGD)
              L    CREGE,C12(CREGD)
*       GOTO CREGE->USER;           /*                       @ZA30266*/
         BR    CREGE                                               0648
*       RFY                                                        0649
*        (CACBPTR) UNRSTD;          /*                       @ZA30266*/
*       RFY                                                        0650
*         CEXLTPTR UNRSTD;          /*                       @ZA30266*/
*     END;                          /* END OF CODE FOR APAR ZA30266
*                                                            @ZA30266*/
*   DO;                             /* LISATCVT                    0652
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
@RF00630 DS    0H                                                  0653
*     ATCVTPTR=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0653
*   END;                            /* LISATCVT GET VTAM CVT ADDR    */
*   SRB00=CREGE;                    /* PUT SYSTEM RETURN ADDR IN REG
*                                      ZERO SAVE WORD                */
         ST    CREGE,SRB00(,CREGD)                                 0655
*   RFY                                                            0656
*    (CREG2,                                                       0656
*     CREGE,                                                       0656
*     CREGF) RSTD;                                                 0656
*   CREG2=ATCAP66;                  /* SET UP FRR ROUTINE ADDRESS    */
         L     CREG2,ATCAP66(,ATCVTPTR)                            0657
*   GEN REFS(PSACSTK,FRRSCURR,FRRS,FRRSEMP,FRRSELEN,FRRSLAST,FRRSENTR,
*       FRRSPARM,PSALSFCC,FRRSFRRA) SETS(CREG2,CREGE,CREGF);       0658
          SETFRR A,FRRAD=(CREG2),PARMAD=(CREGE),WRKREGS=(CREGE,CREGF)
*   CREGE->R66MPSTW=MPSTPTR;        /* PUT MPST ADDR IN FRR PARM LIST*/
         ST    MPSTPTR,R66MPSTW(,CREGE)                            0659
*   CREGE->R66RPL=CRPLPTR;          /* PUT WK ELEM. ADDR IN PARM LIST
*                                                            @Z40GKD1*/
         ST    CRPLPTR,R66RPL(,CREGE)                              0660
*   IF RPLID=RPLCBCDE THEN          /* IF WORK ELEM AN RPL   @ZM41324*/
         CLC   RPLID(1,CRPLPTR),RPLCBCDE                           0661
         BNE   @RF00661                                            0661
*     CREGE->R66RTRYW=ADDR(CODECHK5);/* RETRY ADDRESS                */
         LA    @09,CODECHK5                                        0662
         ST    @09,R66RTRYW(,CREGE)                                0662
*   ELSE                            /* OTHERWISE WORK ELEM AN LCPB 0663
*                                                            @ZM41324*/
*     CREGE->R66RTRYW=ADDR(CODECHK7);/* LCPB PATH RETRY      @ZM41324*/
         B     @RC00661                                            0663
@RF00661 LA    @09,CODECHK7                                        0663
         ST    @09,R66RTRYW(,CREGE)                                0663
*   RFY                                                            0664
*    (CREG2,                                                       0664
*     CREGE,                                                       0664
*     CREGF) UNRSTD;                                               0664
@RC00661 DS    0H                                                  0665
*   IF RPLID^=RPLCBCDE THEN         /* IS WORK ELEM AN RPL?  @Z40GKD1*/
         CLC   RPLID(1,CRPLPTR),RPLCBCDE                           0665
         BE    @RF00665                                            0665
*     DO;                           /* NO, MUST BE LCPB FROM TCAMI 0666
*                                      VIA APC22             @Z40GKD1*/
*       CREQPTR=TPIOTYPE;           /* OPTION ALREADY SET UP IN SRB
*                                                            @Z40GKD1*/
         LR    CREQPTR,TPIOTYPE                                    0667
*       SLL(CREQPTR,24);            /* MOVE OPTION TO HIGH ORDER BYTE
*                                                            @Z40GKD1*/
         SLL   CREQPTR,24                                          0668
*       CREQPTR=CREQPTR×SRB01;      /* PUT IN DEB ADDR, SAVED BY   0669
*                                      APC22 IN SRB EXTENDED SAVE  0669
*                                      AREA                  @Z40GKD1*/
         O     CREQPTR,SRB01(,CREGD)                               0669
*       CALL ISTAPC25;              /* GO TO ISTAPC25 TO PROCESS   0670
*                                      REQUEST TPIOS WILL RETURN   0670
*                                      DIRECTLY TO TCAM, UNLESS APC25
*                                      DETECTS AN ERROR AND REJECTS
*                                      THE REQUEST           @Z40GKD1*/
*                                                                  0670
         L     @15,ATCAPC25(,ATCVTPTR)                             0670
         BALR  @14,@15                                             0670
*       /*************************************************************/
*       /*                                                           */
*       /* RE-ESTABLISH BASE REG, SINCE APC25 DESTROYS ALL BUT 1 AND */
*       /* 14 (R13 IS PRESERVED IF TCAM ERROR RETURN)        @Z40GKD1*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0671
*CODECHK7:                                                         0671
*       GEN;                                                       0671
CODECHK7 DS    0H                                                  0671
CIRDIST3 EQU  *-ISTAICBE        DISPLACEMENT FROM BASE POINT
         LR CREGC,CREGE         GET CURRENT ADDRESS
         LA CREGE,CIRDIST3      GET DISPLACEMENT
         SR CREGC,CREGE         PUT BASE VALUE IN BASE REG
*     END;                          /* END LCPB HANDLING     @Z40GKD1*/
*   ELSE                            /* ELSE PROCESS RPL      @Z40GKD1*/
*     DO;                                                          0673
         B     @RC00665                                            0673
@RF00665 DS    0H                                                  0674
*       GOTO BCHLAB3;                                              0674
         LA    @09,BCHTAB3                                         0674
         ALR   @09,TPIOTYPE                                        0674
         L     @09,BCHPTR3(,@09)                                   0674
         BR    @09                                                 0674
*SCHSPANY:                                                         0675
*       IF RPLNODE=CBITON           /* ANY REQ                       */
*         THEN                      /* YES                           */
SCHSPANY TM    RPLNODE(CRPLPTR),B'00000010'                        0675
         BNO   @RF00675                                            0675
*         CREQPTR=ANYOPT;           /* SET UP ANY OPTION FOR APC25   */
         L     CREQPTR,@CF02214                                    0676
*       ELSE                                                       0677
*SCHSP:                                                            0677
*         IF RPLREQ='25'X           /* NOT ANY, MAY BE SESSC @ZM41309*/
*           THEN                                                   0677
         B     @RC00675                                            0677
@RF00675 DS    0H                                                  0677
SCHSP    CLI   RPLREQ(CRPLPTR),37                                  0677
         BNE   @RF00677                                            0677
*           CREQPTR=SCOPT;          /* SET FOR SESSIONC REQUEST    0678
*                                                            @ZM41324*/
         L     CREQPTR,@CF02218                                    0678
*         ELSE                                                     0679
*           CREQPTR=SPOPT;          /* MUST BE SPECIFIC REQUEST    0679
*                                                            @Z40GKD1*/
         B     @RC00677                                            0679
@RF00677 SLR   CREQPTR,CREQPTR                                     0679
*       CREQPTR=CREQPTR×RPLDACB->ACBDEB;/* PUT IN DEB ADDR           */
@RC00677 DS    0H                                                  0680
@RC00675 L     @09,RPLDACB(,CRPLPTR)                               0680
         L     @09,ACBDEB-1(,@09)                                  0680
         LA    @09,0(,@09)                                         0680
         OR    CREQPTR,@09                                         0680
*       CALL ISTAPC25;              /* GO TO ISTAPC25                */
*                                                                  0681
         L     @15,ATCAPC25(,ATCVTPTR)                             0681
         BALR  @14,@15                                             0681
*       /*************************************************************/
*       /*                                                           */
*       /* RE ESTABLISH BASE REG SINCE APC25 DESTROYS ALL BUT 1 AND  */
*       /* 14                                                        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0682
*CODECHK5:                                                         0682
*       GEN;                                                       0682
CODECHK5 DS    0H                                                  0682
CIRDIST2 EQU   *-ISTAICBE   DISPLACEMENT FROM BASE POINT
       LR    CREGC,CREGE    GET CURRENT ADDRESS
       LA    CREGE,CIRDIST2  GET DISP.
       SR    CREGC,CREGE     PUT BASE VALUE IN BASE REG
*       CREGD=RPLSAV13;             /* GET SAVE AREA ADDR    @Z40GKD1*/
         L     CREGD,RPLSAV13(,CRPLPTR)                            0683
*       IF RPLNEXIT=CBITOFF         /* EXIT SPECIFIED                */
*           &RPLEXIT=CBITON THEN                                   0684
         TM    RPLEXIT(CRPLPTR),B'00100000'                        0684
         BNO   @RF00684                                            0684
         TM    RPLNEXIT(CRPLPTR),B'01000000'                       0684
         BNZ   @RF00684                                            0684
*         DO;                       /* YES                           */
*           RPLEXSCH=CBITON;        /* INDICATE EXIT TAKEN           */
         OI    RPLEXSCH(CRPLPTR),B'10000000'                       0686
*           RFY                                                    0687
*            (CREGE,                                               0687
*             NEWSRB,                                              0687
*             NEWCNT,                                              0687
*             OLDSRB,                                              0687
*             OLDCNT,                                              0687
*             ATCVTPTR) RSTD;                                      0687
*           MPSTPTR=CREGD->SRBMPST; /* GET MPST PTR FROM SAVE AREA   */
         L     MPSTPTR,SRBMPST(,CREGD)                             0688
*           RFY                                                    0689
*             ISTATCVT BASED(ATCVTPTR);/* DCR 4214                   */
*           DO;                     /* LISATCVT                    0690
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*             ATCVTPTR=ATCLCPTR;    /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0691
*           END;                    /* LISATCVT DCR4214              */
*           OLDCNT=ATCSRBCN;        /* GET SRB COUNT WORD FROM ATCVT */
         L     OLDCNT,ATCSRBCN(,ATCVTPTR)                          0693
*           OLDSRB=ATCSRBQ;         /* CURRENT SRB ON ATCVT          */
         L     OLDSRB,ATCSRBQ(,ATCVTPTR)                           0694
*           RFY                                                    0695
*             SRBPTR RSTD;                                         0695
*           SRBPTR=CREGD-(LENGTH(SRBSECT)-12);/* GET ADDR OF SRB TO
*                                      BE QUEUED                     */
         LR    SRBPTR,CREGD                                        0696
         SL    SRBPTR,@CF00129                                     0696
*           CREGE=CREGD->SRB00;     /* GET RETURN ADDR FROM SRB      */
         L     CREGE,SRB00(,CREGD)                                 0697
*NQSRBLP1:                                                         0698
*           IF ATCSRBAC>=ATCSRBCT   /* # OF SRB ONATCVT AT LIMIT     */
*             THEN                                                 0698
NQSRBLP1 CLC   ATCSRBAC(2,ATCVTPTR),ATCSRBCT(ATCVTPTR)             0698
         BL    @RF00698                                            0698
*             DO;                   /* YES                           */
*               CREGB=CREGE;        /* SAVE 14 OVER MACRO            */
         LR    CREGB,CREGE                                         0700
*/* RELSTORE BUFADDR(SRBPTR)SAVE(NO)CLEAR(NO)                        */
*                                                                  0701
*               DO;                                                0701
*                                                                  0701
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0702
*                 DCL                                              0702
*                   GPR00F FIXED(31) REG(00);                      0702
*                 DCL                                              0703
*                   GPR00P PTR(31) REG(00);                        0703
*                 DCL                                              0704
*                   GPR14F FIXED(31) REG(14);                      0704
*                 DCL                                              0705
*                   GPR14P PTR(31) REG(14);                        0705
*                 RFY                                              0706
*                  (GPR02P,                                        0706
*                   GPR03P,                                        0706
*                   GPR04P,                                        0706
*                   GPR15P) RSTD;                                  0706
*                 GPR04P=SRBPTR;                                   0707
         LR    GPR04P,SRBPTR                                       0707
*                 DCL                                              0708
*                   1 FMZA0042 FIXED(31) STATIC LOCAL,             0708
*                    2 * FIXED(8) INIT(0),                         0708
*                    2 * PTR(24) INIT(0);                          0708
*                 GPR03F=FMZA0042;                                 0709
         L     GPR03F,FMZA0042                                     0709
*                 DO;               /* LISATCVT                    0710
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*                   GPR15P=ATCLCPTR;/* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0711
*                 END;              /* LISATCVT                      */
*                 GPR02P=GPR15P->ATCBPDA;                          0713
         L     GPR02P,ATCBPDA(,GPR15P)                             0713
*                 GPR15P=GPR15P->ATCSMRS;                          0714
         L     GPR15P,ATCSMRS(,GPR15P)                             0714
*                 DCL                                              0715
*                   FMZL0042 BASED(GPR15P) LABEL VALUERANGE(*);    0715
*                 CALL FMZL0042;                                   0716
         BALR  @14,@15                                             0716
*                 RFY                                              0717
*                  (GPR02P,                                        0717
*                   GPR03P,                                        0717
*                   GPR04P,                                        0717
*                   GPR15P) UNRSTD;                                0717
*               END;                /* *********END OF RELSTORE    0718
*                                      EXPANSION*********            */
*               CREGE=CREGB;                                       0719
         LR    CREGE,CREGB                                         0719
*             END;                                                 0720
*           ELSE                                                   0721
*             DO;                   /* NOT AT LIMIT, PUT ON MPST     */
         B     @RC00698                                            0721
@RF00698 DS    0H                                                  0722
*               SRBFLNK=OLDSRB;     /* CHAIN 1ST SRB TO NEW SRB      */
         ST    OLDSRB,SRBFLNK(,SRBPTR)                             0722
*               NEWCNT=OLDCNT+'00010001'X;/* ADD ONE TO EACH CNT     */
         LR    NEWCNT,OLDCNT                                       0723
         AL    NEWCNT,@CF02992                                     0723
*               NEWSRB=SRBPTR;                                     0724
         LR    NEWSRB,SRBPTR                                       0724
*               CDS(OLDSRB,NEWSRB,ATCSRB);/* TRY TO PUT OM ATCVT   0725
*                                      DCR4214                       */
         CDS   OLDSRB,NEWSRB,ATCSRB(ATCVTPTR)                      0725
*               BC(7,NQSRBLP1);     /* TRY AGAIN                     */
         BC    7,NQSRBLP1                                          0726
*             END;                                                 0727
*           CREGD=0;                                               0728
@RC00698 SLR   CREGD,CREGD                                         0728
*           RFY                                                    0729
*            (SRBPTR,                                              0729
*             NEWSRB,                                              0729
*             NEWCNT,                                              0729
*             OLDSRB,                                              0729
*             OLDCNT,                                              0729
*             ATCVTPTR) UNRSTD;                                    0729
*           GEN(SETFRR P,WRKREGS=(CREGB,CREGF));/* PURGE FRR ROUTINES*/
         SETFRR P,WRKREGS=(CREGB,CREGF)
*           RFY                                                    0731
*             CREGF RSTD;           /*                       @Z40GKD1*/
*           CREGF=RPLECB;           /* GET RPL EXIT                  */
         L     CREGF,RPLECB(,CRPLPTR)                              0732
*           GOTO CREGF->USER;       /* GO TO USER EXIT HE WILL RETURN
*                                      TO SYSTEM VIA REG 14          */
         BR    CREGF                                               0733
*           RFY                                                    0734
*             CREGF UNRSTD;         /*                       @Z40GKD1*/
*         END;                                                     0735
*       ELSE                                                       0736
*         DO;                                                      0736
@RF00684 DS    0H                                                  0737
*           RFY                                                    0737
*            (CREGA,                                               0737
*             CREGB,                                               0737
*             CREG3,                                               0737
*             CREG4) RSTD;                                         0737
*           IF RPLECBIN=CBITON      /* EXTERNAL ECB                  */
*             THEN                                                 0738
         TM    RPLECBIN(CRPLPTR),B'00000001'                       0738
         BNO   @RF00738                                            0738
*             CREG0=RPLECB;         /* YES, GET ADDR OF EXT ECB      */
         L     CREG0,RPLECB(,CRPLPTR)                              0739
*           ELSE                    /* INTERNAL ECB                  */
*             CREG0=ADDR(RPLECB);   /* GET ADDR OF INT ECB           */
         B     @RC00738                                            0740
@RF00738 LA    CREG0,RPLECB(,CRPLPTR)                              0740
*           CREG4=CREGC;                                           0741
@RC00738 LR    CREG4,CREGC                                         0741
*           CREG3=CREGD;            /* SAVE REGS OVER SET LOCK       */
*                                                                  0742
         LR    CREG3,CREGD                                         0742
*           /*********************************************************/
*           /*                                                       */
*           /* SETLOCK DESTROYS REGISTERS 11-14              @Z40GKD1*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0743
*           GEN REFS(PSALITA,FLC);                                 0743
     SETLOCK  OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(LOCAL,ISTAICIR(COD*
               ECHK5))
*           CREGB=CREG0;            /* PUT ECB ADDR IN REG 11 FOR  0744
*                                      POST                          */
         LR    CREGB,CREG0                                         0744
*           CREGA=0;                /* PUT COMPLETION CODE IN REG 10 */
         SLR   CREGA,CREGA                                         0745
*           CALL CVT0PT01;          /* BRANCH TO SYSTEM POST         */
         L     @09,CVTPTR                                          0746
         L     @15,CVT0PT01(,@09)                                  0746
         BALR  @14,@15                                             0746
*           GEN                                                    0747
*(SETLOCK  RELEASE,TYPE=LOCAL,RELATED=(LOCAL,ISTAICIR(CODECHK5)))  0747
*           REFS(PSALITA,FLC);                                     0747
         SETLOCK  RELEASE,TYPE=LOCAL,RELATED=(LOCAL,ISTAICIR(CODECHK5))
*           CREGC=CREG4;            /* RESTORE REGS 13 AND 12        */
         LR    CREGC,CREG4                                         0748
*           CREGD=CREG3;                                           0749
         LR    CREGD,CREG3                                         0749
*         END;                      /* END NO EXIT SPECIFIED @Z40GKD1*/
*     END;                          /* END RPL PROCESSING, NOW FREE
*                                      THE SRB FOR RPL'S WITH ECB'S,
*                                      OR FOR LCPB'S         @Z40GKD1*/
*   RFY                                                            0752
*    (CREGE,                                                       0752
*     NEWSRB,                                                      0752
*     NEWCNT,                                                      0752
*     OLDSRB,                                                      0752
*     OLDCNT,                                                      0752
*     ATCVTPTR) RSTD;                                              0752
@RC00665 DS    0H                                                  0753
*   MPSTPTR=CREGD->SRBMPST;         /* GET MPST PTR FROM SAVE AREA   */
         L     MPSTPTR,SRBMPST(,CREGD)                             0753
*   RFY                                                            0754
*     ISTATCVT BASED(ATCVTPTR);     /* DCR 4214                      */
*   DO;                             /* LISATCVT                    0755
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*     ATCVTPTR=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0756
*   END;                            /* LISATCVT DCR4214              */
*   OLDCNT=ATCSRBCN;                /* GET SRB COUNT WORD FROM ATCVT */
         L     OLDCNT,ATCSRBCN(,ATCVTPTR)                          0758
*   OLDSRB=ATCSRBQ;                 /* CURRENT SRB ON ATCVT          */
         L     OLDSRB,ATCSRBQ(,ATCVTPTR)                           0759
*   RFY                                                            0760
*     SRBPTR RSTD;                                                 0760
*   SRBPTR=CREGD-(LENGTH(SRBSECT)-12);/* GET ADDR OF SRB TO BE QUEUED*/
         LR    SRBPTR,CREGD                                        0761
         SL    SRBPTR,@CF00129                                     0761
*   CREGE=CREGD->SRB00;             /* GET RETURN ADDR FROM SRB      */
         L     CREGE,SRB00(,CREGD)                                 0762
*NQSRBLP2:                                                         0763
*   IF ATCSRBAC>=ATCSRBCT           /* # OF SRB ONATCVT AT LIMIT     */
*     THEN                                                         0763
NQSRBLP2 CLC   ATCSRBAC(2,ATCVTPTR),ATCSRBCT(ATCVTPTR)             0763
         BL    @RF00763                                            0763
*     DO;                           /* YES                           */
*       CREGB=CREGE;                /* SAVE 14 OVER MACRO            */
         LR    CREGB,CREGE                                         0765
*/* RELSTORE BUFADDR(SRBPTR)SAVE(NO)CLEAR(NO)                        */
*                                                                  0766
*       DO;                                                        0766
*                                                                  0766
*/* ATBUILD (ISTATCVT,ISTRPH)                                        */
*/* END OF ATBUILD                                                   */
*                                                                  0767
*         RFY                                                      0767
*          (GPR02P,                                                0767
*           GPR03P,                                                0767
*           GPR04P,                                                0767
*           GPR15P) RSTD;                                          0767
*         GPR04P=SRBPTR;                                           0768
         LR    GPR04P,SRBPTR                                       0768
*         DCL                                                      0769
*           1 FMZA0063 FIXED(31) STATIC LOCAL,                     0769
*            2 * FIXED(8) INIT(0),                                 0769
*            2 * PTR(24) INIT(0);                                  0769
*         GPR03F=FMZA0063;                                         0770
         L     GPR03F,FMZA0063                                     0770
*         DO;                       /* LISATCVT                    0771
*                                      CVTBASE(PAGEABLE,(GPR15P))    */
*           GPR15P=ATCLCPTR;        /* SET UP ATCVT POINTER          */
         L     GPR15P,ATCLCPTR                                     0772
*         END;                      /* LISATCVT                      */
*         GPR02P=GPR15P->ATCBPDA;                                  0774
         L     GPR02P,ATCBPDA(,GPR15P)                             0774
*         GPR15P=GPR15P->ATCSMRS;                                  0775
         L     GPR15P,ATCSMRS(,GPR15P)                             0775
*         DCL                                                      0776
*           FMZL0063 BASED(GPR15P) LABEL VALUERANGE(*);            0776
*         CALL FMZL0063;                                           0777
         BALR  @14,@15                                             0777
*         RFY                                                      0778
*          (GPR02P,                                                0778
*           GPR03P,                                                0778
*           GPR04P,                                                0778
*           GPR15P) UNRSTD;                                        0778
*       END;                        /* *********END OF RELSTORE    0779
*                                      EXPANSION*********            */
*       CREGE=CREGB;                                               0780
         LR    CREGE,CREGB                                         0780
*     END;                                                         0781
*   ELSE                                                           0782
*     DO;                           /* NOT AT LIMIT, PUT ON MPST     */
         B     @RC00763                                            0782
@RF00763 DS    0H                                                  0783
*       SRBFLNK=OLDSRB;             /* CHAIN 1ST SRB TO NEW SRB      */
         ST    OLDSRB,SRBFLNK(,SRBPTR)                             0783
*       NEWCNT=OLDCNT+'00010001'X;  /* ADD ONE TO EACH CNT           */
         LR    NEWCNT,OLDCNT                                       0784
         AL    NEWCNT,@CF02992                                     0784
*       NEWSRB=SRBPTR;                                             0785
         LR    NEWSRB,SRBPTR                                       0785
*       CDS(OLDSRB,NEWSRB,ATCSRB);  /* TRY TO PUT OM ATCVT DCR4214   */
         CDS   OLDSRB,NEWSRB,ATCSRB(ATCVTPTR)                      0786
*       BC(7,NQSRBLP2);             /* TRY AGAIN                     */
         BC    7,NQSRBLP2                                          0787
*     END;                                                         0788
*   CREGD=0;                                                       0789
@RC00763 SLR   CREGD,CREGD                                         0789
*   RFY                                                            0790
*    (SRBPTR,                                                      0790
*     NEWSRB,                                                      0790
*     NEWCNT,                                                      0790
*     OLDSRB,                                                      0790
*     OLDCNT,                                                      0790
*     ATCVTPTR) UNRSTD;                                            0790
*   RFY                                                            0791
*    (CREGA,                                                       0791
*     CREGB,                                                       0791
*     CREG3,                                                       0791
*     CREG4) UNRSTD;                                               0791
*   GEN(SETFRR P,WRKREGS=(CREGB,CREGF));/* PURGE FRR ROUTINES        */
         SETFRR P,WRKREGS=(CREGB,CREGF)
*   RETURN;                         /* RETURN TO SYSTEM      @Z40GKD1*/
@EL00002 DS    0H                                                  0793
@EF00002 DS    0H                                                  0793
@ER00002 BR    @14                                                 0793
*   END ISTAICBE;                                                  0794
*                                                                  0794
*/* TPEPILOG                                                         */
*                                                                  0795
*   GEN(PRINT OFF);                                                0795
         PRINT OFF
*   GEN(PRINT ON);                                                 0796
*                                                                  0796
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0797
*   END ISTAICIR                                                   0797
*                                                                  0797
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (ISTR66M )                                       */
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */
*/*%INCLUDE SYSLIB  (IFGACBVT)                                       */
*/*%INCLUDE SYSLIB  (IFGEXLST)                                       */
*/*%INCLUDE SYSLIB  (IFGEXLVT)                                       */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                       */
*/*%INCLUDE SYSUT5  (CALAICCK)                                       */
*/*%INCLUDE SYSUT5  (SCHDTPIO)                                       */
*/*%INCLUDE SYSUT5  (SAVEKEY )                                       */
*/*%INCLUDE SYSUT5  (SAVEKEY )                                       */
*/*%INCLUDE SYSUT5  (INITRPL )                                       */
*/*%INCLUDE SYSUT5  (INITRPL )                                       */
*/*%INCLUDE SYSUT5  (INITRPL )                                       */
*/*%INCLUDE SYSUT5  (CLRPOST )                                       */
*/*%INCLUDE SYSUT5  (CLRPOST )                                       */
*/*%INCLUDE SYSUT5  (SCHEDSRB)                                       */
*/*%INCLUDE SYSUT5  (SAVEPARM)                                       */
*/*%INCLUDE SYSUT5  (CODECHK3)                                       */
*/*%INCLUDE SYSUT5  (RESTKEY )                                       */
*/*%INCLUDE SYSUT5  (RESTKEY )                                       */
*/*%INCLUDE SYSUT5  (RUNTPIO )                                       */
*/*%INCLUDE SYSUT5  (CODECHK1)                                       */
*/*%INCLUDE SYSUT5  (SVCTPIO )                                       */
*/*%INCLUDE SYSUT5  (CODECHK4)                                       */
*/*%INCLUDE SYSUT5  (CODECHK6)                                       */
*/*%INCLUDE SYSUT5  (LOGICERR)                                       */
*/*%INCLUDE SYSUT5  (SYNADERR)                                       */
*/*%INCLUDE SYSUT5  (XCHAICIR)                                       */
*/*%INCLUDE SYSUT5  (RESTPARM)                                       */
*/*%INCLUDE SYSUT5  (CODECHK5)                                       */
*/*%INCLUDE SYSUT5  (RELSRB  )                                       */
*/*%INCLUDE SYSUT5  (RELSRB  )                                       */
*                                                                  0797
*       ;                                                          0797
@DATA    DS    0H
@CH00039 DC    H'0'
@DATD    DSECT
         DS    0F
ISTAICIR CSECT
         DS    0F
@CF00112 DC    F'2'
@CF00048 DC    F'4'
@CF00067 DC    F'15'
@CF02590 DC    F'20'
@CF00129 DC    F'32'
@CF02796 DC    F'38'
@CF03004 DC    F'-17'
@CF02200 DC    XL4'80000000'
@CF02214 DC    XL4'04000000'
@CF02218 DC    XL4'10000000'
@CF02224 DC    XL4'08000000'
@CF02992 DC    XL4'00010001'
@CF02001 DC    XL4'04'
@CF02023 DC    XL4'11'
@CF02051 DC    XL4'28'
@CF02801 DC    XL4'10'
@CF02810 DC    XL4'FF'
@CF02951 DC    XL4'25'
@CF02965 DC    XL4'20'
@CF02966 DC    XL4'3C'
@DATD    DSECT
         DS    0D
ISTAICIR CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV00034 DC    V(ISTAICCK)
         DS    0D
FMZA0007 DS    FL4
         ORG   FMZA0007
@NM00106 DC    AL1(16)
@NM00107 DC    AL3(0)
         ORG   FMZA0007+4
FMZA0042 DS    FL4
         ORG   FMZA0042
@NM00108 DC    AL1(0)
@NM00109 DC    AL3(0)
         ORG   FMZA0042+4
FMZA0063 DS    FL4
         ORG   FMZA0063
@NM00110 DC    AL1(0)
@NM00111 DC    AL3(0)
         ORG   FMZA0063+4
@CC02945 DC    C'PS25'
RPLCBCDE DC    X'00'
         DS    CL3
BCHTAB1  DC    AL4(RUNSP)
         DC    AL4(RUNSPANY)
         DC    4AL4(RUNERR)
TYPETAB  DC    3X'0C'
         DC    X'14'
         DC    3X'08'
         DC    X'14'
         DC    3X'08'
         DC    X'14'
         DC    2X'10'
         DC    X'08'
         DC    2X'14'
         DC    X'00'
         DC    X'04'
         DC    2X'00'
         DC    X'14'
         DC    2X'08'
BCHTAB2  DC    AL4(SVCSP)
         DC    AL4(SVCSPANY)
         DC    AL4(SVCOPEN)
         DC    AL4(SVCSP)
         DC    AL4(SVCSPANY)
         DC    AL4(SVCERR)
BCHTAB3  DC    AL4(SCHSP)
         DC    AL4(SCHSPANY)
@DATD    DSECT
C12   EQU   12
C24   EQU   24
C28   EQU   28
@DATD    DSECT
@ENDDATD EQU   *
ISTAICIR CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CREGC    EQU   @12
SRBPTR   EQU   @03
RPHPTR   EQU   @01
MPSTPTR  EQU   @07
TPIOTYPE EQU   @08
CREGD    EQU   @13
CREQPTR  EQU   @00
CRPLPTR  EQU   @01
CACBPTR  EQU   @02
CEXLTPTR EQU   @03
NEWSRB   EQU   @04
NEWCNT   EQU   @05
ATCVTPTR EQU   @06
CRPLSAV  EQU   @09
OLDSRB   EQU   @10
OLDCNT   EQU   @11
CREG1    EQU   @01
CREG0    EQU   @00
CREG2    EQU   @02
CREG3    EQU   @03
CREG4    EQU   @04
CREG5    EQU   @05
CREG6    EQU   @06
CREG7    EQU   @07
CREG8    EQU   @08
CREG9    EQU   @09
CREGA    EQU   @10
CREGB    EQU   @11
CREGE    EQU   @14
CREGF    EQU   @15
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR03P   EQU   @03
GPR04F   EQU   @04
GPR04P   EQU   @04
GPR15P   EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01F   EQU   @01
GPR01P   EQU   @01
GPR02F   EQU   @02
GPR05F   EQU   @05
GPR05P   EQU   @05
GPR06F   EQU   @06
GPR06P   EQU   @06
GPR07F   EQU   @07
GPR07P   EQU   @07
GPR08F   EQU   @08
GPR08P   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13F   EQU   @13
GPR13P   EQU   @13
GPR14F   EQU   @14
GPR14P   EQU   @14
GPR15F   EQU   @15
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
ATCLCPTR EQU   1032
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
SRBSECT  EQU   0
SRBID    EQU   SRBSECT
SRBFLNK  EQU   SRBSECT+4
SRBASCB  EQU   SRBSECT+8
SRBFLC   EQU   SRBSECT+12
SRBPASID EQU   SRBFLC+2
SRBEP    EQU   SRBSECT+20
SRBRMTR  EQU   SRBSECT+24
SRBPARM  EQU   SRBSECT+28
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASXB     EQU   0
ASXBMPST EQU   ASXB+16
ASXBAEQ  EQU   ASXB+168
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVT0PT01 EQU   CVTMAP+152
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
R66M     EQU   0
R66MPSTW EQU   R66M
R66RPL   EQU   R66M+8
R66RTRYW EQU   R66M+12
IFGACB   EQU   0
ACBCOMN  EQU   IFGACB
ACBLENG  EQU   ACBCOMN+2
ACBLENG2 EQU   ACBLENG
ACBAMBL  EQU   ACBCOMN+4
ACBJWA   EQU   ACBAMBL
ACBMACRF EQU   ACBCOMN+12
ACBMACR1 EQU   ACBMACRF
ACBADR   EQU   ACBMACR1
ACBCNV   EQU   ACBMACR1
ACBMACR2 EQU   ACBMACRF+1
ACBBUFPL EQU   ACBCOMN+20
ACBMACR3 EQU   ACBBUFPL
ACBRECFM EQU   ACBCOMN+24
ACBCCTYP EQU   ACBCOMN+25
ACBOPT   EQU   ACBCOMN+26
ACBDSORG EQU   ACBOPT
ACBCROPS EQU   ACBDSORG
ACBDVIND EQU   ACBDSORG
ACBEXLST EQU   ACBCOMN+36
ACBUEL   EQU   ACBEXLST
ACBDDNM  EQU   ACBCOMN+40
ACBAMETH EQU   ACBDDNM+3
ACBDEB   EQU   ACBDDNM+5
ACBOFLGS EQU   ACBCOMN+48
ACBEXFG  EQU   ACBOFLGS
ACBIOSFG EQU   ACBOFLGS
ACBINFLG EQU   ACBCOMN+50
ACBVVIC  EQU   ACBINFLG
ACBUJFCB EQU   ACBCOMN+52
ACBBLKSZ EQU   ACBCOMN+60
ACBVTEXT EQU   IFGACB+76
IFGEXLST EQU   0
EXLCOMN  EQU   IFGEXLST
EXLLEN   EQU   EXLCOMN+2
EXLLEN2  EQU   EXLLEN
EXLEODF  EQU   EXLCOMN+5
EXLSYNF  EQU   EXLCOMN+10
EXLSYNA  EQU   EXLSYNF
EXLSYNP  EQU   EXLCOMN+11
EXLLERF  EQU   EXLCOMN+15
EXLLERA  EQU   EXLLERF
EXLLERP  EQU   EXLCOMN+16
EXLSCIPF EQU   EXLCOMN+20
EXLLGNF  EQU   EXLCOMN+25
EXLJRNF  EQU   EXLCOMN+30
EXLOPNF  EQU   EXLCOMN+35
EXLVTEXT EQU   IFGEXLST+40
EXLNLGNF EQU   EXLVTEXT
EXLRLRQF EQU   EXLVTEXT+5
EXLATTNF EQU   EXLVTEXT+15
EXLTPNDF EQU   EXLVTEXT+20
EXLDFAS  EQU   0
EXLDFASF EQU   EXLDFAS
EXLRESP  EQU   0
EXLRESPF EQU   EXLRESP
IFGEXLEF EQU   0
EXLENTRY EQU   IFGEXLEF
EXLFLAG  EQU   EXLENTRY
EXLENFL  EQU   EXLFLAG
EXLEXITP EQU   EXLENTRY+1
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLID    EQU   RPLIDWD
RPLREQ   EQU   RPLIDWD+2
RPLLEN   EQU   RPLIDWD+3
RPLLEN2  EQU   RPLLEN
RPLECB   EQU   RPLCOMN+8
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLDACB  EQU   RPLCOMN+24
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLASY   EQU   RPLOPT1
RPLECBSW EQU   RPLOPT1
RPLECBIN EQU   RPLECBSW
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLEXSCH EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLBRANC EQU   RPLEXTD1
RPLACTIV EQU   RPLCOMN+69
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLSAV13 EQU   RPLVTEXT+28
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLAUTUS EQU   RPLVTFL1
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
ISTRPL   EQU   0
ISTDEVCH EQU   0
DEVSHCH  EQU   ISTDEVCH
DEVCHAR  EQU   DEVSHCH
DEVTCODE EQU   ISTDEVCH+1
DEVFLAGS EQU   ISTDEVCH+3
DEVFCCTL EQU   DEVFLAGS
DEVCHAR3 EQU   DEVFLAGS
ISTPROCD EQU   0
PROPROC  EQU   ISTPROCD
PROPROC1 EQU   PROPROC
PROPROC2 EQU   PROPROC+1
PROPROC3 EQU   PROPROC+2
PROPROC4 EQU   PROPROC+3
PROPROCS EQU   0
PROSETMS EQU   PROPROCS+1
PROSETM2 EQU   PROSETMS
PROSETM3 EQU   PROSETMS+1
PROSETM4 EQU   PROSETMS+2
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00088 EQU   LOKCHNG+2
ISTDYPAB EQU   0
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHCVFLG EQU   RPHRPHA
RPHGATE  EQU   RPHCVFLG
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHPABQA EQU   ISTRPH+36
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCBPDA  EQU   ATCCOM+128
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSMRQ  EQU   ATCCOM+180
ATCSMRS  EQU   ATCCOM+188
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00099 EQU   ATCVTBAM+3
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCICAPP EQU   ATCAOSM+100
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBQ  EQU   ATCSRB
ATCSRBCN EQU   ATCSRB+4
ATCSRBAC EQU   ATCSRBCN+2
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00101 EQU   ATCAOSM+332
ATCVTFLG EQU   ATCAOSM+392
ATCAPC25 EQU   ATCAOSM+508
ATCAP66  EQU   ATCAOSM+536
ATCAP84  EQU   ATCAOSM+552
ATCZFLAG EQU   ATCAOSM+588
ATCSRBCT EQU   ATCAOSM+590
ISTMPST  EQU   0
MPSRSV07 EQU   ISTMPST+4
MPSRQUE  EQU   ISTMPST+8
MPSFLGA  EQU   ISTMPST+12
MPSASID  EQU   MPSFLGA+2
MPSCRA   EQU   ISTMPST+24
MPSCRACT EQU   MPSCRA+4
MPSSRB   EQU   ISTMPST+32
MPSSRBCT EQU   MPSSRB+4
MPSCRPL  EQU   ISTMPST+40
MPSRPLCT EQU   MPSCRPL+4
MPSASCB  EQU   ISTMPST+120
ISTAVT   EQU   0
ISTAS49  EQU   ISTAVT+4
ISTAPC25 EQU   0
EXTECB   EQU   0
ECBPOST  EQU   EXTECB
BCHPTR1  EQU   0
BCHLAB1  EQU   0
SRBXSAVE EQU   0
SRB14    EQU   SRBXSAVE+12
SRBTPTYP EQU   SRB14
SRB15    EQU   SRBXSAVE+16
SRBMPST  EQU   SRB15
SRB00    EQU   SRBXSAVE+20
SRBKEY   EQU   SRB00
SRB01    EQU   SRBXSAVE+24
TPIOTAB  EQU   0
BCHPTR2  EQU   0
BCHLAB2  EQU   0
LM2TOC   EQU   0
BCHPTR3  EQU   0
BCHLAB3  EQU   0
USER     EQU   0
FMZL0007 EQU   0
FMZL0042 EQU   0
FMZL0063 EQU   0
ISTACB   EQU   0
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
LCCAPTR  EQU   PSALCCAV
SRB      EQU   SRBSECT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTLSMQ  EQU   CVTS01+268
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
@NM00105 EQU   SRBXSAVE
ECBWAIT  EQU   EXTECB
ISTPDAVP EQU   ISTAVT+40
ISTAVR01 EQU   ISTAVT+38
ISTVTTP  EQU   ISTAVT+36
ISTAGTWT EQU   ISTAVT+34
ISTATRT  EQU   ISTAVT+32
ISTARID  EQU   ISTAVT+30
ISTX1    EQU   ISTAVT+29
ISTPHNM  EQU   ISTAVT+24
ISTAPSEX EQU   ISTAVT+20
ISTVTTIK EQU   ISTAVT+18
AVTASID  EQU   ISTAVT+16
ISTAPSTA EQU   ISTAVT+12
ISTAS53  EQU   ISTAVT+8
ISTAHIP  EQU   ISTAS49
ISTACVT  EQU   ISTAVT
MPSSRB1  EQU   ISTMPST+172
MPSSAVE  EQU   ISTMPST+140
MPSMQLBP EQU   ISTMPST+136
MPSSYSRT EQU   ISTMPST+132
MPSQEL   EQU   ISTMPST+128
MPSDBTBL EQU   ISTMPST+124
MPSTPPAB EQU   ISTMPST+88
MPSSMPAB EQU   ISTMPST+56
MPSSMRPH EQU   ISTMPST+52
MPSSRB55 EQU   ISTMPST+48
MPSRPLAC EQU   MPSRPLCT+2
MPSRPLRC EQU   MPSRPLCT
MPSCRPLQ EQU   MPSCRPL
MPSSRBAC EQU   MPSSRBCT+2
MPSSRBRC EQU   MPSSRBCT
MPSSRBQ  EQU   MPSSRB
MPSCRAAC EQU   MPSCRACT+2
MPSCRARC EQU   MPSCRACT
MPSCRAQ  EQU   MPSCRA
MPSMPSTP EQU   ISTMPST+20
MPSPSTCT EQU   ISTMPST+16
MPSRSV02 EQU   MPSFLGA+1
MPSPSTAB EQU   MPSFLGA
MPSRSV01 EQU   MPSFLGA
MPSTPBU  EQU   MPSFLGA
MPMEMTRM EQU   MPSFLGA
MPSAUTH  EQU   MPSFLGA
MPSCRAO  EQU   MPSFLGA
MPSSRBO  EQU   MPSFLGA
MPSRQUEG EQU   MPSRQUE
MPSTSOIR EQU   MPSRSV07
MPSTSOIW EQU   MPSRSV07
MPSID    EQU   ISTMPST
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP69  EQU   ATCAOSM+540
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAP41  EQU   ATCAOSM+512
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00104 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCOCWCB EQU   ATCAOSM+344
ATCOCWOB EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00103 EQU   ATCAOSM+333
@NM00102 EQU   @NM00101
ATCSNUF  EQU   @NM00101
ATCOPKL  EQU   @NM00101
ATCABEN  EQU   @NM00101
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBRC EQU   ATCSRBCN
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCCDTCB EQU   ATCICAPP+8
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP64  EQU   ATCAOSM+64
ATCAP63  EQU   ATCAOSM+60
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP32  EQU   ATCAOSM+28
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00100 EQU   @NM00099
ATCVTMAB EQU   @NM00099
@NM00098 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00097 EQU   ISTATCVT+819
@NM00096 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00095 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCMSGP  EQU   ISTATCVT+344
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00094 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00093 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABQP EQU   RPHPABQA+1
RPHPABFG EQU   RPHPABQA
RPHCRR   EQU   ISTRPH+32
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHMAJCB EQU   ISTRPH+21
RPHPABOF EQU   ISTRPH+20
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPURGE EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00092 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00091 EQU   RPHCVFLG
RPHFRRPH EQU   RPHCVFLG
RPHOWRPH EQU   RPHCVFLG
RPHCDRPH EQU   RPHCVFLG
RPHPSRPH EQU   RPHCVFLG
RPHVYRPH EQU   RPHGATE
@NM00090 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPPAB   EQU   ISTDYPAB+16
DYPRSV01 EQU   ISTDYPAB+12
DYPTSKID EQU   ISTDYPAB+8
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
LOKXCL   EQU   @NM00088
LOKPRY   EQU   @NM00088
@NM00089 EQU   @NM00088
@NM00087 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PABRPHA  EQU   PABRPHFG+1
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABDYNAM EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABOFFST EQU   ISTPAB+8
PABCHNGP EQU   PABCHAIN+1
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
PROSRDEF EQU   PROSETM4
PRORSV47 EQU   PROSETM4
PROSCON  EQU   PROSETM4
PRORSV46 EQU   PROSETM3
PROSMONT EQU   PROSETM3
PRORSV45 EQU   PROSETM3
PROSNTO  EQU   PROSETM3
PRORSV44 EQU   PROSETM3
PROCPUID EQU   PROSETM3
PRORSV43 EQU   PROSETM2
PROSNTFL EQU   PROSETM2
PRORSV42 EQU   PROSETM2
PRORSV41 EQU   PROPROCS
PROMODC  EQU   PROPROC4
PROMODT  EQU   PROPROC4
PROMODM  EQU   PROPROC4
PROMODB  EQU   PROPROC4
PRORSV14 EQU   PROPROC4
PRORSV13 EQU   PROPROC4
PRORSV12 EQU   PROPROC4
PROEIB   EQU   PROPROC4
PROMONT3 EQU   PROPROC3
PROMONT2 EQU   PROPROC3
PROMONIT EQU   PROPROC3
PROSUBLK EQU   PROPROC3
PRONTO   EQU   PROPROC3
PROLGIN  EQU   PROPROC3
PROERPI  EQU   PROPROC3
PRORSV07 EQU   PROPROC3
PROCFTX  EQU   PROPROC2
PROEMLC  EQU   PROPROC2
PRONTFL  EQU   PROPROC2
PRORSV05 EQU   PROPROC2
PRORSV04 EQU   PROPROC2
PROLGOT  EQU   PROPROC2
PROERPO  EQU   PROPROC2
PRORSV03 EQU   PROPROC2
PRORPLC  EQU   PROPROC1
PROCS    EQU   PROPROC1
PROCA    EQU   PROPROC1
PRORESPX EQU   PROPROC1
PRODFASY EQU   PROPROC1
PROXPOPT EQU   PROPROC1
PROTRUNC EQU   PROPROC1
PROASYIP EQU   PROPROC1
DEVRSV03 EQU   ISTDEVCH+5
DEVPHYSA EQU   ISTDEVCH+4
DEVCSLPN EQU   DEVCHAR3
DEVCSTCL EQU   DEVCHAR3
DEVCCHEK EQU   DEVCHAR3
DEVCATTN EQU   DEVCHAR3
DEVCSWL  EQU   DEVFCCTL
DEVCRVB  EQU   DEVFCCTL
DEVCSSL  EQU   DEVFCCTL
DEVCBSC  EQU   DEVFCCTL
DEVMCODE EQU   ISTDEVCH+2
DEVCHAR2 EQU   DEVTCODE
DEVRSV01 EQU   DEVCHAR
DEVCCTL  EQU   DEVCHAR
DEVNNSPT EQU   DEVCHAR
DEVSPS   EQU   DEVCHAR
DEVSUBND EQU   DEVCHAR
DEVCONVR EQU   DEVCHAR
DEVOTPUT EQU   DEVCHAR
DEVINPUT EQU   DEVCHAR
RPLSEQNO EQU   RPLOF60+6
@NM00086 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00085 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
RPLIBSQV EQU   RPLOF60+2
RPLOBSQV EQU   RPLOF60
@NM00084 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
@NM00083 EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00082 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLRRN   EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLEX    EQU   RPLRESP
@NM00081 EQU   RPLRESP
@NM00080 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00079 EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00078 EQU   RPLVTFL1
@NM00077 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00076 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00075 EQU   RPLSTYPE
RPLSRESP EQU   RPLSTYPE
@NM00074 EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLBB    EQU   RPLRH3
RPLSIGDA EQU   RPLVTEXT+32
RPLUSNSO EQU   RPLOSENS+2
RPLSSMO  EQU   RPLSSNSO+1
@NM00073 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00072 EQU   RPLSSEO
RPLFMHDR EQU   RPLOPT12
@NM00071 EQU   RPLOPT12
@NM00070 EQU   RPLOPT12
@NM00069 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00068 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLRSVI2 EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLUSFLD EQU   RPLVTEXT+16
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00067 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLNIB   EQU   RPLEXTD1
@NM00066 EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00065 EQU   RPLRBAR+3
@NM00064 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00063 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLRLEN  EQU   RPLCOMN+48
RPLCHAIN EQU   RPLNXTRP
RPLBOP   EQU   RPLOPT4
@NM00062 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
@NM00061 EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLECB
RPLWAIT  EQU   RPLECB
RPLPLHPT EQU   RPLCOMN+4
RPLSTYP  EQU   RPLIDWD+1
EXLEADDR EQU   EXLEXITP
@NM00060 EQU   EXLENFL
EXLLNK   EQU   EXLENFL
EXLACTM  EQU   EXLENFL
EXLSPEC  EQU   EXLENFL
EXLRESPP EQU   EXLRESP+1
@NM00059 EQU   EXLRESPF
EXLRESPK EQU   EXLRESPF
EXLRESPA EQU   EXLRESPF
EXLRESPS EQU   EXLRESPF
EXLDFASP EQU   EXLDFAS+1
@NM00058 EQU   EXLDFASF
EXLDFASK EQU   EXLDFASF
EXLDFASA EQU   EXLDFASF
EXLDFASS EQU   EXLDFASF
EXLTPNDP EQU   EXLVTEXT+21
@NM00057 EQU   EXLTPNDF
EXLTPNDK EQU   EXLTPNDF
EXLTPNDA EQU   EXLTPNDF
EXLTPNDS EQU   EXLTPNDF
EXLATTNP EQU   EXLVTEXT+16
@NM00056 EQU   EXLATTNF
EXLATTNK EQU   EXLATTNF
EXLATTNA EQU   EXLATTNF
EXLATTNS EQU   EXLATTNF
@NM00055 EQU   EXLVTEXT+10
EXLRLRQP EQU   EXLVTEXT+6
@NM00054 EQU   EXLRLRQF
EXLRLRQK EQU   EXLRLRQF
EXLRLRQA EQU   EXLRLRQF
EXLRLRQS EQU   EXLRLRQF
EXLNLGNP EQU   EXLVTEXT+1
@NM00053 EQU   EXLNLGNF
EXLNLGNK EQU   EXLNLGNF
EXLNLGNA EQU   EXLNLGNF
EXLNLGNS EQU   EXLNLGNF
EXLOPNP  EQU   EXLCOMN+36
@NM00052 EQU   EXLOPNF
EXLOPNK  EQU   EXLOPNF
EXLOPNA  EQU   EXLOPNF
EXLOPNS  EQU   EXLOPNF
EXLJRNP  EQU   EXLCOMN+31
@NM00051 EQU   EXLJRNF
EXLJRNK  EQU   EXLJRNF
EXLJRNA  EQU   EXLJRNF
EXLJRNS  EQU   EXLJRNF
EXLLGNP  EQU   EXLCOMN+26
@NM00050 EQU   EXLLGNF
EXLLGNK  EQU   EXLLGNF
EXLLGNA  EQU   EXLLGNF
EXLLGNS  EQU   EXLLGNF
EXLSCIPP EQU   EXLCOMN+21
@NM00049 EQU   EXLSCIPF
EXLSCIPK EQU   EXLSCIPF
EXLSCIPA EQU   EXLSCIPF
EXLSCIPS EQU   EXLSCIPF
@NM00048 EQU   EXLLERF
EXLLERK  EQU   EXLLERF
EXLLERS  EQU   EXLLERF
@NM00047 EQU   EXLSYNF
EXLSYNK  EQU   EXLSYNF
EXLSYNS  EQU   EXLSYNF
EXLEODP  EQU   EXLCOMN+6
@NM00046 EQU   EXLEODF
EXLEODK  EQU   EXLEODF
EXLEODA  EQU   EXLEODF
EXLEODS  EQU   EXLEODF
@NM00045 EQU   EXLCOMN+4
EXLSTYP  EQU   EXLCOMN+1
EXLID    EQU   EXLCOMN
@NM00044 EQU   ACBVTEXT+8
@NM00043 EQU   ACBVTEXT+6
ACBRTN   EQU   ACBVTEXT
ACBAPID  EQU   ACBCOMN+72
ACBCBMWA EQU   ACBCOMN+68
ACBUAPTR EQU   ACBCOMN+64
ACBLRECL EQU   ACBCOMN+62
ACBMSGLN EQU   ACBBLKSZ
ACBBUFSP EQU   ACBCOMN+56
@NM00042 EQU   ACBUJFCB+1
ACBOPTN  EQU   ACBUJFCB
@NM00041 EQU   ACBINFLG+1
ACBBYPSS EQU   ACBINFLG
ACBSDS   EQU   ACBVVIC
ACBUCRA  EQU   ACBINFLG
ACBSCRA  EQU   ACBINFLG
ACBCAT   EQU   ACBINFLG
ACBIJRQE EQU   ACBINFLG
ACBJEPS  EQU   ACBINFLG
@NM00040 EQU   ACBINFLG
ACBERFLG EQU   ACBCOMN+49
ACBBUSY  EQU   ACBIOSFG
ACBLOCK  EQU   ACBEXFG
@NM00039 EQU   ACBOFLGS
ACBDSERR EQU   ACBOFLGS
ACBOPEN  EQU   ACBOFLGS
ACBEOV   EQU   ACBOFLGS
@NM00038 EQU   ACBOFLGS
ACBERFL  EQU   ACBDDNM+4
ACBAM    EQU   ACBAMETH
ACBINFL  EQU   ACBDDNM+2
ACBTIOT  EQU   ACBDDNM
ACBPASSW EQU   ACBCOMN+32
ACBMSGAR EQU   ACBCOMN+28
@NM00037 EQU   ACBDSORG+1
ACBDORGA EQU   ACBDSORG+1
@NM00036 EQU   ACBDSORG
ACBOPTJ  EQU   ACBDVIND
ACBCRNRE EQU   ACBCROPS
ACBCRNCK EQU   ACBCROPS
ACBASA   EQU   ACBCCTYP
@NM00035 EQU   ACBCCTYP
ACBTRCID EQU   ACBCCTYP
@NM00034 EQU   ACBRECFM
ACBRECAF EQU   ACBRECFM
ACBJBUF  EQU   ACBBUFPL+2
ACBMACR4 EQU   ACBBUFPL+1
@NM00033 EQU   ACBMACR3
ACBNCFX  EQU   ACBMACR3
ACBSIS   EQU   ACBMACR3
ACBDFR   EQU   ACBMACR3
ACBICI   EQU   ACBMACR3
ACBGSR   EQU   ACBMACR3
ACBLSR   EQU   ACBMACR3
@NM00032 EQU   ACBMACR3
ACBBUFNI EQU   ACBCOMN+18
ACBBUFND EQU   ACBCOMN+16
ACBSTRNO EQU   ACBCOMN+15
ACBBSTNO EQU   ACBCOMN+14
ACBAIX   EQU   ACBMACR2
ACBDSN   EQU   ACBMACR2
ACBRST   EQU   ACBMACR2
ACBLOGON EQU   ACBMACR2
ACBSKP   EQU   ACBMACR2
@NM00031 EQU   ACBMACR2
ACBUBF   EQU   ACBMACR1
ACBOUT   EQU   ACBMACR1
ACBIN    EQU   ACBMACR1
ACBDIR   EQU   ACBMACR1
ACBSEQ   EQU   ACBMACR1
ACBBLK   EQU   ACBCNV
ACBADD   EQU   ACBADR
ACBKEY   EQU   ACBMACR1
ACBINRTN EQU   ACBCOMN+8
ACBIBCT  EQU   ACBJWA
ACBLEN2  EQU   ACBLENG2
ACBSTYP  EQU   ACBCOMN+1
ACBID    EQU   ACBCOMN
R66RTRY  EQU   R66RTRYW+1
R66RSV03 EQU   R66RTRYW
R66RTYON EQU   R66RTRYW
R66PAB   EQU   R66M+4
R66MPST  EQU   R66MPSTW+1
R66RSV00 EQU   R66MPSTW
R6655R   EQU   R66MPSTW
@NM00030 EQU   FRRSFLGS+1
@NM00029 EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00028 EQU   CVTFIX+248
@NM00027 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBRV18 EQU   ASXB+200
ASXBRV17 EQU   ASXB+196
ASXBRV16 EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBSPSA EQU   ASXB+112
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBFTCB EQU   ASXB+4
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00026 EQU   SRBSECT+40
@NM00025 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPTCB  EQU   SRBFLC+4
SRBCPAFF EQU   SRBFLC
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCAR123 EQU   LCCA+956
LCCAR122 EQU   LCCA+952
LCCAR121 EQU   LCCA+948
LCCAR120 EQU   LCCA+944
LCCAR119 EQU   LCCA+940
LCCAR118 EQU   LCCA+936
LCCAR117 EQU   LCCA+932
LCCAR116 EQU   LCCA+928
LCCAR115 EQU   LCCA+924
LCCAR114 EQU   LCCA+920
LCCAR113 EQU   LCCA+916
LCCAR112 EQU   LCCA+912
LCCAR111 EQU   LCCA+908
LCCAR110 EQU   LCCA+904
LCCAR109 EQU   LCCA+900
LCCAR108 EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCARV90 EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCACPUS EQU   LCCA+536
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCARSFP EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00272 EQU   @RC00270
@RC00348 EQU   @RC00264
@RT00471 EQU   CODECHK6
@RF00519 EQU   @RC00517
@RC00558 EQU   CODECHK6
@RC00553 EQU   CODECHK6
@ENDDATA EQU   *
         END   ISTAICIR,(C'PLS2008',0603,78173)
