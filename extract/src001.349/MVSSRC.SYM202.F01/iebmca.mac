         MACRO
&NAME    IEBMCA
*A 976365                                                      @YM06438
*C 976364                                                      @YM06438
*A 976364                                                      @YM06433
*C 976200-976480,976899                                        @YM06433
*D 976484-976799,976999-977360                                 @YM06433
*A976420-977360                                                @YM04848
*D655200,A654900-655500                                         OY01182
*A966100-976400                                                 YL026VD
*A664200,928800                                                  A36049
*A711900-712100                                                  A44345
* 155700,179100,229500,236700,324900,839700,859500               X010XX
*C229500-230900,236700-238500                                    A45170
* 472500,475200,481500                                           X010XX
*A756500-756840                                                  A48742
*A236700                                                        YA01689
*
**********       C O M M U N I C A T I O N    A R E A        **********
**********                  I E B D S C P Y                  **********
*
         SPACE 2
* ABBREVIATIONS USED FREQUENTLY -
*        ODE = OUTPUT DIRECTORY ENTRY
*        IDE = INPUT DIRECTORY ENTRY
         SPACE 2
*
* SETAB = SELECT/EXCLUDE TABLE
*        THE SETAB CONSISTS OF 10-BYTE ENTRIES.  ENTRIES ARE MADE TO
*        THIS TABLE WHEN -
*              1) A SELECTIVE COPY HAS BEEN SPECIFIED.  EACH ENTRY IS
*              FOR THE NAME OF A MEMBER TO BE SELECTED.  IF A MEMBER IS
*              TO BE RENAMED, TWO 10-BYTE ENTRIES ARE MADE IN THE SETAB
*              2) AN EXCLUSIVE COPY HAS BEEN SPECIFIED.  EACH ENTRY IS
*              FOR THE NAME OF A MEMBER TO BE EXCLUDED.
*        NOTE- IN THE CASE OF A SELECTIVE COPY (AND ONLY IN THIS CASE),
*              THE SETAB WILL ALSO BE USED AS THE CTLTAB.  IN ALL OTHER
*              CASES, A SEPARATE CTLTAB WILL BE CONSTRUCTED.
*        BYTE 0 OF AN ENTRY IS DESIGNATED AS SEFLAG1.  WITHIN THIS BYTE
*        THE FOLLOWING BITS HAVE MEANING -
SEBIT1   EQU   X'80' ON=THIS IS A NEWNAME ENTRY
SEBIT2   EQU   X'40' ON=THIS IS A RENAMED ENTRY
SEBIT3   EQU   X'20' ON=REPLACE OPTION WAS SPECIFIED FOR THIS MEMBER
SEBIT4   EQU   X'10' ON=DONTCOPY FLAG...DO NOT PROCESS THIS ENTRY
SEBIT5   EQU   X'08' ON= THIS MEMBER HAS BEEN ''FOUND'' ON INPUT D.S.
SEBIT6   EQU   X'04' ON= THIS IS LAST ENTRY IN SETAB/CTLTAB
*        LO ORDER 2 BITS NOT USED
*        NOTE THE DEFINITION OF SEBIT3.  IF, IN THE INDD TABLE, BYTE 0
*              BIT 2 IS ON, THIS MEANS THAT THE REPLACE OPTION WAS SPE-
*              CIFIED FOR ALL MEMBERS COPIED FROM THIS INDD.  IT IS
*              VALID FOR BOTH OF THESE BITS TO BE ON AT THE SAME TIME,
*              ALTHOUGH IF THE BIT IS ON IN THE INDD TABLE, IT IS UN-
*              NECESSARY FOR SEBIT3 TO ALSO BE ON IN THE SETAB.
         EJECT
* FOLLOWING IS A DESCRIPTION OF THE CONTROL TABLE -CTLTAB-
* (REMEMBER THAT THIS TABLE IS PHYSICALLY THE SAME TABLE AS SETAB WHEN
* A SELECTIVE COPY OPERATION IS SPECIFIED, BUT IS PHYSICALLY INDEPEN-
* DENT AND DISTINCT FROM THE SETAB FOR AN EXCLUSIVE COPY OPERATION.
* THERE IS NO SETAB FOR A FULL COPY OPERATION, AND THE CTLTAB IN THIS
* CASE IS CONSTRUCTED SIMILARLY TO WHEN AN EXCLUSIVE COPY IS SPECIFIED.
* SINCE THE SETAB AND CTLTAB ARE ONE AND THE SAME FOR A SEL. COPY, THIS
*  DESCRIPTION WILL ASSUME THAT A SELECTIVE COPY IS BEING DONE, FOR THE
*  PURPOSE OF SETTING UP THE TABLE INITIALLY.)....
         SPACE 2
*        INITIAL TABLE, FOLLOWING CCSCAN PROCESSING OF ''SELECT'' -
***********************************************************************
*SEFLAG1 *SEFLAG2 * NAME OF MEMBER TO BE SELECTED, OR, IF SPECIFIED,  *
*(DESCR. *(UNUSED)* NEWNAME.  IF NEWNAME WAS SPECIFIED, THE TABLE WILL*
* ABOVE) *        * CONTAIN 1 ENTRY FOR OLDNAME AND ANOTHER FOR NEW.  *
***********************************************************************
* 1 BYTE * 1 BYTE *----------------------8 BYTES----------------------*
         SPACE 2
* OLDNAME/NEWNAME PAIRS ARE NOW EXTRACTED FROM THE SETAB.  THEN THE
* CTLTAB IS SORTED ALPH. BY MBRNAME, AND A NEWNAME PTRTABLE SET UP.
* WHEN THIS HAS BEEN DONE, THE INPUT DATA SET'S DIRECTORY IS SEARCHED
* FOR MATCHING NAMES (THE NEWNAME ENTRIES IN THE TABLE ARE NOT USED FOR
* THIS COMPARISON).  WHEN A MATCHING MEMBERNAME IS FOUND, THE DIRECTORY
* ENTRY IS RETAINED IN CORE (IF SPACE PERMITS), OR IT IS SPILLED ONTO
* SYSUT3.  IN EITHER CASE, THE CORE ADDRESS OR THE TTR+INDICATOR ARE
* PUT INTO THE CTLTAB, OVERLAYING THE HIGH-ORDER 4 BYTES OF 'OLDNAME'.
* THE MEMBER-TTR IS EXTRACTED FROM THE DIRECTORY ENTRY, AND OVERLAYS
* THE LOW-ORDER 4 BYTES OF 'OLDNAME' IN THE CTLTAB.  SEBIT5 IS TURNED
* ON.  IF THIS IS AN ALIAS ENTRY, SEFLAG2 IS SET AS FOLLOWS -
ALIAS    EQU   X'80'         TO TEST FOR AND SET ALIAS DIRECTORY ENTRY
         SPACE 2
*        CTLTAB ENTRY FOR A ''FOUND'' MEMBER -
         SPACE 2
***********************************************************************
*SEFLAG1 *SEFLAG2 * INDIC. * ADDR OF THE IN-* ZEROES *   MEMBER TTR   *
*        *        *  BYTE  * PUT DIR. ENTRY *        *                *
***********************************************************************
*-1 BYTE-*-1 BYTE-*-1 BYTE-*-----3 BYTES----*-1 BYTE-*-----3 BYTES----*
         SPACE 2
* THE INDICATOR BYTE IS ZEROES IF THE DIRECTORY ENTRY IS IN CORE, OR IT
* IS HEX '01' IF THE DIRECTORY ENTRY WAS SPILLED TO SYSUT3.
* NOTE THAT CTLTAB ENTRIES FOR A ''NEWNAME'' ARE NOT OVERLAYED OR AL-
* TERED AT ANY TIME.  ONCE THE ENTIRE INPUT DIRECTORY HAS BEEN SCANNED,
* (OR AT LEAST ALL ENTRIES FOR MEMBERS TO BE COPIED FROM THIS INPUT
* DATA SET HAVE BEEN BUILT), THE OUTPUT DATA SET DIRECTORY IS READ.
* MEMBERNAMES OF MEMBERS CURRENTLY IN THE OUTPUT DATA SET ARE COMPARED
* AGAINST MEMBERNAMES OF MEMBERS REFERENCED IN THE CTLTAB FOR THE CUR-
* RENT INPUT DATA SET, UNLESS THE LATTER WERE RENAMED.  IF THE INPUT
* MEMBER IS RENAMED, THEN THE NEWNAME IS COMPARED AGAINST THE OUTPUT.
* IF DUPLICATE NAMES ARE ENCOUNTERED, AND IF THE REPLACE OPTION WAS NOT
* SPECIFIED ON EITHER THE INDD LEVEL OR THE MEMBERNAME LEVEL, THEN THE
* DONT-COPY BIT (SEBIT4) IS SET IN THE FLAG BYTE OF THE APPROPRIATE
* CTLTAB ENTRY, AND THE INDIC. BYTE (BYTE 3) OF THIS ENTRY IS SET TO
* HEX 'FF'.
* THINK OF THE LOW-ORDER 8-BYTES OF EACH ''FOUND'' CTLTAB ENTRY AS BE-
* ING DIVIDED INTO A LEFT HALF (INDIC. + DIR. ENTRY ADDR.) AND A RIGHT
* HALF (ZEROES + MBR. TTR).  THE LEFT HALF NOW REPRESENTS DIRECTORY
* ENTRIES FOUND IN THE CURRENT INPUT DATA SET, AND IS IN ALPHAMERIC
* SEQUENCE.
         EJECT
* THE NEXT STEP IN CTLTAB PROCESSING CAUSES THE ''FOUND'' ENTRIES TO BE
* MANIPULATED, WITH THE RESULT BEING THAT THE LEFT HALF CONTAINS (IN-
* DIC + ADDR OF DIR. ENTRY) IN SEQUENCE BY MEMBER TTR, AND THE RIGHT
* HALF CONTAINS THIS SAME INFORMATION (INDIC. + ADDR OF DIR. ENTRY) IN
* ALPHAMERIC SEQUENCE, OVERLAYING THE ACTUAL MEMBER TTR.  ANOTHER RE-
* SULT OF THIS MANIPULATION OF THE CTLTAB IS THAT MAIN-MEMBER ENTRIES
* PRECEDE THE CORRESPONDING ALIAS ENTRIES.  NOTE THAT THE BITS SET IN
* SEFLAG1 ARE NOW ONLY USEFUL FOR THE ''RIGHT HALF'' OF THE CTLTAB,
* SINCE THEY ARE NOT MANIPULATED AND THUS REMAIN IN THE ORIGINAL (AL-
* PHABETIC) SEQUENCE.
         SPACE 2
*        CTLTAB ENTRY FOR A FOUND MEMBER FOLLOWING TTR SORT -
         SPACE 2
***********************************************************************
*SEFLAG1 *SEFLAG2 * INDIC. * ADDR OF IN. DE * INDIC. * ADDR OF IN. DE *
*        *        *  BYTE  *                *  BYTE  *                *
*        *        *IN SEQ BY MEMBER TTR     *IN SEQ ALPHAMERICALLY    *
***********************************************************************
* 1 BYTE-*-1 BYTE-*-1 BYTE-*-----3 BYTES----*-1 BYTE-*-----3 BYTES----*
         SPACE 2
* AT THIS POINT, THERE IS NO LOGICAL RELATIONSHIP BETWEEN THE LEFT AND
* RIGHT HALVES OF THE RELEVANT CTLTAB ENTRIES.  BOTH HALVES CONTAIN THE
* SAME INFORMATION, BUT IT IS IN TWO DIFFERENT SEQUENCES.  NOTE THAT,
* IF A MEMBER BEING LOOKED FOR IS NOT ''FOUND'', ITS CTLTAB ENTRY RE-
* MAINS UNALTERED - THE NAME IS STILL UN-OVERLAYED.
* FROM THIS POINT ON, THOSE MEMBERS OF THE INPUT DATA SET WHOSE DIREC-
* TORY ENTRIES ARE REFERENCED IN THE CTLTAB WILL BE COPIED, PROVIDED
* THAT THEY ARE ''FOUND'' AND NOT FLAGGED AS ''DONT-COPY''.  THEN THE
* DIRECTORY ENTRIES WILL BE MERGED.  AS THE MERGE IS PERFORMED, WHEN AN
* INPUT DE IS MERGED, IF THIS IS A SELECTIVE COPY, THE DONT-COPY BIT
* (SEBIT4) IS TURNED ON, THUS ALLOWING FOR THESE ENTRIES IN THE CTLTAB
* TO BE IGNORED IN SUBSEQUENT PASSES THROUGH THE SAME TABLE FOR THE EN-
* SUING INPUT DATA SETS.
JSTCPD   EQU   X'10'              IF ON IN THE 2ND BYTE OF A CTLTAB EN-
*                                 TRY (SEFLAG2), THERE IS A NAME (CON-
*                                 TAINED IN THE 3RD THROUGH 10TH BYTES
*                                 OF THIS ENTRY) OF AN INPUT MEMBER
*                                 WHICH HAS BEEN SUCCESSFULLY COPIED.
*                                 THIS MEMBERNAME WILL BE PRINTED BY
*                                 THE TERMINATION MODULE (IEBVTM) UNDER
*                                 APPROPRIATE CONDITIONS, AT WHICH TIME
*                                 THIS BIT WILL BE TURNED OFF.
***********************************************************************
         EJECT
*XXXXXXXXXX    EVERY CONSTANT BETW. HERE AND NXT X'S MUST BE CONTIGUOUS
* ALL CONSTANTS BETWEEN X'S ARE SET TO ZERO FOR EVERY INPUT DATA SET.
* THE NAMES OF THE CONSTANTS WHICH ARE INCLUDED IN THIS CONTIG. AREA -
* CDCT, FCT, NNTCT, OLDTTR, FLG5
* ICPT,SVLSTO,SVFSTO,FLG2,FLG6,SWITCH1,UTTRFLAG,OBCT
         SPACE 2
         DS    0F                 ALIGNMENT
ICPT     DC    F'0'          ADDR OF LAST CTLTAB ENTRY WHICH REFERENCED
*                            AN IN-CORE INPUT D.E.
SVFSTO   DC    AL4(0)        ADDR OF 1ST OUT DIR BLOCK SAVED IN CORE
SVLSTO   DC    AL4(0)        ADDR OF LAST OUT DIR BLOCK SAVED IN CORE
*
CDCT     DC    HL2'0'        COUNT OF NBR OF ENTRIES IN CTLTAB WHICH
*                            REFERENCE INPUT D-E'S WHICH WERE RETAINED
*                            IN CORE (IE, NOT ''SPILLED'')
FCT      DC    HL2'0'        COUNT OF THE NUMBER OF 'FOUND' MEMBERS
*                            WHICH ARE TO BE COPIED FROM THE CURRENT
*                            INPUT DATA SET
NNTCT    DC    HL2'0'        COUNTER USED FOR INDEXING THROUGH NEWNAME
*                            POINTER TABLE (NNPTRTAB)
OLDTTR   DS    XL3           IN TTR OF MOST RECENT MBR ACTUALLY COPIED
*
FLG2     DC    X'00'              FLAGS/SWITCHES
TRKS2    EQU   X'80'              ON = 2 TRACK-LENGTH BFRS ALLOCATED
MBUSED   EQU   X'40'              ON = MINIMUM I/O BFR-SIZE NOW ALLOC
RDEOF    EQU   X'20'              ON = EOF OCCURRED ON DS BEING READ
FSTWRT   EQU   X'10'              ON = 1ST BFR-FULL OF DATA FOR CURRENT
*                                 MEMBER HAS BEEN COPIED BY IEBMNM RTNE
FMTSPL   EQU   X'08'         ON = NEED TO WRT CT-KEY-DATA IF TO UT3
NBRK     EQU   X'04'              ON=SIZE PARM GIVEN IN K        X010XX
*              LOW ORDER 2 BITS NOT USED - RESERVED              X010XX
         SPACE 1
FLG5     DC    XL1'0'        SWITCHES / FLAGS
DEFSW    EQU   X'80'         ON = IEBMGD SUBRTNE INITIALIZATION SWITCH
OSCAN    EQU   X'40'         ON = SCAN OF OUT. D.E'S HAS BEEN INITIAL-
*                                 IZED FOR CURRENT INPUT D.S.
NSP      EQU   X'20'         ON = NO (MORE) SPACE TO KEEP ANY OUT. D.E.
OSW1     EQU   X'10'         ON = PRE-SCAN OF OUT. DIR. IS BEING DONE
*              LO ORDER 4 BITS NOT USED - RESERVED
*
         SPACE 1
FLG6     DC    X'0'          SWITCH
OIC      EQU   X'80'         ON = ALL ODE BLOCKS ARE RETAINED IN CORE
ODIC     EQU   X'40'         ON = SOME, BUT NOT ALL, ODE'S RETAINED
CPYSW    EQU   X'20'         ON = IEBMGI CALLED DURING CTLTAB TTR PROC.
SPL      EQU   X'10'         ON = SPILL OF INPUT D.E'S TO UT3 OCCURRED
*              LO ORDER 4 BITS NOT USED - RESERVED
*
SWITCH1  DC    X'00'         SWITCHES
TIME1    EQU   X'80'         ON = IEBMGI HAS INITIALIZED ITSELF FOR THE
*                                 CURRENT PHASE OF PROCESSING
ENTERNN  EQU   X'40'         ON = NEED TO PUT NEWNAME INTO DIR ENTRY
MGINODE  EQU   X'20'         ON = AN I/O ERROR READING FROM SYSUT3 HAS
*                                 CAUSED THE REQUESTED IDE NOT TO BE
*                                 READ INTO CORE CORRECTLY - IEBMGI HAS
*                                 NO IDE TO PASS BACK TO THE CALLER
UNLDTM   EQU   X'10'         FIRST TIME THROUGH IEBDSU           X010XX
*              LOW ORDER 4 BITS NOT USED-RESERVED                X010XX
*
UTTRFLAG DC    XL1'00'                 FLAG FIELD FOR USER AND NOTE-
*                                 LIST PROCESSING BY IEBVWS
* HIGH ORDER THREE BITS ARE USED INTERNALLY BY IEBVWS FOR NOTE-LIST AND
*        USER TTR PROCESSING
NOTELIST EQU   X'10'         ON = NOTELIST FOUND BY IEBVWS
*              LO ORDER 4 BITS NOT USED - RESERVED
*
*
OBCT     DC    HL2'0'        ACTUAL NO OUTPUT BLOCKS SAVED IN CORE
*
*XXXXXXXXXX ALL CONSTANTS BETW. HERE AND PREV X'S MUST BE CONTIGUOUS
         EJECT
***********************************************************************
BCB      DS    4F                 BUFFER CONTROL BLOCK
* THERE WILL ALWAYS BE AT LEAST 1 PR OF BUFFERS ALLOCATED - IF CORE
* SPACE EQUAL TO OR GREATER THAN THE SIZE OF THE 1ST PR OF BFRS IS
* AVAILABLE FOR THE COPY PHASE, THE 2ND BFR SPACE WILL BE ALLOCATED TO
* USE ALL OF THIS EXTRA CORE
* THE BCB IS RE-SET WHENEVER ANOTHER INPUT DATASET IS TO BE PROCESSED.
         ORG   BCB
FLG1     DC    X'0'          FLAG BYTE FOR BCB
P2FLG1   EQU   X'80'         ON = 2 DISCONTIGUOUS BUFFERS ARE ALLOCATED
IN2ND    EQU   X'40'         ON = PROCESSING BEING DONE WITHIN THE 2ND
*                                 BUFFER
STOPEND1 EQU   X'20'         ON = READ (IEBDRD) OR PREPARE TO WRITE
*                                 (IEBVWS) ONLY ONE BUFFER
*              LO ORDER 5 BITS NOT USED - RESERVED
BEGFST1  DC    AL3(0)        ADDR OF BEGINNING OF 1ST BUFFER AREA
ENDFST1  DC    AL4(0)        ADDR OF END OF 1ST BUFFER AREA
BEGFST2  DC    AL4(0)        ADDR OF BEGINNING OF 2ND BUFFER AREA
END2ND2  DC    AL4(0)        ADDR OF END OF 2ND BUFFER AREA
* END OF BUFFER CONTROL BLOCK (BCB)
***********************************************************************
*             3 FLAGS BELOW ARE IN FLAG FIELD BUILT AHEAD OF RECORDS IN
*         I/O BUFFER.  READ PCI SETS 'ENDPROC' AND 'LASTREC' AND WRITE
*         SETUP SETS 'WRTOVR'- FLAGS USED BY WRITE AND WRITE/PCI.
*                                                                     *
ENDPROC  EQU   X'80'         IN I/O BFR, THIS BIT ON IN FLGS =
*                            THIS IS THE LAST RECORD IN ANY BUFFER
LASTREC  EQU   X'40'         IN I/O BFR, THIS BIT ON IN FLGS =
*                            THIS IS THE LAST RECORD IN CURRENT BUFFER
WRTOVR   EQU   X'20'         IN I/O BFR, THIS BIT ON IN FLGS =
*                            THIS RECORD IS A SEGMENT (NOT THE LAST
*                            SEGMENT) OF AN OVERFLOW RECORD
         SPACE 2
MAXBUF   DC    F'0'          MAX BUFFER LENGTH SPECIFIED         X010XX
BUFSIZ   DC    F'0'          SIZE IN BYTES OF 1 IO BFR(BEG2ND1-BEGFST1)
MINSIZ   DC    F'0'               LENGTH OF MINIMUM SIZE OF I/O BFR-PR
MAXBLK   DC    F'0'               LENGTH OF 1/2 OF MINSIZ
READNEXT DC    AL4(0)        SET WHEN READ CALLED - TELLS WHERE TO READ
WRTNEXT  DC    AL4(0)             POINTER TO WHERE START WRITING FROM
LASTMREC DS    F POINTER TO LAST EOF IN A BUFFER NOT YET WRITTEN
EOREAD   DC    A(0)  POINTER TO END OF LAST RECORD READ-COMPRESS
         EJECT
         DS    0F
ADWANT   DC    X'00002000'   LENGTH OF MINIMUM USABLE AMT OF COREX010XX
*                            CORE FOR VARIABLE                   A45170
*                            CONDITIONAL GETMAIN                 A45170
ADWANTHI DC    X'00100000'   LENGTH OF MAXIMUM USABLE AMOUNT OF CORE
*                            (THIS IS AN ARBITRARY LIMIT)
ADGOT    DC    F'0'          GETMAIN PUTS ADDR OF CORE HERE
LENGOT   DC    F'0'          GETMAIN PUTS LENGTH OF CORE HERE
*                            ADGOT AND LENGOT ARE USED TO FREE CORE AT
*                            TERMINATION OF PROGRAM
FREEAMT  DC    X'00002000'   LENGTH OF CORE RELEASED FOR USE BY YA01689
*               USE BY SYSTEM (OPEN, CLOSE, EOV, SYNADAF, ETC)   A45170
*                   (THIS MUST BE A MULTIPLE OF 8)               A45170
FREEAMT2 DC    X'00000C00'   CORE FREED FOR TAPE WORKAREA        X010XX
* NOTE - VALUE OF 'FREEAMT' MAY BE CHANGED IF IT IS EITHER NOT ENOUGH
*        OR TOO MUCH CORE TO RELINQUISH FOR SYSTEM UTILIZATION.  IN ANY
*        CASE, THE VALUE OF THIS CONSTANT SHOULD BE CONSIDERED WITH RE-
*        LATION TO THE MINIMUM AMOUNT OF CORE SPECIFIED IN THE CONSTANT
*        NAMED 'ADWANT'.
ACOPYR1  DC    A(0)          ADDRESS OF COPYR1 HEADER            X010XX
*                            RECORD BUFFER                       X010XX
ACOPYR2  DC    A(0)          ADDRESS OF COPYR2 HEADER            X010XX
*                            RECORD BUFFER                       X010XX
ADNL     DC    F'0'          ADDR OF NOTE-LIST AREA
ADWK     DC    F'0'          ADDR OF WORK-AREA
WKLEN    EQU   128           LENGTH OF WKAREA - ALSO USED FOR SYSUT3 IO
HDRLEN   DC    H'344'        LENGTH OF HEADER RECORDS            X010XX
INBEGIN  DC    F'0'          ADDRESS OF START OF INDD TABLE
NXTINDS  DS    F             ADDR OF INDD TABLE ENTRY FOR THE CURRENT
*                            INPUT DATA SET'S DDNAME (IN THE CURRENT
*                            INDD GROUP)
REPLACOP EQU   SEBIT3        IF ON IN HI-ORDER BYTE OF AN INDD-TABLE
*                            ENTRY, THE REPLACE OPTION WAS SPECIFIED
*                            FOR THIS INPUT DATA SET.
SEBEGIN  DC    AL4(0)        ADDR OF BEGINNING OF SETAB
SESTOP   DC    F'0'          IF SELECTIVE OR EXCLUSIVE COPY, THIS IS
*                            THE ADDRESS (+1) OF THE END OF THE SETAB.
*                            IF FULL COPY, ADDR (+1) OF END OF INDDTAB.
ADNNPTRT DS    AL4           ADDR OF NEWNAME POINTER TABLE
NNTABAD  DC    F'0'               ADDR OF CURRENT NNPTRTAB ENTRY + 4
LOCOR    DC    F'0'          ADDR OF LOWEST CURRENTLY AVAILABLE
*                            ''FREE'' CORE BYTE
SVLO     DC    F'0'               AREA FOR RE-INITIALIZING 'LOCOR'
HICOR    DC    F'0'          ADDR OF HIGHEST CURRENTLY AVAILABLE
*                            ''FREE'' CORE BYTE (+1)
SVHI     DC    F'0'               ADDR OF HIGHEST ACQUIRED CORE (+1)
BUMP     DS    AL4           ADDR WHERE 'NEXT' ENTRY IN CTLTAB SHOULD
*                            BE PLACED
CTAD     DS    AL4           ADDR OF CONTROL TABLE - IF SELECTIVE COPY,
*                            THIS WILL BE SAME AS SEBEGIN.
TABAD    DS    AL4           SET TO ADDR OF NEXT CTLTAB ENTRY BY IEBMGI
ENCT     DC    HL2'0'        COUNT OF NBR OF ENTRIES IN CTLTAB (TOTAL)
*              IF THIS IS A SELECTIVE COPY, THIS COUNT WILL BE INI-
*              TIALIZED TO THE NUMBER OF ENTRIES IN SETAB.
COUNT    DC    HL2'0'        COUNT OF NBR OF ENTRIES IN SETAB IF SEL OR
*                            EXCL COPY, OR ZERO IF FULL COPY.
INDDCT   DC    AL2(0)        COUNT OF NO. INDD'S IN CURRENT STEP
NNCT1    DC    AL2(0)        NBR OF NEWNAMES SPECIFIED IN CURRENT SE-
*                            LECTIVE COPY STEP (IF NOT SEL CPY, = 0)
UFCT     DC    HL2'0'        COUNT OF NBR OF SELECTED MEMBERS YET TO BE
*                            FOUND ON ANY INPUT D.S. IN CURR INDD GROUP
DIRBCNT  DC    HL2'0'        MAX NBR BLOCKS WHICH OUT DIR CAN CONTAIN
NDBTR    DC    X'00'    COUNT OF MAX NUMBER OF DIR BLOCKS        A36049
*                      PER TRACK ALLOCATED ON THE OUTPUT DS      A36049
DBCNT    DC    H'0'          COUNT OF ACTUAL NUMBER OF BLOCKS MERGED
*                            TO THE OUTPUT DATA SET DIRECTORY
TRBALBUF DC    H'0'          AREA FOR USE IN CALCULATING TRACK BALANCE
         EJECT
ZROS     DC    F'0'          CONSTANT OF ZEROES
         DS    0D
DBKEY    DC    DL8'0'        KEY FROM CURR DIR. BLOCK IN BFR
OUTDAD1  DC    DL8'0'        DASD ADDR WHERE TO GET 1ST UN-RETAINED
*                            OUTPUT DIRECTORY BLOCK.  THIS ADDR IS ONLY
*                            VALID WHEN 'ODIC' BIT IS ON IN FLG6
OUTNAME  DC    CL8' '        NAME OF CURRENT OUTPUT DD
         SPACE 2
CCIMAGE  DS    10D                     SCAN CONTROL CARD BUFFER
         SPACE 2
WKA1     DC    10F'0'        VOLATILE WORK AREA FOR GENERAL USE
*
*****   PLEASE NOTE---    IEBSCN IS NOT THE ONLY MODULE WHICH USES
**                WKA1 FOR TEMPORARY WORK SPACE.
*                 HOWEVER, THE FOLLOWING 4 EQUATES ARE USED ONLY BY
*                 IEBSCN -
*
SARG     EQU   WKA1          TEMPORARY WORK AREA USED BY IEBSCN (SCAN)
*                            TO HOLD SEARCH ARGUMENT 8 BYTES LONG
SAVEPAPR EQU   WKA1+8        TEMPORARY WORK AREA USED BY IEBSCN (SCAN)
*                            TO HOLD PARTIAL PARAMETERS IF CONTROL CARD
*                            IS CONTINUED, 8 BYTES LONG.
LEFTPCNT EQU   WKA1+16       TEMPORARY WORK AREA USED BY IEBSCN (SCAN)
*                            TO HOLD COUNT OF LEFT PARENTHESIS SCANNED.
RGHTPCNT EQU   WKA1+18       TEMPORARY WORK AREA USED BY IEBSCN (SCAN)
*                            TO HOLD COUNT OF RIGHT PARENTHESIS SCANNED
*                            BOTH LEFTPCNT AND RGHTPCNT 2 BYTES EACH
*                            AND MUST BE CONTIGUOUS STORAGE.
         SPACE 1
ALO      DC    F'0'               WORKAREA FOR IEBMKO SUBROUTINE
NMAD     DC    F'0'          ADDRESS OF NAME IN THE SETAB TO BE COM-
*                            PARED AGAINST AN INPUT DIRECTORY ENTRY
DEPTR    DS    AL4           ADDR OF ''NEXT'' DIR. ENTRY IN BUFFER
*                            (SET BY IEBMGD SUBROUTINE)
BLKAD    DS    AL4           ADDR OF CURRENT DIRECTORY BLOCK IN BFR
IDEAD    DS    AL4           AREA INTO WHICH IEBMGI SUBR. PLACES THE
*                            CORE ADDRESS OF THE ''NEXT'' INPUT D.E.
CSTOREG  DC    3F'0'         SAVE AREA USED BY IEBSCN
RESET1   DS    4F                 AREA FROM WHICH R11-R14 ARE RESTORED
*                            BY IEBVTM WHEN IT IS TO EXIT TO IEBSCN
         SPACE 2
*        REGISTER SAVE AREAS
SV1      DC    18F'0'        REGISTER SAVE AREA FOR MAINFLOW
SV2      DC    18F'0'        REGISTER SAVE AREA FOR NON-RESIDENT RTNES
SV3      DC    18F'0'        REGISTER SAVE AREA FOR RESIDENT SUBRTNES
SV4      DC    18F'0'        REGISTER SAVE AREA FOR RESIDENT SUBRTNES
SV5      DC    18F'0'        SAVE AREA FOR IEBDV1
SV6      DC    18F'0'             SAVE AREA USED BY IEBVDM
SIOSAVE  DC    6F'0'         SAVEAREA FOR SIO APPENDAGE          X010XX
PCISAVE  DC    9F'0'         SAVEAREA FOR PCI APPENDAGE          X010XX
MCAMOD   DC    10F'0'             IEBMCA CHANGE AREA
* MCAMOD IS A PATCH-AREA FOR USE IN MAINTENANCE OF THIS PROGRAM
         EJECT
VIEBDV0  DC    V(IEBDV0)     ADDR OF ENTRY POINT (IN IEBDV1) TO OPEN
*                            AND VALIDATE SYSIN AND SYSPRINT DCB'S
VIEBDV1  DC    V(IEBDV1) ADDR VALIDATION ROUTINE OUTDCB AND FIRST INDD
VIEBDV2  DC    V(IEBDV2) ADDR VALIDATION ROUTINE OPEN/VALIDATE INDD
VIEBDV3  DC    V(IEBDV3) ADDR VALIDATION ROUTINE OPEN/VALIDATE SYSUT3
VIEBDV4  DC    V(IEBDV4) ADDR VALIDATION ROUTINE OPEN/VALIDATE SYSUT4
VIEBSCN  DC    V(IEBSCN)           ADDR OF CONTROL CARD SCAN ROUTINE
VIEBSEF  DC    V(IEBSCF) ENTRY POINT IN SCAN FOR ENTRY FROM SYSIN EODAD
*  HANDLER IN MAINFLOW IEBEOF
VIEBEOF  DC    V(IEBDSCEF)   EODAD HANDLER FOR SYSIN EOF
VIEBCER  DC    V(IEBDSCCE)   SYNAD ROUTINE FOR READER ERROR
VIEBVMS  DC    V(IEBVMS)           ADDR OF MESSAGE WRITING ROUTINE
VIEBPER  DC    V(IEBDSCPE)   SYNAD ROUTINE FOR PRINTER ERROR
VIEBMNI  DC    V(IEBDSCNI)   ADDR OF ENTRY POINT IN MAIN PGM - TO START
*                            PROCESSING THE 'NEXT' INPUT DATA SET IN
*                            THE CURRENT 'INDD-GROUP'
VIEBSCX  DC    V(IEBDSCSX)   E.P. IN ROOT SEGMENT TO GO FROM IEBVTM TO
*                                 IEBSCN
VIEBGME  DC    V(IEBDSCME)   ADDR OF E.P. IN ROOT SEGMENT - FOR USE
*                                 WHEN IT IS NECESSARY TO RE-ISSUE THE
*                                 GETMAIN AND RE-ALLOCATE CORE
VIEBM04  DC    V(IEBDSCM4)   E.P. IN ROOT SEGMENT TO GO FROM IEBVDM TO
*                                 IEBDV4
VIEBRTM  DC    V(IEBVDRTM)   E.P. IN IEBVDM TO RETURN FROM IEBDV4
VIEBVCT  DC    V(IEBVCT)     ADDR OF SETAB/CTLTAB/NNTAB ALPH SORT RTNE
VIEBVTT  DC    V(IEBVTT)     ADDR OF TTR SORT RTNE FOR CTLTAB
VIEBMGD  DC    V(IEBDSCGD)   ROUTINE TO FIND NEXT DIR ENTRY IN BUFFER
VIEBMBT  DC    V(IEBDSCBT)   ROUTINE TO BUILD CTLTAB AND SPILL TO UT3
VIEBMGI  DC    V(IEBDSCGI)   ROUTINE TO LOCATE A DIR ENTRY VIA CTLTAB
VIEBMKO  DC    V(IEBDSCKO)   ROUTINE TO RETAIN OUTPUT DIR BLOCKS
VIEBDRD  DC    V(IEBDRD)           ADDR OF READ ROUTINE
VIEBVWS  DC    V(IEBWSU)     ADDR. OF RTN TO PREPARE RECORDS
*                            TO BE WRITTEN - PREVIOUSLY NAMED IEBVWS
VTTOCC   DC    V(IEBDSTOC)   ROUTINE TO CONVERT TTR TO MBBCCHHR
VCCOTT   DC    V(IEBDSCOT)   ROUTINE TO CONVERT MBBCCHHR TO TTR
VIEBDWR  DC    V(IEBDWR)           ADDR OF WRITE ROUTINE
VIEBIOE  DC    V(IEBIOE)          ADDR OF RTNE TO SET UP MSG FOR I/O
*                                 ERROR, VIA SYNADAF
VIEBMNM  DC    V(IEBDSCNM)   ROUTINE TO CONTROL MBR COPYING WHEN NOT
*                            COMPRESSING, DEBLOCKING, OR REBLOCKING
VIEBDRB  DC    V(IEBDRB)           ADDR OF REBLOCK/DEBLOCK RTNE
VIEBMCM  DC    V(IEBMCM)          ADDR OF COMPRESS-IN-PLACE ROUTINE
VIEBVDM  DC    V(IEBVDM)           ADDR OF DIRECTORY MERGE RTNE
VIEBVTM  DC    V(IEBVTM)          ADDR OF TERMINATION ROUTINE
VIEBDSRE DC    V(IEBDSRE)    ROUTINE TO TRANSFER CONTROL TO      A33288
*                              IEBIOE FROM IEBDRD                A33288
VIEBDSWE DC    V(IEBDSWE)    ROUTINE TO TRANSFER CONTROL TO      A33288
*                              IEBIOE FROM IEBDWR                A33288
VIEBDRDR DC    V(IEBDRDR)    RETURN POINT IN IEBDRD FROM IEBIOE  A33288
VIEBDWRR DC    V(IEBDWRR)    RETURN POINT IN IEBDWR FROM IEBIOE  A33288
VIEBBAM  DC    V(IEBBAM)          BUFFER ALLOCATION ROUTINE      S20201
VLDUL1   DC    V(IEBLDUL1)   LOAD INITIALIZATION ROUTINE         X010XX
VLDUL2   DC    V(IEBLDUL2)   UNLOAD INITIALIZATION ROUTINE       X010XX
VIEBIOE2 DC    V(IEBIOE2)    LOAD DCB EODAD ROUTINE              X010XX
VIEBIOE3 DC    V(IEBIOE3)    LOAD DCB SYNAD ROUTINE              X010XX
VIEBIOE4 DC    V(IEBIOE4)    UNLOAD DCB SYNAD ROUTINE            X010XX
VDSFRC   DC    V(IEBDSFRC)   ENTRYPOINT IN IEBDSCPY TO ISSUE     X010XX
*                            FREEMAIN FOR LOAD/UNLOAD DATAMANAG. X010XX
*                            MODULES                             X010XX
VDSIOE2  DC    V(IEBDSOE2)   EODAD ENTRY POINT IN MAINFLOW       X010XX
VRSAM    DC    V(IEBRSAM)    LOAD DIRECTORY ROUTINE              X010XX
VRSAM1   DC    V(IEBRSAM1)   LOAD MEMBER DATA  READ ROUTINE      X010XX
VWSAM    DC    V(IEBWSAM)    WRITE MEMBER AND NOTELIST           X010XX
VWSAM1   DC    V(IEBWSAM1)   WRITE HEADER RECORD                 X010XX
VIEBDSU  DC    V(IEBDSU)     UNLOAD DIRECTORY BUILD ROUTINE      X010XX
VIEBDSU1 DC    V(IEBDSU1)    UNLOAD CTLTAB MODIFY ROUTINE        X010XX
VIEBCNVT DC    V(IEBCNVT)    IEBCOPY TTR-TO-MBBCCHHR             X010XX
*                              CONVERT ROUTINE                   X010XX
VIEBCNV1 DC    V(IEBCNVT1)    IEBCOPY CONVERT BACK ROUTINE       X010XX
         EJECT
         DS    0F
LIST1    DC    VL4(IEBDVJCB)  JFCB EXIT
JFCBECON EQU   X'87'  JFCB EXIT+LAST ENTRY CODE
LIST2    DC    AL4(0) ADDRESS OF EXLST HANDLER FILLED IN BY IEBDV0
LIST2SET EQU   X'85' DCB EXIT LIST FOR SYSIN/SYSPRINT CODE, LAST ENTRY
LIST4    DC    AL4(0)                  DCB EXIT ADDRESS FILLED IN BY
*                                 IEBDV1 ROUTINE
         DC    VL4(IEBDVJCB)  JFCB EXIT
LIST5    DC    X'85'         THIS IS THE DCB EXIT LIST FOR       X010XX
         DC    AL3(0)           THE LOAD DCB                     X010XX
LIST6    DC    X'85'         THIS IS THE DCB EXIT LIST FOR       X010XX
         DC    AL3(0)           THE UNLOAD DCB                   X010XX
         SPACE 2
WRPCICNT DS    F COUNT OF PCI'S TAKEN- USED BY READ BACK CHECK
         SPACE 2
WRPTR1   DC    A(WRCW11)  CURRENT WRITE CCW ADDRESS
WRPTR2   DC    A(WRCW21) NEXT WRITE CCW ADDRESS
RDPTR1   DC    A(RDCW11)  CURRENT READ CCW ADDRESS
RDPTR2   DC    A(RDCW21)  NEXT READ CCW ADDRESS
RDCKPTR1 DC    A(RDCKCW11)  CURRENT READ BACK CHECK CCW ADDRESS
RDCKPTR2 DC    A(RDCKCW21)  NEXT READ BACK CHECK CCW ADDRESS
         SPACE 2
* FOLLOWING FIELDS ARE USED FOR RESETTING APPROPRIATE DCB'S, ETC.,
* UPON THE OCCURRENCE OF AN ERROR CONDITION (INCLUDING I/O ERRORS).
OUTPTTR  DS    2F TTRNTB OF LAST VALID EOF ON OUTPUT DATA SET
SYS4TTR  DS    2F TTRNTB OF LAST VALID EOF ON SYSUT4 DATA SET ORIGINAL
SYS3TTR  DS    2F TTRNTB OF LAST VALID EOF ON SYSUT3 DATA SET ORIGINAL
         SPACE 1
OUTDS1   DS    2F TTRNTB - TTRN NEXT RECORD TO BE WRITTEN AND CURRENT
*   TRACK BALANCE OF OUTPUT DATA SET. ORIGINALLY FROM DS1STAR FIELD
*   OF DSCB.
UT3DS1   DS    2F TTRNTB- TTRN NEXT RECORD TO BE WRITTEN TO SYSUT3 AND
*  TRACK BALANCE FOR CURRENT TRACK.ORIGINALLY FROM DS1STAR FIELD DSCB
         SPACE 1
UT4DS1   DS    2F TTRNTB- TTRN NEXT RECORD TO BE WRITTEN TO SYSUT4 AND
*  TRACK BALANCE FOR CURRENT TRACK.ORIGINALLY FROM DS1STAR FIELD DSCB
*   OUTPUT DATA SET.
OUTFDAD  DC    2F'0'              MBBCCHHR FOR RE-INITIALIZING OUTDCB
UT3FDAD  DC    2F'0'              MBBCCHHR FOR RE-INITIALIZING UT3DCB
UT4FDAD  DC    2F'0'              MBBCCHHR FOR RE-INITIALIZING UT4DCB
***********************************************************************
***** NOTE - THE FOLLOWING SIX FIELDS MUST BE KEPT CONTIGUOUS WITHIN
*            THE COMMUNICATION AREA
ERPLMFD  DC    2F'0'              AREA USED BY IEBVTM PROCESSING (ER-
*                                 ROR CONDITIONS).  CONTAINS MBBCCHHR
*                                 OF THE LAST SUCCESSFULLY WRITTEN DATA
*                                 RECORD, WHEN THE OUTPUT DIRECTORY WAS
*                                 WRITTEN TO THE OUTPUT DATA SET.  THIS
*                                 AREA IS INITIALLY SET UP BY IEBDV1,
*                                 AND SUBSEQUENTLY UPDATED WHENEVER THE
*                                 MERGED DIRECTORY IS WRITTEN TO THE
*                                 OUTPUT DATA SET BY IEBVDM.  THIS
*                                 FIELD IS NOT UPDATED WHEN THE DIREC-
*                                 TORY IS WRITTEN TO SYSUT4.
ERPLMFD4 DC    2F'0'              AREA USED BY IEBVTM PROCESSING (ER-
*                                 ROR CONDITIONS).  CONTAINS MBBCCHHR
*                                 OF THE LAST SUCCESSFULLY WRITTEN DATA
*                                 RECORD, WHEN THE OUTPUT DIRECTORY WAS
*                                 WRITTEN TO THE SYSUT4 DATA SET.  THIS
*                                 AREA IS SET BY IEBVDM WHENEVER THE
*                                 MERGED DIRECTORY IS WRITTEN TO THE
*                                 SYSUT4 DATA SET BY IEBVDM.  THIS
*                                 FIELD IS NOT UPDATED WHEN THE DIREC-
*                                 TORY IS WRITTEN TO THE OUTPUT DATASET
ERPTTR   DC    F'0'               CONTAINS TTRN OF LAST VALID DATA REC
*                                 ALL OTHER COMMENTS APPLYING TO 'ERP-
*                                 LMFD' ALSO APPLY HERE AND TO THE NEXT
*                                 AREA, NAMED 'ERPTB'.
ERPTTR4  DC    F'0'               CONTAINS TTRN OF LAST VALID DATA REC
*                                 ALL OTHER COMMENTS APPLYING TO 'ERPL-
*                                 MFD4' ALSO APPLY HERE AND TO THE
*                                 AREA NAMED 'ERPTB4'.
ERPTB    DS    CL2                TRACK BALANCE FOR LAST VALID DATA REC
*                                 SEE COMMENTS ABOVE.
ERPTB4   DS    CL2                TRACK BALANCE FOR LAST VALID DATA REC
*                                 SEE COMMENTS ABOVE.
         DS    0F
***********************************************************************
         SPACE 2
***********************************************************************
* THE CONSTANTS IN THIS GROUP ARE ALL SET UP BY THE I/O VALIDATION RTNE
OBLKSIZE DC    H'0'          OUTPUT BLOCKSIZE
IBLKSIZE DC    H'0'           INPUT BLOCKSIZE
OBLKFAC  DC    H'0'          OUTPUT BLOCKING FACTOR
IBLKFAC  DC    H'0'           INPUT BLOCKING FACTOR
OUTLRECL DC    H'0'          OUTPUT LOGICAL RECORD LENGTH
INLRECL  DC    H'0'           INPUT LOGICAL RECORD LENGTH
NOTRKS   DC    H'0'          NO. OF TRACKS ALLOCATED TO OUTPUT DS
OKEYLEN  DC    XL1'0'        OUTPUT KEYLENGTH
***********************************************************************
         SPACE 2
NXTTTR   DS    XL3           SET TO TTR OF EOF+1 OF OUT DIR BY IEBDRD,
*                            WHENEVER CTOUT BIT WAS ON.
CTTR     DS    XL3           AREA TO PUT MODIFIABLE NXTTTR FOR COMPRESS
INIDDCTS DC    H'0'               AREA TO SAVE INITIAL INDD COUNT
DDLIST   DC    CL8'SYSIN   '      LIST OF DDNAMES TO BE USED FOR INI-
         DC    CL8'SYSPRINT'      TIALIZING DCB DDNAMES (DEFAULTS)
         DC    CL8'SYSUT1  '
         DC    CL8'SYSUT2  '
         DC    CL8'SYSUT3  '
         DC    CL8'SYSUT4  '
OUTVOL   DS    CL6                     VOLID OF OUTPUT
OTDSNAME DS    CL44               AREA TO PRESERVE OUTPUT DSNAME
         EJECT
CARDCB   DCB   DDNAME=SYSIN,RECFM=FB,LRECL=80,DSORG=PS,EXLST=LIST2,    X
               MACRF=(GM)
*  SYNAD ADDRESS FILLED IN AT OPEN TIME BY VALIDATE- IEBDV0 ROUTINE
         EJECT
PRTDCB   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),RECFM=FBA,          X
               LRECL=121,EXLST=LIST2
* SYNAD ADDRESS FILLED IN AT OPEN TIME BY VALIDATE- IEBDV0 ROUTINE
         EJECT
INDCB    DCB   DDNAME=SYSUT1,MACRF=(E),IOBAD=INIOB,DSORG=PO,           X
               EXLST=LIST1,PCIA=C8,DEVD=DA,SIOA=FT,PGFX=YES      X010XX
         EJECT
OUTDCB   DCB   DDNAME=SYSUT2,MACRF=(E),IOBAD=OUTIOB,DSORG=PO,          X
               EXLST=LIST1,PCIA=C8,DEVD=DA,SIOA=FT,PGFX=YES      X010XX
         EJECT
LOADDCB  DCB   DSORG=PS,DDNAME=SYSUT1,EXLST=LIST5,MACRF=(R),     X010XX*
               RECFM=VS,NCP=1                                    X010XX
         EJECT
ULOADDCB DCB   DSORG=PS,DDNAME=SYSUT2,EXLST=LIST6,MACRF=(W),     X010XX*
               RECFM=VS,NCP=1                                    X010XX
         EJECT
UT3DCB   DCB   DDNAME=SYSUT3,DSORG=PS,MACRF=(E),IOBAD=UT3IOB,          X
               DEVD=DA,EXLST=LIST1
UT3LRECL DC    H'80'                   80 BYTE LRECL SYSUT3
         EJECT
UT4DCB   DCB   DDNAME=SYSUT4,DSORG=PS,MACRF=(E),IOBAD=UT4IOB,          X
               EXLST=LIST1,PCIA=C8,DEVD=DA,KEYLEN=8,SIOA=FT,     X010XXX
               PGFX=YES                                          X010XX
UT4LRECL DC    H'264'             264-BYTE LRECL FOR SYSUT4
         EJECT
BPAMOUT  DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=(W)
         EJECT
*    IEBDSCPY IOB AREA      IF IOB FORMAT IS EVER CHANGED THIS AREA   *
*  MUST CHANGE.  THE ADCON FOR IEBMCA IS APPENDED TO THE END OF EACH  *
*  IOB FOR THE USE OF THE PCI APPENDAGE SO THAT IT CAN FIND THE START *
*  OF THE COMMON AREA TO CHANGE POINTERS AND CCWS.                    *
         SPACE 1
INIOB    DC    F'0'
         DC    A(EVENTCB)              POINTER TO EVENT CONTROL BLOCK
         DC    3F'0'
         DC    A(INDCB)                DCB POINTER
         DC    4F'0'
COMMONPT DC    A(IEBMCA) POINTER TO COMMON AREA IN IOB FOR PCI
INCHAR   DC    5F'0'                   DEVTYPE INFO              S20201
INSCTOR  DC    X'00'                   CURRENT SECTOR VALUE      S20201
*                                        FOR INPUT - ONLY        S20201
*                                        VALID IF RPS DEVICE     S20201
DEVOFF   EQU   INCHAR-INIOB            OFFSET TO DEVTYPE         S20201
*                                        INFO FROM ALL IOB'S     S20201
SCTOFF   EQU   INSCTOR-INIOB           OFFSET TO CURRENT         S20201
*                                        SECTOR VALUE FROM       S20201
*                                        ALL IOB'S               S20201
IEBMCAPT EQU   COMMONPT-INIOB POINTER TO IEBMCA IN THE IOB- ASSUMES
*   ALL IOB'S NEED THIS AND ALL IOB'S ARE THE SAME SIZE
         SPACE 1
OUTIOB   DC    F'0'
         DC    A(EVENTCB)              POINTER TO EVENT CONTROL BLOCK
         DC    3F'0'
         DC    A(OUTDCB)               DCB POINTER
         DC    4F'0'
         DC    A(IEBMCA) POINTER TO COMMON AREA IN IOB FOR PCI
OUTCHAR  DC    5F'0'                   DEVTYPE INFO              S20201
OUTSCTOR DC    X'00'                   CURRENT SECTOR VALUE      S20201
*                                        FOR OUTPUT - ONLY       S20201
*                                        VALID IF RPS DEVICE     S20201
         SPACE 1
UT3IOB   DC    F'0'
         DC    A(EVENTCB)              POINTER TO EVENT CONTROL BLOCK
         DC    3F'0'
         DC    A(UT3DCB)               DCB POINTER
         DC    4F'0'
         DC    A(IEBMCA) POINTER TO COMMON AREA IN IOB FOR PCI
UT3CHAR  DC    5F'0'                   DEVTYPE INFO              S20201
UT3SCTOR DC    X'00'                   CURRENT SECTOR VALUE      S20201
*                                        FOR SYSUT3 - ONLY       S20201
*                                        VALID IF RPS DEVICE     S20201
         SPACE 1
UT4IOB   DC    F'0'
         DC    A(EVENTCB)              POINTER TO EVENT CONTROL BLOCK
         DC    3F'0'
         DC    A(UT4DCB)               DCB POINTER
         DC    4F'0'
         DC    A(IEBMCA) POINTER TO COMMON AREA IN IOB FOR PCI
UT4CHAR  DC    5F'0'                   DEVTYPE INFO              S20201
UT4SCTOR DC    X'00'                   CURRENT SECTOR VALUE      S20201
*                                        FOR SYSUT4 - ONLY       S20201
*                                        VALID IF RPS            S20201
         SPACE 1
EVENTCB  DC    F'0'                    EVENT CONTROL BLOCK FOR EXCP
         EJECT
*                                                                S20201
*  THE FOLLOWING CCW IS USED WHEN THE DEVICE TO BE USED          S20201
*     SUPPORTS THE RPS FEATURE                                   S20201
*                                                                S20201
         SPACE 1                                                 S20201
SSECTOR  CCW   X'23',SECTOR,X'60',1    SET SECTOR WITH CC/SLI    S20201
*                                        FLAGS                   S20201
*                                                                     *
*     GENERAL SEARCH ID EQUAL CCW TO START A READ OR WRITE CHAIN      *
*                                                                     *
         SPACE 1
CCW1     CCW   X'31',0,X'60',5 SEARCH ID EQUAL, CC,SLI FLAGS ON
CCW2     CCW   X'08',CCW1,X'00',1 TIC TO CCW1 TILL ID EQUAL FOUND
CCW3     CCW   X'08',0,X'00',1 TIC TO FIRST READ OR WRITE
*           TIC TO RDCW11/21 OR WRCW11/21 OR RDCKCW11/21
         SPACE 1
*                                                                     *
*     READ CCWS WITH PCI- READ DIRECTORIES AND INPUT MEMBERS          *
*                                                                     *
         SPACE 1
RDCW11   CCW   X'92',0,X'40',8 READ COUNT M/T, COMMAND CHAIN FLAG ON
RDCW12   CCW   X'0E',0,X'68',0 READ KEY/DATA CC,SLI,PCI FLAGS ON
RDCW13   CCW   X'03',RDCW21,X'20',1 NOP/RS/TIC TO BE SET BY      S20201
*                                        PCI APPENDAGE           S20201
RDCW21   CCW   X'92',0,X'40',8 READ COUNT M/T, COMMAND CHAIN FLAG ON
RDCW22   CCW   X'0E',0,X'68',0 READ KEY/DATA CC,SLI,PCI FLAGS ON
RDCW23   CCW   X'03',RDCW11,X'20',1 NOP/RS/TIC TO BE SET BY      S20201
*                                        PCI APPENDAGE           S20201
         SPACE 1
*                                                                     *
*     RESTART WRITE SEARCH ID EQUAL M/T ON LAST SUCCESSFUL RECORD     *
*              USED FOR ERROR RETRY AND HEAD SWITCHING                *
*                                                                     *
         SPACE 1
WSCH     CCW   X'B1',LASTADDR+3,X'60',5 SEARCH ID EQUAL M/T RESTART
WSCH1    CCW   X'08',WSCH,X'00',1 TIC TO WSCH TILL EQUAL ID FOUND
WSCH2    CCW   X'08',0,X'00',1 TIC TO CORRECT WRITE COMMAND
         SPACE 1
WRCW11   CCW   X'1D',0,X'68',0 WRITE COUNT/KEY/DATA CC,SLI,PCI FLAGS ON
WRCW12   CCW   X'08',WRCW13,X'20',1 TIC TO NOP/RS/WCKD/WKD/SID   S20201
*                                    CCW - SET BY PCI ROUTINE    S20201
WRCW13   CCW   X'03',0,X'20',1 NOP/RS CCW TO STOP CHAIN IF PCI   S20201
*                               MISSED - SET BY IEBDWR           S20201
*   MAY TIC TO NEXT WRITE COMMAND OR SEARCH TO NEXT TRACK             *
         SPACE 1
WRCW21   CCW   X'1D',0,X'68',0 WRITE COUNT/KEY/DATA CC,SLI,PCI FLAGS ON
WRCW22   CCW   X'08',WRCW23,X'20',1 TIC TO NOP/RS/WCKD/WKD/SID   S20201
*                                    CCW - SET BY PCI ROUTINE    S20201
WRCW23   CCW   X'03',0,X'20',1 NOP/RS CCW TO STOP CHAIN IF PCI   S20201
*                               MISSED - SET BY IEBDWR           S20201
*   MAY TIC TO NEXT WRITE COMMAND OR SEARCH TO NEXT TRACK             *
         SPACE 1
*                                                                     *
*     READ BACK CHECK CCW LIST WITH PCI                               *
*                                                                     *
         SPACE 1
RDCKCW11 CCW   X'92',LASTADDR,X'60',8 READ COUNT M/T CC, SLI FLAGS ON
RDCKCW12 CCW   X'0E',LASTADDR,X'78',1 READ KEY/DATA CC,SLI,PCI,SKIP
RDCKCW13 CCW   X'03',RDCKCW21,X'20',1 NOP/RS/TIC TO BE SET BY    S20201
*                                        PCI APPENDAGE           S20201
RDCKCW21 CCW   X'92',LASTADDR,X'60',8 READ COUNT M/T CC, SLI FLAGS ON
RDCKCW22 CCW   X'0E',LASTADDR,X'78',1 READ KEY/DATA CC,SLI,PCI,SKIP
RDCKCW23 CCW   X'03',RDCKCW11,X'20',1 NOP/RS/TIC TO BE SET BY    S20201
*                                        PCI APPENDAGE           S20201
         SPACE 1
*
*  THE FOLLOWING CCW IS USED TO ERASE ONE TRACK AT A TIME
*
         SPACE 1
ERSCCW   CCW   X'11',ERSCCW,X'20',1   ERASE  -SLI-
         SPACE 1
*                                                                S20201
*  THE FOLLOWING CCW IS USED WHEN THE DEVICE TO BE USED          S20201
*     SUPPORTS THE RPS FEATURE                                   S20201
*                                                                S20201
         SPACE 1                                                 S20201
RSECTOR  CCW   X'22',SECTOR,X'20',1  READ SECTOR CCW - SLI FLAG  S20201
         SPACE 1                                                 S20201
*  THE FOLLOWING BYTE IS USED TO STORE SECTOR VALUES FOR         S20201
*      DEVICES WHICH SUPPORT RPS                                 S20201
         SPACE 1                                                 S20201
SECTOR   DC    X'00'                                             S20201
RDBKSAVE DC    X'00'              AREA TO SAVE CURRENT SECTOR    S20201
*                                   VALUE WHEN REQUIRED (SUCH    S20201
*                                   AS READ BACK CHECK)          S20201
LASTADDR DS    D RESTART ADDRESS FOR WRITE OR BUFFER FOR READBACK CHECK
LASTGBSV DS    D  USED TO SAVE VALUE IN LASTADDR AT ENTRY TO IGG019C8
LASTGB   DS    D USED BY IEBIOE FOR ERROR ANALYSIS
FIRSTERS DS    F TTR OF FIRST TRACK TO BE ERASED
LASTERS  DS    F TTR OF LAST TRACK TO BE ERASED
SVTTR    DS    F USED BY IEBWSU TO PASS THE MEMBER TTR OF ALL    A34431
*                 COPIED MEMBERS TO IEBDSCPY                     A34431
         EJECT
*   THE FOLLOWING LIST IS PASSED AT SIO TIME TO IOSUPERVISOR     X010XX
RDLENGTH DC    F'7'          EXTENDED TRANSLATION LIST LENGTH    X010XX
READLIST DC    X'03'         EXTENDED TRANSLATION LIST           X010XX
         DC    AL3(CCW1)     *THE FIRST ENTRY IS REPLACED FOR    X010XX
         DC    X'03'         *RPS DEVICES BY X'05'AL3(SSECTOR)   X010XX
         DC    AL3(RDCW11)   *AND RESET FOR NOT RPS FOR ALL      X010XX
         DC    X'03'         *THREE LISTS WHEN THEY ARE USED.    X010XX
         DC    AL3(RDCW21)   *EACH CCW ADDRESS IS PRECEDED       X010XX
         DC    X'80'         *BY AN OPTION BYTE                  X010XX
         DC    AL3(RDCW11)   *IF ITS HIORDER BIT IS OFF          X010XX
RDL1     DC    X'80'         MAX RECORD LENGTH FOR READING       X010XX
         DC    AL3(RDCW12)   *THE BYTE GIVES THE LENGTH OF       X010XX
         DC    X'80'         *A CHAIN THAT CAN BE APPENDED       X010XX
         DC    AL3(RDCW21)   *TO THE CURRENT CCWCHAIN AND        X010XX
RDL2     DC    X'80'         MAX RECORD LENGTH FOR READING       X010XX
         DC    AL3(RDCW22)   *STARTS AT THE LIST ENTRY ADDRESS   X010XX
WRLENGTH DC    F'6'          EXTENDED TRANSLATION LIST LENGTH    X010XX
WRITLIST DC    X'03'         EXTENDED TRANSLATION LIST           X010XX
         DC    AL3(CCW1)     *IF THE HIGH ORDER BIT OF THE       X010XX
         DC    X'03'         *OPTION BYTE IS ON, THE ADDRESS     X010XX
         DC    AL3(WSCH)     *IN THE NEXT CCW CAN BE             X010XX
         DC    X'03'         *MODIFIED.                          X010XX
         DC    AL3(WRCW11)   *THE OPTION BYTE THEN GIVES         X010XX
         DC    X'03'         *THE BIGGEST POSSIBLE LENGTH        X010XX
         DC    AL3(WRCW21)   *FIELD IN NEXT CCW,DIVIDED BY       X010XX
WRL1     DC    X'80'         MAX RECORD LENGTH FOR WRITING       X010XX
         DC    AL3(WRCW11)   *2K.THIS IS ZERO EXCEPT FOR         X010XX
WRL2     DC    X'80'         MAX RECORD LENGTH FOR WRITING       X010XX
         DC    AL3(WRCW21)   *THE ENTRIES RDL1,RDL2,WRL1,        X010XX
RBLENGTH DC    F'3'          EXTENDED TRANSLATION LIST LENGTH    X010XX
RBLIST   DC    X'03'         EXTENDED TRANSLATION LIST           X010XX
         DC    AL3(CCW1)     *AND WRL2.THEY ARE FILLED OUT       X010XX
         DC    X'03'         *AT START IO TIME.                  X010XX
         DC    AL3(RDCKCW11) *FOR USE OF THIS LIST SEE MODULE    X010XX
         DC    X'03'         *IGG019FT(SIO APPENDAGE) AND        X010XX
         DC    AL3(RDCKCW21) *IO SUPERVISOR MANUALS (OS VE)      X010XX
*   FOLLOWING AREA IS USED BY PCI APPENDAGE TO PASS A LIST OF    X010XX
*   CCW'S IT CHANGES TO THE IO SUPERVISOR  (OS VE)               X010XX
XLIST    DS    10F           PCI PARAMETER LIST FOR AOS          X010XX
* NOTE - THE FOLLOWING AREAS AND SWITCH ARE USED ONLY BY IEBVDM -
* BLOCK, ENDWRT, READDCB, WRTDCB, ODEPTR, OLDKEY, ADLAST, BC, AND DMSW
* THEY APPEAR IN THE COMMUNICATION AREA BECAUSE, IF THIS PROGRAM IS IN
* OVERLAY, AND IF IT IS NECESSARY TO OPEN SYSUT4, THESE AREAS WOULD BE
* OVERLAYED BY IEBDV1 WHEN IT WAS CALLED BY IEBVDM.
BLOCK    DC    F'0'                A PTR  TO THE FLAG FIELD OF THE
*                                  OUTPUT DIRECTORY BLOCK WHICH IS
*                                  BEING BUILT
ENDWRT   DC    F'0'                A PTR TO THE END OF A BUFFER AREA
*                                  WHICH IS USED FOR WRITING
READDCB  DC    F'0'                A POINTER TO THE DCB FROM WHICH
*                                  THE OUTPUT DIRECTORY IS BEING READ
WRTDCB   DC    F'0'                A POINTER TO THE DCB TO WHICH THE
*                                  OUTPUT DIRECTORY IS TO BE WRITTEN
ODEPTR   DC    F'0'                PTR TO AN ODE IN CORE
OLDKEY   DC    2F'0'               NAME OF CAST ENTRY WHICH WAS ADDED
*                                  TO BLOCK
ADLAST   DC    F'0'               FOR USE IF NEED TO OVERLAY NAME OF
*                                 LAST DE MERGED WITH FF'S
BC       DC    H'0'                COUNT OF THE NUMBER OF BYTES IN AN
*                                  OUTPUT DIRECTORY BLOCK WHICH IS
*                                  BEING BUILT
DMSW     DC    X'00'              BYTE USED FOR INTERNAL DIRECTORY
*                                 MERGE SWITCHES
R        EQU   X'80'          ON = THERE ARE NO MORE OUTPUT DIRECTORY
*                                  ENTRIES TO BE MERGED
E        EQU   X'40'          ON = THERE ARE NO MORE INPUT DIRECTORY
*                                  ENTRIES TO BE MERGED
I        EQU   X'20'          ON = AN INPUT DIRECTORY ENTRY IS BEING
*                                  MERGED
RETEOD   EQU   X'10'         ON = NO SPACE IN THE I/O BUFFER TO SET UP
*                            AN EOF RECORD TO BE WRITTEN TO SYSUT4 BY
*                            IEBVDM ROUTINE
DIRWRT   EQU   X'08'         ON = DURING MERGE PHASE, AT LEAST ONE CALL
*                                 TO IEBWSU WAS MADE, SO THERE HAS BEEN
*                                 SOME OR ALL OF THE MERGED OUTPUT
*                                 DIRECTORY WRITTEN
*              LO ORDER 3 BITS NOT USED - RESERVED
*
         SPACE 1
FLG3     DC    XL1'0'        SWITCHES/FLAGS
OUTPUTEP EQU   X'80'         ON = ENTRY WAS MADE TO IEBDV1 TO OPEN BOTH
*                            AN OUTPUT AND AN INPUT DCB
SORTDONE EQU   X'40'         ON = SETAB HAS BEEN SORTED FOR INDD GRP
FTINGP   EQU   X'20'         ON = THE CURRENT INDD GROUP HAS BEEN INI-
*                            TIALIZED FOR THE FIRST TIME THRU
REBLK    EQU   X'10'         ON = REBLOCKING / DEBLOCKING SPECIFIED
ENTOBT   EQU   X'08'         ON=OBTAIN WAS ENTERED BEFORE       OY01182
*              LO ORDER THREE BITS NOT USED - RESERVED          OY01182
*
         SPACE 2
FLG4     DC    XL1'0'        SWITCHES / FLAGS
NEWODS   EQU   X'80'         ON = 'CURRENT' OUTPUT DATA SET HAS NOT
*                            HAD IT'S DIRECTORY UPDATED
LE       EQU   X'40'         ON = LAST CTLTAB ENTRY WAS CHECKED BY
*                                 IEBMGI SUBR.
ODALT    EQU   X'20'         ON = OUT. DIRECTORY IS TO BE READ FRM UT4
NEWCOPOP EQU   X'10'         SET BY SCAN FOR EACH NEW COPY OPERATION
REDASD   EQU   X'08'   'OUTPUT' DS HAS TOO MANY DIR BL PER TR    A36049
*              LO ORDER 3 BITS NOT USED-RESERVED                 A36049
*
         SPACE 2
FLG7     DC    X'00'              SWITCHES/FLAGS
COP      EQU   X'80'         ON = IEBMGI BEING CALLED DURING COPY PHASE
FRSTMBR  EQU   X'40'         ON = FIRST MEMBER OF CURRENT INPUT DATA
*                            SET IS NOW BEING PROCESSED
DM       EQU   X'20'         ON = DIRECTORY MERGE BEING DONE NOW
NOPRNBDB EQU   X'10'         ON = IEBVTM WILL NOT PRINT MESSAGE CON-
*                                 CERNING NBR OF UNUSED DIR BLKS
SUPPRMSG EQU   X'08'         ON = IEBVTM USES THIS BIT, IN COMBINATION
*                                 WITH OTHER BITS, TO DETERMINE WHETHER
*                                 OR NOT TO PRINT CERTAIN TERMINATION
*                                 MESSAGES
*              LO ORDER 3 BITS NOT USED - RESERVED
AOS      DC    X'00'         AOS SWITCH                          X010XX
PCI      EQU   X'80'         A PCI READ OR WRITE IS  DONE        X010XX
*              LOW ORDER 7 BITS NOT USED-RESERVED                X010XX
ULLDST   DC    X'00'         UNLOAD/LOAD STATUS SWITCH           X010XX
LOAD     EQU   X'80'         IF ONE INPUT DCB IS SEQUENTIAL      X010XX
UNLOAD   EQU   X'40'         IF ONE OUTPUT DCB IS SEQUENTIAL     X010XX
*                              THE ABOVE SWITCHES ARE NOT        X010XX
*                              MUTUALLY EXCLUSIVE                X010XX
CFREED   EQU   X'20'         IF 1 A FREEMAIN HAS BEEN DONE       X010XX
*                              FOR LOAD OR UNLOAD AND            X010XX
*                              ADDRESS OF HEADER BUFFERS IS VALIDX010XX
*              LOW ORDER 5 BITS NOT USED-RESERVED                X010XX
*
         SPACE 2
FORM     DC    XL1'0'    SET BY VALIDATE AND USED BY REBLOCK ROUTINE
*
FORM1    EQU   X'80'     ON= INPUT DATA SET VARIABLE FORMAT
*                        OFF = INPUT DATA SET FIXED FORMAT
FORM2    EQU   X'40'    ON= INPUT DATA SET BLOCKED FORMAT
FORM3    EQU   X'20'    ON= OUTPUT DATA SET IS BLOCKED
FORM4    EQU   X'10'  INPUT OR OUTPUT DATASET MAY HAVE OVERFLOW RECORDS
ERASE    EQU   X'08' ON=IEBDWR CALLED TO ERASE A TRACK(S)
*              LOW ORDER 3 BITS NOT USED - RESERVED
*
         SPACE 2
TAG      DC    XL1'0'        SWITCHES / FLAGS - MUST BE SET BY CALLER
*                            PRIOR TO REQUESTING WRITE EXCP
TAG1     EQU   X'80'         ON = WRITING OUTPUT DIRECTORY TO OUTPUT DS
TAG2     EQU   X'40'         ON = WRITING (COPYING) MEMBER TO OUTPUT DS
TAG3     EQU   X'20'         ON = WRITING OUTPUT DIRECTORY TO SYSUT4 DS
TAG4     EQU   X'10'         ON = WRITING SPILLED INPUT DE'S TO UT3
TAG5     EQU   X'08'         USED BY WRITE RTNE FOR READBACK CHECK
TAG6     EQU   X'04'         USED BY WRITE RTNE FOR READBACK CHECK
CTOUT    EQU   X'02'         ON = NEED TO CT NBR BLKS IN OUTPUT DIR
TAG8     EQU   X'01'         ON=FIRST TIME IEBWSU IS ENTERED AFTER
*                            FINDING 'HOLE' - COMPRESS
*
         SPACE 2
WSFLAG   DC    X'00'         SWITCHES FOR IEBWSU INTERFACE/CONTROL
USERTTR  EQU   X'80'         ON = NOTE LIST AND/OR USER TTRN(S) PRESENT
*                                 IN THE MEMBER NOW BEING COPIED
RETRNOVR EQU   X'40'         ON = PROCESSING A SEGMENT OF A TRACK-
*                                 OVERFLOW RECORD
NOWRT    EQU   X'20'         ON = RECORDS ARE PROCESSED FOR WRITING,BUT
*                            BECAUSE THERE IS ROOM IN BFR TO READ MORE,
*                            THE RECORDS HAVENT BEEN WRITTEN YET.
FORCEWRT EQU   X'10'         ON = IEBWSU MUST CALL IEBDWR TO WRITE THE
*                            RECORD(S) CURRENTLY IN THE I/O BFR
RDGSW    EQU   X'08'         ON = READ ROUTINE WAS CALLED -
*                            OFF = WRITE ROUTINE WAS CALLED
FRSTMREC EQU   X'04'              ON = IEBWSU IS TO PROCESS THE  A34431
*                                  FIRST RECORD OF A MEMBER      A34431
NTELSTRC EQU   X'02'              ON = IEBWSU IS PROCESSING A    A44345
*                        RECORD AND TRIES TO FIND OUT IF THIS IS A44345
*                        NOTELIST RECORD (TRACK OVERFLOW ONLY)   A44345
*              LOW ORDER BIT NOT USED - RESERVED                 A44345
*
         SPACE 2
* THE FOLLOWING SWITCHES (PARMSWCH, CCSWITCH, COMDCDSW, CPARAMSW, CCDE-
* LIM, CCDELIM2) ARE PRIMARILY BUT NOT SOLELY USED BY IEBSCN -
*
         SPACE 1
PARMSWCH DC    XL1'0'    SCAN INTERNAL INDD AND MEMBER SWITCHES
SCANNAME EQU   X'80'         SCANNING NAME
SET4REPL EQU   X'40'         MULTIPLE ( EXPECT REPLACE
ONELEFT  EQU   X'20'         FIRST LEFT PARENTHESIS
COPYNOW  EQU   X'10'         NOW SCANNING COPY CARD
STOPSCAN EQU   X'08'         BLANK ENCOUNTERED
FLUSHSW  EQU   X'04'                   FLUSH TO NEXT COPY RE/SET ALONE
HASNEWNM EQU   X'02'         HAVE A NEW NAME WITH MEMBER
COMDPART EQU   X'01'         PARTIAL COMMAND- CONTINUED ON NEXT CARD
*
         SPACE 1
CCSWITCH DC    XL1'0'                  CONTROL CARD SWITCHES- EXTERNAL
CARDPRTD EQU   X'80'         ON = CONTROL STATEMENT HAS BEEN PRINTED
SYSINEOF EQU   X'40'         END OF FILE ON SYSIN
UNECPARN EQU   X'20'         INDD/MEMBER NAMES IMBEDDED IN PARENTHESIS
IEBCOPYC EQU   X'10'         IEBCOPY CONTROL CARDS
COMDNOW  EQU   X'08'         COMMAND WORD
LASTPARM EQU   X'04'         LAST PARAMETER- BYPASS SWITCH
MULTSE   EQU   X'02' MULTIPLE SELECT/EXCLUDE STATEMENTS
FIRSTSCN EQU   X'01' ON=IEBSCN HAS BEEN CALLED FOR THE FIRST TIME
*
         SPACE 2
COMDCDSW DC    XL1'0'           SOME EXTERNAL SWITCHES
COPYDONE EQU   X'80'         COPY COMMAND SCANNED ALL OK
SELECTSC EQU   X'40'         SELECT COMMAND SCANNED
EXCLUDES EQU   X'20'         EXCLUDE COMMAND SCANNED
NEWOUT   EQU   X'10'         OUTDD KEYWORD PRESENT
NEWINDD  EQU   X'08'         INDD KEYWORD PRESENT
LISTSW   EQU   X'04'         DO NOT LIST MEMBERS COPIED (LIST=NO)
COMPRESS EQU   X'02'                   COMPRESS COPY DATA SET
MEMBRCD1 EQU   X'01'         MEMBER STATEMENT
*
         SPACE 2
CPARAMSW DC    XL1'0'       INTERNAL SCAN SWITCHES
DELIMEND EQU   X'80'         DELIMITER IN COLUMN 71
CONTINY  EQU   X'40'         CONTINUATION
PARMCOME EQU   X'20'         PARAMETER FOLLOWS
PARTPARM EQU   X'10'         PARTIAL PARAMETER
READ1    EQU   X'08'         READ ANOTHER CONTROL STATEMENT
COMDPARM EQU   X'04'         COMMAND FOLLOWED BY PARAMETER
COL72BLK EQU   X'02'         COLUMN 72 NOT BLANK
PARMZERO EQU   X'01'         PARAMETER LENGTH ZERO
*
         SPACE 2                                                 A48742
SCANSWCH DC    XL1'0'        INTERNAL SCAN SWITCHES              A48742
NOCMMEXP EQU   X'80'         DON'T SCAN COMMAND ON CONTIN CARDS  A48742
*              LOW ORDER 7 BITS NOT USED - RESERVED              A48742
*
         SPACE 2
CCDELIM  DC    XL1'0'        INTERNAL SCAN SWITCHES
EQUALSGN EQU   X'80'         EQUAL SIGN
COMMASGN EQU   X'40'         COMMA
LEFTPRSG EQU   X'20'         LEFT PARENTHESIS
RIGHTPRS EQU   X'10'         RIGHT PARENTHESIS
BLANKSGN EQU   X'08'         BLANK
LASTCOMA EQU   X'04'         LAST DELIMITER A COMMA- READ A CARD
BADBLOCK EQU   X'02' VALIDATE-IEBDV0 SETS IF SYSIN/SYSPRINT BLOCKSIZE
*          IS BAD.
*              LO ORDER BIT NOT USED
*
         SPACE 2
CCDELIM2 DC    XL1'0'  USED TO SAVE SETTINGS OF CCDELIM ON CONTINUATION
*
         SPACE 2
STATUS   DC    XL1'0'        SWITCHES / FLAGS - MUST BE SET BY CALLER
*                            PRIOR TO REQUESTING READ EXCP
STAT1    EQU   X'80'         ON = READING INPUT DIR.
STAT2    EQU   X'40'         ON = READING OUTPUT DIR FROM OUTPUT D.S.
STAT3    EQU   X'20'         ON = READING OUTPUT DIR FROM SYSUT4 D.S.
STAT4    EQU   X'10'         ON = READING INPUT MEMBER
STAT5    EQU   X'08'         ON = OUTPUT DIRECTORY HAS NO ENTRIES IN IT
STAT6    EQU   X'04'         ON = OUTPUT DIRECTORY IS BEING MERGED
STAT7    EQU   X'02'    SET BY WRITE- TELLS PCI AM READ BACK CHECKING
STAT8    EQU   X'01'         USED FOR TRACK-OVERFLOW READING
*
         SPACE 2
SENSE    DC    XL1'0'        USED BY READ ROUTINE
SENSE1   EQU   X'80'         ON = READING FROM SYSUT3
SENSE2   EQU   X'40'         ON = READING NOTE LIST
SENSE3   EQU   X'20'         ON = READING ONLY ONE RECORD FROM A FILE
SENSE4   EQU   X'10'         ON = READING OUTPUT DATA SET TO FIND THE
*                            FIRST GAP FOR COMPRESS INPLACE, ALSO WILL
*                            CALCULATE TRACK BALANCE WHEN ON.
SENSE5   EQU   X'08'         ON=SHORT LENGTH RECORD READ-RECFM=FBS
SENSE6   EQU   X'04'                   ON = ERROR ON READING FROM UT4
*                            AND MUST CONSTRUCT DUMMY RECORD IF LAST
SENSE7   EQU   X'02'         SWITCH USED FOR TRACK OVERFLOW INPUTS20201
*                              PROCESSING - IF ON, THE FIRST     S20201
*                              RECORD OF A MEMBER IS BEING       S20201
*                              READ                              S20201
SENSE8   EQU   X'01'         ON= AN I/O REQUEST ON SYSUT3 WAS    A33287
*                              ISSUED FOR ALPH SORTED CTLTAB     A33287
*                              INFORMATION                       A33287
*
         SPACE 2
VTMFLG1  DC    X'00'              FLAGS/SWITCHES SET FOR USE BY IEBVTM
IOERROR  EQU   X'80'         ON = AN I/O ERROR HAS OCCURRED
*                                 BYTES NAMED 'IOEF1' AND 'IOEF2' DES-
*                                 CRIBE THE TYPE OF ERROR AND CONTROL
*                                 ACTIONS TO BE TAKEN BY IEBVTM
UNUSEND  EQU   X'40'         ON = A NON-I/O ERROR HAS OCCURRED
NOMAIN   EQU   X'20'         ON = MINIMUM CORE WAS NOT ACQUIRED FROM
*                                 GETMAIN - DO NOT TRY TO FREEMAIN
*              LO ORDER 5 BITS NOT USED - RESERVED
*
         SPACE 2
IOEF1    DC    X'00'              FLAGS DESCRIBING NATURE/TYPE OF I/O
*                                 ERROR
*              HI ORDER BIT NOT USED - RESERVED
ERF2     EQU   X'40'         ON = ERROR WHILE READING INPUT DIRECTORY
*                                 FROM INPUT DATA SET
ERF3     EQU   X'20'         ON = 'HARD' ERROR READING MEMBER DATA -
ERF4     EQU   X'10'         ON = ERROR READING OUTPUT DIRECTORY -
*                                 IF 'ERF10' ALSO ON, WAS READING FROM
*                                 SYSUT4 DATA SET DURING OUTPUT DIREC-
*                                 TORY PRE-SCAN PHASE OF PROGRAM.  IF
*                                 ''ERF10'' WAS OFF, ERROR OCCURRED
*                                 ON OUTPUT DATA SET DIRECTORY.
ERF5     EQU   X'08'         ON = ERROR WRITING MERGED DIRECTORY TO
*                                 OUTPUT DATA SET
ERF6     EQU   X'04'         ON = 'HARD' ERROR WRITING MEMBER DATA
ERF7     EQU   X'02'         ON = 'HARD' ERROR WRITING TO SYSUT3 (SPIL-
*                                 LING AN INPUT DIRECTORY ENTRY)
ERF8     EQU   X'01'         ON = 'HARD' ERROR READING FROM SYSUT3
*
         SPACE 2
IOEF2    DC    X'00'              FLAGS DESCRIBING NATURE/TYPE OF I/O
*                                 ERROR
ERF9     EQU   X'80'         ON = 'HARD' ERROR WRITING MERGED OUTPUT
*                                 DIRECTORY TO SYSUT4
ERF10    EQU   X'40'         ON = ERROR READING FROM SYSUT4.  IF 'ERF4'
*                                 OFF, ERROR OCCURRED DURING MERGE
*                                 PHASE OF PROGRAM - IF 'ERF4' ON, SEE
*                                 DESCRIPTION OF 'ERF4'.
NOSYSIN  EQU   X'20'         ON = SYSIN COULD NOT BE OPENED OR WAS IN-
*                                 VALID, OR BECAME UNUSABLE DUE TO AN
*                                 I/O ERROR
SPRNOPN  EQU   X'10'         SYSPRINT COULD NOT BE OPENED, WAS INVALID-
*                                 LY SPECIFIED, OR AN I/O ERROR OCCUR-
*                                 RED MAKING SYSPRINT UNAVAILABLE
SNDFUSED EQU   X'08'         ON=SYNADAF MACRO USED               X010XX
IOEFENT  EQU   X'04'         ON=IOE WAS ENTERED BEFORE           X010XX
VERPEST  EQU   X'02'         ON=RECORD LONGER THEN DCBBLKSI      X010XX
ENTIOE3  EQU   X'01'         ON=IOE ENTERED THROUGH IEBIOE3      X010XX
*
         EJECT
         DS    0H
MSGLIST  DC    4H'0'              AREA FOR PARAMETRIC INPUT TO IEBVMS
MSG1     EQU   MSGLIST
MSG2     EQU   MSG1+2
MSG3     EQU   MSG2+2
MSG4     EQU   MSG3+2
* THE FOLLOWING BITS WILL BE SET ON BY THE CALLER OF IEBVMS (MESSAGE
* WRITING ROUTINE) IN THE HIGH ORDER BYTE OF EACH APPROPRIATE HALFWORD
* IN THE MSGLIST PARAMETER(S) BEING USED -
LASTMSG  EQU   X'80'         ON = LAST PARAMETER IN MSGLIST
CTLCD    EQU   X'40'         ON = A CONTROL CARD IS TO BE PRINTED
IOERF    EQU   X'20'         ON = A MESSAGE IS IN THE MESSAGE BUFFER -
*                                 AND IS TO BE PRINTED.  NO MSG CODE IS
*                                 ASSOCIATED WITH THIS MESSAGE, AND IT
*                            USUALLY WILL BE A SYNADAF MESSAGE.
RCODE    EQU   X'10'         ON = PUT RETURN CODE INTO THIS MSG TEXT
PBIT     EQU   X'08'         ON = USE PARAM LIST WITH THIS MSG TEXT
*              LO ORDER 3 BITS NOT USED - RESERVED
         SPACE 2
MSGPARAM DS    10H           THIS FIELD IS TO CONTAIN PARAMETERS X010XX
*                                 TO BE PLACED IN MESSAGES
         ORG   MSGPARAM
NAMEDISP DC    X'00'              THE DISPLACEMENT OF A NAME
*                                 PARAMETER FROM THE BEGINNING OF
*                                 THE MESSAGE IT IS TO BE PLACED IN
*                                 THIS BYTE
NODISP   DC    X'00'              THE DISPLACEMENT OF A NUMBER
*                                 PARAMETER FROM THE BEGINNING OF
*                                 THE MESSAGE IT IS TO BE PLACED IN
*                                 THIS BYTE
NAMEFLD  DC    CL8' '        AREA CONTAINING NAME TO BE PUT INTO MSG
DDVALNM  EQU   NAMEFLD       USED BY VALIDATE TO SAVE DD NAME
COPDISP  DC    X'00'         DISPLACEMENT OF THE WORD COPY       X010XX
*                              THAT HAS TO BE REPLACED           X010XX
PARAMS   DC    X'00'
NAME     EQU   X'80'         ON = THERE IS A NAME PARAMETER
NBR      EQU   X'40'         ON = THERE IS A NUMBER PARAMETER
MSGULLD  EQU   X'20'         ON = COPY MUST BE REPLACED BY       X010XX
*                              LOAD/UNLOAD                       X010XX
NOFLD    DC    CL7'0'        AREA CONTAINING NUMBER TO BE PUT INTO MSG
         SPACE 2
* THE FOLLOWING MESSAGE CODES ARE USED BY VARIOUS MODULES OF THE PGM -
INALCNTR EQU     01                INVALID COMMAND OR KEYWORD
INVALSPR EQU     02                INVALID PARAMETER
ONEQPARN EQU     03                UNEQUAL PARENTHESIS
INVALCON EQU     04                INVALID CONTINUATION
MEMNOSE  EQU     05                MEMBER WITHOUT SELECT/EXCLUDE
MULTSSEE EQU     06                ONLY ONE SELECT/EXCLUDE PER INDD
INVALREP EQU     07                INVALID REPLACE SPECIFIED
NULLPARM EQU     08                NULL PARAMETERS
NORREN   EQU     09                CANNOT RENAME/REPLACE ON EXCLUDE
NOINDD   EQU     10                OUTDD OR INDD NOT SPECIFIED
INVALIST EQU   11                  OUTDD/LIST NOT ON COPY STATEMENT
ENDMESS  EQU   12                  END OF CONTROL CARDS
MODEERR  EQU   13                  MIXING IEBCOPYAND IEBDSCPY MODE
COREGONE EQU   14                  TABLES EXCEED CORE
SCANMSG  EQU   15                  CONTROL STATEMENT ERROR
SEQERROR EQU   16                  STATEMENT SEQUENCE ERROR
GENERUAL EQU   17                  GENERAL VALIDATION MESSAGE
OPENERRX EQU   18                  OPEN ERROR MESSAGE
OBTAINER EQU   19                  OBTAIN ERROR
NOTPDSER EQU   20                  OBTAIN NOT PDS
INVALREC EQU   21                  INVALID LRECL
INVALBLK EQU   22                  INVALID BLOCKSIZE
UNMOVEDS EQU   23                  DATA SET UNMOVABLE
RECFMINC EQU   24                  RECFM INCOMPATIBLE
NORBOVRF EQU   25                  CANNOT REBLOCK OVERFLOW DATA SET
NORBKEYS EQU   26                  CANNOT REBLOCK KEYED DATA SET
UNEQKEYS EQU   27                  UNEQUAL KEY LENGTHS
INVALRFM EQU   28                  CANNOT COMPRESS KEYED PDS
INVALRBC EQU   29                  INVALID REBLOCK ROUTINE MSG
M38      EQU   30                  MINIMUM REQUESTED CORE NOT AVAILABLE
M39      EQU   31                  CANNOT COMPRESS WITH SELECT OR
*                                  EXLCUDE
M40      EQU   32                  MINIMUM I/O BUFFER NOT ALLOCATABLE
M41      EQU   33                  CANNOT ALLOCATE TWO TRACKS OF I/O
*                                  BUFFERS FOR COMPRESS
M42      EQU   34 CANNOT SPECIFY DUPLICATE NAME FOR SEL/EXCL/RENAME
M43      EQU   35                  CANNOT PROCESS ALL OLD/NEW NAMES
*                                  SPECIFIED
M45      EQU   36                  (DATA SET NAME) REFERENCES A NULL
*                                  INPUT DATA SET
M46      EQU   37                  CANNOT RE/DE BLOCK WITH
*                                  NOTE-LIST/USER TTRN IN MEMBER
*                                  (MEMBER NAME)
M47      EQU   38                  CANNOT CONTINUE TO BUILD CTLTAB
M48      EQU   39                 ALL SELECTED MEMBERS COPIED - DID NOT
*                                 USE ALL SPECIFIED INDD'S
M49      EQU   40                  (NUMBER) UNUSED TRKS IN OUTPUT DATA
*                                  SET REFERENCED BY (DDNAME)
M50      EQU   41                  CANNOT COMPRESS TRACK OVERFLOW DATA
*                                  SET
M51      EQU   42                  CANNOT COMPRESS WITH RE/DE BLOCKING
M53      EQU   43                  END OF JOB (0,4,8) WAS HIGHEST
*                                  SEVERITY CODE
NORMOD   EQU   44                  NO SPACE IN OUTPUT DIRECTORY FOR
*                                  DIRECTORY ENTRIES FROM DATA SET
*                                  (DATA SET NAME)
UNUSDDB  EQU   45                  THERE ARE (NUMBER) UNUSED DIRECTORY
*                                  BLOCKS IN THE OUTPUT DIRECTORY
TMDBTR   EQU   46     **WARNING** THE OUTPUT DS REF BY@YM04848X  A36049
*                     CONTAINS TOO MANY DIRECTORY BLOCKS PER     A36049
*                     TRACK                                      A36049
M58      EQU   47                  ERROR FORCES JOB TO TERMINATE
M59      EQU   48                  (MEMBER NAME) COMPRESSED- WAS
*                                  ALREADY IN PLACE
M60      EQU   49                  ALL MEMBERS COMPRESSED-
*                                  ALL WERE ORIGINALLY COMPRESSED
MEMCOP   EQU   50                  (MEMBERNAME) HAS BEEN SUCCESSFULLY
*                                  COPIED
RNMEMCOP EQU   51                  (MEMBER NAME) HAS BEEN RENAMED AND
*                                  SUCCESSFULLY COPIED
NOTDA    EQU   52                 DATA SET NOT DIRECT ACCESS
NODDCARD EQU   53                 DD CARD NOT FOUND
PARMEXEC EQU   54                 PARM EQUAL COMPRESS NOT VALID
NOMBCPDM EQU   55                 NO MBRS COPIED FROM INPUT DATASET RE-
*                                 FERENCED BY (XXXXXXXX)
CONCATBD EQU   56                 CONCATENATED DATA SETS
IMPCOMPR EQU   57                 IMPLIED COMPRESS
NOCMPOSS EQU   58                 CANNOT COMPRESS
NOCOPY   EQU   59                 NO MEMBERS FOR PARTIAL COPY,
*                                 WILL NOT COPY
DOFULLCP  EQU  60                 TOTAL COPY ASSUMED
MFBNC    EQU   61 MEMBER FOUND BUT NOT COPIED - I/O ERROR READING
*                 INPUT DIRECTORY
NONECOPY EQU   62 NO MEMBERS COPIED
FOLLMCPD EQU   63 FOLLOWING MBRS COPIED FROM INPUT DS REF BY XXXXXXXX
PLAMPID  EQU   64 POSSIBLE LOSS OF ACCESS TO MEMBER AND/OR INCOMPLETE
*                 DIRECTORY
WODINC   EQU   65 SYSUT4 I/O ERROR - OUTPUT DIRECTORY MAY BE INCOMPLETE
WONTCOM  EQU   66 I/O ERROR ON SYSUT3 - COMPRESS IN PLACE NOT DONE
BADPRINT EQU   67 SYSPRINT COULD NOT BE OPENED
SMNF    EQU   68                  (MBRNAME) WAS SELECTED BUT NOT FOUND
BADID    EQU   69                 INVALID ID FIELD IN COPYR1     X010XX
BADCMPRS EQU   70                 COMPR IS INVALID ON LOAD/UNLOADX010XX
MTOINDS  EQU   71                 MORE THAN ONE INPUTDS ON UNLOADX010XX
M72      EQU   72                 NO CORE FOR LOAD/UNLOAD        X010XX
NLDBL    EQU   73                 NON LOADABLE INPUT DATA SET    X010XX
M74      EQU   74                 INPUT AND OUTPUT DATA SETS ON  X010XX
*                                   SAME TAPE VOLUME             X010XX
M75      EQU   75                 NOT A DIRECT ACCESS OR TAPE    X010XX
*                                   DATA SET                     X010XX
         SPACE 2
RCBUF    DC    C'0'               COMPLETION-CODE AREA...CONTAINS CHAR-
*                                 ACTER REPRESENTATION OF HIGHEST
*                                 COMPLETION CODE SET BY UTILITY PGM
LINECT   DC   X'0'                COUNT OF NBR LINES WRITTEN ON ONE PG
PGLIMIT  EQU   56                 MAX NBR OF LINES TO BE PUT ON ONE PG
         SPACE 2
MSGBUF   DC    121C' '            MESSAGE BUFFER
PGNO     DC    C'0001'            STARTING PAGE NUMBER FOR MSG OUTPUT
* THE FOLLOWING WORK AREA IS USED BY IEBWSU                      A33288
         SPACE 1                                                 A33288
SAVERGS  DS    18F           REGISTER SAVE AREA                  A33288
RETSAVE  DS    3F            SAVE AREA FOR NOTELIST PROCESSING   A33288
SAVETTR0 DC    F'0'          HOLDS USER TTR                      A33288
READPROC DC    F'0'          PTR TO NEXT DATA TO PROCESS T/O     A33288
WRTPROC  DC    F'0'          PTR TO NEXT BUFFER SEGMENT T/O      A33288
LASTSEG  DC    F'0'          PTR TO LAST SEGMENT PROCESSED       A33288
SEGTTRN  DC    F'0'          TTRN OF 1ST SEGMENT T/O             A33288
SEGKLDL  DC    F'0'          ORIGINAL KEY + DATA LENGTH T/O      A33288
WARNTTRN DC    F'0'          SAVE AREA FOR PREVIOUS TTRN-FBS     A33288
*** END OF IEBWSU WORK AREA ****                                 A33288
*************              END OF COMMUNICATION AREA   ****************
IOBVRPTR DS    F           PTR TO IOB FOR PAGE FIX              YL026VD
WRTICPTR DS    F           PTR TO PROPER TIC IN WRITE CHAIN    @YL06433
IALPTR1  DS    F           PTR TO FIRST INDIRECT ADDR LIST     @YL06433
IALPTR2  DS    F           PTR TO SECOND INDIRECT ADDR LIST    @YL06433
CURRCCW1 DS    F           FIRST READ OR WRITE CCW - VIRTUAL   @YM04848
CURRCCW2 DS    F           SECOND READ OR WRITE CCW - VIRTUAL  @YM04848
SIOWKA   DS    F           WORK AREA FOR SIO AND PCI APPENDAGES@YM04848
COPYIAL1 DS    20F         EXTEND LIST RDPTR1.WTPTR1           @YM06433
COPYIAL2 DS    20F         EXTEND LIST FOR RDPTR2, WTPTR2      @YM06433
FIXLIST  DS    F           AREA FOR PAGE FIX POINTER           @YM06438
ADDLPTCH DS    11F         ADDITIONAL PATCH AREA               @YM06438
***   KEEP CARD  'MCAEND' LAST IN COMMUNICATION AREA JUST BEFORE THE **
****  EQUATE THAT DETERMINES THE COMMUNICATIONS AREA SIZE 'MCASIZE'  **
         SPACE 1
MCAEND   DS    0D        END OF COMMUNICATION AREA
MCASIZE  EQU   MCAEND-IEBMCA      SIZE OF COMMUNICATIONS AREA FOR SNAPS
         MEND
