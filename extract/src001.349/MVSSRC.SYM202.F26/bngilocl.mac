***********************************************************************
*                                                                     *
* MODULE NAME = BNGILOCL                                              *
*                                                                     *
* DESCRIPTIVE NAME =  IMS DEMF LOCAL TERMINAL ERROR TEXT DISPLAY      *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 1, LEVEL 1                                         *
*                                                                     *
* FUNCTION = 1) DISPLAYS CANNED STATUS/SENSE TEXT OF ALL POSSIBLE     *
*               LOCAL TERMINAL ERROR COMBINATIONS;                    *
*            2) PROVIDES THE SELECTION DISPLAY OF EXPLANATION AND     *
*               POSSIBLE CAUSES ON THE LOCAL TERMINAL STATUS/SENSE    *
*               WHICH IS SELECTED BY DEMF USER.                       *
*                                                                     *
* NOTES = NONE                                                        *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS :                                           *
*    --------------------                                             *
*                                                                     *
*    ALL DEMF RECORDING DISPLAY COMPONENTS USE STANDARD REGISTER      *
*    CONVENTIONS WITH THE EXCEPTION OF THE IMS DISPLAY COMPONENTS.    *
*    CERTAIN IMS MODULES USE ADDITIONAL REGISTERS AND THE LINK MACRO  *
*    FOR PASSING OR RETRIEVING DATA PARAMETER INFORMATION AND ARE     *
*    DETAILED BELOW:                                                  *
*                                                                     *
*     MODULE    REGISTER    CONTENTS.                                 *
*    --------   --------    ------------------------------------      *
*    BNGIDISP     R5        PASSES ADDRESS OF IMS PROGRAM             *
*                           COMMUNICATION BLOCK (PCB) TO              *
*                           BNGI3270, BNGIMENU, BNGILOCL, AND         *
*                           BNGIRMOT.                                 *
*                                                                     *
*                 R11       PASSES TO BNGIREAD THE ADDRESS OF A       *
*                           PARAMETER LIST CONTAINING:                *
*                                                                     *
*                          1) 4-BYTES - ADDRESS OF I/O AREA FROM      *
*                                       BNGIREAD                      *
*                                                                     *
*                          2) 3-BYTES - RELATIVE BLOCK ADDRESS TO     *
*                                       BE READ BY BNGIREAD           *
*                                                                     *
*                          3) 2-BYTES - STATUS OF READ FROM           *
*                                       BNGIREAD                      *
*                                                                     *
*                 R12      FOR BNGI3270, PASSES THE ADDRESS OF A      *
*                          COMMUNICATION AREA CONTAINING              *
*                          UP TO SIX EDITTED PARM FIELDS, SAVE        *
*                          AND WORK AREAS, AND THE INPUT MESSAGE.     *
*                                                                     *
*                          FOR BNGILOCL, BNGIRMOT, AND BNGIMENU;      *
*                          PASSES THE ADDRESS OF THE INPUT MESSAGE.   *
*                                                                     *
*    BNGIREAD    LINK TO BNGIDCBA       RETRIEVES THE ADDRESS OF THE  *
*                (ALIAS FOR BNGISIMS)   ADDRESS OF THE SYS1.DEMFLOG   *
*                                       DCB.                          *
*                                                                     *
*                 R11      RECEIVES ADDRESS OF PARAMETER LIST         *
*                          (SEE BNGIDISP R11 FOR LIST).               *
*                                                                     *
*    BNGI3270     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R11     PASSES TO BNGIREAD THE ADDRESS OF A         *
*                         PARAMETER LIST (SEE BNGIDISP R11 FOR LIST)  *
*                                                                     *
*                 R12     RECEIVES FROM BNGIDISP THE ADDRESS OF THE   *
*                         COMMUNICATION AREA (SEE BNGIDISP R12 FOR    *
*                         CONTENTS OF AREA).                          *
*                                                                     *
*    BNGIMENU     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R12     RECEIVES ADDRESS OF INPUT MESSAGE FROM      *
*                         BNGIDISP.                                   *
*                                                                     *
*    BNGILOCL     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R12     RECEIVES ADDRESS OF INPUT MESSAGE FROM      *
*                         BNGIDISP.                                   *
*                                                                     *
*    BNGIRMOT     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R12     RECEIVES ADDRESS OF INPUT MESSAGE FROM      *
*                         BNGIDISP.                                   *
*                                                                     *
*    PATCH LABEL = NONE                                               *
*                                                                     *
* MODULE TYPE =  IMS DISPLAY                                          *
*                                                                     *
*    PROCESSOR = ASSEMBLER H                                          *
*                                                                     *
*    MODULE SIZE = 7218 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = SERIALLY REUSABLE                                   *
*                                                                     *
* ENTRY POINT = BNGILOCL                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = R14 LOADED WITH THE RETURN ADDR (USED BY SUBROUTINE)   *
*                                                                     *
* INPUT = PARAM LIST ITEMS USED ARE : INPUT MESSAGE                   *
*                                                                     *
* OUTPUT = PARAM LIST ITEMS USED ARE : LOCAL INDEX AND TEXT DISPLAYS  *
*                                                                     *
* EXIT-NORMAL = REGISTER 15 RETURN CODE RETURNED TO CALLER :          *
*               00 - OPERATION PERFORMED AS REQUESTED                 *
*                                                                     *
* EXIT-ERROR  = NONE                                                  *
*                                                                     *
* EXTERNAL REFERENCE = NONE                                           *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA AREAS = NONE                                                *
*                                                                     *
*    CONTROL BLOCK = DCB                                              *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = SAVE, RETURN                                               *
*                                                                     *
* CHANGE ACTIVITIES AS FOLLOWS:                                       *
* CHANGE 01   11/15/77  PROLOGUE ADDED                                *
*                                                                     *
***********************************************************************
BNGILOCL TITLE 'DEMF LOCAL SRL TEXT MODULE'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
PCBREG   EQU   R5
MSGINREG EQU   R12
BASEREG  EQU   R3
TPIOPCB  DSECT
PCBTERMN DS    CL8                  REQUESTING TERMINAL SYMBOLIC NAME
         DS    CL2                  RESERVED
PCBSTAT  DS    CL2                  DL/I STATUS CODE
PCBDATE  DS    PL4                  TRANSACTION DATE STAMP
PCBTIME  DS    PL4                  TRANSACTION TIME STAMP
PCBSEQ   DS    F                    TRANSACTION SEQUENCE NUMBER
PCBMODNM DS    CL8                  MFS MSG OUTPUT DESCRIPTOR NAME
MSGINMAP DSECT
MSGIN    DS    0D                   MAP OF TRANSACTION MSG SEGMENT
TIOATDL  DS    H                    DATA LENGTH
MSGZ1    DS    X
MSGZ2    DS    X
MSGTXCD  DS    CL11                 DEMF LOCAL  FOR THIS MODULE
MSGEYED  DS    0CL8                 XSS=CODE  IF TEXT PAGE
X        DS    CL1                  X         IF TEXT PAGE
SSEQUAL  DS    CL3                  SS=       IF TEXT PAGE
SSCODE   DS    CL4                  CODE FOR CSW-SS IF TEXT
BNGILOCL CSECT
XNGILOCL SAVE  (14,12),T,*
         LR    BASEREG,R15          ESTABLISH BASE REGISTER
         USING BNGILOCL,BASEREG     MODULE BASE REGISTER
         USING TPIOPCB,PCBREG       IMS TP IOPCB BASE
         USING MSGINMAP,MSGINREG    DSECT MAP OF TRAN MSG SEG
         LR    R6,R13               GET ADDRESS OF SAVE AREA
         ST    R13,SAVEAREA+4       SAVE R13 MY SAVE AREA
         LA    R13,SAVEAREA         ADDRESS OF MY SAVE AREA
         ST    R13,8(R6)            STORE MY SAVE
TESTCALL EQU   *                    TEST INDEX OR TEXT CALL
         CLC   SSEQUAL,QSSEQUAL+1   REQUEST FO TEXT PAGE?
         BE    TEXTPAGE             YES, GO FIND CSW-SS MSG
*                                   NO.  BUILD INDEX PAGE MSG
INDXPAGE EQU   *                    REQUEST FOR INDEX PAGE
*                                   OR UNDETERMINED CODE ENTERED
         LA    R6,CSWSSNBR          ADDR OF CSW-SS STATUS CODES
         LA    R7,MSGOINDX          ADDR OF MESSAGE OUTPUT AREA
         LA    R8,CSWSSEND          UPPER LIMIT OF CSW-SS CODES
NEXTCODE EQU   *
         CR    R6,R8                TEST FOR UPPER LIMIT OF CODES
         BE    INDXOUT              END OF CSW-SS CODES-GET OUT
         MVC   0(4,R7),QSSEQUAL     MOVE ?SS= TO OUTPUT AREA
         MVC   4(4,R7),0(R6)        MOVE CSW-SS CODE TO OUTPUT AREA
         LA    R7,8(R7)             BUMP ADDR FOR NEXT ?SS=XXXX
         LA    R6,4(R6)             BUMP ADDR FOR NEXT CSW-SS CODE
         B     NEXTCODE             GO GET NEXT ?SS=XXXX
INDXOUT  EQU   *                    INDEX PAGE OUTPUT PREPARATION
         MVI   0(R7),X'3F'          INSERT 3F LAST CHARACTER OF INDEX
         LA    R6,MSGOHDR           ADDR OF MSG HEADER OUT AREA
         MVC   0(IXHDRL,R6),IXHDR   MOVE INDEX HEADER TO OUT AREA
         SR    R6,R6                CLEAR REGISTER
         LA    R6,CSWSSLTH          LENGTH OF CSW-SS CODES
         AR    R6,R6                ADD LENGTH FOR EACH ?SS=
         LA    R6,4(R6)             ADD LENGTH OF LLZZ FIELD
         LA    R6,IXHDRL(R6)        ADD LENGTH OF HEADER
         LA    R6,1(R6)             ADD ONE FOR LENGTH OF 3F CHARACTER
         STH   R6,MSGOUTLL          STORE LENGTH IN LL FIELD
         MVC   MODNAME,LOCALI       MFS MOD NAME INDEX PAGE
         B     CALLDLI              BRANCH TO IMS DL/I CALL
TEXTPAGE EQU   *
         LA    R6,CSWSSNBR          ADDR OF BEGIN OF CSW-SS CODES
         LA    R7,MSGADDR           ADDR OF FIRST MESSAGE
         LA    R8,CSWSSEND          UPPER LIMIT CHECK FOR CODES
CODETEST EQU   *
         CR    R6,R8                TEST FOR LIMIT I.E. CODE NOT FOUND
         BE    INDXPAGE             BRANCH TO DISPLAY INDEX PAGE
         CLC   0(4,R6),SSCODE       COMPARE INPUT CSW-SS CODE TO TABLE
         BE    BUILDTXT             YES, BUILD TEXT PAGE MESSAGE
         LA    R6,4(R6)             NO, LOOK FOR ANOTHER CSW-SS CODE
         LA    R7,4(R7)             AND BUMP TO CORRESPONDING MESSAGE
         B     CODETEST
BUILDTXT EQU   *                    TEXT PAGE OUTPUT PREPARATION
         MVI   TEXTLG+150,C' '      CLEAR BOTTOM HALF OF LG SCREEN
         MVC   TEXTLG+151(240),TEXTLG+150
         LA    R6,MSGOHDR           ADDR MSG HEADER OUT AREA
         MVC   0(TXHDRL,R6),TXHDR   MOVE TEXT HEADER TO OUT AREA
         L     R7,0(R7)             ADDR OF MSG LENGTH
         LA    R8,2(R7)             ADDR OF MSG TEXT TO MOVE
         LH    R7,0(R7)             GET MSG LENGTH OF THIS MSG
         LR    R9,R7                MSG LENGTH FOR MOVE LONG
         LA    R6,MSGOTEXT          ADDR MESSAGE OUTPUT AREA
         MVCL  R6,R8                MOVE MESSAGE
         LA    R6,1(R6)             POINT TO END OF TEXT PLUS ONE
         MVI   0(R6),X'3F'          INSERT 3F CHARACTER AT END OF TEXT
         MVC   MODNAME,LOCALT       MFS MOD NAME TEXT PAGE
         MVC   TEXTSM(200),TEXTLG          MOVE LARGE SCREEN TEXT TO
         MVC   TEXTSM+200(191),TEXTLG+200      SMALL SCREEN AREA
CALLDLI  EQU   *
         CALL  ASMTDLI,(ISRT,(PCBREG),MSGOUT,MODNAME),VL
*                                   TEST IMS DL/I STATUS CODE
         L     R13,SAVEAREA+4       RESTORE SAVE AREA ADDRESS
         RETURN (14,12),RC=0
         LTORG
SAVEAREA DC    18F'0'               SAVE AREA
ISRT     DC    CL4'ISRT'            IMS DL/I INSERT FUNCTION
LOCALI   DC    CL8'BNGIOLC1'        NAME OF MFS LOCAL INDEX PAGE MOD
LOCALT   DC    CL8'BNGIOLC2'        NAME OF MFS LOCAL TEXT  PAGE MOD
QSSEQUAL DC    CL4'?SS='            CHARACTERS FOR INDEX PAGE
MODNAME  DC    CL8' '               MFS MOD NAME FOR IMS CALL
IXHDR    DC    CL11'DEMF LOCAL '
         DC    CL27'STATUS INDEX,X OVER ?,ENTER'
         DC    CL39'HIT CLEAR KEY TO EXIT DEMF'
IXHDRL   EQU   *-IXHDR
TXHDR    DC    CL11'DEMF LOCAL'
         DC    CL27'HIT ENTER TO REFRESH INDEX'
TXHDRL   EQU   *-TXHDR
MSGOUT   DS    0D                   MESSAGE OUTPUT AREA
MSGOUTLL DC    AL2(MSGOLTH)         MESSAGE LENGTH LL FIELD
MSGOUTZ1 DC    X'00'                               Z1 FIELD
MSGOUTZ2 DC    X'00'                               Z2 FIELD
MSGODATA DS    0F                   BEGINNING OF MSG DATA
MSGOHDR  DS    CL38                 MESSAGE HEADER-TEXT PAGE
MSGOTEXT DS    CL7                  TEXT PAGE
TEXTLG   DS    CL391                TEXT PAGE FOR LARGE SCREEN
TEXTSM   DS    CL391                TEXT PAGE FOR SMALL SCREEN
MSGOLTH  EQU   *-MSGOUT
SETORG   DS    C
         ORG   MSGODATA
         DS    CL77                 MESSAGE HEADER-INDEX PAGE
MSGOINDX DS    40CL8                INDEX PAGE
         ORG   SETORG
MSGADDR  DS    0F
M1       DC    AL4(MSG1) CL4'0220'
M2       DC    AL4(MSG2) CL4'0240'
M3       DC    AL4(MSG3) CL4'0280'
M4       DC    AL4(MSG4) CL4'0500'
M5       DC    AL4(MSG5) CL4'0601'
M6       DC    AL4(MSG6) CL4'0602'
M7       DC    AL4(MSG7) CL4'0608'                             11/04/77
M8       DC    AL4(MSG8) CL4'060C'
M9       DC    AL4(MSG9) CL4'0614'
M10      DC    AL4(MSG10) CL4'0640'
M11      DC    AL4(MSG11) CL4'0654'
M12      DC    AL4(MSG12) CL4'0E01'
M13      DC    AL4(MSG13) CL4'0E02'
M14      DC    AL4(MSG14) CL4'0E08'
M15      DC    AL4(MSG15) CL4'0E0C'
M16      DC    AL4(MSG16) CL4'0E20'
M17      DC    AL4(MSG17) CL4'0D00'
M18      DC    AL4(MSG18) CL4'820C'                            11/04/77
M19      DC    AL4(MSG19) CL4'8210'
M20      DC    AL4(MSG20) CL4'860C'
M21      DC    AL4(MSG21) CL4'8640'
M22      DC    AL4(MSG22) CL4'8654'
M23      DC    AL4(MSG23) CL4'0000'
M24      DC    AL4(MSG24) CL4'0400'
M25      DC    AL4(MSG25) CL4'0800'
M26      DC    AL4(MSG26) CL4'0C00'
M27      DC    AL4(MSG27) CL4'1000'
M28      DC    AL4(MSG28) CL4'2000'
M29      DC    AL4(MSG29) CL4'5000'
M30      DC    AL4(MSG30) CL4'HELP'
MSGEND   EQU   *
CSWSSNBR DS    0F
N1       DC    CL4'0220'
N2       DC    CL4'0240'
N3       DC    CL4'0280'
N4       DC    CL4'0500'
N5       DC    CL4'0601'
N6       DC    CL4'0602'
N7       DC    CL4'0608'
N8       DC    CL4'060C'
N9       DC    CL4'0614'
N10      DC    CL4'0640'
N11      DC    CL4'0654'
N12      DC    CL4'0E01'
N13      DC    CL4'0E02'
N14      DC    CL4'0E08'
N15      DC    CL4'0E0C'
N16      DC    CL4'0E20'
N17      DC    CL4'0D00'
N18      DC    CL4'820C'
N19      DC    CL4'8210'
N20      DC    CL4'860C'
N21      DC    CL4'8640'
N22      DC    CL4'8654'
N23      DC    CL4'0000'
N24      DC    CL4'0400'
N25      DC    CL4'0800'
N26      DC    CL4'0C00'
N27      DC    CL4'1000'
N28      DC    CL4'2000'
N29      DC    CL4'5000'
N30      DC    CL4'HELP'
CSWSSEND EQU   *
CSWSSLTH EQU   CSWSSEND-CSWSSNBR
MSG1     DC    AL2(MSG2-*-2)
         DC    C'SS=0220',C'  '
         DC    CL29'UNIT CHECK,BUS OUT CHECK'
         DC    C'A PARITY CHECK WAS DETECTED ON THE      '
         DC    C'COMMAND BYTE                            '
         DC    C'                                        '
MSG2     DC    AL2(MSG3-*-2)
         DC    C'SS=0240',C'  '
         DC    CL29'UNIT CHECK,INTERVENTION REQ''D'
         DC    C'A COMMAND OTHER THAN SENSE WAS ADDRESSED'
         DC    C'TO A DEVICE THAT THE 3272 HAS RECORDED  '
         DC    C'AS UNAVAILABLE OR NOT READY             '
         DC    C'                                        '
MSG3     DC    AL2(MSG4-*-2)
         DC    C'SS=0280',C'  '
         DC    CL29'UNIT CHECK,COMMAND REJECT'
         DC    C'AN INVALID COMMAND WAS ISSUED TO 3272'
MSG4     DC    AL2(MSG5-*-2)
         DC    C'SS=0500',C'  '
         DC    CL29'DEVICE END,UNIT EXCEPTION'
         DC    C'3272 ATTEMPTED TO PERFORM A SELECT OR   '
         DC    C'ERASE ALL UNPROTECTED COMMAND. AFTER RE-'
         DC    C'TURNING INITIAL STATUS,FOUND ADDRESSED  '
         DC    CL40'DEVICE BUSY'
         DC    C'                                        '
MSG5     DC    AL2(MSG6-*-2)
         DC    C'SS=0601',C'  '
         DC    CL29'DEVICE END,UNIT CHECK'
         DC    CL11' ',CL29'OPERATION CHECK'
         DC    C'A WRITE OR ERASE/WRT COMMAND,CONTAINING '
         DC    C'A WCC WITH A START PRINT BIT,IS CHAINED '
         DC    C'TO A SUBSEQUENT COMMAND'
MSG6     DC    AL2(MSG7-*-2)
         DC    C'SS=0602',C'  '
         DC    CL29'DEVICE END,UNIT CK,CTRL CK'
         DC    C'THE ADDRESSED DEVICE FAILED TO RESPOND  '
         DC    C'IN A SPECIFIED PERIOD OF TIME TO A      '
         DC    C'SELECT,WRITE,ERASE/WRT OR AN ERASE ALL  '
         DC    C'UNPROTECTED COMMAND                     '
MSG7     DC    AL2(MSG8-*-2)
         DC    C'SS=0608',C'  '
         DC    CL29'DEVICE END,UNIT CK,DATA CK'
         DC    C'3272 (1) DETECTED PARITY OR CURSOR ERROR'
         DC    C'DURING A SELECT,WRITE OR ERASE/WRT CMD  '
         DC    C'OR (2) DETECTED A PARITY CK ON DATA     '
         DC    C'RECEIVED TO AN INTERNAL POLL'
MSG8     DC    AL2(MSG9-*-2)
         DC    C'SS=060C',C'  '
         DC    CL29'DEVICE END,UNIT CHECK'
         DC    CL11' ',CL29'DATA CHECK,UNIT SPECIFY'
         DC    C'ADDRESSED DEVICE DETECTED PARITY CK OR  '
         DC    C'CURSOR CK DURING A SELECT,WRITE,ERASE/- '
         DC    C'WRT,OR ERASE ALL UNPROTECTED COMMAND    '
         DC    C'                                        '
MSG9     DC    AL2(MSG10-*-2)
         DC    C'SS=0614',C'  '
         DC    CL29'DEVICE END,UNIT CHECK'
         DC    CL11' ',CL29'EQUIPMENT CHECK,UNIT SPECIFY'
         DC    C'A PRINTER CHARACTER GENERATOR ERROR     '
         DC    C'OCCURED OR PRINTER BECAME MECHANICALLY  '
         DC    C'DISABLED DURING PRINTOUT'
MSG10    DC    AL2(MSG11-*-2)
         DC    C'SS=0640',C'  '
         DC    CL29'DEVICE END,UNIT CHECK'
         DC    CL11' ',CL29'INTERVENTION REQUIRED'
         DC    C'A COMMAND ATTEMPTING TO START A PRINTER '
         DC    C'FOUND IT NOT READY                      '
         DC    C'                                        '
MSG11    DC    AL2(MSG12-*-2)
         DC    C'SS=0654',C'  '
         DC    CL29'DEVICE END,UNIT CHK,INTV RQRD'
         DC    CL11' ',CL29'EQUIPMENT CHK,UNIT SPECIFY '
         DC    C'A COMMAND TO START PRINT OPERATION FOUND'
         DC    C'PRINTER CARRIAGE MOTOR POWER OFF'
MSG12    DC    AL2(MSG13-*-2)
         DC    C'SS=0E01',C'  '
         DC    CL29'CHANNEL END,DEVICE END'
         DC    CL11' ',CL29'UNIT CHECK,OPERATION CHECK'
         DC    C'ON A WRITE OR ERASE/WRT COMMAND,3272    '
         DC    C'RECEIVED ILLEGAL BUFFER ADDRESS IN DATA-'
         DC    C'STREAM,OR DATA ENDED BEFORE PROVIDING   '
         DC    C'ALL CHARACTERS REQUIRED FOR SBA,RA,SF OR'
         DC    C'EUA ORDERS'
MSG13    DC    AL2(MSG14-*-2)
         DC    C'SS=0E02',C'  '
         DC    CL29'CHANNEL END,DEVICE END'
         DC    CL11' ',CL29'UNIT CHECK,CONTROL CHECK'
         DC    C'ADDRESSED DEVICE FAILED TO RESPOND IN   '
         DC    C'TIME TO AN ERASE/WRT,UNCHAINED READ     '
         DC    C'BUFFER,READ MODIFIED OR WRITE COMMAND   '
         DC    C'                                        '
MSG14    DC    AL2(MSG15-*-2)
         DC    C'SS=0E08',C'  '
         DC    CL29'CHANNEL END,DEVICE END'
         DC    CL11' ',CL29'UNIT CHECK,DATA CHECK'
         DC    C'3272 DETECTED CURSOR OR PARITY CHECK ON '
         DC    C'TRANSMISSION OF DATA ON A READ BUFFER OR'
         DC    C'READ MODIFIED COMMAND'
MSG15    DC    AL2(MSG16-*-2)
         DC    C'SS=0E0C',C'  '
         DC    CL29'CHANNEL END,DEVICE END'
         DC    CL11' ',CL29'UNIT CK,DATA CK,UNIT SPECIFY'
         DC    C'ADDRESSED DEVICE DETECTED PARITY OR     '
         DC    C'CURSOR CHECK ON WRITE, READ BUFFER OR   '
         DC    C'READ MODIFIED COMMAND                   '
         DC    C'                                        '
MSG16    DC    AL2(MSG17-*-2)
         DC    C'SS=0E20',C'  '
         DC    CL29'CHANNEL END,DEVICE END'
         DC    CL11' ',CL29'UNIT CHECK,BUS OUT CHECK'
         DC    C'3272 DETECTED A PARITY ERROR ON A CHAR- '
         DC    C'ACTER IN DATA-STREAM OF A WRITE OR ERASE'
         DC    C'/WRITE COMMAND'
MSG17    DC    AL2(MSG18-*-2)
         DC    C'SS=0D00',C'  '
         DC    CL29'CHANNEL END,DEVICE END'
         DC    CL11' ',CL29'UNIT EXCEPTION'
         DC    C'3272 ATTEMPTED A READ BUFFER,READ MOD-  '
         DC    C'IFIED,WRITE OR ERASE/WRITE COMMAND BUT  '
         DC    C'FOUND AFTER RETURNING INITIAL STATUS,   '
         DC    C'THE ADDRESSED DEVICE WAS BUSY           '
         DC    C'                                        '
MSG18    DC    AL2(MSG19-*-2)
         DC    C'SS=820C',C'  '
         DC    CL29'ATTENTION,UNIT CHECK'
         DC    CL11' ',CL29'DATA CHECK,UNIT SPECIFY'
         DC    C'AN IDLE DEVICE DETECTED A PARITY CHECK  '
         DC    C'OR CURSOR CHECK IN ITS BUFFER'
MSG19    DC    AL2(MSG20-*-2)
         DC    C'SS=8210',C'  '
         DC    CL29'ATTENTION,UNIT CHECK'
         DC    CL11' ',CL29'EQUIPMENT CHECK'
         DC    C'AN IDLE 3272 POLLED A DEVICE TWICE AND  '
         DC    C'DETECTED A TRANSMIT PARITY CHECK EACH   '
         DC    C'TIME ON THE DATA IN THE DEVICE REPLY    '
MSG20    DC    AL2(MSG21-*-2)
         DC    C'SS=860C',C'  '
         DC    CL29'ATTENTION,DEV END,UNIT CHECK'
         DC    CL11' ',CL29'DATA CHECK,UNIT SPECIFY'
         DC    C'A DEVICE CHANGED FROM NOT AVAILABLE TO  '
         DC    C'AVAILABLE OR NOT READY TO READY AND DET-'
         DC    C'ECTED A CURSOR CK IN ITS BUFFER OR A PRI'
         DC    C'NTER DETECTED A PARITY CK WHILE PRINTING'
MSG21    DC    AL2(MSG22-*-2)
         DC    C'SS=8640',C'  '
         DC    CL29'ATTN,DEVICE END,UNIT CK'
         DC    CL11' ',CL29'INTERVENTION REQUIRED'
         DC    C'THE ADDRESSED PRINTER BECAME NOT READY  '
         DC    C'(OUT OF PAPER OR COVER OPEN)BEFORE PRINT'
         DC    C'OPERATION WAS COMPLETED                 '
         DC    C'                                        '
MSG22    DC    AL2(MSG23-*-2)
         DC    C'SS=8654',C'  '
         DC    CL29'ATTN,DEVICE END,UNIT CHECK   '
         DC    CL11' ',CL29'INTV RQRD,EQUIPT CK,UNIT SPEC'
         DC    C'A PRINTER BECAME MECHANICALLY DISABLED  '
         DC    C'DURING A PRINTOUT AND AUTOMATIC RECOVERY'
         DC    C'WAS NOT SUCCESSFUL'
MSG23    DC    AL2(MSG24-*-2)
         DC    C'SS=0000',C'  '
         DC    CL29'ZERO STATUS     '
         DC    C'NORMAL STATUS FOR ANY COMMAND OTHER THAN'
         DC    C'NO-OP,SELECT,OR ERASE ALL UNPROTECTED   '
         DC    C'                                        '
MSG24    DC    AL2(MSG25-*-2)
         DC    C'SS=0400',C'  '
         DC    CL29'DEVICE END          '
         DC    C'DENOTES THE FOLLOWING CHANGE IN DEVICE  '
         DC    C'STATUS--BUSY TO NOT BUSY,NOT AVAILABLE  '
         DC    C'TO AVAILABLE,BUFFER TRANSFER COMPLETE,  '
         DC    C'OR ON/OFF LINE SWITCH TO ONLINE'
MSG25    DC    AL2(MSG26-*-2)
         DC    C'SS=0800',C'  '
         DC    CL29'CHANNEL END     '
         DC    C'NORMAL STATUS FOR SELECT OR EAU         '
         DC    C'                                        '
MSG26    DC    AL2(MSG27-*-2)
         DC    C'SS=0C00',C'  '
         DC    CL29'CHANNEL END,DEVICE END'
         DC    C'NORMAL STATUS FOR A NO-OP COMMAND       '
         DC    C'                                        '
MSG27    DC    AL2(MSG28-*-2)
         DC    C'SS=1000',C'  '
         DC    CL29'BUSY            '
         DC    C'RESPONSE TO A COMMAND ADDRESSED TO A    '
         DC    C'DEVICE SERVICING A PRIOR ISSUED COMMAND'
MSG28    DC    AL2(MSG29-*-2)
         DC    C'SS=2000',C'  '
         DC    CL29'CONTROL UNIT END'
         DC    C'3272 HAD BEEN ADDRESSED WHILE BUSY,BUT  '
         DC    C'IS NOW NOT BUSY AND FREE TO ACCEPT A NEW'
         DC    C'COMMAND                                 '
         DC    C'                                        '
MSG29    DC    AL2(MSG30-*-2)
         DC    C'SS=5000',C'  '
         DC    CL29'STATUS MODIFIER,BUSY'
         DC    C'RESPONSE TO A COMMAND ADDRESSED TO A    '
         DC    C'DEVICE OTHER THAN DEVICE WHOSE STATUS IS'
         DC    C'PENDING OR DEVICE BEING SERVICED BY 3272'
MSG30    DC    AL2(LASTMSG-*-2)
         DC    C'SS=HELP',C'  '
         DC    CL29'LOCAL STATUS/SENSE HELPER.'
         DC    CL40'FIELDS "SS=XXXX" REFER TO 1ST BYTE OF'
         DC    CL40'CSW AND THE SENSE BYTE.  FOR INSTANCE,'
         DC    CL40'IF ERROR DISPLAY SHOWED CSW=0E00 AND'
         DC    CL40'SENSE=02, LOOK UP MSG FOR "SS=0E02"'
LASTMSG  EQU   *
         END   BNGILOCL
