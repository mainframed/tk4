         PRINT OFF
         MACRO
&NAME    BNGHJN &LABEL,&HJN
         LCLC  &HJA,&HJB
&HJA     SETC  '&SYSPARM'(1,4)
&HJB     SETC  '&SYSPARM'(5,4)
         AIF   ('&LABEL' EQ '').NOBRNCH
         B     &LABEL .                 BR AROUND CONSTANTS
         SPACE 2
.NOBRNCH ANOP
         AIF   ('&NAME' EQ '').NOLABEL
         DC    C'&NAME' .              MODULE IDENTIFIER
.NOLABEL ANOP
         DC    X'&HJA' .                DATE OF MODIFICATION
         AIF   ('&HJN' NE 'HJN').DATE
         DC    X'&HJB' .                HJN OF MODIFICATION
.DATE    ANOP
         AIF   ('&LABEL' EQ '').NOLBL
         SPACE 2
&LABEL   DS    0H
.NOLBL   ANOP
         MEND
         PRINT ON
***********************************************************************
*                                                                     *
* MODULE NAME = BNGTDISP                                              *
*                                                                     *
* DESCRIPTIVE NAME = TCAM DEMF DISPLAY CONTROL MODULE                 *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 1, LEVEL 1                                         *
*                                                                     *
* FUNCTION = 1) EDITS THE INPUT INTO 6 PARM FIELDS WITH LEFT JUSTIFY; *
*            2) DOES SYNTAX CHECK ON DEMF COMMANDS AND PARAMETERS;    *
*            3) DETERMINES WHETHER THE REQUEST IS FOR MENU,REMOTE,    *
*               LOCAL OR 3270 SCREEN ERROR DISPLAY AND PASSES CONTROL *
*               TO BNGTMENU,BNGTRMOT,BNGTLOCL OR BNGT3270 SEGMENT     *
*               ACCORDINGLY WITH PARAMETERS;                          *
*            4) HANDLES ALL,LINE AND CTRL ERROR DISPLAY REQUEST AND   *
*               WRITES ITS ERROR INFORMATION TO THE 3270 DISPLAY      *
*               TERMINAL AND ISSUES SOME OF THE DISPLAY MESSAGES;     *
*            5) ACCESSES SYS1.DEMFLOG DATA FILE FOR ALL,LINE AND CTRL *
*               ERROR DISPLAY REQUEST.                                *
*                                                                     *
* NOTES = NONE                                                        *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS = R10 RECEIVES ADDRESS OF I/O MESSAGE AREA  *
*                           FROM BNGTQEMF                             *
*                                                                     *
*    PATCH LABEL = NONE                                               *
*                                                                     *
* MODULE TYPE = TCAM DISPLAY CONTROL                                  *
*                                                                     *
*    PROCESSOR = ASSEMBLER H                                          *
*                                                                     *
*    MODULE SIZE = 9821 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = SERIALLY REUSABLE                                   *
*                                                                     *
* ENTRY POINT = BNGTDISP                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = R1  LOADED WITH THE PARAM LIST POINTER                 *
*              R14 LOADED WITH THE RETURN ADDR (USED BY SUBROUTINE)   *
*              R15 LOADED WITH ENTRY POINT                            *
*                                                                     *
* INPUT = PARAM LIST ITEMS USED ARE :                                 *
*         IN MESSAGE ADDRESS  = TCAMFLDS (R10)                        *
*         IN MESSAGE COUNT    = VARIABLE (MAXIMUM=117 BYTES)          *
*                                                                     *
* OUTPUT = PARAM LIST ITEMS USED ARE :                                *
*         OUT MESSAGE ADDRESS = TIOADBAO (R10)                        *
*         OUT MESSAGE COUNT   = VARIABLE (MAXIMUM=2008 BYTES)         *
*                                                                     *
* EXIT-NORMAL = REGISTER 15 RETURN CODE RETURNED TO CALLER :          *
*               00 - OPERATION PERFORMED AS REQUESTED                 *
*                                                                     *
* EXIT-ERROR  = SYNAD ROUTINE AT LABEL - F190                         *
*                                                                     *
* EXTERNAL REFERENCE = BNGTLOCL,BNGTRMOT,BNGTMENU AND BNGT3270        *
*                                                                     *
*    ROUTINES = LOCATE ROUTINE                                        *
*               MOD1SCAN ROUTINE                                      *
*               MOD1 TABLE BUILD (AT LABEL S215) ROUTINE              *
*                                                                     *
*    DATA AREAS = SEE INPUT AND OUTPUT ABOVE                          *
*                                                                     *
*    CONTROL BLOCK = DCB (AT LABEL EMFILE)                            *
*                                                                     *
* TABLES = TABLE    - FUNCTION/COMPANION TABLE                        *
*          MOD1TAB  - 3277 MODEL 1 TABLE                              *
*          HXTOEB   - HEX CHARS TO EBCDIC CHARS TABLE                 *
*          EBTOHX   - EBCDIC CHARS TO HEX CHARS TABLE                 *
*          LOTOUP   - LOWER TO UPPER CASE CHARS TABLE                 *
*                                                                     *
* MACROS = LINK, SAVE, RETURN, OPEN, READ, CHECK, CLOSE               *
*                                                                     *
* CHANGE ACTIVITIES AS FOLLOWS:                                       *
* CHANGE 01  11/15/77  PROLOGUE ADDED                                 *
* CHANGE 02  02/22/78  BNGHJN MACRO ADDED                             *
*A091000                                                       @OZ30479
*D097500                                                       @OZ30479
*C152500,157000-159000                                         @OZ30479
*C477500                                                       @OZ30478
*C097000                                                       @OZ30675
*A490500                                                       @OZ31880
*D411500-412500                                                @OZ31877
*C414000-414500,506500-507000,554000-555000,556500-560000      @OZ31877
*C561500-564000                                                @OZ31877
*A369500,613000,636500                                         @OZ31884
*                                                                     *
***********************************************************************
  TITLE 'DISPLAY AUDITS INPUT AND DISPLAYS ALL LINES,LINE, CTRL'
TCAMFLDS DSECT
         USING *,10
TIOATDL  DC    X'0000'      TERMINAL DATA LENGTH
TCTTETT  DS    CL1    91=REMOTE  99=LOCAL 3270
TCTTETM  DS    CL1      F1= MODEL 1  F2=MODEL 2 3270
TCTTEGU  DS    0H
TCTTELRN DS CL3     LINE ADDRESS REL LINE #
TCTTETA  DS    CL1      CONTROL UNIT ADDRESS
         DS    CL1     TERMINAL ADDRESS REMOTE
TIOADBA  DS    CL100          TERMINAL INPUT AREA
TCTTETI  DS CL8      TCAM SYMBOLIC ADDRESS
TIOWCC   DS    CL1        C2 CHARACTER FULL SCREEN WRTIE
TIOADBAO DS    CL2000    TERMINAL OUTPUT AREA
DECB     DSECT                     USED IN FILE I/O ERROR ROUTINE
         DS    CL1
EXCPBITS DS    CL2                 ADR OD EXCP BITS PLACED BY SUPVR
         DS    CL1
SLOTS    DSECT           MAP OF ENTRIES IN CONTROL BLOCK
         USING SLOTS,DATAREG
SLOTLINE DS    CL6                CHANNEL ADDRESS(PORT OR LIB)
SLOTNBC  DS    CL2                NUMBER OF BLOCKS IN THIS CHAIN
SLOTHITS DS    CL2                TOTAL HITS ON THIS LINE
SLOTRFB  DS    CL3                RELATIVE ADDRESS FIRST BLOCK IN CHAIN
SLOTRLB  DS    CL3                RELATIVE ADDRESS LAST BLOCK IN CHAIN
SLOTLTH  EQU   *-SLOTS
         ORG   SLOTS         MAP OF MDR AND OBR IN DETAIL BLOCKS
DATALTH  DS    C                   LTH OF THIS SLOT
LINEIDA  DS    CL6                 LINE AND LIB ADDR
ENTRYTYP DS    C                   ENTRY TYPE - MDR OR OBR
         DS    CL3
MDRTYPE  DS    C                   TYPE HDWE - 03 EQUALS 3270
         DS    CL3
DATE     DS    CL4                 DATE OF ERROR - 00YY0DDF
TIME     DS    CL4                 TIME OF ERROR - HHMMSSHH
         DS    CL8
MDRCUA   DS    CL2                 MDR CHAN & UNIT ADDR
MDRCTRL  DS    C                   MDR CTRL UNIT POLL ADDR
MDRTERM  DS    C                   MDR TERMIL POLL ADDR
MDRSTATS DS    CL2                 REMOTE 3270 STATUS
         DS    CL2
OBRCCW   DS    CL8                 LAST CCW EXECUTED
OBRCSW   DS    CL8                 CHANNEL STATUS WORD
         DS    CL6
OBRUCB   DS    C
         DS    CL3
OBRCUA   DS    CL2                 OBR CHAN & UNIT ADDR
OBRCTRL  DS    C
OBRTERM  DS    C
         DS    CL12
OBRSENSE DS    CL2                 OBR SENSE BYTES
***********************************************************************
SBA      EQU   X'11'          SET BUFFER ADDRESS
SF       EQU   X'1D'          START FIELD
IC       EQU   X'13'          INSERT CURSOR
UNA      EQU   X'40'          UNPROTECTED,NORMAL INTENSITY, ALPHAMERIC
UMN      EQU   X'41'               UNPROT,NORMAL,MODIFIED
PNA      EQU   X'60'          PROTECTED, NORMAL INTENSITY, ALPHAMERIC
PHA      EQU   X'E8'              PROTECTED, HIGH INTENSITY, ALPHAMERIC
MNP      EQU   X'61'               PROT,MODIFIED,NORMAL
PIA      EQU   X'6D'               PROTECTED,MODIFIED,INVISIBLE,ALPHA
L1P1     EQU   X'4040'        LINE 1, POSITION 1  BUFFER ADDRESS.
L1P7     EQU   X'40C6'        LINE 1, POSITION 7  BUFFER ADDRESS.
L1P36    EQU   X'40E3'        LINE 1, POSITION 36 BUFFER ADDRESS.
L2P1     EQU   X'C150'        LINE 2, POSITION 1  BUFFER ADDRESS.
L2P4     EQU   X'C1D3'
L2P44    EQU   X'C17B'
L3P1     EQU   X'C260'
L3P4     EQU   X'C1D3'
L4P1     EQU   X'C3F0'       LINE 4, POSITION 1  BUFFER ADDRESS.
L4P4     EQU   X'C17B'
L6P26    EQU   X'C6E9'       LINE 6 POS 26 BUFFER ADDRESS
R0       EQU   0             USED IN FILE I/O ERROR ROUTINE
R1       EQU   1
REG1     EQU   1
BASE1    EQU   3             BASE REGISTER ONE = 0-4095
BASE2    EQU   4             BASE REGISTER TWO = 4096-8191
BASE3    EQU    12           BASE REGISTER THREE 8192 - 12287
TIOABAR  EQU   5             POINTS TO TIOA
MOD1REG  EQU   5             POINTS TO MOD-1 TABLE (MOD1TABL)
FIOABAR  EQU   6             POINTS TO FIOA
PARMREG  EQU   6             POINTS TO PARM AREA
OUTREG   EQU   7             POINTS TO DATA IN TIOA AREA
OUTLOOP  EQU   8             USED FOR LOOPING THRU DATA IN TIOA AREA
R8       EQU   8             USED IN FILE I/O ERROR ROUTINE
DATAREG  EQU   9             POINTS TO DATA IN FIOA AREA
DATALOOP EQU   2             USED FOR LOOPING THRU DATA IN FIOA AREA
TABLEREG EQU   11                 POINTS TO FUNCTION/COMPANION TABLE
LINKREG  EQU   11                 SUBROUTINE LINKAGE
R11      EQU   11
R13      EQU   13
R14      EQU   14
R15      EQU   15
***********************************************************************
BNGTDISP CSECT
         SAVE  (14,12)             SAVE CALLERS REGS
         BALR  BASE1,0             ADDRESS ABILITY
         USING *,BASE1,BASE2,BASE3
BNGTDISP BNGHJN SKIPID                                         @OZ30479
         ST     R13,SAVREG      SAVE CALLERS SAVE REG
         LA    R13,SAVAREA
         LA    BASE2,2048(BASE1)
         LA    BASE2,2048(BASE2)
         LA    BASE3,2048(BASE2)
         LA    BASE3,2048(BASE3)
         LA    TIOABAR,TIOADBA       LOAD ADDRESS OF INPUT AREA
         ST    TIOABAR,TCTTEDA       SAVE INPUT AREA ADDRESS
         LA    FIOABAR,FIOADBA       LOAD ADDRESS OF FILE AREA
         ST    R14,TCAFCAAA        STORE RETURN ADDRESS IN  THIS FIELD
         ST    FIOABAR,TCAFCAA
         LA    BASE1,EMFILE             POINT R3 TO EMFILE     @OZ30675
         B     PROGSTRT                                        @OZ30675
         DROP  BASE1                                           @OZ30675
***************************************************************@OZ30675
* NOTE: ANY CHANGE BETWEEN THIS POINT AND LABLE 'PROGSTRT'     @OZ30675
*      REQUIRES A LIKE CHANGE TO BNGTDISP DSECT IN BNGT3270,   @OZ30675
*      BNGTMENU, BNGTLOCL, AND IN BNGTRMOT.                    @OZ30675
***************************************************************@OZ30675
         USING EMFILE,BASE1                                    @OZ30675
EMFILE DCB DDNAME=EMFILE,DSORG=DA,MACRF=(RIC),OPTCD=R,                 X
               RECFM=F,SYNAD=F190
SAVREG   DS    A                   RETURN SAVE AREA ADDRESS
SAVAREA  DS    18F                 DEMFDISP SAVE AREA
TCAFCAAA DS    A                   TCAM RETURN ADDRESS
TCTTEDA  DS    A                   ADDRESS OF PASSED FIELD
TCAPCPI  DC    CL8'00'        SYMBOLIC PROGRAM NAME TO LINK TO
TCAFCAA  DS    A                   FILE I/O AREA
         DS    0H
* INSERT PARM1 AND OTHER DC'S HERE
PARM1    DS    D                   1ST INPUT PARM - DEMF
PARM2    DS    D                   2ND INPUT PARM - ALL/LINE/CTRL/
*                                       TERM   24230000
PARM3    DS    D                   3RD INPUT PARM
PARM4    DS    D                   4TH INPUT PARM
PARM5    DS    D                   5TH INPUT PARM
PARM6    DS    D                   6TH INPUT PARM
SBACNT   DS    PL1                 COUNT OF SBA'S IN INPUT
RELREC   DS    CL3                 BDAM RELATIVE BLOCK ADDRESS
SVRELREC DS    CL3           SAVE AREA FOR LINE/CTRL RELATIVE BLOCK NO.
DBLWD    DS    D                   DOUBLEWORD WORK AREA
DUBLWD   EQU   DBLWD
FULLWD   DS    F                   FULLWORD WORK AREA
TWALINE  DS     F          SAVE AREA FOR TCAM SYMBOLIC LINE POINTER
*   THE TWA FROM HERE UP MUST REMAIN IN THAT ORDER TO MATCH TWALINE
*         WITH TWATCTID IN THE 3270 PROGRAM.
LINEID   DS    XL6                 HARDWARE LINE ADDRESS
LINENAME DS    CL8           LINE NAME SAVE AREA FOR RECAP HEADER
CTRLID   DS    X                   HARDWARE CONTROL UNIT ADDRESS
CTRLNAME DS    CL8           CTRL/CLUSTER NAME WORK AREA FOR OUTPUT
TERMNAME DS    CL8                 TERML/LOGICAL UNIT NAME WORK AREA
CLUSNAME DS    CL8           CTRL/CLUSTER NAME SAVE AREA FOR RECAP HDR.
NEWPARM  DS    C                   NEW-PARM SWITCH
CTRPARM  DS    C                   COUNTER OF CHARACTERS IN PARM(X)
SAVETIOA DS    F                   SAVE AREA FOR ORIGINAL TIOA
SAVEBBSS DS    F                   SAVE POINTER TO BLK AND SLOT
TWASLOT  DS    C                   INPUT SLOT COUNT IN HEX
*                                  DISPLACEMENTS IN TIOA
SAVERCAP DS    F                   SAVEAREA FOR POINTER TO RECAP LINE
SAVEITEM DS    F                   SAVEAREA FOR POINTER TO FIRST LINE
*                                  AND CTRL DISPLAYS
SLOTCNT  DS    C                   COUNT OF DETAIL SLOTS READ
ITEMCNT  DS    PL2                 COUNT OF OUTPUT ITEMS IN LINE
WORKCNT  DS    PL2                 ITEM WORK COUNTER
WORK15   DS    CL15
QUITSW   DS    C             USED TO STOP EDIT OF INPUT ON 3RD SBA
*                             IF 2ND SBA = L1P7 OR L6P26  ***ALSO*** XH
*                            USED AS MOD-1 OUTPUT-FULL-SWITCH        XH
*                               00 = NOT FULL   FF = OUTPUT FULL BUT XH
*             CONTINUE SCANNINGDATABASEFOR CORRECT ERROR COUNTSXH
         DC    C'FILE I/O AREA'
         CNOP  0,4
         USING *,FIOABAR
DFHFIOA  DS    0H      FILE I/O AREA ADDRESS
FIOADBA  DC    4096X'00'             FILE INPUT AREA
ENDDATA  DC    X'FFFFFFFF'         MARK END OF FILE RECORD
         ORG FIOADBA
CTRLLAST DS    F                   LAST USED ADDR IN DATASET
CTRLTOTL DS    F                   TOTAL BLOCKS IN DATASET
CTRLBACK DS    F                   BACKWARD PTR IN CTRL BLK CHAIN
CTRLFWD  DS    F                   FORWARD PTR IN CTRL BLK CHAIN
CTRLENTS DS    C                   NBR ENTRIES IN THIS CTRL BLK
         DS    CL15                FOR FUTURE USE
CTRLSLT1 DS    0C                  START OF CTRL SLOT NBR ONE.
         ORG   FIOADBA
DATAPORT DS    CL6                 PORT & LIB ADDR
DATATIME DS    CL4                 TIME BLOCK CREATED
DATADATE DS    CL4                 DATE BLOCK CREATED
DATAFWD  DS    CL3                 FORWARD CHAIN ADDR
DATABACK DS    CL3                 BACKWAD CHAIN ADDR
BLKLTH   DS    CL2                 NBR BYTES USED IN THIS BLOCK
         DS    CL10
DATASLT1 DS    0C                  START OF 1ST DATA SLOT
         ORG   ENDDATA+8
PROGSTRT EQU    *
         L     TIOABAR,TCTTEDA
         ZAP   SBACNT,=P'0'        SET SBA COUNTER TO ZERO.
         TR    TIOADBA(80),LOTOUP  TRANSLATE LOWER CASE TO UPPER CASE.
         LA    DATAREG,TIOADBA      POINT TO 1ST BYTE IN TIOA.
         LR    DATALOOP,DATAREG    SETUP DATA LOOP
         AH    DATALOOP,TIOATDL    DATALOOP = INPUT END POINTER
         LA    PARMREG,PARM1       POINT TO PARMS.
         XC    PARM1(48),PARM1     ZERO OUT PARM FIELDS
         LR    R14,PARMREG
         MVI   QUITSW,X'00'        INIT QUITSW = 00
         MVI   NEWPARM,C'1'        TURN ON 'NEW PARM' SWITCH.
         MVI   CTRPARM,X'00'       INIT PARM COUNTER = ZERO
A160     CLI   0(DATAREG),SBA      IS THIS BYTE AN SBA?
         BNE   A210                NO. CHECK IT FURTHER.
         CLI   QUITSW,X'FF'            QUIT SWITCH ON?
         BE    C10                          YES.  QUIT EDIT.
         CLC   1(2,DATAREG),=AL2(L1P7)  IS 2ND SBA = LINE 1 POSN 7
         BE    A170                NO,CONTINUE EDIT
         CLC   1(2,DATAREG),=AL2(L6P26) IS 2ND SBA = LINE 6 POS 26
         BNE   A180                              NO. CONTINUE EDIT
A170     MVI   QUITSW,X'FF'        TURN QUIT SWITCH ON
A180     AP    SBACNT,=P'1'        YES. ADD TO TO SBA COUNTER.
         LA    DATAREG,2(DATAREG)  BUMP TIOA POINTER BY 2.
         B     B80
A210     CLI   0(DATAREG),C'A'     IS IT AN 'A' OR HIGHER?
         BL    B80                 NO. CHECK NEW PARM SWITCH.
         CLI   NEWPARM,C'1'        IS FIRST CHAR FOR PARM(X)?
         BNE   B10                 NO.
         MVI   NEWPARM,C'0'        YES. SET FIRST CHAR IN FOR PARM
         MVI   CTRPARM,X'00'       SET PARM CHAR CTR = 0
B10      IC    R11,CTRPARM         LOAD R11 = CTRPARM
         LA    R11,1(R11)          ADD CTRPARM = CTRPARM + 1
         STC   R11,CTRPARM         STORE NEW CTR BACK CTRPARM
         CLI   CTRPARM,X'08'       IS CHAR COUNT IN PARM OVER 8 ?
         BH    B50                 YES.                        @OZ30479
         MVC   0(1,14),0(DATAREG)  PUT THIS BYTE IN THIS PARM
         CLI   PARM6+7,X'00'       ARE ALL PARMS USED UP?
         BNE   C10                 YES. GOTO SYNTAX CHECKING ROUTINE
         LA    14,1(14)            BUMP PARM POINTER WORKREG.
B40      LA    DATAREG,1(DATAREG)  BUMP TIOA POINTER.
         CR    DATAREG,DATALOOP    IS THERE MORE DATA IN TIOA?
         BL    A160                YES. GO PROCESS MORE DATA.
         B     C10                 NO. GOTO SYNTAX CHECKING ROUTINE
B50      CLC   PARM2(5),=X'F3F2F7F000'  IS THIS 3270 INPUT ?   @OZ30479
         BNE   B40                      NO.                    @OZ30479
         CP    SBACNT,=P'2'        IS THIS NON-XED INPUT ?     @OZ30479
         BH    B40                 NO.                         @OZ30479
         B     Z40                 SEND INVALID SYNTAX MSG.    @OZ30479
B80      CLI   NEWPARM,C'1'        IS NEW-PARM SWITCH ON?
         BE    B40                 YES. CHECK FOR MORE DATA.
         CLI   PARM6,X'00'         NO. ARE ALL PARMS USED UP?
         BNE   C10                 YES. GOTO SYNTAX CHECKING ROUTINE
         LA    PARMREG,8(PARMREG)  NO. BUMP TO NEXT NEW PARM.
         LR    14,PARMREG          POINT WORK REG TO NEXT PARM.
         MVI   NEWPARM,C'1'        TURN ON NEW-PARM SWICH.
         B     B40                 GO CHECK FOR MORE DATA.
***********************************************************************
*                                                                     *
*        SYNTAX CHECKING ROUTINE                                      *
*                                                                     *
***********************************************************************
C10      CLI   QUITSW,X'FF'            IS SBA QUIT SWT ON ?
         BE    C15                     YES. DATA ENTERED FROM 29 AREA
         CP    SBACNT,=P'1'            NO. IS SBACNT > 1 ?
         BH    CC10                    YES. BYPASS SYNTAX CHECK
         CLI   PARM2,X'00'             IS PARM2 BLANK ?
         BE    D80                     YES. GOTO BNGTMENU
C15      CLC   PARM2(5),=X'D4C5D5E400' IS PARM2=MENU ?
         BNE   C20                     NO
         CLI   PARM3,X'00'             IS PARM3 = 00 ?
         BE    D80                     YES. GOTO BNGTMENU
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C20      CLC   PARM2(4),=X'C1D3D300'   IS PARM2 = ALL ?
         BNE   C30                     NO
         CLI   PARM3,X'00'             IS PARM3 = 00 ?
         BE    CC10                    YES.GO SCHEDULE APPROPRIATE PGM
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C30      CLC   PARM2(6),=X'D3D6C3C1D300'  IS PARM2 = LOCAL ?
         BNE   C40                        NO
         CLI   PARM3,X'00'             IS PARM3 = 00 ?
         BE    CC10                    YES.GO SCHEDULE APPROPRIATE PGM
         CLC   PARM3+1(2),=C'SS'       IS LOCAL/REMOTE SCREEN ?
         BE    CC10                    YES.
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C40      CLC   PARM2(6),=X'D9C5D4D6E3C5' IS PARM2 = REMOTE ?
         BNE   C50                     NO.
         CLC   PARM2+7(1),=C'S'        IS REMOTE SCREEN ?
         BE    C45                     YES.
         CLI   PARM2+6,X'00'           IS REMOTE SYNTAX ERROR ?
         BNE   Z40                     YES. GO ISSUE INVALID FORMAT MSG
         CLI   PARM3,X'00'             IS PARM3 = 00 ?
         BE    CC10                    YES.GO SCHEDULE APPROPRIATE PGM
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C45      CLI   PARM3,X'00'             IS REMOTE SCREEN ?
         BNE   CC10                    YES.
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C50      CLC   PARM2(5),=X'D3C9D5C500' IS PARM2 = LINE ?
         BNE   C60                     NO
         CLI   PARM4,X'00'             IS PARM4 = 00 ?
         BNE   Z40                     NO. GO ISSUE INVALID FORMAT MSG
C55      CLI   PARM3+3,X'00'           LINE ADDR = 4 OR MORE ?
         BNE   Z40                     YES.
         CLI   PARM3+2,X'00'           LINE ADDR = 2 OR LESS ?
         BE    Z40                     YES.
         LA    DATALOOP,3              SET FOR SCAN 3 CHARS
         LA    DATAREG,PARM3           SET DATAREG = PARM3 PTR
C57      CLI   0(DATAREG),X'F0'        IS BYTE(PARM3) >= C'0' ?
         BNL   C59                     YES. IT IS NUMERIC
         CLI   0(DATAREG),X'C6'        IS BYTE(PARM3) > C'F' ?
         BH    Z40                     YES. IT IS INVALID FORMAT
C59      LA    DATAREG,1(DATAREG)      BUMP TO NEXT BYTE OF PARM3
         BCT   DATALOOP,C57            LOOP
         B     CC10                    NO. GO SCHEDULE APPROPRIATE PGM
C60      CLC   PARM2(5),=X'C3E3D9D300' IS PARM2 = CTRL ?
         BNE   C70                     NO
         CLI   PARM5,X'00'             IS PARM5 = 00 ?
         BNE   Z40                     NO.
         CLI   PARM4,X'00'             IS PARM4 = 00 ?
         BE    C55                     YES.
C65      CLI   PARM4+2,X'00'           CTRL ADDR = 3 OR MORE ?
         BNE   Z40                     YES.
         CLI   PARM4+1,X'00'           CTRL ADDR = 1 OR LESS ?
         BE    Z40                     YES.
C66      LA    DATALOOP,2              SET FOR SCAN 2 CHARS
         LA    DATAREG,PARM4           SET DATAREG = PARM4 PTR
C67      CLI   0(DATAREG),X'F0'        IS BYTE(PARM3) >= C'0' ?
         BNL   C69                     YES. IT IS NUMERIC
         CLI   0(DATAREG),X'C6'        IS BYTE(PARM3) > C'F' ?
         BH    Z40                     YES. IT IS INVALID FORMAT
C69      LA    DATAREG,1(DATAREG)      BUMP TO NEXT BYTE OF PARM3
         BCT   DATALOOP,C67            LOOP
         B     C55                     NO. GO CHECK LINE ADDR (PARM3)
C70      CLC   PARM2(5),=X'F3F2F7F000' IS PARM2 = 3270 ?
         BNE   Z40                     NO.
         CLI   PARM6,X'00'             IS PARM6 = 00 ?
         BNE   Z40                     NO.
         CLI   PARM5,X'00'             IS PARM5 = 00 ?
         BE    C75                     YES.
         CLI   PARM5+2,X'00'           IS TERMINAL ADDR = 3 OR MORE ?
         BNE   Z40                     YES.
         CLI   PARM5+1,X'00'           IS TERMINAL ADDR = 1 OR LESS ?
         BE    Z40                     YES.
         LA    DATALOOP,2              SET FOR SCAN 2 CHARS
         LA    DATAREG,PARM5           SET DATAREG = PARM5 PTR
C72      CLI   0(DATAREG),X'F0'        IS BYTE(PARM3) >= C'0' ?
         BNL   C74                     YES. IT IS NUMERIC
         CLI   0(DATAREG),X'C6'        IS BYTE(PARM3) > C'F' ?
         BH    Z40                     YES. IT IS INVALID FORMAT
C74      LA    DATAREG,1(DATAREG)      BUMP TO NEXT BYTE OF PARM3
         BCT   DATALOOP,C72            LOOP
         B     C65                     NO. GO CHK LINE AND CTRL
C75      CLI   PARM4,X'00'             IS PARM4 = 00 ?
         BNE   Z40                     NO.
         CLI   PARM3,X'00'             IS PARM3 = 00 ?
         BE    D10                     YES. BRANCH TO BNGT3270
         CLI   PARM3+3,X'00'           IS TERM/LINE = 4 OR MORE ?
         BNE   Z70                     YES. GO ISSUE SYMBOLIC ERR MSG
         CLI   PARM3+2,X'00'           IS TERM/LINE = 2 OR LESS ?
         BE    Z70                     YES. GO ISSUE SYMBOLIC ERR MSG
         LA    DATALOOP,3              SET FOR SCAN 3 CHARS
         LA    DATAREG,PARM3           SET DATAREG = PARM3 PTR
C77      CLI   0(DATAREG),X'F0'        IS BYTE(PARM3) >= C'0' ?
         BNL   C79                     YES. IT IS NUMERIC
         CLI   0(DATAREG),X'C6'        IS BYTE(PARM3) > C'F' ?
         BH    Z70                     YES. IT IS SYMBOLIC ERROR
C79      LA    DATAREG,1(DATAREG)      BUMP TO NEXT BYTE OF PARM3
         BCT   DATALOOP,C77            LOOP
*        B     CC10                    NO SYMBOLIC ERROR FOUND
***********************************************************************
*                                                                     *
*        AT THIS POINT UP TO 5 PARMS HAVE BEEN EDITED AND             *
*        ARE LEFT JUSTIFIED WITH TRAILING X'00'S                      *
*                                                                     *
***********************************************************************
CC10     CP    SBACNT,=P'3'        CNT OF SBA LESS THAN THREE
         BL    D10                 YES,THIS IS INIT ENTRY
***********************************************************************
*                                                                     *
*        ENTRY IS FROM A FORMATTED SCREEN. THEREFORE,                 *
*        THIS SECTION TRANSFERS CONTROL TO APPROPRIATE                *
*        COMPANION PROGRAM.                                           *
*                                                                     *
***********************************************************************
         CLC   PARM2(4),=C'MENU'   IS THIS MENU SCREEN ?
         BE    D32                 YES. GO CHECK MENU PARAMETERS
         CLI   TIOADBA+35,C'%'     IS THIS FROM BITS PROMPTER SCR ?  XH
         BE    C190                YES. GOTO BNGT3270                XH
         CLI   PARM4,X'00'         IS PARM4 BLANK ?
         BE    D80                 YES. USER DID NOT X ANY ENTRIES
         CLC   TIOADBA+15(2),=X'C1D3'   IS THIS A PAGE FORWARD-LG    XH
*                                            OR A PAGE BACKWARD-SM?  XH
         BNE   CC40                YES.                              XH
         CLI   TCTTETM,X'F1'       IS THIS A 3277-1?                 XH
         BE    CC60                YES. DO PAGE BACKWARD-SM.         XH
         B     CC50                NO. DO PAGE FORWARD-LG.           XH
CC40     CLC   TIOADBA+15(2),=X'C17B'   IS THIS A PAGE BACKWRD-LG?   XH
         BE    CC60                YES.                              XH
         CLC   TIOADBA+15(2),=X'406B'   IS THIS A PAGE FORWARD-SM?   XH
         BNE   C109                NO. MUST BE BLOWUP REQUEST        XH
CC50     MVC   PARM4(4),=C'PAGE'    SET UP PARMS FOR PAGING          XH
         MVC   PARM5(7),=C'FORWARD'     FORWARD.                     XH
         B     D10                  GO TO APPROPRIATE PGM.           XH
CC60     MVC   PARM4(4),=C'PAGE'    SET UP PARMS FOR PAGING          XH
         MVC   PARM5(7),=C'BACKWRD'     BACKWARD.                    XH
         B     D10                  GO TO APPROPRIATE PGM.           XH
C109     LA    TABLEREG,TABLE      POINT AT FUNCT/COMP TABLE
C110     CLC   0(4,TABLEREG),PARM2  PROGRAM NAME IN TABLE
         BE    C170                YES,PROGRAM NAME FOUND
         CLC   0(3,TABLEREG),=C'END' END OF TABLE
         BE    D30                 YES,GO TO MENU
         LA    TABLEREG,TABLENTY(TABLEREG)  BUMP TO NEXT ENTRY
         B     C110                GO CHECK NEXT ENTRY
C170     OC    4(4,TABLEREG),4(TABLEREG)  IS THERE A COMPANION PROGRAM
         BZ    D10                 NO
         MVC   PARM2(4),4(TABLEREG)  MOVE COMPANION NAME TO PARM2
         CLC   PARM2(4),=C'TERM'     WAS IT TERL AS COMPANION?
         BNE   D10                   NO,GO SEARCH TABLE AGAIN
C190     LINK  EP=BNGT3270           YES,GO TO TERMINAL PROGRAM      XH
         L     R13,SAVREG
         RETURN  (14,12)             RETURN TO IEDQEMF
***********************************************************************
*                                                                     *
*      THIS SECTION TRANSFERS CONTROL TO THE APPROPRIATE PROGRAM.     *
*                                                                     *
***********************************************************************
D10      LA    TABLEREG,TABLE      POINT AT FUNCT/COMPANION TABLE
D20      CLC   0(4,TABLEREG),PARM2  PROGRAM NAME IN TABLE
         BE    D25                 YES
         CLC   0(3,TABLEREG),=C'END'  END OF TABLE
         BE    D30                 YES,GO TO MENU PROGRAM
         LA    TABLEREG,TABLENTY(TABLEREG)  BUMP TO NEXT ENTRY
         B     D20                 GO CHECK NEXT ENTRY OF TABLE
D25      CLI   4(TABLEREG),X'00'           IS THERE A PROG NAME TO XCTL
         BNE   E10                 NO.USE THIS PROGRAM DEMFDISP
         MVC   TCAPCPI,8(TABLEREG)      STORE NAME IN TCA.
         LINK  EPLOC=TCAPCPI
         L     R13,SAVREG    POINT TO TCAM SAVAREA
         RETURN  (14,12)
D30      CLC   PARM2(4),=C'MENU'   IS IT FROM MENU
         BNE   D80                 NO,BR
D32      CLI   TCTTETM,X'F1'       IS THIS 1 3277 MOD1?
         BE    D50                 YES,BR
         CLC   TIOADBA+15(2),=X'4AD6'   LARGE MENU 'ALL' = L9P23
         BE     D40                YES,BR
         CLC   TIOADBA+15(2),=X'4BE6'   LARGE MENU '3270'= L10P23
         BE    D41                 YES,BR
         CLC   TIOADBA+15(2),=X'4CF6'   LARGE MENU 'REMOT' = L11P23
         BE    D42                 YES,BR
         CLC   TIOADBA+15(2),=X'4FD6'   LARGE MENU 'LOCL' = L13P23
         BNE   D80                 NO,MUST BE FOR MENU
D35      LINK  EP=BNGTLOCL          ***************
         L     R13,SAVREG
         RETURN   (14,12)
D40      MVC   PARM2(3),=C'ALL'    SET UP TO
         LA    TABLEREG,TABLE          DO
         ZAP   SBACNT,=P'1'        ALL LINES
         B     E10
D41      XC    PARM2(32),PARM2     CLEAR PARMS FOR XFER
         MVC   PARM2(4),=C'3270'   SET UP TO DO
         ZAP   SBACNT,=P'1'        3270 DISPLAY
         LINK  EP=BNGT3270
         L     R13,SAVREG
         RETURN   (14,12)
D42      LINK   EP=BNGTRMOT
         L     R13,SAVREG
         RETURN   (14,12)
D50      CLC   TIOADBA+15(2),=X'C17A'   SMALL MENU 'ALL' = L4P3
         BE    D40                 YES,BR
         CLC   TIOADBA+15(2),=X'C2E2'   SMALL MENU '3270' = L5P3
         BE    D41                 YES,BR
         CLC   TIOADBA+15(2),=X'C34A'   SMALL MENU 'RMOT' = L6P3
         BE    D42                 YES,BR
         CLC   TIOADBA+15(2),=X'C45A'   SMALL MENU 'LOCL' = L8P3
         BE    D35                 YES,BR
D80      LINK   EP=BNGTMENU
         L     R13,SAVREG
         RETURN  (14,12)
***********************************************************************
*                                                                     *
*        AT THIS POINT IT HAS BEEN DETERMINED THAT THE REQUEST IS FOR *
*        ALL LINES, LINE, OR CTRL.THIS MODULE HANDLES THOSE DISPLAYS. *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THIS SECTION CREATES THE COMMON HEADER FOR                   *
*        ALL LINES, ONE LINE, AND CTRL.                               *
*                                                                     *
***********************************************************************
E10      MVC   SAVETIOA,TCTTEDA    SAVE ORIGINAL TIOA ADDRESS.
* THIS FIVE LINES OF CODE RE INITIALIZES T I/O AREA TO 40'S
         LA    0,TIOADBAO          FIELD TO BE CLEARED
         LA    1,2000              LENGTH OF FIELD TO BE CLEARED
         L     DATAREG,=X'40000001'   LENGTH AND PADDING CHARACTER
         LA    OUTLOOP,FORTY       LOAD FILL CHARACTERS
         MVCL  0,OUTLOOP           MOVE 2000 BLANKS TO TIOA
*  NOW FIELD SHOULD BE ALL X'40'S
         LA    TIOABAR,TIOADBAO    OUTPUT TIOA
         ST    TIOABAR,TCTTEDA     POINT TO NEW TIOA
         LA    OUTREG,TIOADBAO     POINT TO START OF OUTPUT DATA AREA
         MVC   0(HDR1LTH,OUTREG),HDR1  MOVE STANDARD FIRST LINE.
         MVC   HDR1LTH(4,OUTREG),0(TABLEREG)  MOVE NAME OF THIS
*                                       DISPLAY TO TIOA.
         OC    HDR1LTH(4,OUTREG),=CL4' '   CHANGE ALL'00' TO ALL' '
         LA    OUTREG,HDR1LTH+4(OUTREG)  UPDATE DATA POINTER.
         CLI   TCTTETM,X'F1'       IS THIS A 3277 MODEL 1?
         BE    E150                YES.
         MVC   0(3,OUTREG),HDR1X   MOVE SBA L2P1 FOR MOD 2.
         LA    OUTREG,3(OUTREG)
E150     MVC   0(HDR2LTH,OUTREG),HDR2   MOVE PAGE-FOWARD HEADER TO TIOA
         MVC   HDR2LTH(HDR3LTH,OUTREG),HDR3  MOVE PAGE-BACK HEADER
         LA    OUTREG,HDR2LTH+HDR3LTH-15(OUTREG)
         ST    OUTREG,SAVEBBSS     SAVE POINTER TO BBBSS IN TIOA
         LA    OUTREG,15(OUTREG)
         ST    OUTREG,SAVERCAP     SAVE POINTER TO RECAP LINE
         MVC   0(41,OUTREG),16(TABLEREG)  MOVE RECAP HEADER TO TIOA
         LA    OUTREG,41(OUTREG)
         CLI   TCTTETM,C'1'        IS THIS A MODEL 1?
         BE    F30                 YES.
         MVC   0(3,OUTREG),HDR3X   MOVE SBA L4P1 FOR MOD 2.
         LA    OUTREG,3(OUTREG)
F30      MVC   0(41,OUTREG),57(TABLEREG)   MOVE COLUMN HEADER TO TIOA.
         LA    OUTREG,41(OUTREG)
         ST    OUTREG,SAVEITEM     SAVE POINTER TO FIRST LINE ITEM
         CLI   TCTTETM,X'F1'       IS THIS A MODEL 1?
         BE    F130                YES.
         MVC   0(41,OUTREG),57(TABLEREG)   MOVE COLUMN HEADER AGAIN
         LA    OUTREG,41(OUTREG)
         ST    OUTREG,SAVEITEM     SAVE POINTER TO FIRST LINE ITEM
         LA    OUTLOOP,80          SETUP FOR 80 LINE ITEMS FOR MOD 2
         B     F150
F130     LA    OUTLOOP,R14         SETUP FOR 14 LINE ITEMS FOR MOD 1
***********************************************************************
*        THIS SECTION BUILDS THE APPROPRIATE DISPLAY
***********************************************************************
F150     CP    SBACNT,=P'2'        IS COUNT OF SBA'S LESS THAN 3?
         BH    R10                 NO. GO TO CONTINUATION SCREEN.
F180     XC    RELREC,RELREC       POINT TO FIRST CONTROL BLOCK.
         OPEN  (EMFILE,(INPUT))
         READ  ECB1,DI,EMFILE,FIOADBA,4096,0,RELREC
         CHECK ECB1
         CLOSE EMFILE
         B     G120
F190     LR    R8,R0               DECB ADDRESS IN REG8
         USING DECB,R8
         UNPK  DBLWD,EXCPBITS(3)   ERROR BITS IN DECB
         DROP  R8
         MVC   IOERCODE,DBLWD+3
         TR     IOERCODE,HXTOEB    MOVE TCAM RETURN CODE TO I/O ERR MSG
         UNPK  DBLWD,RELREC(4)
         MVC   IOERBLK,DBLWD+4     MOVE BLK NBR THAT WAS BEING READ
         TR    IOERBLK,HXTOEB
         MVC   TIOADBAO(IOERLTH),IOERMSG
         LA    R8,IOERLTH
         STH   R8,TIOATDL
         CLOSE  EMFILE
F240     L     R13,SAVREG          RETURN TO WRIITE SCREEN
         RETURN   (14,12)
FORTY    DC    X'40404040'
IOERMSG  DC    AL1(SBA),AL2(L1P1),AL1(SF,UNA),C'DEMF ',AL1(IC)
         DC    CL34' ',AL1(SF,PNA),CL39' '
         DC    CL39'BNG001A T I/O ERR READING SYS1.DEMFLOG '
         DC    CL28'    THE BDAM RETURN CODE IS '
IOERCODE DC    CL4'0000'
         DC    CL8' '
         DC    CL34'THE BDAM RELATIVE BLOCK NUMBER IS '
IOERBLK  DC    CL3'000'
IOERLTH  EQU   *-IOERMSG
G120     L     FIOABAR,TCAFCAA     POINT TO FIOA AREA.
         OC    CTRLENTS,CTRLENTS   ANY LINE ENTRIES?
         BZ    Z30                 NO. WRITE 'NO LINE ERRORS'
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET LOOP CTR FOR READING SLOTS.
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT IN BLOCK.
         CLC   PARM2(3),=C'ALL'    DOES PARM2 = ALL?
         BE    J10                 YES.
         OC    PARM3,PARM3         WAS A LINE ADDRESS ENTERED?
         BZ    Z40                 NO. WRITE 'NO LINE ENTERED'
         MVC   LINENAME,PARM3      MOVE LINE ADDRESS TO SAVE AREA
         MVC   CLUSNAME,PARM4      MOVE CONTROL UNIT NAME TO SAVE
         MVC   MSG7CTRL(2),PARM4   MOVE CTRL ADDR TO ERR MSG AREA
         OC    MSG7CTRL(2),=CL2' ' MAKE IT UPPER CASE
         MVC   NOLINE,PARM3        MOVE LINE ADDRESS TO 'NO ERROR' MSG
         OC    NOLINE,=CL8' '
         MVC   MSG7LINE(3),NOLINE  MOVE LINE ADDR TO NO ERR FOR CONTROL
H40      TR    PARM3(3),EBTOHX     CHANGE F0C6F2 TO 000F02 ETC.
         PACK  DBLWD,PARM3(4)      PACK LINE ADDRESS
         MVC   LINEID(3),DBLWD+4   MOVE GOOD PORTION TOSAVE AREA
         MVC   LINEID+3(3),=XL3'000000'
H80      CLC   SLOTLINE,LINEID     IS THIS CONTROL SLOT FOR OUR LINE?
         BE    L60                 YES. GO GET DETAIL BLOCK.
         LA    DATAREG,SLOTLTH(DATAREG)   POINT TO NEXT SLOT.
         BCT   DATALOOP,H80        CHECK NEXT SLOT.
         CLC   CTRLFWD,=F'0'       MORE CONTROL BLOCKS?
         BE    Z10                 NO. GO WRITE 'NO LINE ERRORS'
         MVC   RELREC,CTRLFWD+1    POINT TO NEXT BLK TO BE READ.
         OPEN  (EMFILE,(INPUT))
         READ  ECB2,DI,EMFILE,FIOADBA,4096,0,RELREC
         CHECK ECB2
         CLOSE EMFILE
H180     L     FIOABAR,TCAFCAA     POINT TO FIOA
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET SLOT LOOP CONTROL
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT.
         B     H80
         EJECT
***********************************************************************
*        THIS SECTION FORMATS 'ALL LINE' ENTRIES
***********************************************************************
J10      L     R14,SAVEBBSS        LOAD SAVED ADDR OF BLK/SLOT TIOA.
         MVC   0(5,R14),=C'00001'  MOVE 00001 TO FIRST AND
         MVC   10(5,R14),0(R14)    PREVIOUS BBBSS'S
J40      MVC   PARM1(6),SLOTLINE   SETUP LINE ADDRESS FOR
J110     UNPK  DBLWD,SLOTLINE(4)        UNPK LINE ADDR IN WORKAREA
         TR    DBLWD+4(3),HXTOEB        CONVERT TO EBCDIC
         MVC   DTLITEM,=CL8' '     CLEAR DETAIL LINE ITEM
         MVC   DTLITEM(3),DBLWD+4  PUT LINE ADDR IN DETAIL ENTRY
J150     LH    R14,SLOTHITS        PUT LINE ERRORS IN REG.
         CVD   R14,DBLWD           CONVERT TO DECIMAL
         UNPK  DTLCOUNT,DBLWD+5(3)      PUT LINE ERROR COUNT
         OI    DTLCOUNT+3,X'F0'         IN OUTPUT
         MVC   0(DTLLTH,OUTREG),DTLENTRY   MOVE DETAIL ENTRY TO OUTPUT
         MVC   DTLCOUNT,=C'0001'      RESTORE PROGRAM CONSTANT.
         LA    OUTREG,DTLLTH(OUTREG)    UPDATE OUTPUT POINTER
         BCT   DATALOOP,K100       MORE SLOTS IN THIS CTRL BLK?
         CLC   CTRLFWD,=F'0'       NO. MORE CTRL BLKS?
         BE    K120                NO. PREPARE TO EXIT.
         MVC   RELREC,CTRLFWD+1    POINT TO NEXT BLK TO BE READ.
         OPEN  (EMFILE,(INPUT))
         READ  ECB3,DI,EMFILE,FIOADBA,4096,0,RELREC
         CHECK ECB3
         CLOSE EMFILE
K50      L     FIOABAR,TCAFCAA     POINT TO FIOA
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET LOOP CONTROL.
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT
         B     J40
K100     LA    DATAREG,SLOTLTH(DATAREG)   POINT TO NEXT SLOT.
         BCT   OUTLOOP,J40         ROOM LEFT IN TIOA?
K120     L     R15,SAVEBBSS        NO. POINT TO BLK/SLT AREA IN TIOA.
         UNPK  DBLWD,RELREC(4)     STORE BDAM RELATIVE
         TR    DBLWD,HXTOEB        CONTROL BLK NUMBER
         MVC   5(3,R15),DBLWD+4    (LAST BBBSS) IN OUTPUT
         SR    R14,R14
         IC    R14,CTRLENTS        GET ORIGINAL COUNT OF SLOTS
         SR    R14,DATALOOP        DETERMINE LAST SLOT READ.
         STC   R14,DBLWD+6         STORE
         UNPK  DBLWD(3),DBLWD+6(2) SLOT NUMBER
         TR    DBLWD,HXTOEB        (LAST BBBSS)
         MVC   8(2,R15),DBLWD      IN OUTPUT.
K230     LA    R14,TIOADBAO         COMPUTE LENGTH OF
         SR    OUTREG,R14          DATA IN TIOA.
         STH   OUTREG,TIOATDL      STORE LENGTH IN TIOA
         L     R13,SAVREG
         RETURN   (14,12)            WRITE TO TCAM
***********************************************************************
*  THIS SECTION PREPARES THE 'LINE' OR 'CTRL' DISPLAY
***********************************************************************
L60      MVI   QUITSW,X'00'        TURN OFF OUTPUT-FULL-SW.          XH
         ZAP   ITEMCNT,=P'0'       SET CTR OF OUTPUT ITEMS = 0
         MVC   RELREC,SLOTRFB      SAVE POINTER TO DETAIL BLK
L140     MVC   SVRELREC,RELREC     SAVE FOR LAST BBBSS'S
         OC    RELREC,RELREC       IS THERE ANY DATA BLOCKS ?  @OZ31884
         BZ    Z130                NO, WRITE 'NO DATA BLKS MSG'@OZ31884
         OPEN  (EMFILE,(INPUT))
         READ  ECB4,DI,EMFILE,FIOADBA,4096,0,RELREC
         CHECK ECB4
         CLOSE EMFILE
L170     L     FIOABAR,TCAFCAA     POINT TO FIOA
         SR    DATALOOP,DATALOOP
         LH    DATALOOP,BLKLTH     SET SLOT LOOP CONTROL
         LA    DATAREG,DATASLT1    POINT FOR FIRST SLOT
L210     MVI   SLOTCNT,X'00'       ZERO OUT DETAIL SLOT COUNTER.
         OC    LINENAME,=CL8' '
         OC    CLUSNAME,=CL8' '
L220     L     1,SAVERCAP               POINT TO RECAP HEADER
         CLC   PARM2(4),=C'LINE'        PARM2 = LINE?
         BE    L230                         YES.
         CLC   PARM4,=CL8' '       IS PARM4 BLANK
         BE    L225                YES,MUST BE LOCAL
         OC    PARM4,PARM4         OR IS PARM4 ZERO
         BE    L225                YES,MUST BE LOACL
         MVC   22(3,1),CLUSNAME         MOVE CONTROL UNIT TO HEADER
         MVC   25(8,1),=C'ON LINE '
         MVC   33(3,R1),LINENAME        MOVE LINE ADDR. TO HEADER
         B     M10
L225     MVC   11(19,R1),=C'LOCAL CONTROL UNIT '
         MVC   30(8,R1),LINENAME   MOVE CNTRL UNIT TO HEADER
         B     M10
L230     MVC   21(8,R1),LINENAME        MOVE LINE ADDR. TO HEADER
***********************************************************************
*    THIS SECTION FORMATS A 'LINE' ITEM OR A 'CTRL' ITEM.
***********************************************************************
M10      MVC   CTRLNAME,=D'0'      ZERO  OUT CONTROL UNIT WORK AREA.
         MVC   TERMNAME,=CL8' '    BLANK OUT TERMINAL WORK AREA.
         MVC   RELREC,DATAFWD      SAVE NEXT DETAIL BLK ADDR.
         MVC   TBARG,=CL2' '       CLEAR MOD-1 TABLE ARGUMENT        XH
         CLI   ENTRYTYP,X'91'      IS THIS AN MDR ENTRY?
         BE    N10                 YES.
         CLI   ENTRYTYP,X'30'      IS IT AN OBR ENTRY?
         BE    N80                 YES.
         CLI   ENTRYTYP,X'34'      IS IT TCAM OBR?
         BE    N80                 YES,BR
M100     CLC   PARM2(4),=C'LINE'   IS THIS A 'LINE' DISPLAY?
         BE    N150                YES.
         OC    CTRLNAME,=CL8' '
         OC    PARM4,=CL8' '
         CLC   PARM4,CTRLNAME      IS PARM 4 = REMOTE CTRL UNIT NAME?
         BE    N150                YES. PROCESS ENTRY
         CLI   PARM4,X'40'         IS PARM4 ZERO ?
         BNE   M140                NO. MUST BE REMOTE--BYPASS CK LOCAL
         OC    LINENAME,=CL8' '
         CLC   LINENAME,CTRLNAME   IS LINENAME = LOCAL CTRL UNIT ?
         BE    N150                YES. PROCESS ENTRY
M140     SR    R15,R15                                               XH
         IC    R15,SLOTCNT         ADD ONE                           XH
         AH    R15,=H'1'           TO                                XH
         STC   R15,SLOTCNT         SLOT COUNTER.                     XH
M160     SR    R14,R14                                               XH
         IC    R14,DATALTH         PUT LTH OF SLOT IN WORK REG
         AR    DATAREG,R14         POINT TO NEXT DETAIL SLOT.
         SR    DATALOOP,R14        MORE SLOTS IN THIS DETAIL BLK?
         BP    M10                 YES.
         OC    RELREC,RELREC       MORE DETAIL BLOCKS?
         BNE   L140                YES.
M240     ZAP   WORKCNT,ITEMCNT
         BZ    Z50
         B     K230
N10      CLI   MOD1SW,X'00'        MOD-1 SWITCH OFF ?                XH
         BE    N30                 YES. BYPASS MOD-1 SCANNER CHECK   XH
         CLC   PARM2(4),=C'CTRL'   IS THIS A 'CTRL' DISPLAY ?        XH
         BE    N20                 YES. USE REMOTE TERMINAL ADDR     XH
         MVC   TBARG(1),MDRCTRL    SET TBARG = REMOTE CTRL UNIT      XH
         B     N25                 GO CK ADDR AGAINST MOD-1 TABLE    XH
N20      MVC   TBARG(1),MDRTERM    SET TBARG = REMOTE TERMINAL       XH
N25      BAL   LINKREG,MOD1SCAN    CK IF REMOTE CU OR TERMINAL       XH
         CLC   TBARG,=X'0000'        IN MOD-1 TABLE?                 XH
         BE    M140                YES. BYPASS THIS ERROR ENTRY      XH
N30      UNPK  CTRLNAME(3),MDRCTRL(2)   MDR - PUT CONTROL UNIT       XH
         TR    CTRLNAME(2),HXTOEB       NAME
         MVI   CTRLNAME+2,X'00'         IN WORK AREA.
         UNPK  TERMNAME(3),MDRTERM(2)   PUT TERMINAL
         TR    TERMNAME(2),HXTOEB       NAME
         MVI   TERMNAME+2,C' '          IN WORK AREA.
         B     M100
N80      CLI   OBRUCB,X'10'        IS THIS A LOCAL
         BE    N110                YES, GO MOVE 3 BYTE ADDRESS
N85      CLI   MOD1SW,X'00'        IS MOD-1 SWITCH OFF ?             XH
         BE    N95                 YES. BYPASS MOD-1 SCANNER CHECK   XH
         CLC   PARM2(4),=C'CTRL'      IS THIS A 'CTRL' DISPLAY?@OZ31877
         BE    N88                    YES. USE REMOTE TERM ADDR@OZ31877
         MVC   TBARG(1),OBRCTRL       PASS REMOTE CU TO MOD-1  @OZ31877
         B     N90                    GO CK ADDR AGAINST MOD-1 @OZ31877
N88      MVC   TBARG(1),OBRTERM       PASS REMOTE TERM ADDR    @OZ31877
*                                     TO MOD-1                 @OZ31877
N90      BAL   LINKREG,MOD1SCAN       CK IF REMOTE CU OR TERM  @OZ31877
         CLC   TBARG,=X'0000'        ADDR FOR REMOTE LINE ERRORS     XH
*                                    IS IN MOD-1 TABLE ?             XH
         BE    M140                YES. BYPASS THIS ERROR ENTRY      XH
N95      UNPK  DBLWD,OBRCTRL(2)    OBR - MOVE 1 BYTE REMOTE CU ADR   XH
         TR    DBLWD+4(3),HXTOEB
         MVC   CTRLNAME(2),DBLWD+5 TO WORK AREA
         UNPK  DBLWD,OBRTERM(2)    MOVE 1-BYTE REMOTE TERML ADDR
         TR    DBLWD+4(3),HXTOEB
         MVC   TERMNAME(2),DBLWD+5 WORK AREA.
         B     M100
N110     CLI   MOD1SW,X'00'        IS MOD-1 SWITCH OFF ?             XH
         BE    N130                YES. BYPASS MOD-1 SCANNER CHECK   XH
         MVC   TBARG,OBRCUA        SET TBARG = LOCAL TERMINAL ADDR   XH
         BAL   LINKREG,MOD1SCAN    CK IF LOCAL TERMINAL IS IN        XH
         CLC   TBARG,=X'0000'           MOD-1 TABLE ?                XH
         BE    M140                YES. BYPASS THIS ERROR ENTRY      XH
N130     UNPK  DBLWD,LINEIDA(4)    OBR - MOVE 3-BYTE CONTROL UNIT    XH
         TR    DBLWD+4(3),HXTOEB        ADDRESS(POSSIBLY ROUNDED)
         MVC   CTRLNAME(3),DBLWD+4      TO WORK AREA.
         UNPK  DBLWD,OBRCUA(3)          MOVE REAL 3-BYTE CONTROL
         TR    DBLWD+4(3),HXTOEB        UNIT ADDRESS
         MVC   TERMNAME(3),DBLWD+4      WORK AREA.
         B     M100
N150     OC    CTRLNAME,=CL8' '
         L     R14,SAVEITEM        POINT TO FIRST ITEM IN TIOA
         ZAP   WORKCNT,ITEMCNT     ANY ITEMS IN TIOA?
         BZ    P50         NO,ADD NEW ITEM          WAS B P90 111111
N170     CLC   PARM2(4),=C'LINE'   IS THIS A 'LINE' DISPLAY?
         BE    P20                 YES.
         CLC   TERMNAME,ITEMLTH(R14)    WORKTERMINAL = TIOA TERMINAL?
         BE    P40                 YES.
N230     LA    R14,DTLLTH(R14)     BUMP TO NEXT ITEM
         SP    WORKCNT,=PL2'1'     SUBT ONE FROM ITEM COUNTER.
         BZ    P90     ANY ITEMS?  NO. ADD NEW ITEM.
         B     N170
P20      CLC   CTRLNAME,ITEMLTH(R14)    WORK CTRL = TIOA CTRL?
         BNE   N230                NO.
P40      PACK  FULLWD(3),COUNTLTH(4,R14) ADD
         AP    FULLWD(3),=P'1'          ONE
         UNPK  COUNTLTH(4,R14),FULLWD(3) TO
         OI    COUNTLTH+3(R14),X'F0'    COUNT FIELD.
         B     M140                GO CHECK NEXT SLOT.
P50      CLC   PARM2(4),=C'LINE'   IS IT LINE                  11111
         BE    P170                YES,BR                      11111
         SR    R15,R15                                         11111
         IC    R15,SLOTCNT                                     11111
         AH    R15,=H'1'                                       11111
         STC   R15,SLOTTTR                                     11111
         L     R15,SAVEBBSS                                    11111
         UNPK  DBLWD(3),SLOTTTR(2)                             11111
         TR    DBLWD,HXTOEB                                    11111
         MVC   3(2,R15),DBLWD                                  11111
P90      CLI   QUITSW,X'FF'        MOD-1 OUTPUT-FULL-SW ON ?         XH
         BE    M140                YES. BYPASS PUTTING ADDR IN OUTPUTXH
         CLC   PARM2(4),=C'LINE'        IS THIS A 'LINE' DISPLAY?    XH
         BE    P170                     YES.
         MVC   DTLITEM,TERMNAME    NO. MOVE TERMINAL
P120     MVC   0(DTLLTH,OUTREG),DTLENTRY  TO OUTPUT
         LA    OUTREG,DTLLTH(OUTREG)    UPDATE OUTPUT POINTER.
         AP    ITEMCNT,=P'1'       ADD 1 TO COUNT OF OUTPUT ITEMS.
         SR    R15,R15                                               XH
         IC    R15,SLOTCNT         ADD ONE                           XH
         AH    R15,=H'1'           TO                                XH
         STC   R15,SLOTCNT         SLOT COUNTER.                     XH
         L     R15,SAVEBBSS        NO. POINT TO BLK/SLT AREA IN TIOA.XH
         UNPK  DBLWD,SVRELREC(4)   STORE BDAM RELATIVE               XH
         TR    DBLWD,HXTOEB        CONTROL BLK NUMBER                XH
         MVC   5(3,R15),DBLWD+4    (LAST BBBSS) IN OUTPUT            XH
         SR    R14,R14                                               XH
         UNPK  DBLWD(3),SLOTCNT(2)      STORE SLOT NUMBER IN         XH
         TR    DBLWD,HXTOEB        (LAST BBBSS)                      XH
         MVC   8(2,R15),DBLWD      IN OUTPUT.                        XH
         CP    ITEMCNT,=P'1'       IS THIS THE FIRST ITEM IN TIOA ?  XH
         BNE   P140                NO. BYPASS UPDATING FIRST BBBSS   XH
         MVC   0(5,15),5(15)       SET FIRST BBBSS = LAST BBBSS      XH
         CLC   10(5,15),=C'BBBSS'  IS PREV BBBSS FILLED IN ?         XH
         BNE   P140                YES. BYPASS UPDATING PREV BBBSS   XH
         MVC   10(5,15),0(15)      SET PREV BBBSS = FIRST BBBSS      XH
P140     BCT   OUTLOOP,M160        MORE ROOM IN TIOA?                XH
         CLI   TCTTETM,X'F2'       IS THIS A 3270-2 ?                XH
         BE    M240                YES. PREPARE TO EXIT              XH
         MVI   QUITSW,X'FF'        TURN ON OUTPUT-FULL-SW FOR MOD-1  XH
         B     M160                CONTINUE SCANNING REST OF DATABASEXH
P170     MVC   DTLITEM,CTRLNAME    SETUP CONTROL UNIT ADDRESS
         B     P120                     FOR OUTPUT.
         EJECT
***********************************************************************
*     THIS SECTION PREPARES FOR AN ENTRY BLOWUP OR FOR PAGING.
***********************************************************************
R10      L     R14,SAVETIOA        RESTORE POINTER TO INPUT DATA.
         CLC   PARM4(4),=C'PAGE'   IS THIS A 'PAGE' REQUEST?
         BE    S010                YES,BR CK FOR FWD OR BACK
         OC    PARM5,PARM5         MAKE SURE A FIELD WAS X'ED   22222
         BZ    Z40                 BR,ZERO NO FIELD WAS X'ED    22222
         CLC   PARM2(4),=C'LINE'   NO. THIS MUST BE COMPANION REQUEST.
         BNE   R010                IF NOT LINE DISPLAY, GO READ RECORD.
         MVC   PARM3,PARM5         IS LINE, MOVE THE X'D FIELD TO PRM3.
         MVC   LINENAME,PARM5           MOVE LINE ADDRESS TO SAVE AREA
         XC    PARM4(16),PARM4      AS IF LINE ID HAD BEEN KEYED IN.
         B     F180                GO DO LINE DISPLAY AS IF THIS WERE
*                                  AN INITIAL 'LINE' INPUT.
R010     MVC   CLUSNAME,PARM5           MOVE CONTROL UNIT ADDR TO SAVE
         MVC   PARM4,PARM5         MOVE X'D CTRL UNIT TO PARM4 AS IF
         XC    PARM5,PARM5           IT HAD BEEN KEYED IN.
         MVC   PARM1,PARM4         PUT CTRL NAME IN PARM1 FOR TABLE
         OC    PARM1,=CL8' '
         TR    17(3,R14),EBTOHX    GET BLOCK NUMBER OF
         PACK  DBLWD,17(4,R14)        REQUESTED LINE INTO HEX.
         MVC   RELREC,DBLWD+4
         OPEN  (EMFILE,(INPUT))
         READ  ECB5,DI,EMFILE,FIOADBA,4096,0,RELREC
         CHECK ECB5
         CLOSE EMFILE
R170     L     FIOABAR,TCAFCAA
         XC    PARM3,PARM3
         UNPK  DBLWD,DATAPORT(4)        MOVE LINE ID
         TR    DBLWD+4,HXTOEB           FROM PREVIOUS BLOCK
         MVC   LINENAME(3),DBLWD+4     TO PARM3 AS IF IT HAD BEEN
         MVC   PARM3(6),LINENAME        KEYED IN.
         CLC   PARM3,PARM4         IS THIS A LOCAL CTRL UNIT?
         BNE   F180                NO,BR GO TO PROCESS REMOTE
         XC    PARM4,PARM4         YES,CLEAR REDUDANT CU ADR
         B     F180                GO DO A 'CTRL' DISPLAY AS IF ABOVE
*                                  CTRL & LINE HAD BEEN TYPED IN.
S010     DS    0H
         CLC   19(2,R14),=X'C1D3'  IS THIS A PAGE FORWARD-LG   @OZ30478
*                                       OR A PAGE BACKWARD-SM? @OZ30478
         BE    S090                YES.                        @OZ30478
         CLC   19(2,R14),=X'C17B'  IS THIS A PAGE BACKWRD-LG?  @OZ30478
         BE    S090                YES.                        @OZ30478
         CLC   19(2,R14),=X'406B'  IS THIS A PAGE FORWARD-SM?  @OZ30478
         BNE   S100                NO OTHER PAGE REQUEST       @OZ30478
S090     LA    R14,4(14)             BUMP WORK REG BY 4        @OZ30478
S100     MVC   WORK15,21(R14)      CONVERT BBBSS'S TO HEX      @OZ30478
         TR    WORK15,EBTOHX
         CLC   PARM5(4),=C'FORW'   IS IT A 'PAGE FORWARD' REQUEST?
         BE    S110                YES.
         PACK  DBLWD,WORK15+10(6)
         MVC   RELREC,DBLWD+3      THE 'PREVIOUS' BLOCK.
         MVC   TWASLOT,DBLWD+6     AND SLOT TO RESUME AT.
         MVC   TBRELREC,RELREC     SAVE CURRENT 'BBB'                XH
         MVC   TBSLOT,TWASLOT      SAVE CURRENT 'SS'                 XH
         L     R15,SAVEBBSS        POINT TO NEW OUTPUT HEADER.
         MVC   0(5,R15),31(R14)    OLD PREVIOUS NOW BECOMES NEW      XH
         MVC   10(5,R15),31(R14)   FIRST AND PREVIOUS.               XH
         B     S180
S110     DS    0H
         PACK  DBLWD,WORK15+5(6)
         MVC   RELREC,DBLWD+3      PLACE TO PAGE FORWARD FROM
         MVC   TWASLOT,DBLWD+6
         MVC   TBRELREC,RELREC     SAVE CURRENT 'BBB'                XH
         MVC   TBSLOT,TWASLOT      SAVE CURRENT 'SS'                 XH
         L     R15,SAVEBBSS        POINT TO NEW OUTPUT HEADER.
         MVC   0(5,R15),26(R14)    OLD LAST IS NEW FIRST AND         XH
         MVC   10(5,R15),21(R14)   OLD FIRST IS NEW PREVIOUS.        XH
S180     BAL   LINKREG,LOCATE      LOCATE PROPER BLOCK & SLOT.
         CLC   PARM2(3),=C'ALL'
         BE    J40                 GO RESUME WHERE LEFT OFF AT (ALL)
         B     S215                PERFORM MOD-1 TABLE BUILD         XH
S190     ZAP   ITEMCNT,=P'0'       SET CTR OF OUTPUT ITEMS = 0       XH
         MVI   QUITSW,X'00'        TURN OFF OUTPUT-FULL-SW.    @OZ31880
         SR    R15,R15
         IC    R15,DBLWD+6             UPDATE SLOT COUNTER
         SH    R15,=H'1'                   FOR PAGING IN
         STC   R15,SLOTCNT             LINE OR CTRL DISPLAYS.
S200     UNPK  DBLWD,LINEIDA(4)        MOVE LINE ADDRESS
         TR    DBLWD+4(3),HXTOEB                TO
         MVC   LINENAME(3),DBLWD+4     SAVE AREA FOR RECAP HDR.
         MVC   LINENAME+3(5),=CL5' '        CLEAR OUT GARBAGE
         XC    PARM4,PARM4
         CLI   ENTRYTYP,X'91'          IS THIS AN MDR ENTRY?
         BE    S210                         YES.
         CLI   OBRUCB,X'40'            IS THIS A REMOTE OBR ?        XH
         BNE   S205                         NO.                      XH
         UNPK  CLUSNAME(3),OBRCTRL(2)       MOVE MDR DUMMY LINE ADDR XH
         TR    CLUSNAME(2),HXTOEB                TO                  XH
         MVC   CLUSNAME+2(6),=CL6' '        SAVE AREA FOR RECAP HDR. XH
         MVC   PARM4(2),CLUSNAME              MOVE  ADDR  TO PARM4   XH
         B     L220        GO RESUME WHERE LEFT OFF AT (LINE OR CTRL)XH
S205     MVC   CLUSNAME,LINENAME       MOVE OBR CTRL ADDR. TO SAVE ARXH
         B     L220        GO RESUME WHERE LEFT OFF AT (LINE OR CTRL)XH
S210     UNPK  CLUSNAME(3),MDRCTRL(2)       MOVE MDR CTRL ADDR.
         TR    CLUSNAME(2),HXTOEB                TO
         MVC   CLUSNAME+2(6),=CL6' '        SAVE AREA FOR RECAP HDR.
         MVC   PARM4(2),CLUSNAME       MOVE MDR CTRL ADDR. TO PARM4
         B     L220        GO RESUME WHERE LEFT OFF AT (LINE OR CTRL)
***********************************************************************
*                                                                     *
*   THIS IS THE MOD-1 'LINE' AND 'CTRL' TABLE BUILD ROUTINE           *
*                                                                     *
***********************************************************************
S215     CLI   ENTRYTYP,X'91'      IS THIS AN MDR ?
         BE    S218                YES. SAVE MDR CTRL UNIT     @OZ31877
         CLI   OBRUCB,X'40'        IS THIS A REMOTE OBR ?      @OZ31877
         BNE   S220                NO. BYPASS SAVING CTRL UNIT @OZ31877
         MVC   TBCTRL,OBRCTRL      YES. SAVE REMOTE OBR CU     @OZ31877
         B     S220                                            @OZ31877
S218     MVC   TBCTRL,MDRCTRL      SET TBCTRL = MDRCTRL        @OZ31877
S220     MVC   TBLINE,LINEIDA      SAVE CURRENT LINE ID
         XC    RELREC,RELREC       POINT TO FIRST CONTROL BLOCK.
         BAL   LINKREG,READ        GET FIRST CONTROL BLOCK.
         L     FIOABAR,TCAFCAA     POINT TO FIOA AREA.
         OC    CTRLENTS,CTRLENTS   ANY LINE ENTRIES?
         BZ    Z30                 NO. WRITE 'NO LINE ERRORS'
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET LOOP CTR FOR READING SLOTS.
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT IN BLOCK.
S220A    CLC   TBLINE,SLOTLINE     IS THIS CONTROL SLOT FOR OUR LINE?
         BE    S222                YES. GO GET DETAIL BLOCK.
         LA    DATAREG,SLOTLTH(DATAREG)   POINT TO NEXT SLOT.
         BCT   DATALOOP,S220A      CHECK NEXT SLOT.
         CLC   CTRLFWD,=F'0'       MORE CONTROL BLOCKS?
         BE    Z10                 NO. GO WRITE 'NO LINE ERRORS'
         MVC   RELREC,CTRLFWD+1    POINT TO NEXT BLK TO BE READ.
         BAL   LINKREG,READ
         L     FIOABAR,TCAFCAA     POINT TO INPUT RECORD AREA
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET SLOT LOOP CONTROL
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT.
         B     S220A
S222     ZAP   TABLECNT,=P'0'      SET CTR OF TABLE ITEMS = 0
         LA    MOD1REG,MOD1TABL    POINT TO MOD-1 TABLE
         MVC   RELREC,SLOTRFB      MOVE POINTER TO DETAIL BLK
S222A    MVC   SVRELREC,RELREC     SAVE FOR COMPARE TO TABLE RELREC
         BAL   LINKREG,READ
         L     FIOABAR,TCAFCAA     POINT TO INPUT RECORD AREA
         SR    DATALOOP,DATALOOP
         LH    DATALOOP,BLKLTH     SET SLOT LOOP CONTROL
         LA    DATAREG,DATASLT1    POINT FOR FIRST SLOT
         MVI   SLOTCNT,X'01'       SET COUNT OF DETAIL BLK SLOTS=1
         MVC   RELREC,DATAFWD      SAVE NEXT DETAIL BLK ADDR.
S222B    CLC   SVRELREC,TBRELREC   IS THIS THE RIGHT DETL BLK ?
         BNE   S222B10             NO. CONTINUE SCAN
         CLC   SLOTCNT,TBSLOT      IS THIS THE RIGHT ENTRY ?
         BNE   S222B10             NO. CONTINUE SCAN
S222B03  MVI   MOD1SW,X'FF'        TURN MOD-1 SWITCH ON
S222B05  MVC   RELREC,TBRELREC     RESTORE PAGING 'BBB'
         MVC   TWASLOT,TBSLOT      RESTORE PAGING 'SS'
         BAL   LINKREG,LOCATE      LOCATE STARTING 'BBBSS' FOR DISP
         B     S190                RESUME PAGING SETUP
S222B10  LA    14,MOD1TABL         POINT OT MOD-1 TABLE
         CLI   ENTRYTYP,X'91'      IS THIS AN MDR ENTRY?
         BE    S222C               YES.
         CLI   ENTRYTYP,X'30'      IS IT A BTAM OBR?
         BE    S222D               YES.
         CLI   ENTRYTYP,X'34'      IS IT A TCAM OBR?
         BE    S222D               YES.
S222B20  SR    15,15
         IC    15,SLOTCNT          ADD ONE
         AH    15,=H'1'            TO
         STC   15,SLOTCNT          SLOT COUNTER.
         SR    14,14
         IC    14,DATALTH          PUT LTH OF SLOT IN WORK REG.
         AR    DATAREG,14          POINT TO NEXT DETAIL SLOT.
         SR    DATALOOP,14         MORE SLOTS IN THIS DETAIL BLK?
         BP    S222B               YES.
         OC    RELREC,RELREC       MORE DETAIL BLOCKS?
         BNE   S222A               YES.
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN MOD-1 TABLE?
         BZ    S222B05             NO. EXIT BUT DON'T TURN ON MOD-1 SW.
         B     S222B03             YES. EXIT NORMALLY
S222C    CLC   PARM2(4),=C'CTRL'   IS THIS A 'CTRL' DISPLAY ?
         BE    S222C50             YES.  USE TERMINAL ADDR ONLY
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN TABLE ?
         BZ    S222C30             NO. ADD NEW ITEM
S222C10  CLC   0(1,14),MDRCTRL     IS THIS CTRL UNIT IN THE TABLE ?
         BE    S222B20             YES.  BYPASS THIS ENTRY
         LA    14,2(14)            BUMP TO NEXT ENTRY
         SP    WKTBLCNT,=PL2'1'    SUBTRACT ONE FROM ITEM COUNT
         BZ    S222C30             BRANCH IF NO MORE ITEMS TO CK
         B     S222C10
S222C30  CP    TABLECNT,=P'32'     IS THIS THE 33TH ENTRY ?
         BE    S222B03             YES.
         MVC   0(1,MOD1REG),MDRCTRL     STORE IN TABLE
         B     S228
S222C50  CLC   TBCTRL,MDRCTRL      DOES CTRL UNIT ENTRY = REQUESTED CU?
         BNE   S222B20             NO. BYPASS PUTTING TERMINAL IN TABLE
         ZAP   WKTBLCNT,TABLECNT
         BZ    S222C70
S222C60  CLC   0(1,14),MDRTERM     IS THIS TERMINAL IN THE TABLE ?
         BE    S222B20             YES. BYPASS THIS ENTRY
         LA    14,2(14)            BUMP TO NEXT ENTRY
         SP    WKTBLCNT,=PL2'1'
         BZ    S222C70
         B     S222C60
S222C70  CP    TABLECNT,=P'32'     IS THIS THE 33TH ENTRY ?
         BE    S222B03             YES.
         MVC   0(1,MOD1REG),MDRTERM    PUT REMOTE TERMINAL INTO TABLE
         B     S228
S222D    CLI   OBRUCB,X'10'        IS THIS A LOCAL?
         BE    S222G               YES. GO MOVE 3-BYTE ADDR
         CLC   PARM2(4),=C'CTRL'   IS THIS A 'CTRL' DISPLAY ?  @OZ31877
         BE    S222D50             YES.  USE TERMINAL ADDR ONLY@OZ31877
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN TABLE ?        @OZ31877
         BZ    S222D30             NO. ADD NEW ITEM            @OZ31877
S222D10  CLC   0(1,14),OBRCTRL     IS THIS CTRL UNIT IN TABLE? @OZ31877
         BE    S222B20             YES.  BYPASS THIS ENTRY     @OZ31877
         LA    14,2(14)            BUMP TO NEXT ENTRY          @OZ31877
         SP    WKTBLCNT,=PL2'1'    SUBTRACT ONE FROM ITEM COUNT@OZ31877
         BZ    S222D30             BRANCH IF NO MORE ITEMS     @OZ31877
         B     S222D10                                         @OZ31877
S222D30  CP    TABLECNT,=P'32'     IS THIS THE 33TH ENTRY ?    @OZ31877
         BE    S222B03             YES.                        @OZ31877
         MVC   0(1,MOD1REG),OBRCTRL     STORE IN TABLE         @OZ31877
         B     S228                                            @OZ31877
S222D50  CLC   TBCTRL,OBRCTRL      DOES CU ENTRY = REQSTED CU? @OZ31877
         BNE   S222B20             NO. DON'T PUT TERM IN TBL   @OZ31877
         ZAP   WKTBLCNT,TABLECNT                               @OZ31877
         BZ    S222D70                                         @OZ31877
S222D60  CLC   0(1,14),OBRTERM     IS THIS TERMINAL IN THE TBL?@OZ31877
         BE    S222B20             YES. BYPASS THIS ENTRY      @OZ31877
         LA    14,2(14)            BUMP TO NEXT ENTRY          @OZ31877
         SP    WKTBLCNT,=PL2'1'                                @OZ31877
         BZ    S222D70                                         @OZ31877
         B     S222D60                                         @OZ31877
S222D70  CP    TABLECNT,=P'32'     IS THIS THE 33TH ENTRY ?    @OZ31877
         BE    S222B03             YES.                        @OZ31877
         MVC   0(1,MOD1REG),OBRTERM   PUT REMOTE TERM IN TABLE @OZ31877
         B     S228                                            @OZ31877
S222G    CLC   PARM2(4),=C'LINE'   IS THIS A 'LINE' DISPLAY ?
         BE    S222B20             YES. BYPASS THIS ERROR DATA
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN TABLE ?        @OZ31877
         BZ    S225                NO. ADD NEW ITEM TO TABLE   @OZ31877
S224     CLC   0(2,14),OBRCUA      ARG MATCH TABLE ENTRY ?     @OZ31877
         BE    S222B20             YES.  BYPASS THIS ARGUMENT  @OZ31877
         SP    WKTBLCNT,=PL2'1'    SUBTRACT ONE FROM ITEM CNT  @OZ31877
         BZ    S225                NO MORE ITEMS TO CK--SO ADD @OZ31877
*                                  THIS NEW ITEM TO TABLE
         LA    14,2(14)            BUMP TO NEXT TABLE ENTRY
         B     S224                GO CK ANOTHER ENTRY         @OZ31877
S225     CP    TABLECNT,=P'32'     MORE THAN 33 ENTRIES--USER  @OZ31877
*                                  MUST BE PAGING FROM MOD-2   @OZ31877
         BE    S222B03             PREPARE TO EXIT ROUTINE.    @OZ31877
         MVC   0(2,MOD1REG),OBRCUA ADD CTRL UNIT TO MOD-1 TABLE@OZ31877
S228     LA    MOD1REG,2(MOD1REG)  UPDATE TABLE POINTER.       @OZ31877
         AP    TABLECNT,=P'1'      ADD 1 TO COUNT OF TABLE ITEMS
         B     S222B20             GO CK ANOTHER ENTRY
***********************************************************************
**
*   THIS IS A COMMON READ SUBROUTINE FOR MOD-1 CHANGE                 *
**
***********************************************************************
READ     OPEN  (EMFILE,(INPUT))
         READ  ECB9,DI,EMFILE,FIOADBA,4096,0,RELREC
         CHECK ECB9
         CLOSE EMFILE
         BR    LINKREG
***********************************************************************
*                                                                     *
*   THIS IS THE MOD-1 TABLE SCANNER ROUTINE                           *
*                                                                     *
***********************************************************************
MOD1SCAN LA    MOD1REG,MOD1TABL    POINT TO MOD-1 TABLE
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN TABLE ?
         BZ    MOD1EXIT            NO. EXIT AND LEAVE TBARG = ADDR.
MOD1LOOP CLC   0(2,MOD1REG),TBARG  ARG MATCH TABLE ENTRY ?
         BE    MOD1PASS            YES.  BYPASS THIS ARGUMENT
         SP    WKTBLCNT,=PL2'1'    SUBTRACT ONE FROM ITEM CNT
         BZ    MOD1EXIT            NO MORERE ITEMS TO CK--SO EXIT
         LA    MOD1REG,2(MOD1REG)  BUMP TO NEXT TABLE ENTRY
         B     MOD1LOOP            GO CHECK ANOTHER ENTRY
MOD1PASS MVC   TBARG,=X'0000'      CLEAR ARGUMENT = DO NOT USE
MOD1EXIT BR    LINKREG             RETURN TO CALLER
***********************************************************************
*   THIS IS THE LOCATE ROUTINE
***********************************************************************
LOCATE   OPEN  (EMFILE,(INPUT))
         READ  ECB6,DI,EMFILE,FIOADBA,4096,0,RELREC
         CHECK ECB6
         CLOSE EMFILE
S230     L     FIOABAR,TCAFCAA     POINT TO DATA BLK.
         MVC   SVRELREC,RELREC     SAVE FOR LAST BBBSS'S
         CLC   PARM2(3),=C'ALL'    IS THIS 'ALL' BEING CONTINUED?
         BNE   S250                NO. GO SETUP FOR DATA BLOCK.
         CLC   TWASLOT,CTRLENTS    YES. SETUP FOR CNTRL BLOCK.
         BH    S290                QUIT IF GARBAGE KEYED IN.
         LA    DATAREG,CTRLSLT1
         SR    DATALOOP,DATALOOP   LOOP THRU CONTROL
         IC    DATALOOP,CTRLENTS   BLOCK TILL REQUESTED SLOT NBR
         SR    1,1                 IS SATISFIED.
         IC    1,TWASLOT
S235     BCT   1,S240
         BR    LINKREG
S240     BCTR  DATALOOP,0
         LA    DATAREG,SLOTLTH(DATAREG)
         B     S235
S250     LH    DATALOOP,BLKLTH     SETUP LOOP NBR BYTES THIS BLK.
         LA    DATAREG,DATASLT1    POINT TO FIRST DATA ITEM
S260     CLI   TWASLOT,2           IF RQSTED SLOT = 1, THIS IS IT.
         BLR    LINKREG         GO RESUME DISPLAY BUILDING TO MAIN LINE
         SR    1,1
         IC    1,TWASLOT           DECREMENT SLOT COUNT BY 1.
         BCTR  1,0
         STC   1,TWASLOT
         IC    1,0(DATAREG)        BUMP TO NEXT SLOT.
         LTR   1,1
         BZ    S290                PREVENT LOOP IF GARBAGE INPUT.
         AR    DATAREG,1
         SR    DATALOOP,1
         LTR   DATALOOP,DATALOOP   VERIFY SLOT NBR VALID FOR THIS BLK.
         BP    S260
S290     MVC   TIOADBAO(MSG5LTH),MSG5   IF RQSTED SLOT CAN'T
         MVC   TIOATDL,=AL2(MSG5LTH)    BE FOUND, SEND 'INVALID INPUT'
         L     R13,SAVREG
         RETURN (14,12)              WRITE SCREEN TO TCAM
***********************************************************************
Z10      CLC   PARM2(4),=C'CTRL'     IS THIS A CTRL DISPLAY?
         BE    Z50                   YES. GOTO CTRL ERROR MSG
         MVC   TIOADBAO(MSG4LTH),MSG4
         LA    R8,MSG4LTH            ONE ADDED FOR BOUNDRY ALIGNMENT
         B     Z80                   GO WRITE SCREEN ON TCAM
Z30      MVC   TIOADBAO(MSG3LTH),MSG3
         LA    R8,MSG3LTH
         B     Z80                   GO WRITE SCREEN ON TCAM
Z40      MVC   TIOADBAO(MSG6LTH),MSG6
         LA    R8,MSG6LTH
         B     Z80                   GO WRITE SCREEN ON TCAM
Z50      CLC   MSG7CTRL,=CL2' '
         BNE   Z60
         MVC   MSG8CTRL,MSG7LINE     LOAD LOCAL CTRL UNIT ADDR
         MVC   TIOADBAO(MSG8LTH),MSG8
         LA    R8,MSG8LTH
         B     Z80                   GO WRITE SCREEN ON TCAM
Z60      MVC   TIOADBAO(MSG7LTH),MSG7
         LA    R8,MSG7LTH
         B     Z80                   GO WRITE SCREEN ON TCAM
Z70      MVC   MSG1TERM,PARM3        MOVE SYMBOLIC NAME TO ERROR MSG
         OC    MSG1TERM,=CL8' '      CONVERT X'00' TO BLANK
         MVC   TIOADBAO(MSG1LTH),MSG1
         LA    R8,MSG1LTH
Z80      STH   R8,TIOATDL            SET MSG LNGTH FOR TCAM MSG HANDLR
         L     R13,SAVREG            RESTORE REG
         RETURN (14,12)              GO WRITE SCREEN ON TCAM
Z130     MVC   MSG13LN,MSG7LINE                                @OZ31884
         MVC   TIOADBAO(MSG13LTH),MSG13                        @OZ31884
         LA    R8,MSG13LTH                                     @OZ31884
         B     Z80                                             @OZ31884
*
MSG1     DC    AL1(SBA),AL2(L1P1),AL1(SF,MNP),C'DEMF',AL1(SF,UNA,IC)
         DC    AL1(SBA),AL2(L2P1),AL1(SF,PNA)
         DC    C'BNG002I T UNABLE TO CONVERT SYMBOLIC '
         DC    AL1(SBA),AL2(L3P1),AL1(SF,PNA)
         DC    C'TERMINAL NAME '
MSG1TERM DC    CL8' '
MSG1LTH  EQU   *-MSG1
MSG3     DC    AL1(SBA),AL2(L1P1),AL1(SF,MNP),C'DEMF',AL1(SF,UNA,IC)
         DC    AL1(SBA),AL2(L2P1),AL1(SF,PNA)
         DC    C'BNG003I T NO ERRORS RECORDED'
MSG3LTH  EQU   *-MSG3
MSG4     DC    AL1(SBA),AL2(L1P1),AL1(SF,MNP),C'DEMF',AL1(SF,UNA,IC)
         DC    AL1(SBA),AL2(L2P1),AL1(SF,PNA)
         DC    C'BNG004I T NO ERRORS RECORDED FOR '
         DC    AL1(SBA),AL2(L3P1),AL1(SF,PNA)
         DC    C'LINE '
NOLINE   DC    CL3' '
MSG4LTH  EQU   *-MSG4
MSG5     DC    AL1(SBA),AL2(L1P1),AL1(SF,MNP),C'DEMF',AL1(SF,UNA,IC)
         DC    AL1(SBA),AL2(L2P1),AL1(SF,PNA)
         DC    C'BNG005I T ERROR NOT FOUND ON FILE FOR '
         DC    AL1(SBA),AL2(L3P1),AL1(SF,PNA)
         DC    C'THE SELECTED ITEM '
MSG5LTH  EQU   *-MSG5
MSG6     DC    AL1(SBA),AL2(L1P1),AL1(SF,MNP),C'DEMF',AL1(SF,UNA,IC)
         DC    AL1(SBA),AL2(L2P1),AL1(SF,PNA)
         DC    C'BNG006I T INVALID FORMAT--CHECK PAGE 2 '
         DC    AL1(SBA),AL2(L3P1),AL1(SF,PNA)
         DC    C'OF MENU FOR CORRECT FORMATS'
MSG6LTH  EQU   *-MSG6
MSG7     DC    AL1(SBA),AL2(L1P1),AL1(SF,MNP),C'DEMF',AL1(SF,UNA,IC)
         DC    AL1(SBA),AL2(L2P1),AL1(SF,PNA)
         DC    C'BNG007I T NO ERRORS RECORDED FOR REMOTE'
         DC    AL1(SBA),AL2(L3P1),AL1(SF,PNA)
         DC    C'LINE '
MSG7LINE DC    CL3' '
         DC    C'    CONTROL UNIT '
MSG7CTRL DC    CL2' '
MSG7LTH  EQU   *-MSG7
MSG8     DC    AL1(SBA),AL2(L1P1),AL1(SF,MNP),C'DEMF',AL1(SF,UNA,IC)
         DC    AL1(SBA),AL2(L2P1),AL1(SF,PNA)
         DC    C'BNG008I T NO ERRORS RECORDED FOR '
         DC    AL1(SBA),AL2(L3P1),AL1(SF,PNA)
         DC    C'LOCAL CONTROL UNIT '
MSG8CTRL DC    CL3' '
MSG8LTH  EQU   *-MSG8
MSG13    DC    AL1(SBA),AL2(L1P1),AL1(SF,MNP),C'DEMF',AL1(SF,UNA,IC)
         DC    AL1(SBA),AL2(L2P1),AL1(SF,PNA)                  @OZ31884
         DC    CL39'BNG013A T NO DATA BLOCKS AVAILABLE FOR '   @OZ31884
         DC    CL5'LINE '                                      @OZ31884
MSG13LN  DC    CL3' '                                          @OZ31884
         DC    CL31':  DATA BASE IN DEGRADED MODE. '           @OZ31884
         DC    CL39' MUST ALLOCATE MORE BLOCKS THAN LINES'     @OZ31884
MSG13LTH EQU   *-MSG13                                         @OZ31884
********************************************************************
HDR3X    DC    AL1(SBA),AL2(L4P1)
HDR1X    DC    AL1(SBA),AL2(L2P1)
DTLENTRY DC    AL1(SF,PNA),C'(',AL1(SF,UNA),C'? ) '
DTLITEM  DC    CL8' '
         DC    AL1(SF,PNA)
DTLCOUNT DC    CL4'0001'
DTLLTH   EQU   *-DTLENTRY
ITEMLTH  EQU   DTLITEM-DTLENTRY
COUNTLTH EQU   DTLCOUNT-DTLENTRY
***********************************************************************
*  THE FUNCTION/COMPANION TABLE DETERMINES WHICH PROGRAM IS TO WRITE
*   THE REQUESTED DISPLAY AND PROVIDES THE CORRECT SCREEN AND COLUMN
*   HEADERS FOR THAT DISPLAY.
***********************************************************************
TABLE    DS    0C                  FUNCTION/COMPANION TABLE
         DC    C'ALL',X'00',C'LINE',XL8'00',AL1(SF,PNA)
         DC    CL39'    RECAP OF ALL LINES HAVING ERRORS',AL1(SF,PNA)
         DC    CL39'       LINEID  ERRS        LINEID  ERRS'
SLOT2    DC    C'LINECTRL',XL8'00',AL1(SF,PNA)
         DC    CL17'    RECAP OF LINE',AL1(SF,PNA),CL20' ',AL1(SF,PNA)
         DC    CL39'      CTRLUNIT ERRS       CTRLUNIT ERRS'
         DC    C'CTRLTERM',XL8'00',AL1(SF,PNA)
         DC    CL18'RECAP OF CTRL UNIT',AL1(SF,PNA),CL19' ',AL1(SF,PNA)
         DC    CL39'       TERMID  ERRS        TERMID  ERRS'
         DC      C'3270',XL4'00',C'BNGT3270',CL82' '
         DC    C'LOCA',XL4'00',C'BNGTLOCL',CL82' '
         DC    C'REMO',XL4'00',C'BNGTRMOT',CL82' '
         DC    C'END'
TABLELTH EQU   *-TABLE
TABLENTY EQU   SLOT2-TABLE
HDR1     DS    0C
         DC    AL1(SBA),AL2(L1P1),AL1(SF,MNP),C'DEMF'
         DC    AL1(SF,UNA,IC),AL1(SBA),AL2(L1P36),AL1(SF,MNP)
HDR1LTH  EQU   *-HDR1
HDR2     DS    0C
         DC    AL1(SF,PNA),C'(',AL1(SF,UNA),C'?'
         DC    AL1(SF,PNA),C') PAGE FORWARD'
         DC    AL1(SF,PNA)
         DC    CL20' '
HDR2LTH  EQU   *-HDR2
HDR3     DS    0C
         DC    AL1(SF,PNA),C'(',AL1(SF,UNA),C'?'
         DC    AL1(SF,PNA),C') PAGE BACKWRD'
         DC    AL1(SF,PNA)
         DC    CL4' '
         DC    AL1(SF,PIA)
         DC    CL15'BBBSSBBBSSBBBSS'     BBBSSBBBSSBBBSS BLOCK &SLOT
HDR3LTH  EQU   *-HDR3
***********************************************************************
MOD1TABL DC    CL64' '       MAX OF 32 ENTRIES FOR MOD-1 TABLE
*                              LOCAL TERM = 2-BYTES
*                              REMOTE CU AND TERM = 2-BYTES
TBRELREC DS    CL3           SAVE AREA FOR PAGING 'BBB'
TBSLOT   DS    C             SAVE AREA FOR PAGING 'SS'
TBCTRL   DS    C             SAVE AREA FOR MDR CTRL UNIT
TBLINE   DS    CL6           SAVE AREA FOR LINE ADDR OF PAGE
TBARG    DS    CL2           SAVE AREA FOR TABLE ARGUMENT
TABLECNT DC    PL2'0'        COUNT OF ENTRIES IN TABLE
WKTBLCNT DC    PL2'0'        WORK AREA FOR COUNT OF TABLE ENTRIES
MOD1SW   DC    X'00'         00 = SWT OFF    FF = SWT ON
*                            IF ON, PERFORM MOD1 TABLE SCAN
***********************************************************************
         DS    0H
HXTOEB   DC    4XL16'00',C' ',XL15'00',7XL16'00'  THIS TABLE CONVERTS
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  HEX CHARS
         DC    2XL16'00'                CHARS FA-THRU-FF BACK
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  A THRU F
EBTOHX   DC    X'00000000000000000000000000000000'     00-0F  THIS
         DC    X'00000000000000000000000000000000'     10-1F  TABLE
         DC    X'00000000000000000000000000000000'     20-2F  CONVERTS
         DC    X'00000000000000000000000000000000'     30-3F  INPUT
         DC    X'00000000000000000000000000000000'     40-4F  A THRU F
         DC    X'00000000000000000000000000000000'     50-5F    TO
         DC    X'00000000000000000000000000000000'     60-6F  0A - 0F
         DC    X'00000000000000000000000000000000'     70-7F   AND
         DC    X'00000000000000000000000000000000'     80-8F  F0 - F9
         DC    X'00000000000000000000000000000000'     90-9F    TO
         DC    X'00000000000000000000000000000000'     A0-AF  00 - 09
         DC    X'00000000000000000000000000000000'     B0-BF    AND
         DC    X'000A0B0C0D0E0F000000000000000000'     C0-CF     *
         DC    X'00000000000000000000000000000000'     D0-DF   BECOME
         DC    X'00000000000000000000000000000000'     E0-EF    FF.
         DC    X'00010203040506070809000000000000'     F0-FF
LOTOUP   DS    0C          LOWER CASE TO UPPER CASE TR TABLE
         DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'F0F1F2F3F4F5F6F7F8F9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
SLOTTTR  DC    C' '
         LTORG
CSECTIED DC    C'BNGTDISP END'
         END
