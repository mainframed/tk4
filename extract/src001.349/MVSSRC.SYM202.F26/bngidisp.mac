         PRINT OFF
         MACRO
&NAME    BNGHJN &LABEL,&HJN
         LCLC  &HJA,&HJB
&HJA     SETC  '&SYSPARM'(1,4)
&HJB     SETC  '&SYSPARM'(5,4)
         AIF   ('&LABEL' EQ '').NOBRNCH
         B     &LABEL .                 BR AROUND CONSTANTS
         SPACE 2
.NOBRNCH ANOP
         AIF   ('&NAME' EQ '').NOLABEL
         DC    C'&NAME' .              MODULE IDENTIFIER
.NOLABEL ANOP
         DC    X'&HJA' .                DATE OF MODIFICATION
         AIF   ('&HJN' NE 'HJN').DATE
         DC    X'&HJB' .                HJN OF MODIFICATION
.DATE    ANOP
         AIF   ('&LABEL' EQ '').NOLBL
         SPACE 2
&LABEL   DS    0H
.NOLBL   ANOP
         MEND
         PRINT ON
***********************************************************************
*                                                                     *
* MODULE NAME = BNGIDISP                                              *
*                                                                     *
* DESCRIPTIVE NAME =  IMS DEMF DISPLAY CONTROL MODULE                 *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 1, LEVEL 1                                         *
*                                                                     *
* FUNCTION = 1) READS INPUT MESSAGE FROM IMS MESSAGE QUEUE;           *
*            2) EDITS THE INPUT INTO 6 PARM FIELDS WITH LEFT JUSTIFY; *
*            3) DOES SYNTAX CHECK ON DEMF COMMANDS AND PARAMETERS;    *
*            4) DETERMINES WHETHER THE REQUEST IS FOR MENU,REMOTE,    *
*               LOCAL OR 3270 SCREEN ERROR DISPLAY AND LINKS          *
*               TO BNGTMENU,BNGTRMOT,BNGTLOCL OR BNGT3270 SEGMENT     *
*               ACCORDINGLY WITH PARAMETERS;                          *
*            5) HANDLES ALL,LINE AND CTRL ERROR DISPLAY REQUEST AND   *
*               WRITES ITS ERROR INFORMATION TO THE 3270 DISPLAY      *
*               TERMINAL AND ISSUES SOME OF THE DISPLAY MESSAGES;     *
*            6) LINKS TO BNGIREAD TO READ SYS1.DEMFLOG FOR ALL,LINE,  *
*               CTRL ERROR DISPLAY REQUESTS;                          *
*            7) WHEN THE INPUT MESSAGE HAS BEEN PROCESSED, BNGIDISP   *
*               READS ANOTHER MESSAGE. THIS PROCESS CONTINUES UNTIL   *
*               THE MESSAGE QUEUE IS EXHAUSTED. THEN BNGIDISP RETURNS *
*               CONTROL TO IMS.                                       *
*                                                                     *
* NOTES = NONE                                                        *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS :                                           *
*    --------------------                                             *
*                                                                     *
*    ALL DEMF RECORDING DISPLAY COMPONENTS USE STANDARD REGISTER      *
*    CONVENTIONS WITH THE EXCEPTION OF THE IMS DISPLAY COMPONENTS.    *
*    CERTAIN IMS MODULES USE ADDITIONAL REGISTERS AND THE LINK MACRO  *
*    FOR PASSING OR RETRIEVING DATA PARAMETER INFORMATION AND ARE     *
*    DETAILED BELOW:                                                  *
*                                                                     *
*     MODULE    REGISTER    CONTENTS.                                 *
*    --------   --------    ------------------------------------      *
*    BNGIDISP     R5        PASSES ADDRESS OF IMS PROGRAM             *
*                           COMMUNICATION BLOCK (PCB) TO              *
*                           BNGI3270, BNGIMENU, BNGILOCL, AND         *
*                           BNGIRMOT.                                 *
*                                                                     *
*                 R11       PASSES TO BNGIREAD THE ADDRESS OF A       *
*                           PARAMETER LIST CONTAINING:                *
*                                                                     *
*                          1) 4-BYTES - ADDRESS OF I/O AREA FROM      *
*                                       BNGIREAD                      *
*                                                                     *
*                          2) 3-BYTES - RELATIVE BLOCK ADDRESS TO     *
*                                       BE READ BY BNGIREAD           *
*                                                                     *
*                          3) 2-BYTES - STATUS OF READ FROM           *
*                                       BNGIREAD                      *
*                                                                     *
*                 R12      FOR BNGI3270, PASSES THE ADDRESS OF A      *
*                          COMMUNICATION AREA CONTAINING              *
*                          UP TO SIX EDITTED PARM FIELDS, SAVE        *
*                          AND WORK AREAS, AND THE INPUT MESSAGE.     *
*                                                                     *
*                          FOR BNGILOCL, BNGIRMOT, AND BNGIMENU;      *
*                          PASSES THE ADDRESS OF THE INPUT MESSAGE.   *
*                                                                     *
*    BNGIREAD    LINK TO BNGIDCBA       RETRIEVES THE ADDRESS OF THE  *
*                (ALIAS FOR BNGISIMS)   ADDRESS OF THE SYS1.DEMFLOG   *
*                                       DCB.                          *
*                                                                     *
*                 R11      RECEIVES ADDRESS OF PARAMETER LIST         *
*                          (SEE BNGIDISP R11 FOR LIST).               *
*                                                                     *
*    BNGI3270     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R11     PASSES TO BNGIREAD THE ADDRESS OF A         *
*                         PARAMETER LIST (SEE BNGIDISP R11 FOR LIST)  *
*                                                                     *
*                 R12     RECEIVES FROM BNGIDISP THE ADDRESS OF THE   *
*                         COMMUNICATION AREA (SEE BNGIDISP R12 FOR    *
*                         CONTENTS OF AREA).                          *
*                                                                     *
*    BNGIMENU     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R12     RECEIVES ADDRESS OF INPUT MESSAGE FROM      *
*                         BNGIDISP.                                   *
*                                                                     *
*    BNGILOCL     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R12     RECEIVES ADDRESS OF INPUT MESSAGE FROM      *
*                         BNGIDISP.                                   *
*                                                                     *
*    BNGIRMOT     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R12     RECEIVES ADDRESS OF INPUT MESSAGE FROM      *
*                         BNGIDISP.                                   *
*                                                                     *
*                                                                     *
*    PATCH LABEL = NONE                                               *
*                                                                     *
* MODULE TYPE = IMS DISPLAY CONTROL                                   *
*                                                                     *
*    PROCESSOR = ASSEMBLER H                                          *
*                                                                     *
*    MODULE SIZE = 9047 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = SERIALLY REUSABLE                                   *
*                                                                     *
* ENTRY POINT = BNGIDISP                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = R1  LOADED WITH THE PARAM LIST POINTER                 *
*              R14 LOADED WITH THE RETURN ADDR (USED BY SUBROUTINE)   *
*              R15 LOADED WITH ENTRY POINT                            *
*                                                                     *
* INPUT = PARAM LIST ITEMS USED ARE :  MSGIN  (LABEL)                 *
*                                                                     *
* OUTPUT = PARAM LIST ITEMS USED ARE : MSGOUT (LABEL)                 *
*                                                                     *
* EXIT-NORMAL = REGISTER 15 RETURN CODE RETURNED TO CALLER :          *
*               00 - OPERATION PERFORMED AS REQUESTED                 *
*                                                                     *
* EXIT-ERROR  = NONE                                                  *
*                                                                     *
* EXTERNAL REFERENCE = BNGILOCL,BNGIRMOT,BNGIMENU,BNGI3270 & BNGIREAD *
*                                                                     *
*    ROUTINES = LOCATE ROUTINE                                        *
*               MOD1SCAN ROUTINE                                      *
*               MOD1 TABLE BUILD (AT LABEL S215) ROUTINE              *
*                                                                     *
*    DATA AREAS = NONE                                                *
*                                                                     *
*    CONTROL BLOCK = NONE                                             *
*                                                                     *
* TABLES = TABLE    - FUNCTION/COMPANION TABLE                        *
*          MOD1TAB  - 3277 MODEL 1 TABLE                              *
*          HXTOEB   - HEX CHARS TO EBCDIC CHARS TABLE                 *
*          EBTOHX   - EBCDIC CHARS TO HEX CHARS TABLE                 *
*          LOTOUP   - LOWER TO UPPER CASE CHARS TABLE                 *
*                                                                     *
* MACROS = SAVE, RETURN, CALL(FOR GET/PUT MSG), ABEND                 *
*          (HARD CODED LINK)                                          *
*                                                                     *
* CHANGE ACTIVITIES AS FOLLOWS:                                       *
* CHANGE 01  11/15/77  PROLOGUE ADDED                                 *
* CHANGE 02  02/22/77  BNGHJN MACRO ADDED                             *
*D122000,128500-129000                                         @OZ29912
*C181500                                                       @OZ29912
*A123500,614000,635000                                         @OZ29912
*A489500                                                       @OZ31883
*D417500-418500                                                @OZ31879
*C420000-421000,505500-506000,553000-554000,555500-559000      @OZ31879
*C560500-563000                                                @OZ31879
*A373500,614200,635400                                         @OZ31886
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
BNGIDISP TITLE 'DISPLAY AUDITS INPUT AND DISPLAYS ALL LINES,LINE, CTRL'
*                                                                     *
***********************************************************************
         SPACE
PCB      DSECT                 MAP OF IMS PROGRAM COMMUNICATION BLOCK
         USING *,PCBREG
PCBTERMN DS    CL8                 REQUESTING TERMINAL SYMBOLIC NAME
         DS    CL2                 RESERVED
PCBSTAT  DS    CL2                 DL/I STATUS CODE
PCBDATE  DS    PL4                 TRANSACTION DATE STAMP 00YYDDDF
PCBTIME  DS    PL4                 TRANSACTION TIME STAMP HHMMSSTH
PCBSEQ   DS    F                   TRANSACTION SEQUENCE NUMBER
PCBMODNM DS    CL8                 MFS MESSAGE OUTPUT DESCRIPTOR NAME
FIOADBA  DSECT
         USING *,FIOABAR
CTRLLAST DS    F                   LAST USED ADDR IN DATASET
CTRLTOTL DS    F                   TOTAL BLOCKS IN DATASET
CTRLBACK DS    F                   BACKWARD PTR IN CTRL BLK CHAIN
CTRLFWD  DS    F                   FORWARD PTR IN CTRL BLK CHAIN
CTRLENTS DS    C                   NBR ENTRIES IN THIS CTRL BLK
         DS    CL15                FOR FUTURE USE
CTRLSLT1 DS    0C                  START OF CTRL SLOT NBR ONE.
         ORG   FIOADBA
DATAPORT DS    CL6                 PORT & LIB ADDR
DATATIME DS    CL4                 TIME BLOCK CREATED
DATADATE DS    CL4                 DATE BLOCK CREATED
DATAFWD  DS    CL3                 FORWARD CHAIN ADDR
DATABACK DS    CL3                 BACKWAD CHAIN ADDR
BLKLTH   DS    CL2                 NBR BYTES USED IN THIS BLOCK
         DS    CL10
DATASLT1 DS    0C                  START OF 1ST DATA SLOT
SLOTS    DSECT           MAP OF ENTRIES IN CONTROL BLOCK
         USING *,DATAREG
SLOTLINE DS    CL6                CHANNEL ADDRESS(PORT OR LIB)
SLOTNBC  DS    CL2                NUMBER OF BLOCKS IN THIS CHAIN
SLOTHITS DS    CL2                TOTAL HITS ON THIS LINE
SLOTRFB  DS    CL3                RELATIVE ADDRESS FIRST BLOCK IN CHAIN
SLOTRLB  DS    CL3                RELATIVE ADDRESS LAST BLOCK IN CHAIN
SLOTLTH  EQU   *-SLOTS
         ORG   SLOTS         MAP OF MDR AND OBR IN DETAIL BLOCKS
DATALTH  DS    C                   LTH OF THIS SLOT
LINEIDA  DS    CL6                 LINE AND LIB ADDR
ENTRYTYP DS    C                   ENTRY TYPE - MDR OR OBR
         DS    CL3
MDRTYPE  DS    C                   TYPE HDWE - 03 EQUALS 3270
         DS    CL3
DATE     DS    CL4                 DATE OF ERROR - 00YY0DDF
TIME     DS    CL4                 TIME OF ERROR - HHMMSSHH
         DS    CL8
MDRCUA   DS    CL2                 MDR CHAN & UNIT ADDR
MDRCTRL  DS    C                   MDR CTRL UNIT POLL ADDR
MDRTERM  DS    C                   MDR TERMIL POLL ADDR
MDRSTATS DS    CL2                 REMOTE 3270 STATUS
         DS    CL2
OBRCCW   DS    CL8                 LAST CCW EXECUTED
OBRCSW   DS    CL8                 CHANNEL STATUS WORD
         DS    CL6
OBRUCB   DS    C
         DS    CL3
OBRCUA   DS    CL2                 OBR CHAN & UNIT ADDR
OBRCTRL  DS    C
OBRTERM  DS    C
         DS    CL12
OBRSENSE DS    CL2                 OBR SENSE BYTES
***********************************************************************
BNGIDISP CSECT
R1       EQU   1
BASE1    EQU   2             BASE REGISTER ONE = 0-4095
BASE2    EQU   3             BASE REGISTER TWO = 4096-8191
BASE3    EQU   4             BASE REGISTER THREE = 8192-12287
PCBREG   EQU   5             IMS PGM COMM BLOCK BASE
FIOABAR  EQU   6             POINTS TO FIOA
PARMREG  EQU   6             POINTS TO PARM AREA
OUTREG   EQU   7             POINTS TO DATA IN TIOA AREA
OUTLOOP  EQU   8             USED FOR LOOPING THRU DATA IN TIOA AREA
DATAREG  EQU   9             POINTS TO DATA IN FIOA AREA
DATALOOP EQU   10            USED FOR LOOPING THRU DATA IN FIOA AREA
TABLEREG EQU   11            POINTS TO FUNCTION/COMPANION TABLE AND
*                              VTAM DSECT.
LINKREG  EQU   11                  SUBROUTINE LINKAGE
R11      EQU   11
MOD1REG  EQU   12            POINTS TO MOD-1 TABLE
R13      EQU   13
R14      EQU   14
R15      EQU   15
***********************************************************************
*                                                                     *
*        THIS SECTION DOES PROGRAM INITIALIZATION                     *
*                                                                     *
***********************************************************************
         SAVE  (14,12)             SAVE CALLER'S REGISTERS
         BALR  BASE1,0
         USING *,BASE1,BASE2,BASE3
BNGIDISP BNGHJN SKIPID                                         @OZ29912
         LA    BASE2,2048(BASE1)    SET SECOND BASE
         LA    BASE2,2048(BASE2)       FROM THE FIRST
         LA    BASE3,2048(BASE2)    SET THIRD BASE
         LA    BASE3,2048(BASE3)       FROM THE SECOND
         LA    14,SAVE             POINT TO OUR SAVE AREA
         ST    14,8(13)            FORWARD CHAIN FROM OLD
         ST    13,4(14)            BACKWARD CHAIN TO OLD
         LR    13,14               FIRST BASE AND S/A FOR OUR REGS
         B     GO
SAVE     DS    18F                 SAVE AREA
GO       DS    0H
         MVC   IOPCB+1(3),1(R1)     SAVE IOPCB ADDRESS
***********************************************************************
*                                                                     *
*        THIS SECTION  GETS A TRANSACTION                             *
*                                                                     *
***********************************************************************
GETRANS  DS    0H
         MVI   MOD1TABL,C' '       BLANK OUT MOD-1 TABLE AREA
         MVC   MOD1TABL+1(63),MOD1TABL
         MVI   MOD1SW,X'00'        SET MOD-1 SWITCH OFF
         MVI   ERRDATA,C' '        BLANK OUT ERROR MESSAGE AREA
         MVC   ERRDATA+1(116),ERRDATA  *
         L     PCBREG,IOPCB        POINT TO IOPCB
         CALL  ASMTDLI,(GU,(PCBREG),MSGIN),VL     GET INPUT MSG
         CLC   PCBSTAT,DLIOK       MESSAGE SEGMENT OBTAINED?
         BE    A100                GO RESPOND TO MESSAGE IF SO
         CLC   PCBSTAT,DLIQC       NO MORE TRANSACTIONS AVAILABLE?
         BNE   ABEND1              INFORM SOMEONE IF UNKNOWN STATUS
         L     R13,4(R13)          RESTORE INCOMING SAVE AREA ADDRESS
         RETURN (14,12),T,RC=0     RELINQUISH CONTROL
ABEND1   ABEND 666,DUMP
CHECKST  CLC   PCBSTAT,DLIOK       DID ISRT GO OK?
         BE    GETRANS             IF SO, GET ANOTHER MESSAGE
ABENDMSG ABEND 444,DUMP
         EJECT
***********************************************************************
*                                                                     *
*        THIS SECTION EDITS THE INPUT MESSAGE.                        *
*                                                                     *
***********************************************************************
A100     ZAP   FLDCNT,=P'0'        SET KEYED-IN FIELD COUNTER TO ZERO.
         XC    PARM1(48),PARM1     ZERO OUT PARM FIELDS
         MVC   PARM1(4),MSGTXCD    MOVE TRANSACTION CODE 'DEMF'
         LH    DATAREG,TIOATDL     SET DATAREG = LNGTH OF INPUT
         CH    DATAREG,=H'9'       'DEMF ' ONLY ENTERED FROM CLEAR SCR?
         BNH   D28                 YES. GOTO BNGIMENU
         CLC   MSGKEYED,=CL29' '   WAS REQUEST KEYED IN?
         BNE   A150                YES.
         CLC   MSGCMDCD,=C'MENU'   IS INPUT ENTERED ON PAGE1?
         BNE   A115                NO.
         CLC   MSGDPRSS,=C'DEPRESS'     IS INPUT ENTERED FROM PAGE 1?
         BNE   D28                      NO.  GO TO BNGIMENU RTN
         CLI   MSGALL,C' '         IS ALL CHECKED?
         BNE   A100ALL             YES.
         CLI   MSG3270,C' '        IS 3270 CHECKED?
         BNE   A150                YES.
         CLI   MSGRMOT,C' '        IS REMOTE CHECKED?
         BNE   A100RMOT            YES.
         CLI   MSGLOCL,C' '        IS LOCAL CHECKED?
         BNE   A100LOCL            YES.
         B     D28                 GO CALL BNGIMENU RTN
A100ALL  MVC   PARM2(3),=C'ALL'    MOVE CMND TO PARM2
         B     D10
A100RMOT MVC   PARM2(4),=C'REMO'   MOVE CMND TO PARM2
         B     D10
A100LOCL MVC   PARM2(4),=C'LOCA'   MOVE CMND TO PARM2
         B     D10
A115     MVC   PARM2(4),MSGCMDCD   MOVE COMMAND ALL, LINE, CTRL,
*                                                3270, OR MENU
         MVC   SAVEBBSS,MSGBBBSS   SAVE BBBSS FOR LINKED-TO PGM
         CLI   MSGPGF,C' '         IS THIS A PAGE FORWARD REQUEST?
         BNE   A120                YES.
         CLI   MSGPGB,C' '         IS THIS A PAGE BACKWARD REQUEST?
         BE    A140                NO.  MUST BE COMPANION REQUEST
         MVC   PARM4(4),=C'PAGE'
         MVC   PARM5(7),=C'BACKWRD'
         B     D10                 CONT NORMAL PROCESSING
A120     MVC   PARM4(4),=C'PAGE'
         MVC   PARM5(7),=C'FORWARD'
         B     D10
A140     CLC   MSGCMDCD,=C'3270'   IS THIS FROM 3270 SCREEN?
         BNE   A145                NO.
         CLC   MSGNTRY(4),=C'BITS' IS THIS FROM BITS PRMPTR SCR?
         BE    D10                 YES. GOTO BNGI3270 PGM
A145     MVC   PARM3,MSGNTRY+4     MOVE X'ED-IN DATA TO PARM3
         OC    PARM3,PARM3         WAS ANYTHING X'ED?
         BZ    D28                 NO. GOTO BNGIMENU
         B     C109                YES. CK FOR COMPANION REQUEST
A150     LA    DATAREG,MSGKEYED    POINT TO KEYED-IN DATA
         LR    DATALOOP,DATAREG    SETUP DATA LOOP
         AH    DATALOOP,=H'29'
         LA    PARMREG,PARM2       POINT TO PARMS.
         LR    14,PARMREG
         MVI   NEWPARM,C'1'        TURN ON 'NEW PARM' SWITCH.
         MVI   CTRPARM,X'00'       SET PARM CHAR CTR = 0
A160     CLI   0(DATAREG),X'FF'    IS THIS BYTE A X'FF'?
         BNE   A210                NO.
         CLI   PARM3,X'00'         YES. IS PARM3 = SYMNAME ?
         BE    A155                NO. GO SET SYMNAME FROM PCBTERMN
         MVC   TWALINE(8),PARM3    YES. SET SYMNAME FROM PARM3
         B     A156                AND LOAD LLLCCTT/TTT IN PARMS
A155     MVC   TWALINE(8),PCBTERMN MOVE DEFAULT SYMNAME IN TWALINE
A156     XC    PARM3(32),PARM3     CLEAR PARMS FOR HARDWARE ADDR
         MVC   PARM3(3),1(DATAREG) LOAD PARM3 = LLL OR TTT
         MVC   PARM4(2),4(DATAREG) LOAD PARM4 = CC
         MVC   PARM5(2),6(DATAREG) LOAD PARM5 = TT
         CLC   PARM4(2),=C'00'     IF PARM4 = ZEROS
         BNE   A158                   THEN ZERO-OUT PARM4
         XC    PARM4(16),PARM4                    & PARM5.
A158     AP    FLDCNT,=P'1'          INDICATE TO BNGI3270 PGM THAT
*                                    DATA WAS KEYED IN
         B     D10
A210     CLI   0(DATAREG),X'FE'    IS THIS BYTE A 'FE' ?       @OZ29912
         BNE   A250                NO.                         @OZ29912
         MVC   MSG10NAM,1(DATAREG) YES.MOVE VTAM NAME TO ERRMSG@OZ29912
         B     Z100                GO WRITE ERR MSG.           @OZ29912
A250     CLI   0(DATAREG),C'A'     IS IT AN 'A' OR HIGHER?     @OZ29912
         BL    B80                 NO. CHECK NEW PARM SWITCH.
         CLI   NEWPARM,C'1'        IS FIRST CHAR FOR PARM(X)?
         BNE   B10                 NO.
         MVI   NEWPARM,C'0'        YES. SET FIRST CHAR IN FOR PARM
         MVI   CTRPARM,X'00'       SET PARM CHAR CTR = 0
B10      IC    R11,CTRPARM         LOAD R11 = CTRPARM
         LA    R11,1(R11)          ADD CTRPARM = CTRPARM + 1
         STC   R11,CTRPARM         STORE NEW CTR BACK CTRPARM
         CLI   CTRPARM,X'08'       IS CHAR COUNT IN PARM OVER 8 ?
         BNH   B20                 NO.
         CLC   PARM2(6),=C'REMOTE' IS THIS A REMOTE SCREEN ?
         BE    B40                 YES. CONTINUE
         B     Z40                 NO. ISSUE INVALID FORMAT MSG
B20      MVC   0(1,14),0(DATAREG)  PUT THIS BYTE IN THIS PARM
         CLI   PARM6+7,X'00'       ARE ALL PARMS USED UP?
         BNE   C10                 YES. GOTO SYNTAX CHECKING ROUTINE
         LA    14,1(14)            BUMP PARM POINTER WORKREG.
B40      LA    DATAREG,1(DATAREG)  BUMP TIOA POINTER.
         CR    DATAREG,DATALOOP    IS THERE MORE DATA IN TIOA?
         BL    A160                YES. GO PROCESS MORE DATA.
         B     C10                 NO. GOTO SYNTAX CHECKING ROUTINE
B80      CLI   NEWPARM,C'1'        IS NEW-PARM SWITCH ON?
         BE    B40                 YES. CHECK FOR MORE DATA.
         CLI   PARM6,X'00'         NO. ARE ALL PARMS USED UP?
         BNE   C10                 YES. GOTO SYNTAX CHECKING ROUTINE
         AP    FLDCNT,=P'1'        ONE  FIELD ENTERED INTO PARM
         LA    PARMREG,8(PARMREG)  NO. BUMP TO NEXT NEW PARM.
         LR    14,PARMREG          POINT WORK REG TO NEXT PARM.
         MVI   NEWPARM,C'1'        TURN ON NEW-PARM SWICH.
         B     B40                 GO CHECK FOR MORE DATA.
***********************************************************************
*                                                                     *
*        AT THIS POINT UP TO 5 PARMS HAVE BEEN EDITED AND             *
*        ARE LEFT JUSTIFIED WITH TRAILING X'00'S                      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        SYNTAX CHECKING ROUTINE                                      *
*                                                                     *
***********************************************************************
C10      CLC   PARM2(5),=X'D4C5D5E400' IS PARM2=MENU ?
         BNE   C20                     NO
         CLI   PARM3,X'00'             IS PARM3 = 00 ?
         BE    D28                     YES. GOTO BNGIMENU
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C20      CLC   PARM2(4),=X'C1D3D300'   IS PARM2 = ALL ?
         BNE   C30                     NO
         CLI   PARM3,X'00'             IS PARM3 = 00 ?
         BE    D10                     YES.GO SCHEDULE APPROPRIATE PGM
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C30      CLC   PARM2(6),=X'D3D6C3C1D300'  IS PARM2 = LOCAL ?
         BNE   C40                        NO
         CLI   PARM3,X'00'             IS PARM3 = 00 ?
         BE    D10                     YES.GO SCHEDULE APPROPRIATE PGM
         CLC   PARM3+1(2),=C'SS'       IS LOCAL/REMOTE SCREEN ?
         BE    D10                     YES.
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C40      CLC   PARM2(6),=X'D9C5D4D6E3C5' IS PARM2 = REMOTE ?
         BNE   C50                     NO.
         CLC   PARM2+7(1),=C'S'        IS REMOTE SCREEN ?
         BE    C45                     YES.
         CLI   PARM2+6,X'00'           IS REMOTE SYNTAX ERROR ?
         BNE   Z40                     YES. GO ISSUE INVALID FORMAT MSG
         CLI   PARM3,X'00'             IS PARM3 = 00 ?
         BE    D10                     YES.GO SCHEDULE APPROPRIATE PGM
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C45      CLI   PARM3,X'00'             IS REMOTE SCREEN ?
         BNE   D10                     YES.
         B     Z40                     NO. GO ISSUE INVALID FORMAT MSG
C50      CLC   PARM2(5),=X'D3C9D5C500' IS PARM2 = LINE ?
         BNE   C60                     NO
         CLI   PARM4,X'00'             IS PARM4 = 00 ?
         BNE   Z40                     NO. GO ISSUE INVALID FORMAT MSG
C55      CLI   PARM3+3,X'00'           LINE ADDR = 4 OR MORE ?
         BNE   Z40                     YES.
         CLI   PARM3+2,X'00'           LINE ADDR = 2 OR LESS ?
         BE    Z40                     YES.
         LA    DATALOOP,3              SET FOR SCAN 3 CHARS
         LA    DATAREG,PARM3           SET DATAREG = PARM3 PTR
C57      CLI   0(DATAREG),X'F0'        IS BYTE(PARM3) >= C'0' ?
         BNL   C59                     YES. IT IS NUMERIC
         CLI   0(DATAREG),X'C6'        IS BYTE(PARM3) > C'F' ?
         BH    Z40                     YES. IT IS INVALID FORMAT
C59      LA    DATAREG,1(DATAREG)      BUMP TO NEXT BYTE OF PARM3
         BCT   DATALOOP,C57            LOOP
         B     D10                     NO. GO SCHEDULE APPROPRIATE PGM
C60      CLC   PARM2(5),=X'C3E3D9D300' IS PARM2 = CTRL ?
         BNE   C70                     NO
         CLI   PARM5,X'00'             IS PARM5 = 00 ?
         BNE   Z40                     NO.
         CLI   PARM4,X'00'             IS PARM4 = 00 ?
         BE    C55                     YES.
C65      CLI   PARM4+2,X'00'           CTRL ADDR = 3 OR MORE ?
         BNE   Z40                     YES.
         CLI   PARM4+1,X'00'           CTRL ADDR = 1 OR LESS ?
         BE    Z40                     YES.
C66      LA    DATALOOP,2              SET FOR SCAN 2 CHARS
         LA    DATAREG,PARM4           SET DATAREG = PARM4 PTR
C67      CLI   0(DATAREG),X'F0'        IS BYTE(PARM3) >= C'0' ?
         BNL   C69                     YES. IT IS NUMERIC
         CLI   0(DATAREG),X'C6'        IS BYTE(PARM3) > C'F' ?
         BH    Z40                     YES. IT IS INVALID FORMAT
C69      LA    DATAREG,1(DATAREG)      BUMP TO NEXT BYTE OF PARM3
         BCT   DATALOOP,C67            LOOP
         B     C55                     NO. GO CHECK LINE ADDR (PARM3)
C70      CLC   PARM2(5),=X'F3F2F7F000' IS PARM2 = 3270 ?
         BNE   Z40                     NO.
         CLI   PARM6,X'00'             IS PARM6 = 00 ?
         BNE   Z40                     NO.
         CLI   PARM5,X'00'             IS PARM5 = 00 ?
         BE    C75                     YES.
         CLI   PARM5+2,X'00'           IS TERMINAL ADDR = 3 OR MORE ?
         BNE   Z40                     YES.
         CLI   PARM5+1,X'00'           IS TERMINAL ADDR = 1 OR LESS ?
         BE    Z40                     YES.
         LA    DATALOOP,2              SET FOR SCAN 2 CHARS
         LA    DATAREG,PARM5           SET DATAREG = PARM5 PTR
C72      CLI   0(DATAREG),X'F0'        IS BYTE(PARM3) >= C'0' ?
         BNL   C74                     YES. IT IS NUMERIC
         CLI   0(DATAREG),X'C6'        IS BYTE(PARM3) > C'F' ?
         BH    Z40                     YES. IT IS INVALID FORMAT
C74      LA    DATAREG,1(DATAREG)      BUMP TO NEXT BYTE OF PARM3
         BCT   DATALOOP,C72            LOOP
         B     C65                     NO. GO CHK LINE AND CTRL
C75      CLI   PARM4,X'00'             IS PARM4 = 00 ?
         BNE   Z40                     NO.
         CLI   PARM3+3,X'00'           IS TERM/LINE = 4 OR MORE ?
         BNE   Z70                     YES. GO ISSUE SYMBOLIC ERR MSG
         CLI   PARM3+2,X'00'           IS TERM/LINE = 2 OR LESS ?
         BE    Z70                     YES. GO ISSUE SYMBOLIC ERR MSG
         LA    DATALOOP,3              SET FOR SCAN 3 CHARS
         LA    DATAREG,PARM3           SET DATAREG = PARM3 PTR
C77      CLI   0(DATAREG),X'F0'        IS BYTE(PARM3) >= C'0' ?
         BNL   C79                     YES. IT IS NUMERIC
         CLI   0(DATAREG),X'C6'        IS BYTE(PARM3) > C'F' ?
         BH    Z70                     YES. IT IS SYMBOLIC ERROR
C79      LA    DATAREG,1(DATAREG)      BUMP TO NEXT BYTE OF PARM3
         BCT   DATALOOP,C77            LOOP
         B     D10                     NO SYMBOLIC ERROR FOUND
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        AT THIS POINT, THE REQUEST IS FOR A BLOWUP OF AN ENTRY OF ONE*
*        OF THE DISPLAYS. THE FUNCTION/COMPANION TABLE IS SEARCHED FOR*
*        THE NAME OF THE PROGRAM TO PERFORM THE NEXT DISPLAY.         *
*                                                                     *
***********************************************************************
C109     LA    TABLEREG,TABLE      POINT AT FUNCTION/COMPANION TABLE.
C110     CLC   0(4,TABLEREG),PARM2 PGRM NAME IN TABLE?
         BE    C170                YES.
         CLC   0(3,TABLEREG),=C'END'    END OF TABLE?
         BE    D28                 YES. GO CK FOR MENU REQUEST       PH
         LA    TABLEREG,TABLENTY(TABLEREG)  BUMP TO NEXT ENTRY.
         B     C110                GO CH NEXT ENTRY.
C170     OC    4(4,TABLEREG),4(TABLEREG)   IS THERE A COMPANION PGRM?
         BZ    D10                               NO.
         MVC   PARM2(4),4(TABLEREG)     MOVE COMPANION NAME TO PARM2.
         CLC   PARM2(4),=C'TERM'  IS THIS A TERML ERROR REQUEST?
         BNE   D10                 NO.
         L     15,=V(BNGI3270)    LINK TO BNGI3270 PGM.
         B     D75
***********************************************************************
*                                                                     *
*        THIS SECTION SCHEDULES THE APPROPRIATE DISPLAY PROGRAM:      *
*        ALL LINES, LINE, CTRL, 3270, OR MENU                         *
*                                                                     *
***********************************************************************
D10      L     TABLEREG,=A(TABLE)  POINT AT FUNCTION/COMPANION TABLE.
D20      CLC   0(4,TABLEREG),PARM2        PROGRAM NAME IN TABLE?
         BE    D25                        YES.
         CLC   0(3,TABLEREG),=C'END'      END OF TABLE?
         BE    D28                        YES. GO TO MENU REQUEST
         LA    TABLEREG,TABLENTY(TABLEREG)  BUMP TO NEXT ENTRY.
         B     D20                GO CHECK NEXT ENTRY.
D25      CLI   4(TABLEREG),X'00'  IS THERE A PGRM NAME TO XCTL TO?
         BNE   E10                NO.
         L     15,=V(BNGI3270)
         CLC   8(8,TABLEREG),=C'BNGI3270'
         BE    D75
         L     15,=V(BNGILOCL)
         CLC   8(8,TABLEREG),=C'BNGILOCL'
         BE    D50
         L     15,=V(BNGIRMOT)
         CLC   8(8,TABLEREG),=C'BNGIRMOT'
         BE    D50
D28      DS    0H
         L     15,=V(BNGIMENU)
D50      DS    0H
         LA    12,MSGIN            SET UP COMMUNICATION'S POINTER FOR
*                                     BNGILOCL AND BNGIRMOT
         B     D100                LINK TO MODULE
D75      DS    0H
         LA    12,COMMAREA         SET UP COMMUNICATION POINTER
D100     BALR  14,15               LINK TO APPROPRIATE MODULE
         B     GETRANS             GET ANOTHER MESSAGE
         EJECT
***********************************************************************
*                                                                     *
*        AT THIS POINT IT HAS BEEN DETERMINED THAT THE REQUEST IS FOR *
*        ALL LINES, LINE, OR CTRL. THIS MODULE HANDLES THOSE DISPLAYS.*
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*        THIS SECTION CREATES THE COMMON HEADER FOR                   *
*        ALL LINES, ONE LINE, AND CTRL.                               *
*                                                                     *
***********************************************************************
E10      MVC   MSGCMD,0(TABLEREG)     MOVE NAME OF THIS
*                                     DISPLAY TO OUTPUT
         OC    MSGCMD,=CL4' '         CHANGE ALL'00' TO ALL' '
         MVC   MSGPG,HDRPG
         MVC   MSGRECAP,18(TABLEREG)  MOVE RECAP HEADER TO TIOA
         MVC   MSGHDR1,59(TABLEREG)   MOVE COLUMN HEADER TO TIOA.
         MVC   MSGHDR2,59(TABLEREG)   MOVE COLUMN HEADER AGAIN
         MVC   LGBBBSS,=C'BBBSSBBBSSBBBSS' SETUP OUTPUT BBBSS
         MVC   SMBBBSS,LGBBBSS             SETUP OUTPUT BBBSS
         LA    OUTREG,MSGHDR2+39      POINT TO FIRST ENTRY IN OUTPUT
         LA    OUTLOOP,14             SETUP 14 LINE ITEMS FOR MOD 1
*                                     ADJUST FOR MOD 2 AFTER
*                                     MOD 1 ITEMS ENTERED IN OUTPUT
***********************************************************************
*                                                                     *
*        THIS SECTION BUILDS THE APPROPRIATE DISPLAY                  *
*                                                                     *
***********************************************************************
F150     CP    FLDCNT,=P'0'      FIELD'S KEYED-IN?
         BE    R10                NO. GO TO BLOWUP/PAGING SECTION
F180     XC    RELREC,RELREC       POINT TO FIRST CONTROL BLOCK.
*        DFHFC TYPE=GET,RDIDADR=RELREC,NORESP=G120,DATASET=EMFILE
         BAL   LINKREG,READ        GET FIRST CONTROL BLOCK.
         B     G120
***********************************************************************
*                                                                     *
*        THIS IS A COMMON READ SUBROUTINE FOR THIS PROGRAM.           *
*                                                                     *
***********************************************************************
READ     ST    11,SAVE11
         LA    11,PARMADDR         SET UP PARM REG
         L     15,=V(BNGIREAD)    POINT TO READ MODULE
         BALR  14,15              LINK TO BDAM READ MODULE
         L     11,SAVE11
         OC    STATUS,STATUS      READ OK?
         BZ    0(LINKREG)         YES. RETURN TO CALLER
         CLC   STATUS,=C'FF'       WAS EMFILE OPENED?
         BE    Z60                 NO.  WRITE 'NOT OPEN' MSG
         UNPK  DBLWD,STATUS(3)
         MVC   IOERCODE,DBLWD+3
         TR    IOERCODE,HXTOEB     MOVE BDAM RETURN CODE TO I/O ERR MSG
         UNPK  DBLWD,RELREC(4)
         MVC   IOERBLK,DBLWD+4     MOVE BLK NBR THAT WAS BEING READ
         TR    IOERBLK,HXTOEB
         B     Z20                     IF REQUESTED SLOT CAN'T
*                                        BE FOUND, SEND 'SEARCHING ERR'
SAVE11   DS    F
***********************************************************************
*                                                                     *
***********************************************************************
G120     L     FIOABAR,IOAREA      POINT TO FIOA AREA.
         OC    CTRLENTS,CTRLENTS   ANY LINE ENTRIES?
         BZ    Z30                 NO. WRITE 'NO LINE ERRORS'
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET LOOP CTR FOR READING SLOTS.
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT IN BLOCK.
         CLC   PARM2(3),=C'ALL'    DOES PARM2 = ALL?
         BE    J10                 YES.
         OC    PARM3,PARM3         WAS A LINE ADDRESS ENTERED?
         BZ    Z40                 NO. WRITE 'NO LINE ENTERED'      PH
         MVC   LINENAME,PARM3           MOVE LINE ADDRESS TO SAVE AREA
         MVC   CLUSNAME,PARM4           MOVE CONTROL UNIT NAME TO SAVE
         MVC   MSG7CTRL,PARM4           MOVE CONTROL UNIT NAME TO SAVE
         OC    MSG7CTRL,=CL2' '            FOR CONTROL UNIT COMMAND
         MVC   MSG4LN,PARM3        MOVE LINE ADDRESS TO 'NO ERROR' MSG
         OC    MSG4LN,=CL3' '
         MVC   MSG7LINE,MSG4LN     MOVE LINE ADDRESS TO 'NO ERROR' MSG
*                                       FOR CONTROL UNIT COMMAND
H40      TR    PARM3(3),EBTOHX     CHANGE F0C6F2 TO 000F02 ETC.
         PACK  DBLWD,PARM3(4)      PACK   000F02 TO 0000F2 ETC.
         MVC   LINEID(3),DBLWD+4   MOVE GOOD PORTION TO SAVE AREA
         MVC   LINEID+3(3),=XL3'000000'
H80      CLC   SLOTLINE,LINEID     IS THIS CONTROL SLOT FOR OUR LINE?
         BE    L60                 YES. GO GET DETAIL BLOCK.
         LA    DATAREG,SLOTLTH(DATAREG)   POINT TO NEXT SLOT.
         BCT   DATALOOP,H80        CHECK NEXT SLOT.
         CLC   CTRLFWD,=F'0'       MORE CONTROL BLOCKS?
         BE    Z10                 NO. GO WRITE 'NO LINE ERRORS'
         MVC   RELREC,CTRLFWD+1    POINT TO NEXT BLK TO BE READ.
         BAL   LINKREG,READ
*        DFHFC TYPE=GET,RDIDADR=RELREC,NORESP=H180,DATASET=EMFILE
         L     FIOABAR,IOAREA      POINT TO INPUT RECORD AREA
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET SLOT LOOP CONTROL
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT.
         B     H80
         EJECT
***********************************************************************
*                                                                     *
*        THIS SECTION FORMATS 'ALL LINE' ENTRIES                      *
*                                                                     *
***********************************************************************
J10      LA    14,LGBBBSS          LOAD SAVED ADDR OF BLK/SLOT TIOA.
         MVC   LGBBBSS(5),=C'00001'   MOVE 00001 TO FIRST AND
         MVC   LGBBBSS+10(5),LGBBBSS    PREVIOUS BBBSS'S
         MVC   SMBBBSS,LGBBBSS     DO THE SAME FOR SMALL SCREEN
         MVI   QUITSW,X'00'        TURN OFF OUTPUT-FULL SWITCH
J40      UNPK  DBLWD,SLOTLINE(4)        UNPK LINE ADDR IN WORKAREA
         TR    DBLWD+4(3),HXTOEB        CONVERT TO EBCDIC
         MVC   DTLITEM,=CL8' '     CLEAR DETAIL LINE ITEM
         MVC   DTLITEM(3),DBLWD+4  PUT LINE ADDR IN DETAIL ENTRY
J150     LH    14,SLOTHITS         PUT LINE ERRORS IN REG.
         CVD   14,DBLWD            CONVERT TO DECIMAL
         UNPK  DTLCOUNT,DBLWD+5(3)      PUT LINE ERROR COUNT
         OI    DTLCOUNT+3,X'F0'         IN OUTPUT
         MVC   0(DTLLTH,OUTREG),DTLENTRY   MOVE DETAIL ENTRY TO OUTPUT
         MVC   DTLCOUNT,=C'0001'      RESTORE PROGRAM CONSTANT.
         LA    OUTREG,DTLLTH(OUTREG)    UPDATE OUTPUT POINTER
         BCT   DATALOOP,K100       MORE SLOTS IN THIS CTRL BLK?
         CLC   CTRLFWD,=F'0'       NO. MORE CTRL BLKS?
         BE    K120                NO. PREPARE TO EXIT.
         MVC   RELREC,CTRLFWD+1    POINT TO NEXT BLK TO BE READ.
         BAL   LINKREG,READ
*        DFHFC TYPE=GET,RDIDADR=RELREC,NORESP=K50,DATASET=EMFILE
         L     FIOABAR,IOAREA      POINT TO INPUT RECORD
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET LOOP CONTROL.
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT
         B     J40
K100     LA    DATAREG,SLOTLTH(DATAREG)   POINT TO NEXT SLOT.
         BCT   OUTLOOP,J40         OUTPUT COUNTER EMPTY?
         CLI   QUITSW,X'FF'        OUTPUT AREA FILLED FOR 3277-2?
         BE    K120                YES.
         MVI   QUITSW,X'FF'        NO. TURN ON OUTPUT-FULL SWITCH
         LA    OUTLOOP,66          SETUP OUTPUT COUNTER
         L     15,=A(SMBBBSS)      POINT TO SMALL BLK/SLT AREA IN OUPUT
         UNPK  DBLWD,RELREC(4)     STORE BDAM RELATIVE
         TR    DBLWD,HXTOEB        CONTROL BLK NUMBER
         MVC   5(3,15),DBLWD+4     (LAST BBBSS) IN OUTPUT
         SR    14,14
         IC    14,CTRLENTS         GET ORIGINAL COUNT OF SLOTS
         SR    14,DATALOOP         DETERMINE LAST SLOT READ.
         STC   14,DBLWD+6          STORE
         UNPK  DBLWD(3),DBLWD+6(2) SLOT NUMBER
         TR    DBLWD,HXTOEB        (LAST BBBSS)
         MVC   8(2,15),DBLWD       IN OUTPUT.
         MVC   MSGENDSM,MSGODAT2+12 STOR ERRS FOR LAST ENTRY FOR SM SCR
         B     J40                 GO PROCESS MORE SLOTS
K120     L     15,=A(LGBBBSS)     POINT TO LARGE BLK/SLT AREA IN OUTPUT
         UNPK  DBLWD,RELREC(4)     STORE BDAM RELATIVE
         TR    DBLWD,HXTOEB        CONTROL BLK NUMBER
         MVC   5(3,15),DBLWD+4     (LAST BBBSS) IN OUTPUT
         SR    14,14
         IC    14,CTRLENTS         GET ORIGINAL COUNT OF SLOTS
         SR    14,DATALOOP         DETERMINE LAST SLOT READ.
         STC   14,DBLWD+6          STORE
         UNPK  DBLWD(3),DBLWD+6(2) SLOT NUMBER
         TR    DBLWD,HXTOEB        (LAST BBBSS)
         MVC   8(2,15),DBLWD       IN OUTPUT.
K200     CLC   SMBBBSS+5(5),=C'BBBSS'    SMALL SCREEN FULL?
         BNE   K230                      YES.
         MVC   SMBBBSS+5(5),LGBBBSS+5    NO. SMALL BBBSS NEVER SET
         LA    14,80                  SINCE THE ENTRIES NEVER FILLED
         SR    14,OUTLOOP             A SMALL SCREEN AREA, OUTLOOP
         LR    OUTLOOP,14             MUST BE ADJUSTED
K230     LTR   OUTLOOP,OUTLOOP        OUTPUT ALREADY CLEARED?
         BZ    K250                   YES.
K240     MVC   0(CLRLTH,OUTREG),CLRNTRY         NO. CLEARING
*                                               OUTPUT FIELDS
         LA    OUTREG,CLRLTH(OUTREG)    UPDATE OUTPUT POINTER
         BCT   OUTLOOP,K240       MORE ENTRIES TO CLEAR IN OUTPUT
K250     L     PCBREG,IOPCB       POINT TO IOPCB
         CALL  ASMTDLI,(ISRT,(PCBREG),MSGOUT,LGALL),VL
         B     CHECKST
***********************************************************************
*                                                                     *
*        THIS SECTION PREPARES THE 'LINE' OR 'CTRL' DISPLAY           *
*                                                                     *
***********************************************************************
L60      MVI   QUITSW,X'00'        TURN OFF OUTPUT-FULL-SW.
         ZAP   ITEMCNT,=P'0'       SET CTR OF OUTPUT ITEMS = 0
         MVC   RELREC,SLOTRFB      SAVE POINTER TO DETAIL BLK
L140     MVC   SVRELREC,RELREC     SAVE FOR LAST BBBSS'S
         OC    RELREC,RELREC       IS THERE ANY DATA BLOCKS ?  @OZ31886
         BZ    Z130                NO, WRITE 'NO DATA BLKS MSG'@OZ31886
         BAL   LINKREG,READ
L170     L     FIOABAR,IOAREA      POINT TO INPUT RECORD AREA
         SR    DATALOOP,DATALOOP
         LH    DATALOOP,BLKLTH     SET SLOT LOOP CONTROL
         LA    DATAREG,DATASLT1    POINT FOR FIRST SLOT
L210     MVI   SLOTCNT,X'00'       ZERO OUT DETAIL SLOT COUNTER.
         OC    LINENAME,=CL8' '
         OC    CLUSNAME,=CL8' '
L220     L     1,=A(MSGRECAP)           POINT TO RECAP HEADER
         CLC   PARM2(4),=C'LINE'        PARM2 = LINE?
         BE    L230                         YES.
         CLC   PARM4,=CL8' '            IS PARM4 BLANK?
         BE    L225                     YES. MUST BE LOCAL.
         OC    PARM4,PARM4              OR IS PARM4 ZEROS?
         BZ    L225                     YES. MUST BE LOCAL ALSO
         MVC   19(2,1),CLUSNAME         MOVE CONTROL UNIT TO HEADER
         MVC   21(9,1),=C' ON LINE '
         MVC   31(7,1),LINENAME         MOVE LINE ADDR. TO HEADER
         B     M10
L225     MVC   9(19,1),=C'LOCAL CONTROL UNIT '
         MVC   28(8,1),LINENAME         MOVE CTRL UNIT TO HEADER
         B     M10
L230     MVC   19(8,1),LINENAME         MOVE LINE ADDR. TO HEADER
***********************************************************************
*                                                                     *
*        THIS SECTION FORMATS A 'LINE' ITEM OR A 'CTRL' ITEM.         *
*                                                                     *
***********************************************************************
M10      MVC   CTRLNAME,=D'0'      ZERO  OUT CONTROL UNIT WORK AREA.
         MVC   TERMNAME,=CL8' '    BLANK OUT TERMINAL WORK AREA.
         MVC   RELREC,DATAFWD      SAVE NEXT DETAIL BLK ADDR.
         MVC   TBARG,=CL2' '       CLEAR MOD-1 TABLE ARGUMENT
         CLI   ENTRYTYP,X'91'      IS THIS AN MDR ENTRY?
         BE    N10                 YES.
         CLI   ENTRYTYP,X'30'      IS IT A BTAM OBR?
         BE    N80                 YES.
         CLI   ENTRYTYP,X'34'      IS IT A TCAM OBR?
         BE    N80                 YES.
         B     M140
M100     CLC   PARM2(4),=C'LINE'   IS THIS A 'LINE' DISPLAY?
         BE    N150                YES.
         OC    CTRLNAME,=CL8' '    CHANGE X'00' TO X'40'
         OC    PARM4,=CL8' '       CHANGE X'00' TO X'40'
         CLC   PARM4,CTRLNAME      PARM4 = CONTROL UNIT NAME?
         BE    N150                YES.
         CLI   PARM4,X'40'         IS PARM4 BLANK ?                  PH
         BNE   M140                NO. MUST BE REMOTE--BYPASS CK LOCAL
         OC    LINENAME,=CL8' '    CHANGE X'00' TO X'40'
         CLC   LINENAME,CTRLNAME   CONTROL UNIT = LINE?
         BE    N150                YES. MUST BE LOCAL CONTROL UNIT
M140     SR    15,15
         IC    15,SLOTCNT          ADD ONE
         AH    15,=H'1'            TO
         STC   15,SLOTCNT          SLOT COUNTER.
M160     SR    14,14
         IC    14,DATALTH          PUT LTH OF SLOT IN WORK REG.
         AR    DATAREG,14          POINT TO NEXT DETAIL SLOT
         SR    DATALOOP,14         MORE SLOTS IN THIS DETAIL BLK?
         BP    M10                 YES.
         OC    RELREC,RELREC       MORE DETAIL BLOCKS?
         BNE   L140                YES.
M240     ZAP   WORKCNT,ITEMCNT     ANY ITEMS IN TIOA?
         BZ    Z50                 NO. WRITE 'NO ERRS' MSG FOR CTRLUNIT
         CLC   SMBBBSS+5(5),=C'BBBSS'   IS SMALL 'BBBSS' FILLED IN ?
         BNE   M260                     YES.   BYPASS FILLING IT IN
         MVC   SMBBBSS+5(5),LGBBBSS+5   NO. FILL IT IN
M260     MVC   MSGENDSM,MSGODAT2+12 STOR ERRS FOR LAST ENTRY FOR SM SCR
         B     K200
N10      CLI   MOD1SW,X'00'           MOD-1 SW ON ?
         BE    N30                    NO. BYPASS MOD-1 SCANNER CK.
         CLC   PARM2(4),=C'CTRL'      IS THIS A 'CTRL' DISPLAY ?
         BE    N20                    YES. USE REMOTE TERMINAL ADDR
         MVC   TBARG(1),MDRCTRL       PASS REMOTE CTRL UNIT TO MOD-1
         B     N25                    GO CK ADDR AGAINST MOD-1 TABLE
N20      MVC   TBARG(1),MDRTERM       PASS REMOTE TERM ADDR TO MOD-1
N25      BAL   LINKREG,MOD1SCAN       CK IF REMOTE CU OR TERMINAL
         CLC   TBARG,=X'0000'           IN MOD-1 TABLE ?
         BE    M140                   YES. BYPASS THIS ERROR ENTRY
N30      UNPK  CTRLNAME(3),MDRCTRL(2)   MDR - PUT CONTROL UNIT
         TR    CTRLNAME(2),HXTOEB       NAME
         MVI   CTRLNAME+2,X'00'         IN WORK AREA.
         UNPK  TERMNAME(3),MDRTERM(2)   PUT TERMINAL
         TR    TERMNAME(2),HXTOEB       NAME
         MVI   TERMNAME+2,C' '          IN WORK AREA.
         B     M100
N80      CLI   OBRUCB,X'10'        IS THIS A LOCAL?
         BE    N110                YES. GO MOVE 3-BYTE ADDR
N85      CLI   MOD1SW,X'00'           MOD-1 SW ON ?
         BE    N95                    NO. BYPASS MOD-1 SCANNER CK.
         CLC   PARM2(4),=C'CTRL'      IS THIS A 'CTRL' DISPLAY?@OZ31879
         BE    N88                    YES. USE REMOTE TERM ADDR@OZ31879
         MVC   TBARG(1),OBRCTRL       PASS REMOTE CU TO MOD-1  @OZ31879
         B     N90                    GO CK ADDR AGAINST MOD-1 @OZ31879
N88      MVC   TBARG(1),OBRTERM       PASS REMOTE TERM ADDR    @OZ31879
*                                     TO MOD-1                 @OZ31879
N90      BAL   LINKREG,MOD1SCAN       CK IF REMOTE CU OR TERM  @OZ31879
         CLC   TBARG,=X'0000'           IN MOD-1 TABLE ?
         BE    M140                   YES. BYPASS THIS ERROR ENTRY
N95      UNPK  DBLWD,OBRCTRL(2)    OBR - MOVE 1-BYTE REMOTE CU ADDR
         TR    DBLWD+4(3),HXTOEB
         MVC   CTRLNAME(2),DBLWD+5      TO WORK AREA.
         UNPK  DBLWD,OBRTERM(2)         MOVE 1-BYTE REMOTE TERML ADDR
         TR    DBLWD+4(3),HXTOEB
         MVC   TERMNAME(2),DBLWD+5      WORK AREA.
         B     M100
N110     UNPK  DBLWD,LINEIDA(4)    OBR - MOVE 3-BYTE CONTROL UNIT
         TR    DBLWD+4(3),HXTOEB        ADDRESS(POSSIBLY ROUNDED)
         MVC   CTRLNAME(3),DBLWD+4      TO WORK AREA.
         CLI   MOD1SW,X'00'           MOD-1 SW ON ?
         BE    N130                   NO. BYPASS MOD-1 SCANNER CK.
         MVC   TBARG,OBRCUA           PASS LOCAL TERMINAL TO MOD-1
*                                       SCANNER
         BAL   LINKREG,MOD1SCAN       CK IF LOCAL TERMINAL
         CLC   TBARG,=X'0000'           IN MOD-1 TABLE ?
         BE    M140                   YES. BYPASS THIS ERROR ENTRY
N130     UNPK  DBLWD,OBRCUA(3)          MOVE REAL 3-BYTE CONTROL
         TR    DBLWD+4(3),HXTOEB        UNIT ADDRESS
         MVC   TERMNAME(3),DBLWD+4      WORK AREA.
         B     M100
N150     OC    CTRLNAME,=CL8' '    CHANGE ZEROS TO BLANKS.
         LA    14,MSGHDR2+39       POINT TO FIRST ITEM IN TIOA
         ZAP   WORKCNT,ITEMCNT     ANY ITEMS IN TIOA?
         BZ    P90                 NO. ADD NEW ITEM.
N170     CLC   PARM2(4),=C'LINE'   IS THIS A 'LINE' DISPLAY?
         BE    P20                 YES.
         CLC   TERMNAME,ITEMLTH(14)     WORKTERMINAL = TIOA TERMINAL?
         BE    P40                 YES.
N230     LA    14,DTLLTH(14)       BUMP TO NEXT ITEM
         SP    WORKCNT,=PL2'1'     SUBT ONE FROM ITEM COUNTER.
         BZ    P90     ANY ITEMS?  NO. ADD NEW ITEM.
         B     N170
P20      CLC   CTRLNAME,ITEMLTH(14)     WORK CTRL = TIOA CTRL?
         BNE   N230                NO.
P40      PACK  FULLWD(3),COUNTLTH(4,14)  ADD
         AP    FULLWD(3),=P'1'          ONE
         UNPK  COUNTLTH(4,14),FULLWD(3)  TO
         OI    COUNTLTH+3(14),X'F0'     COUNT FIELD.
         B     M140                GO CHECK NEXT SLOT.
P90      CLC   PARM2(4),=C'LINE'        IS THIS A 'LINE' DISPLAY?
         BE    P170                     YES.
         MVC   DTLITEM,TERMNAME    NO. MOVE TERMINAL
P120     MVC   0(DTLLTH,OUTREG),DTLENTRY  TO OUTPUT
         LA    OUTREG,DTLLTH(OUTREG)    UPDATE OUTPUT POINTER.
         AP    ITEMCNT,=P'1'       ADD 1 TO COUNT OF OUTPUT ITEMS.
         SR    15,15
         IC    15,SLOTCNT          ADD ONE
         AH    15,=H'1'               TO
         STC   15,SLOTCNT             SLOT COUNTER
         L     15,=A(LGBBBSS)      POINT TO LARGE BLK/SLT AREA IN OUPUT
         UNPK  DBLWD,SVRELREC(4)   STORE BDAM RELATIVE
         TR    DBLWD,HXTOEB        CONTROL BLK NUMBER
         MVC   5(3,15),DBLWD+4     (LAST BBBSS) IN OUTPUT
         UNPK  DBLWD(3),SLOTCNT(2)     STORE SLOT NUMBER IN
         TR    DBLWD,HXTOEB        (LAST BBBSS)
         MVC   8(2,15),DBLWD       IN OUTPUT.
         CP    ITEMCNT,=P'1'       IS THIS THE FIRST ITEM IN TIOA ?
         BNE   P140                NO. BYPASS UPDATE OF BBBSS'S
         MVC   LGBBBSS(5),LGBBBSS+5   UPDATE (FIRST BBBSS) FOR LG SCR
         MVC   SMBBBSS(5),LGBBBSS     UPDATE (FIRST BBBSS) FOR SM SCR
         CLC   LGBBBSS+10(5),=C'BBBSS'  IS PREV BBBSS FILLED IN ?
         BNE   P140                     YES. DON'T UPDATE.
         MVC   LGBBBSS+10(5),LGBBBSS  UPDATE (PREVIOUS BBBSS) FOR LGSCR
         MVC   SMBBBSS+10(5),LGBBBSS  UPDATE (PREV  BBBSS) FOR SM SCR
P140     BCT   OUTLOOP,M160        MORE ROOM IN TIOA?
         CLI   QUITSW,X'FF'        OUTPUT AREA FILLED FOR 3277-2?
         BE    M240                YES.
         MVI   QUITSW,X'FF'        NO. TURN ON OUTPUT-FULL SWITCH
         LA    OUTLOOP,66          SETUP OUTPUT COUNTER
         MVC   SMBBBSS+5(5),LGBBBSS+5    ADD (LAST BBBSS) TO SMBBBSS
         B     M160                GO PROCESS MORE SLOTS
P170     MVC   DTLITEM,CTRLNAME    SETUP CONTROL UNIT ADDRESS
         B     P120                     FOR OUTPUT.
         EJECT
***********************************************************************
*                                                                     *
*        THIS SECTION PREPARES FOR AN ENTRY BLOWUP OR FOR PAGING.     *
*                                                                     *
***********************************************************************
R10      CLC   PARM4(4),=C'PAGE'   IS THIS A 'PAGE' REQUEST?
         BE    S010                YES. CK FOR FWD OR BACK.
         CLC   PARM2(4),=C'LINE'   NO. THIS MUST BE COMPANION REQUEST.
         BNE   R010                IF NOT LINE DISPLAY, GO READ RECORD.
         MVC   PARM3,MSGNTRY+4     IS LINE, MOVE THE X'D FIELD TO PRM3.
         MVC   LINENAME,MSGNTRY+4       MOVE LINE ADDRESS TO SAVE AREA
         XC    PARM4(16),PARM4      AS IF LINE ID HAD BEEN KEYED IN.
         B     F180                GO DO LINE DISPLAY AS IF THIS WERE
*                                  AN INITIAL 'LINE' INPUT.
R010     MVC   CLUSNAME,MSGNTRY+4       MOVE CONTROL UNIT ADDR TO SAVE
         MVC   PARM4,MSGNTRY+4     MOVE X'D CTRL UNIT TO PARM4 AS IF
         XC    PARM5,PARM5           IT HAD BEEN KEYED IN.
R140     TR    MSGBBBSS(3),EBTOHX  GET BLOCK NUMBER OF
         PACK  DBLWD,MSGBBBSS(4)      REQUESTED LINE INTO HEX.
         MVC   RELREC,DBLWD+4
         BAL   LINKREG,READ
R170     L     FIOABAR,IOAREA          POINT TO INPUT RECORD AREA
         XC    PARM3,PARM3
         UNPK  DBLWD,DATAPORT(4)        MOVE LINE ID
         TR    DBLWD+4,HXTOEB           FROM PREVIOUS BLOCK
         MVC   LINENAME(3),DBLWD+4     TO PARM3 AS IF IT HAD BEEN
         MVC   PARM3(3),LINENAME        KEYED IN.
         CLC   PARM3(3),PARM4      IS THIS A LOCAL CTRL UNIT?
         BNE   F180                NO. GO TO PROCESS REMOTE.
         XC    PARM4,PARM4         YES. CLEAR REDUNDANT CU ADDR
         B     F180                GO DO A 'CTRL' DISPLAY AS IF ABOVE
*                                  CTRL & LINE HAD BEEN TYPED IN.
S010     DS    0H
         MVC   WORK15,MSGBBBSS     CONVERT BBBSS'S TO HEX
         TR    WORK15,EBTOHX
         CLC   PARM5(4),=C'FORW'   IS IT A 'PAGE FORWARD' REQUEST?
         BE    S110                YES.
         PACK  DBLWD,WORK15+10(6)
         MVC   RELREC,DBLWD+3      THE 'PREVIOUS' BLOCK.
         MVC   TWASLOT,DBLWD+6     AND SLOT TO RESUME AT.
         MVC   TBRELREC,RELREC     SAVE CURRENT 'BBB'
         MVC   TBSLOT,TWASLOT      SAVE CURRENT 'SS'
         MVC   LGBBBSS(5),MSGBBBSS+10   OLD PREVIOUS NOW BECOMES NEW
         MVC   LGBBBSS+10(5),MSGBBBSS+10    FIRST AND PREVIOUS.
         MVC   SMBBBSS,LGBBBSS      DO SAME FOR 3277-1 BBBSS
         B     S180
S110     DS    0H
         PACK  DBLWD,WORK15+5(6)
         MVC   RELREC,DBLWD+3      PLACE TO PAGE FORWARD FROM
         MVC   TWASLOT,DBLWD+6
         MVC   TBRELREC,RELREC     SAVE CURRENT 'BBB'
         MVC   TBSLOT,TWASLOT      SAVE CURRENT 'SS'
         MVC   LGBBBSS(5),MSGBBBSS+5     OLD LAST IS NEW FIRST AND
         MVC   LGBBBSS+10(5),MSGBBBSS    OLD FIRST IS NEW PREVIOUS.
         MVC   SMBBBSS,LGBBBSS      DO SAME FOR 3277-1 BBBSS
S180     BAL   LINKREG,LOCATE      LOCATE PROPER BLOCK & SLOT.
         CLC   PARM2(3),=C'ALL'
         BE    J40                 GO RESUME WHERE LEFT OFF AT (ALL)
         B     S215                 YES. PREPARE MOD-1 TABLE        XXH
S190     ZAP   ITEMCNT,=P'0'       SET CTR OF OUTPUT ITEMS = 0
         MVI   QUITSW,X'00'        TURN OFF OUTPUT-FULL-SW.    @OZ31883
         SR    15,15
         IC    15,DBLWD+6              UPDATE SLOT COUNTER
         SH    15,=H'1'                    FOR PAGING IN
         STC   15,SLOTCNT              LINE OR CTRL DISPLAYS.
         UNPK  DBLWD,LINEIDA(4)        MOVE LINE ADDRESS
         TR    DBLWD+4(3),HXTOEB                TO
         MVC   LINENAME(3),DBLWD+4     SAVE AREA FOR RECAP HDR.
         MVC   LINENAME+3(5),=CL5' '        CLEAR OUT GARBAGE
         XC    PARM4,PARM4
         CLI   ENTRYTYP,X'91'          IS THIS AN MDR ENTRY?
         BE    S210                         YES.
         CLI   OBRUCB,X'40'            IS THIS A REMOTE OBR ?
         BNE   S200                         NO.
         UNPK  CLUSNAME(3),OBRCTRL(2)       MOVE MDR DUMMY LINE ADDR
         TR    CLUSNAME(2),HXTOEB                TO
         MVC   CLUSNAME+2(6),=CL6' '        SAVE AREA FOR RECAP HDR.
         MVC   PARM4(2),CLUSNAME              MOVE  ADDR  TO PARM4
         B     L220        GO RESUME WHERE LEFT OFF AT (LINE OR CTRL)
S200     MVC   CLUSNAME,LINENAME       MOVE OBR CTRL ADDR. TO SAVE AREA
         B     L220        GO RESUME WHERE LEFT OFF AT (LINE OR CTRL)
S210     UNPK  CLUSNAME(3),MDRCTRL(2)       MOVE MDR CTRL ADDR.
         TR    CLUSNAME(2),HXTOEB                TO
         MVC   CLUSNAME+2(6),=CL6' '        SAVE AREA FOR RECAP HDR.
         MVC   PARM4(2),CLUSNAME       MOVE MDR CTRL ADDR. TO PARM4
         B     L220        GO RESUME WHERE LEFT OFF AT (LINE OR CTRL)
***********************************************************************
*                                                                     *
*   THIS IS THE MOD-1 'LINE' AND 'CTRL' TABLE BUILD ROUTINE           *
*                                                                     *
***********************************************************************
S215     CLI   ENTRYTYP,X'91'      IS THIS AN MDR?                  XXH
         BE    S218                YES. SAVE MDR CTRL UNIT     @OZ31879
         CLI   OBRUCB,X'40'        IS THIS A REMOTE OBR ?      @OZ31879
         BNE   S220                NO. BYPASS SAVING CTRL UNIT @OZ31879
         MVC   TBCTRL,OBRCTRL      YES. SAVE REMOTE OBR CU     @OZ31879
         B     S220                                            @OZ31879
S218     MVC   TBCTRL,MDRCTRL      SET TBCTRL = MDRCTRL        @OZ31879
S220     MVC   TBLINE,LINEIDA      SAVE CURRENT LINE ID
         XC    RELREC,RELREC       POINT TO FIRST CONTROL BLOCK.
         BAL   LINKREG,READ        GET FIRST CONTROL BLOCK.
         L     FIOABAR,IOAREA      POINT TO FIOA AREA.
         OC    CTRLENTS,CTRLENTS   ANY LINE ENTRIES?
         BZ    Z30                 NO. WRITE 'NO LINE ERRORS'
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET LOOP CTR FOR READING SLOTS.
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT IN BLOCK.
S220A    CLC   TBLINE,SLOTLINE     IS THIS CONTROL SLOT FOR OUR LINE?
         BE    S222                YES. GO GET DETAIL BLOCK.
         LA    DATAREG,SLOTLTH(DATAREG)   POINT TO NEXT SLOT.
         BCT   DATALOOP,S220A      CHECK NEXT SLOT.
         CLC   CTRLFWD,=F'0'       MORE CONTROL BLOCKS?
         BE    Z10                 NO. GO WRITE 'NO LINE ERRORS'
         MVC   RELREC,CTRLFWD+1    POINT TO NEXT BLK TO BE READ.
         BAL   LINKREG,READ
         L     FIOABAR,IOAREA      POINT TO INPUT RECORD AREA
         SR    DATALOOP,DATALOOP
         IC    DATALOOP,CTRLENTS   SET SLOT LOOP CONTROL
         LA    DATAREG,CTRLSLT1    POINT TO FIRST SLOT.
         B     S220A
S222     ZAP   TABLECNT,=P'0'      SET CTR OF TABLE ITEMS = 0
         LA    MOD1REG,MOD1TABL    POINT TO MOD-1 TABLE
         MVC   RELREC,SLOTRFB      MOVE POINTER TO DETAIL BLK
S222A    MVC   SVRELREC,RELREC     SAVE FOR COMPARE TO TABLE RELREC
         BAL   LINKREG,READ
         L     FIOABAR,IOAREA      POINT TO INPUT RECORD AREA
         SR    DATALOOP,DATALOOP
         LH    DATALOOP,BLKLTH     SET SLOT LOOP CONTROL
         LA    DATAREG,DATASLT1    POINT FOR FIRST SLOT
         MVI   SLOTCNT,X'01'       SET COUNT OF DETAIL BLK SLOTS=1
         MVC   RELREC,DATAFWD      SAVE NEXT DETAIL BLK ADDR.
S222B    CLC   SVRELREC,TBRELREC   IS THIS THE RIGHT DETL BLK ?
         BNE   S222B10             NO. CONTINUE SCAN
         CLC   SLOTCNT,TBSLOT      IS THIS THE RIGHT ENTRY ?
         BNE   S222B10             NO. CONTINUE SCAN
S222B03  MVI   MOD1SW,X'FF'        TURN MOD-1 SWITCH ON
S222B05  MVC   RELREC,TBRELREC     RESTORE PAGING 'BBB'
         MVC   TWASLOT,TBSLOT      RESTORE PAGING 'SS'
         BAL   LINKREG,LOCATE      LOCATE STARTING 'BBBSS' FOR DISP
         B     S190                RESUME PAGING SETUP
S222B10  LA    14,MOD1TABL         POINT OT MOD-1 TABLE
         CLI   ENTRYTYP,X'91'      IS THIS AN MDR ENTRY?
         BE    S222C               YES.
         CLI   ENTRYTYP,X'30'      IS IT A BTAM OBR?
         BE    S222D               YES.
         CLI   ENTRYTYP,X'34'      IS IT A TCAM OBR?
         BE    S222D               YES.
S222B20  SR    15,15
         IC    15,SLOTCNT          ADD ONE
         AH    15,=H'1'            TO
         STC   15,SLOTCNT          SLOT COUNTER.
         SR    14,14
         IC    14,DATALTH          PUT LTH OF SLOT IN WORK REG.
         AR    DATAREG,14          POINT TO NEXT DETAIL SLOT.
         SR    DATALOOP,14         MORE SLOTS IN THIS DETAIL BLK?
         BP    S222B               YES.
         OC    RELREC,RELREC       MORE DETAIL BLOCKS?
         BNE   S222A               YES.
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN MOD-1 TABLE?
         BZ    S222B05             NO. EXIT BUT DON'T TURN ON MOD-1 SW.
         B     S222B03             YES. EXIT NORMALLY
S222C    CLC   PARM2(4),=C'CTRL'   IS THIS A 'CTRL' DISPLAY ?
         BE    S222C50             YES.  USE TERMINAL ADDR ONLY
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN TABLE ?
         BZ    S222C30             NO. ADD NEW ITEM
S222C10  CLC   0(1,14),MDRCTRL     IS THIS CTRL UNIT IN THE TABLE ?
         BE    S222B20             YES.  BYPASS THIS ENTRY
         LA    14,2(14)            BUMP TO NEXT ENTRY
         SP    WKTBLCNT,=PL2'1'    SUBTRACT ONE FROM ITEM COUNT
         BZ    S222C30             BRANCH IF NO MORE ITEMS TO CK
         B     S222C10
S222C30  CP    TABLECNT,=P'32'     IS THIS THE 33TH ENTRY ?
         BE    S222B03             YES.
         MVC   0(1,MOD1REG),MDRCTRL     STORE IN TABLE
         B     S228
S222C50  CLC   TBCTRL,MDRCTRL      DOES CTRLUNIT ENTRY = REQSTED CU?XXH
         BNE   S222B20             NO. BYPASS PUTTING TERM IN TABLE XXH
         ZAP   WKTBLCNT,TABLECNT                                    XXH
         BZ    S222C70
S222C60  CLC   0(1,14),MDRTERM     IS THIS TERMINAL IN THE TABLE ?
         BE    S222B20             YES. BYPASS THIS ENTRY
         LA    14,2(14)            BUMP TO NEXT ENTRY
         SP    WKTBLCNT,=PL2'1'
         BZ    S222C70
         B     S222C60
S222C70  CP    TABLECNT,=P'32'     IS THIS THE 33TH ENTRY ?
         BE    S222B03             YES.
         MVC   0(1,MOD1REG),MDRTERM    PUT REMOTE TERMINAL INTO TABLE
         B     S228
S222D    CLI   OBRUCB,X'10'        IS THIS A LOCAL?
         BE    S222G               YES. GO MOVE 3-BYTE ADDR
         CLC   PARM2(4),=C'CTRL'   IS THIS A 'CTRL' DISPLAY ?  @OZ31879
         BE    S222D50             YES.  USE TERMINAL ADDR ONLY@OZ31879
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN TABLE ?        @OZ31879
         BZ    S222D30             NO. ADD NEW ITEM            @OZ31879
S222D10  CLC   0(1,14),OBRCTRL     IS THIS CTRL UNIT IN TABLE? @OZ31879
         BE    S222B20             YES.  BYPASS THIS ENTRY     @OZ31879
         LA    14,2(14)            BUMP TO NEXT ENTRY          @OZ31879
         SP    WKTBLCNT,=PL2'1'    SUBTRACT ONE FROM ITEM COUNT@OZ31879
         BZ    S222D30             BRANCH IF NO MORE ITEMS     @OZ31879
         B     S222D10                                         @OZ31879
S222D30  CP    TABLECNT,=P'32'     IS THIS THE 33TH ENTRY ?    @OZ31879
         BE    S222B03             YES.                        @OZ31879
         MVC   0(1,MOD1REG),OBRCTRL     STORE IN TABLE         @OZ31879
         B     S228                                            @OZ31879
S222D50  CLC   TBCTRL,OBRCTRL      DOES CU ENTRY = REQSTED CU? @OZ31879
         BNE   S222B20             NO. DON'T PUT TERM IN TBL   @OZ31879
         ZAP   WKTBLCNT,TABLECNT                               @OZ31879
         BZ    S222D70                                         @OZ31879
S222D60  CLC   0(1,14),OBRTERM     IS THIS TERMINAL IN THE TBL?@OZ31879
         BE    S222B20             YES. BYPASS THIS ENTRY      @OZ31879
         LA    14,2(14)            BUMP TO NEXT ENTRY          @OZ31879
         SP    WKTBLCNT,=PL2'1'                                @OZ31879
         BZ    S222D70                                         @OZ31879
         B     S222D60                                         @OZ31879
S222D70  CP    TABLECNT,=P'32'     IS THIS THE 33TH ENTRY ?    @OZ31879
         BE    S222B03             YES.                        @OZ31879
         MVC   0(1,MOD1REG),OBRTERM   PUT REMOTE TERM IN TABLE @OZ31879
         B     S228                                            @OZ31879
S222G    CLC   PARM2(4),=C'LINE'   IS THIS A 'LINE' DISPLAY ?
         BE    S222B20             YES. BYPASS THIS ERROR DATA
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN TABLE ?        @OZ31879
         BZ    S225                NO. ADD NEW ITEM TO TABLE   @OZ31879
S224     CLC   0(2,14),OBRCUA      ARG MATCH TABLE ENTRY ?     @OZ31879
         BE    S222B20             YES.  BYPASS THIS ARGUMENT  @OZ31879
         SP    WKTBLCNT,=PL2'1'    SUBTRACT ONE FROM ITEM CNT  @OZ31879
         BZ    S225                NO MORE ITEMS TO CK--SO ADD @OZ31879
*                                  THIS NEW ITEM TO TABLE
         LA    14,2(14)            BUMP TO NEXT TABLE ENTRY
         B     S224                GO CK ANOTHER ENTRY         @OZ31879
S225     CP    TABLECNT,=P'32'     MORE THAN 33 ENTRIES--USER  @OZ31879
*                                  MUST BE PAGING FROM MOD-2   @OZ31879
         BE    S222B03             PREPARE TO EXIT ROUTINE.    @OZ31879
         MVC   0(2,MOD1REG),OBRCUA ADD CTRL UNIT TO MOD-1 TABLE@OZ31879
S228     LA    MOD1REG,2(MOD1REG)  UPDATE TABLE POINTER.       @OZ31879
         AP    TABLECNT,=P'1'      ADD 1 TO COUNT OF TABLE ITEMS
         B     S222B20             GO CK ANOTHER ENTRY
***********************************************************************
*                                                                     *
*   THIS IS THE MOD-1 TABLE SCANNER ROUTINE                           *
*                                                                     *
***********************************************************************
MOD1SCAN LA    MOD1REG,MOD1TABL    POINT TO MOD-1 TABLE
         ZAP   WKTBLCNT,TABLECNT   ANY ITEMS IN TABLE ?
         BZ    MOD1EXIT            NO. EXIT AND LEAVE TBARG = ADDR.
MOD1LOOP CLC   0(2,MOD1REG),TBARG  ARG MATCH TABLE ENTRY ?
         BE    MOD1PASS            YES.  BYPASS THIS ARGUMENT
         SP    WKTBLCNT,=PL2'1'    SUBTRACT ONE FROM ITEM CNT
         BZ    MOD1EXIT            NO MORERE ITEMS TO CK--SO EXIT
         LA    MOD1REG,2(MOD1REG)  BUMP TO NEXT TABLE ENTRY
         B     MOD1LOOP            GO CHECK ANOTHER ENTRY
MOD1PASS MVC   TBARG,=X'0000'      CLEAR ARGUMENT = DO NOT USE
MOD1EXIT BR    LINKREG             RETURN TO CALLER
***********************************************************************
*                                                                     *
*        THIS IS THE LOCATE ROUTINE                                   *
*                                                                     *
***********************************************************************
LOCATE   ST    11,SAVE11
         LA    11,PARMADDR         SET UP PARM REG
         L     15,=V(BNGIREAD)    POINT TO READ MODULE
         BALR  14,15              LINK TO BDAM READ MODULE
         L     11,SAVE11
         OC    STATUS,STATUS      READ OK?
         BZ    S230               YES.
         CLC   STATUS,=C'FF'       WAS EMFILE OPENED?
         BE    Z60                 NO.  WRITE 'NOT OPEN' MSG
*        UNPK  DBLWD,STATUS(2)
*        MVC   IOERCODE,DBLWD+5
*        TR    IOERCODE,HXTOEB     MOVE BDAM RETURN CODE TO I/O ERR MSG
*        UNPK  DBLWD,RELREC(4)
*        MVC   IOERBLK,DBLWD+4     MOVE BLK NBR THAT WAS BEING READ
*        TR    IOERBLK,HXTOEB
         B     Z90                     IF REQUESTED SLOT CAN'T
*                                        BE FOUND, SEND 'SEARCHING ERR'
***********************************************************************
S230     L     FIOABAR,IOAREA      POINT TO DATA BLK.
         MVC   SVRELREC,RELREC     SAVE FOR LAST BBBSS'S
         CLC   PARM2(3),=C'ALL'    IS THIS 'ALL' BEING CONTINUED?
         BNE   S250                NO. GO SETUP FOR DATA BLOCK.
         CLC   TWASLOT,CTRLENTS    YES. SETUP FOR CNTRL BLOCK.
         BH    S290                QUIT IF GARBAGE KEYED IN.
         LA    DATAREG,CTRLSLT1
         SR    DATALOOP,DATALOOP   LOOP THRU CONTROL
         IC    DATALOOP,CTRLENTS   BLOCK TILL REQUESTED SLOT NBR
         SR    1,1                 IS SATISFIED.
         IC    1,TWASLOT
S235     BCT   1,S240
         BR    LINKREG
S240     BCTR  DATALOOP,0
         LA    DATAREG,SLOTLTH(DATAREG)
         B     S235
S250     LH    DATALOOP,BLKLTH     SETUP LOOP NBR BYTES THIS BLK.
         LA    DATAREG,DATASLT1    POINT TO FIRST DATA ITEM
S260     CLI   TWASLOT,2           IF RQSTED SLOT = 1, THIS IS IT.
         BL    0(LINKREG)          GO RESUME DISPLAY BUILDING.
         SR    1,1
         IC    1,TWASLOT           DECREMENT SLOT COUNT BY 1.
         BCTR  1,0
         STC   1,TWASLOT
         IC    1,0(DATAREG)        BUMP TO NEXT SLOT.
         LTR   1,1
         BZ    S290                PREVENT LOOP IF GARBAGE INPUT.
         AR    DATAREG,1
         SR    DATALOOP,1
         LTR   DATALOOP,DATALOOP   VERIFY SLOT NBR VALID FOR THIS BLK.
         BP    S260
S290     MVC   ERRDATA(MSG5LTH),MSG5   IF REQUESTED SLOT CAN'T
ERRISRT  L     PCBREG,IOPCB              BE FOUND, SEND 'SEARCHING ERR'
         CALL  ASMTDLI,(ISRT,(PCBREG),ERROUT,LGERR),VL
         B     CHECKST
***********************************************************************
Z10      CLC   PARM2(4),=C'CTRL'      IS PARM2 = CTRL ?
         BE    Z50                    YES.
         MVC   ERRDATA(MSG4LTH),MSG4
         B     ERRISRT
Z20      MVC   ERRDATA(MSG1LTH),MSG1
         B     ERRISRT
Z30      MVC   ERRDATA(MSG3LTH),MSG3
         B     ERRISRT
Z40      MVC   ERRDATA(MSG6LTH),MSG6
         B     ERRISRT
Z50      CLC   MSG7CTRL,=CL2' '       REMOTE CTRL UNIT PRESENT?
         BE    Z80                    NO. IT MUST BE LOCAL CTRL UNIT
         MVC   ERRDATA(MSG7LTH),MSG7
         B     ERRISRT
Z60      MVC   ERRDATA(MSG9LTH),MSG9
         B     ERRISRT
Z70      MVC   MSG2TERM,PARM3         MOVE SYMBOLIC NAME TO ERROR MSG
         OC    MSG2TERM,=CL8' '       CONVERT X'00' TO BLANK
         MVC   ERRDATA(MSG2LTH),MSG2
         B     ERRISRT
Z80      MVC   MSG8CTRL,MSG7LINE      MOVE LOCAL LINE TO CTRL ADDR
         MVC   ERRDATA(MSG8LTH),MSG8  SINCE CTRL ADDR=LINE ADDR (LOCL)
         B     ERRISRT
Z90      MVC   ERRDATA(MSG5LTH),MSG5
         B     ERRISRT
Z100     MVC   ERRDATA(MSG10LTH),MSG10                         @OZ29912
         B     ERRISRT                                         @OZ29912
Z130     MVC   MSG13LN,MSG7LINE                                @OZ31886
         MVC   ERRDATA(MSG13LTH),MSG13                         @OZ31886
         B     ERRISRT                                         @OZ31886
         EJECT
ERROUT   DS    0D              MAP OF TRANSACTION MESSAGE SEGMENT:
ERROLL   DC    H'121'              MESSAGE LENGTH INCL. LL,Z1,Z2,DATA
ERROZ1   DC    X'00'               FLAG FIELD - USED BY IMS INTERNALLY
ERROZ2   DC    X'00'               FLAG FIELD - NON-ZERO IF MFS EDITED
ERRDATA  DS    CL117               START OF MESSAGE DATA
MSG1     DC    CL39'BNG001A I I/O ERR READING SYS1.DEMFLOG '
         DC    CL28'    THE BDAM RETURN CODE IS'
IOERCODE DC    CL4'0'
         DC    CL7' '
         DC    CL34'THE BDAM RELATIVE BLOCK NUMBER IS '
IOERBLK  DC    CL3'0'
         DC    C'  '
MSG1LTH  EQU   *-MSG1
MSG2     DC    CL39'BNG002I I UNABLE TO CONVERT SYMBOLIC '
         DC    C'TERMINAL NAME '
MSG2TERM DC    CL8' '
MSG2LTH  EQU   *-MSG2
MSG3     DC    CL39'BNG003I I NO ERRORS RECORDED '
MSG3LTH  EQU   *-MSG3
MSG4     DC    CL39'BNG004I I NO ERRORS RECORDED FOR   '
         DC    C'LINE '
MSG4LN   DC    CL3' '
MSG4LTH  EQU   *-MSG4
MSG5     DC    CL39'BNG005I I ERROR NOT FOUND ON FILE FOR '
         DC    C'THE SELECTED ITEM '
MSG5LTH  EQU   *-MSG5
MSG6     DC    CL39'BNG006I I INVALID FORMAT--CHECK PAGE 2 '
         DC    C'OF MENU FOR CORRECT FORMATS'
MSG6LTH  EQU   *-MSG6
MSG7     DC    CL39'BNG007I I NO ERRORS RECORDED FOR REMOTE'
         DC    C'LINE '
MSG7LINE DC    CL3' '
         DC    C'    CONTROL UNIT '
MSG7CTRL DC    CL2' '
MSG7LTH  EQU   *-MSG7
MSG8     DC    CL39'BNG008I I NO ERRORS RECORDED FOR    '
         DC    C'LOCAL CONTROL UNIT '
MSG8CTRL DC    CL3' '
MSG8LTH  EQU   *-MSG8
MSG9     DC    C'BNG009A I SYS1.DEMFLOG FILE NOT OPEN   '
MSG9LTH  EQU   *-MSG9
MSG10    DC    CL10'BNG010I I '                                @OZ29912
MSG10NAM DC    CL8' '                                          @OZ29912
         DC    CL21' IS A VTAM TERMINAL. '                     @OZ29912
         DC    CL39'FOR INQUIRY, GIVE DEMF HARDWARE ADDRESS'   @OZ29912
MSG10LTH EQU   *-MSG10                                         @OZ29912
MSG13    DC    CL39'BNG013A I NO DATA BLOCKS AVAILABLE FOR '   @OZ31886
         DC    CL5'LINE '                                      @OZ31886
MSG13LN  DC    CL3' '                                          @OZ31886
         DC    CL31':  DATA BASE IN DEGRADED MODE. '           @OZ31886
         DC    CL39'MUST ALLOCATE MORE BLOCKS THAN LINES'      @OZ31886
MSG13LTH EQU   *-MSG13                                         @OZ31886
***********************************************************************
DTLENTRY DC    C' (? ) '
DTLITEM  DC    CL8' '
DTLCOUNT DC    CL4'0001'
DTLLTH   EQU   *-DTLENTRY
ITEMLTH  EQU   DTLITEM-DTLENTRY
COUNTLTH EQU   DTLCOUNT-DTLENTRY
***********************************************************************
CLRNTRY  DC    XL14'3F'             USED TO CLEAR FIELDS FOR OUTPUT
         DC    XL4'403F3F3F'
CLRLTH   EQU   *-CLRNTRY
***********************************************************************
*   THE FUNCTION/COMPANION TABLE DETERMINES WHICH PROGRAM IS TO WRITE *
*   THE REQUESTED DISPLAY AND PROVIDES THE CORRECT SCREEN AND COLUMN  *
*   HEADERS FOR THAT DISPLAY.                                         *
***********************************************************************
TABLE    DS    0F                  FUNCTION/COMPANION TABLE
         DC    C'ALL',X'00',C'LINE',XL8'00',AL2(0)
         DC    CL39'    RECAP OF ALL LINES HAVING ERRORS',AL2(0)
         DC    CL39'       LINEID  ERRS        LINEID  ERRS'
SLOT2    DC    C'ALL',X'40',C'LINE',XL8'00',AL2(0)
         DC    CL39'    RECAP OF ALL LINES HAVING ERRORS',AL2(0)
         DC    CL39'       LINEID  ERRS        LINEID  ERRS'
         DC    C'LINECTRL',XL8'00',AL2(0)
         DC    CL39'    RECAP OF LINE',AL2(0)
         DC    CL39'      CTRLUNIT ERRS       CTRLUNIT ERRS'
         DC    C'CTRLTERM',XL8'00',AL2(0)
         DC    CL39'RECAP OF CTRL UNIT',AL2(0)
         DC    CL39'       TERMID  ERRS        TERMID  ERRS'
         DC    C'3270',XL4'00',C'BNGI3270',CL82' '
         DC    C'LOCA',XL4'00',C'BNGILOCL',CL82' '
         DC    C'REMO',XL4'00',C'BNGIRMOT',CL82' '
         DC    C'END'
TABLELTH EQU   *-TABLE
TABLENTY EQU   SLOT2-TABLE
HDRPG    DC    C'(?) PAGE FORWARD'
         DC    C'(?) PAGE BACKWRD'
HXTOEB   DC    4XL16'00',C' ',XL15'00',7XL16'00'  THIS TABLE CONVERTS
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  HEX CHARS
         DC    2XL16'00'                CHARS FA-THRU-FF BACK
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  A THRU F
EBTOHX   DC    X'00000000000000000000000000000000'     00-0F  THIS
         DC    X'00000000000000000000000000000000'     10-1F  TABLE
         DC    X'00000000000000000000000000000000'     20-2F  CONVERTS
         DC    X'00000000000000000000000000000000'     30-3F  INPUT
         DC    X'00000000000000000000000000000000'     40-4F  A THRU F
         DC    X'00000000000000000000000000000000'     50-5F    TO
         DC    X'00000000000000000000000000000000'     60-6F  0A - 0F
         DC    X'00000000000000000000000000000000'     70-7F   AND
         DC    X'00000000000000000000000000000000'     80-8F  F0 - F9
         DC    X'00000000000000000000000000000000'     90-9F    TO
         DC    X'00000000000000000000000000000000'     A0-AF  00 - 09
         DC    X'00000000000000000000000000000000'     B0-BF    AND
         DC    X'000A0B0C0D0E0F000000000000000000'     C0-CF     *
         DC    X'00000000000000000000000000000000'     D0-DF   BECOME
         DC    X'00000000000000000000000000000000'     E0-EF    FF.
         DC    X'00010203040506070809000000000000'     F0-FF
***********************************************************************
MOD1TABL DS    CL64          MAX OF 32 ENTRIES FOR MOD-1 TABLE
*                              LOCAL TERM = 2-BYTES
*                              REMOTE CU AND TERM = 2-BYTES
TBRELREC DS    CL3           SAVE AREA FOR PAGING 'BBB'
TBSLOT   DS    C             SAVE AREA FOR PAGING 'SS'
TBCTRL   DS    C             SAVE AREA FOR MDR CTRL UNIT
TBLINE   DS    CL6           SAVE AREA FOR LINE ADDR OF PAGE
TBARG    DS    CL2           SAVE AREA FOR TABLE ARGUMENT
TABLECNT DS    PL2           COUNT OF ENTRIES IN TABLE
WKTBLCNT DS    PL2           WORK AREA FOR COUNT OF TABLE ENTRIES
MOD1SW   DS    X             00 = OFF    FF = ON
*                            IF ON, PERFORM MOD1 TABLE SCAN
***********************************************************************
LINEID   DS    XL6                 HARDWARE LINE ADDRESS
LINENAME DS    CL8           LINE NAME SAVE AREA FOR RECAP HEADER
CTRLID   DS    X                   HARDWARE CONTROL UNIT ADDRESS
CTRLNAME DS    CL8           CTRL/CLUSTER NAME WORK AREA FOR OUTPUT
TERMNAME DS    CL8                 TERML/LOGICAL UNIT NAME WORK AREA
CLUSNAME DS    CL8           CTRL/CLUSTER NAME SAVE AREA FOR RECAP HDR.
NEWPARM  DS    C                   NEW-PARM SWITCH
CTRPARM  DS    C                   COUNTER OF CHARS STORED IN PARM(X)
SAVETIOA DS    F                   SAVE AREA FOR ORIGINAL TIOA
TWASLOT  DS    C                   INPUT SLOT COUNT IN HEX
*                                  DISPLACEMENTS IN TIOA
SAVERCAP DS    F                   SAVEAREA FOR POINTER TO RECAP LINE
SAVEITEM DS    F                   SAVEAREA FOR POINTER TO FIRST LINE
*                                  AND CTRL DISPLAYS
SLOTCNT  DS    C                   COUNT OF DETAIL SLOTS READ
ITEMCNT  DS    PL2                 COUNT OF OUTPUT ITEMS IN LINE
WORKCNT  DS    PL2                 ITEM WORK COUNTER
WORK15   DS    CL15
QUITSW   DS    C             USED TO STOP EDIT OF INPUT ON 3RD SBA
*                             IF 2ND SBA = L1P7
***********************************************************************
         EJECT
FINISH   DC    AL2(FINISHE-FINISH),XL2'0',C'FUNCTION COMPLETE'
FINISHE  EQU   *
* PATCH AREA AND PROGRAM CONSTANTS
         SPACE
         DC    C'PATCH AREA S-CONS:',256S(*)
EPSAVE   DS    F
PARMADDR DS    0F
IOAREA   DC    A(0)
RELREC   DC    XL3'0'
STATUS   DC    CL2'  '
IOPCB    DC    F'0'
SAVEDCB  DC    F'0'
GU       DC    CL4'GU'             GET UNIQUE FUNCTION - GET MSG/RECORD
ISRT     DC    CL4'ISRT'           INSERT FUNCTION - OUTPUT TO TERMINAL
DLIOK    DC    CL2' '              DL/I STATUS SAYS OPERATION PERFORMED
DLIQC    DC    CL2'QC'             DL/I STATUS SAYS NO MORE TRANSACTION
LGALL    DC    CL8'BNGIOALL'       MFS MESSAGE OUTPUT DESCRIPTOR NAME
LGERR    DC    CL8'BNGIOERR'       MFS MESSAGE OUTPUT DESCRIPTOR NAME
* STORAGE AND WORK AREA DEFINITIONS
COMMAREA DS    0D
PARM1    DC    D'0'                1ST INPUT PARM - DEMF
PARM2    DC    D'0'                2ND INPUT PARM - ALL/LINE/CTRL/
*                                                    3270 AND MENU
PARM3    DC    D'0'                3RD INPUT PARM
PARM4    DC    D'0'                4TH INPUT PARM
PARM5    DC    D'0'                5TH INPUT PARM
PARM6    DC    D'0'                6TH INPUT PARM
FLDCNT   DC    P'0'                COUNT OF FLD'S IN INPUT
SVRELREC DC    CL3' '        SAVE AREA FOR LINE/CTRL RELATIVE BLOCK NO.
SAVEBBSS DS    F                   SAVE POINTER TO BLK AND SLOT
DBLWD    DC    D'0'                DOUBLEWORD WORK AREA
DUBLWD   EQU   DBLWD
FULLWD   DC    F'0'                FULLWORD WORK AREA
TWALINE  DC    D'0'          SAVE AREA FOR  IMS SYMBOLIC LINE POINTER
* THE FOLLOWING INPUT AREA IS USED FOR DEMF
* TRANSACTION MESSAGES, WITH MAPPING AS SHOWN.
         SPACE
MSGIN    DS    0D              MAP OF TRANSACTION MESSAGE SEGMENT:
TIOATDL  DS    H                   MESSAGE LENGTH INCL. LL,Z1,Z2,DATA
MSGZ1    DS    X                   FLAG FIELD - USED BY IMS INTERNALLY
MSGZ2    DS    X                   FLAG FIELD - NON-ZERO IF MFS EDITED
TIOADBA  DS    0F                  START OF MESSAGE DATA
MSGTXCD  DS    CL5                    DEMF
MSGKEYED DS    CL29                   29-BYTE KEY-IN AREA
MSGCMDCD DS    CL4                    ALL /LINE/CTRL/3270/MENU
MSGPGF   DS    C                      PAGE FORWARD
MSGID    DS    CL20                   IMS SYMBOLIC NAME FOR RQSD TERMNL
MSGPGB   DS    C                      PAGE BACKWARD
MSGBBBSS DS    CL15                   BLOCK AND SLOT INFO
MSGNTRY  DS    CL12                START OF X'ED-IN DATA
MSGEND   DS    79CL12
MSGENDC  EQU   *
         ORG   MSGPGF              MAP OF BNGIMENU OPTIONS
MSGALL   DS    C                        ALL LINES SCREEN
MSG3270  DS    C                        3270 SCREEN
MSGRMOT  DS    C                        REMOTE SENSE/STATUS INFO
MSGLOCL  DS    C                        LOCAL SENSE/STATUS INFO
MSGDPRSS DS    CL7                   DEPRESS FOR PAGE 2 OF MENU
         ORG   MSGENDC
*
*   FROM HERE UP MUST REMAIN IN THAT ORDER
*
***********************************************************************
* THE FOLLOWING AREA IS USED AS OUTPUT AREA
* FOR TRANSACTION MESSAGES, WITH MAPPING AS SHOWN.
MSGOUT   DS    0D              MAP OF TRANSACTION MESSAGE SEGMENT:
MSGOLL   DC    AL2(MSGLTH)         MESSAGE LENGTH INCL. LL,Z1,Z2,DATA
MSGOZ1   DC    X'00'               FLAG FIELD - USED BY IMS INTERNALLY
MSGOZ2   DC    X'00'               FLAG FIELD - NON-ZERO IF MFS EDITED
MSGODATA DS    0F                  START OF MESSAGE DATA
MSGCMD   DS    CL4
MSGPG    DS    CL32
LGBBBSS  DS    CL15
SMBBBSS  DS    CL15
MSGRECAP DS    CL39
MSGHDR1  DS    CL39
MSGHDR2  DS    CL41
MSGODAT1 DS    13CL18
MSGODAT2 DS    66CL18
MSGODAT3 DS    CL12
MSGENDLG DS    CL4
MSGENDSM DS    CL4
MSGLTH   EQU   *-MSGOUT
         LTORG
         END   BNGIDISP
