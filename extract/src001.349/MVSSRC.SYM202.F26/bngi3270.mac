         PRINT OFF
         MACRO
&NAME    BNGHJN &LABEL,&HJN
         LCLC  &HJA,&HJB
&HJA     SETC  '&SYSPARM'(1,4)
&HJB     SETC  '&SYSPARM'(5,4)
         AIF   ('&LABEL' EQ '').NOBRNCH
         B     &LABEL .                 BR AROUND CONSTANTS
         SPACE 2
.NOBRNCH ANOP
         AIF   ('&NAME' EQ '').NOLABEL
         DC    C'&NAME' .              MODULE IDENTIFIER
.NOLABEL ANOP
         DC    X'&HJA' .                DATE OF MODIFICATION
         AIF   ('&HJN' NE 'HJN').DATE
         DC    X'&HJB' .                HJN OF MODIFICATION
.DATE    ANOP
         AIF   ('&LABEL' EQ '').NOLBL
         SPACE 2
&LABEL   DS    0H
.NOLBL   ANOP
         MEND
         PRINT ON
***********************************************************************
*                                                                     *
* MODULE NAME = BNGI3270                                              *
*                                                                     *
* DESCRIPTIVE NAME =  IMS DEMF 3270 DISPLAY MODULE                    *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = RELEASE 1, LEVEL 1                                         *
*                                                                     *
* FUNCTION = 1) BNGI3270 IS LINKED TO BY BNGIDISP;                    *
*            2) HANDLES 3270 DISPLAY TERMINAL ERROR INFORMATION       *
*               REQUEST AND BITS PROMPTER REQUEST;                    *
*            2) LINKS TO BNGIREAD TO READ SYS1.DEMFLOG DATA FILE AND  *
*               COLLECTS THE REQUESTED 3270 ERROR INFORMATION FROM    *
*               IT;                                                   *
*            3) FORMS OUTPUT MESSAGE AND WRITES IT TO THE 3270 DISPLAY*
*               TERMINAL; (ERR INFO AND SOME OF DISPLAY MESSAGES)     *
*            4) RETURNS CONTROL TO BNGIDISP.                          *
*                                                                     *
* NOTES = NONE                                                        *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS :                                           *
*    --------------------                                             *
*                                                                     *
*    ALL DEMF RECORDING DISPLAY COMPONENTS USE STANDARD REGISTER      *
*    CONVENTIONS WITH THE EXCEPTION OF THE IMS DISPLAY COMPONENTS.    *
*    CERTAIN IMS MODULES USE ADDITIONAL REGISTERS AND THE LINK MACRO  *
*    FOR PASSING OR RETRIEVING DATA PARAMETER INFORMATION AND ARE     *
*    DETAILED BELOW:                                                  *
*                                                                     *
*     MODULE    REGISTER    CONTENTS.                                 *
*    --------   --------    ------------------------------------      *
*    BNGIDISP     R5        PASSES ADDRESS OF IMS PROGRAM             *
*                           COMMUNICATION BLOCK (PCB) TO              *
*                           BNGI3270, BNGIMENU, BNGILOCL, AND         *
*                           BNGIRMOT.                                 *
*                                                                     *
*                 R11       PASSES TO BNGIREAD THE ADDRESS OF A       *
*                           PARAMETER LIST CONTAINING:                *
*                                                                     *
*                          1) 4-BYTES - ADDRESS OF I/O AREA FROM      *
*                                       BNGIREAD                      *
*                                                                     *
*                          2) 3-BYTES - RELATIVE BLOCK ADDRESS TO     *
*                                       BE READ BY BNGIREAD           *
*                                                                     *
*                          3) 2-BYTES - STATUS OF READ FROM           *
*                                       BNGIREAD                      *
*                                                                     *
*                 R12      FOR BNGI3270, PASSES THE ADDRESS OF A      *
*                          COMMUNICATION AREA CONTAINING              *
*                          UP TO SIX EDITTED PARM FIELDS, SAVE        *
*                          AND WORK AREAS, AND THE INPUT MESSAGE.     *
*                                                                     *
*                          FOR BNGILOCL, BNGIRMOT, AND BNGIMENU;      *
*                          PASSES THE ADDRESS OF THE INPUT MESSAGE.   *
*                                                                     *
*    BNGIREAD    LINK TO BNGIDCBA       RETRIEVES THE ADDRESS OF THE  *
*                (ALIAS FOR BNGISIMS)   ADDRESS OF THE SYS1.DEMFLOG   *
*                                       DCB.                          *
*                                                                     *
*                 R11      RECEIVES ADDRESS OF PARAMETER LIST         *
*                          (SEE BNGIDISP R11 FOR LIST).               *
*                                                                     *
*    BNGI3270     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R11     PASSES TO BNGIREAD THE ADDRESS OF A         *
*                         PARAMETER LIST (SEE BNGIDISP R11 FOR LIST)  *
*                                                                     *
*                 R12     RECEIVES FROM BNGIDISP THE ADDRESS OF THE   *
*                         COMMUNICATION AREA (SEE BNGIDISP R12 FOR    *
*                         CONTENTS OF AREA).                          *
*                                                                     *
*    BNGIMENU     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R12     RECEIVES ADDRESS OF INPUT MESSAGE FROM      *
*                         BNGIDISP.                                   *
*                                                                     *
*    BNGILOCL     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R12     RECEIVES ADDRESS OF INPUT MESSAGE FROM      *
*                         BNGIDISP.                                   *
*                                                                     *
*    BNGIRMOT     R5      RECEIVES ADDRESS OF IMS PCB FROM BNGIDISP   *
*                                                                     *
*                 R12     RECEIVES ADDRESS OF INPUT MESSAGE FROM      *
*                         BNGIDISP.                                   *
*                                                                     *
*    PATCH LABEL = NONE                                               *
*                                                                     *
* MODULE TYPE = IMS DISPLAY                                           *
*                                                                     *
*    PROCESSOR = ASSEMBLER H                                          *
*                                                                     *
*    MODULE SIZE = 9928 DECIMAL BYTES                                 *
*                                                                     *
*    ATTRIBUTES = SERIALLY REUSABLE                                   *
*                                                                     *
* ENTRY POINT = BNGI3270                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = R1  LOADED WITH THE PARAM LIST POINTER                 *
*              R14 LOADED WITH THE RETURN ADDR (USED BY SUBROUTINE)   *
*              R15 LOADED WITH ENTRY POINT                            *
*                                                                     *
* INPUT = PARAM LIST ITEMS USED ARE : COMMAREA (LABEL)                *
*                                                                     *
* OUTPUT = PARAM LIST ITEMS USED ARE : MSG3270 & MSGBITS (LABELS)     *
*                                                                     *
* EXIT-NORMAL = REGISTER 15 RETURN CODE RETURNED TO CALLER :          *
*               00 - OPERATION PERFORMED AS REQUESTED                 *
*                                                                     *
* EXIT-ERROR  = NONE                                                  *
*                                                                     *
* EXTERNAL REFERENCE = NONE                                           *
*                                                                     *
*    ROUTINES = LOCATE ROUTINE                                        *
*               GETTIOA ROUTINE (GET TERMINAL OUTPUT AREA)            *
*               BUOBR ROUTINE (BLOW-UP OBR ROUTINE)                   *
*               BUMDR ROUTINE (BLOW-UP MDR ROUTINE)                   *
*                                                                     *
*    DATA AREAS = NONE                                                *
*                                                                     *
*    CONTROL BLOCK = NONE                                             *
*                                                                     *
* TABLES = CALENDAR - CONVERT JULIAN DATE TO GREGORIAN DATE TABLE     *
*          LEAPTBL  - LEAP YEAR CALCULATION TABLE                     *
*          CCWTABL  - CONVERT 270X COMMAND CODE INTO ENGLISH          *
*          CSWTABL  - CONVERT LOCAL 327X STATUS OR 270X LINE STATUS   *
*                     INTO ENGLISH                                    *
*          SENSTABL - CONVERT 270X LINE SENSE CODE INTO ENGLISH       *
*          STATSTBL - CONVERT REMOTE 327X STATUS CODE INTO ENGLISH    *
*          SENS3272 - CONVERT LOCAL 327X SENSE CODE INTO ENGLISH      *
*          CCW3272  - CONVERT LOCAL 327X COMMAND CODE INTO ENGLISH    *
*          TPOPTBL  - CONVERT BTAM TP OP CODE INTO ENGLISH            *
*          IMSPTOP  - CONVERT TCAM TP OP CODE INTO ENGLISH            *
*          HXTOEB   - HEX CHARS TO EBCDIC CHARS TABLE                 *
*          EBTOHX   - EBCDIC CHARS TO HEX CHARS TABLE                 *
*                                                                     *
* MACROS = LINK, SAVE, RETURN, OPEN, READ, CHECK, CLOSE               *
*                                                                     *
***********************CHANGE ACTIVITY FOLLOWS:************************
* CHANGE 01  11/15/77  PROLOGUE ADDED                                 *
* CHANGE 02  03/23/78  BNGHJN MACRO ADDED                             *
*A109600,142000,353200,387200                                  @OZ31886
*D113600                                                       @OZ31886
*                                                                     *
***********************************************************************
***********************************************************************
BNGI3270 TITLE 'DISPLAY 3270 MDR AND OBR ENTRIES'
***********************************************************************
         SPACE
PCB      DSECT                 MAP OF IMS PROGRAM COMMUNICATION BLOCK
         USING *,PCBREG          ADDRESS PASSED IN REGISTER 5 BY DISP
PCBTERMN DS    CL8                 REQUESTING TERMINAL SYMBOLIC NAME
         DS    CL2                 RESERVED
PCBSTAT  DS    CL2                 DL/I STATUS CODE
PCBDATE  DS    PL4                 TRANSACTION DATE STAMP 00YYDDDF
PCBTIME  DS    PL4                 TRANSACTION TIME STAMP HHMMSSTH
PCBSEQ   DS    F                   TRANSACTION SEQUENCE NUMBER
PCBMODNM DS    CL8                 MFS MESSAGE OUTPUT DESCRIPTOR NAME
***********************************************************************
COMMAREA DSECT       MAP OF COMMUNICATION AREA PASSED TO THIS PGM
         USING *,COMMREG      IN REGISTER 12 BY DISP
PARM1    DS    D                   1ST INPUT PARM - DEMF
PARM2    DS    D                   2ND INPUT PARM - 3270
PARM3    DS    D                   3RD INPUT PARM - LLL OR TTT
PARM4    DS    D                   4TH INPUT PARM - CC
PARM5    DS    D                   5TH INPUT PARM - TT
PARM6    DS    D                   6TH INPUT PARM - TT
FLDCNT   DS    PL1                 COUNT OF FLD'S KEYED-IN IN INPUT
SVRELREC DS    CL3           SAVE AREA FOR LINE/CTRL RELATIVE BLOCK NO.
SAVEBBSS DS    F                   SAVE POINTER TO BLK AND SLOT
DBLWD    DS    D                   DOUBLEWORD WORK AREA
DUBLWD   EQU   DBLWD
FULLWD   DS    F                   FULLWORD WORK AREA
TWATCTID DS    D             SAVE AREA FOR IMS SYMBOLIC LINE POINTER
* THE FOLLOWING AREAS ARE USED AS INPUT AREA FOR
* TRANSACTION MESSAGES, WITH MAPPING AS SHOWN.
         SPACE
MSGIN    DS    0D              MAP OF TRANSACTION MESSAGE SEGMENT:
TIOATDL  DS    H                   MESSAGE LENGTH INCL. LL,Z1,Z2,DATA
MSGZ1    DS    X                   FLAG FIELD - USED BY IMS INTERNALLY
MSGZ2    DS    X                   FLAG FIELD - NON-ZERO IF MFS EDITED
TIOADBA  DS    0F                  START OF MESSAGE DATA
MSGTXCD  DS    CL5
MSGKEYED DS    CL29
MSGCMDCD DS    CL4
MSGPGF   DS    C
MSGID    DS    CL20
MSGPGB   DS    C
MSGBBBSS DS    CL15
MSGNTRY  DS    CL9
MSGEND   DS    39CL9
********************************************************************
         SPACE
DATASLOT DSECT                 MAP OF MDR AND OBR ENTRIES IN DETL BLK
         USING *,DATAREG
DATALTH  DS    C                   LTH OF THIS SLOT
LINEID   DS    CL6                 LINE AND LIB ADDR
ENTRYTYP DS    C                   ENTRY TYPE - MDR OR OBR
         DS    CL3
MDRTYPE  DS    C                   TYPE HDWE - 03 EQUALS 3270
         DS    CL3
DATE     DS    CL4                 DATE OF ERROR - 00YYDDDF
TIME     DS    CL4                 TIME OF ERROR - HHMMSSHH
         DS    CL8
MDRCUA   DS    CL2                 MDR CHAN & UNIT ADDR
MDRCTRL  DS    C                   MDR CTRL UNIT POLL ADDR
MDRTERM  DS    C                   MDR TERMIL POLL ADDR
MDRSTATS DS    CL2                 REMOTE 3270 STATUS
         DS    CL2
OBRCCW   DS    CL8                 LAST CCW EXECUTED
OBRCSW   DS    CL8                 CHANNEL STATUS WORD
         DS    CL6
OBRUCB   DS    C
         DS    CL3
OBRCUA   DS    CL2                 OBR CHAN & UNIT ADDR
OBRCTRL  DS    C                   REMOTE LINE ERRORS UNDER CTRLUNIT
OBRTERM  DS    C                   REMOTE LINE ERRORS UNDER TERMINAL
         DS    CL12
OBRSENSE DS    CL2                 OBR SENSE BYTES
         SPACE
         ORG   DATALTH         MAP OF 16-BYTE SLOT IN CONTROL BLOCK
CTRLPORT DS    CL6                 PORT & LIB ADDRESS
         DS    CL4                 BLOCKS AND HITS
CTRLFRST DS    CL3                 REL BLK ADDR 1ST BLK IN CHAIN.
         DS    CL3                 REL BLK ADDR LAST BLK IN CHAIN
SLOTLTH  EQU   *-CTRLPORT
FIOADBA  DSECT                 MAP OF 32-BYTE HEADER IN CONTROL BLOCK
         USING *,FIOABAR
CTRLLAST DS    F                   LAST USED ADDR IN DATASET
CTRLTOTL DS    F                   TOTAL BLOCKS IN DATASET
CTRLBACK DS    F                &  BACKWARD PTR IN CTRL BLK CHAIN
CTRLFWD  DS    F                   FORWARD PTR IN CTRL BLK CHAIN
CTRLENTS DS    C                   NBR ENTRIES IN THIS CTRL BLK
         DS    CL15                FOR FUTURE USE
CTRLSLT1 DS    0C                  START OF CTRL SLOT NBR ONE.
         SPACE
         ORG   FIOADBA         MAP OF 32-BYTE HEADER IN DETAIL BLOCK
DATAPORT DS    CL6                 PORT & LIB ADDR
DATATIME DS    CL4                 TIME BLOCK CREATED
DATADATE DS    CL4                 DATE BLOCK CREATED
DATAFWD  DS    CL3                 FORWARD CHAIN ADDR
DATABACK DS    CL3                 BACKWAD CHAIN ADDR
BLKLTH   DS    CL2                 NBR BYTES USED IN THIS BLOCK
         DS    CL10
DATASLT1 DS    0C                  START OF 1ST DATA SLOT
***********************************************************************
BNGI3270 CSECT
***********************************************************************
R1       EQU   1
BASE1    EQU   2                   1ST PROGRAM BASE REG.
BASE2    EQU   3                   2ND PROGRAM BASE REG.
BASE3    EQU   4                   3RD PROGRAM BASE REG.
PCBREG   EQU   5                PTR TO TP-PCB PASSED HERE
FIOABAR  EQU   6                   FIOA POINTER.
DATAREG  EQU   7                   POINTER TO DATA IN EMF FILE BLOCK.
DATALOOP EQU   8                   LOOP REG FOR PROCESSING WITH DATAREG
OUTREG   EQU   9                   POINTER TO VARIABLE AREA IN TIOA.
OUTLOOP  EQU   10                  LOOP REG FOR PROCESSING WITH OUTREG.
LINKREG  EQU   11                  LINKAGE TO COMMON SUBROUTINES.
COMMREG  EQU   12               PTR TO COMMUNICATIONS AREA PASSED HERE
R13      EQU   13
***********************************************************************
* THIS SECTION DOES PROGRAM INITIALIZATION
***********************************************************************
         SAVE  (14,12)             SAVE CALLER'S REGISTERS
         BALR  BASE1,0
         USING *,BASE1,BASE2,BASE3
BNGI3270 BNGHJN SKIPID                                         @OZ31886
         LA    BASE2,2048(BASE1)    SET SECOND BASE
         LA    BASE2,2048(BASE2)       FROM THE FIRST
         LA    BASE3,2048(BASE2)    SET THIRD BASE
         LA    BASE3,2048(BASE3)       FROM THE SECOND
         LA    14,SAVE             POINT TO OUR SAVE AREA
         ST    14,8(13)            FORWARD CHAIN FROM OLD
         ST    13,4(14)            BACKWARD CHAIN TO OLD
         LR    13,14               FIRST BASE AND S/A FOR OUR REGS
         B     A001
SAVE     DS    18F                 SAVE AREA
*******
***********************************************************************
* THIS SECTION  RETURNS TO BNGIDISP  *
         EJECT
***********************************************************************
* THIS IS A COMMON READ SUBROUTINE FOR THIS PROGRAM.
***********************************************************************
READ     ST    11,SAVE11
         LA    11,PARMADDR         SET UP PARM REG
         L     15,=V(BNGIREAD)    POINT TO READ MODULE
         BALR  14,15              LINK TO BDAM READ MODULE
         L     11,SAVE11
         OC    STATUS,STATUS      READ OK?
         BZ    0(LINKREG)         YES. RETURN TO CALLER
         CLC   STATUS,=C'FF'       WAS EMFILE OPENED?
         BE    Z60                 NO.  WRITE 'NOT OPEN' MSG
         UNPK  DBLWD,STATUS(3)
         MVC   IOERCODE,DBLWD+3
         TR    IOERCODE,HXTOEB     MOVE BDAM RETURN CODE TO I/O ERR MSG
         UNPK  DBLWD,RELREC(4)
         MVC   IOERBLK,DBLWD+4     MOVE BLK NBR THAT WAS BEING READ
         TR    IOERBLK,HXTOEB
         B     Z20                     IF REQUESTED SLOT CAN'T
*                                        BE FOUND, SEND 'SEARCHING ERR'
SAVE11   DS    F
***********************************************************************
***********************************************************************
A001     CP    FLDCNT,=P'0'        WAS DATA KEYED-IN?
         BE    J010                NO. GO EXAMINE INPUT FURTHER.
A010     XC    RELREC,RELREC       YES. THIS IS A NEW RECAP REQUEST.
         OC    PARM3,PARM3         WAS LINE ID INPUT?
         BZ    Z40                 NO. SEND 'INVALID INPUT' MSG.
B140     MVC   DUBLWD+5(3),PARM3
         TR    DUBLWD,EBTOHX            GET LINE,
         PACK  DUBLWD(3),DUBLWD+5(4)    CONTROL UNIT,
         MVC   HEXLINE,DUBLWD           AND
         MVC   DUBLWD+5(3),PARM4        TERMINAL
         TR    DUBLWD,EBTOHX            ADDRESS
         PACK  DUBLWD(2),DUBLWD+5(3)    INTO HEX
         MVC   HEXCTRL,DUBLWD           FORMAT
         MVC   DUBLWD+5(3),PARM5        FOR COMPARING
         TR    DUBLWD,EBTOHX            TO DATA IN
         PACK  DUBLWD(2),DUBLWD+5(3)    DISK FILE.
         MVC   HEXTERM,DUBLWD
         MVC   LGBBBSS,=C'BBBSSBBBSSBBBSS'   INITIALIZE PAGING BBBSS'S
         MVC   SMBBBSS,=C'BBBSSBBBSSBBBSS'   INITIALIZE PAGING BBBSS'S
         BAL   LINKREG,GETTIOA     SETUP NEW OUTPUT AREA WITH HDRS.
D080     BAL   LINKREG,READ
D190     L     FIOABAR,IOAREA      POINT TO FILE I/O AREA.
         SR    DATALOOP,DATALOOP   SETUP TO LOOP ON NBR OF
         IC    DATALOOP,CTRLENTS   ENTRIES IN THIS CNTRL BLK.
         LTR   DATALOOP,DATALOOP   VERIFY THAT THE DATA SET
         BZ    Z50                 IS NOT EMPTY. IF SO, WRT NO ERRS MSG
E030     LA    DATAREG,CTRLSLT1    POINT TO FIRST CTRL SLOT.
E040     OC    PARM4,PARM4         WAS A CTRL UNIT ADDR INPUT?
         BNZ   E110                YES. LINE ID IS CORRECT.
         XC    DUBLWD,DUBLWD       NO. THIS MUST BE RQST FOR LOCAL.
         MVC   DUBLWD(3),HXLINLIB  ROUND CUA ADDR DOWN
         NI    DUBLWD+2,B'11100000'     TO EVEN CHAN ADDR.
         CLC   DUBLWD(6),CTRLPORT       LOOK FOR EQUAL LINE ADDRESS.
         B     E120             &
E110     CLC   HXLINLIB,CTRLPORT   IS THIS SLOT = RQSTD LINE ADDR?
E120     BE    E200                YES. GO READ ITS DATA BLOCK.
         LA    DATAREG,SLOTLTH(DATAREG)  NO. BUMP TO NEXT CTRL SLOT.
         BCT   DATALOOP,E040            MORE SLOTS TO LOOK AT?
         OC    CTRLBACK,CTRLBACK        NO. IS THERE ANOTHER CTRL BLK?
         BZ    Z50                           NO. SEND 'NO ERRS' MSG.
         MVC   RELREC,CTRLBACK+1        YES. SAVE NEXT BLOCK ADDR.
         B     D080
E200     MVC   RELREC,CTRLFRST     MOVE DATA BLOCK ADDR.
         OC    RELREC,RELREC       IS THERE ANY DATA BLOCKS ?  @OZ31886
         BZ    T190                NO, WRITE 'NO DATA BLKS MSG'@OZ31886
F020     DS    0H
         BAL   LINKREG,READ
F050     L     FIOABAR,IOAREA      POINT TO DATA BLOCK.
         XC    TWASLOT,TWASLOT     INITIALIZE SLOT COUNT TO 1.
         LH    DATALOOP,BLKLTH     SETUP TO LOOP ON NBR BYTES IN REC.
         LA    DATAREG,DATASLT1    POINT TO FIRST DATA ITEM.
F080     SR    14,14
         IC    14,TWASLOT          PUT SLOT COUNT IN REG 14
         LA    14,1(14)            ADD 1 TO SLOT COUNT
         STC   14,TWASLOT          STORE BACK
F090     CLI   ENTRYTYP,X'91'      IS THIS ENTRY AN MDR RECORD?
         BNE   H060                NO. TEST FURTHER.
         CLI   MDRTYPE,X'03'       YES. IS IT A 3270?
         BE    G060                YES. TEST FURTHER.
F120     SR    1,1                 NO. BUMP
         IC    1,0(DATAREG)        TO NEXT DATA ITEM.
         LTR   1,1                 PREVENT ENDLESS LOOP
         BZ    F240                IN CASE GARBAGE IN RECORD.
         AR    DATAREG,1
         SR    DATALOOP,1          ALL DONE WITH THIS BLOCK?
         LTR   DATALOOP,DATALOOP
         BP    F080                NO. PROCESS NEXT ITEM.
         OC    DATAFWD,DATAFWD     YES. IS THERE ANOTHER BLOCK?
         BZ    F240                NO. GO WIND UP OUTPUT.
         MVC   RELREC,DATAFWD      YES. GET CHAIN ADDR AND
         B     F020                GO READ NEXT BLOCK.
***********************************************************************
*    PREPARE TO WRITE SCREEN AND RETURN                   *************
***********************************************************************
F240     CLI   OUTSWCH,X'FF'       WAS ANY OUTPUT CREATED?
         BNE   Z50                 NO. SEND 'NO ERRS' MSG.
G020     CALL  ASMTDLI,(ISRT,(PCBREG),MSG3270,S3270),VL
CHECKST  CLC   PCBSTAT,DLIOK       DID ISRT GO OK?
         BNE   ABEND1              IF NOT, ABEND, ELSE RETURN TO CALLER
         L     R13,4(R13)          RESTORE INCOMING SAVE AREA ADDRESS
         RETURN (14,12)            RELINQUISH CONTROL
ABEND1   ABEND 666,DUMP
***********************************************************************
G060     CLC   MDRCTRL,HEXCTRL     IS THIS MDR FOR RQSTED CTRL UNIT?
         BNE   F120                NO. SKIP IT.
         CLC   MDRTERM,HEXTERM     YES. IS IT FOR REQUESTED TERML?
         BNE   F120                NO. SKIP IT.
         MVC   0(MDRLTH,OUTREG),MDRHDR   YES. SETUP BUILD 1 MDR LINE.
         UNPK  DUBLWD,MDRSTATS(3)
         TR    DUBLWD,HXTOEB       FILL IN REMOTE STATUS BYTES.
         MVC   (MDRSTAT-MDRHDR)(4,OUTREG),DUBLWD+3
G100     UNPK  DUBLWD,RELREC(4)
         TR    DUBLWD,HXTOEB       FILL IN THIS BLK NBR.
         MVC   (MDRBBBSS-MDRHDR)(3,OUTREG),DUBLWD+4
         UNPK  DUBLWD,TWASLOT(2)
         TR    DUBLWD,HXTOEB       FILL IN THIS SLOT NBR.
         MVC   (MDRBBBSS+3-MDRHDR)(2,OUTREG),DUBLWD+5
         LA    14,LGBBBSS       POINT TO OUTPUT PAGING BBBSS FIELDS.
         CLC   0(5,14),=C'BBBSS' IS 'FIRST' FILLED IN?
         BNE   G200             YES. SKIP IT.
         MVC   0(5,14),(MDRBBBSS-MDRHDR)(OUTREG) NO. DO IT.
         CLC   10(5,14),=C'BBBSS' HOW ABOUT 'PREV'?
         BNE   G200             ALREADY THERE; SKIP IT.
         MVC   10(5,14),0(14)  NO. USE 'FIRST'
G200     MVC   5(5,14),(MDRBBBSS-MDRHDR)(OUTREG)  FILL IN 'LAST' BBBSS
         CLI   QUITSW,X'FF'       IS 3277-1 SCREEN FULL?
         BE    G220               YES.
         MVC   SMBBBSS,LGBBBSS    NO. SO DO SAME FOR 3277-1 PAGE BBBSS
G220     UNPK  DUBLWD,TIME
         MVC   (MDRHRS-MDRHDR)(2,OUTREG),DUBLWD+1   FILL IN HOURS
         MVC   (MDRMINS-MDRHDR)(2,OUTREG),DUBLWD+3     AND MINUTES.
G230     MVI   OUTSWCH,X'FF'       INDICATE SOME OUTPUT WAS CREATED.
         CP    DATE,PCBDATE        DID THIS ERROR HAPPEN TODAY?
         BE    G240                YES,BR HIGH INTENSITY
         MVC   DATDATE,PCBDATE     MOVE PCB DATE TO WORK AREA
         SP    DATDATE,=P'1'       MAKE DATE YESTERDAY
         CP    DATE,DATDATE        DID IT HAPPEN YESTERDAY
         BNE   G230A               NO,BR LEAVE INTENSITY NORMAL
         CLC   TIME,PCBTIME        IS IT OLDER THAN 24 HRS?
         BNL   G240                NO,BR MAKE IT HIGH INTENSITY
G230A    LA    R1,LEAPTBL
G231     CLC   DATE+1(1),0(1)      SEE IF
         BE    G232                ERROR HAPPENED
         LA    R1,1(R1)            IN LEAP YEAR
         CLI   0(R1),X'FF'         IS IT END OF TABLE
         BNE   G231                NO,BR TRY NEXT YEAR
         ZAP   CALENDAR+8(2),=P'28' NOT LEAP YEAR
         B     G233                CONTINUE
G232     ZAP   CALENDAR+8(2),=P'29' YES,LEAP YEAR
G233     LA    15,CALENDAR
G234     MVN   DATE+3(1),=X'0C'    MAKE SURE SIGN IS CORRECT
         CLC   DATE+2(2),3(15)    COMPUTE MONTH
         BNH   G235                AND DAY FROM
         SP    DATE+2(2),3(2,15)  DAY NUMBER
         LA    15,5(15)
         B     G234
G235     MVC   (MDRHRS-MDRHDR)(3,OUTREG),0(15)  MOVE MONTH AND
         UNPK  (MDRMINS-MDRHDR)(2,OUTREG),DATE+2(2)   DAY TO OUTPUT
         OI    (MDRMINS+1-MDRHDR)(OUTREG),X'F0'
         B     H030
G240     MVC   0(2,OUTREG),PHN     YES. MAKE IT HIGH INTENSITY.
         MVC   3(2,OUTREG),UHA       YES. MAKE IT HIGH INTENSITY.
         MVC   14(2,OUTREG),PHN        YES. MAKE IT HIGH INTENSITY.
H030     LA    OUTREG,MDRLTH(OUTREG)    BUMP TO NEXT OUTPUT SLOT.
         BCT   OUTLOOP,F120        MORE TIOA ROOM LEFT?
         CLI   QUITSW,X'FF'        OUTPUT AREA FILLED FOR 3277-2?
         BE    G020                YES. GO WIND UP OUTPUT
         MVI   QUITSW,X'FF'        NO. TURN ON OUTPUTING-FOR-3277-2 SW.
         LA    OUTLOOP,33          SET UP OUTPUT COUNTER
         LA    14,SMBBBSS          FILL IN 'LAST' BLK & SLOT ADDR
         UNPK  DUBLWD,RELREC(4)       FOR 3277-1
         TR    DUBLWD,HXTOEB
         MVC   5(3,14),DUBLWD+4
         UNPK  DUBLWD,TWASLOT(2)
         TR    DUBLWD,HXTOEB
         MVC   8(2,14),DUBLWD+5
         B     F120                GO PROCESS MORE SLOTS.
***********************************************************************
H060     CLI   ENTRYTYP,X'91'      IS THIS ENTRY AN OBR?
         BE    F120                NO. SKIP IT.
         CLI   OBRUCB,X'40'        IS THIS A REMOTE OBR ?
         BNE   H080                NO. BYPASS CHECKING POLL CHARS
         CLC   OBRCTRL,HEXCTRL     IS IT THE REQUESTED CTRL UNIT ?
         BNE   F120                NO. SKIP IT.
         CLC   OBRTERM,HEXTERM     IS IT THE REQUESTED TERMINAL ?
         BNE   F120                NO. SKIP IT.
H080     CLC   OBRCUA,HEXLINE      YES. IS IT THE REQUESTED CUA ADDR?
         BNE   F120                NO. SKIP IT.
         MVC   0(MDRLTH,OUTREG),MDRHDR  YES. SETUP COMMON MDR/OBR HDR.
         UNPK  DUBLWD,OBRCSW+4(3)
         TR    DUBLWD,HXTOEB       FILL IN CSW BYTES
         MVC   (OBRSNS-MDRHDR)(4,OUTREG),DUBLWD+3
         UNPK  DUBLWD,OBRSENSE(3)
         TR    DUBLWD,HXTOEB       FILL IN SENSE BYTES.
         MVC   (MDRSTAT-MDRHDR)(4,OUTREG),DUBLWD+3
         NI    OBRCCW+5,X'3F'      CLEAN UP TP OP CODE.
         UNPK  DUBLWD,OBRCCW+5(2)
         TR    DUBLWD,HXTOEB       FILL IN TP OP CODE.
         MVC   (OBRTPOP+1-MDRHDR)(2,OUTREG),DUBLWD+5
         MVI   (OBRTPOP-1-MDRHDR)(OUTREG),C'B'
         CLI   ENTRYTYP,X'34'      IS THIS A TCAM OBR?
         BNE   J005                NO. LEAVE 'B' IN FOR BTAM
         MVI   (OBRTPOP-1-MDRHDR)(OUTREG),C'T'    T=TCAM
J005     UNPK  DUBLWD,OBRCCW(2)
         TR    DUBLWD,HXTOEB       FILL IN CHANL COMMAND.
         MVC   (OBRCMD-MDRHDR)(2,OUTREG),DUBLWD+5
         B     G100                GO FILL IN DATA COMMON TO MDR/OBR.
***********************************************************************
*     THIS SECTION DOES PAGING                         ****************
***********************************************************************
J010     CLC   MSGNTRY(4),=C'BITS'   IS THIS A RETURN FROM BITS
*                                       PROMPTER SCREEN.
         BE    J140                  YES.
J050     CLC   PARM4(4),=C'PAGE'   IS THIS A 'PAGE' REQUEST?
         BNE   L160                NO. MUST BE 'BLOWUP' REQUEST.
         CLC   PARM5(7),=C'FORWARD'      IS IT PAGE FORWARD?
         BNE   J190                NO. MUST BE PAGE BACKWARD.
***********************************************************************
*      PAGE FORWARD SECTION                       *********************
***********************************************************************
J080     MVC   LGBBBSS(5),MSGBBBSS+5    PROMOTE LAST & FIRST FROM OLD
         MVC   LGBBBSS+10(5),MSGBBBSS        TO NEW FIRST & PREVIOUS.
         MVC   SMBBBSS,LGBBBSS       DO THE SAME FOR SMALL BBBSS'S
         TR    MSGBBBSS+5(5),EBTOHX     GET OLD 'LAST' BLK
         PACK  DUBLWD,MSGBBBSS+5(6)                 AND SLOT IN HEX.
J110     MVC   RELREC,DUBLWD+3     SETUP TO READ APPROPRIATE BLK.
         MVC   TWASLOT(1),DUBLWD+6  SETUP TO LOCATE APPROPRIATE SLOT.
         B     K010       GO READ BLK WHERE DISPLAY WILL RESUME.
***********************************************************************
*      RECREATE PREVIOUS SCREEN FROM BITS PROMPTER      ***************
***********************************************************************
J140     MVC   LGBBBSS(5),MSGBBBSS    RESTORE OLD 'FIRST' AND
         MVC   LGBBBSS+10(5),MSGBBBSS+10       PREVIOUS.
         MVC   SMBBBSS,LGBBBSS       DO THE SAME FOR SMALL BBBSS'S
         TR    MSGBBBSS(5),EBTOHX      GET OLD 'FIRST' ADDRESS
         PACK  DUBLWD,MSGBBBSS(6)           AND SLOT IN HEX.
         B     J110
***********************************************************************
*      PAGE BACKWARD SECTION                      *********************
***********************************************************************
J190     MVC   LGBBBSS(5),MSGBBBSS+10  OLD 'PREVIOUS' NOW BECOMES NEW
         MVC   LGBBBSS+10(5),LGBBBSS       'FIRST' AND 'PREVIOUS'
         MVC   SMBBBSS,LGBBBSS       DO THE SAME FOR SMALL BBBSS'S
         TR    MSGBBBSS+10(5),EBTOHX    GET OLD 'PREVIOUS'
         PACK  DUBLWD,MSGBBBSS+10(6)             IN HEX.
         B     J110
***********************************************************************
*      LOCATE SLOT FOR PAGING                     *********************
***********************************************************************
K010     BAL   LINKREG,LOCATE      LOCATE SLOT TO RESUME AT.
         XC    PARM4(16),PARM4     ZERO OUT INPUT PARMS.
         CLI   ENTRYTYP,X'91'     IS THIS AN MDR?
         BE    K020               YES. LINE ADDR IS OK.
         XC    HXLINLIB,HXLINLIB  NO. DON'T USE ROUNDED DOWN ADDR.
         MVC   HXLINLIB+1(2),OBRCUA  GET ACTUAL CUA INSTEAD.
         B     K030
K020     MVC   HXLINLIB,LINEID
K030     UNPK  DUBLWD,HEXLINE(3)   RESTORE LINE NBR FROM DATA
         TR    DUBLWD,HXTOEB       BLOCK AS IF IT HAD BEEN KEYED IN.
         MVC   PARM3(3),DUBLWD+4
         CLI   ENTRYTYP,X'91'      IS THIS AN MDR RECORD?
         BNE   L110                NO. SKIP POLLING CHARS.
         MVC   HEXCTRL,MDRCTRL     YES.
         MVC   HEXTERM,MDRTERM     RESTORE CTRL UNIT ADDR
         UNPK  DUBLWD,HEXCTRL(3)   AND TERMINAL ADDR
         TR    DUBLWD,HXTOEB       AS IF THEY HAD
         MVC   PARM4(2),DUBLWD+3   BEEN KEYED IN.
         MVC   PARM5(2),DUBLWD+5
         B     L130
L110     CLI   OBRUCB,X'40'        IS THIS A REMOTE OBR ?
         BNE   L130                NO. SKIP POLL CHARS
         MVC   HEXCTRL,OBRCTRL     YES.
         MVC   HEXTERM,OBRTERM     RESTORE CTRL UNIT ADDR
         UNPK  DUBLWD,HEXCTRL(3)   AND TERMINAL ADDR
         TR    DUBLWD,HXTOEB       AS IF THEY HAD
         MVC   PARM4(2),DUBLWD+3   BEEN KEYED IN.
         MVC   PARM5(2),DUBLWD+5
L130     BAL   LINKREG,GETTIOA     SETUP OUTPUT AREA WITH HEADERS.
         B     F090                   GO BUILD ANOTHER PAGE.
***********************************************************************
*     BITS PROMPTER OR COMPANION REQUEST?     *************************
***********************************************************************
L160     CLC   PARM2(4),=C'TERM'   IS THIS A 'COMPANION' INPUT?
         BE    L200                YES. GO HUNT FOR CTRL & LINE ADDR.
*
*     BITS PROMPTER  REQUEST      *************************
*
         OC    MSGNTRY+4(5),MSGNTRY+4    WAS ANY ERRORS SELECTED?
         BZ    J080                       NO. DO A PAGE FORWARD.
         TR    MSGNTRY+4(5),EBTOHX     YES. GET REQUESTED ITEM ADDR.
         PACK  DUBLWD,MSGNTRY+4(6)            AND SLOT NUMBER.
         MVC   RELREC,DUBLWD+3                INTO HEX.
         MVC   TWASLOT(1),DUBLWD+6
         BAL   LINKREG,LOCATE      LOCATE APPROPRIATE SLOT IN DATA BLK.
         B     M010
***********************************************************************
*      PREPARE TO DO 3270 SCREEN FROM COMPANION 'CTRL' DISPLAY    *****
***********************************************************************
L200     TR    MSGBBBSS,EBTOHX  MSGBBBSS IS BBBSS OF CTRL UNIT DISPLAY.
         PACK  DUBLWD,MSGBBBSS(6)  GET ITS BLK & SLT IN HEX.
         MVC   RELREC,DUBLWD+3
         MVC   TWASLOT(1),DUBLWD+6
         BAL   LINKREG,LOCATE      LOCATE BLK & SLOT OF PREVIOUS DISPLY
         XC    PARM3,PARM3         ERASE BBBSS GARBAGE.
         UNPK  PARM3(4),DATAPORT+1(3)   MOVE LINE ADDR FROM RECORD.
         MVI   PARM3+3,X'00'
         TR    PARM3,HXTOEB        MAKE IT LOOK LIKE IT WAS KEYED IN.
         XC    PARM4,PARM4         INDICATE A LOCAL TERMINAL IF OBR.
         CLI   ENTRYTYP,X'91'      IS THIS AN MDR?
         BNE   L280                NO. SKIP POLLING CHARACTERS.
         UNPK  PARM4(3),MDRCTRL(2)  GET CTRL UNIT POLL CHAR.
         MVI   PARM4+2,X'00'
         TR    PARM4,HXTOEB        MAKE IT LOOK LIKE IT WAS KEYED IN.
         XC    PARM5,PARM5         ZERO-OUT PARM5
         MVC   PARM5(2),MSGNTRY+4  MAKE PARM5 LIKE IT WAS KEYED IN
         B     A010
L280     CLI   OBRUCB,X'40'        IS THIS A REMOTE OBR ?
         BE    L290                YES.
         MVC   PARM3,MSGNTRY+4     UNROUND TERML ADDRESS-A LOCAL TERM
         B     A010
L290     UNPK  PARM4(3),OBRCTRL(2) GET CTRL UNIT POLL CHAR.
         MVI   PARM4+2,X'00'
         TR    PARM4,HXTOEB        MAKE IT LOOK LIKE IT WAS KEYED IN.
         XC    PARM5,PARM5         ZERO-OUT PARM5
         MVC   PARM5(2),MSGNTRY+4  MAKE PARM5 LIKE IT WAS KEYED IN
         B     A010
***********************************************************************
*      PREPARE 'TIME AND DATE' FOR BITS PROMPTER SCREEN       *********
***********************************************************************
M010     MVI   MSGBDATA,C' '
         MVC   MSGBDATA+1(219),MSGBDATA   CLEAR OUTPUT AREA 320 BYTES
         MVC   MSGBDATA+220(100),MSGBDATA   FINISH CLEARING OUTPUT
         MVC   BITBBBSS,MSGBBBSS          MOVE BBBSS TO BITS PROMPTER
         MVC   MSGBID,MSGID               MOVE MSGID TO BITS PROMPTER
         XC    PARM3(24),PARM3            CLEAR PARMS FOR HDWR ADDR
         UNPK  PARM3(4),DATAPORT+1(3)     MOVE LINE ADDR
         MVI   PARM3+3,X'00'
         TR    PARM3,HXTOEB               MAKE IT READY FOR OUTPUT
         CLI    ENTRYTYP,X'91'             IS THIS AN MDR?
         BNE    M020                       NO. SKIP POLLING CHARS
         UNPK   PARM4(3),MDRCTRL(2)         GET CTRL UNIT POLL CHAR
         MVI    PARM4+2,X'00'
         TR     PARM4,HXTOEB               MAKE IT READY FOR OUTPUT
         UNPK   PARM5(3),MDRTERM(2)        GET TERMINAL POLL CHAR
         MVI    PARM5+2,X'00'
         TR     PARM5,HXTOEB          MAKE IT READY FOT OUTPUT
         B      M050
M020     CLI    OBRUCB,X'40'          IS THIS A REMOTE OBR ?
         BNE    M030                  NO. SKIP POLL CHARS
         UNPK   PARM4(3),OBRCTRL(2)         GET CTRL UNIT POLL CHAR
         MVI    PARM4+2,X'00'
         TR     PARM4,HXTOEB               MAKE IT READY FOR OUTPUT
         UNPK   PARM5(3),OBRTERM(2)        GET TERMINAL POLL CHAR
         MVI    PARM5+2,X'00'
         TR     PARM5,HXTOEB          MAKE IT READY FOT OUTPUT
         B      M050
M030     UNPK   PARM3(4),OBRCUA(3)   GET UNROUNDED LOCAL TERM ADDR
         MVI    PARM3+3,X'00'
         TR     PARM3,HXTOEB          MAKE IT READY FOR OUTPUT
M050     LA     OUTREG,MSBRECAP       POINT TO BITS RECAP HDR
         MVC    0(HDR4LTH,OUTREG),HDR4     MOVE RECAP HDR TO OUTPUT
         OC     PARM5,PARM5           TEST TERMINAL ADDR INPUT?
         BZ     M055
         MVC    (HDR4TERM-HDR4)(2,OUTREG),PARM5    FILL IN TERML ADDR
         MVC    (HDR4CTRL-HDR4)(2,OUTREG),PARM4    FILL IN CTRL ADDR
M055     MVC    (HDR4LINE-HDR4)(3,OUTREG),PARM3    FILL IN LINE ADDR
         CLC    (HDR4TERM-HDR4)(2,OUTREG),=C'  '   IS TERML BLANK?
         BNE    M060                   NO.  LET IT GO.
         MVC    6(6,OUTREG),=C'LOCAL '    YES.  CHANGE TO
         MVC   12(3,OUTREG),PARM3          LOCAL FORMAT.
         MVC   15(24,OUTREG),=24C' '
M060     LA    OUTREG,MSGBDATA          POINT TO  OUTAREA.
         UNPK  DUBLWD,TIME         MOVE TIME OF
         MVC   0(2,OUTREG),DUBLWD+1     ERROR TO OUTPUT.
         MVI   2(OUTREG),C':'
         MVC   3(2,OUTREG),DUBLWD+3
         LA    1,LEAPTBL
M090     CLC   DATE+1(1),0(1)           FIGURE OUT IF
         BE    M100                     ERROR HAPPENED
         LA    1,1(1)                   DURING LEAP YEAR.
         CLI   0(1),X'FF'
         BNE   M090
         ZAP   CALENDAR+8(2),=P'28'
         B     M110
M100     ZAP   CALENDAR+8(2),=P'29'
M110     LA    15,CALENDAR
M120     MVN   DATE+3(1),=X'0C'    PROTECT AGAINST GARBAGE IN PACKED
         CLC   DATE+2(2),3(15)     FIELD.  COMPUTE MONTH AND
         BNH   M130                     DAY FROM DAY NUMBER.
         SP    DATE+2(2),3(2,15)
         LA    15,5(15)
         B     M120
M130     MVC   6(3,OUTREG),0(15)        MOVE MONTH TO OUTPUT.
         UNPK  9(2,OUTREG),DATE+2(2)    MOVE DAY TO OUTPUT.
         OI    10(OUTREG),X'F0'
         MVC   LINESZ,=H'40'
         MVC   LINELOOP,=H'4'
M140     CLI   ENTRYTYP,X'91'      IS THIS ENTRY AN OBR?
         BNE   M160                YES.
         BAL   LINKREG,BUMDR       NO. BLOW UP AN MDR ENTRY.
M150     MVC   MSGBSM(220),MSGBDATA     MOVE BITS SCREEN DATA TO
         MVC   MSGBSM+220(100),MSGBDATA+220   SMALL SCREEN OUTPUT AREA
         CALL  ASMTDLI,(ISRT,(PCBREG),MSGBITS,BITSCR),VL
         B     CHECKST
***********************************************************************
*     BLOWUP OF 'OBR' ERRORS                  *************************
***********************************************************************
M160     BAL   LINKREG,BUOBR       BLOWUP AN OBR ENTRY.
         B     M150
BUOBR    MVC   13(5,OUTREG),=C'TP-OP'   MOVE THE
         UNPK  DUBLWD,OBRCCW+5(2)       TP OP CODE
         TR    DUBLWD,HXTOEB            TO OUTPUT AREA.
         MVC   19(2,OUTREG),DUBLWD+5
         LA    15,TPOPTBL
         CLI   ENTRYTYP,X'34'       IS THIS A TCAM OBR?
         BNE   O060                 NO. REG 15 POINTS AT BTAM
         L     15,=A(TCAMTPOP)      YES. POINT TO TCAM TPOP TABLE
O060     CLC   0(2,15),DUBLWD+5
         BE    O120
         CLC   0(2,15),=X'FFFF'
         BE    O120
         LA    15,20(15)
         B     O060
O120     MVC   22(18,OUTREG),2(15) MOVE EXPLANATION OF TP OP CODE.
         AH    OUTREG,LINESZ       BUMP TO NEXT LINE OF OUTPUT.
O170     MVC   0(11,OUTREG),=C'DATA LENGTH'
         UNPK  DUBLWD,OBRCCW+6(3)
         TR    DUBLWD,HXTOEB       MOVE DATA LENGTH.
         MVC   12(4,OUTREG),DUBLWD+3
         MVC   21(14,OUTREG),=C'RESIDUAL COUNT'
         UNPK  DUBLWD,OBRCSW+6(3)
         TR    DUBLWD,HXTOEB
         MVC   36(4,OUTREG),DUBLWD+3
         AH    OUTREG,LINESZ       BUMP TO NEXT OUTPUT LINE.
         MVC   0(15,OUTREG),=C'CHANNEL COMMAND'
         UNPK  DUBLWD,OBRCCW(2)
         TR    DUBLWD,HXTOEB       MOVE THE CHANNEL COMMAND.
         MVC   16(2,OUTREG),DUBLWD+5
         LA    15,CCWTABL
         CLI   OBRUCB,X'40'     IS THIS A REMOTE?
         BE    P070             YES. USE 270X COMMANDS.
         L     15,=A(CCW3272)   NO. USE THE 3272 COMMANDS.
P070     CLC   0(2,15),DUBLWD+5
         BE    P130
         CLC   0(2,15),=X'FFFF'
         BE    P130
         LA    15,20(15)
         B     P070
P130     MVC   19(18,OUTREG),2(15) MOVE CCW EXPLANATION.
         AH    OUTREG,LINESZ       BUMP TO NEXT OUTPUT LINE.
         MVC   4(5,OUTREG),=C'SENSE'    MOVE SENSE & STATUS HEADERS.
         MVC   24(6,OUTREG),=C'STATUS'
         UNPK  DUBLWD,OBRSENSE(3)  MOVE OBR SENSE                    XH
         TR    DUBLWD,HXTOEB           BYTES                         XH
         MVC   10(4,OUTREG),DUBLWD+3     TO OUTPUT AREA              XH
         UNPK  DUBLWD,OBRCSW+4(3)  MOVE OBR STATUS                   XH
         TR    DUBLWD,HXTOEB           BYTES                         XH
         MVC   31(4,OUTREG),DUBLWD+3     TO OUTPUT AREA              XH
         AH    OUTREG,LINESZ       BUMP TO NEXT OUTPUTLINE.
         LR    14,OUTREG           TEMPORARY POINTER TO SENSE OUTPUT.
         LH    1,LINELOOP          LIMIT DISPLAY IF MOD 1 SCREEN.
         LA    15,SENSTABL
         CLI   OBRUCB,X'40'     IS THIS REMOTE?
         BE    P200             YES, USE 270X SENSE
         L     15,=A(SENS3272)   NO, USE 3272 SENSE
P200     MVC   DUBLWD(1),OBRSENSE  SETUP TO TEST SENSE BITS.
         NC    DUBLWD(1),0(15)
         CLC   DUBLWD(1),0(15)
         BE    Q050
Q010     LA    15,19(15)           BUMP TO NEXT SLOT IN SENSE TABL.
         CLI   0(15),X'FF'
         BNE   P200
         B     Q080
Q050     MVC   0(18,14),1(15)      MOVE EXPLANATION OF 1 SENSE BIT.
         AH    14,LINESZ           BUMP TO NEXT SENSE OUTPUT AREA.
         BCT   1,Q010              ANY TIOA ROOM LEFT?
Q080     ST    14,SAVE14
         LR    14,OUTREG           NO. SETUP TO LOOK AT STATUS BITS.
         LH    1,LINELOOP
         LA    15,CSWTABL
Q110     MVC   DUBLWD(2),OBRCSW+4
         NC    DUBLWD(2),0(15)
         CLC   DUBLWD(2),0(15)
         BE    Q180
Q150     LA    15,20(15)
         CLI   0(15),X'FF'
         BNE   Q110
         B     Q210
Q180     MVC   20(18,14),2(15)     MOVE EXPLANATION OF 1 CSW STATUS BIT
         AH    14,LINESZ           BUMP TO NEXT OUTPUT SLOT
         BCT   1,Q150              ANY TIOA ROOM LEFT?
Q210     C     14,SAVE14           NO.
         BH    R010
         L     14,SAVE14           SET OUTPUT REG TO HIGHER
R010     LR    OUTREG,14           OUTPUT ADDRESS (SENSE OR STATUS).
         BR    LINKREG
***********************************************************************
*     BLOWUP OF 'MDR' ERRORS                  *************************
***********************************************************************
BUMDR    MVC   24(6,OUTREG),=C'SENSE'  MOVE STATUS HDR.
         UNPK  DUBLWD,MDRSTATS(3)  MOVE MDR                          XH
         TR    DUBLWD,HXTOEB          STATUS BYTES                   XH
         MVC   31(4,OUTREG),DUBLWD+3     TO OUTPUT AREA              XH
         AH    OUTREG,LINESZ       BUMP TO NEXT OUTPUT LINE.
         LR    14,OUTREG
         LH    1,LINELOOP
         AR    1,1                 LIMIT MOD 1 TO 7 BITS MAX.
         BCTR  1,0
         LA    15,STATSTBL
R080     MVC   DUBLWD(2),MDRSTATS  SETUP TO LOOK AT REMOTE STATUS TBL.
         NC    DUBLWD(2),0(15)
         CLC   DUBLWD(2),0(15)
         BE    R170
R120     LA    15,20(15)
         CLI   0(15),X'FF'
         BNE   R080
         B     R200
R170     MVC   20(18,14),2(15)     MOVE EXPLANATION OF 1 REMOTE STATUS
         AH    14,LINESZ           BUMP TO NEXT OUTPUT AREA
         BCT   1,R120              ANY TIOA ROOM LEFT?
R200     LR    OUTREG,14           NO. SETUP TO COMPUTE DATA LTH.
         BR    LINKREG             RETURN TO MAIN LINE.
***********************************************************************
*   THIS IS THE LOCATE ROUTINE
***********************************************************************
LOCATE   ST    11,SAVE11
         LA    11,PARMADDR         SET UP PARM REG
         L     15,=V(BNGIREAD)    POINT TO READ MODULE
         BALR  14,15              LINK TO BDAM READ MODULE
         L     11,SAVE11
         OC    STATUS,STATUS      READ OK?
         BZ    S030               YES.
         CLC   STATUS,=C'FF'       WAS EMFILE OPENED?
         BE    Z60                 NO.  WRITE 'NOT OPEN' MSG
*        UNPK  DBLWD,STATUS(3)
*        MVC   IOERCODE,DBLWD+3
*        TR    IOERCODE,HXTOEB     MOVE BDAM RETURN CODE TO I/O ERR MSG
*        UNPK  DBLWD,RELREC(4)
*        MVC   IOERBLK,DBLWD+4     MOVE BLK NBR THAT WAS BEING READ
*        TR    IOERBLK,HXTOEB
         B     Z90                     IF REQUESTED SLOT CAN'T
*                                        BE FOUND, SEND 'SEARCHING ERR'
S030     L     FIOABAR,IOAREA      POINT TO DATA BLK.
         LH    DATALOOP,BLKLTH     SETUP LOOP NBR BYTES THIS BLK.
         LA    DATAREG,DATASLT1    POINT TO FIRST DATA ITEM
         MVC   WRKSLOT,TWASLOT     MOVE SLOT COUNT TO WORK AREA
S060     CLI   WRKSLOT,2           IF RQSTED SLOT = 1, THIS IS IT.
         BL    0(LINKREG)          GO RESUME DISPLAY BUILDING.
         SR    1,1
         IC    1,WRKSLOT           DECREMENT SLOT COUNT BY 1.
         BCTR  1,0
         STC   1,WRKSLOT
         IC    1,0(DATAREG)        BUMP TO NEXT SLOT.
         LTR   1,1
         BZ    S190                PREVENT LOOP IF GARBAGE INPUT.
         AR    DATAREG,1
         SR    DATALOOP,1
         LTR   DATALOOP,DATALOOP   VERIFY SLOT NBR VALID FOR THIS BLK.
         BP    S060
S190     MVC   ERRDATA(MSG5LTH),MSG5   IF REQUESTED SLOT CAN'T
ERRISRT  CALL  ASMTDLI,(ISRT,(PCBREG),ERROUT,LGERR),VL
         B     CHECKST
***********************************************************************
GETTIOA  MVC   MSGOID,=CL20' '        CLEAR MSG ID AREA
         OC    TWATCTID,TWATCTID   IF NO INPUT WAS SPECIFIED,
         BZ    T130                SHOW USER HIS TERMINAL ID.
         MVC   MSGOID(10),=C'   IMS ID='
         MVC   MSGOID+10(8),TWATCTID
T130     LA    OUTREG,MSGRECAP     POINT TO RECAP OUTPUT HEADER
         MVC   0(HDR4LTH,OUTREG),HDR4    MOVE RECAP HEADER TO OUTPUT
         OC    PARM5,PARM5         IF NO TERM ADDR INPUT, SHOW ONLY LIN
         BZ    T150
         MVC   (HDR4TERM-HDR4)(2,OUTREG),PARM5   FILL IN THE
         MVC   (HDR4CTRL-HDR4)(2,OUTREG),PARM4     ID OF THIS TERML
T150     DS    0H
         MVC   (HDR4LINE-HDR4)(3,OUTREG),PARM3    CTRL UNIT, AND LINE.
         CLC   (HDR4TERM-HDR4)(2,OUTREG),=C'  '  IS TERML BLANK?
         BNE   T160                      NO. LET IT GO.
         MVC   6(6,OUTREG),=C'LOCAL '    YES, CHANGE TO
         MVC   12(3,OUTREG),PARM3        LOCAL FORMAT.
         MVC   15(24,OUTREG),=24C' '
T160     LA    OUTREG,MGODAT1A     SETUP OUTPUT REG TO POINT AT DATA
         MVC   MSGHDR1,HDR6        MOVE COLUMN HEADERS
         MVC   MSGHDR2,HDR6         TO OUTPUT.
         LA    OUTLOOP,7           SETUP TO SHOW 7 ITEMS ON MOD 1.
         LA    14,40               SETUP TO INITIALIZE OUTPUT ENTRIES
         LA    15,MGODAT1A         POINT TO FIRST ENTRY IN OUTPUT.
T170     MVC   0(7,15),=X'00B04000B0403F'  SET TO UNPROT,NORM,ALPHA
         MVC   14(4,15),=X'00B0403F'          AND ERASE FIELDS ON SCR
         LA    15,43(15)           BUMP TO NEXT ENTRY
         BCT   14,T170             BRANCH IF MORE ENTRIES TO CLEAR
         MVI   QUITSW,X'00'        TURN OFF OUTPUT-FOR-3277-2 SWITCH
T180     BR    LINKREG             RETURN TO MAIN LINE.
T190     OC    PARM3,=CL8' '            INSURE NO X'00'        @OZ31886
         MVC   MSG13LN,PARM3            MOVE LINE NO. INTO MSG @OZ31886
         MVC   ERRDATA(MSG13LTH),MSG13  MOVE MESSAGE           @OZ31886
         B     ERRISRT                  GO WRITE MESSAGE       @OZ31886
Z10      MVC   ERRDATA(MSG4LTH),MSG4
         B     ERRISRT
Z20      MVC   ERRDATA(MSG1LTH),MSG1
         B     ERRISRT
Z30      MVC   ERRDATA(MSG3LTH),MSG3
         B     ERRISRT
Z40      MVC   ERRDATA(MSG6LTH),MSG6
         B     ERRISRT
Z50      CLI   PARM4,X'00'          IS FULL ADDRESS AVAILABLE ?
         BE    Z50A                 NO. JUST SHOW TERMINAL ADDR
         CLC   PARM4(2),=C'00'
         BE    Z50A                 NO. JUST SHOW TERMINAL ADDR
         MVC   ERRDATA(MSG11LTH),MSG11   MOVE 'NO ERRS' MSG TO OUTPUT
         OC    PARM3(24),=CL24' '   CHANGE  X'00'  TO  X'40'
         LA    15,ERRDATA           POINT TO OUTPUT AREA
         MVC   (MSG11TRM-MSG11)(2,15),PARM5  MOVE TERML TO OUTPUT
         MVC   (MSG11CU-MSG11)(2,15),PARM4   MOVE CTRL UNIT TO OUTPUT
         MVC   (MSG11LIN-MSG11)(3,15),PARM3  MOVE LINE      TO OUTPUT
         CLI   TWATCTID,X'00'           SYMBOLIC ADDR PRESENT ?
         BE    Z50C                     NO.  WRITE MSG
         MVC   (MSG11ID-MSG11)(10,15),=C'   IMS ID='
         MVC   (MSG11ID+10-MSG11)(8,15),TWATCTID
         B     Z50C
Z50A     OC    PARM3,=CL8' '          CHANGE  X'00'  TO  X'40'
         MVC   MSG12TRM,PARM3         MOVE TERML TO OUTPUT
         LA    15,MSG12ID             POINT TO END OF ADDRESS
         MVC   MSG12ID,=CL20' '       CLEAR OUT SYMBOLIC ID AREA
         CLI   TWATCTID,X'00'         SYMBOLIC NAME PRESENT ?
         BE    Z50B                   NO.
         MVC   0(10,15),=C'   IMS ID='
         MVC   10(8,15),TWATCTID
Z50B     MVC   ERRDATA(MSG12LTH),MSG12 MOVE MSG12 TO OUTPUT AREA
Z50C     B     ERRISRT
Z60      MVC   ERRDATA(MSG9LTH),MSG9
         B     ERRISRT
Z90      MVC   ERRDATA(MSG5LTH),MSG5
         B     ERRISRT
         EJECT
ERROUT   DS    0D              MAP OF TRANSACTION MESSAGE SEGMENT:
ERROLL   DC    H'121'              MESSAGE LENGTH INCL. LL,Z1,Z2,DATA
ERROZ1   DC    X'00'               FLAG FIELD - USED BY IMS INTERNALLY
ERROZ2   DC    X'00'               FLAG FIELD - NON-ZERO IF MFS EDITED
ERRDATA  DS    CL117               START OF MESSAGE DATA
MSG1     DC    CL39'BNG001A I I/O ERR READING SYS1.DEMFLOG '
         DC    CL28'    THE BDAM RETURN CODE IS'
IOERCODE DC    CL4'0'
         DC    CL7' '
         DC    CL34'THE BDAM RELATIVE BLOCK NUMBER IS '
IOERBLK  DC    CL3'0'
         DC    C'  '
MSG1LTH  EQU   *-MSG1
MSG3     DC    C'BNG003I I NO ERRORS RECORDED '
MSG3LTH  EQU   *-MSG3
MSG4     DC    C'BNG004I I NO ERRORS RECORDED FOR LINE '
NOLINE   DC    CL3' '
MSG4LTH  EQU   *-MSG4
MSG5     DC    CL39'BNG005I I ERROR NOT FOUND ON FILE FOR '
         DC    C'THE SELECTED ITEM '
MSG5LTH  EQU   *-MSG5
MSG6     DC    C'BNG006I I INVALID FORMAT--CHECK PAGE 2'
         DC    C'OF MENU FOR CORRECT FORMATS'
MSG6LTH  EQU   *-MSG6
MSG9     DC    C'BNG009A I SYS1.DEMFLOG FILE NOT OPEN   '
MSG9LTH  EQU   *-MSG9
MSG10    DC    AL2(MSG10LTH-4),X'0000'
         DC    CL10'BNG010I I '
MSG10ID  DC    CL8' ',CL21' IS A VTAM TERMINAL. '
         DC    CL39'FOR INQUIRY,GIVE DEMF HARDWARE ADDRESS.'
MSG10LTH EQU   *-MSG10
MSG11    DC    CL39'BNG011I I NO ERRORS RECORDED FOR REMOTE'
         DC    CL9'TERMINAL '
MSG11TRM DC    CL2' '
         DC    CL20'       ON CTRL UNIT '
MSG11CU  DC    CL2' '
         DC    CL14'      ON LINE '
MSG11LIN DC    CL3' '
         DC    CL8' '
MSG11ID  DC    CL20' '          IMS SYMBOLIC NAME
MSG11LTH EQU   *-MSG11
MSG12    DC    CL39'BNG012I I NO ERRORS RECORDED FOR LOCAL '
         DC    CL9'TERMINAL '
MSG12TRM DC    CL3' '
         DC    CL7' '
MSG12ID  DC    CL20' '          IMS SYMBOLIC NAME
MSG12LTH EQU   *-MSG12
MSG13    DC    CL39'BNG013A I NO DATA BLOCKS AVAILABLE FOR '   @OZ31886
         DC    CL5'LINE '                                      @OZ31886
MSG13LN  DC    CL3' '                                          @OZ31886
         DC    CL31':  DATA BASE IN DEGRADED MODE. '           @OZ31886
         DC    CL39'MUST ALLOCATE MORE BLOCKS THAN LINES'      @OZ31886
MSG13LTH EQU   *-MSG13                                         @OZ31886
********************************************************************
DTLENTRY DC    C' (? ) '
DTLITEM  DC    CL8' '
DTLCOUNT DC    CL4'0001'
DTLLTH   EQU   *-DTLENTRY
ITEMLTH  EQU   DTLITEM-DTLENTRY
COUNTLTH EQU   DTLCOUNT-DTLENTRY
***********************************************************************
CLRNTRY  DC    XL14'3F'             USED TO CLEAR FIELDS FOR OUTPUT
         DC    XL4'403F3F3F'
CLRLTH   EQU   *-CLRNTRY
***********************************************************************
*  THE FUNCTION/COMPANION TABLE DETERMINES WHICH PROGRAM IS TO WRITE
*   THE REQUESTED DISPLAY AND PROVIDES THE CORRECT SCREEN AND COLUMN
*   HEADERS FOR THAT DISPLAY.
***********************************************************************
* STORAGE AND WORK AREA DEFINITIONS
***********************************************************************
QUITSW   DS    C             USED TO SETUP PAGING BBBSS FOR 3277-1
PARMADDR DS    0F
IOAREA   DC    A(0)                ADDR OF RECORD READ PASSED HERE
RELREC   DC    XL3'0'              REL BLK ADDR TO BE READ
STATUS   DC    CL2'  '             STATUS OF READ PASSED HERE
ISRT     DC    CL4'ISRT'           INSERT FUNCTION - OUTPUT TO TERMINAL
DLIOK    DC    CL2' '              DL/I STATUS SAYS OPERATION PERFORMED
S3270    DC    CL8'BNGIO327'       MFS MESSAGE OUTPUT DESCRIPTOR NAME
LGERR    DC    CL8'BNGIOERR'       MFS MESSAGE OUTPUT DESCRIPTOR NAME
BITSCR   DC    CL8'BNGIOBIT'       MFS MESSAGE OUTPUT DESCRIPTOR NAME
DATDATE  DS    F                   WORK AREA FOR DATE
***********************************************************************
* THE FOLLOWING AREA IS USED AS OUTPUT AREA
* FOR TRANSACTION MESSAGES, WITH MAPPING AS SHOWN.
***********************************************************************
MSG3270  DS    0D              MAP OF 3270 TRANSACTION MESSAGE
MSGOLL   DC    AL2(MSGLTH)         MESSAGE LENGTH INCL. LL,Z1,Z2,DATA
MSGOZ1   DC    X'00'               FLAG FIELD - USED BY IMS INTERNALLY
MSGOZ2   DC    X'00'               FLAG FIELD - NON-ZERO IF MFS EDITED
MSGODATA DS    0F                  START OF MESSAGE DATA
MSGOID   DS    CL20             CONTAINS IMS SYMBOLIC NAME
LGBBBSS  DS    CL15             PAGING BBBSS'S FOR 3277-2
SMBBBSS  DS    CL15             PAGING BBBSS'S FOR 3277-1
MSGRECAP DS    CL39             RECAP HEADER LINE
MSGHDR1  DS    CL39             FILE/STATUS/SENSE/TPOP/CMD/ HEADER
MSGHDR2  DS    CL39             FILE/STATUS/SENSE/TPOP/CMD/ HEADER
MGODAT1A DS    CL2         ATTR   *  THESE FIELDS FORM THE REPEATING
MSGODAT1 DS    CL1         DATA   *  OUTPUT PATTERN WHEREIN THE FIRST
MGODAT2A DS    CL2         ATTR   * TWO BYTES ARE USED TO SET ATTRIBUTE
MSGODAT2 DS    CL9         DATA   * BYTES AND THE NEXT FIELD IS DATA
MGODAT3A DS    CL2         ATTR   * --- IN ALL,43 BYTES ARE REQUIRED
MSGODAT3 DS    CL27        DATA   *
MSGOREST DS    39CL43      MORE   **  39 MORE OF THE ABOVE TYPE FIELDS
MSGLTH   EQU   *-MSG3270
FILLER   DC    16X'FF'
***********************************************************************
* THE FOLLOWING AREA IS USED AS OUTPUT AREA
* FOR TRANSACTION MESSAGES, WITH MAPPING AS SHOWN.
***********************************************************************
MSGBITS  DS    0D              MAP OF BITS PROMPTER TRANSACTION MESSAGE
MSGBLL   DC    AL2(MSGBLTH)        MESSAGE LENGTH INCL. LL,Z1,Z2,DATA
MSGBZ1   DC    X'00'               FLAG FIELD - USED BY IMS INTERNALLY
MSGBZ2   DC    X'00'               FLAG FIELD - NON-ZERO IF MFS EDITED
MSGDATAS DS    0F                  START OF MESSAGE DATA
MSGBID   DS    CL20             CONTAINS IMS SYMBOLIC NAME
BITBBBSS DS    CL15             PAGING BBBSS'S FOR 3277-2 AND 3277-1
MSBRECAP DS    CL38             RECAP HEADER LINE
MSGBDATA DS    8CL40            FILE/STATUS/SENSE/TPOP/CMD/ INFO
MSGBSM   DS    8CL40            FILE/STATUS/SENSE/TPOP/CMD SMALL
MSGBLTH  EQU   *-MSG3270
********************************************************************
UNA      DC    X'0080'             UNPROT,NORMAL,ALPHA
UHA      DC    X'0088'             UNPROT,HI,ALPHA
PNN      DC    X'00B0'             PROT,NORMAL,NUMERIC
PHN      DC    X'00B8'             PROT,HI,NUMERIC
********************************************************************
HDR4     DC    C'RECAP REMOTE '
HDR4TERM DC    CL2'  ',C' ON CU '
HDR4CTRL DC    CL2'  ',C' ON LINE '
HDR4LINE DC    CL3'999',CL2' '
HDR4LTH  EQU   *-HDR4
********************************************************************
HDR6     DC    CL39'      FILE#  TIME SENSE STATUS TPOP CMD'
********************************************************************
*     DETAIL ENTRY WITH ATTRIBUTE BYTES     TOTAL = 43 BYTES
********************************************************************
MDRHDR   DS    0F
MDRATTR1 DC    XL2'00B0'
         DC    C'('
MDRATTR2 DC    XL2'0080'
         DC    C'? ) '
MDRBBBSS DC    CL5'BBBSS'
MDRATTR3 DC    XL2'00B0'
MDRHRS   DC    CL2'24',C':'
MDRMINS  DC    CL2'60',C'  '
MDRSTAT  DC    CL4'XXXX',C'   '
OBRSNS   DC    CL4'    ',C'  '
OBRTPOP  DC    CL2'  ',C'  '
OBRCMD   DC    CL2'  ',C' '
MDRLTH   EQU   *-MDRHDR
********************************************************************
         LTORG
CALENDAR DC    C'JAN',PL2'31'
         DC    C'FEB',PL2'28'
         DC    C'MAR',PL2'31'
         DC    C'APR',PL2'30'
         DC    C'MAY',PL2'31'
         DC    C'JUN',PL2'30'
         DC    C'JUL',PL2'31'
         DC    C'AUG',PL2'31'
         DC    C'SEP',PL2'30'
         DC    C'OCT',PL2'31'
         DC    C'NOV',PL2'30'
         DC    C'DEC',PL2'31'
LEAPTBL  DC    X'768084889296FF'
EBTOHX   DC    X'00000000000000000000000000000000'     00-0F  THIS
         DC    X'00000000000000000000000000000000'     10-1F  TABLE
         DC    X'00000000000000000000000000000000'     20-2F  CONVERTS
         DC    X'00000000000000000000000000000000'     30-3F  INPUT
         DC    X'00000000000000000000000000000000'     40-4F  A THRU F
         DC    X'000000000000000000000000FF000000'     50-5F    TO
         DC    X'00000000000000000000000000000000'     60-6F  0A - 0F
         DC    X'00000000000000000000000000000000'     70-7F   AND
         DC    X'00000000000000000000000000000000'     80-8F  F0 - F9
         DC    X'00000000000000000000000000000000'     90-9F    TO
         DC    X'00000000000000000000000000000000'     A0-AF  00 - 09
         DC    X'00000000000000000000000000000000'     B0-BF    AND
         DC    X'000A0B0C0D0E0F000000000000000000'     C0-CF     *
         DC    X'00000000000000000000000000000000'     D0-DF   BECOME
         DC    X'00000000000000000000000000000000'     E0-EF    FF.
         DC    X'00010203040506070809000000000000'     F0-FF
HXTOEB   DC    4XL16'00',C' ',XL15'00',7XL16'00'  THIS TABLE CONVERTS
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  HEX CHARS
         DC    2XL16'00'                CHARS FA-THRU-FF BACK
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  A THRU F
CCWTABL  DC    CL20'00TEST IO'
         DC    CL20'01WRITE'
         DC    CL20'02READ'
         DC    CL20'03NO OP'
         DC    CL20'04SENSE'
         DC    CL20'05WRITE WRAP'
         DC    CL20'06READ PREPARE'
         DC    CL20'09WRITE POLL'
         DC    CL20'0AREAD INHIBIT'
         DC    CL20'0DWRITE BREAK'
         DC    CL20'0EREAD SEARCH'
         DC    CL20'13SAD ZERO'
         DC    CL20'17SAD ONE'
         DC    CL20'1BSAD TWO'
         DC    CL20'1EADDRESS PREPARE'
         DC    CL20'1FSAD THREE'
         DC    CL20'23SET MODE'
         DC    CL20'27ENABLE'
         DC    CL20'29WRITE DIAL'
         DC    CL20'2FDISABLE'
         DC    X'FFFF',CL18'NO KNOWN MEANING'
TPOPTBL  DC    CL20'00ON LINE TEST'
         DC    CL20'01DISABLE'
         DC    CL20'02WRITE EOA EOT EOT'
         DC    CL20'03WRT POLL/ADDR CHRS'
         DC    CL20'04WRITE SPACE'
         DC    CL20'05RD RSP TO POLLING'
         DC    CL20'06RD RSP TO ADDRESSING'
         DC    CL20'07READ ID RESPONSE'
         DC    CL20'08WRITE EOA'
         DC    CL20'09NOP OR TIC'
         DC    CL20'0AREAD INDEX'
         DC    CL20'0BREAD INQUIRY'
         DC    CL20'0CRD RSP TO INQUIRY'
         DC    CL20'10WRT LINE ADDRESS'
         DC    CL20'11RD OR WRT TEXT'
         DC    CL20'12RD SKIP OR TIC'
         DC    CL20'13WRITE DLE ETX'
         DC    CL20'20RD RSP TO TEXT'
         DC    CL20'21ALL RESET COMMANDS'
         DC    CL20'22READ SKIP'
         DC    CL20'23WRITE BREAK'
         DC    CL20'24OPEN LOPEN CLOSE'
         DC    CL20'25RD RSP TO TEXT'
         DC    X'FFFF',CL18'NO KNOWN MEANING'
CSWTABL  DC    B'1000000000000000',CL18'ATTENTION'
         DC    B'0100000000000000',CL18'STATUS MODIFIER'
         DC    B'0010000000000000',CL18'CTRL UNIT END'
         DC    B'0001000000000000',CL18'BUSY'
         DC    B'0000100000000000',CL18'CHANNEL END'
         DC    B'0000010000000000',CL18'DEVICE END'
         DC    B'0000001000000000',CL18'UNIT CHECK'
         DC    B'0000000100000000',CL18'UNIT EXCEPTION'
         DC    B'0000000010000000',CL18'PGRM CTRLD INTRPT'
         DC    B'0000000001000000',CL18'INCORRECT LENGTH'
         DC    B'0000000000100000',CL18'PROGRAM CHECK'
         DC    B'0000000000010000',CL18'PROTECTION CHECK'
         DC    B'0000000000001000',CL18'CHANL DATA CHECK'
         DC    B'0000000000000100',CL18'CHANL CTRL CHECK'
         DC    B'0000000000000010',CL18'INTFACE CTRL CK'
         DC    B'0000000000000001',CL18'CHAINING CHECK'
         DC    X'FF'
SENSTABL DC    B'10000000',CL18'COMMAND REJECT'
         DC    B'01000000',CL18'INTERVENTION REQD'
         DC    B'00100000',CL18'BUS OUT CHECK'
         DC    B'00010000',CL18'EQUIPMENT CHECK'
         DC    B'00001000',CL18'DATA CHECK'
         DC    B'00000100',CL18'OVERRUN'
         DC    B'00000010',CL18'LOST DATA'
         DC    B'00000001',CL18'TIMEOUT'
         DC    X'FF'
STATSTBL DC    B'0010000000000000',CL18'RESERVED'
         DC    B'0001000000000000',CL18'RESERVED'
         DC    B'0000100000000000',CL18'DEVICE BUSY'
         DC    B'0000010000000000',CL18'UNIT SPECIFY'
         DC    B'0000001000000000',CL18'DEVICE END'
         DC    B'0000000100000000',CL18'TRANSMISSION CHECK'
         DC    B'0000000000100000',CL18'COMMAND REJECT'
         DC    B'0000000000010000',CL18'INTERVENTION REQD'
         DC    B'0000000000001000',CL18'EQUIPMENT CHECK'
         DC    B'0000000000000100',CL18'DATA CHECK'
         DC    B'0000000000000010',CL18'CONTROL CHECK'
         DC    B'0000000000000001',CL18'OPERATION CHECK'
         DC    X'FF'
SENS3272 DC B'10000000',CL18'COMMAND REJECT'
         DC B'01000000',CL18'INTERVENTION REQD'
         DC B'00100000',CL18'BUS OUT CHECK'
         DC B'00010000',CL18'EQUIPMENT CHECK'
         DC B'00001000',CL18'DATA CHECK'
         DC B'00000100',CL18'UNIT SPECIFY'
         DC B'00000010',CL18'CONTROL CHECK'
         DC B'00000001',CL18'OPERATION CHECK'
         DC    X'FF'
CCW3272  DC    CL20'01WRITE'
         DC    CL20'05ERASE WRITE'
         DC    CL20'02READ BUFFER'
         DC    CL20'06READ MODIFIED'
         DC    CL20'0BSELECT'
         DC    CL20'0FERASE ALL PROTECTD'
         DC    CL20'03NO OP'
         DC    CL20'04SENSE'
         DC    X'FFFF',CL18'NO KNOWN MEANING'
TCAMTPOP DC    CL20'01WRT EOT FOR SELECT'
         DC    CL20'02OPEN TP OP CODE'
         DC    CL20'03WRITE POLL CHARS'
         DC    CL20'04RD RSPNS TO POLL'
         DC    CL20'05WRITE PAD CHARS'
         DC    CL20'06ENABLE DIAL LINE'
         DC    CL20'07WRT ADDR SEQUENCE'
         DC    CL20'08READ RSPNS TO ADDR'
         DC    CL20'09WRITE EOA SEQUENCE'
         DC    CL20'0ARD RSPNS EOB/ETB'
         DC    CL20'0BWRITE CPU ID'
         DC    CL20'0CREAD ENQ'
         DC    CL20'0DWRITE ENQ'
         DC    CL20'0ERD RSPNS TO ENQ'
         DC    CL20'0FWRITE DLE EOT'
         DC    CL20'10READ ID (TSO)'
         DC    CL20'11NON-R/W CCW'
         DC    CL20'12WRITE BREAK (TSO)'
         DC    CL20'13WRT ENQ AFTER SEL'
         DC    CL20'14READ LCOUT'
         DC    CL20'15WRT RSP BEFOR TXT'
         DC    CL20'16WRITE RESPONSE'
         DC    CL20'17WRITE TONE'
         DC    CL20'18BSC READ ID ENQ'
         DC    CL20'1ABSC READ ID ACK'
         DC    CL20'1CABORT SEND/RECIEV'
         DC    CL20'1EREAD TWX ID'
         DC    CL20'20BUF TRM RESET BLK'
         DC    CL20'22CLOSE SDR RECRDNG'
         DC    CL20'24WRT RESET AFT SEL'
         DC    CL20'51READ SKIP LOOP'
         DC    CL20'53WRT IDLES LOOP'
         DC    CL20'57WRT DLE STX'
         DC    CL20'59WRT DLE ETB(ETX)'
         DC    CL20'5BWRT ENQ RSP TO TXT'
         DC    CL20'FFTEXT CCW'
         DC    X'FFFF',CL18'NO KNOWN MEANING'
TWASLOT  DC    X'00'               SLOT COUNTER.
WRKSLOT  DS    C                   SLOT CTR WORKAREA FOR LOCATE RTN
SAVE14   DS    F                   SAVE AREA.
TWAOUT   DS    F                   SAVE OUTPUT HDR ADDR
LINELOOP DS    H                   NBR LINE ITEMS PER LINESZ.
OUTSWCH  DS    C
LINESZ   DS    H                   LINE SIZE
HXLINLIB DS    0CL6                LINE ADDRESS INCLUDING
         DS    C
HEXLINE  DS    CL2                      VTAM LIB ADDR
HEXLIB   DS    CL3                      IN HEX FORMAT.
HEXCTRL  DS    C                   CTRL UNIT POLL CHAR.
HEXTERM  DS    C                   TERML POLL CHAR.
NEWFIRST DS    CL5                 SAVE AREA FOR OLD BLK & SLOT NBR.
NEWPREV  DS    CL5                 SAVE AREA FOR OLD BLK & SLOT NBR.
         END   BNGI3270
