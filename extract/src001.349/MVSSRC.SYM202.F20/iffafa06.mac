*TITLE         END SEQUENCE
*
*MODULE NAME   IFFAFA06
*
*INPUT         REG1 ADDRESS OF WORK AREA
*
*              WORK AREA + 0  ADDRESS OF VARIABLE LENGTH PARAMETER LIST
*                  +0 ADDRESS OF GDSCB
*                  +4 ADDRESS OF A KEY (OPTIONAL)
*
*              WORK AREA + 4  ADDRESS OF GSPARRAY
*
*OUTPUT        KEY THAT IDENTIFIES THE SEQUENCE
*
*FUNCTION      TO TERMINATE A PREVIOUSLY INITIATED SEQUENCE
         EJECT
*
*REGISTER UTILIZATION
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
IFFAFA06 CSECT
*1711,535000,545000,555000-580000                                  000A
*
*PERFORM NORMAL HOUSEKEEPING FUNCTIONS
*ESTABLISH ADDRESSABILITIES
*
         SAVE  (14,12)
         BALR  R9,R0
         USING *,R9                    ESTABLISH CSECT ADDRESSABILITY
         LA    R10,8(R1)
         USING WRKSECT,R10             ESTABLISH WORK AREA
         L     R2,0(R1)                GET PLIST ADDR
         L     R8,0(R2)                GET GDSCB PTR
         L     R8,0(R8)                GET GDSCB ADDR
         USING GDSCB,R8                ESTABLISH GDSCB ADDRESSABILITY
*
*CHAIN SAVE AREAS
*
         ST    R13,SVAREA+4            FORWARD CHAIN
         LA    R4,SVAREA
         ST    R4,8(R13)               BACK CHAIN
*
*PERFORM INITIALIZATION FUNCTIONS
*
         LR    R13,R4                  SET SAVE AREA REG
         L     R3,4(R1)                GET GSPARRAY ADDR
         XC    0(20,R3),0(R3)          ZERO GSPARRAY
         XC    TEMPKEY,TEMPKEY         ZERO TEMPORARY KEY
         NI    GDSGRMOD,X'00'          SET CURRENT MODE DEVICE FLAG
*
*TEST GDS FOR VALIDITY. IF THE GDS HAS NOT BEEN OPENED AN ERROR RETURN
*IS MADE.
*
         CLC   GDSVALID(2),GDSID       IS DDSCB VALID
         BE    NDQLRA3                 YES
NDQLRB2  LA    R4,1
NDQLRB2A ST    R4,16(R3)               ERROR - GDS NOT OPEN
NDQLRB2B OI    0(R3),X'08'             INDICATE PARAM ERROR
         B     NDQLRH3
*
*TEST IF A SEQUENCE HAS BEEN STARTED. IF NOT AN ERROR RETURN IS MADE.
*
NDQLRA3  TM    GDSFLAGS,X'04'          HAS A SEQUENCE BEEN STARTED
         BZ    NDQLRB2B                NO
*
*CHECK PARAMETERS FOR PROPER COMBINATIONS. IF A KEY HAS NOT BEEN
*SPECIFIED AND NO COEEELATION VALUE WAS SPECIFIED IN THE CALL TO
*BEGIN SEQUENCE AN ERROR RETURN IS MADE
*
         TM    0(R2),X'80'             WAS KEY PARAM FIELD USED
         BO    NDQLRC4                 NO
         CLC   5(3,R2),21(R3)          HAS NULL VAR REPLACED KEY
         BNE   NDQLRD4                 NO
NDQLRC4  TM    GDSFLAGS,X'40'          WAS BGSEQ CORRELATED
         BO    NDQLRB2                 NO
NDQLRD4  LH    R4,GDSKEYSV             GET LOG BFR ADDR FROM GDSCB
         STH   R4,TEMPKEY+2            SETUP KEY FOR KEY TABLE SEARCH
         LA    R4,TEMPKEY
*
*BUILD PARAMETER LIST FOR KEY TABLE MANAGEMENT
*
NDQLRE3P ST    R8,KEYPLIST             PUT GDSCB ADDR IN PLIST
         LA    R5,KEYCODE
         ST    R5,KEYPLIST+4           PUT CODE ADDR IN PLIST
         ST    R4,KEYPLIST+8           PUT KEY ADDR IN PLIST
*
*INVOKE KEY TABLE MANAGEMENT
*
NDQLRE3  L     R5,24(R3)               GET STATUS TABLE ADDR
         L     R15,KEYDISP(R5)         GET EP ADDR
         LTR   R15,R15                 HAS MODULE BEEN LOADED
         BZ    NDQLRB2B            NO-ERROR                        000A
NDQLRE3A LA    R1,KEYPLIST             LOAD PLIST ADDR
         BALR  R14,R15             BRANCH TO KEY TABLE MGMT        000A
         B     NDQLRE3D
*
*TEST FOR SUCCESSFUL COMPLETION OF INVOKED ROUTINE. IF UNSUCCESSFULL
*MAKE AN ERROR RETURN.
*
NDQLRE3D LTR   R15,R15                 WAS KEY TBL MGMT SUCCESSFUL
         BZ    NDQLRF3                 YES
         LA    R4,2                    ERROR - KEY NOT FOUND
         B     NDQLRB2A
*
*COMPUTE THE LENGTH OF THE SEQUENCE, IN BYTES. COMPLETE THE KEY BY
*PUTTING THE LENGTH IN IT.
*
NDQLRF3  L     R7,GDSAOACB             GET OACB ADDR
         L     R5,52(R7)               GET CURRENT ORDER LOAD POINT
         SH    R5,2(R1)                COMPUTE LENGTH OF SEQUENCE
         STH   R5,0(R1)                COMPLETE KEY
         OI    4(R1),X'A0'             SET MULT AND SEQUENCE FLAGS
         TM    0(R2),X'80'             WAS KEY PARAM SPECIFIED
         BO    NDQLRG3                 NO
         L     R5,4(R2)                GET KEY RETURN WORD ADDR
         MVC   0(4,R5),0(R1)           RETURN KEY
*
*SETUP PARAMETERS NEEDED BY DATA STORE.
*
NDQLRG3  ST    R8,DATASTOR             PUT GDSCB ADDR IN PLIST
         ST    R3,DATASTOR+4           PUT GSPARRAY ADDR IN PLIST
         MVI   DATASTOR+8,X'02'        PUT CODE IN PLIST
         XC    DATASTOR+9(3),DATASTOR+9  PUT LENGTH IN PLIST
         LA    R1,DATASTOR             GET DATA STORE PLIST ADDR
*
*INVOKE DATA STORE. THE DATA STORE ROUTINE IS USED TO RESOLVE THE
*TRANSFER ADDRESS PAST THE SEQUENCE. THIS TRANSFER PERMITS OMITTING
*THE SEQUENCE.
*
         L     R4,24(R3)               GET STATUS TABLE ADDR
         L     R15,DATDISP(R4)         GET EP ADDR
         BALR  R14,R15
*
*MAKE NORMAL RETURN
*
NDQLRH3  L     R13,SVAREA+4
         NI    GDSFLAGS,X'BB'          RESET SEQUENCE BEGUN AND NO
*                                      CORRVAL FLAGS
         RETURN (14,12),T
         EJECT
*
*EQUATES
*
CVTLINK  EQU   8
KEYDISP  EQU   828
DATDISP  EQU   852
*
*CONSTANTS AND DSECTS
*
KEYCODE  DC    F'2'
C4       DC    H'4'
GDSID    DC    X'F203'
IFFA     DC    C'IFFA'
WRKSECT  DSECT
SVAREA   DS    18F
SUPPLIST DS    4F
TEMPKEY  DS    F
KEYPLIST DS    10F
STATDISP DS    F
EPLOC    DS    D
DATASTOR DS    12F
         COPY  GDSCB
         END
