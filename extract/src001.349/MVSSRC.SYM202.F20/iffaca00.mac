* TITLE:CRATL-CREATE AN ATTENTION LEVEL
* STATUS:CHANGE LEVEL 0
* FUNCTION:TO ESTABLISH THE FIRST OR ONLY ATTENTION LEVEL OR TO ESTAB-
*          LISH A NEW ACTIVE ATTENTION LEVEL BELOW THE CURRENTLY ACTIVE
*          LEVEL.
* ENTRY:ENTERED AT IFFACA00 VIA A CALL TO CRATL.
* INPUT:GR#1 CONTAINS THE ADDRESS OF A WORK/SAVE AREA.THE FIRST WORD
*       CONTAINS THE ADDRESS OF A PARAMETER LIST CONSTRUCTED AS FOLLOWS
*         1.DEVICENAME-ADDRESS OF A VARIABLE CONTAIN THE ADDRESS OF THE
*           GTMCB.
*         2.ATTNLEVEL-ADDRESS OF A USER LOCATION WHERE THE ADDRESS OF
*           THE NEWLY CREATED ATTENTION LEVEL IS TO BE PLACED.
*         3.DEQUECT-ADDRESS OF A VALUE INDICATING WHETHER ATTENTIONS
*           MADE AVAILABLE TO THE USER ARE DEQUEUED ANY TIME(VALUE=1)
*           OR ONLY WHEN ATTENTION LEVEL IS ACTIVE(VALUE=2).
* OUTPUT:ATTENTION LEVEL AND A QUEUE ARE CREATED.
* EXIT:RETURN TO CALLING PROGRAM
* RETURN CODES: 4,0 INCORRECT NUMBER OF PARAMETERS.
*               4,1 NOT A VALID DEVICENAME.
*               4,3 DEQUECT NOT VALID
*               3,4 MAIN STORAGE NOT AVAILABLE
*               0,0 SUCCESSFULL EXECUTION
* ATTRIBUTES:RE-ENTRANT,PROBLEM PROGRAM MODE
* NOTES:THE FOLLOWING CONTROL BLOCKS ARE EXAMINED BY THIS ROUTINE:
*       1.GTMCB
*       2.GSPCB
*EXTERNAL ROUTINES:ATTNINQ
*                  GIOCR
REG0     EQU   0                       PARAM REG 0
REG1     EQU   1                       PARAM REG1
RLIST    EQU   2                       INPUT PARAMETER REG
RPARM    EQU   3                       PARAMETER LIST REG
RGTMCB   EQU   4                       GTMCB REG
RATL     EQU   5                       ATTENTION LEVEL
SPARE1   EQU   6                       SPARE REG
RWORKD   EQU   7                       WORK REG D
RDEQ     EQU   8                       DEQUECT REG
RBASE    EQU   9                       BASE REGISTER
RGSPCB   EQU   10                      GSPCB ADR
RD       EQU   10                      WORK REG
RWORKC   EQU   11                      WORK REG C
SPARE2   EQU   12                      RSVD PL1
RSAVE    EQU   13                      SAVE AREA REG
RWORKA   EQU   14                      WORK REG A
RWORKB   EQU   15                      WORK REG B
ADD0     EQU   0                       ADD INFO 0
ADD1     EQU   1                       ADD INFO 1
ADD2     EQU   2                       ADD INFO 2
ADD3     EQU   3                       ADD INFO 3
ADD4     EQU   4                       ADD INFO 4
BPID     EQU   X'01'                   BP ID
CORE     EQU   256                     CORE REQUEST
COUNT    EQU   7                       NUMBER OF DATA ENTRIES
DATSRT   EQU   80                      DATA START
DATSIZE  EQU   24                      DATA ENTRY SIZE
DEQOPT   EQU   X'04'                   DEQUEUE OPTION
DEQ1     EQU   1                       DEQUECT=1
DEQ2     EQU   2                       DEQUECT=2
EIGHT    EQU   8                       EIGHT
EOS      EQU   X'40'                   EOS RESTART BIT
FOUR     EQU   4                       FOUR
GACBOFF  EQU   0                       OFFSET TO GACB
GACBPLUS EQU   8                       OFFSET TO GACB ADDRESS
GTMCBID  EQU   X'02'                   GTMCB ID
HASPFK   EQU   X'10'                   HAS PF KEYBOARD
ID1      EQU   X'F2'                   ID
ID2      EQU   X'04'                   ID
IOK      EQU   X'7F'                   I/O SUCCESSFULL CODE
LAST     EQU   X'80'                   LAST ENTRY IN LIST
LITE     EQU   X'01'                   LIGAT OPTION
LIT2     EQU   X'02'                   OPTION 2
LIT3     EQU   X'03'                   OPTION 3
LP       EQU   X'08'                   LP RESTART BIT
LPRST    EQU   45                      LP RESTART BYTE
OFFSAVE  EQU   8                       SAVE AREA CHAIN
PFK0     EQU   X'80'                   PFK0
PFMSK    EQU   8                       OFFSET TO PFMSK
RCC3     EQU   X'10'                   RETURN CODE 3
RCC4     EQU   X'08'                   RETURN CODE 4
RC3      EQU   12                      OFFSET TO RTN CODE 3
RC4      EQU   16                      OFFSET TO RTN CODE 4
RC5      EQU   X'04'                   I/O ERROR
TWO      EQU   2                       TWO
UPHF     EQU   256                     UPPER HALF OF ATTN LEVEL
ZERO     EQU   0                       ZERO
IFFACA00 CSECT
*2101,471000-528000                                                000A
         SAVE  (14,12)                 SAVE REGISTERS
         BALR  RBASE,0                 SET UP BASE REG
         USING *,RBASE                 DEFINE BASE REG
         LR    RLIST,REG1              SAVE REGISTER
         USING LIST,RLIST              DEFINE INPUT CSECT
         ST    RSAVE,SAVE+4            SAVE-SAVE AREA PTR
         LA    RD,SAVE                 LOAD ADR OF MY SAVE AREA
         ST    RD,OFFSAVE(RSAVE)       STORE IN USER SAVE AREA
         LA    RSAVE,SAVE              ESTABLISH NEW SAVE AREA
         L     RWORKA,RCODE            LOAD RETURN CODE ARRAY ADR
         XC    ZERO(20,RWORKA),ZERO(RWORKA) CLEAR RETURN CODE ARRAY
         B     AROUND                  BRANCH
ERROR    L     RWORKA,RCODE            LOAD RETURN CODE ADR
         STC   RWORKB,ZERO(RWORKA)     STORE RETURN CODE IN ARRAY
         ST    RWORKC,ZERO(RWORKD,RWORKA) STORE ADD INFO AT PROPER
*                                      OFFSET IN ARRAY
OUTRTN   L     RSAVE,SAVE+4            RESTORE OLD SAVE AREA PTR
         RETURN (14,12),T              RETURN TO CALLING PROGRAM
AROUND   L     RPARM,PLIST             LOAD ADR OF PARAM LIST
         USING PARAMS,RPARM            DEFINE DSECT REG
         L     RGTMCB,DEVICE           LOAD INDIRECT ADR OF GTMCB
         L     RGTMCB,ZERO(RGTMCB)     LOAD GTMCB ADR
         USING GTMCB,RGTMCB            DEFINE DSECT REG
         CLI   GTMTERID,GTMCBID        TEST TO SEE IF VALID GTMCB
         BE    CR01                    BRANCH IF VALID
CR02     LA    RWORKC,ADD1             LOAD ADD INFO CODE
CR03     LA    RWORKB,RCC4             LOAD RETURN CODE
         LA    RWORKD,RC4              LOAD OFFSET
         B     ERROR                   BRANCH
CR01     L     RWORKA,GTMGTMCB         LOAD ADR FLD
         CLR   RWORKA,RGTMCB           HAS GTMCB BEEN INITIALIZED
         BNE   CR02                    BRANCH IF NO
         L     RGSPCB,GTMGSPCB         LOAD ADR OF GSPCB
         USING GSPCB,RGSPCB            DEFINE DSECT
         TM    DEVICE,LAST             IS THIS THE LAST PARAMETER
         BC    14,CR04                 BRANCH IF NO
CR05     LA    RWORKC,ADD0             LOAD ADD INFO
         B     CR03                    BRANCH
CR04     L     RWORKA,GSPNULLV         LOAD ADR OF NULL
         L     RWORKB,ATTNL            LOAD ATTNLEVEL PARAM
         LA    RWORKB,ZERO(RWORKB)     ZERO HI ORDER BYTE
         CLR   RWORKA,RWORKB           IS IT ADR OF NULL
         BE    CR05                    BRANCH IF YES
         LTR   RWORKB,RWORKB           VALUE=0
         BC    8,CR05                  BRANCH IF YES
         TM    ATTNL,LAST              IS THIS LAST PARAM
         BC    14,CR06                 BRANCH IF NO
CR07     LA    RDEQ,DEQ1               ASSUME DEQUECT OF 1
         B     CR08                    BRANCH
CR06     L     RDEQ,DEQUECT            LOAD INDIRECT ADR OF DEQUECT
         LA    RDEQ,ZERO(RDEQ)         ZERO HI ORDER BYTE
         CLR   RWORKA,RDEQ             EQUAL ADR OF NULL
         BE    CR07                    BRANCH IF YES
         L     RDEQ,ZERO(RDEQ)         LOAD DEQUECT PARAMETER
         LA    RWORKA,DEQ1             LOAD CONSTANT
         CLR   RDEQ,RWORKA             DEQUECT=1
         BE    CR08                    BRANCH IF YES
         LA    RWORKA,DEQ2             LOAD CONSTANT
         CLR   RWORKA,RDEQ             DEQUECT#2
         BE    CR08                    BRANCH IF YES
         LA    RWORKC,ADD3             LOAD ADD INFO CODE
         B     CR03                    BRANCH
CR08     XC    MAINCORE(20),MAINCORE   CLEAR PARAMETER LIST AREA
         LA    REG1,MAINCORE           LOAD ADR OF PARAMETER LIST
         LA    RWORKC,CORE             LOAD BYTE REQUEST
         LA    RWORKD,ADDRESS          LOAD LOC TO PUT ADR OF CORE
         GETMAIN EC,LV=(11),A=(7),MF=(E,(1))
         LTR   RWORKB,RWORKB           WAS CORE REQUEST SATISFIED
         BC    8,CR09                  BRANCH IF YES
         LA    RWORKB,RCC3             LOAD RETURN CODE
         LA    RWORKC,ADD4             LOAD ADD INFO
         LA    RWORKD,RC3              LOAD OFFSET
         B     ERROR                   BRANCH
CR09     CLC   GTMLATBL(4),ZERO1       IS THERE AN ACTIVE LEVEL
         BE    CR10                    BRANCH IF NO
CR12     EQU   *                                                   000A
         XC    LFORM(64),LFORM                                     000A
         L     RWORKA,GTMGACBA                                     000A
         LA    RWORKA,GACBPLUS(RWORKA)                             000A
         L     RWORKD,ZERO(RWORKA)                                 000A
         LA    RWORKB,COM                                          000A
         ST    RWORKB,ZERO(RWORKA)                                000A
         LR    SPARE1,RWORKA                                       000A
         ATTNINQ (6),MODE=(C,CR11),TYP=ANY,MF=(E,LFORM)           000A
         L     RWORKA,GTMGACBA         LOAD GACB ADR
         LA    RWORKA,GACBPLUS(RWORKA) LOAD PTR TO TRUE START OF GACB
         ST    RWORKD,ZERO(RWORKA)     RESTORE OLD COMMAREA
         B     CR10                    BRANCH
CR11     L     RATL,GTMLATBL           LOAD ATTN LEVEL ADR
         USING  ATTNLEVL,RATL          DEFINE DSECT
         CLC   ATTNAVAL(4),ZERO1       ANY ENTRY BLOCKS AVAILABLE
         BNE   CR13                    BRANCH IF YES
         B     CR12                    BRANCH
CR13     L     RWORKA,ATTNAVAL         LOAD AVAILABLE ENTRY ADDRESS
         MVC   ATTNAVAL(4),ZERO(RWORKA) UPDATE CHAIN
         MVC   EIGHT(12,RWORKA),COM    MOVE DATA TO ENTRY
         CLC   ATTNMLEN(4),ZERO1       ANY ENTRIES NOW ON QUEUE
         BNE   CR21                    BRANCH IF ENTRIES ON QUEUE
         MVC   ZERO(4,RWORKA),ATTNMLEN UPDATE
         ST    RWORKA,ATTNMLEN         CHAIN
         B     CR12                    BRANCH
CR21     L     REG1,ATTNMLEN           LOAD ADR OF 1ST ENTRY
CR23     CLC   ZERO(4,REG1),ZERO1      IS THIS LAST ENTRY
         BE    CR22                    BRANCH IF LAST ENTRY
         L     REG1,ZERO(REG1)         LOAD ADR OF NEXT ENTRY
         B     CR23                    BRANCH
CR22     ST    RWORKA,ZERO(REG1)       ADD ENTRY TO LIST
         XC    ZERO(4,RWORKA),ZERO(RWORKA) INDICATE LAST ENTRY
         B     CR12                    BRANCH
CR10     L     RWORKA,GTMGACBA         LOAD ML GACB ADR
         LA    RWORKA,GACBPLUS(RWORKA) LOAD PTR TO TRUE START OF GACB
         SAEC  PFKMSK=NULL,ATTNTYP=NULL,RESTART=YES,MF=(E,(14))
         L     RWORKA,GTMGACBA         LOAD ADR OF ML GACB
         L     RWORKA,GACBOFF(RWORKA)  LOAD ADR OF DE GACB
         LA    RWORKA,GACBPLUS(RWORKA) LOAD PTR TO TRUE START OF GACB
         SAEC  PFKMSK=NULL,ATTNTYP=NULL,RESTART=YES,MF=(E,(14))
         L     RATL,ADDRESS            LOAD ADR OF GOTTEN CORE
         XC    ZERO(256,RATL),ZERO(RATL) CLEAR
         LA    RWORKC,COUNT            LOAD LOOP COUNT
         LA    RWORKD,DATSRT(RATL)     LOAD ADR OF FIRST ENTRY
CR14     MVC   ZERO(4,RWORKD),ATTNAVAL PLACE ENTRY-
         ST    RWORKD,ATTNAVAL         ON CHAIN
         LA    RWORKD,DATSIZE(RWORKD)  LOAD ADR OF NEXT ENTRY
         BCT   RWORKC,CR14             BRANCH IF MORE TO CREATE
         MVI   ATTNLVID,ID1            MOVE IN ID
         MVI   ATTNLVID+1,ID2          MOVE IN ID
         MVI   ATTNLITE,LITE           MOVE IN LIGHT OPTION
         OI    ATTNFLGA,LP+EOS         SET RESTART OPTIONS=YES
         LA    RWORKA,TWO              LOAD CONSTANT
         CLR   RDEQ,RWORKA             DEQUECT=2
         BNE   CR15                    BRANCH IF NO
         OI    ATTNFLGA,DEQOPT         SET DEQUECT OPTION
CR15     L     RWORKA,ATTNL            LOAD LOC TO PLACE ATNLVL ADR
         LA    RWORKA,ZERO(RWORKA)     ZERO HIGH ORDER BYTE
         ST    RATL,ZERO(RWORKA)       STORE ATLVL ADR IN USER AREA
         CLC   GTMLATBL(4),ZERO1       ANY LEVELS EXIST
         BNE   CR16                    BRANCH IF YES
         ST    RGTMCB,ATTNBKPT         GTMCB ADR TO BP
         ST    RATL,GTMLATBL           ADR OF LEVEL TO GTMCB
         OI    ATTNBPID,BPID           INDICATE POINTS TO GTMCB
         B     CR17                    BRANCH
CR16     L     RWORKA,GTMLATBL         LOAD ADR OF PRES ACT LEVEL
         ST    RATL,ZERO(RWORKA)       ADR OF NEW TO FP OF OLD
         ST    RWORKA,ATTNBKPT         ADR OF OLD TO BP OF NEW
         ST    RATL,GTMLATBL           ADR OF NEW TO GTMCB
CR17     XC    DECB(36),DECB           CLEAR I/O AREA
         TM    GTMFEATS+1,HASPFK       DOES DEVICE HAVE A PF KEYBOARD
         BC    14,OUTRTN               BRANCH-NO KEYBOARD
         CLI   GTMLIGHT,LIT2           OPTION 2
         BNE   CR18                    BRANCH IF NO
         B     CR20                    BRANCH
CR18     CLI   GTMLIGHT,LIT3           OPTION 3
         BNE   CR19                    BRANCH IF NO
         MVC   DATA(4),ATTNPFEN        MOVE IN ENABLED KEYS
         B     CR20                    BRANCH
CR19     MVC   DATA(4),GTMPFKSS        MOVE IN LIGHT MASK
CR20     LA    REG1,DECB               LOAD DECB ADR
         LA    RWORKC,DATA             LOAD DATA ADR
         L     RWORKD,GTMGRDCB         LOAD DCB ADR
         GCNTRL (1),IND,(7),(11),MF=E
         WAIT  ECB=(1)
         CLI   DECB,IOK                I/O SUCCESSFULL
         BE    OUTRTN                  BRANCH-I/O OK
         L     RD,RCODE                LOAD RTN CODE ARRAY ADR
         OI    ZERO(RD),RC5            INDICATE I/O ERROR
         B     OUTRTN                  BRANCH
ZERO1    DC    1F'0'                   ZERO
         CNOP  0,8
         COPY  ATTNLEVL
         COPY  GSPCB
         COPY  GTMCB
         COPY  GDSCB
LIST     DSECT
PLIST    DS    1F                      ADDRESS OF PARAM LIST
RCODE    DS    1F                      ADDRESS OF RETURN CODE ARRAY
SAVE     DS    18F                     SAVE AREA
DECB     DS    8F                      I/O DECB
DATA     DS    1F                      DATA AREA FOR I/O
MAINCORE DS    4F                      GETMAIN PARAM LIST AREA
ADDRESS  DS    1F                      LOCATION TO PUT ADR OF GOTTEN
GACB     DS    1F
TYPE     DS    BL1
OPT      DS    BL1
TYP      DS    1H
BRANCH   DS    1F
COM      DS    3F
LFORM    DS    16F                                                 000A
PARAMS   DSECT
DEVICE   DS    1F                      GTMCB
ATTNL    DS    1F                      ATTN LEVEL
DEQUECT  DS    1F                      DEQUECT
         END
