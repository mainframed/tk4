*TITLE         BGSEQ/BGSUB
*
*ENTRY POINT   IFFAFA05/IFFAFA18
*
*INPUT         IN REGISTER 1 THE ADDRESS OF A WORK AREA
*                 IN THE FIRST WORD OF THE WORK AREA THE ADDRESS OF A
*                 VARIABLE LENGTH PARAMETER LIST.
*                    +0  A(GDSCB)
*                    +4  A(CORRVAL)    OPTIONAL   EITHER CORRVAL OR
*                    +8  A(KEY)        OPTIONAL   KEY MUST BE SPECIFIED
*                    +12 A(GENCODE)    OPTIONAL   CANNOT BE 3
*
*OUTPUT        A KEY IF THE KEY PARAMETE WAS SPECIFIED. NOTE THAT THIS
*              KEY IS VALID ONLY UNTIL ENSEQ IS CALLED.
*
*FUNCTION      TO CREATE THE STRUCTURE NECESSARY TO FORM SUCCEEDING
*              ELEMENTS INTO A SEQUENCE, A SEQUENCE IS A GROUP OF
*              ELEMENTS IDENTIFIABLE AS AN ENTITY. ALL ELEMENTS CREATED
*              BETWEEN THE CALLS TO BGSEQ AND ENSEQ (FOR THE SAME GDS)
*              FORM THE SEQUENCE.
*
*EXIT          TO CALLER WITH RETURN ARRAY SET
*
         EJECT
IFFAFA05 CSECT
*2023,538000,542000,546000-556000                                  000A
*
*ENTRY TO BGSEQ. SAVE REGISTERS AND SET SWITCH TO REMEMBER ENTRY POINT.
*
         ENTRY IFFAFA18
         USING *,R15
         SAVE  (14,12)
         SR    R0,R0                   INDICATE ENTRY AT BEGSEQ
         B     BEGLPB2
         DROP  R15
*
*ENTRY TO BGSUB. SAVE REGISTERS AND SET SWITCH TO REMEMBER ENTRY POINT.
*
         USING *,R15
IFFAFA18 SAVE  (14,12)
         LA    R0,N1                   INDICATE ENTRY AT BEGSUB
         DROP  R15
*
*PERFORM NORMAL HOUSEKEEPING AND INITIALIZATION FUNCTIONS - CHAIN SAVE
*AREAS, ESTABLISH ADDRESSABILITIES, ZERO FIELDS, ETC.
*
BEGLPB2  BALR  R9,R0
         USING *,R9
         L     R2,N0(R1)               GET PLIST ADDR
         L     R3,N4(R1)               GET GSPARRAY ADDR
         LA    R10,0(R1)               GET WORK AREA ADDR
         USING BEGWRK,R10              WORK AREA ADDRESSABILITY
         ST    R13,BEGSAVE+4           CHAIN SAVE AREAS
         LA    R4,BEGSAVE
         ST    R4,N8(R13)
         LR    R13,R4                  SET SAVE AREA REG
         L     R8,N0(R2)               GET GDSCB PTR
         L     R8,N0(R8)               GET GDSCB ADDR
         USING GDSCB,R8
         L     R7,GDSGTMCB             GET GTMCB ADDR
         USING GTMCB,R7                GTMCB ADDRESSABILITY
         XC    KEY(N12),KEY            ZERO KEY
         XC    N0(N20,R3),N0(R3)       ZERO GSPARRAY
         XC    GDSKEYSV(2),GDSKEYSV    ZERO KEYSV AREA IN GDSCB
         XC    PARMS(16),PARMS         ZERO NEW PARAMETER LIST
         NI    GDSGRMOD,X'00'          SET CURRENT MODE DEVICE FLAG
*
*TEST FOR CONTROL BLOCK VALIDITY. IF GDS IS UNOPEN OR INVALID THE
*GSPARRAY IS SET TO INDICATE THE ERROR.
*
         CLC   GDSVALID(2),GDSID       IS GDS VALID
         BE    BEGLPD2                 YES
         MVI   19(R3),X'01'            ERROR - GDS NOT OPEN
BEGLPC3  MVI   N0(R3),X'08'            INDICATE PARAM ERROR
         B     BEGPGF3B
*
*A SEQUENCE/SUBROUTINE CAN NOT APPEAR WITHIN ANOTHER SEQUENCE OR
*SUBROUTINE. TEST FOR AN ATTEMPT TO NEST SEQUENCES/SUBROUTINES. IF A
*PREVIOUS SEQUENCE OR SUBROUTINE HAS BEEN STARTED BUT NOT ENDED SET
*THE GSPARRAY TO INDICATE THE ERROR.
*
BEGLPD2  TM    GDSFLAGS,X'06'          HAS A SEQ/SUBRTN BEEN BEGUN
         BC    5,BEGLPC3               YES
*
*A SUBROUTINE IS VALID ONLY WITH A 2250 MOD 3. IF BGSUB WAS CALLED AND
*A MOD 3 HAS NOT BEEN INDICATED THE GSPARRAY IS SET TO INDICATE THE
*ERROR.
*
BEGLPE2  LTR   R0,R0                   WAS BEGSUB CALLED
         BZ    BEGLPF2                 NO
         TM    GTMFEATS,X'03'          WAS MOD 3 SPECIFIED
         BM    BEGLPC3                 NO
         OI    GDSFLAGS,X'02'          INDICATE SUBRTN BEGUN
         B     BEGLPH2
*
*A SEQUENCE IS NOT VALID UNDER LEVEL 2 SUPPORT. IF SEQUENCE, LEVEL 2
*THE GSPARRAY IS SET TO INDICATE THE ERROR.
*
BEGLPF2  TM    GDSFLAGS,X'10'          WAS LEVEL 2 SUPPORT REQUESTED
         BO    BEGLPC3                 YES
         OI    GDSFLAGS,X'04'          INDICATE SEQUENCE BEGUN
*
*REFORM PARAMETER LIST - UNUSED PARAMETERS BECOME ZERO
*
BEGLPH2  LA    R5,PARMS                GET NEW PLIST ADDR
BEGLPH2A TM    0(R2),X'80'             HAS LAST PARAM BEEN CHECKED
         BO    BEGLPH2C
         CLC   0(4,R2),20(R3)          HAS NULL VAR REPLACED PARAM
         BE    BEGLPH2B                YES
         MVC   0(4,R5),0(R2)           TRANSFER PARAMETER
BEGLPH2B AH    R2,C4                   INCREMENT PLIST POINTERS
         AH    R5,C4
         B     BEGLPH2A
BEGLPH2C CLC   1(3,R2),21(R3)          HAS NULL VAR REPLACED PARAM
         BE    BEGLPH3                 YES
         MVC   1(3,R5),1(R2)           TRANSFER PARAMETER
*
*IF THE SEQUENCE OR SUBROUTINE IS CORRELATED PUT THE CORRELATION VALUE
*IN THE KEY.
*
BEGLPH3  CLC   PARMS+4(4),ZERO         WAS CORVAL SPECIFIED
         BNE   BEGLQC3                 YES
         OI    GDSFLAGS,X'40'          INDICATE BGSEQ/BGSUB NOT CORLATD
         B     BEGLQE3
BEGLQC3  L     R4,PARMS+4              GET CORVAL ADDR
         L     R5,0(R4)                GET CORVAL
         ST    R5,KEY+8                PUT CORVAL IN KEY
BEGLQE3  LA    R4,KEY                  GET KEY ADDR
         ST    R4,KEYPARMS+8           PUT KEY ADDR IN KEY TBL PLIST
*
*SET KEY FLAGS TO INDICATE MULTIPLE ELEMENTS AND TEST GENCODE FOR
*INCLUDE OR OMIT STATUS.
*
         OI    KEY+4,X'80'             INDICATE MULTIPLE
         CLC   PARMS+12(4),ZERO        WAS A GENCODE SPECIFIED
         BE    BEGLQH2                 NO
         L     R5,PARMS+12             GET GENCODE ADDR
         L     R5,N0(R5)               GET GENCODE
         CH    R5,C2                   IS OMIT STATUS REQUESTED
         BE    BEGLQG4                 YES
         CH    R5,C1                   IS INCLUDE STATUS REQUESTED
         BNE   BEGLPC3                 NO
BEGLQH2  OI    KEY+4,X'04'             SET KEY FLAG TO INDICATE INCLUDE
         B     BEGLQJ4
*
*UNDER LEVEL 2 A SUBROUTINE MUST BE GENERATED IN INCLUDE STATUS.
*OTHERWISE THE GSPARRAY IS SET TO INDICATE THE ERROR.
*
BEGLQG4  TM    GDSFLAGS,X'10'          WAS LEVEL 2 SUPPORT REQUESTED
         BO    BEGLPC3                 YES
         NI    KEY+4,X'FB'             SET KEY FLAG TO INDICATE OMIT
BEGLQJ4  LTR   R0,R0                   WAS BEGSEQ CALLED
         BZ    BEGPGB1                 YES
*
*CONSTRUCT ORDERS NEEDED TO FORM A BUFFER SUBROUTINE.
*
         MVC   DATSTOR+8(18),SUBCONST  START DATA STORE PLIST
         TM    KEY+4,X'04'             IS INCLUDE STATUS REQUESTED
         BO    BEGPGA2                 YES
         LH    R4,GTRU
         STH   R4,DATSTOR+20
         B     BEGPGD2
BEGPGA2  LH    R4,GNOP4
         STH   R4,DATSTOR+20           CHANGE GTRU TO GNOP
         B     BEGPGD2
*
*CONSTRUCT ORDERS NEEDED TO FORM A SEQUENCE.
*
BEGPGB1  MVC   DATSTOR+8(N8),SEQCONST  START DATA STORE PLIST
         TM    N4(R4),X'04'            IS INCLUDE STATUS REQUESTED
         BO    BEGPGB2                 YES
         LH    R4,GTRU
         STH   R4,DATSTOR+12
         B     BEGPGD2
BEGPGB2  LH    R4,GNOP4
         LH    R4,GNOP4
         STH   R4,DATSTOR+12           CHANGE GTRU TO GNOP
*
*BUILD DATA STORE PARAMETER LIST
*
BEGPGD2  ST    R8,DATSTOR              COMPLETE DATA STORE PLIST
         ST    R3,DATSTOR+4
         MVC   DATSTOR+14(2),GDSOVDAT+2  TRANSFER TO FLOW CONTROL
*
*INVOKE DATA STORE. THE DATA STORE ROUTINE IS USED TO PUT THE SEQUENCE
*OR SUBROUTINE STRUCTURE IN THE GDOA.
*
         L     R5,N24(R3)              GET STATUS TABLE ADDR
         L     R15,DATDISP(R5)         GET RTN EP ADDR
         LA    R1,DATSTOR              GET PLIST ADDR
         BALR  R14,R15                 LINK WITH DATA STORE RTN
         LTR   R15,R15                 WAS DATA STORE SUCCESSFUL
         BP    BEGPGF3B                NO
*
*SETUP TEMPORARY KEY FOR USE UNTIL ENSEQ IS CALLED.
*
         LTR   R0,R0                   WAS BGSUB CALLED
         BZ    BEGPGD2A                NO
         LA    R5,14                   LENGTH OF SUBRTN STRUCTURE
         B     BEGPGD2B
BEGPGD2A LA    R5,4                    LENGTH OF SEQUENCE STRUCTURE
BEGPGD2B L     R4,GDSAOACB             GET OACB ADDR
         L     R4,52(R4)               GET LOG ORDER LOAD POINT
         SR    R4,R5                   COMPUTE LOG BFR START ADDR
         STH   R4,KEY+2                PUT LOG BFR START ADDR IN KEY
         STH   R4,GDSKEYSV             PUT LOG BFR START ADDR IN GDSCB
         SR    R4,R4
         STH   R4,KEY                  SETUP DUMMY KEY
*
*SET KEY FLAG TO INDICATE SEQUENCE OR SUBROUTINE
*
         OI    KEY+4,X'80'             SET KEY LAG TO MULTIPLE
         LTR   R0,R0                   WAS BEGSEQ CALLED
         BZ    BEGPGE2A                YES
         OI    KEY+4,X'28'             SET KEY FLAG TO BFR SUBRTN
         B     BEGPGF2
BEGPGE2A OI    KEY+4,X'20'             SET KEY FLAG TO SEQUENCE
*
*IF LEVEL 2 KEYS ARE NOT MAINTAINED BY GSP.
*
BEGPGF2  TM    GDSFLAGS,X'10'          WAS LEVEL 2 SUPPORT REQUESTED
         BO    BEGPGF3A                YES
*
*BUILD KEY TABLE MANAGEMENT PARAMETER LIST.
*
         ST    R8,KEYPARMS             PUT GDSCB ADDR IN KEY TBL PLIST
         LA    R4,KEYCODE1
         ST    R4,KEYPARMS+4           PUT CODE ADDR IN KEY TBL PLIST
*
*INVOKE KEY TABLE MGMT
*
         L     R4,N24(R3)              GET STATUS TABLE ADDR
         L     R15,KEYDISP(R4)         GET RTN EP ADDR
         LTR   R15,R15                 IS RTN IN CORE
         BZ    BEGLPC3             NO-ERROR                        000A
BEGPGG2A LA    R1,KEYPARMS             GET KEY TBL MGMT PLIST
         BALR  R14,R15             BRANCH TO KEY TABLE MGMT        000A
         B     BEGPGG2D
BEGPGG2D LTR   R15,R15                 WAS KEY TBL MGMT SUCCESSFUL
         BP    BEGPGG2E                NO
*
*IF KEY PARAMETER WAS SPECIFIED RETURN KEY TO USER, OTHERWISE JUST
*RETURN.
BEGPGF3A CLC   PARMS+8(4),ZERO         WAS KEY SPECIFIED
         BE    BEGPGF3                 NO
         L     R4,PARMS+8              GET KEY RETURN WORD ADDR
         MVC   0(4,R4),KEY             RETURN KEY
         B     BEGPGF3
BEGPGG2E LA    R4,2
         ST    R4,N16(R3)              ERROR - KEY NOT ADDED
BEGPGF3B NI    GDSFLAGS,X'B9'          ERROR RETUEN - RESET SWITCHES
BEGPGF3  L     R13,BEGSAVE+4
         RETURN (14,12),T
*
*CONSTANTS AND WORK AREAS
*
SUBCONST DC    X'1400000E'
         GINIT
         GTRU  0
         GTRU  0
         GTRU  0
         GDRD
SEQCONST DC    X'01000004'
         GINIT
         GTRU  0
N0       EQU   0
N1       EQU   1
N2       EQU   2
N3       EQU   3
N4       EQU   4
N5       EQU   5
N8       EQU   8
N9       EQU   9
N12      EQU   12
N13      EQU   13
N16      EQU   16
N20      EQU   20
N21      EQU   21
N24      EQU   24
DATDISP  EQU   852
KEYDISP  EQU   828
CVTLINK  EQU   8
ZERO     DC    F'0'
KEYCODE1 DC    F'1'
C4       DC    H'4'
GDSID    DC    X'F203'
GNOP4    DC    X'2AC0'
GTRU     DC    X'2AFF'
C1       DC    H'1'
C2       DC    H'2'
BEGWRK   DSECT
BEGSAVE  DS    18F
PARMS    DS    4F
KEYPARMS DS    10F
KEY      DS    3F
SUPPLIST DS    12F
DATSTOR  DS    12F
*
*REGISTER UTILIZATION
*
R0       EQU   0        BEGSEQ/BEGSUB SWITCH
R1       EQU   1        PLIST
R2       EQU   2        USER PLIST
R3       EQU   3        GSPARRAY
R4       EQU   4        WORK
R5       EQU   5        WORK
R6       EQU   6        GENCODE SWITCH
R7       EQU   7        GTMCB DSECT
R8       EQU   8        GDSCB DSECT
R9       EQU   9        BASE
R10      EQU   10       WORK DSECT
R11      EQU   11       SUBRTN LEVEL 2 SWITCH
R13      EQU   13       SAVE
R14      EQU   14
R15      EQU   15       BRANCH
         COPY  GDSCB
         COPY  GTMCB
         END
