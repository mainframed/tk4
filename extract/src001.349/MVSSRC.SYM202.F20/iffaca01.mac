* TITLE:ENATL-END AN ATTENTION LEVEL
* STATUS:CHANGE LEVEL 0
* FUNCTION:TO TERMINATE THE SPECIFIED ATTENTION LEVEL AND ANY OTHER
*          ATTENTION LEVEL(S) LOWER IN THE HIERARCHY FOR ITS GTMCB,
*          MAKING THE NEXT HIGHER REMAINING ATTENTION LEVEL,IF ANY,
*          ACTIVE.
*          TO TERMINATE ALL ATTENTION LEVEL(S) LOWER IN THE HIERARCHY
*          FOR ITS GTMCB THAN THE SPECIFIED ATTENTION LEVEL,MAKING THE
*          SPECIFIED ATTENTION LEVEL ACTIVE.
* ENTRY:ENTERED AT IFFACA01 VIA A CALL TO ENATL.
* INPUT:GR#1 CONTAINS THE ADDRESS OF A WORK/SAVE AREA.THE FIRST WORD
*       CONTAINS THE ADDRESS OF A PARAMETER LIST CONSTRUCTED AS FOLLOWS
*         1.ATTNLEVEL-ADDRESS OF A VARIABLE WHICH CONTAINS THE ADDRESS
*           OF THE ATTENTION LEVEL.
*         2.RANGECODE-ADDRESS OF A VALUE INDICATING :
*           A. 1-TERMINATE SPECIFIED AND ALL LOWER (ASSUMED IF OMITTED)
*           B. 2-TERMINATE ALL LOWER
* OUTPUT:ATTENTION LEVEL(S) AND QUEUE(S) DELETED.
* EXIT:RETURN TO CALLING PROGRAM.
* RETURN CODES:4,1 ATTNLEVEL DID NOT REFER TO A VALID OR EXISTING
*                  ATTENTION LEVEL.
*              4,2 RANGE CODE INVALID
*              0,0 SUCCESSFULL EXECUTION
* ATTRIBUTES:RE-ENTRANT,PROBLEM PROGRAM MODE
* NOTES:THE FOLLOWING CONTROL BLOCKS ARE EXAMINED BY THIS ROUTINE:
*       1.GTMCB
*       2.GSPCB
* EXTERNAL ROUTINES:ATTNINQ
*                   GIOCR
R0       EQU   0                       PARM REG 0
R1       EQU   1                       PARM REG 1
RPARAM   EQU   2                       WORK AREA ADR
RLIST    EQU   3                       USER PARAM LIST
RATL     EQU   4                       ATTN LEVEL REG
RGTMCB   EQU   5                       GTMCB REG
RET      EQU   6                       INTERVAL RETURN
SPARE1   EQU   7                       SPARE REG 1
RC       EQU   8                       WORK REG
RBASE    EQU   9                       BASE REG
RA       EQU   10                      WORK REG
RB       EQU   11                      WORK REG
SPARE2   EQU   12                      RSVD PL1
RSAVE    EQU   13                      SAVE AREA PTR
RD       EQU   14                      WORK REG
RE       EQU   15                      WORK REG
ADD1     EQU   1                       ADD INFO 1
ADD2     EQU   2                       ADD INFO 2
AN       EQU   12                      OFFSET TO A/N MASK
ATLID    EQU   X'04'                   ATN LEVEL ID
ATLV     EQU   256                     SIZE OF ATTN LEVEL
BPID     EQU   X'01'                   BACK PTR ID
DERB     EQU   32                      SIZE OF DERB
GACBOFF  EQU   8                       OFFSET TO GACB
HASPFK   EQU   X'10'                   HAS PF KEYBOARD
IOK      EQU   X'7F'                   I/O SUCCESSFULL CODE
LAST     EQU   X'80'                   LAST PARAM
LIT1     EQU   X'01'                   OPTION 1
LIT2     EQU   X'02'                   OPTION 2
LIT3     EQU   X'03'                   OPTION 3
LP       EQU   X'01'                   RESTART=YES
LPSTRT   EQU   X'08'                   LP RESTART OPTION
NEXT     EQU   0                       NEXT GACB ADR
OFFSAVE  EQU   8                       SAVE AREA CHAIN
PF       EQU   8                       OFFSET TO PF MASK
PFK0     EQU   X'80'                   PFK0 BIT
RCC4     EQU   X'08'                   RETURN CODE 4
RC4      EQU   16                      OFFSET TO RC 4
RC5      EQU   X'04'                   I/O ERROR
START    EQU   45                      OFFSET TO START BIT
ZERO     EQU   0                       ZERO
IFFACA01 CSECT
*2101,645000-687000                                                000A
         SAVE  (14,12)                 SAVE REGS
         BALR  RBASE,0                 SET UP BASE REG
         USING *,RBASE                 DEFINE BASE REG
         LR    RPARAM,R1               SAVE WORK AREA ADR
         USING WORKAREA,RPARAM         DEFINE DSECT
         L     RLIST,PLIST             LOAD ADR OF USER PARM LIST
         USING PARAM,RLIST             DEFINE DSECT
         ST    RSAVE,SAVE+4            SAVE-SAVE AREA PTR
         LA    RD,SAVE                 LOAD ADR OF MY SAVE AREA
         ST    RD,OFFSAVE(RSAVE)       STORE IN USER SAVE AREA
         LA    RSAVE,SAVE              ESTABLISH NEW SAVE AREA
         L     RA,RTNARAY              LOAD RTN CODE ARRAY ADR
         XC    ZERO(20,RA),ZERO(RA)    INITIALIZE RTN CODE ARRAY
         B     AROUND                  BRANCH
ERROR    L     RA,RTNARAY              LOAD RTN CODE ARRAY ADR
         STC   RB,ZERO(RA)             STORE RETURN CODE
         ST    RC,ZERO(RD,RA)          STORE ADD INFO AT PROPER OFFSET
OUTRTN   L     RSAVE,SAVE+4            RESTORE OLD SAVE AREA PTR
         RETURN (14,12),T              RETURN TO CALLING PROGRAM
AROUND   L     RATL,ATNLVL             LOAD PTR TO ATLCB ADR
         LA    RATL,ZERO(RATL)         ZERO HI ORDER BYTE
         L     RATL,ZERO(RATL)         LOAD ATLCB ADR
         USING ATTNLEVL,RATL           DEFINE DSECT
         CLI   ATTNLVID+1,ATLID        IS THIS A VALID ATLCB
         BE    END01                   BRANCH IF VALID
         LA    RC,ADD1                 LOAD ADD INFO CODE
END02    LA    RB,RCC4                 LOAD RETURN CODE
         LA    RD,RC4                  LOAD OFFSET TO RETURN CODE
         B     ERROR                   BRANCH
END01    LR    RE,RATL                 SAVE REG
END04    CLI   ATTNBPID,BPID           LEVEL POINT TO GTMCB
         BE    END03                   BRANCH IF YES
         L     RATL,ATTNBKPT           LOAD ADR OF NEXT LEVEL
         B     END04                   BRANCH
END03    L     RGTMCB,ATTNBKPT         LOAD GTMCB ADR
         USING GTMCB,RGTMCB            DEFINE DSECT
         LR    RATL,RE                 RESTORE REGISTER
         L     RA,GTMGSPCB             LOAD GSPCB ADR
         USING GSPCB,RA                DEFINE DESECT
         TM    ATNLVL,LAST             IS THIS LAST PARAM
         BC    1,END05                 BRANCH IF YES
         L     RE,RANGECDE             LOAD RANGE CODE PARAM ADR
         LA    RE,ZERO(RE)             ZERO HI ORDER BYTE
         CL    RE,GSPNULLV             IS RANGE CODE ADR OF NULL
         BE    END05                   BRANCH IF YES
         L     RE,ZERO(RE)             LOAD RANGE CODE PARAM
         CL    RE,ONE                  RANGE CODE=1
         BE    END05                   BRANCH IF YES
         CL    RE,TWO                  RANGE CODE=2
         BE    END06                   BRANCH IF YES
         LA    RC,ADD2                 LOAD ADD INFO CODE
         B     END02                   BRANCH
END06    CLC   ATTNFWPT(4),ZERO1       ATLCB FP=0
         BNE   END07                   BRANCH IF NO
         SR    RC,RC                   ADD INFO=0
         B     END02                   BRANCH
END07    L     RA,GTMGACBA             LOAD GACB ADR
         LA    RB,GACBOFF(RA)          LOAD PTR TO START OF GACB
         LR    RC,RB                   LOAD REG
         LA    RET,END19               LOAD RET ADR
         B     END20                   BRANCH
END19    EQU   *
         SAEC  PFKMSK=NULL,ATTNTYP=NULL,RESTART=NO,MF=(E,(11))
         L     RA,NEXT(RA)             LOAD ADR OF NEXT GACB
         LA    RB,GACBOFF(RA)          LOAD PTR TO START OF GACB
         SAEC  PFKMSK=NULL,ATTNTYP=NULL,RESTART=NO,MF=(E,(11))
         ST    RATL,GTMLATBL           PUT ADR OF NEW ACTIVE LEVEL
*                                      IN GTMCB
         L     RA,ATTNFWPT             SAVE ADR OF 1ST LEVEL TO FREE
         XC    ATTNFWPT(4),ATTNFWPT    INDICATE LEVEL NOW ACTIVE
         B     END08                   BRANCH
END05    L     RB,GTMGACBA             LOAD GACB ADR
         LA    RC,GACBOFF(RB)          LOAD START ADR OF GACB
         LA    RET,END21               LOAD RETN ADR
         B     END20                   BRANCH
END21    EQU   *
         SAEC  PFKMSK=NULL,ATTNTYP=NULL,RESTART=NO,MF=(E,(8))
         L     RB,NEXT(RB)             LOAD ADR OF NEXT GACB
         LA    RC,GACBOFF(RB)          LOAD START ADR OF GACB
         SAEC  PFKMSK=NULL,ATTNTYP=NULL,RESTART=NO,MF=(E,(8))
         CLI   ATTNBPID,BPID      LEVEL POINT TO GTMCB
         BE    END09              BRANCH IF YES
         MVC   GTMLATBL(4),ATTNBKPT ESTABLISH NEW ACTIVE LEVEL
         LR    RA,RATL            SAVE ADR OF 1ST LEVEL TO FREE
         L     RATL,ATTNBKPT      LOAD ADR OF NEW ACTIVE LEVEL
         XC    ATTNFWPT(4),ATTNFWPT INDICATE THIS IS ACTIVE LEVEL
         B     END08              BRANCH
END09    XC    GTMLATBL(4),GTMLATBL INDICATE NO ACTIVE LEVELS
         LR    RA,RATL            LOAD ADR OF 1ST LEVEL TO FREE
         XC    DECB(36),DECB      CLEAR I/O AREA
END10    L     RB,GTMGRDCB        LOAD DCB ADR
         LA    RC,DATA            LOAD DATA ADR
         LA    R1,DECB            LOAD PARAM LIST ADR
         LA    RET,END11          LOAD RETURN ADR
         TM    GTMFEATS+1,HASPFK       DOES DEVICE HAVE A PF KEYBOARD
         BC    14,END11A               BRANCH-NO
         GCNTRL (1),IND,(11),(8),MF=E
         WAIT  ECB=(1)
         CLI   DECB,IOK                I/O SUCCESSFULL
         BE    END11A                  BRANCH-I/O OK
         L     R1,RTNARAY              LOAD RTN CODE ARRAY ADR
         OI    ZERO(R1),RC5            INDICATE I/O ERROR
END11A   EQU   *
         BR    RET                RETURN
END08    L     RATL,GTMLATBL      LOAD ADR OF ACTIVE LEVEL
         L     RB,GTMGACBA        LOAD GACB ADR
         LA    RC,GACBOFF(RB)     LOAD GACB START ADR
         MVC   PF(4,RC),ATTNPFEN  MOVE IN ENABLED PF KEYS FOR LEVEL
         MVC   AN(4,RC),ATTNANEN  MOVE IN ENABLED A/N SOURCES FOR LVL
         TM    ATTNFLGA,LPSTRT    RESTART WANTED FOR LP
         BC    14,END12                BRANCH IF NO
         MVI   START(RC),LP            MOVE IN RESTART
END12    L     RB,NEXT(RB)             LOAD NEXT GACB ADR
         LA    RC,GACBOFF(RB)          LOAD GACB START ADR
         MVC   PF(4,RC),ATTNPFDE       MOVE IN ENABLED PF FOR DE
         MVC   AN(4,RC),ATTNANDE       MOVE IN ENABLED A/N FOR DE
         TM    ATTNFLGA,LPSTRT         RESTART WANTED
         BC    14,END13                BRANCH IF NO
         MVI   START(RC),LP            MOVE IN RESTART
END13    XC    DECB(36),DECB           CLEAR I/O AREA
         CLI   ATTNLITE,LIT1           OPTION 1
         BE    END14                   BRANCH IF YES
         CLI   ATTNLITE,LIT2           OPTION 2
         BE    END15                   BRANCH IF YES
         CLI   ATTNLITE,LIT3           OPTION 3
         BE    END16                   BRANCH IF YES
         MVC   DATA(4),ATTNPFLM        MOVE IN LIGHT MASK
         B     END10                   BRANCH
END15    EQU   *
         B     END10                   BRANCH
END16    MVC   DATA(4),ATTNPFEN        MOVE IN ENABLED KEYS
         B     END10                   BRANCH
END14    CLI   GTMLIGHT,LIT2           OPTION 2
         BE    END15                   BRANCH IF YES
         CLI   GTMLIGHT,LIT3           OPTION 3
         BE    END16                   BRANCH IF YES
         MVC   DATA(4),GTMPFKSS        MOVE IN LIGHT MASK
         B     END10                   BRANCH
END11    LR    RATL,RA                 LOAD ADR OF      LEVEL TO FREE
         L     RA,ATTNFWPT             LOAD ADDR OF NEXT LEVEL TO FREE
END18    CLC   ATTNDERB(4),ZERO1       ANY DERBS TO FREE
         BE    END17                   BRANCH IF NO
         L     R1,ATTNDERB             LOAD ADR OF DERB
         MVC   ATTNDERB(4),ZERO(R1)    UPDATE CHAIN
         LA    R0,DERB                 LOAD # OF BYTES TO FREE
         FREEMAIN R,LV=(0),A=(1)
         B     END18                   BRANCH
END17    LR    R1,RATL                 LOAD ADR TO FREE
         LA    R0,ATLV                 LOAD SIZE TO FREE
         FREEMAIN R,LV=(0),A=(1)
         LTR   RA,RA                   ANY MORE LEVELS TO FREE
         BC    7,END11                 BRANCH IF YES
         B     OUTRTN                  BRANCH
END20    EQU   *                                                   000A
         XC    LFORM(64),LFORM          ZERO LIST                  000A
         ATTNINQ (8),MODE=(C,END22),TYP=ANY,MF=(E,LFORM)           000A
         BR    RET                     RETURN
END22    B     END20                   CONTINUE DATA FLUSH
         DS    0F
ZERO1    DC    1F'0'
ONE      DC    A(1)
TWO      DC    A(2)
         CNOP  0,8
         COPY  GSPCB
         COPY  GTMCB
         COPY  ATTNLEVL
PARAM    DSECT
ATNLVL   DS    1F
RANGECDE DS    1F
WORKAREA DSECT
PLIST    DS    1F
RTNARAY  DS    1F
SAVE     DS    18F
DECB     DS    8F
DATA     DS    1F
GACB     DS    1F                      *
TYPE     DS    BL1                     *
OPT      DS    BL1                     ATTNINQ MACRO AREA
TYP      DS    1H
BRANCH   DS    1F                      *
LFORM    DS    16F                                                 000A
         END
