* TITLE:STEOS-SET EOS
* STATUS:CHANGE LEVEL0
* FUNCTION:TO SET AND END ORDER SEQUENCE ORDER INTO THE BUFFER.
* ENTRY:ENTERED AT IFFAFA15 VIA A CALL TO STEOS.
* INPUT:GR#1 CONTAINS THE ADDRESS OF A WORK/SAVE AREA.THE FIRST WORD
*       CONTAINS THE ADDRESS OF A PARAMETER LIST CONSTRUCTED AS FOLLOWS
*       1.GDSNAME-A VARIABLE WHICH CONTAINS THE ADDRESS OF THE GASCB.
*       2.CORVAL-A VARIABLE WHICH CONTAINS A USER CORRELATION VALUE.
*       3.KEY-A VARIABLE INTO WHICH STEOS WILL PLACE A KEY.
*       4.GENCODE-A VARIABLE WHOSE VALUE INDICATES:
*         1-GENERATE IN INCLUDE STATUS
*         2-GENERATE IN OMIT STATUS
* OUTPUT:THE END ORDER SEQUENCE ORDER IS PLACED IN THE BUFFER IN THE
*        STATUS REQUESTED BY GENCODE.THE KEY IS RETURNED TO THE CALLER.
* EXIT:RETURN TO CALLER VIA REGISTER 14.
* RETURN CODES:3,0 NO STORAGE OR NO BUFFER AVAILABLE
*              4,1 INVALID GDSCB
*              4,2 CORVAL IS 0
*              4,4 INVALID GENCODE
*              0,0 SUCCESSFULL
* ATTRIBUTES:RE-ENTRANT,PROBLEM PROGRAM MODE
* EXTERNAL ROUTINES:DATA STORE
*                   KEY MANAGEMENT
*                   RESET
* NOTES:THE FOLLOWING CONTROL BLOCKS ARE EXAMINED BY THIS ROUTINE:
*       1.GDSCB
*       2.GTMCB
*       3.GSPCB
*       4.OACB
R0       EQU   0                       PARM REG 0
R1       EQU   1                       PARM REG 1
RLIST    EQU   2                       WORKAREA REG
RPARM    EQU   3                       USER PARM LIST REG
RGDSCB   EQU   4                       GDSCB ADR REG
RBASE    EQU   9                       BASE REG
RA       EQU   10                      WORK REG
RB       EQU   11                      WORK REG
SPARE1   EQU   12                      RESERVED FOR PL1
RSAVE    EQU   13                      SAVE AREA PTR REG
RC       EQU   14                      WORK REG
RD       EQU   15                      WORK REG
ADD1     EQU   1                       ADD INFO 1
ADD4     EQU   4                       ADD INFO 4
BFRSUB   EQU   X'80'                   BUFFER SUBROUTINE
BFRSUBA  EQU   X'02'                   BFR SUBROUTINE BEGUN
DUMKEY   EQU   X'08'                   DUMMY KEY
EOS      EQU   X'30'                   END ORDER SEQUENCE
GID      EQU   X'03'                   GDSCB ID
INCLUDE  EQU   X'04'                   INCLUDE
INTKYCOR EQU   X'80'                   INTERNAL KEY/CORVAL SWITCH
LAST     EQU   X'80'                   LAST PARM
LEVEL2   EQU   X'10'                   LEVEL 2 GDS
LOGS     EQU   52                      OFFSET TO LOGICAL BFR START
LOGSTART EQU   2                       LOG START IN KEY
MULTIPLE EQU   X'80'                   MULTIPLE KEY BIT
OFFSAVE  EQU   8                       SAVE AREA CHAIN
RCC3     EQU   12                      OFFSET TO ADD INFO
RCC4     EQU   16                      OFFSET TO ADD INFO
RC3      EQU   X'10'                   RTN CODE 3
RC4      EQU   X'08'                   RTN CODE 4
SEQ      EQU   X'40'                   SEQUENCE PART
SEQA     EQU   X'04'                   SEQUENCE BEGUN
USECOR   EQU   X'40'                   USER CORVAL
USEGEN   EQU   X'10'                   USER GENCODE
USEKEY   EQU   X'20'                   USER KEY
ZERO     EQU   0                       ZERO
FE       EQU   48                                                  000A
ETE      EQU   828                                                 000A
IFFAFA15 CSECT
*1677,536000                                                       000A
         SAVE  (14,12)                 SAVE REGS
         BALR  RBASE,0                 SET UP BASE REG
         USING *,RBASE                 DEFINE BASE REG
         LR    RLIST,R1                LOAD REGISTER
         USING WORKAREA,RLIST          DEFINE DSECT
         L     RPARM,PLIST             LOAD ADR OF USER PARAM LIST
         USING PARAM,RPARM             DEFINE DSECT
         ST    RSAVE,SAVE+4            SAVE-SAVE AREA PTR
         LA    RD,SAVE                 LOAD ADR OF MY SAVE AREA
         ST    RD,OFFSAVE(RSAVE)       STORE IN USER SAVE AREA
         LA    RSAVE,SAVE              ESTABLISH NEW SAVE AREA
         L     RA,RCA                  LOAD RTN CODE ARRAY ADR
         XC    ZERO(20,RA),ZERO(RA)    INITIALIZE RTN CODE ARRAY
         B     AROUND                  BRANCH
ERROR    L     RA,RCA                  LOAD RTN CODE ARRAY ADR
         STC   RB,ZERO(RA)             STORE RTN CODE
         ST    RC,ZERO(RA,RD)          STORE ADD INFO AT PROPER OFFSET
OUTRTN   L     RSAVE,SAVE+4            RESTORE OLD SAVE AREA PTR
         RETURN (14,12),T              RETURN
AROUND   XC    SWITCH(1),SWITCH        INITIALIZE SWITCH
         XC    TEMPKEY(12),TEMPKEY     INITIALIZE TEMPORARY KEY
         L     RGDSCB,GDSNM            LOAD INDIRECT PTR TO GDSCB
         LA    RGDSCB,ZERO(RGDSCB)     ZERO HI ORDER BYTE
         L     RGDSCB,ZERO(RGDSCB)     LOAD GDSCB ADR
         USING GDSCB,RGDSCB            DEFINE DSECT
         CLI   GDSGDSID,GID            VALID  GDSCB
         BE    ST01                    BRANCH IF VALID
         LA    RC,ADD1                 LOAD ADD INFO
ST02     LA    RB,RC4                  LOAD RTN CODE
         LA    RD,RCC4                 LOAD ADD INFO OFFSET
         B     ERROR                   BRANCH
ST01     TM    GDSNM,LAST              IS THIS THE LAST PARM
         BO    ST03                    BRANCH-LAST PARAM
         L     RA,GDSGTMCB             LOAD GTMCB ADR
         USING GTMCB,RA                DEFINE DSECT
         L     RB,GTMGSPCB             LOAD GSPCB ADR
         USING GSPCB,RB                DEFINE DSECT
         L     RC,CORVAL               LOAD CORVAL ADR
         LA    RC,ZERO(RC)             ZERO HI ORDER BYTE
         CL    RC,GSPNULLV             CORVAL=NULL
         BE    ST04                    BRANCH-CORVAL=NULL
         OI    SWITCH,USECOR           INDICATE USER CORVAL PRESENT
         CLC   ZERO(4,RC),ZERO1        USER CORVAL=0
         BNE   ST04                    BRANCH-CORVAL NOT EQUAL TO 0
         L     RC,TWO                  LOAD ADD INFO
         B     ST02                    BRANCH
ST04     TM    CORVAL,LAST             IS THIS THE LAST PARM
         BO    ST03                    BRANCH-LAST PARM
         L     RC,KEY                  LOAD KEY ADR
         LA    RC,ZERO(RC)             ZERO HI ORDER BYTE
         CL    RC,GSPNULLV             KEY=NULL
         BE    ST05                    BRANCH-KEY=NULL
         OI    SWITCH,USEKEY           INDICATE USER KEY PRESENT
ST05     TM    KEY,LAST                LAST PARAM
         BO    ST03                    BRANCH-LAST PARM
         L     RC,GENCODE              LOAD GENCODE ADR
         LA    RC,ZERO(RC)             ZERO HI ORDER BYTE
         CL    RC,GSPNULLV             GEN CODE=NULL
         BE    ST03                    BRANCH-GENCODE=NULL
         OI    SWITCH,USEGEN           INDICATE USER GENCODE PRESENT
         L     RC,ZERO(RC)             LOAD VALUE OF GENCODE
         CL    RC,ONE                  GEN CODE=1
         BE    ST03                    BRANCH IF YES
         CL    RC,TWO                  GEN CODE=2
         BE    ST03                    BRANCH IF YES
ST23     LA    RC,ADD4                 LOAD ADD INFO CODE
         B     ST02                    BRANCH
ST03     TM    GDSFLAGS,LEVEL2         LEVEL 2 GDS
         BO    ST06                    BRANCH-LEVEL 2
         TM    SWITCH,USECOR           USER CORVAL PRESENT
         BC    14,ST06                 BRANCH IF NO
ST19     L     RC,GDSAOACB             LOAD ADR OF OACB
         L     RD,LOGS(RC)             LOAD LOGICAL START (BFR)
         STH   RD,TEMPKEY+2            STORE IN KEY
         OI    W1A,MULTIPLE            INDICATE MULTIPLE IN KEY
         OI    W1A,EOS                 INDICATE END ORDER SEQUENCE
         TM    SWITCH,USEGEN           USER GEN CODE
         BO    ST07                    BRANCH-YES
ST09     OI    W1A,INCLUDE             SET INCLUDE STATUS
         B     ST08                    BRANCH
ST07     L     RA,GENCODE              LOAD ADR OF GENCODE VALUE
         LA    RA,ZERO(RA)             ZERO HI ORDER BYTE
         CLC   ZERO(4,RA),ONE          GENCODE=ONE
         BE    ST09                    BRANCH IF YES
ST08     TM    GDSFLAGS,SEQA           PART OF SEQUENCE
         BC    14,ST10                 BRANCH-NO
         OI    W1D,SEQ                 INDICATE PART OF SEQUENCE
ST10     TM    GDSFLAGS,BFRSUBA        PART OF BFR SUBROUTINE
         BC    14,ST11                 BRANCH-NO
         OI    W1D,BFRSUB              INDICATE PART OF BFR SUB
ST11     TM    SWITCH,DUMKEY           IS THIS OUT OF LINE REQUEST
         BO    ST20                    BRANCH IF YES
         L     RA,CORVAL               LOAD CORVAL ADR
         LA    RA,ZERO(RA)             ZERO HI ORDER BYTE
         MVC   CORVALA(4),ZERO(RA)     MOVE IN CORVAL
         OI    SWITCH,INTKYCOR         SET INTERNAL SWITCH
ST06     TM    SWITCH,USEKEY           IS THERE KEY PARAM
         BO    ST12                    BRANCH IF YES
ST13     TM    SWITCH,USEGEN           USER GENCODE
         BO    ST14                    BRANCH IF YES
ST21     TM    SWITCH,INTKYCOR         INTERNAL SWITCH ON
         BO    ST15                    BRANCH IF YES
         MVC   RTNARY(4),RCA           MOVE IN RTN CODE ARRAY ADR
         ST    RGDSCB,GDSCBA           STORE GDSCB ADR
         MVC   VALUEA(4),TWO           MOVE IN VALUE
         MVC   ORDER(2),GEOS           MOVE IN ORDER
         LA    R1,GDSCBA               LOAD PARAM LIST ADR
         LINK  EP=IFFAHA05,MF=(E,(1))  LINK TO DATA STORE
         XC    GDSGRMOD(1),GDSGRMOD    CLEAR MODE
         LTR   RD,RD                   DATA STORE SUCCESSFULL
         BZ    ST16                    BRANCH-YES
         B     OUTRTN                  BRANCH
ST16     TM    SWITCH,USEKEY           IS THERE A KEY
         BC    14,OUTRTN               BRANCH IF NO
         L     RA,KEY                  LOAD ADR OF KEY
         LA    RA,ZERO(RA)             ZERO HIGH ORDER BYTE
         SR    RB,RB                   CLEAR REG
         LH    RB,LOGSTART(RA)         LOAD PREV LOGICAL START
         L     RC,GDSAOACB             LOAD OACB ADDRESS
         L     RD,LOGS(RC)             LOAD NEW LOGICAL START
         SR    RD,RB                   DETERMINE LENGTH
         STH   RD,ZERO(RA)             STORE IN USER KEY
         B     OUTRTN                  BRANCH
ST12     TM    GDSFLAGS,LEVEL2         LEVEL2 GDS
         BC    14,ST17                 BRANCH IF NO
         L     RA,GDSAOACB             LOAD OACB ADR
         L     RB,LOGS(RA)             LOAD LOGICAL BFR START
         L     RA,KEY                  LOAD KEY ADR
         LA    RA,ZERO(RA)             ZERO HI ORDER BYTE
         STH   RB,LOGSTART(RA)         STORE IN USER KEY
         B     ST13                    BRANCH
ST17     TM    SWITCH,INTKYCOR         INTERNAL SWITCH ON
         BC    14,ST18                 BRANCH IF NO
         L     RA,KEY                  LOAD ADR OF KEY
         LA    RA,ZERO(RA)             ZERO HI ORDER BYTE
         MVC   LOGSTART(2,RA),TEMPKEY+2 OVE IN LOGICAL START
         B     ST13                    BRANCH
ST18     OI    SWITCH,DUMKEY           SET OUT OF LINE REQUEST
         B     ST19                    BRANCH
ST20     OI    SWITCH,INTKYCOR         INDICATE INTERNAL KEY
         L     RA,KEY                  LOAD KEY ADR
         LA    RA,ZERO(RA)             ZERO HI ORDER BYTE
         MVC   LOGSTART(2,RA),TEMPKEY+2  MOVE IN LOGICAL START
         B     ST13                    BRANCH
ST14     L     RA,GENCODE              LOAD GEN CODE ADR
         LA    RA,ZERO(RA)             ZERO HI ORDER BYTE
         CLC   ZERO(4,RA),ONE          GENCODE=1
         BE    ST21                    BRANCH IF YES
         TM    SWITCH,INTKYCOR         INTERNAL SWITCH ON
         BO    ST22                    BRANCH IF YES
         B     ST23                    BRANCH-GENCODE ERROR
ST22     MVC   ORDER(2),GTRU           SET UP OMIT
ST24     ST    RGDSCB,GDSCBA           STORE GDSCB ADR
         MVC   RTNARY(4),RCA           MOVE IN RTN CODE ARRAY ADR
         MVC   VALUEA(4),CALL1         MOVE IN VALUE
         B     ST25                    BRANCH
ST15     MVC   ORDER(2),GNOP4          SET UP INCLUDE
         B     ST24                    BRANCH
ST25     LA    R1,GDSCBA               LOAD PARAM LIST ADR
         LINK  EP=IFFAHA05,MF=(E,(1))  TO DATA STORE
         LTR   RD,RD                   DATA STORE SUCCESSFULL
         BZ    ST26                    BRANCH IF YES
         B     OUTRTN                  BRANCH
ST26     ST    RGDSCB,GDSCBA           STORE GDSCB ADR
         MVC   RTNARY(4),RCA           MOVE IN RTN CODE ARRAY ADDRESS
         MVC   VALUEA(4),TWO           MOVE IN CONSTANT
         MVC   ORDER(2),GEOS           MOVE IN ORDER
         LA    R1,GDSCBA               LOAD PARM LIST ADR
         LINK  EP=IFFAHA05,MF=(E,(1))  TO DATA STORE
         LTR   RD,RD                   DATA STORE SUCCESSFULL
         BZ    ST27                    BRANCH IF YES
         B     RESET                   BRANCH
ST27     ST    RGDSCB,GDSCBA           STORE GDSCB ADR
         MVC   RTNARY(4),RCA           MOVE IN RTN CODE ARRAY ADR
         MVC   VALUEA(4),CALL3         MOVE IN CONSTANT
         LA    R1,GDSCBA               LOAD ADR OF PARM LIST
         LINK  EP=IFFAHA05,MF=(E,(1))  TO DATA STORE
         XC    GDSGRMOD(1),GDSGRMOD    CLEAR MODE
         LTR   RD,RD                   DATA STORE SUCCESSFULL
         BZ    ST28                    BRANCH IF YES
         B     RESET                   BRANCH
ST28     L     RA,GDSAOACB             LOAD OACB ADR
         L     RA,LOGS(RA)             LOAD NEW LOGICAL START ADR
         SR    RB,RB                   CLEAR REG
         LH    RB,TEMPKEY+2            LOAD OLD LOGICAL START ADR
         SR    RA,RB                   DETERMINE LENGTH
         STH   RA,TEMPKEY              STORE LENGTH IN KEY
         TM    SWITCH,USEKEY           USER KEY
         BO    ST29                    BRANCH IF YES
         B     ST30                    BRANCH
ST29     L     RA,KEY                  LOAD ADR USER KEY
         LA    RA,ZERO(RA)             ZERO HI ORDER BYTE
         MVC   ZERO(4,RA),TEMPKEY      MOVE IN KEY
ST30     MVC   CODEA(4),CODE           MOVE IN CODE
         ST    RGDSCB,GDSCBB           STORE GDSCB ADR
         LA    RA,CODEA                LOAD ADR OF CODE
         ST    RA,CODEB                STORE CODE ADR
         LA    RA,TEMPKEY              LOAD ADR OF KEY
         ST    RA,KEYB                 STORE KEY ADR
         LA    R1,GDSCBB               LOAD ADR OF PARM LIST
         L     RA,GDSGTMCB         GET POINTER TO GTMCB            000A
         L     RA,4(RA)            GET POINTER TO GSPCB            000A
         L     RA,FE(RA)           GET POINTER TO STATUS TABLE     000A
         L     RD,ETE(RA)          GET ADRS OF KEY TABLE MGMT      000A
         BALR  RC,RD               BRANCH TO KEY TABLE MGMT        000A
         LTR   RD,RD                   KEY TABLE SUCCESSFULL
         BZ    OUTRTN                  BRANCH IF YES
         L     RA,RCA                  LOAD RTN CODE ARRAY ADR
         MVI   ZERO(RA),RC3            MOVE IN RTN CODE
         LA    RB,ADD4                 LOAD ADD INFO
         ST    RB,RCC3(RA)             STORE ADD INFO
RESET    L     RA,RCA                  LOAD RTN CODE ARRAY ADR
         MVC   SAVE1(20),ZERO(RA)      SAVE ARRAY
         XC    GDSGRMOD(1),GDSGRMOD    RESET MODE
         L     RB,GDSAOACB             LOAD OACB ADR
         L     RB,LOGS(RB)             LOAD NEW LOGICAL START ADR
         SR    RC,RC                   CLEAR REG
         LH    RC,TEMPKEY+2            LOAD OLD LOGICAL START ADR
         SR    RB,RC                   DETERMINE LENGTH
         STH   RB,TEMPKEY              STORE LENGTH
         LA    RB,GDSCBC               LOAD ADR OF PARM
         ST    RB,GDSCBD               STORE ADR
         ST    RGDSCB,GDSCBC           STORE GDSCB ADR
         LA    RB,TEMPKEY              LOAD ADR OF KEY
         ST    RB,KEYD                 STORE KEY ADR
         TM    SWITCH,USECOR           USER CORVAL
         BO    ST31                    BRANCH IF YES
         XC    CORVALC(4),CORVALC      INDICATE ZERO CORVAL
         B     ST32                    BRANCH
ST31     L     RB,CORVAL               LOAD ADR OF CORVAL
         LA    RB,ZERO(RB)             ZERO HI ORDER BYTE
         MVC   CORVALC(4),ZERO(RB)     MOVE IN USER CORVAL
ST32     LA    RB,CORVALC              LOAD PARM ADR
         ST    RB,CORVALD              STORE ADR
         MVI   KEYD,LAST               INDICATE LAST PARM
         MVC   RTNARYB(4),RCA          MOVE IN RTN CODE ARRAY ADR
         LA    RB,GDSCBD               LOAD ADR PARM LIST
         ST    RB,PLISTB               STORE ADR
         LA    R1,PLISTB               LOAD ADR OF PARM LIST
         LINK  EP=IFFAFA12,MF=(E,(1))  TO RESET
         MVC   ZERO(20,RA),SAVE1       RESTORE RTN CODE ARRAY
         B     OUTRTN                  BRANCH
         DS    0F
ZERO1    DC    1F'0'
ONE      DC    A(1)
TWO      DC    A(2)
GNOP4    DC    X'2AC0'
GTRU     DC    X'2AFF'
GEOS     DC    X'2A81'
CALL1    DC    X'01000004'
CALL3    DC    X'02000000'
         DS    0F
CODE     DC    1F'1'
         CNOP  0,8
         COPY  GSPCB
         COPY  GTMCB
         COPY  GDSCB
PARAM    DSECT
GDSNM    DS    1F
CORVAL   DS    1F
KEY      DS    1F
GENCODE  DS    1F
WORKAREA DSECT
PLIST    DS    1F
RCA      DS    1F
SAVE     DS    18F
SWITCH   DS    X   '
*              X'80'                   KEY/CORVAL INTERNALLY
*              X'40'                   USER CORVAL
*              X'20'                   USER KEY
*              X'10'                   USER GENCODE
TEMPKEY  DS    1F
W1A      DS    1X
W1B      DS    1X
W1C      DS    1X
W1D      DS    1X
CORVALA  DS    1F
GDSCBA   DS    1F
RTNARY   DS    1F
VALUEA   DS    1H
VALUEB   DS    1H
ORDER    DS    1H
         DS    1H
CODEA    DS    1F
GDSCBB   DS    1F
CODEB    DS    1F
KEYB     DS    1F
SAVE1    DS    5F
GDSCBC   DS    1F
CORVALC  DS    1F
GDSCBD   DS    1F
CORVALD  DS    1F
KEYD     DS    1F
PLISTB   DS    1F
RTNARYB  DS    1F
         END
