         TITLE 'GSPRD-IFFADA01-READ THE GRAPHIC BUF'
*                                                                  6803
*                                                                  6803
*                                                                  6803
*        GSPRD IS ENTERED FROM DIRECTOR PART II WITH THE ADDRESS OF6803
*        THE WORK AREA IN REGISTER 1. THE FIRST WORD OF THE WORK   6803
*        AREA CONTAINS THE ADDRESS OF THE PARAMETER LIST LISTED    6803
*        BELOW:                                                    6803
*        +0    A(GDSNAME)                                          6803
*        +4    A(STORAGELOC)                                       6803
*        +8    A(COUNT)                                            6803
*        +12   A(RDTYP)                                            6803
*                                                                  6803
*        THE FOLLOWING ARE OPTIONAL PARAMETERS.                    6803
*                                                                  6803
*        +16   A(TERMCODE)                                         6803
*        +20   A(CORRVAL1)                                         6803
*        +24   A(KEY1)                                             6803
*        +28   A(CORRVAL2)                                         6803
*        +32   A(KEY2)                                             6803
*                                                                  6803
*        EXTERNAL REFERENCES ARE MADE TO:                          6803
*        GIOCR                                                     6803
*        KEY TABLE MANAGEMENT-IFFAHA03                             6803
*                                                                  6803
*        EXTERNAL MACROS USED ARE:                                 6803
*        GREAD                                                     6803
*        GCNTRL                                                    6803
*        WAIT                                                      6803
*                                                                  6803
*        ATTRIBUTES:                                               6803
*        REENTERANT                                                6803
*        PROBLEM PROGRAM MODE                                      6803
*                                                                  6803
*                                                                  6803
*                                                                  6803
         EJECT                                                     6803
*                                                                  6803
*        ON ENTRY THE REGISTERS ARE SAVED,THE BASE REGISTER IS     6803
*        INITIALIZED,THE WORK AREA DSECT IS SET UP,THE RETURN      6803
*        ARRAY IS INITIALIZED,AND THE GDSCB AND GTMCB DSECTS ARE   6803
*        INITIALIZED.                                              6803
*                                                                  6803
IFFADA01 CSECT                                                     6803
*                                                                A28421
         SAVE  (14,12)                                             6803
         BALR  BASE,0              ESTABLISH ADDRESSABILITY        6803
         USING *,BASE                                              6803
         LR    WORK,PARM           WORK AREA                       6803
         USING WORKAREA,WORK                                       6803
         ST    SAVE,WRKSAVE+4                                      6803
         LA    REGA,WRKSAVE        CHAIN SAVE AREAS                6803
         ST    REGA,8(SAVE)                                        6803
         LR    SAVE,REGA                                           6803
         MVC   WRKINCR,TWO                                         6803
         L     ERRCD,WRKRTNCD                                      6803
         XC    0(20,ERRCD),0(ERRCD) ZERO RETURN ARRAY              6803
         L     PARM,WRKPARM        PARM LIST                       6803
         L     GDSREG,0(PARM)                                      6803
         L     GDSREG,0(GDSREG)    GDS ADDR INTO REG               6803
         USING GDSCB,GDSREG                                        6803
         C     GDSREG,GDSGDSCB     GDS VALID                       6803
         BNE   ERR1                NO                              6803
         L     GTMREG,GDSGTMCB     SET UP ADDRESSABILITY OF GTMCB  6803
         USING GTMCB,GTMREG                                        6803
         EJECT                                                     6803
*                                                                  6803
*        THE REQUIRED PARAMETERS ARE CHECKED FOR VALIDITY AND SAVED6803
*        A WORK AREA TO HOLD THE OPTIONAL PARAMETERS IS SET TO     6803
*        ZERO AND A CHECK IS MADE TO SEE WHICH OPTIONAL PARAMETERS 6803
*        IF ANY ARE PRESENT. THOSE PRESENT ARE PLACED IN THE WORK  6803
*        AREA.                                                     6803
*                                                                  6803
         TM    0(PARM),LAST        MORE PARMS                      6803
         BO    ERR1                NO ERROR                        6803
         L     REGA,STORLOC(PARM)  LOCATION FOR DATA               6803
         ST    REGA,WRKSTRG        SAVE START                      6803
         TM    STORLOC(PARM),LAST  LAST                            6803
         BO    ERR1                ERROR                           6803
         L     REGB,COUNT(PARM)    LOAD COUNT                      6803
         L     REGB,0(REGB)                                        6803
         LTR   REGB,REGB     IS COUNT ZERO                       A28421
         BZ    ERR1             IF YES, READ NOT POSSIBLE        A28421
         ST    REGB,WRKCNT         SAVE                            6803
         TM    COUNT(PARM),LAST    LAST                            6803
         BO    ERR1                ERROR                           6803
         XC    WRKSW,WRKSW         ZERO SWITCH                     6803
         XC    WRKTRMCD(20),WRKTRMCD ZERO OPT PARMS                6803
         L     REGC,RDTYP(PARM)                                    6803
         L     REGC,0(REGC)        LOAD RD TYPE                    6803
         C     REGC,F1             VALID READ TYPE                 6803
         BE    GRD00100            YES                             6803
         C     REGC,TWO                                            6803
         BNE   ERR2                NO                              6803
GRD00100 ST    REGC,WRKRDTYP       SAVE READ TYPE                  6803
         TM    RDTYP(PARM),LAST                                    6803
         BO    GRD00600                                            6803
         EJECT                                                     6803
*                                                                  6803
*        TEST AND SAVE OPTIONAL PARMS                              6803
*                                                                  6803
         CLC   TMCD+1(3,PARM),NULL+1(ERRCD) NULL                   6803
         BE    GRD00200                                            6803
         MVC   WRKTRMCD(4),TMCD(PARM) SAVE MDDR                    6803
GRD00200 TM    TMCD(PARM),LAST     LAST                            6803
         BO    GRD00600                                            6803
         CLC   C1+1(3,PARM),NULL+1(ERRCD) NULL                     6803
         BE    GRD00300                                            6803
         MVC   WRKC1,C1(PARM)      SAVE CORVAL                     6803
GRD00300 TM    C1(PARM),LAST       LAST                            6803
         BO    GRD00600                                            6803
         CLC   K1+1(3,PARM),NULL+1(ERRCD) NULL                     6803
         BE    GRD00400                                            6803
         MVC   WRKK1,K1(PARM)      SAVE KEY                        6803
GRD00400 TM    K1(PARM),LAST       LAST PARM                       6803
         BO    GRD00600                                            6803
         CLC   C2+1(3,PARM),NULL+1(ERRCD) NULL                     6803
         BE    GRD00500                                            6803
         MVC   WRKC2,C2(PARM)      SAVE CORVAL 2                   6803
GRD00500 TM    C2(PARM),LAST       LAST PARM                       6803
         BO    GRD00600                                            6803
         CLC   K2+1(3,PARM),NULL+1(ERRCD) NULL                     6803
         BE    GRD00600                                            6803
         MVC   WRKK2,K2(PARM)      SAVE KEY 2                      6803
         EJECT                                                     6803
*                                                                  6803
*        HERE ALL PATHS JOIN AGAIN. IF THIS IS A LEVEL II GDS      6803
*        THE CORRVAL PARAMETERS ARE SET TO ZERO BECAUSE THEY ARE   6803
*        TO BE IGNORED. A CHECK IS MADE TO SEE IF A CORRVAL 1      6803
*        OR KEY 1 PARAMETER IS PASSED. IF NOT THE ENTIRE GRAPHIC   6803
*        DATA SET IS TO BE READ. THE LOGICAL START ADDRESS OF THE  6803
*        READ IS SET TO ZERO. THE LENGTH OF THE GRAPHIC DATA SET   6803
*        IS TAKEN FROM THE LOGICAL CURRENT FIELD OF THE CURRENT    6803
*        OACB. THIS LENGTH FIELD CONTAINS THE LENGTH OF THE ORDERS 6803
*        IN THE BUFFER AND IN THE GDOA IF SOME HAVE NOT YET BEEN   6803
*        EXECUTED.                                                 6803
*                                                                  6803
GRD00600 TM    GDSFLAGS,LEVL2      LEVEL 2                         6803
         BZ    GRD00650            NO                              6803
         XC    WRKC1,WRKC1         ZERO CORVAL                     6803
         XC    WRKC2,WRKC2                                         6803
GRD00650 CLC   WRKC1(16),ZERO      READ ENTIRE GDS                 6803
         BNE   GRD00700            NO                              6803
         MVC   WRKST(4),ZERO       LOGICAL START ADDR=0            6803
         L     REGC,GDSAOACB                                       6803
         L     REGC,52(REGC)       PICK UP LENGTH FROM GDOA        6803
         LTR   REGC,REGC     IS LENGTH ZERO                      A28421
         BZ    ERR1             IF YES, READ NOT POSSIBLE        A28421
         ST    REGC,WRKLEN         SAVE, SOME DATA MAY STILL BE    6803
*                                  IN THE GDOA                     6803
         B     GRD01400                                            6803
         EJECT                                                     6803
*                                                                  6803
*        IF CORRVAL AND KEY PARAMETERS ARE PASSED VALIDITY CHECKS  6803
*        ARE MADE AT THIS POINT. FOR KEY1 AND CORRVAL1 KEY TABLE   6803
*        MANAGEMENT IS CALLED TO SEE IF THEY ARE VALID. IF LEVEL II6803
*        NO CHECK IS MADE TO KEY TABLE MANAGEMENT. IF VALID,THE    6803
*        LOGICAL START ADDRESS AND LENGTH OF THE ELEMENT ARE SAVED.6803
*                                                                  6803
GRD00700 CLC   WRKC1,ZERO          CORRVAL1                        6803
         BE    GRD00800            NO                              6803
         LA    REGC,FIVE                                           6803
         ST    REGC,WRKPRLST+4     SERARCH ON CORRVAL              6803
         MVC   WRKPRLST+8(4),WRKC1                                 6803
         B     GRD00900                                            6803
GRD00800 CLC   WRKK1,ZERO                                          6803
         BE    ERR1                                                6803
         L     PARM,WRKK1                                          6803
         TM    GDSFLAGS,LEVL2      LEVEL 2                         6803
         BO    GRD01000            YES-NO KEY TABLE MGT            6803
         LA    REGC,TWO            CODE-SEARCH KEY                 6803
         ST    REGC,WRKPRLST+4                                     6803
         ST    PARM,WRKPRLST+8     KEY ADDR                        6803
GRD00900 ST    GDSREG,WRKPRLST                                     6803
         LA    PARM,WRKPRLST                                       6803
         L     R15,STAT(ERRCD)     ADDRESS OF THE KEY TABLE FROM   6803
*                                  THE STATUS TABLE                6803
         L     R15,KEYTB(R15)                                      6803
         BALR  RETURN,R15          SERARCH FOR KEY OR CORVAL       6803
         LTR   R15,R15             ERROR                           6803
         BNE   ERR1                                                6803
GRD01000 LH    REGC,2(PARM)                                        6803
         ST    REGC,WRKST          START ADDR FROM KEY             6803
         LH    REGC,0(PARM)                                        6803
         ST    REGC,WRKLEN         SAVE LENGTH                     6803
         EJECT                                                     6803
*                                                                  6803
*        IF A CORRVAL2 OR KEY2 PARAMETER IS NOT PASSED THE PATH    6803
*        WILL MOVE FOREWARD AROUND THIS SECTION. THIS CODE WILL    6803
*        CHECK THE VALIDITY OF THOSE PARAMETERS WITH KEY TABLE     6803
*        MANAGEMENT JUST AS WAS DONE FOR THE CORRVAL1 AND KEY1     6803
*        PARAMETERS. THE LOGICAL START ADDRESS OF THIS ELEMENT     6803
*        IS TAKEN,THE LOGICAL START ADDRESS PREVIOUSLY SAVED       6803
*        IS SUBTRACTED FROM IT AND THE LOGICAL LENGTH OF THIS ELEM 6803
*        IS ADDED TO THE FIGURE OBTAINED. THIS IS THE LENGTH       6803
*        OF THE READ FROM KEY TO KEY OR CORRVAL TO CORRVAL OR      6803
*        WHATEVER COMBINATION WAS USED. THIS IS SAVED IN PLACE     6803
*        OF THE LENGTH PREVIOUSLY SAVED.                           6803
*                                                                  6803
         CLC   WRKC2(8),ZERO       2ND START AND LEN TO BE CONSID  6803
         BE    GRD01400            NO                              6803
         CLC   WRKC2,ZERO                                          6803
         BE    GRD01100                                            6803
         LA    REGC,FIVE                                           6803
         ST    REGC,WRKPRLST+4     SEARCH ON CORVAL                6803
         MVC   WRKPRLST+8(4),WRKC2                                 6803
         B     GRD01200                                            6803
GRD01100 L     PARM,WRKK2                                          6803
         TM    GDSFLAGS,LEVL2      LEVEL 2                         6803
         BO    GRD01300                                            6803
         LA    REGC,TWO                                            6803
         ST    REGC,WRKPRLST+4     CODE SEARCH ON KEY              6803
         ST    PARM,WRKPRLST+8     KEY ADDR                        6803
GRD01200 ST    GDSREG,WRKPRLST                                     6803
         LA    PARM,WRKPRLST                                       6803
         L     R15,STAT(ERRCD)     ADDR OF STAT TABLE              6803
         L     R15,KEYTB(R15)      ADDR OF KEY TBL MGT             6803
         BALR  RETURN,R15          SEARCH ON KEY OR CORVAL         6803
         LTR   R15,R15             ERROR                           6803
         BNE   ERR1                                                6803
GRD01300 LH    REGC,2(PARM)        START ADDR OF THIS KEY          6803
         S     REGC,WRKST          START ADDR OF 1ST KEY           6803
         AH    REGC,0(PARM)        PLUS LENGTH OF THIS KEY         6803
         ST    REGC,WRKLEN         NEW LENGTH OF READ              6803
         EJECT                                                     6803
*                                                                  6803
*        A CHECK IS NOW MADE TO SEE IF ANY OF THE DATA TO BE READ  6803
*        IS NOT IN THE BUFFER. IF THIS IS AN EQUIVALENCE GRAPHIC   6803
*        DATA SET THAT IS IN THE BUFFER ALL DATA IN IT IS ASSUMED  6803
*        TO BE IN THE BUFFER. OTHERWISE THE LENGTH IS ADJUSTED     6803
*        SO THAT WRKLEN IS SET TO THE LENGTH IN THE BUFFER AND     6803
*        WRKEXT IS SET TO THE LENGTH IN THE GDOA.                  6803
*                                                                  6803
GRD01400 L     REGC,WRKST          START OF READ                   6803
         A     REGC,WRKLEN         LENGTH ADDED                    6803
         TM    GDSFLAGS,EQIVIN                                     6803
         BO    GRD02150            IF EQUIV IN BUF, READ FROM BUF  6803
         L     REGB,GDSAOACB                                       6803
         S     REGC,48(REGB)       HOW MUCH IN GDOA                6803
         BM    GRD02150                IF NEGATIVE SET TO ZERO     6803
GRD01450 ST    REGC,WRKEXT             SAVE                        6803
         L     REGB,WRKLEN         SEPARATE LENGTH IN EDOA         6803
         SR    REGB,REGC           FROM LENGTH IN THE              6803
         ST    REGB,WRKLEN         BUFFER                          6803
         BZ    GRD04500            ALL DATA IN GDOA                6803
         EJECT                                                     6803
*                                                                  6803
*        THE LOGICAL START ADDRESS IS TAKEN AND CONVERTED TO A     6803
*        PHYSICAL BUFFER ADDRESS USING THE SUBROUTINE WITHIN THE   6803
*        PROGRAM. THE READ IS THEN SET UP. THE BUFFER ADDRESS      6803
*        IS SAVED. THE DECB IS SET TO ZERO. THE READ IN AREA       6803
*        IS THE OTHER GDOA WHICH IS CURRENTLY NOT IN USE. THE
*        ADDRESS OF THE AREA IS COMPUTED AND STORED IN THE WORK
*        AREA FOR FUTURE REFERENCE AS WELL AS KEPT IN THE REGISTER.
*        THE COUNT PARAMETER PASSED IS MADE POSITIVE AND SET IN
*        THE RESIDUAL COUNT FIELD.
*                                                                  6803
GRD01500 L     PARM,WRKST                                          6803
         BAL   RETURN,GRDTRAN1     TRANS TO PHYS BUFFER ADDR       6803
*        REMAINDER IS IN REG0,PHYSICAL ADDR IN REG1                6803
         L     REGB,GTMGRDCB                                       6803
         LA    PARM,2(PARM)        2 FOR STARTING SET MODE         6803
         AR    PARM,REG0           DISPLACEMENT INTO THIS BUFFER   6803
         STH   PARM,WRKBUF         PLACE BUFFER ADDR IN STORAGE    6803
         LR    REGA,REG0                                           6803
         LA    REGA,6(REGA)                                        6803
         LH    REG0,GDSGDOAL                                       6803
         SR    REG0,REGA           LENGTH OF READ AVAIL 1ST TIME   6803
         XC    WRKDECB(32),WRKDECB ZERO DECB                       6803
         C     REG0,WRKLEN                                         6803
         BNH   GRD01550                                            6803
         L     REG0,WRKLEN                                         6803
GRD01550 ST    REG0,WRKDECB+20     LENGTH INTO DECB                6803
         L     REGA,GDSAOACB       OACB1 ADDR
         L     REGA,0(REGA)        OACB2 ADDR
         L     REGA,4(REGA)        GDOA2 ADDR
         LA    REGA,6(REGA)        SKIP SM AND GTRU OVERHEAD BYTES
         ST    REGA,WRKPL          SAVE ADDR                       6803
         L     REGC,WRKCNT                                         6803
         LPR   REGC,REGC           GET COUNT POSITIVE              6803
         ST    REGC,WRKRESCT       SAVE AS A RESIDUAL              6803
         EJECT                                                     6803
*                                                                  6803
*        THE COUNT FIELD IS EXAMINED HERE TO SEE IF A READ TO      6803
*        CURSOR IS DESIRED. IF THE FIELD IS NEGATIVE A BRANCH      6803
*        TO THAT READ IS TAKEN. OTHERWISE A READ BUFFER IS         6803
*        DONE.                                                     6803
*                                                                  6803
GRD01600 L     R15,WRKCNT                                          6803
         C     R15,ZERO                                            6803
         BE    GRDEXIT             NO DATA
         BL    GRD02700            READ TO CURSOR                  6803
         GREAD WRKDECB,BUF,(REGB),,(REGA),WRKBUF,MF=E              6803
         LTR   R15,R15                 CHECK FOR SUCCESSFUL START  0557
         BNZ   ERR3                         IF NOT, RETURN         0557
         WAIT  ECB=WRKDECB                                         6803
         CLI   WRKDECB,X'7F'                                       6803
         BNE   ERR3                                                6803
         L     REG0,WRKDECB+20      RESET COUNT IN REG0            6803
         EJECT                                                     6803
*                                                                  6803
*        A CHECK IS MADE HERE TO SEE IF A READ ALL DATA OR READ    6803
*        TEXT DATA IS DESIRED. THE READ TEXT DATA GOES TO ANOTHER  6803
*        PART OF THE PROGRAM. FOR READ ALL DATA A CHECK IS MADE    6803
*        TO SEE IF THE RESIDUAL COUNT IS LESS THAN OR GREATER THAN 6803
*        THE COUNT OF DATA READ WITH THIS READ. IF THE RESIDUAL    6803
*        COUNT IS GREATER THE NOT DONE SWITCH IS SET. OTHERWISE    6803
*        THE SWITCH IS TURNED OFF. THE DATA IS MOVED INTO THE      6803
*        USER PROVIDED AREA.                                       6803
*                                                                  6803
GRD01700 CLI   WRKRDTYP+3,X'01'    READ TEXT ONLY                  6803
         BE    GRD02900            YES                             6803
         LR    REGC,REG0                                           6803
         LA    REG0,0(REGC)                                        6803
         L     REGC,WRKRESCT                                       6803
         CR    REG0,REGC           HAVE WE READ ENOUGH DATA YET    6803
         BL    GRD02300            NO                              6803
         XC    WRKRESCT,WRKRESCT                                   6803
GRD01750 NI    WRKSW,ANTIDNE                                       6803
GRD01800 L     REGE,WRKSTRG        PLACE TO MOVE                   6803
         LR    REGF,REGA           PLACE FROM                      6803
         ST    REGC,WRKTEMP                                        6803
GRD01900 CH    REGC,H256           GR THAN 256                     6803
         BH    GRD02200            YES                             6803
         BCTR   REGC,0                                             6803
         EX    REGC,MOVE           MOVE IN DATA                    6803
         L     REGC,WRKTEMP                                        6803
*                                                                  6803
*        IF THE NOT DONE SWITCH IS NOT SET, TERM CODE IS COMPUTED  6803
*        AND SET IN THE PARAMETER IF IT WAS PASSED. THE DISPLAY IS 6803
*        RESTARTED AND CONTROL IS THEN PASSED TO THE CALLING       6803
*        PROGRAM.                                                  6803
*                                                                  6803
         TM    WRKSW,NOTDONE                                       6803
         BO    GRD02500            NOT DONE YET                    6803
         CLC   WRKRESCT,ZERO       COUNT ZERO                      6803
         BNE   GRD01950            NO                              6803
         SR    REGA,REGA           SET TERMCODE=0                  6803
         B     GRD02000                                            6803
         EJECT                                                     6803
GRD01950 TM    WRKSW,CURSOR        CURSOR ENCOUNTERED              6803
         BZ    GRD02400            NO                              6803
         L     REGA,WRKCNT         NEG NO                          6803
         A     REGA,WRKRESCT       ADD POSITIVE AMNT LEFT          6803
GRD02000 L     REGC,WRKTRMCD                                       6803
         LTR   REGC,REGC           TERM CODE PRESENT               6803
         BZ    GRD02100            NO                              6803
         ST    REGA,0(REGC)                                        6803
GRD02100 XC    WRKDECB(4),WRKDECB  ZERO ECB                        6803
         GCNTRL WRKDECB,STR,(REGB),GDSFCBUF,MF=E                   6803
         LTR   R15,R15                 CHECK FOR SUCCESSFUL START  0557
         BNZ   ERR3                         IF NOT, RETURN         0557
         WAIT  ECB=WRKDECB         RESTART REGENERATION            6803
         CLI   WRKDECB,X'7F'       ERROR                           6803
         BNE   ERR3                YES                             6803
GRDEXIT  L     SAVE,4(SAVE)        RETURN                          6803
         RETURN (14,12),RC=(15)        KEEP RETURN CODE            0557
         EJECT                                                     6803
GRD02150 SR    REGC,REGC                                           6803
         B     GRD01450                                            6803
GRD02200 LA    RETURN,255                                          6803
         EX    RETURN,MOVE         MOVE IN 256                     6803
         SH    REGC,H256           UPDATE                          6803
         AH    REGE,H256           PTRS                            6803
         AH    REGF,H256                                           6803
         B     GRD01900            CONTINUE                        6803
GRD02300 OI    WRKSW,NOTDONE       SET NOT DONE SW                 6803
         LR    REGC,REG0           MOVE IN ALL DATA READ           6803
         B     GRD01800                                            6803
GRD02400 L     REGA,WRKCNT                                         6803
         LPR   REGA,REGA           COMPUTE RESIDUAL COUNT          6803
         S     REGA,WRKRESCT                                       6803
         B     GRD02000                                            6803
         EJECT                                                     6803
*                                                                  6803
*                                                                  6803
*        IF THE NOT DONE SWITCH WAS SET THE STORAGE ADDR WHERE THE 6803
*        DATA IS TO BE MOVED IS UPDATED BY THE LENGTH OF THE READ. 6803
*        THE RESIDUAL COUNT IS DECREASED BY THE LENGTH OF THE READ 6803
*        AND THE BUFFER LENGTH IS DECREASED BY THE LENGTH OF THE   6803
*        READ. IF THE LENGTH IS NEGATIVE (THE LAST READ WAS FROM   6803
*        THE GDOA) OR ZERO A BRANCH IS TAKEN TO SEE IF THERE IS    6803
*        DATA IN THE GDOA TO BE READ. OTHERWISE THE NEXT BUFFER    6803
*        ADDRESS IS COMPUTED,THE LENGTH OF THE READ IS COMPUTED    6803
*        AND ANOTHER READ IS INITIATED.                            6803
*                                                                  6803
*                                                                  6803
GRD02500 L     REGE,WRKSTRG        UPDATE STORAGE ADDR             6803
         AR    REGE,REGC           BY LENGTH MOVED IN              6803
         ST    REGE,WRKSTRG                                        6803
         L     REGE,WRKRESCT       DECREMENT                       6803
         SR    REGE,REGC           RESIDUAL COUNT                  6803
         ST    REGE,WRKRESCT                                       6803
GRD02550 L     REGE,WRKLEN         DECREMENT LENGTH IN BUFFER      6803
         SR    REGE,REGC                                           6803
         ST    REGE,WRKLEN             SAVE IN LENGTH              6803
         BNH   GRD04500            NO MORE DATA IN BUFFER          6803
         SR    REG0,REG0                ZERO OUT FOR DIVIDE        2449
         LH    PARM,WRKBUF         GET LAST BUFFER ADDRESS         6803
         D     REG0,F256               CONVERT IT TO AN INDEX      0546
         M     REG0,F3                         TO THE              0546
         L     REGC,GTMBCTBL       BUFFER CONTROL TABLE            6803
         SR    REGE,REGE                                           6803
         IC    REGE,1(REGC,PARM)   GET PTR TO NEXT BUFFER          6803
         LR    REGF,REGE                                           6803
         MH    REGF,F3+2                                           6803
         CR    REGF,PARM           IS IT POINTING TO ITSELF        6803
         BE    ERR1                YES NO MORE BUFFER              6803
         MH    REGE,H256                                           6803
         LA    REGE,2(REGE)                                        6803
         STH   REGE,WRKBUF         NEW BUFFER ADDRESS              6803
         LH    REG0,GDSGDOAL                                       6803
         S     REG0,SIX                                            6803
         C     REG0,WRKLEN         CAN WE READ IN THE WHOLE BUFFER 6803
         BNH   GRD02600            YES                             6803
         L     REG0,WRKLEN         NO ONLY READ WHAT IS THERE      6803
GRD02600 ST    REG0,WRKDECB+20     STORE LENGTH                    6803
         XC    WRKDECB(4),WRKDECB  ZERO ECB                        6803
         B     GRD01600                                            6803
         EJECT                                                     6803
*                                                                  6803
*                                                                  6803
*        IF A READ TO CURSOR WAS DESIRED THAT TYPE OF READ IS      6803
*        DONE HERE,  WHEN THE                                      2449
*        RESIDUAL COUNT OF THE READ IS ZERO A CHECK MUST BE        6803
*        MADE TO SEE IF THE CURSOR WAS FOUND IN THE LAST BYTE      6803
*        OF DATA.  IF NOT THE CURSOR WAS NOT FOUND.                2449
*        IF NO CURSOR WAS FOUND THE DATA                           2449
*        IS TREATED JUST AS THE OTHER READ AND A BRANCH IS         6803
*        TAKEN TO CHECK WHAT TYPE OF READ WAS DESIRED, CHARACTER   6803
*        OR ALL,ETC. IF THE CURSOR WAS FOUND AND A READ OF         6803
*        ALL DATA WAS DESIRED THE LENGTH OF THE DATA READ          6803
*        IN IS MODIFIED AND THE RESIDUAL COUNT IS REDUCED BY       6803
*        THE LENGTH OF THE READ.                                   6803
*                                                                  6803
*                                                                  6803
GRD02700 GREAD WRKDECB,CUR,(REGB),,(REGA),WRKBUF,MF=E              6803
         LTR   R15,R15                 CHECK FOR SUCCESSFUL START  0557
         BNZ   ERR3                         IF NOT, RETURN         0557
         WAIT  ECB=WRKDECB                                         6803
         L     REG0,WRKDECB+20      RESET COUNT IN REG0            6803
         EJECT                                                     6803
         CLI   WRKDECB,X'7F'        ERROR                          6803
         BNE   ERR3                     PERMANENT I/O ERROR, BRANCH2449
         CLI   WRKDECB+16,X'43'    CURSOR                          6803
         BE    GDR02725                 CURSOR WAS FOUND, BRANCH   2449
         CLC   WRKDECB+16,ZERO          WAS CURSOR NOT FOUND (IF   2449
*                                       NOT DECB +16 SHOULD STILL  2449
*                                       BE ZERO)                   2449
         BNE   ERR3                     IF NON ZERO TAKE BRANCH    2449
*                                       GO SEE IF STILL MORE TO    2449
*                                       READ OR IF CURSOR WAS LAST 2449
*                                       BYTE TRANSMITTED           2449
GDR02725 EQU   *                                                   2449
         CLC   WRKDECB+17(3),ZERO     RESIDUAL COUNT ZERO          6803
         BNE   GRD02750                                            6803
         LR    R15,REGA                                            6803
         AR    R15,REG0                                            6803
         S     R15,F1              WAS A CURSOR IN FACT FOUND      6803
         CLI   0(R15),X'1A'                                        6803
         BNE   GRD01700            NO                              6803
GRD02750 XC    WRKDECB+16(1),WRKDECB+16                            6803
         S     REG0,WRKDECB+16     AMOUNT READ                     6803
         S     REG0,F1             ONE FOR THE CURSOR              6803
         CLI   WRKRDTYP+3,X'01'    CONTINUE TO PROCESS DATA        6803
         BE    GRD02800                                            6803
         C     REG0,WRKRESCT       CURSOR BEFORE END OF READ       6803
         BNL   GRD01700            NO  IGNORE                      6803
         OI    WRKSW,CURSOR                                        6803
         L     RETURN,WRKRESCT     REDUCE RESIDUAL COUNT           6803
         SR    RETURN,REG0                                         6803
         ST    RETURN,WRKRESCT     SAVE                            6803
         LR    REGC,REG0                                           6803
         B     GRD01750                                            6803
*                                                                  6803
*        IF THE CURSOR WAS INCOUNTERED THE SWITCH IS SET.          6803
*                                                                  6803
GRD02800 OI    WRKSW,CURSOR        SET SWITCH CURSOR FOUND         6803
         EJECT                                                     6803
*                                                                  6803
*                                                                  6803
*        A READ OF CHARACTERS ONLY IS DONE HERE. FIRST REGISTERS   6803
*        ARE INITIALIZED WITH THE RESIDUAL COUNT,THE LENGTH OF     6803
*        DATA READ,THE CURRENT INCREMENT,AND THE STORAGE ADDRESS   6803
*        WHERE THE DATA IS TO BE MOVED. IF,ON THE LAST READ THE    6803
*        CURRENT MODE WAS TEXT A BRANCH IS TAKEN TO THE TEXT       6803
*        CURRENT SECTION. OTHERWISE A CHECK IS MADE TO SEE IF A    6803
*        SET MODE IS PRESENT. IF YES THE TYPE OF SET MODE IS       6803
*        INSPECTED. OTHERWISE THE INCREMENT IS ADDED TO THE        6803
*        INPUT ADDRESS AND SUBTRACTED FROM THE LENGTH OF THE READ  6803
*        AND THE LOOP IS CONTINUED.                                6803
*                                                                  6803
GRD02900 L     R15,WRKRESCT        COUNT OF CHAR LEFT TO READ      6803
         LR    RETURN,REG0         LENGTH READ OUT OF REG0         6803
         L     REG0,WRKINCR        CURRENT INCR                    6803
         L     REGE,WRKSTRG                                        6803
         TM    WRKSW,TEXT          CURRENT MODE TEXT               6803
         BO    GRD04400            YES                             6803
GRD03000 LTR   RETURN,RETURN       MORE TO READ                    6803
         BNH   GRD04300            DONE-GET BUFFER OR TERM         6803
         CLI   0(REGA),X'2A'       SETMODE                         6803
         BE    GRD03200            YES                             6803
GRD03100 AR    REGA,REG0           INDEX THROUGH                   6803
         SR    RETURN,REG0                                         6803
         B     GRD03000            CONTINUE                        6803
         EJECT                                                     6803
*                                                                  6803
*        IF A SET MODE WAS ENCOUNTERED THE TYPE OF SET MODE IS     6803
*        DETERMINED AND THE INCREMENT FIELD IS SET ACCORDINGLY.    6803
*        IF THE MODE WAS A FOUR BYTE POINT OR LINE,THE DATA        6803
*        FIELD IS UPDATED TWO BYTES TO GET BEYOND THE SET MODE     6803
*        AND THE LENGTH IS REDUCED BY TWO. THE INCREMENT FIELD     6803
*        IS SET TO FOUR,THE LENGTH OF THE X AND Y COORDINATES.     6803
*        IT THEN CONTINUES THE SCAN. FOR ALL OTHER TYPES EXCEPT    6803
*        TEXT,THE INCREMENT IS SET TO THE LENGTH OF THE ORDER      6803
*        AND THE SCAN CONTINUES.                                   6803
*                                                                  6803
GRD03200 CLI   1(REGA),X'02'       4 BYTE ORDER                    6803
         BNH   GRD03300                                            6803
         CLI   1(REGA),X'05'       2 BYTE ORDER                    6803
         BNH   GRD03400                                            6803
         CLI   1(REGA),X'45'       TEXT                            6803
         BNH   GRD03700            YES                             6803
         CLI   1(REGA),X'89'       TWOBYTE                         6803
         BNH   GRD03400                                            6803
         CLI   1(REGA),X'EA'       4 BYTE ORDER                    6803
         BNH   GRD03500                                            6803
         CLI   1(REGA),X'EC'       6 BYTE ORDER                    6803
         BNH   GRD03600                                            6803
         B     GRD03500            4BYTE                           6803
GRD03300 LA    REGA,2(REGA)        UPDATE BEYOND SETMODE           6803
         S     RETURN,TWO                                          6803
         LA    REG0,4                                              6803
         B     GRD03000            CONTINUE                        6803
GRD03400 LA    REG0,2              SET TO 2 BYTE                   6803
         B     GRD03100            CONTINUE                        6803
GRD03500 LA    REG0,4              SET TO 4 BYTE                   6803
         B     GRD03100                                            6803
GRD03600 LA    REG0,6              SET TO 6 BYTE                   6803
         B     GRD03100                                            6803
         EJECT                                                     6803
*                                                                  6803
*                                                                  6803
*        FOR TEXT DATA,THE DATA FIELD IS UPDATED TWO BYTES,THE     6803
*        LENGTH READ IS REDUCED BY TWO AND A CHECK IS MADE TO SEE  6803
*        IF ONLY ONE MORE CHARACTER IS DESIRED. IF LESS WE ARE     6803
*        DONE. OTHERWISE A SIMILAR SCAN IS DONE HERE FOR A SET     6803
*        MODE. IF NOT PRESENT TWO CHARACTERS ARE MOVED IN AND      6803
*        THE FIELDS ARE UPDATED BY TWO. THE LOOP CONTINUES.        6803
*                                                                  6803
*                                                                  6803
GRD03700 LA    REG0,2              TEXT                            6803
GRD03800 SR    RETURN,REG0         REDUCE BY 2                     6803
         AR    REGA,REG0           MOVE BY 2                       6803
GRD03850 C     RETURN,F1                                           6803
         BE    GRD04100                                            6803
         BNH   GRD04200                                            6803
         CLI   0(REGA),X'2A'       SET MODE                        6803
         BE    GRD03000            YES EXIT                        6803
         CR    REG15,REG0          TWO LEFT                        6803
         BL    GRD03900            NO FINISH UP                    6803
         MVC   0(2,REGE),0(REGA)   MOVE IN 2 CHAR                  6803
         AR    REGE,REG0           INCR BY TWO                     6803
         SR    REG15,REG0          DECREMENT BY TWO                6803
         BZ    GRD04000            NO MORE TO DO                   6803
         B     GRD03800                                            6803
GRD03900 MVC   0(1,REGE),0(REGA)   MOVE IN LAST CHAR               6803
GRD04000 SR    REGA,REGA           SET TERM CODE=0                 6803
         B     GRD02000            EXIT                            6803
GRD04100 MVC   0(1,REGE),0(REGA)   MOVE IN LAST CHAR               6803
         S     REG15,F1                                            6803
         BZ    GRD04000                                            6803
         EJECT                                                     6803
*                                                                  6803
*                                                                  6803
*        IF ALL THE TEXT IN THIS READ IS REMOVED THE TEXT SW IS    6803
*       SET TO SAY WE ARE CURRENTLY PROCESSING TEXT. THE CASE WHERE6803
*        THE CURRENT MODE WAS NOT TEXT IS BRANCHED IN BELOW THE    6803
*        SWITCH SETTING INSTRUCTION. THEN THE RESIDUAL COUNT IS    6803
*        SAVED,IF A CURSOR HAD BEEN ENCOUNTERED,THE TERMCODE AND   6803
*        EXIT PROCESSING IS BRANCHED TO,AND THE STORAGE ADDRESS,   6803
*        INCREMENT,AND SO FORTH ARE SAVED.                         6803
*                                                                  6803
GRD04200 OI    WRKSW,TEXT          WE'RE PROCESSING TEXT           6803
GRD04300  ST   R15,WRKRESCT                                        6803
         TM    WRKSW,CURSOR                                        6803
         BO    GRD01950            FIX UP RESIDUAL & EXIT          6803
         L     REGA,WRKPL          DATA IN AREA                    6803
         L     REGC,WRKDECB+20     LENGTH LAST READ                6803
         ST    REGE,WRKSTRG        SAVE STORAGE ADDR               6803
         ST    REG0,WRKINCR        SAVE INCR                       6803
         B     GRD02550                                            6803
GRD04400 XI    WRKSW,TEXT          TURN OFF SW                     6803
         B     GRD03850                                            6803
         EJECT                                                     6803
*                                                                  6803
*                                                                  6803
*        THIS AREA OF CODING SIMULATES A READ FROM THE GDOA. IF    6803
*        IT WAS ALREADY DONE THE TERMCODE AND EXIT PROCESSING IS   6803
*        BRANCHED TO. OTHERWISE THE DONE SWITCH IS SET. IF THERE   6803
*        IS NO DATA IN THE GDOA THE TERMCODE AND EXIT PROCESSING   6803
*        IS BRANCHED TO. OTHERWISE THE GDOA IS POINTED TO,THE      6803
*        LENGTH FIELD IS SET UP AND PROCESSING PROCEEDS JUST       6803
*        BEYOND THE READS.                                         6803
*                                                                  6803
*                                                                  6803
GRD04500 TM    WRKSW,DONE                                          6803
         BO    GRD02400                                            6803
         OI    WRKSW,DONE          SET DONE SW-MEANS DATA          6803
         CLC   WRKEXT,ZERO         ANY IN GDOA                     6803
         BZ    GRD02400            NO-DONE                         6803
         L     REG0,WRKEXT                                         6803
         L     R15,GDSAOACB        OACB                            6803
         L     REGA,12(R15)         CRSA                           6803
         CLC   GDSGDOAL,30(R15)                                    6803
         BNE   GRD04600                                            6803
         LA    REGA,2(REGA)        POSITION BEYOND SET MODE        6803
GRD04600 B     GRD01700           PORCESS IN GDOA                  6803
         EJECT                                                     6803
*                                                                  6803
*              ROUTINE TO TRANSLATE LOGICAL BUFFER ADDRESS         6803
*              TO PHYSICAL BUFER ADDRESS-LOG ADDR IN REG1          6803
*                                                                  6803
GRDTRAN1 SR    REG0,REG0           ZERO EVEN REG                   6803
         LH    REGE,GDSGDOAL                                       6803
         S     REGE,SIX            GDOA LEN-6                      6803
         DR    REG0,REGE           REM IN R0 RET TO CALLING PROG   6803
         LH    REGE,GDSBCTEL       BCT ELEM PTR                    6803
         L     REGF,GTMBCTBL       BCT ADDR                        6803
         MH    REGE,F3+2                                           6803
         CLC   GDSGDOAL,H256                                       6803
         BL    GRDTRAN5                                            6803
GRDTRAN2 SR    REGC,REGC           ZERO                            6803
         IC    REGC,2(REGE,REGF)   1ST COUNT                       6803
         CR    REGC,PARM           EQUAL                           6803
         BE    GRDTRAN3            YES SEGMENT FOUND               6803
         IC    REGC,1(REGE,REGF)   GET PTR TO NEXT                 6803
         MH    REGC,F3+2                                           6803
         CR    REGC,REGE           ANOTHER ENTRY                   6803
         BE    ERR1                                                6803
         LR    REGE,REGC                                           6803
         B     GRDTRAN2            CONTINUE                        6803
GRDTRAN3 SRDA  REGE,32             CONVERT TO                      6803
         D     REGE,F3             PHYSICAL ADDR                   6803
         MH    REGF,H256           FROM ENTRY COUNT                6803
GRDTRAN4 LR    PARM,REGF           PUT IN REG1                     6803
         BR    RETURN              REM IN REG0-RETURN              6803
GRDTRAN5 AR    REGE,REGF                                           6803
         LH    REGF,GDSBCTEL                                       6803
         MH    REGF,H256           COMPUTE BUFFER ADDR             6803
         CLC   0(1,REGE),GDSBCTID  IN 1ST HALF                     6803
         BE    GRDTRAN4                                            6803
         LA    REGF,128(REGF)      POINT TO SECOND HALF            6803
         B     GRDTRAN4                                            6803
         EJECT                                                     6803
ERR1     MVI   0(ERRCD),PARMER     SET PARM ERROR                  6803
         B     GRDEXIT                                             6803
ERR2     MVI   19(ERRCD),RDTERR    RDTYPE PARM IN ERROR            6803
         B     ERR1                                                6803
ERR3     MVI   0(ERRCD),IO         IO ERROR                        6803
         B     GRDEXIT
         EJECT                                                     6803
STORLOC  EQU   4                                                   6803
NULL     EQU   20                                                  6803
LAST     EQU   X'80'                                               6803
COUNT    EQU   8                                                   6803
RDTYP    EQU   12                                                  6803
TMCD     EQU   16                                                  6803
C1       EQU   20                                                  6803
K1       EQU   24                                                  6803
C2       EQU   28                                                  6803
K2       EQU   32                                                  6803
LEVL2    EQU   X'10'                                               6803
KEYTB    EQU   X'33C'                                              6803
STAT     EQU   24                                                  6803
NOTDONE  EQU   X'01'                                               6803
CURSOR   EQU   X'02'                                               6803
TEXT     EQU   X'04'                                               6803
DONE     EQU   X'08'                                               6803
PARMER   EQU   X'08'                                               6803
RDTERR   EQU   X'04'                                               6803
IO       EQU   X'04'                                               6803
REG0     EQU   0                                                   6803
PARM     EQU   1                                                   6803
REGA     EQU   2                                                   6803
REGB     EQU   3                                                   6803
REGC     EQU   4                                                   6803
WORK     EQU   5                                                   6803
ERRCD    EQU   6                                                   6803
GTMREG   EQU   7                                                   6803
GDSREG   EQU   8                                                   6803
BASE     EQU   9                                                   6803
REGE     EQU   10                                                  6803
REGF     EQU   11                                                  6803
SAVE     EQU   13                                                  6803
RETURN   EQU   14                                                  6803
R15      EQU   15                                                  6803
REG15    EQU   15                                                  6803
ANTIDNE  EQU   X'FE'                                               6803
EQIVIN   EQU   X'80'                                               6803
         EJECT                                                     6803
F1       DC    F'1'                                                6803
ZERO     DC    4F'0'                                               6803
TWO      DC    F'2'                                                6803
FIVE     DC    F'5'                                                6803
SIX      DC    F'6'                                                6803
F3       DC    F'3'                                                6803
F256     DC    H'0'                                                6803
H256     DC    H'256'                                              6803
MOVE     MVC   0(1,REGE),0(REGF)                                   6803
         EJECT                                                     6803
WORKAREA DSECT                                                     6803
WRKPARM  DS    F                                                   6803
WRKRTNCD DS    F                                                   6803
WRKSTRG  DS    F                                                   6803
WRKCNT   DS    F                                                   6803
WRKRDTYP DS    F                                                   6803
WRKTRMCD DS    F                                                   6803
WRKC1    DS    F                                                   6803
WRKK1    DS    F                                                   6803
WRKC2    DS    F                                                   6803
WRKK2    DS    F                                                   6803
WRKST    DS    F                                                   6803
WRKLEN   DS    F                                                   6803
WRKEXT   DS    F                                                   6803
WRKDECB  DS    8F                                                  6803
WRKPL    DS    F                                                   6803
WRKBUF   DS    H                                                   6803
WRKSW    DS    H                                                   6803
WRKRESCT DS    F                                                   6803
WRKSAVE  DS    18F                                                 6803
WRKINCR  DS    F                                                   6803
WRKTEMP  DS    F                                                   6803
WRKPRLST DS    4F                                                  6803
         COPY  GDSCB
         COPY  GSPCB
         COPY  GTMCB
         END
