         TITLE 'INDEV - INITIALIZE DEVICE ROUTINE'          D11
*
*
*        INDEV IS ENTERED FROM DIRECTOR PART 2 WITH THE ADDRESS OF
*        THE WORK AREA IN REGISTER 1. THE FIRST WORD OF THE WORK
*        AREA CONTAINS THE ADDRESS OF THE PARAMETER LIST LISTED
*        BELOW.
*
*                        +0  A(GSPCBVAR)
*                        +4  A(UNITVAR)
*                        +8  A(GTMCBVAR)
*                        +12 A(GDOALNVAR)   OPTIONAL
*
*
*
*        INDEV WILL LOAD THE FOLLOWING ROUTINES             D11
*        IF THEY ARE NOT ALREADY LOADED:                    D11 ZA15418
*        BUFFER MANAGEMENT-IFFAHAO2
*        DATA GENERATOR   -IFFAHAO4
*        DATA STORE       -IFFAHA05
*        SCALE            -IFFAHAO6
*        SCISSOR          -IFFAHAO7
*        UPDATE           -IFFAHA13/14                      D11 ZA15418
*
*        EXTERNAL REFERENCES ARE MADE TO :
*
*        INGDS-IFFAAAO5
*
*        EXTERNAL MACROS USED ARE:
*
*        GETMAIN
*        SPAR
*        SAEC
*        LINK
*        LOAD
*        OPEN
*        CLOSE
*        FREEMAIN
*
         EJECT
*
*        ON ENTRY THE BASE REGISTER IS SET UP, REGISTERS ARE SAVED,
*        THE RETURN ARRAY IS INITIALIZED, AND THE WORK AREA DSECT
*        IS INITIALIZED.
*
*0873,302000,310000,526000,570000                                  4746
*2023,562000                                                       4324
*0114,434000,442000-444000,458000-466000,474000,486000-488000,     000A
*0114,492000,574000-584000,714000,870000-876000                    000A
*C370000-374000,D932000,C398000,C232000-234000                   A37988
*A616200-617600,789000                                      D11 ZA15418
         EJECT                                              D11
IFFAAA03 CSECT                                              D11
GSPTIN   SAVE  (14,12)
         BALR  BASE,0              ESTABLISH ADDRESSABILITY
         USING *,BASE
         LR    WORK,PARM           ADDR OF WORK AREA
         USING WORKCORE,WORK       WORK DSECT
         SPACE 5
*
*        THE PARAMETERS ARE CHECKED FOR VALIDITY NEXT AND ERROR
*        RETURNS ARE MADE IF THEY ARE INVALID. THE GDOA LENGTH
*        PARAMETER IS NOT CHECKED FOR VALIDITY.
*
         L     PARM,WRKPARM        PARM LIST IN REG
         L     REGA,GSP(PARM)      VARIABLE WITH GSPCB ADDR
         L     GSPREG,ZERO(REGA)   GSPCB ADDR
         USING GSPCB,GSPREG        GSPCB DSECT
         L     ERRCD,WRKRTNCD      RETURN CODE ARRAY ADDR
         XC    ZERO(20,ERRCD),ZERO(ERRCD) ZERO RETURN ARRAY
         XC    WRKSPVSR(12),WRKSPVSR ZERO SUPERVISOR PARAMETER LIST
         CLI   GSPCBID,GSPID       VALID GSPCB
         BNE   ERR1                NO
         LTR   REGA,REGA           ANY MORE PARMS
         BL    ERR2                NO
         SR    GTMREG,GTMREG       SET TO ZERO UNTIL GETMAIN
         L     REGA,LOGUNT(PARM)   LOAD ADDR OF LOGICAL UNIT
         L     REGB,ZERO(REGA)     LOAD UNIT INTO REG
         C     REGB,SMALLEST       UNIT LESS THAN SMALLEST ALLOWED
         BL    ERR3                YES
         C     REGB,LARGEST        UNIT GR THAN LARGEST
         BH    ERR3                YES
         LTR   REGA,REGA           IS ANOTHER PARM PASSED
         BL    ERR2                NO
         EJECT
*
*        MAIN STORAGE FOR THE CONTROL BLOCK, DCB, GACBS, COM AREAS,
*        AND THE BUFFER CONTROL TABLE ARE OBTAINED WITH A CONDITIONAL
*        GETMAIN REQUEST.  IF THE STORAGE IS NOT AVAILABLE THE
*        ROUTINE WILL EXIT WITH AN ERROR CODE TO THE CALLER.
         ST    SAVE,WRKSAVE+4      SAVE HIS AREA IN MINE
         LA    REGB,WRKSAVE        SAVE MY ADDR IN HIS
         ST    REGB,EIGHT(SAVE)
         LR    SAVE,REGB           SET UP SAVE REG
         LA    REGB,GTMLEN         COMPUTE LENGTH OF CORE
         LA    REGB,GACBLEN3(REGB) ADD 3 GACB LENS
         LA    REGC,DCBLEN         LENGTH OF DCB
         AR    REGB,REGC           REQUIRED
         A     REGB,BCTLEN
         ST    REGB,FAKE           SAVE LENGTH
*        THIS DOES NOT IMPAIR REENTERANCY
         GETMAIN EC,LV=(REGB),A=WRKLIST,SP=0,MF=(E,WRKGETMN) GET CORE
         LTR   15,15               CORE AVAILABLE
         BNE   ERR4
         L     GTMREG,WRKLIST      LOAD ADDR OF AREA
         USING GTMCB,GTMREG
         EJECT
*
*        THE DCB SKELETON IS MOVED INTO THE GETMAIN CORE AND THE
*        UNIT PARAMETER IS CONVERTED TO DECIMAL, UNPACKED AND PLACED
*        IN THE DCB.  THE DCB IS THEN OPENED.  IF THE OPEN IS
*        UNSUCCESSFUL OR IF THE DEVICE IS ALREADY OPEN FOR ANOTHER
*        GTMCB THE DCB IS CLOSED IF NECESSARY(IN THE SECOND CASE)
*        AND THE STORAGE IS FREED.  THEN THE PROGRAM RETURNS TO
*        THE CALLER WITH A RETURN CODE.
         MVC   ZERO(GTMLEN,GTMREG),SKELGTM MOVE IN SKELETON CTL BLK
         ST    GTMREG,GTMGTMCB     PLACE ADDR IN CTL BK
         ST    GSPREG,GTMGSPCB     ADDRESS OF THE GSPCB
         MVC   DCB(DCBLEN),DCB1    MOVE IN SKELETON DCB
         L     REGA,0(REGA)        VALUE IN REG
         CVD   REGA,WRKGETMN       CONVERT IT TO DECIMAL
         UNPK  WRKLIST(4),WRKGETMN+6(3)
         MVC   DCB+DDNM(TWO),WRKLIST ADD TO DDNAME
         MVI   WRKGETMN,128
         OPEN  (DCB),MF=(E,WRKGETMN)
         TM    DCBOFLG,XOPNFLG    TEST FOR SUCCESSFUL OPEN       A37988
         BZ    ERR3               BRANCH IF DCB NOT OPEN         A37988
         LA    REGA,DCB            DCB ADDR
         ST    REGA,GTMGRDCB       IN GTMCB
         L     REGA,DEB(REGA)      ADDR OF DEB
         L     REGA,UCB(REGA)      ADDR OF UCB
         EJECT
*
*        THE UCB FEATURES ARE MOVED INTO THE GTMCB. STANDARD FEATURES
*        ARE ADDED (DEPENDING ON THE 2250 MODEL) TO THE OPTIONAL
*        FEATURE FLAGS ALREADY SET IN THE UCB.
*        FOR A MODEL 1 2250 THE FLAGS THAT ARE SET BY VALUE RATHER
*        THAN BY BIT ARE CHANGED TO BIT FLAGS.
*
         MVC   GTMFEATS,UCBTYP(REGA) MOVE IN UCB TYPE
         MVC   GTMDVADR,PHYSADDR(REGA) PHYS ADDR OF DEVICE
         NI    GTMDVADR,CHAN       REMOVE ALL BUT CHANNEL ADDR
         L     REGA,GSPGTMCB
TIN00010 LTR   REGA,REGA
         BZ    TIN00020
         CLC   DVADRDSP(2,REGA),GTMDVADR  SAME TERMINAL
         BE    ERR3                ERROR
         L     REGA,NXGTMDSP(REGA)      NEXT ONE
         B     TIN00010
TIN00020 TM    GTMFEATS,MODEL3     MODEL 3
         BO    TIN00060            YES
         TM    GTMFEATS,MODEL2     MODEL 2
         BO    TIN00070
         MVC   GTMFEATS+2(1),GTMFEATS+1 MOVE BYTE OVER ONE
         NI    GTMFEATS+2,X'0F'    GET RID OF TOP 4 BITS
*                                  NOTE: BECAUSE THE SWITCHES ARE
*                                  SET BY VALUE THE CHECK WOULD REQUIRE
*                                  TEN TM INSTR IF NOT DONE THIS WAY.
         NI    GTMFEATS+1,X'F0'
         CLI   GTMFEATS+2,GDF+CHAR GDF & CHAR GEN
         BNL   TIN00100                                            4746
         CLI   GTMFEATS+2,GDF      GDF ONLY
         BNL   TIN00090
         CLI   GTMFEATS+2,CHAR     CHAR GEN ONLY
         BNL   TIN00080                                            4746
         EJECT
*
*        THE BUFFER CONTROL TABLE IS THEN SET TO ZERO AND THE
*        SYSTEM GDS IS OPENED.  THE SYSTEM GDS HAS A 256 BYTE
*        GDOA AND IT IS A LEVEL 2 GDS.  THEN FLOW CONTROL MANAGEMENT
*        IS CALLED TO INITIALIZE THE FLOW CONTROL TABLE AND THE
*        FLOW CONTROL STRUCTURE IN THE BUFFER.  IF THE CALL
*        TO FLOW CONTROL MANAGEMENT IS UNSUCCESSFUL, THE DCB
*        IS CLOSED, THE SYSTEM GDS IS TERMINATED, AND THE STORAGE
*        OBTAINED IS RELEASED.
*
TIN00050 XC    BCT(256),BCT        ZERO OUT START OF BCT
         XC    BCT+256(BCTLEN1-256),BCT+256 ZERO OUT REST OF BCT
         LA    REGB,BCT
         ST    REGB,GTMBCTBL       ADDR OF BCT
         LA    REGA,GTMSYGDS       SYSTEM GDS
         ST    REGA,WRKGETMN+4     SET UP PARM LIST FOR OPEN
         LA    REGA,GTMGTMCB       VARIABLE CONTAINING GTMCB ADDR
         ST    REGA,WRKGETMN       IN PARM LIST
         LA    REGA,TWFIFSX        GDOA LEN IS 256
         ST    REGA,WRKGETMN+8
         LA    REGA,TWO            LEVEL2
         ST    REGA,WRKLIST
         LA    REGA,WRKLIST        ADDRESS OF LEVEL VAR
         ST    REGA,WRKGETMN+12
         OI    WRKGETMN+12,X'80'   SET LAST PARAMETER FLAG
         LA    PARM,WRKGETMN
*///           OPEN GDS
*///
         ST    PARM,WRKPARM1           SET UP PTRS TO PARM LIST  A37988
         MVC   WRKRTN1(FOUR),WRKRTNCD  POINTER TO GSPARRAY       A37988
         LA    PARM,WRKPARM1          SET UP INPUT FOR HA01      A37988
         L     REGA,16
         L     REGA,CVTLINK(REGA)  ADDR OF LINKLIB DCB
         LINK  EP=IFFAAA05,MF=(E,(1)),SF=(E,WRKSPVSR)
         CLI   0(ERRCD),X'00'      WAS THERE AN ERROR
         BNE   ERR5B               YES, ERROR IN OPEN
         EJECT
         LA    REGB,ONE            CODE FOR FLOW CTL
         ST    REGB,WRKGETMN       FOR FLOW CTL
         ST    GTMREG,WRKGETMN+4
*                   CALL FLOW CONTROL WITH CODE 1 TO INITALIZE  FCT
         LA    PARM,WRKPARM1          SET UP INPUT FOR HA01      A37988
         LINK  EP=IFFAHA01,MF=(E,(1)),SF=(E,WRKSPVSR)
         CLI   0(ERRCD),X'00'      WAS THERE AN ERROR
         BNE   ERR5                YES
         EJECT
*
*        THE GACBS AND COM AREAS ARE ZEROED AND THE POINTERS ARE
*        INITIALIZED.  EACH GACB POINTS TO THE GTMCB, THE NEXT
*        GACB, AND TO ITS OWN COM AREA.  THE GACBS ARE CHAINED SO
*        THAT THE GRMCB POINTS TO THE GSP GACB, THAT ONE POINTS TO
*        THE DIRECT ENTRY GACB, (NOT YET IMPLEMENTED) AND THAT
*        ONE POINTS TO THE PANIC GACB.  THEY ARE SPARED SUCH THAT
*        THE GASP GACB HAS PRIORITY 0, THE DIRECT ENTRY GACB HAS
*        PRIORITY 1, AND THE PANIC GACB HAS PRIORITY 127.
*
TIN00030 XC   GACB1PTR(GACBLEN3),GACB1PTR
         LA    REGA,DCB            ADDR OF DCB
         ST    REGA,GACB1+4        IN GACB1
         ST    REGA,GACB3+4        IN GACB3
         LA    REGA,COM1           COMM
         ST    REGA,GACB1          IN GACB1
         LA    REGA,COM3
         ST    REGA,GACB3
*///                               OBTAIN ENTRY POINT TO ATTN HNDG AND
*///                               PANIC ATTN IN REGA, PANIC IN REGB
         SAEC  EP=0,RESTART=NO,MF=(E,GACB1)
         SAEC  EP=0,RESTART=NO,MF=(E,GACB3)
         EJECT
         MVC   WRKGETMN(EIGHT),SPAR1
         SPAR  (GACB1),PRTY=0,MF=(E,WRKGETMN)
         SPAR  (GACB3),PRTY=1,MF=(E,WRKGETMN)
         LA    REGA,GACB1PTR       PLACE ADDR OF GACB IN
         ST    REGA,GTMGACBA       GTMCB
         LA    REGA,GACB3PTR       CHAIN THE GACBS
         ST    REGA,GACB1PTR
         ST    GTMREG,GACB1GTM     STORE GTMCB ADDR IN GACBS
         ST    GTMREG,GACB3GTM
         MVC   GTMNXGTM(4),GSPGTMCB ADD GTMCB TO CHAIN OF
         ST    GTMREG,GSPGTMCB     GTMCBS IN GSPCB
         L     REGA,WRKPARM        PARM LIST ADDR
         L     REGB,8(REGA)        ADDR OF GTMCB VAR
         ST    GTMREG,0(REGB)      STORE ADDR OF GTMCB IN VAR
         TM    8(REGA),X'80'       ANY MORE PARMS
         BO    TIN05400
         CLC   13(3,REGA),GSPNULLV+1 IS IT NULL
         BE    TIN05400            YES
         EJECT
*
*        IF THE GDOA LENGTH WAS PASSED, IT IS PLACED IN THE GTMCB.
*        THE KEYBOARD IS UNLOCKED NEXT.
*        THE INTERNAL ROUTINES ARE CHECKED IN THE STATUS TABLE AND
*        ARE LOADED IF NECESSARY.  THE ROUTINE THEN RETURNS TO
*        THE CALLING PROGRAM WITH A SUCCESSFUL RETURN CODE.
*
         L     REGB,GDOA(REGA)     NO
         MVC   GTMGDOAL(2),2(REGB) MOVE IT IN
TIN05400 L     PARM,GTMDECB1
         L     REGA,GTMGRDCB       LOAD DCB ADDR
         WAIT  ECB=(1)             WAIT
         L     PARM,GTMDECB1       NOW WE WILL UNLOCK THE KEYBOARD
         GREADR (PARM),MIP,(REGA),WRKGETMN,MF=E
         B     TIN00120            GO TO LOAD INTERNAL ROUTINES
TIN00055 L     SAVE,4(SAVE)        RESET SAVE REG
         RETURN (14,12),T
TIN00060 OI    GTMFEATS+1,LP+ABS SET BITS FOR LP & ABS VECT
         NI    GTMFEATS+1,X'F0'    CLEAR OUT LOWER FOUR BITS
         OI    GTMFEATS+1,GDFSW+CHARSW CHARGEN & GDF(INCR VECT)
         B     TIN00050
TIN00070 OI    GTMFEATS+1,ABS      ABSOLUTE VECT
         NI    GTMFEATS+1,X'F0'    CLEAR OUT LOWER FOUR BITS
TIN00080 OI    GTMFEATS+1,CHARSW   CHAR ONLY                       4746
         B     TIN00050
TIN00090 OI    GTMFEATS+1,GDFSW    GDF ONLY
         B     TIN00050
TIN00100 OI    GTMFEATS+1,CHARSW+GDFSW  CHAR GEN AND GDF           4746
         B     TIN00050
TIN00120 L     REGA,STAT(ERRCD)    LOAD ADDR OF STATUS TABLE
         L     REGB,BMGT(REGA)     LOAD ADDR OF BUFFER MGT
         LTR   REGB,REGB           IS IT ALREADY LOADED
         BNE   TIN00055            YES, EXIT
         L     REGC,16             ADDR OF CVT
         L     REGC,CVTLINK(REGC)  ADDR OF LINK LIBRARY DCB
         LOAD  EP=IFFAHA02
         ST    REGZERO,BMGT(REGA)  ADDR IN STATUS TABLE
         LOAD  EP=IFFAHA04
         ST    REGZERO,DGEN(REGA)  ADDR IN STATUS TABLE
         LOAD  EP=IFFAHA05
         ST    REGZERO,DSTOR(REGA) ADDR IN STATUS TABLE
         LOAD  EP=IFFAHA06
         ST    REGZERO,SCALE(REGA)  ADDR IN STATUS TABLE
         SR    REGB,REGB                                           000B
         IC    REGB,SCALE+9(REGA)  PICK UP CONVERT ENTRY COUNT     000B
         MH    REGB,H12            COMPUTE DISPLACEMENT            000B
         AH    REGZERO,SCALE+10(REGA) COMPUTE ENTRY POINT          000B
         ST    REGZERO,0(REGB,REGA) STORE IN ENTRY                 000B
         OI    SCALE+8(REGA),X'08' SET SW, SCALE LOADED            000B
         LOAD  EP=IFFAHA07
         ST    REGZERO,SCISS(REGA) ADDR IN STATUS TABLE
         LOAD  EP=IFFAHA13         UPDATE                   D11 ZA15418
         ST    REGZERO,UPDATE(REGA) SAVE ADDR IN STATABLE   D11 ZA15418
         SR    REGB,REGB                                    D11 ZA15418
         IC    REGB,UPDATE+9(REGA) PICKUP H14 ENTRY COUNT   D11 ZA15418
         MH    REGB,H12            STATAB ENTRY IS LEN=12   D11 ZA15418
         AH    REGZERO,UPDATE+10(REGA) COMPUTE H14 EP       D11 ZA15418
         ST    REGZERO,0(REGB,REGA) SAVE IN H14 STATAB ENT  D11 ZA15418
         OI    UPDATE+8(REGA),X'08' INDICATE LOADED         D11 ZA15418
         B     TIN00055            RETURN
         EJECT
ERR1     LA    REGA,ONE            BAD GTMCB
ERR1A    ST    REGA,PARE(ERRCD)
         MVI   ZERO(ERRCD),PARMER
ERR1B    RETURN (14,12),T
ERR2     LA    REGA,ZERO
         B     ERR1A
ERR3     MVC   PARE(4,ERRCD),TWOFLD  BAD UNIT
         MVI   ZERO(ERRCD),PARMER
         LTR   GTMREG,GTMREG       WAS GETMAIN ISSUED
         BZ    ERR1B               NO,RETURN
         B     ERR5A
ERR4     LA    REGA,FOUR           STORAGE EXCEEDED
         ST    REGA,STORAG(ERRCD)
         MVI   ZERO(ERRCD),STOREXCD
         B     TIN00055
ERR5     LA    REGA,GTMSYGDS       SYSTEM GDS
         ST    REGA,WRKGETMN
         MVI   WRKGETMN,X'80'
         LA    REGA,WRKGETMN
         ST    REGA,WRKPARM1      SET UP LIST POINTER            A37988
         LA    PARM,WRKPARM1                                     A37988
         MVC   WRKRTN1(FOUR),WRKRTNCD  POINTER TO GSPARRAY       A37988
         MVC   WRKGSPAR(CODES),ZERO(ERRCD)   SAVE ERROR CODES    A37988
         L     REGA,16             ADDR OF THE CVT
         L     REGA,CVTLINK(REGA)  ADDR OF LINKLIB DCB
         LINK  EP=IFFAAA06,DCB=(REGA),MF=(E,(1)),SF=(E,WRKSPVSR)
         MVC   ZERO(CODES,ERRCD),WRKGSPAR   RESTORE ERROR CODES  A37988
ERR5B    MVI   WRKGETMN,128
         CLOSE (DCB),MF=(E,WRKGETMN)
ERR5A    L     REGZERO,FAKE        LENGTH OF CORE
         LR    PARM,GTMREG         ADDRESS OF CORE
         FREEMAIN R,LV=(0),A=(1)   FREE CORE
         B     TIN00055
         EJECT
REGZERO  EQU   0
PARM     EQU   1
ERRCD    EQU   2
REGC     EQU   4
WORK     EQU   5
GSPREG   EQU   6
GTMREG   EQU   7
BASE     EQU   9
REGA     EQU   10
REGB     EQU   11
SAVE     EQU   13
NXGTMDSP EQU   0
DVADRDSP EQU   X'3A'
BCTLEN   DC    F'384'              ENOUGH FOR A 32K BUFFER
BCTLEN1  EQU   384
GACBLEN3 EQU   160                                                 000A
TWOFLD   DC    F'2'
SUBSEG   DC    F'123'
H12      DC    H'12'                                               000B
SKELGTM  DC    2F'0'               ZERO GTMCB
         DC    X'F202'             EXCEPT ID
         DC    X'0000'
         DC    11F'0'
         DC    H'256'              AND DEFAULT GDOA LEN
         DC    H'0'
         DC    F'0'
         DC    3X'00'
         DC    X'02'
GTMLEN   EQU   *-SKELGTM
SPAR1    SPAR  0,MF=L
DCB1     DCB   DSORG=GS,MACRF=(RC,WC),GTYPE=BASIC,DDNAME=FT00F001,     X
               GNCP=2
DCBLEN   EQU   *-DCB1
TWFIFSX  DC    F'256'
GSP      EQU   0
ZERO     EQU   0
GSPID    EQU   X'01'
EIGHT    EQU   8
LOGUNT   EQU   4
STORAG   EQU   12
THREE    EQU   3
TWO      EQU   2
DDNM     EQU   42
DEB      EQU   44
UCB      EQU   32
FOUR     EQU   4
UCBTYP   EQU   16
PANIC    EQU   900
STAT     EQU   24
CVTLINK  EQU   8
DGEN     EQU   840
SCISS    EQU   876
SCALE    EQU   864
UPDATE   EQU   936                 IFFAHA13,14 STATAB LOC   D11 ZA15418
BMGT     EQU   816
DSTOR    EQU   852
SMALLEST DC    F'7'
LARGEST  DC    F'99'
PHYSADDR EQU   4
CHAN     EQU   X'3F'
MODEL3   EQU   3
MODEL2   EQU   2
GDF      EQU   6
CHAR     EQU   3
ONE      EQU   1
GACBNXT  EQU   64
GACBGTM  EQU   60
GDOA     EQU   12
LP       EQU   X'20'
ABS      EQU   X'80'
GDFSW    EQU   X'04'
CHARSW   EQU   X'08'
PARE     EQU   16
PARMER   EQU   X'08'
STOREXCD EQU   X'10'
XOPNFLG  EQU   X'10'              MASK FOR DCB OPEN BIT          A37988
CODES    EQU   20                  LENGTH OF GSPARRAY            A37988
PATCH    DC    64X'FF'             PATCH AREA               D11
         EJECT
WORKCORE DSECT
WRKPARM  DS    F
WRKRTNCD DS    F
FAKE     DS    F
WRKSPVSR DS    3F
WRKGETMN DS    2D
WRKLIST  DS    F
WRKSAVE  DS    18F
WRKGSPAR DS    6F                 SAVE AREA FOR GSPARRAY         A37988
WRKPARM1 DS    F                  ARGUMENT ADDRESS LIST          A37988
WRKRTN1  DS    F                  POINTER TO GSPARRAY            A37988
         COPY  GSPCB
         COPY  GTMCB
*        THE FOLLOWING WORDS ARE ADDED TO THE GTMCB FOR THE OPEN
*        ROUTINE.
*
DCB      DS    13F
DCBOFLG  EQU   DCB+48             DCB OPEN FLAG FIELD            A37988
BCT      DS    384X
GACB1PTR DS    F
GACB1GTM DS    F
GACB1    DS    14F
COM1     DS    4F
GACB3PTR DS    F
GACB3GTM DS    F
GACB3    DS    14F
COM3     DS    4F
         COPY  GDSCB
         END
