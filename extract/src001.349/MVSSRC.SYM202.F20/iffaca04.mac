* TITLE:MPATL-MODIFY POSITION OF AN ATTENTION LEVEL
* STATUS:CHANGE LEVEL 0
* FUNCTION:TO CHANGE THE RELATIVE POSITION OF A SPECIFIED  ATTENTION
*          LEVEL WITHIN THE HIERARCHY OF ALL ATTENTION LEVELS
*          CURRENTLY ASSOCIATED WITH ITS GTMCB.
* ENTRY:ENTERED AT IFFACA04 VIA A CALL TO MPATL.
* INPUT:GR#1 CONTAINS THE ADDRESS OF A WORK/SAVE AREA.THE FIRST WORD
*       CONTAINS THE ADDRESS OF A PARAMETER LIST CONSTRUCTED AS FOLLOWS
*       1.ATTNLEVEL-ADDRESS OF A VARIABLE WHICH CONTAINS THE ADDRESS
*         OF AN ATTENTION LEVEL.
*       2.DIRECTION-ADDRESS OF A VALUE INDICATING:
*         A POSITIVE VALUE-DEFINES THE NUMBER OF LEVELS THAT THE SPEC-
*         IFIED ATTENTION LEVEL IS TO BE MOVED UP THE ATTENTION LEVEL
*         HIERARCHY FROM ITS PRESENT LOCATION OR, IF THE 'RELATTNLEVEL'
*         ARGUMENT IS SPECIFIED,THE NUMBR OF LEVELS THAT THE SPECIFIED
*         ATTENTION LEVEL IS TO BE PLACED ABOVE THE RELATIVE ATTENTION
*         LEVEL.
*         A NEGATIVE VALUE-SAME AS POSITIVE EXCEPT THE SPECIFIED
*         ATTENTION LEVEL MOVES DOWN THE HIERARCHY.
*       3.RELATTNLEVEL-ADDRESS OF A VARIABLE WHICH CONTAINS THE ADDRESS
*         OF THE RELATIVE ATTENTION LEVEL.
* OUTPUT:RESTRUCTURE WITHIN THE ATTENTION LEVEL HIERARCHY.
* EXIT:RETURN TO CALLING PROGRAM VIA REGISTER 14.
* RETURN CODES:4,0 INSUFFICIENT PARAMETERS
*              4,1 INVALID ATTNLEVEL PARAMETER
*              4,2 INVALID DIRECTION PARAMETER
*              4,3 INVALID RELATTNLEVEL PARAMETER
*              0,0 SUCCESSFULL
* ATTRIBUTES:RE-ENTRANT,PROBLEM PROGRAM MODE
* EXTERNAL ROUTINES:ATTNINQ
*                   GIOCR
* NOTES:THIS ROUTINE EXAMINES THE FOLLOWING CONTROL BLOCKS:
*       1.GTMCB
*       2.GSPCB
*       3.MAIN LINE GACB
*       4.DIRECT ENTRY GACB
* EXAMPLES:THE FOLLOWING EXAMPLES ARE SHOWN TO AVOID ANY POSSIBLE
*          MISUNDERSTANDING OF HOW THE INPUT PARAMETERS ARE SPECIFIED.
*
* ******   *****   *****   *****   *****   *****   *******
* *    *   * 0 *   * A *   * B *   * C *   * D *   *  E  * FORWARD PTR
* ******   *****   *****   *****   *****   *****   *******
* * A  *   * B *   * C *   * D *   * E *   * F *   *GTMCB* BACKWARD PTR
* ******   *****   *****   *****   *****   *****   *******
* *    *  * LVLA *  LVLB *  LVLC *  LVLD *  LVLE *  LVLF   *
* ****** ***    ***     ***     ***     ***     ***       ***
*  GTMCB  *      *       *       *       *       *         *
*        POS1   POS2    POS3    POS4    POS5    POS6      POS7
*
*                             *** EXAMPLE A ***
*  THE FOLLOWING METHODS MAY BE USED TO MOVE   LVLF TO POS2.
*   1.ATTNLEVEL=LVLF  DIRECTION=+1  RELATTNLEVEL=LVLA
*   2.ATTNLEVEL=LVLF  DIRECTION=-4
*   3.ATTNLEVEL=LVLF  DIRECTION=-1  RELATTNLEVEL=LVLB
*                             *** EXAMPLE B ***
*  THE FOLLOWING METHODS MAY BE USED TO MOVE   LVLA TO POS6.
*   1.ATTNLEVEL=LVLA  DIRECTION=-1  RELATTNLEVEL=LVLF
*   2.ATTNLEVEL=LVLA  DIRECTION=+4
*   3.ATTNLEVEL=LVLA  DIRECTION=+1  RELATTNLEVEL=LVLE
*                             *** EXAMPLE C ***
*  THE FOLLOWING METHODS MAY BE USED TO MOVE   LVLB TO POS7.
*   1.ATTNLEVEL=LVLB  DIRECTION=+1  RELATTNLEVEL=LVLF
*   2.ATTNLEVEL=LVLB  DIRECTION=+4
*                             *** EXAMPLE D ***
* THE FOLLOWING METHODS MAY BE USED TO MOVE   LVLE TO POS3.
*   1.ATTNLEVEL=LVLE  DIRECTION=-1  RELATTNLEVEL=LVLC
*   2.ATTNLEVEL=LVLE  DIRECTION=-2
*   3.ATTNLEVEL=LVLE  DIRECTION=+1  RELATTNLEVEL=LVLB
*   THE ABOVE EXAMPLES DID NOT SHOW ALL OF THE POSSIBLE COMBINATIONS.
*   THEY ARE INTENDED ONLY AS BASIC EXAMPLES TO SHOW HOW THE INPUT
*   PARAMETERS ARE SPECIFIED AND HOW A VALUE FOR DIRECTION IS DETERMIN-
*   ED BY THE USER.
R0       EQU   0                       PARM REG 0
R1       EQU   1                       PARM REG 1
RLIST    EQU   2                       WORK AREA REG
RPARM    EQU   3                       PARAM LIST REG
RATNLV   EQU   4                       ATTN LEVEL REG
RREL     EQU   5                       REL ATTN LEVEL REG
RDIRECT  EQU   6                       DIRECTION REG
RGTMCB   EQU   7                       GTMCB ADR
RLVL     EQU   8                       INSERTION ATNLEVEL ADR
RBASE    EQU   9                       BASE REG
RA       EQU   10                      WORK REG
RB       EQU   11                      WORK REG
SPARE    EQU   12                      RSVD PL/1
RSAVE    EQU   13                      SAVE AREA PTR
RC       EQU   14                      WORK REG
RD       EQU   15                      WORK REG
ADD1     EQU   1                       ADD INFO 1
ADD2     EQU   2                       ADD INFO 2
ADD3     EQU   3                       ADD INFO 3
AID      EQU   X'04'                   ATTN LEVEL ID
AN       EQU   12                      OFFSET TO AN MASK IN GACB
BKPT     EQU   4                       BACKWARD PTR
BPID     EQU   X'01'                   BACK PTR TO
BPT      EQU   X'1E'                   OFFSET TO BPID
DATA     EQU   8                       START OF DATE IN ENTRY BLOCK
FWPT     EQU   0                       FORWARD PTR
GACBOFF  EQU   8                       OFFSET TO START OF GACB
HASPFK   EQU   X'10'                   HAS PF KEYBOARD
IOK      EQU   X'7F'                   I/O SUCCESSFULL CODE
LAST     EQU   X'80'                   LAST PARAM
LIT1     EQU   X'01'                   OPTION 1
LIT2     EQU   X'02'                   OPTION 2
LIT3     EQU   X'03'                   OPTION 3
LP       EQU   X'08'                   LP RESTART OPTION
OFFSAVE  EQU   8                       SAVE AREA CHAIN
ONE      EQU   1                       ONE
PF       EQU   8                       OFFSET TO PFMASK IN GACB
RCC4     EQU   16                      OFFSET TO ADD INFO
RC4      EQU   X'08'                   RTN CODE 4
RC5      EQU   X'04'                   I/O ERROR
ZERO     EQU   0                       ZERO
IFFACA04 CSECT
*2238,442000-476000                                                000A
         SAVE  (14,12)                 SAVE REGISTERS
         BALR  RBASE,0                 SET UP BASE REG
         USING *,RBASE                 DEFINE BASE REG
         LR    RLIST,R1                LOAD DSECT REG
         USING WORKAREA,RLIST          DEFINE DSECT
         L     RPARM,PLIST             LOAD ADR USER PARM LIST
         USING PARAM,RPARM             DEFINE DSECT
         L     RA,RCA                  LOAD ADR RTN CODE ARRAY
         XC    ZERO(20,RA),ZERO(RA)    INITIALIZE ARRAY
         SR    RREL,RREL               INITIALIZE REG
         ST    RSAVE,SAVE+4            SAVE-SAVE AREA PTR
         LA    RD,SAVE                 LOAD ADR OF MY SAVE AREA
         ST    RD,OFFSAVE(RSAVE)       STORE IN USER SAVE AREA
         LA    RSAVE,SAVE              * SAVE AREAS
         B     AROUND                  BRANCH
ERROR    L     RA,RCA                  LOAD RTN CODE ARRAY ADR
         STC   RB,ZERO(RA)             STORE RTN CODE
         ST    RC,ZERO(RA,RD)          STORE ADD INFO
OUTRTN   L     RSAVE,SAVE+4            RESTORE OLD SAVE AREA PTR
         RETURN (14,12),T              RETURN TO CALLER
AROUND   TM    ATNLV,LAST              LAST PARAM
         BC    14,MP01                 BRANCH IF NO
MP02     SR    RC,RC                   ADD INFO=0
MP03     LA    RB,RC4                  LOAD RTN CODE
         LA    RD,RCC4                 LOAD ADD INFO OFFSET
         B     ERROR                   BRANCH
MP01     L     RATNLV,ATNLV            LOAD INDIRECT PTR TO ATTN LEVEL
         L     RATNLV,ZERO(RATNLV)     LOAD ATN LEVEL ADR
         USING ATTNLEVL,RATNLV         DEFINE DSECT
         CLI   ATTNLVID+1,AID          VALID ATTN LEVEL
         BE    MP04                    BRANCH IF YES
         LA    RC,ADD1                 LOAD ADD INFO
         B     MP03                    BRANCH
MP04     LR    RA,RATNLV               SAVE REG
MP06     CLI   ATTNBPID,BPID           ATN LEVEL POINT TO GTMCB
         BE    MP05                    BRANCH IF YES
         L     RATNLV,ATTNBKPT         LOAD PTR TO NEXT HIGHER LEVEL
         B     MP06                    BRANCH
MP05     L     RGTMCB,ATTNBKPT         LOAD GTMCB ADR
         USING GTMCB,RGTMCB            DEFINE DSECT
         LR    RATNLV,RA               RESTORE REG
         L     RA,GTMGSPCB             LOAD GSPCB ADR
         USING GSPCB,RA                DEFINE DSECT
         L     RB,DIRECTON             LOAD ADR OF DIRECTION PARAM
         LA    RB,ZERO(RB)             ZERO HI ORDER BYTE
         CL    RB,GSPNULLV             DIRECTION=NULL
         BE    MP02                    BRANCH IF DIRECTION=NULL
         L     RDIRECT,ZERO(RB)        LOAD VALUE OF DIRECTION
         LTR   RDIRECT,RDIRECT         IS DIRECTION VALUE = 0
         BZ    OUTRTN                  YES, EXIT IMMEDIATELY
MP07     TM    DIRECTON,LAST           LAST PARAM
         BO    MP08                    BRANCH-LAST PARAM
         L     RB,RELATNLV             LOAD INDIRECT PTR TO REL ATTN
*                                      LEVEL
         LA    RB,ZERO(RB)             ZERO HI ORDER BYTE
         CL    RB,GSPNULLV             REL ATTN LEVEL=NULL
         BE    MP08                    BRANCH IF YES
         L     RREL,ZERO(RB)           LOAD ADR REL ATN LEVEL
         USING ATNLEVL,RREL            DEFINE DSECT
MP09     CLI   ATNLVID+1,AID           VALID ATTN LEVEL
         BE    MP10                    BRANCH IF YES
         LA    RC,ADD3                 LOAD ADD INFO
         B     MP03                    BRANCH
MP10     LR    RB,RREL                 SAVE ADR
         SR    RA,RA                   ZERO COUNT REG
MP11     CLI   ATNBPID,BPID            REL ATTN LEVEL POINT TO GTMCB
         BE    MP12                    BRANCH IF YES
         L     RREL,ATNBKPT            LOAD BACK PTR
         CLR   RREL,RATNLV             BACK PTR=SPEC ATTN LEVEL ADR
         BE    MP13                    BRANCH IF YES
         LA    RA,ONE(RA)              INCREMENT COUNT BY ONE
         B     MP11                    BRANCH
MP12     SR    RA,RA                   ZERO COUNT REG
         LR    RREL,RB                 RESTORE REL ATN LEVEL ADR REG
MP14     CLC   ATNFWPT(4),ZERO1        FORWARD PTR=0
         BE    MP02                    BRANCH IF YES
         L     RREL,ATNFWPT            LOAD FORWARD PTR
         CLR   RREL,RATNLV             FORWARD PTR = ADR OF SPEC'D
         BE    MP15                    BRANCH IF YES
         LA    RA,ONE(RA)              INCREMENT COUNT
         B     MP14                    BRANCH
MP13     LA    RA,1(RA)                BIAS COUNT BY ONE
         LNR   RA,RA                   MAKE COUNT NEGATIVE
MP15     LR    RREL,RB                 RESTORE REL ATN LEVEL REG
         LA    RB,ONE
         LTR   RA,RA                   CHECK DIRECTION TO RELATIVE
*                                      BLOCK
         BM    MP15A
         LTR   RDIRECT,RDIRECT         LESS THAN ZERO, CHECK DIRECTION
         BP    MP16                    IF POSITIVE, DIRECTION OK
         AR    RDIRECT,RB              INCREMENT DIRECTION BY ONE
         B     MP16                    GET FINAL DIRECTION
MP15A    AR    RA,RB                   REMOVE BIAS
         LTR   RDIRECT,RDIRECT         IS DIRECTION POSITIVE
         BM    MP16                    LESS THAN 0, GET FINAL COUNT
         SR    RDIRECT,RB              DECREMENT DIRECTION BY ONE
MP16     AR    RDIRECT,RA              ADD COUNT TO DIRECTION
         LTR   RDIRECT,RDIRECT         DIRECTION = ZERO
         BZ    OUTRTN                  YES, EXIT IMMEDIATELY
MP08     SR    RA,RA                   CLEAR COUNT REG
         LR    RB,RATNLV               SAVE REG CONTENTS
         LTR   RDIRECT,RDIRECT         DIRECTION NEGATIVE
         BC    4,MP17                  BRANCH-NEGATIVE
MP19     CLI   ATTNBPID,BPID           ATN LEVEL POINT TO GTMCB
         BE    MP18                    BRANCH IF YES
         L     RATNLV,ATTNBKPT         LOAD PTR TO NEXT HIGHER LEVEL
         LA    RA,ONE(RA)              INCREMENT COUNT BY ONE
         B     MP19                    BRANCH
MP18     CLR   RDIRECT,RA              COUNT = OR GT DIRECTION
         BC    12,MP20                 BRANCH IF YES
MP22     LA    RC,ADD2                 LOAD ADD INFO
         B     MP03                    BRANCH
MP17     L     RATNLV,ATTNFWPT         LOAD FORWARD PTR
         LTR   RATNLV,RATNLV           FORWARD PTR=0
         BZ    MP21                    BRANCH ON ZERO
         LA    RA,ONE(RA)              INCREMENT COUNT
         B     MP17                    BRANCH
MP21     LNR   RA,RA                   MAKE COUNT NEGATIVE
         CR    RDIRECT,RA              COUNT = OR LT DIRECTION
         BL    MP22                    NO, ERROR EXIT
MP20     L     RATNLV,GTMLATBL         LOAD ADR OF ACTIVE LEVEL
MP23     EQU   *                                                   000A
         ST    RPARM,ATTSAVE                                       000A
         L     RPARM,GTMGACBA          GACB ADDRESS                000A
         LA    RPARM,PF(RPARM)          TRUE GACB ADDR             000A
         L     RA,ZERO(RPARM)           COMMAREA ADDR              000A
         XC    LFORM(64),LFORM          ZERO LIST                  000A
         ATTNINQ (3),MODE=(C,MP24),TYP=ANY,MF=(E,LFORM)            000A
         L     RPARM,ATTSAVE                                       000A
         B     MP25                    BRANCH
MP24     CLC   ATTNAVAL(4),ZERO1       ANY ENTRIES AVAILABLE
         BE    MP23                    BRANCH IF NO
         L     RC,ATTNAVAL             LOAD ADR OF AVAILABLE ENTRY
         MVC   ATTNAVAL(4),ZERO(RC)    UPDATE CHAIN
         MVC   DATA(4,RC),ZERO(RA)     MOVE DATA INTO ENTRY
         CLC   ATTNMLEN(4),ZERO1       DATA ON QUEUE
         BNE   MP26                    BRANCH IF YES
         MVC   ZERO(4,RC),ATTNMLEN     * HANG ENTRY
         ST    RC,ATTNMLEN             * ON QUEUE
         B     MP23                    BRANCH
MP26     L     RD,ATTNMLEN             LOAD ADR OF 1ST ENTRY
MP28     CLC   ZERO(4,RD),ZERO1        ANY MORE ENTRIES
         BE    MP27                    BRANCH IF NO
         L     RD,ZERO(RD)             LOAD ADR OF NEXT ENTRY
         B     MP28                    BRANCH
MP27     MVC   ZERO(4,RC),ZERO(RD)     * HANG ENTRY
         ST    RC,ZERO(RD)             * ON QUEUE
         B     MP23                    BRANCH
MP25     LR    RATNLV,RB               RESTORE REG
         L     RA,GTMGACBA             LOAD ADR OF ML GACB
         LA    RB,GACBOFF(RA)          LOAD START ADR OF GACB
         SAEC  RESTART=NO,MF=(E,(11))
         XC    PF(8,RB),PF(RB)         DISABLE ML GACB
         L     RA,ZERO(RA)             LOAD ADR DE GACB
         LA    RB,GACBOFF(RA)          LOAD START ADR OF GACB
         SAEC  RESTART=NO,MF=(E,(11))
         XC    PF(8,RB),PF(RB)         DISABLE DE GACB
MP29     CLI   ATTNBPID,BPID           BACK PTR POINT TO GTMCB
         BE    MP30                    BRANCH IF YES
         CLC   ATTNFWPT(4),ZERO1       FORWARD PTR=0
         BE    MP31                    BRANCH IF YES
         L     RA,ATTNBKPT             LOAD ADR NEXT HIGHER LEVEL
         MVC   FWPT(4,RA),ATTNFWPT     SPEC ATNLVL FP TO NEXT HIGHER
*                                      ATTN LEVEL FP
         L     RA,ATTNFWPT             LOAD ADR NEXT LOWER LEVEL
         MVC   BKPT(4,RA),ATTNBKPT  -  SPEC ATLV BP TO NEXT LOWER
*                                      ATLV BP
         B     MP32                    BRANCH
MP31     L     RA,ATTNBKPT             LOAD ADR OF NEXT HIGHER LEVEL
         MVC   FWPT(4,RA),ATTNFWPT     SPEC ATLV FP TP NEXT HIGHER
*                                      ATLV FP
         MVC   GTMLATBL(4),ATTNBKPT    SPEC ATLV BP TO GTMCB ATLV PTR
         B     MP32
MP30     CLC   ATTNFWPT(4),ZERO1       SPEC ATLV FP=0
         BE    MP33                    BRANCH IF YES
         L     RA,ATTNFWPT             LOAD ADR NEXT LOWER LEVEL
         MVC   BKPT(4,RA),ATTNBKPT     SPEC ATLV BP TO NEXT LOWER
*                                      ATLV BP
         OI    BPT(RA),BPID            INDICATE LOWER ATLV POINT
*                                      TO GTMCB
         B     MP32                    BRANCH
MP33     XC    GTMLATBL(4),GTMLATBL    ZERO GTMCB ATLV PTR
MP32     XC    ATTNBPID(1),ATTNBPID    TURN OFF BACK PTR ID
         LTR   RDIRECT,RDIRECT         DIRECTION NEGATIVE
         BC    4,MP34                  BRANCH IF NEGATIVE
MP36     L     RLVL,ATTNBKPT           LOAD BP OF SPEC LEVEL
MP38     LA    RA,ONE                  LOAD CONSTANT
         SR    RDIRECT,RA              DECREMENT DIRECTION
         LTR   RDIRECT,RDIRECT         DIRECTION=0
         BZ    MP37                    BRANCH IF 0
         L     RLVL,BKPT(RLVL)         LOAD BACK PTR
         B     MP38                    BRANCH
MP37     EQU   *
         DROP  RREL
         USING ATNLEVL,RLVL
         MVC   ATTNBKPT(4),ATNBKPT     BP OF HIGHER ATLV TO BP OF
*                                      SPEC ATLV
         MVC   ATTNBPID(1),ATNBPID     BPID OF HIGHER ATLV TO BPID
*                                      OF SPEC ATLV
         ST    RLVL,ATTNFWPT           ADR OF HIGHER ATLV TO FP OF
*                                      SPEC ATLV
         ST    RATNLV,ATNBKPT          ADR OF SPEC'D ATLV TO BP OF
*                                      HIGHER ATLV
         CLI   ATTNBPID,BPID           SPEC ATNLV BP= X'01'
         BE    MP39                    BRANCH IF YES
         L     RA,ATTNBKPT             LOAD ADR NEXT HIGHER LEVEL
         ST    RATNLV,FWPT(RA)         ADR OF SPEC ATNLV TO FP OF ATNLV
*                                      POINTED TO BY BP OF SPEC ATLV
         B     MP40                    BRANCH
MP39     XC    ATNBPID(1),ATNBPID      ZERO BPID OF HIGHER LEVEL
         B     MP40                    BRANCH
MP34     LPR   RDIRECT,RDIRECT         MAKE DIRECTION POSITIVE
         L     RLVL,ATTNFWPT           LOAD FP OF SPEC LEVEL
MP42     LA    RA,ONE                  LOAD CONSTANT
         SR    RDIRECT,RA              DECREMENT DIRECTION
         LTR   RDIRECT,RDIRECT         DIRECT=0
         BZ    MP41                    BRANCH=0
         L     RLVL,FWPT(RLVL)         LOAD FORWARD PTR
         B     MP42                    BRANCH
MP41     MVC   ATTNFWPT(4),ATNFWPT     FP TO LOWER ATLV TO FP OF
*                                      SPEC'D ATLV
         ST    RLVL,ATTNBKPT           ADR OF LOWER ATLV TO BP OF
*                                      SPEC ATLV
         ST    RATNLV,ATNFWPT          ADR OF SPEC ATLV TO FP OF
*                                      LOWER ATLV
         CLC   ATTNFWPT(4),ZERO1       FP OF SPEC ATLV=0
         BE    MP43                    BRANCH=0
         L     RA,ATTNFWPT             LOAD FP OF SPEC
         ST    RATNLV,BKPT(RA)         ADR OF SPEC ATLV TO BP OF ATLV
*                                      POINTED TO BY FP OF SPEC ATLV
         B     MP40                    BRANCH
MP43     ST    RATNLV,GTMLATBL         ADR OF SPEC ATLV TO GTMCB
MP40     L     RATNLV,GTMLATBL         LOAD ADR OF ACTIVE LEVEL
         L     RA,GTMGACBA             LOAD GACB ADR
         LA    RB,GACBOFF(RA)          LOAD START ADR ML GACB
         MVC   PF(4,RB),ATTNPFEN       ENABLE PF KEYS
         MVC   AN(4,RB),ATTNANEN       ENABLE A/N SOURCES
         TM    ATTNFLGA,LP             RESTART WANTED ON LP
         BC    14,MP45                 BRANCH-NO
         SAEC  RESTART=YES,MF=(E,(11))
MP45     L     RA,ZERO(RA)             LOAD ADR NEXT GACB
         LA    RB,GACBOFF(RA)          LOAD START ADR OF DE GACB
         MVC   PF(4,RB),ATTNPFDE       ENABLE PF KEYS
         MVC   AN(4,RB),ATTNANDE       ENABLE A/N SOURCES
         TM    ATTNFLGA,LP             RESTART WANTED ON LP
         BC    14,MP46                 BRANCH-NO
         SAEC  RESTART=YES,MF=(E,(11))
MP46     XC    DECB(36),DECB           CLEAR I/O AREA
         TM    GTMFEATS+1,HASPFK       DOES DEVICE HAVE A PF KEYBOARD
         BC    14,OUTRTN               BRANCH-NO
         CLI   ATTNLITE,LIT1           OPTION 1
         BE    MP47                    BRANCH-YES
         CLI   ATTNLITE,LIT2           OPTION 2
         BNE   MP48                    BRANCH-NO
MP51     LA    RA,DATA1                LOAD DATA ADR
         B     MP49                    BRANCH
MP48     CLI   ATTNLITE,LIT3           OPTION 3
         BE    MP50                    BRANCH YES
         LA    RA,ATTNPFLM             LOAD DATA ADR
         B     MP49                    BRANCH
MP50     LA    RA,ATTNPFEN             LOAD DATA ADR
         B     MP49                    BRANCH
MP47     CLI   GTMLIGHT,LIT2           OPTION 2
         BE    MP51                    BRANCH-YES
         CLI   GTMLIGHT,LIT3           OPTION 3
         BE    MP50                    BRANCH-YES
         LA    RA,GTMPFKSS             LOAD DATA ADR
MP49     L     RB,GTMGRDCB             LOAD DCB ADR
         LA    R1,DECB                 LOAD ADR PARAM LIST
         GCNTRL (1),IND,(11),(10),MF=E
         WAIT  ECB=(1)
         CLI   DECB,IOK                I/O SUCCESSFULL
         BE    OUTRTN                  BRANCH-YES
         L     RA,RCA                  LOAD RTN CODE ARRAY ADR
         OI    ZERO(RA),RC5            INDICATE I/O ERROR
         B     OUTRTN
         DS    0F
ZERO1    DC    1F'0'
         CNOP  0,8
PARAM    DSECT
ATNLV    DS    1F
DIRECTON DS    1F
RELATNLV DS    1F
         COPY  ATTNLEVL
         COPY  GSPCB
         COPY  GTMCB
ATNLEVL  DSECT
ATNFWPT  DS    1F
ATNBKPT  DS    1F
ATNLVID  DS    1F
ATNDERB  DS    1F
ATNAVAL  DS    1F
ATNDATA  DS    1F
ATNMLEN  DS    1F
ATNFLGA  DS    BL1
ATNFLGB  DS    BL1
ATNBPID  DS    BL1
ATNLITE  DS    BL1
ATNPFLM  DS    1F
ATNPFEN  DS    1F
ATNANEN  DS    1F
ATNPFDE  DS    1F
ATNANDE  DS    1F
WORKAREA DSECT
PLIST    DS    1F
RCA      DS    1F
SAVE     DS    18F
GACB     DS    1F
TYPE     DS    BL1
OPT      DS    BL1
TYP      DS    1H
BRANCH   DS    1F
DECB     DS    8F
DATA1    DS    1F
LFORM    DS    16F                                                 000A
ATTSAVE  DS    F                                                   000A
         END
