*TITLE         LINK TO A BUFFER SUBROUTINE
*
*ENTRY POINT   IFFAFA08
*
*INPUT         IN REGISTER ONE THE ADDRESS OF A VARIABLE LENGTH
*              PARAMETER LIST.
*                 +0 A(GDSCB)
*                 +4 A(BUFCORRVAL)   OPTIONAL    IDENTIFIES SUBROUTINE
*                 +8 A(BUFKEY)       OPTIONAL
*                +12 A(LINKCORRVAL)  OPTIONAL    IDENTIFIES LINKAGE
*                +16 A(LINKKEY)      OPTIONAL
*                +20 A(GENCODE)      OPTIONAL    CANNOT BE 3
*                      EITHER OR BOTH THE BUFCORRVAL OR BUFKEY
*                      PARAMETERS MUST BE SPECIFIED DEPENDING ON
*                      WHETHER THE SUBROUTINE WAS CORRELATED OR KEYED
*
*OUTPUT        THE ORDERS NEDED TO PERFORM BUFFER SUBROUTINE LINKAGE
*              ARE GENERATED IN THE GDOA
*
*EXTERNAL RTNS KEY TABLE MANAGEMENT
*              DATA STORE
*
*FUNCTION      TO GENERATE THE GRAPHIC ORDERS NECESSARY FOR PROPER
*              FUCTIONING OF BUFFER SUBROUTINES.
         EJECT
*
*REGISTER UTILIZATION
*
R0       EQU   0
R1       EQU   1             PLIST REG
R2       EQU   2
R3       EQU   3             GSPARRAY ADDR
R4       EQU   4             WORK
R5       EQU   5             WORK
R6       EQU   6
R7       EQU   7             GTMCB
R8       EQU   8             GDSCB
R9       EQU   9             BASE
R10      EQU   10            WRKSECT
R11      EQU   11
R13      EQU   13            SAVE AREA
R14      EQU   14            RETURN REG
R15      EQU   15            BRANCH REG
         EJECT
IFFAFA08 CSECT
*2023,646000,650000,654000-664000                                  000A
*
*PERFORM NORMAL HOUSEKEEPING FUNCTIONS - SAVE REGISTERS, ESTABLISH
*ADDRESSABILITIES, CHAIN SAVE AREAS
*
         SAVE  (14,12)                 SAVE REGISTERS
         BALR  R9,R0
         USING *,R9                    ESTABLISH CSECT ADDRESSABILITY
         LA    R10,8(R1)
         USING WRKSECT,R10             ESTABLISH WORK AREA ADDRESSABLTY
         ST    R13,SVAREA+4            FORWARD CHAIN
         LA    R4,SVAREA
         ST    R4,8(R13)               BACK CHAIN
         LR    R13,R4                  SET SAVE AREA REG
*
*PERFORM INITIALIZATION FUNCTIONS
*
         L     R2,0(R1)                GET PLIST ADDR
         L     R3,4(R1)                GET GSPARRAY ADDR
         XC    0(20,R3),0(R3)          ZERO GSPARRAY
         XC    PARMS(24),PARMS         ZERO REVISED PLIST
         XC    KEY(12),KEY             ZERO KEY
*
*ESTABLISH GDSCB ADDRESSABILITY
*
         L     R8,0(R2)                GET PTR TO GDSCB
         L     R8,0(R8)                GET GDSCB ADDR
         USING GDSCB,R8                ESTABLISH GDSCB ADDRESSABILITY
         NI    GDSGRMOD,X'00'          SET CURRENT MODE DEVICE FLAG
*
*REFORM PARAMETER LIST
*
         LA    R5,PARMS                GET REVISED PLIST ADDR
LKBLTA0A TM    0(R2),X'80'             HAS LAST PARAM BEEN CHECKED
         BO    LKBLTA0C                YES
         CLC   0(4,R2),20(R3)          HAS NULL VAR REPLACED PARAM
         BE    LKBLTA0B                YES
         MVC   0(4,R5),0(R2)           TRANSFER PARAMETER
LKBLTA0B AH    R2,C4                   INCREMENT PLIST POINTERS
         AH    R5,C4
         B     LKBLTA0A
LKBLTA0C CLC   1(3,R2),21(R3)          HAS NULL VAR REPLACED PARAM
         BE    LKBLTB1                 YES
         MVC   1(3,R5),1(R2)           TRANSFER PARAMETER
*
*TEST FOR GDS VALIDITY. IF INVALID OR UNOPEN SET THE GSPARRAY TO
*INDICATE THE ERROR AND MAKE AN ERROR RETURN.
*
LKBLTB1  CLC   GDSVALID(2),GDSID       IS GDS VALID
         BE    LKBLTB2                 YES
         MVI   19(R3),X'01'            ERROR - GDS INVALID OR UNOPEN
LKBLTC1  MVI   0(R3),X'08'             INDICATE PARAM ERROR
         B     LKBLTH4
*
*TEST LEVEL OF SUPPORT. IF LEVEL 1 THE SUBROUTINE MUST HAVE BEEN KEYED
*OR CORRELATED. IF LEVEL 2 THE SUBROUTINE MUST HAVE BEEN KEYED.
*
LKBLTB2  TM    GDSFLAGS,X'10'          WAS LEVEL 2 SUPPORT REQUESTED
         BZ    LKBLTB3                 NO
*
*LEVEL 2 SUPPORT. IF SUBROUTINE KEY HAS NOT BEEN PASSED AS A PARAMETER
*THE GSPARRAY IS SET TO INDICATE THE ERROR.
*
         CLC   PARMS+8(4),ZERO         WAS SUBRTN KEY PARAM PASSED
         BNE   LKBLTD2                 YES
         MVI   19(R3),X'03'            ERROR - LEVEL 2, NO SUBRTN KEY
         B     LKBLTC1
*
*BUILD PARAMETER LIST FOR DATA STOR ROUTINE
*
LKBLTD2  MVC   DATASTOR+8(16),DATSTOR1 PUT DATA IN DATA STORE PLIST
         L     R1,PARMS+8
         LA    R15,LKBPHYS             LINK TO RTN THAT WILL
         BALR  R14,R15                 COMPUTE PHYSICAL BFR ADDR
         STH   R4,DATASTOR+14          COMPLETE GMVA ORDER
         STH   R5,DATASTOR+20          COMPLETE GTRU ORDER
*
*DETERMINE IF LINKAGE SHOULD BE INCLUDED OR OMITTED
*
         CLC   PARMS+20(4),ZERO        SHOULD LINKAGE BE INCLUDED
         BE    LKBLTD2A                YES
         L     R4,PARMS+20             GET GENCODE ADDR
         L     R4,0(R4)                GET GENCODE
         CH    R4,C2                   SHOULD LINKAGE BE OMITTED
         BE    LKBLTD2B                YES
LKBLTD2A LH    R4,GNOP4
         STH   R4,DATASTOR+18          CAUSE LINKAGE TO BE INCLUDED
         B     LKBLTE3
LKBLTD2B LH    R4,GTRU
         STH   R4,DATASTOR+18          CAUSE LINKAGE TO BE OMITTED
         B     LKBLTE3
*
*LEVEL 1 SUPPORT. SUBROUTINE MUST HAVE BEEN KEYED OR CORRELATED. IF
*NOT THE GSPARRAY IS SET TO INDICATE THE ERROR.
*
LKBLTB3  CLC   PARMS+4(4),ZERO         WAS SUBRTN CORVAL PARAM PASSED
         BNE   LKBLTB3A                YES
         CLC   PARMS+8(4),ZERO         WAS SUBRTN KEY PARAM PASSED
         BE    LKBLTC1                 NO
*
*SETUP KEY TABLE MANAGEMENT PARAMETERS.
*
*SEARCH FOR KEY
*
         LA    R4,KEYCODE2             GET CODE ADDR
         L     R5,PARMS+8              GET PTR TO KEY ADDR
         B     LKBLTB4
*
*SEARCH FOR CORVAL
*
LKBLTB3A LA    R4,KEYCODE5             GET CODE ADDR
         L     R5,PARMS+4              GET CORVAL ADDR
*
*BUILD KEY TABLE MANAGEMENT PARAMETER LIST
*
LKBLTB4  ST    R8,KEYPLIST             PUT GDSCB ADDR IN PLIST
         ST    R4,KEYPLIST+4           PUT CODE ADDR IN PLIST
         ST    R5,KEYPLIST+8           PUT KEY/CORVAL ADDR IN PLIST
         LA    R15,LKBKEY              LINK TO RTN THAT WILL INVOKE
         BALR  R6,R15                  KEY TABLE MANAGEMENT
*
*TEST FOR SUCCESSFUL COMPLETION OF KEY TABLE MAGAGEMENT
*
         LTR   R15,R15                 WAS KEY TABLE MGMT SUCCESSFUL
         BZ    LKBLTC4                 YES
         MVI   19(R3),X'02'            ERROR - KEY NOT FOUND
         B     LKBLTC1
*
*TEST IF A SUBROUTINE HAS BEEN STARTED. IF NOT THE GSPARRAY IS SET
*TO INDICATE THE ERROR.
*
LKBLTC4  TM    4(R1),X'28'             HAS A SUBRTN BEEN STARTED
         BO    LKBLTD4                 YES
         MVI   19(R3),X'04'            ERROR - SUBRTN NOT BEGUN
         B     LKBLTC1
*
*BUILD PARAMETER LIST FOR DATA STORE ROUTINE.
*
LKBLTD4  MVC   DATASTOR+8(20),DATSTOR2 PUT DATA IN PLIST
         LA    R15,LKBPHYS             LINK TO CODE THAT WILL COMPUTE
         BALR  R14,R15                 PHYSICAL BUFFER ADDRESSES
         STH   R4,DATASTOR+18          COMPLETE GMVA ORDER
         STH   R5,DATASTOR+24          COMPLETE GTRU ORDER
*
*DETERMINE IF LINKAGE IS TO BE INCLUDED OR OMITTED.
*
         CLC   PARMS+20(4),ZERO        SHOULD LINKAGE BE INCLUDED
         BE    LKBLTD4A                YES
         L     R4,PARMS+20             GET GENCODE ADDR
         L     R4,0(R4)                GET GENCODE
         CH    R4,C2                   SHOULD MODULE BE OMITTED
         BE    LKBLTD4B                YES
LKBLTD4A LH    R4,GNOP4
         STH   R4,DATASTOR+12          CAUSE LINKAGE TO BE INCLUDED
         B     LKBLTE3
LKBLTD4B LH    R4,GTRU
         STH   R4,DATASTOR+12          CAUSE LINKAGE TO BE OMITTED
*
*INVOKE DATA STORE. THE DATA STORE ROUTINE IS USED TO PUT THE LINKAGE
*STRUCTURE IN THE GDOA.
*
LKBLTE3  ST    R8,DATASTOR             PUT GDSCB ADDR IN PLIST
         ST    R3,DATASTOR+4           PUT GSPARRAY ADDR IN PLIST
         LA    R1,DATASTOR             SET PLIST REG
         L     R5,24(R3)               GET STATAB ADDR
         L     R15,DATDISP(R5)         GET EP ADDR
         BALR  R14,R15                 LINK WITH DATA STORE
*
*TEST FOR SUCCESSFUL COMPLETION OF DATA STORE ROUTINE.
*
         LTR   R15,R15
         BP    LKBLTH4
*
*TEST GENCODE FOR STATUS. GENCODE=1, STATUS IS INCLUDE. GENCODE=2,
*STATUS IS OMIT. IF NO GENCODE IS GIVEN STATUS IS INCLUDE. IF GENCODE
*IS SPECIFIED NOT EQUAL TO 1 OR 2 THE GSPARRAY IS SET TO INDICATE THE
*ERROR.
*
LKBLTF3  CLC   PARMS+20(4),ZERO        WSS GENCODE PARAM PASSED
         BE    LKBLTF4                 NO
         L     R4,PARMS+20             GET GENCODE ADDR
         LA    R5,1
         C     R5,0(R4)                DOES GENCODE = 1
         BE    LKBLTF4                 YES
         LA    R5,2
         C     R5,0(R4)                DOES GENCODE = 2
         BE    LKBLTJ3                 YES
LKBLTF3A MVI   19(R3),X'06'            ERROR - GENCODE INCORRECT
         B     LKBLTC1
*
*GENCODE = 2. IF LEVEL 2 HAS BEEN SPECIFIED THE GSPARRAY IS SET TO
*INDICATE THE ERROR.
*
LKBLTJ3  TM    GDSFLAGS,X'10'          WAS LEVEL 2 SUPPOER REQUESTED
         BO    LKBLTF3A                YES
*
*GENCODE = 2, LEVEL = 1. IF LKSUB HAS NOT BEEN KEYED OR CORRELATED THE
*GSPARRAY IS SET TO INDICATE THE ERROR.
*
LKBLTK3  CLC   PARMS+12(4),ZERO        WAS LINK CORVAL PARAM PASSED
         BE    LKBLTK3A                NO
         L     R4,PARMS+12             GET CORVAL ADDR FROM PLIST
         MVC   KEY+8(4),0(R4)          PUT CORVAL IN KEY
         B     LKBLTK4
LKBLTK3A CLC   PARMS+16(4),ZERO        WAS LINK KEY PARAM PASSED
         BE    LKBLTC1                 NO
*
*SET LINKAGE STATUS TO OMIT
*
LKBLTK4  NI    KEY+4,X'FB'             SET STATUS TO OMIT
         B     LKBLTG5
*
*GENCODE WAS NOT SPECIFIED OR GENCODE=1. SET STATUS TO INCLUDE. IF A
*LINKCORVAL AND/OR A LINKKEY PARAM WAS PASSED A KEY IS BUILT. IF
*NEITHER PARAM WAS PASSED EXIT TO MAINLINE.
*
LKBLTF4  OI    KEY+4,X'04'             SET STATUS TO INCLUDE
         CLC   PARMS+12(4),ZERO        WAS LINK CORVAL PASSED
         BE    LKBLTF4A                NO
         L     R4,PARMS+12             GET CORVAL ADDR FROM PLIST
         MVC   KEY+8(4),0(R4)          PYT CORVAL IN KYE
         B     LKBLTG5
LKBLTF4A CLC   PARMS+16(4),ZERO        WAS LINK KEY PASSED
         BE    LKBLTH4                 NO
*
*LINKEY AND/OR LINKCORVAL HAVE BEEN PASSED. BUILD KEY TO RETURN. IF
*LEVEL 1 STORE KEY IN KEY TABLE.
*
LKBLTG5  OI    KEY+4,X'80'             SET MULTIPLE FLAG
         OI    KEY+4,X'18'             IDENTIFY AS KEY FOR SUBRTN LINK
         L     R4,GDSAOACB             GET OACB ADDR
         L     R4,52(R4)               GET LOG BFR ADDR OF OLP
         TM    GDSFLAGS,X'10'          WAS LEVEL 1 REQUESTED
         BO    LKBLTG5A                NO
         SH    R4,C16                  COMPUTE LOG BFR START ADDR
         STH   R4,KEY+2                PUT LOG BFR START ADDR IN KEY
         LA    R4,16                   GET LINKAGE LENGTH
         STH   R4,KEY                  PUT LENGTH IN KEY
         B     LKBLTJ5
LKBLTG5A SH    R4,C12                  COMPUTE LOG BFR START ADDR
         STH   R4,KEY+2                PUT LOG BFR START ADDR IN KEY
         LA    R4,12                   GET LINKAGE LENGTH
         STH   R4,KEY                  PUT LENGTH IN KEY
         B     LKBLTH4
*
*SETUP KEY TABLE MANAGEMENT PLIST
*
LKBLTJ5  ST    R8,KEYPLIST             PUT GDSCB ADDR IN PLIST
         LA    R4,KEYCODE1
         ST    R4,KEYPLIST+4           PUT CODE ADDR IN PLIST
         LA    R4,KEY
         ST    R4,KEYPLIST+8
         LA    R15,LKBKEY              LINK TO RTN THAT WILL INVOKE
         BALR  R6,R15                  KEY TABLE MANAGEMENT
*
*TEST FOR SUCCESSFUL COMPLETION OF KEY TABLE MANAGEMENT
*
         LTR   R15,R15                 WAS KEY TABLE MGMT SUCCESSFUL
         BZ    LKBLTJ5A                YES
         MVI   19(R3),X'02'            ERROR - KEY NOT ADDED TO TABLE
         B     LKBLTC1
*
*RETURN KEY IN WORD PROVIDED IF LKSUB HAS BEEN KEYED
*
LKBLTJ5A CLC   PARMS+16(4),ZERO        WAS LINKEY PARAM SPECIFIED
         BE    LKBLTH4                 NO
         L     R4,PARMS+16             GET RETURN WORD ADDR
         MVC   0(4,R4),KEY             RETURN KEY
*
*RETURN TO MAINLINE
*
LKBLTH4  L     R13,SVAREA+4
         RETURN (14,12),T
*
*INVOKE KEY TABLE MANAGEMENT
*
LKBKEY   L     R5,24(R3)               GET STATUS TABLE ADDR
         L     R15,KEYDISP(R5)         GET EP ADDR
         LTR   R15,R15                 HAS MODULE BEEN LOADED
         BZ    LKBLTC1             NO-ERROR                        000A
LKBKEYA  LA    R1,KEYPLIST
         BALR  R14,R15             BRANCH TO KEY TABLE MGMT        000A
         BR    R6                      RETURN
*
*COMPUTE PHYSICAL BUFFER ADDRESSES NEEDED TP PROVIDE SUBROUTINE LINKAGE
*
*TEST FOR 128 BYTE GDOA
*
LKBPHYS  LA    R4,128
         CH    R4,GDSGDOAL             IS GDOA 128 BYTES
         BE    LKBPHYSD                YES
*
*MULTIPLE 256 BYTE GDOA
*
         LH    R6,GDSGDOAL             GET GDOA LENGTH FROM GDSCB
         SH    R6,C6                   COMPUTE DIVISOR
LKBPHYSA LH    R5,2(R1)                GET LOG BFR START ADDR FROM KEY
         M     R4,C1                   PROPAGATE SIGN BIT
         DR    R4,R6                   COMPUTE ELEMENT NUMBER IN GDS.
*
*SEARCH BUFFER CONTROL TABLE FOR THIS BUFFER SEGMENT
*
         LH    R6,GDSBCTEL             GET BCT INDEX
         MH    R6,CH3                  COMPUTE PTR TP NEXT SEGMENT
         L     R7,GDSGTMCB             GET GTMCB ADDR
         USING GTMCB,R7                ESTABLISH GTMCB ADDRESSABILITY
         L     R2,GTMBCTBL             GET BCT ADDR
LKBPHYSB SR    R11,R11
         IC    R11,2(R6,R2)            GET CT FIELD FROM BCT
         CR    R11,R5                  IS THIS THE SOUGHT AFTER SEGMENT
         BE    LKBPHYSC                YES
*
*TEST LOGICAL BUFFER ADDRESS IN KEY FOR CORRECTNESS
*
         IC    R11,1(R2,R6)            GET PTR TO NEXT SEGMENT
         MH    R11,CH3                 EXPAND BCT INDEX
         CR    R6,R11                  ARE PTR AND INDEX EQUAL
         BE    LKBLTC1                 YES
         LR    R6,R11
         B     LKBPHYSB
*
*PROPER BUFFER CONTROL TABLE ENTRY HAS BEEN FOUND. COMPUTE PHYSICAL
*BUFFER ADDRESS.
*
LKBPHYSC LR    R5,R6                   PREPARE DIVIDEND
         LR    R6,R4                   TRASFER REMAINDER
         M     R4,C1                   PROPAGATE SIGN
         D     R4,C3                   COMPUTE SEGMENT NUMBER
         MH    R5,C256                 COMPUTE NUMBER OF BYTES
         LA    R4,8(R5,R6)             COMPUTE PHYS BFR ADDR FOR GMVA
         LA    R5,2(R4)                COMPUTE PHYS BFR ADDR FOR GTRU
         BR    R14
*
*COMPUTE PHYSICAL BUFFER ADDR FOR A 128 BYTE GDOA
*
LKBPHYSD LH    R11,GDSBCTEL            GET BCT INDEX
         LH    R6,2(R1)                GET LOG BFR START ADDR FROM KEY
         LR    R5,R11
         MH    R5,C256                 COMPUTE BFR STAT ADR OF SEGMENT
         MH    R11,CH3                 EXPAND BCT INDEX
         L     R4,GTMBCTBL             GET BCT ADDR
         AR    R4,R11                  COMPUTE BCT SEGMENT ADDR
         CLC   0(1,R4),GDSBCTID        FIRST OR SECOND HALF OF SEGMENT
         BE    LKBPHYSE                FIRST
         LA    R4,136(R5,R6)           COMPUTE PHYS BFR ADDR FOR GMVA
         LA    R5,2(R4)                COMPUTE PHYS BFR ADDR FOR GTRU
         BR    R14
LKBPHYSE LA    R4,8(R5,R6)             COMPUTE PHYS BFR ADDR FOR GMVA
         LA    R5,2(R4)                COMPUTE PHYS BFR ADDR FOR GTRU
         BR    R14
         EJECT
*
*DEFINED CONSTANTS
*
DATSTOR2 DC    X'18000010'
         GINIT
LABEL    GTRU  0
         GMVA  0,LABEL
         GTRU  0
         GPDI
DATSTOR1 DC    X'0800000C'
         GINIT
         GMVA  0,LABEL
LABLE    GTRU  0
         GPDI
KEYCODE1 DC    F'1'
KEYCODE2 DC    F'2'
KEYCODE5 DC    F'5'
ZERO     DC    F'0'
C1       DC    F'1'
C3       DC    F'3'
CF256    DC    F'256'
GDSID    DC    X'F203'
GTRU     DC    X'2AFF'
GNOP4    DC    X'2AC0'
C2       DC    H'2'
CH3      DC    H'3'
C4       DC    H'4'
C6       DC    H'6'
C12      DC    H'12'
C16      DC    H'16'
C256     DC    H'256'
*
*EQUATES
*
CVTLINK  EQU   8
KEYDISP  EQU   828
DATDISP  EQU   852
*
*WORK AREA DSECT
*
WRKSECT  DSECT
SVAREA   DS    18F
PARMS    DS    6F
KEYPLIST DS    10F
KEY      DS    3F
DATASTOR DS    12F
         COPY  GDSCB
         COPY  GSPCB
         COPY  GTMCB
         END
