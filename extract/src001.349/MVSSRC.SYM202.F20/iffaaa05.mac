*
*
*
*        INGDS IS ENTERED FROM DIRECTOR PART 2 WITH THE ADDRESS OF
*        THE WORK AREA IN REGISTER 1.  THE FIRST WORD OF THE WORK
*        AREA CONTAINS THE ADDRESS OF THE PARAMETER LIST LISTED BELOW
*
*                        +0  A(GTMCBVAR)
*                        +4  A(GDSCBVAR)
*                        +8  A(GDOALNVAR)  OPTIONAL
*                        +12 A(LEVELVAR)  OPTIONAL
*                        +16 A(GDSNAME)     OPTIONAL
*                        +20 A(GDSNAME)     OPTIONAL
*                        ETC
*
*
*
*        INGDS HAS NO EXTERNAL REFERENCES.
*
*        EXTERNAL MACROS USED ARE:
*
*        GETMAIN
*        FREEMAIN
*
         EJECT
*
*        ON ENTRY REGISTERS ARE SAVED AND CHAINED, THE BASE REGISTER
*        IS SET UP, THE RETURN ARRAY IS INITIALIZED AND THE WORK AREA
*        DSECT IS INITIALIZED.
IFFAAA05 CSECT
*A636500-637000,A762500-763000                                   YM1963
GDSOPN   SAVE  (14,12)             SAVE REGS
         BALR  BASE,0
         USING *,BASE              BASE REGISTER
         USING WORKAREA,WORK
         LR    WORK,PARM           SET UP SAVE AREA
         L     ERRCD,WRKRTNCD      RETURN CODE ARRAY
         XC    0(20,ERRCD),0(ERRCD) ZERO OUT ARRAY
         ST    SAVE,WRKSAVE+4      SAVE HIS ADDRESS IN MINE
         LA    REGA,WRKSAVE        SAVE MY ADDR IN HIS
         ST    REGA,8(SAVE)
         LR    SAVE,REGA           SET UP SAVE REG
         L     PARM,WRKPARM        PARM LIST
         LA    GDSNAME,EXT(PARM)   ADDR OF FIRST EQUIV GDS
         L     REGA,GTM(PARM)      GTMCB VAR ADDR
         L     GTMDSECT,0(REGA)    ADDR OF GTMCB
         USING GTMCB,GTMDSECT
         C     GTMDSECT,GTMGTMCB   IS GTMCB VALID
         BNE   ERR1                NO
         LTR   REGA,REGA           ANY MORE PARMS
         BL    ERR2                NO, ERROR
         XC    WRKGDOA(20),WRKGDOA ZERO WORK AREA
         LA    REGB,4              NO OF PARMS SO FAR TIMES 4
*
*        IF ALL THE REQUIRED PARAMETERS ARE PRESENT, A COUNT IS
*        MADE OF THE PARAMETERS PASSED TO DETERMINE IF THERE
*        ARE ANY EQUIVALENCE GDSS TO BE CREATED AND IF SO, HOW
*        MANY ARE NEEDED.  IF TOO MANY ARE REQUESTED, THE ROUTINE
*        WILL RETURN TO THE CALLING PROGRAM WITH AN ERROR CODE.
*
OPN00010 LA    PARM,FOUR(PARM)     POINT TO SECOND PARM
         LA    REGB,FOUR(REGB)     ADD LEN TO COUNT
         TM    ZERO(PARM),NOMORE   ANY MORE
         BZ    OPN00010            YES
         C     REGB,EIGHT          MORE THAN TWO
         BE    OPN00070            NO DO NOT OBTAIN OPTIONAL PARMS
         L     PARM,WRKPARM        ADDR OF PARM LIST
         S     REGB,EIGHT          REDUCE CT
         C     REGB,EIGHT          MORE THAN TWO OPTIONALS
         BH    OPN00050            YES
         S     REGB,ONE            NUMBER TO MOVE INTO WORK AREA
OPN00020 EX    REGB,OPNMOVE
         L     REGB,GTMGSPCB       REFERENCE GSPCB
         USING GSPCB,REGB
         LA    REGB,GSPNULLV       PICK UP NULL VAR
         DROP  REGB
         LA    REGA,TWO            SET UP LOOP
         LA    REGC,WRKGDOA
OPN00030 CLC   1(3,REGB),1(REGC)   IS IT NULL
         BE    OPN00060            YES
OPN00040 LA    REGC,FOUR(REGC)     NO, GO TO NEXT
         BCT   REGA,OPN00030       ALL DONE?
         B     OPN00070            YES
         EJECT
OPN00050 S     REGB,EIGHT          SUBTRACT OTHER PARMS
         SRA   REGB,TWO            DIVIDE BY FOUR
         C     REGB,FIFTY          TOO MANY EQUIV GDS
         BH    ERR2                YES
         ST    REGB,WRKNOGDS       STORE # OF ADDED GDS'
         L     REGB,EIGHT          SET UP TO MOVE IN OPTIONAL PARMS
         B     OPN00020
OPN00060 XC    0(4,REGC),0(REGC)   ZERO MISSING PARMS
         B     OPN00040
OPN00070 L     REGB,WRKLEVEL        IS LEVEL PASSED
         LTR   REGB,REGB
         BE    OPN00075            NO
         CLC   ZERO(FOUR,REGB),TWOFLD IS PARM VALID
         BH    ERR4                NO
         CLC   ZERO(FOUR,REGB),ONE  IS IT VALID
         BL    ERR4                NO
         MVC   WRKLEVEL(4),0(REGB)      MOVE IT IN
OPN00075 CLC   WRKGDOA,ZEROFLD     IS GDOALEN ZERO
         BE    OPN00200            NO
*
*        THE GDOA LENGTH IS OBTAINED FROM THE PARAMETER LIST OR FROM
*        THE GTR
*        THE GTMCB AND IT IS ROUNDED TO 128 OR THE NEAREST MULTIPLE
*        OF 256.  THE LENGTH OF STORAGE REQUIRED FOR THE GETMAIN
*        INSTRUCTION IS OBTAINED BY MULTIPLYING THE GDOA LENGTH
*        BY 2, ADDING DOUBLE THE OACB LENGTH AND THE LENGTH OF THE
*        GDSCB.  THE GETMAIN IS ISSUED AND IF STORAGE IS NOT
*        AVAILABLE AN ERROR RETURN IS MADE TO THE CALLING PROGRAM.
*
         L     REGB,WRKGDOA        ADDRESS OF GDOA SIZE
         L     REGB,0(REGB)        GDOA SIZE
OPN00080 C     REGB,F128           SUBSEG
         BNH   OPN00190            YES
         EJECT
         LA    REGB,TWO55(REGB)    TO MAKE EVEN MULTIPLE
         SRL   REGB,ATE
         SLL   REGB,ATE
         ST    REGB,WRKGDOA        SAVE FOR LATER
OPN00100 AR    REGB,REGB           DOUBLE GDOA LEN
         LA    REGB,DBLOACB(REGB)  ADD DOUBLE THE OACB LENGTH
         LA    REGB,GDSCBLEN(REGB) ADD GDSCB LENGTH
         GETMAIN  EC,LV=(REGB),A=WRKLIST,SP=0,MF=(E,WRKGETMN) GET CORE
*
*        IF AT ANY TIME ALL THE STORAGE REQUIRED CANNOT BE OBTAINED
*        ALL STORAGE IS FREED THAT HAD ALREADY BEEN OBTAINED AND
*        CONTROL IS RETURNED TO THE CALLING PROGRAM WITH AN ERROR
*        CODE.
*
         LTR   15,15
         BNE   ERR3                IF NOT ZERO, ERROR-NO CORE AVAIL.
***                                HERE A CHECK IS MADE TO SEE IF
***                                THERE IS ADDITIONAL CORE NEEDED FOR
***                                EQUIV. SETS. IF YES, A LIST IS BUILT
***                                IN THE CORE OBTAINED FOR THE FIRST.
         L     REGA,WRKLIST        LOAD ADDR OF CORE
         LR    GDSREG,REGA
         L     REGC,WRKNOGDS       COUNT OF EXTRAS
         LR    COUNT,REGC
         C     COUNT,ZEROFLD       ANY EQUIV
         BE    OPN00115            NO
         B     OPN00110
OPN00105 LA    REGA,4(REGA)        UPDATE LIST
OPN00110 GETMAIN EC,LV=(REGB),A=(REGA),SP=0,MF=(E,WRKGETMN)  CORE-EQUIV
         LTR   15,15               ERROR
         BNE   ERR3A               YES
         BCT   REGC,OPN00105        ANY MORE
         L     REGA,WRKLIST        ADDR OF LIST OF ADDRESSES
         L     GDSREG,0(REGA)      PICK UP FIRST EXTRA GDSCB
         USING GDSCB,GDSREG
         EJECT
*
*        THE FIRST GDSCB IS SET UP AND POINTERS ARE PLACED IN IT
*        TO THE GTMCB AND TO ITSELF.  THE LEVEL FLAG IS THEN SET.
*        A CHECK IS MADE TO SEE IF THE DEVICE HAS INCREMENTAL
*        VECTORS AND IF NOT, THE GDSCURMD FIELD IS SET TO ABSOLUTE
*        OUTPUT INSTEAD OF THE DEFAULT OF OPTIMIZE.  THE GDOA
*        LENGTH IS PLACED IN THE GDSCB.
*
OPN00115 MVC   GDSCB(SKELLEN),SKELGDS SET UP SKELETON GDSCB
         ST    GTMDSECT,GDSGTMCB   SAVE GTMCB ADDR
         ST    GDSREG,GDSGDSCB     SAVE ADDR OF THIS GDSCB
         TM    GTMFEATS+1,GDS      INCR VECT AVAIL
         BO    OPN00117            YES
         MVI   GDSCURMD,ABS        SET OUTPUT ABSOL MODE
OPN00117 CLC   WRKLEVEL,TWOFLD     LEVEL 2
         BL    OPN00120
         OI    GDSFLAGS,LEVEL2     SET LEVEL 2
*
*        THE OACB IS SET UP NEXT.  BUFFER IS NOT OBTAINED UNTIL
*        THE FIRST CALL TO A DATA GENERATING ROUTINE AND THE
*        GDS IS ADDED TO FLOW CONTROL AT THE TIME ALSO.
*
OPN00120 MVC   GDSGDOAL(2),WRKGDOA+2 SAVE GDOA LEN
         ST    GDSREG,WRKLEVEL
         LA    RETURN,OPN00160     SET TO FALL THROUGH
         EJECT
OPN00140 LA    REGB,GDSCBLEN(GDSREG) ADDR OF OACB/GDOA
         ST    REGB,GDSAOACB
         LA    REGC,OACBLEN(REGB)  GDOA ADDR
         ST    REGC,GDOA(REGB)     GDOA
         XC    0(2,REGC),0(REGC)   ZERO FIRST TWO BYTES
         ST    REGC,CRSA(REGB)     CRSA
         A     REGC,TWOFLD         UPDATE TWO BYTES
         XC    LOGADDR(8,REGB),LOGADDR(REGB) LOGICAL ADDR
         ST    REGC,OLP(REGB)      OLP
         LH    REGC,GDSGDOAL
         ST    REGC,BUFLN(REGB)    BUFFER LENGTH
         S     REGC,SIXFLD         SET LENLEFT OT SIX LESS
         ST    REGC,LEFT(REGB)     IN LENGTH LEFT FIELD
         XC    UNRES(16,REGB),UNRES(REGB) UNRES ADDR
         MVC   STAT(4,REGB),STATUS STATUS
         LA    REGC,SECND          TO REFERENCE SECOND DOA
         AH    REGC,GDSGDOAL       LENGTH OF GDOA
         AR    REGC,REGB           ADDR OF SECOND
         ST    REGC,CHAIN(REGB)    CHAIN
         MVC   0(60,REGC),0(REGB)  DUPLICATE TWO OACB'S
         ST    REGB,CHAIN(REGC)    CHAIN
         LA    REGB,OACBLEN(REGC)  GDOA ADDR
         ST    REGB,GDOA(REGC)     GDOA
         BR    RETURN              RETURN TO CORRECT PORTION OF PROG
*
*        THE GDSCB IS ADDED TO THE CHAIN OF GDSCBS ON THE GTMCB.
*        A CHECK IS MADE TO SEE IF THIS IS ONE OF AN EQUIVALENCE
*        SET OF GDSCBS.  IF YES, THE FLAG IS THE GDSCB IS SET.
*        THE NEXT SHARED GDSCB IS PICKED UP.  THE ADDRESS OF
*        THIS GDSCB IS PLACED IN THE VARIABLE PASSED.
*
OPN00160 MVC   GDSNXGDS(4),GTMGDSCB ADD THIS GDSCB TO CHAIN
         ST    GDSREG,GTMGDSCB
         C     COUNT,ZEROFLD       ANY MORE GDS
         BE    OPN00220            RETURN
         L     REGB,0(GDSNAME)
         ST    GDSREG,0(REGB)      SAVE GDSCB ADDR IN VARIABLE PASSED
         LA    GDSNAME,4(GDSNAME)  UPDATE TO NEXT
         OI    GDSFLAGS,SHARED
        BCT   COUNT,OPN00210
         L     REGB,WRKLIST        LOAD ADDR OF FIRST CORE
         EJECT
*
*        A COPY OF THIS GDSCB IS MOVED INTO THE NEXT ADDRESS.
*        THE ADDRESS OF THIS GDSCB IS PLACED IN THE SHARED BACK
*        ADDRESS OF THE NEXT GDSCB.  THE ADDRESS OF THE NEXT
*        GDSCB IS PLACED IN THE SHARED FOREWARD ADDRESS OF THIS
*        GDSCB.  A BRANCH IS THEN MADE TO THE INTERNAL SUBROUTINE
*        WHICH SETS UP THE OACB AND GDOA.  ON EXIT THE CHAINING
*        OF GDSCBS WILL TAKE PLACE UNTIL ALL GDSCBS ARE
*        INITIALIZED.  ON EXIT THE LAST ADDRESS OF THE GDSCB
*        IS PLACED IN THE FIRST VARIABLE PASSED.
*
OPN00170 MVC   0(GDSCBLEN,REGB),0(GDSREG) DUPLICATE GDSCB
         ST    REGB,GDSSHDFD
         LR    GDSREG,REGB
         MVC   GDSSHDBK(4),GDSGDSCB ADDR OF OLD GDSCB MOVED TO BK PTR
         ST    GDSREG,GDSGDSCB     PTR TO SELF
         LA    RETURN,OPN00160     POINT TO RETURN AFTER OACB
         B     OPN00140
OPN00190 LA    REGB,SUBSEG         PICK UP SUBSEGMENT
         ST    REGB,WRKGDOA        STORE IN GDOA
         B     OPN00100
OPN00200 MVC   WRKGDOA+2(2),GTMGDOAL PICK UP GDOA FROM GTMCB
         L     REGB,WRKGDOA        PLACE VALUE IN REGB
         B     OPN00080
OPN00210 LA    REGA,4(REGA)        PICK UP NEXT CORE
         L     REGB,0(REGA)
         B     OPN00170
OPN00220 L     REGB,WRKPARM        PICK UP PARM LIST
         L     REGB,4(REGB)        PICK UP GDSNAME
         ST    GDSREG,0(REGB)      STORE ADDR IN VAR PASSED
         TM    GDSFLAGS,LEVEL2
         BO    OPN00230
         L     REGA,STAB(ERRCD)
         L     REGB,KEYTB(REGA)
         LTR   REGB,REGB
         BNE   OPN00230
         LOAD  EP=IFFAHA03
         ST    REGZERO,KEYTB(REGA)
OPN00230 L     SAVE,4(SAVE)        RESET PROPER SAVE AREA
         RETURN (14,12),T
ERR1     MVC   ERCD4(4,ERRCD),GTMERR BAD GTMCB
ERR1A    MVI   RTNCD(ERRCD),PARMERR PARAMETER ERROR
         B     OPN00230            RETURN
ERR2     MVC   ERCD4(4,ERRCD),ZEROFLD TOO FEW PARMS OR TOO MANY
         B     ERR1A
ERR3A   L     REGC,WRKLIST        ADDR OF CORE OBTAINED SO FAR
ERR3B   LR    REGZERO,REGB
        CR    REGA,REGC           ALL RELEASED
        BE    ERR3C               YES EXCEPT FIRST
        L     PARM,0(REGC)        ADDR TO BE FREED
        FREEMAIN R,LV=(0),A=(1)
        LA    REGC,4(REGC)
        B     ERR3B
ERR3C   L     PARM,WRKLIST
        FREEMAIN R,LV=(0),A=(1)
ERR3     MVI   RTNCD(ERRCD),STORAGE
         MVC   ERCD3(4,ERRCD),CORE  STORAGE EXCEEDED
         B     OPN00230
ERR4     MVC   ERCD4(4,ERRCD),LEVEL BAD LEVEL
         B     ERR1A
         EJECT
REGZERO  EQU   0                   PARM REGISTER
PARM     EQU   1                   PARM REEISTER
COUNT    EQU   2                   COUNT OF EQUIV GDS'
REGC     EQU   3                   ASST USES
ERRCD    EQU   4                   ERROR CODE ARRAY
WORK     EQU   5                   WORK AREA
GDSNAME  EQU   6                   POINTER TO LIST OF GDS NAMES
GTMDSECT EQU   7                   GTMCB DSECT ADDRESS
GDSREG   EQU   8                   ADDRESS OF GDSCB
BASE     EQU   9                   BASE REGISTER
REGA     EQU   10                  ASST USES PART OF EVEN/ODD PAIR
REGB     EQU   11                  ASST USES PART OF EVEN/ODD PAIR
SAVE     EQU   13                  SAVE AREA
RETURN   EQU   14                  RETURN
SKELGDS  DC    2F'0'               POINTERS SET TO ZERO
         DC    X'F2'               VALID CTL BLK
         DC    X'03'               GDSCB
         DC    X'00'
*                                  CURSOR ABS
*                                  LEVEL 1 GSP
*                                  GDS NOT SHARED
*                                  SEQUENCE NOT STARTED
*                                  BUF SUBR NOT STARTED
*                                  DISABLE PEN INTERRUPTS
         DC    X'00'               RESERVED
         DC    6F'0'               ZERO POINTERS
         DC    2E'0'               USER LL IN FLOAT
         DC    2E'4095'            USER UPPER RIGHT IN FLOAT
         DC    2F'0'               GRID-INTEGER
         DC    2F'4095'            GRID-INTEGER
         DC    2E'0'               GRID-FLOAT
         DC    2E'4095'            GRID-FLOAT
         DC    X'08'               CHAR BASIC PROT
         DC    X'0A'               SCISS-SCREEN AND CONTINUE
         DC    X'04'               OUTPUT OPTIMIZED
         DC    X'88'               INPUT
         DC    X'2AFF0000'         FLOW CONTROL RETURN
         DC    2H'0'               F/C & B/MGT PTRS
         DC    X'00'               BCT ID
         DC    X'00'               CONTROL MODE
         DC    H'256'              GDOA LEN
         DC    2F'0'               SHARED POINTERS
         DC    2H'0'               LOG AND PHYS ADDR OF REP DATA
         DC    F'0'                DATA TO OVERWRITE GTRU TO FLOW CTL
         DC    F'0'                X CORR FOR DATA GEN           YM1963
         DC    F'0'                Y CORR FOR DATA GEN           YM1963
SKELLEN  EQU   *-SKELGDS
SUBSEG   EQU   128
SHARED   EQU   X'08'
LEVEL2   EQU   X'10'
OACBLEN  EQU   60
GDSCBLEN EQU   SKELLEN
DBLOACB  EQU   120
OPNMOVE  MVC   WRKGDOA(1),8(PARM)
EXT      EQU   16
GTM      EQU   0
FOUR     EQU   4
ZERO     EQU   0
NOMORE   EQU   X'80'
EIGHT    DC    F'8'
ONE      DC    F'1'
TWO      EQU   2
TWOFLD   DC    F'2'
THREE    EQU   3
ZEROFLD  DC    F'0'
F128     DC    F'128'
TWO55    EQU   255
ATE      EQU   8
STATUS   DC    X'80000000'         FLAG-NEED FIRST BUFFER ASSIGNMENT
GDOA     EQU   4
STAT     EQU   8
CHAIN    EQU   0
CRSA     EQU   12
OLP      EQU   16
BLP      EQU   20
BUFST    EQU   24
BUFLN    EQU   28
UNRES    EQU   32
LOGADDR  EQU   48
LEFT     EQU   56
SECND    EQU   60
RTNCD    EQU   0
PARMERR  EQU   X'08'
STORAGE  EQU   X'10'
GTMERR   DC    F'1'
FOURFLD  DC    F'4'
CORE     DC    F'4'
ERCD4    EQU   16
ERCD3    EQU   12
LEVEL   DC    F'4'
FIFTY   DC    F'50'
SIXFLD   DC    F'6'
GDS      EQU   X'04'
ABS      EQU   X'02'
STAB     EQU   24
KEYTB    EQU   X'33C'
         EJECT
WORKAREA DSECT
WRKPARM  DS    F                   PARM LIST ADDR
WRKRTNCD DS    F                   ADDR OF RETURN ARRAY
WRKGDOA  DS    F                   GDOA LEN
WRKLEVEL DS    F                   LEVEL
WRKSPACE DS    F                   EXTRA WORD FOR PARAMETER LISTS
WRKNOGDS DS    F                   NUMBER OF GDS'S
WRKSAVE  DS    18F                 SAVE AREA
WRKLIST  DS    F
WRKLEN   DS    F
WRKGETMN DS    3F
         COPY  GSPCB
         COPY  GTMCB
         COPY  GDSCB
GDSXCOR  DS    F                   X CORR FACTOR FOR DGEN        YM1963
GDSYCOR  DS    F                   Y CORR FACTOR FOR DGEN        YM1963
        END
