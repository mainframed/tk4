         TITLE 'IFFAHA06 - SCALE'
*
*STATUS: CHANGE LEVEL 000
*
*FUNCTION/OPERATION: CONVERTS COORIDNATES SUPPLIED IN USER TYPE (ABSO-
*        LUTE OR INCREMENTAL) AND MODE (FLOATING-POINT OR INTEGER).
*        INTO INTEGER RASTER UNIT COORDINATES. THE OUTPUT IS IN BOTH
*        ABSOLUTE AND INCREMENTAL FORMS.
*
*        WHEN ENTERED AT IFFAHA15,THE CONTENTS OF REGISTER 1 ARE
*        CONVERTED FROM FLOATING-POINT TO INTEGER DATA FORMAT.
*
*ENTRY POINTS: IFFAHA06 - SCALE
*              IFFAHA15 - FLOATING-POINT TO INTEGER CONVERSION
*
*INPUT:  ON ENTRY AT IFFAHA06 REGISTER 1 POINTS TO A WORKAREA, THE
*        FIRST 13 WORDS OF WHICH ARE THE PARAMETER LIST FOR SCALE
*     + 0 A(GDSCB)
*     + 4 A(RETURN ARRAY)
*     + 8 IGNORED
*     +24 ABSOLUTE X VALUE OR ZERO
*     +28 ABSOLUTE Y VALUE OR ZERO
*     +32 INCREMENTAL X VALUE OR ZERO
*     +36 INCREMENTAL Y VALUE OR ZERO
*     +40 IGNORED
*     +48NUMBER OF COORDINATES PREVIOUSLY SCALED
*
*        ON ENTRY AT IFFAHA15, REGISTER 1 CONTAINS THE NUMBER TO BE
*        CONVERTED FROM FLOATING-POINT TO INTEGER
*
*OUTPUT: ON RETURN FROM A CALL TO IFFAHA06, THE ABSOLUTE AND INCREMEN-
*        TAL INTEGER RASTER UNITS VALUES EQUIVALENT TO THE INPUT
*        COORDINATES ARE PLACED IN THE CORRESPONDING LOCATIONS IN THE
*        INPUT ARRAY.
*
*        ON RETURN FROM A CALL TO IFFAHA15, REGISTER 1 CONTAINS THE
*        INTEGER EQUIVALENT OF THE FLOATING-POINT NUMBER IT CONTAINED
*        ON ENTRY
*
*EXTERNAL ROUTINES: NONE
*
*EXITS-NORMAL: VIA RETURN MACRO TO THE CALLER WITH REGISTER 15 EQUAL
*        TO ZERO FOR BOTH IFFAHA06 AND IFFAHA15.
*
*     -ERROR:  VIA RETURN MACRO TO THE CALLER WITH REGISTER 15 EQUAL
*        TO FOUR FOR BOTH IFFAHA06 AND IFFAHA15.
*
*TABLES/WORKAREAS: GSP WORKAREA
*
*ATTRIBUTES: PROBLEM STATE, REENTRANT
*
IFFAHA06 CSECT
*                                                                A29395
*2024,708000-716000                                                4902
         SAVE  (14,12)
         BALR  SCA09,0                 ADDRESSABILITY FOR ROUTINE
         USING *,SCA09
*
         LR    SCA10,SCA01             ADDRESSABILITY FOR PARAMETERS
         USING SCALWRK,SCA10           AND WORKAREA
*
         LA    SCA02,SCASAVE           CHAIN
         ST    SCA13,SCASAVE+4         SAVE
         ST    SCA02,MSVA(SCA13)       AREAS
         LR    SCA13,SCA02             AND ESTABLISH NEW SAVE AREA
*
         L     SCA11,SCAGDSCB          ADDRESSABILITY FOR
         USING GDSCB,SCA11             GDSCB
         L     SCA08,SCARTNA           ADDRESSABILITY FOR RETURN ARRAY
         USING GSPARRAY,SCA08
*
         TM    GDSDATMD,REALX          ARE X'S REAL
         BZ    SCA004                  NO
         LE    SCA00F,GDSXVRUR         YES, COMPUTE GURX-GLLX
         SE    SCA00F,GDSXVRLL
         LE    SCA02F,GDSUVLUR         COMPUTE GURU-GLLU
         SE    SCA02F,GDSUVLLL
         TM    GDSDATMD,XRLABS         X REAL AND ABSOLUTE
         BZ    SCA002                  NO
         LE    SCA04F,SCAXABS          COMPUTE  U-GLLU
         SE    SCA04F,GDSUVLLL
         MER   SCA00F,SCA04F           COMPUTE (U-GLLU)(GURX-GLLX)/
         DER   SCA00F,SCA02F
*                                      (GURU-GLLU)
         AE    SCA00F,GDSXVRLL         ADD GLLX
         STE   SCA00F,SCAXABS          STORE
*
         L     SCA01,SCAXABS           CONVERT SCALED X VALUE
         LA    SCA15,IFFAHA15          TO INTEGER
         BALR  SCA14,SCA15
         LTR   SCA15,SCA15             TEST RETURN CODE
         BP    SCA013
*
SCA001   ST    SCA01,SCAXABS           STORE CONVERTED VALUE
         SH    SCA01,GDSXCURR          COMPUTE INCREMENT
         ST    SCA01,SCAXINC           AND STORE
         B     SCA006                  PROCESS Y VALUE
SCA002   ME    SCA00F,SCAXINC          MULTIPLY BY INPUT
         DER   SCA00F,SCA02F
         STE   SCA00F,SCAXINC          AND STORE
*
         L     SCA01,SCAXINC           CONVERT INCREMENT
         LA    SCA15,IFFAHA15          TO INTEGER
         BALR  SCA14,SCA15
         LTR   SCA15,SCA15             TEST RETURN CODE
         BP    SCA013
*
SCA003   A     SCA01,GDSXLAST          COMPUTE ABSOLUTE X
         B     SCA001                  STORE IT AND COMPUTE INCREMENT
*
SCA004   L     SCA01,GDSXVIUR          COMPUTE GURX-GLLX
         S     SCA01,GDSXVILL
         L     SCA02,GDSUVLUR          COMPUTE GURU-GLLU
         S     SCA02,GDSUVLLL
*
         TM    GDSDATMD,XINABS         X INTEGER ABSOLUTE
         BZ    SCA005                  NO
         L     SCA03,SCAXABS           COMPUTE  U-GLLU
         S     SCA03,GDSUVLLL
         MR    SCA00,SCA03             COMPUTE (U-GLLU)(GURX-GLLX)
         DR    SCA00,SCA02             DIVIDE
         A     SCA01,GDSXVILL          ADD GLLX
         B     SCA001                  STORE
*
SCA005   M     SCA00,SCAXINC           MULTIPLY BY INPUT VALUE
         DR    SCA00,SCA02             DIVIDE
         B     SCA003                  STORE
*
SCA006   TM    GDSDATMD,REALY          Y VALUE REAL
         BZ    SCA011                  NO
         LE    SCA00F,GDSYVRUR         COMPUTE GURY-GLLY
         SE    SCA00F,GDSYVRLL
         LE    SCA02F,GDSVVLUR         COMPUTE GURV-GLLV
         SE    SCA02F,GDSVVLLL
         TM    GDSDATMD,YRLABS         Y REAL ABSOLUTE
         BZ    SCA009                  NO
         LE    SCA04F,SCAYABS          COMPUTE  V-GLLV
         SE    SCA04F,GDSVVLLL
         MER   SCA00F,SCA04F           COMPUTE FIRST TERM
         DER   SCA00F,SCA02F
         AE    SCA00F,GDSYVRLL         ADD GLLY
         STE   SCA00F,SCAYABS
*
         L     SCA01,SCAYABS           CONVERT
         LA    SCA15,IFFAHA15          TO INTEGER
         BALR  SCA14,SCA15
         LTR   SCA15,SCA15             TEST RETURN CODE
         BP    SCA013
*
SCA007   ST    SCA01,SCAYABS           STORE INTEGER Y
         SH    SCA01,GDSYCURR          COMPUTE INCREMENT
         ST    SCA01,SCAYINC           STORE IT
*
SCA008   L     SCA02,SCAPTCNT          GOOD RETURN--INCREMENT
         A     SCA02,SCA0001           POINT COUNT BY ONE
         ST    SCA02,SCAPTCNT
         NI    GSPARRAY,NOSCALER
         L     SCA13,HSVA(SCA13)
         RETURN (14,12),T,RC=0
*
SCA009   ME    SCA00F,SCAYINC          MULTIPLY BY INPUT
         DER   SCA00F,SCA02F
         STE   SCA00F,SCAYINC          STORE
         L     SCA01,SCAYINC           CONVERT
         LA    SCA15,IFFAHA15          TO INTEGER
         BALR  SCA14,SCA15
         LTR   SCA15,SCA15             TEST RETURN CODE
         BP    SCA013
SCA010   A     SCA01,GDSYLAST          COMPUTE ABSOLUTE Y
         B     SCA007                  STORE IT AND COMPUTE INCREMENT
*
SCA011   L     SCA01,GDSYVIUR          COMPUTE GURY-GLLY
         S     SCA01,GDSYVILL
         L     SCA02,GDSVVLUR          COMPUTE GURU-GLLU
         S     SCA02,GDSVVLLL
         TM    GDSDATMD,YINABS         Y INTEGER ABSOLUTE
         BZ    SCA012                  NO
*
         L     SCA03,SCAYABS           COMPUTE  V-GLLV
         S     SCA03,GDSVVLLL
         MR    SCA00,SCA03             COMPUTE (V-GLLV)(GURY-GLLY)
         DR    SCA00,SCA02             DIVIDE
         A     SCA01,GDSYVILL          ADD GLLY
         B     SCA007                  STORE
*
SCA012   M     SCA00,SCAYINC           MULTIPLY BY INPUT
         DR    SCA00,SCA02             DIVIDE
         B     SCA010                  STORE
*
SCA013   OI    GSPARRAY,SCALERR        SET RETURN CODE ARRAY FLAG
         MVC   GSPARRAY+8(4),SCAPTCNT  AND COUNT
         L     SCA13,HSVA(SCA13)       RETURN
         RETURN (14,12),T,RC=4
         ENTRY IFFAHA15
IFFAHA15 SAVE  (14,12)
         BALR  FPI09,0
         USING *,FPI09
         SR    FPI15,FPI15             ZERO REGISTER 15
         LR    FPI02,FPI01             ISOLATE THE
         SRL   FPI02,FPI22             CHARACTERISTIC
         N     FPI02,FPI00001          IN A REGISTER
         S     FPI02,FPI0256           TEST EXPONENT
         BC    12,FPI006               LESS THAN OR EQUAL TO ZERO
         C     FPI02,FPI0032           POSITIVE. SEE IF OVERFLOW
         BH    FPI005                  WILL OCCUR ON CONVERSION
         LR    FPI00,FPI01             ISOLATE MANTISSA
         N     FPI00,FPI00002
         S     FPI02,FPI0024           GET SHIFT COUNT
         BP    FPI004                  POSITIVE--SHIFT MANTISSA LEFT
         LPR   FPI02,FPI02             NEGATIVE OR ZERO--GET PROPER
         SRA   FPI00,0(FPI02)          SHIFT COUNT AND SHIFT RIGHT
*
FPI001   LTR   FPI01,FPI01             SEE IF NUMBER IS NEGATIVE
         BC    10,FPI003               POSITIVE OR ZERO
         LNR   FPI01,FPI00             NEGATIVE--COMPLEMENT VALUE
*
FPI002   ST    FPI01,ONESV(FPI13)      STORE CONVERTED VALUE IN
*                                      SAVE AREA
         RETURN (14,12),T,RC=(15)      AND RETURN
*
FPI003   LR    FPI01,FPI00             PLACE CONVERTED VALUE IN
*                                      REGISTER 1
         B     FPI002                  AND RETURN
*
FPI004   C     FPI00,FPI00003          WILL OVERFLOW OCCUR
         BNL   FPI011(FPI02)      IF BIT 8 ON, USE BRANCH TABLE    4902
FPI010   SLA   FPI00,0(FPI02)        SHIFT MANTISSA LEFT 4 OR 8    4902
FPI011   B     FPI001                CHECK FOR NEGATIVE NUMBERS    4902
FPI012   B     FPI010             BRANCH TAB ENTRY TO CONTINUE     4902
*
FPI005   LA    FPI15,FPI04             OVERFLOW--SET NON-ZERO RETURN
*                                      CODE IN REGISTER 15
         B     FPI002
*
FPI006   SR    FPI01,FPI01             SET CONVERTED VALUE TO ZERO
         B     FPI002                  AND RETURN
*
         DS    0F
FPI00001 DC    XL4'000001FC'           MASK FOR CHARACTERISTIC
FPI00002 DC    XL4'00FFFFFF'           MASK FOR MANTISSA
FPI00003 DC    XL4'00800000'           MINIMUM FOR CONVERSION OVERFLOW
FPI0024  DC    F'24'                   CONVERSION FACTOR TO SHIFT COUNT
FPI0032  DC    F'32'                   MAX BASE 2 EXPONENT
FPI0256  DC    F'256'                  BIAS FACTOR
SCA0001  DC    F'1'
HSVA     EQU   4
MSVA     EQU   8
SCA00    EQU   0                       REGISTER EQUATES-
SCA01    EQU   1                       GENERAL REGISTERS
SCA02    EQU   2
SCA03    EQU   3
SCA08    EQU   8
SCA09    EQU   9
SCA10    EQU   10
SCA11    EQU   11
SCA13    EQU   13
SCA14    EQU   14
SCA15    EQU   15
SCA00F   EQU   0                       FLOATING-POINT REGISTERS
SCA02F   EQU   2
SCA04F   EQU   4
REALX    EQU   X'C0'                   FLAG EQUATES
XRLABS   EQU   X'80'
XINABS   EQU   X'20'
REALY    EQU   X'0C'
YRLABS   EQU   X'08'
YINABS   EQU   X'02'
SCALERR  EQU   X'20'
NOSCALER EQU   X'00'
FPI00    EQU   0
FPI01    EQU   1
FPI02    EQU   2
FPI04    EQU   4
FPI09    EQU   9
FPI13    EQU   13
FPI15    EQU   15
FPI22    EQU   22
ONESV    EQU   24
*
SCALWRK  DSECT
SCAGDSCB DS    F                       ADDRESS OF GDSCB
SCARTNA  DS  F                         ADDRESS OF THE RETURN ARRAY
         DS  4F
SCAXABS  DS  F                         X ABSOLUTE
SCAYABS  DS  F                         Y ABSOLUTE
SCAXINC  DS  F                         X INCREMENT
SCAYINC  DS  F                         Y INCREMENT
         DS  2F
SCAPTCNT DS  F                         NO. OF ELEMENTS SCALED
SCASAVE  DS  18F
         COPY  GDSCB
         COPY  GSPCB
         END
