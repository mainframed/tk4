         TITLE 'IFFAHA07 - SCISSOR'
*STATUS: CHANGE LEVEL 000
*
*FUNCTION/OPERATIONS:  ANALYZES IMAGE GENERATION VALUES. MODIFIES
*        COORDINATES SO THAT NO DISPLAY WILL OCCUR OUTSIDE THE USER-
*        SPECIFIED SCISSORING BOUNDARY
*
*ENTRY POINTS: IFFAHA07
*
*INPUT:  REGISTER 1 POINTS TO A WORKAREA, THE FIRST 13 WORDS OF WHICH
*        ARE THE PARAMETER LIST
*    + 0 A(GDSCB)
*
*    + 4 A(RETURN CODE ARRAY)
*
*    + 8 THE 4 WORDS STARTING HERE ARE IGNORED AS INPUT
*
*    +24 ABSOLUTE X-VALUE TO BE SCISSORED
*
*    +28 ABSOLUTE Y-VALUE TO BE SCISSORED
*
*    +32 INCREMENTAL X-VALUE
*
*    +36 INCREMENTAL Y-VALUE
*
*    +40 TOTAL X-INCREMENT TO DATE
*
*    +44 TOTAL Y-INCREMENT TO DATE
*
*    +48 NUMBER OF POINTS SCISSORED TO DATE
*
*OUTPUT: OUTPUT IS OVERLAYED OVER THE INPUT ARRAY
*    + 0 NOT CHANGED
*
*    + 4 NOT CHANGED
*        THE NEXT FOUR VALUES ARE POSITIONING VALUES
*    + 8 ABSOLUTE X
*
*    +12 ABSOLUTE Y
*
*    +16 INCREMENTAL X
*
*    +20 INCREMENTAL Y
*        THE NEXT FOUR VALUES ARE DISPLAY VALUES
*    +24 ABSOLUTE X
*
*    +28 ABSOLUTE Y
*
*    +32 INCREMENTAL X
*
*    +36 INCREMENTAL Y
*
*    +40 UPDATED AS APPROPRIATE
*
*    +44 UPDATED AS APPROPRIATE
*
*    +48 NOT CHANGED
*
*        GDSXLAST, GDSYLAST, GDSXCURR, GDSYCURR ARE UPDATE
*        APPROPRIATELY.
*
*EXTERNAL ROUTINES: NONE
*
*EXITS-NORMAL: VIA RETURN MACRO TO CALLING PROGRAM, RETURN CODE = 0
*
*     -ERROR:  VIA RETURN MACRO, RETURN CODE=4 NO DATA, STOP GENERATION
*                                RETURN CODE=8 NO DATA,CONTINUE
*                                GENERATION
*TABLES/WORKAREAS: GSP WORKAREA
*
*ATTRIBUTES: PROBLEM STATE, REENTRANT
*
IFFAHA07 CSECT
*D070300-070600                                                  YM1963
         SAVE  (14,12)
         BALR  SCS09,0                 ADDRESSABILITY FOR CSECT
         USING *,SCS09
*
         LR    SCS10,SCS01             ADDRESSABILITY FOR WORKAREA
         USING SCISSR,SCS10
*
         L     SCS11,SCSGDSCB          ADDRESSABILITY FOR GDSCB
         USING GDSCB,SCS11
*
         L     SCS08,SCSRTNA           ADDRESSABILITY FOR RETURN ARRAY
         USING GSPARRAY,SCS08
*
         NI    GDSSCISS,ZROFLGS        MAKE SURE OLD FALGS ZERO
         LM    SCS02,SCS03,GDSXLAST
         C     SCS02,SCS0000           SET POSITION SWITCHES
         BL    SCS000A                 FOR CURRENT LOGICAL
         CH    SCS02,SCS4095           POSITION
         BH    SCS000A
         C     SCS03,SCS0000
         BL    SCS000A
         CH    SCS03,SCS4095
         BNH   SCS000B
SCS000A  OI    GDSSCISS,OFFSCR
*
SCS000B  C     SCS02,GDSXVILL
         BL    SCS000C
         C     SCS02,GDSXVIUR
         BH    SCS000C
         C     SCS03,GDSYVILL
         BL    SCS000C
         C     SCS03,GDSYVIUR
         BNH   SCS000D
SCS000C  OI    GDSSCISS,OFFGRID
*
SCS000D  LM    SCS02,SCS03,SCSXABS
         C     SCS02,SCS0000           ON SCREEN
         BL    SCS001
         CH    SCS02,SCS4095           NO, SET FLAG=1
         BH    SCS001
         C     SCS03,SCS0000           YES, SET FLAG=0
         BL    SCS001
         CH    SCS03,SCS4095
         BH    SCS001
         MVI   SCSPTPOS,ONSCR
         B     SCS002
SCS001   MVI   SCSPTPOS,OFFSCR
*
SCS002   C     SCS02,GDSXVILL          IS POINT
         BL    SCS003                  ON GDS
         C     SCS02,GDSXVIUR
         BH    SCS003                  YES, LEAVE FLAG SET=0
         C     SCS03,GDSYVILL
         BL    SCS003                  NO, SET FLAG=1
         C     SCS03,GDSYVIUR
         BH    SCS003
         B     SCS004
SCS003   OI    SCSPTPOS,OFFGRID
*
SCS004   TM    GDSSCISS,SCRGDS         LAST POINT ON BOTH GDS AND
         BC    7,SCS007                SCREEN. NO, CHECK FOR SCISSORING
         TM    SCSPTPOS,SCRGDS         CURRENT POINT ON BOTH GDS AND
         BC    7,SCS007                SCREEN
*
SCS005   XC    SCSXAPOS(16),SCSXAPOS   ZERO OUT POSITIONING VECTORS
         MVC   GDSXLAST(4),SCSXABS     SET CURRENT BEAM POSITION
         MVC   GDSYLAST(4),SCSYABS     = ABSOLUTE POSITION
SCS006   NI    GDSSCISS,ZROFLGS        REPLACE POSITION FLAGS
         MVC   GDSXCURR(2),SCSXABS+2   SET LOGICAL BEAM POSITION
         MVC   GDSYCURR(2),SCSYABS+2   = ABSOLUTE POSITION
*
         RETURN (14,12),T,RC=0
*
*
SCS007   TM    GDSSCISS,SCRSCIS        SCISSOR AT SCREEN
         BZ    SCS010                  NO, CHECK FOR SCISSOR AT GDS
         TM    GDSSCISS,SCR            LAST POINT ON SCREEN
         BO    SCS0070                 NO, PREPARE TO SCISSOR
         TM    SCSPTPOS,SCR            CURRENT POINT ON SCREEN
         BZ    SCS005                  YES, PLOT AS IS
*
SCS0070  TM    GDSSCISS,STOP           DISCONTINUE GENERATION
         BO    SCS008                  YES, SET RETURN CODE AND QUIT
         MVC   SCSLIMX1(2),SCS0000     SET LIMITS = SCREEN LIMIT
         MVC   SCSLIMY1(2),SCS0000
         MVC   SCSLIMX2(2),SCS4095
         MVC   SCSLIMY2(2),SCS4095
         MVI   SCSSCSL,SCR             DO SCISSORING
         B     SCS020
SCS008   LA    SCS15,4                 SET REGISTER 15
SCS009   OI    GSPARRAY,SCISS          SET RETURN CODE ARRAY
         CLC   GSPARRAY+4(4),SCS0000
         BNE   SCS0090
         MVC   GSPARRAY+4(4),SCSCOUNT
SCS0090  RETURN (14,12),T,RC=(15)
SCS010   TM    GDSSCISS,GDS            SCISSOR AT GDS
         BO    SCS011                  BOTH POINTS IN GDS
         TM    SCSPTPOS,GDS            NO, CHECK FOR TERMINATION
         BZ    SCS012                  YES,PREPARE FOR SCISSORING
*
SCS011   TM    GDSSCISS,STOP           DISCONTINUE GENERATION
         BO    SCS008                  YES, SET RETURN CODE AND QUIT
*
*        DETERMINE GDS SCISSORING LIMITS
SCS012   MVI   SCSSCSL,SCRGDS
         L     SCS02,GDSXVILL          LOWER X LIMIT ON SCREEN
         CH    SCS02,SCS0000
         BL    SCS013                  YES, LOWER LEFT SCISSORING
         STH   SCS02,SCSLIMX1          LIMIT = GDS LIMIT
         B     SCS014
SCS013   MVC   SCSLIMX1(2),SCS0000     NO, USE SCREEN LIMIT
*
SCS014   L     SCS02,GDSYVILL          LOWER Y LIMIT ON SCREEN
         CH    SCS02,SCS0000
         BL    SCS015                  YES, LOWER LEFT SCISSORING
         STH   SCS02,SCSLIMY1          LIMIT = GDS LIMITS
         B     SCS016
SCS015   MVC   SCSLIMY1(2),SCS0000     NO, USE SCREEN LIMIT
*
SCS016   L     SCS02,GDSXVIUR          UPPER X LIMIT ON SCREEN
         CH    SCS02,SCS4095
         BH    SCS017                  YES, UPPER X SCISSORRING LIMIT
         STH   SCS02,SCSLIMX2          = GDS LIMIT
         B     SCS018
SCS017   MVC   SCSLIMX2(2),SCS4095     NO, USE SCREEN LIMIT
*
SCS018   L     SCS02,GDSYVIUR          UPPER Y LIMIT ON SCREEN
         CH    SCS02,SCS4095
         BH    SCS019                  YES, UPPER Y SCISSORING
         STH   SCS02,SCSLIMY2          LIMIT= GDS LIMIT
         B     SCS020
SCS019   MVC   SCSLIMY2(2),SCS4095     NO, USE SCREEN LIMIT
*
*        COMPUTE NUMBER AND LOCATION OF INTERSECTIONS WITH BOUNDARY
*
         DROP  SCS08                   DROP RETURN ARRAY ADDRESSABILITY
*
SCS020   L     SCS02,SCSXABS           COMPUTE DX
         S     SCS02,GDSXLAST
         C     SCS02,SCS0000           IS DX=0
         BNE   SCS021                  IF NOT, GO TO TEST Y
         MVC   SCSPT3X(4),GDSXLAST     OTHERWISE, SET PT3=X1,YL
         LH    SCS04,SCSLIMY1
         ST    SCS04,SCSPT3Y
         MVC   SCSPT4X(4),GDSXLAST                SET PT4=X1,YH
         LH    SCS04,SCSLIMY2
         ST    SCS04,SCSPT4Y
         B     SCS022                  GO TO SET NI VALUE TO 2
*
SCS021   L     SCS03,SCSYABS           COMPUTE DY
         S     SCS03,GDSYLAST
         C     SCS03,SCS0000           IS DY =0
         BNE   SCS023                  IF NOT GO TO SET NI=4
         LH    SCS04,SCSLIMX1          OTHERWISE SET PT3=XL,Y1
         ST    SCS04,SCSPT3X
         MVC   SCSPT3Y(4),GDSYLAST
         LH    SCS04,SCSLIMX2                AND SET PT4=XH,Y1
         ST    SCS04,SCSPT4X
         MVC   SCSPT4Y(4),GDSYLAST
*
SCS022   MVC   SCSNI,SCS0002           SET NI = 2
         B     SCS035                  ELIMINATE OUTSIDE POINTS
*
SCS023   MVC   SCSNI,SCS0004           SET NI = 4
         L     SCS05,GDSYLAST          COMPUTE B= Y1 - MX1
         LR    SCS06,SCS03
         SRDA  SCS06,32
         M     SCS06,GDSXLAST          WHERE MX1=X1*DY/DX
         DR    SCS06,SCS02
         SR    SCS05,SCS07             Y1-MX1
*
         LH    SCS04,SCSLIMX1          COMPARE XL TO X1
         C     SCS04,GDSXLAST
         BE    SCS027                  IF EQUAL GO TO SET PT3=PT1
         C     SCS04,SCSXABS           COMPARE TO X2
         BE    SCS028                  IF EQUAL GO TO SET PT3=PT2
         ST    SCS04,SCSPT3X
         LR    SCS06,SCS03             Y3 =MX2+B
         SRDA  SCS06,32
         MR    SCS06,SCS04             WHERE MX2=X1*DY/DX
         DR    SCS06,SCS02
         AR    SCS07,SCS05             PLUS B TO MX2
         ST    SCS07,SCSPT3Y           SAVE COMPUTED PT3 Y COORDINATE
*
SCS024   LH    SCS04,SCSLIMX2          CHECK IF X1 OR X2 = XH
         C     SCS04,GDSXLAST
         BE    SCS029                  IF X1=XH GO TO SET PT4=PT1
         C     SCS04,SCSXABS
         BE    SCS030                  IF X2=XH GO TO SET PT4=PT2
         ST    SCS04,SCSPT4X           OTHERWISE, X4=XH
         LR    SCS06,SCS03             Y4=MXH+B
         SRDA  SCS06,32
         MR    SCS06,SCS04
         DR    SCS06,SCS02
         AR    SCS07,SCS05
         ST    SCS07,SCSPT4Y
*
SCS025   LH    SCS04,SCSLIMY1          CHECK IF Y1 OR Y2=YL
         C     SCS04,GDSYLAST
         BE    SCS031                  IF Y1=YL GO TO SET PT5=PT1
         C     SCS04,SCSYABS
         BE    SCS032                  IF Y2=YL GO TO SET PT5=PT2
         ST    SCS04,SCSPT5Y           OTHERWISE Y5=YL
         SR    SCS04,SCS05             X5=(YL-B)/M OR (YL-B)*DX/DY
         LR    SCS06,SCS02             WHERE M=DX/DY
         SRDA  SCS06,32
         MR    SCS06,SCS04
         DR    SCS06,SCS03
         ST    SCS07,SCSPT5X
*
SCS026   LH    SCS04,SCSLIMY2          CHECK IF Y1 OR Y2=YH
         C     SCS04,GDSYLAST
         BE    SCS033                  IF Y1=YH GO TO SET PT6=PT1
         C     SCS04,SCSYABS
         BE    SCS034                  IF Y2=YH GO TO SET PT6=PT2
         ST    SCS04,SCSPT6Y           OTHERWISE, Y6=YH
         SR    SCS04,SCS05             X6=(YH-B)/M OR (YH-B)*DX/DY
         LR    SCS06,SCS02             WHERE M=DY/DX
         SRDA  SCS06,32
         MR    SCS06,SCS04
         DR    SCS06,SCS03
         ST    SCS07,SCSPT6X           STORE COMPURED X6
         B     SCS035
*
SCS027   MVC   SCSPT3(8),GDSXLAST      SET PT3=PT1
         B     SCS024
SCS028   MVC   SCSPT3(8),SCSXABS       SET PT3=PT2
         B     SCS024
*
SCS029   MVC   SCSPT4(8),GDSXLAST      SET PT4=PT1
         B     SCS025
SCS030   MVC   SCSPT4(8),SCSXABS       SET PT4=PT2
         B     SCS025
*
SCS031   MVC   SCSPT5(8),GDSXLAST      SET PT5=PT1
         B     SCS026
SCS032   MVC   SCSPT5(8),SCSXABS       SET PT5=PT2
         B     SCS026
*
SCS033   MVC   SCSPT6(8),GDSXLAST      SET PT6=PT1
         B     SCS035
SCS034   MVC   SCSPT6(8),SCSXABS       SET PT6=PT2
*
*
*        ELIMINATE POINTS OUTSIDE BOUNDARY AND/OR LINE LIMITS
*
SCS035   L     SCS07,SCS0001           LOAD 1 TO I COUNT
         SR    SCS05,SCS05             CLEAR INDEX REGISTER
         SR    SCS06,SCS06             LOAD 0 TO ZERO COUNT
         SR    SCS08,SCS08             CLEAR POSITION REGISTER
         L     SCS04,GDSXLAST          LOAD X1
         C     SCS04,SCSXABS           COMPARE X1 TO X2
         BH    SCS036                  AND SET XR=MIN(X1,X2)
         MVC   SCSXR(4),GDSXLAST               XS=MAX(X1,X2)
         MVC   SCSXS(4),SCSXABS
         B     SCS037
SCS036   MVC   SCSXR(4),SCSXABS
         MVC   SCSXS(4),GDSXLAST
*
SCS037   L     SCS04,GDSYLAST          LOAD Y1
         C     SCS04,SCSYABS           COMPARE Y1 TO Y2
         BH    SCS038                  AND SET YR=MIN(Y1,Y2)
         MVC   SCSYR(4),GDSYLAST               YS=MAX(Y1,Y2)
         MVC   SCSYS(4),SCSYABS
         B     SCS039
SCS038   MVC   SCSYS(4),GDSYLAST
         MVC   SCSYR(4),SCSYABS
*
SCS039   L     SCS02,SCSPT3X(SCS05)    GET COMPUTED POINTS
         LH    SCS04,SCSLIMX1
         CR    SCS02,SCS04             CHECK IF PT OUTSIDE LEFT LIMIT
         BL    SCS042
         C     SCS02,SCSXR             COMPARE WITH LINE RANGE
         BL    SCS042                  MASK IF NOT IN RANGE
         LH    SCS04,SCSLIMX2
         CR    SCS02,SCS04             COMPARE THE PT WITH BOUNDARY
         BH    SCS042                  MASK IT IF OUTSIDE BOUNDARY
         C     SCS02,SCSXS             CHECK IF OUTSIDE LINE RANGE
         BH    SCS042
*
         L     SCS03,SCSPT3Y(SCS05)
         LH    SCS04,SCSLIMY1
         CR    SCS03,SCS04             IS THE PT OUTSIDE THE BOUNDARY
         BL    SCS042
         C     SCS03,SCSYR             IS THE PT OUTSIDE THE LINE
         BL    SCS042
         LH    SCS04,SCSLIMY2
         CR    SCS03,SCS04             IS THE PT OUTSIDE THE BOUNDARY
         BH    SCS042
         C     SCS03,SCSYS             IS PT OUTSIDE THE LINE
         BH    SCS042
         C     SCS02,GDSXLAST          IS THIS PT SAME AS PT1
         BNE   SCS040                  IF NOT, COMPARE TO PT2
         C     SCS03,GDSYLAST
         BE    SCS042                  IDENTICAL TO PT1, ELIMINATE
*
SCS040   C     SCS02,SCSXABS           IS THIS PT SAME AS PT2
         BNE   SCS041                  NO, BUILD UP INTERSECTIONS
         C     SCS03,SCSYABS
         BE    SCS042                  IDENTICAL TO PT2, ELIMINATE
*
SCS041   STH   SCS02,SCSINTX1(SCS08)   BUILD UP INTERSECTIONS
         STH   SCS03,SCSINTY1(SCS08)
         A     SCS08,SCS0004           INDEX BY 4
         B     SCS043
SCS042   A     SCS06,SCS0001           ADD 1 TO OUT COUNT
SCS043   A     SCS07,SCS0001           I=I+1
         C     SCS07,SCSNI             IS I GREATER THAN NI
         BH    SCS044                  YES, COMPUTE FINAL NI
         A     SCS05,SCS0008           INDEX AND CHECK NEXT
         B     SCS039
*
SCS044   L     SCS04,SCSNI             NI=NI-OUT
         SR    SCS04,SCS06
         ST    SCS04,SCSNI
SCS045   CLC   SCSNI(4),SCS0002        IS NI = 2
         BH    SCS047                  IF YES ELIMINATE DUPLICATES
         BL    SCS050
SCS046   CLC   SCSINTS1(4),SCSINTS2    CHECK IF TWO POINTS THE SAME
         BNE   SCS050
         MVC   SCSNI(4),SCS0001        ELIMINATE DUPLICATE
         B     SCS050
*
SCS047   CLC   SCSINTS1(4),SCSINTS2
         BNE   SCS049                  IF THESE TWO PTS = TAKE 2 & 3
         MVC   SCSINTS1(8),SCSINTS2
SCS049   MVC   SCSNI(4),SCS0002
SCS050   MVC   GDSXLAST(8),SCSXABS     UPDATE LOGICAL POSITION
         L     SCS08,SCSRTNA           REESTABLISH ADDRESSABILITY
         USING GSPARRAY,SCS08          TO RETURN ARRAY
         CLC   SCSNI(4),SCS0001        CHECK NUMBER OF INTERSECTIONS
         BE    SCS054                  ONE
         BH    SCS056                  TWO
         IC    SCS02,SCSSCSL           ZERO, IS END-POINT ON BOUNDARY
         EX    SCS02,SCS058
         BC    7,SCS053                NO, SUPPRESS PLOT
SCS051   MVC   SCSXAPOS(8),SCSXABS     MOVE IN ABSOLUTE POSITIONING
*                                      VALUES
         XC    SCSXINC(8),SCSXINC
         L     SCS02,SCSXAPOS          COMPUTE INCREMENTAL POSITION-
         SH    SCS02,GDSXCURR          ING VALUES FOR X
         ST    SCS02,SCSXIPOS
         L     SCS02,SCSYAPOS          AND Y
         SH    SCS02,GDSYCURR
         ST    SCS02,SCSYIPOS
SCS052   OI    GSPARRAY,SCISS          AND SET SWITCH
         CLC   GSPARRAY+4(4),SCS0000   RETURN CODE NOT SET
         BNE   SCS006                  YES, SET IT
         MVC   GSPARRAY+4(4),SCSCOUNT  OTHERWISE, CONTINUE
         B     SCS006
*
SCS053   MVC   GDSXLAST(8),SCSXABS     UPDATE LOGICAL POSITION
         NI    GDSSCISS,ZROFLGS        REPLACE OLD POSITION
         XC    SCSXAPOS(32),SCSXAPOS   ZERO DATA
         LA    SCS15,8
         B     SCS009
*
SCS054   IC    SCS02,SCSSCSL           FIRST POINT IN BOUNDARY
         EX    SCS02,SCS057
         BZ    SCS055                  YES
         EX    SCS02,SCS058            NO. IS SECOND POINT IN BOUNDARY
         BC    7,SCS053                NO, SUPPRESS PLOT
         LH    SCS02,SCSINTX1          POSITION TO INTERSECTION
         ST    SCS02,SCSXAPOS          GET X ABSOLUTE
         SH    SCS02,GDSXCURR          COMPUTE X INCREMENT
         ST    SCS02,SCSXIPOS
         LH    SCS02,SCSINTY1          GET Y ABSOLUTE
         ST    SCS02,SCSYAPOS
         SH    SCS02,GDSYCURR          COMPUTE Y INCREMENT
         ST    SCS02,SCSYIPOS
         L     SCS02,SCSXABS           GET X INCREMENT FROM
         S     SCS02,SCSXAPOS          POSITIONING TO FINAL POINT
         ST    SCS02,SCSXINC
         L     SCS02,SCSYABS           GET CORRESPONDING
         S     SCS02,SCSYAPOS          Y INCREMENT
         ST    SCS02,SCSYINC
         B     SCS052
*
SCS055   XC    SCSXAPOS(16),SCSXAPOS   PLOT TO POINT OF INTERSECTION
         LH    SCS02,SCSINTX1          MOVE IN ABSOLUTE X VALUE
         ST    SCS02,SCSXABS
         SH    SCS02,GDSXCURR          COMPUTE NEW INCREMENT
         ST    SCS02,SCSXINC
         LH    SCS02,SCSINTY1          MOVE IN ABSOLUTE Y VALUE
         ST    SCS02,SCSYABS
         SH    SCS02,GDSYCURR          COMPUTE NEW INCREMENT
         ST    SCS02,SCSYINC
         B     SCS052
*
SCS056   L     SCS02,GDSXLAST          GET DISPLACEMENTS FROM
         SH    SCS02,SCSINTX1          LOGICAL ENDPOINT TO
         LPR   SCS02,SCS02             BOTH INTERSECTIONS
         L     SCS03,GDSXLAST
         SH    SCS03,SCSINTX2
         LPR   SCS03,SCS03             DISPLACEMENT TO SECOND LESS,
         CR    SCS03,SCS02             PLOT AS IS
         BL    SCS061                  EQUAL, CHECK Y DISPLACEMENTS
         BE    SCS059                  DISPLACEMENT TO FIRST LESS,
         LM    SCS02,SCS03,SCSINTS1    REVERSE INTERSECTIONS AND PLOT
         ST    SCS02,SCSINTS2
         ST    SCS03,SCSINTS1
         B     SCS061
*
SCS059   L     SCS02,GDSYLAST          GET MAGNITUDE OF YDISPLACEMENTS
         SH    SCS02,SCSINTY1          FROM LOGICAL ENDPOINT
         LPR   SCS02,SCS02             TO BOTH INTERSECTIONS
         L     SCS03,GDSYLAST
         SH    SCS03,SCSINTY2
         LPR   SCS03,SCS03
         CR    SCS03,SCS02             DISPLACEMENT TO SECOND LESS OR
         BNH   SCS061                  EQUAL TO FIRST, PLOT AS IS
         LM    SCS02,SCS03,SCSINTS1    OTHERWISE, REVERSE INTERSECTIONS
         ST    SCS02,SCSINTS2
         ST    SCS03,SCSINTS1
*
SCS061   LH    SCS02,SCSINTX1          PLOT FROM FIRST TO SECOND
         ST    SCS02,SCSXAPOS          INTERSECTION
         SH    SCS02,GDSXCURR          STORE ABSOLUTE AND INCREMENTAL
         ST    SCS02,SCSXIPOS          POSITIONING VALUES
         LH    SCS02,SCSINTX2          STORE FINAL ABSOLUTE POSITION
         ST    SCS02,SCSXABS
         S     SCS02,SCSXAPOS          AND INCREMENT TO IT
         ST    SCS02,SCSXINC
*
         LH    SCS02,SCSINTY1
         ST    SCS02,SCSYAPOS          ABSOLUTE POSITIONING VALUE
         SH    SCS02,GDSYCURR          AND INCREMENT TO IT
         ST    SCS02,SCSYIPOS
         LH    SCS02,SCSINTY2
         ST    SCS02,SCSYABS           ABSOLUTE FINAL VALUE
         S     SCS02,SCSYAPOS          AND INCREMENT TO IT
         ST    SCS02,SCSYINC
         B     SCS052
*
SCS057   TM    GDSSCISS,X'00'
SCS058   TM    SCSPTPOS,X'00'
*
SCS4095  DC    H'4095'
SCS0000  DC    F'0'
SCS0001  DC    F'1'
SCS0002  DC    F'2'
SCS0004  DC    F'4'
SCS0008  DC    F'8'
*
SCS01    EQU   1                       REGISTER EQUATES
SCS02    EQU   2
SCS03    EQU   3
SCS04    EQU   4
SCS05    EQU   5
SCS06    EQU   6
SCS07    EQU   7
SCS08    EQU   8
SCS09    EQU   9
SCS10    EQU   10
SCS11    EQU   11
SCS15    EQU   15
*
ONSCR    EQU   0
OFFSCR   EQU   X'80'
OFFGRID  EQU   X'40'
SCRGDS   EQU   X'C0'
ZROFLGS  EQU   X'3F'
SCRSCIS  EQU   X'08'
SCR      EQU   X'80'
GDS      EQU   X'40'
STOP     EQU   X'01'
SCISS    EQU   X'40'
TRUNC    EQU   X'FC'
*
SCISSR   DSECT
SCSGDSCB DS    F
SCSRTNA  DS    F
SCSXAPOS DS    F
SCSYAPOS DS    F
SCSXIPOS DS    F
SCSYIPOS DS    F
SCSXABS  DS    F
SCSYABS  DS    F
SCSXINC  DS    F
SCSYINC  DS    F
SCSXITOT DS    F
SCSYITOT DS    F
SCSCOUNT DS    F
*
SCSLIM   DS    2F
         ORG   SCSLIM
SCSLIMX1 DS    H
SCSLIMY1 DS    H
SCSLIMX2 DS    H
SCSLIMY2 DS    H
*
SCSNI    DS    F
SCSINTS1 DS    F
         ORG   SCSINTS1
SCSINTX1 DS    H
SCSINTY1 DS    H
SCSINTS2 DS    F
         ORG   SCSINTS2
SCSINTX2 DS    H
SCSINTY2 DS    H
SCSPT3   DS    2F
         ORG   SCSPT3
SCSPT3X  DS    F
SCSPT3Y  DS    F
SCSPT4   DS    2F
         ORG   SCSPT4
SCSPT4X  DS    F
SCSPT4Y  DS    F
SCSPT5   DS    2F
         ORG   SCSPT5
SCSPT5X  DS    F
SCSPT5Y  DS    F
SCSPT6   DS    2F
         ORG   SCSPT6
SCSPT6X  DS    F
SCSPT6Y  DS    F
SCSXR    DS    F
SCSXS    DS    F
SCSYR    DS    F
SCSYS    DS    F
SCSPTPOS DS    C
SCSSCSL  DS    C
         COPY  GDSCB
         COPY  GSPCB
         END
