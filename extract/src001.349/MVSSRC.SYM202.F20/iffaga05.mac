         TITLE 'DFSTR - IFFAGA05'
***********************************************************************
*                                                                     *
*MODULE NAME   IFFAGA05                                               *
*                                                                     *
*STATUS        CHANGE LEVEL 000                                       *
*                                                                     *
*FUNCTION/OPERATION                                                   *
*  MODIFIES A DESIGNATED ENTRY IN A DESIGNATED STROKE TABLE, ALLOWING *
*  THE STROKES DEFINING A CHARACTER TO BE DEFINED OR ALTERED.         *
*                                                                     *
*ENTRY POINT   IFFAGA05 - CSECT NAME                                  *
*                                                                     *
*INPUT   REGISTER 1 CONTAINS THE ADDRESS OF A WORK/SAVE AREA. THE     *
*  FIRST WORD CONTAINS THE ADDRESS OF THE PARAMETER LIST ON A FULL    *
*  WORD BOUNDARY. THE NULL VARIABLE IS AT AN OFFSET OF 20 FROM THE    *
*  RETURN ARRAY                                                       *
* PARAMETERS                                                          *
*  +0    A(VAR)          ADDRESS OF A VARIABLE WHICH CONTAINS THE     *
*                        GDSCB ADDRESS                                *
*  +4    A(TABLE)        ADDRESS OF AN INTEGER FROM 1-99 WHICH        *
*                        IDENTIFIES THE STROKE TABLE                  *
*  +8    A(STROKE ARRAY) ADDRESS OF AN ARRAY DEFINING THE STROKES     *
*                        TO BE USED IN GENERATING THE CHARACTER.      *
*                        ENTRIES IN THE ARRAY ARE INTEGER FULL WORD   *
*                        PAIRS, CORRESPONDING TO X AND Y CORRDINATES. *
*                        THEIR VALUES INDICATE BEAM POSITION ON AN    *
*                        128*128 MATRIX. A PLUS SIGN IN THE X         X
*                        COORDINATE WORD INDICATES BEAM ON, A MINUS   X
*                        SIGN, BEAM OFF.                              X
*  +12   A(SYMBOL)       ADDRESS OF THE INTEGER VALUE OF THE EBCDIC   *
*                        CHARACTER WHOSE GRAPHIC IS BEING DEFINED     *
*  +16   A(COUNT)        ADDRESS OF THE NUMBER OF FULL WORD PAIRS     *
*                                                                     *
*OUTPUT  NONE TO CALLER. THE COPY OF THE STROKE TABLE IN STORAGE      *
*                        IS MODIFIED.                                 *
*                                                                     *
*EXTERNAL MACROS                                                      *
*  LOAD                                                               *
*                                                                     *
*EXITS  -NORMAL- BACK TO CALLER VIA REGISTER 14                       *
*       -ERROR - IF ERROR IN PARAMETER PASSED, BACK TO CALLER VIA     *
*                REGISTER 14, WITH AN APPROPRIATE CODE SET IN THE     *
*                RETURN ARRAY                                         *
*              - IF THE STROKE TABLE CANNOT BE LOCATED, AN ABEND      *
*                WILL BE CAUSED BY THE OPERATING SYSTEM.              *
*                                                                     *
*TABLES/WORKAREAS   -SEE WORKAREA DSECT                               *
*                                                                     *
*ATTRIBUTES    -REENTRANT, PROBLEM PROGRAM MODE                       *
***********************************************************************
         EJECT
IFFAGA05 CSECT                          DFSTR
*C786000                                                         A19165
*A777000                                                         A36606
         SPACE 4
*REGISTERS
         SPACE
RZERO    EQU   0
PARM     EQU   1
REGA     EQU   2
REGB     EQU   3
ERRCD    EQU   4
WORK     EQU   5
GSPREG   EQU   6
GTMREG   EQU   7
GDSREG   EQU   8
BASE     EQU   9
REGC     EQU   10
COUNT    EQU   11
SAVE     EQU   13
RETREG   EQU   14
BRANCH   EQU   15
         SPACE 4
*PARAMETER LIST EQUATES
         SPACE
GDS      EQU   0                        ADDRESS OF GDSCB VARIABLE
TABLE    EQU   4                        ADDRESS OF STROKE TABLE IDENT
STROKE   EQU   8                        ADDRESS OF STROKE ARRAY
SYMBOL   EQU   12                       ADDR OF INTEGER VALUE OF CHAR
SCOUNT   EQU   16                       ADDR OF NUMBER OF STROKES
         SPACE 2
PRM      EQU   X'08'                    PARM ERROR INDICATOR
LAST     EQU   X'80'
SWITCH   EQU   X'80'                    SWITCH SETTER FOR STROKE TABLE
         SPACE
*DISPLACEMENTS
*
PARMERR  EQU   16                       DISPLACEMENT FROM RETURN ARRAY
ID       EQU   0                        DISPLACEMENT FROM STROKE TABLE
NEXTAB   EQU   4                          *
STKADDR  EQU   8                          *
ZORM     EQU   12
SIGN     EQU   X'F0'
         EJECT
         USING *,15
         SAVE  (14,12)
         DROP  15
         LR    BASE,15                  LOAD CONTROL SECTION BASE
         USING IFFAGA05,BASE
         LR    WORK,PARM                LOAD WORK AREA BASE
         USING WORKAREA,WORK
         L     PARM,WKPARM              LOAD PARAMETER LIST ADDRESS
         L     ERRCD,WKRTNCD            ADDRESS OF RETURN ARRAY
         XC    0(20,ERRCD),0(ERRCD)     ZERO RETURN ARRAY
         LA    REGA,WKSAVE              CHAIN SAVE AREAS
         ST    REGA,8(SAVE)
         ST    SAVE,4(REGA)
         LR    SAVE,REGA
*
*CHECK GDSCB FOR VALIDITY
*
         L     GDSREG,GDS(PARM)         ADDRESS OF GDSCB VARIABLE
         L     GDSREG,0(GDSREG)         ADDRESS OF GDSCB
         USING GDSCB,GDSREG
         C     GDSREG,GDSGDSCB
         BNE   AGAERR10                 BRANCH IF INVALID GDSGDSCB
*
*IF GDSCB IS VALID, CONTINUE INITIALIZATION
*
         L     GTMREG,GDSGTMCB          PICK UP ADDRESS OF GTMCB
         USING GTMCB,GTMREG
         L     GSPREG,GTMGSPCB          PICK UP ADDRESS OF GSPCB
         DROP  GTMREG
         USING GSPCB,GSPREG
*CONTINUE PARAMETER CHECK- CHECK FOR ALL REQUIRED PARAMETERS PRESENT
*
         TM    GDS(PARM),LAST
         BO    AGAERR00                 BRANCH IF REQ PARMS NOT PRESENT
         CLC   GSPNULLV+1(3),TABLE+1(PARM)
         BE    AGAERR20                      ERROR IF TABLE NULL
         TM    TABLE(PARM),LAST
         BO    AGAERR00                 BRANCH IF REQ PARMS NOT PRESENT
         CLC   GSPNULLV+1(3),STROKE+1(PARM)
         BE    AGAERR30                      ERROR IF STROKES NULL
         TM    STROKE(PARM),LAST
         BO    AGAERR00                 BRANCH IF REQ PARMS NOT PRESENT
         CLC   GSPNULLV+1(3),SYMBOL+1(PARM)
         BE    AGAERR40                      ERROR IF SYMBOL NULL
         TM    SYMBOL(PARM),LAST
         BO    AGAERR00                 BRANCH IF REQ PARMS NOT PRESENT
         CLC   GSPNULLV+1(3),COUNT+1(PARM)
         BE    AGAERR50                      ERROR IF COUNT NULL
         L     COUNT,SCOUNT(PARM)       PICK UP ADDRESS OF COUNT
         L     COUNT,0(COUNT)           COUNT
         LTR   COUNT,COUNT
         BZ    AGARET10                 RETURN IF STROKE COUNT ZERO
         BM    AGAERR50                 ERROR IF COUNT NEGATIVE
         EJECT
*
*CHECK TABLE IDENTIFICATION
*
         L     REGA,TABLE(PARM)         ADDRESS OF TABLE ID
         L     REGA,0(REGA)             PICK UP ID
         LTR   REGA,REGA
         BC    ZORM,AGAERR20            BRANCH IF ZERO OR LESS- ERROR
         C     REGA,ONEH
         BNL   AGAERR20                 BRANCH IF NOT LESS THAN 100
         SPACE 2
*THIS SECTION TESTS TO SEE THAT ALL ENTRIES IN THE STROKE ARRAY
*ARE WITHIN THE 1-128 RANGE SPECIFIED
*
         L     REGC,STROKE(PARM)       POINTER TO STROKE ARRAY
         ST    COUNT,WKCOUNT
         MH    COUNT,EIGHT+2            SET UP INDEX TO STROKE ARRAY
         S     COUNT,EIGHT              POSITION TO LAST DBL WORD PAIR
         AR    REGC,COUNT
AGASTR20 LM    RZERO,PARM,0(REGC)      LOAD X,Y COORDINATES
         C     RZERO,MEIGHT
         BL    AGAERR30                 BRANCH IF X LESS THAN -128
         C     RZERO,ONE28
         BH    AGAERR30                 BRANCH IF X GREATER THAN +128
         LTR   RZERO,RZERO
         BZ    AGAERR30                 BRANCH IF X COOR =0 -ERROR
         C     PARM,ONE
         BL    AGAERR30                 BRANCH IF Y LESS THAN +1
         C     PARM,ONE28
         BH    AGAERR30                 BRANCH IF Y GREATER THAN +128
         S     REGC,EIGHT
         S     COUNT,EIGHT
         LTR   COUNT,COUNT
         BNL   AGASTR20                 BRANCH IF NOT FINISHED
         L     COUNT,WKCOUNT
         L     PARM,WKPARM             RESET PARM REG
         EJECT
*
*THIS SECTION CHECKS TO SEE IF THE STROKE TABLE IS IN CORE. IF IT IS
*NOT IN, IT WILL BE LOADED AND CHAINED TO THOSE ALREADY IN.
*
*SET UP LOOP TO CHECK
*
         L     REGB,GSPSTRTB            LOAD ADDRESS OF STROKE TABLE
         SR    REGC,REGC                INITIALIZE REG TO CONTAIN PTR
AGATAB10 LTR   REGB,REGB
         BZ    AGATAB20                 BRANCH IF NO MORE TABLES
         C     REGA,ID(REGB)            CHECK FOR ID EQUAL
         BE    AGASTR10                 BRANCH IF STROKE TABLE FOUND
         LR    REGC,REGB                SAVE POINTER TO CURRENT TABLE
         L     REGB,NEXTAB(REGB)        PICK UP CHAIN ADDRESS
         B     AGATAB10
*
*LOAD THE STROKE TABLE AND CHAIN IT TO OTHERS.
*  TABLE CODE CONVERTED TO EBCIDIC
*
AGATAB20 MVC   WKNAME(8),FIXNAME        SET UP 'GSP     ' IN WORK AREA
         CVD   REGA,WKDBL               PACKED DECIMAL
         UNPK  WKNAME+3(2),WKDBL+6(2)   STORE EBCIDIC NAME
         OI    WKNAME+4,SIGN
         XC    WKSPVSR(12),WKSPVSR      ZERO SUPV PARM LIST
         LOAD  EPLOC=WKNAME
         L     PARM,WKPARM              RESET PARAMETER REGISTER
         LR    REGB,RZERO               ADDR OF STROKE TAB IN REGB
         ST    REGA,ID(REGB)            PUT ID IN STROKE TABLE
         XC    NEXTAB(4,REGB),NEXTAB(REGB)  ZERO CHAIN FIELD
         LTR   REGC,REGC
         BZ    AGATAB30                 BRANCH IF FIRST STROKE TABLE
         ST    REGB,NEXTAB(REGC)        CHAIN STROKE TABLES
         B     AGASTR10
*
*
*IF FIRST STROKE TABLE, ADDRESS IS ENTERED IN GSPCB
*
AGATAB30 ST    REGB,GSPSTRTB
         EJECT
*
*THIS SECTION INITIALIZES FOR CONVERTING STROKE ARRAY TO INTERNAL
*REPRESENTATION
*REGB ON ENTRY CONTAINS THE STROKE TABLE ADDRESS
*COUNT CONTAINS STROKE COUNT
AGASTR10 L     REGC,STROKE(PARM)        LOAD ADDRESS OF STROKE ARRAY
         L     REGA,SYMBOL(PARM)        PICK UP EBCDIC SYMBOL ADDRESS
         L     REGA,0(REGA)             SYMBOL
         SLA   REGA,2                   MULTIPLY BY 4 FOR INDEXING
         L     REGB,STKADDR(REGA,REGB)  ADDRESS OF STROKES
         LA    REGA,SWITCH              SET UP WORK SWITCH
*                                                                     *
*REGB CONTAINS POINTER TO STROKES
         LTR   REGB,REGB                IF=0, NO SPACE ALLOCACATED FOR
*                                        UPDATING -ERROR IN SYMBOL
*
         BZ    AGAERR40
*
*THIS SECTION CONDENSES AND STORES STROKES FROM THE STROKE ARRAY
*INTO THE STROKE TABLE.
*REGB POINTS TO STROKE TABLE POSITION
*COUNT CONTAINS THE COUNT OF STROKES
*REGC  POINTS TO THE STROKE ARRAY
*REGA  CONTAINS SWITCH SETTER
*CONDENSED FROM= 1 BYTE PER STROKE
*        BIT 0 = 1 BEAM OFF
*              = 0 BEAM ON
*        BITS1-3   XCOORDINATE
*        BIT4  = 1 LAST STROKE
*              = 0 NOT LAST
*        BITS5-7   Y COORDINATE
*
AGASET10 LM    RZERO,PARM,0(REGC)       PICK UP X AND Y COORDINATES
         LTR   RZERO,RZERO
         BZ    AGAERR30                BRANCH IF X CORD 0 - ERROR
         BM    AGASET50                 BRANCH IF BEAM OFF
         S     RZERO,ONE                DECREMENT X BY ONE       A36606
AGASET20 SLA   RZERO,8                  SHIFT TO HIGH ORDER BYTE
         AR    RZERO,PARM               INSERT Y COORDINATE
         S     RZERO,ONE                DECREMENT Y BY ONE       A19165
         STH   RZERO,0(REGB)
         BCT   COUNT,AGASET60
         OI    1(REGB),SWITCH           SET SWITCH TO SHOW END
         SPACE 4
AGARET10 L     SAVE,4(SAVE)
         RETURN (14,12),T
         SPACE 4
AGASET50 LPR   RZERO,RZERO              MAKE REGISTER POSITIVE
         S     RZERO,ONE                DECREMENT X BY ONE       A19165
         OR    RZERO,REGA               SET SWITCH FOR BLANK STROKE
         B     AGASET20
         SPACE
*RESET POINTERS FOR LOOP
AGASET60 LA    REGB,2(REGB)             POINT TO NEXT STROKE TABLE
         LA    REGC,8(REGC)             POINT TO NEXT ENTRY IN STROKE
*                                       ARRAY
         B     AGASET10
         EJECT
*ERRORS
*
AGAERR00 OI    0(ERRCD),PRM
         B     AGARET10
*
AGAERR10 MVC   PARMERR(4,ERRCD),ONE     GDS INVALID
         B     AGARET10
*
AGAERR20 MVC   PARMERR(4,ERRCD),TWO     INVALID TABLE ID
         B     AGAERR00
*
AGAERR30 MVC   PARMERR(4,ERRCD),THREE  INVALID VALUE IN ARRAY
         B     AGAERR00
*
AGAERR40 MVC   PARMERR(4,ERRCD),FOUR    INVALID SYMBOL
         B     AGAERR00
*
AGAERR50 MVC   PARMERR(4,ERRCD),FIVE    INVALID STROKE COUNT
         B     AGAERR00
         EJECT
*CONSTANTS
*
FIXNAME  DC    C'GSP     '
ONE      DC    F'1'
TWO      DC    F'2'
THREE    DC    F'3'
FOUR     DC    F'4'
FIVE     DC    F'5'
EIGHT    DC    F'8'
ONE28    DC    F'128'
XLEVEN   DC    X'00000101'
MEIGHT   DC    F'-128'
ONEH     DC    F'100'
         SPACE 4
WORKAREA DSECT
WKPARM   DS    F                        ADDR OF PARAMETER LIST
WKRTNCD  DS    F                        ADDR OF RETURN ARRAY
WKSAVE   DS    18F                      SAVE AREA
WKNAME   DS    D                        SPACE FOR STROKE TABLE NAME
WKDBL    DS    D                        DOUBLE WORD FOR CONVT TO DEC
WKCOUNT  DS    F
WKSPVSR  DS    3F                       SUPV PARM LIST FOR LOAD
         COPY  GDSCB
         COPY  GSPCB
         COPY  GTMCB
         END
