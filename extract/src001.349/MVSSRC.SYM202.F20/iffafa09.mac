*TITLE         INCL/OMIT
*
*ENTRY POINT   IFFAFA09/IFFAFA10
*
*INPUT         IN REGISTER 1 THE ADDRESS OF A WORK AREA
*                 IN THE FIRST WORD OF THE WORK AREA THE ADDRESS OF
*                 A VARIABLE LENGTH PARAMETER LIST
*                    +0 A(GDSCB)
*                    +4 A(CORRVAL)   OPTIONAL
*                    +8 A(KEY)       OPTIONAL
*                 IN THE SECOND WORD OF THE WORK AREA THE ADDRESS OF
*                 THE GSP RETURN ARRAY
*
*OUTPUT        NONE TO CALLER. THE SPECIFIED ELEMENT, SEQUENCE, GRAPHIC
*              SUBROUTINE, OR GRAPHIC DATA SET WILL BE PUT IN EITHER
*              INCLUDE STATUS (IN WHICH CASE THE IMAGE WILL APPEAR) OR
*              OMIT STATUS (IN WHICH CASE THE IMAGE WILL NOT APPEAR)
*
*FUNCTION      TO CAUSE A SPECIFIED TO APPEAR OR NOT TO APPEAR. NOTE
*              THAT IF NEITHER A KEY NOR A CORRELATION VALUE IS
*              SPECIFIED OR IF LEVEL 2 HAS BEEN REQUESTED PREVIOUSLY
*              THE ENTIRE CURRENT GRAPHIC DATA SET WILL BE PUT IN THE
*              REQUESTED STATUS.
*
*
*INTERNAL ROUTINES  KEY TABLE MGMT, GWRITE MACRO INSTRUCTION
*
*EXIT          TO CALLER WITH RETURN CODE SET
*
         EJECT
*
*REGISTER UTILIZATION
*
R0       EQU   0
R1       EQU   1        PLIST REG
R2       EQU   2        HOLDS P/P PLIST
R3       EQU   3        HOLDS GSPARRAY ADDR
R4       EQU   4        WORK REG
R5       EQU   5        WORK REG
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
IFFAFA09 CSECT
*0875,                                                             9293
*0875,512600                                                       5398
*2230,308000,312000,326000-338000                                  000A
*
*ENTRY TO INCLUDE. SAVE REGISTERS AND SET SWITCH TO REMEMBER ENTRY
*POINT
*
         ENTRY IFFAFA10
         USING *,15
         SAVE  (14,12)
         LA    R11,N1                  SET SW TO INDICATE INCLUDE
         B     INOLWB2
         DROP  R15
*
*ENTRY TO OMIT. SAVE REGISTERS AND SET SWITCH TO REMEMBER ENTRY POINT.
*
IFFAFA10 SAVE  (14,12)
         SR    R11,R11                 SET SW TO INDICATE OMIT
*
*PERFORM NORMAL HOUSEKEEPING AND INITIALIZATION FUNCTIONS - CHAIN SAVE
*AREAS, ESTABLISH ADDRESSABILITIES, ZERO FIELDS, ETC
*
INOLWB2  BALR  R9,R0
         USING *,R9                    ESTABLISH CSECT ADDRESSABILITY
         LA    R10,N8(R1)              GET WORK AREA ADDR
         USING INOWORK,R10             ESTABLISH WORK AREA ADDRESSABIL
         L     R2,N0(R1)               GET PLIST ADDR
         L     R3,N4(R1)               GET GSPARRAY ADDR
         ST    R13,INOSAVE+4           CHAIN SAVE AREAS
         LA    R4,INOSAVE
         ST    R4,N8(R13)
         LR    R13,R4                  SET SAVE AREA REG
         L     R8,N0(R2)               GET PTR TO GDSCB ADDR
         L     R8,N0(R8)               GET GDSCB ADDR
         USING GDSCB,R8                ESTABLISH GDSCB ADDRESSABILITY
         L     R7,GDSGTMCB             GET GTMCB ADDR FROM GDSCB
         USING GTMCB,R7                ESTABLISH GTMCB ADDRESSABILITY
         XC    N0(N20,R3),N0(R3)       ZERO GSPARRAY
         XC    WRKSW(2),WRKSW           ZERO SWITCH AREA
         EJECT
*
*TEST FOR CONTROL BLOCK VALIDITY. IF GDS IS UNOPEN OR INVALID THE
*GSPARRAY IS SET TO INDICATE THE ERROR.
*
         CLC   GDSVALID(2),GDSID       IS CONTROL BLOCK VALID
         BE    INOLWC2                 YES
         MVI   19(R3),X'01'
INOLWD1  MVI   0(R3),X'08'             PARAM ERROR
         B     INOLVG3
         SPACE 3
*
*TEST FOR LEVEL OF SUPPORT. IF LEVEL 1 A KEY AND/OR A CORVAL MUST HAVE
*BEEN SPECIFIED IF THE ENTIRE GDS IS NOT TO BE INCLUDED. IF LEVEL 2
*A KEY MUST NOT HAVE BEEN PASSED.
*
INOLWC2  TM    GDSFLAGS,X'10'          IS LEVEL 2 SUPPORT REQUESTED
         BO    INOLWD2                 YES
*
*LEVEL 1. KEY AY AND/OR CORVAL WAS PASSED LOCATE KEY IN KEY TABLE. IF
*NEITHER WAS PASSED INCLUDE/OMIT THE ENTIRE CURRENT GDS.
*
         TM    N0(R2),X'80'            WAS A KEY AND/OR CORVAL PASSED
         BO    INOLWC4                 NO
         TM    N4(R2),X'80'            WAS A KEY FIELD PARAM PASSED
         BO    INOLWC3B                NO
         CLC   N9(N3,R2),N21(R3)       WAS NULL VAR PASSED IN KEY FIELD
         BNE   INOLWD3                 NO
INOLWC3B CLC   N5(N3,R2),N21(R3)       WAS NULL PASSED IN CORVAL FIELD
         BE    INOLWC4                 YES
*
*CORVAL HAS BEEN SPECIFIED. BEGIN KEY TABLE MGMT PARAMETER LIST.
*
         LA    R4,KEYCODE5
         ST    R4,KEYPLIST+4           INDICATE SEARCH FOR CORVAL
         MVC   KEYPLIST+9(3),5(R2)     PUT CORVAL ADDR IN PLIST
         B     INOLWD3A
INOLWD2  TM    N0(R2),X'80'            WAS A KEY AND/OR A CORVAL PASSED
         BO    INOLWC4                 NO
         TM    N4(R2),X'80'            WAS A KEY FIELD PARAM PASSED
         BO    INOLWC4                 NO
         CLC   N9(N3,R2),N21(R3)       HAS NULL VAR REPLACED KEY
         BNE   INOLWD1                 NO
         EJECT
*
*LEVEL 2. IF NO KEY HAS BEEN SPECIFIED THE ENTIRE GDS WILL BE INCLUDED
*OR OMITTED. IF A KEY IS SPECIFIED THE GSPARRAY IS SET TO INDICATE THE
*ERROR.
*
INOLWC4  LH    R14,GDSFCBUF            GET BFR ADDR OF FLOW CTL ENTRY
         LTR   R14,R14                 IS THERE A FLOW CONTROL ENTRY
         BZ    INOLWD1                 NO
         OI    WRKSW,X'01'             INDICATE INCLUDE/OMIT ENTIRE GDS
         LA    R3,2(R14)               COMPUTE PHYSICAL BFR ADDR
         LA    R5,GNOP                 GET GNOP ADDR
         LTR   R11,R11                 WAS OMIT REQUESTED
         BZ    INOLVE1                 YES
         B     INOLWD4
*
*LEVEL 1, KEY PARAMETER SPECIFIED. BEGIN KEY TABLE MANAGEMENT PARAMETER
*LIST.
*
INOLWD3  LA    R4,KEYCODE
         ST    R4,KEYPLIST+4           INDICATE SEARCH FOR KEY
*
*COMPLETE PARAMETER LIST. INVOKE KEY TABLE MANAGEMENT.
*
         MVC   KEYPLIST+8,N8(R2)       PUT KEY ADDR IN PLIST
INOLWD3A ST    R8,KEYPLIST             PUT GDSCB ADDR IN PLIST
         L     R4,N24(R3)              GET STATUS TABLE ADDR
         L     R15,KEYDISP(R4)         GET KEY TABLE MGMT EP ADDR
         LTR   R15,R15                 HAS KEY TBL MGMT BEEN LOADED
         BZ    INOLWD1             NO-ERROR                        000A
INOLWD3B LA    R1,KEYPLIST             GET KEY TABLE MGMT PLIST
         BALR  R14,R15             BRANCH TO KEY TABLE MGMT        000A
*
*TEST FOR SUCCESSFUL COMPLETION OF KEY TABLE MANAGEMENT.
*
         LTR   R15,R15                 WAS KEY/CORVAL FOUND
         BP    INOLWD1                 NO
         B     INOLWF3
         EJECT
*SET KEY FLAG TO INDICATE WHETHER INCLUDE OR OMIT STATUS.
*
INOLWF3  LTR   R11,R11                 WAS OMIT CALLED
         BZ    INOLWF4                 YES
         OI    4(R1),X'04'             SET KEY FLAG TO INCLUDE
         B     INOLWH3
INOLWF4  NI    4(R1),X'FB'             SET KEY FLAG FOR OMIT
*
*SET SWITCH TO REMEMBER SINGLE OR MULTIPLE VECTORS.
*
INOLWH3  TM    N4(R1),X'80'            TEST FOR MULTIPLE VECTORS
         BZ    INOLWH2                 SINGLE
         LA    R0,1                    SET SW TO INDICATE MULT VECTORS
         B     INOLWJ3
INOLWH2  SR    R0,R0                   SET SW TO INKICATE SINGLE VECTOR
*
*TEST FOR 128 BYTE GDOA
*
INOLWJ3  LA    R4,128
         CH    R4,GDSGDOAL             IS GDOA 128 BYTES
         BE    INOLWJ4                 YES
         EJECT
*
*COMPUTE PHYSICAL BUFFER ADDRESS FOR A 256 BYTE MULTIPLE GDOA.
*
         LH    R6,GDSGDOAL             GET GDOA LENGTH FROM GDSCB
         SH    R6,C6
         LH    R5,N2(R1)               GET LOG BFR START ADDR
         M     R4,C1
         DR    R4,R6                   COMPUTE ELEMENT NUMBER IN GDS
         LH    R6,GDSBCTEL             GET BCT INDEX
         MH    R6,CH3                  EXPAND BCT INDEX
         L     R2,GTMBCTBL             GET BCT ADDR FROM GTMCB
INOLWK3A SR    R14,R14
         IC    R14,2(R6,R2)            GET CT FIELD FROM BCT
         CR    R14,R5                  IS THIS LAST SEGMENT OF ELEMENT
         BE    INOLWK3B                YES
         SR    R14,R14
         IC    R14,1(R6,R2)            GET PTR TO MEXT SEGMENT
         MH    R14,CH3                 COMPUTE PTR TO NEXT SEGMENT
         CR    R6,R14                  ARE PTR AND INDEX EQUAL
         BE    INOLWD1                 YES
         LR    R6,R14
         B     INOLWK3A
INOLWK3B LR    R5,R6                   TRANSFER BCT INDEX
         LR    R6,R4                   TRANSFER REMAINDER
         M     R4,C1                   PROPAGATE SIGN FOR DIVIDE
         D     R4,C3                   COMPUTE SEGMENT NUMBER
         MH    R5,C256                 COMPUTE NUMBER OF BYTES
         LA    R3,N2(R5,R6)            COMPUTE PHYSICAL BFR ADDR
         B     INOLVA2
*
*COMPUTE PHYSICAL BUFFER ADDRESS FOR A 128 BYTE GDOA.
*
INOLWJ4  LH    R3,GDSBCTEL             GET BCT INDEX
         LH    R6,2(R1)                GET LOG BFR START ADDR FROM KEY
         LR    R5,R3
         MH    R5,C256                 COMPUTE BFR START ADR OF SEGMENT
         L     R4,GTMBCTBL             GET BCT ADDR
         MH    R3,CH3             CALCULATE DISPL FROM INDEX       5398
         AR    R4,R3                   COMPUTE BCT SEGMENT ADDR
         CLC   0(1,R4),GDSBCTID        FIRST OR SECOND HALF OF SEGMENT
         BE    INOLWJ4A                FIRST
         LA    R3,130(R5,R6)           COMPUTE PHYS BFR ADDR
         B     INOLVA2
INOLWJ4A LA    R3,2(R5,R6)             COMPUTE PHYS BFR ADDR
         EJECT
*
*IF MULTIPLE VECTORS AND BUFFER SUBROUTINE ADD 8 TO THE PHYSICAL
*BUFFER ADDRESS. IF OMIT STATUS SETUP A GTRU ORDER. IF INCLUDE STATUS
*SETUP A GNOP ORDER
*
INOLVA2  LTR   R0,R0                   TEST FOR SINGLE VECTOR
         BE    INOLVA3                 SINGLE
         TM    N4(R1),X'38'       ORGEN PUTS INCL/OMIT AT TOP SO   9293
         BO    INOLVC1               SKIP CHECK FOR BFR SUBRTN     9293
         TM    N4(R1),X'28'            TEST FOR BFR SUBRTN
         BC    14,INOLVC1              NOT A SUBRTN
INOLVB1  LA    R3,N8(R3)               COMPUTE PHYSICAL BFR ADDR
INOLVC1  LTR   R11,R11                 WAS OMIT CALLED
         BZ    INOLWD4                 YES
         LA    R5,GNOP                 GET GNOP ADDR
         B     INOLVE1
INOLWD4  LA    R5,GTRU                 GET GTRU ADDR
*
*SETUP GWRITE MACRO PARAMETERS
*
*
INOLVE1  LA    R6,2                    SET LENTH COUNT
INOLVE1A STH   R3,BFRAD
         L     R4,GTMGRDCB             GET GRAPHIC DCB ADDR
         EJECT
*
*IF AN EQUIVALENT GDS HAS BEEN REFERENCED THE BUFFER COPY (IF THERE IS
*A COPY IN THE BUFFER) AND THE GDOA COPY MUST BOTH BE CHANGED. IF THE
*GDS IS NOT EQUIVALENT OR IF THE STATUS OF THE ENTIRE GDS IS TO CHANGE
*ONLY THE BUFFER COPY MUST BE CHANGED
         TM    WRKSW,X'01'             WAS STATUS OF ENTIRE GDS CHANGED
         BO    INOLVE1B                YES
*
         TM    GDSFLAGS,X'08'          WAS AN EQUIVALENT GDS REFERENCED
         BZ    INOLVE1B                NO
         L     R2,GDSAOACB             GET OACB ADDR
         S     R3,24(R2)               COMPUTE ADDR OF ORDER IN GDOA
         A     R3,12(R2)
         S     R6,C1                   SETUP LENGTH FIELD FOR EXECUTE
         EX    R6,MOVE                 MOVE ORDER INTO GDOA
         LA    R6,1(R6)                 RESTORE LENGTH COUNT
         TM    GDSFLAGS,X'80'          IS EQUIVALENT GDS IN BUFFER
         BZ    INOLVG3                 NO
         EJECT
*
*ISSUE WAIT FOR LAST I/O. PUT GTRU/GNOP ORDER IN BUFFER.
*
INOLVE1B L     R1,GTMDECB1             GET GRAPHIC ECB ADDR
         WAIT  ECB=(1)                 WAIT FOR COMPLETION OF LAST I/O
         L     R1,GTMDECB1
         CLI   0(R1),X'7F'             TEST FOR SUCCESSFUL I/O
         BE    INOLVE1C                SUCCESS
IOERET   L     R3,GTMGSPCB        GSPCB ADDR                       5398
         USING GSPCB,R3
         MVI   GSPARRAY,X'04'          SET I/O ERROR CODE
         B     INOLVG3
INOLVE1C NI    0(R1),X'BF'             TURN OFF ECB COMPLETION FLAG
         ST    R6,20(R1)               PUT LENGTH IN DECB
         L     R6,GDSAOACB
         L     R6,0(R6)
         L     R6,4(R6)
         MVC   0(2,R6),BFRAD            BUFFER START ADDRESS
         MVC   2(2,R6),0(R5)            GRAPHIC ORDER
         LA    R5,2(R6)
         GWRITE (1),STR,(4),,(5),(6),GDSFCBUF,MF=E
         LTR   R15,R15            I/O START OK                     5398
         BNZ   IOERET                IF NO, USE I/O ERROR RETURN   5398
INOLVG3  L     R13,INOSAVE+4
         RETURN (14,12),T
         EJECT
*
*THE CASE OF A SINGLE VECTOR HAS BEEN DETERMINED. NOW DETERMINE THE
*MODE. THE BYTE OF THE MODE ORDER WHICH CONTAINS THE BEAM BIT IS KEPT
*IN THE FIFTH BYTE OF THE KEY. IF THE MODE IS ABSOLUTE THE BEAM BIT IS
*THE SECOND BIT OF THE DATA BYTE. IF THE MODE IS INCREMENTAL THE BEAM
*BIT IS THE EIGHTH BIT OF THE DATA BYTE. THE VECTOR IS OMITTED BY
*TURNING THE BEAM BIT ON, IT IS INCLUDED BY TURNING THE BEAM BIT OFF.
*WHEN THE BEAM BIT HAS BEEN SET THE PHYSICAL BUFFER ADDRESS AT WHICH
*IT IS TO BE STORED IS COMPUTED AND IT IS WRITTEN TO THE BUFFER.
*
INOLVA3  TM    N4(R1),X'03'            IS MODE ABSOLUTE
         BM    INOLVA4                 NO
*
*THE MODE IS ABSOLUTE. DETERMINE WHETHER TO INCLUDE OR OMIT.
*
         LTR   R11,R11                 WAS OMIT CALLED
         BZ    INOLVC3                 YES
*
*INCLUDE
*
         NI    N5(R1),X'BF'            UNBLANK MODE ORDER
         B     INOLVD3
*
*OMIT
*
INOLVC3  OI    N5(R1),X'40'            BLANK MODE ORDER
*
*DETERMINE IF,, IN THE BUFFER, A SET MODE ORDER PRECEDES THE VECTOR
*BEING CONSIDERED. IF THERE IS, TWO BYTES MUST BE ADDED TO THE BUFFER
*ADDRESS PREVIOUSLY COMPUTED.
*
INOLVD3  TM    N4(R1),X'40'            IS A MODE ORDER PRESENT
         BZ    INOLVF3                 NO
         LA    R3,N2(R3)               COMPUTE PHYSICAL BFR ADDR
*
*PREPARE PARAMETERS FOR THE GWRITE MACRO
*
INOLVF3  LA    R5,5(R1)                ADDR TO BE WRITTEN FROM
         LA    R6,1                    LENGTH TO BE WRITTEN
         B     INOLVE1A
         EJECT
*
*THE MODE IS INCREMENTAL. DETERMINE WHETHER TO INCLUDE OR OMIT.
*
INOLVA4  LTR   R11,R11                 WAS OMIT CALLED
         BZ    INOLVA5                 YES
*
*INCLUDE
*
         NI    N5(R1),X'FE'            UNBLANK MODE ORDER
         B     INOLVC4
*
*OMIT
*
INOLVA5  OI    N5(R1),X'01'            BLANK MODE ORDER
*
*DETERMINE IF , IN THE BUFFER, A SET MODE ORDER PRECEDES THE VECTOR
*BEING CONSIDERED. IF THERE IS THREE BYTES MUST BE ADDED TO THE BUFFER
*ADDRESS PREVIOUSLY COMPUTED. IF THERE IS NOT, ONE BYTE MUST BE ADDED.
*
INOLVC4  TM    N4(R1),X'40'            IS A MODE ORDER PRESENT
         BZ    INOLVC5                 NO
*
*SET MODE ORDER IS PRESENT. COMPUTE PHYSICAL BUFFER ADDRESS WHERE THE
*DATA BYTE IS TO BE WRITTEN
*
         LA    R3,N3(R3)               COMPUTE PHYSICAL BFR ADDR
         B     INOLVF3
*
*SET MODE ORDER IS NOT PRESENT. COMPUTE PHYSICAL BUFFER ADDRESS WHERE
*THE DATA BYTE IS TO BE WRITTEN.
*
INOLVC5  LA    R3,N1(R3)               COMPUTE PHYSICAL BFR ADDR
         B     INOLVF3
         EJECT
*
*DEFINED CONSTANTS
*
N0       EQU   0
N1       EQU   1
N2       EQU   2
N3       EQU   3
N4       EQU   4
N5       EQU   5
N8       EQU   8
CVTLINK  EQU   8
N9       EQU   9
N20      EQU   20
N21      EQU   21
N24      EQU   24
KEYDISP  EQU   828
         GINIT
GTRU     GTRU  0
GNOP     GNOP4 0
C1       DC    F'1'
KEYCODE  DC    F'2'
C3       DC    F'3'
KEYCODE5 DC    F'5'
CF256    DC    F'256'
CH3      DC    H'3'
C6       DC    H'6'
C256     DC    H'256'
GDSID    DC    X'F203'
MOVE     MVC   0(0,R3),0(R5)           USED WITH EX INSTR
INOWORK  DSECT
INOSAVE  DS    18F
KEYPLIST DS    10F
SUPPLIST DS    2F
BFRAD    DS    H
BFRSTART DS    H
WRKSW    DS    H
         COPY  GDSCB
         COPY  GSPCB
         COPY  GTMCB
         END
