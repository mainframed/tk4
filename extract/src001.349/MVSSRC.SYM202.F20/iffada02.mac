*STATUS  CHANGE LEVEL 001
*FUNCTION/OPERATION  ACCESSES THE GTMCB BY REFERENCING THE GDSCB.
*   IF NO CURSOR IS PRESENT IN THE TERMINAL ALL CURSOR PRESENT FLAGS
*   IN THE GTMCB AND ALL GDSCB'S CHAINED TO IT ARE REMOVED. IF A
*   CURSOR IS PRESENT THE BUFFER CONTROL TABLE IS REFERENCED. THE
*   LOGICAL AND PHYSICAL EXTENTS OF ASSIGNED BUFFER ARE COMPUTED,
*   THE BUFFER IS SEARCHED, AND ALL CURSORS ARE REMOVED. ALL 'CURSOR
*   PRESENT' FLAGS IN THE GTMCB AND ASSOCIATED GDSCB'S ARE RESET
*   AND RETURN IS MADE TO DIRECTOR 2.
*ENTRYPOINT  IFFADA02
*INPUT  REGISTER 1 POINTS TO A WORKAREA, WORD 1 OF WHICH POINTS TO
*   A PARAMETER LIST WHICH CONTAINS THE ADDRESS OF THE GDSCB; WORD 2
*   POINTS TO THE RETURN CODE ARRAY
*OUTPUT  CURSORS ARE REMOVED
*EXTERNAL ROUTINES  GREAD, GCNTRL
*EXITS-NORMAL  RETURN TO DIRECTOR 2 VIA RETURN MACRO
*     -ERRORS  AS ABOVE, WITH ERROR CODE
*TABLES/WORK AREAS  GSP WORKAREA, BUFFER CONTROL TABLE
*ATTRIBUTES  PROBLEM PROGRAM, REENTRANT
*NOTES  NONE
IFFADA02 CSECT
*C395000                                                         A37141
*D320000                                                         A33269
*2025,000000-999999                                           000A,8662
         SAVE  (14,12)
         BALR  BASE,0              BASE
         USING *,BASE
         LR    WORK,PARM
         USING WORKAREA,WORK       WORK AREA DSECT
         L     ERRCD,WRKRTNCD      RETURN ARRAY
         XC    0(20,ERRCD),0(ERRCD) ZERO RETURN ARRAY
         L     GDSREG,WRKPARM
         L     GDSREG,0(GDSREG)
         L     GDSREG,0(GDSREG)    GDSCB ADDR
         USING GDSCB,GDSREG
         CLI   GDSGDSID,X'03'      VALID GDSCB
         BNE   ERR1                NO PARM ERROR
         L     GTMREG,GDSGTMCB     GTMCB DSECT
         USING GTMCB,GTMREG
         LA    REGA,WRKSAVE
         ST    REGA,8(SAVE)        CHAIN SAVE AREAS
         ST    SAVE,4(REGA)
         LR    SAVE,REGA
         TM    GTMFLAGS,CUR        CURSOR IN TERMINAL
         BZ    INS01000            NO ZERO FLAGS AND EXIT
         XI    GTMFLAGS,CUR        TURN OFF FLAG
         CLC   GTMCRLOC,ZERO       CURSOR NOT WRITTEN YET
         BE    INS00100
         MVC   GTMCRLOC,ZERO       ZERO ADDRESS
         B     INS01000
INS00100 L     REGA,GTMBCTBL       BUFFER CONTROL TABLE
         SR    REGB,REGB           INDEX
         XC    WRKDECB(32),WRKDECB ZERO DECB
         L     DCB,GTMGRDCB        DCB ADDRESS
         MVI   WRKSW,X'00'         ZERO SWITCH
INS00200 SR    REGC,REGC           COUNT FOR LENGTH
         SR    R15,R15
INS00300 CH    REGB,H384           ALL ASSIGNED BUFFER SEARCHED
         BNL   INS00800            YES
         IC    R15,0(REGA,REGB)    ASSIGNED
         LTR   R15,R15
         BNE   INS00500            YES
         LA    REGB,3(REGB)
         LTR   REGC,REGC           ZERO-ANY ASSIGNED SO FAR
         BZ    INS00300            NO KEEP SEARCHING
INS00350 STH   REGD,WRKBUFAD       PLACE IN BUFFER ADDR FIELD
         STH   REGD,WRAP               SAVE STARTING ADDRESS FOR END
*                                      OF BUFFER COMPARE
INS00400 ST    REGC,WRKDECB+20
         GREAD WRKDECB,FND,(DCB),,WRKSENSE,WRKBUFAD,MF=E
         WAIT  ECB=WRKDECB
         CLI   WRKDECB,X'7F'       SUCCESSFUL I/O
         BNE   ERR2                NO
         SR    REGD,REGD               INITIALIZE REGISTER
         SR    REGC,REGC               INITIALIZE BUFFER REGISTER
         LH    REGD,WRKBUFAD       START ADDR
         A     REGD,WRKDECB+20     PLUS LENGTH
         LA    REGD,1(REGD)
         CH    REGD,WRKSENSE+2     CURSOR FOUND
         BNH   INS00700           NO GO TO NEXT SEARCH           A37141
         LH    REGC,WRKSENSE+2     ADDR STOPPED
         CH    REGC,WRAP               Q. HAS WRAPAROUND OCCURRED
         BNH   BUFFLIM                 YES - CHECK FOR CURSOR IN LAST
*                                      BYTE OF BUFFER
         BCTR  REGC,0
         STH   REGC,CURSOR
         MVC   WRKBUFAD(2),WRKSENSE+2
         BCTR  REGD,0
         SH    REGD,WRKSENSE+2
         LR    REGC,REGD
INSRET   EQU   *
         XC    WRKDECB(32),WRKDECB ZERO DECB
         GCNTRL WRKDECB,RMV,(DCB),CURSOR,MF=E
         WAIT  ECB=WRKDECB         WAIT
         CLI   WRKDECB,X'7F'       I/O ERROR
         BNE   ERR2                NO
         TM    WRKSW,EIGHTY            Q. HAVE WE WRAPPED AROUND
         BO    INS00700                YES - BRANCH TO EXIT
         XC    WRKDECB(32),WRKDECB ZERO DECB
         B     INS00400            CONTINUE SEARCH
BUFFLIM  EQU   *
         LTR   REGC,REGC               IS ZERO IF CURSOR IS IN
*                                      LAST BYTE OF BUFFER
         BNZ   INS00700                NO CURSOR - EXIT
         BCTR  REGD,0
         BCTR  REGD,0                  DECREMENT BY TWO TO GET
*                                      LAST PHYSICAL BUFFER ADDRESS
         STH   REGD,CURSOR             STORE CURSOR ADDRESS FOR RMV
         OI    WRKSW,EIGHTY            TURN ON WRAP SWITCH
         B     INSRET                  BRANCH TO REMOVE CURSOR
INS00500 LTR   REGC,REGC           START ADDR COMPUTED
         LA    REGC,256(REGC)
         BNE   INS00600
         LR    PARM,REGB           INDEX
         M     REG0,F256           X256
         D     REG0,F3             DIV BY 3
         LR    REGD,PARM           IS BUFFER ADDR
INS00600 LA    REGB,3(REGB)        ADD TO INDEX
         B     INS00300            CONTINUE SEARCH
INS00700 TM    WRKSW,DONE          DONE
         BZ    INS00200            NO
         B     INS00900            YES
INS00800 OI    WRKSW,DONE          SET DONE SW
         LTR   REGC,REGC           READ DONE
         BNE   INS00350            NO
INS00900 GCNTRL WRKDECB,STR,(DCB),GDSFCBUF,MF=E RESTART REG.
         WAIT  ECB=WRKDECB
         CLI   WRKDECB,X'7F'
         BNE   ERR2
INS01000 L     GDSREG,GTMGDSCB
INS01100 NI    GDSFLAGS,OUTCUR     REMOVE CURSOR PRES FLAG
         L     GDSREG,GDSNXGDS
         LTR   GDSREG,GDSREG       ALL DONE
         BE    INS01200
         B     INS01100
INS01200 L     SAVE,4(SAVE)
         RETURN (14,12)
ERR1     OI    0(ERRCD),PARMER     PARM ERROR
         OI    19(ERRCD),X'01'     1ST PARM
         B     INS01200
ERR2     OI    0(ERRCD),IO         IO ERROR
         B     INS01200
REG0     EQU   0
PARM     EQU   1
REGA     EQU   2
REGB     EQU   3
ERRCD    EQU   4
WORK     EQU   5
DCB      EQU   6
GTMREG   EQU   7
GDSREG   EQU   8
BASE     EQU   9
REGC     EQU   10
REGD     EQU   11
SAVE     EQU   13
RET      EQU   14
R15      EQU   15
CUR      EQU   X'01'
OUTCUR   EQU   X'DF'
PARMER   EQU   X'08'
DONE     EQU   X'01'
EIGHTY   EQU   X'08'
IO       EQU   X'04'
F3       DC    F'3'
F256     DC    F'256'
ZERO     DC    H'0'
H384     DC    H'384'
WORKAREA DSECT
WRKPARM  DS    F
WRKRTNCD DS    F
WRKSAVE  DS    18F
WRKBUFAD DS    H
CURSOR   DS    H
WRKSENSE DS    F
WRKDECB  DS    8F
WRAP     DS    H
WRKSW    DS    X
         COPY  GSPCB
         COPY  GTMCB
         COPY  GDSCB
         END
