         TITLE '-ISTAPM61-  ***ESTAE EXIT INTERFACE RTN***             *
                        '
ISTAPC61 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTAPC61  77.266'                                 0001
         DROP  @15
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
*   IF ENTCODE=SDWAABS              /* IF NO SDWA            @OZ04697*/
*     THEN                                                         0284
         C     ENTCODE,@CF02219                                    0284
         BE    @RT00284                                            0284
*     ;                             /* THEN NO SAVE AREA     @OZ04697*/
*   ELSE                                                           0286
*     DO;                           /* ELSE STORE REGS       @OZ04697*/
*       STM(R14,R12,SVSTRT);        /*                       @OZ04697*/
         STM   R14,R12,SVSTRT(R13)                                 0287
*       RFY                                                        0288
*         R12 UNRSTD;               /*                       @OZ04697*/
*       RFY                                                        0289
*         STDSAVE BASED(SAVER13);   /*                       @OZ04697*/
*       SAVER13=R13;                /* PROTECT SAVEAREA PTR ACROSS 0290
*                                      TPMSG, SETLOCKS       @OZ04697*/
         LR    SAVER13,R13                                         0290
*     END;                          /* END STORE REGS        @OZ04697*/
*   DO;                             /* LISATCVT                    0292
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
@RT00284 DS    0H                                                  0293
*     ATCVTPTR=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0293
*   END;                            /* LISATCVT              @G35RKD1*/
*   RFY                                                            0295
*     R15 RSTD;                     /*                       @G35RKD1*/
*   IF ATCVTPTR=ZERO                /* IF NO ATCVT           @G35RKD1*/
*       ×ATCABEN=ON                 /* OR VTAM ABEND IN PROCESS    0296
*                                                            @G35RKD1*/
*     THEN                                                         0296
         LTR   ATCVTPTR,ATCVTPTR                                   0296
         BZ    @RT00296                                            0296
         TM    ATCABEN(ATCVTPTR),B'10000000'                       0296
         BNO   @RF00296                                            0296
@RT00296 DS    0H                                                  0297
*     DO;                           /* NOTE: THIS SITUATION WILL ONLY
*                                      OCCUR AS A RESULT OF A VTAM 0297
*                                      ABEND AND THE ABENDING OF AN
*                                      APPLICATION FOR WHICH TPEND 0297
*                                      EXIT COULD NOT BE SCHEDULED.
*                                      APM61 IS SIMPLY PERCOLATED TO
*                                      , NO CONDITION EXISTS .     0297
*                                                            @G35RKD1*/
*       IF ENTCODE^=SDWAABS         /* IF SDWA PRESENT       @G35RKD1*/
*         THEN                                                     0298
         C     ENTCODE,@CF02219                                    0298
         BE    @RF00298                                            0298
*         LM(R14,R12,SVSTRT);       /* RESTORE REGS          @G35RKD1*/
         LM    R14,R12,SVSTRT(SAVER13)                             0299
*       R15=0;                      /* THEN SKIP ALL PROCESSING    0300
*                                                            @G35RKD1*/
@RF00298 SLR   R15,R15                                             0300
*       RETURN;                     /* AND RETURN IMMEDIATELY      0301
*                                                            @G35RKD1*/
@EL00001 DS    0H                                                  0301
@EF00001 DS    0H                                                  0301
@ER00001 BR    @14                                                 0301
*     END;                          /* END NO ATCVT OR VTAM ABEND  0302
*                                                            @G35RKD1*/
*   RFY                                                            0303
*     R15 UNRSTD;                   /*                       @G35RKD1*/
@RF00296 DS    0H                                                  0304
*   SAVER14=R14;                    /* SAVE REG14 FOR RETURN PURPOSES*/
         LR    SAVER14,R14                                         0304
*   RFY                                                            0305
*     R14 UNRSTD;                   /*                       @OZ04697*/
*   SAVER0=ENTCODE;                 /* SAVE REG0 FOR ENTRY CODE    0306
*                                                            @Z40GKD1*/
         LR    SAVER0,ENTCODE                                      0306
*   SDWAPTR=R1;                     /* SAVE POSSIBLE POINTER TO SDWA
*                                                            @Z40GKD1*/
         LR    SDWAPTR,R1                                          0307
*/* ISSUE MESSAGE BEFORE TAKING DUMP TO NOTIFY OPERATOR              */
*                                                                  0308
*   IF ENTCODE^=12                  /* SDWA EXISTENCE CODE TEST      */
*     THEN                                                         0308
         C     ENTCODE,@CF02219                                    0308
         BE    @RF00308                                            0308
*     DO;                           /* IT DOES, SO ISSUE TPMSG, USING
*                                      SAVEAREA                      */
*       R13=ADDR(SAVEREGS);         /* REG13 POINTS TO 72-BYTE     0310
*                                      SAVERAEA              @OZ04697*/
         LA    R13,SAVEREGS(,SDWAPTR)                              0310
*/*   PSATOLD->TCB->TIOT->JOBNAME,STEPNAME                   @ZM41321*/
*                                                                  0311
*       SAVNAM1=TIOCNJOB;           /*                       @ZM41321*/
         L     @06,TCBPTR                                          0311
         L     @06,TCBTIO(,@06)                                    0311
         MVC   SAVNAM1(8,SDWAPTR),TIOCNJOB(@06)                    0311
*       SAVNAM2=TIOCSTEP;           /*                       @ZM41321*/
         MVC   SAVNAM2(8,SDWAPTR),TIOCSTEP(@06)                    0312
*       RFY                                                        0313
*         R6 RSTD;                  /*                       @ZM41321*/
*       R6=ADDR(SAVNAM1);           /*                       @ZM41321*/
         LA    R6,SAVNAM1(,SDWAPTR)                                0314
*/*TPMSG MSGID('413I')MSG((R6))PLAREA(SAVPARMS)                      */
*                                                                  0315
*       DO;                                                        0315
*         DCL                                                      0316
*           REG1009 REG(1) PTR;                                    0316
*         RFY                                                      0317
*          (REG1009) RSTD;                                         0317
*         RFY                                                      0318
*          (EMCR13) RSTD;                                          0318
*         DCL                                                      0319
*           1 * BASED(REG1009),                                    0319
*            2 CMZID009 PTR(31),                                   0319
*            2 *,                                                  0319
*             3 CMZRL009 PTR(8),                                   0319
*             3 CMZRA009 PTR(24) BDY(BYTE),                        0319
*            2 CMZEA009 PTR(31),                                   0319
*            2 CMZVP009 PTR(31);                                   0319
*                                                                  0319
*/*XREGSET  PID('PLAREA')PPARM(SAVPARMS)RREG(,REG1009)               */
*                                                                  0320
*         DO;                                                      0320
*           REG1009=ADDR(SAVPARMS); /* SET RREG SYMBOL TO ADDRESS OF
*                                      PPARM OPERAND                 */
         LA    REG1009,SAVPARMS(,SDWAPTR)                          0321
*         END;                      /* XREGSET                       */
*         CMZID009=0;                                              0323
         SLR   @03,@03                                             0323
         ST    @03,CMZID009(,REG1009)                              0323
*         CMZRL009=0;                                              0324
         MVI   CMZRL009(REG1009),X'00'                             0324
*         CMZRA009=0;                                              0325
         STCM  @03,7,CMZRA009(REG1009)                             0325
*         CMZEA009=0;                                              0326
         ST    @03,CMZEA009(,REG1009)                              0326
*         CMZVP009=0;                                              0327
         ST    @03,CMZVP009(,REG1009)                              0327
*         DCL                                                      0328
*           CMZAA009 CHAR(4) INIT('413I');                         0328
*         CMZID009=ADDR(CMZAA009);                                 0329
         LA    @03,CMZAA009                                        0329
         ST    @03,CMZID009(,REG1009)                              0329
*         CMZVP009=R6;                                             0330
         ST    R6,CMZVP009(,REG1009)                               0330
*         DCL                                                      0331
*           CMZSA009(18) PTR(31) BASED(EMCR13);                    0331
*         DCL                                                      0332
*           CMZZO009(1) FIXED(31) INIT(0);                         0332
*         CMZSA009(5)=CMZZO009;                                    0333
         L     @03,CMZZO009                                        0333
         ST    @03,CMZSA009+16(,EMCR13)                            0333
*         DCL                                                      0334
*           REG15009 REG(15) PTR;                                  0334
*         RFY                                                      0335
*           REG15009 RSTD;                                         0335
*         DO;                       /* LISATCVT                    0336
*                                      CVTBASE(PAGEABLE,(REG15009))  */
*           REG15009=ATCLCPTR;      /* SET UP ATCVT POINTER          */
         L     REG15009,ATCLCPTR                                   0337
*         END;                      /* LISATCVT                      */
*         DCL                                                      0339
*           CMTA009 BASED(REG15009) ENTRY VALUERANGE(*);           0339
*         REG15009=REG15009->ATCMSGP;                              0340
         L     REG15009,ATCMSGP(,REG15009)                         0340
*         CALL CMTA009;                                            0341
         BALR  @14,@15                                             0341
*         RESPECIFY                                                0342
*          (REG1009,                                               0342
*           REG15009) UNRESTRICTED;                                0342
*         RFY                                                      0343
*          (EMCR13) UNRSTD;                                        0343
*       END;                        /*                       @ZM41321*/
*       RFY                                                        0345
*        (R6,                                                      0345
*         R13) UNRSTD;              /*                       @OZ04697*/
*     END;                          /*                       @ZM41321*/
*   ELSE                                                           0347
*     DO;                           /* NO SDWA, DO WRITE TO OPERATOR
*                                      NOW                           */
         B     @RC00308                                            0347
@RF00308 DS    0H                                                  0348
*       R1=ADDR(I041900);           /*                       @ZM41321*/
         LA    R1,I041900                                          0348
*/***** IWTO ****                                                    */
*                                                                  0349
*       DO;                                                        0349
*         GEN;                                                     0350
         WTO   MF=(E,(1))
*       END;                        /* IWTO                  @ZM41321*/
*     END;                          /* END SDWA PRESENT      @Z40GKD1*/
*   GEN(MODESET EXTKEY=ZERO);       /* SET KEY ZERO          @ZM30372*/
@RC00308 DS    0H                                                  0353
         MODESET EXTKEY=ZERO
*   R1=ADDR(SDMPLST);               /* POINT TO PARAMS       @ZM33532*/
         LA    R1,SDMPLST                                          0354
*   GEN(SDUMP MF=(E,(1)));          /* SVC DUMP              @ZM33532*/
         SDUMP MF=(E,(1))
*   RFY                                                            0356
*     R1 UNRSTD;                    /*                       @OZ04697*/
*   RFY                                                            0357
*    (GPR07P,                                                      0357
*     GPR05P,                                                      0357
*     GPR12F) RSTD;                 /*                       @Y30APGE*/
*   DO;                             /* LISATCVT                    0358
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*     ATCVTPTR=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0359
*   END;                            /* LISATCVT              @Y30APGE*/
*   GPR07P=ATCVTPTR->ATCAP69;       /* GET ADDR OF ISTAPM69  @Y30APGE*/
         L     GPR07P,ATCAP69(,ATCVTPTR)                           0361
*   GEN REFS(GPR07P,GPR05P,GPR12F);                                0362
*                                                         /* @Y30APGE*/
   SETFRR A,FRRAD=(GPR07P),PARMAD=(GPR05P),WRKREGS=(GPR05P,GPR12F)
*   FRRID=APC61ID;                  /* FILL IN FRR PARM FIELD      0363
*                                                            @Y30APGE*/
         MVC   FRRID(8,GPR05P),@CC03630                            0363
*   RFY                                                            0364
*    (GPR07P,                                                      0364
*     GPR05P,                                                      0364
*     GPR12F) UNRSTD;               /*                       @Y30APGE*/
*                                                                  0364
*   /*****************************************************************/
*   /*                                                               */
*   /* * OBTAIN LOCAL MEMORY LOCK (SETLOCK). REGS=USE PARAMETER      */
*   /* CAUSES REGS 14,15,0,1 TO BE CORRUPTED                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0365
*LOCKSET:                                                          0365
*   GEN;                                                           0365
LOCKSET  DS    0H                                                  0365
   SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,                     X
               RELATED=(ECB,ISTAPC61(LOCKREL))
*   ENTCODE=SAVER0;                 /* RESTORE REG0 AFTER SETFRR & 0366
*                                      SETLOCK               @Z40GKD1*/
         LR    ENTCODE,SAVER0                                      0366
*   RFY                                                            0367
*     SAVER0 UNRSTD;                                               0367
*                                                                  0367
*   /*****************************************************************/
*   /*                                                               */
*   /* * GET ADDR OF VTAM CVT (LISATCVT)                             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0368
*   DO;                             /* LISATCVT                    0368
*                                      CVTBASE(PAGEABLE,(ATCVTPTR))  */
*     ATCVTPTR=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     ATCVTPTR,ATCLCPTR                                   0369
*   END;                            /* LISATCVT                      */
*   IF ENTCODE=SDWAABS THEN         /* IF SDWA ABSENT                */
         C     ENTCODE,@CF02219                                    0371
         BNE   @RF00371                                            0371
*     DO;                                                          0372
*       IF R2^=ZERO                 /* DOES CRA EXIST ?      @ZM32662*/
*         THEN                      /* YES- CRA EXISTS       @ZM32662*/
         LTR   R2,R2                                               0373
         BZ    @RF00373                                            0373
*         DO;                       /* CLEAN IT OR QUE IT    @ZM32662*/
*           CRAPTR=R2;              /* INITIALIZE PTR TO CRA @Z40GKD1*/
         LR    CRAPTR,R2                                           0375
*           APCRRPTR=ADDR(CRAPSS);  /* LOCATE PST VIA APCPSTA        */
         LA    APCRRPTR,CRAPSS(,CRAPTR)                            0376
*           IF TCBPTR=ATCCDTCB      /* IS ABENDING TASK VTAM TASK ?
*                                                            @OZ04697*/
*             THEN                                                 0377
         CLC   TCBPTR(4),ATCCDTCB(ATCVTPTR)                        0377
         BNE   @RF00377                                            0377
*             DO;                   /* YES                   @OZ04697*/
*               CALL PSTCLN;        /* SUBROUTINE FOR PST CLEANUP  0379
*                                                            @OZ04697*/
         BAL   @14,PSTCLN                                          0379
*               ENTCODE=SDWAABS;    /* RESTORE ENTRY CODE    @OZ04697*/
         LA    ENTCODE,12                                          0380
*             END;                  /*                       @OZ04697*/
*           ELSE                                                   0382
*             DO;                   /*                       @OZ04697*/
         B     @RC00377                                            0382
@RF00377 DS    0H                                                  0383
*               RFY                                                0383
*                 ISTDCE BASED(DCEPTR);/*                    @Z40GKD1*/
*               RFY                                                0384
*                 ISTMPST BASED(PSTMPSTP);/*                 @Z40GKD1*/
*               RFY                                                0385
*                 ISTACDEB BASED(DCEDBPTR);/*                @Z40GKD1*/
*               DCEPTR=MPSDBTBL;    /* GET POINTER TO DCE CHAIN    0386
*                                                            @Z40GKD1*/
         L     @06,PSTPTR(,APCRRPTR)                               0386
         L     @06,PSTMPSTP(,@06)                                  0386
         L     DCEPTR,MPSDBTBL(,@06)                               0386
*               RFY                                                0387
*                (GPR03P,                                          0387
*                 GPR04P) RSTD;     /*                       @Z40GKD1*/
*               DO WHILE DCEPTR^=ZERO;/* WHILE THERE ARE DEBS ON THE
*                                      CHAIN                 @Z40GKD1*/
         B     @DE00388                                            0388
@DL00388 DS    0H                                                  0389
*                 IF ACDTSKID^=PSTPTR/* IF DEB NOT ASSOCIATED WITH 0389
*                                      ABENDING TASK         @Z40GKD1*/
*                   THEN                                           0389
         L     @06,DCEDBPTR(,DCEPTR)                               0389
         CLC   ACDTSKID(4,@06),PSTPTR(APCRRPTR)                    0389
         BNE   @RT00389                                            0389
*                   ;               /* THEN IGNORE IT        @Z40GKD1*/
*                 ELSE                                             0391
*                   DO;             /* ELSE FLAG DEB AS BELONGING TO
*                                      ABENDING TASK         @Z40GKD1*/
*                     GPR03P=ACDSSFLG(1:4);/* ACDEB FLAGS    @Z40GKD1*/
         L     @06,DCEDBPTR(,DCEPTR)                               0392
         ICM   GPR03P,15,ACDSSFLG(@06)                             0392
*SETABND:                                                          0393
*                     GPR04P=GPR03P×'40000000'X;/* TURN ON ACDABEND
*                                                            @Z40GKD1*/
SETABND  LR    GPR04P,GPR03P                                       0393
         O     GPR04P,@CF01895                                     0393
*                     CS(GPR03P,GPR04P,ACDSSFLG(1:4));/* TEST IF ON
*                                                            @Z40GKD1*/
         L     @06,DCEDBPTR(,DCEPTR)                               0394
         CS    GPR03P,@04,ACDSSFLG(@06)                            0394
*                     BC(4,SETABND);/* RETRY IF FAIL         @Z40GKD1*/
         BC    4,SETABND                                           0395
*                   END;            /* END DEB TASK ABENDING @Z40GKD1*/
*                 DCEPTR=DCECHN;    /* EITHER WAY, NOW EXAMINE NEXT
*                                      DCE                   @Z40GKD1*/
@RT00389 L     DCEPTR,DCECHN(,DCEPTR)                              0397
*               END;                /* END DO WHILE          @Z40GKD1*/
@DE00388 LTR   DCEPTR,DCEPTR                                       0398
         BNZ   @DL00388                                            0398
*/*  SET ABEND IN PROCESS FLAG IN PST                                */
*                                                                  0399
*               GPR03P=PSTFLGA;     /* COMPARE REG FOR CS    @ZM32232*/
         L     @06,PSTPTR(,APCRRPTR)                               0399
         L     GPR03P,PSTFLGA(,@06)                                0399
*ABINP1:                                                           0400
*               GPR04P=GPR03P×PSTABIP1;/* SWAP PSTABINP BIT ON     0400
*                                                            @ZM32232*/
ABINP1   LR    GPR04P,GPR03P                                       0400
         O     GPR04P,@CF01934                                     0400
*               GPR04P=GPR04P×PSTDMPC1;/* IND DUMP TAKEN     @ZM33532*/
         O     GPR04P,@CF03279                                     0401
*               CS(GPR03P,GPR04P,PSTFLGA);/* USE CS LOGIC    @ZM32232*/
         L     @06,PSTPTR(,APCRRPTR)                               0402
         CS    GPR03P,@04,PSTFLGA(@06)                             0402
*               BC(7,ABINP1);       /* TRY AGAIN IF IT FAILS @ZM32232*/
         BC    7,ABINP1                                            0403
*               RFY                                                0404
*                (GPR03P,                                          0404
*                 GPR04P) UNRSTD;   /* RELEASE REGS          @ZM32232*/
*             END;                  /* END OF TCB NOT VTAM'S @Z40KGK1*/
*         END;                      /* END OF CLEAN IT OR QUE IT   0406
*                                                            @ZM32662*/
*       ELSE                        /* ELSE NO CRA EXISTS    @OZ04697*/
*         DO;                                                      0407
         B     @RC00373                                            0407
@RF00373 DS    0H                                                  0408
*           IF TCBPTR=ATCCDTCB      /* IF VTAM TASK ABEND    @OZ04697*/
*             THEN                                                 0408
         CLC   TCBPTR(4),ATCCDTCB(ATCVTPTR)                        0408
         BNE   @RF00408                                            0408
*             ATCVTMAB=ON;          /* THEN SET INDICATOR TO SHOW IT
*                                                            @OZ04697*/
         L     @06,ATCVTMAB-3(,ATCVTPTR)                           0409
@GL00002 LR    @04,@06                                             0409
         O     @04,@CF03785                                        0409
         CS    @06,@04,ATCVTMAB-3(ATCVTPTR)                        0409
         BNE   @GL00002                                            0409
*           ELSE                                                   0410
*             ;                     /* NOT VTAM ABEND, DO NOTHING  0410
*                                                            @OZ04697*/
@RF00408 DS    0H                                                  0411
*         END;                      /* END NO CRA            @OZ04697*/
*     END;                          /* END OF SDWA ABSENT            */
*   ELSE                                                           0413
*     DO;                                                          0413
         B     @RC00371                                            0413
@RF00371 DS    0H                                                  0414
*       CRAPTR=SDWAPARM;            /* LOCATE PST VIA SDWA           */
         L     CRAPTR,SDWAPARM(,SDWAPTR)                           0414
*       IF CRAPTR^=ZERO             /* DOES CRA EXIST ?      @ZM32662*/
*         THEN                                                     0415
         SLR   @06,@06                                             0415
         CR    CRAPTR,@06                                          0415
         BE    @RF00415                                            0415
*         DO;                       /* CLEAN IT OR QUE IT AND RECORD
*                                      IT                    @ZM32662*/
*/*  CHECK IF PI IN ISTORFBA OR ISTORFBD--IF SO,RECORD THE ACTIVE  0417
*    RPH AT TIME OF ERROR AND RETRY AT SMS CALLERS RETURN ADDRESS  0417
*                                                      @ZM33611      */
*                                                                  0417
*           IF FBABASE=ATCSMRQ+'18'X/* IF R10=FBA BASE REG   @ZM33611*/
*             THEN                                                 0417
         LA    @04,24                                              0417
         AL    @04,ATCSMRQ(,ATCVTPTR)                              0417
         L     @03,FBABASE-1(,SDWAPTR)                             0417
         LA    @03,0(,@03)                                         0417
         CR    @04,@03                                             0417
         BNE   @RF00417                                            0417
*             DO;                   /*                       @ZM33611*/
*               SDWAMODN=FBAID;     /* ERROR MODULE          @ZM33611*/
         MVC   SDWAMODN(8,SDWAPTR),@CC03640                        0419
*               SDWAGR10=0;         /* ZERO OUT FBAS BASE    @ZM33611*/
         ST    @06,SDWAGR10(,SDWAPTR)                              0420
*               SDWASR15=24;        /* RETRY REG 15=RC       @ZM33611*/
         MVC   SDWASR15(4,SDWAPTR),@CF00070                        0421
*               GO TO SMSETRP;      /* GO RECORD ERROR       @ZM33611*/
         B     SMSETRP                                             0422
*             END;                  /*                       @ZM33611*/
*           IF FBDBASE=ATCSMRS+'18'X/* IS R9=FDB BASE REG?   @ZM33611*/
*             THEN                                                 0424
@RF00417 LA    @06,24                                              0424
         AL    @06,ATCSMRS(,ATCVTPTR)                              0424
         L     @04,FBDBASE-1(,SDWAPTR)                             0424
         LA    @04,0(,@04)                                         0424
         CR    @06,@04                                             0424
         BNE   @RF00424                                            0424
*             DO;                   /*                       @ZM33611*/
*               SDWAMODN=FBDID;     /* ERROR MODULE ID       @ZM33611*/
         MVC   SDWAMODN(8,SDWAPTR),@CC03642                        0426
*               SDWAGR09=0;         /* ZERO OUT FBDS BASE    @ZM33611*/
         SLR   @06,@06                                             0427
         ST    @06,SDWAGR09(,SDWAPTR)                              0427
*               SDWASR15='4'X;      /* RETRY REG 15=RC       @ZM33611*/
         LA    @06,4                                               0428
         ST    @06,SDWASR15(,SDWAPTR)                              0428
*SMSETRP:                                                          0429
*               R1=ADDR(CRARPH);    /* GET @ OF ACTIVE RPH   @ZM33611*/
SMSETRP  LA    R1,CRARPH(,CRAPTR)                                  0429
*               SDWASRSV(1:60)=SDWAGRSV(1:60);/* RETRY REGS 0-14 AT
*                                      TIME OF ERROR         @ZM33611*/
         MVC   SDWASRSV(60,SDWAPTR),SDWAGRSV(SDWAPTR)              0430
*               SDWAVRA(1:108)=R1->ISTRPH(1:108);/* VARIABLE DATA =
*                                      ACTIVE RPH            @ZM33611*/
         MVC   SDWAVRA(108,SDWAPTR),ISTRPH(R1)                     0431
*               SDWAURAL=108;       /* SET LENGTH OF VARIABLE DATA 0432
*                                                            @ZM33611*/
         MVI   SDWAURAL(SDWAPTR),X'6C'                             0432
*               SDWAHEX=ON;         /* RECORD IN HEX         @ZM33611*/
         OI    SDWAHEX(SDWAPTR),B'10000000'                        0433
*               SDWAREXN=FRRID;     /* ID FRR IN SDWA        @ZM33611*/
         MVC   SDWAREXN(8,SDWAPTR),FRRID(GPR05P)                   0434
*               R1=SDWAPTR;         /* SET SDWA ADDR IN R1   @ZM33611*/
         LR    R1,SDWAPTR                                          0435
*               DO;                 /* SETRP RETADDR(SMSRTY)RC(SDWARE
*                                      TY)RECORD(YES)RETREGS(YES)FRES
*                                      DWA(YES)                      */
*                 RESPECIFY                                        0437
*                  (GPR00P,                                        0437
*                   GPR01P,                                        0437
*                   GPR14P,                                        0437
*                   GPR15P) RSTD;                                  0437
*                 GPR01P->SDWARCDE=SDWARETY;/* STORE RC INTO SDWA    */
         MVI   SDWARCDE(GPR01P),X'04'                              0438
*                 GPR01P->SDWARTYA=ADDR(SMSRTY);/* SAVE RETRY ADDRESS*/
         L     @06,SDWAGR14(,SDWAPTR)                              0439
         ST    @06,SDWARTYA(,GPR01P)                               0439
*                 GPR01P->SDWAFREE='1'B;/* SET FLAG TO FREE SDWA     */
*                 GPR01P->SDWARCRD='1'B;/* TURN ON RECORD INDICATOR  */
*                 GPR01P->SDWAUPRG='1'B;/* TURN ON RETREGS INDICATOR */
         OI    SDWAFREE(GPR01P),B'10001100'                        0442
*                 RESPECIFY                                        0443
*                  (GPR00P,                                        0443
*                   GPR01P,                                        0443
*                   GPR14P,                                        0443
*                   GPR15P) UNRSTD;                                0443
*               END;                /*                       @ZA17020*/
*             END;                  /*                       @ZM33611*/
*           ELSE                                                   0446
*             DO;                   /* ERROR NOT IN SMS      @Z40GKD1*/
         B     @RC00424                                            0446
@RF00424 DS    0H                                                  0447
*               APCRRPTR=ADDR(CRAPSS);/* PSS RECOVERY RECORD         */
         LA    APCRRPTR,CRAPSS(,CRAPTR)                            0447
*               SDWAURAL=LNAVRAL;   /* SET LENGTH OF VAR RECORDING 0448
*                                      AREA                          */
         MVI   SDWAURAL(SDWAPTR),X'64'                             0448
*               SDWAREXN=APC61ID;   /* SET ID OF ISTAPC61 INTO SDWA
*                                                            @Z30APGE*/
         MVC   SDWAREXN(8,SDWAPTR),@CC03630                        0449
*               SDWAHEX=ON;         /* SET RECORD IN HEX BIT @Z30APGE*/
         OI    SDWAHEX(SDWAPTR),B'10000000'                        0450
*               SDWAVRA(1:4)=CRRDEFD;/* COPY DATA TO BE RECORDED     */
         MVC   SDWAVRA(4,SDWAPTR),CRRDEFD(CRAPTR)                  0451
*               SDWAVRA(5:40)=LOCKS(1:36);/* COPY DATA TO BE RECORDED*/
         MVC   SDWAVRA+4(36,SDWAPTR),LOCKS(CRAPTR)                 0452
*               SDWAVRA(41:60)=CRAPSS(1:20);/* COPY DATA TO BE     0453
*                                      RECORDED                      */
         MVC   SDWAVRA+40(20,SDWAPTR),CRAPSS(CRAPTR)               0453
*               SDWAVRA(61:80)=CRAPROCR(1:20);/* COPY DATA TO BE   0454
*                                      RECORDED                      */
         MVC   SDWAVRA+60(20,SDWAPTR),CRAPROCR(CRAPTR)             0454
*               SDWAVRA(81:100)=CRASVC(1:20);/* COPY DATA TO BE    0455
*                                      RECORDED                      */
         MVC   SDWAVRA+80(20,SDWAPTR),CRASVC(CRAPTR)               0455
*               IF TCBPTR=ATCCDTCB  /* IS ABENDING TASK VTAM TASK? 0456
*                                                            @OZ04697*/
*                 THEN                                             0456
         CLC   TCBPTR(4),ATCCDTCB(ATCVTPTR)                        0456
         BNE   @RF00456                                            0456
*                 DO;               /* YES                   @OZ04697*/
*                   SDWAPTR=SAVER13;/* PROTECT PTR TO SAVEAREA     0458
*                                                            @OZ04697*/
         LR    SDWAPTR,SAVER13                                     0458
*                   CALL PSTCLN;    /* SUBROUTINE TO PERFORM PST   0459
*                                      CLEANUP               @OZ04697*/
         BAL   @14,PSTCLN                                          0459
*                   SAVER13=SDWAPTR;/* RESTORE SAVEAREA PTR  @OZ04697*/
         LR    SAVER13,SDWAPTR                                     0460
*                   SDWAPTR=STDSV1; /* RESTORE SDWA PTR FROM SAVEAREA
*                                                            @OZ04697*/
         L     SDWAPTR,STDSV1(,SAVER13)                            0461
*                 END;              /*                       @OZ04697*/
*               ELSE                /*                       @Z40KGK1*/
*                 DO;               /*                       @Z40KGK1*/
         B     @RC00456                                            0463
@RF00456 DS    0H                                                  0464
*                   DCEPTR=MPSDBTBL;/* GET POINTER TO DCE CHAIN    0464
*                                                            @Z40GKD1*/
         L     @06,PSTPTR(,APCRRPTR)                               0464
         L     @06,PSTMPSTP(,@06)                                  0464
         L     DCEPTR,MPSDBTBL(,@06)                               0464
*                   RFY                                            0465
*                    (GPR03P,                                      0465
*                     GPR04P) RSTD; /*                       @Z40GKD1*/
*                   DO WHILE DCEPTR^=ZERO;/* WHILE THERE ARE DEBS ON
*                                      THE CHAIN             @ZM41320*/
         B     @DE00466                                            0466
@DL00466 DS    0H                                                  0467
*                     IF ACDTSKID^=PSTPTR/* IF DEB NOT ASSOCIATED  0467
*                                      WITH ABENDING TASK    @Z40GKD1*/
*                       THEN                                       0467
         L     @06,DCEDBPTR(,DCEPTR)                               0467
         CLC   ACDTSKID(4,@06),PSTPTR(APCRRPTR)                    0467
         BNE   @RT00467                                            0467
*                       ;           /* THEN IGNORE IT        @Z40GKD1*/
*                     ELSE                                         0469
*                       DO;         /* ELSE FLAG DEB AS BELONGING TO
*                                      ABENDING TASK         @Z40GKD1*/
*                         GPR03P=ACDSSFLG(1:4);/* ACDEB FLAGS      0470
*                                                            @Z40GKD1*/
         L     @06,DCEDBPTR(,DCEPTR)                               0470
         ICM   GPR03P,15,ACDSSFLG(@06)                             0470
*SETAB:                                                            0471
*                         GPR04P=GPR03P×'40000000'X;/* TURN ON     0471
*                                      ACDABEND              @Z40GKD1*/
SETAB    LR    GPR04P,GPR03P                                       0471
         O     GPR04P,@CF01895                                     0471
*                         CS(GPR03P,GPR04P,ACDSSFLG(1:4));/* TEST IF
*                                      ON                    @Z40GKD1*/
         L     @06,DCEDBPTR(,DCEPTR)                               0472
         CS    GPR03P,@04,ACDSSFLG(@06)                            0472
*                         BC(4,SETAB);/* RETRY IF FAIL       @Z40GKD1*/
         BC    4,SETAB                                             0473
*                       END;        /* END DEB TASK ABENDING @Z40GKD1*/
*                     DCEPTR=DCECHN;/* EITHER WAY, NOW EXAMINE NEXT
*                                      DCE                   @Z40GKD1*/
@RT00467 L     DCEPTR,DCECHN(,DCEPTR)                              0475
*                   END;            /* END DO WHILE          @Z40GKD1*/
@DE00466 LTR   DCEPTR,DCEPTR                                       0476
         BNZ   @DL00466                                            0476
*/*  SET ABEND IN PROCESS FLAG IN PST                                */
*                                                                  0477
*                   GPR03P=PSTFLGA; /* COMPARE REG FOR CS    @ZM32232*/
         L     @06,PSTPTR(,APCRRPTR)                               0477
         L     GPR03P,PSTFLGA(,@06)                                0477
*ABINP2:                                                           0478
*                   GPR04P=GPR03P×PSTABIP1;/* SWAP PSTABINP ON     0478
*                                                            @ZM32232*/
ABINP2   LR    GPR04P,GPR03P                                       0478
         O     GPR04P,@CF01934                                     0478
*                   GPR04P=GPR04P×PSTDMPC1;/* IND DUMP TAKEN @ZM33532*/
         O     GPR04P,@CF03279                                     0479
*                   CS(GPR03P,GPR04P,PSTFLGA);/* USE CS LOGIC      0480
*                                                            @ZM32232*/
         L     @06,PSTPTR(,APCRRPTR)                               0480
         CS    GPR03P,@04,PSTFLGA(@06)                             0480
*                   BC(7,ABINP2);   /* IF FAIL TRY AGAIN     @ZM32232*/
         BC    7,ABINP2                                            0481
*                   RFY                                            0482
*                    (GPR03P,                                      0482
*                     GPR04P) UNRSTD;/* RELEASE CS REGS      @ZM32232*/
*                 END;              /* END OF NOT VTAM ABEND @OZ04691*/
*             END;                  /* END OF NOT SMS ERROR  @Z40GKD1*/
*         END;                      /* END OF CRA EXISTS     @ZM32662*/
*       ELSE                                                       0486
*         DO;                       /* NO CRA EXISTS         @ZM32662*/
         B     @RC00415                                            0486
@RF00415 DS    0H                                                  0487
*           IF TCBPTR=ATCCDTCB      /* IF VTAM TASK ABEND    @OZ04697*/
*             THEN                                                 0487
         CLC   TCBPTR(4),ATCCDTCB(ATCVTPTR)                        0487
         BNE   @RF00487                                            0487
*             ATCVTMAB=ON;          /* NO CLEANUP BUT TURN ON FLAG 0488
*                                                            @OZ04697*/
         L     @06,ATCVTMAB-3(,ATCVTPTR)                           0488
@GL00003 LR    @04,@06                                             0488
         O     @04,@CF03785                                        0488
         CS    @06,@04,ATCVTMAB-3(ATCVTPTR)                        0488
         BNE   @GL00003                                            0488
*           ELSE                                                   0489
*             ;                     /* ELSE NOT VTAM TASK ABEND    0489
*                                                            @OZ04697*/
@RF00487 DS    0H                                                  0490
*           SDWAVRA(1:16)=NOCRA;    /* RECORD FACT OF NO CRA @ZM32662*/
         MVC   SDWAVRA(16,SDWAPTR),@CC03636                        0490
*           SDWAURAL=LENGTH(NOCRA); /* LENGTH OF MSG         @ZM32662*/
         MVI   SDWAURAL(SDWAPTR),X'10'                             0491
*           SDWAREXN=APC61ID;       /* IDENTIFY RECORDER     @ZM32662*/
         MVC   SDWAREXN(8,SDWAPTR),@CC03630                        0492
*           SDWAEBC=ON;             /* EBCIDIC MSG           @ZM32662*/
         OI    SDWAEBC(SDWAPTR),B'01000000'                        0493
*         END;                      /* END NO CRA VIA SDWA   @ZM32662*/
*                                                                  0494
*       /*************************************************************/
*       /*                                                           */
*       /* * RECORD DATA, CONTINUE TERMINATION (SETRP)               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0495
*       R1=SDWAPTR;                 /* RESTORE REG 1 PRIOR TO SETRP
*                                                            @Z30APGE*/
@RC00415 LR    R1,SDWAPTR                                          0495
*       DO;                         /* SETRP RECORD(YES)RC(0)        */
*         RESPECIFY                                                0497
*          (GPR00P,                                                0497
*           GPR01P,                                                0497
*           GPR14P,                                                0497
*           GPR15P) RSTD;                                          0497
*         GPR01P->SDWARCDE=0;       /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0498
*         GPR01P->SDWARCRD='1'B;    /* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0499
*         RESPECIFY                                                0500
*          (GPR00P,                                                0500
*           GPR01P,                                                0500
*           GPR14P,                                                0500
*           GPR15P) UNRSTD;                                        0500
*       END;                                                       0501
*     END;                          /* END OF SDWA EXISTS    @Z40GKD1*/
*                                                                  0502
*   /*****************************************************************/
*   /*                                                               */
*   /* * RELEASE LOCAL LOCK (SETLOCK)                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0503
*LOCKREL:                                                          0503
*   ;                                                              0503
@RC00371 DS    0H                                                  0503
LOCKREL  DS    0H                                                  0504
*   RFY                                                            0504
*    (SAVER11) RSTD;                /* RESTRICT BASE REG     @ZM32046*/
*   SAVER11=R11;                    /* SAVE BASE REG 11 ACROSS     0505
*                                      SETLOCK               @ZM32046*/
         LR    SAVER11,R11                                         0505
*   DO;                             /* SETLOCK (RELEASE) TYPE(LOCAL)
*                                      RELATED(ECB,ISTAPC61(LOCKSET))*/
*     RFY                                                          0507
*      (GPR11P,                                                    0507
*       GPR12P,                                                    0507
*       GPR13P,                                                    0507
*       GPR14P) RSTD;                                              0507
*     GPR13P=PSALITA;               /* ADDRESS OF LOCK INTERFACE   0508
*                                      TABLE.                        */
         L     GPR13P,PSALITA                                      0508
*     GEN(LM GPR11P,GPR13P,588(GPR13P));/* LOAD LOCKWORD, CLHT AND 0509
*                                      ENTRY ADRS.                   */
         LM GPR11P,GPR13P,588(GPR13P)
*     GEN(BALR GPR14P,GPR13P);      /* BALR TO SETLOCK RTN.          */
         BALR GPR14P,GPR13P
*     RFY                                                          0511
*      (GPR11P,                                                    0511
*       GPR12P,                                                    0511
*       GPR13P,                                                    0511
*       GPR14P) UNRSTD;                                            0511
*   END;                            /* SETLOCK (RELEASE) TYPE(LOCAL)
*                                      RELATED(ECB,ISTAPC61(LOCKSET))*/
*   R11=SAVER11;                    /* RESTORE BASE REG      @ZM32046*/
*                                                                  0513
         LR    R11,SAVER11                                         0513
*   /*****************************************************************/
*   /*                                                               */
*   /* * DELETE ISTAPM69 FROM FRR STACK                      @ZM32046*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0514
*   GEN REFS(GPR03P,GPR04P,PSACSTK,PSA,FRRSCURR,FRRS,FRRSEMP,FRRSELEN)
*       SETS(GPR03P,GPR04P,FRRSCURR);                              0514
*                                                                  0514
*                                   /*DELETE ISTAPM69         @ZM32046*
  SETFRR D,WRKREGS=(GPR03P,GPR04P)
*   /*****************************************************************/
*   /*                                                               */
*   /* SETLOCK DESTROYED REGS 11-14                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0515
*   IF ENTCODE=SDWAABS              /* IF THERE HAD BEEN NO SDWA   0515
*                                                            @OZ04697*/
*     THEN                                                         0515
         C     ENTCODE,@CF02219                                    0515
         BNE   @RF00515                                            0515
*     DO;                           /* THEN RESTORE RETURN ADDRESS 0516
*                                                            @OZ04697*/
*       RFY                                                        0517
*         R14 RSTD;                                                0517
*       R14=SAVER14;                /* RESTORE REG 14 FOR RETURN     */
         LR    R14,SAVER14                                         0518
*     END;                          /* END NO SDWA           @OZ04697*/
*   ELSE                                                           0520
*     DO;                           /* ELSE SDWA SAVE AREA WAS USED
*                                                            @OZ04697*/
         B     @RC00515                                            0520
@RF00515 DS    0H                                                  0521
*       RFY                                                        0521
*         STDSAVE BASED(R13);       /*                       @OZ04697*/
*       RFY                                                        0522
*        (R13,                                                     0522
*         R14,                                                     0522
*         R12) RSTD;                /*                       @OZ04697*/
*       R13=SAVER13;                /* RESTORE ORIGINAL PTR TO     0523
*                                      SAVEAREA              @OZ04697*/
         LR    R13,SAVER13                                         0523
*       LM(R14,R12,SVSTRT);         /* RESTORE INPUT REGS    @OZ04697*/
         LM    R14,R12,SVSTRT(R13)                                 0524
*       RFY                                                        0525
*        (R13,                                                     0525
*         R12) UNRSTD;              /*                       @OZ04697*/
*     END;                          /* END SAVE AREA WAS USED      0526
*                                                            @OZ04697*/
*   RFY                                                            0527
*     R15 RSTD;                                                    0527
@RC00515 DS    0H                                                  0528
*   R15=0;                          /* SET RETURN CODE       @Z40GKD1*/
         SLR   R15,R15                                             0528
*   RFY                                                            0529
*    (ENTCODE,                                                     0529
*     GPR13P,                                                      0529
*     GPR03P,                                                      0529
*     R1,                                                          0529
*     R2) UNRSTD;                   /*                       @OZ04697*/
*PSTCLN:                                                           0530
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0530
*                                                                  0530
         B     @PB00002                                            0530
PSTCLN   DS    0H                                                  0531
*/*******************************************************************
*   THIS SUBROUTINE IS WRITTEN IN SUPPORT OF APAR OZ04697.  IT IS  0531
* * CALLED WHEN THE PROCESS WHICH ABENDED IS THE VTAM TASK ITSELF, 0531
* * PROVIDED THAT A CRA IS AVAILABLE AND THE ERROR DID NOT OCCUR IN
* * SMS (IN WHICH CASE A RETRY WILL BE ATTEMPTED).  THE PURPOSE OF 0531
* * THE SUBROUTINE IS TO CLEAN UP RESOURCES ASSOCIATED WITH THE    0531
* * PROCESS WHICH ABENDED, SO THAT PROCESSES NECESSARY FOR THE     0531
* * ORDERLY TERMINATION OF VTAM WILL BE DISPATCHABLE.              0531
* *                                                                0531
* * ON INPUT, REGISTER 7 POINTS TO THE PSS RECOVERY  RECORD        0531
* *           REGISTER 9 HOLDS THE SYSTEM RETURN ADDR              0531
* *           REGISTER 10 POINTS TO SAVE AREA IF SDWA WAS PROVIDED 0531
* *           REGISTER 11 IS THE BASE REGISTER                     0531
* *           REGISTER 12 POINTS TO THE CRA                        0531
* *           REGISTER 14 IS THE RETURN ADDR FOR THE SUBROUTINE CALL
* *                                                                0531
* *  REGISTERS 9,10,11, AND 14 WILL BE RETURNED INTACT. THE VALUE  0531
* *  OF ALL OTHER REGISTERS IS UNPREDICTABLE.  THE CRA ASSOCIATED  0531
* *  WITH THE ABENDING TASK WILL BE MARKED PURGE COMPLETE IF IT IS 0531
* *  TPWAITING.  IF ALREADY TPPOSTED, THE CRA WILL BE RELSTORED    0531
* *****************************************************************  */
*                                                                  0531
*   /*****************************************************************/
*   /*                                                               */
*   /* REGISTER DECLARES FOR PSTCLN                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0531
*   DCL                                                            0531
*     SUBR0 PTR(31) REG(0);         /* WORK REG FOR LOCK RELEASE LOOP*/
*   DCL                                                            0532
*     SUBRPHP PTR(31) REG(1);       /* PTR TO CRARPH                 */
*   DCL                                                            0533
*     SUBCOMP PTR(31) REG(2);       /* CS COMPARE REG                */
*   DCL                                                            0534
*     SUBWK3 PTR(31) REG(3);        /* WK REG FOR RECOVERY DYPAB   0534
*                                      INIT.                         */
*   DCL                                                            0535
*     SUBCODD PTR(31) REG(3);       /* CDS ODD COMPARE REG           */
*   DCL                                                            0536
*     SUBBACK PTR(31) REG(3);       /* BACK POINTER FOR RPHPABQ    0536
*                                      SEARCH                        */
*   DCL                                                            0537
*     SUBWK4 PTR(31) REG(4);        /* WK REG FOR RECOVERY DYPAB   0537
*                                      INIT.                         */
*   DCL                                                            0538
*     SUBSWAP PTR(31) REG(4);       /* CS SWAP REGISTER              */
*   DCL                                                            0539
*     SUBSODD PTR(31) REG(5);       /* CDS ODD SWAP REG              */
*   DCL                                                            0540
*     SUBPAB32 PTR(31) REG(5);      /* INPUT PARAM FOR ISTAPC32 CALL */
*   DCL                                                            0541
*     SUBAPC PTR(31) REG(7) RSTD;   /* PTR TO PSS RECOVERY RECORD    */
*   DCL                                                            0542
*     SUBATCVT PTR(31) REG(8);      /* ATCVT PTR                     */
*   DCL                                                            0543
*     SUBPABP PTR(31) REG(8);       /* PTR TO CURRENT PAB            */
*   DCL                                                            0544
*     SUBCRA PTR(31) REG(12) RSTD;  /* PTR TO CRA                    */
*   DCL                                                            0545
*     SUBPSTP PTR(31) REG(12);      /* SAVE PST@ OVER CALL TO APC64  */
*   DCL                                                            0546
*     SUBSAV14 PTR(31) REG(13) RSTD;/* SAVE RETURN ADDRESS           */
*   DCL                                                            0547
*     SUBR14 PTR(31) REG(14);       /* SUBRTN CALL RETURN ADDR       */
*   DCL                                                            0548
*     SUBCALLR PTR(31) REG(15);     /* ENTRY PT ADDR FOR CALLS       */
*                                                                  0548
*   /*****************************************************************/
*   /*                                                               */
*   /* RESPECIFIES FOR PSTCLN                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0549
*   RFY                                                            0549
*     ISTAPCRR BASED(SUBAPC);                                      0549
*   RFY                                                            0550
*     ISTPST BASED(APCPSTA);                                       0550
*   RFY                                                            0551
*     ISTRPH BASED(SUBRPHP);                                       0551
*   RFY                                                            0552
*     ISTPAB BASED(SUBPABP);                                       0552
*   RFY                                                            0553
*     ISTCRA BASED(SUBCRA);                                        0553
*                                                                  0553
*   /*****************************************************************/
*   /*                                                               */
*   /* CONSTANTS FOR PSTCLN                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0554
*   DCL                                                            0554
*     SUBPGON BIT(32) CONSTANT('00000010'X);/* TURN RPHPURGE ON      */
*   DCL                                                            0555
*     SUBON BIT(1) CONSTANT('1'B);  /* TURN A BIT ON                 */
*   DCL                                                            0556
*     SUBOFF BIT(1) CONSTANT('0'B); /* TURN A BIT OFF                */
*                                                                  0556
*   /*****************************************************************/
*   /*                                                               */
*   /* BASED VARIABLES                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0557
*   DCL                                                            0557
*     ISTAPC64 ENTRY BASED(SUBCALLR) VALRG(0);                     0557
*   DCL                                                            0558
*     ISTAPC41 ENTRY BASED(SUBCALLR) VALRG(0);                     0558
*   DCL                                                            0559
*     ISTAPC32 ENTRY BASED(SUBCALLR) VALRG(0);                     0559
*   DCL                                                            0560
*     RCOVPAB CHAR(LENGTH(ISTDYPAB)) DEFINED(CRAPROCR);            0560
*                                                                  0561
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF CODE                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0561
*   RFY                                                            0561
*    (SUBATCVT,                                                    0561
*     SUBRPHP) RSTD;                                               0561
*   SUBSAV14=SUBR14;                /* SAVE RETURN ADDRESS           */
         LR    SUBSAV14,SUBR14                                     0562
*   DO;                             /* LISATCVT                    0563
*                                      CVTBASE(PAGEABLE,(SUBATCVT))  */
*     SUBATCVT=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     SUBATCVT,ATCLCPTR                                   0564
*   END;                            /* LISATCVT GET ATCVT ADDRESS    */
*   SUBATCVT->ATCVTMAB=SUBON;       /* VTAM ABENDING FLAG ON         */
         L     @06,ATCVTMAB-3(,SUBATCVT)                           0566
@GL00004 LR    @04,@06                                             0566
         O     @04,@CF03785                                        0566
         CS    @06,@04,ATCVTMAB-3(SUBATCVT)                        0566
         BNE   @GL00004                                            0566
*   RFY                                                            0567
*     SUBATCVT UNRSTD;                                             0567
*   SUBRPHP=ADDR(CRARPH);           /* PICK UP PTR TO CRA'S RPH      */
         LA    SUBRPHP,CRARPH(,SUBCRA)                             0568
*   RPHPURGE=SUBON;                 /* MARK PURGE IN PROGRESS IN RPH */
         OI    RPHPURGE(SUBRPHP),B'00000010'                       0569
*   RFY                                                            0570
*    (SUBCOMP,                                                     0570
*     SUBSWAP) RSTD;                                               0570
*                                                                  0570
*   /*****************************************************************/
*   /*                                                               */
*   /* GATE THE PST READY QUEUE TO PREVENT FURTHER USE AT THIS TIME  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0571
*   SUBCOMP=PSTRQUE;                /* READY Q PTR                   */
         L     @06,APCPSTA(,SUBAPC)                                0571
         L     SUBCOMP,PSTRQUE(,@06)                               0571
*SUB02:                                                            0572
*   SUBSWAP=SUBCOMP×PSTGATE1;       /* TURN GATE BIT ON FOR SWAP     */
SUB02    LR    SUBSWAP,SUBCOMP                                     0572
         O     SUBSWAP,@CF01889                                    0572
*   CS(SUBCOMP,SUBSWAP,PSTRQUE);    /* TURN IT ON IN PST             */
         L     @06,APCPSTA(,SUBAPC)                                0573
         CS    SUBCOMP,@04,PSTRQUE(@06)                            0573
*   BC(7,SUB02);                    /* IF FAIL, RETRY                */
*                                                                  0574
         BC    7,SUB02                                             0574
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A PAB EXISTS, TRY TO RESCHEDULE IT                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0575
*   RFY                                                            0575
*     SUBPABP RSTD;                                                0575
*   SUBPABP=RPHMAJCB+RPHPABOF;      /* ADDR OF CURRENT PAB FROM RPH  */
         L     SUBPABP,RPHMAJCB-1(,SUBRPHP)                        0576
         LA    SUBPABP,0(,SUBPABP)                                 0576
         SLR   @06,@06                                             0576
         IC    @06,RPHPABOF(,SUBRPHP)                              0576
         ALR   SUBPABP,@06                                         0576
*   RFY                                                            0577
*    (SUBCODD,                                                     0577
*     SUBSODD) RSTD;                                               0577
*   IF SUBPABP^=0                   /* IF THERE IS A PAB             */
*     THEN                                                         0578
         LTR   SUBPABP,SUBPABP                                     0578
         BZ    @RF00578                                            0578
*     DO;                           /* YES, THERE IS A PAB           */
*       IF(CRACRR^=ADDR(CRAPSS))×   /* IF PSS NOT IN CONTROL         */
*           ((APC31R=SUBON)&(APCRESCH=SUBOFF))×/* OR APC31 WAS     0580
*                                      RUNNING BUT RESCHED NOT YET 0580
*                                      DONE                          */
*           ((APC31R=SUBOFF)&(PABRPHA=SUBRPHP))/* OR APC31 WAS NOT 0580
*                                      RUNNING BUT PAB NOT YET MOVED
*                                      TO RPHPABQ                    */
*         THEN                                                     0580
         LA    @06,CRAPSS(,SUBCRA)                                 0580
         C     @06,CRACRR(,SUBCRA)                                 0580
         BNE   @RT00580                                            0580
         TM    APC31R(SUBAPC),B'00000001'                          0580
         BNO   @GL00005                                            0580
         TM    APCRESCH(SUBAPC),B'01000000'                        0580
         BZ    @RT00580                                            0580
@GL00005 TM    APC31R(SUBAPC),B'00000001'                          0580
         BNZ   @RF00580                                            0580
         L     @06,PABRPHA-1(,SUBPABP)                             0580
         LA    @06,0(,@06)                                         0580
         CR    SUBRPHP,@06                                         0580
         BNE   @RF00580                                            0580
@RT00580 DS    0H                                                  0581
*         DO;                       /* THEN TRY TO RESCHEDULE        */
*           SUBCOMP=PABCHAIN;       /* OBTAIN RESCHEDULE FLAG-WORD   */
         L     SUBCOMP,PABCHAIN(,SUBPABP)                          0582
*SUB01:                                                            0583
*           SUBSWAP=SUBCOMP&PABRESC0;/* TURN OF PABRESCH IN REG      */
SUB01    LR    SUBSWAP,SUBCOMP                                     0583
         N     SUBSWAP,@CF01893                                    0583
*           CS(SUBCOMP,SUBSWAP,PABCHAIN);/* TRY TO TURN OFF IN PAB   */
         CS    SUBCOMP,@04,PABCHAIN(SUBPABP)                       0584
*           BC(7,SUB01);            /* TRY AGAIN IF FAIL             */
         BC    7,SUB01                                             0585
*           PABRPHA=0;              /* DISCONNECT PAB FROM CURRENT 0586
*                                      RPH                           */
         SLR   @06,@06                                             0586
         STCM  @06,7,PABRPHA(SUBPABP)                              0586
*           LM(SUBCOMP,SUBCODD,PABWQCHN);/* PICK UP WK ELEM Q PTR AND
*                                      PAB CHAIN PTR                 */
         LM    SUBCOMP,SUBCODD,PABWQCHN(SUBPABP)                   0587
*SUB03:                                                            0588
*           IF((SUBCOMP&'00FFFFFF'X)^=0)×/* IF PAB WK ELEM QUEUE NOT
*                                      EMPTY (ADDR FLD ^= 0)         */
*               ((SUBCODD&PABUNCO1)^=0)/* OR PAB IS TO BE          0588
*                                      UNCONDITIONALLY RESCHED.      */
*             THEN                                                 0588
SUB03    SLR   @06,@06                                             0588
         LR    @00,SUBCOMP                                         0588
         N     @00,@CF03757                                        0588
         CR    @00,@06                                             0588
         BNE   @RT00588                                            0588
         LR    @00,SUBCODD                                         0588
         N     @00,@CF01907                                        0588
         CR    @00,@06                                             0588
         BE    @RF00588                                            0588
@RT00588 DS    0H                                                  0589
*             DO;                   /* THEN RESCHEDULE PAB           */
*SUB06:                                                            0590
*               SUBSODD=SUBCODD&PABUNCO0;/* TURN OFF UNCOND. RESCHED
*                                      BIT IN REG.                   */
SUB06    LR    SUBSODD,SUBCODD                                     0590
         N     SUBSODD,@CF01905                                    0590
*               CS(SUBCODD,SUBSODD,PABCHAIN);/* TURN OFF IN PAB      */
         CS    SUBCODD,@05,PABCHAIN(SUBPABP)                       0591
*               BC(7,SUB06);        /* IF FAIL, TRY AGAIN            */
         BC    7,SUB06                                             0592
*               PABCHNGP=RPHPABQP;  /* IF SUCCEED, MOVE PAB TO     0593
*                                      RPHPABQ                       */
         MVC   PABCHNGP(3,SUBPABP),RPHPABQP(SUBRPHP)               0593
*               RPHPABQP=SUBPABP;   /* FOR RESCHEDULE                */
         STCM  SUBPABP,7,RPHPABQP(SUBRPHP)                         0594
*             END;                  /* END WORK EL. QUEUE NOT EMPTY  */
*           ELSE                    /* ELSE WORK EL. QUEUE IS EMPTY  */
*             DO;                   /* RESET PAB FLAGS FOR NO      0596
*                                      RESCHEDULE                    */
         B     @RC00588                                            0596
@RF00588 DS    0H                                                  0597
*               SUBSWAP=SUBCOMP&PABWEQG0;/* SET TO UNGATE PAB WK ELEM
*                                      Q                             */
         L     @06,@CF01887                                        0597
         LR    SUBSWAP,SUBCOMP                                     0597
         NR    SUBSWAP,@06                                         0597
*               SUBSODD=SUBCODD&PABCHNG0;/* SET TO UNGATE PAB CHAIN  */
         NR    @06,SUBCODD                                         0598
         LR    SUBSODD,@06                                         0598
*               CDS(SUBCOMP,SUBSWAP,PABWQCHN);/* UNGATE PAB CHAIN AND
*                                      PAB WK ELEMENT Q              */
         CDS   SUBCOMP,SUBSWAP,PABWQCHN(SUBPABP)                   0599
*               BC(7,SUB03);        /* IF FAIL, MUST REEXAMINE WK EL
*                                      Q                             */
         BC    7,SUB03                                             0600
*             END;                  /* END OF RESET FLAGS FOR NO   0601
*                                      RESCHED.                      */
*         END;                      /* END OF TRY TO RESCHEDULE      */
*     END;                          /* END OF THERE IS A PAB         */
*   ELSE                                                           0604
*     ;                             /* NO PROCESSING TO DO IF NO PAB */
@RF00578 DS    0H                                                  0605
*   RFY                                                            0605
*    (SUBCODD,                                                     0605
*     SUBSODD,                                                     0605
*     SUBSWAP,                                                     0605
*     SUBCOMP) UNRSTD;                                             0605
@RC00578 DS    0H                                                  0606
*                                                                  0606
*   /*****************************************************************/
*   /*                                                               */
*   /* RESCHEDULE ALL PABS QUEUED ON RPHPABQ                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0606
*   RFY                                                            0606
*    (SUBBACK) RSTD;                                               0606
*   DO WHILE(RPHPABQP^=0);          /* EMPTY RPHPABQ OF ALL PABS     */
         B     @DE00607                                            0607
@DL00607 DS    0H                                                  0608
*     SUBBACK=0;                    /* INITIALIZE BACK PTR           */
         SLR   SUBBACK,SUBBACK                                     0608
*     SUBPABP=RPHPABQP;             /* GET 1ST PAB ON Q              */
         L     SUBPABP,RPHPABQP-1(,SUBRPHP)                        0609
         LA    SUBPABP,0(,SUBPABP)                                 0609
*     DO WHILE(PABCHNGP^=0);        /* FIND END OF Q                 */
         B     @DE00610                                            0610
@DL00610 DS    0H                                                  0611
*       SUBBACK=SUBPABP;            /* SAVE CURRENT PAB PTR          */
         LR    SUBBACK,SUBPABP                                     0611
*       SUBPABP=PABCHNGP;           /* PICK UP NEXT PAB PTR          */
         L     @06,PABCHNGP-1(,SUBPABP)                            0612
         LA    @06,0(,@06)                                         0612
         LR    SUBPABP,@06                                         0612
*     END;                          /* END DOWHILE TO END OF Q       */
@DE00610 L     @06,PABCHNGP-1(,SUBPABP)                            0613
         LA    @06,0(,@06)                                         0613
         LTR   @06,@06                                             0613
         BNZ   @DL00610                                            0613
*     IF SUBBACK=0                  /* WAS ONLY ONE PAB ON Q?        */
*       THEN                        /* YES                           */
         SLR   @06,@06                                             0614
         CR    SUBBACK,@06                                         0614
         BNE   @RF00614                                            0614
*       RPHPABQP=0;                 /* DEQUEUE IT FROM RPH Q         */
         STCM  @06,7,RPHPABQP(SUBRPHP)                             0615
*     ELSE                                                         0616
*       SUBBACK->PABCHNGP=0;        /* ELSE DEQUEUE LAST PAB ON CHAIN*/
         B     @RC00614                                            0616
@RF00614 SLR   @06,@06                                             0616
         STCM  @06,7,PABCHNGP(SUBBACK)                             0616
*     RFY                                                          0617
*      (SUBCALLR,                                                  0617
*       SUBPAB32) RSTD;                                            0617
@RC00614 DS    0H                                                  0618
*     SUBPAB32=SUBPABP;             /* SET UP PARAM FOR CALL TO    0618
*                                      ISTAPC32                      */
         LR    SUBPAB32,SUBPABP                                    0618
*     DO;                           /* LISATCVT                    0619
*                                      CVTBASE(PAGEABLE,(SUBATCVT))  */
*       SUBATCVT=ATCLCPTR;          /* SET UP ATCVT POINTER          */
         L     SUBATCVT,ATCLCPTR                                   0620
*     END;                          /* LISATCVT                      */
*     SUBCALLR=SUBATCVT->ATCAP32;   /* GET ENTRY PT ADDRESS          */
         L     SUBCALLR,ATCAP32(,SUBATCVT)                         0622
*     CALL ISTAPC32;                /* LET APC32 QUEUE PAB TO PST OR
*                                      MPST READY QUEUE              */
         BALR  @14,@15                                             0623
*     RFY                                                          0624
*      (SUBCALLR,                                                  0624
*       SUBPAB32) UNRSTD;                                          0624
*   END;                            /* END DOWHILE RPHPABQ NOT EMPTY */
@DE00607 L     @06,RPHPABQP-1(,SUBRPHP)                            0625
         LA    @06,0(,@06)                                         0625
         LTR   @06,@06                                             0625
         BNZ   @DL00607                                            0625
*   RFY                                                            0626
*    (SUBBACK) UNRSTD;                                             0626
*                                                                  0627
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE RECOVERY DYPAB IN CRAPROCR SO IF THE RPH IS    */
*   /* POSTED AFTER CLEANUP, IT WILL RUN UNDER AN SRB AND VTAM WILL  */
*   /* GET CONTROL                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0627
*   RFY                                                            0627
*    (SUBWK3,                                                      0627
*     SUBWK4) RSTD;                                                0627
*   SUBWK3=ADDR(RCOVPAB);           /* POINT TO RECOVERY DYPAB IN CRA*/
         LA    SUBWK3,RCOVPAB(,SUBCRA)                             0628
*   SUBWK4=ADDR(SUBWK3->DYPPAB);    /* POINT TO RECOVERY PAB         */
         LA    SUBWK4,DYPPAB(,SUBWK3)                              0629
*   SUBWK3->ISTDYPAB(1:LENGTH(ISTDYPAB))                           0630
*                                                                  0630
*   /*****************************************************************/
*   /*                                                               */
*   /* COPY INTO RECOVERY DYPAB                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0630
*       =PSTSMDYP(1:LENGTH(ISTDYPAB));                             0630
*                                                                  0630
         L     @06,APCPSTA(,SUBAPC)                                0630
         MVC   ISTDYPAB(32,SUBWK3),PSTSMDYP(@06)                   0630
*   /*****************************************************************/
*   /*                                                               */
*   /* FROM PST SMS PAB                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0631
*   SUBWK4->PABRPHA=SUBRPHP;        /* CONNECT RECOVERY PAB TO RPH   */
         STCM  SUBRPHP,7,PABRPHA(SUBWK4)                           0631
*   SUBWK4->PABFLAGS='00'X;         /* SET ALL PAB FLAGS OFF         */
         MVI   PABFLAGS(SUBWK4),X'00'                              0632
*   SUBWK4->PABDYNAM=SUBON;         /* NOW SET FLAG TO SHOW DYNAMIC
*                                      PAB                           */
         OI    PABDYNAM(SUBWK4),B'00010000'                        0633
*   RPHPABOF=SUBWK4->PABOFFST;      /* CONNECT RPH TO PAB            */
         MVC   RPHPABOF(1,SUBRPHP),PABOFFST(SUBWK4)                0634
*   RPHMAJCB=SUBWK3;                /* RPH MAJCB IS CRAPROCR=DYPAB   */
         STCM  SUBWK3,7,RPHMAJCB(SUBRPHP)                          0635
*   SUBWK3->DYPTSKID=APCPSTA->PSTMPSTP;/* POINT PAB TO VTAM'S MPST IN
*                                      CASE IT GETS POSTED AFTER TASK
*                                      TERM COMPLETES                */
         L     @00,PSTMPSTP(,@06)                                  0636
         ST    @00,DYPTSKID(,SUBWK3)                               0636
*   APCRTRN=CVTSRBRT;               /* INSURE SRB RETURN ADDRESS     */
         L     @06,CVTPTR                                          0637
         L     @06,CVTSRBRT(,@06)                                  0637
         ST    @06,APCRTRN(,SUBAPC)                                0637
*   APCSSTSK='0'B;                  /* IDENTIFY AS SRB PROCESS       */
         NI    APCSSTSK(SUBAPC),B'01111111'                        0638
*   RFY                                                            0639
*    (SUBWK3,                                                      0639
*     SUBWK4) UNRSTD;                                              0639
*   RFY                                                            0640
*    (SUBCALLR,                                                    0640
*     SUBPSTP) RSTD;                                               0640
*   SUBPSTP=APCPSTA;                /* SAVE PST ADDR OVER CALL TO  0641
*                                      APC64                         */
         L     @06,APCPSTA(,SUBAPC)                                0641
         LR    SUBPSTP,@06                                         0641
*   RFY                                                            0642
*     ISTPST BASED(SUBPSTP);                                       0642
*   DO;                             /* LISATCVT                    0643
*                                      CVTBASE(PAGEABLE,(SUBATCVT))  */
*     SUBATCVT=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     SUBATCVT,ATCLCPTR                                   0644
*   END;                            /* LISATCVT                      */
*   SUBCALLR=SUBATCVT->ATCAP64;     /* SET UP FOR CALL TO APC64      */
         L     SUBCALLR,ATCAP64(,SUBATCVT)                         0646
*   SUBRPHP=RPHCRR;                 /* REG 1 MUST POINT TO CRA ON  0647
*                                      INPUT                         */
         L     SUBRPHP,RPHCRR(,SUBRPHP)                            0647
*   CALL ISTAPC64;                  /* APC64 WILL FREE ALL LOCKS HELD
*                                      BY CURRENT RPH, AND WILL SET
*                                      RPH PURGE COMPLETE OR RELSTORE
*                                      THE CRA                       */
         BALR  @14,@15                                             0648
*   RFY                                                            0649
*    (SUBCALLR) UNRSTD;                                            0649
*   RFY                                                            0650
*    (SUBCOMP,                                                     0650
*     SUBSWAP,                                                     0650
*     SUBPSTP) RSTD;                                               0650
*                                                                  0650
*/*PSTFLGA HAS IRB IN USE, USER EXIT RUNNING, AND SYSTEM SERVICE   0651
*  RUNNING FLAGS                                                     */
*                                                                  0651
*   SUBCOMP=PSTFLGA;                                               0651
         L     SUBCOMP,PSTFLGA(,SUBPSTP)                           0651
*SUB04:                                                            0652
*   SUBSWAP=SUBCOMP&PSTIRB10        /* SET IRB1-IN-USE FLAG OFF      */
*       &PSTIRB20                   /* SET IRB2-IN-USE FLAG OFF      */
*       &PSTUERN0                   /* SET USER EXIT FLAG OFF        */
*       &PSTSSRN0;                  /* SET SYSTEM SERVICE FLAG OFF   */
SUB04    LR    SUBSWAP,SUBCOMP                                     0652
         N     SUBSWAP,@CF03782                                    0652
*   CS(SUBCOMP,SUBSWAP,PSTFLGA);    /* TURN THEM OFF IN PST          */
         CS    SUBCOMP,@04,PSTFLGA(SUBPSTP)                        0653
*   BC(7,SUB04);                    /* IF FAIL, TRY AGAIN            */
         BC    7,SUB04                                             0654
*   DO;                             /* LISATCVT                    0655
*                                      CVTBASE(PAGEABLE,(SUBATCVT))  */
*     SUBATCVT=ATCLCPTR;            /* SET UP ATCVT POINTER          */
         L     SUBATCVT,ATCLCPTR                                   0656
*   END;                            /* LISATCVT                      */
*   RFY                                                            0658
*    (SUBCOMP,                                                     0658
*     SUBSWAP) UNRSTD;                                             0658
*   RFY                                                            0659
*    (SUBCALLR) RSTD;                                              0659
*   SUBRPHP=SUBPSTP;                /* SET UP REG1 WITH PST ADDR FOR
*                                      CALL TO APC41                 */
         LR    SUBRPHP,SUBPSTP                                     0660
*   SUBCALLR=SUBATCVT->ATCAP41;     /* SET UP FOR CALL TO APC41      */
         L     SUBCALLR,ATCAP41(,SUBATCVT)                         0661
*   CALL ISTAPC41;                  /* SCHEDULE AN IRB FOR ANY PABS
*                                      ON PST READY Q                */
         BALR  @14,@15                                             0662
*   RFY                                                            0663
*    (SUBPSTP,                                                     0663
*     SUBATCVT,                                                    0663
*     SUBCALLR) UNRSTD;                                            0663
*   RFY                                                            0664
*     SUBR14 RSTD;                                                 0664
*   SUBR14=SUBSAV14;                /* RESTORE RETURN ADDRESS        */
         LR    SUBR14,SUBSAV14                                     0665
*   RETURN;                         /* RETURN TO CALLER              */
@EL00002 DS    0H                                                  0666
@EF00002 DS    0H                                                  0666
@ER00002 BR    @14                                                 0666
*   END PSTCLN;                     /* END OF SUBROUTINE             */
@PB00002 DS    0H                                                  0668
*/* TPEPILOG                                                         */
*                                                                  0668
*   GEN(PRINT OFF);                                                0668
         PRINT OFF
*   DECLARE                                                        0669
*     EMCR0 PTR REG(0),                                            0669
*     EMCR1 PTR REG(1),                                            0669
*     EMCR2 PTR REG(2),                                            0669
*     EMCR3 PTR REG(3),                                            0669
*     EMCR4 PTR REG(4),                                            0669
*     EMCR5 PTR REG(5),                                            0669
*     EMCR6 PTR REG(6),                                            0669
*     EMCR7 PTR REG(7),                                            0669
*     EMCR8 PTR REG(8),                                            0669
*     EMCR9 PTR REG(9),                                            0669
*     EMCR10 PTR REG(10),                                          0669
*     EMCR11 PTR REG(11),                                          0669
*     EMCR12 PTR REG(12),                                          0669
*     EMCR13 PTR REG(13),                                          0669
*     EMCR14 PTR REG(14),                                          0669
*     EMCR15 PTR REG(15);                                          0669
*   GEN(PRINT ON);                                                 0670
*                                                                  0670
         PRINT ON
*/* END OF TPEPILOG                                                  */
*                                                                  0671
*   END ISTAPC61                                                   0671
*                                                                  0671
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                       */
*                                                                  0671
*       ;                                                          0671
         B     @EL00001                                            0671
@DATA    DS    0H
@DATD    DSECT
         DS    0F
ISTAPC61 CSECT
         DS    0F
@CF02219 DC    F'12'
@CF00070 DC    F'24'
@CF03782 DC    F'268435455'
@CF01887 DC    XL4'7FFFFFFF'
@CF01889 DC    XL4'80000000'
@CF01893 DC    XL4'BFFFFFFF'
@CF01895 DC    XL4'40000000'
@CF01905 DC    XL4'EFFFFFFF'
@CF01907 DC    XL4'10000000'
@CF01934 DC    XL4'01000000'
@CF03279 DC    XL4'00400000'
@CF03757 DC    XL4'00FFFFFF'
@CF03785 DC    BL4'00000000000000000000000010000000'
@DATD    DSECT
         DS    0D
ISTAPC61 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC03636 DC    C'NO CRA AVAILABLE'
@CC03630 DC    C'ISTAPC61'
@CC03640 DC    C'ISTORFBA'
@CC03642 DC    C'ISTORFBD'
I041900  DS    CL81
         ORG   I041900
I0190001 DC    F'75'
I0190002 DC    X'8000'
I0190003 DC    CL71'        DUMP BEING TAKEN FOR ABENDING TASK   '
I0419004 DC    X'1000'
I0419005 DC    X'4100'
         ORG   I041900+81
CMZAA009 DC    CL4'413I'
         DS    CL3
CMZZO009 DC    F'0'
ISTAPC61 CSECT
*                                   /* SDUMP,  IS FORM       @ZM33532*/
SDMPLST SDUMP HDR='ISTAPC61-VTAM IRB ABEND',                           *
               SDATA=(SQA,NUC,RGN,LPA,TRT,ALLPSA,CSA),MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTAPC61 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SDWAPTR  EQU   @10
RPHPTR   EQU   @01
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR03P   EQU   @03
GPR04P   EQU   @04
GPR05P   EQU   @05
GPR07P   EQU   @07
GPR11P   EQU   @11
GPR12F   EQU   @12
GPR12P   EQU   @12
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR15P   EQU   @15
ENTCODE  EQU   @00
R1       EQU   @01
R2       EQU   @02
SAVER13  EQU   @02
SAVER0   EQU   @04
DCEPTR   EQU   @05
R6       EQU   @06
SAVER11  EQU   @07
APCRRPTR EQU   @07
ATCVTPTR EQU   @08
SAVER14  EQU   @09
R11      EQU   @11
CRAPTR   EQU   @12
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
REG1009  EQU   @01
EMCR13   EQU   @13
REG15009 EQU   @15
SUBRPHP  EQU   @01
SUBCOMP  EQU   @02
SUBWK3   EQU   @03
SUBCODD  EQU   @03
SUBBACK  EQU   @03
SUBWK4   EQU   @04
SUBSWAP  EQU   @04
SUBSODD  EQU   @05
SUBPAB32 EQU   @05
SUBAPC   EQU   @07
SUBATCVT EQU   @08
SUBPABP  EQU   @08
SUBCRA   EQU   @12
SUBPSTP  EQU   @12
SUBSAV14 EQU   @13
SUBR14   EQU   @14
SUBCALLR EQU   @15
EMCR0    EQU   @00
EMCR1    EQU   @01
EMCR10   EQU   @10
EMCR11   EQU   @11
EMCR12   EQU   @12
EMCR14   EQU   @14
EMCR15   EQU   @15
EMCR2    EQU   @02
EMCR3    EQU   @03
EMCR4    EQU   @04
EMCR5    EQU   @05
EMCR6    EQU   @06
EMCR7    EQU   @07
EMCR8    EQU   @08
EMCR9    EQU   @09
GPR00F   EQU   @00
GPR01F   EQU   @01
GPR02F   EQU   @02
GPR02P   EQU   @02
GPR03F   EQU   @03
GPR04F   EQU   @04
GPR05F   EQU   @05
GPR06F   EQU   @06
GPR06P   EQU   @06
GPR07F   EQU   @07
GPR08F   EQU   @08
GPR08P   EQU   @08
GPR09F   EQU   @09
GPR09P   EQU   @09
GPR10F   EQU   @10
GPR10P   EQU   @10
GPR11F   EQU   @11
GPR13F   EQU   @13
GPR14F   EQU   @14
GPR15F   EQU   @15
R4       EQU   @04
SUBR0    EQU   @00
CVTPTR   EQU   16
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
ATCLCPTR EQU   1032
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTSHS   EQU   CVTXTNT2+40
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SRBSECT  EQU   0
SRBFLC   EQU   SRBSECT+12
SRBPTR   EQU   0
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR14 EQU   SDWAGRSV+56
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWASR15 EQU   SDWASRSV+60
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SDWAHEX  EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAURAL EQU   SDWARA+3
SDWAVRA  EQU   SDWARA+4
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSPTR  EQU   0
FRRSENTR EQU   0
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRREPTR  EQU   0
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
TIOT1    EQU   0
TIOCNJOB EQU   TIOT1
TIOCSTEP EQU   TIOT1+8
ISTPAB   EQU   0
PABWQCHN EQU   ISTPAB
PABWEQA  EQU   PABWQCHN
PABCHAIN EQU   PABWQCHN+4
PABCHNGP EQU   PABCHAIN+1
PABOFFST EQU   ISTPAB+8
PABRPHFG EQU   ISTPAB+12
PABFLAGS EQU   PABRPHFG
PABDYNAM EQU   PABFLAGS
PABERLCK EQU   PABFLAGS
PABERRLK EQU   PABERLCK
PABRPHA  EQU   PABRPHFG+1
ISTLOK   EQU   0
LOKCHN   EQU   ISTLOK+1
LOKCHNG  EQU   LOKCHN
@NM00086 EQU   LOKCHNG+2
ISTDYPAB EQU   0
DYPTSKID EQU   ISTDYPAB+8
DYPPAB   EQU   ISTDYPAB+16
ISTRPH   EQU   0
RPHCNTL  EQU   ISTRPH
RPHFLAGS EQU   RPHCNTL+2
RPHAPTYP EQU   RPHFLAGS
RPHFSTLC EQU   RPHFLAGS
RPHFLGB  EQU   RPHCNTL+3
RPHRPHA  EQU   ISTRPH+4
RPHTSKID EQU   ISTRPH+8
RPHRESMA EQU   ISTRPH+16
RPHWPFLG EQU   RPHRESMA
RPHPURGE EQU   RPHWPFLG
RPHPABOF EQU   ISTRPH+20
RPHMAJCB EQU   ISTRPH+21
RPHWEA   EQU   ISTRPH+24
RPHCSPA  EQU   RPHWEA
RPHSRPRM EQU   ISTRPH+28
RPHCRR   EQU   ISTRPH+32
RPHPABQA EQU   ISTRPH+36
RPHPABQP EQU   RPHPABQA+1
RPHWORK  EQU   ISTRPH+40
RPHSAVE1 EQU   RPHWORK
RPHSBITS EQU   RPHSAVE1+1
ISTATCVT EQU   0
ATCCOM   EQU   ISTATCVT
ATCSTAT  EQU   ATCCOM
ATCSTAT1 EQU   ATCSTAT
ATCSTFLG EQU   ATCSTAT+1
ATCPOFLG EQU   ATCSTAT+2
ATCSTAT4 EQU   ATCSTAT+3
ATCIOTRC EQU   ATCCOM+140
ATCTHTRC EQU   ATCIOTRC
ATCSMRQ  EQU   ATCCOM+180
ATCSMRS  EQU   ATCCOM+188
ATCCSMR  EQU   ISTATCVT+296
ATCSHRFG EQU   ISTATCVT+316
ATCMSGP  EQU   ISTATCVT+344
ATCHPGM  EQU   ISTATCVT+384
ATCVLCNT EQU   ISTATCVT+772
ATCRNO   EQU   ISTATCVT+788
ATCSOPD  EQU   ISTATCVT+792
ATCSIPD  EQU   ISTATCVT+800
ATCSECST EQU   ISTATCVT+812
ATCSTAT2 EQU   ISTATCVT+818
ATCVTBAM EQU   ISTATCVT+908
@NM00097 EQU   ATCVTBAM+3
ATCVTMAB EQU   @NM00097
ATCAOSM  EQU   ISTATCVT+912
ATCGSRBQ EQU   ATCAOSM+4
ATCGSRBG EQU   ATCGSRBQ
ATCAP32  EQU   ATCAOSM+28
ATCAP63  EQU   ATCAOSM+60
ATCAP64  EQU   ATCAOSM+64
ATCICAPP EQU   ATCAOSM+100
ATCCDTCB EQU   ATCICAPP+8
ATCLDAPP EQU   ATCAOSM+120
ATCDAPVT EQU   ATCAOSM+140
ATCCRA   EQU   ATCAOSM+280
ATCCRACN EQU   ATCCRA+4
ATCSRB   EQU   ATCAOSM+288
ATCSRBCN EQU   ATCSRB+4
ATCCRPL  EQU   ATCAOSM+296
ATCRPLCN EQU   ATCCRPL+4
ATCSQAFR EQU   ATCAOSM+304
ATCORTBC EQU   ATCSQAFR+4
ATCORSRB EQU   ATCORTBC
@NM00099 EQU   ATCAOSM+332
ATCABEN  EQU   @NM00099
ATCVTFLG EQU   ATCAOSM+392
ATCAP41  EQU   ATCAOSM+512
ATCAP69  EQU   ATCAOSM+540
ATCZFLAG EQU   ATCAOSM+588
ISTLCCW  EQU   0
LCCWOP   EQU   ISTLCCW
LCCWRWOP EQU   LCCWOP
LCCWCTL  EQU   LCCWRWOP
LCCWFLAG EQU   ISTLCCW+1
LCCWLSI  EQU   LCCWFLAG
ISTLCPB  EQU   0
LCPREQTG EQU   ISTLCPB+2
LCPFLAGS EQU   LCPREQTG
LCPZF001 EQU   LCPFLAGS
LCPZRT02 EQU   LCPZF001
LCPZF002 EQU   LCPFLAGS
LCPZRT03 EQU   LCPZF002
LCPZF003 EQU   LCPFLAGS
LCPZRT04 EQU   LCPZF003
LCPZF004 EQU   LCPFLAGS
LCPZRT05 EQU   LCPZF004
LCPZRT06 EQU   LCPFLAGS
LCPZRT07 EQU   LCPFLAGS
LCPMNRCD EQU   LCPREQTG+1
LCPZRT08 EQU   LCPMNRCD
LCPZRT09 EQU   LCPMNRCD
LCPCHAIN EQU   ISTLCPB+4
LCPCHAI1 EQU   LCPCHAIN
LCPRUCNT EQU   ISTLCPB+8
LCPFLAG2 EQU   ISTLCPB+9
LCPTLBPI EQU   LCPFLAG2
LCPFID0  EQU   LCPFLAG2
LCPSEQ   EQU   ISTLCPB+10
LCPCID   EQU   ISTLCPB+16
LCPFDBA  EQU   ISTLCPB+24
LCPFLG1  EQU   ISTLCPB+37
LCPFLCCW EQU   ISTLCPB+40
LCPLCCW  EQU   ISTLCPB+48
LCPPABA  EQU   LCPLCCW+4
LCPRPHA  EQU   LCPPABA
LCPBPTR  EQU   0
ISTZSAVE EQU   0
ZSAZSVBC EQU   ISTZSAVE
ZSAZSVMS EQU   ZSAZSVBC
ISTPFCRR EQU   0
PFCCRR   EQU   ISTPFCRR
PFCCRRID EQU   PFCCRR
PFCCRRLN EQU   PFCCRR+2
PFCHDR   EQU   ISTPFCRR+4
PFCCRRO  EQU   PFCHDR
PFCFRRO  EQU   PFCHDR+4
ISTCFCRR EQU   0
CFCAUDIT EQU   ISTCFCRR
CFCNTRD  EQU   CFCAUDIT
CFCCRT   EQU   CFCAUDIT+1
ISTZCRR  EQU   0
ZCRCRR   EQU   ISTZCRR
ZCRFLGS1 EQU   ISTZCRR+12
ZCRFLGS2 EQU   ISTZCRR+13
ZCRSWFLD EQU   ISTZCRR+14
ZCRENDSH EQU   ZCRSWFLD
ZCRNDLCP EQU   ZCRSWFLD
ZCRRESET EQU   ZCRSWFLD
ZCRFLGS3 EQU   ISTZCRR+15
ZCRGENSW EQU   ISTZCRR+16
ZCRPFLGS EQU   ISTZCRR+17
ZCRIBPR  EQU   ISTZCRR+18
ZCRSCPSW EQU   ISTZCRR+19
ZCRPARMS EQU   ISTZCRR+24
ZCRFBPTR EQU   ZCRPARMS
ZCRDFRDA EQU   ZCRPARMS+10
ZCRPCOD1 EQU   ZCRPARMS+12
ZCRPLSBF EQU   ZCRPCOD1
ZCRPCOD2 EQU   ZCRPARMS+13
ZCRSVRTN EQU   ISTZCRR+56
ZCRWKARA EQU   ISTZCRR+156
ZCRCIDSV EQU   ISTZCRR+192
ZCRAUDIT EQU   ISTZCRR+440
ZCRENTER EQU   ZCRAUDIT+5
ZCRLCPB  EQU   ISTZCRR+480
ZCRRHRU  EQU   ZCRLCPB
ISTASCRR EQU   0
ASCFLAGS EQU   ISTASCRR+16
ASCFLG1  EQU   ASCFLAGS
ASCFLG2  EQU   ASCFLAGS+2
ASCFLG3  EQU   ASCFLAGS+4
ASCUSRGS EQU   ISTASCRR+28
ISTAPCRR EQU   0
APCATFLG EQU   ISTAPCRR+16
APCRFLG  EQU   ISTAPCRR+18
APC31R   EQU   APCRFLG
APCPSTA  EQU   ISTAPCRR+20
APCRTRN  EQU   ISTAPCRR+28
APCSAVE  EQU   ISTAPCRR+44
APCCOMF  EQU   ISTAPCRR+116
APCCOMF1 EQU   APCCOMF
APCSSTSK EQU   APCCOMF1
APC31FLG EQU   ISTAPCRR+132
APCRESCH EQU   APC31FLG
APC52FLG EQU   ISTAPCRR+133
APC53FLG EQU   ISTAPCRR+134
APC54FLG EQU   ISTAPCRR+135
APC57FLG EQU   ISTAPCRR+136
ISTCRA   EQU   0
CRABASIC EQU   ISTCRA
CRAHDR   EQU   CRABASIC
CRACRR   EQU   CRAHDR
CRALKACT EQU   CRABASIC+8
CRARPH   EQU   ISTCRA+52
CRAPSS   EQU   ISTCRA+160
CRAPROCR EQU   ISTCRA+312
CRASVC   EQU   ISTCRA+848
CRABUFA  EQU   CRASVC+68
ISTPST   EQU   0
PSTRQFGA EQU   ISTPST+8
PSTRQUE  EQU   PSTRQFGA
PSTFLGA  EQU   PSTRQFGA+4
PSTABINP EQU   PSTFLGA
PSTMPSTP EQU   ISTPST+20
PSTSMDYP EQU   ISTPST+64
PSTDMPS  EQU   ISTPST+132
ISTAVT   EQU   0
ISTAS49  EQU   ISTAVT+4
ISTDCE   EQU   0
DCEDBPTR EQU   ISTDCE
DCECHN   EQU   ISTDCE+4
ISTMPST  EQU   0
MPSRSV07 EQU   ISTMPST+4
MPSRQUE  EQU   ISTMPST+8
MPSFLGA  EQU   ISTMPST+12
MPSCRA   EQU   ISTMPST+24
MPSCRACT EQU   MPSCRA+4
MPSSRB   EQU   ISTMPST+32
MPSSRBCT EQU   MPSSRB+4
MPSCRPL  EQU   ISTMPST+40
MPSRPLCT EQU   MPSCRPL+4
MPSDBTBL EQU   ISTMPST+124
ISTACDEB EQU   0
ACDVTPRX EQU   ISTACDEB
ACDTSKID EQU   ACDVTPRX+8
ACDDBPFX EQU   ISTACDEB+16
ACDTBLOF EQU   ACDDBPFX+6
ACDBASIC EQU   ISTACDEB+24
ACDTCBAD EQU   ACDBASIC
ACDNMSUB EQU   ACDTCBAD
ACDDEBAD EQU   ACDBASIC+4
ACDUSRPG EQU   ACDBASIC+16
ACDACBAD EQU   ACDBASIC+24
ACDAPPAD EQU   ACDBASIC+28
ACDVTAM  EQU   ISTACDEB+56
ACDSSFLG EQU   ACDVTAM+80
ACDAPDAT EQU   ACDVTAM+83
ISTMPLT  EQU   0
MPLCDS   EQU   ISTMPLT+16
MPLFLGS1 EQU   MPLCDS+6
SMSRTY   EQU   0
FRRAREA  EQU   0
FRRID    EQU   FRRAREA
STDSAVE  EQU   0
SVSTRT   EQU   STDSAVE+12
STDSV1   EQU   SVSTRT+12
@NM00125 EQU   0
CMZID009 EQU   @NM00125
@NM00126 EQU   @NM00125+4
CMZRL009 EQU   @NM00126
CMZRA009 EQU   @NM00126+1
CMZEA009 EQU   @NM00125+8
CMZVP009 EQU   @NM00125+12
CMZSA009 EQU   0
CMTA009  EQU   0
ISTAPC64 EQU   0
ISTAPC41 EQU   0
ISTAPC32 EQU   0
ISTAPC63 EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSRBRT EQU   CVTS01+100
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
TCBPTR   EQU   PSATOLD
TIOTPTR  EQU   TCBTIO
TIOENTRY EQU   TIOT1+24
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
LCPZTIE  EQU   LCPCID
LCPZSNAM EQU   LCPZTIE+8
PSTPTR   EQU   APCPSTA
LOCKS    EQU   CRALKACT
CRRDEFD  EQU   CRACRR
FBABREG  EQU   SDWAGR10
FBABASE  EQU   FBABREG+1
FBDBREG  EQU   SDWAGR09
FBDBASE  EQU   FBDBREG+1
SAVEREGS EQU   SDWAVRA
SAVPARMS EQU   SDWAVRA+72
SAVNAM1  EQU   SDWAVRA+88
SAVNAM2  EQU   SDWAVRA+96
RCOVPAB  EQU   CRAPROCR
FLC      EQU   PSA
SRB      EQU   SRBSECT
*                                      START UNREFERENCED COMPONENTS
@NM00120 EQU   FBDBREG
@NM00119 EQU   FBABREG
LCPZTRV4 EQU   LCPZSNAM+4
LCPZTRV1 EQU   LCPZSNAM
LCPZSNA  EQU   LCPZTIE+4
LCPZFMCA EQU   LCPZTIE
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00084 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00083 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOEDDNM EQU   TIOENTRY+4
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV620 EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTIRM   EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRV607 EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00124 EQU   SVSTRT+16
STDSV0   EQU   SVSTRT+8
@NM00123 EQU   SVSTRT+4
STDSV14  EQU   SVSTRT
@NM00122 EQU   STDSAVE
@NM00121 EQU   FRRAREA+8
MPLRSVD5 EQU   MPLCDS+7
MPLRSVD4 EQU   MPLFLGS1
MPLASID  EQU   MPLCDS+4
MPLADDR  EQU   MPLCDS
MPLRSVD2 EQU   ISTMPLT+12
MPLRSVD1 EQU   ISTMPLT+10
MPLECNT  EQU   ISTMPLT+8
MPLID    EQU   ISTMPLT+4
MPLCHN   EQU   ISTMPLT
ACDREFQ  EQU   ISTACDEB+204
ACDASFQ  EQU   ISTACDEB+200
ACDSOP   EQU   ISTACDEB+184
ACDSIP   EQU   ISTACDEB+168
ACDRSV24 EQU   ACDVTAM+108
ACDRSV23 EQU   ACDVTAM+104
ACDRSV22 EQU   ACDVTAM+100
ACDOCWAD EQU   ACDVTAM+96
ACDRSV10 EQU   ACDVTAM+92
ACDAPDDT EQU   ACDAPDAT+1
ACDAPDLN EQU   ACDAPDAT
ACDRSV07 EQU   ACDVTAM+82
ACDRSV06 EQU   ACDVTAM+81
@NM00118 EQU   ACDSSFLG
ACDTSO   EQU   ACDSSFLG
ACDTPEND EQU   ACDSSFLG
ACDAICLS EQU   ACDSSFLG
ACDABEND EQU   ACDSSFLG
ACDCACB  EQU   ACDSSFLG
ACDRSV21 EQU   ACDVTAM+64
ACDSSPAB EQU   ACDVTAM+48
ACDNEPAB EQU   ACDVTAM+32
ACDRSV20 EQU   ACDVTAM+20
ACDRARQ  EQU   ACDVTAM+16
ACDRAFQ  EQU   ACDVTAM+12
ACDFMCB  EQU   ACDVTAM+8
ACDRDTE  EQU   ACDVTAM+4
ACDLOCK  EQU   ACDVTAM
ACDAPP   EQU   ACDAPPAD+1
ACDEXSCL EQU   ACDAPPAD
ACDACB   EQU   ACDACBAD+1
ACDDEBID EQU   ACDACBAD
ACDPROTG EQU   ACDACBAD
ACDECBAD EQU   ACDBASIC+20
ACDUSRPB EQU   ACDUSRPG+1
ACDNMEXT EQU   ACDUSRPG
ACDPRLEN EQU   ACDBASIC+15
ACDFLGS1 EQU   ACDBASIC+14
ACDQSCNT EQU   ACDBASIC+13
ACDOPATB EQU   ACDBASIC+12
ACDIRBAD EQU   ACDBASIC+8
ACDDEB   EQU   ACDDEBAD+1
ACDAMLNG EQU   ACDDEBAD
ACDTCB   EQU   ACDTCBAD+1
ACDOPNAD EQU   ACDNMSUB
ACDRSV03 EQU   ACDTBLOF+1
ACDRSV02 EQU   ACDTBLOF
ACDAMTYP EQU   ACDDBPFX+5
ACDLENG  EQU   ACDDBPFX+4
ACDDEBX  EQU   ACDDBPFX
ACDRSV08 EQU   ACDVTPRX+12
ACDCHN   EQU   ACDVTPRX+4
ACDSAF   EQU   ACDVTPRX+2
ACDLNGTH EQU   ACDVTPRX+1
ACDTYPE  EQU   ACDVTPRX
MPSSRB1  EQU   ISTMPST+172
MPSSAVE  EQU   ISTMPST+140
MPSMQLBP EQU   ISTMPST+136
MPSSYSRT EQU   ISTMPST+132
MPSQEL   EQU   ISTMPST+128
MPSASCB  EQU   ISTMPST+120
MPSTPPAB EQU   ISTMPST+88
MPSSMPAB EQU   ISTMPST+56
MPSSMRPH EQU   ISTMPST+52
MPSSRB55 EQU   ISTMPST+48
MPSRPLAC EQU   MPSRPLCT+2
MPSRPLRC EQU   MPSRPLCT
MPSCRPLQ EQU   MPSCRPL
MPSSRBAC EQU   MPSSRBCT+2
MPSSRBRC EQU   MPSSRBCT
MPSSRBQ  EQU   MPSSRB
MPSCRAAC EQU   MPSCRACT+2
MPSCRARC EQU   MPSCRACT
MPSCRAQ  EQU   MPSCRA
MPSMPSTP EQU   ISTMPST+20
MPSPSTCT EQU   ISTMPST+16
MPSASID  EQU   MPSFLGA+2
MPSRSV02 EQU   MPSFLGA+1
MPSPSTAB EQU   MPSFLGA
MPSRSV01 EQU   MPSFLGA
MPSTPBU  EQU   MPSFLGA
MPMEMTRM EQU   MPSFLGA
MPSAUTH  EQU   MPSFLGA
MPSCRAO  EQU   MPSFLGA
MPSSRBO  EQU   MPSFLGA
MPSRQUEG EQU   MPSRQUE
MPSTSOIR EQU   MPSRSV07
MPSTSOIW EQU   MPSRSV07
MPSID    EQU   ISTMPST
DCERSV01 EQU   ISTDCE+12
DCETERM  EQU   ISTDCE+8
ISTPDAVP EQU   ISTAVT+40
ISTAVR01 EQU   ISTAVT+38
ISTVTTP  EQU   ISTAVT+36
ISTAGTWT EQU   ISTAVT+34
ISTATRT  EQU   ISTAVT+32
ISTARID  EQU   ISTAVT+30
ISTX1    EQU   ISTAVT+29
ISTPHNM  EQU   ISTAVT+24
ISTAPSEX EQU   ISTAVT+20
ISTVTTIK EQU   ISTAVT+18
AVTASID  EQU   ISTAVT+16
ISTAPSTA EQU   ISTAVT+12
ISTAS53  EQU   ISTAVT+8
ISTAHIP  EQU   ISTAS49
ISTACVT  EQU   ISTAVT
PSTDRDYQ EQU   PSTDMPS+1
@NM00117 EQU   PSTDMPS
PSTDGATE EQU   PSTDMPS
PSTDEBP  EQU   ISTPST+128
PSTSAVE  EQU   ISTPST+96
PSTCRRS  EQU   ISTPST+60
PSTCRR1  EQU   ISTPST+56
PSTIQE22 EQU   ISTPST+52
PSTIQE21 EQU   ISTPST+48
PSTIQE12 EQU   ISTPST+44
PSTIQE11 EQU   ISTPST+40
PSTUEQ   EQU   ISTPST+36
PSTNSSQ  EQU   ISTPST+32
PSTPSSQ  EQU   ISTPST+28
PSTACBCT EQU   ISTPST+24
PSTTCBA  EQU   ISTPST+16
PSTRSV08 EQU   PSTFLGA+1
PSTDMPC  EQU   PSTFLGA+1
PSTABEND EQU   PSTABINP
PSTAUTH  EQU   PSTFLGA
PSTSMCU  EQU   PSTFLGA
PSTSMQR  EQU   PSTFLGA
PSTIRBU2 EQU   PSTFLGA
PSTIRBU1 EQU   PSTFLGA
PSTUERN  EQU   PSTFLGA
PSTSSRN  EQU   PSTFLGA
PSTRQUEA EQU   PSTRQUE+1
PSTRSV07 EQU   PSTRQUE
PSTRSV06 EQU   PSTRQUE
PSTRSV05 EQU   PSTRQUE
PSTRSV04 EQU   PSTRQUE
PSTRSV03 EQU   PSTRQUE
PSTRSV02 EQU   PSTRQUE
PSTRSV01 EQU   PSTRQUE
PSTRQFLG EQU   PSTRQUE
PSTCHAIN EQU   ISTPST+4
@NM00116 EQU   ISTPST+2
PSTLNGTH EQU   ISTPST+1
PSTTYPE  EQU   ISTPST
CRACHAIN EQU   ISTCRA+928
CRARSV02 EQU   ISTCRA+924
CRARSV01 EQU   ISTCRA+920
CRABFTBA EQU   CRABUFA
CRAMASK  EQU   CRASVC+64
CRAHSIZ  EQU   CRASVC+60
CRAASCRR EQU   CRASVC
CRALAPTR EQU   CRABASIC+48
CRAL9PTR EQU   CRABASIC+44
CRAL8PTR EQU   CRABASIC+40
CRAL7PTR EQU   CRABASIC+36
CRAL6PTR EQU   CRABASIC+32
CRAL5PTR EQU   CRABASIC+28
CRAL4PTR EQU   CRABASIC+24
CRAL3PTR EQU   CRABASIC+20
CRAL2PTR EQU   CRABASIC+16
CRAL1PTR EQU   CRABASIC+12
CRALEV01 EQU   CRALKACT+3
CRALEV02 EQU   CRALKACT+3
CRALEV03 EQU   CRALKACT+3
CRALEV04 EQU   CRALKACT+3
CRALEV05 EQU   CRALKACT+3
CRALEV06 EQU   CRALKACT+3
CRALEV07 EQU   CRALKACT+3
CRALEV08 EQU   CRALKACT+3
CRALEV09 EQU   CRALKACT+2
CRALEV10 EQU   CRALKACT+2
CRALEV11 EQU   CRALKACT+2
CRALEV12 EQU   CRALKACT+2
CRALEV13 EQU   CRALKACT+2
CRALEV14 EQU   CRALKACT+2
CRALEV15 EQU   CRALKACT+2
CRALEV16 EQU   CRALKACT+2
CRALEV17 EQU   CRALKACT+1
CRALEV18 EQU   CRALKACT+1
CRALEV19 EQU   CRALKACT+1
CRALEV20 EQU   CRALKACT+1
CRALEV21 EQU   CRALKACT+1
CRALEV22 EQU   CRALKACT+1
CRALEV23 EQU   CRALKACT+1
CRALEV24 EQU   CRALKACT+1
CRALEV25 EQU   CRALKACT
CRALEV26 EQU   CRALKACT
CRALEV27 EQU   CRALKACT
CRALEV28 EQU   CRALKACT
CRALEV29 EQU   CRALKACT
CRALEV30 EQU   CRALKACT
CRALEV31 EQU   CRALKACT
CRALEV32 EQU   CRALKACT
CRAFRR   EQU   CRAHDR+4
@NM00115 EQU   ISTAPCRR+137
@NM00114 EQU   APC57FLG
APCNREL  EQU   APC57FLG
APCRECRA EQU   APC57FLG
@NM00113 EQU   APC54FLG
APCRLST  EQU   APC54FLG
APCPR153 EQU   APC53FLG
@NM00112 EQU   APC52FLG
APCWKF   EQU   APC52FLG
APCNWF   EQU   APC52FLG
APCRDQ   EQU   APC52FLG
APCQENQ  EQU   APC52FLG
APCSMSR  EQU   APC52FLG
APCCKRQ  EQU   APC52FLG
@NM00111 EQU   APC31FLG
APCSORT  EQU   APC31FLG
APCTPXIT EQU   APC31FLG
APCSWTWD EQU   ISTAPCRR+128
APCSAV2  EQU   ISTAPCRR+124
APCSAV1  EQU   ISTAPCRR+120
APCRETCD EQU   APCCOMF+2
@NM00110 EQU   APCCOMF1+1
APCZLBER EQU   APCCOMF1
APCEXIT  EQU   APCCOMF1
APCRELR  EQU   APCCOMF1
APCIRB2  EQU   APCCOMF1
APCIRB1  EQU   APCCOMF1
APCSMCR  EQU   APCCOMF1
APCUETSK EQU   APCCOMF1
APCESTAL EQU   APCSAVE
APCFRRPM EQU   ISTAPCRR+40
APCQWFO  EQU   ISTAPCRR+36
APCPABSV EQU   ISTAPCRR+32
APCTCBA  EQU   ISTAPCRR+24
@NM00109 EQU   APCRFLG+1
APC58R   EQU   APCRFLG
APC57R   EQU   APCRFLG
APC56R   EQU   APCRFLG
APC54R   EQU   APCRFLG
APC53R   EQU   APCRFLG
APC52R   EQU   APCRFLG
APC51R   EQU   APCRFLG
@NM00108 EQU   APCATFLG+1
APC31E   EQU   APCATFLG
APC58E   EQU   APCATFLG
APC57E   EQU   APCATFLG
APC56E   EQU   APCATFLG
APC54E   EQU   APCATFLG
APC53E   EQU   APCATFLG
APC52E   EQU   APCATFLG
APC51E   EQU   APCATFLG
APCHDRSV EQU   ISTAPCRR
ASCPSREG EQU   ISTASCRR+44
ASCUSR01 EQU   ASCUSRGS+12
ASCUSR00 EQU   ASCUSRGS+8
ASCUSR15 EQU   ASCUSRGS+4
ASCUSR14 EQU   ASCUSRGS
ASCETRYA EQU   ISTASCRR+24
ASCKEY   EQU   ISTASCRR+23
ASCAUDIT EQU   ASCFLG3
ASCFBDUD EQU   ASCFLG3
ASCLLKF  EQU   ASCFLG3
ASCKEYF  EQU   ASCFLG3
ASCFBDAL EQU   ASCFLG3
ASCFSRGT EQU   ASCFLG3
ASCICR   EQU   ASCFLG2
ASCFSRIC EQU   ASCFLG2
ASCFBDIC EQU   ASCFLG2
ASCFBAIC EQU   ASCFLG2
ASCPASTR EQU   ASCFLG1
ASCFSR   EQU   ASCFLG1
ASCFBD   EQU   ASCFLG1
ASCFBA   EQU   ASCFLG1
ASCPFCRR EQU   ISTASCRR
ZCRRU    EQU   ZCRRHRU+3
ZCRRH    EQU   ZCRRHRU
ZCRWORDA EQU   ISTZCRR+477
ZCRCMNRC EQU   ISTZCRR+476
ZCRRSV97 EQU   ZCRENTER+18
ZCREIC2B EQU   ZCRENTER+18
ZCREAC2B EQU   ZCRENTER+18
ZCRELCAB EQU   ZCRENTER+18
ZCREDCMF EQU   ZCRENTER+18
ZCREBCIF EQU   ZCRENTER+18
ZCREICSG EQU   ZCRENTER+18
ZCREDCK0 EQU   ZCRENTER+18
ZCRECFY0 EQU   ZCRENTER+17
ZCREKCCB EQU   ZCRENTER+17
ZCREDCNB EQU   ZCRENTER+17
ZCREICOE EQU   ZCRENTER+17
ZCREBCNB EQU   ZCRENTER+17
ZCREBC0L EQU   ZCRENTER+17
ZCREBCAL EQU   ZCRENTER+17
ZCREDCQR EQU   ZCRENTER+17
ZCREDCPR EQU   ZCRENTER+16
ZCREBCSB EQU   ZCRENTER+16
ZCREAC1R EQU   ZCRENTER+16
ZCRECCCI EQU   ZCRENTER+16
ZCRECCAI EQU   ZCRENTER+16
ZCRECCBI EQU   ZCRENTER+16
ZCREBCAR EQU   ZCRENTER+16
ZCREBCDR EQU   ZCRENTER+16
ZCREBCBR EQU   ZCRENTER+15
ZCREDCXR EQU   ZCRENTER+15
ZCREDCWB EQU   ZCRENTER+15
ZCREDCWR EQU   ZCRENTER+15
ZCREKCCN EQU   ZCRENTER+15
ZCREKCBN EQU   ZCRENTER+15
ZCREKCBB EQU   ZCRENTER+15
ZCREJC0B EQU   ZCRENTER+15
ZCREJCDB EQU   ZCRENTER+14
ZCREJCCB EQU   ZCRENTER+14
ZCREJCBB EQU   ZCRENTER+14
ZCREJCAB EQU   ZCRENTER+14
ZCREIC1B EQU   ZCRENTER+14
ZCREIC0B EQU   ZCRENTER+14
ZCREICX0 EQU   ZCRENTER+14
ZCREICWB EQU   ZCRENTER+14
ZCREICVB EQU   ZCRENTER+13
ZCREICUB EQU   ZCRENTER+13
ZCREICTB EQU   ZCRENTER+13
ZCREICSC EQU   ZCRENTER+13
ZCREICSB EQU   ZCRENTER+13
ZCREICRB EQU   ZCRENTER+13
ZCREICQB EQU   ZCRENTER+13
ZCREICQA EQU   ZCRENTER+13
ZCREICOB EQU   ZCRENTER+12
ZCREICOA EQU   ZCRENTER+12
ZCREICNB EQU   ZCRENTER+12
ZCREICNA EQU   ZCRENTER+12
ZCREICMB EQU   ZCRENTER+12
ZCREICLB EQU   ZCRENTER+12
ZCREICKG EQU   ZCRENTER+12
ZCREICKE EQU   ZCRENTER+12
ZCREICKB EQU   ZCRENTER+11
ZCREICJB EQU   ZCRENTER+11
ZCREICID EQU   ZCRENTER+11
ZCREICIB EQU   ZCRENTER+11
ZCREICHB EQU   ZCRENTER+11
ZCREICGB EQU   ZCRENTER+11
ZCREICEB EQU   ZCRENTER+11
ZCREICDB EQU   ZCRENTER+11
ZCREICCI EQU   ZCRENTER+10
ZCREICCB EQU   ZCRENTER+10
ZCREICBI EQU   ZCRENTER+10
ZCREICBB EQU   ZCRENTER+10
ZCREICAB EQU   ZCRENTER+10
ZCREICAA EQU   ZCRENTER+10
ZCREHCAN EQU   ZCRENTER+10
ZCREGC0B EQU   ZCRENTER+10
ZCREGC0A EQU   ZCRENTER+9
ZCREGCLA EQU   ZCRENTER+9
ZCREGCEB EQU   ZCRENTER+9
ZCREGCDB EQU   ZCRENTER+9
@NM00107 EQU   ZCRENTER+9
ZCREGCBB EQU   ZCRENTER+9
ZCREGCAB EQU   ZCRENTER+9
ZCREFCEB EQU   ZCRENTER+9
ZCREFCEA EQU   ZCRENTER+8
ZCREECTA EQU   ZCRENTER+8
ZCREECEA EQU   ZCRENTER+8
ZCREECDA EQU   ZCRENTER+8
ZCREECCB EQU   ZCRENTER+8
ZCREECCA EQU   ZCRENTER+8
ZCREECBB EQU   ZCRENTER+8
ZCREECBA EQU   ZCRENTER+8
ZCREDCMB EQU   ZCRENTER+7
ZCREDCL0 EQU   ZCRENTER+7
ZCREDCKB EQU   ZCRENTER+7
ZCREDCKA EQU   ZCRENTER+7
ZCREDCJ0 EQU   ZCRENTER+7
ZCREDCI0 EQU   ZCRENTER+7
ZCREDCH0 EQU   ZCRENTER+7
ZCREDCF0 EQU   ZCRENTER+7
ZCREDCE0 EQU   ZCRENTER+6
ZCREDCD0 EQU   ZCRENTER+6
ZCREDCC0 EQU   ZCRENTER+6
ZCREDCB0 EQU   ZCRENTER+6
ZCREDCA0 EQU   ZCRENTER+6
ZCRECC2B EQU   ZCRENTER+6
ZCRECC1B EQU   ZCRENTER+6
ZCRECC1A EQU   ZCRENTER+6
ZCRECC0B EQU   ZCRENTER+5
ZCRECC0A EQU   ZCRENTER+5
ZCREBC0B EQU   ZCRENTER+5
ZCREBC0A EQU   ZCRENTER+5
ZCREBCZ0 EQU   ZCRENTER+5
ZCREBCY0 EQU   ZCRENTER+5
ZCREBCX0 EQU   ZCRENTER+5
ZCREBCXA EQU   ZCRENTER+5
ZCREBCSC EQU   ZCRENTER+4
ZCREBCRB EQU   ZCRENTER+4
ZCREBCRA EQU   ZCRENTER+4
ZCREBCQB EQU   ZCRENTER+4
ZCREBCPB EQU   ZCRENTER+4
ZCREBCOB EQU   ZCRENTER+4
ZCREBCNE EQU   ZCRENTER+4
ZCREBCND EQU   ZCRENTER+4
ZCREBCMB EQU   ZCRENTER+3
ZCREBCLB EQU   ZCRENTER+3
ZCREBCLA EQU   ZCRENTER+3
ZCREBCKB EQU   ZCRENTER+3
ZCREBCKA EQU   ZCRENTER+3
ZCREBCJB EQU   ZCRENTER+3
ZCREBCJA EQU   ZCRENTER+3
ZCREBCID EQU   ZCRENTER+3
ZCREBCIB EQU   ZCRENTER+2
ZCREBCIA EQU   ZCRENTER+2
ZCREBCHB EQU   ZCRENTER+2
ZCREBCHA EQU   ZCRENTER+2
ZCREBCGB EQU   ZCRENTER+2
ZCREBCGA EQU   ZCRENTER+2
ZCREBCFB EQU   ZCRENTER+2
ZCREBCFA EQU   ZCRENTER+2
ZCREBCEB EQU   ZCRENTER+1
ZCREBCDI EQU   ZCRENTER+1
ZCREBCCB EQU   ZCRENTER+1
ZCREBCBI EQU   ZCRENTER+1
ZCREBCBB EQU   ZCRENTER+1
ZCREBCBA EQU   ZCRENTER+1
ZCREBCAM EQU   ZCRENTER+1
ZCREBCAI EQU   ZCRENTER+1
ZCREBCAG EQU   ZCRENTER
ZCREBCAE EQU   ZCRENTER
ZCREBCAB EQU   ZCRENTER
ZCREBCAA EQU   ZCRENTER
ZCREAC1B EQU   ZCRENTER
ZCREAC0B EQU   ZCRENTER
ZCREAC0A EQU   ZCRENTER
ZCREAC1A EQU   ZCRENTER
ZCRTNAME EQU   ZCRAUDIT+1
ZCRTID   EQU   ZCRAUDIT
ZCRREMIC EQU   ISTZCRR+436
ZCRSAVEZ EQU   ISTZCRR+196
ZCRDAFSV EQU   ZCRCIDSV+2
ZCRSAFSV EQU   ZCRCIDSV
ZCRR13SV EQU   ISTZCRR+188
ZCRR2SV  EQU   ISTZCRR+184
ZCROPCDE EQU   ISTZCRR+183
ZCRPRMTC EQU   ISTZCRR+182
ZCRRCDSV EQU   ISTZCRR+181
ZCRAWQSW EQU   ISTZCRR+180
ZCRTOPQ  EQU   ISTZCRR+180
ZCRLSTFB EQU   ISTZCRR+180
ZCRXSCHD EQU   ISTZCRR+180
ZCRNXTEL EQU   ISTZCRR+180
ZCRSCANQ EQU   ISTZCRR+180
ZCRMOREL EQU   ISTZCRR+180
ZCRFBPRC EQU   ISTZCRR+180
ZCRFSBSV EQU   ISTZCRR+176
ZCRSVWK5 EQU   ZCRWKARA+16
ZCRSVWK4 EQU   ZCRWKARA+12
ZCRSVWK3 EQU   ZCRWKARA+8
ZCRSVWK2 EQU   ZCRWKARA+4
ZCRSVWK1 EQU   ZCRWKARA
ZCRSVF25 EQU   ZCRSVRTN+96
ZCRSVF24 EQU   ZCRSVRTN+92
ZCRSVF23 EQU   ZCRSVRTN+88
ZCRSVF22 EQU   ZCRSVRTN+84
ZCRSVF21 EQU   ZCRSVRTN+80
ZCRSVF20 EQU   ZCRSVRTN+76
ZCRSVF19 EQU   ZCRSVRTN+72
ZCRSVF18 EQU   ZCRSVRTN+68
ZCRSVF17 EQU   ZCRSVRTN+64
ZCRSVF16 EQU   ZCRSVRTN+60
ZCRSVF15 EQU   ZCRSVRTN+56
ZCRSVF14 EQU   ZCRSVRTN+52
ZCRSVF13 EQU   ZCRSVRTN+48
ZCRSVF12 EQU   ZCRSVRTN+44
ZCRSVF11 EQU   ZCRSVRTN+40
ZCRSVF10 EQU   ZCRSVRTN+36
ZCRSVF9  EQU   ZCRSVRTN+32
ZCRSVF8  EQU   ZCRSVRTN+28
ZCRSVF7  EQU   ZCRSVRTN+24
ZCRSVF6  EQU   ZCRSVRTN+20
ZCRSVF5  EQU   ZCRSVRTN+16
ZCRSVF4  EQU   ZCRSVRTN+12
ZCRSVF3  EQU   ZCRSVRTN+8
ZCRSVF2  EQU   ZCRSVRTN+4
ZCRSVF1  EQU   ZCRSVRTN
ZCRPVZB  EQU   ISTZCRR+52
ZCRZLB   EQU   ISTZCRR+48
ZCRBFPTR EQU   ISTZCRR+44
ZCRCCWA  EQU   ISTZCRR+40
ZCRPSW   EQU   ZCRPARMS+15
ZCRPCHAR EQU   ZCRPARMS+14
ZCRPRES2 EQU   ZCRPCOD2
ZCRPMFGF EQU   ZCRPCOD2
ZCRPFHDR EQU   ZCRPCOD2
ZCRPPG2  EQU   ZCRPCOD2
ZCRPRES  EQU   ZCRPCOD1
ZCRPCFTX EQU   ZCRPCOD1
ZCRPBUF  EQU   ZCRPCOD1
ZCRPLSCB EQU   ZCRPCOD1
ZCRPLSBQ EQU   ZCRPLSBF
ZCRPFSB  EQU   ZCRPCOD1
ZCRPLNG  EQU   ZCRPCOD1
ZCRPPG   EQU   ZCRPCOD1
ZCRDTODA EQU   ZCRDFRDA
ZCRMLNG  EQU   ZCRPARMS+8
ZCRTBPTR EQU   ZCRPARMS+4
ZCRCBPTR EQU   ZCRFBPTR
ZCRCRLCP EQU   ISTZCRR+20
@NM00106 EQU   ZCRSCPSW
ZCRSKIPT EQU   ZCRSCPSW
ZCRFSBWE EQU   ZCRSCPSW
ZCRPRCMP EQU   ZCRSCPSW
ZCRLREQ  EQU   ZCRSCPSW
ZCRRJLCP EQU   ZCRSCPSW
ZCRTPINV EQU   ZCRSCPSW
ZCRTPEX  EQU   ZCRSCPSW
@NM00105 EQU   ZCRIBPR
ZCR3270R EQU   ZCRIBPR
ZCR3270  EQU   ZCRIBPR
ZCRLCPFD EQU   ZCRIBPR
ZCRLCPFR EQU   ZCRIBPR
ZCRRELK  EQU   ZCRIBPR
ZCRERR   EQU   ZCRIBPR
ZCRNOBUF EQU   ZCRIBPR
@NM00104 EQU   ZCRPFLGS
ZCRQAHED EQU   ZCRPFLGS
ZCRF1RES EQU   ZCRGENSW
ZCRBRIS  EQU   ZCRGENSW
ZCRCLRBD EQU   ZCRGENSW
ZCREXRES EQU   ZCRGENSW
ZCRLCSYN EQU   ZCRGENSW
ZCRRT06  EQU   ZCRGENSW
ZCRTSW2  EQU   ZCRGENSW
ZCRTSW1  EQU   ZCRGENSW
ZCRINLCP EQU   ZCRFLGS3
ZCRWRPTR EQU   ZCRFLGS3
ZCRNOFRE EQU   ZCRFLGS3
ZCREDRIV EQU   ZCRFLGS3
ZCRDISC  EQU   ZCRFLGS3
ZCRTPDIS EQU   ZCRFLGS3
ZCRTPCON EQU   ZCRFLGS3
ZCRTIC   EQU   ZCRFLGS3
ZCRCNLXL EQU   ZCRRESET
ZCRENDAN EQU   ZCRSWFLD
ZCRENDXL EQU   ZCRSWFLD
ZCRENDX  EQU   ZCRSWFLD
ZCROB1   EQU   ZCRNDLCP
ZCRENDPR EQU   ZCRSWFLD
ZCREXTYP EQU   ZCRSWFLD
ZCRSLCP  EQU   ZCRENDSH
ZCRIF0E3 EQU   ZCRFLGS2
ZCRIF0E2 EQU   ZCRFLGS2
ZCRIF0E1 EQU   ZCRFLGS2
ZCROB    EQU   ZCRFLGS2
ZCRFMSED EQU   ZCRFLGS2
ZCRSHEDI EQU   ZCRFLGS2
ZCRLOCAL EQU   ZCRFLGS2
ZCRFEXIT EQU   ZCRFLGS1
ZCRUNSOL EQU   ZCRFLGS1
ZCRENDLP EQU   ZCRFLGS1
ZCRNRMEX EQU   ZCRFLGS1
ZCRWAIT  EQU   ZCRFLGS1
ZCRDEQSW EQU   ZCRFLGS1
ZCRQUESW EQU   ZCRFLGS1
ZCREXSW  EQU   ZCRFLGS1
ZCRFRRA  EQU   ISTZCRR+8
ZCRCHAIN EQU   ISTZCRR+4
ZCRFLAG  EQU   ZCRCRR+3
ZCRLEN   EQU   ZCRCRR+1
ZCRID    EQU   ZCRCRR
CCFRSVD1 EQU   CFCCRT
CCFCR2   EQU   CFCCRT
CCFCRP   EQU   CFCCRT
CCFCR1   EQU   CFCCRT
CCFCS2   EQU   CFCCRT
CCFCS1   EQU   CFCCRT
NCFRSVD  EQU   CFCNTRD
NCFCR2   EQU   CFCNTRD
NCFCRP   EQU   CFCNTRD
NCFCR1   EQU   CFCNTRD
NCFCS2   EQU   CFCNTRD
NCFCS1   EQU   CFCNTRD
PFCRSV01 EQU   ISTPFCRR+13
PFCFTA   EQU   ISTPFCRR+12
CRRFRR   EQU   PFCFRRO
CRRCHAIN EQU   PFCCRRO
CRRLEN   EQU   PFCCRRLN
PFCRSV10 EQU   PFCCRR+1
CRRID    EQU   PFCCRRID
ZSAZTRAC EQU   ISTZSAVE+36
ZSAZSVVR EQU   ISTZSAVE+12
ZSAZSVRR EQU   ISTZSAVE+8
ZSAZSVFC EQU   ISTZSAVE+4
ZSAZACTV EQU   ZSAZSVMS
LCPFTYPE EQU   LCPRPHA
LCPRSTQH EQU   LCPLCCW
LCPCLREP EQU   ISTLCPB+44
LCPUBFSB EQU   LCPFLCCW
LCPRSV77 EQU   ISTLCPB+39
LCPLCCWC EQU   ISTLCPB+38
LCPRSV78 EQU   LCPFLG1
LCPTRANS EQU   LCPFLG1
LCPSTLB  EQU   LCPFLG1
LCPREDRV EQU   LCPFLG1
LCPDIRPT EQU   LCPFLG1
LCPINTER EQU   LCPFLG1
LCPRESET EQU   LCPFLG1
LCPSTYPE EQU   ISTLCPB+36
LCPFSNCH EQU   ISTLCPB+34
LCPFOSN  EQU   ISTLCPB+32
LCPTLBAD EQU   ISTLCPB+28
LCPFDB2  EQU   LCPFDBA+1
LCPFDB1  EQU   LCPFDBA
LCPNXLCW EQU   ISTLCPB+20
LCPDAF   EQU   LCPCID+2
LCPSAF   EQU   LCPCID
LCPLCCW1 EQU   ISTLCPB+12
LCPRRCNT EQU   LCPSEQ+1
LCPRRCCT EQU   LCPSEQ
LCPATOP  EQU   LCPFLAG2
LCPFREE  EQU   LCPFLAG2
LCPDSTAT EQU   LCPFLAG2
LCPEXRES EQU   LCPFID0
LCPZRIMM EQU   LCPTLBPI
LCPRSTRT EQU   LCPFLAG2
LCPASYN  EQU   LCPFLAG2
LCPPRFLG EQU   LCPFLAG2
LCPZMIRC EQU   LCPRUCNT
LCPCHAI2 EQU   LCPCHAIN+1
LCPCHNG  EQU   LCPCHAI1
LCPZRT0B EQU   LCPMNRCD
LCPZRT0A EQU   LCPMNRCD
LCPZRTL9 EQU   LCPZRT09
LCPZRTL8 EQU   LCPZRT08
LCPZRTL7 EQU   LCPZRT07
LCPZRTL6 EQU   LCPZRT06
LCPZRTL5 EQU   LCPZRT05
LCPZRTL4 EQU   LCPZRT04
LCPZRTL3 EQU   LCPZRT03
LCPZRTL2 EQU   LCPZRT02
LCPZRT01 EQU   LCPFLAGS
LCPZRT00 EQU   LCPFLAGS
LCPLNGTH EQU   ISTLCPB+1
LCPTYPE  EQU   ISTLCPB
LCCWDATA EQU   ISTLCCW+4
LCCWCNT  EQU   ISTLCCW+2
LCCWACI  EQU   LCCWFLAG
LCCWRFI  EQU   LCCWFLAG
LCCWPER  EQU   LCCWLSI
LCCWIDAT EQU   LCCWFLAG
LCCWNTVC EQU   LCCWFLAG
LCCWCKPT EQU   LCCWFLAG
LCCWCC   EQU   LCCWFLAG
LCCWCD   EQU   LCCWFLAG
LCCWTYPE EQU   LCCWCTL
LCCWMODE EQU   LCCWCTL
LCCWSOP  EQU   LCCWRWOP
@NM00103 EQU   LCCWRWOP
LCCWSD   EQU   LCCWOP
LCCWSI   EQU   LCCWOP
ATCAOS   EQU   ISTATCVT+1584
ATCPOPAB EQU   ATCAOSM+640
ATCVIOPM EQU   ATCAOSM+636
ATCTPMMI EQU   ATCAOSM+632
ATCTPMPB EQU   ATCAOSM+600
ATCRSV88 EQU   ATCAOSM+596
ATCRPLCT EQU   ATCAOSM+594
ATCCRACT EQU   ATCAOSM+592
ATCSRBCT EQU   ATCAOSM+590
ATCRSV75 EQU   ATCAOSM+589
ATCRSV66 EQU   ATCZFLAG
ATCZF001 EQU   ATCZFLAG
ATCTPCP1 EQU   ATCAOSM+584
ATCTPCP0 EQU   ATCAOSM+580
ATCAICTN EQU   ATCAOSM+576
ATCZR01  EQU   ATCAOSM+572
ATCMPLTA EQU   ATCAOSM+568
ATCASCB  EQU   ATCAOSM+564
ATCAP86  EQU   ATCAOSM+560
ATCAP85  EQU   ATCAOSM+556
ATCAP84  EQU   ATCAOSM+552
ATCAP83  EQU   ATCAOSM+548
ATCAP82  EQU   ATCAOSM+544
ATCAP66  EQU   ATCAOSM+536
ATCAP62  EQU   ATCAOSM+532
ATCAPC59 EQU   ATCAOSM+528
ATCAP56  EQU   ATCAOSM+524
ATCAP55  EQU   ATCAOSM+520
ATCRCFY0 EQU   ATCAOSM+516
ATCAPC25 EQU   ATCAOSM+508
ATCAP23  EQU   ATCAOSM+504
ATCTPSPB EQU   ATCAOSM+472
ATCTRMPB EQU   ATCAOSM+440
ATCAPBE  EQU   ATCAOSM+436
ATCPSTA  EQU   ATCAOSM+432
ATCSMABF EQU   ATCAOSM+428
ATCSMAPR EQU   ATCAOSM+424
ATCTPWQA EQU   ATCAOSM+420
ATCSMAID EQU   ATCAOSM+416
ATCSMARA EQU   ATCAOSM+412
ATCCACXA EQU   ATCAOSM+408
ATCZLAAB EQU   ATCAOSM+404
ATCATA10 EQU   ATCAOSM+400
ATCHLTCB EQU   ATCAOSM+396
@NM00102 EQU   ATCVTFLG
ATCVTACT EQU   ATCVTFLG
ATCRPT40 EQU   ATCAOSM+388
ATCRPT39 EQU   ATCAOSM+384
ATCRPT38 EQU   ATCAOSM+380
ATCRPT37 EQU   ATCAOSM+376
ATCRPT36 EQU   ATCAOSM+372
ATCRPT35 EQU   ATCAOSM+368
ATCRPT34 EQU   ATCAOSM+364
ATCRPT33 EQU   ATCAOSM+360
ATCRPT32 EQU   ATCAOSM+356
ATCRPT31 EQU   ATCAOSM+352
ATCRPT30 EQU   ATCAOSM+348
ATCRPT29 EQU   ATCAOSM+344
ATCRPT28 EQU   ATCAOSM+340
ATCRPT27 EQU   ATCAOSM+336
@NM00101 EQU   ATCAOSM+333
@NM00100 EQU   @NM00099
ATCSNUF  EQU   @NM00099
ATCOPKL  EQU   @NM00099
ATCAIWT  EQU   ATCAOSM+328
ATCINFDD EQU   ATCAOSM+324
ATCORFMG EQU   ATCAOSM+320
ATCORFRL EQU   ATCAOSM+316
ATCOROBT EQU   ATCAOSM+312
ATCORQG  EQU   ATCORSRB
ATCORTBF EQU   ATCSQAFR
ATCRPLAC EQU   ATCRPLCN+2
ATCRPLRC EQU   ATCRPLCN
ATCCRPLQ EQU   ATCCRPL
ATCSRBAC EQU   ATCSRBCN+2
ATCSRBRC EQU   ATCSRBCN
ATCSRBQ  EQU   ATCSRB
ATCCRAAC EQU   ATCCRACN+2
ATCCRARC EQU   ATCCRACN
ATCCRAQ  EQU   ATCCRA
ATCRPT12 EQU   ATCAOSM+276
ATCDMAPP EQU   ATCAOSM+272
ATCAP38  EQU   ATCAOSM+268
ATCAP37  EQU   ATCAOSM+264
ATCZDFJ0 EQU   ATCAOSM+260
ATCAP51  EQU   ATCAOSM+256
ATCZPAB2 EQU   ATCAOSM+224
ATCZPAB1 EQU   ATCAOSM+192
ATCZLFVT EQU   ATCAOSM+188
ATCZLPVT EQU   ATCAOSM+184
ATCZDVTX EQU   ATCAOSM+180
ATCZDVTA EQU   ATCAOSM+176
ATCZDVT9 EQU   ATCAOSM+172
ATCZDVT8 EQU   ATCAOSM+168
ATCZDVT7 EQU   ATCAOSM+164
ATCRSV56 EQU   ATCDAPVT+22
ATCDAPDG EQU   ATCDAPVT+20
ATCDXCEA EQU   ATCDAPVT+16
ATCDCEA  EQU   ATCDAPVT+12
ATCDPCIA EQU   ATCDAPVT+8
ATCDSIOA EQU   ATCDAPVT+4
ATCDEOEA EQU   ATCDAPVT
ATCZLAEA EQU   ATCLDAPP+16
ATCZLCEA EQU   ATCLDAPP+12
ATCRSV17 EQU   ATCLDAPP+8
ATCSMFRR EQU   ATCLDAPP+4
ATCCDTID EQU   ATCLDAPP
ATCZAEA  EQU   ATCICAPP+16
ATCZCEA  EQU   ATCICAPP+12
ATCZSIOA EQU   ATCICAPP+4
ATCCDRPH EQU   ATCICAPP
ATCAP65  EQU   ATCAOSM+96
ATCZDVT6 EQU   ATCAOSM+92
ATCZDVT4 EQU   ATCAOSM+88
ATCZDVT3 EQU   ATCAOSM+84
ATCZDVT1 EQU   ATCAOSM+80
ATCICNCB EQU   ATCAOSM+76
ATCZPSVT EQU   ATCAOSM+72
ATCZFSVT EQU   ATCAOSM+68
ATCAP61  EQU   ATCAOSM+56
ATCAP58  EQU   ATCAOSM+52
ATCAP57  EQU   ATCAOSM+48
ATCAP54  EQU   ATCAOSM+44
ATCAP53  EQU   ATCAOSM+40
ATCAP52  EQU   ATCAOSM+36
ATCAP34  EQU   ATCAOSM+32
ATCAP31  EQU   ATCAOSM+24
ATCAP12  EQU   ATCAOSM+20
ATCAP11  EQU   ATCAOSM+16
ATCCMTCB EQU   ATCAOSM+12
ATCPRPH  EQU   ATCAOSM+8
ATCGSRBF EQU   ATCGSRBG
ATCSRBRT EQU   ATCAOSM
@NM00098 EQU   @NM00097
@NM00096 EQU   ATCVTBAM
ATCVDLOK EQU   ISTATCVT+904
ATCVFPAB EQU   ISTATCVT+872
ATCVDPAB EQU   ISTATCVT+840
ATCIOECB EQU   ISTATCVT+836
ATCINCW3 EQU   ISTATCVT+832
ATCMODTB EQU   ISTATCVT+828
ATCUSSPT EQU   ISTATCVT+824
ATCSRTAB EQU   ISTATCVT+820
@NM00095 EQU   ISTATCVT+819
@NM00094 EQU   ATCSTAT2
ATCTRSMS EQU   ATCSTAT2
ATCTRLOK EQU   ATCSTAT2
ATCTRPSS EQU   ATCSTAT2
ATCTRESC EQU   ATCSTAT2
ATCTRAPI EQU   ATCSTAT2
ATCNMCTR EQU   ISTATCVT+816
ATCSEC51 EQU   ATCSECST
ATCSEC40 EQU   ATCSIPD+8
ATCSEC30 EQU   ATCSIPD+4
ATCSEC21 EQU   ATCSIPD
ATCSEC10 EQU   ATCSOPD+4
ATCSEC01 EQU   ATCSOPD
ATCPOIA  EQU   ATCRNO+1
@NM00093 EQU   ATCRNO
ATCPODVT EQU   ISTATCVT+784
ATCS49XL EQU   ISTATCVT+780
ATCS49XI EQU   ISTATCVT+776
ATCLCLCT EQU   ATCVLCNT+2
ATCRNCNT EQU   ATCVLCNT
ATCCFEAD EQU   ISTATCVT+768
ATCPTR00 EQU   ISTATCVT+736
ATCRSV10 EQU   ISTATCVT+704
ATCTACB  EQU   ISTATCVT+700
ATCVTINM EQU   ISTATCVT+696
ATCTCLIM EQU   ISTATCVT+692
ATCTCLOM EQU   ISTATCVT+688
ATCVTIPB EQU   ISTATCVT+656
ATCTCIPB EQU   ISTATCVT+624
ATCTIPAB EQU   ISTATCVT+592
ATCOCCCB EQU   ISTATCVT+588
ATCOCCOB EQU   ISTATCVT+584
ATCCDLAD EQU   ISTATCVT+580
ATCCCLAD EQU   ISTATCVT+576
ATCDLRPB EQU   ISTATCVT+544
ATCPGPAB EQU   ISTATCVT+512
ATCVPAB1 EQU   ISTATCVT+480
ATCRSV97 EQU   ISTATCVT+476
ATCRDTLK EQU   ISTATCVT+472
ATCVOCLK EQU   ISTATCVT+468
ATCCDFDN EQU   ISTATCVT+464
ATCCDFIN EQU   ISTATCVT+460
ATCDVTLK EQU   ISTATCVT+456
ATCAP36  EQU   ISTATCVT+452
ATCAP35  EQU   ISTATCVT+448
ATCAP33  EQU   ISTATCVT+444
ATCRSV99 EQU   ISTATCVT+440
ATCONFIG EQU   ISTATCVT+432
ATCNODDS EQU   ISTATCVT+428
ATCNODEL EQU   ISTATCVT+420
ATCRSV69 EQU   ISTATCVT+416
ATCAPCR5 EQU   ISTATCVT+412
ATCLDECB EQU   ISTATCVT+408
ATCLDNCS EQU   ISTATCVT+404
ATCCDPTR EQU   ISTATCVT+400
ATCADEL  EQU   ISTATCVT+396
ATCTODVT EQU   ISTATCVT+392
ATCDEBCH EQU   ISTATCVT+388
ATCHBSIZ EQU   ATCHPGM+2
ATCHBFNO EQU   ATCHPGM
ATCCRME  EQU   ISTATCVT+380
ATCRVCHS EQU   ISTATCVT+372
ATCECTLP EQU   ISTATCVT+368
ATCZDVTB EQU   ISTATCVT+364
ATCECPRT EQU   ISTATCVT+360
ATCVTLOD EQU   ISTATCVT+356
ATCTRPAB EQU   ISTATCVT+352
ATCMSGM  EQU   ISTATCVT+348
ATCEPT   EQU   ISTATCVT+340
ATCDVT   EQU   ISTATCVT+336
ATCTRCPT EQU   ISTATCVT+332
ATCDVLOD EQU   ISTATCVT+328
ATCALERT EQU   ISTATCVT+324
ATCEPA   EQU   ISTATCVT+320
ATCSAF   EQU   ISTATCVT+318
ATCXRANG EQU   ISTATCVT+317
ATCLAST  EQU   ATCSHRFG
ATCSHRTN EQU   ISTATCVT+308
ATCUEP   EQU   ISTATCVT+304
ATCOCRT  EQU   ISTATCVT+300
ATCCSMA  EQU   ATCCSMR
ATCESC02 EQU   ISTATCVT+292
ATCESC01 EQU   ISTATCVT+288
ATCCDFND EQU   ISTATCVT+284
ATCCDDEL EQU   ISTATCVT+280
ATCCDADD EQU   ISTATCVT+276
ATCMNT   EQU   ISTATCVT+272
ATCRSV16 EQU   ISTATCVT+270
ATCMAXID EQU   ISTATCVT+269
ATCMSGSP EQU   ATCCOM+268
ATCCIDM  EQU   ATCCOM+266
ATCACTRM EQU   ATCCOM+264
ATCNERAP EQU   ATCCOM+260
ATCNESAL EQU   ATCCOM+256
ATCRCC65 EQU   ATCCOM+252
ATCRCC26 EQU   ATCCOM+248
ATCRCC63 EQU   ATCCOM+244
ATCRSV11 EQU   ATCCOM+242
ATCVTMID EQU   ATCCOM+240
ATCAPOST EQU   ATCCOM+236
ATCNERFN EQU   ATCCOM+232
ATCNERNE EQU   ATCCOM+228
ATCNERCV EQU   ATCCOM+224
ATCNERST EQU   ATCCOM+220
ATCDCC61 EQU   ATCCOM+216
ATCDCC60 EQU   ATCCOM+212
ATCSRTDF EQU   ATCCOM+208
ATCSRTAD EQU   ATCCOM+204
ATCFIRA  EQU   ATCCOM+200
ATCSMBQ  EQU   ATCCOM+196
ATCSMRC  EQU   ATCCOM+192
ATCSMQU  EQU   ATCCOM+184
ATCACDA  EQU   ATCCOM+176
ATCSTMA  EQU   ATCCOM+172
ATCFRSTR EQU   ATCCOM+168
ATCGTSTR EQU   ATCCOM+164
ATCREADA EQU   ATCCOM+160
ATCALOAD EQU   ATCCOM+156
ATCBLDLA EQU   ATCCOM+152
ATCFBRPH EQU   ATCCOM+148
ATCBFTRC EQU   ATCCOM+144
ATCTPBUF EQU   ATCTHTRC
ATCREMOV EQU   ATCCOM+136
ATCADD   EQU   ATCCOM+132
ATCBPDA  EQU   ATCCOM+128
ATCDVTPT EQU   ATCCOM+124
ATCFEPT  EQU   ATCCOM+120
ATCFDVT  EQU   ATCCOM+116
ATCCONFT EQU   ATCCOM+112
ATCPTCHA EQU   ATCCOM+108
ATCAUTHA EQU   ATCCOM+104
ATCACCTA EQU   ATCCOM+100
ATCRDTH  EQU   ATCCOM+96
ATCFRSCH EQU   ATCCOM+92
ATCFSB   EQU   ATCCOM+88
ATCHLTMS EQU   ATCCOM+84
ATCECPRM EQU   ATCCOM+80
ATCECNET EQU   ATCCOM+76
ATCECOPC EQU   ATCCOM+72
ATCVPARM EQU   ATCCOM+68
ATCECVRQ EQU   ATCCOM+64
ATCECSES EQU   ATCCOM+60
ATCOCHA  EQU   ATCCOM+56
ATCDSPLQ EQU   ATCCOM+52
ATCECDSP EQU   ATCCOM+48
ATCVARYQ EQU   ATCCOM+44
ATCECVRY EQU   ATCCOM+40
ATCHALTQ EQU   ATCCOM+36
ATCECHLT EQU   ATCCOM+32
ATCMODQ  EQU   ATCCOM+28
ATCECMOD EQU   ATCCOM+24
ATCASCHD EQU   ATCCOM+20
ATCSRT   EQU   ATCCOM+16
ATCRDT   EQU   ATCCOM+12
ATCDCFRR EQU   ATCCOM+8
ATCAPI   EQU   ATCCOM+4
ATCRSV04 EQU   ATCSTAT4
ATCVTTRC EQU   ATCSTAT4
ATCNCSD  EQU   ATCSTAT4
ATCMTST  EQU   ATCSTAT4
ATCTPRT  EQU   ATCSTAT4
ATCPRTAT EQU   ATCSTAT4
@NM00092 EQU   ATCPOFLG
ATCPOUNS EQU   ATCPOFLG
ATCHSDMF EQU   ATCSTFLG
@NM00091 EQU   ATCSTAT1
ATCMDHLT EQU   ATCSTAT1
ATCINHLT EQU   ATCSTAT1
ATCNETSL EQU   ATCSTAT1
ATCQKHLT EQU   ATCSTAT1
ATCSNHLT EQU   ATCSTAT1
ATCACTIV EQU   ATCSTAT1
ATCSTART EQU   ATCSTAT1
RPHNEXPO EQU   ISTRPH+104
RPHSAV16 EQU   RPHWORK+60
RPHSAV15 EQU   RPHWORK+56
RPHSAV14 EQU   RPHWORK+52
RPHSAV13 EQU   RPHWORK+48
RPHSAV12 EQU   RPHWORK+44
RPHSAV11 EQU   RPHWORK+40
RPHSAV10 EQU   RPHWORK+36
RPHSAVE9 EQU   RPHWORK+32
RPHSAVE8 EQU   RPHWORK+28
RPHSAVE7 EQU   RPHWORK+24
RPHSAVE6 EQU   RPHWORK+20
RPHSAVE5 EQU   RPHWORK+16
RPHSAVE4 EQU   RPHWORK+12
RPHSAVE3 EQU   RPHWORK+8
RPHSAVE2 EQU   RPHWORK+4
RPHSHALF EQU   RPHSAVE1+2
RPHSBIT8 EQU   RPHSBITS
RPHSBIT7 EQU   RPHSBITS
RPHSBIT6 EQU   RPHSBITS
RPHSBIT5 EQU   RPHSBITS
RPHSBIT4 EQU   RPHSBITS
RPHSBIT3 EQU   RPHSBITS
RPHSBIT2 EQU   RPHSBITS
RPHSBIT1 EQU   RPHSBITS
RPHSBYTE EQU   RPHSAVE1
RPHPABFG EQU   RPHPABQA
RPHSRP34 EQU   RPHSRPRM+2
RPHSRP12 EQU   RPHSRPRM
RPHWEGT  EQU   RPHCSPA
RPHRESUM EQU   RPHRESMA+1
RPHRSV01 EQU   RPHWPFLG
RPHPT    EQU   RPHWPFLG
RPHWT    EQU   RPHWPFLG
RPHRSKEY EQU   RPHWPFLG
RPHDVTA  EQU   ISTRPH+12
RPHTIK   EQU   RPHTSKID+3
@NM00090 EQU   RPHTSKID
RPHRPHAP EQU   RPHRPHA+1
@NM00089 EQU   RPHRPHA
RPHGATE  EQU   RPHRPHA
@NM00088 EQU   RPHFLGB
RPHRLCRA EQU   RPHFLGB
RPHNRSAV EQU   RPHFLGB
RPHPGCMP EQU   RPHFLGB
RPHFBAPS EQU   RPHFLGB
RPHBSSP  EQU   RPHFLGB
RPHLOCK  EQU   RPHFLGB
RPHFNFLG EQU   RPHFSTLC
RPHMLTCP EQU   RPHFLAGS
RPHSMCLR EQU   RPHFLAGS
RPHSMTYP EQU   RPHFLAGS
RPHSMQ   EQU   RPHFLAGS
RPHAUTEX EQU   RPHAPTYP
RPHSPGIN EQU   RPHFLAGS
RPHOGIND EQU   RPHFLAGS
RPHLNGTH EQU   RPHCNTL+1
RPHTYPE  EQU   RPHCNTL
DYPRSV01 EQU   ISTDYPAB+12
DYPCHAIN EQU   ISTDYPAB+4
DYPFLGS  EQU   ISTDYPAB+2
DYPLNGTH EQU   ISTDYPAB+1
DYPTYPE  EQU   ISTDYPAB
LOKXCL   EQU   @NM00086
LOKPRY   EQU   @NM00086
@NM00087 EQU   @NM00086
@NM00085 EQU   LOKCHNG
LOKCT    EQU   ISTLOK
PABNODQ  EQU   PABFLAGS
PABINHBT EQU   PABFLAGS
PABERLOK EQU   PABERRLK
PABSSN   EQU   PABFLAGS
PABNORPR EQU   PABFLAGS
PABPRIOR EQU   PABFLAGS
PABAPYP  EQU   PABFLAGS
PABDVTA  EQU   ISTPAB+9
PABRSV02 EQU   PABCHAIN
PABDELAY EQU   PABCHAIN
PABRUNNG EQU   PABCHAIN
PABRESET EQU   PABCHAIN
PABUNCON EQU   PABCHAIN
PABCDP   EQU   PABCHAIN
PABRESCH EQU   PABCHAIN
PABCHNG  EQU   PABCHAIN
PABWEQP  EQU   PABWEQA+1
PABRSV01 EQU   PABWEQA
PABWEQG  EQU   PABWEQA
@NM00082 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00081 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00080 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00079 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
FRRSPARM EQU   FRRSENTR+8
@NM00078 EQU   FRRSFLGS+1
@NM00077 EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSFRRA EQU   FRRSENTR
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
FRRSLAST EQU   FRRSHEAD+4
@NM00052 EQU   SDWA+512
@NM00051 EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00050 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00049 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00048 EQU   SDWADDAT+3
@NM00047 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00046 EQU   SDWADDAT+1
@NM00045 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00044 EQU   SDWADUMP+2
@NM00043 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00042 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWACSCT EQU   SDWARECP+8
@NM00041 EQU   SDWALKWA+32
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00040 EQU   SDWAACF3
@NM00039 EQU   SDWAACF2
@NM00038 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00037 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00036 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00035 EQU   SDWA+239
@NM00034 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00033 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00032 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00031 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00030 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00029 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00028 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00027 EQU   SDWAINC2
@NM00026 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00025 EQU   SDWAILC2
@NM00024 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00023 EQU   SDWANXT2
@NM00022 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00021 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00020 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00019 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00018 EQU   SDWAINC1
@NM00017 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00016 EQU   SDWAILC1
@NM00015 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00014 EQU   SDWANXT1
@NM00013 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00012 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00011 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00010 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00009 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00008 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00007 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00006 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00005 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
@NM00004 EQU   SRBSECT+40
@NM00003 EQU   SRBSECT+38
SRBPRIOR EQU   SRBSECT+37
SRBPKF   EQU   SRBSECT+36
SRBSAVE  EQU   SRBSECT+32
SRBPARM  EQU   SRBSECT+28
SRBRMTR  EQU   SRBSECT+24
SRBEP    EQU   SRBSECT+20
SRBPTCB  EQU   SRBFLC+4
SRBPASID EQU   SRBFLC+2
SRBCPAFF EQU   SRBFLC
SRBASCB  EQU   SRBSECT+8
SRBFLNK  EQU   SRBSECT+4
SRBID    EQU   SRBSECT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTSHSB  EQU   CVTSHS
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00076 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00075 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00074 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00073 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSARV011 EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSARV063 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00072 EQU   FLCFSA
@NM00071 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00070 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00069 EQU   FLCIOA
@NM00068 EQU   FLCMCLA+15
@NM00067 EQU   FLCMCLA+14
@NM00066 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00065 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00064 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00063 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00062 EQU   FLCPER
@NM00061 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00060 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00059 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00058 EQU   FLCPIILC
@NM00057 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00056 EQU   FLCSVILC
@NM00055 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00054 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00053 EQU   FLCICCW2+4
FLCCVT   EQU   FLCICCW2
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RC00373 EQU   @RC00371
@RC00424 EQU   @RC00415
@RC00456 EQU   @RC00415
@RF00580 EQU   @RC00578
@RC00588 EQU   @RC00578
@RC00377 EQU   @RC00373
@ENDDATA EQU   *
         END   ISTAPC61,(C'PLS1856',0603,77266)
