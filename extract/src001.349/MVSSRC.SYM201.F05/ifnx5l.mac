* /* START OF SPECIFICATIONS ****
*02* PROCESSOR = ASSEMBLER
**** END OF SPECIFICATIONS ***/
         GBLC  &COMPNM,&ASMID
         JHEAD 'ASSEMBLY PHASE - ERROR LOGGING ROUTINE',               X
               PHASEID=X5L,                                            X
               LEVEL=10
*                                                                     *
*FUNCTION/OPERATION                                                   *
*   THIS ROUTINE IS CALLED TO GENERATE ERROR RECORDS FOR ANY ERRORS   *
*   DETECTED IN THE ASSEMBLY PHASE. THIS ROUTINE WILL ALSO CALL THE   *
*   PRINT ROUTINE TO PRINT *** ERROR *** FOLLOWING THE STATEMENT IN   *
*   ERROR.                                                            *
*                                                                     *
*ENTRY POINT-                                                         *
*                                                                     *
*        LGR100                                                       *
*INPUT-                                                               *
*   ERROR CODE IN R10                                                 *
*   POINTER TO DATA IN ERROR IN R11                                   *
*                                                                     *
*OUTPUT                                                               *
*   ERROR RECORDS DEFINED IN THE DIAGNOSTIC PHASE                     *
*                                                                     *
*EXTERNAL ROUTINES-                                                   *
*        PRINT ROUTINE                                                *
*                                                                     *
*EXITS, NORMAL-                                                       *
*   EXITS TO THE CALLING ROUTINE THROUGH THE JRETURN MACRO            *
*                                                                     *
*EXITS, ERROR-                                                        *
*   NONE                                                              *
*                                                                     *
*TABLES/WORK AREA                                                     *
*   NONE                                                              *
*                                                                     *
*ATTRIBUTES-                                                          *
*   REFRESHABLE                                                       *
*                                                                     *
*NOTES-                                                               *
*   NONE                                                              *
*                                                                     *
         SPACE 5
         PRINT OFF                      DON'T PRINT JCOMMON COPY CODE
         COPY  JCOMMON                  INCLUDE COMMON DSECT
         PRINT OFF                      DON'T PRINT JTEXT COPY CODE
         COPY  JTEXT                    INCLUDE TEXT DSECT
         PRINT OFF                      DON'T PRINT X5COM COPY CODE
         COPY  X5COM                    INCLUDE ASSEMBLY PHASE COMMON
         PRINT OFF                      DON'T PRINT JERRCD COPY CODE
         COPY  JERRCD
         PRINT ON                       THAT'S THE END OF THE COPY CODE
         TITLE '&COMPNM&ASMID - ASSEMBLY PHASE - ERROR LOGGING ROUTINE X
               - RSYMRCD COPY CODE'
RSYMRCD  DSECT
         COPY  RSYMRCD
         TITLE '&COMPNM&ASMID - ASSEMBLY PHASE - ERROR LOGGING ROUTINE'
         JCSECT (X5L00)                 START MODULE CSECT
* APAR CHANGES
*A830500-832000,950500                                         @OX08862
*C840000,850000                                                @OX08862
*A700500,702000                                                @OX10348
*A710500,712500                                                @OX10348
*A790500-792000                                                @AZ07356
         JMODID ,                       CREATE MODULE ID
         USING JTEXT,R5                 TEXT USING
         USING JTEXTA,R4                VARIABLE TEXT USING
         USING X5COM,R7                 ASSEMBLY COMMON USING
LGR100   LR    R0,R9                    SAVE POINTER TO PARAMETER LIST
         LA    R9,D4(R9)                SET UP RETURN REGISTER TO RETURN
                                           BEYOND THE PARAMETER LIST
LGR200   JSAVE BASE=NO                  SAVE CALLING REGISTERS
         LR    R8,R12                   SET UP SUBRTN BASE
         USING LGR100,R8                USING FOR SUBRTN
         LR    R3,R0                    RETRIEVE POINTER TO PARAM LIST
         L     R5,TXTPTR                GET TEXT RECORD POINTER
         STM   R10,R11,X5LSAV           SAVE REGISTERS 10 AND 11
         ST    R14,X5LSAV+D8            SAVE REGISTER 14
         JENTRY (X5L01=LGR100)          DEFINE ENTRY
         USING RSYMRCD,R2               USING FOR RSYMRCD DSECT
         USING JERRCD,R11               ERROR RECORD USING
         GOIF  DUPEVAL,ON=LGR700        DO NOT LOG ERR IF DUP EVAL
*    TSO CODE STARTS HERE
         GOIF  JTERM,OFF=LABL1          DO WE PRINT TO TERMINAL?
         CLI   D1(R3),ERR197            LOG MNOTE
         BE    LABL00                   DO NOT CHECK MSGLEVEL
         CLC   D0(D1,R3),JMSGL          CHECK MESSAGE LEVEL
         BL    LABL1                    IF NOT TO BE LOGGED NO TERM
LABL00   GOIF  ERRBIT,ON=LABL1          BRANCH AROUND IF ERRBIT ON
         GOIF  JGEN,OFF=LABL0           SHALL WE FETCH MODEL
         LH    R10,JOUTFILE             GET FILE INDEX
         JPUTM FILE=(R10),ADDR=MODEL    OUTPUT MODEL STMT
         MVC   D4(,R11),=AL1(JT,J0)     INDICATE TEXT RECORD
         MVC   D16(D1,R11),D3(R11)      SAVE FLAGB
         MVC   D2(D2,R11),MODSTMT       INSERT STMT NUMBER
LABL0    LH    R10,JOUTFILE             GET FILE INDEX
         JPUTM FILE=(R10),ADDR=JTEXT    WRITE OUT TEXT RECORD
         MVC   D4(,R11),=AL1(JT,J0)     MOVE IN TEXT RECORD OPCODE
         CLI   D1(R3),ERR197            MNOTE?
         BNE   LABL05                   NO NO CHANGE
         MVI   D5(R11),JM               INDICATE MNOTE MESSAGE
LABL05   MVC   D16(D1,R11),D3(R11)      SAVE JTFLGB
         MVC   D2(D2,R11),STMTN+D2      SAVE STMNT NUMBER
         SET   ERRBIT,ON                TURN ERRBIT ON
         SPACE
*    TSO CODE ENDS HERE
LABL1    L     R5,TXTPTR                GET TEXT POINTER
ERR197   EQU   197                      ERROR NUMBER FOR MNOTE
         CLI   D1(R3),ERR197            IS THIS MNOTE ?
         BE    NOLEVT                   YES, LOG IT
         CLC   D0(D1,R3),JMSGL          IF SEVERITY CODE LOWER THAN MSG
         BL    LGR900                   LEVEL, RETURN TO CALLER
         SET   JERR,ON                  INDICATE ERROR FLAG
         TM    DUMSW,TESTER             IS IT A DS             @OX10348
         BZ    NOLEVT                   NO                     @OX10348
         GOIF  PGEN,ON=NOLEVT           YES, IF PRT GEN ON     @OX10348
         MVI   FSTPSW,D0                CLEAR FIRST PRINT SW   @OX10348
NOLEVT   SET   JERRCHK,ON               TURN ON ERROR FLAG IN COMMON
         TM    DUMSW,TESTER                                    @OX10348
         BZ    LABL2                                           @OX10348
         GOIF  PGEN,ON=LABL2                                   @OX10348
         MVI   FSTPSW,X'00'                                    @OX10348
LABL2    EQU   *                                               @OX10348
         LH    R10,JOUTFILE             GET ADDRESS OF OUTPUT FILE
         JPUTL FILE=(R10),BUFREQ=27     GET OUTPUT BUFFER
         MVC   JEFLGA(D3),=AL1(0,8,JTERROR)  SET UP FIXED PART OF RCD
         LH    R1,=AL2(JEDATA-JERECL)   ACCUMULATE RECORD LENGTH
         MVC   JESTMTNO,STMTN+D4-L'JESTMTNO PUT IN THE STATEMENT NUMBER
         MVC   JESEV(D2),D0(R3)         MOVE ERROR & SEV CODE TO ERRRCD
         GOIF  EQUOPR,OFF=COLPTR1       BR IF NOT 2ND-3RD OPER @AZ07356*
                                        IN AN EQU STMT         @AZ07356
         MVI   JESEV,X'04'              RESET SEV CODE         @AZ07356
COLPTR1  EQU   *                                               @AZ07356
         L     R2,ERRPTR                GET ADDR OF COL PTR OR DATA
         TM    D2(R3),BIT0              CHECK FOR COLUMN POINTER
         BZ    DATACK                   IF SW OFF GO CHECK FOR DATA
         TM    DUMSW,TESTER             IS IT DS OR DXD        @OX08862
         BZ    COLPTR                   NO                     @OX08862
         S     R2,JFWORD2               YES, COMP OPR COL PTR  @OX08862
         B     COLPTRDS                                        @OX08862
COLPTR   S     R2,OPNADR                COMP OPERANDCOL PTR    @OX08862
COLPTRDS LA    R2,D1(R2)                CONV TO 1 ORIGON COUNT @OX08862
         STC   R2,JECOLPTR              INSERT IN INTO ERROR RECORD
         B     LGREXIT                  EXIT
DATACK   TM    D2(R3),BIT1              CHECK FOR DATA TO APPEND
         BZ    LGREXIT                  IF NO DATA, EXIT
         MVC   JEDATA(D8),RNAME         MOVE DATA TO ERROR RECORD
         LA    R1,D8(R1)                ADD DATA LENGTH TO RCD LGTH
LGREXIT  STH   R1,JERECL                PUT RECORD LENGTH INTO RECORD
LGR700   LM    R10,R11,X5LSAV           RESTORE REGISTERS 10 AND 11
         L     R14,X5LSAV+D8            RESTORE REGISTER 14
LGR900   JRETURN ,                      EXIT
TESTER   EQU   X'F0'                    FLAG TEST MASK         @OX08862
         JPATCH X5L00,135               5% PATCH AREA
         END
