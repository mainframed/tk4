* /* START OF SPECIFICATIONS ****
*02* PROCESSOR = ASSEMBLER
**** END OF SPECIFICATIONS ***/
         SPACE 3
         GBLC  &COMPNM,&ASMID           GLOBAL VARIABLES
         JHEAD 'ASSEMBLER INITILIZATION - PROLOG',                     X
               PHASEID=X0D,                                            X
               LEVEL=10
*                                                                     *
*FUNCTION/OPERATION-                                                  *
*   THIS MODULE INITIALIZES THE ASSEMBLER.  IT FORMATS THE TIME,      *
*   DATE AND ASSEMBLER LEVEL, CHECKS FOR VALID PARAMETERS, CHECKS TO  *
*   SEE THAT ALL NECESSARY DD CARDS ARE PRESENT, AND SETS THE MAXIMUM *
*   WORKFILE RECORD SIZE.                                             *
*                                                                     *
*ENTRY POINT-                                                         *
*        START - ENTERED BY LOAD AND BRANCH FROM DRIVER.              *
*                                                                     *
*INPUT-                                                               *
*   N/A                                                               *
*                                                                     *
*OUTPUT-                                                              *
*   N/A                                                               *
*                                                                     *
*EXTERNAL ROUTINES-                                                   *
*   N/A                                                               *
*                                                                     *
*EXITS, NORMAL-                                                       *
*   RETURN TO DRIVER BY JRETURN MACRO.                                *
*                                                                     *
*EXITS, ERROR-                                                        *
*   BRANCH TO JABORT IN COMMON.                                       *
*                                                                     *
*TABLE/WORK AREAS-                                                    *
*   REGISTER R13 POINTS TO COMMON.                                    *
*                                                                     *
*ATTRIBUTES-                                                          *
*   REFRESHABLE.                                                      *
*                                                                     *
*NOTES-                                                               *
         SPACE 3
         PRINT OFF                      DON'T PRINT JCOMMON COPY CODE
         COPY  JCOMMON                  JCOMMON COPY CODE
         PRINT OFF                      DON'T PRINT JERMSGCD COPY CODE
         COPY  JERMSGCD                 JERMSGCD COPY CODE
         PRINT ON                       THAT'S ALL WE DON'T WANT
         SPACE 2
         TITLE '&COMPNM&ASMID - ASSEMBLER INITILIZATION - FILE BLOCK DSE
               ECT (JFLEBLK)'
         COPY  JFLEBLK                  JFLEBLK COPY CODE
         SPACE 2
         TITLE '&COMPNM&ASMID - ASSEMBLER INITILIZATION - DCBD MACRO '
         DCBD  DSORG=(PS),DEVD=(DA)     DCBD MACRO
         SPACE 7
LVTMDT   DSECT                          , LEVEL TIME AND DATE DSECT
         DS    CL5                     ' ASM '
LV       DS    CL4                      NNNN VERSION LEVEL
         DS    C                        ' '
TM       DS    CL5                      HH.MM          TIME
         DS    C                        ' '
DT       DS    CL8                      MM/DD/YY       DATE
IDR      DSECT
         DS    CL11
VLML     DS    CL2                     VERSION AND MOD. LEVEL
         DS    CL2
YEARADAY DS    CL5                     YEAR AND DAY OF YEA9
SECIDR   DS    CL19                    SECOND IDR
         SPACE 6
P        DSECT                          DDNAME OVERRIDE LIST
PLEN     DS    H                        LENGTH OF LIST
         DS    3CL8                     (NOT APPLICABLE)
PSYSLIB  DS    CL8                      SYSLIB DDNAME
PSYSIN   DS    CL8                      SYSIN DDNAME
PSYSPRIN DS    CL8                      SYSPRINT DDNAME
PSYSPUNC DS    CL8                      SYSPUNCH DDNAME
PSYSUT1  DS    CL8                      SYSUT1 DDNAME
PSYSUT2  DS    CL8                      SYSUT2 DDNAME
PSYSUT3  DS    CL8                      SYSUT3 DDNAME
PSYSGO   DS    CL8                      SYSGO DDNAME
PSYSTERM DS    CL8                      SYSTERM DDNAME
         SPACE 2
         TITLE '&COMPNM&ASMID - ASSEMBLER INITILIZATION '
* VS1 RELEASE 3.1 CHANGES
*C273350,278000,290000,301000,312000,324000,339000,354000      @OY02543
*A504500-504800                                                @OX09734
         JCSECT (X0D00)                 SECTION NAME
         JMODID
START    JSAVE BASE=YES                 SAVE REGISTERS
         JENTRY (X0D01=START)           SECTION ENTRY POINT
         SPACE 2
         TITLE '&COMPNM&ASMID - ASSEMBLER INITILIZATION - FORMAT HEADING
               G IDENTIFIER (LEVEL, TIME, DATE)'
         LA    R5,JLVTMDT               SET BASE FOR HEADING
         USING LVTMDT,R5                ''
         LA    R2,JIDR
         USING IDR,R2
         LH    R14,D0(,R10)             PICK UP MASTER ROOT SEG LEVEL
         CVD   R14,JDWORD               0000000000000NNC
         UNPK  JDWORD(D2),JDWORD+D6(D2) FNCN
         MVN   LV(D2),JDWORD            0N0N
         MVI   VLML,X'00'
         MVC   VLML+D1(D1),LV
         MVI   VLML+D2,X'00'
         MVC   VLML+D3(D1),LV+D1
         MVC   LV,VLML
         SPACE 2
         TIME  DEC                      GET THE TIME
         ST    R0,JFWORD1               HHMMSSTH
         UNPK  JDWORD(D5),JFWORD1(D3)   FHFHFMFMSS
         MVN   TM(D2),JDWORD            0H0H
         MVN   TM+D3(D2),JDWORD+D2      0M0M
         SPACE 2
         ST    R1,JFWORD1               00YYDDDC
         UNPK  JDWORD(D3),JFWORD1+D1(D2) FYFYDD
         MVN   DT+D6(D2),JDWORD         0Y0Y
         MVN   YEARADAY(D2),JDWORD
         UNPK  JDWORD(D3),JFWORD1+D2(D2)
         MVN   YEARADAY+D2(D3),JDWORD
         SR    R2,R2                    ZERO
         XC    JDWORD,JDWORD            ZERO WORK AREA
         STH   R1,JDWORD+D6             PUT IN DDDC
         CVB   R1,JDWORD                CONVERT TO BINARY
         CH    R1,=H'59'                IS IT BEFORE FEB 29
         BNH   TIMC                     YES, DON'T CHECK FOR LEAP YEAR
         TM    JFWORD1+D1,D1            IS IT AN ODD YEAR
         BO    TIMB                     YES, SET AS NOT LEAP YEAR
         TM    JFWORD1+D1,D18           IS IT LEAP YEAR
         BNM   TIMC                     NOT MIXED IS A LEAP YEAR
TIMB     LA    R1,D1(,R1)               SET AS NOT LEAP YEAR
TIMC     LA    R14,D1                   SET FOR FIRST MONTH
TIMD     IC    R2,CALEN-R1(R14)         GET DAYS PER MONTH
         SR    R1,R2                    REDUCE DAYS BY THIS MONTH
         BNP   TIME                     IN THIS MONTH, BRANCH
         LA    R14,D1(,R14)             UP TO NEXT MONTH
         B     TIMD                       AND TRY AGAIN
TIME     AR    R1,R2                    ADD BACK THIS MONTH
         STC   R14,DT+D1                PUT IN MONTH
         SH    R14,=H'10'               IS IT OCT, NOV OR DEC
         BM    TIMF                     NO, CONTINUE
         MVI   DT,J1                    YES, PUT IN
         STC   R14,DT+D1                  CORRECT MONTH
TIMF     CVD   R1,JDWORD                CONVERT DAY TO PACKED
         UNPK  JDWORD(D2),JDWORD+D6(D2) UNPACK THE DAY
         MVN   DT+D3(D2),JDWORD         MOVE IN DAY
         DROP  R5                       DROP HEADING BASE
         SPACE
         TITLE '&COMPNM&ASMID - ASSEMBLER INITILIZATION - PROCESS PARAME
               ETER OPTIONS'
*        SET DEFAULT OPTIONS
*
         JEXTRN  (X0J00=X0J00)          EXTERNAL ENTRY POINT
         L     R3,=A(X0J00)             POINT TO DEFAULT PARMS
         MVC   JPARMS,D1(R3)            MOVE UM
         MVC   JPARM,D4(R3)                  IN
         MVI   JPDFLAG,D0               ZERO OUT DUMP FLAG
         SPACE 3
*        PROCESS OPTION PARAMETERS
*
         L     R2,D0(,R11)              POINT TO DATA AREA
         LH    R6,D0(,R2)               GET LENGTH OF INFO FIELD
         LTR   R6,R6                    IS IT ZERO
         BZ    SCAN999                  YES.  NO PARM INFORMATION
         LA    R0,D2(,R6)               REQUEST SPACE FOR TOTAL PARM
         LR    R4,R0                    SAVE REQUESTED LENGTH
         GETMAIN R,LV=(0)               GET CORE
         STH   R4,D0(,R1)               SAVE REQUESTED LENGTH
         ST    R1,JPARMPTR              SAVE ADDR OF TRANS PARM AREA
         LA    R5,D2(,R1)               POINT TO TRANSLATED FIELD
MOVLOP   SH    R6,=H'256'               SEE IF ONE MOVE WILL DO IT
         BP    MOVLOP1                  BRANCH IF NOT
         AH    R6,=H'255'               GET REMAINING MOVE LENGTH
         EX    R6,MVCPARM               MOVE PARM INFO INTO OUR CORE
         EX    R6,TRPARM                TRANSLATE INFO TO INTERNAL
         LA    R5,D2(,R1)               POINT TO TRANSLATED FIELD
         L     R2,D0(,R11)              POINT TO DATA AREA
         LH    R6,D0(,R2)               GET LENGTH OF INFO FIELD
         BCTR  R6,R0                    GET MACHINE LENGTH
         B     SCAN                     GO SCAN
MOVLOP1  MVC   D0(256,R5),D2(R2)        MOVE 256 BYTES
         TR    D0(256,R5),JTRTABLE      TRANSLATE 256 BYTES
         LA    R5,256(,R5)              UPDATE POINTER
         LA    R2,256(,R2)              UPDATE POINTER
         B     MOVLOP                   MOVE AND TRANSLATE MORE
         SPACE 3
*        AT THIS POINT, REGISTER R6 = PARM INFO FIELD LENGTH (MACHINE)
*                       REGISTER R5 = ADDR OF TRANSLATED INFO FIELD
*                       JPARMPTR = ADDR OF ACQUIRED CORE.  FORMAT IS AS
*                                  FOLLOWS  LLIII...III  WHERE
*                                  LL = LENGTH OF ACQUIRED CORE.
*                                  I  = TRANSLATED PARM INFO FIELD.
*                                  (JPARMPTR WILL BE SET TO ZERO WHEN
*                                  THE ACQUIRED CORE IS FREED BECAUSE
*                                  NO SYSPARM IS PRESENT OR BECAUSE
*                                  THE OVERRIDING SYSPARM IS SHORTER
*                                  THAN THE SYSGENED SYSPARM).
SCAN     SR    R2,R2                    ZERO FOR TRT
SCAN10   CH    R6,=H'256'               TEST IF ONE TRT IS ENOUGH
         BL    SCAN15                   BRANCH IF YES
         TRT   D0(256,R5),TRTTABLE      STOP ON , = ( BLANK
         BNZ   SCAN20                   BRANCH IF DELIMITER
         SH    R6,=H'256'               GET REMAINING LENGTH
         AH    R5,=H'256'               UPDATE POINTER
         SET   JINVOPT,ON               INDICATE ERROR
         B     SCAN10                   CONTINUE SCAN
SCAN15   EX    R6,TRTPARM               STOP ON , = ( BLANK
         BNZ   SCAN20                   BRANCH IF NOT END OF FIELD
         LA    R1,D1(R5,R6)             DUMMY UP TRT OUTPUT TO SIMULATE
         LA    R2,JCOMMA                  STOPPING ON , AFTER FIELD
SCAN20   LR    R14,R1                   CALCULATE LENGTH OF CHAR STRING
         SR    R14,R5                   ''
         SR    R6,R14                   REDUCE REMAINING LENGTH
         CH    R14,=H'10'               GREATER THAN 10 CHARACTERS
         BH    SCAN110                  ERROR.
         LTR   R14,R14                  NULL STRING (ZERO LENGTH)
         BNP   SCAN110                  ERROR.
         BCTR  R14,R0                   GET MACHINE LEN OF CHAR STRING
         LA    R15,PARMTAB              GET ADDR OF OPTION TABLE
         MVC   COMPAREA,BLANKS          BLANK COMAPRE AREA
         EX    R14,MVCDWORD             MOVE OPTION TO BLANK AREA
SCAN30   CLC   COMPAREA,D0(R15)         IS IT THIS OPTION
         BE    SCAN40                   YES.
         LA    R15,PARMLEN(,R15)        BUMP OPTION TABLE ADDR
         C     R15,=A(PARMEND)          END OF TABLE
         BL    SCAN30                   BRANCH IF NOT AT END OF TABLE
         B     SCAN110                  ERROR.  OPTION NOT FOUND
SCAN40   EX    R0,D10(,R15)             EXEC INST TO SET OPTION        *
                                          CHK PARM TBL.  SOME DONT RTN.
         CH    R2,=Y(JCOMMA)            IS OPTION DELIMITED BY COMMA
         BE    SCAN50                   DON'T SET FLAG IF OK
SCAN110  SET   JINVOPT,ON
SCAN50   LA    R5,D1(,R1)               BUMP PART DELIMITER
         BCTR  R6,R0                    REDUCE LENGTH BY ONE
         LTR   R6,R6                    CHECK LENGTH
         BNM   SCAN10                   IF NOT MINUS, LOOK FOR NEXT OPT
         TM    JSYSPARM,BIT0            WAS THERE A SYSPARM (HI-ORDER)
         BO    SCAN70                   BR IF SYSPARM
         L     R1,JPARMPTR              FREE TRANSLATED PARM AREA
         LH    R0,D0(,R1)               GET LENGTH OF AREA
         FREEMAIN R,LV=(0),A=(1)        FREE CORE
         XC    JPARMPTR,JPARMPTR        SET PTR TO ZERO (FOR DRIVER)
SCAN70   L     R2,JPARM                 GET POINTER
         O     R2,D8(,R3)               COMPUTE AND
         N     R2,D12(,R3)              STRIP OFF BITS
         CL    R2,JPARM                 END OF JPARM
         ST    R2,JPARM                 SAVE POINTER
         BE    SCAN999                  GO TO SCAN IF END
         SET   JINVOPT,ON               INDICATE INVALID OPTION
         B     SCAN999                  START SCANNING
         SPACE 3
SCAN80   SR    R15,R15                  CONVERT NUMBER
SCAN90   LA    R1,D1(,R1)               DUMP PTR
         BCTR  R6,R0                    DECREMENT LENGTH BY ONE
         LTR   R6,R6                    ANY FIELD LEFT
         BMR   R9                       BRANCH IF END OF FIELD
         CLI   D0(R1),JNUMMAX           IS THIS CHAR A NUMBER
         BHR   R9                       RETURN IF NOT A NUMBER
         MH    R15,=H'10'               MULTIPLY ACCUMULATED NUMBER
         IC    R2,D0(,R1)                 BY 10 AND ADD IN UNITS
         AR    R15,R2                     POSITION
         B     SCAN90                   TRY NEXT CHARACTER
         SPACE 3
SCAN200  CH    R2,=Y(JLPARN)            IS DELIMITER LEFT PAREN
         BNE   SCAN110                  ERROR IF NOT
         BAL   R9,SCAN80                CONVERT NUMBER
         CLI   D0(R1),JRPARN            FOLLOWED BY RIGHT PAREN
         BNE   SCAN110                  ERROR IF NOT
         LA    R1,D1(,R1)               BUMP POINTER
         BCTR  R6,R0                    DECREMENT LENGTH
         LTR   R6,R6                    ANY FIELD LEFT
         BM    SCAN230                  BRANCH IF END OP FIELD
         B     SCAN220                  CONTINUE CHECKING
SCAN210  CH    R2,=Y(JEQUAL)            TEST IF =
         BNE   SCAN110                  BRANCH IF NOT =
         BAL   R9,SCAN80                CONVERT NUMBER
         LTR   R6,R6                    CHECK IF END OF FIELD
         BM    SCAN230                  BRANCH IF SO
SCAN220  CLI   D0(R1),JCOMMA            FOLLOWED BY COMMA
         BNE   SCAN110                  ERROR IF NOT
SCAN230  CH    R15,=H'255'              MORE THAN 255
         BH    SCAN110                  YES.  LOG ERROR
         GOIF  JMSGLKEY,ON=SCAN110
         STC   R15,JMSGL                SAVE IN MSGL
         B     SCAN50                   GO SCAN FOR MORE OPTIONS
         SPACE 3
SCAN300  CH    R2,=Y(JLPARN)            IS DELIMITER LEFT PAREN
         BNE   SCAN110                  ERROR IF NOT
         BAL   R9,SCAN80                CONVERT NUMBER
         CLI   D0(R1),JRPARN            FOLLOWED BY RIGHT PAREN
         BNE   SCAN110                  ERROR IF NOT
         LA    R1,D1(,R1)               BUMP POINTER
         BCTR  R6,R0                    DECREMENT LENGTH
         LTR   R6,R6                    ANY FIELD LEFT
         BM    SCAN330                  BRANCH IF END OF FIELD
         B     SCAN320                  CONTINUE CHECKING
SCAN310  CH    R2,=Y(JEQUAL)            TEST IF =
         BNE   SCAN110                  BRANCH IF NOT =
         BAL   R9,SCAN80                CONVERT NUMBER
         LTR   R6,R6                    CHECK IF END OF FIELD
         BM    SCAN330                  BRANCH IF SO
SCAN320  CLI   D0(R1),JCOMMA            FOLLOWED BY COMMA
         BNE   SCAN110                  ERROR IF NOT
SCAN330  CH    R15,=H'99'               MORE THAN 99
         BH    SCAN110                  YES. LOG ERROR
         GOIF  JLNCTKEY,ON=SCAN110
         STH   R15,JLNCT                SAVE LINECNT OF BODY OF LISTING
         B     SCAN50                   GO SCAN FOR MORE OPTIONS
         SPACE 3
SCAN400  LA    R1,D1(,R1)               BUMP POINTER
         BCTR  R6,R0                    DECREMENT LENGTH
         LTR   R6,R6                    END OF PARAM
         BM    SCAN110                  ERROR IF NO RIGHT PAREN
         CLI   D0(R1),JLPARN            CHARACTER IS LEFT PAREN
         BE    SCAN405                  BRANCH IF SO
         CLI   D0(R1),JRPARN            CHARACTER IS RIGHT PAREN
         BNE   SCAN400                  CONTINUE TO SCAN IF NOT
         BCTR  R14,R0                   DECREASE PAREN COUNT
         LTR   R14,R14                  TEST PAREN COUNT
         BNM   SCAN400                  CONTINUE TO SCAN IF MORE
         LR    R14,R1                   POINTER TO END OF SYSPARM
         LA    R1,D1(,R1)               BUMP POINTER
         BCTR  R6,R0                    DECREMENT COUNT
         LTR   R6,R6                    TEST IF END OF PARAM
         BM    SCAN465                  BRANCH IF END
         CLI   D0(R1),JCOMMA            TEST NEXT CHARACTER
         BE    SCAN465                  HANDLE SYSPARM IF COMMA
         B     SCAN110                  ERROR IF NOT
SCAN405  LA    R14,D1(,R14)             INCREASE PAREN COUNT
         B     SCAN400                  CONTINUE TO SCAN
SCAN410  SR    R14,R14                  ZERO PAREN COUNT
         LR    R15,R1                   SAVE STARTING POSITION
         CH    R2,=Y(JLPARN)            OPTION DELIMITED BY LEFT PAREN
         BE    SCAN400                  HANDLE SYSPARM(STRING) IF (
         CH    R2,=Y(JEQUAL)            TEST IF =
         BNE   SCAN110                  ERROR IF NOT
SCAN420  LA    R1,D1(,R1)               BUMP POINTER
         BCTR  R6,R0                    DECREMENT LENGTH
         LTR   R6,R6                    END OF PARM
         BM    SCAN450                  YES.  CHECK PAREN BALANCE.
         CLI   D0(R1),JLPARN            CHARACTER (
         BE    SCAN430                  YES.  GO INCREMENT PAREN COUNT
         CLI   D0(R1),JRPARN            CHARACTER )
         BE    SCAN440                  YES.  GO DECREMENT PAREN COUNT.
         LTR   R14,R14                  IS PAREN BALANCE ZERO
         BNZ   SCAN420                  NO.  GO CONTINUE SCAN
         CLI   D0(R1),JCOMMA            COUNT ZERO.  IS IT A COMMA.
         BE    SCAN460                  YES.  THAT IS ALL OF SYSPARM.
         B     SCAN420                  GO CONTINUE SCAN
SCAN430  LA    R14,D1(,R14)             INCREMENT PAREN COUNT
         B     SCAN420                  GO CONTINUE SCAN
SCAN440  BCTR  R14,R0                   DECREMENT PAREN COUNT
         LTR   R14,R14                  IS IT NEGATIVE
         BNM   SCAN420                  NO.  CONTINUE SCAN.
         B     SCAN110                  ERROR.
SCAN450  LTR   R14,R14                  WERE PAREN BALANCED.
         BNZ   SCAN110                  NO.  ERROR.
SCAN460  LR    R14,R1                   LENGTH = END -
SCAN465  SR    R14,R15                  START
         BCT   R14,SCAN470              BR IF LENGTH IS GT 1
         XC    JSYSPARM,JSYSPARM        NULL SYSPARM   SYSPARM=,
         B     SCAN50                   CONTINUE WITH OTHER OPTIONS
SCAN470  STC   R14,D0(,R15)             STORE ACT LENGTH OF CHAR STRING
         L     R4,JSYSPARM              SEE IF DEFAULT SYSPARM
         LTR   R4,R4                    ''
         BZ    SCAN480                  BR IF NO DEFAULT SYSPARM
         CLC   D0(D1,R4),D0(R15)        IS LENGTH OF SYSPARM LE DEFAULT
         BL    SCAN480                    LENGTH.  NO.  MUST SAVE PARM
         EX    R14,MVCSYSPM             OVERLAY DEFAULT SYSPARM
         B     SCAN50                   CONTINUE WITH OTHER OPTIONS
SCAN480  ST    R15,JSYSPARM             SAVE SYSPARM ADDR
         OI    JSYSPARM,BIT0            SET BIT ON TO INDICATE DON'T
         B     SCAN50                     FREE PARM AREA.  NEXT OPTION
SCAN500  C     R6,=F'4'                 CHECK REMAINING CHARACTERS
         BL    SCAN110                  ERROR IF LESS THAN 5
         CLC   D0(D5,R1),=AL1(JLPARN,JM,JI,JN,JRPARN) TEST IF MIN
         BNE   SCAN510                  BRANCH IF NOT MIN BLOCK SIZE
         SET   JMINBUF,ON               INDICATE MIN BUFFERS
         B     SCAN520                  GO UPDATE POINTER
SCAN510  CLC   D0(D5,R1),=AL1(JLPARN,JS,JT,JD,JRPARN) TEST IF STD
         BNE   SCAN110                  ERROR IF NOT
         SET   JMINBUF,OFF              INDICATE STANDARD BUFFERS
SCAN520  LA    R1,D5(,R1)               BUMP TO NEXT OPTION
         S     R6,=F'5'                 DECREMENT LENGTH
         LTR   R6,R6                    TEST IF END
         BM    SCAN50                   CONTINUE TO SCAN
         CLI   D0(R1),JCOMMA            CHECK IF COMMA
         BNE   SCAN110                  ERROR IF NOT
         B     SCAN50                   CONTINUE TO SCAN
SCAN600  SET   JXREF,ON                 INDICATE XREF
         SET   JMINXREF,OFF             INDICATE FULL XREF
         CH    R2,=Y(JCOMMA)            CHECK IF XREF,
         BE    SCAN50                   CONTINUE SCAN
         C     R6,=F'5'                 CHECK REMAINING CHARACTERS
         BL    SCAN110                  ERROR IF LESS THAN (FULL)
         CLC   D0(D6,R1),=AL1(JLPARN,JF,JU,JL,JL,JRPARN)
         BE    SCAN610                  BRANCH IF (FULL)
         C     R6,=F'6'                 CHECK REMAINING CHARACTERS
         BL    SCAN110                  ERROR IF LESS THAN (SHORT)
         CLC   D0(D7,R1),=AL1(JLPARN,JS,JH,JO,JR,JT,JRPARN)
         BNE   SCAN110                  ERROR IF NOT (SHORT)
         SET   JMINXREF,ON              INDICATE SHORT XREF
         LA    R1,D7(,R1)               ADVANCE POINTER
         S     R6,=F'7'                 DECREASE COUNT
         B     SCAN620                  CHECK NEXT CHARACTER
SCAN610  LA    R1,D6(,R1)               ADVANCE POINTER
         S     R6,=F'6'                 DECREASE COUNT
SCAN620  LTR   R6,R6                    CHECK IF LAST OPTION
         BM    SCAN50                   BRANCH IF LAST
         CLI   D0(R1),JCOMMA            CHECK IF COMMA
         BE    SCAN50                   BRANCH IF COMMA
         B     SCAN110                  ERROR IF NOT
         SPACE 3
SCAN999  DC    0H'0'                    CONTINUE
         SPACE 3
         TITLE '&COMPNM&ASMID - ASSEMBLER INITILIZATION - PROCESS OVERRI
               IDING DDNAMES IF THERE ARE ANY'
         LA    R10,ERR260               ERROR CODE FOR MISSING DD CARD
         SR    R6,R6                    MAKE R6 & R7 EQUAL IN CASE
         LR    R7,R6                      THERE IS NO OVERRIDING DD
         TM    D0(R11),BIT0             ANY OVERRIDING DDNAMES
         BO    TSYSTERM                 NO. R5 WILL BE GT R7 NOW
         L     R6,D4(,R11)              PT TO DDNAME LIST
         USING P,R6                     ''
         LA    R7,P                     CALC END-OF-LINE (-2)
         AH    R7,PLEN                  ''
         SPACE 3
TSYSTERM GOIF  JTERM,OFF=TSYSLIN        NOTERMINAL SPECIFIED
         LA    R5,PSYSTERM              PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSTERM                 YES GO CHANGE POINTER
         CLC   D0(D8,R5),=8X'00'        IS DDNAME OVERRIDEN     OY02543
         BNZ   DSYSTERM                 YES
XSYSTERM LA    R5,CSYSTERM              PT TO STANDARD NAME
DSYSTERM DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSLIN                  YES
         SET   JMISTERM,ON              INDICATE SYSTERM DD CARD MISSIN
         SET   JTERM,OFF                SET TERM OFF
TSYSLIN  GOIF  JLINK,OFF=TSYSIN         NOLOAD SPECIFIED
         LA    R5,PSYSGO                PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSLIN                  YES. GO CHANGE PTR
         CLC   D0(D8,R5),=8X'00'        IS DDNAME OVERRIDEN     OY02543
         BNZ   DSYSLIN                  YES.
XSYSLIN  LA    R5,CSYSGO                PT TO STANDARD NAME
DSYSLIN  DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSIN                   YES
         SET   JMISLIN,ON               NO. FLAG ERROR FOR DIAG.
         SET   JLINK,OFF                SUPPRESS OBJECT FILE
         SPACE 3
TSYSIN   LA    R5,PSYSIN                PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSIN                   YES. GO CHANGE PTR
         CLC   D0(D8,R5),=8X'00'        IS DDNAME OVERRIDEN     OY02543
         BNZ   DSYSIN                   YES.
XSYSIN   LA    R5,CSYSIN                PT TO STANDARD NAME
DSYSIN   DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BP    JABORT                   NO. ABORT
         SPACE 3
         GOIF  JLIST,OFF=TSYSPUNC       NOLIST SPECIFIED
         LA    R5,PSYSPRIN              PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSPRIN                 YES. GO CHANGE PTR
         CLC   D0(D8,R5),=8X'00'        IS DDNAME OVERRIDEN     OY02543
         BNZ   DSYSPRIN                 YES.
XSYSPRIN LA    R5,CSYSPRIN              PT TO STANDARD NAME
DSYSPRIN DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSPUNC                 YES
         SET   JMISPRT,ON               INDICATE MISSING SYSPRINT
         WTO   MF=(E,NSPRTMSG)          GIVE MSG FOR MISSING SYSPRINT
         SET   JLIST,OFF
         SPACE 3
TSYSPUNC GOIF  JDECK,OFF=TSYSUT1        NODECK SPECIFIED
         LA    R5,PSYSPUNC              PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSPUNC                 YES. GO CHANGE PTR
         CLC   D0(D8,R5),=8X'00'        IS DDNAME OVERRIDEN     OY02543
         BNZ   DSYSPUNC                 YES.
XSYSPUNC LA    R5,CSYSPUNC              PT TO STANDARD NAME
DSYSPUNC DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSUT1                  YES
         SET   JMISPCH,ON               NO. FLAG ERROR FOR DIAG.
         SET   JDECK,OFF                SUPPRESS PUNCH FILE
         SPACE 3
TSYSUT1  LA    R5,PSYSUT1               PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSUT1                  YES. GO CHANGE PTR
         CLC   D0(D8,R5),=8X'00'        IS DDNAME OVERRIDEN     OY02543
         BNZ   DSYSUT1                  YES.
XSYSUT1  LA    R5,CSYSUT1               PT TO STANDARD NAME
DSYSUT1  DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BP    JABORT                   NO. ABORT
         MVC   JMAXRL1,JDWORD+D6        SET MAXRL FOR SYSUT1
         L     R1,JFLEBLK1+JFLE-JFLEBLK PT TO SYSUT1 DCB
         USING IHADCB,R1                ''
         MVC   DCBDDNAM,D0(R5)          MOVE IN DDNAME
         DROP  R1                       DROP DCB ADDRESSABILITY
         SPACE 3
         LA    R5,PSYSUT2               PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSUT2                  YES. GO CHANGE PTR
         CLC   D0(D8,R5),=8X'00'        IS DDNAME OVERRIDEN     OY02543
         BNZ   DSYSUT2                  YES.
XSYSUT2  LA    R5,CSYSUT2               PT TO STANDARD NAME
DSYSUT2  DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BP    JABORT                   NO. ABORT
         MVC   JMAXRL2,JDWORD+D6        SET MAXRL FOR SYSUT2
         L     R1,JFLEBLK2+JFLE-JFLEBLK PT TO SYSUT2 DCB
         USING IHADCB,R1                ''
         MVC   DCBDDNAM,D0(R5)          MOVE IN DDNAME
         DROP  R1                       DROP DCB ADDRESSABILITY
         SPACE 3
         LA    R5,PSYSUT3               PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSUT3                  YES. GO CHANGE PTR
         CLC   D0(D8,R5),=8X'00'        IS DDNAME OVERRIDEN     OY02543
         BNZ   DSYSUT3                  YES.
XSYSUT3  LA    R5,CSYSUT3               PT TO STANDARD NAME
DSYSUT3  DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BP    JABORT                   NO. ABORT
         MVC   JMAXRL3,JDWORD+D6        SET MAXRL FOR SYSUT3
         L     R1,JFLEBLK3+JFLE-JFLEBLK PT TO SYSUT3 DCB
         USING IHADCB,R1                ''
         MVC   DCBDDNAM,D0(R5)          MOVE IN DDNAME
         DROP  D1                       DROP DCB ADDRESSABILITY
         SPACE 4
*   CHECK FOR CONSISTENT OPTIONS -
*                            IF NOLIST, THEN NOXREF, NOESD, AND NORLD
*                            IF NODECK AND NOLINK, THEN NOTEST
         GOIF  JLIST,ON=CKTEST          CHECK LIST OPTION
         SET   (JXREF,JRLD,JESD),OFF    NOLIST, SO NOXREF NORLD & NOESD
CKTEST   GOIF  (JLINK,JDECK),ANY=CKTERM BOTH NOLINK AND NODECK
         SET   JTEST,OFF                YES, THEN NOTEST
CKTERM   GOIF  JTERM,ON=MIN0            IF NOTERM OPTION
         SET   (JNUM,JSTMT),OFF         FORCE NONUM AND NOSTMT
         SPACE 5
MIN0     LH    R14,JMAXRL1              FIND THE MINIMUM OF JMAXRL1,
         CH    R14,JMAXRL2                JMAXRL2, JMAXRL3 & JMAXRL
         BNH   MIN1                     ''
         LH    R14,JMAXRL2              ''
MIN1     CH    R14,JMAXRL3              ''
         BNH   MIN2                     ''
         LH    R14,JMAXRL3              ''
MIN2     CH    R14,JMAXRL               ''
         BNH   MIN3                     ''
         LH    R14,JMAXRL               ''
MIN3     STH   R14,JMAXRL               SAVE MINIMUM OF JMAXRL(S)
         SPACE 3
RETURN   JRETURN
         SPACE 2
         TITLE '&COMPNM&ASMID - ASSEMBLER INITILIZATION - CONSTANTS ANDX
                PATCH AREA '
CSYSTERM DC    CL8'SYSTERM'             STANDARD FILE NAME FOR SYSTERM
CSYSGO   DC    CL8'SYSGO'               STANDARD FILE NAME FOR SYSGO
CSYSIN   DC    CL8'SYSIN'               STANDARD FILE NAME FOR SYSIN
CSYSPRIN DC    CL8'SYSPRINT'            STANDARD FILE NAME FOR SYSPRINT
CSYSPUNC DC    CL8'SYSPUNCH'            STANDARD FILE NAME FOR SYSPUNCH
CSYSUT1  DC    CL8'SYSUT1'              STANDARD FILE NAME FOR SYSUT1
CSYSUT2  DC    CL8'SYSUT2'              STANDARD FILE NAME FOR SYSUT2
CSYSUT3  DC    CL8'SYSUT3'              STANDARD FILE NAME FOR SYSUT3
         SPACE 1
CALEN    DC    AL1(31,29,31,30,31,30,31,31,30,31,30,31) DAYS IN MONTH
         SPACE 1
TRTTABLE DC    39AL1(0)                 TRANSLATE AND TEST TABLE
         DC    AL1(JEQUAL)              STOP ON =
         DC    AL1(JLPARN)              STOP ON (
         DC    5AL1(0)                  (DON'T STOP)
         DC    AL1(JCOMMA)              STOP ON ,
         DC    AL1(JBLANK)              STOP ON BLANK
         DC    208AL1(0)                (DON'T STOP)
         SPACE 1
MVCPARM  MVC   D0(D0,R5),D2(R2)         MVC TO MOVE PARM TO OUR CORE
TRPARM   TR    D0(D0,R5),JTRTABLE       TR TO TRANSLATE TO INTERNAL
TRTPARM  TRT   D0(D0,R5),TRTTABLE       TRT TO SCAN FOR DELIMITER
MVCDWORD MVC   JDWORD(D0),D0(R5)        MVC OPTION TO JDWORD
MVCSYSPM MVC   D0(D0,R4),D0(R15)        MVC TO MOVE SYSPARM TO DEFAULT
         SPACE 1
COMPAREA EQU   JDWORD,10                JDWORD+JFWORD1 IN COMMA
PARMLEN  EQU   14                       LENGTH OF EACH ENTRY
BLANKS   JGENIN ' ',10                  10 INTERNAL BLANKS
PARMTAB  DS    0F                       OPTION TABLE
         JGENIN 'DECK',10
         SET   JDECK,ON                 SET DECK OPTION ON
         JGENIN 'NODECK',10
         SET   JDECK,OFF                SET DECK OPTION OFF
         JGENIN 'OBJECT',10
         SET   JLINK,ON                 SET OBJECT OPTION ON
         JGENIN 'OBJ',10
         SET   JLINK,ON                 SET OBJECT OPTION ON
         JGENIN 'NOOBJECT',10
         SET   JLINK,OFF                SET OBJECT OPTION OFF
         JGENIN 'NOOBJ',10
         SET   JLINK,OFF                SET OBJECT OPTION OFF
         JGENIN 'XREF',10
         B     SCAN600                  CHECK IF SHORT OR FULL
         JGENIN 'NOXREF',10
         SET   JXREF,OFF                SET XREF OPTION OFF
         JGENIN 'ESD',10
         SET   JESD,ON                  SET ESD OPTION ON
         JGENIN 'NOESD',10
         SET   JESD,OFF                 SET ESD OPTION OFF
         JGENIN 'RLD',10
         SET JRLD,ON                    SET RLD OPTION ON
         JGENIN 'NORLD',10
         SET   JRLD,OFF                 SET RLD OPTION OFF
         JGENIN 'RENT',10
         SET   JRENT,ON                 SET RENT OPTION ON
         JGENIN 'NORENT',10
         SET   JRENT,OFF                SET RENT OPTION OFF
         JGENIN 'ALIGN',10
         SET   JALGN,ON                 SET ALIGN OPTION ON
         JGENIN 'NOALIGN',10            SET ALIGN OPTION OFF
         SET   JALGN,OFF                SET ALIGN OPTION OFF
         JGENIN 'TERM',10
         SET   JTERM,ON                 SET TERM OPTION ON
         JGENIN 'TERMINAL',10
         SET   JTERM,ON                 SET TERM OPTION ON
         JGENIN 'NOTERM',10
         SET JTERM,OFF                  SET TERM OPTION OFF
         JGENIN 'NOTERMINAL',10
         SET   JTERM,OFF                SET TERM OPTION OFF
         JGENIN 'NUM',10
         SET   JNUM,ON                  SET NUM OPTION ON
         JGENIN 'NUMBER',10
         SET   JNUM,ON                  SET NUM OPTION ON
         JGENIN 'NONUM',10
         SET   JNUM,OFF                 SET NUM OPTION OFF
         JGENIN 'NONUMBER',10
         SET   JNUM,OFF                 SET NUM OPTION OFF
         JGENIN 'STMT',10
         SET   JSTMT,ON                 SET STMT OPTION ON
         JGENIN 'NOSTMT',10
         SET   JSTMT,OFF                SET STMT OPTION OFF
         JGENIN 'TEST',10
         SET   JTEST,ON                 SET TEST OPTION ON
         JGENIN 'NOTEST',10
         SET   JTEST,OFF                SET TEST OPTION OFF
         JGENIN 'MCALL',10
         SET   JCALLS,ON                SET MCALL OPTION DN
         JGENIN 'NOMCALL',10
         SET   JCALLS,OFF               SET MCALL OPTION OFF
         JGENIN 'ALOGIC',10
         SET   JALOGIC,ON               SET ALOGIC OPTION ON
         JGENIN 'NOALOGIC',10
         SET   JALOGIC,OFF              SET ALOGIC OPTION OFF
         JGENIN 'MLOGIC',10
         SET   JMLOGIC,ON               SET MLDGIC OPTION ON
         JGENIN 'NOMLOGIC',10
         SET   JMLOGIC,OFF              SET MLOGIC OPTION OFF
         JGENIN 'LIBMAC',10
         SET   JSYSMAC,ON               SET LIBMAC OPTION ON
         JGENIN 'NOLIBMAC',10
         SET   JSYSMAC,OFF              SET LIBMAC OPTION OFF
         JGENIN 'SYSMAC',10
         SET   JSYSMAC,ON               SET SYSMAC OPTION DN
         JGENIN 'NOSYSMAC',10
         SET   JSYSMAC,OFF              SET SYSMAC OPTION OFF
         JGENIN 'YFLAG',10              SET Y-CON FLAG ON      @OX09734
         SET   JYFLAG,ON                                       @OX09734
         JGENIN 'NOYFLAG',10            SET Y-CON FLAG OFF     @OX09734
         SET   JYFLAG,OFF                                      @OX09734
         JGENIN 'LIST',10
         SET   JLIST,ON                 SET LIST OPTION ON
         JGENIN 'NOLIST',10
         SET   JLIST,OFF                SET LIST OPTION OFF
         JGENIN 'BUF',10
         B     SCAN500                  HANDLE BUFSIZE OPTION
         JGENIN 'BUFSIZE',10
         B     SCAN500                  HANDLE BUFSIZE OPTION
         JGENIN 'FLAG',10
         B     SCAN200                  HANDLE FLAG OPTION
         JGENIN 'LINECOUNT',10
         B     SCAN300                  HANDLE LINECOUNT
         JGENIN 'LC',10
         B     SCAN300                  HANDLE LINECOUNT
         JGENIN 'SYSPARM',10
         B     SCAN410                  HANDLE SYSPARM
         JGENIN 'LOAD',10
         SET   JLINK,ON                 SET LOAD OPTION ON
         JGENIN 'NOLOAD',10
         SET   JLINK,OFF                SET LOAD OPTION OFF
         JGENIN 'ALGN',10
         SET   JALGN,ON                 SET ALIGN OPTION ON
         JGENIN 'NOALGN',10
         SET   JALGN,OFF                SET ALIGN OPTION OFF
         JGENIN 'CALLS',10
         SET   JCALLS,ON                SET CALLS OPTION ON
         JGENIN 'NOCALLS',10
         SET   JCALLS,OFF               SET CALLS OPTION OFF
         JGENIN 'MINBUF',10
         SET   JMINBUF,ON               SET MINBUF OPTION ON
         JGENIN 'NOMINBUF',10
         SET   JMINBUF,OFF              SET MINBUF OPTION OFF
         JGENIN 'MSGLEVEL',10
         B     SCAN210                  HANDLE MSGLEVEL
         JGENIN 'LINECNT',10
         B     SCAN310                  HANDLE LINECOUNT
PARMEND  DS    0F                       END OF OPTION TABLE
         SPACE 3
NSPRTMSG WTO   '&COMPNM.267  SYSPRINT DD CARD MISSING - NOLIST OPTION UX
               SED',ROUTCDE=(2,11),MF=L
         JPATCH X0D00,AC8               5% PATCH AREA
         SPACE 3
         END   START
