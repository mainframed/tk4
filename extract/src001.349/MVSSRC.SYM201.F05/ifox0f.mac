* /* START OF SPECIFICATIONS ****
*02* PROCESSOR = ASSEMBLER
**** END OF SPECIFICATIONS ***/
         GBLC  &COMPNM,&ASMID
         JHEAD 'INPUT I/O MODULE - PROLOG',                            X
               PHASEID=X0F,                                            X
               LEVEL=10
*                                                                     *
*FUNCTION/OPERATION-                                                  *
*   THIS MODULE IS THE INPUT I/O MODULE FOR THE ASSEMBLER.  IT IS     *
*   USED BY THE MACRO EDITOR TO READ SOURCE INPUT, COPY CODE AND      *
*   MACROS.                                                           *
*                                                                     *
*ENTRY POINT-                                                         *
*        START+0  - GET INPUT STATEMENT. DISPLACEMENT-JINPUT.         *
*        START+4  - FIND MACRO IN LIBRARY. DISPLACEMENT-JFIND.        *
*        START+8  - NOTE POSITION OF LIBRARY. DISPLACEMENT-JNOTELB.   *
*        START+12 - POINT TO NOTED POSITION. DISPLACEMENT-JPOINTLB.   *
*        START+16 - INITIALIZE INPUT I/O MODULE, OPEN INPUT FILES ON  *
*   FIRST ENTRY, CLOSE INPUT FILES ON SECOND ENTRY. DISP.-JININIT.    *
*                                                                     *
*INPUT-                                                               *
*   SYSIN, SYSLIB.                                                    *
*                                                                     *
*OUTPUT-                                                              *
*   N/A                                                               *
*                                                                     *
*EXTERNAL ROUTINES-                                                   *
*   N/A                                                               *
*                                                                     *
*EXITS, NORMAL-                                                       *
*   RETURN TO CALLER VIA REGISTER R9.                                 *
*   FOR JINPUT, CC=2 MEANS RECORD READ CORRECTLY. CC=0 MEANS EOF READ.*
*   FOR JFIND, CC=2 MEANS MACRO OR COPY CODE FOUND. CC=0 MEANS MACRO  *
*   OR COPY CODE NOT FOUND                                            *
*                                                                     *
*EXITS, ERROR-                                                        *
*   BRANCH TO JABORT IN COMMON.                                       *
*                                                                     *
*TABLE/WORK AREAS-                                                    *
*   REGISTER R13 POINTS TO COMMON.  JADINCM, WHICH IS LOADED INTO     *
*   REGISTER R7, POINTS TO THE INPUT COMMON AREA.                     *
*                                                                     *
*ATTRIBUTES-                                                          *
*   REFRESHABLE.                                                      *
*                                                                     *
*NOTES-                                                               *
         SPACE 3
         PRINT OFF                      DON'T PRINT JCOMMON COPY CODE
         COPY  JCOMMON                  JCOMMON COPY CODE
         PRINT ON                       THAT'S ALL WE WON'T PRINT
         SPACE
         TITLE '&COMPNM&ASMID - INPUT I/O MODULE - JINCOM COPY CODE'
         COPY  JINCOM
         SPACE 3
         TITLE '&COMPNM&ASMID - INPUT I/O MODULE - DCBD MACRO'
         DCBD  DSORG=(PS,PO),DEVD=(DA)
         SPACE 3
    TITLE '&COMPNM&ASMID - INPUT I/O MODULE - MAPPING DSECT (MAPDSECT)'
         IEZIOB
         SPACE 3
        TITLE '&COMPNM&ASMID - INPUT I/O MODULE - DDNAME OVERRIDE LIST'
P        DSECT                          DDNAME OVERRIDE LIST
PLEN     DS    H                        LENGTH OF LIST
         DS    3CL8                     (NOT APPLICABLE)
PSYSLIB  DS    CL8                      SYSLIB DDNAME
PSYSIN   DS    CL8                      SYSIN DDNAME
PSYSPRIN DS    CL8                      SYSPRINT DDNAME
PSYSPUNC DS    CL8                      SYSPUNCH DDNAME
PSYSUT1  DS    CL8                      SYSUT1 DDNAME
PSYSUT2  DS    CL8                      SYSUT2 DDNAME
PSYSUT3  DS    CL8                      SYSUT3 DDNAME
PSYSGO   DS    CL8                      SYSGO DDNAME
D80      EQU   80                       DECIMAL 80
         SPACE 5
         TITLE '&COMPNM&ASMID - INPUT I/O MODULE - MAINLINE CONTROL'
* VS1 RELEASE 3.1 CHANGES
*C678000                                                        OY02543
*A258500-259500                                                @0Z04367
*A705100,705200                                                @AX19477
*C706500                                                       @AX19477
         JCSECT (X0F00)                 SECTION ID
         JMODID                         EMBEDDED IDENTIFIER
         USING START,R12                SET BASE OF R12
START    B     INPUT                    JINPUT ENTRY
         B     FIND                     JFIND ENTRY
         B     NOTELB                   JNOTELB ENTRY
         B     POINTLB                  JPOINTLB ENTRY
         B     ININIT                   INIT & TERM ENTRY
         SPACE 3
         JENTRY (X0F01=START)           MODULE ENTRY POINT
         SPACE 3
SAVE     JSAVE BASE=NO                  SAVE REGISTERS
         L     R7,JADINCM               LOAD ADDRESS OF INPUT COMMON
         BR    R14                      NOW GO ON WITH BUSINESS
         SPACE 3
RETURN   JRETURN                        RESTORE REGISTERS & RETURN
         SPACE 5
         TITLE '&COMPNM&ASMID - INPUT I/O MODULE - ''JINPUT'' ROUTINE'
INPUT    BAL   R14,SAVE                 GO SAVE REGISTERS
         GOIF  JINLIB,ON=INLIB          INPUT FROM LIBRARY
         LA    R6,RETURN                LOAD RETURN ADDR FOR EOD USE
         L     R1,JSYSIN                LOAD INPUT FILE DEF ADDRESS
         LR    R11,R10                  SAVE R10               @0Z04367
         LA    R10,XTIN                 GET ADDRESS TO EXIT    @OZ04367
         GET   (1)                      GET A RECORD. ADDR IN R1
         L     R14,JRECIN               WELL...NO EOF, THEN COUNT CARDS
         LA    R14,D1(,R14)             ONE MORE CARD READ
         ST    R14,JRECIN               SAVE IT FOR NEXT TIME
         TR    D0(D80,R1),JTRTABLE      TRANSLATE STATEMENT
         LTR   R11,R1                   PASS BACK RECORD ADDRESS, SET
         B     RETURN                   CC=2 AND RETURN
         SPACE 3
INLIB    LH    R4,JLIBNDX               GET BUFFER INDEX
         AH    R4,=H'80'                ADD 80 (LOGICAL RECORD LENGTH)
         L     R5,JLIBBUF               POINT TO PHYSICAL BUFFER
         GOIF  JREADPT,ON=READ          READ NECESSARY FOR POINT
CHECKSIZ CH    R4,JBLKSIZE              HAVE WE EXAUSTED PHY REC
         BL    NOREAD                   NO.
READ     LA    R6,RETURN                EOF RETURN PT AFTER CC=0
         READ  JLIBDECB,SF,,(R5),MF=E   READ PHY RECORD
         CHECK JLIBDECB                 CHECK READ
         L     R1,JSYSLIB               POINT TO DCB
         USING IHADCB,R1                FIND RECORD SIZE
         L     R14,DCBIOBA              GET ADDR OF IOB
         LH    R15,DCBBLKSI             RECORD SIZE = READ LENGTH -
         USING IOBBPAMN,R14             SET UP IOB USING
         SH    R15,IOBCSW+5             GET RESIDUAL COUNT
         DROP  R14
         STH   R15,JBLKSIZE               ''
         DROP  R1                       DROP DCB BASE
         GOIF  JREADPT,OFF=RESET        READ WASN'T NECESSARY FOR POINT
         SET   JREADPT,OFF              SET READ BECUASE OF POINT OFF
         B     CHECKSIZ                 CHK TO SEE IF END OF BUF
RESET    SR    R4,R4                    ZERO BUFFER INDEX
NOREAD   STH   R4,JLIBNDX               SAVE BUFFER INDEX
         LA    R11,D0(R4,R5)            LOG ADDR=PHY ADDR+INDEX
         TR    D0(D80,R11),JTRTABLE     TRANSLATE TO INTERNAL
         L     R14,JRECLIB              ADD ONE TO LIB CARD COUNT
         LA    R14,D1(,R14)             ''
         ST    R14,JRECLIB              ''
         LTR   R11,R11                  SET CC=2 (NO EOF) AND
         B     RETURN                   RETURN
         SPACE 5
         TITLE '&COMPNM&ASMID - INPUT I/O MODULE - ''JFIND'' ROUTINE'
FIND     BAL   R14,SAVE                 GO SAVE REGISTERS
         L     R1,JSYSLIB               POINT TO DCB
         USING IHADCB,R1                ''
         TM    DCBOFLGS,BIT3            WAS OPEN SUCCESSFUL
         BNZ   OPENSUC                  BR IF OPEN NOT SUCCESSFUL
         L     R2,JINOPEN               OPEN LIST
         TM    D0(R2),BIT0              DD CARD FOUND
         BZ    RETURN                   YES
         SET   JMISLIB,ON               SYSLIB DD CARD MISSING
         SR    R2,R2                    SET NOT FOUND
         B     RETURN                   RETURN
         DROP  R1
OPENSUC  MVC   JDWORD,D0(R10)           CONVERT MEMBER NAME
         TR    JDWORD,JTRTABLE          ''
         FIND  (1),JDWORD,D             FIND MEMBER
         SH    R15,=H'4'                CHECK RETURN CODE
         BZ    RETURN                   RC=4.  MEMBER NOT FOUND.  CC=0
         BP    ABORTFND                 RC=3  I/O ERROR.
         MVC   JLIBNDX,=X'7FAF'         FORCE READ
         SET   JREADPT,OFF              RESET FLAG
         LTR   R13,R13                  RC=0.  MEMBER FOUND.  CC=2
         B     RETURN                   RETURN
         SPACE 4
ABORTFND L     R1,JSYSLIB               PT TO DCB
         USING IHADCB,R1                ''
         O     R1,=X'FF000000'          SET FLAG TO INDICATE FIND ABORT
         L     R15,DCBSYNAD             GET ADDRESS OF SYDAD ROUTINE
         DROP  R1                       DROP DCB BASE
         BR    R15                      NOW GO ABORT
         SPACE 5
         TITLE '&COMPNM&ASMID - INPUT I/O MODULE - ''NOTELB'' AND ''POIX
               NT'' ROUTINES'
         SPACE 2
NOTELB   BAL   R14,SAVE                 GO SAVE REGISTERS
         L     R1,JSYSLIB               POINT TO DCB
         NOTE  (1)                      NOTE LIBRARY POSITION
         ST    R1,JNOTEVAL              SAVE FILE POSITION
         MVC   JNOTEVAL+D6(D2),JLIBNDX  SAVE BUFFER INDEX
         B     RETURN                   RETURN
         SPACE 6
POINTLB  BAL   R14,SAVE                 GO SAVE REGISTERS
         MVC   JFWORD1,D0(R10)          ALIGN TO FULLWORD
         L     R1,JSYSLIB               POINT TO DCB
         POINT (1),JFWORD1              POSITION LIBRARY
         MVC   JLIBNDX,D6(R10)          SET BUFFER INDEX
         SET   JREADPT,ON               INDICATE NEXT READ IS FOR POINT
         B     RETURN                   RETURN
         SPACE 3
         TITLE '&COMPNM&ASMID - INPUT I/O MODULE - OPEN ROUTINE FOR ''SX
               YSIN'' AND ''SYSLIB'' DCB''S'
ININIT   BAL   R14,SAVE                 GO SAVE REGISTERS
         GOIF  JIN2ND,ON=CLOSE          SECOND TIME HERE
         SET   JIN2ND,ON                FIRST TIME. SET FLAG
         SPACE 2
         TM    D0(R11),BIT0             ANY OVERRIDING DDNAMES
         BO    NOPARM                   BR IF END OF PARM LIST
         L     R14,D4(,R11)             PT TO DDNAME LIST
         USING P,R14                    ESTABLISH PARMLIST BASE
         LA    R15,P                    CLEAR END-OF-LIST FLAG
         AH    R15,PLEN                 CALC END OF TABLE (-2)
         SPACE 1
         L     R1,JSYSLIB               PT TO SYSLIB DCB
         LA    R2,PSYSLIB               PT TO SYSLIB DDNAME
         BAL   R9,OVERRIDE              CHECK FOR OVERRIDE
         SPACE 1
         L     R1,JSYSIN                PT TO SYSIN DCB
         LA    R2,PSYSIN                PT TO SYSIN DDNAME
         BAL   R9,OVERRIDE              CHECK FOR OVERRIDE
         DROP  R14                      DROP DSECT BASE
         SPACE 2
         USING IHADCB,R1                BASE FOR DCB
NOPARM   L     R1,JSYSLIB               POINTS TO SYSLIB DCB
         LA    R15,DCBDDNAM             POINTS TO SYSLIB DDNAME
         DROP  R1
DSYSLIB  DEVTYPE (R15),JDWORD           GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    ININIT5                  YES
         L     R15,JINOPEN              POINT TO OPEN LIST
         OI    D0(R15),BIT0             DO NOT OPEN SYSLIB
         L     R15,JINCLOS              POINT TO CLOSE LIST
         OI    D0(R15),BIT0             DO NOT CLOSE SYSLIB
ININIT5  LA    R10,XTIN                 ADDRESS OF SYSIN LIB DCB EXIT
         L     R1,JINOPEN               OPEN INPUT
         OPEN  MF=(E,(1))               ''
         SPACE 2
         USING IHADCB,R1                ESTABLISH ADDRESSABILITY
         L     R1,JSYSLIB               PT TO SYSLIB DCB
         TM    DCBOFLGS,BIT3            WAS OPEN SUCCESSFUL
         BZ    RETURN                   NO.  RETURN
         SPACE 2
         LH    R0,DCBBLKSI              GET BUFFER FOR LIBRARY
         DROP  R1                       DROP DCB BASE
         GETMAIN R,LV=(0)               ACQUIRE CORE
         ST    R1,JLIBBUF               SAVE LIBRARY BUFFER ADDRESS
         B     RETURN                   RETURN
         SPACE
         TITLE '&COMPNM&ASMID - INPUT I/O MODULE - CLOSE ROUTINE FOR ''X
               SYSIN'' AND ''SYSLIB'' DCB''S'
CLOSE    L     R1,JSYSLIB               POINT TO DCB
         USING IHADCB,R1                ''
         TM    DCBOFLGS,BIT3            WAS OPEN SUCCESSFUL FOR LIBRARY
         BZ    NOTSUC                   NOT SUCCESSFUL
         LH    R0,DCBBLKSI              GET BUFFER LENGTH
         DROP  R1                       DROP DCB BASE
         L     R1,JLIBBUF               GET LIBRARY BUFFER ADDRESS
         FREEMAIN R,LV=(0),A=(1)        FREE LIBRARY BUFFER
NOTSUC   L     R1,JINCLOS               CLOSE INPUT
         CLOSE MF=(E,(1))               ''
         SPACE 3
         L     R1,JSYSIN                PT TO SYSIN DCB
         USING IHADCB,R1                ''
         TM    DCBBUFCB+D3,BIT7         IS THERE A BUFCB
         BO    NOBUFCB                  BR IF NO BUFCB
         FREEPOOL (1)                   FREE BUFFERS IN BUFCB
         DROP  R1                       DROP DCB BASE
         SPACE 1
NOBUFCB  XC    JADINCM,JADINCM          ZERO ADDRESS FOR ABORT MODULE
         B     RETURN                   RETURN
         SPACE 2
         TITLE '&COMPNM&ASMID - INPUT I/O MODULE - DCB OVERRIDE AND DCBX
                EXIT ROUTINE FOR ''SYSIN'' AND ''SYSLIB'' DCB''S'
         USING IHADCB,R1                ESTABLISH BASE FOR DCB
OVERRIDE CR    R2,R15                   PAST END OF LIST
         BHR   R9                       YES, RETURN
         CLC   D0(D8,R2),=8X'00'        IS DDNAME ZERO          OY02543
         BZR   R9                       YES, RETURN
         MVC   DCBDDNAM,D0(R2)          OVERRIDE DDNAME
         BR    R9                       RETURN
         DROP  R1                       DROP DCB BASE
         SPACE 3
         USING IHADCB,R1                ESTABLISH ADDR OF DCB
*        DCB EXIT FOR SYSIN & SYSLIB
         USING *,R10                    ESTABLISH BASE ADDRESS
XTIN     LH    R3,DCBLRECL              LOGICAL RECORD LENGTH
         TM    DCBRECFM,BIT0+BIT1       UNDEFINED LRECL        @AX19477
         BO    XTIN05                   BRANC IF YES           @AX19477
         TM    DCBRECFM,BIT0            FIXED RECORD LENGTH
         BNZ   XTIN10                   NO, MAKE RECFM=FB
XTIN05   MVI   DCBRECFM,BIT0+BIT3       FORCE RECFM=FB         @AX19477
XTIN10   LH    R5,DCBBLKSI              IS BLKSIZE SPECIFIED
         LTR   R5,R5
         BZ    XTIN20                   NO, GO SET DEFAULT BLKSIZE
         CR    R3,R5                    BLKSIZE LESS THAN LRECL
         BH    XTIN20                   IF SO SET BLKSIZE=LRECL
         OI    DCBRECFM,BIT3            SET BLOCKED
         LR    R3,R5                    SAVE BLKSIZE
         LH    R2,DCBLRECL              LOGICAL RECORD LENGTH
         SR    R4,R4                    ZERO FOR DIVIDE
         DR    R4,R2                    R4(REMAINDER)=R4R5/R2 LRECL
         SR    R3,R4                    NOW BLKSIZE IS MULT OF LRECL
         B     XTIN30                   STORE BLKSIZE
XTIN20   NI    DCBRECFM,BITFF-BIT3      SET UNBLOCKED
XTIN30   STH   R3,DCBBLKSI              STORE BLKSIZE
         BR    R14
         DROP  R1,R10                   DROP BASES
         SPACE 5
*        PATCH AREA
*
         JPATCH X0F00,302               5% PATCH AREA
         END   START
