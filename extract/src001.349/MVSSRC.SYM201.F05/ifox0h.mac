* /* START OF SPECIFICATIONS ****
*02* PROCESSOR = ASSEMBLER
**** END OF SPECIFICATIONS ***/
         GBLC  &COMPNM,&ASMID           GLOBAL VARIABLES
         JHEAD 'OUTPUT I/O MODULE - PROLOG',                           X
               PHASEID=X0H,                                            X
               LEVEL=10
*                                                                     *
*FUNCTION/OPERATION-                                                  *
*   THIS MODULE IS THE OUTPUT PACKAGE FOR THE ASSEMBLER.  THE OTHER   *
*   PHASES INTERFACE WITH THIS MODULE BY USE OF THE JPRINT AND JPUNCH *
*   MACROS.                                                           *
*                                                                     *
*ENTRY POINT-                                                         *
*        START+0    LOCATE PRINT BUFFER & PRINT PREVIOUS BUFFER.      *
*   DISPLACEMENT-JPRINT.                                              *
*        START+4  - LOCATE PUNCH BUFFER & PUNCH PREVIOUS BUFFER.      *
*   DISPLACEMENT-JPUNCH.                                              *
*        START+8  - INITIALIZE OUTPUT I/O MODULE.  OPEN OUTPUT FILES  *
*   (AS REQUIRED), CLOSE OUTPUT FILES ON SECOND ENTRY. DISP.-JOUTINIT.*
*                                                                     *
*INPUT-                                                               *
*   N/A                                                               *
*                                                                     *
*OUTPUT-                                                              *
*   SYSPRINT, SYSPUNCH, SYSLIN.                                       *
*                                                                     *
*EXTERNAL ROUTINES-                                                   *
*   N/A                                                               *
*                                                                     *
*EXITS, NORMAL-                                                       *
*   RETURN TO CALLER VIA REGISTER R9.                                 *
*                                                                     *
*EXITS, ERROR-                                                        *
*   N/A                                                               *
*                                                                     *
*TABLE/WORK AREAS-                                                    *
*   REGISTER R13 POINTS TO COMMON.  JADOUTCM, WHICH IS LOADED INTO    *
*   REGISTER R7, POINTS TO THE OUTPUT COMMON AREA.                    *
*                                                                     *
*ATTRIBUTES-                                                          *
*   REFRESHABLE                                                       *
*                                                                     *
*NOTES-                                                               *
         SPACE 2
         PRINT OFF                      DON'T PRINT JCOMMON COPY CODE
         COPY  JCOMMON
         PRINT ON                       THAT'S ALL WE WON'T PRINT
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - JOUTCOM COPY CODE'
         COPY  JOUTCOM
         SPACE 2
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - DCBD MACRO'
         DCBD  DSORG=(PS),DEVD=(DA)
         SPACE 3
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - PRINT IMAGE, PUNCH I
               IMAGE AND DDNAME OVERRIDE DDNAME LIST DSECT''S'
PRTLINE  DSECT                          PRINTLINE DSECT
CC       DS    X                        CARRIAGE CONTROL
EJECT    EQU   0                        EJECT CONTROL CODE
SPACE1   EQU   1                        SINGLE SPACE CONTROL CODE
SPACE2   EQU   2                        DOUBLE SPACE CONTROL CODE
SPACE3   EQU   3                        TRIPLE SPACE CONTROL CODE
IMAGE    DS    CL120                    PRINT IMAGE
         SPACE 6
PCHLINE  DSECT                          PUNCHLINE DSECT
PCHIMAGE DS    0CL80                    CARD IMAGE
PCHDATA  DS    CL72                     FIRST 72 COLUMNS
PCHSEQ   DS    CL8                      ID & SEQUENCE FIELDS
         SPACE 6
P        DSECT                          DDNAME OVERRIDE LIST
PLEN     DS    H                        LENGTH OF LIST
         DS    3CL8                     (NOT APPLICABLE)
PSYSLIB  DS    CL8                      SYSLIB DDNAME
PSYSIN   DS    CL8                      SYSIN DDNAME
PSYSPRIN DS    CL8                      SYSPRINT DDNAME
PSYSPUNC DS    CL8                      SYSPUNCH DDNAME
PSYSUT1  DS    CL8                      SYSUT1 DDNAME
PSYSUT2  DS    CL8                      SYSUT2 DDNAME
PSYSUT3  DS    CL8                      SYSUT3 DDNAME
PSYSGO   DS    CL8                      SYSGO DDNAME
PSYSTERM DS    CL8                      SYSTERM DDNAME
         SPACE 3
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - MAINLINE CONTROL'
* VS1 RELEASE 3.1 CHANGES
*C741000                                                        OY02543
*A324500-326000,360500                                         @AX14816
         JCSECT (X0H00)
         JMODID                         EMBEDDED IDENTIFIER
         USING START,R12                SET BASE TO R12
START    B     PRINT                    JPRINT ENTRY
         B     PUNCH                    JPUNCH ENTRY
         B     OUTINIT                  INIT & TERM ENTRY
         B     TSOPRINT                 GO PRINT TO TERMINAL
         SPACE 3
         JENTRY (X0H01=START)
         SPACE 3
SAVE     JSAVE BASE=NO                  SAVE REGISTERS
         L     R7,JADOUTCM              LOAD ADDRESS OF OUTPUT COMMON
         BR    R14                      NOW GO ON WITH BUSINESS
         SPACE 3
RETURN   JRETURN                        RESTORE REGISTER & RETURN
         SPACE 3
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - TSOPRINT ROUTINE'
         USING PRTLINE,R1
TSOPRINT BAL   R14,SAVE                 GO SAVE REGISTERS
         GOIF  BYPASTRM,OFF=FIRSTRM     FIRST TERM PRINT
         L     R1,JCURTRM               PICK UP CURRENT BUFFER ADDR
         TR    CC,CCTRTAB               TRANSLATE CC TO EXTERNAL
         TR    IMAGE,JTRTABLE           TRANSLATE PRINT LINE
         GOIF  CLOSTRM,ON=RETURN        FINAL PRINT (IN CLOSE ROUTINE)
FIRSTRM  SET   BYPASTRM,ON              INDICATE NOT 1ST PRINT
         L     R1,JSYSTRM               LOAD TERM FILE DEF ADDR
         PUT   (1)                      PUT CURRENT REC & GET NEW ADDR
         ST    R1,JCURTRM               SAVE NEW BUFFER ADDRESS
         MVC   CC,D0(R11)               INIT LINE TO SINGLE SPACE
         MVC   IMAGE(L'IMAGE),D1(R11)   MOVE TERM BUFFER CONTENT
         LR    R11,R1                   TRANSFER NEW BUFFER ADDRESS
         B     RETURN                   RETURN TO CALLER
         DROP  R1
         SPACE 3
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - JPRINT ROUTINE'
         USING PRTLINE,R1               DEFINE BASE FOR PRINTLINE
PRINT    BAL   R14,SAVE                 GO SAVE REGISTERS
         GOIF  BYPASPRT,OFF=FIRSTPRT    FIRSTPRINT
         L     R1,JCURPRT               GET CURRENT PRINT BUFFER
         GOIF  JSUPPRT,OFF=PRINT5       IF SUPPRESS SW OFF BR  @AX14816
         SET   JSUPPRT,OFF              RESET SUPPRESS SW      @AX14816
         B     PRINT10                  DON'T PRINT-JUST DUMMY @AX14816
PRINT5   EQU   *                                               @AX14816
         LH    R14,=H'1'                GET INCREMENT
         A     R14,JRECPRT              ADD OLD COUNT
         ST    R14,JRECPRT              STORE NEW COUNT
         TR    CC,CCTRTAB               TRANSLATE IN.CC TO ASA CC
         TR    IMAGE,JTRTABLE           TRANSLATE PRINT LINE
         GOIF  CLOSPRT,ON=RETURN        FINAL PRINT (IN CLOSE ROUTINE)
FIRSTPRT SET   BYPASPRT,ON              AT LEAST ONE PRINT HAS OCCURED
         L     R1,JSYSLST               LOAD PRINT FILE DEF ADDRESS
         PUT   (1)                      PUT CURRENT REC & GET NEW ADDR
         ST    R1,JCURPRT               SAVE NEW BUFFER ADDRESS AND
PRINT10  EQU   *                                               @AX14816
         MVI   CC,SPACE1                INIT LINE TO SINGLE SPACE
         MVI   IMAGE,JBLANK             NOW BLANK LINE
         MVC   IMAGE+D1(L'IMAGE-D1),IMAGE  BLANK OUT LINE
         LR    R11,R1                   RETURN BUFFER ADDRESS TO CALLER
         B     RETURN                   RETURN
         DROP  R1
         SPACE 3
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - JPUNCH ROUTINE'
         USING PCHLINE,R1               SET PUNCH LINE BASE
PUNCH    BAL   R14,SAVE                 GO SAVE REGISTERS
         GOIF  BYPASPCH,OFF=FIRSTPCH    FIRST PUNCH
         L     R1,JCURPCH               GET CURRENT PUNCH BUFFER
         GOIF  NOSEQ,ON=DONOTSEQ        NOT TO BE SEQUENCED
         LH    R14,JDECKSEQ             INCREMENT DECK SEQ BY ONE
         LA    R14,D1(,R14)             ''
         STH   R14,JDECKSEQ             ''
         CVD   R14,JDWORD               CONVERT TO DECIMAL
         UNPK  PCHSEQ,JDWORD            UNPACK
         NC    PCHSEQ,=8X'0F'           AND OUT ZONES (TO INTERNAL)
         SR    R14,R14                  ZERO REG
         IC    R14,JDECKIDL             GET LENGTH OF DECKID
         SH    R14,=H'1'                DECREMENT BY ONE
         BM    NOID                     BR IF NO DECKID
         EX    R14,MVCID                MOVE ID TO PCHSEQ
NOID     TR    PCHSEQ,JTRTABLE          TRANSLATE PCHSEQ TO EXTERNAL
         B     DONTTR                   DON'T TRANSLATE ANYTHING ELSE
DONOTSEQ TR    PCHIMAGE,JTRTABLE        TRANSLATE TO EXTERNAL
DONTTR   GOIF  (JDECK,JLINK),NOTALL=NOALT NOT DECK & LINK
         LR    R2,R1                    PUT RECORD TO OBJECT FILE TOO
         L     R1,JSYSLNK               LOAD LINK FILE DEF ADDR
         PUT   (1)                      LOCATE BUFFER
         MVC   PCHIMAGE,D0(R2)          MOVE FROM PUNCH TO LINK BUFFER
NOALT    GOIF  CLOSPCH,ON=RETURN        FINAL PUNCH (IN CLOSE ROUTINE)
FIRSTPCH SET   (BYPASPCH,NOSEQ),ON      AT LEAST ONE PUNCH AS OCCURED
         GOIF  JNOSEQPH,ON=DONTSEQ      RECORD IS NOT TO BE SEQUENCED
         SET   NOSEQ,OFF                SEQ RECORD NEXT TIME AROUND
DONTSEQ  L     R1,JSYSLNK               LOAD LINK FILE DEF ADDR
         GOIF  JDECK,OFF=PUTLINK        NODECK
         L     R1,JSYSPCH               LOAD PUNCH FILE DEF ADDR
PUTLINK  PUT   (1)                      LOCATE BUFFER
         ST    R1,JCURPCH               SAVE NEW BUFFER ADDRESS
         L     R14,JRECPCH              ADD ONE TO PUNCH RECORD COUNT
         LA    R14,D1(,R14)             ''
         ST    R14,JRECPCH              ''
         MVI   PCHIMAGE,JBLANK          INIT TO INTERNAL BLANKS
         MVC   PCHIMAGE+D1(L'PCHIMAGE-D1),PCHIMAGE ''
         SET   JNOSEQPH,OFF             RESET NOSEQ SWITCH
         LR    R11,R1                   RETURN BUFFER ADDR TO CALLER
         B     RETURN                   RETURN
MVCID    MVC   PCHSEQ(*-*),JDECKID     OUT-OF-LINE MVC OF DECKID
         DROP  R1                       DROP PUNCH LINE BASE
         SPACE 3
        TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - DCB OPEN'
OUTINIT  BAL   R14,SAVE                 GO SAVE REGISTERS
         GOIF  JOUT2ND,ON=CLOSE         SECOND TIME HERE
         SET   JOUT2ND,ON               FIRST TIME. SET FLAG
         SPACE 3
         TM    D0(R11),BIT0             ANY OVERRIDING DDNAMES
         BO    NOPARM                   BR IF END OF PARM LIST
         L     R14,D4(,R11)             PT TO DDNAME LIST
         USING P,R14                    ESTABLISH PARMLIST BASE
         LA    R15,P                    CLEAR END-OF-LIST FLAG
         AH    R15,PLEN                 CALC END OF TABLE (-2)
         SPACE 1
         L     R1,JSYSLST               PT TO SYSPRINT DCB
         LA    R2,PSYSPRIN              PT TO SYSPRINT DDNAME
         BAL   R9,OVERRIDE              CHECK FOR OVERRIDE
         SPACE 1
         L     R1,JSYSPCH               PT TO SYSPUNCH DCB
         LA    R2,PSYSPUNC              PT TO SYSPUNCH DDNAME
         BAL   R9,OVERRIDE              CHECK FOR OVERRIDE
         SPACE 1
         L     R1,JSYSLNK               PT TO SYSLIN DCB
         LA    R2,PSYSGO                PT TO DDNAME
         BAL   R9,OVERRIDE              CHECK FOR OVERRIDE
         SPACE 1
         L     R1,JSYSTRM               PT TO SYSTRM DCB
         LA    R2,PSYSTERM              PT TO DDNAME
         BAL   R9,OVERRIDE              CHECK FOR OVERRIDE
         DROP  R14                      DROP DSECT BASE
NOPARM   DC    0H'0'                    CONTINUE
         SPACE 3
         LM    R1,R2,JOUTOPEN           LOAD ADDR OF OPEN & CLOSE PL
         GOIF  JTERM,OFF=NOTERM         TERM OPTION ON
         GOIF  (JLIST,JDECK,JLINK),ALL=OPEN,     OK ALL ON             X
               ELSE=CHECK               MODIFY PARAMETER LIST FOR OPEN
NOTERM   GOIF  (JLIST,JDECK,JLINK),NONE=RETURN NO DATA SETS NEEDED
CHECK    EQU   *
         SR    R14,R14                  ZERO INDEX
         LM    R3,R4,D4(R1)             OPEN PARM LIST (PCH, LNK)
         LM    R5,R6,D4(R2)             CLOS PARM LIST (PCH, LNK)
         GOIF  JLIST,OFF=NOPENLST       LIST OPTION OFF
         LA    R14,D4(,R14)             INCREMENT PTR (LST ALREADY ST)
NOPENLST GOIF  JDECK,OFF=NOPENPCH       DECK OPTION OFF
         ST    R3,D0(R14,R1)            STORE PCH DCB ADDR (OPEN)
         ST    R5,D0(R14,R2)            STORE PCH DCB ADDR (CLOSE)
         LA    R14,D4(,R14)             INCREMENT PTR
NOPENPCH GOIF  JLINK,OFF=NOPENLNK       LINK OPTION IS OFF
         ST    R4,D0(R14,R1)            STORE LNK DCB ADDR (OPEN)
         ST    R6,D0(R14,R2)            STORE LNK DCB ADDR (CLOSE)
         LA    R14,D4(,R14)             INCREMENT PTR
NOPENLNK GOIF  JTERM,OFF=NOPENTRM       TERM OPTION IS OFF
         L     R4,D12(R1)               OPEN PARM LIST (TRM)
         L     R6,D12(R2)               CLOSE PARM LIST (TRM)
         ST    R4,D0(R14,R1)            STORE TRM DCB ADDR(OPEN)
         ST    R6,D0(R14,R2)            STORE TRM DCB ADDR(CLOSE)
         LA    R14,D4(R14)              INCREMENTE POINTER
NOPENTRM SH    R14,=H'4'                DECREMENTE POINTER
         LA    R3,D0(R14,R1)            PT TO LAST OPEN PARM
         OI    D0(R3),BIT0              SET END OF OPEN PARM LIST
         LA    R3,D0(R14,R2)            POINT TO LAST CLOSE PARM
         OI    D0(R3),BIT0              SET END OF LIST FLAG
         SPACE 3
OPEN     LA    R10,XTPRT                ADDR OF SYSPRINT DCB EXIT
         LA    R11,XTPCHLIN             ADDR OF SYSPUNCH,LIN DCB EXIT
         OPEN  MF=(E,(1))               OPEN FILES
         SPACE 3
         B     RETURN                   RETURN
         SPACE 3
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - DCB CLOSE'
CLOSE    GOIF  (JLIST,JDECK,JLINK),ANY=CLOSE1 IF ANY ON CLOSE DATA SETS
         GOIF  JTERM,OFF=RETURN         IF NONE ON RETURN
CLOSE1   SET   (CLOSPRT,CLOSPCH,CLOSTRM),ON INDICATE FINAL PRINT & PCH
         GOIF  JLIST,OFF=NOLIST         LIST OPTION OFF
         BAL   R9,PRINT                 FORCE OUT LAST BUFFER
NOLIST   GOIF  JTERM,OFF=NOJTERM        IS TERM OPTION USED
         BAL   R9,TSOPRINT              PRINT LAST SYSTERM TOO
NOJTERM  GOIF  (JDECK,JLINK),NONE=NODKLK DECK & LINK OPTIONS OFF
         GOIF  BYPASPCH,OFF=NODKLK      NO CARDS PUNCHED
         BAL   R9,PUNCH                 FORCE OUT LAST BUFFER
NODKLK   L     R1,JOUTCLOS              CLOSE OUTPUT
         CLOSE MF=(E,(1))               ''
         SPACE 1
         L     R1,JSYSLST               PT TO SYSPRINT DCB
         BAL   R9,FREEPOOL              GO FREE BUFFERS
         L     R1,JSYSPCH               PT TO SYSPUNCH DCB
         BAL   R9,FREEPOOL              GO FREE BUFFERS
         L     R1,JSYSLNK               PT TO SYSLIN DCB
         BAL   R9,FREEPOOL              GO FREE BUFFERS
         L     R1,JSYSTRM               PT TO SYSTRM DCB
         BAL   R9,FREEPOOL              GO FREE BUFFERS
         SPACE 1
         XC    JADOUTCM,JADOUTCM        ZERO ADDRESS FOR ABORT MODULE
         B     RETURN                   RETURN
         SPACE 3
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - DDNAME OVERRIDE ROUT
               TINE AND DCB EXIT ROUTINES'
         USING IHADCB,R1                ESTABLISH BASE FOR DCB
OVERRIDE CR    R2,R15                   PAST END OF LIST
         BHR   R9                       YES, RETURN
         CLC   D0(D8,R2),=8X'00'        IS DDNAME ZERO          OY02543
         BZR   R9                       YES, RETURN
         MVC   DCBDDNAM,D0(R2)          OVERRIDE DDNAME
         BR    R9                       RETURN
         DROP  R1                       DROP DCB BASE
         SPACE 2
         USING IHADCB,R1
*        DCB EXIT FOR SYSPRINT AND SYSTERM
         USING *,R10                    ESTABLISH BASE ADDRESS
XTPRT    LH    R3,DCBLRECL              LD DEFAULT BLKSIZE
         NI    DCBRECFM,BITFF-BIT6      TURN OFF M BIT
         OI    DCBRECFM,BIT5            TURN ON A BIT
         TM    DCBRECFM,BIT0            IS RECORD LENGTH FIXED (F)
         BO    XTALL10                  YES, GO CHECK FOR RECFM=FB
         MVI   DCBRECFM,BIT0+BIT3+BIT5  SET RECFM=FBA
         B     XTALL10                  GO CHECK BLKSIZE
         DROP  R10                      DROP BASE
         SPACE
*        DCB EXIT FOR SYSPUNCH & SYSLIN
         USING *,R11                    ESTABLISH BASE ADDRESS
XTPCHLIN LH    R3,DCBLRECL              LD DEFAULT BLKSIZE
         NI    DCBRECFM,BITFF-BIT5-BIT6 TURN OFF M & A BITS
         TM    DCBRECFM,BIT0            IS RECORD LENGTH FIXED (F)
         BO    XTALL10                  YES, GO CHECK FOR RECFM=FB
         MVI   DCBRECFM,BIT0+BIT3       SET RECFM=FB
         DROP  R11                      DROP BASE
         SPACE
XTALL10  BALR  R15,R0                   ESTABLISH BASE ADDRESS IN REG
         USING *,R15                    ''
         LH    R5,DCBBLKSI              IS BLKSIZE SPECIFIED
         LTR   R5,R5                    ''
         BZ    XTALL30                  NO, GO SET DEFAULT BLKSIZE
         CR    R3,R5                    BLKSIZE LESS THAN LRECL?
         BH    XTALL30                  IF SO SET BLKSIZE=LRECL
         OI    DCBRECFM,BIT3            SET BLOCKED
         LR    R3,R5                    SAVE BLKSIZE FOR LATER USE
         LH    R2,DCBLRECL              GET LOGICAL RECORD LENGTH
         SR    R4,R4                    ZERO FOR DIVIDE
         DR    R4,R2                    R4(REMAINDER)=R4R5 / R2(LRECL)
         SR    R3,R4                    NOW BLKSIZE IS MULT OF LRECL
XTALL20  STH   R3,DCBBLKSI              STORE BLKSIZE IN DCB
         BR    R14                      RETURN TO OPEN
XTALL30  NI    DCBRECFM,BITFF-BIT3      SET UNBLOCKED
         B     XTALL20                  SET DEFAULT BLKSIZE
         DROP  R1,R15                   DROP BASES
         TITLE '&COMPNM&ASMID - OUTPUT I/O MODULE - FREEPOOL ROUTINE, CO
               ONSTANTS AND PATCH AREA'
         USING IHADCB,R1                ESTABLISH DCB ADDRESSABILITY
FREEPOOL TM    DCBBUFCB+D3,BIT7         IS THERE A BUFCB
         BOR   R9                       RETURN IF NO BUFCB
         FREEPOOL (1)                   FREE BUFFERS IN BUFCB
         BR    R9                       RETURN
         DROP  R1                       DROP DCB BASE
         SPACE 3
*        CONSTANTS
*
CCTRTAB  DC    C'1 0-'                  ASA CC FOR EJECT,SINGLE,DOUBLE X
                                        AND TRIPLE SPACE
         SPACE 3
         JPATCH X0H00,3BC               5% PATCH AREA
         SPACE 2
         END   START
