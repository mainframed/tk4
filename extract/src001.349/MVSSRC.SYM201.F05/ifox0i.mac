* /* START OF SPECIFICATIONS ****
*02* PROCESSOR = ASSEMBLER
**** END OF SPECIFICATIONS ***/
         GBLC  &COMPNM,&ASMID
         SPACE 5
         JHEAD 'ABORT ROUTINE - PROLOG',                               X
               PHASEID=X0I,                                            X
               LEVEL=10
*                                                                     *
*FUNCTION/OPERATION-                                                  *
*   THIS MODULE IS CALLED WHEN AN IRRECOVERABLE ERROR EXISTS.  IT IS  *
*   ENTERED FOR PERMANENT I/O ERRORS, MISSING DD CARDS (SYSPRINT,     *
*   SYSUT1, SYSUT2, SYSUT3, SYSIN), INSUFFICIENT MEMORY AND CERTAIN   *
*   PROGRAM LOGIC ERRORS.  THIS ROUTINE FREES ALL CORE, CLOSES ALL    *
*   FILES, FREEPOOL AS NECESSARY, WRITES A MESSAGE TO THE OPERATOR    *
*   AND DELETES ALL LOADED PHASES EXCEPT ITSELF AND COMMON.           *
*                                                                     *
*ENTRY POINT-                                                         *
*        START - ENTER BY LOAD AND BRANCH FROM DRIVER                 *
*                                                                     *
*INPUT-                                                               *
*   REGISTER R10 CONTAINS THE VALUE OF ERR260, ERR261, ERR262 OR      *
*   ERR263 DEPENDING UPON THE ERROR.                                  *
*   REGISTER R11 CONTAINS THE VALUE OF R1 AT THE TIME THE ASSEMBLER   *
*   WAS INVOKED (PARAMETER LIST PTR) (VALID ONLY FOR ERR260).         *
*   REGISTER R11 CONTAINS THE CONTENTS OF R0 AT THE TIME THE SYNAD    *
*   EXIT WAS TAKEN (VALID ONLY FOR ERR261).                           *
*   REGISTER R2 CONTAINS THE DCB ADDRESS (VALID ONLY FOR ERR261).     *
*                                                                     *
*OUTPUT-                                                              *
*   MESSAGE TO PROGRAMMER USING WTP MACRO                             *
*                                                                     *
*EXTERNAL ROUTINES-                                                   *
*   N/A                                                               *
*                                                                     *
*EXITS, NORMAL-                                                       *
*   RETURN TO DRIVER BY JRETURN MACRO                                 *
*                                                                     *
*EXITS, ERROR-                                                        *
*   N/A                                                               *
*                                                                     *
*TABLE/WORK AREAS-                                                    *
*   REGISTER R13 POINTS TO COMMON.                                    *
*   JTRTABLE IN COMMON USED AS BUFFER WORKSPACE.                      *
*                                                                     *
*ATTRIBUTES-                                                          *
*   REFRESHABLE.                                                      *
*                                                                     *
*NOTES-                                                               *
         SPACE 5
         TITLE '&COMPNM&ASMID - ABORT ROUTINE - JCOMMON COPY CODE'
         COPY  JCOMMON                  JCOMMON COPY CODE
         SPACE 3
BUFFER   EQU   J+((JTRTABLE+3-J)/4)*4   MESSAGE BUF FULLWORD BOUNDARY
         SPACE 3
         TITLE '&COMPNM&ASMID - ABORT ROUTINE - JINCOM COPY CODE'
         COPY  JINCOM                   X0E, X0F INPUT COMMON
         SPACE 5
         TITLE '&COMPNM&ASMID - ABORT ROUTINE - JOUTCOM COPY CODE'
         COPY  JOUTCOM                  X0G, X0H OUTPUT COMMON
         SPACE 5
         TITLE '&COMPNM&ASMID - ABORT ROUTINE - JERMSGCD COPY CODE'
         COPY  JERMSGCD                 JERMSGCD COPY CODE
         SPACE 5
         TITLE '&COMPNM&ASMID - ABORT ROUTINE - DCBD MACRO'
         DCBD  DSORG=(PO,PS),DEVD=DA
         SPACE 5
         TITLE '&COMPNM&ASMID - ABORT ROUTINE - DDNAME OVERRIDE DSECT'
P        DSECT                          DDNAME OVERRIDE LIST
PLEN     DS    H                        LENGTH OF LIST
         DS    3CL8                     (NOT APPLICABLE)
PSYSLIB  DS    CL8                      SYSLIB DDNAME
PSYSIN   DS    CL8                      SYSIN DDNAME
PSYSPRIN DS    CL8                      SYSPRINT DDNAME
PSYSPUNC DS    CL8                      SYSPUNCH DDNAME
PSYSUT1  DS    CL8                      SYSUT1 DDNAME
PSYSUT2  DS    CL8                      SYSUT2 DDNAME
PSYSUT3  DS    CL8                      SYSUT3 DDNAME
PSYSGO   DS    CL8                      SYSGO DDNAME
PSYSTERM DS    CL8                      SYSTERM DD NAME
         SPACE 5
D50      EQU   50                       OFFSET OF JOBNAME FROM SYNADAF
D84      EQU   84                       OFFSET OF OPERATION FIELD
         SPACE 5
         TITLE '&COMPNM&ASMID - ABORT ROUTINE'
         JCSECT (X0I00)                 SECTION ID
         JMODID
START    JSAVE BASE=YES                 SAVE REGISTERS
         JENTRY (X0I01=START)           MODULE ENTRY POINT
         LM    R0,R1,JSLEN              GET LENGTH AND ADDR OF AREA
         LTR   R0,R0                    IS LENGTH ZERO (SET BY DRIVER)
         BZ    FREEPARM                 YES, NO BLOCK TO FREE
         FREEMAIN R,LV=(0),A=(1)        FREE STORAGE
FREEPARM L     R1,JPARMPTR              FREE TRANSLATED PARM AREA
         LTR   R1,R1                    HAS AREA BEEN FREED BY INIT
         BZ    FREED                    YES.  ALREADY FREED
         LH    R0,D0(,R1)               GET LENGTH OF AREA
         FREEMAIN R,LV=(0),A=(1)        FREE STORAGE
         EJECT
FREED    MVC   BUFFER(CERR266L),CERR266  MOVE MSG TO WORKAREA
         MVC   BUFFER+CERR266D(L'JPHNAME),JPHNAME  MOVE IN PHASE NAME
         WTO   MF=(E,BUFFER)            TELL WHAT WAS LAST PHASE
         CH    R10,=Y(ERR260)           IS IT A MISSING DD CARD
         BNE   TRYIOERR                 NO,TRY IOERROR
         MVC   BUFFER(CERR260L),CERR260 MOVE MSG TO WORKAREA
         SR    R6,R6                    MAKE R6 & R7 EQUAL IN CASE
         LR    R7,R6                      THERE IS NO OVERRIDING DD
         TM    D0(R11),BIT0             ANY OVERRIDING DDNAMES
         BO    TSYSTERM                 NO. R5 WILL BE GT R7 NOW
         L     R6,D4(,R11)              PT TO DDNAME LIST
         USING P,R6                     ''
         LA    R7,P                     CALC END-OF-LINE (-2)
         AH    R7,PLEN                  ''
         SPACE 3
TSYSTERM GOIF  JTERM,OFF=TSYSLIN        NOTERMINAL SPECIFIED
         LA    R5,PSYSTERM              PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSTERM                 YES GO CHANGE POINTER
         OC    D0(D8,R5),D0(R5)         IS DDNAME OVERIDEN
         BNZ   DSYSTERM                 YES
XSYSTERM LA    R5,CSYSTERM              PT TO STANDARD NAME
DSYSTERM DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSLIN                  YES
         BAL   R9,TELWORLD              LOGERR
         SPACE 3
TSYSLIN  GOIF  JLINK,OFF=TSYSIN         NOLOAD SPECIFIED
         LA    R5,PSYSGO                PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSLIN                  YES. GO CHANGE PTR
         OC    D0(D8,R5),D0(R5)         IS DDNAME OVERRIDEN
         BNZ   DSYSLIN                  YES.
XSYSLIN  LA    R5,CSYSGO                PT TO STANDARD NAME
DSYSLIN  DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSIN                   YES
         BAL   R9,TELWORLD              NO.  LOG ERROR
         SPACE 3
TSYSIN   LA    R5,PSYSIN                PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSIN                   YES. GO CHANGE PTR
         OC    D0(D8,R5),D0(R5)         IS DDNAME OVERRIDEN
         BNZ   DSYSIN                   YES.
XSYSIN   LA    R5,CSYSIN                PT TO STANDARD NAME
DSYSIN   DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSPRIN                 YES
         BAL   R9,TELWORLD              NO.  LOG ERROR
         SPACE 3
TSYSPRIN GOIF  JLIST,OFF=TSYSPUNC       NOLIST SPECIFIED
         LA    R5,PSYSPRIN              PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSPRIN                 YES. GO CHANGE PTR
         OC    D0(D8,R5),D0(R5)         IS DDNAME OVERRIDEN
         BNZ   DSYSPRIN                 YES.
XSYSPRIN LA    R5,CSYSPRIN              PT TO STANDARD NAME
DSYSPRIN DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSPUNC                 YES
         BAL   R9,TELWORLD              NO.  LOG ERROR
         SPACE 3
TSYSPUNC GOIF  JDECK,OFF=TSYSUT1        NODECK SPECIFIED
         LA    R5,PSYSPUNC              PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSPUNC                 YES. GO CHANGE PTR
         OC    D0(D8,R5),D0(R5)         IS DDNAME OVERRIDEN
         BNZ   DSYSPUNC                 YES.
XSYSPUNC LA    R5,CSYSPUNC              PT TO STANDARD NAME
DSYSPUNC DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSUT1                  YES
         BAL   R9,TELWORLD              NO.  LOG ERROR
         SPACE 3
TSYSUT1  LA    R5,PSYSUT1               PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSUT1                  YES. GO CHANGE PTR
         OC    D0(D8,R5),D0(R5)         IS DDNAME OVERRIDEN
         BNZ   DSYSUT1                  YES.
XSYSUT1  LA    R5,CSYSUT1               PT TO STANDARD NAME
DSYSUT1  DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSUT2                  YES
         BAL   R9,TELWORLD              NO.  LOG ERROR
         SPACE 3
TSYSUT2  LA    R5,PSYSUT2               PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSUT2                  YES. GO CHANGE PTR
         OC    D0(D8,R5),D0(R5)         IS DDNAME OVERRIDEN
         BNZ   DSYSUT2                  YES.
XSYSUT2  LA    R5,CSYSUT2               PT TO STANDARD NAME
DSYSUT2  DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    TSYSUT3                  YES
         BAL   R9,TELWORLD              NO.  LOG ERROR
         SPACE 3
TSYSUT3  LA    R5,PSYSUT3               PT TO OVERRIDING DDNAME
         CR    R5,R7                    IS IT PAST END OF LIST
         BH    XSYSUT3                  YES. GO CHANGE PTR
         OC    D0(D8,R5),D0(R5)         IS DDNAME OVERRIDEN
         BNZ   DSYSUT3                  YES.
XSYSUT3  LA    R5,CSYSUT3               PT TO STANDARD NAME
DSYSUT3  DEVTYPE (R5),JDWORD            GET DEVICE CHARACTERISTICS
         LTR   R15,R15                  WAS DDNAME FOUND
         BZ    CLEANUP                  YES
         BAL   R9,TELWORLD              NO.  LOG ERROR
         B     CLEANUP                  GO CLEANUP CORE
         SPACE 6
TELWORLD MVC   BUFFER+CERR260D(L'DCBDDNAM),D0(R5) MOVE IN DDNAME
         WTO   MF=(E,BUFFER)            TELL SOMEONE
         BR    R9                       RETURN
         EJECT
TRYIOERR CH    R10,=Y(ERR261)           IS IT AN I/O ERROR
         BNE   TRYNOCOR                 NO, TRY NEXT ERROR
         MVC   BUFFER(LNGER61A),CERR261A  MOVE FIRST MSG TO WORK AREA
         MVC   BUFFER+LNGER61A(LNGER61B),CERR261B   MOVE SECOND MSG
         LR    R0,R11                   RELOAD SYNADAF REGS
         LR    R1,R2                    ''
         LA    R2,BUFFER+FIRSTAST       PT TO FIELD TO BE REPLACED
         SPACE 3
         CL    R1,=X'FF000000'          ERROR DURING FIND ON SYSLIB
         BL    IOERRSAM                 NO, TRY BSAM OR QSAM ERROR
         LA    R1,D0(,R1)               CLEAR ERROR FLAGS
         SYNADAF ACSMETH=BPAM           RETRIEVE AVAILABLE DATA
         MVC   D0(LNGFLD1,R2),D50(R1)   MOVE TO FIRST MSG
         MVC   SECNDAST(LNGFLD2,R2),D84(R1)   MOVE TO SECOND MSG
         MVC   SECNDAST(D22,R2),=CL22'FIND ,'
         B     IOERRRLS                 GO RELEASE DATA
         SPACE 3
         USING IHADCB,R1                PT TO DCB
IOERRSAM TM    DCBMACRF,BIT1            IS I/O ERROR ON QSAM FILE
         BZ    IOERRBSM                 NO, TRY BSAM
         DROP  R1                       DROP DCB PTR
         SYNADAF ACSMETH=QSAM           PERFORM ANALYSIS
         B     IOERRMSG                 GO BUILD MSG
IOERRBSM SYNADAF ACSMETH=BSAM           PERFORM ANALYSIS
IOERRMSG MVC   D0(LNGFLD1,R2),D50(R1)   MOVE TO FIRST MSG
         MVC   SECNDAST(LNGFLD2,R2),D84(R1)   MOVE TO SECOND MSG
IOERRRLS SYNADRLS                       RELEASE DATA
         WTO   MF=(E,BUFFER)            TELL THE WORLD
         WTO   MF=(E,BUFFER+LNGER61A)
         B     CLEANUP                  GO CLEAN UP
         SPACE 6
TRYNOCOR CH    R10,=Y(ERR262)           DID WE RUN OUT OF STORAGE
         BNE   TRYLOGIC                 NO, TRY NEXT ERROR
         WTO   MF=(E,CERR262)           TELL THE WORLD
         B     CLEANUP                  GO CLEAN UP
         SPACE 5
TRYLOGIC WTO   MF=(E,CERR263)           TELL THE WORLD ABOUT LOGIC ERR
         SPACE 5
CLEANUP  L     R1,JSYSCLOS              PT TO CLOSE PARM LIST
         CLOSE MF=(E,(1))               CLOSE WORKFILES
         SPACE 3
         L     R7,JADINCM               PT TO INPUT COMMON
         USING JINCOM,R7                ESTABLISH ADDRESSABILITY
         LTR   R7,R7                    IS IT PRESENT
         BZ    NOIN                     NO, TRY OUTPUT COMMON
         SPACE 3
         L     R6,JSYSLIB               PT TO SYSLIB DCB
         USING IHADCB,R6                ''
         TM    DCBOFLGS,BIT3            WAS OPEN SUCCESSFUL
         BZ    NOTSUC                   NO, NOT SUCCESSFUL
         LH    R0,DCBBLKSI              GET BLOCKSIZE
         DROP  R6                       DOP DCB PTR
         L     R1,JLIBBUF               GET BUFFER ADDRESS
         FREEMAIN R,LV=(0),A=(1)        FREE BUFFER
NOTSUC   L     R1,JINCLOS               PT TO CLOSE PARM LIST
         CLOSE MF=(E,(1))               CLOSE INPUT FILES
         SPACE 3
         L     R1,JSYSIN                PT TO SYSIN DCB
         USING IHADCB,R1                PT TO SYSIN DCB
         TM    DCBBUFCB+D3,BIT7         ANY BUFCB
         BO    NOIN                     NO, DON'T DO FREEPOOL
         FREEPOOL (1)                   FREEPOOL BUFFERS
         DROP  R1,R7                    DROP DCB AND COMMON PTRS
         EJECT
NOIN     L     R7,JADOUTCM              PT TO OUTPUT COMMON
         USING JOUTCOM,R7               ESTABLISH ADDRESSABILITY
         LTR   R7,R7                    IS IT PRESENT
         BZ    NOOUT                    NO
         L     R1,JOUTCLOS              PT TO CLOSE PARM LIST
         CLOSE MF=(E,(1))               CLOSE OUTPUT FILES
         SPACE 3
         USING IHADCB,R1                ESTABLISH ADDRESSABILITY
         L     R1,JSYSLST               PT TO SYSPRINT DCB
         TM    DCBBUFCB+D3,BIT7         ANY BUFCB
         BO    FREEPCH                  NO, DON'T DO FREEPOOL
         FREEPOOL (1)                   FREEPOOL BUFFERS
         SPACE 1
FREEPCH  L     R1,JSYSPCH               PT TO SYSPUNCH DCB
         TM    DCBBUFCB+D3,BIT7         ANY BUFCB
         BO    FREELNK                  NO, DON'T DO FREEPOOL
         FREEPOOL (1)                   FREEPOOL BUFFERS
         SPACE 1
FREELNK  L     R1,JSYSLNK               PT TO SYSLIN DCB
         TM    DCBBUFCB+D3,BIT7         ANY BUFCB
         BO    NOOUT                    NO, DON'T DO FREEPOOL
         FREEPOOL (1)                   FREEPOOL BUFFERS
         DROP  R1,R7                    DROP DCB AND COMMON PTRS
         EJECT
NOOUT    DELETE EP=&COMPNM.X62          DELETE ALL LOADED MODULES
         DELETE EP=&COMPNM.X61            EXCEPT THE DRIVER, MASTER
         DELETE EP=&COMPNM.X51            COMMON AND THE ABORT ROUTINE.
         DELETE EP=&COMPNM.X41            ''
         DELETE EP=&COMPNM.X31            ''
         DELETE EP=&COMPNM.X21            ''
         DELETE EP=&COMPNM.X11            ''
         DELETE EP=&COMPNM.X06            ''
         DELETE EP=&COMPNM.X05            ''
         DELETE EP=&COMPNM.X04            ''
         DELETE EP=&COMPNM.X03            ''
         DELETE EP=&COMPNM.X02            ''
         SPACE 3
RETURN   JRETURN                        RETURN TO DRIVER
         SPACE 5
       TITLE '&COMPNM&ASMID - ABORT ROUTINE - CONSTANTS AND PATCH AREA'
*        CONSTANTS
*
CSYSTERM DC    CL8'SYSTERM'             STANDARD FILE NAME FOR SYSTERM
CSYSGO   DC    CL8'SYSGO'               STANDARD FILE NAME FOR SYSGO
CSYSIN   DC    CL8'SYSIN'               STANDARD FILE NAME FOR SYSIN
CSYSPRIN DC    CL8'SYSPRINT'            STANDARD FILE NAME FOR SYSPRINT
CSYSPUNC DC    CL8'SYSPUNCH'            STANDARD FILE NAME FOR SYSPUNCH
CSYSUT1  DC    CL8'SYSUT1'              STANDARD FILE NAME FOR SYSUT1
CSYSUT2  DC    CL8'SYSUT2'              STANDARD FILE NAME FOR SYSUT2
CSYSUT3  DC    CL8'SYSUT3'              STANDARD FILE NAME FOR SYSUT3
         SPACE 3
CERR260  WTO   '&COMPNM.260  ASSEMBLY TERMINATED.  DD CARD MISSING FOR X
               ********',ROUTCDE=(2,11),MF=L
CERR260L EQU   *-CERR260                LENGTH OF MESSAGE
CERR260D EQU   CERR260L-12              DISPLACEMENT TO VARIABLE DATA
         SPACE 1
CERR261A WTO   '&COMPNM.261  ASSEMBLY TERMINATED -- PERM I/O ERROR  ***X
               *****,********,***,**,********,  (1/2)',ROUTCDE=(2,11), X
               MF=L
LNGER61A EQU   (*-CERR261A+3)/4*4       LENGTH OF FIRST MESSAGE
FIRSTAST EQU   51                       DISP OF 1ST ASTERISK REPLACED
LNGFLD1  EQU   34                       LNG OF MSG FLD TO BE REPLACED
         SPACE
CERR261B WTO   '&COMPNM.261       ******,***************,**************X
               *******  (2/2)',ROUTCDE=(2,11),MF=L
LNGER61B EQU   *-CERR261B               LENGTH OF SECOND MESSAGE
SECNDAST EQU   62                       DISP OF 2ND ASTERISK REPLACED
LNGFLD2  EQU   44                       LNG OF MSG FLD TO BE REPLACED
         SPACE
CERR262  WTO   '&COMPNM.262  ASSEMBLY TERMINATED.  INSUFFICIENT MAIN STX
               ORAGE',ROUTCDE=(2,11),MF=L
CERR263  WTO   '&COMPNM.263  ASSEMBLY TERMINATED.  PROGRAM LOGIC ERROR'X
               ,ROUTCDE=11,MF=L
CERR266  WTO   '&COMPNM.266  LAST ASSEMBLER PHASE LOADED WAS ********',X
               ROUTCDE=11,MF=L
CERR266L EQU   *-CERR266                LENGTH OF MESSAGE
CERR266D EQU   CERR266L-12              DISPLACEMENT TO VARIABLE DATA
         SPACE 3
         JPATCH X0I00,6A0               5% PATCH AREA
         SPACE 3
         END   START
