         GBLC  &COMPNM,&ASMID           GLOBAL VARIABLES
         JHEAD 'WORKFILE I/O MODULE - PROLOG',                         X
               PHASEID=X0B,                                            X
               LEVEL=10
*                                                                     *
*FUNCTION/OPERATION-                                                  *
*   THIS MODULE IS THE WORKFILE I/O PACKAGE FOR THE ASSEMBLY.  THE    *
*   OTHER PHASES INTERFACE WITH THIS MODULE FOR ALL WORKFILE I/O RE-  *
*   QUESTS AND CORE MANAGEMENT.                                       *
*                                                                     *
*ENTRY POINT-                                                         *
*        START+0  - JPUTL    - PUT LOGICAL RECORD IN LOCATE MODE.     *
*        START+4  - JPUTM    - PUT LOGICAL RECORD IN MOVE MODE.       *
*        START+8  - JGETL    - GET LOGICAL RECORD IN LOCATE MODE.     *
*        START+12 - JTRUNC   - TRUNCATE PHYSICAL BUFFER.              *
*        START+16 - JRELSE   - RELEASE PHYSICAL BUFFER.               *
*        START+20 - JREAD    - READ A PHYSICAL RECORD.                *
*        START+24 - JWRITE   - WRITE A PHYSICAL RECORD.               *
*        START+28 - JCHECK   - CHECK READ OR WRITE FOR COMPLETION.    *
*        START+32 - JGETCORE - GET DYNAMIC CORE STORAGE.              *
*        START+36 - JFRECORE - FREE DYNAMIC CORE STORAGE.             *
*        START+40 - JNOTE    - NOTE FILE POSITION                     *
*        START+44 - JPOINT   - POSITION FILE.                         *
*                                                                     *
*INPUT-                                                               *
*   SYSUT1, STSUT2, SYSUT3.                                           *
*                                                                     *
*OUTPUT-                                                              *
*   THREE WORKFILES (FILE1,FILE2,FILE3).                              *
*                                                                     *
*EXTERNAL ROUTINES-                                                   *
*   N/A                                                               *
*                                                                     *
*EXITS, NORMAL                                                        *
*   RETURN TO CALLER VIA REGISTER R9.                                 *
*                                                                     *
*EXITS, ERROR-                                                        *
*   BRANCH TO JABORT IN COMMON.                                       *
*                                                                     *
*TABLES/WORK AREA-                                                    *
*   REGISTER R13 POINTS TO COMMON.                                    *
*                                                                     *
*ATTRIBUTES-                                                          *
*   REFRESHABLE.                                                      *
*                                                                     *
*NOTES-                                                               *
         TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - COPY CODE'
         PRINT OFF                      DON'T PRINT JCOMMON COPY CODE
         COPY  JCOMMON                  JCOMMON COPY CODE
         PRINT OFF                      DON'T PRINT JFLEBLK COPY CODE
         COPY  JFLEBLK                  JFLEBLK COPY CODE
         PRINT ON                       PRINT READ/WRITE PARM LIST
         SPACE 3
RDWRPARM DSECT                          READ/WRITE PARAMETER LIST
RDWRBUF  DS    F                        BUFFER LOCATION
RDWRLEN  DS    H                        RECORD LENGTH
         SPACE 3
MAXMVC   EQU   256                      MAXIMUM MOVE
         PRINT OFF                      DON'T PRINT JERMSGCD COPY CODE
         COPY  JERMSGCD                 JERMSGCD COPY CODE
         PRINT ON                       THAT'S ALL THE COPY CODE
         TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - MAINLINE CONTROL'
         JCSECT (X0B00)                 SECTION ID
* VS1 RELEASE 2.5 CHANGES
*A264500,327500,375100-375300,480600-482500,546500              OX00413
*A762100-766500,888000-890000,891500-892000                     OX00413
*C474000-474020,483000,504000,723000,759000,768000,891000       OX00413
*D267000,486000-489000,501000,741000,747000-756000,762000       OX00413
*D765000,771000                                                 OX00413
* VS1 RELEASE 3.1 CHANGES
*A480500,481000,504500,738500,744500-746000,759500,762600,      OX02955
*A763100,888500                                                 OX02955
*C264500,504000,762100,759000                                   OX02955
*D327500,330100,375100-375300,474020,480600-481500,483000,      OX02955
*D547000,762300-768000,888500-892000                            OX02955
*A672500                                                       @0X13606
*A708500-710000                                                @AZ10942
*
         JMODID
         USING START,R12                SET BASE TO R12
START    B     PUTL                     ENTRY FOR JPUTL        00
         B     PUTM                               JPUTM        04
         B     GETL                               JGETL        08
         B     TRUNC                              JTRUNC       12
         B     RELSE                              JRELSE       16
         B     READ                               JREAD        20
         B     WRITE                              JWRITE       24
         B     CHECK                              JCHECK       28
         B     GETCORE                            JGETCORE     32
         B     FRECORE                            JFRECORE     36
         B     NOTE                               JNOTE        40
         B     POINT                              JPOINT       44
         SPACE 3
         JENTRY (X0B01=START)
         SPACE 3
SAVE     JSAVE BASE=NO                  SAVE REGISTERS
         LR    R7,R13                   LOAD COMMON ADDR + FILE DISP.
         AR    R7,R10                   THIS HAS NO MEANING FOR GETCORE
         USING JFLEBLK,R7               & FRECORE
         BR    R14                      NOW GO ON WITH BUSINESS
         SPACE 3
RETURN   JRETURN                        RESTORE REGISTERS & RETURN
         SPACE 2
       TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - PUT LOCATE ROUTINE'
PUTL     BAL   R14,SAVE                 GO SAVE REGISTERS
         SET   JPUTLWRT,OFF             CLEAR
         L     R3,JBUF                  GET PHY BUF ADDRESS
         LR    R5,R3                    LOG BUF ADDR = PHY BUF ADDR +
         AH    R5,JBUFNDX                 PHY RL
         GOIF  JPUTLPND,OFF=NOREC       FIRST PUTL OF SEQUENCE  OX02955
         LH    R4,D0(,R5)               LOAD LOGICAL RECORD LENGTH
         LA    R4,D3(,R4)               ROUND RECORD LENGTH TO
         SRA   R4,D2                      FULL
         SLA   R4,D2                        WORD
         BZ    NOREC                    RL ZERO, THEREFORE NO RECORD
         STH   R4,D0(,R5)               STORE ROUNDED RECORD LENGTH
         AR    R5,R4                    LOG BUF ADDR = LOG BUF ADDR+RL
         AH    R4,JBUFNDX               PHY RL = PHY RL +
         STH   R4,JBUFNDX                 LOG RL
         LCR   R4,R4                    MAKE PHY RL NEGATIVE
         AH    R4,JRL                   SPACE AVAIL = BUF SIZE - USED
         BM    JABORT                   **TEMP** BLEW IT
         BZ    REC                      NO ROOM FOR NEXT LOGICAL RECORD
         LA    R11,D3(,R11)             ROUND REQUESTED RL TO FULL WORD
         SRA   R11,D2                   ''
         SLA   R11,D2                   ''
         GOIF  (R4),(R11),NOTLOW=NOREC  THERE IS ROOM FOR NEXT BUFFER
REC      MVC   D0(L'JBUFNDX,R3),JBUFNDX SET PHYSICAL RL
         GOIF  JCHKFILE,OFF=DONTCHK1    FILE DOESN'T NEED CHECKING
         BAL   R9,CHECK                 CHECK PENDING WRITE
DONTCHK1 LA    R11,JBUF                 POINT TO PARM LIST
         BAL   R9,WRITE                 WRITE RECORD
         SET   JPUTLWRT,ON              INDICATE WRITE
         GOIF  JDBLBUF,OFF=DONTSWAP     FILE IS NOT DOUBLE BUFFERED
         SET   JCHKFILE,ON              INDICATE FILE NEEDS CHECKING
         XC    JBUF,JBUFFER             SWAP BUFFER ADDRESSES
         XC    JBUFFER,JBUF             ''
         XC    JBUF,JBUFFER             ''
         L     R3,JBUF                  GET NEW PHY BUFFER ADDRESS
         B     DONTCHK2                 BYPASS FILE CHECKING NOW
DONTSWAP BAL   R9,CHECK                 CHECK WRITE
DONTCHK2 MVC   JBUFNDX,RESETRL          PHY RL = RESETRL
         LR    R5,R3                    LOG BUF ADDR = PHY BUF ADDR +
         AH    R5,JBUFNDX                 RESETTED RL
NOREC    LR    R11,R5                   RETURN PTR TO LOGICAL RECORD
         XC    D0(D2,R11),D0(R11)       ZERO RECORD LENGTH
         SET   JPUTLPND,ON              PUTL NOW PENDING
         B     RETURN                   RETURN
         SPACE 2
         TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - PUT MOVE ROUTINE'
PUTM     BAL   R14,SAVE                 GO SAVE REGISTERS
         LR    R3,R11                   SAVE R11 (FROM ADDR)
         MVC   JHWORD1,D0(R3)           REQUEST BUFFER (RL)
         LH    R11,JHWORD1              ''
         LTR   R2,R11                   IS RL ZERO
         BZ    JABORT                   YES, ABORT
         BAL   R9,PUTL                  PUTL
         LR    R4,R11                   TO ADDRESS
         BAL   R9,MOVE                  MOVE RECORD
         B     RETURN                   RETURN
         SPACE 6
MOVEX    MVC   D0(MAXMVC,R4),D0(R3)     MOVE 256 BYTES
         LA    R3,MAXMVC(,R3)           BUMP FROM ADDR BY 256
         LA    R4,MAXMVC(,R4)           BUMP TO ADDR BY 256
MOVE     SH    R2,=H'256'               SUBTRACT 256 FROM LENGTH
         BP    MOVEX                    IF POSITIVE, STILL 256 BYTES
         AH    R2,=H'255'               WENT NEGATIVE, ADD 255
         EX    R2,MVCIM                 MOVE FINAL 1-256 BYTES
         BR    R9                       RETURN
MVCIM    MVC   D0(*-*,R4),D0(R3)        EXECUTED MOVE
         SPACE 2
       TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - GET LOCATE ROUTINE'
GETL     BAL   R14,SAVE                 GO SAVE REGISTERS
         SET   JPUTLPND,OFF             TURN OFF PUTL PENDING FLAG
         L     R3,JBUF                  POINT TO PHYSICAL BUFFER
         LH    R4,JBUFNDX               PICK UP OLD BUFFER DISPLACEMENT
         GOIF  JGETLSBF,ON=NORD4GET     GET, POINT TO SAME BUF, GET
         GOIF  JGETLPND,OFF=RD4GET      DO WE HAVE TO READ A NEW RECORD
         AH    R4,D0(R3,R4)             CALC NEW DISPLACEMENT (TO BYPAS
         STH   R4,JBUFNDX                 OLD LOG RECORD)
         CLC   JBUFNDX,D0(R3)           END OF BUFFER
         BL    NORD4GET                 BRANCH OF NOT END OF BUFFER
RD4GET   LA    R11,JBUF                 POINT TO PARM LIST      OX00413
         BAL   R9,READ                  READ RECORD
         BAL   R9,CHECK                 CHECK RECORD
         BAL   R9,NOTE                  NOTE RECORD             OX02955
         MVC   JLSTNOTE,JNOTEVAL        SAVE NOTE VALUE         OX02955
         SET   JNOTED,ON                INDICATE NOTED RECORD   OX00413
         GOIF  JGETLPNT,ON=DONTRSET     GET AFTER POINT
         LH    R4,RESETRL               NO. RESET BUFFER DISP.
         STH   R4,JBUFNDX               ''
DONTRSET SET   JGETLPND,ON              SET GETL PEND FLAG ON   OX02955
         SET   JGETLPNT,OFF             SET GET AFTER POINT OFF OX02955
NORD4GET LA    R11,D0(R3,R4)            POINT TO BUFFER
         SET   JGETLSBF,OFF             RESET POINT TO SAME BUFFER SW
         B     RETURN                   RETURN
         SPACE 2
         TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - TRUNCATION AND REX
               LEASE ROUTINES'
TRUNC    BAL   R14,SAVE                 GO SAVE REGISTERS
         GOIF  JCHKFILE,OFF=DONTCHK3    FILE DOESN'T NEED CHECKING
         BAL   R9,CHECK                 CHECK PENDING WRITE
         SET   JCHKFILE,OFF             INDICATE FILE HAS BEEN CHECKED
DONTCHK3 SR    R11,R11                  INDICATE NO BUFFER NEEDED
         BAL   R9,PUTL                  PUT OUT RECORD BEFORE TRUNC.
         SET   JPUTLPND,OFF             TURN OFF PUTL PENDING FLAG
         L     R3,JBUF                  POINT TO PHYSICAL BUFFER
         MVC   D0(L'JBUFNDX,R3),JBUFNDX SET PHYSICAL RL
         LA    R11,JBUF                 POINT TO PARM LIST
         GOIF  (JPUTLWRT,JCHKFILE),ALL=DONTWRT,MIX=DONTWRCK     OX00413
         BAL   R9,WRITE                 WRITE RECORD
DONTWRT  BAL   R9,CHECK                 CHECK RECORD
DONTWRCK MVC   JBUFNDX,RESETRL          PHY RL = RESETRL
         B     RETURN                   RETURN
         SPACE 6
RELSE    BAL   R14,SAVE                 GO SAVE REGISTERS
         SET   JGETLPND,OFF             TURN OFF SETL PENDING FLAG
         MVC   JBUFNDX,RESETRL          PHY RL=RESETRL (GET,RELSE,PUT)
         B     RETURN                   RETURN
         SPACE 2
         TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - READ, WRITE AND CX
               HECK ROUTINES'
         USING RDWRPARM,R11
READ     BAL   R14,SAVE                 GO SAVE REGISTERS
         L     R8,RDWRBUF               BUFFER ADDRESS
         LH    R9,RDWRLEN               RECORD LENGTH
         READ  JDECB,SF,,(R8),(R9),MF=E READ PHYSICAL RECORD
         SET   JNOTED,OFF               NEW RECORD NOT NOTED
         B     RETURN                   RETURN
         DROP  R11
         SPACE 3
         USING RDWRPARM,R11
WRITE    BAL   R14,SAVE                 GO SAVE REGISTERS
         L     R8,RDWRBUF               BUFFER ADDRESS
         LH    R9,RDWRLEN               RECORD LENGTH
         WRITE JDECB,SF,,(R8),(R9),MF=E WRITE PHYSICAL RECORD
         SET   JNOTED,OFF               NEW RECORD NOT NOTED
         B     RETURN                   RETURN
         DROP  R11
         SPACE 3
CHECK    BAL   R14,SAVE                 GO SAVE REGISTERS
         CHECK JDECB                    CHECK FOR COMPLETION
         B     RETURN                   RETURN
         SPACE
         TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - GETCORE AND FRECOX
               RE ROUTINES'
GETCORE  BAL   R14,SAVE                 GO SAVE REGISTERS
         SLL   R11,D3                   CONV TO REQ MAX BYTES
         LA    R2,D8(,R11)              ALLOW 8 MORE BYTES FOR HEADER
         L     R4,JEOS                  POINT TO CURRENT END-OF-STORAGE
         LR    R3,R4                    SPACE AVAILABLE =
         S     R3,JBOS                    END - BEGINNING
         GOIF  (R3),(R2),NOTLOW=REQFILLD ENOUGH SPACE FOR MAX BYTES
         LR    R2,R3                    USE REMAINING SPACE
         LR    R11,R3                   RETURN NO. OF BYTES AVAILABLE
         SH    R11,=H'8'                  AFTER SUBTRACTING OUT HEADER
         BC    4,ABORTCOR               IS IT NEGATIVE         @OX13606
         SLL   R10,D3                   BRANCH IF BYTES AVAILABLE IS
         GOIF  (R10),(R11),HIGH=ABORTCOR  LESS THAN MINIMUM REQUEST
REQFILLD SR    R4,R2                    REDUCE EOS ADDR BY
         ST    R4,JEOS                    NUMBER OF BYTES USED
         ST    R2,D0(,R4)               STORE LENGTH IN HEADER
         LA    R10,D8(,R4)              RETURN ADDR OF CORE
         B     RETURN                   RETURN
ABORTCOR LA    R10,ERR262               SET OUT OF CORE ERROR FLAG
         B     JABORT                   GO ABORT
         SPACE 6
FRECORE  BAL   R14,SAVE                 GO SAVE REGISTERS
         L     R4,JEOS                  INCREASE EOS BY LENGTH
         L     R5,JBOS                  CHECK IF-              @AZ10942
         A     R5,JSLEN                 OUTSIDE-               @AZ10942
         CR    R4,R5                    STORAGE-               @AZ10942
         BNL   RETURN                   KEY.                   @AZ10942
         A     R4,D0(,R4)                 OF LAST GETCORE REQ.
         ST    R4,JEOS                      AND SAVE IT
         B     RETURN                   RETURN
         SPACE 3
         TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - NOTE ROUTINE'
NOTE     BAL   R14,SAVE                 GO SAVE REGISTERS       OX00413
         GOIF  JCHKFILE,OFF=DONTCHK4    FILE DOESN'T NEED CHECKING
         BAL   R9,CHECK                 CHECK PENDING WRITE
         SET   JCHKFILE,OFF             INDICATE FILE HAS BEEN CHECKED
DONTCHK4 MVC   JNOTEVAL+D6(L'JBUFNDX),JBUFNDX SAVE BUFFER DISPLACEMENT
         L     R4,JFLE                  GET ADDR OF FILE DEFINITION
         GOIF  JPUTLPND,OFF=NOPENDA     NO BUFF PEND FOR PUTL   OX02955
         GOIF  JNOTED,ON=NTBEFORE       BR IF RECORD BEEN NOTED BEFORE
         LA    R11,JBUF                 POINT TO PARM LIST      OX02955
         BAL   R9,WRITE                 WRITE RECORD            OX02955
         BAL   R9,CHECK                 CHECK                   OX02955
         SET   JNOTED,ON                INDICATED REC NOTED     OX02955
NOPENDA  NOTE  (R4)                     NOTE WHERE REC IS WRITE OX00413
         ST    R1,JNOTEVAL              STORE TTRZ OR NNNN      OX02955
         GOIF  JPUTLPND,OFF=RETURN      POSITION FILE, QUERY.   OX02955
         MVC   JLSTNOTE,JNOTEVAL        SAVE NOTE VALUE         OX02955
         POINT (R4),JNOTEVAL            REPOSITION FILE         OX02955
         B     RETURN                   RETURN
NTBEFORE MVC   JNOTEVAL(L'JLSTNOTE),JLSTNOTE SET LAST VALUE
         B     RETURN                   RETURN
         SPACE 3
         TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - POINT ROUTINE'
POINT    BAL   R14,SAVE                 GO SAVE REGISTERS
         SET   JGETLPND,OFF             TURN OFF GETL PENDING
         GOIF  JPUTLPND,OFF=NOPENDB     BUFFER PENDING FOR PUTL
         LR    R2,R11                   SAVE R11
         BAL   R9,TRUNC                 TRUNC BUFFER
         LR    R11,R2                   RESTORE R11
NOPENDB  L     R4,JFLE                  GET ADDR OF FILE DEF.
         GOIF  JPT4STAR,ON=POINTS       POINTS
         MVC   JFWORD1,D0(R11)          SAVE NOTE VALUE ON FW BOUNDRY
         GOIF  JPT4WRIT,ON=POINTW       POINT  NEXT=WRITE
         GOIF  JPT4GET,OFF=POINTR1      NOT POINT  NEXT=GET
         MVC   JBUFNDX,D6(R11)          SET BUFFER DISPLACEMENT
         GOIF  JNOTED,OFF=POINTR1       RECORD NOT NOTED
         CLC   JLSTNOTE(D4),D0(R11)     POSITIONING TO DIFF PHY REC
         BNE   POINTR1                  BRANCH IF YES
         SET   (JGETLPND,JGETLSBF),ON   SAME RECORD, GETL PENDING.
         B     POINTR2                  GO TURN OFF FLAGS
POINTR1  POINT (R4),JFWORD1             POINT FOR READ OR GET
         GOIF  JPT4GET,OFF=POINTR2      NOT POINT  NEXT=GET
         SET   JGETLPNT,ON              GETL TO FOLLOW POINT
POINTR2  SET   (JPT4READ,JPT4GET),OFF   TURN OFF POINTR FLAGS
         B     RETURN                   RETURN
POINTW   L     R5,JFWORD1               POSITION THE FILE TO WRITE
         AL    R5,=F'1'                   A RECORD AFTER THE ONE
         ST    R5,JFWORD1                 NOTED.
         POINT (R4),JFWORD1             POINT FOR WRITE
         SET   JPT4WRIT,OFF             TURN OFF POINTW FLAG
         B     RETURN                   RETURN
POINTS   CLOSE TYPE=T,MF=(E,JTCLOSE)    CLOSE TYPE=T (REWIND)
         MVC   JBUFNDX,RESETRL          RESET DISP FOR PUTL
         SET   JPT4STAR,OFF             TURN OFF POINTS FLAG
         B     RETURN                   RETURN
         SPACE 3
 TITLE '&COMPNM&ASMID - WORKFILE I/O MODULE - CONSTANTS AND PATCH AREA'
*        CONSTANTS
*                                                               OX00413
RESETRL  DC    H'2'                     RESET RECORD LENGHT     OX02955
         SPACE 3
         JPATCH X0B00,42A
         SPACE 3
         END   START
