         TITLE 'HMASMGTA GENERAL TABLE ACCESSOR ROUTINE'
HMASMGTA CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMGTA  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                      GETP OPERATIONS               */
*                                                                  0041
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE RETURN CODE,CHECK PARMS AND CALCULATE MAXIMUM      */
*   /* NUMBER OF RECORDS PER PAGE IN FILE                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0041
*   GTARTNCD=GTPGOOD;               /* INIT RETURN CODE              */
         SLR   GTARTNCD,GTARTNCD                                   0041
*   GTPRCDNF=OFF;                   /* SET FOUND/NOT FOUND BIT       */
         L     @09,@PC00001                                        0042
         NI    GTPRCDNF(@09),B'10111111'                           0042
*   CALL GTAVER;                    /* CHECK PARM                    */
         BAL   @14,GTAVER                                          0043
*   RFY                                                            0044
*     RTNCODE RSTD;                 /*                               */
*   GTARTNCD=RTNCODE;               /* UPDATE RETURN CODE            */
         LR    GTARTNCD,RTNCODE                                    0045
*   RFY                                                            0046
*     RTNCODE UNRSTD;               /*                               */
*   IF GTARTNCD=GTPGOOD             /* IF PARMS VERIFIED             */
*       &GTPRCDLN^=ZERO             /* AND RCD LENGTH SUPPLIED       */
*     THEN                          /* THEN CALC                     */
         SLR   @09,@09                                             0047
         CR    GTARTNCD,@09                                        0047
         BNE   @RF00047                                            0047
         L     @02,@PC00001                                        0047
         LH    @02,GTPRCDLN(,@02)                                  0047
         CR    @02,@09                                             0047
         BE    @RF00047                                            0047
*     MAXENTCT=(PAGESIZE-LENGTH(PAGEPFX))/GTPRCDLN;/* MAX RCD PER  0048
*                                      PAGE IS MAX SPACE/RCD LN    0048
*                                                            @Z67SP00*/
         L     @09,PAGESIZE                                        0048
         SH    @09,@CH00034                                        0048
         LR    @00,@09                                             0048
         SRDA  @00,32                                              0048
         DR    @00,@02                                             0048
         STH   @01,MAXENTCT                                        0048
*                                                                  0049
*   /*****************************************************************/
*   /*                                                               */
*   /* IF PREVIOUS PROCESSING OK AND THIS IS FIRST TIME FOR THIS TYPE*/
*   /* RCD THEN INITIALIZE POINTERS AND GET FIRST PAGE               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0049
*   IF GTARTNCD=GTPGOOD             /* PREV FUNCTIONS OK             */
*       &GTPWKAD=ZERO               /* AND FIRST TIME THRU           */
*       &GTPFUNCT=GTPADD            /* AND ADD FUNCTION      @ZA24812*/
*     THEN                          /*                               */
@RF00047 SLR   @09,@09                                             0049
         CR    GTARTNCD,@09                                        0049
         BNE   @RF00049                                            0049
         L     @02,@PC00001                                        0049
         C     @09,GTPWKAD(,@02)                                   0049
         BNE   @RF00049                                            0049
         CLI   GTPFUNCT(@02),4                                     0049
         BNE   @RF00049                                            0049
*     DO;                           /*                               */
*       CALL GTAINIT;               /* DO ALL INITIALIZATION         */
         BAL   @14,GTAINIT                                         0051
*       RFY                                                        0052
*         RTNCODE RSTD;             /*                               */
*       GTARTNCD=MAX(GTARTNCD,RTNCODE);/* SAVE RETURN CODE           */
         CR    GTARTNCD,RTNCODE                                    0053
         BNL   *+6
         LR    GTARTNCD,RTNCODE                                    0053
*       RFY                                                        0054
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*   RENTPTR=GTPWKAD;                /* SET POINTER TO REENTRANT WORK
*                                      AREA                          */
*                                                                  0056
@RF00049 L     @02,@PC00001                                        0056
         L     @15,GTPWKAD(,@02)                                   0056
         LR    RENTPTR,@15                                         0056
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL PREVIOUS FUNCTIONS WERE OK AND NO FILE EXISTS RETURN   */
*   /* WITH APPROPRIATE RETURN CODES                         @ZA24812*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0057
*   IF GTARTNCD=GTPGOOD             /* PREV FUNCTIONS OK     @ZA24812*/
*       &GTPWKAD=ZERO               /* BUT FILE IS EMPTY     @ZA24812*/
*     THEN                          /*                               */
         SLR   @09,@09                                             0057
         CR    GTARTNCD,@09                                        0057
         BNE   @RF00057                                            0057
         CR    @15,@09                                             0057
         BNE   @RF00057                                            0057
*     DO;                           /*                               */
*       IF GTPFUNCT=GTPLOC          /* IF LOCATE             @ZA24812*/
*           ×GTPFUNCT=GTPGETN       /* OR GET NEXT           @ZA24812*/
*           ×GTPFUNCT=GTPGETP       /* OR GET PREVIOUS       @ZA24812*/
*         THEN                                                     0059
         CLI   GTPFUNCT(@02),3                                     0059
         BE    @RT00059                                            0059
         CLI   GTPFUNCT(@02),8                                     0059
         BE    @RT00059                                            0059
         CLI   GTPFUNCT(@02),9                                     0059
         BNE   @RF00059                                            0059
@RT00059 DS    0H                                                  0060
*         GTARTNCD=GTPEOF;          /* THEN SET EOF RETURN   @ZA24812*/
         LA    GTARTNCD,4                                          0060
*       ELSE                                                       0061
*         GTARTNCD=GTPGOOD;         /* ELSE SET GOOD RETURN  @ZA24812*/
         B     @RC00059                                            0061
@RF00059 SLR   GTARTNCD,GTARTNCD                                   0061
*     END;                          /* END OF EMPTY FILE CODE@ZA24812*/
@RC00059 DS    0H                                                  0063
         EJECT
*                                                                  0063
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL PREVIOUS FUNCTIONS WERE OK AND THIS IS OPEN/CLOSE      */
*   /* REQUEST THEN DO FUNCTION                                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0063
*   IF GTARTNCD=GTPGOOD             /* PREV FUNCTIONS OK             */
*       &GTPWKAD^=ZERO              /* AND NON-EMPTY FILE    @ZA24812*/
*       &(GTPFUNCT=GTPOPENN         /* AND OPEN FOR GETN             */
*       ×GTPFUNCT=GTPOPENP)         /* OR OPEN FOR GETP              */
*     THEN                          /*                               */
@RF00057 SLR   @09,@09                                             0063
         CR    GTARTNCD,@09                                        0063
         BNE   @RF00063                                            0063
         L     @02,@PC00001                                        0063
         C     @09,GTPWKAD(,@02)                                   0063
         BE    @RF00063                                            0063
         CLI   GTPFUNCT(@02),1                                     0063
         BE    @RT00063                                            0063
         CLI   GTPFUNCT(@02),2                                     0063
         BNE   @RF00063                                            0063
@RT00063 DS    0H                                                  0064
*     DO;                           /*                               */
*       CALL GTAOPEN;               /* RESET POINTERS TO START       */
         BAL   @14,GTAOPEN                                         0065
*       RFY                                                        0066
*         RTNCODE RSTD;             /*                               */
*       GTARTNCD=MAX(GTARTNCD,RTNCODE);/* SAVE RETURN CODE           */
         CR    GTARTNCD,RTNCODE                                    0067
         BNL   *+6
         LR    GTARTNCD,RTNCODE                                    0067
*       RFY                                                        0068
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0069
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL PREVIOUS FUNCTIONS WERE OK AND THIS IS LOCATE/ADD/DEL  */
*   /* REQUEST THEN LOCATE RCD NOW                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0070
*   IF GTARTNCD=GTPGOOD             /* PREV FUNCTIONS OK             */
*       &GTPWKAD^=ZERO              /* AND NON-EMPTY FILE    @ZA24812*/
*       &(GTPFUNCT=GTPLOC           /* AND LOCATE                    */
*       ×GTPFUNCT=GTPADD            /* OR ADD                        */
*       ×GTPFUNCT=GTPDEL)           /* OR DELETE                     */
*     THEN                          /*                               */
@RF00063 SLR   @09,@09                                             0070
         CR    GTARTNCD,@09                                        0070
         BNE   @RF00070                                            0070
         L     @02,@PC00001                                        0070
         C     @09,GTPWKAD(,@02)                                   0070
         BE    @RF00070                                            0070
         CLI   GTPFUNCT(@02),3                                     0070
         BE    @RT00070                                            0070
         CLI   GTPFUNCT(@02),4                                     0070
         BE    @RT00070                                            0070
         CLI   GTPFUNCT(@02),5                                     0070
         BNE   @RF00070                                            0070
@RT00070 DS    0H                                                  0071
*     DO;                           /*                               */
*       CALL GTALOC;                /* LOCATE RCD                    */
         BAL   @14,GTALOC                                          0072
*       RFY                                                        0073
*         RTNCODE RSTD;             /*                               */
*       GTARTNCD=MAX(GTARTNCD,RTNCODE);/* SAVE RETURN CODE           */
         CR    GTARTNCD,RTNCODE                                    0074
         BNL   *+6
         LR    GTARTNCD,RTNCODE                                    0074
*       IF RTNCODE=GTPNTFND         /* IF ENTRY NOT IN FILE  @Z67SP00*/
*         THEN                      /* THEN SET RETURN       @Z67SP00*/
         CH    RTNCODE,@CH00071                                    0075
         BNE   @RF00075                                            0075
*         GTPRCDNF=ON;              /* INDICATOR             @Z67SP00*/
         L     @14,@PC00001                                        0076
         OI    GTPRCDNF(@14),B'01000000'                           0076
*       RFY                                                        0077
*         RTNCODE UNRSTD;           /*                               */
@RF00075 DS    0H                                                  0078
*     END;                          /*                               */
         EJECT
*                                                                  0079
*   /*****************************************************************/
*   /*                                                               */
*   /* IF REQUEST FOR LOCATE AND RECORD FOUND MOVE IT TO CALLER AREA */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0079
*   IF GTPFUNCT=GTPLOC              /* IF LOCATE                     */
*       &GTARTNCD=GTPGOOD           /* AND LOCATE FOUND ENTRY        */
*       &GTPWKAD^=ZERO              /* AND NON-EMPTY FILE    @ZA24812*/
*     THEN                          /*                               */
@RF00070 L     @09,@PC00001                                        0079
         CLI   GTPFUNCT(@09),3                                     0079
         BNE   @RF00079                                            0079
         SLR   @02,@02                                             0079
         CR    GTARTNCD,@02                                        0079
         BNE   @RF00079                                            0079
         C     @02,GTPWKAD(,@09)                                   0079
         BE    @RF00079                                            0079
*     DO;                           /*                               */
*       USRRCD(1:GTPRCDLN)=RECORD(1:GTPRCDLN);/* MOVE RCD TO CALLER  */
         L     @02,GTPBUFAD(,@09)                                  0081
         LH    @09,GTPRCDLN(,@09)                                  0081
         BCTR  @09,0                                               0081
         L     @01,CURRCD                                          0081
         EX    @09,@SM00296                                        0081
*     END;                          /* END LOCATE                    */
*                                                                  0082
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SERIOUS PREVIOUS ERRORS AND ADD REQUEST                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0083
*   IF GTARTNCD<=GTPNTFND           /* NO SEVERE ERR IN LOCATE       */
*       &GTPFUNCT=GTPADD            /* AND ADD REQUEST               */
*       &GTPWKAD^=ZERO              /* AND NON-EMPTY FILE    @ZA24812*/
*     THEN                          /*                               */
@RF00079 CH    GTARTNCD,@CH00071                                   0083
         BH    @RF00083                                            0083
         L     @09,@PC00001                                        0083
         CLI   GTPFUNCT(@09),4                                     0083
         BNE   @RF00083                                            0083
         ICM   @02,15,GTPWKAD(@09)                                 0083
         BZ    @RF00083                                            0083
*     DO;                           /*                               */
*       CALL GTAADD;                /* ADD RCD TO FILE               */
         BAL   @14,GTAADD                                          0085
*       RFY                                                        0086
*         RTNCODE RSTD;             /*                               */
*       GTARTNCD=RTNCODE;           /* SAVE RETURN CODE              */
         LR    GTARTNCD,RTNCODE                                    0087
*       RFY                                                        0088
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /* END ADD                       */
         EJECT
*                                                                  0090
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SERIOUS PREVIOUS ERRORS AND DEL REQUEST                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0090
*   IF GTARTNCD<=GTPNTFND           /* NO SEVERE ERR IN LOC          */
*       &GTPFUNCT=GTPDEL            /* AND DEL REQUEST               */
*       &GTPWKAD^=ZERO              /* AND NON-EMPTY FILE    @ZA24812*/
*     THEN                          /*                               */
@RF00083 CH    GTARTNCD,@CH00071                                   0090
         BH    @RF00090                                            0090
         L     @09,@PC00001                                        0090
         CLI   GTPFUNCT(@09),5                                     0090
         BNE   @RF00090                                            0090
         ICM   @02,15,GTPWKAD(@09)                                 0090
         BZ    @RF00090                                            0090
*     DO;                           /*                               */
*       CALL GTADEL;                /* DEL RCD TO FILE               */
         BAL   @14,GTADEL                                          0092
*       RFY                                                        0093
*         RTNCODE RSTD;             /*                               */
*       GTARTNCD=RTNCODE;           /* SAVE RETURN CODE              */
         LR    GTARTNCD,RTNCODE                                    0094
*       RFY                                                        0095
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /* END DEL                       */
*                                                                  0096
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SERIOUS PREVIOUS ERRORS AND RESTART REQUEST             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0097
*   IF GTARTNCD=GTPGOOD             /* NO PREVIOUS ERR               */
*       &GTPWKAD^=ZERO              /* AND NON-EMPTY FILE    @ZA24812*/
*       &(GTPFUNCT=GTPSTRTN         /* AND RESTART GETN              */
*       ×GTPFUNCT=GTPSTRTP)         /* OR RESTART GETP               */
*     THEN                          /*                               */
@RF00090 SLR   @09,@09                                             0097
         CR    GTARTNCD,@09                                        0097
         BNE   @RF00097                                            0097
         L     @02,@PC00001                                        0097
         C     @09,GTPWKAD(,@02)                                   0097
         BE    @RF00097                                            0097
         CLI   GTPFUNCT(@02),6                                     0097
         BE    @RT00097                                            0097
         CLI   GTPFUNCT(@02),7                                     0097
         BNE   @RF00097                                            0097
@RT00097 DS    0H                                                  0098
*     DO;                           /*                               */
*       CALL GTASTRT;               /* RESTART GETN OR GETP          */
         BAL   @14,GTASTRT                                         0099
*       RFY                                                        0100
*         RTNCODE RSTD;             /*                               */
*       GTARTNCD=MAX(GTARTNCD,RTNCODE);/* SAVE RETURN CODE           */
         CR    GTARTNCD,RTNCODE                                    0101
         BNL   *+6
         LR    GTARTNCD,RTNCODE                                    0101
*       RFY                                                        0102
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /* END RESTART                   */
         EJECT
*                                                                  0104
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SERIOUS PREVIOUS ERRORS AND GET NEXT REQUEST            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0104
*   IF GTARTNCD=GTPGOOD             /* NO PREVIOUS ERR               */
*       &GTPWKAD^=ZERO              /* AND NON-EMPTY FILE    @ZA24812*/
*       &GTPFUNCT=GTPGETN           /* AND REQUEST FOR NEXT RCD      */
*     THEN                          /*                               */
@RF00097 SLR   @09,@09                                             0104
         CR    GTARTNCD,@09                                        0104
         BNE   @RF00104                                            0104
         L     @02,@PC00001                                        0104
         C     @09,GTPWKAD(,@02)                                   0104
         BE    @RF00104                                            0104
         CLI   GTPFUNCT(@02),8                                     0104
         BNE   @RF00104                                            0104
*     DO;                           /*                               */
*       CALL GTAGETN;               /* GET NEXT RCD IN FILE          */
         BAL   @14,GTAGETN                                         0106
*       RFY                                                        0107
*         RTNCODE RSTD;             /*                               */
*       GTARTNCD=MAX(GTARTNCD,RTNCODE);/* SAVE RETURN CODE           */
         CR    GTARTNCD,RTNCODE                                    0108
         BNL   *+6
         LR    GTARTNCD,RTNCODE                                    0108
*       RFY                                                        0109
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /* END GET NEXT                  */
*                                                                  0110
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SERIOUS PREVIOUS ERRORS AND GET PREVIOUS REQUEST        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0111
*   IF GTARTNCD=GTPGOOD             /* NO PREVIOUS ERR               */
*       &GTPWKAD^=ZERO              /* AND NON-EMPTY FILE    @ZA24812*/
*       &GTPFUNCT=GTPGETP           /* AND REQUEST FOR PREVIOUS RCD  */
*     THEN                          /*                               */
@RF00104 SLR   @09,@09                                             0111
         CR    GTARTNCD,@09                                        0111
         BNE   @RF00111                                            0111
         L     @02,@PC00001                                        0111
         C     @09,GTPWKAD(,@02)                                   0111
         BE    @RF00111                                            0111
         CLI   GTPFUNCT(@02),9                                     0111
         BNE   @RF00111                                            0111
*     DO;                           /*                               */
*       CALL GTAGETP;               /* GET PREVIOUS RCD IN FILE      */
         BAL   @14,GTAGETP                                         0113
*       RFY                                                        0114
*         RTNCODE RSTD;             /*                               */
*       GTARTNCD=MAX(GTARTNCD,RTNCODE);/* SAVE RETURN CODE           */
         CR    GTARTNCD,RTNCODE                                    0115
         BNL   *+6
         LR    GTARTNCD,RTNCODE                                    0115
*       RFY                                                        0116
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /* END GET PREVIOUS              */
         EJECT
*                                                                  0118
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NO SERIOUS PREVIOUS ERRORS AND FREE FILE REQUEST           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0118
*   IF GTARTNCD=GTPGOOD             /* NO PREVIOUS ERR               */
*       &GTPFUNCT=GTPFREE           /* AND FREE FILE REQUEST         */
*     THEN                          /*                               */
@RF00111 CH    GTARTNCD,@CH00083                                   0118
         BNE   @RF00118                                            0118
         L     @09,@PC00001                                        0118
         CLI   GTPFUNCT(@09),10                                    0118
         BNE   @RF00118                                            0118
*     DO;                           /*                               */
*       CALL GTAFREE;               /* FREE FILE                     */
         BAL   @14,GTAFREE                                         0120
*       RFY                                                        0121
*         RTNCODE RSTD;             /*                               */
*       GTARTNCD=MAX(GTARTNCD,RTNCODE);/* SAVE RETURN CODE           */
         CR    GTARTNCD,RTNCODE                                    0122
         BNL   *+6
         LR    GTARTNCD,RTNCODE                                    0122
*       RFY                                                        0123
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /* END FREE FILE                 */
*                                                                  0124
*   /*****************************************************************/
*   /*                                                               */
*   /* RETURN TO CALLER                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0125
*   GTPRETRN=GTARTNCD;              /* RTNCODE IN PARM               */
@RF00118 L     @09,@PC00001                                        0125
         STC   GTARTNCD,GTPRETRN(,@09)                             0125
*   RETURN CODE(GTARTNCD);          /* RTNCODE IN REG 15             */
         LR    @15,GTARTNCD                                        0126
         L     @13,4(,@13)                                         0126
         L     @14,12(,@13)                                        0126
         LM    @00,@12,20(@13)                                     0126
         BR    @14                                                 0126
         EJECT
*                                                                  0127
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO VERIFY PARAMETER PASSED                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0127
*GTAVER:                            /*                               */
*   PROCEDURE;                      /*                               */
GTAVER   STM   @14,@12,12(@13)                                     0127
*   DECLARE                         /*                               */
*     VERRTNCD FIXED(8);            /*                               */
*   VERRTNCD=GTPGOOD;               /* INIT RETURN CODE              */
         SLR   VERRTNCD,VERRTNCD                                   0129
*   IF GTPFUNCT^=GTPOPENN           /* CHECK FOR VALID FUNCTIONS     */
*       &GTPFUNCT^=GTPOPENP         /*                               */
*       &GTPFUNCT^=GTPLOC           /*                               */
*       &GTPFUNCT^=GTPADD           /*                               */
*       &GTPFUNCT^=GTPDEL           /*                               */
*       &GTPFUNCT^=GTPSTRTN         /*                               */
*       &GTPFUNCT^=GTPSTRTP         /*                               */
*       &GTPFUNCT^=GTPGETN          /*                               */
*       &GTPFUNCT^=GTPGETP          /*                               */
*       &GTPFUNCT^=GTPFREE          /*                               */
*     THEN                          /*                               */
         L     @09,@PC00001                                        0130
         CLI   GTPFUNCT(@09),1                                     0130
         BE    @RF00130                                            0130
         CLI   GTPFUNCT(@09),2                                     0130
         BE    @RF00130                                            0130
         CLI   GTPFUNCT(@09),3                                     0130
         BE    @RF00130                                            0130
         CLI   GTPFUNCT(@09),4                                     0130
         BE    @RF00130                                            0130
         CLI   GTPFUNCT(@09),5                                     0130
         BE    @RF00130                                            0130
         CLI   GTPFUNCT(@09),6                                     0130
         BE    @RF00130                                            0130
         CLI   GTPFUNCT(@09),7                                     0130
         BE    @RF00130                                            0130
         CLI   GTPFUNCT(@09),8                                     0130
         BE    @RF00130                                            0130
         CLI   GTPFUNCT(@09),9                                     0130
         BE    @RF00130                                            0130
         CLI   GTPFUNCT(@09),10                                    0130
         BE    @RF00130                                            0130
*     VERRTNCD=GTPIOERR;            /* SET BAD RTN CODE              */
         LA    VERRTNCD,16                                         0131
*   IF(GTPFUNCT=GTPLOC              /* IF LOCATE                     */
*       ×GTPFUNCT=GTPADD            /* OR ADD                        */
*       ×GTPFUNCT=GTPDEL)           /* OR DELETE                     */
*       &GTPKEYLN=ZERO              /* AND NO KEYLEN                 */
*     THEN                          /* THEN                          */
@RF00130 L     @09,@PC00001                                        0132
         CLI   GTPFUNCT(@09),3                                     0132
         BE    @GL00037                                            0132
         CLI   GTPFUNCT(@09),4                                     0132
         BE    @GL00037                                            0132
         CLI   GTPFUNCT(@09),5                                     0132
         BNE   @RF00132                                            0132
@GL00037 L     @09,@PC00001                                        0132
         ICM   @02,3,GTPKEYLN(@09)                                 0132
         BNZ   @RF00132                                            0132
*     VERRTNCD=GTPIOERR;            /* SET BAD RTN CODE              */
         LA    VERRTNCD,16                                         0133
*   IF(GTPFUNCT^=GTPFREE            /* RECORD LENGTH REQUIRED UNLESS */
*       &GTPRCDLN=ZERO)             /* FUNCTION IS GTPFREE           */
*     THEN                          /* THEN                          */
@RF00132 L     @09,@PC00001                                        0134
         CLI   GTPFUNCT(@09),10                                    0134
         BE    @RF00134                                            0134
         ICM   @02,3,GTPRCDLN(@09)                                 0134
         BNZ   @RF00134                                            0134
*     VERRTNCD=GTPIOERR;            /* SET BAD RTN CODE              */
         LA    VERRTNCD,16                                         0135
*   IF(GTPFUNCT=GTPLOC              /* IF LOCATE                     */
*       ×GTPFUNCT=GTPADD            /* OR ADD                        */
*       ×GTPFUNCT=GTPDEL            /* OR DELETE                     */
*       ×GTPFUNCT=GTPGETN           /* OR GET                        */
*       ×GTPFUNCT=GTPGETP)          /*                               */
*       &GTPBUFAD=ZERO              /* AND NO BUFFER ADDRESS         */
*     THEN                          /* THEN                          */
@RF00134 L     @09,@PC00001                                        0136
         CLI   GTPFUNCT(@09),3                                     0136
         BE    @GL00041                                            0136
         CLI   GTPFUNCT(@09),4                                     0136
         BE    @GL00041                                            0136
         CLI   GTPFUNCT(@09),5                                     0136
         BE    @GL00041                                            0136
         CLI   GTPFUNCT(@09),8                                     0136
         BE    @GL00041                                            0136
         CLI   GTPFUNCT(@09),9                                     0136
         BNE   @RF00136                                            0136
@GL00041 L     @09,@PC00001                                        0136
         ICM   @02,15,GTPBUFAD(@09)                                0136
         BNZ   @RF00136                                            0136
*     VERRTNCD=GTPIOERR;            /* SET BAD RTN CODE              */
         LA    VERRTNCD,16                                         0137
*   IF VERRTNCD=ZERO                /* IF PARM OK            @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
@RF00136 CH    VERRTNCD,@CH00083                                   0138
         BNE   @RF00138                                            0138
*     DO;                           /*                       @Z67SP00*/
*       IF GTPPSIZE=GTP4K           /* SET PAGE SIZE         @Z67SP00*/
*         THEN                      /*                       @Z67SP00*/
         L     @09,@PC00001                                        0140
         TM    GTPPSIZE(@09),B'00000111'                           0140
         BNZ   @RF00140                                            0140
*         PAGESIZE=P4K;             /*                       @Z67SP00*/
         MVC   PAGESIZE(4),@CF00150                                0141
*       ELSE                        /*                       @Z67SP00*/
*         IF GTPPSIZE=GTP2K         /*                       @Z67SP00*/
*           THEN                    /*                       @Z67SP00*/
         B     @RC00140                                            0142
@RF00140 L     @09,@PC00001                                        0142
         TM    GTPPSIZE(@09),B'00000011'                           0142
         BNO   @RF00142                                            0142
         TM    GTPPSIZE(@09),B'00000100'                           0142
         BNZ   @RF00142                                            0142
*           PAGESIZE=P2K;           /*                       @Z67SP00*/
         MVC   PAGESIZE(4),@CF00152                                0143
*         ELSE                      /*                       @Z67SP00*/
*           IF GTPPSIZE=GTP1K       /*                       @Z67SP00*/
*             THEN                  /*                       @Z67SP00*/
         B     @RC00142                                            0144
@RF00142 L     @09,@PC00001                                        0144
         TM    GTPPSIZE(@09),B'00000010'                           0144
         BNO   @RF00144                                            0144
         TM    GTPPSIZE(@09),B'00000101'                           0144
         BNZ   @RF00144                                            0144
*             PAGESIZE=P1K;         /*                       @Z67SP00*/
         MVC   PAGESIZE(4),@CF00154                                0145
*           ELSE                    /*                       @Z67SP00*/
*             IF GTPPSIZE=GTP512B   /*                       @Z67SP00*/
*               THEN                /*                       @Z67SP00*/
         B     @RC00144                                            0146
@RF00144 L     @09,@PC00001                                        0146
         TM    GTPPSIZE(@09),B'00000001'                           0146
         BNO   @RF00146                                            0146
         TM    GTPPSIZE(@09),B'00000110'                           0146
         BNZ   @RF00146                                            0146
*               PAGESIZE=P512B;     /*                       @Z67SP00*/
         MVC   PAGESIZE(4),@CF00156                                0147
*             ELSE                  /*                       @Z67SP00*/
*               VERRTNCD=GTPIOERR;  /*                       @Z67SP00*/
         B     @RC00146                                            0148
@RF00146 LA    VERRTNCD,16                                         0148
*       IF GTPRCDLN>PAGESIZE-LENGTH(PAGEPFX)/*               @Z67SP00*/
*         THEN                      /*                       @Z67SP00*/
@RC00146 DS    0H                                                  0149
@RC00144 DS    0H                                                  0149
@RC00142 DS    0H                                                  0149
@RC00140 L     @09,@PC00001                                        0149
         L     @02,PAGESIZE                                        0149
         SH    @02,@CH00034                                        0149
         CH    @02,GTPRCDLN(,@09)                                  0149
         BNL   @RF00149                                            0149
*         VERRTNCD=GTPIOERR;        /*                       @Z67SP00*/
         LA    VERRTNCD,16                                         0150
*     END;                          /*                       @Z67SP00*/
@RF00149 DS    0H                                                  0152
*   RETURN CODE(VERRTNCD);          /*                               */
@RF00138 LR    @15,VERRTNCD                                        0152
         L     @14,12(,@13)                                        0152
         LM    @00,@12,20(@13)                                     0152
         BR    @14                                                 0152
*   END GTAVER;                     /*                               */
         EJECT
*                                                                  0154
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCEDURE CALLED TO OBTAIN REENTRANT WORK AREA AND GET FIRST  */
*   /* PAGE FOR FILE                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0154
*GTAINIT:                           /*                               */
*   PROCEDURE;                      /*                               */
GTAINIT  STM   @14,@12,@SA00003                                    0154
*   DECLARE                         /*                               */
*     INITRC FIXED(31);             /* SUBROUTINE RETURN CODE        */
*   RFY                                                            0156
*     ONEPAGE BASED(RNTFIRST);                                     0156
*   INITRC=GTPGOOD;                 /* INIT TO GOOD RETURN CODE      */
         SLR   INITRC,INITRC                                       0157
*   RFY                                                            0158
*     R2 RSTD;                      /* REG 2 WILL CONTAIN SIZE OF  0158
*                                      REENTRANT WORK AREA           */
*   R2=LENGTH(RENTAREA);            /* SET REQUIRED LENGTH           */
         LA    R2,42                                               0159
*   RENTPTR=ADDR(GTPWKAD);          /* PTR FOR RETURN ADDRESS        */
         L     RENTPTR,@PC00001                                    0160
         LA    RENTPTR,GTPWKAD(,RENTPTR)                           0160
*   GEN(GETMAIN EC,LV=(R2),A=(RENTPTR))                            0161
*   REFS(R2,RENTPTR);               /* GETMAIN REENTRANT WORK AREA   */
         GETMAIN EC,LV=(R2),A=(RENTPTR)
*   RFY                                                            0162
*     R2 UNRSTD;                    /* FREE REG 2                    */
*   RFY                                                            0163
*     RTNCODE RSTD;                 /*                               */
*   IF RTNCODE^=GTPGOOD             /* IF GETMAIN NOT SUCCESSFULL    */
*     THEN                          /* THEN SIGNAL UNABLE TO GET   0164
*                                      SPACE CONDITION               */
         LTR   RTNCODE,RTNCODE                                     0164
         BZ    @RF00164                                            0164
*     DO;                           /*                       @Z67SP00*/
*       INITRC=GTPSPACE;            /* SET RC                @Z67SP00*/
         LA    INITRC,12                                           0166
*       RFY                                                        0167
*         RTNCODE UNRSTD;           /*                               */
*       IF GTPNOSPM=OFF             /* IF MESSAGE REQUESTED  @Z67SP00*/
*         THEN                      /*                       @Z67SP00*/
         L     @09,@PC00001                                        0168
         TM    GTPNOSPM(@09),B'10000000'                           0168
         BNZ   @RF00168                                            0168
*         DO;                       /*                       @Z67SP00*/
*           HMASMMGP=''B;           /* INIT PARM             @Z67SP00*/
         XC    HMASMMGP(16),HMASMMGP                               0170
*           MGPHLDS=ON;             /* MSG TO LOG AND        @Z67SP00*/
*           MGPPRINT=ON;            /* PRINTER               @Z67SP00*/
         OI    MGPHLDS,B'10010000'                                 0172
*           MGPMGNO1=HMA202I;       /* UNABLE TO OBTAIN STORAGE FOR
*                                      WORK AREAS            @Z67SP00*/
         MVC   MGPMGNO1(2),@CH00056                                0173
*           MGPTYPE=MGPSEV;         /*                       @Z67SP00*/
         MVI   MGPTYPE,X'04'                                       0174
*           CALL HMASMMSG(HMASMMGP);/* WRITE MSG             @Z67SP00*/
         L     @15,@CV00123                                        0175
         LA    @01,@AL00175                                        0175
         BALR  @14,@15                                             0175
*         END;                      /*                       @Z67SP00*/
*     END;                          /*                       @Z67SP00*/
@RF00168 DS    0H                                                  0178
*   IF INITRC=GTPGOOD               /* IF GETMAIN OK                 */
*     THEN                          /*                               */
@RF00164 LTR   INITRC,INITRC                                       0178
         BNZ   @RF00178                                            0178
*     DO;                           /*                               */
*       RENTPTR=GTPWKAD;            /* SAVE PTR TO WORK AREA         */
         L     @15,@PC00001                                        0180
         L     RENTPTR,GTPWKAD(,@15)                               0180
*       RENTAREA=''B;               /* ZERO RENTAREA         @ZA24812*/
         XC    RENTAREA(42,RENTPTR),RENTAREA(RENTPTR)              0181
*       CALL GTAGTPAG(RNTFIRST);    /* GET FIRST PAGE                */
         ST    RENTPTR,@AL00001                                    0182
         LA    @01,@AL00001                                        0182
         BAL   @14,GTAGTPAG                                        0182
*       RFY                                                        0183
*         RTNCODE RSTD;             /*                               */
*       INITRC=RTNCODE;             /* SAVE RETURN CODE              */
         LR    INITRC,RTNCODE                                      0184
*       RFY                                                        0185
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*   IF INITRC=GTPGOOD               /* IF GETMAINS SUCCESSFULL THEN  */
*     THEN                          /* INIT WORK AREA AND FILE       */
@RF00178 SLR   @09,@09                                             0187
         CR    INITRC,@09                                          0187
         BNE   @RF00187                                            0187
*     DO;                           /* CHAINING                      */
*       RNTLAST=RNTFIRST;           /* INIT LAST PAGE TO FIRST       */
         L     @02,RNTFIRST(,RENTPTR)                              0189
         ST    @02,RNTLAST(,RENTPTR)                               0189
*       RNTCPAG=RNTFIRST;           /* INIT CURRENT PAGE STATUS      */
         ST    @02,RNTCPAG(,RENTPTR)                               0190
*       RNTCRCD=ADDR(PAGDATA);      /* INIT CURRENT RECORD STATUS    */
         LA    @15,PAGDATA(,@02)                                   0191
         ST    @15,RNTCRCD(,RENTPTR)                               0191
*       RNTCPOS=ONE;                /* INIT CURRENT POSITION STATUS  */
         LA    @14,1                                               0192
         STH   @14,RNTCPOS(,RENTPTR)                               0192
*       RNTCPAGN=RNTFIRST;          /* INIT CURRENT PAGE             */
         ST    @02,RNTCPAGN(,RENTPTR)                              0193
*       RNTCRCDN=ADDR(PAGDATA);     /* RECORD AND            @Z67SP00*/
         ST    @15,RNTCRCDN(,RENTPTR)                              0194
*       RNTCPOSN=ONE;               /* POSITION FOR GETN     @Z67SP00*/
         STH   @14,RNTCPOSN(,RENTPTR)                              0195
*       RNTCPAGP=RNTFIRST;          /* INIT GETP CURRENT PAG @Z67SP00*/
         ST    @02,RNTCPAGP(,RENTPTR)                              0196
*       RNTCRCDP=ADDR(PAGDATA);     /* INIT GETP CURRENT RECORD      */
         ST    @15,RNTCRCDP(,RENTPTR)                              0197
*       RNTCPOSP=ONE;               /* INIT GTP CUR POS              */
         STH   @14,RNTCPOSP(,RENTPTR)                              0198
*       PREVPAG=ZERO;               /* ZERO PREV PAGE IN FILE PTR    */
         ST    @09,PREVPAG(,@02)                                   0199
*     END;                          /*                               */
*   ELSE                            /* IF NULL FILE          @ZA24812*/
*     IF GTPWKAD^=ZERO              /*                       @ZA24812*/
*       THEN                        /* THEN FREE REEWNTRANT  @ZA24812*/
         B     @RC00187                                            0201
@RF00187 L     @09,@PC00001                                        0201
         ICM   @02,15,GTPWKAD(@09)                                 0201
         BZ    @RF00201                                            0201
*       DO;                         /*                       @ZA24812*/
*         RFY                                                      0203
*           R2 RSTD;                /* RESTRICT REGISTER     @ZA24812*/
*         R2=LENGTH(RENTAREA);      /* LENGTH TO FREE SET    @ZA24812*/
         LA    R2,42                                               0204
*         RENTPTR=ADDR(GTPWKAD);    /* ADDRESS TO FREE SET   @ZA24812*/
         LA    RENTPTR,GTPWKAD(,@09)                               0205
*         GEN(FREEMAIN E,LV=(R2),A=(RENTPTR))                      0206
*         REFS(R2,RENTPTR);         /* FILE FREED            @ZA24812*/
         FREEMAIN E,LV=(R2),A=(RENTPTR)
*         RFY                                                      0207
*           R2 UNRSTD;              /* UNRESTRICT REGISTER   @ZA24812*/
*         GTPWKAD=ZERO;             /* REINIT GTPWKAD        @ZA24812*/
         L     @09,@PC00001                                        0208
         SLR   @02,@02                                             0208
         ST    @02,GTPWKAD(,@09)                                   0208
*       END;                                                       0209
*   RETURN CODE(INITRC);            /* RETURN TO CALLER W/RETURN     */
@RF00201 DS    0H                                                  0210
@RC00187 LR    @15,INITRC                                          0210
         L     @14,@SA00003                                        0210
         LM    @00,@12,@SA00003+8                                  0210
         BR    @14                                                 0210
*   END GTAINIT;                    /* CODE-END OF INITIALIZATION    */
         EJECT
*                                                                  0212
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE IS CALLED TO LOCATE THE SPECIFIED RECORD IN    */
*   /* FILE                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0212
*GTALOC:                            /*                               */
*   PROCEDURE;                      /*                               */
GTALOC   STM   @14,@12,12(@13)                                     0212
*   DECLARE                         /*                               */
*     LOCRTNCD FIXED(8);            /* PROC RETURN CODE              */
*   RFY                                                            0214
*     ONEPAGE BASED(CURPAG);                                       0214
*   LOCRTNCD=GTPGOOD;               /* INIT RETURN CODE              */
         SLR   LOCRTNCD,LOCRTNCD                                   0215
*   CURPAG=RNTCPAG;                 /* PTR TO BLK REFERENCED LAST    */
*                                                                  0216
         MVC   CURPAG(4),RNTCPAG(RENTPTR)                          0216
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND NEXT PAGE WITH AT LEAST ONE RECORD IN IT         @XA21330*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0217
*   DO WHILE(                       /* LOOP THRU PAGES       @XA21330*/
*         CNTINPAG=ZERO);           /* TILL PAGE WITH DATA   @XA21330*/
         B     @DE00217                                            0217
@DL00217 DS    0H                                                  0218
*     CURPAG=NEXTPAG;               /* POINT TO NEXT PAGE    @XA21330*/
         L     @09,CURPAG                                          0218
         L     @09,NEXTPAG(,@09)                                   0218
         ST    @09,CURPAG                                          0218
*   END;                            /*                       @XA21330*/
@DE00217 L     @09,CURPAG                                          0219
         ICM   @02,3,CNTINPAG(@09)                                 0219
         BZ    @DL00217                                            0219
*   CURRCD=ADDR(PAGDATA);           /* CHECK FIRST RECORD IN PAGE  0220
*                                                            @ZA24812*/
         LA    @09,PAGDATA(,@09)                                   0220
         ST    @09,CURRCD                                          0220
*   IF RCDKEY(1:GTPKEYLN)>USRKEY(1:GTPKEYLN)/* IF REQUESTED RECORD   */
*     THEN                          /* BEFORE THIS ONE THEN START    */
         L     @02,@PC00001                                        0221
         L     @01,GTPBUFAD(,@02)                                  0221
         LH    @02,GTPKEYLN(,@02)                                  0221
         BCTR  @02,0                                               0221
         EX    @02,@SC00298                                        0221
         BNH   @RF00221                                            0221
*     CURPAG=RNTFIRST;              /* AT FIRST PAGE                 */
*                                                                  0222
         MVC   CURPAG(4),RNTFIRST(RENTPTR)                         0222
*   /*****************************************************************/
*   /*                                                               */
*   /* FIND THE PAGE THAT THE SPECIFIED RECORD IS IN                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0223
*   STOP=OFF;                       /* LOOP CONTROL SW               */
@RF00221 NI    STOP,B'01111111'                                    0223
*   DO WHILE(STOP=OFF);             /* LOOP TILL RCD FND     @XA21330*/
         B     @DE00224                                            0224
@DL00224 DS    0H                                                  0225
*     IF CNTINPAG>ZERO              /* IF PAGE HAS RECORDS   @XA21330*/
*       THEN                        /* THEN SEE IF RCD       @XA21330*/
         L     @09,CURPAG                                          0225
         LH    @02,CNTINPAG(,@09)                                  0225
         LTR   @02,@02                                             0225
         BNP   @RF00225                                            0225
*       DO;                         /* IS IN THIS PAGE       @XA21330*/
*         CURRCD=ADDR(PAGDATA)+((CNTINPAG-1)*GTPRCDLN);/* ADDR OF  0227
*                                      LAST RECORD IN PAGE           */
         LA    @09,PAGDATA(,@09)                                   0227
         LR    @01,@02                                             0227
         BCTR  @01,0                                               0227
         L     @02,@PC00001                                        0227
         MH    @01,GTPRCDLN(,@02)                                  0227
         ALR   @09,@01                                             0227
         ST    @09,CURRCD                                          0227
*         IF RCDEOF=EOFRCD          /* END OF FILE?                  */
*             ×RCDKEY(1:GTPKEYLN)>=USRKEY(1:GTPKEYLN)/* OR RCD FOUND */
*           THEN                    /* PASSED THEN                   */
         CLC   RCDEOF(1,@09),EOFRCD                                0228
         BE    @RT00228                                            0228
         L     @01,GTPBUFAD(,@02)                                  0228
         LH    @02,GTPKEYLN(,@02)                                  0228
         BCTR  @02,0                                               0228
         EX    @02,@SC00298                                        0228
         BL    @RF00228                                            0228
@RT00228 DS    0H                                                  0229
*           STOP=ON;                /* STOP SEARCH                   */
         OI    STOP,B'10000000'                                    0229
*         ELSE                      /* IF NOT IN PAGE                */
*           CURPAG=NEXTPAG;         /* SET PTR TO NEXT PAGE IN FILE  */
         B     @RC00228                                            0230
@RF00228 L     @09,CURPAG                                          0230
         L     @09,NEXTPAG(,@09)                                   0230
         ST    @09,CURPAG                                          0230
*       END;                        /* END PAGE HAS RECORDS  @XA21330*/
*     ELSE                          /* IF PAGE HAS NO RECORD @XA21330*/
*       CURPAG=NEXTPAG;             /* POINT TO NEXT PAGE    @XA21330*/
         B     @RC00225                                            0232
@RF00225 L     @09,CURPAG                                          0232
         L     @09,NEXTPAG(,@09)                                   0232
         ST    @09,CURPAG                                          0232
*   END;                            /* END LOOP TO FIND PAGE         */
*                                                                  0233
@RC00225 DS    0H                                                  0233
@DE00224 TM    STOP,B'10000000'                                    0233
         BZ    @DL00224                                            0233
*   /*****************************************************************/
*   /*                                                               */
*   /* PAGE WITH RECORD HAS BEEN FOUND NOW FIND RECORD IN THAT PAGE  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0234
*   CURRCD=ADDR(PAGDATA);           /* FIRST RCD IN PAGE             */
         L     @09,CURPAG                                          0234
         LA    @09,PAGDATA(,@09)                                   0234
         ST    @09,CURRCD                                          0234
*   CURPOS=ONE;                     /* RCD POSITION IN PAGE          */
         MVC   CURPOS(2),@CH00053                                  0235
*   STOP=OFF;                       /*                               */
         NI    STOP,B'01111111'                                    0236
*   DO WHILE STOP=OFF;              /* LOOP TILL RCD FOUND           */
         B     @DE00237                                            0237
@DL00237 DS    0H                                                  0238
*     IF RCDEOF=EOFRCD              /* IF END OF FILE                */
*         ×RCDKEY(1:GTPKEYLN)>USRKEY(1:GTPKEYLN)/* OR PAST RCD       */
*       THEN                        /*                               */
         L     @09,CURRCD                                          0238
         CLC   RCDEOF(1,@09),EOFRCD                                0238
         BE    @RT00238                                            0238
         L     @02,@PC00001                                        0238
         L     @01,GTPBUFAD(,@02)                                  0238
         LH    @02,GTPKEYLN(,@02)                                  0238
         BCTR  @02,0                                               0238
         EX    @02,@SC00298                                        0238
         BNH   @RF00238                                            0238
@RT00238 DS    0H                                                  0239
*       DO;                         /*                               */
*         STOP=ON;                  /* STOP LOOP                     */
         OI    STOP,B'10000000'                                    0240
*         LOCRTNCD=GTPNTFND;        /* RCD NOT FOUND RC              */
         LA    LOCRTNCD,4                                          0241
*       END;                        /*                               */
*     ELSE                          /*                               */
*       IF RCDKEY(1:GTPKEYLN)=USRKEY(1:GTPKEYLN)/* IF RCD FOUND      */
*         THEN                      /*                               */
         B     @RC00238                                            0243
@RF00238 L     @09,@PC00001                                        0243
         L     @02,GTPBUFAD(,@09)                                  0243
         LH    @09,GTPKEYLN(,@09)                                  0243
         BCTR  @09,0                                               0243
         L     @01,CURRCD                                          0243
         EX    @09,@SC00302                                        0243
         BNE   @RF00243                                            0243
*         DO;                       /*                               */
*           STOP=ON;                /* STOP LOOP                     */
         OI    STOP,B'10000000'                                    0245
*           LOCRTNCD=GTPGOOD;       /* RCD FOUND RC                  */
         SLR   LOCRTNCD,LOCRTNCD                                   0246
*         END;                      /*                               */
*       ELSE                        /*                               */
*         DO;                       /*                               */
         B     @RC00243                                            0248
@RF00243 DS    0H                                                  0249
*           CURRCD=CURRCD+GTPRCDLN; /* INCR PTR TO NEXT RCD          */
         L     @09,@PC00001                                        0249
         LH    @09,GTPRCDLN(,@09)                                  0249
         AL    @09,CURRCD                                          0249
         ST    @09,CURRCD                                          0249
*           CURPOS=CURPOS+ONE;      /* INCR RCD POSITION             */
         LH    @09,CURPOS                                          0250
         LA    @09,1(,@09)                                         0250
         STH   @09,CURPOS                                          0250
*         END;                      /*                               */
*   END;                            /* END FIND IN PAGE LOOP         */
@RC00243 DS    0H                                                  0252
@RC00238 DS    0H                                                  0252
@DE00237 TM    STOP,B'10000000'                                    0252
         BZ    @DL00237                                            0252
*   RNTSTAT=CURSTAT;                /* SAVE CURRENT RECORD POSITION
*                                      IN REENTRANT WORK AREA        */
         MVC   RNTSTAT(10,RENTPTR),CURSTAT                         0253
*   GTPRESTR=CURSTAT;               /* PASS CURRENT RECORD POSITION
*                                      TO CALLER                     */
         L     @09,@PC00001                                        0254
         MVC   GTPRESTR(10,@09),CURSTAT                            0254
*   RETURN CODE(LOCRTNCD);          /* RETURN WITH CODE SET UP       */
         LR    @15,LOCRTNCD                                        0255
         L     @14,12(,@13)                                        0255
         LM    @00,@12,20(@13)                                     0255
         BR    @14                                                 0255
*   END GTALOC;                     /*                               */
         EJECT
*                                                                  0257
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE IS CALLED TO DELETE RECORD FROM FILE IF LOCATE */
*   /* FOUND USER SPECIFIED RECORD IN FILE. ALL FOLLOWING RECORDS IN */
*   /* CURRENT PAGE OF FILE WILL BE SHIFTED UPWARD ONE POSITION,     */
*   /* THEREBY DELETING APPROPRIATE RECORD                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0257
*GTADEL:                                                           0257
*   PROC;                           /*                               */
GTADEL   STM   @14,@12,12(@13)                                     0257
*   DECLARE                                                        0258
*     DELRC FIXED(31);              /* RETURN CODE                   */
*   RFY                                                            0259
*     ONEPAGE BASED(CURPAG);        /*                               */
*   DELRC=GTPGOOD;                  /* INIT TO DELETE SUCCESSFUL     */
         SLR   DELRC,DELRC                                         0260
*   IF RCDKEY(1:GTPKEYLN)=USRKEY(1:GTPKEYLN)/* ONLY DO SHIFT IF    0261
*                                      RECORD TO DELETE WAS FOUND    */
*     THEN                          /*                       @Z67SP00*/
         L     @09,CURRCD                                          0261
         L     @02,@PC00001                                        0261
         L     @01,GTPBUFAD(,@02)                                  0261
         LH    @15,GTPKEYLN(,@02)                                  0261
         BCTR  @15,0                                               0261
         EX    @15,@SC00298                                        0261
         BNE   @RF00261                                            0261
*     DO;                           /*                       @Z67SP00*/
*       RFY                                                        0263
*        (MVCLTOAD,                                                0263
*         MVCLTOLN,                                                0263
*         MVCLFMAD,                                                0263
*         MVCLFMLN) RSTD;           /* RESTRICT MVCL REGS    @YA20679*/
*       MVCLTOAD=CURRCD;            /* SHIFT RCDS TO CURRENT @YA20679*/
         LR    MVCLTOAD,@09                                        0264
*       MVCLFMAD=MVCLTOAD+GTPRCDLN; /* FROM FOLLOWING RCDS   @YA20679*/
         LH    @09,GTPRCDLN(,@02)                                  0265
         LR    MVCLFMAD,MVCLTOAD                                   0265
         ALR   MVCLFMAD,@09                                        0265
*       MVCLTOLN=(CNTINPAG-CURPOS)*GTPRCDLN;/*               @YA20679*/
         L     @02,CURPAG                                          0266
         LH    @01,CNTINPAG(,@02)                                  0266
         SH    @01,CURPOS                                          0266
         MR    @00,@09                                             0266
         LR    MVCLTOLN,@01                                        0266
*       MVCLFMLN=MVCLTOLN;          /*                       @YA20679*/
         LR    MVCLFMLN,MVCLTOLN                                   0267
*       MVCL(MVCLTOAD,MVCLFMAD);    /* MOVE DATA             @YA20679*/
         MVCL  MVCLTOAD,MVCLFMAD                                   0268
*       RFY                                                        0269
*        (MVCLTOAD,                                                0269
*         MVCLTOLN,                                                0269
*         MVCLFMAD,                                                0269
*         MVCLFMLN) UNRSTD;         /* FREE MVCL REGS        @YA20679*/
*       CNTINPAG=CNTINPAG-1;        /* DECREMENT COUNT OF RECORDS IN
*                                      PAGE BY ONE                   */
         L     @09,CURPAG                                          0270
         LH    @02,CNTINPAG(,@09)                                  0270
         BCTR  @02,0                                               0270
         STH   @02,CNTINPAG(,@09)                                  0270
*     END;                          /*                               */
*   RETURN CODE(DELRC);             /*                               */
@RF00261 LR    @15,DELRC                                           0272
         L     @14,12(,@13)                                        0272
         LM    @00,@12,20(@13)                                     0272
         BR    @14                                                 0272
*   END GTADEL;                     /*                               */
         EJECT
*                                                                  0274
*/********************************************************************/
*/*                                                                  */
*/* THIS PROCEDURE WILL ADD AN ENTRY TO AN IN STORAGE FILE. THE FILE */
*/* IS MAINTAINED BY A KEY. PREVIOUS TO CALLING THIS PROCEDURE, A    */
*/* CALL IS MADE TO GTALOC SO THAT CURSTAT WILL CONTAIN THE FOLLOWING*/
*/*             1. A POINTER TO THE PAGE WHERE RECORD SHOULD BE      */
*/*                ADDED.                                            */
*/*             2. A POINTER TO THE RECORD WITHIN THE PAGE WHERE THE */
*/*                RECORD SHOULD BE ADDED.                           */
*/*             3. THE RECORD POSITION WITHIN THE PAGE WHERE THE     */
*/*                TO BE ADDED.                                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0274
*GTAADD:                                                           0274
*   PROC;                                                          0274
GTAADD   STM   @14,@12,@SA00006                                    0274
*   DECLARE                                                        0275
*     ADDRC FIXED(8);               /* INTERNAL RETURN CODE          */
*   DECLARE                                                        0276
*     SAVKEY CHAR(255);             /* SAVE KEY OF ADDED RECORD      */
*   DECLARE                         /*                       @YA20679*/
*     SAVBUFFR CHAR(255);           /* FOR SAVE IN MVCL      @YA20679*/
*   GEN DATA DEFS(SAVPAGE);                                        0278
*   DECLARE                         /*                       @YA20679*/
*     SAVPAGE CHAR(4096) GEND;      /* FOR MVCL              @YA20679*/
*   DECLARE                         /*                       @YA20679*/
*     ADSAVPAG PTR(31) INIT(ADDR(SAVPAGE));/*                @YA20679*/
*   DECLARE                         /*                       @YA20679*/
*     INADDR PTR(31),               /*                       @YA20679*/
*     OUTADDR PTR(31),              /*                       @YA20679*/
*     SAVADDR PTR(31),              /*                       @YA20679*/
*     SAVRCDAD PTR(31);             /*                               */
*   DECLARE                         /*                       @YA20679*/
*     MVCLLEN FIXED(31);            /* FOR MVCL LENGTH       @YA20679*/
*   RFY                                                            0283
*     ONEPAGE BASED(CURPAG);        /* ADDRESS CURRENT RECORD PAGE   */
*   CURSTAT=RNTSTAT;                /* RETRIEVE POSITION WHERE RECORD
*                                      IS TO BE ADDED                */
         MVC   CURSTAT(10),RNTSTAT(RENTPTR)                        0284
*   ADDSTOP=OFF;                    /* SIGNAL ALL RECORDS IN FILE NOT
*                                      YET SHIFTED                   */
         NI    ADDSTOP,B'10111111'                                 0285
*   ADDRC=GTPGOOD;                  /* INIT RETURN CODE TO SUCCESSFUL*/
         MVI   ADDRC,X'00'                                         0286
*   INADDR=GTPBUFAD;                /* INPUT BUFFER ADDR     @YA20679*/
         L     @09,@PC00001                                        0287
         L     @15,GTPBUFAD(,@09)                                  0287
         ST    @15,INADDR                                          0287
*   OUTADDR=ADDR(SAVBUFFR);         /* OUTPUT BUFFER ADDR    @YA20679*/
*                                                                  0288
         LA    @14,SAVBUFFR                                        0288
         ST    @14,OUTADDR                                         0288
*   /*****************************************************************/
*   /*                                                               */
*   /* THE FOLLOWING CODE WILL ADD THE USER RECORD TO THE FILE. IF   */
*   /* THE RECORD IN THE FILE AND THE RECORD TO BE ADDED HAVE THE    */
*   /* SAME KEY THEN THE RECORD IN THE FILE WILL BE REPLACED BY THE  */
*   /* RECORD TO BE ADDED. IF THE KEYS ARE NOT THE SAME THEN A SERIES*/
*   /* OF MVCL INSTRUCTIONS IS USED TO SHIFT ALL REMAINING RECORDS IN*/
*   /* FILE DOWN ONE POSITION.                               @YA20679*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0289
*   IF RCDKEY(1:GTPKEYLN)=          /* IF RECORD IN DILE HAS THE     */
*       USRRCD(1:GTPKEYLN)          /* SMAE KEY AS RECORD TO BE ADDED*/
*     THEN                          /* THEN REPLACE RECORD IN FILE   */
         L     @14,CURRCD                                          0289
         LH    @07,GTPKEYLN(,@09)                                  0289
         BCTR  @07,0                                               0289
         EX    @07,@SC00304                                        0289
         BNE   @RF00289                                            0289
*     DO;                           /*                       @Z67SP00*/
*       RECORD(1:GTPRCDLN)=         /* WITH RECORD TO BE ADDED       */
*           USRRCD(1:GTPRCDLN);                                    0291
         LH    @09,GTPRCDLN(,@09)                                  0291
         BCTR  @09,0                                               0291
         EX    @09,@SM00306                                        0291
*     END;                                                         0292
*   ELSE                            /*                       @Z67SP00*/
*     DO WHILE(ADDSTOP=OFF);        /* IF KEYS ARE UNEQUAL THEN    0293
*                                      INSERT RECORD TO BE ADDED AND
*                                      SHIFT ALL FOLLOWING RECORDS I
*                                      IN THE FILE DOWN ONE POSITION */
         B     @RC00289                                            0293
@RF00289 B     @DE00293                                            0293
@DL00293 DS    0H                                                  0294
*       IF CNTINPAG=MAXENTCT        /* IF PAGE IS FULL       @YA20679*/
*         THEN                      /* THEN SET UP TO SHIFT  @YA20679*/
         LH    @09,MAXENTCT                                        0294
         L     @15,CURPAG                                          0294
         LH    @14,CNTINPAG(,@15)                                  0294
         CR    @14,@09                                             0294
         BNE   @RF00294                                            0294
*         DO;                       /* WHOLE PAGE            @YA20679*/
*           SAVRCDAD=ADDR(PAGDATA)+((MAXENTCT-1)*GTPRCDLN);/*      0296
*                                                            @YA20679*/
         LA    SAVRCDAD,PAGDATA(,@15)                              0296
         LR    @01,@09                                             0296
         BCTR  @01,0                                               0296
         L     @09,@PC00001                                        0296
         LH    @09,GTPRCDLN(,@09)                                  0296
         MR    @00,@09                                             0296
         ALR   SAVRCDAD,@01                                        0296
*           OUTADDR->RECORD(1:GTPRCDLN)=SAVRCDAD->RECORD(1:GTPRCDLN);
         L     @02,OUTADDR                                         0297
         LR    @15,@09                                             0297
         BCTR  @15,0                                               0297
         EX    @15,@SM00308                                        0297
*                                   /* SAVE LAST RECORD IN PAGE    0298
*                                                            @YA20679*/
*           MVCLLEN=(CNTINPAG-CURPOS)*GTPRCDLN;/* DATA TO    @YA20679*/
         LR    @01,@14                                             0298
         SH    @01,CURPOS                                          0298
         MR    @00,@09                                             0298
         LR    MVCLLEN,@01                                         0298
*         END;                      /* MOVE                  @YA20679*/
*       ELSE                        /*                       @YA20679*/
*         MVCLLEN=(CNTINPAG-CURPOS+1)*GTPRCDLN;/* SHIFT RCDS IN PAGE
*                                      DOWN ONE              @YA20679*/
         B     @RC00294                                            0300
@RF00294 L     @09,CURPAG                                          0300
         LH    @01,CNTINPAG(,@09)                                  0300
         SH    @01,CURPOS                                          0300
         AH    @01,@CH00053                                        0300
         L     @09,@PC00001                                        0300
         MH    @01,GTPRCDLN(,@09)                                  0300
         LR    MVCLLEN,@01                                         0300
*       RFY                                                        0301
*        (MVCLTOAD,                                                0301
*         MVCLTOLN,                                                0301
*         MVCLFMAD,                                                0301
*         MVCLFMLN) RSTD;           /* RESTRICT MVCL REGS    @YA20679*/
@RC00294 DS    0H                                                  0302
*       MVCLTOAD=ADSAVPAG;          /* MOVE TO SAVE PAGE     @YA20679*/
         L     MVCLTOAD,ADSAVPAG                                   0302
*       MVCLTOLN=MVCLLEN;           /* FOR LEN CALC          @YA20679*/
         LR    MVCLTOLN,MVCLLEN                                    0303
*       MVCLFMAD=CURRCD;            /* FROM CURRENT POSITION @YA20679*/
         L     MVCLFMAD,CURRCD                                     0304
*       MVCLFMLN=MVCLTOLN;          /*                       @YA20679*/
         LR    MVCLFMLN,MVCLTOLN                                   0305
*       MVCL(MVCLTOAD,MVCLFMAD);    /* MOVE TOTAL RCD        @YA20679*/
         MVCL  MVCLTOAD,MVCLFMAD                                   0306
*       MVCLTOAD=CURRCD+GTPRCDLN;   /* MOVE TO NEXT POSITION @YA20679*/
         L     @09,@PC00001                                        0307
         LH    MVCLTOAD,GTPRCDLN(,@09)                             0307
         AL    MVCLTOAD,CURRCD                                     0307
*       MVCLTOLN=MVCLLEN;           /*                       @YA20679*/
         LR    MVCLTOLN,MVCLLEN                                    0308
*       MVCLFMAD=ADSAVPAG;          /* FROM SAVED PAGE       @YA20679*/
         L     MVCLFMAD,ADSAVPAG                                   0309
*       MVCLFMLN=MVCLLEN;           /*                       @YA20679*/
         LR    MVCLFMLN,MVCLLEN                                    0310
*       MVCL(MVCLTOAD,MVCLFMAD);    /* MOVE DATA BACK        @YA20679*/
         MVCL  MVCLTOAD,MVCLFMAD                                   0311
*       RFY                                                        0312
*        (MVCLTOAD,                                                0312
*         MVCLTOLN,                                                0312
*         MVCLFMAD,                                                0312
*         MVCLFMLN) UNRSTD;         /* FREE MVCL REGS        @YA20679*/
*       RECORD(1:GTPRCDLN)=INADDR->RECORD(1:GTPRCDLN);/* MOVE RCD TO
*                                      BE INSERTED INTO SLOT @YA20679*/
         L     @09,CURRCD                                          0313
         L     @15,@PC00001                                        0313
         LH    @15,GTPRCDLN(,@15)                                  0313
         BCTR  @15,0                                               0313
         L     @14,INADDR                                          0313
         EX    @15,@SM00310                                        0313
*       IF CNTINPAG=MAXENTCT        /* IF PAGE WAS FULL      @YA20679*/
*         THEN                      /*                       @YA20679*/
         L     @09,CURPAG                                          0314
         CLC   CNTINPAG(2,@09),MAXENTCT                            0314
         BNE   @RF00314                                            0314
*         DO;                       /*                       @YA20679*/
*           SAVADDR=INADDR;         /* SWAP INPUT/OUTPUT     @YA20679*/
         LR    SAVADDR,@14                                         0316
*           INADDR=OUTADDR;         /* BUFFERS               @YA20679*/
         MVC   INADDR(4),OUTADDR                                   0317
*           OUTADDR=SAVADDR;        /*                       @YA20679*/
         ST    SAVADDR,OUTADDR                                     0318
*         END;                      /*                       @YA20679*/
*       ELSE                        /* IF PAGE NOT FULL      @YA20679*/
*         DO;                       /* THEN STOPP LOOP       @YA20679*/
         B     @RC00314                                            0320
@RF00314 DS    0H                                                  0321
*           ADDSTOP=ON;             /*                       @YA20679*/
         OI    ADDSTOP,B'01000000'                                 0321
*           CNTINPAG=CNTINPAG+1;    /* INCR PAGGE CNT        @YA20679*/
         L     @09,CURPAG                                          0322
         LA    @15,1                                               0322
         AH    @15,CNTINPAG(,@09)                                  0322
         STH   @15,CNTINPAG(,@09)                                  0322
*         END;                      /*                       @YA20679*/
*       IF(CNTINPAG=MAXENTCT)&      /* IF SHIFTING IS TO CONTINUE AND*/
*           (ADDSTOP=OFF)&          /* ONTO ANOTHER PAGE AND THERE   */
*           (NEXTPAG=ZERO)          /* ARE NO MORE PAGES IN FILE THEN*/
*         THEN                      /* GET A NEW PAGE                */
@RC00314 L     @09,CURPAG                                          0324
         CLC   CNTINPAG(2,@09),MAXENTCT                            0324
         BNE   @RF00324                                            0324
         TM    ADDSTOP,B'01000000'                                 0324
         BNZ   @RF00324                                            0324
         ICM   @15,15,NEXTPAG(@09)                                 0324
         BNZ   @RF00324                                            0324
*         DO;                       /*                       @Z67SP00*/
*           SAVKEY(1:GTPKEYLN)=     /* SAVE KEY OF ADDED RECORD      */
*               RNTCRCD->USRKEY(1:GTPKEYLN);                       0326
         L     @15,@PC00001                                        0326
         LH    @15,GTPKEYLN(,@15)                                  0326
         BCTR  @15,0                                               0326
         L     @01,RNTCRCD(,RENTPTR)                               0326
         EX    @15,@SM00312                                        0326
*           CALL GTAGTPAG(ONEPAGE); /* VIA A CALL TO GET PAGE        */
         ST    @09,@AL00001                                        0327
         LA    @01,@AL00001                                        0327
         BAL   @14,GTAGTPAG                                        0327
*           RFY                                                    0328
*             RTNCODE RSTD;                                        0328
*           ADDRC=RTNCODE;          /* SAVE RETURN CODE              */
         STC   RTNCODE,ADDRC                                       0329
*           RFY                                                    0330
*             RTNCODE UNRSTD;                                      0330
*           IF ADDRC=ZERO           /* IF GOOD RETURN CODE           */
*               &CMPRSW=ON          /* AND COMPRESS WAS DONE         */
*             THEN                  /* THEN DO                       */
         CLI   ADDRC,0                                             0331
         BNE   @RF00331                                            0331
         TM    CMPRSW,B'00100000'                                  0331
         BNO   @RF00331                                            0331
*             DO;                   /*                       @Z67SP00*/
*               USRKEY(1:GTPKEYLN)= /* RESTORE USER                  */
*                   SAVKEY(1:GTPKEYLN);/* BUFFER AND CALL            */
         L     @09,@PC00001                                        0333
         L     @01,GTPBUFAD(,@09)                                  0333
         LH    @09,GTPKEYLN(,@09)                                  0333
         BCTR  @09,0                                               0333
         EX    @09,@SM00314                                        0333
*               CALL GTALOC;        /* CURRENT ENTRY STATUS IN     0334
*                                      REENTRANT WORK AREA           */
         BAL   @14,GTALOC                                          0334
*             END;                                                 0335
*           ADDSTOP=ON;             /* SIGNAL ADD COMPLETE WHEN    0336
*                                      COMPRESS ATTEMPTED            */
@RF00331 OI    ADDSTOP,B'01000000'                                 0336
*         END;                                                     0337
*       IF ADDSTOP=OFF              /* CONTINUE SHIFT ON NEXT PAGE 0338
*                                      SIGNALED THEN                 */
*         THEN                                                     0338
@RF00324 TM    ADDSTOP,B'01000000'                                 0338
         BNZ   @RF00338                                            0338
*         DO;                       /*                       @Z67SP00*/
*           CURPAG=NEXTPAG;         /* RESET PAGE POINTER            */
         L     @09,CURPAG                                          0340
         L     @09,NEXTPAG(,@09)                                   0340
         ST    @09,CURPAG                                          0340
*           CURRCD=ADDR(PAGDATA);   /* RESET PTR TO FIRST RECORD     */
         LA    @09,PAGDATA(,@09)                                   0341
         ST    @09,CURRCD                                          0341
*           CURPOS=ONE;             /* RESET TO FIRST POSITION       */
         MVC   CURPOS(2),@CH00053                                  0342
*         END;                                                     0343
*       ELSE                        /*                       @Z67SP00*/
*         DO;                       /* RESTORE USER BUFFER           */
         B     @RC00338                                            0344
@RF00338 DS    0H                                                  0345
*           CURSTAT=RNTSTAT;        /* RETRIEVE IT THROUGH STATUS IN */
         MVC   CURSTAT(10),RNTSTAT(RENTPTR)                        0345
*           USRRCD(1:GTPRCDLN)=     /* REENTRANT WORK AREA           */
*               RECORD(1:GTPRCDLN);                                0346
         L     @09,@PC00001                                        0346
         L     @01,GTPBUFAD(,@09)                                  0346
         LH    @09,GTPRCDLN(,@09)                                  0346
         BCTR  @09,0                                               0346
         L     @15,CURRCD                                          0346
         EX    @09,@SM00316                                        0346
*         END;                                                     0347
*     END;                          /* SHIFTING COMPLETE             */
@RC00338 DS    0H                                                  0348
@DE00293 TM    ADDSTOP,B'01000000'                                 0348
         BZ    @DL00293                                            0348
*   RETURN CODE(ADDRC);                                            0349
@RC00289 SLR   @15,@15                                             0349
         IC    @15,ADDRC                                           0349
         L     @14,@SA00006                                        0349
         LM    @00,@12,@SA00006+8                                  0349
         BR    @14                                                 0349
*   END GTAADD;                                                    0350
         EJECT
*                                                                  0351
*/********************************************************************/
*/*   THIS PROCEDURE IS CALLED BY GTAINIT AND GTAADD IN BOTH CASES   */
*/*   GETMAIN IS ISSUED FOR A ONE PAGE BLOCK                         */
*/*              IF CALLED BY GTAINIT THEN                           */
*/*                 - ADDRESS OF GETMAINED AREA                      */
*/*                  IS SET IN THE PARM PASSED                       */
*/*                 - NEXT PAGE POINTER IS SET TO ZERO               */
*/*              IF CALLED BY GTAADD                                 */
*/*                 - GTACMPRS IS CALLED                             */
*/*                   AND CMPRSW IS SET ON IF                        */
*/*                   GETMAIN FAILS                                  */
*/*                 - CURRENT AND NEW PAGE                           */
*/*                   CHAINING IS UPDATED                            */
*/*              - CNTINPAG IS SET TO ONE                            */
*/*              - FIRST RECORD IS SET TO END OF                     */
*/*                FILE RECORD                                       */
*/********************************************************************/
*                                                                  0351
*GTAGTPAG:                          /*                               */
*   PROC(FILEPAGE);                 /*                               */
GTAGTPAG STM   @14,@12,@SA00007                                    0351
         MVC   @PC00007(4),0(@01)                                  0351
*   DECLARE                         /*                       @Z67SP00*/
*     FILEPAGE CHAR(*);             /* CURRENT PAGE IS PASSED        */
*   DECLARE                         /*                       @Z67SP00*/
*     CURPGPTR PTR(31);             /* PARAMETER PASSED BY CALLER    */
*   DECLARE                         /*                       @Z67SP00*/
*     GETPAGRC FIXED(31);           /* SUBROUTINE RETURN CODE        */
*   DECLARE                         /*                       @Z67SP00*/
*     NEWPGPTR PTR(31) INIT(0);     /* POINTER TO GETMAINED BLOCK    */
*   RFY                                                            0356
*     ONEPAGE BASED(CURPGPTR);                                     0356
*                                                                  0356
*   /*****************************************************************/
*   /*                                                               */
*   /* GETMAIN NEW PAGE                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0357
*   GETPAGRC=GTPGOOD;               /* INIT TO GOOD RETURN CODE      */
         SLR   GETPAGRC,GETPAGRC                                   0357
*   CURPGPTR=ADDR(FILEPAGE);        /* POINT TO PAGE PASSED          */
         L     @09,@PC00007                                        0358
         ST    @09,CURPGPTR                                        0358
*   RFY                                                            0359
*     R2 RSTD;                      /*                               */
*   R2=PAGESIZE;                    /* SET SIZE FOR GETMAIN  @Z67SP00*/
         L     R2,PAGESIZE                                         0360
*   GEN(GETMAIN EC,LV=(R2),A=NEWPGPTR)/* ISSUE GETMAIN               */
*   REFS(R2,NEWPGPTR);              /* FOR ONE PAGE BLOCK            */
         GETMAIN EC,LV=(R2),A=NEWPGPTR
*   RFY                                                            0362
*     R2 UNRSTD;                    /*                               */
*   RFY                                                            0363
*     RTNCODE RSTD;                 /*                               */
*   IF RTNCODE^=GTPGOOD             /* IF UNSUCCESSFUL THEN SIGNAL   */
*     THEN                          /* OUT OF SPACE CONDITION        */
         LTR   RTNCODE,RTNCODE                                     0364
         BZ    @RF00364                                            0364
*     GETPAGRC=GTPSPACE;            /* OUT OF SPACE CONDITION        */
         LA    GETPAGRC,12                                         0365
*   RFY                                                            0366
*     RTNCODE UNRSTD;                                              0366
*                                                                  0366
@RF00364 DS    0H                                                  0367
*   /*****************************************************************/
*   /*                                                               */
*   /* IF GETMAIN OK CHAIN NEW PAGE TO PREVIOUS PAGE                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0367
*   IF GETPAGRC=GTPGOOD             /* IF GETMAIN SUCCESSFUL THEN    */
*     THEN                          /*                               */
         SLR   @09,@09                                             0367
         CR    GETPAGRC,@09                                        0367
         BNE   @RF00367                                            0367
*     DO;                           /*                       @Z67SP00*/
*       NEXTPAG=NEWPGPTR;           /* SET UP NEXT PAGE OF CURRENT 0369
*                                      PAGE TO NEW PAGE              */
         L     @02,NEWPGPTR                                        0369
         L     @15,CURPGPTR                                        0369
         ST    @02,NEXTPAG(,@15)                                   0369
*       NEWPGPTR->PREVPAG=CURPGPTR; /* SET UP PREVIOUS PAGE POINTER  */
         ST    @15,PREVPAG(,@02)                                   0370
*       NEWPGPTR->NEXTPAG=ZERO;     /* INIT TO NO NEXT PAGE          */
         ST    @09,NEXTPAG(,@02)                                   0371
*       CURPGPTR=NEWPGPTR;          /* PASS BACK PAGE ADDRESS        */
         ST    @02,CURPGPTR                                        0372
*       PAGDATA(ONE)=EOFRCD;        /* PLACE EOF RECORD ON PAGE      */
         MVC   PAGDATA(1,@02),EOFRCD                               0373
*       CNTINPAG=ONE;               /* COUNT OF RECORDS SET TO ONE   */
         MVC   CNTINPAG(2,@02),@CH00053                            0374
*       RNTLAST=CURPGPTR;           /* RESET LAST PAGE IN FILE       */
         ST    @02,RNTLAST(,RENTPTR)                               0375
*     END;                          /*                               */
*                                                                  0376
*   /*****************************************************************/
*   /*                                                               */
*   /* IF GM FOR NEXT PAGE FAILED TRY TO COMPRESS EXISTING PAGES     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0377
*   IF((GETPAGRC=GTPSPACE)&         /* IF NO MORE SPACE AND          */
*       (RNTFIRST^=ZERO))           /* NOT CALLED BY GTAINIT THEN    */
*     THEN                          /* DO                            */
@RF00367 CH    GETPAGRC,@CH00033                                   0377
         BNE   @RF00377                                            0377
         ICM   @09,15,RNTFIRST(RENTPTR)                            0377
         BZ    @RF00377                                            0377
*     DO;                           /*                       @Z67SP00*/
*       CALL GTACMPRS;              /* COMPRESS FILE                 */
         BAL   @14,GTACMPRS                                        0379
*       RFY                                                        0380
*         RTNCODE RSTD;             /*                               */
*       GETPAGRC=RTNCODE;           /* SAVE COMPRESS RETURN CODE     */
         LR    GETPAGRC,RTNCODE                                    0381
*       RFY                                                        0382
*         RTNCODE UNRSTD;                                          0382
*     END;                          /*                               */
*                                                                  0383
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ERROR IN GETMAIN ISSUE MSG IF REQUIRED             @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0384
*   IF GETPAGRC=GTPSPACE            /* IF GM ERR             @Z67SP00*/
*       &GTPNOSPM=OFF               /* AND MSG REQUESTED     @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
@RF00377 CH    GETPAGRC,@CH00033                                   0384
         BNE   @RF00384                                            0384
         L     @09,@PC00001                                        0384
         TM    GTPNOSPM(@09),B'10000000'                           0384
         BNZ   @RF00384                                            0384
*     DO;                           /*                       @Z67SP00*/
*       HMASMMGP=''B;               /* INIT PARM             @Z67SP00*/
         XC    HMASMMGP(16),HMASMMGP                               0386
*       MGPHLDS=ON;                 /* MSG TO LOG AND        @Z67SP00*/
*       MGPPRINT=ON;                /* PRINTER               @Z67SP00*/
         OI    MGPHLDS,B'10010000'                                 0388
*       MGPMGNO1=HMA202I;           /* UNABLE TO OBTAIN STORAGE FOR
*                                      WORK AREAS            @Z67SP00*/
         MVC   MGPMGNO1(2),@CH00056                                0389
*       MGPTYPE=MGPSEV;             /*                       @Z67SP00*/
         MVI   MGPTYPE,X'04'                                       0390
*       CALL HMASMMSG(HMASMMGP);    /* WRITE MSG             @Z67SP00*/
         L     @15,@CV00123                                        0391
         LA    @01,@AL00391                                        0391
         BALR  @14,@15                                             0391
*     END;                          /*                       @Z67SP00*/
*   RETURN CODE(GETPAGRC);          /* RETURN PASSING BACK RETURN  0393
*                                      CODE                          */
@RF00384 LR    @15,GETPAGRC                                        0393
         L     @14,@SA00007                                        0393
         LM    @00,@12,@SA00007+8                                  0393
         BR    @14                                                 0393
*   END GTAGTPAG;                   /* END OF GET PAGE ROUTINE       */
         EJECT
*                                                                  0395
*/********************************************************************/
*/*                                                                  */
*/*       PROCEDURE IS CALLED TO COMPRESS FILE WHEN UNABLE           */
*/*       TO GETMAIN SPACE.                                          */
*/*              COMPRESS OUTPUT                                     */
*/*                 - CMPRSW SET ON                                  */
*/*                 - RETURN CODE OF ZERO IF FILE HAD                */
*/*                   ROOM TO DO A COMPRESS                          */
*/*                 - RETURN OF GTPSPACE IF NO COMPRESS              */
*/*                   WAS DONE                                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0395
*GTACMPRS:                                                         0395
*   PROC;                           /*                               */
*                                                                  0395
GTACMPRS STM   @14,@12,12(@13)                                     0395
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCAL DECLARES                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0396
*   DECLARE                                                        0396
*     CMPRSRC FIXED(31);            /* SUBROUTINE RETURN CODE        */
*   DECLARE                                                        0397
*     TOPAGPTR PTR(31);             /* POINTER TO PAGE TO WHICH    0397
*                                      RECORDS WILL BE MOVED         */
*   DECLARE                                                        0398
*     TORCD PTR(31);                /* ADDRESS TO MOVE RECORD TO     */
*   DECLARE                                                        0399
*     TOCNT FIXED(15);              /* COUNT OF ' TO-RECORDS'        */
*   DECLARE                                                        0400
*     FMPAGPTR PTR(31);             /* POINTER TO PAGE FROM WHICH  0400
*                                      RECORDS WILL BE MOVED         */
*   DECLARE                                                        0401
*     FMRCD PTR(31);                /* ADDRESS TO MOVE RECORD FROM   */
*   DECLARE                                                        0402
*     FROMCNT FIXED(15);            /* COUNT OF 'FROM-RECORD' TO MOVE
*                                      IN CURRENT 'FROM-PAGE'        */
*   DECLARE                                                        0403
*     1 CMPRSSW1 BIT(8),            /* SWITCHES USED BY GTACMPRS     */
*       3 TORECFND BIT(1),          /* TO RECORD FOUND               */
*       3 FMRECFND BIT(1),          /* FROM RECORD FOUND             */
*       3 COMPSTOP BIT(1);          /* COMPRESS COMPLETE SWITCH      */
*                                                                  0404
*   /*****************************************************************/
*   /*                                                               */
*   /* START OF CODE                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0404
*   CMPRSRC=GTPGOOD;                /* INIT RETURN CODE              */
         SLR   @09,@09                                             0404
         ST    @09,CMPRSRC                                         0404
*   CMPRSW=OFF;                     /* INIT COMPRESS DONE SWITCH     */
         NI    CMPRSW,B'11011111'                                  0405
*   CMPRSSW1='0'B;                  /* INIT INTERNAL SWITCHES        */
*                                                                  0406
         MVI   CMPRSSW1,B'00000000'                                0406
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SEGMENT STARTS WITH THE FIRST PAGE IN THE FILE AND       */
*   /* SEARCHES FOR THE FIRST NON-FULL PAGE                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0407
*   RFY                                                            0407
*     ONEPAGE BASED(TOPAGPTR);      /*                               */
*   TOPAGPTR=RNTFIRST;              /* START WITH FIRST PAGE OF FILE */
         L     TOPAGPTR,RNTFIRST(,RENTPTR)                         0408
*   DO WHILE(TORECFND=OFF&NEXTPAG^=ZERO);/* DO WHILE A 'TO-RECORD' 0409
*                                      PAGE HAS NOT BEEN FOUND AND 0409
*                                      ALL PAGES HAVEN'T BEEN SCANNED*/
         B     @DE00409                                            0409
@DL00409 DS    0H                                                  0410
*     IF CNTINPAG<MAXENTCT          /* IF PAGE NOT FULL              */
*       THEN                                                       0410
         LH    @09,CNTINPAG(,TOPAGPTR)                             0410
         CH    @09,MAXENTCT                                        0410
         BNL   @RF00410                                            0410
*       DO;                         /* THEN 'TO PAGE' FOUND          */
*         TORECFND=ON;              /* SIGNAL END OF SEARCH          */
         OI    TORECFND,B'10000000'                                0412
*         TORCD=ADDR(PAGDATA)+      /* POINT TO START                */
*             ((CNTINPAG)*GTPRCDLN);/* OF 'TO-RECORDS'               */
         LA    @02,PAGDATA(,TOPAGPTR)                              0413
         L     @15,@PC00001                                        0413
         LR    @14,@09                                             0413
         MH    @14,GTPRCDLN(,@15)                                  0413
         ALR   @02,@14                                             0413
         ST    @02,TORCD                                           0413
*         TOCNT=CNTINPAG;           /* INIT 'TO-PAGE' RECORD COUNT   */
         STH   @09,TOCNT                                           0414
*       END;                        /*                               */
*     ELSE                                                         0416
*       TOPAGPTR=NEXTPAG;           /* CONTINUE 'TO-PAGE' SEARCH     */
         B     @RC00410                                            0416
@RF00410 L     TOPAGPTR,NEXTPAG(,TOPAGPTR)                         0416
*   END;                            /* END OF TO-PAGE SEARCH         */
*                                                                  0417
@RC00410 DS    0H                                                  0417
@DE00409 TM    TORECFND,B'10000000'                                0417
         BNZ   @DC00409                                            0417
         ICM   @09,15,NEXTPAG(TOPAGPTR)                            0417
         BNZ   @DL00409                                            0417
@DC00409 DS    0H                                                  0418
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A NON-FULL PAGE WAS FOUND IN THE ABOVE SEGMENT THEN THE    */
*   /* COMPRESS CAN CONTINUE                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0418
*   IF TORECFND=ON                  /* IF NON FULL PAGE FOUND        */
*     THEN                                                         0418
         TM    TORECFND,B'10000000'                                0418
         BNO   @RF00418                                            0418
*     CMPRSW=ON;                    /* THEN SIGNAL COMPRESS DONE     */
         OI    CMPRSW,B'00100000'                                  0419
*   ELSE                                                           0420
*     DO;                           /* ELSE DO                       */
         B     @RC00418                                            0420
@RF00418 DS    0H                                                  0421
*       TORCD=ADDR(PAGDATA)+((CNTINPAG-1)*GTPRCDLN);/* OVERLAY       */
         LA    @09,PAGDATA(,TOPAGPTR)                              0421
         LH    @01,CNTINPAG(,TOPAGPTR)                             0421
         BCTR  @01,0                                               0421
         L     @02,@PC00001                                        0421
         MH    @01,GTPRCDLN(,@02)                                  0421
         ALR   @09,@01                                             0421
         ST    @09,TORCD                                           0421
*       TORCD->RCDEOF=EOFRCD;       /* WITH END OF FILE INDICATOR    */
         MVC   RCDEOF(1,@09),EOFRCD                                0422
*       CMPRSRC=GTPSPACE;           /* SIGNAL NO SPACE FOR COMPRESS  */
         MVC   CMPRSRC(4),@CF00033                                 0423
*     END;                                                         0424
*                                                                  0424
*   /*****************************************************************/
*   /*                                                               */
*   /* IF A NON-FULL PAGE WAS FOUND THEN SEARCH FOR FIRST PAGE AFTER */
*   /* IT CONTAINING RECORDS WHICH CAN BE MOVED TO NON-FULL PAGE     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0425
*   RFY                                                            0425
*     ONEPAGE BASED(FMPAGPTR);      /*                               */
@RC00418 DS    0H                                                  0426
*   IF CMPRSRC=GTPGOOD              /* IF NON-FULL PAGE FOUND THEN   */
*     THEN                                                         0426
         ICM   @09,15,CMPRSRC                                      0426
         BNZ   @RF00426                                            0426
*     DO;                           /* START SEARCH FOR NEXT RECORD  */
*       FMPAGPTR=                   /* START WITH NEXT PAGE          */
*           TOPAGPTR->NEXTPAG;                                     0428
         L     @09,NEXTPAG(,TOPAGPTR)                              0428
         ST    @09,FMPAGPTR                                        0428
*       FMRCD=ADDR(PAGDATA);        /* START W/FIRST RECORD          */
         LA    @02,PAGDATA(,@09)                                   0429
         ST    @02,FMRCD                                           0429
*       FROMCNT=CNTINPAG;           /* DETERMINE # OF 'FROM- RECORDS
*                                      IN CURRENT 'FROM-PAGE'        */
         MVC   FROMCNT(2),CNTINPAG(@09)                            0430
*     END;                                                         0431
*                                                                  0431
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SEGMENT OF CODE IMPLEMENTS THE COMPRESS OF THE FILE      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0432
*   IF CMPRSRC=GTPGOOD              /* IF COMPRESS CAN CONTINUE      */
*     THEN                                                         0432
@RF00426 ICM   @09,15,CMPRSRC                                      0432
         BNZ   @RF00432                                            0432
*     DO WHILE(COMPSTOP=OFF);       /* THEN START ACTUAL COMPRESS    */
         B     @DE00433                                            0433
@DL00433 DS    0H                                                  0434
*       RFY                                                        0434
*         ONEPAGE BASED(TOPAGPTR);  /*                               */
*       IF TOCNT=MAXENTCT           /* IF 'TO-PAGE FULL              */
*         THEN                                                     0435
         LH    @09,TOCNT                                           0435
         CH    @09,MAXENTCT                                        0435
         BNE   @RF00435                                            0435
*         DO;                       /* THEN                          */
*           CNTINPAG=TOCNT;         /* SET UP PAGE RECORD COUNT      */
         STH   @09,CNTINPAG(,TOPAGPTR)                             0437
*           TOPAGPTR=NEXTPAG;       /* GO TO NEXT PAGE IN CHAIN      */
         L     TOPAGPTR,NEXTPAG(,TOPAGPTR)                         0438
*           TORCD=ADDR(PAGDATA);    /* POINT TO FIRST RECORD         */
         LA    @09,PAGDATA(,TOPAGPTR)                              0439
         ST    @09,TORCD                                           0439
*           TOCNT=ZERO;             /* RE-INIT 'TO-RECORD' COUNT     */
         SLR   @09,@09                                             0440
         STH   @09,TOCNT                                           0440
*         END;                      /*                               */
*       RFY                                                        0442
*         ONEPAGE BASED(FMPAGPTR);  /*                               */
@RF00435 DS    0H                                                  0443
*       IF FROMCNT=ZERO             /* IF ALL FROM-RECORDS HAVE BEEN
*                                      MOVED THEN FIND NEXT        0443
*                                      'FROM-PAGE'                   */
*         THEN                                                     0443
         ICM   @09,3,FROMCNT                                       0443
         BNZ   @RF00443                                            0443
*         DO WHILE(FROMCNT=ZERO&    /* WITH A RECORD COUNT           */
*               NEXTPAG^=ZERO);     /* GREATER THAN ZERO             */
         B     @DE00444                                            0444
@DL00444 DS    0H                                                  0445
*           FMPAGPTR=NEXTPAG;       /* WITHIN FILE                   */
         L     @09,FMPAGPTR                                        0445
         L     @09,NEXTPAG(,@09)                                   0445
         ST    @09,FMPAGPTR                                        0445
*           FMRCD=ADDR(PAGDATA);    /* INIT FIRST 'FROM-PAGE'        */
         LA    @02,PAGDATA(,@09)                                   0446
         ST    @02,FMRCD                                           0446
*           FROMCNT=CNTINPAG;       /* TO BE MOVE AND TOTAL          */
         MVC   FROMCNT(2),CNTINPAG(@09)                            0447
*         END;                      /* 'FROM-RECORDS' ON PAGE        */
@DE00444 SLR   @09,@09                                             0448
         CH    @09,FROMCNT                                         0448
         BNE   @DC00444                                            0448
         L     @02,FMPAGPTR                                        0448
         C     @09,NEXTPAG(,@02)                                   0448
         BNE   @DL00444                                            0448
@DC00444 DS    0H                                                  0449
*       IF(FMPAGPTR=RNTLAST&        /* IF MOVING LAST RECORD ON LAST */
*           FROMCNT=ZERO)           /* RECORD THEN ALL DONE          */
*         THEN                                                     0449
@RF00443 CLC   FMPAGPTR(4),RNTLAST(RENTPTR)                        0449
         BNE   @RF00449                                            0449
         ICM   @09,3,FROMCNT                                       0449
         BNZ   @RF00449                                            0449
*         DO;                       /* THEN DO                       */
*           TORCD->RCDEOF=EOFRCD;   /* WRITE EOF INTO FILE           */
         L     @09,TORCD                                           0451
         MVC   RCDEOF(1,@09),EOFRCD                                0451
*           TOPAGPTR->CNTINPAG=TOCNT+ONE;/* UP REC. COUNT            */
         LA    @09,1                                               0452
         AH    @09,TOCNT                                           0452
         STH   @09,CNTINPAG(,TOPAGPTR)                             0452
*           COMPSTOP=ON;            /* SIGNAL COMPRESS COMPLETE      */
         OI    COMPSTOP,B'00100000'                                0453
*         END;                      /* END OF EOF PROCESSING         */
*       ELSE                                                       0455
*         DO;                       /* CONTINUE COMPRESS             */
         B     @RC00449                                            0455
@RF00449 DS    0H                                                  0456
*           TORCD->RECORD(1:GTPRCDLN)=/* MOVE RECORD                 */
*               FMRCD->RECORD(1:GTPRCDLN);/*                         */
         L     @09,TORCD                                           0456
         L     @02,@PC00001                                        0456
         LH    @02,GTPRCDLN(,@02)                                  0456
         LR    @15,@02                                             0456
         BCTR  @15,0                                               0456
         L     @14,FMRCD                                           0456
         EX    @15,@SM00310                                        0456
*           TORCD=TORCD+GTPRCDLN;   /* UPDATE TO RECORD PTR          */
         ALR   @09,@02                                             0457
         ST    @09,TORCD                                           0457
*           FMRCD=FMRCD+GTPRCDLN;   /* UPDATE FROM RECORD PTR        */
         ALR   @14,@02                                             0458
         ST    @14,FMRCD                                           0458
*           TOCNT=TOCNT+ONE;        /* UP COUNT OF TO PAGE RECS.     */
         LH    @09,TOCNT                                           0459
         LA    @09,1(,@09)                                         0459
         STH   @09,TOCNT                                           0459
*           FROMCNT=FROMCNT-ONE;    /* DECREMENT COUNT OF RECS TO  0460
*                                      MOVE                          */
         LH    @09,FROMCNT                                         0460
         BCTR  @09,0                                               0460
         STH   @09,FROMCNT                                         0460
*         END;                      /*                               */
*     END;                                                         0462
@RC00449 DS    0H                                                  0462
@DE00433 TM    COMPSTOP,B'00100000'                                0462
         BZ    @DL00433                                            0462
*   RETURN CODE(CMPRSRC);           /*                               */
@RF00432 L     @15,CMPRSRC                                         0463
         L     @14,12(,@13)                                        0463
         LM    @00,@12,20(@13)                                     0463
         BR    @14                                                 0463
*   END GTACMPRS;                   /*                               */
         EJECT
*                                                                  0465
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE IS CALLED BY THE MAIN LINE OPEN FILE FOR GETN  */
*   /* AND GETP PROCESSING                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0465
*GTAOPEN:                                                          0465
*   PROC;                           /*                               */
GTAOPEN  STM   @14,@12,12(@13)                                     0465
*   DECLARE                                                        0466
*     OPENRC FIXED(8);              /* INTERNAL RETURN CODE          */
*   RFY                                                            0467
*     ONEPAGE BASED(CURPAG);        /*                               */
*   OPENRC=GTPGOOD;                 /* INIT RETURN CODE              */
         SLR   OPENRC,OPENRC                                       0468
*   IF GTPFUNCT=GTPOPENN            /* IF OPEN FILE FOR GETN         */
*     THEN                                                         0469
         L     @09,@PC00001                                        0469
         CLI   GTPFUNCT(@09),1                                     0469
         BNE   @RF00469                                            0469
*     DO;                           /* THEN                          */
*       RNTCPAGN=RNTFIRST;          /* SET CURRENT GETN PAGE TO FIRST
*                                      PAGE                          */
         L     @02,RNTFIRST(,RENTPTR)                              0471
         ST    @02,RNTCPAGN(,RENTPTR)                              0471
*       RFY                                                        0472
*         ONEPAGE BASED(RNTCPAGN);  /*                               */
*       RNTCRCDN=ADDR(PAGDATA);     /* SET CURRENT RECORD PTR TO   0473
*                                      FIRST RCD             @Z67SP00*/
         LA    @02,PAGDATA(,@02)                                   0473
         ST    @02,RNTCRCDN(,RENTPTR)                              0473
*       RNTCPOSN=ONE;               /* SET CURRENT POSITION  @Z67SP00*/
         MVC   RNTCPOSN(2,RENTPTR),@CH00053                        0474
*       GTPRESTR=RNTSTATN;          /* RETURN CURRENT RECORD POSITION
*                                      TO USER                       */
         MVC   GTPRESTR(10,@09),RNTSTATN(RENTPTR)                  0475
*     END;                          /*                               */
*   ELSE                                                           0477
*     DO;                           /* FOR GETP OPN                  */
         B     @RC00469                                            0477
@RF00469 DS    0H                                                  0478
*       RNTCPAGP=RNTLAST;           /* SET CURRENT GETP PAGE TO LAST
*                                      PAGE                          */
         L     @09,RNTLAST(,RENTPTR)                               0478
         ST    @09,RNTCPAGP(,RENTPTR)                              0478
*       RFY                                                        0479
*         ONEPAGE BASED(RNTCPAGP);  /*                               */
*       RNTCRCDP=ADDR(PAGDATA)+     /* SET CURRENT RECORD TO LAST    */
*           ((CNTINPAG-1)*GTPRCDLN);/* RECORD-EOF RECORD             */
         LA    @02,PAGDATA(,@09)                                   0480
         LH    @09,CNTINPAG(,@09)                                  0480
         LR    @01,@09                                             0480
         BCTR  @01,0                                               0480
         L     @15,@PC00001                                        0480
         MH    @01,GTPRCDLN(,@15)                                  0480
         ALR   @02,@01                                             0480
         ST    @02,RNTCRCDP(,RENTPTR)                              0480
*       RNTCPOSP=CNTINPAG;          /* CURRENT POSITION IS LAST    0481
*                                      RECORD POSITION               */
         STH   @09,RNTCPOSP(,RENTPTR)                              0481
*       GTPRESTR=RNTSTATP;          /* RETURN CURRENT FILE POSITION
*                                      TO USER                       */
         MVC   GTPRESTR(10,@15),RNTSTATP(RENTPTR)                  0482
*     END;                          /*                               */
*   RETURN CODE(OPENRC);            /*                               */
@RC00469 LR    @15,OPENRC                                          0484
         L     @14,12(,@13)                                        0484
         LM    @00,@12,20(@13)                                     0484
         BR    @14                                                 0484
*   END GTAOPEN;                    /*                               */
         EJECT
*                                                                  0486
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROCEDURE WILL RETURN THE RECORD PREVIOUS TO THE CURRENT */
*   /* GETP RECORD. THE CURRENT RECORD POSITION WITHIN THE FILE IS   */
*   /* DEFINED BY RNTSTATP IN THE REENTRANT WORK AREA. THIS PROCEDURE*/
*   /* WILL MODIFY RNTSTATP IF A RECORD IS FOUND. IF THE RECORD IS   */
*   /* NOT FOUND AN END-OF-FILE CONDITION WILL BE RETURNED TO CALLER */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0486
*GTAGETP:                                                          0486
*   PROC;                                                          0486
GTAGETP  STM   @14,@12,12(@13)                                     0486
*   DECLARE                                                        0487
*     GETPRC FIXED(8);              /* INTERNAL RETURN CODE          */
*   RFY                                                            0488
*     ONEPAGE BASED(CURPAG);        /* ADDRESS CURRENT GETP PAGE     */
*   GETPRC=GTPGOOD;                 /* INIT RETURN CODE              */
         SLR   GETPRC,GETPRC                                       0489
*   CURSTAT=RNTSTATP;               /* GET CURRENT POSITION OF GETN
*                                      PROCESSING                    */
         MVC   CURSTAT(10),RNTSTATP(RENTPTR)                       0490
*   IF RCDEOF=EOFRCD                /* IF AT END OF FILE RCD @Z67SP00*/
*       ×CURPOS<ONE                 /* OR START OF PAGE      @Z67SP00*/
*     THEN                          /*                       @Z67SP00*/
         L     @09,CURRCD                                          0491
         CLC   RCDEOF(1,@09),EOFRCD                                0491
         BE    @RT00491                                            0491
         ICM   @09,3,CURPOS                                        0491
         BP    @RF00491                                            0491
@RT00491 DS    0H                                                  0492
*     DO;                           /*                       @Z67SP00*/
*       CURRCD=CURRCD-GTPRCDLN;     /* BACK UP TO PREV RCD   @Z67SP00*/
         L     @09,@PC00001                                        0493
         L     @02,CURRCD                                          0493
         SH    @02,GTPRCDLN(,@09)                                  0493
         ST    @02,CURRCD                                          0493
*       CURPOS=CURPOS-ONE;          /* AND PREV POSITION     @Z67SP00*/
*                                                                  0494
         LH    @09,CURPOS                                          0494
         BCTR  @09,0                                               0494
         STH   @09,CURPOS                                          0494
*       /*************************************************************/
*       /*                                                           */
*       /* NOW BACK UP TO NEXT PREV VALID RECORD             @Z67SP00*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0495
*       IF CURPOS<ONE               /* IF DONE RCD ON CUR    @Z67SP00*/
*         THEN                      /* PAGE                          */
         LTR   @09,@09                                             0495
         BP    @RF00495                                            0495
*         DO;                       /* THEN FIND PREVIOUS PAGE WITH  */
*           IF PREVPAG^=ZERO        /* RECORDS                       */
*             THEN                  /*                               */
         L     @09,CURPAG                                          0497
         L     @09,PREVPAG(,@09)                                   0497
         LTR   @09,@09                                             0497
         BZ    @RF00497                                            0497
*             CURPAG=PREVPAG;       /*                               */
         ST    @09,CURPAG                                          0498
*           ELSE                    /*                               */
*             GETPRC=GTPEOF;        /* IF FIRST PAGE THEN SIGNAL END
*                                      OF FILE CONDITION             */
         B     @RC00497                                            0499
@RF00497 LA    GETPRC,4                                            0499
*           DO WHILE(CNTINPAG=ZERO  /* CONTINUE SEARCH IF NO RECORDS */
*                 &PREVPAG^=ZERO    /* NOT END OF FILE AND           */
*                 &GETPRC=GTPGOOD); /* EOF NOT ALREADY SIGNALED      */
@RC00497 B     @DE00500                                            0500
@DL00500 DS    0H                                                  0501
*             CURPAG=PREVPAG;       /* KEEP TRYING TO FIND RECORDS   */
         L     @09,CURPAG                                          0501
         L     @09,PREVPAG(,@09)                                   0501
         ST    @09,CURPAG                                          0501
*           END;                                                   0502
@DE00500 SLR   @09,@09                                             0502
         L     @02,CURPAG                                          0502
         CH    @09,CNTINPAG(,@02)                                  0502
         BNE   @DC00500                                            0502
         C     @09,PREVPAG(,@02)                                   0502
         BE    @DC00500                                            0502
         CR    GETPRC,@09                                          0502
         BE    @DL00500                                            0502
@DC00500 DS    0H                                                  0503
*           IF CNTINPAG=ZERO        /* IF NO PAGES WITH RECORDS FOUND*/
*             THEN                                                 0503
         L     @09,CURPAG                                          0503
         ICM   @02,3,CNTINPAG(@09)                                 0503
         BNZ   @RF00503                                            0503
*             GETPRC=GTPEOF;        /* THEN SIGNAL END OF FILE       */
         LA    GETPRC,4                                            0504
*           ELSE                                                   0505
*             DO;                   /* PAGE WITH RECORDS FOUND       */
         B     @RC00503                                            0505
@RF00503 DS    0H                                                  0506
*               CURRCD=ADDR(PAGDATA)+((CNTINPAG-1)*GTPRCDLN);      0506
         L     @09,CURPAG                                          0506
         LA    @02,PAGDATA(,@09)                                   0506
         LH    @09,CNTINPAG(,@09)                                  0506
         LR    @01,@09                                             0506
         BCTR  @01,0                                               0506
         L     @15,@PC00001                                        0506
         MH    @01,GTPRCDLN(,@15)                                  0506
         ALR   @02,@01                                             0506
         ST    @02,CURRCD                                          0506
*               CURPOS=CNTINPAG;                                   0507
         STH   @09,CURPOS                                          0507
*             END;                                                 0508
*         END;                                                     0509
@RC00503 DS    0H                                                  0510
*     END;                          /*                       @Z67SP00*/
@RF00495 DS    0H                                                  0511
*   IF GETPRC=GTPGOOD               /* IF A RECORD WAS FOUND         */
*     THEN                                                         0511
@RF00491 CH    GETPRC,@CH00083                                     0511
         BNE   @RF00511                                            0511
*     USRRCD(1:GTPRCDLN)=RECORD(1:GTPRCDLN);/* MOVE RCD TO USER    0512
*                                      BUFFER                @Z67SP00*/
         L     @09,@PC00001                                        0512
         L     @02,GTPBUFAD(,@09)                                  0512
         LH    @09,GTPRCDLN(,@09)                                  0512
         BCTR  @09,0                                               0512
         L     @01,CURRCD                                          0512
         EX    @09,@SM00296                                        0512
*   GTPRESTR=CURSTAT;               /* RETURN CURRENT RECORD POSITION
*                                      TO USER                       */
@RF00511 L     @09,@PC00001                                        0513
         MVC   GTPRESTR(10,@09),CURSTAT                            0513
*   CURPOS=CURPOS-ONE;              /* NOW BACK UP PTRS FOR  @Z67SP00*/
         LH    @02,CURPOS                                          0514
         BCTR  @02,0                                               0514
         STH   @02,CURPOS                                          0514
*   CURRCD=CURRCD-GTPRCDLN;         /* NEXT GETP REQUEST     @Z67SP00*/
         L     @02,CURRCD                                          0515
         SH    @02,GTPRCDLN(,@09)                                  0515
         ST    @02,CURRCD                                          0515
*   RNTSTATP=CURSTAT;               /* UPDATE CURRENT STATUS OF GETP
*                                      PROCESSING IN REENTRANT AREA  */
         MVC   RNTSTATP(10,RENTPTR),CURSTAT                        0516
*   RETURN CODE(GETPRC);                                           0517
         LR    @15,GETPRC                                          0517
         L     @14,12(,@13)                                        0517
         LM    @00,@12,20(@13)                                     0517
         BR    @14                                                 0517
*   END GTAGETP;                                                   0518
         EJECT
*                                                                  0519
*/********************************************************************/
*/*                                                                  */
*/*      THIS SEGMENT OF CODE WILL RETREIVE THE NEXT GETN RECORD     */
*/*      IN THE FILE. THE CURRENT RECORD POSITION IS CONTAINED IN    */
*/*      THE REENTRANT WORK AREA. THE OUTPUT FROM THIS SEGMENT IS    */
*/*      AS FOLLOWS:                                                 */
*/*                1. IF NEXT RECORD IS FOUND THEN                   */
*/*                     - ZERO RETURN CODE IS SET                    */
*/*                     - CURRENT GETN RECORD POSITION               */
*/*                       IS UPDATED IN REENTRANT WORK AREA          */
*/*                     - CURRENT GETN RECORD POSITION IS            */
*/*                       PASSED BACK TO CALLER                      */
*/*                2. IF NEXT RECORD END OF FILE THE END OF          */
*/*                   FILE RETURN CODE IS SET                        */
*/*                                                                  */
*/********************************************************************/
*                                                                  0519
*GTAGETN:                                                          0519
*   PROC;                                                          0519
GTAGETN  STM   @14,@12,12(@13)                                     0519
*   DECLARE                                                        0520
*     GETNRC FIXED(8);              /* INTERNAL RETURN CODE          */
*   RFY                                                            0521
*     ONEPAGE BASED(CURPAG);        /* USED TO ADDRESS CURRENT GETN
*                                      PAGE                          */
*   GETNRC=GTPGOOD;                 /* INIT TO SUCCESSFUL RETURN CODE*/
         SLR   GETNRC,GETNRC                                       0522
*   CURSTAT=RNTSTATN;               /* SET UP CURRENT GETN RECORD  0523
*                                      POSITION                      */
         MVC   CURSTAT(10),RNTSTATN(RENTPTR)                       0523
*   IF RCDEOF=EOFRCD                /* IF RECORD RETREIVED IS EOF    */
*       ×((CURPAG=RNTLAST)          /* IF ON LAST PAGE OF FILE       */
*       &(CURPOS>CNTINPAG))         /* AND PAST END OF FILE          */
*     THEN                                                         0524
         L     @09,CURRCD                                          0524
         CLC   RCDEOF(1,@09),EOFRCD                                0524
         BE    @RT00524                                            0524
         L     @09,CURPAG                                          0524
         C     @09,RNTLAST(,RENTPTR)                               0524
         BNE   @RF00524                                            0524
         LH    @02,CURPOS                                          0524
         CH    @02,CNTINPAG(,@09)                                  0524
         BNH   @RF00524                                            0524
@RT00524 DS    0H                                                  0525
*     GETNRC=GTPEOF;                /* THEN SET EOF RETURN CODE      */
         LA    GETNRC,4                                            0525
*   ELSE                            /* IF NOT THEN EOF INDICATOR     */
*     USRRCD(1:GTPRCDLN)=           /* MOVE RECORD IN FILE TO USER   */
*         RECORD(1:GTPRCDLN);       /* BUFFER                        */
         B     @RC00524                                            0526
@RF00524 L     @09,@PC00001                                        0526
         L     @02,GTPBUFAD(,@09)                                  0526
         LH    @09,GTPRCDLN(,@09)                                  0526
         BCTR  @09,0                                               0526
         L     @01,CURRCD                                          0526
         EX    @09,@SM00296                                        0526
*   GTPRESTR=CURSTAT;               /* PASS CURRENT GETN RECORD    0527
*                                      POSITION TO CALLER            */
*                                                                  0527
@RC00524 L     @09,@PC00001                                        0527
         MVC   GTPRESTR(10,@09),CURSTAT                            0527
*   /*****************************************************************/
*   /*                                                               */
*   /* NOW GET TO NEXT RECORD FOR NEXT GETN REQUEST          @Z67SP00*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0528
*   GETNSTOP=OFF;                   /* INIT TO CONTINUE GETN         */
         NI    GETNSTOP,B'11101111'                                0528
*   IF CURPOS>=CNTINPAG THEN        /* IF END OF CURRENT PAGE THEN   */
         LH    @09,CURPOS                                          0529
         L     @02,CURPAG                                          0529
         CH    @09,CNTINPAG(,@02)                                  0529
         BL    @RF00529                                            0529
*     DO WHILE(GETNSTOP=OFF&NEXTPAG^=ZERO);/* FIND NEXT PAGE       0530
*                                      CONTAINING RECORDS            */
         B     @DE00530                                            0530
@DL00530 DS    0H                                                  0531
*       CURPAG=NEXTPAG;             /* TRY NEXT PAGE IN FILE         */
         L     @09,CURPAG                                          0531
         L     @09,NEXTPAG(,@09)                                   0531
         ST    @09,CURPAG                                          0531
*       IF CNTINPAG>ZERO            /* IF NON-EMPTY PAGE             */
*         THEN                                                     0532
         ICM   @02,3,CNTINPAG(@09)                                 0532
         BNP   @RF00532                                            0532
*         DO;                                                      0533
*           GETNSTOP=ON;            /* FOUND PAGE WITH RECORDS       */
         OI    GETNSTOP,B'00010000'                                0534
*           CURRCD=ADDR(PAGDATA);   /* FIRST RECORD IN PAGE          */
         LA    @09,PAGDATA(,@09)                                   0535
         ST    @09,CURRCD                                          0535
*           CURPOS=ONE;             /* SET POSIT. OF REC WITHIN PAGE */
         MVC   CURPOS(2),@CH00053                                  0536
*         END;                                                     0537
*     END;                                                         0538
@RF00532 DS    0H                                                  0538
@DE00530 TM    GETNSTOP,B'00010000'                                0538
         BNZ   @DC00530                                            0538
         L     @09,CURPAG                                          0538
         ICM   @02,15,NEXTPAG(@09)                                 0538
         BNZ   @DL00530                                            0538
@DC00530 DS    0H                                                  0539
*   ELSE                                                           0539
*     DO;                           /* IF OTHER RECORDS ON PAGE      */
         B     @RC00529                                            0539
@RF00529 DS    0H                                                  0540
*       CURRCD=CURRCD+GTPRCDLN;     /* SET CURRENT RECORD TO NEXT ONE*/
         L     @09,@PC00001                                        0540
         LH    @09,GTPRCDLN(,@09)                                  0540
         AL    @09,CURRCD                                          0540
         ST    @09,CURRCD                                          0540
*       CURPOS=CURPOS+ONE;          /* INCREMENT POSITION OF CURRENT
*                                      RECORD                        */
         LH    @09,CURPOS                                          0541
         LA    @09,1(,@09)                                         0541
         STH   @09,CURPOS                                          0541
*     END;                                                         0542
*   RNTSTATN=CURSTAT;               /* SAVE NEXT RCD DATA    @Z67SP00*/
@RC00529 MVC   RNTSTATN(10,RENTPTR),CURSTAT                        0543
*   RETURN CODE(GETNRC);                                           0544
         LR    @15,GETNRC                                          0544
         L     @14,12(,@13)                                        0544
         LM    @00,@12,20(@13)                                     0544
         BR    @14                                                 0544
*   END GTAGETN;                                                   0545
         EJECT
*                                                                  0546
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO UPDATE THE GETN OR GETP CURRENT     */
*   /* RECORD POSITION IN THE REENTRANT WORK AREA WITH RECORD        */
*   /* POSITION PASSED BY THE CALLER                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0546
*GTASTRT:                                                          0546
*   PROC;                                                          0546
GTASTRT  STM   @14,@12,12(@13)                                     0546
*   DECLARE                                                        0547
*     STRTRC FIXED(8);              /* INTERNAL RETURN CODE          */
*   STRTRC=GTPGOOD;                 /* INIT TO SUCCESSFUL COMPLETION */
         SLR   STRTRC,STRTRC                                       0548
*   IF GTPFUNCT=GTPSTRTN            /* IF GETN AREA AFFECTED         */
*     THEN                                                         0549
         L     @09,@PC00001                                        0549
         CLI   GTPFUNCT(@09),6                                     0549
         BNE   @RF00549                                            0549
*     RNTSTATN=GTPRESTR;            /* THEN UPDATE GETN AREA         */
         MVC   RNTSTATN(10,RENTPTR),GTPRESTR(@09)                  0550
*   ELSE                                                           0551
*     RNTSTATP=GTPRESTR;            /* OTHERWISE UPDATE GETP AREA    */
         B     @RC00549                                            0551
@RF00549 L     @09,@PC00001                                        0551
         MVC   RNTSTATP(10,RENTPTR),GTPRESTR(@09)                  0551
*   RETURN CODE(STRTRC);                                           0552
@RC00549 LR    @15,STRTRC                                          0552
         L     @14,12(,@13)                                        0552
         LM    @00,@12,20(@13)                                     0552
         BR    @14                                                 0552
*   END GTASTRT;                                                   0553
         EJECT
*                                                                  0554
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE IS CALLED TO FREE IN STORAGE FILE. THE FILE AND  */
*   /* IT'S ASSOCIATED REENTRANT WORK AREA WILL BE FREED             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0554
*GTAFREE:                                                          0554
*   PROC;                                                          0554
GTAFREE  STM   @14,@12,@SA00013                                    0554
*   DECLARE                                                        0555
*     FREERC FIXED(8);              /* INTERNAL RETURN CODE          */
*   DECLARE                                                        0556
*     SVNXTPAG PTR(31);             /* SAVE PTR TO NEXT PAGE IN FILE */
*   RFY                                                            0557
*     ONEPAGE BASED(CURPAG);        /* USED TO ADDRESS PAGE IN FILE  */
*   FREERC=GTPGOOD;                 /* INIT TO SUCCESSFUL COMPLETION */
         MVI   FREERC,X'00'                                        0558
*   IF GTPWKAD^=ZERO                /* IF A FILE EXISTS      @ZD00003*/
*     THEN                          /* THEN FREE IT          @ZD00003*/
         L     @09,@PC00001                                        0559
         ICM   @15,15,GTPWKAD(@09)                                 0559
         BZ    @RF00559                                            0559
*     DO;                           /*                       @Z67SP00*/
*       CURPAG=RNTFIRST;            /* START WITH FIRST PAGE IN FILE */
         L     @09,RNTFIRST(,RENTPTR)                              0561
         ST    @09,CURPAG                                          0561
*       SVNXTPAG=NEXTPAG;           /* SAVE POINTER TO NEXT PAGE     */
         L     SVNXTPAG,NEXTPAG(,@09)                              0562
*       RFY                                                        0563
*         R2 RSTD;                  /* REG 2 CONTAINS LENGTH TO FREE */
*       R2=PAGESIZE;                /* SET PAGE SIZE         @Z67SP00*/
*                                                                  0564
         L     R2,PAGESIZE                                         0564
*       /*************************************************************/
*       /*                                                           */
*       /* FREE ALL PAGES IN IN STORAGE FILE                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0565
*       DO WHILE(CURPAG^=ZERO);     /* FREE PAGES TILL LAST PAGE     */
         B     @DE00565                                            0565
@DL00565 DS    0H                                                  0566
*         GEN(FREEMAIN E,LV=(R2),A=CURPAG)                         0566
*         REFS(R2,CURPAG);                                         0566
         FREEMAIN E,LV=(R2),A=CURPAG
*         CURPAG=SVNXTPAG;          /* FREE NEXT PAGE                */
         ST    SVNXTPAG,CURPAG                                     0567
*         SVNXTPAG=NEXTPAG;         /* SAVE FOLLOWING PAGE PTR       */
         L     @09,CURPAG                                          0568
         L     SVNXTPAG,NEXTPAG(,@09)                              0568
*       END;                        /* ALL FILE PAGES FREED          */
*                                                                  0569
@DE00565 ICM   @09,15,CURPAG                                       0569
         BNZ   @DL00565                                            0569
*       /*************************************************************/
*       /*                                                           */
*       /* FREE REENTRANT WORK AREA                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0570
*       R2=LENGTH(RENTAREA);        /* SET LENGTH TO BE FREED        */
         LA    R2,42                                               0570
*       RENTPTR=ADDR(GTPWKAD);      /* SET PTR TO ADDRESS OF AREA    */
         L     RENTPTR,@PC00001                                    0571
         LA    RENTPTR,GTPWKAD(,RENTPTR)                           0571
*       GEN(FREEMAIN E,LV=(R2),A=(RENTPTR))                        0572
*       REFS(R2,RENTPTR);                                          0572
         FREEMAIN E,LV=(R2),A=(RENTPTR)
*       RFY                                                        0573
*         R2 UNRSTD;                /* UNRESTRICT REGISTER   @ZA24812*/
*     END;                          /* FILE FREED            @ZD00003*/
*                                                                  0574
*   /*****************************************************************/
*   /*                                                               */
*   /* ZERO OUT CALLERS INPUT PARAMETER                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0575
*   GTPWKAD=ZERO;                   /* RESET WKAD            @Z67SP00*/
@RF00559 L     @09,@PC00001                                        0575
         SLR   @15,@15                                             0575
         ST    @15,GTPWKAD(,@09)                                   0575
*   GTPRESTR=''B;                   /* NO RECOVREY ADDR      @Z67SP00*/
         XC    GTPRESTR(10,@09),GTPRESTR(@09)                      0576
*   RETURN CODE(FREERC);                                           0577
         SLR   @15,@15                                             0577
         IC    @15,FREERC                                          0577
         L     @14,@SA00013                                        0577
         LM    @00,@12,@SA00013+8                                  0577
         BR    @14                                                 0577
*   END GTAFREE;                                                   0578
*   END HMASMGTA                    /* END READ MODULE               */
*                                                                  0579
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*/*%INCLUDE SYSLIB  (HMASMMGP)                                       */
*                                                                  0579
*       ;                                                          0579
@DATA    DS    0H
@CH00083 DC    H'0'
@CH00053 DC    H'1'
@CH00056 DC    H'3'
@CH00071 DC    H'4'
@CH00034 DC    H'10'
@SM00296 MVC   USRRCD(0,@02),RECORD(@01)
@SC00298 CLC   RCDKEY(0,@09),USRKEY(@01)
@SC00302 CLC   RCDKEY(0,@01),USRKEY(@02)
@SC00304 CLC   RCDKEY(0,@14),USRRCD(@15)
@SM00306 MVC   RECORD(0,@14),USRRCD(@15)
@SM00308 MVC   RECORD(0,@02),RECORD(SAVRCDAD)
@SM00310 MVC   RECORD(0,@09),RECORD(@14)
@SM00312 MVC   SAVKEY(0),USRKEY(@01)
@SM00314 MVC   USRKEY(0,@01),SAVKEY
@SM00316 MVC   USRRCD(0,@01),RECORD(@15)
         DS    0F
@AL00175 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00391 DC    A(HMASMMGP)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00003 DS    15F
@SA00006 DS    15F
@SA00013 DS    15F
@SA00007 DS    15F
@PC00007 DS    1F
@AL00001 DS    1A
         DS    0F
@CF00033 DC    F'12'
@CH00033 EQU   @CF00033+2
@CF00156 DC    F'512'
@CF00154 DC    F'1024'
@CF00152 DC    F'2048'
@CF00150 DC    F'4096'
@CV00123 DC    V(HMASMMSG)
         DS    0D
PAGESIZE DS    F
ADSAVPAG DC    AL4(SAVPAGE)
INADDR   DS    A
OUTADDR  DS    A
CURPGPTR DS    A
NEWPGPTR DC    A(0)
CMPRSRC  DS    F
TORCD    DS    A
FMPAGPTR DS    A
FMRCD    DS    A
MAXENTCT DS    H
TOCNT    DS    H
FROMCNT  DS    H
ADDRC    DS    FL1
FREERC   DS    FL1
HMASMMGP DS    CL16
         ORG   HMASMMGP
MGPFIXED DS    CL12
         ORG   MGPFIXED
MGPCLEAR DS    CL6
         ORG   MGPCLEAR
MGPMGNO1 DS    FL2
MGPMGNO2 DS    FL2
MGPMGNO3 DS    FL2
         ORG   MGPFIXED+6
MGPFLAGS DS    BL2
         ORG   MGPFLAGS
MGPPRINT DS    BL1
MGPLIST  EQU   MGPFLAGS+0
MGPRPT   EQU   MGPFLAGS+0
MGPHLDS  EQU   MGPFLAGS+0
MGPWTOR  EQU   MGPFLAGS+0
MGPWTO   EQU   MGPFLAGS+0
MGPWTP   EQU   MGPFLAGS+0
@NM00004 EQU   MGPFLAGS+0
         ORG   MGPFIXED+8
MGPTYPE  DS    FL1
@NM00005 DS    CL3
         ORG   HMASMMGP+12
MGPVAR   DS    CL4
         ORG   MGPVAR
MGPVARPT DS    1A
         ORG   HMASMMGP+16
CURSTAT  DS    CL10
         ORG   CURSTAT
CURPAG   DS    AL4
CURRCD   DS    AL4
CURPOS   DS    FL2
         ORG   CURSTAT+10
GTASW    DS    BL1
         ORG   GTASW
STOP     DS    BL1
ADDSTOP  EQU   GTASW+0
CMPRSW   EQU   GTASW+0
GETNSTOP EQU   GTASW+0
@NM00006 EQU   GTASW+0
         ORG   GTASW+1
         DS    CL1
PATCHGTA DS    CL80
         ORG   PATCHGTA
@NM00007 DC    80X'FF'
         ORG   PATCHGTA+80
EOFRCD   DC    X'FF'
SAVKEY   DS    CL255
SAVBUFFR DS    CL255
CMPRSSW1 DS    BL1
         ORG   CMPRSSW1
TORECFND DS    BL1
FMRECFND EQU   CMPRSSW1+0
COMPSTOP EQU   CMPRSSW1+0
         ORG   CMPRSSW1+1
HMASMGTA CSECT
*                                  /*                       @YA20679*/
SAVPAGE  DS   4096C                                         @YA20679
HMASMGTA CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SVNXTPAG EQU   @03
STRTRC   EQU   @03
GETNRC   EQU   @03
GETPRC   EQU   @03
OPENRC   EQU   @03
TOPAGPTR EQU   @03
GETPAGRC EQU   @03
MVCLLEN  EQU   @03
SAVRCDAD EQU   @03
SAVADDR  EQU   @03
DELRC    EQU   @03
LOCRTNCD EQU   @03
INITRC   EQU   @03
VERRTNCD EQU   @03
GTARTNCD EQU   @03
R2       EQU   @02
MVCLTOAD EQU   @04
MVCLTOLN EQU   @05
MVCLFMAD EQU   @06
MVCLFMLN EQU   @07
RENTPTR  EQU   @08
CCAPTR   EQU   @11
RTNCODE  EQU   @15
ONEPAGE  EQU   0
PAGEPFX  EQU   ONEPAGE
NEXTPAG  EQU   PAGEPFX
PREVPAG  EQU   PAGEPFX+4
CNTINPAG EQU   PAGEPFX+8
PAGDATA  EQU   ONEPAGE+10
RECORD   EQU   0
RCDKEY   EQU   RECORD
RCDEOF   EQU   RCDKEY
USRRCD   EQU   0
USRKEY   EQU   USRRCD
RENTAREA EQU   0
RNTFIRST EQU   RENTAREA
RNTLAST  EQU   RENTAREA+4
RNTSTAT  EQU   RENTAREA+8
RNTCPAG  EQU   RNTSTAT
RNTCRCD  EQU   RNTSTAT+4
RNTCPOS  EQU   RNTSTAT+8
RNTSTATN EQU   RENTAREA+20
RNTCPAGN EQU   RNTSTATN
RNTCRCDN EQU   RNTSTATN+4
RNTCPOSN EQU   RNTSTATN+8
RNTSTATP EQU   RENTAREA+32
RNTCPAGP EQU   RNTSTATP
RNTCRCDP EQU   RNTSTATP+4
RNTCPOSP EQU   RNTSTATP+8
HMASMGTP EQU   0
GTPFUNCT EQU   HMASMGTP
GTPRETRN EQU   HMASMGTP+1
GTPRCDLN EQU   HMASMGTP+4
GTPKEYLN EQU   HMASMGTP+6
GTPWKAD  EQU   HMASMGTP+8
GTPBUFAD EQU   HMASMGTP+12
GTPRESTR EQU   HMASMGTP+16
GTPFLGS1 EQU   HMASMGTP+26
GTPNOSPM EQU   GTPFLGS1
GTPRCDNF EQU   GTPFLGS1
GTPPSIZE EQU   GTPFLGS1
FILEPAGE EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00003 EQU   HMASMGTP+27
@NM00002 EQU   GTPFLGS1
GTPPOS   EQU   GTPRESTR+8
GTPRCD   EQU   GTPRESTR+4
GTPPAG   EQU   GTPRESTR
@NM00001 EQU   HMASMGTP+2
@NM00009 EQU   RENTAREA+30
@NM00008 EQU   RENTAREA+18
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00228 EQU   @RC00225
@ENDDATA EQU   *
         END   HMASMGTA,(C'PLS2025',0802,78334)
