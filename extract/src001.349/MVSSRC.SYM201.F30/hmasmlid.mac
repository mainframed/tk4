         TITLE 'HMASMLID - SMP LIST DRIVER ROUTINE'
HMASMLID CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMLID  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  LA    @10,4095(,@12)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@10                                    0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0173
*   /*****************************************************************/
*   /*                                                               */
*   /* IF LIST LOG REQUEST CALL HMASMLOG ELSE PROCESS OTHER DATASET  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0173
*   LIDRTNCD=ZERO;                  /*                               */
         SLR   LIDRTNCD,LIDRTNCD                                   0173
*   IOPPTR=CCAIOPTR;                /* INITIAL SETUP                 */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0174
*   SAVBUFAD=IOPBUFAD;              /*                               */
         L     SAVBUFAD,IOPBUFAD(,IOPPTR)                          0175
*   SETPTR=CCASETAD;                                               0176
         L     SETPTR,CCASETAD(,CCAPTR)                            0176
*   GTPPTR1=CCAGTP1;                                               0177
         L     GTPPTR1,CCAGTP1(,CCAPTR)                            0177
*   IF LISTLOG=ON THEN                                             0178
         L     @07,@PC00001                                        0178
         TM    LISTLOG(@07),B'01000000'                            0178
         BNO   @RF00178                                            0178
*     DO;                           /* CHECK IF THE LISTLOG          */
*       CALL HMASMLOG(LISTPARM);    /* FUNCT WAS REQUESTED           */
         ST    @07,@AL00001                                        0180
         L     @15,@CV01384                                        0180
         LA    @01,@AL00001                                        0180
         BALR  @14,@15                                             0180
*       RFY                                                        0181
*         RTNCODE RSTD;             /* IF YES, PROCESS AND           */
*       LIDRTNCD=MAX(LIDRTNCD,RTNCODE);/* RETURN TO THE CALLER       */
         CR    LIDRTNCD,RTNCODE                                    0182
         BNL   *+6
         LR    LIDRTNCD,RTNCODE                                    0182
*       RFY                                                        0183
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /* AFTER PROCESSING THE LISTLOG
*                                      REQUEST SKIP                  */
*                                                                  0185
*   /*****************************************************************/
*   /*                                                               */
*   /* IF NOT LIST LOG REQUEST THEN PROCESS IT HERE                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0185
*   ELSE                                                           0185
*     DO;                           /* THE REST OF THE CODE AND    0185
*                                      CLEANUP BEFORE EXIT           */
         B     @RC00178                                            0185
@RF00178 DS    0H                                                  0186
*       RFY                                                        0186
*         HMASMGTP BASED(CCAGTP1);  /* ITS NOT THE LOG FUNCT         */
*       CALL LIDINIT;               /* START SETTING UP FOR MASS OR
*                                      SELECT MODE                   */
         BAL   @14,LIDINIT                                         0187
*       RFY                                                        0188
*         RTNCODE RSTD;             /*                               */
*       LIDRTNCD=MAX(LIDRTNCD,RTNCODE);/* SAVE THE RETURN CODE       */
         CR    LIDRTNCD,RTNCODE                                    0189
         BNL   *+6
         LR    LIDRTNCD,RTNCODE                                    0189
*       RFY                                                        0190
*         RTNCODE UNRSTD;           /* FROM LIDINIT                  */
*                                                                  0190
*       /*************************************************************/
*       /*                                                           */
*       /* LOOP READING RECORDS FROM EITHER SPECIFIED DATASET OF SET */
*       /* FILE TILL END OF FILE OR ERROR OCCURS                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0191
*       DO WHILE(                   /*                               */
*             LIDRTNCD<STOPPTF      /* WHILE RETURN OK               */
*             &EOFSW=OFF);          /* AND NOT END OF FILE           */
         B     @DE00191                                            0191
@DL00191 DS    0H                                                  0192
*         LIDRC=ZERO;               /* INIT RC FOR THIS ENTRY        */
         SLR   LIDRC,LIDRC                                         0192
*         SKIPSW=OFF;               /* RESET THE SKIP SWITCH         */
         NI    SKIPSW,B'11011111'                                  0193
*         RFY                       /*                               */
*           RTNCODE RSTD;           /*                               */
*                                                                  0194
*         /***********************************************************/
*         /*                                                         */
*         /* GET NEXT RECORD TO FOMAT BASED ON MODE OF REQUEST       */
*         /* (EITHER MASS OR SELECT)                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0195
*         IF LISTSEL=OFF            /* IF MASS MODE REQUEST          */
*             ×LISTSCDS=ON          /* OR LIST SCDS                  */
*           THEN                    /*                               */
         L     @14,@PC00001                                        0195
         TM    LISTSEL(@14),B'10000000'                            0195
         BZ    @RT00195                                            0195
         TM    LISTSCDS(@14),B'00010000'                           0195
         BNO   @RF00195                                            0195
@RT00195 DS    0H                                                  0196
*           CALL LIDMASS;           /* CALL MASS MODE RTN AND PROCESS
*                                      REQ                           */
         BAL   @14,LIDMASS                                         0196
*         ELSE                      /* IF SELECT MODE REQ            */
*           CALL LIDSELCT;          /* CALL SELECT MODE RTN AND    0197
*                                      PROCESS REQ                   */
         B     @RC00195                                            0197
@RF00195 BAL   @14,LIDSELCT                                        0197
*         LIDRC=MAX(LIDRC,RTNCODE); /*                               */
@RC00195 CR    LIDRC,RTNCODE                                       0198
         BNL   *+6
         LR    LIDRC,RTNCODE                                       0198
*         RFY                                                      0199
*           RTNCODE UNRSTD;         /*                               */
*         IF LIDRC=ZERO THEN        /*                               */
         CH    LIDRC,@CH00304                                      0200
         BNE   @RF00200                                            0200
*           HOLDTYPE=IOPTYPE;       /* HOLD THE TYPE UNTIL           */
*                                                                  0201
         MVC   HOLDTYPE(1),IOPTYPE(IOPPTR)                         0201
*         /***********************************************************/
*         /*                                                         */
*         /* IF NOAPPLY OR NOACCEPT SPECIFIED CALL HMASMLC1 TO DO    */
*         /* CROSS CDS/ACDS CHECKING                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0202
*         IF LIDRC=ZERO             /* IF ALL OK                     */
*             &EOFSW=OFF            /* AND NOT END OF FILE           */
*             &IOPTYPE=IOPSMD       /* AND SYSMOD TYPE RECORD        */
*             &(LISTNOAP=ON×LISTNOAC=ON)/* AND NOAPPLY OR NOACCEPT   */
*           THEN                    /*                               */
@RF00200 CH    LIDRC,@CH00304                                      0202
         BNE   @RF00202                                            0202
         TM    EOFSW,B'10000000'                                   0202
         BNZ   @RF00202                                            0202
         CLI   IOPTYPE(IOPPTR),11                                  0202
         BNE   @RF00202                                            0202
         L     @07,@PC00001                                        0202
         TM    LISTNOAP(@07),B'01100000'                           0202
         BZ    @RF00202                                            0202
*           DO;                                                    0203
*             CALL HMASMLC1(LISTPARM,HMASMIOP);/* IF CONDITIONS ARE
*                                      MET                           */
         ST    @07,@AL00001                                        0204
         ST    IOPPTR,@AL00001+4                                   0204
         L     @15,@CV01386                                        0204
         LA    @01,@AL00001                                        0204
         BALR  @14,@15                                             0204
*             RFY                                                  0205
*               RTNCODE RSTD;       /* CALL LC1 TO PEFORM            */
*             LIDRC=MAX(LIDRC,RTNCODE);/* A CHECKING FUNCTION        */
         CR    LIDRC,RTNCODE                                       0206
         BNL   *+6
         LR    LIDRC,RTNCODE                                       0206
*             RFY                                                  0207
*               RTNCODE UNRSTD;     /* AND RETURN HERE WITH          */
*             IF LIDRC=FOUR THEN                                   0208
         CH    LIDRC,@CH00098                                      0208
         BNE   @RF00208                                            0208
*               DO;                 /* A RC TO CHECK                 */
*                 LIDRC=ZERO;       /* RC=0 GOOD                     */
         SLR   LIDRC,LIDRC                                         0210
*                 SKIPSW=ON;        /* RC=4 NOT APPLICABLE           */
         OI    SKIPSW,B'00100000'                                  0211
*               END;                /* RC>4 TERMINATE THE            */
*           END;                    /* LIST FUNCTION                 */
*                                                                  0213
@RF00208 DS    0H                                                  0214
*         /***********************************************************/
*         /*                                                         */
*         /* IF PREVIOUS FUNCTIONS OK THEN FORMAT ENTRY              */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0214
*         IF LIDRC=ZERO             /* IF PREV FUNCTIONS OK          */
*             &SKIPSW=OFF           /* AND RCD NOT TO BE SKIPPED     */
*             &EOFSW=OFF            /* AND NOT END OF FILE           */
*           THEN                    /*                               */
@RF00202 CH    LIDRC,@CH00304                                      0214
         BNE   @RF00214                                            0214
         TM    SKIPSW,B'10100000'                                  0214
         BNZ   @RF00214                                            0214
*           DO;                     /* ENTRY WILL BE FORMATD         */
*             CALL LIDFORMT;        /* AND PRINTED AND THEN IF RETURN
*                                      CODE =0                       */
         BAL   @14,LIDFORMT                                        0216
*             RFY                                                  0217
*               RTNCODE RSTD;       /* WILL GO BACK AND READ         */
*             LIDRC=MAX(LIDRC,RTNCODE);/* ANOTHER RECORD             */
         CR    LIDRC,RTNCODE                                       0218
         BNL   *+6
         LR    LIDRC,RTNCODE                                       0218
*             RFY                                                  0219
*               RTNCODE UNRSTD;     /* CHECK MASSMODE FIRST          */
*           END;                    /* END CALL FORMAT               */
*         LIDRTNCD=MAX(LIDRTNCD,LIDRC);/* SAVE RC FOR THIS ENTRY     */
@RF00214 CR    LIDRTNCD,LIDRC                                      0221
         BNL   *+6
         LR    LIDRTNCD,LIDRC                                      0221
*       END;                        /* END READ LOOP                 */
*                                                                  0222
@DE00191 CH    LIDRTNCD,@CH00082                                   0222
         BNL   @DC00191                                            0222
         TM    EOFSW,B'10000000'                                   0222
         BZ    @DL00191                                            0222
@DC00191 DS    0H                                                  0223
*       /*************************************************************/
*       /*                                                           */
*       /* ISSUE SUMMARY REPORTS IF REQUIRED                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0223
*       IF RPTSW=ON                 /* IF REPORT INDICATED           */
*           ×MMTBL^=LISTPRM2        /* OR NOT ALL REQUESTED ENTRY FND*/
*           ×(LISTALL2=ON           /* OR ALL REQUESTED              */
*           &                       /* BUT NOT CRQ OR ACRQ           */
*           (LISTCRQ=OFF&LISTACRQ=OFF))/*                            */
*         THEN                      /*                               */
         TM    RPTSW,B'00010000'                                   0223
         BO    @RT00223                                            0223
         L     @07,@PC00001                                        0223
         CLC   MMTBL(2),LISTPRM2(@07)                              0223
         BNE   @RT00223                                            0223
         TM    LISTALL2(@07),B'10000000'                           0223
         BNO   @RF00223                                            0223
         TM    LISTCRQ(@07),B'00001100'                            0223
         BNZ   @RF00223                                            0223
@RT00223 DS    0H                                                  0224
*         DO;                       /*                               */
*           CALL LIDRPT;            /* ISSUE REPORTS                 */
         BAL   @14,LIDRPT                                          0225
*           RFY                     /*                               */
*             RTNCODE RSTD;         /*                               */
*           LIDRTNCD=MAX(LIDRTNCD,RTNCODE);/*                        */
         CR    LIDRTNCD,RTNCODE                                    0227
         BNL   *+6
         LR    LIDRTNCD,RTNCODE                                    0227
*           RFY                     /*                               */
*             RTNCODE UNRSTD;       /*                               */
*         END;                      /*                               */
*     END;                          /* END FOR ELSEDO AT START OF  0230
*                                      PROG                          */
*                                                                  0230
@RF00223 DS    0H                                                  0231
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEANUP BEFORE RETURNING TO THE CALLING PROCEDURE             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0231
*   CALL LIDCLEAN;                  /*                               */
@RC00178 BAL   @14,LIDCLEAN                                        0231
*   RFY                                                            0232
*     RTNCODE RSTD;                 /*                               */
*   LIDRTNCD=MAX(LIDRTNCD,RTNCODE); /*                               */
         CR    LIDRTNCD,RTNCODE                                    0233
         BNL   *+6
         LR    LIDRTNCD,RTNCODE                                    0233
*   RFY                                                            0234
*     RTNCODE UNRSTD;               /*                               */
*   RETURN CODE(LIDRTNCD);          /*                               */
         LR    @15,LIDRTNCD                                        0235
         L     @13,4(,@13)                                         0235
         L     @14,12(,@13)                                        0235
         LM    @00,@12,20(@13)                                     0235
         BR    @14                                                 0235
         EJECT
*                                                                  0236
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS PROC WILL INITIALIZE THE NECESSARY FIELDS                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0236
*LIDINIT:                                                          0236
*   PROCEDURE;                                                     0236
LIDINIT  STM   @14,@12,@SA00002                                    0236
*   DECLARE                                                        0237
*     INITRC FIXED(8);                                             0237
*   RFY                             /*                               */
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                             /*                               */
*     HMASMGTP BASED(GTPPTR1);      /*                               */
*   INITRC=ZERO;                                                   0240
         SLR   INITRC,INITRC                                       0240
*   HMASMGTP=''B;                   /* RESET THE GTP                 */
         XC    HMASMGTP(28,GTPPTR1),HMASMGTP(GTPPTR1)              0241
*   TYPEAREA=''B;                                                  0242
         XC    TYPEAREA(3),TYPEAREA                                0242
*   SWITCHES=''B;                                                  0243
         XC    SWITCHES(2),SWITCHES                                0243
*   MMTBL=''B;                      /*                               */
*                                                                  0244
         XC    MMTBL(2),MMTBL                                      0244
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSE NECESSARY FILE FOR NEXT SEQUENTIAL READ                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0245
*   IF LISTNOAP=ON THEN                                            0245
         L     @05,@PC00001                                        0245
         TM    LISTNOAP(@05),B'01000000'                           0245
         BNO   @RF00245                                            0245
*     DO;                           /* IF NOAPPLY WAS SPEC           */
*       IOPDSID=IOPCDS;             /* CLOSE THE CDS FOR             */
         MVI   IOPDSID(IOPPTR),X'02'                               0247
*       IOPFUNCT=IOPCLOSN;          /* GETNEXT PROCESSING            */
         MVI   IOPFUNCT(IOPPTR),X'0C'                              0248
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    IOPPTR,@AL00001                                     0249
         L     @15,@CV01381                                        0249
         LA    @01,@AL00001                                        0249
         BALR  @14,@15                                             0249
*       INITRC=MAX(INITRC,IOPRETRN);/*                               */
         SLR   @05,@05                                             0250
         IC    @05,IOPRETRN(,IOPPTR)                               0250
         CR    INITRC,@05                                          0250
         BNL   *+6
         LR    INITRC,@05                                          0250
*     END;                          /*                               */
*   IF LISTNOAC=ON&INITRC=ZERO THEN                                0252
@RF00245 L     @05,@PC00001                                        0252
         TM    LISTNOAC(@05),B'00100000'                           0252
         BNO   @RF00252                                            0252
         CH    INITRC,@CH00304                                     0252
         BNE   @RF00252                                            0252
*     DO;                           /* IF NOACCEPT WAS SPEC          */
*       IOPDSID=IOPACDS;            /* CLOSE THE ACDS FOR            */
         MVI   IOPDSID(IOPPTR),X'0C'                               0254
*       IOPFUNCT=IOPCLOSN;          /* GETNEXT PROCESSING            */
         MVI   IOPFUNCT(IOPPTR),X'0C'                              0255
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    IOPPTR,@AL00001                                     0256
         L     @15,@CV01381                                        0256
         LA    @01,@AL00001                                        0256
         BALR  @14,@15                                             0256
*       INITRC=MAX(INITRC,IOPRETRN);/*                               */
         SLR   @05,@05                                             0257
         IC    @05,IOPRETRN(,IOPPTR)                               0257
         CR    INITRC,@05                                          0257
         BNL   *+6
         LR    INITRC,@05                                          0257
*     END;                          /*                               */
*                                                                  0258
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE CORRECT DATASET AND HOLD IT IN LISTDSID. NOTE THAT THE*/
*   /* RETURN CODE IS NOT CHECKED HERE BECAUSE THE LISTDSID AND THE  */
*   /* TXTDSID IS NECESSARY TO THE REPORT AND CLEANUP ROUTINES. THE  */
*   /* RETURN CODE IS CHECKED AFTER THIS SECTION OF CODE.            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0259
*   IF LISTCDS=ON THEN              /*                               */
@RF00252 L     @05,@PC00001                                        0259
         TM    LISTCDS(@05),B'01000000'                            0259
         BNO   @RF00259                                            0259
*     DO;                           /*                               */
*       LISTDSID=IOPCDS;                                           0261
         MVI   LISTDSID,X'02'                                      0261
*       TXTDSID=TXTCDS;             /*                               */
         MVC   TXTDSID(8),@CC01479                                 0262
*     END;                          /*                               */
*   ELSE                                                           0264
*     IF LISTACDS=ON THEN           /*                               */
         B     @RC00259                                            0264
@RF00259 L     @05,@PC00001                                        0264
         TM    LISTACDS(@05),B'00100000'                           0264
         BNO   @RF00264                                            0264
*       DO;                         /*                               */
*         LISTDSID=IOPACDS;                                        0266
         MVI   LISTDSID,X'0C'                                      0266
*         TXTDSID=TXTACDS;          /*                               */
         MVC   TXTDSID(8),@CC01481                                 0267
*       END;                        /*                               */
*     ELSE                                                         0269
*       IF LISTSCDS=ON THEN         /*                               */
         B     @RC00264                                            0269
@RF00264 L     @05,@PC00001                                        0269
         TM    LISTSCDS(@05),B'00010000'                           0269
         BNO   @RF00269                                            0269
*         DO;                       /*                               */
*           LISTDSID=IOPSCDS;                                      0271
         MVI   LISTDSID,X'21'                                      0271
*           TXTDSID=TXTSCDS;        /*                               */
         MVC   TXTDSID(8),@CC01485                                 0272
*         END;                      /*                               */
*       ELSE                                                       0274
*         IF LISTCRQ=ON THEN        /*                               */
         B     @RC00269                                            0274
@RF00269 L     @05,@PC00001                                        0274
         TM    LISTCRQ(@05),B'00001000'                            0274
         BNO   @RF00274                                            0274
*           DO;                     /*                               */
*             LISTDSID=IOPCRQ;                                     0276
         MVI   LISTDSID,X'1C'                                      0276
*             TXTDSID=TXTCRQ;       /*                               */
         MVC   TXTDSID(8),@CC01487                                 0277
*           END;                    /*                               */
*         ELSE                                                     0279
*           IF LISTACRQ=ON THEN     /*                               */
         B     @RC00274                                            0279
@RF00274 L     @05,@PC00001                                        0279
         TM    LISTACRQ(@05),B'00000100'                           0279
         BNO   @RF00279                                            0279
*             DO;                   /*                               */
*               LISTDSID=IOPACRQ;                                  0281
         MVI   LISTDSID,X'1E'                                      0281
*               TXTDSID=TXTACRQ;    /*                               */
         MVC   TXTDSID(8),@CC01489                                 0282
*             END;                  /*                               */
*           ELSE                                                   0284
*             IF LISTPTS=ON THEN    /*                               */
         B     @RC00279                                            0284
@RF00279 L     @05,@PC00001                                        0284
         TM    LISTPTS(@05),B'00000010'                            0284
         BNO   @RF00284                                            0284
*               DO;                 /*                               */
*                 LISTDSID=IOPPTS;                                 0286
         MVI   LISTDSID,X'06'                                      0286
*                 TXTDSID=TXTPTS;   /*                               */
         MVC   TXTDSID(8),@CC01483                                 0287
*               END;                /*                               */
*                                                                  0288
*   /*****************************************************************/
*   /*                                                               */
*   /* CLOSE INPUT FILES FOR NEXT SEQUENTIAL READ                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0289
*   IF INITRC=ZERO THEN                                            0289
@RF00284 DS    0H                                                  0289
@RC00279 DS    0H                                                  0289
@RC00274 DS    0H                                                  0289
@RC00269 DS    0H                                                  0289
@RC00264 DS    0H                                                  0289
@RC00259 CH    INITRC,@CH00304                                     0289
         BNE   @RF00289                                            0289
*     DO;                                                          0290
*       IF LISTSEL=ON THEN                                         0291
         L     @05,@PC00001                                        0291
         TM    LISTSEL(@05),B'10000000'                            0291
         BNO   @RF00291                                            0291
*         DO;                       /* IF SELECT MODE REQ            */
*           RFY                                                    0293
*             HMASMGTP BASED(SETPTR);/*                              */
*           GTPBUFAD=ADDR(HMASMSET);/* THE TOP OF THE TABLE          */
         LA    @05,HMASMSET                                        0294
         ST    @05,GTPBUFAD(,SETPTR)                               0294
*           GTPRCDLN=LENGTH(HMASMSET);/*                             */
         MVC   GTPRCDLN(2,SETPTR),@CH00033                         0295
*           GTPKEYLN=LENGTH(SELSTENT);/* HMASMSET AREA               */
         MVC   GTPKEYLN(2,SETPTR),@CH00034                         0296
*           GTPFUNCT=GTPOPENN;      /*                               */
         MVI   GTPFUNCT(SETPTR),X'01'                              0297
*           CALL HMASMGTA(HMASMGTP);/*                               */
         ST    SETPTR,@AL00001                                     0298
         L     @15,@CV01383                                        0298
         LA    @01,@AL00001                                        0298
         BALR  @14,@15                                             0298
*         END;                      /*                               */
*       ELSE                        /*                               */
*         DO;                       /*                               */
         B     @RC00291                                            0300
@RF00291 DS    0H                                                  0301
*           IOPDSID=LISTDSID;       /*                               */
         MVC   IOPDSID(1,IOPPTR),LISTDSID                          0301
*           IOPFUNCT=IOPCLOSN;      /* GET THE DATASET READY         */
         MVI   IOPFUNCT(IOPPTR),X'0C'                              0302
*           CALL HMASMIO(HMASMIOP); /* FOR RECORD SRCH               */
         ST    IOPPTR,@AL00001                                     0303
         L     @15,@CV01381                                        0303
         LA    @01,@AL00001                                        0303
         BALR  @14,@15                                             0303
*           INITRC=MAX(INITRC,IOPRETRN);/*                           */
         SLR   @05,@05                                             0304
         IC    @05,IOPRETRN(,IOPPTR)                               0304
         CR    INITRC,@05                                          0304
         BNL   *+6
         LR    INITRC,@05                                          0304
*         END;                      /*                               */
*     END;                                                         0306
*                                                                  0306
@RC00291 DS    0H                                                  0307
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ALL PREVIOUS FUNCTIONS OK AND THIS IS SCDS LIST THEN OBTAIN*/
*   /* A SECOND IOP TO BE USED TO PASS THE SCDS SYSMOD ENTRY BETWEEN */
*   /* CALLS TO HMASMLCD. THIS IS NEEDED BECAUSE IT IS THE SYSMOD    */
*   /* ENTRY THAT CONTAINS THE ACTUAL NAMES OF THE SCDS ELEMENTS.    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0307
*   IF INITRC=ZERO                  /*                               */
*       &LISTSCDS=ON                /*                               */
*     THEN                          /*                               */
@RF00289 CH    INITRC,@CH00304                                     0307
         BNE   @RF00307                                            0307
         L     @05,@PC00001                                        0307
         TM    LISTSCDS(@05),B'00010000'                           0307
         BNO   @RF00307                                            0307
*     DO;                           /*                               */
*       HMASMSPL=''B;               /*                               */
         XC    HMASMSPL(5),HMASMSPL                                0309
*       SPLFUNCT=SPLGMIOP;          /* CALL SUB TO GETMAIN IOP       */
         MVI   SPLFUNCT,X'03'                                      0310
*       CALL HMASMSUB(HMASMSPL);    /*                               */
         L     @15,@CV01389                                        0311
         LA    @01,@AL00311                                        0311
         BALR  @14,@15                                             0311
*       RFY                         /*                               */
*         RTNCODE RSTD;             /*                               */
*       INITRC=RTNCODE;             /*                               */
         LR    INITRC,RTNCODE                                      0313
*       RFY                         /*                               */
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*                                                                  0315
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR XREF REQUEST TO PROCESS AND SETUP                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0316
*   IF INITRC=ZERO                  /* IF PREV FUNCTIONS OK          */
*       &LISTXREF=ON                /* AND XREF REQUEST              */
*     THEN                          /*                               */
@RF00307 CH    INITRC,@CH00304                                     0316
         BNE   @RF00316                                            0316
         L     @05,@PC00001                                        0316
         TM    LISTXREF(@05),B'01000000'                           0316
         BNO   @RF00316                                            0316
*     DO;                           /*                               */
*       CALL HMASMXRF(LISTPARM,CCAGTP1->HMASMGTP,CCASEGTP->HMASMGTP);
         ST    @05,@AL00001                                        0318
         L     @05,CCAGTP1(,CCAPTR)                                0318
         ST    @05,@AL00001+4                                      0318
         L     @05,CCASEGTP(,CCAPTR)                               0318
         ST    @05,@AL00001+8                                      0318
         L     @15,@CV01390                                        0318
         LA    @01,@AL00001                                        0318
         BALR  @14,@15                                             0318
*       RFY                                                        0319
*         RTNCODE RSTD;             /* INSTRUCTIONS WILL BE          */
*       INITRC=MAX(INITRC,RTNCODE); /* USED THROUGHOUT THE           */
         CR    INITRC,RTNCODE                                      0320
         BNL   *+6
         LR    INITRC,RTNCODE                                      0320
*       RFY                                                        0321
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*   RETURN CODE(INITRC);                                           0323
@RF00316 LR    @15,INITRC                                          0323
         L     @14,@SA00002                                        0323
         LM    @00,@12,@SA00002+8                                  0323
         BR    @14                                                 0323
*   END LIDINIT;                                                   0324
         EJECT
*                                                                  0325
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL PROCESS MASS MODE REQUESTS                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0325
*LIDMASS:                                                          0325
*   PROCEDURE;                      /*                               */
LIDMASS  STM   @14,@12,@SA00003                                    0325
*   DECLARE                                                        0326
*     MASSRC FIXED(8);              /*                               */
*   RFY                                                            0327
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   MASSRC=ZERO;                                                   0328
         SLR   MASSRC,MASSRC                                       0328
*   FOUNDIT=OFF;                                                   0329
         NI    FOUNDIT,B'10111111'                                 0329
*   IF IOPTYPE^=LASTTYPE            /* IF NEW TYPE ENTRY THIS TIME   */
*       &LISTPRM2=MMTBL             /* AND ALL REQUESTED TYPES HAVE  */
*     THEN                          /* BEEN FORMATTED THEN SET       */
         CLC   IOPTYPE(1,IOPPTR),LASTTYPE                          0330
         BE    @RF00330                                            0330
         L     @05,@PC00001                                        0330
         CLC   LISTPRM2(2,@05),MMTBL                               0330
         BNE   @RF00330                                            0330
*     EOFSW=ON;                     /* SW TO STOP PROCESS            */
         OI    EOFSW,B'10000000'                                   0331
*   IOPDSID=LISTDSID;               /* THE LISTDSID CONTAINS         */
@RF00330 MVC   IOPDSID(1,IOPPTR),LISTDSID                          0332
*   IOPFUNCT=IOPGETN;               /* THE DATASET ID WHICH WAS SET
*                                      IN LIDINIT                    */
         MVI   IOPFUNCT(IOPPTR),X'0A'                              0333
*   DO WHILE(                       /* LOOP READING UNTIL            */
*         EOFSW=OFF                 /* OR END OF FILE ENCOUNTERED    */
*         &FOUNDIT=OFF              /* OR NEXT RCD TO FORMAT FOUND   */
*         &MASSRC=ZERO);            /* AND NO ERR IN LOCATE          */
         B     @DE00334                                            0334
@DL00334 DS    0H                                                  0335
*     CALL HMASMIO(HMASMIOP);       /*                               */
         ST    IOPPTR,@AL00001                                     0335
         L     @15,@CV01381                                        0335
         LA    @01,@AL00001                                        0335
         BALR  @14,@15                                             0335
*     MASSRC=MAX(MASSRC,IOPRETRN);  /*                               */
*                                                                  0336
         SLR   @05,@05                                             0336
         IC    @05,IOPRETRN(,IOPPTR)                               0336
         CR    MASSRC,@05                                          0336
         BNL   *+6
         LR    MASSRC,@05                                          0336
*     /***************************************************************/
*     /*                                                             */
*     /* IF TOTAL MASS LIST THEN LIST ALL BUT DUMMY MEMBER AND CAUSER*/
*     /* TYPE FOR CRQ AND ACR                                        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0337
*     IF LISTSCDS=OFF×LISTSEL=OFF THEN                             0337
         L     @05,@PC00001                                        0337
         TM    LISTSCDS(@05),B'00010000'                           0337
         BZ    @RT00337                                            0337
         TM    LISTSEL(@05),B'10000000'                            0337
         BNZ   @RF00337                                            0337
@RT00337 DS    0H                                                  0338
*       DO;                         /* LIST IF NOT SCDS REQ OR IF  0338
*                                      MASS SCDS LIST                */
*         IF LISTALL2=ON&IOPTYPE^=IOPDND&IOPTYPE^=IOPCSR THEN/*      */
         L     @05,@PC00001                                        0339
         TM    LISTALL2(@05),B'10000000'                           0339
         BNO   @RF00339                                            0339
         CLI   IOPTYPE(IOPPTR),10                                  0339
         BE    @RF00339                                            0339
         CLI   IOPTYPE(IOPPTR),15                                  0339
         BE    @RF00339                                            0339
*           FOUNDIT=ON;             /* STOP READ LOOP                */
         OI    FOUNDIT,B'01000000'                                 0340
*         ELSE                      /*                               */
*           IF(LISTSMD=ON&IOPTYPE=IOPSMD) THEN                     0341
         B     @RC00339                                            0341
@RF00339 L     @05,@PC00001                                        0341
         TM    LISTSMD(@05),B'10000000'                            0341
         BNO   @RF00341                                            0341
         CLI   IOPTYPE(IOPPTR),11                                  0341
         BNE   @RF00341                                            0341
*             FOUNDIT=ON;           /* STOP READ LOOP                */
         OI    FOUNDIT,B'01000000'                                 0342
*           ELSE                    /*                               */
*             IF(LISTSMD=ON&IOPTYPE=IOPCSR)/* OR TYPE FOUND WAS    0343
*                                      REQUESTED                     */
*                 ×(LISTMOD=ON&IOPTYPE=IOPMOD)/* OR TYPE FOUND WAS 0343
*                                      REQUESTED                     */
*                 ×(LISTMAC=ON&IOPTYPE=IOPMAC)/* OR TYPE FOUND WAS 0343
*                                      REQUESTED                     */
*                 ×(LISTSRC=ON&IOPTYPE=IOPSRC)/* OR TYPE FOUND WAS 0343
*                                      REQUESTED                     */
*                 ×(LISTLMD=ON&IOPTYPE=IOPLMD)/* OR TYPE FOUND WAS 0343
*                                      REQUESTED                     */
*                 ×(LISTASM=ON&IOPTYPE=IOPASM)/* OR TYPE FOUND WAS 0343
*                                      REQUESTED                     */
*                 ×(LISTDLB=ON&IOPTYPE=IOPDLB)/* OR TYPE FOUND WAS 0343
*                                      REQUESTED                     */
*                 ×(LISTFMD=ON&IOPTYPE=IOPFMD)/* OR TYPE FOUND WAS 0343
*                                      REQUESTED                     */
*                 ×(LISTMCS=ON&IOPTYPE=IOPMCS)/* OR TYPE FOUND WAS 0343
*                                      REQUESTED                     */
*                 ×(LISTSYS=ON&IOPTYPE=IOPSYS)/* OR TYPE FOUND WAS 0343
*                                      REQUESTED                     */
*               THEN                /*                               */
         B     @RC00341                                            0343
@RF00341 L     @05,@PC00001                                        0343
         TM    LISTSMD(@05),B'10000000'                            0343
         BNO   @GL00026                                            0343
         CLI   IOPTYPE(IOPPTR),15                                  0343
         BE    @RT00343                                            0343
@GL00026 L     @05,@PC00001                                        0343
         TM    LISTMOD(@05),B'00001000'                            0343
         BNO   @GL00025                                            0343
         CLI   IOPTYPE(IOPPTR),5                                   0343
         BE    @RT00343                                            0343
@GL00025 L     @05,@PC00001                                        0343
         TM    LISTMAC(@05),B'00010000'                            0343
         BNO   @GL00024                                            0343
         CLI   IOPTYPE(IOPPTR),3                                   0343
         BE    @RT00343                                            0343
@GL00024 L     @05,@PC00001                                        0343
         TM    LISTSRC(@05),B'00000100'                            0343
         BNO   @GL00023                                            0343
         CLI   IOPTYPE(IOPPTR),8                                   0343
         BE    @RT00343                                            0343
@GL00023 L     @05,@PC00001                                        0343
         TM    LISTLMD(@05),B'00100000'                            0343
         BNO   @GL00022                                            0343
         CLI   IOPTYPE(IOPPTR),2                                   0343
         BE    @RT00343                                            0343
@GL00022 L     @05,@PC00001                                        0343
         TM    LISTASM(@05),B'01000000'                            0343
         BNO   @GL00021                                            0343
         CLI   IOPTYPE(IOPPTR),1                                   0343
         BE    @RT00343                                            0343
@GL00021 L     @05,@PC00001                                        0343
         TM    LISTDLB(@05),B'00000010'                            0343
         BNO   @GL00020                                            0343
         CLI   IOPTYPE(IOPPTR),6                                   0343
         BE    @RT00343                                            0343
@GL00020 L     @05,@PC00001                                        0343
         TM    LISTFMD(@05),B'01000000'                            0343
         BNO   @GL00019                                            0343
         CLI   IOPTYPE(IOPPTR),14                                  0343
         BE    @RT00343                                            0343
@GL00019 L     @05,@PC00001                                        0343
         TM    LISTMCS(@05),B'00100000'                            0343
         BNO   @GL00018                                            0343
         CLI   IOPTYPE(IOPPTR),16                                  0343
         BE    @RT00343                                            0343
@GL00018 L     @05,@PC00001                                        0343
         TM    LISTSYS(@05),B'00000001'                            0343
         BNO   @RF00343                                            0343
         CLI   IOPTYPE(IOPPTR),7                                   0343
         BNE   @RF00343                                            0343
@RT00343 DS    0H                                                  0344
*               FOUNDIT=ON;         /* STOP READ LOOP                */
         OI    FOUNDIT,B'01000000'                                 0344
*       END;                        /* TO TERMINATE THE DO           */
*/* IF SELECT LISTFOR SCDS THEN AFTER READING THRU DATASET           */
*/* CHECK SET TO SEE IF THAT SYSMOD REQUESTED                        */
*                                                                  0346
*                                   /*                               */
*     ELSE                          /* MUST BE SCDS SELECT           */
*       DO;                         /*                               */
         B     @RC00337                                            0346
@RF00337 DS    0H                                                  0347
*         IF IOPTYPE=IOPSMD THEN    /* IF SCDS SYSMOD ENTRY          */
         CLI   IOPTYPE(IOPPTR),11                                  0347
         BNE   @RF00347                                            0347
*           DO;                     /* SEE IF SYSMOD SELECTED        */
*             RFY                                                  0349
*               HMASMGTP BASED(SETPTR);/*                            */
*             HMASMSET=''B;         /*                               */
         XC    HMASMSET(12),HMASMSET                               0350
*             SESMD=ON;             /*                               */
         OI    SESMD,B'00000001'                                   0351
*             SENAME=IOPPTFNM;      /* SYSMOD NUMBER TO SET          */
         MVI   SENAME+7,C' '                                       0352
         MVC   SENAME(7),IOPPTFNM(IOPPTR)                          0352
*             GTPRCDLN=LENGTH(HMASMSET);/*                           */
         MVC   GTPRCDLN(2,SETPTR),@CH00033                         0353
*             GTPKEYLN=LENGTH(SELSTENT);/* KEY                       */
         MVC   GTPKEYLN(2,SETPTR),@CH00034                         0354
*             GTPFUNCT=GTPLOC;      /*                               */
         MVI   GTPFUNCT(SETPTR),X'03'                              0355
*             CALL HMASMGTA(HMASMGTP);/* SEE IF SYSMOD SELECTED      */
         ST    SETPTR,@AL00001                                     0356
         L     @15,@CV01383                                        0356
         LA    @01,@AL00001                                        0356
         BALR  @14,@15                                             0356
*             IF GTPRETRN=GTPGOOD THEN/* IF SELECTED                 */
         CLI   GTPRETRN(SETPTR),0                                  0357
         BNE   @RF00357                                            0357
*               DO;                 /*                               */
*                 SEFOUND=ON;       /* UPDATE SET                    */
         OI    SEFOUND,B'00000001'                                 0359
*                 GTPFUNCT=GTPADD;  /*                               */
         MVI   GTPFUNCT(SETPTR),X'04'                              0360
*                 CALL HMASMGTA(HMASMGTP);/*                         */
         ST    SETPTR,@AL00001                                     0361
         L     @15,@CV01383                                        0361
         LA    @01,@AL00001                                        0361
         BALR  @14,@15                                             0361
*                 OLDSMDNM=IOPPTFNM;/* SAVE SYSMOD NUMBER            */
         MVC   OLDSMDNM(7),IOPPTFNM(IOPPTR)                        0362
*               END;                /*                               */
*           END;                    /* END SCDS SYSMOD ENTRY         */
@RF00357 DS    0H                                                  0365
*         IF IOPPTFNM=OLDSMDNM THEN /* IF ELEMENT FOR LAST SELECTED  */
@RF00347 CLC   IOPPTFNM(7,IOPPTR),OLDSMDNM                         0365
         BNE   @RF00365                                            0365
*           FOUNDIT=ON;             /* SYSMOD THEN LIST IT           */
         OI    FOUNDIT,B'01000000'                                 0366
*       END;                        /* END SCDS SELECT               */
@RF00365 DS    0H                                                  0368
*   END;                            /* TO TERMINATE THE DO           */
@RC00337 DS    0H                                                  0368
@DE00334 TM    EOFSW,B'11000000'                                   0368
         BNZ   @DC00334                                            0368
         CH    MASSRC,@CH00304                                     0368
         BE    @DL00334                                            0368
@DC00334 DS    0H                                                  0369
*   IF MASSRC=IOPEOF THEN                                          0369
         CH    MASSRC,@CH00098                                     0369
         BNE   @RF00369                                            0369
*     DO;                           /* END-OF-FILE REACHED           */
*       EOFSW=ON;                   /* SET A SWITCH ON AND           */
         OI    EOFSW,B'10000000'                                   0371
*       MASSRC=ZERO;                /* RESET THE RETURN CODE         */
         SLR   MASSRC,MASSRC                                       0372
*     END;                          /* TO ZERO AND GO BACK TO CALLING
*                                      PROC                          */
*   RETURN CODE(MASSRC);            /*                               */
@RF00369 LR    @15,MASSRC                                          0374
         L     @14,@SA00003                                        0374
         LM    @00,@12,@SA00003+8                                  0374
         BR    @14                                                 0374
*   END LIDMASS;                    /*                               */
         EJECT
*                                                                  0376
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL PROCESS SELECT MODE REQUESTS                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0376
*LIDSELCT:                                                         0376
*   PROCEDURE;                      /*                               */
LIDSELCT STM   @14,@12,@SA00004                                    0376
*   DECLARE                                                        0377
*     SELRC FIXED;                  /*                               */
*   RFY                                                            0378
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0379
*     HMASMGTP BASED(SETPTR);       /*                               */
*   SELRC=ZERO;                     /*                               */
         SLR   SELRC,SELRC                                         0380
*   FOUNDIT=OFF;                    /*                               */
         NI    FOUNDIT,B'10111111'                                 0381
*   GTPBUFAD=ADDR(HMASMSET);        /* READ A RECORD FROM            */
         LA    @05,HMASMSET                                        0382
         ST    @05,GTPBUFAD(,SETPTR)                               0382
*   GTPRCDLN=LENGTH(HMASMSET);      /* THE GTA FILE INTO THE         */
         MVC   GTPRCDLN(2,SETPTR),@CH00033                         0383
*   GTPKEYLN=LENGTH(SELSTENT);      /* HMASMSET AREA                 */
         MVC   GTPKEYLN(2,SETPTR),@CH00034                         0384
*   GTPFUNCT=GTPGETN;               /*                               */
         MVI   GTPFUNCT(SETPTR),X'08'                              0385
*   DO WHILE SELRC=ZERO&FOUNDIT=OFF&EOFSW=OFF;                     0386
         B     @DE00386                                            0386
@DL00386 DS    0H                                                  0387
*     CALL HMASMGTA(HMASMGTP);      /*                               */
         ST    SETPTR,@AL00001                                     0387
         L     @15,@CV01383                                        0387
         LA    @01,@AL00001                                        0387
         BALR  @14,@15                                             0387
*     IF GTPRETRN=GTPEOF THEN       /* CHECK FOR EOF                 */
         CLI   GTPRETRN(SETPTR),4                                  0388
         BNE   @RF00388                                            0388
*       EOFSW=ON;                   /* YES SET SWTCH ON AND          */
         OI    EOFSW,B'10000000'                                   0389
*     ELSE                          /* IF NOT EOF                    */
*       DO;                                                        0390
         B     @RC00388                                            0390
@RF00388 DS    0H                                                  0391
*         IOPDSID=LISTDSID;         /* SETUP THE IOP TO READ         */
         MVC   IOPDSID(1,IOPPTR),LISTDSID                          0391
*         IOPFUNCT=IOPBLDL;         /* SELECTED ENTRY REQ            */
         MVI   IOPFUNCT(IOPPTR),X'04'                              0392
*         IOPNAME=SENAME;           /*                               */
         MVC   IOPNAME(8,IOPPTR),SENAME                            0393
*         IF SEMCS=ON THEN                                         0394
         TM    SEMCS,B'00000010'                                   0394
         BNO   @RF00394                                            0394
*           IOPTYPE=IOPMCS;         /* CHECK ENTRY TYPES             */
         MVI   IOPTYPE(IOPPTR),X'10'                               0395
*         ELSE                                                     0396
*           IF SESMD=ON THEN                                       0396
         B     @RC00394                                            0396
@RF00394 TM    SESMD,B'00000001'                                   0396
         BNO   @RF00396                                            0396
*             DO;                                                  0397
*               IF LISTCRQ=ON×LISTACRQ=ON THEN                     0398
         L     @05,@PC00001                                        0398
         TM    LISTCRQ(@05),B'00001100'                            0398
         BZ    @RF00398                                            0398
*                 IOPTYPE=IOPCSR;   /* IS IT A CRQ/ACRQ CAUSER(SMD)  */
         MVI   IOPTYPE(IOPPTR),X'0F'                               0399
*               ELSE                /* OR                            */
*                 IOPTYPE=IOPSMD;   /* CDS/ACDS SYSMOD               */
         B     @RC00398                                            0400
@RF00398 MVI   IOPTYPE(IOPPTR),X'0B'                               0400
*             END;                  /*                               */
*           ELSE                                                   0402
*             IF SESRC=ON THEN                                     0402
         B     @RC00396                                            0402
@RF00396 TM    SESRC,B'10000000'                                   0402
         BNO   @RF00402                                            0402
*               IOPTYPE=IOPSRC;                                    0403
         MVI   IOPTYPE(IOPPTR),X'08'                               0403
*             ELSE                                                 0404
*               IF SESYS=ON THEN                                   0404
         B     @RC00402                                            0404
@RF00402 TM    SESYS,B'00000001'                                   0404
         BNO   @RF00404                                            0404
*                 IOPTYPE=IOPSYS;                                  0405
         MVI   IOPTYPE(IOPPTR),X'07'                               0405
*               ELSE                                               0406
*                 IF SEDLB=ON THEN                                 0406
         B     @RC00404                                            0406
@RF00404 TM    SEDLB,B'01000000'                                   0406
         BNO   @RF00406                                            0406
*                   IOPTYPE=IOPDLB;                                0407
         MVI   IOPTYPE(IOPPTR),X'06'                               0407
*                 ELSE                                             0408
*                   IF SEMOD=ON THEN                               0408
         B     @RC00406                                            0408
@RF00406 TM    SEMOD,B'00100000'                                   0408
         BNO   @RF00408                                            0408
*                     IOPTYPE=IOPMOD;                              0409
         MVI   IOPTYPE(IOPPTR),X'05'                               0409
*                   ELSE                                           0410
*                     IF SEMAC=ON THEN                             0410
         B     @RC00408                                            0410
@RF00408 TM    SEMAC,B'00010000'                                   0410
         BNO   @RF00410                                            0410
*                       IOPTYPE=IOPMAC;                            0411
         MVI   IOPTYPE(IOPPTR),X'03'                               0411
*                     ELSE                                         0412
*                       IF SELMD=ON THEN                           0412
         B     @RC00410                                            0412
@RF00410 TM    SELMD,B'00001000'                                   0412
         BNO   @RF00412                                            0412
*                         IOPTYPE=IOPLMD;                          0413
         MVI   IOPTYPE(IOPPTR),X'02'                               0413
*                       ELSE                                       0414
*                         IF SEASM=ON THEN                         0414
         B     @RC00412                                            0414
@RF00412 TM    SEASM,B'00000100'                                   0414
         BNO   @RF00414                                            0414
*                           IOPTYPE=IOPASM;                        0415
         MVI   IOPTYPE(IOPPTR),X'01'                               0415
*                         ELSE                                     0416
*                           IF SEFMD=ON THEN                       0416
         B     @RC00414                                            0416
@RF00414 TM    SEFMD,B'00000010'                                   0416
         BNO   @RF00416                                            0416
*                             IOPTYPE=IOPFMD;                      0417
         MVI   IOPTYPE(IOPPTR),X'0E'                               0417
*         CALL HMASMIO(HMASMIOP);   /*                               */
@RF00416 DS    0H                                                  0418
@RC00414 DS    0H                                                  0418
@RC00412 DS    0H                                                  0418
@RC00410 DS    0H                                                  0418
@RC00408 DS    0H                                                  0418
@RC00406 DS    0H                                                  0418
@RC00404 DS    0H                                                  0418
@RC00402 DS    0H                                                  0418
@RC00396 DS    0H                                                  0418
@RC00394 ST    IOPPTR,@AL00001                                     0418
         L     @15,@CV01381                                        0418
         LA    @01,@AL00001                                        0418
         BALR  @14,@15                                             0418
*         IF IOPRETRN=IOPGOOD THEN                                 0419
         CLI   IOPRETRN(IOPPTR),0                                  0419
         BNE   @RF00419                                            0419
*           FOUNDIT=ON;             /* IF ENTRY IS GOOD THEN         */
         OI    FOUNDIT,B'01000000'                                 0420
*         ELSE                      /* TURN THE FOUNDIT BIT ON       */
*           IF IOPRETRN=IOPNTFND THEN                              0421
         B     @RC00419                                            0421
@RF00419 CLI   IOPRETRN(IOPPTR),4                                  0421
         BNE   @RF00421                                            0421
*             RPTSW=ON;             /* IF ENTRY NOT FOUND TURN REPORT
*                                      SWITCH ON THIS ENTRY WILL BE
*                                      LISTED IN THE NOT FOUND REPORT
*                                      RESET POINTER TO TOP OF     0422
*                                      DATASET GO READ ANOTHER ENTRY
*                                      FROM THE S E T AND PROCESS    */
         OI    RPTSW,B'00010000'                                   0422
*           ELSE                    /* THERE MUST BE A PROBLEM       */
*             SELRC=MAX(SELRC,IOPRETRN);/* SAVE THE RETURN CODE AND
*                                      TERMINATE PROCESSING THIS REQ */
         B     @RC00421                                            0423
@RF00421 SLR   @05,@05                                             0423
         IC    @05,IOPRETRN(,IOPPTR)                               0423
         CR    SELRC,@05                                           0423
         BNL   *+6
         LR    SELRC,@05                                           0423
*       END;                        /*                               */
@RC00421 DS    0H                                                  0424
@RC00419 DS    0H                                                  0425
*   END;                            /*                               */
@RC00388 DS    0H                                                  0425
@DE00386 LTR   SELRC,SELRC                                         0425
         BNZ   @DC00386                                            0425
         TM    FOUNDIT,B'11000000'                                 0425
         BZ    @DL00386                                            0425
@DC00386 DS    0H                                                  0426
*   RETURN CODE(SELRC);             /*                               */
         LR    @15,SELRC                                           0426
         L     @14,@SA00004                                        0426
         LM    @00,@12,@SA00004+8                                  0426
         BR    @14                                                 0426
*   END LIDSELCT;                   /*                               */
*                                                                  0428
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS ROUTINE WILL EXTEND THE ENTRY AND THEN CALL THE PROPER   */
*   /* PROC TO FORMAT AND PRINT IT                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0428
*                                   /*                               */
*LIDFORMT:                                                         0428
*   PROCEDURE;                      /*                               */
LIDFORMT STM   @14,@12,@SA00005                                    0428
*   DECLARE                                                        0429
*     FMTRC FIXED(8);               /* WILL CONTAIN RETURN           */
*   RFY                                                            0430
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RFY                                                            0431
*     HMASMGTP BASED(SETPTR);       /*                               */
*   FMTRC=ZERO;                     /*                               */
         SLR   FMTRC,FMTRC                                         0432
*   IOPFUNCT=IOPXTND;               /* EXPAND THE RECORD TO INCLUDE
*                                      ALL DATA                      */
         MVI   IOPFUNCT(IOPPTR),X'07'                              0433
*   CALL HMASMIO(HMASMIOP);         /*                               */
         ST    IOPPTR,@AL00001                                     0434
         L     @15,@CV01381                                        0434
         LA    @01,@AL00001                                        0434
         BALR  @14,@15                                             0434
*   FMTRC=MAX(FMTRC,IOPRETRN);      /* THIS SECTION WILL DETERMINE 0435
*                                      WHICH PROC TO CALL BY CHECKING
*                                      DATASET REQUESTED WHICH IS IN
*                                      THE L I S T P A R M           */
         SLR   @05,@05                                             0435
         IC    @05,IOPRETRN(,IOPPTR)                               0435
         CR    FMTRC,@05                                           0435
         BNL   *+6
         LR    FMTRC,@05                                           0435
*   IF FMTRC=ZERO THEN                                             0436
         CH    FMTRC,@CH00304                                      0436
         BNE   @RF00436                                            0436
*     DO;                           /*                               */
*       RFY                                                        0438
*         RTNCODE RSTD;             /*                               */
*       IF LISTCDS=ON×LISTACDS=ON   /* NO 4TH PARM TO LCD IF CDS/ACDS*/
*         THEN                      /*                               */
         L     @14,@PC00001                                        0439
         TM    LISTCDS(@14),B'01100000'                            0439
         BZ    @RF00439                                            0439
*         CALL HMASMLCD(LISTPARM,HMASMIOP,LASTTYPE,0);/*             */
         ST    @14,@AL00001                                        0440
         ST    IOPPTR,@AL00001+4                                   0440
         LA    @14,LASTTYPE                                        0440
         ST    @14,@AL00001+8                                      0440
         LA    @14,@CF00304                                        0440
         ST    @14,@AL00001+12                                     0440
         L     @15,@CV01388                                        0440
         LA    @01,@AL00001                                        0440
         BALR  @14,@15                                             0440
*       ELSE                        /*                               */
*         IF LISTSCDS=ON            /* IF SCDS                       */
*           THEN                    /*                               */
         B     @RC00439                                            0441
@RF00439 L     @14,@PC00001                                        0441
         TM    LISTSCDS(@14),B'00010000'                           0441
         BNO   @RF00441                                            0441
*           CALL HMASMLCD(LISTPARM,HMASMIOP,LASTTYPE,SPLPMAD->HMASMIOP)
*           ;                       /*                               */
         ST    @14,@AL00001                                        0442
         ST    IOPPTR,@AL00001+4                                   0442
         LA    @14,LASTTYPE                                        0442
         ST    @14,@AL00001+8                                      0442
         L     @14,SPLPMAD                                         0442
         ST    @14,@AL00001+12                                     0442
         L     @15,@CV01388                                        0442
         LA    @01,@AL00001                                        0442
         BALR  @14,@15                                             0442
*         ELSE                      /*                               */
*           IF LISTCRQ=ON×LISTACRQ=ON/*                              */
*             THEN                  /*                               */
         B     @RC00441                                            0443
@RF00441 L     @14,@PC00001                                        0443
         TM    LISTCRQ(@14),B'00001100'                            0443
         BZ    @RF00443                                            0443
*             CALL HMASMLCC(LISTPARM,HMASMIOP,LASTTYPE);           0444
         ST    @14,@AL00001                                        0444
         ST    IOPPTR,@AL00001+4                                   0444
         LA    @14,LASTTYPE                                        0444
         ST    @14,@AL00001+8                                      0444
         L     @15,@CV01385                                        0444
         LA    @01,@AL00001                                        0444
         BALR  @14,@15                                             0444
*           ELSE                    /*                               */
*             IF LISTPTS=ON         /*                               */
*               THEN                /*                               */
         B     @RC00443                                            0445
@RF00443 L     @14,@PC00001                                        0445
         TM    LISTPTS(@14),B'00000010'                            0445
         BNO   @RF00445                                            0445
*               CALL HMASMLCP(LISTPARM,HMASMIOP,LASTTYPE);         0446
         ST    @14,@AL00001                                        0446
         ST    IOPPTR,@AL00001+4                                   0446
         LA    @14,LASTTYPE                                        0446
         ST    @14,@AL00001+8                                      0446
         L     @15,@CV01387                                        0446
         LA    @01,@AL00001                                        0446
         BALR  @14,@15                                             0446
*       IF RTNCODE>2 THEN           /*                               */
@RF00445 DS    0H                                                  0447
@RC00443 DS    0H                                                  0447
@RC00441 DS    0H                                                  0447
@RC00439 CH    RTNCODE,@CH00047                                    0447
         BNH   @RF00447                                            0447
*         FMTRC=MAX(FMTRC,RTNCODE); /*                               */
         CR    FMTRC,RTNCODE                                       0448
         BNL   *+6
         LR    FMTRC,RTNCODE                                       0448
*                                                                  0449
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE ENTRY WAS PROCESSED WITHOUT ERROR UPDATE THE       */
*       /* CONTROLS                                                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0449
*       LASTTYPE=HOLDTYPE;          /* IF IN SELECT MODE             */
@RF00447 MVC   LASTTYPE(1),HOLDTYPE                                0449
*       RFY                                                        0450
*         HMASMGTP BASED(SETPTR);   /*                               */
*       IF RTNCODE=ZERO THEN        /* USING RTNCODE FOR POSSIBLE  0451
*                                      RC=2                          */
         LTR   RTNCODE,RTNCODE                                     0451
         BNZ   @RF00451                                            0451
*         DO;                       /* UPDATE LASTTYPE PARM          */
*           IF LISTSEL=ON THEN                                     0453
         L     @14,@PC00001                                        0453
         TM    LISTSEL(@14),B'10000000'                            0453
         BNO   @RF00453                                            0453
*             DO;                   /* THIS SECTION WILL             */
*               SEFOUND=ON;         /* TURN ON THE FOUND BIT         */
         OI    SEFOUND,B'00000001'                                 0455
*               GTPFUNCT=GTPADD;    /* IN THE S E T                  */
         MVI   GTPFUNCT(SETPTR),X'04'                              0456
*               GTPKEYLN=LENGTH(SELSTENT);                         0457
         MVC   GTPKEYLN(2,SETPTR),@CH00034                         0457
*               GTPRCDLN=LENGTH(HMASMSET);                         0458
         MVC   GTPRCDLN(2,SETPTR),@CH00033                         0458
*               GTPBUFAD=ADDR(HMASMSET);                           0459
         LA    @14,HMASMSET                                        0459
         ST    @14,GTPBUFAD(,SETPTR)                               0459
*                                   /* AND WRITE THE UPDTED RECORD 0460
*                                      RECORD BACK OUT THIS BIT WILL
*                                      BE CHECKED BY LIDRPT          */
*               CALL HMASMGTA(HMASMGTP);/* WHICH WILL PRODUCE A NOT
*                                      FOUND REPORT                  */
         ST    SETPTR,@AL00001                                     0460
         L     @15,@CV01383                                        0460
         LA    @01,@AL00001                                        0460
         BALR  @14,@15                                             0460
*               FMTRC=MAX(FMTRC,GTPRETRN);/*                         */
         SLR   @14,@14                                             0461
         IC    @14,GTPRETRN(,SETPTR)                               0461
         CR    FMTRC,@14                                           0461
         BNL   *+6
         LR    FMTRC,@14                                           0461
*             END;                  /* IF IN MASS MODE               */
*           ELSE                    /* IF NOT SELECT MOD             */
*             DO;                   /* THIS SECTION WILL             */
         B     @RC00453                                            0463
@RF00453 DS    0H                                                  0464
*               IF LASTTYPE=IOPFMD&(LISTFMD=OFF&LISTALL2=ON) THEN  0464
         CLI   LASTTYPE,14                                         0464
         BNE   @RF00464                                            0464
         L     @14,@PC00001                                        0464
         TM    LISTFMD(@14),B'01000000'                            0464
         BNZ   @RF00464                                            0464
         TM    LISTALL2(@14),B'10000000'                           0464
         BNO   @RF00464                                            0464
*                 MMALL=ON;         /* TEST FOR LISTCRQ MASS MODE    */
         OI    MMALL,B'10000000'                                   0465
*               ELSE                /*                               */
*                 IF LASTTYPE=IOPMCS THEN/* TURN ON THE BIT IN       */
         B     @RC00464                                            0466
@RF00464 CLI   LASTTYPE,16                                         0466
         BNE   @RF00466                                            0466
*                   MMMCS=ON;       /* TYPE TABLE IF IN MASS         */
         OI    MMMCS,B'00100000'                                   0467
*                 ELSE              /* MODE                          */
*                   IF(LASTTYPE=IOPSMD×LASTTYPE=IOPCSR) THEN       0468
         B     @RC00466                                            0468
@RF00466 CLI   LASTTYPE,11                                         0468
         BE    @RT00468                                            0468
         CLI   LASTTYPE,15                                         0468
         BNE   @RF00468                                            0468
@RT00468 DS    0H                                                  0469
*                     MMSMD=ON;     /* USED TO INDICATE THE          */
         OI    MMSMD,B'10000000'                                   0469
*                   ELSE            /* TYPES PROCESSED               */
*                     IF LASTTYPE=IOPSRC THEN/*                      */
         B     @RC00468                                            0470
@RF00468 CLI   LASTTYPE,8                                          0470
         BNE   @RF00470                                            0470
*                       MMSRC=ON;   /*                               */
         OI    MMSRC,B'00000100'                                   0471
*                     ELSE          /*                               */
*                       IF LASTTYPE=IOPSYS THEN/*                    */
         B     @RC00470                                            0472
@RF00470 CLI   LASTTYPE,7                                          0472
         BNE   @RF00472                                            0472
*                         MMSYS=ON; /*                               */
         OI    MMSYS,B'00000001'                                   0473
*                       ELSE        /*                               */
*                         IF LASTTYPE=IOPDLB THEN/*                  */
         B     @RC00472                                            0474
@RF00472 CLI   LASTTYPE,6                                          0474
         BNE   @RF00474                                            0474
*                           MMDLB=ON;/*                              */
         OI    MMDLB,B'00000010'                                   0475
*                         ELSE      /*                               */
*                           IF LASTTYPE=IOPMOD THEN/*                */
         B     @RC00474                                            0476
@RF00474 CLI   LASTTYPE,5                                          0476
         BNE   @RF00476                                            0476
*                             MMMOD=ON;/*                            */
         OI    MMMOD,B'00001000'                                   0477
*                           ELSE    /*                               */
*                             IF LASTTYPE=IOPMAC THEN/*              */
         B     @RC00476                                            0478
@RF00476 CLI   LASTTYPE,3                                          0478
         BNE   @RF00478                                            0478
*                               MMMAC=ON;/*                          */
         OI    MMMAC,B'00010000'                                   0479
*                             ELSE  /*                               */
*                               IF LASTTYPE=IOPLMD THEN/*            */
         B     @RC00478                                            0480
@RF00478 CLI   LASTTYPE,2                                          0480
         BNE   @RF00480                                            0480
*                                 MMLMD=ON;/*                        */
         OI    MMLMD,B'00100000'                                   0481
*                               ELSE/*                               */
*                                 IF LASTTYPE=IOPASM THEN/*          */
         B     @RC00480                                            0482
@RF00480 CLI   LASTTYPE,1                                          0482
         BNE   @RF00482                                            0482
*                                   MMASM=ON;/*                      */
         OI    MMASM,B'01000000'                                   0483
*                                 ELSE/*                             */
*                                   IF LASTTYPE=IOPFMD THEN/*        */
         B     @RC00482                                            0484
@RF00482 CLI   LASTTYPE,14                                         0484
         BNE   @RF00484                                            0484
*                                    MMFMD=ON;/*                     */
         OI    MMFMD,B'01000000'                                   0485
*             END;                  /*                               */
@RF00484 DS    0H                                                  0486
@RC00482 DS    0H                                                  0486
@RC00480 DS    0H                                                  0486
@RC00478 DS    0H                                                  0486
@RC00476 DS    0H                                                  0486
@RC00474 DS    0H                                                  0486
@RC00472 DS    0H                                                  0486
@RC00470 DS    0H                                                  0486
@RC00468 DS    0H                                                  0486
@RC00466 DS    0H                                                  0486
@RC00464 DS    0H                                                  0487
*         END;                      /*                               */
@RC00453 DS    0H                                                  0488
*       RFY                                                        0488
*         RTNCODE UNRSTD;           /*                               */
@RF00451 DS    0H                                                  0489
*     END;                          /*                               */
*   RETURN CODE(FMTRC);             /*                               */
@RF00436 LR    @15,FMTRC                                           0490
         L     @14,@SA00005                                        0490
         LM    @00,@12,@SA00005+8                                  0490
         BR    @14                                                 0490
*   END LIDFORMT;                   /*                               */
         EJECT
*                                                                  0492
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHICH REPORT TO PRINT AND CALL THE PROCESSING PROG  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0492
*LIDRPT:                                                           0492
*   PROCEDURE;                      /*                               */
LIDRPT   STM   @14,@12,@SA00006                                    0492
*   DECLARE                                                        0493
*     RPTRC FIXED;                  /*                               */
*   RFY                                                            0494
*     HMASMGTP BASED(SETPTR);       /*                               */
*   RFY                                                            0495
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   RPTRC=ZERO;                     /* CHECK THE MODE AND            */
         SLR   RPTRC,RPTRC                                         0496
*   IOPBUFAD=ADDR(OUTAREA);         /* PTR TO HEADING BUFFER         */
*                                                                  0497
         LA    @07,OUTAREA                                         0497
         ST    @07,IOPBUFAD(,IOPPTR)                               0497
*   /*****************************************************************/
*   /*                                                               */
*   /* DELETE ANY EXISTING HEADINGS                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0498
*   IOPDSID=CCALSTDS;               /* CALL THE I/O ROUTINE          */
         MVC   IOPDSID(1,IOPPTR),CCALSTDS(CCAPTR)                  0498
*   IOPFUNCT=IOPWRITE;              /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0499
*   PRLFLGS=OFF;                    /*                               */
         MVI   PRLFLGS(@07),B'00000000'                            0500
*   PRLHEADO=ON;                    /*                               */
         OI    PRLHEADO(@07),B'01000000'                           0501
*   CALL HMASMIO(HMASMIOP);         /*                               */
         ST    IOPPTR,@AL00001                                     0502
         L     @15,@CV01381                                        0502
         LA    @01,@AL00001                                        0502
         BALR  @14,@15                                             0502
*   RPTRC=MAX(RPTRC,IOPRETRN);      /*                               */
         SLR   @07,@07                                             0503
         IC    @07,IOPRETRN(,IOPPTR)                               0503
         CR    RPTRC,@07                                           0503
         BNL   *+6
         LR    RPTRC,@07                                           0503
*   PRLFLGS=OFF;                    /* RESET FLAGS                   */
*                                                                  0504
         L     @07,IOPBUFAD(,IOPPTR)                               0504
         MVI   PRLFLGS(@07),B'00000000'                            0504
*   /*****************************************************************/
*   /*                                                               */
*   /* FORMAT EITHER SELECT OR MASS SUMMARY REPORT                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0505
*   IF LISTSEL=ON THEN                                             0505
         L     @07,@PC00001                                        0505
         TM    LISTSEL(@07),B'10000000'                            0505
         BNO   @RF00505                                            0505
*     DO;                           /* PROCESS THE REQUEST           */
*       GTPBUFAD=ADDR(HMASMSET);    /* THE FOLLOWING CODE            */
         LA    @07,HMASMSET                                        0507
         ST    @07,GTPBUFAD(,SETPTR)                               0507
*       GTPRCDLN=LENGTH(HMASMSET);  /* WILL PROCESS SELECT           */
         MVC   GTPRCDLN(2,SETPTR),@CH00033                         0508
*       GTPKEYLN=LENGTH(SELSTENT);  /* MODE REQUESTS                 */
         MVC   GTPKEYLN(2,SETPTR),@CH00034                         0509
*       GTPFUNCT=GTPOPENN;          /* RESET THE POINTER TO THE TOP
*                                      OF THE SELECT/EXCLUDE TABLE   */
         MVI   GTPFUNCT(SETPTR),X'01'                              0510
*       CALL HMASMGTA(HMASMGTP);                                   0511
         ST    SETPTR,@AL00001                                     0511
         L     @15,@CV01383                                        0511
         LA    @01,@AL00001                                        0511
         BALR  @14,@15                                             0511
*       RPTRC=MAX(RPTRC,GTPRETRN);  /*                               */
         SLR   @07,@07                                             0512
         IC    @07,GTPRETRN(,SETPTR)                               0512
         CR    RPTRC,@07                                           0512
         BNL   *+6
         LR    RPTRC,@07                                           0512
*       IF RPTRC=ZERO THEN                                         0513
         LTR   RPTRC,RPTRC                                         0513
         BNZ   @RF00513                                            0513
*         DO;                       /*                               */
*           CALL SELRPT;            /*                               */
         BAL   @14,SELRPT                                          0515
*           RFY                                                    0516
*             RTNCODE RSTD;         /*                               */
*           RPTRC=MAX(RPTRC,RTNCODE);                              0517
         CR    RPTRC,RTNCODE                                       0517
         BNL   *+6
         LR    RPTRC,RTNCODE                                       0517
*           RFY                                                    0518
*             RTNCODE UNRSTD;       /*                               */
*         END;                      /*                               */
*     END;                          /*                               */
@RF00513 DS    0H                                                  0521
*   IF LISTSEL=OFF THEN                                            0521
@RF00505 L     @07,@PC00001                                        0521
         TM    LISTSEL(@07),B'10000000'                            0521
         BNZ   @RF00521                                            0521
*     DO;                           /*                               */
*       CALL MASSMRPT;              /*                               */
         BAL   @14,MASSMRPT                                        0523
*       RFY                                                        0524
*         RTNCODE RSTD;             /*                               */
*       RPTRC=MAX(RPTRC,RTNCODE);   /*                               */
         CR    RPTRC,RTNCODE                                       0525
         BNL   *+6
         LR    RPTRC,RTNCODE                                       0525
*       RFY                                                        0526
*         RTNCODE UNRSTD;           /*                               */
*     END;                          /*                               */
*   IOPBUFAD=SAVBUFAD;              /* RESTORE BUFFER ADDRESS        */
@RF00521 ST    SAVBUFAD,IOPBUFAD(,IOPPTR)                          0528
*   RETURN CODE(RPTRC);             /*                               */
         LR    @15,RPTRC                                           0529
         L     @14,@SA00006                                        0529
         LM    @00,@12,@SA00006+8                                  0529
         BR    @14                                                 0529
*   END LIDRPT;                     /*                               */
         EJECT
*                                                                  0531
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS WILL FORMAT AND PRINT THE SELECT MODE REPORT             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0531
*SELRPT:                                                           0531
*   PROCEDURE;                      /*                               */
SELRPT   STM   @14,@12,@SA00007                                    0531
*   DECLARE                                                        0532
*     SETRC FIXED;                  /*                               */
*   DECLARE                                                        0533
*     SELNFRC FIXED;                /*                               */
*   RFY                                                            0534
*     HMASMGTP BASED(SETPTR);       /* NEW PAGE HEADINGS             */
*   RFY                                                            0535
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   SELNFRC=ZERO;                   /* RESET RC TO ZERO              */
         SLR   SELNFRC,SELNFRC                                     0536
*   SETRC=ZERO;                     /* RESET RC TO ZERO              */
         SLR   SETRC,SETRC                                         0537
*   SELDSID=TXTDSID;                /*                               */
*                                                                  0538
         MVC   SELDSID(8),TXTDSID                                  0538
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP THE NEW HEADINGS                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0539
*   PRLRLEN=LENGTH(PRTBUF);                                        0539
         L     @07,IOPBUFAD(,IOPPTR)                               0539
         MVC   PRLRLEN(2,@07),@CH01433                             0539
*   PRLFLGS=OFF;                    /*                               */
         MVI   PRLFLGS(@07),B'00000000'                            0540
*   PRLHEAD=ON;                     /*                               */
         OI    PRLHEAD(@07),B'10000000'                            0541
*   PRLHDADR=ADDR(SELHD1);          /* SETUP HEADING#1               */
         LA    @03,SELHD1                                          0542
         STCM  @03,7,PRLHDADR(@07)                                 0542
*   CALL HMASMIO(HMASMIOP);                                        0543
         ST    IOPPTR,@AL00001                                     0543
         L     @15,@CV01381                                        0543
         LA    @01,@AL00001                                        0543
         BALR  @14,@15                                             0543
*   IF IOPRETRN=IOPGOOD             /*                               */
*     THEN                          /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0544
         BNE   @RF00544                                            0544
*     DO;                           /*                               */
*       PRLBLANK=ON;                /* ONE BLANK LINE                */
         L     @07,IOPBUFAD(,IOPPTR)                               0546
         OI    PRLBLANK(@07),B'00100000'                           0546
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    IOPPTR,@AL00001                                     0547
         L     @15,@CV01381                                        0547
         LA    @01,@AL00001                                        0547
         BALR  @14,@15                                             0547
*       IF IOPRETRN=IOPGOOD         /*                               */
*         THEN                      /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0548
         BNE   @RF00548                                            0548
*         DO;                       /*                               */
*           PRLBLANK=OFF;           /*                               */
         L     @07,IOPBUFAD(,IOPPTR)                               0550
         NI    PRLBLANK(@07),B'11011111'                           0550
*           PRLHDADR=ADDR(SELHD2);  /* HEADING#2                     */
         LA    @03,SELHD2                                          0551
         STCM  @03,7,PRLHDADR(@07)                                 0551
*           CALL HMASMIO(HMASMIOP); /*                               */
         ST    IOPPTR,@AL00001                                     0552
         L     @15,@CV01381                                        0552
         LA    @01,@AL00001                                        0552
         BALR  @14,@15                                             0552
*           IF IOPRETRN=IOPGOOD     /*                               */
*             THEN                  /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0553
         BNE   @RF00553                                            0553
*             DO;                   /*                               */
*               PRLBLANK=ON;        /* ONE BLANK LINE                */
         L     @07,IOPBUFAD(,IOPPTR)                               0555
         OI    PRLBLANK(@07),B'00100000'                           0555
*               CALL HMASMIO(HMASMIOP);/* CALL THE I/O ROUTINE       */
         ST    IOPPTR,@AL00001                                     0556
         L     @15,@CV01381                                        0556
         LA    @01,@AL00001                                        0556
         BALR  @14,@15                                             0556
*               IF IOPRETRN=IOPGOOD /*                               */
*                 THEN              /* ANOTHER BLANK LINE            */
         CLI   IOPRETRN(IOPPTR),0                                  0557
         BNE   @RF00557                                            0557
*                 CALL HMASMIO(HMASMIOP);/*                          */
         ST    IOPPTR,@AL00001                                     0558
         L     @15,@CV01381                                        0558
         LA    @01,@AL00001                                        0558
         BALR  @14,@15                                             0558
*               IF IOPRETRN=IOPGOOD /*                               */
*                 THEN              /*                               */
@RF00557 CLI   IOPRETRN(IOPPTR),0                                  0559
         BNE   @RF00559                                            0559
*                 DO;               /*                               */
*                   PRLBLANK=OFF;   /* HEADER#3                      */
         L     @07,IOPBUFAD(,IOPPTR)                               0561
         NI    PRLBLANK(@07),B'11011111'                           0561
*                   PRLHDADR=ADDR(SELHD3);/*                         */
         LA    @03,SELHD3                                          0562
         STCM  @03,7,PRLHDADR(@07)                                 0562
*                   CALL HMASMIO(HMASMIOP);/*                        */
         ST    IOPPTR,@AL00001                                     0563
         L     @15,@CV01381                                        0563
         LA    @01,@AL00001                                        0563
         BALR  @14,@15                                             0563
*                 END;              /*                               */
*             END;                  /*                               */
@RF00559 DS    0H                                                  0566
*         END;                      /*                               */
@RF00553 DS    0H                                                  0567
*     END;                          /*                               */
@RF00548 DS    0H                                                  0568
*   PRLFLGS=OFF;                                                   0568
@RF00544 L     @07,IOPBUFAD(,IOPPTR)                               0568
         MVI   PRLFLGS(@07),B'00000000'                            0568
*   SETRC=IOPRETRN;                 /*                               */
         SLR   SETRC,SETRC                                         0569
         IC    SETRC,IOPRETRN(,IOPPTR)                             0569
*                                                                  0570
*   /*****************************************************************/
*   /*                                                               */
*   /* SELECT MODE READ LOOP                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0570
*   GTPFUNCT=GTPGETN;               /* SETUP GETNEXT PROCESSING      */
         MVI   GTPFUNCT(SETPTR),X'08'                              0570
*   DO WHILE SETRC=ZERO;            /* START OF SELECT MODE READ LOOP
*                                      GET A RECORD FROM THE S E T 0571
*                                      AND CHECK THE                 */
         B     @DE00571                                            0571
@DL00571 DS    0H                                                  0572
*     CALL HMASMGTA(HMASMGTP);      /* SEFOUND BIT IF ON READ ANOTHER
*                                      RECORD                        */
         ST    SETPTR,@AL00001                                     0572
         L     @15,@CV01383                                        0572
         LA    @01,@AL00001                                        0572
         BALR  @14,@15                                             0572
*     SETRC=MAX(SETRC,GTPRETRN);    /* ONLY PROCESS IF THE SEFOUND 0573
*                                      BIT IS OFF                    */
         SLR   @07,@07                                             0573
         IC    @07,GTPRETRN(,SETPTR)                               0573
         CR    SETRC,@07                                           0573
         BNL   *+6
         LR    SETRC,@07                                           0573
*     IF SETRC=ZERO&SEFOUND=OFF THEN                               0574
         LTR   SETRC,SETRC                                         0574
         BNZ   @RF00574                                            0574
         TM    SEFOUND,B'00000001'                                 0574
         BNZ   @RF00574                                            0574
*       DO;                         /* IF ENTRY HAS THE FOUND BIT ON
*                                      THEN GET ANOTHER RECORD       */
*         SELNFRC=PTFWARN;          /* THIS IS CHECKED IN THE LIDRPT
*                                      PROC AND WILL PASS ON A LIST
*                                      RETURN CODE OF FOUR(4)        */
         LA    SELNFRC,4                                           0576
*         IF SEMCS=ON THEN          /*                               */
         TM    SEMCS,B'00000010'                                   0577
         BNO   @RF00577                                            0577
*           SELTYPE=MCS;            /* IF ENTRY WAS NOT              */
         MVC   SELTYPE(8),@CC01392                                 0578
*         IF SESMD=ON THEN          /* ANOTHER RECORD                */
@RF00577 TM    SESMD,B'00000001'                                   0579
         BNO   @RF00579                                            0579
*           SELTYPE=SYSMOD;         /*                               */
         MVC   SELTYPE(8),@CC01394                                 0580
*         IF SESRC=ON THEN          /* ANOTHER RECORD                */
@RF00579 TM    SESRC,B'10000000'                                   0581
         BNO   @RF00581                                            0581
*           SELTYPE=SOURCE;         /* TYPES ARE CHECKED             */
         MVC   SELTYPE(8),@CC01396                                 0582
*         IF SESYS=ON THEN          /* ANOTHER RECORD                */
@RF00581 TM    SESYS,B'00000001'                                   0583
         BNO   @RF00583                                            0583
*           SELTYPE=SYSTEM;         /*                               */
         MVC   SELTYPE(8),@CC01398                                 0584
*         IF SEDLB=ON THEN          /* ANOTHER RECORD                */
@RF00583 TM    SEDLB,B'01000000'                                   0585
         BNO   @RF00585                                            0585
*           SELTYPE=DLIB;           /*                               */
         MVC   SELTYPE(8),@CC01400                                 0586
*         IF SEMOD=ON THEN          /* ANOTHER RECORD                */
@RF00585 TM    SEMOD,B'00100000'                                   0587
         BNO   @RF00587                                            0587
*           SELTYPE=MODULE;         /*                               */
         MVC   SELTYPE(8),@CC01402                                 0588
*         IF SEMAC=ON THEN          /* ANOTHER RECORD                */
@RF00587 TM    SEMAC,B'00010000'                                   0589
         BNO   @RF00589                                            0589
*           SELTYPE=MACRO;          /*                               */
         MVC   SELTYPE(8),@CC01404                                 0590
*         IF SELMD=ON THEN          /* ANOTHER RECORD                */
@RF00589 TM    SELMD,B'00001000'                                   0591
         BNO   @RF00591                                            0591
*           SELTYPE=LOADMOD;        /*                               */
         MVC   SELTYPE(8),@CC01408                                 0592
*         IF SEASM=ON THEN          /* ANOTHER RECORD                */
@RF00591 TM    SEASM,B'00000100'                                   0593
         BNO   @RF00593                                            0593
*           SELTYPE=ASSEMBLY;       /*                               */
         MVC   SELTYPE(8),@CC01410                                 0594
*         IF SEFMD=ON THEN          /* ANOTHER RECORD                */
@RF00593 TM    SEFMD,B'00000010'                                   0595
         BNO   @RF00595                                            0595
*           SELTYPE=FMID;           /*                               */
         MVC   SELTYPE(8),@CC01406                                 0596
*         SELNAME=SENAME;           /* ENTER THE NAME AFTER FINDING
*                                      THE NOT FOUND ENTRY CALL      */
@RF00595 MVC   SELNAME(8),SENAME                                   0597
*         CALL LIDWRITE;            /* THE PRINT ROUTINE             */
         BAL   @14,LIDWRITE                                        0598
*         RFY                       /*                               */
*           RTNCODE RSTD;           /*                               */
*         SETRC=MAX(SETRC,RTNCODE); /*                               */
         CR    SETRC,RTNCODE                                       0600
         BNL   *+6
         LR    SETRC,RTNCODE                                       0600
*         RFY                       /*                               */
*           RTNCODE UNRSTD;         /*                               */
*       END;                        /* IF ZERO THEN READ             */
*   END;                            /* ANOTHER RECORD                */
@RF00574 DS    0H                                                  0603
@DE00571 LTR   SETRC,SETRC                                         0603
         BZ    @DL00571                                            0603
*   IF GTPRETRN=GTPEOF&SETRC=GTPEOF THEN                           0604
         CLI   GTPRETRN(SETPTR),4                                  0604
         BNE   @RF00604                                            0604
         CH    SETRC,@CH00098                                      0604
         BNE   @RF00604                                            0604
*     SETRC=ZERO;                   /* RESET RETURN CODE TO          */
         SLR   SETRC,SETRC                                         0605
*   SETRC=MAX(SETRC,SELNFRC);                                      0606
@RF00604 CR    SETRC,SELNFRC                                       0606
         BNL   *+6
         LR    SETRC,SELNFRC                                       0606
*   RETURN CODE(SETRC);             /* ZERO IF EOF RETURN            */
         LR    @15,SETRC                                           0607
         L     @14,@SA00007                                        0607
         LM    @00,@12,@SA00007+8                                  0607
         BR    @14                                                 0607
*   END SELRPT;                                                    0608
*                                                                  0609
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP THE HEADING AND FORMAT EACH ENTRY FOR MASSMODE REPORT   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0609
*MASSMRPT:                                                         0609
*   PROCEDURE;                                                     0609
MASSMRPT STM   @14,@12,@SA00008                                    0609
*   DECLARE                                                        0610
*     MASRC FIXED(8);                                              0610
*   RFY                                                            0611
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   MASRC=ZERO;                     /*                               */
         SLR   MASRC,MASRC                                         0612
*   MASDSID=TXTDSID;                /*                               */
         MVC   MASDSID(8),TXTDSID                                  0613
*   PRLHEAD=ON;                     /*                               */
*   PRLHEADO=OFF;                   /*                               */
         L     @07,IOPBUFAD(,IOPPTR)                               0615
         OI    PRLHEAD(@07),B'10000000'                            0615
         NI    PRLHEADO(@07),B'10111111'                           0615
*   PRLHDADR=ADDR(MMHD1);           /* HEADING#1                     */
         LA    @15,MMHD1                                           0616
         STCM  @15,7,PRLHDADR(@07)                                 0616
*   CALL HMASMIO(HMASMIOP);         /*                               */
         ST    IOPPTR,@AL00001                                     0617
         L     @15,@CV01381                                        0617
         LA    @01,@AL00001                                        0617
         BALR  @14,@15                                             0617
*   IF IOPRETRN=IOPGOOD             /*                               */
*     THEN                          /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0618
         BNE   @RF00618                                            0618
*     DO;                           /*                               */
*       PRLBLANK=ON;                /* BLANK LINE                    */
         L     @07,IOPBUFAD(,IOPPTR)                               0620
         OI    PRLBLANK(@07),B'00100000'                           0620
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    IOPPTR,@AL00001                                     0621
         L     @15,@CV01381                                        0621
         LA    @01,@AL00001                                        0621
         BALR  @14,@15                                             0621
*       IF IOPRETRN=IOPGOOD         /*                               */
*         THEN                      /*                               */
         CLI   IOPRETRN(IOPPTR),0                                  0622
         BNE   @RF00622                                            0622
*         CALL HMASMIO(HMASMIOP);   /* ANOTHER BLANK LINE            */
         ST    IOPPTR,@AL00001                                     0623
         L     @15,@CV01381                                        0623
         LA    @01,@AL00001                                        0623
         BALR  @14,@15                                             0623
*     END;                          /*                               */
@RF00622 DS    0H                                                  0625
*   MASRC=MAX(MASRC,IOPRETRN);      /*                               */
@RF00618 SLR   @07,@07                                             0625
         IC    @07,IOPRETRN(,IOPPTR)                               0625
         CR    MASRC,@07                                           0625
         BNL   *+6
         LR    MASRC,@07                                           0625
*   PRLBLANK=OFF;                                                  0626
         L     @07,IOPBUFAD(,IOPPTR)                               0626
         NI    PRLBLANK(@07),B'11011111'                           0626
*                                                                  0627
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TYPE OF ENTRIES SPECIFIED FOR LISTING AND THOSE TYPES   */
*   /* ACTUALLY FOUND AND PRODUCE REPORT INDICATING WHICH TYPES WERE */
*   /* REQUESED BUT NOT FOUND                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0627
*   IF MASRC=ZERO THEN                                             0627
         CH    MASRC,@CH00304                                      0627
         BNE   @RF00627                                            0627
*     DO;                           /* PRINT OUT EACH ENTRY NOT FOUND*/
*       RFY                         /*                               */
*         RTNCODE RSTD;             /*                               */
*       IF LISTALL2=OFF             /* IF NOT ALL REQUESTED FOUND    */
*           &LISTPRM2^=MMTBL THEN   /* SET THE RETURN CODE TO        */
         L     @14,@PC00001                                        0630
         TM    LISTALL2(@14),B'10000000'                           0630
         BNZ   @RF00630                                            0630
         CLC   LISTPRM2(2,@14),MMTBL                               0630
         BE    @RF00630                                            0630
*         MASRC=PTFWARN;            /* FOUR(4)                       */
         LA    MASRC,4                                             0631
*       IF(LISTSYS=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMSYS=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTPTS=ON              /*                               */
*           ×LISTACDS=ON            /*                               */
*           ×LISTCDS=ON             /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00630 L     @14,@PC00001                                        0632
         TM    LISTSYS(@14),B'10000001'                            0632
         BZ    @RF00632                                            0632
         TM    MMSYS,B'00000001'                                   0632
         BNZ   @RF00632                                            0632
         TM    LISTPTS(@14),B'01100010'                            0632
         BZ    @RF00632                                            0632
*         DO;                       /*                               */
*           MMNAME=SYSENTRY;        /*                               */
         MVC   MMNAME(28),SYSENTRY                                 0634
*           CALL LIDWRITE;                                         0635
         BAL   @14,LIDWRITE                                        0635
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0636
         BNL   *+6
         LR    MASRC,RTNCODE                                       0636
*         END;                      /*                               */
*       IF(LISTASM=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMASM=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTCDS=ON              /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00632 L     @14,@PC00001                                        0638
         TM    LISTASM(@14),B'11000000'                            0638
         BZ    @RF00638                                            0638
         TM    MMASM,B'01000000'                                   0638
         BNZ   @RF00638                                            0638
         TM    LISTCDS(@14),B'01000000'                            0638
         BNO   @RF00638                                            0638
*         DO;                       /*                               */
*           MMNAME=ASMENTRY;        /*                               */
         MVC   MMNAME(28),ASMENTRY                                 0640
*           CALL LIDWRITE;                                         0641
         BAL   @14,LIDWRITE                                        0641
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0642
         BNL   *+6
         LR    MASRC,RTNCODE                                       0642
*         END;                      /*                               */
*       IF(LISTLMD=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMLMD=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTCDS=ON              /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00638 L     @14,@PC00001                                        0644
         TM    LISTLMD(@14),B'10100000'                            0644
         BZ    @RF00644                                            0644
         TM    MMLMD,B'00100000'                                   0644
         BNZ   @RF00644                                            0644
         TM    LISTCDS(@14),B'01000000'                            0644
         BNO   @RF00644                                            0644
*         DO;                       /*                               */
*           MMNAME=LMDENTRY;        /*                               */
         MVC   MMNAME(28),LMDENTRY                                 0646
*           CALL LIDWRITE;                                         0647
         BAL   @14,LIDWRITE                                        0647
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0648
         BNL   *+6
         LR    MASRC,RTNCODE                                       0648
*         END;                      /*                               */
*       IF(LISTMAC=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMMAC=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTACDS=ON             /*                               */
*           ×LISTCDS=ON             /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00644 L     @14,@PC00001                                        0650
         TM    LISTMAC(@14),B'10010000'                            0650
         BZ    @RF00650                                            0650
         TM    MMMAC,B'00010000'                                   0650
         BNZ   @RF00650                                            0650
         TM    LISTACDS(@14),B'01100000'                           0650
         BZ    @RF00650                                            0650
*         DO;                       /*                               */
*           MMNAME=MACENTRY;        /*                               */
         MVC   MMNAME(28),MACENTRY                                 0652
*           CALL LIDWRITE;                                         0653
         BAL   @14,LIDWRITE                                        0653
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0654
         BNL   *+6
         LR    MASRC,RTNCODE                                       0654
*         END;                      /*                               */
*       IF(LISTMOD=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMMOD=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTACDS=ON             /*                               */
*           ×LISTCDS=ON             /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00650 L     @14,@PC00001                                        0656
         TM    LISTMOD(@14),B'10001000'                            0656
         BZ    @RF00656                                            0656
         TM    MMMOD,B'00001000'                                   0656
         BNZ   @RF00656                                            0656
         TM    LISTACDS(@14),B'01100000'                           0656
         BZ    @RF00656                                            0656
*         DO;                       /*                               */
*           MMNAME=MODENTRY;        /*                               */
         MVC   MMNAME(28),MODENTRY                                 0658
*           CALL LIDWRITE;                                         0659
         BAL   @14,LIDWRITE                                        0659
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0660
         BNL   *+6
         LR    MASRC,RTNCODE                                       0660
*         END;                      /*                               */
*       IF(LISTSRC=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMSRC=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTACDS=ON             /*                               */
*           ×LISTCDS=ON             /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00656 L     @14,@PC00001                                        0662
         TM    LISTSRC(@14),B'10000100'                            0662
         BZ    @RF00662                                            0662
         TM    MMSRC,B'00000100'                                   0662
         BNZ   @RF00662                                            0662
         TM    LISTACDS(@14),B'01100000'                           0662
         BZ    @RF00662                                            0662
*         DO;                       /*                               */
*           MMNAME=SRCENTRY;        /*                               */
         MVC   MMNAME(28),SRCENTRY                                 0664
*           CALL LIDWRITE;                                         0665
         BAL   @14,LIDWRITE                                        0665
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0666
         BNL   *+6
         LR    MASRC,RTNCODE                                       0666
*         END;                      /*                               */
*       IF(LISTDLB=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMDLB=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTCDS=ON              /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00662 L     @14,@PC00001                                        0668
         TM    LISTDLB(@14),B'10000010'                            0668
         BZ    @RF00668                                            0668
         TM    MMDLB,B'00000010'                                   0668
         BNZ   @RF00668                                            0668
         TM    LISTCDS(@14),B'01000000'                            0668
         BNO   @RF00668                                            0668
*         DO;                       /*                               */
*           MMNAME=DLBENTRY;        /*                               */
         MVC   MMNAME(28),DLBENTRY                                 0670
*           CALL LIDWRITE;                                         0671
         BAL   @14,LIDWRITE                                        0671
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0672
         BNL   *+6
         LR    MASRC,RTNCODE                                       0672
*         END;                      /*                               */
*       IF(LISTSMD=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMSMD=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTPTS=ON              /*                               */
*           ×LISTACDS=ON            /*                               */
*           ×LISTCDS=ON             /*                               */
*           ×LISTCRQ=ON             /*                               */
*           ×LISTACRQ=ON            /*                               */
*           ×LISTSCDS=ON            /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00668 L     @14,@PC00001                                        0674
         TM    LISTSMD(@14),B'10000000'                            0674
         BO    @GL00060                                            0674
         TM    LISTALL2(@14),B'10000000'                           0674
         BNO   @RF00674                                            0674
@GL00060 TM    MMSMD,B'10000000'                                   0674
         BNZ   @RF00674                                            0674
         L     @14,@PC00001                                        0674
         TM    LISTPTS(@14),B'01111110'                            0674
         BZ    @RF00674                                            0674
*         DO;                       /*                               */
*           MMNAME=SMDENTRY;        /*                               */
         MVC   MMNAME(28),SMDENTRY                                 0676
*           CALL LIDWRITE;                                         0677
         BAL   @14,LIDWRITE                                        0677
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0678
         BNL   *+6
         LR    MASRC,RTNCODE                                       0678
*         END;                      /*                               */
*       IF(LISTMCS=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMMCS=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTPTS=ON              /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00674 L     @14,@PC00001                                        0680
         TM    LISTMCS(@14),B'00100000'                            0680
         BO    @GL00063                                            0680
         TM    LISTALL2(@14),B'10000000'                           0680
         BNO   @RF00680                                            0680
@GL00063 TM    MMMCS,B'00100000'                                   0680
         BNZ   @RF00680                                            0680
         L     @14,@PC00001                                        0680
         TM    LISTPTS(@14),B'00000010'                            0680
         BNO   @RF00680                                            0680
*         DO;                       /* IN MASS MODE                  */
*           MMNAME=MCSENTRY;        /*                               */
         MVC   MMNAME(28),MCSENTRY                                 0682
*           CALL LIDWRITE;                                         0683
         BAL   @14,LIDWRITE                                        0683
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0684
         BNL   *+6
         LR    MASRC,RTNCODE                                       0684
*         END;                      /*                               */
*       IF(LISTFMD=ON×LISTALL2=ON)  /* IF TYPE REQUESTED             */
*           &MMFMD=OFF              /* BUT NOT FOUND                 */
*           &(                      /* AND TYPE OK FOR DATASET       */
*           LISTACRQ=ON             /*                               */
*           ×LISTCRQ=ON             /*                               */
*           )                       /*                               */
*         THEN                      /*                               */
@RF00680 L     @14,@PC00001                                        0686
         TM    LISTFMD(@14),B'01000000'                            0686
         BO    @GL00066                                            0686
         TM    LISTALL2(@14),B'10000000'                           0686
         BNO   @RF00686                                            0686
@GL00066 TM    MMFMD,B'01000000'                                   0686
         BNZ   @RF00686                                            0686
         L     @14,@PC00001                                        0686
         TM    LISTACRQ(@14),B'00001100'                           0686
         BZ    @RF00686                                            0686
*         DO;                       /*                               */
*           MMNAME=FMDENTRY;        /*                               */
         MVC   MMNAME(28),FMDENTRY                                 0688
*           CALL LIDWRITE;                                         0689
         BAL   @14,LIDWRITE                                        0689
*           MASRC=MAX(MASRC,RTNCODE);/*                              */
         CR    MASRC,RTNCODE                                       0690
         BNL   *+6
         LR    MASRC,RTNCODE                                       0690
*         END;                      /*                               */
*       RFY                         /*                               */
*         RTNCODE UNRSTD;           /*                               */
@RF00686 DS    0H                                                  0693
*     END;                          /*                               */
*   RETURN CODE(MASRC);             /*                               */
@RF00627 LR    @15,MASRC                                           0694
         L     @14,@SA00008                                        0694
         LM    @00,@12,@SA00008+8                                  0694
         BR    @14                                                 0694
*   END MASSMRPT;                   /*                               */
*                                                                  0696
*   /*****************************************************************/
*   /*                                                               */
*   /* P R I N T R O U T I N E                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0696
*LIDWRITE:                                                         0696
*   PROCEDURE;                      /* THIS ROUTINE WILL             */
LIDWRITE STM   @14,@12,@SA00009                                    0696
*   RFY                                                            0697
*     HMASMIOP BASED(IOPPTR);       /* PRINT OUT THE OUTPUT BUFFER   */
*   DECLARE                         /*                               */
*     WTRDSID FIXED(8),             /*                               */
*     WTRFUNCT FIXED(8),            /*                               */
*     WTRBUFAD FIXED(31);           /*                               */
*   WTRDSID=IOPDSID;                /*                               */
         SLR   WTRDSID,WTRDSID                                     0699
         IC    WTRDSID,IOPDSID(,IOPPTR)                            0699
*   WTRFUNCT=IOPFUNCT;              /*                               */
         SLR   WTRFUNCT,WTRFUNCT                                   0700
         IC    WTRFUNCT,IOPFUNCT(,IOPPTR)                          0700
*   WTRBUFAD=IOPBUFAD;              /*                               */
         L     WTRBUFAD,IOPBUFAD(,IOPPTR)                          0701
*   IOPBUFAD=ADDR(OUTAREA);         /* SETUP THE IOP AND THE         */
         LA    @07,OUTAREA                                         0702
         ST    @07,IOPBUFAD(,IOPPTR)                               0702
*   PRLRLEN=LENGTH(PRTBUF);         /* PRL AND THEN CALL I/O         */
         MVC   PRLRLEN(2,@07),@CH01433                             0703
*   PRLHEAD=OFF;                    /* SET PRLFLAGS OFF              */
*   PRLHEADO=OFF;                   /*                               */
*   PRLBLANK=OFF;                   /*                               */
         NI    PRLHEAD(@07),B'00011111'                            0706
*   IOPDSID=CCALSTDS;               /*                               */
         MVC   IOPDSID(1,IOPPTR),CCALSTDS(CCAPTR)                  0707
*   IOPFUNCT=IOPWRITE;              /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0708
*   CALL HMASMIO(HMASMIOP);         /*                               */
         ST    IOPPTR,@AL00001                                     0709
         L     @15,@CV01381                                        0709
         LA    @01,@AL00001                                        0709
         BALR  @14,@15                                             0709
*   PRTBUF(1:LENGTH(PRTBUF))=BLANK; /* CLEANUP THE PRINT BUFFER      */
         MVI   PRTBUF+1,C' '                                       0710
         MVC   PRTBUF+2(119),PRTBUF+1                              0710
         MVI   PRTBUF,C' '                                         0710
*   IOPDSID=WTRDSID;                /*                               */
         STC   WTRDSID,IOPDSID(,IOPPTR)                            0711
*   IOPFUNCT=WTRFUNCT;              /*                               */
         STC   WTRFUNCT,IOPFUNCT(,IOPPTR)                          0712
*   IOPBUFAD=SAVBUFAD;              /* RESTORE THE OLD BUFAD         */
         ST    SAVBUFAD,IOPBUFAD(,IOPPTR)                          0713
*   RETURN CODE(IOPRETRN);          /*                               */
         SLR   @15,@15                                             0714
         IC    @15,IOPRETRN(,IOPPTR)                               0714
         L     @14,@SA00009                                        0714
         LM    @00,@12,@SA00009+8                                  0714
         BR    @14                                                 0714
*   END LIDWRITE;                   /* THE RETURN CODE FROM I/O WILL
*                                      BE CHECKED BY THE CALLING PROG*/
         EJECT
*                                                                  0716
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE CLEANUP PROCEDURE BEFORE EXIT TO CALLING PROCEDURE*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0716
*                                   /*                               */
*LIDCLEAN:                                                         0716
*   PROCEDURE;                      /*                               */
LIDCLEAN STM   @14,@12,@SA00010                                    0716
*   DECLARE                                                        0717
*     CLNRC FIXED(8);               /*                               */
*   RFY                                                            0718
*     HMASMGTP BASED(SETPTR);       /*                               */
*   RFY                                                            0719
*     HMASMIOP BASED(IOPPTR);       /*                               */
*   CLNRC=ZERO;                     /*                               */
         SLR   CLNRC,CLNRC                                         0720
*   OLDSMDNM='';                    /*                               */
         MVI   OLDSMDNM,C' '                                       0721
         MVC   OLDSMDNM+1(6),OLDSMDNM                              0721
*   IF LISTLOG=OFF THEN                                            0722
         L     @15,@PC00001                                        0722
         TM    LISTLOG(@15),B'01000000'                            0722
         BNZ   @RF00722                                            0722
*     DO;                           /* CLOSE OPEN DATASET            */
*       IOPDSID=LISTDSID;                                          0724
         MVC   IOPDSID(1,IOPPTR),LISTDSID                          0724
*       IOPFUNCT=IOPCLOSN;          /*                               */
         MVI   IOPFUNCT(IOPPTR),X'0C'                              0725
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    IOPPTR,@AL00001                                     0726
         L     @15,@CV01381                                        0726
         LA    @01,@AL00001                                        0726
         BALR  @14,@15                                             0726
*       CLNRC=MAX(CLNRC,IOPRETRN);  /*                               */
         SLR   @15,@15                                             0727
         IC    @15,IOPRETRN(,IOPPTR)                               0727
         CR    CLNRC,@15                                           0727
         BNL   *+6
         LR    CLNRC,@15                                           0727
*       IF LISTNOAP=ON THEN                                        0728
         L     @15,@PC00001                                        0728
         TM    LISTNOAP(@15),B'01000000'                           0728
         BNO   @RF00728                                            0728
*         DO;                       /*                               */
*           IOPDSID=IOPCDS;         /*                               */
         MVI   IOPDSID(IOPPTR),X'02'                               0730
*           IOPFUNCT=IOPCLOSN;      /*                               */
         MVI   IOPFUNCT(IOPPTR),X'0C'                              0731
*           CALL HMASMIO(HMASMIOP); /*                               */
         ST    IOPPTR,@AL00001                                     0732
         L     @15,@CV01381                                        0732
         LA    @01,@AL00001                                        0732
         BALR  @14,@15                                             0732
*           CLNRC=MAX(CLNRC,IOPRETRN);/*                             */
         SLR   @15,@15                                             0733
         IC    @15,IOPRETRN(,IOPPTR)                               0733
         CR    CLNRC,@15                                           0733
         BNL   *+6
         LR    CLNRC,@15                                           0733
*         END;                      /*                               */
*       IF LISTNOAC=ON THEN                                        0735
@RF00728 L     @15,@PC00001                                        0735
         TM    LISTNOAC(@15),B'00100000'                           0735
         BNO   @RF00735                                            0735
*         DO;                       /*                               */
*           IOPDSID=IOPACDS;        /*                               */
         MVI   IOPDSID(IOPPTR),X'0C'                               0737
*           IOPFUNCT=IOPCLOSN;      /*                               */
         MVI   IOPFUNCT(IOPPTR),X'0C'                              0738
*           CALL HMASMIO(HMASMIOP); /*                               */
         ST    IOPPTR,@AL00001                                     0739
         L     @15,@CV01381                                        0739
         LA    @01,@AL00001                                        0739
         BALR  @14,@15                                             0739
*           CLNRC=MAX(CLNRC,IOPRETRN);/*                             */
         SLR   @15,@15                                             0740
         IC    @15,IOPRETRN(,IOPPTR)                               0740
         CR    CLNRC,@15                                           0740
         BNL   *+6
         LR    CLNRC,@15                                           0740
*         END;                      /*                               */
*       IOPRETRN=IOPEOF;            /* CALL LC1 TO DO RE-INIT        */
@RF00735 MVI   IOPRETRN(IOPPTR),X'04'                              0742
*       CALL HMASMLC1(LISTPARM,HMASMIOP);/*                          */
         L     @15,@PC00001                                        0743
         ST    @15,@AL00001                                        0743
         ST    IOPPTR,@AL00001+4                                   0743
         L     @15,@CV01386                                        0743
         LA    @01,@AL00001                                        0743
         BALR  @14,@15                                             0743
*       RFY                                                        0744
*         RTNCODE RSTD;             /*                               */
*       CLNRC=MAX(CLNRC,RTNCODE);   /*                               */
         CR    CLNRC,RTNCODE                                       0745
         BNL   *+6
         LR    CLNRC,RTNCODE                                       0745
*       RFY                                                        0746
*         RTNCODE UNRSTD;           /*                               */
*                                                                  0746
*       /*************************************************************/
*       /*                                                           */
*       /* CALL FXF TO DO ITS CLEANUP PROCESSING                     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0747
*       IF LISTXREF=ON              /* IF REQUEST FOR XREF           */
*         THEN                      /*                               */
         L     @15,@PC00001                                        0747
         TM    LISTXREF(@15),B'01000000'                           0747
         BNO   @RF00747                                            0747
*         DO;                       /*                               */
*           IOPRETRN=IOPEOF;        /*                               */
         MVI   IOPRETRN(IOPPTR),X'04'                              0749
*           CALL HMASMFXF(HMASMIOP,CCAGTP1->HMASMGTP);/*             */
         ST    IOPPTR,@AL00001                                     0750
         L     @01,CCAGTP1(,CCAPTR)                                0750
         ST    @01,@AL00001+4                                      0750
         L     @15,@CV01382                                        0750
         LA    @01,@AL00001                                        0750
         BALR  @14,@15                                             0750
*           RFY                                                    0751
*             RTNCODE RSTD;         /*                               */
*           CLNRC=MAX(CLNRC,RTNCODE);/*                              */
         CR    CLNRC,RTNCODE                                       0752
         BNL   *+6
         LR    CLNRC,RTNCODE                                       0752
*           RFY                                                    0753
*             RTNCODE UNRSTD;       /*                               */
*         END;                      /*                               */
*                                                                  0754
*       /*************************************************************/
*       /*                                                           */
*       /* NOW FREE SECOND IOP IF SCDS AND IOP WAS GETMAINED         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0755
*       IF LISTSCDS=ON              /* IF LIST SCDS                  */
*           &SPLPMAD^=ZERO          /* AND IOP GETMAINED             */
*         THEN                      /*                               */
@RF00747 L     @15,@PC00001                                        0755
         TM    LISTSCDS(@15),B'00010000'                           0755
         BNO   @RF00755                                            0755
         ICM   @15,15,SPLPMAD                                      0755
         BZ    @RF00755                                            0755
*         DO;                       /*                               */
*           SPLFUNCT=SPLFMIOP;      /*                               */
         MVI   SPLFUNCT,X'04'                                      0757
*           CALL HMASMSUB(HMASMSPL);/*                               */
         L     @15,@CV01389                                        0758
         LA    @01,@AL00758                                        0758
         BALR  @14,@15                                             0758
*           RFY                     /*                               */
*             RTNCODE RSTD;         /*                               */
*           CLNRC=MAX(CLNRC,RTNCODE);/*                              */
         CR    CLNRC,RTNCODE                                       0760
         BNL   *+6
         LR    CLNRC,RTNCODE                                       0760
*           RFY                     /*                               */
*             RTNCODE UNRSTD;       /*                               */
*         END;                      /*                               */
*                                                                  0762
*       /*************************************************************/
*       /*                                                           */
*       /* NOW DELETE ANY PAGE HEADINGS SET UP DURING PROCESS        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0763
*       IOPDSID=CCALSTDS;           /*                               */
@RF00755 MVC   IOPDSID(1,IOPPTR),CCALSTDS(CCAPTR)                  0763
*       IOPFUNCT=IOPWRITE;          /*                               */
         MVI   IOPFUNCT(IOPPTR),X'51'                              0764
*       PRLFLGS=OFF;                /*                               */
         L     @15,IOPBUFAD(,IOPPTR)                               0765
         MVI   PRLFLGS(@15),B'00000000'                            0765
*       PRLHEADO=ON;                /*                               */
         OI    PRLHEADO(@15),B'01000000'                           0766
*       CALL HMASMIO(HMASMIOP);     /*                               */
         ST    IOPPTR,@AL00001                                     0767
         L     @15,@CV01381                                        0767
         LA    @01,@AL00001                                        0767
         BALR  @14,@15                                             0767
*       CLNRC=MAX(CLNRC,IOPRETRN);  /*                               */
         SLR   @15,@15                                             0768
         IC    @15,IOPRETRN(,IOPPTR)                               0768
         CR    CLNRC,@15                                           0768
         BNL   *+6
         LR    CLNRC,@15                                           0768
*     END;                          /*                               */
*   RETURN CODE(CLNRC);             /*                               */
@RF00722 LR    @15,CLNRC                                           0770
         L     @14,@SA00010                                        0770
         LM    @00,@12,@SA00010+8                                  0770
         BR    @14                                                 0770
*   END LIDCLEAN;                   /*                               */
*   END HMASMLID                    /*                               */
*                                                                  0772
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSET)                                       */
*/*%INCLUDE SYSLIB  (HMASMPRL)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*/*%INCLUDE SYSLIB  (HMASMSPL)                                       */
*                                                                  0772
*       ;                                                          0772
@DATA    DS    0H
@CH00047 DC    H'2'
@CH00098 DC    H'4'
@CH00082 DC    H'8'
@CH00034 DC    H'10'
@CH00033 DC    H'12'
@CH01433 DC    H'121'
         DS    0F
@AL00311 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00758 DC    A(HMASMSPL)             LIST WITH   1 ARGUMENT(S)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00006 DS    15F
@SA00007 DS    15F
@SA00008 DS    15F
@SA00009 DS    0F
@SA00010 DS    0F
@SA00005 DS    0F
@SA00004 DS    0F
@SA00003 DS    0F
@SA00002 DS    0F
         DS    15F
@AL00001 DS    4A
         DS    0F
@CF00304 DC    F'0'
@CH00304 EQU   @CF00304+2
@CV01381 DC    V(HMASMIO)
@CV01382 DC    V(HMASMFXF)
@CV01383 DC    V(HMASMGTA)
@CV01384 DC    V(HMASMLOG)
@CV01385 DC    V(HMASMLCC)
@CV01386 DC    V(HMASMLC1)
@CV01387 DC    V(HMASMLCP)
@CV01388 DC    V(HMASMLCD)
@CV01389 DC    V(HMASMSUB)
@CV01390 DC    V(HMASMXRF)
         DS    0D
@CC01392 DC    C'MCS     '
@CC01394 DC    C'SYSMOD  '
@CC01396 DC    C'SOURCE  '
@CC01398 DC    C'SYSTEM  '
@CC01400 DC    C'DLIB    '
@CC01402 DC    C'MODULE  '
@CC01404 DC    C'MACRO   '
@CC01406 DC    C'FMID    '
@CC01408 DC    C'LMOD    '
@CC01410 DC    C'ASSEMBLY'
@CC01479 DC    C'SMPCDS  '
@CC01481 DC    C'SMPACDS '
@CC01483 DC    C'SMPPTS  '
@CC01485 DC    C'SMPSCDS '
@CC01487 DC    C'SMPCRQ  '
@CC01489 DC    C'SMPACRQ '
HMASMSET DS    CL12
         ORG   HMASMSET
SELSTENT DS    CL10
         ORG   SELSTENT
SELSTFLG DS    BL2
         ORG   SELSTFLG
@NM00176 DS    BL1
SEMCS    EQU   SELSTFLG+0
SESMD    EQU   SELSTFLG+0
SESRC    DS    BL1
SEDLB    EQU   SELSTFLG+1
SEMOD    EQU   SELSTFLG+1
SEMAC    EQU   SELSTFLG+1
SELMD    EQU   SELSTFLG+1
SEASM    EQU   SELSTFLG+1
SEFMD    EQU   SELSTFLG+1
SESYS    EQU   SELSTFLG+1
         ORG   SELSTENT+2
SENAME   DS    CL8
         ORG   SENAME
SESMDNO  DS    CL7
         ORG   SESMDNO
SEPTFNO  DS    CL7
         ORG   SENAME+7
@NM00177 DS    CL1
         ORG   HMASMSET+10
SEFLAGS  DS    BL1
         ORG   SEFLAGS
SEGROUP  DS    BL1
SESELECT EQU   SEFLAGS+0
SEEXCLUD EQU   SEFLAGS+0
SENOJCL  EQU   SEFLAGS+0
SEFMID   EQU   SEFLAGS+0
@NM00178 EQU   SEFLAGS+0
SEFOUND  EQU   SEFLAGS+0
         ORG   HMASMSET+11
SEFLAG2  DS    BL1
         ORG   SEFLAG2
SEFLAG2A DS    BL1
SEFLAG2B EQU   SEFLAG2+0
SEFLAG2C EQU   SEFLAG2+0
SEFLAG2D EQU   SEFLAG2+0
SEFLAG2E EQU   SEFLAG2+0
SEFLAG2F EQU   SEFLAG2+0
SEFLAG2G EQU   SEFLAG2+0
SEFLAG2H EQU   SEFLAG2+0
         ORG   HMASMSET+12
HMASMSPL DS    CL5
         ORG   HMASMSPL
SPLPMAD  DS    AL4
SPLFUNCT DS    FL1
         ORG   HMASMSPL+5
OLDSMDNM DC    CL7'       '
SWITCHES DC    AL2(0)
         ORG   SWITCHES
EOFSW    DS    BL1
FOUNDIT  EQU   SWITCHES+0
SKIPSW   EQU   SWITCHES+0
RPTSW    EQU   SWITCHES+0
@NM00184 EQU   SWITCHES+0
         ORG   SWITCHES+2
         DS    CL2
TYPEAREA DS    CL3
         ORG   TYPEAREA
LASTTYPE DS    FL1
HOLDTYPE DS    FL1
LISTDSID DS    FL1
         ORG   TYPEAREA+3
         DS    CL1
OUTAREA  DS    CL131
         ORG   OUTAREA
PRLPARM1 DS    CL10
PRTBUF   DC    CL121' '
         ORG   OUTAREA+131
         DS    CL1
PATCHLID DS    CL80
         ORG   PATCHLID
@NM00185 DC    80X'FF'
         ORG   PATCHLID+80
SELHD1   DS    CL121
         ORG   SELHD1
@NM00186 DC    CL1' '
@NM00187 DC    CL5'LIST '
@NM00188 DC    CL6'SELECT'
@NM00189 DC    CL20' SUMMARY REPORT FOR '
SELDSID  DC    CL8'XXXXXXXX'
@NM00190 DC    CL81' '
         ORG   SELHD1+121
SELHD2   DS    CL121
         ORG   SELHD2
@NM00191 DC    CL1' '
@NM00192 DC    CL31'THE FOLLOWING SELECTED ENTRIES '
@NM00193 DC    CL27'WERE NOT FOUND OR WERE NOT '
@NM00194 DC    CL20'ELIGIBLE FOR LISTING'
@NM00195 DC    CL42' '
         ORG   SELHD2+121
SELHD3   DS    CL121
         ORG   SELHD3
@NM00196 DC    CL2' '
@NM00197 DC    CL4'TYPE'
@NM00198 DC    CL8' '
@NM00199 DC    CL4'NAME'
@NM00200 DC    CL103' '
         ORG   SELHD3+121
TXTDSID  DS    CL8
MMHD1    DS    CL121
         ORG   MMHD1
@NM00204 DC    CL1' '
@NM00205 DC    CL29'LIST MASS SUMMARY REPORT FOR '
MASDSID  DS    CL8
@NM00206 DC    CL83' '
         ORG   MMHD1+121
MMTBL    DS    BL2
         ORG   MMTBL
MMALL    DS    BL1
MMASM    EQU   MMTBL+0
MMLMD    EQU   MMTBL+0
MMMAC    EQU   MMTBL+0
MMMOD    EQU   MMTBL+0
MMSRC    EQU   MMTBL+0
MMDLB    EQU   MMTBL+0
MMSYS    EQU   MMTBL+0
MMSMD    DS    BL1
MMFMD    EQU   MMTBL+1
MMMCS    EQU   MMTBL+1
@NM00209 EQU   MMTBL+1
         ORG   MMTBL+2
MMLINES  DS    CL280
         ORG   MMLINES
ASMENTRY DC    CL28'ASSEM     ENTRIES NOT FOUND '
MACENTRY DC    CL28'MACRO     ENTRIES NOT FOUND '
LMDENTRY DC    CL28'LMOD      ENTRIES NOT FOUND '
MODENTRY DC    CL28'MODULE    ENTRIES NOT FOUND '
SRCENTRY DC    CL28'SOURCE    ENTRIES NOT FOUND '
DLBENTRY DC    CL28'DLIB      ENTRIES NOT FOUND '
SYSENTRY DC    CL28'SYSTEM    ENTRY   NOT FOUND '
SMDENTRY DC    CL28'SYSMOD    ENTRIES NOT FOUND '
FMDENTRY DC    CL28'FMID      ENTRIES NOT FOUND '
MCSENTRY DC    CL28'MCS       ENTRIES NOT FOUND '
         ORG   MMLINES+280
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CLNRC    EQU   @03
WTRBUFAD EQU   @05
WTRFUNCT EQU   @03
WTRDSID  EQU   @04
MASRC    EQU   @03
SELNFRC  EQU   @05
SETRC    EQU   @03
RPTRC    EQU   @03
FMTRC    EQU   @03
SELRC    EQU   @03
MASSRC   EQU   @03
INITRC   EQU   @03
SAVBUFAD EQU   @06
LIDRTNCD EQU   @03
LIDRC    EQU   @05
GTPPTR1  EQU   @05
SETPTR   EQU   @04
IOPPTR   EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
CCASETAD EQU   CCASEGTP
CCAGTP1  EQU   CCAFGTP+4
@NM00014 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCALSTDS EQU   CCAFCTL+8
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00030 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00032 EQU   CCABLDLL
CCALKDRC EQU   @NM00032+20
@NM00034 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00034+20
@NM00036 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00036+20
@NM00038 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00038+20
@NM00040 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00040+20
@NM00042 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00042+20
@NM00044 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00044+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
@NM00048 EQU   HMASMIOP+12
@NM00049 EQU   @NM00048
IOPPTFNM EQU   @NM00049
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00159 EQU   IOPQSMIF
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
HMASMPRL EQU   0
PRLRLEN  EQU   HMASMPRL
PRLSPAN  EQU   HMASMPRL+2
PRLFLGS  EQU   PRLSPAN
PRLHEAD  EQU   PRLFLGS
PRLHEADO EQU   PRLFLGS
PRLBLANK EQU   PRLFLGS
PRLDATE  EQU   HMASMPRL+4
PRLHDADR EQU   PRLDATE
PRLTIME  EQU   HMASMPRL+7
PRLEND   EQU   HMASMPRL+10
HMASMGTP EQU   0
GTPFUNCT EQU   HMASMGTP
GTPRETRN EQU   HMASMGTP+1
GTPRCDLN EQU   HMASMGTP+4
GTPKEYLN EQU   HMASMGTP+6
GTPBUFAD EQU   HMASMGTP+12
GTPRESTR EQU   HMASMGTP+16
GTPFLGS1 EQU   HMASMGTP+26
SPLPPACK EQU   0
SPLPUNPK EQU   0
SPLPDSN  EQU   0
SPLODSN  EQU   SPLPDSN
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
LISTPARM EQU   0
LISTPRM1 EQU   LISTPARM
LISTCDS  EQU   LISTPRM1
LISTACDS EQU   LISTPRM1
LISTSCDS EQU   LISTPRM1
LISTCRQ  EQU   LISTPRM1
LISTACRQ EQU   LISTPRM1
LISTPTS  EQU   LISTPRM1
LISTLOG  EQU   LISTPRM1+1
LISTPRM2 EQU   LISTPARM+2
LISTALL2 EQU   LISTPRM2
LISTASM  EQU   LISTPRM2
LISTLMD  EQU   LISTPRM2
LISTMAC  EQU   LISTPRM2
LISTMOD  EQU   LISTPRM2
LISTSRC  EQU   LISTPRM2
LISTDLB  EQU   LISTPRM2
LISTSYS  EQU   LISTPRM2
LISTSMD  EQU   LISTPRM2+1
LISTFMD  EQU   LISTPRM2+1
LISTMCS  EQU   LISTPRM2+1
LISTPRM3 EQU   LISTPARM+4
LISTNOAP EQU   LISTPRM3
LISTNOAC EQU   LISTPRM3
LISTPRM4 EQU   LISTPARM+6
LISTSEL  EQU   LISTPRM4
LISTXREF EQU   LISTPRM4
LISTDATE EQU   LISTPARM+7
LISTBDAT EQU   LISTDATE
LISTEDAT EQU   LISTDATE+6
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00055 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00066 EQU   IOPUDATA
@NM00067 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00076 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00087 EQU   IOPSRCDR+1
@NM00089 EQU   @NM00087+7
@NM00093 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00097 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00103 EQU   IOPMODDR+1
@NM00105 EQU   @NM00103+7
@NM00109 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00113 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00124 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00131 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00140 EQU   IOPPTFFX
@NM00141 EQU   @NM00140
IOPPDTES EQU   IOPPTFFX+41
@NM00144 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00169 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00169
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00173 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00173
IOPBFTB1 EQU   IOPBFTB0
SELIST   EQU   PRTBUF
SELTYPE  EQU   SELIST+1
SELNAME  EQU   SELIST+13
MMLIST   EQU   PRTBUF
MMNAME   EQU   MMLIST+1
PRLDATA  EQU   PRLEND
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00208 EQU   MMLIST+29
@NM00207 EQU   MMLIST
@NM00203 EQU   SELIST+21
@NM00202 EQU   SELIST+9
@NM00201 EQU   SELIST
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00175 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00174 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00172 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00171 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00170 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00168 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00167 EQU   IOPPTSFX+35
@NM00166 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00165 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00164 EQU   IOPPTSDR
IOPQFMTP EQU   IOPQFMLS+8
@NM00163 EQU   IOPQFMLS+7
IOPQFMND EQU   IOPQFMNM
@NM00162 EQU   IOPQFMDR
@NM00158 EQU   IOPQSMDR
@NM00157 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00156 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00155 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00154 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00153 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00152 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00151 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00150 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00149 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00148 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00147 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00146 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00145 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00144+3
IOPRECD  EQU   @NM00144
@NM00143 EQU   IOPPTFFX+8
@NM00142 EQU   @NM00140+7
IOPPRELN EQU   @NM00141
@NM00139 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00138 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00137 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00136 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00135 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00134 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00133 EQU   @NM00131+7
@NM00132 EQU   @NM00131
@NM00130 EQU   IOPSYSDR+5
@NM00129 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00128 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00127 EQU   IOPDLBFX+8
@NM00126 EQU   @NM00124+7
@NM00125 EQU   @NM00124
@NM00123 EQU   IOPDLBDR+1
@NM00122 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00121 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00120 EQU   IOPMODFX+12
@NM00119 EQU   IOPMODF4
@NM00118 EQU   IOPMODF3
@NM00117 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00116 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00115 EQU   @NM00113+7
@NM00114 EQU   @NM00113
@NM00112 EQU   IOPMODDR+17
@NM00111 EQU   @NM00109+7
@NM00110 EQU   @NM00109
@NM00108 EQU   @NM00105
@NM00107 EQU   @NM00105
@NM00106 EQU   @NM00105
@NM00104 EQU   @NM00103
@NM00102 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00101 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00100 EQU   IOPSRCFX+8
@NM00099 EQU   @NM00097+7
@NM00098 EQU   @NM00097
@NM00096 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00095 EQU   @NM00093+7
@NM00094 EQU   @NM00093
@NM00092 EQU   @NM00089
@NM00091 EQU   @NM00089
@NM00090 EQU   @NM00089
@NM00088 EQU   @NM00087
@NM00086 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00085 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00084 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00083 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00082 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00081 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00080 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00078 EQU   @NM00076+7
@NM00077 EQU   @NM00076
@NM00075 EQU   IOPLMDDR+6
@NM00074 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00073 EQU   IOPLMDF4
@NM00072 EQU   IOPLMDF3
@NM00071 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00070 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00069 EQU   IOPLMDDR
@NM00068 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00067+4
IOPUSED  EQU   @NM00067
IOPTPSEQ EQU   @NM00066+8
IOPVLSER EQU   @NM00066+2
IOPBLKSI EQU   @NM00066
IOPCQMAX EQU   IOPCQMAP+12
@NM00065 EQU   IOPCQMAP+11
@NM00064 EQU   IOPCQMAP+8
@NM00063 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00062 EQU   IOPSCMAP+11
@NM00061 EQU   IOPSCMAP+8
@NM00060 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00059 EQU   IOPNTMAX+11
@NM00058 EQU   IOPNTMAX+8
@NM00057 EQU   IOPNTMAX
@NM00056 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00055+5
IOPIPTF3 EQU   @NM00055
LISTEYY  EQU   LISTEDAT+4
LISTEDD  EQU   LISTEDAT+2
LISTEMM  EQU   LISTEDAT
LISTBYY  EQU   LISTBDAT+4
LISTBDD  EQU   LISTBDAT+2
LISTBMM  EQU   LISTBDAT
@NM00005 EQU   LISTPRM4
@NM00004 EQU   LISTPRM3+1
LISTERR  EQU   LISTPRM3+1
LISTBYP  EQU   LISTPRM3+1
LISTDEL  EQU   LISTPRM3+1
LISTNSUP EQU   LISTPRM3+1
LISTSUP  EQU   LISTPRM3+1
LISTUSER EQU   LISTPRM3
LISTAPAR EQU   LISTPRM3
LISTPTF  EQU   LISTPRM3
LISTFUNC EQU   LISTPRM3
LISTRES  EQU   LISTPRM3
LISTALL3 EQU   LISTPRM3
@NM00003 EQU   LISTPRM2+1
@NM00002 EQU   LISTPRM1+1
@NM00001 EQU   LISTPRM1
LISTALL1 EQU   LISTPRM1
SPLIFIL  EQU   SPLODSN+33
SPLISMD  EQU   SPLODSN+26
SPLIPFX  EQU   SPLODSN
SPLIUNPK EQU   SPLPUNPK+8
SPLOUNPK EQU   SPLPUNPK
SPLOPACK EQU   SPLPPACK+8
SPLIPACK EQU   SPLPPACK
@NM00183 EQU   HMASMGTP+27
GTPPSIZE EQU   GTPFLGS1
@NM00182 EQU   GTPFLGS1
GTPRCDNF EQU   GTPFLGS1
GTPNOSPM EQU   GTPFLGS1
GTPPOS   EQU   GTPRESTR+8
GTPRCD   EQU   GTPRESTR+4
GTPPAG   EQU   GTPRESTR
GTPWKAD  EQU   HMASMGTP+8
@NM00181 EQU   HMASMGTP+2
PRLCONC  EQU   PRLTIME+2
@NM00180 EQU   PRLTIME
@NM00179 EQU   PRLFLGS
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00161 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00160 EQU   @NM00159+7
IOPQSMFM EQU   @NM00159
@NM00079 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00054 EQU   IOPUSERL
@NM00053 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00052 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00051 EQU   @NM00048+10
IOPSEQNO EQU   @NM00048+8
@NM00050 EQU   @NM00049+7
IOPNAM17 EQU   IOPNAME
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00047 EQU   CCABLDLM+2
@NM00046 EQU   CCABLDLM
CCAUPDPM EQU   @NM00044+24
@NM00045 EQU   @NM00044+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00044+12
CCAUPDTE EQU   @NM00044+8
CCAUPDNM EQU   @NM00044
CCASUPPM EQU   @NM00042+24
@NM00043 EQU   @NM00042+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00042+12
CCAIOSUP EQU   @NM00042+8
CCASUPNM EQU   @NM00042
CCAZAPPM EQU   @NM00040+24
@NM00041 EQU   @NM00040+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00040+12
CCASPZAP EQU   @NM00040+8
CCAZAPNM EQU   @NM00040
CCACOMPM EQU   @NM00038+24
@NM00039 EQU   @NM00038+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00038+12
CCACOMRS EQU   @NM00038+8
CCACOMNM EQU   @NM00038
CCACPYPM EQU   @NM00036+24
@NM00037 EQU   @NM00036+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00036+12
CCACOPY  EQU   @NM00036+8
CCACPYNM EQU   @NM00036
CCAASMPM EQU   @NM00034+24
@NM00035 EQU   @NM00034+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00034+12
CCAASM   EQU   @NM00034+8
CCAASMNM EQU   @NM00034
CCALKDPM EQU   @NM00032+24
@NM00033 EQU   @NM00032+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00032+12
CCALKED  EQU   @NM00032+8
CCALKDNM EQU   @NM00032
CCAPGMPM EQU   @NM00030+24
@NM00031 EQU   @NM00030+21
CCABPGRC EQU   @NM00030+20
CCABPGSP EQU   @NM00030+12
CCABPGAD EQU   @NM00030+8
CCABPGNM EQU   @NM00030
CCAEND   EQU   HMASMCCA+371
@NM00029 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00028 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00027 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00026 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00025 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00024 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00023 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00022 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00021 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00020 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAAPPLY EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00019 EQU   @NM00014+18
@NM00018 EQU   @NM00014+16
CCATBLPA EQU   @NM00014+12
@NM00017 EQU   @NM00014+8
@NM00016 EQU   @NM00014+4
@NM00015 EQU   @NM00014
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCAICLMD EQU   CCAFICT+12
CCAICMOD EQU   CCAFICT+8
CCAICPTF EQU   CCAFICT+4
CCAICT   EQU   CCAFICT
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00013 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00012 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00011 EQU   CCAFBUFR+122
@NM00010 EQU   CCAFBUFR+120
@NM00009 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00008 EQU   CCAFBUFR+88
@NM00007 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00006 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00343 EQU   @RC00337
@RC00341 EQU   @RC00337
@RC00339 EQU   @RC00337
@RC00398 EQU   @RC00396
@ENDDATA EQU   *
         END   HMASMLID,(C'PLS2045',0802,78334)
