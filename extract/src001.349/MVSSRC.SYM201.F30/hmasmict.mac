
*/********************************************************************/
*/*                                                                  */
*/* HMASMICT - MAPPING MACRO FOR INTERNAL CONTROL TABLE (ICT)        */
*/*                                                                  */
*/********************************************************************/
*/*                                                                  */
*/* THIS MACRO IS USED TO CONTROL PTF APPLICATION. ALL INFORMATION   */
*/*      NECESSARY TO PROCESS IS PTF IS PUT INTO THIS TABLE PRIOR TO */
*/*      INVOKING THE HMASMP MODULES TO DO THE ACTUAL PROCESSING     */
*/*                                                                  */
*/* THE ICT CONTAINS FOUR SECTIONS                                   */
*/*     FIXED SECTION - CONTAINS DATA ON TOTAL ICT                   */
*/*     PTF SECTION - CONTAINING DATA ON A SYSMOD LEVEL              */
*/*     MOD SECTION - CONTAINING DATA ON A MOD/MAC/SRC LEVEL         */
*/*     LMOD SECTION - CONTAINING DATA ON A LMOD LEVEL               */
*/*                                                                  */
*/* THE VARIOUS SECTIONS OF THE ICT ARE POINTED TO BY ADDRESSES      */
*/*     IN THE CCA, AND ARE RELATED VIA INTERNAL POINTERS IN EACH    */
*/*     ENTRY IN EACH SECTION TO OTHER ENTRIES IN OTHER SECTIONS     */
*/*                                                                  */
*/* ICTIXPF, ICTIXMF AND ICTIXLF HAVE BEEN BASED ON ITS ASSOCIATED   */
*/*     CHAIN POINTER WITH A SUBSCRIPT OF 1. THIS SUBSCRIPT MAY HAVE */
*/*     BE CHANGED TO SOME INDEX VARIABLE DEPENDING UPON USAGE. THIS */
*/*     MAY BE ACCOMPLISHED THROUGH USE OF THE RESPECIFY CLAUSE      */
*/*                                                                  */
*/* THE EXPANSION OF THE ICT IS CONTROLLED BY THE FOLLOWING PLS      */
*/*     MACRO VARIABLES                                              */
*/*     ICTALL - IF SET TO 'NO' INDICATES THAT ONLY SPECIFIED        */
*/*        SECTIONS OF THE ICT ARE TO BE EXPANDED. IF NOT SET OR SET */
*/*        TO ANY OTHER VALUE INDICATES ALL ICT IS TO BE EXPANDED.   */
*/*     THE FOLLOWING VARIABLES ARE VALID ONLY IF ICTALL='NO'        */
*/*        IF THE VARIABLE IS SET TO 'YES' THEN THAT INDICATES       */
*/*        THAT THE SECTION IS TO BE EXPANDED. IF NOT SET OR SET     */
*/*        TO ANY OTHER VALUE THE SECTION WILL NOT BE EXPANDED.      */
*/*                                                                  */
*/*     ICTPREFIX - INDICATES PREFIX SECTION TO BE EXPANDED          */
*/*     ICT_PTF - INDICATES THAT PTF SECTION TO BE EXPANDED          */
*/*     ICT_MOD - INDICATES THAT MOD SECTION TO BE EXPANDED          */
*/*     ICT_LMOD - INDICATES THAT LMOD SECTION TO BE EXPANDED        */
*/*     ICTCONSTANT - INDICATES THAT ICT CONSTANTS ARE TO BE EXPANDED*/
*/*                                                                  */
*/* IN ADDITION, THE BASING EXPRESS IS CONTROLED BY THE MACRO        */
*/*   VARIABLE ICT_BASE.  IF IT IS SET TO 'NO' ALL SECTIONS WILL BE  */
*/*   GENERATED AS 'BASED'.  IF ICT_BASE IS NOT 'NO' THE THE FOLLOW  */
*/*   EXPRESSIONS WILL BE USED GO CREATE THE BASE IF THEY ARE        */
*/*   NON-NULL                                                       */
*/*     ICTICT_BASE - BASE FOR THE PREFIX                            */
*/*     ICTPTF_BASE - BASE FOR THE PTF SECTION                       */
*/*     ICTMOD_BASE - BASE FOR THE MOD SECTION                       */
*/*     ICTLMOD_BASE - BASE FOR THE LMOD SECTION                     */
*/*                                                                  */
*/********************************************************************/

    %IF ICTALL='NO'                 /*                       @Z67SP00*/
        %THEN                       /*                       @Z67SP00*/
      %IF ICTPREFIX^='YES'          /*                       @Z67SP00*/
          %THEN                     /*                       @Z67SP00*/
        %GOTO ICTNOPFX;
    %;                              /*                       @Z67SP00*/
    %IF ICTICT_BASE='' %THEN
      %ICTICT_BASE='BASED(CCAICT)';
    %IF ICT_BASE='NO' %THEN
      %ICTICT_BASE='BASED';
    DECLARE
      1 HMASMICT ICTICT_BASE BDY(WORD),/* SMP INCORE TABLE   @Z67SP00*/
        3 ICTCORE,                  /*                               */
          5 ICTPSPLN BIN(32),       /* PTF SUBPOOL AND LEN   @Z67SP00*/
            7 ICTPSP BIN(8),        /* PTF SECTION SUBPOOL   @Z67SP00*/
            7 ICTPLEN BIN(24),      /* PTF SECTION LENGTH    @Z67SP00*/
          5 ICTMSPLN BIN(32),       /* MOD SUBPOOL AND LEN   @Z67SP00*/
            7 ICTMSP BIN(8),        /* MOD SECTION SUBPOOL   @Z67SP00*/
            7 ICTMLEN BIN(24),      /* MOD SECTION LENGTH    @Z67SP00*/
          5 ICTLSPLN BIN(32),       /* LMOD SUBPOOL AND LEN  @Z67SP00*/
            7 ICTLSP BIN(8),        /* LMOD SECTION SUBPOOL  @Z67SP00*/
            7 ICTLLEN BIN(24);      /* LMOD SECTION LEN      @Z67SP00*/
    DECLARE                         /* ARRAY MAP OF ABOVE    @Z67SP00*/
      1 ICTGMSPL(3) BASED(CCAICT) BDY(WORD),/*               @Z67SP00*/
          5 ICTSP BIN(8),           /* SUBPOOL               @Z67SP00*/
          5 ICTLEN BIN(24);         /* GETMAIN LENGTH        @Z67SP00*/
 %ICTNOPFX:
    ;                               /*                       @Z67SP00*/
    %IF ICTALL='NO'                 /*                       @Z67SP00*/
        %THEN                       /*                       @Z67SP00*/
      %IF ICT_PTF^='YES'            /*                       @Z67SP00*/
          %THEN                     /*                       @Z67SP00*/
        %GOTO ICTNOPTF;
    %;                              /*                       @Z67SP00*/
 @EJECT;                           /*                       @Z40SP00*/

*/********************************************************************/
*/*                                                                  */
*/*   PTF SECTION OF ICT                                             */
*/*                                                                  */
*/********************************************************************/

    %IF ICTPTF_BASE='' %THEN
      %ICTPTF_BASE='BASED(CCAICPTF)';
    %IF ICT_BASE='NO' %THEN
      %ICTPTF_BASE='BASED';
    DECLARE
      1 ICTPTF(*) ICTPTF_BASE BDY(WORD),/* PTF SECTION OF ICT
                                                             @Z67SP00*/
       2 ICTPTFS CHAR(7),           /* PTF OR MODIFICATION NUMBER    */
         4 ICTPEND BIN(32) BDY(BYTE),/* END OF PTF SECTION
                                       INDICATED WHEN EQUAL TO
                                       ICTENDNT              @Z67SP00*/
       2 ICTPFLG1 BIT(8),           /* SAME AS IOPPTFF1      @ZD00009*/
         4 ICTAPP BIT(1),           /* PTF APPLIED                   */
         4 ICTRES BIT(1),           /* RESTORE ATTEMPTED     @Z40SP00*/
         4 ICTACC BIT(1),           /* PTF ACCEPTED                  */
         4 ICTERROR BIT(1),         /* SYSTEM ERROR ENCOUNTERED
                                       DURING PROCESSING     @Z40SP00*/
         4 * BIT(1),                /* UNUSED                @ZD00008*/
         4 ICTDUMMP BIT(1),         /* PTF IS DUMMY SUP ONLY @ZD00009*/
         4 ICTBYP BIT(1),           /* PTF BYPASSED          @Z67SP00*/
         4 ICTREGEN BIT(1),         /* PTF DEFAULT APPLIED VIA SYSTEM
                                       REGEN                 @VS05296*/
       2 ICTPFLG3 BIT(8),           /* PTF PROCESSING FLAGS          */
         4 ICTPPROC BIT(1),         /* PTF IN PROCESS                */
           6 ICTPROCS BIT(1),       /* PTF IN PROCESS                */
         4 ICTPNOGO BIT(1),         /* PTF ERROR IN PROCESSING       */
         4 ICTPCPL  BIT(1),         /* PTF COMPLETE          @Z67SP00*/
         4 ICTPMSG BIT(1),          /* PTF MSG PUT OUT       @Z40SP00*/
         4 ICTPVERJ BIT(1),         /* IND. VER REJ. FOR MOD @YA07506*/
         4 ICTPNOLB BIT(1),         /* PTF FOUND ON ACDS     @ZA16666*/
         4 ICTPSLST BIT(1),         /* PTF WAS IN SELECT/GROUP LIST
                                                             @Z67SP00*/
         4 * BIT(1),                /* UNUSED                @Z67SP00*/
       2 ICTPFLG5 BIT(16),          /* SAME AS IOPPTFF2      @ZD00009*/
         4 ICTPDELP BIT(1),         /* PTF HAS DELETES       @Z67SP00*/
         4 ICTPIRQP BIT(1),         /* PTF HAS IF REQS       @Z67SP00*/
         4 ICTPNPRP BIT(1),         /* PTF HAS NPRES         @ZA14010*/
         4 ICTPPREP BIT(1),         /* PTF HAS PRES          @ZA14010*/
         4 ICTPREQP BIT(1),         /* PTF HAS REQS          @ZA14010*/
         4 ICTPSUPP BIT(1),         /* PTF HAS SUPS          @ZA14010*/
         4 ICTPJCLP BIT(1),         /* PTF HAS INLINE JCLIN  @Z67SP00*/
         4 ICTPLRFP BIT(1),         /* PTF HAS REL FILES
                                                             @Z67SP00*/
         4 * BIT(6),                /* UNUSED                @ZD00009*/
         4 ICTPADDP BIT(1),         /* PTF ADDED CDS ENTRY   @Z67SP00*/
         4 ICTPMDLP BIT(1),         /* PTF HAS ELEMENT THAT DELETES
                                                             @Z67SP00*/
       2 ICTPFLG6 BIT(8),           /* SAME AS IOPPTFF3      @ZD00009*/
         4 ICTPSBYP BIT(1),         /* PTF HAS SUPBY         @ZA14010*/
         4 ICTPDBYP BIT(1),         /* PTF HAS DELBY         @Z67SP00*/
         4 ICTPFLF BIT(1),          /* 1ST LEVEL FUNCTION    @Z67SP00*/
          5 ICTFLF BIT(1),          /* ...                   @Z67SP00*/
         4 * BIT(5),                /* UNUSED                        */
       2 ICTPFLG2 BIT(8),           /* MISC FLAGS            @Z67SP00*/
         4 ICTPVRSP BIT(1),         /* PTF HAS VERSION       @Z67SP00*/
         4 ICTPTR1 BIT(1),          /* HMASMTR1 PROCESSING THIS ENTRY
                                                             @Z67SP00*/
         4 ICTPTPS BIT(1),          /* HMASMTPS PROCESSING THIS ENTRY
                                                             @Z67SP00*/
         4 ICTPRCND BIT(1),         /* PTF IS A RESTORE CANDIDATE
                                                             @Z67SP00*/
         4 * BIT(4),                /* UNUSED                @Z67SP00*/
       2 ICTPFLG4 BIT(8),           /* PTF PROCESSING FLAGS  @ZA14010*/
         4 ICTPCDSE BIT(1),         /* PTF ENTRY EXISTS ON THE
                                       CDS/ACDS              @Z67SP00*/
         4 ICTPREDO BIT(1),         /* REPROCESS SYSMOD      @ZA14010*/
         4 ICTPDEXP BIT(1),         /* PTF ENTRY IS EXPLICITLY
                                       DELETED               @Z67SP00*/
         4 ICTPDIMP BIT(1),         /* PTF ENTRY IS IMPLICITLY
                                       DELETED               @Z67SP00*/
         4 ICTPGELM BIT(1),         /* PTF ELIMINATED DURING
                                       SELECTION, IGNORE FOR REPORTS,
                                      AS GROUPED BY NOGO PTF @Z67SP00*/
         4 * BIT(1),                /* UNUSED                @Z67SP00*/
         4 * BIT(1),                /* UNUSED                @Z67SP00*/
         4 * BIT(1),                /* USUSED                @Z67SP00*/
       2 ICTPFLG8 BIT(8),           /* COMPLETION FLAGS,     @Z67SP00*/
         4 ICTPGCPL BIT(1),         /* PTF GROUP COMPLETE    @Z67SP00*/
         4 ICTPECPL BIT(1),         /* PTF ELEMENTS COMPLETE @Z67SP00*/
         4 ICTPDCPL BIT(1),         /* DELETE PROCESS COMP.  @Z67SP00*/
         4 * BIT(5),                /* UNUSED                @Z67SP00*/
       2 ICTPFLG9 BIT(8),           /* COMPLETION FLAGS,     @Z67SP00*/
         4 ICTPMSL BIT(1),          /* ELEMENT SELECTION PROCESSING
                                       COMPLETED (HMASMTMS)  @Z67SP00*/
         4 ICTPWRKO BIT(1),         /* PTF HAS OVERLAID WRK
                                       DATASET MEMBERS       @Z67SP00*/
         4 ICTPPDEL BIT(1),         /* PTF HAS BEEN PREVIOUSLY
                                       DELETED               @Z67SP00*/
         4 *       BIT(1),          /* UNUSED                @Z67SP00*/
         4 * BIT(4),                /* REQ CHECKING FLAGS    @Z67SP00*/
         5 ICTPRQCK BIT(1),         /* REQ, MREQ, IREQ, PRE CHECKING
                                       IS DONE               @Z67SP00*/
         5 ICTPRQOK BIT(1),         /* REQ CHECKING IS SUCESSFUL
                                                             @Z67SP00*/
         5 ICTPRQBY BIT(1),         /* REQ WAS BYPASSED      @Z67SP00*/
         5 *        BIT(1),         /* UNUSED                @Z67SP00*/
       2 ICTPFLGA BIT(8),           /* FLAGS                 @Z67SP00*/
         4 ICTPUSR1 BIT(1),         /* USER WORK FLAG        @Z67SP00*/
          5 ICTPPASS BIT(1),        /* PTF ADDED IN THIS PASS@Z67SP00*/
         4 ICTPUSR2 BIT(1),         /* USER WORK FLAG        @Z67SP00*/
         4 ICTPUSR3 BIT(1),         /* USER WORK FLAG        @Z67SP00*/
         4 ICTPUSR4 BIT(1),         /* USER WORK FLAG        @Z67SP00*/
         4 ICTPUSR5 BIT(1),         /* USER WORK FLAG        @Z67SP00*/
         4 ICTPUSR6 BIT(1),         /* USER WORK FLAG        @Z67SP00*/
         4 ICTPUSR7 BIT(1),         /* USER WORK FLAG        @Z67SP00*/
         4 ICTPUSR8 BIT(1),         /* USER WORK FLAG        @Z67SP00*/
       2 ICTPTYPE FIXED(8),         /* MODIFICATION TYPE - SAME
                                       VALUES AS IOPPTYPE:   @Z67SP00*/
*/*                                   IOPPUSER USER MOD      @Z67SP00*/
*/*                                   IOPPAPAR APAR FIX      @Z67SP00*/
*/*                                   IOPPPTF  PTF  FIX      @Z67SP00*/
*/*                                   IOPPFUNC FUNCTION      @Z67SP00*/

       2 ICTPONUM FIXED(16) BDY(HWORD),/* PTF PROCESSING ORDER #
                                                             @Z67SP00*/
       2 ICTPSUPN FIXED(16) BDY(HWORD),/* COUNT OF PTF ENTRIES THAT
                                       SUP THIS ENTRY        @Z67SP00*/
       2 ICTPFMID CHAR(7),          /* FMID FOR THIS PTF     @Z67SP00*/
       2 ICTPVERN FIXED(8),         /* NUMBER OF VERIFY STATEMENT
                                       USED TO PROCESS THIS SYSMOD
                                                             @Z67SP00*/
       2 ICTPRECD CHAR(3),          /* PTF RECIEVED DATE     @Z67SP00*/
       2 ICTPRECT CHAR(3),          /* PTF RECIEVED TIME     @Z67SP00*/
       2 ICTPRELN FIXED(15) BDY(BYTE), /* NUMBER OF RELFILES @Z67SP00*/
       2 ICTPTPFX CHAR(26),/* RELFILE DSN PREFIX             @Z67SP00*/
       2 ICTPCHN PTR(31) BDY(WORD), /* CHAIN PTR TO INDEX EXTENSION  */
       2 ICTPRCHN PTR(31) BDY(BYTE),/* PTR TO REQ/MREQ LIST  @ZA14010*/
       2 ICTPSCHN PTR(31) BDY(BYTE),/* PTR TO SUP LIST       @ZD00002*/
       2 ICTPPCHN PTR(31) BDY(BYTE),/* PTR TO PRE LIST       @ZD00005*/
       2 ICTPICHN PTR(31) BDY(BYTE),/* PTR TO IREQ LIST      @Z67SP00*/
       2 ICTPNCHN PTR(31) BDY(BYTE),/* PTR TO NPRE LIST      @Z67SP00*/
       2 ICTPVCHN PTR(31) BDY(BYTE),/* PTR TO VERSION LIST   @Z67SP00*/
       2 ICTPDCHN PTR(31) BDY(BYTE),/* PTR TO DELETE LIST    @Z67SP00*/
       2 ICTPBCHN PTR(31) BDY(BYTE),/* PTR TO SUB BY LIST    @Z67SP00*/
       2 * CHAR(16);                /* RESERVED              @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* LIST OF PTRS TO MOD SECTION ENTRIES (ELEMENTS IN SYSMOD)      */
    /*                                                               */
    /*****************************************************************/

    DECLARE
      1 ICTIXPF(*) PTR(31) BASED(ICTPCHN(1)),/* CHAIN PTRS INTO ICT
                                       MODULE SECTION        @Z40SP00*/
       2 ICTIXP PTR(31);            /* CHAIN PTR FOR PTF SECTION INTO
                                       MODULE SECTION. END OF LIST
                                       INDICATED BY ENTRY EQUAL TO
                                       ICTENDIX              @Z40SP00*/

    /*****************************************************************/
    /*                                                               */
    /* VARIABLE LISTS POINTED TO BY ADDRESSES WITHIN THE PTF ENTRY   */
    /*                                                               */
    /*****************************************************************/

 @SPACE;
    /*****************************************************************/
    /*                                                               */
    /* GENERAL MAPPING OF VARIABLE LIST ENTRIES                      */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @ZA14010*/
      1 ICTENTLS(*) CHAR(8) BDY(WORD) BASED,/* GENERAL MAPPING FOR
                                       ALL TYPE ENTRIES      @ZD00002*/
       2 ICTENTNT CHAR(8) BDY(WORD),/* ONE ENTRY             @ZD00002*/
         4 ICTENTNM CHAR(7) BDY(WORD),/* PTF NUMBER          @ZD00002*/
          5 ICTENTND PTR(31),       /* END OF LIST MARKER    @ZD00002*/
         4 ICTENTST BIT(8),         /* STATUS                @ZD00002*/
          5 * BIT(3),               /* RESERVED              @Z67SP00*/
          5 ICTEREQS BIT(1),        /* REQ SATISFIED         @Z67SP00*/
          5 ICTEREQB BIT(1),        /* REQ BYPASSED          @Z67SP00*/
          5 ICTEREQI BIT(1),        /* REQ MUST BE IN ICT    @Z67SP00*/
          5 ICTEREQT BIT(1),        /* REQ ON TARGET SYSTEM  @Z67SP00*/
          5 * BIT(1);               /* UNUSED                @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* REQ LIST                                                      */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @ZA14010*/
      1 ICTREQLS(*) CHAR(8) BDY(WORD) BASED(ICTPRCHN(1)),/* LIST OF
                                       REQ AND MREQ NUMBERS  @ZA14010*/
       2 ICTREQNT CHAR(8) BDY(WORD),/* ONE REQ ENTRY         @ZA14010*/
         4 ICTREQNM CHAR(7) BDY(WORD),/* REQ PTF NUMBER      @ZD00002*/
          5 ICTREQND PTR(31),       /* END OF LIST MARKER    @ZA14010*/
         4 ICTREQST BIT(8),         /* REQ STATUS            @ZD00002*/
          5 *        BIT(3),        /* UNUSED                @Z67SP00*/
          5 ICTRREQS BIT(1),        /* REQ SATISFIED         @Z67SP00*/
          5 ICTRREQB BIT(1),        /* REQ BYPASSED          @Z67SP00*/
          5 ICTRREQI BIT(1),        /* REQ MUST BE IN ICT    @Z67SP00*/
          5 ICTRREQT BIT(1),        /* REQ ON TARGET SYSTEM  @Z67SP00*/
          5 * BIT(1);               /* UNUSED                @ZD00006*/

    /*****************************************************************/
    /*                                                               */
    /* SUP LIST                                                      */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @ZD00002*/
      1 ICTSUPLS(*) CHAR(8) BDY(WORD) BASED(ICTPSCHN(1)),/* LIST OF
                                       SUP PTF NUMBERS       @ZD00002*/
       2 ICTSUPNT CHAR(8) BDY(WORD),/* ONE SUP ENTRY         @ZD00002*/
         4 ICTSUPNM CHAR(7) BDY(WORD),/* SUP PTF NUMBER      @ZD00002*/
          5 ICTSUPND PTR(31),       /* END OF LIST MARKER    @ZD00002*/
         4 * BIT(8);                /* UNUSED                @ZD00002*/

    /*****************************************************************/
    /*                                                               */
    /* PRE LIST                                                      */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @ZD00002*/
      1 ICTPRELS(*) CHAR(8) BDY(WORD) BASED(ICTPPCHN(1)),/* LIST OF
                                       PRE PTF NUMBERS       @ZD00005*/
       2 ICTPRENT CHAR(8) BDY(WORD),/* ONE PRE ENTRY         @ZD00005*/
         4 ICTPRENM CHAR(7) BDY(WORD),/* PRE PTF NUMBER      @ZD00005*/
          5 ICTPREND PTR(31),       /* END OF LIST MARKER    @ZD00005*/
         4 ICTPREST BIT(8),         /* PRE STATUP FLAGS      @Z67SP00*/
          5 *        BIT(3),        /* UNUSED                @Z67SP00*/
          5 ICTPREQS BIT(1),        /* PRE SATISFIED         @Z67SP00*/
          5 ICTPREQB BIT(1),        /* PRE BYPASSED          @Z67SP00*/
          5 ICTPREQI BIT(1),        /* PRE MUST BE IN ICT    @Z67SP00*/
          5 ICTPREQT BIT(1),        /* PRE ON TARGET SYSTEM  @Z67SP00*/
          5 * BIT(1);               /* UNUSED                @ZD00006*/

    /*****************************************************************/
    /*                                                               */
    /* IREQ LIST                                                     */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @Z67SP00*/
      1 ICTIRQLS(*) CHAR(16) BDY(WORD) BASED(ICTPICHN(1)),/* LIST OF
                                       IREQ PTF NUMBERS      @Z67SP00*/
       2 ICTIRQNT CHAR(16) BDY(WORD),/* ONE IREQ ENTRY       @Z67SP00*/
         4 ICTIRQNM CHAR(7) BDY(WORD),/* PRE PTF NUMBER      @Z67SP00*/
          5 ICTIRQND PTR(31),       /* END OF LIST MARKER    @Z67SP00*/
         4 ICTIRQST BIT(8),         /* IRQ STATUS FLAGS      @Z67SP00*/
          5 * BIT(3),               /* UNUSED                @Z67SP00*/
          5 ICTIREQS BIT(1),        /* IREQ SATISFIED        @Z67SP00*/
          5 ICTIREQB BIT(1),        /* IREQ BYPASSED         @Z67SP00*/
          5 ICTIREQI BIT(1),        /* IREQ MUST BE IN ICT   @Z67SP00*/
          5 ICTIREQT BIT(1),        /* IREQ ON TARGET SYSTEM @Z67SP00*/
          5 * BIT(1),               /* UNUSED                @Z67SP00*/
         4 ICTCSRNM CHAR(7) BDY(WORD),/* CAUSER NUMBER       @Z67SP00*/
         4 ICTCSRST BIT(8),         /* CSR STATUS FLAGS      @Z67SP00*/
          5 * BIT(3),               /* UNUSED                @Z67SP00*/
          5 ICTCSRF BIT(1),         /* CSR FAILED            @Z67SP00*/
          5 * BIT(1),               /* UNUSED                @Z67SP00*/
          5 * BIT(3);               /* UNUSED                @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* NPRE LIST                                                     */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @Z67SP00*/
      1 ICTNPRLS(*) CHAR(8) BDY(WORD) BASED(ICTPNCHN(1)),/* LIST OF
                                       NPRE PTF NUMBERS      @Z67SP00*/
       2 ICTNPRNT CHAR(8) BDY(WORD),/* ONE NPRE ENTRY        @Z67SP00*/
         4 ICTNPRNM CHAR(7) BDY(WORD),/* NPRE PTF NUMBER     @Z67SP00*/
          5 ICTNPRND PTR(31),       /* END OF LIST MARKER    @Z67SP00*/
         4 * BIT(8);                /* UNUSED                @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* VERSION LIST                                                  */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @Z67SP00*/
      1 ICTVRSLS(*) CHAR(8) BDY(WORD) BASED(ICTPVCHN(1)),/* LIST OF
                                       VERSIONED PTF NUMBERS @Z67SP00*/
       2 ICTVRSNT CHAR(8) BDY(WORD),/* ONE VERSION LIST ENTRY
                                                             @Z67SP00*/
         4 ICTVRSNM CHAR(7) BDY(WORD),/* VRS PTF NUMBER      @Z67SP00*/
          5 ICTVRSND PTR(31),       /* END OF LIST MARKER    @Z67SP00*/
         4 * BIT(8);                /* UNUSED                @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* DELETE  LIST                                                  */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @Z67SP00*/
      1 ICTDELLS(*) CHAR(8) BDY(WORD) BASED(ICTPDCHN(1)),/* LIST OF
                                       DELETE PTF NUMBERS    @Z67SP00*/
       2 ICTDELNT CHAR(8) BDY(WORD),/* ONE DELETE ENTRY      @Z67SP00*/
         4 ICTDELNM CHAR(7) BDY(WORD),/* DELET PTF NUMBER    @Z67SP00*/
          5 ICTDELND PTR(31),       /* END OF LIST MARKER    @Z67SP00*/
         4 ICTDELST BIT(8),         /* STATUS                @Z67SP00*/
           6 ICTDELEX BIT(1);       /* EXPLICT DELETE        @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* SUPD-BY LIST                                                  */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @Z67SP00*/
      1 ICTSBYLS(*) CHAR(8) BDY(WORD) BASED(ICTPBCHN(1)),/* LIST OF
                                       SUP BY PTF NUMBERS    @Z67SP00*/
       2 ICTSBYNT CHAR(8) BDY(WORD),/* ONE SUPBY ENTRY       @Z67SP00*/
         4 ICTSBYNM CHAR(7) BDY(WORD),/* SUP BY PTF NUMBER   @Z67SP00*/
          5 ICTSBYND PTR(31),       /* END OF LIST MARKER    @Z67SP00*/
         4 * BIT(8);                /* UNUSED                @Z67SP00*/
 %ICTNOPTF:
    ;                               /*                       @Z67SP00*/
    %IF ICTALL='NO'                 /*                       @Z67SP00*/
        %THEN                       /*                       @Z67SP00*/
      %IF ICT_MOD^='YES'            /*                       @Z67SP00*/
          %THEN                     /*                       @Z67SP00*/
        %GOTO ICTNOMOD;
    %;                              /*                       @Z67SP00*/
*@EJECT;

*/********************************************************************/
*/*                                                                  */
*/*    MODULE SECTION OF ICT                                         */
*/*                                                                  */
*/********************************************************************/

    %IF ICTMOD_BASE='' %THEN
      %ICTMOD_BASE='BASED(CCAICMOD)';
    %IF ICT_BASE='NO' %THEN
      %ICTMOD_BASE='BASED';
    DECLARE
      1 ICTMOD(*) ICTMOD_BASE,      /* MODULE SECTION OF ICT @Z40SP00*/
       2 ICTMNAME CHAR(8),          /* MODULE NAME           @Z40SP00*/
         4 ICTMEND BIN(32) BDY(BYTE),/* END OF MODULE SECTION
                                       INDICATED WHEN EQUAL TO
                                       ICTENDNT              @Z67SP00*/
       2 ICTMFLG2 BIT(8),           /* COMMON MOD ENT FLG 1  @Z40SP00*/
         4 ICTMPROC BIT(1),         /* MODULE IN PROCESS     @Z40SP00*/
         4 ICTMNOGO BIT(1),         /* ERROR IN PROCESSING   @Z40SP00*/
         4 ICTMCPL BIT(1),          /* MODULE COMPLETE       @Z40SP00*/
         4 ICTMMSG BIT(1),          /* MOD MSG PUT OUT       @Z40SP00*/
         4 ICTMDEL BIT(1),          /* PROCESSED BY COMPRESS @Z40SP02*/
         4 ICTMMIDU BIT(1),         /* (A)CDS ELEMENT MODID LIST
                                       UPDATED               @Z67SP00*/
         4 *        BIT(1),         /* UNUSED                @Z67SP00*/
         4 *        BIT(1),         /* UNUSED                @Z67SP00*/
       2 ICTMFLG1 BIT(8),           /* COMMON MOD ENT FLG 1  @Z40SP00*/
         4 ICTMMODR BIT(2),         /* MOD REPLACEMENT FLGS  @Z67SP00*/
           5 ICTMMOD BIT(1),        /* ... REPLACEMENT       @Z67SP00*/
           5 ICTMASM BIT(1),        /* ... (TO BE ASSEMBLED) @Z67SP00*/
         4 ICTMZAP BIT(1),          /* MOD UPDATE (ZAP)      @Z40SP00*/
         4 ICTMXPND BIT(1),         /* MOD TO BE EXPANDED    @Z40SP00*/
         4 ICTMMACR BIT(1),         /* MACRO REPLACEMENT     @Z40SP00*/
         4 ICTMMACU BIT(1),         /* MACRO UPDATE          @Z40SP00*/
         4 ICTMSRCR BIT(1),         /* SOURCE REPLACEMENT    @Z40SP00*/
         4 ICTMSRCU BIT(1),         /* SOURCE UPDATE         @Z40SP00*/
       2 ICTMFLG3 BIT(8),           /* COMMON MOD ENT FLG 3  @Z40SP00*/
         4 ICTLIBLK BIT(1),         /* MOD IN LOAD LIB       @Z40SP00*/
         4 ICTLIBTX BIT(1),         /* MOD IN OBJ LIB OR MAC IN TEXT
                                       LIB                   @Z40SP00*/
         4 ICTMRELF BIT(1),         /* ELEMENT ON TLIB DS    @Z67SP00*/
         4 ICTMTRX  BIT(1),         /* ELEMENT TRANSFERRED FROM TLIB
                                       DS TO UTILITY FILE    @Z67SP00*/
         4 ICTMWRK BIT(1),          /* ELEMENT TRANSFERRED FROM IN-LINE
                                       TO WRK DATASET        @Z67SP00*/
         4 ICTMALIS BIT(1),         /* MOD/MAC HAS ALIAS ENTRIES
                                                             @Z67SP00*/
         4 ICTMPRMS BIT(1),         /* MOD LE PARMS OBTAINED @Z40SP00*/
         4 *        BIT(1),         /* UNUSED                @Z67SP00*/
       2 ICTMFLG4 BIT(8),           /* COMMON MOD ENT FLG 4  @ZD00009*/
         4 ICTMISEL BIT(1),         /* ELEMENT SELECTED      @Z67SP00*/
         4 ICTMIDEL BIT(1),         /* ELEMENT TO BE DELETED @Z67SP00*/
         4 ICTMSELM BIT(1),         /* MOD ELIMINATED DURING MOD
                                       SELECTION BECAUSE SOURCE WAS
                                       SELECTED              @Z67SP00*/
         4 ICTMASOC BIT(1),         /* MOD HAS AN ASSOCIATED ENTRY IN
                                       THE TABLE             @Z67SP00*/
         4 ICTMMIDE BIT(1),         /* MOD ID ERROR          @Z67SP00*/
         4 ICTMDSTE BIT(1),         /* MOD HAS INVALID DISTLIB NAME
                                                             @Z67SP00*/
         4 ICTMTSEL BIT(1),         /* TRANSIENT SELECT FLAG @Z67SP00*/
         4 *       BIT(1),          /* UNUSED                @Z67SP00*/
       2 ICTMFLG5 BIT(8),           /* COMMON MOD ENT FLG 5  @ZD00009*/
         4 ICTMPASS BIT(1),         /* TABLE INTERNAL PROCESSING FLAG
                                                             @Z67SP00*/
         4 ICTMCOPY BIT(1),         /* COPY THIS ELEMENT     @Z67SP00*/
         4 ICTMELCK BIT(1),         /* ELIM. EL. CHECKED     @Z67SP00*/
         4 ICTMNORL BIT(1),         /* EL. HAS NO REL. EL.   @Z67SP00*/
         4 *        BIT(1),         /* UNUSED                @Z67SP00*/
       2 ICTMODF4 BIT(8),           /* MOD FLAGS 4           @ZA14010*/
         4 ICTMLEP1 BIT(8),         /* MOD LE PARMS FROM PTF. KEEP IN
                                       SAME ORDER AS IOPLEPR @Z40SP00*/
           6 ICTMAPF BIT(1),        /* APF AC=1 OF PTF       @Z40SP00*/
           6 ICTMRENT BIT(1),       /* RENT ON PTF           @Z40SP00*/
           6 ICTMREUS BIT(1),       /* REUS ON PTF           @Z40SP00*/
           6 ICTMSCTR BIT(1),       /* SCTR ON PTF           @Z40SP00*/
           6 ICTMOVLY BIT(1),       /* OVLY ON PTF           @Z40SP00*/
           6 ICTMREFR BIT(1),       /* REFR ON PTF           @Z40SP00*/
           6 ICTMDC BIT(1),         /* DC ON PTF             @Z40SP00*/
           6 * BIT(1),              /* UNUSED                @Z40SP00*/
       2 ICTMODF5 BIT(8),           /* UNIQUE MOD FLG 5      @ZA14010*/
         4 ICTMLEP2 BIT(8),         /* MOD LE PARMS 2        @Z40SP00*/
           6 ICTMNE BIT(1),         /* NE ON PTF             @Z40SP00*/
           6 ICTMPAGA BIT(1),       /* ALIGN2 ON PTF         @Z40SP00*/
           6 * BIT(6),              /* UNUSED                @Z40SP00*/
       2 ICTMODF6 BIT(8),           /* UNIQUE MOD FLG 5      @ZD00009*/
         4 ICTMLEP3 BIT(8),         /* MOD LE PARMS 3        @ZD00009*/
           6 * BIT(8),              /* UNUSED                @ZD00009*/
       2 ICTMODF7 BIT(8),           /* UNIQUE MOD FLG 5      @ZD00009*/
         4 ICTMLEP4 BIT(8),         /* MOD LE PARMS 4        @ZD00009*/
           6 * BIT(8),              /* UNUSED                @ZD00009*/
       2 ICTMACF4 BIT(8),           /* UNIQUE MAC/SRC FLG 4  @ZA14010*/
         4 ICTMACDL BIT(1),         /* DEL MAC/SRC FROM MTS/STS AT
                                       ACCEPT TIME           @Z40SP00*/
         4 ICTMHASM BIT(1),         /* MAC HAS ASSEMBLIES    @Z40SP00*/
         4 ICTMFXBS BIT(1),         /* MAC/SRC IS FIXED BASE @Z40SP00*/
         4 ICTMFXC BIT(1),          /* FIX BASE STATUS HAS CHANGED
                                       FOR ACCEPT            @Z40SP00*/
         4 ICTMXUPD BIT(1),         /* THIS IS ENTRY CAUSED BY EXTRA
                                       UPDATE TO STS         @Z40SP00*/
         4 ICTMDOAS BIT(1),         /* ASSEMBLY MUST BE DONE @ZA14024*/
         4 ICTMZOMZ BIT(1),         /* ZAP ON MOD ZAP ELEMENT@ZD00005*/
         4 ICTMZMPR BIT(1),         /* ZAP-ON-MOD PAIR REST. @ZD00005*/
       2 ICTMACF5 BIT(8),           /* UNIQUE MAC/SRC FLG 5  @ZA14010*/
       2 * BIT(8),                  /* UNUSED                @Z67SP00*/
       2 ICTMLANG FIXED(8),         /* ASSEMBLY LANGUAGE TYPE. VALUES
                                       ARE THE SAME AS FOR IOPMCLNG
                                       AND IOPSRLNG.         @Z67SP00*/
       2 * CHAR(1),                 /* UNUSED                @Z67SP00*/
       2 ICTMRELN FIXED(16),        /* RELFILE NUMBER (HEX)  @Z67SP00*/
       2 ICTFMLIB CHAR(8),          /* ..... FROM LIB ...............*/
*/*               FOR MAC/SRC UPDATE/REPS ICTFMLIB WILL CONTAIN      */
*/*                   THE DDNAME OF THE LIBRARY TO BE USED AS SYSUT1 */
*/*                   TO IEBUPDTE.                           @Z40SP00*/
*/*               FOR ASSEMBLIES ICTFMLIB WILL CONTAIN THE DDNAME OF */
*/*                   THE LIBRARY THAT CONTAINS THE MODULE TO BE     */
*/*                   ASSEMBLED(SYSIN TO ASSEMBLER).         @Z40SP00*/
*/*               FOR MODULES WITH EITHER ICTLIBLK OF ICTLIBTX ON    */
*/*                   ICTFMLIB WILL CONTAIN THE DDNAME OF THE LIBRARY*/
*/*                   THAT CONTAINS THE MODULE IN LOAD OR OBJECT DECK*/
*/*                   FORMAT.                                @Z40SP00*/

       2 ICTTOLIB CHAR(8),          /* DDNAME OF LIBRARY TO BE USED
                                       AS SYSUT2 TO IEBUPDTE @Z40SP00*/
       2 ICTMASLB CHAR(8),          /* 'ASMLIB' FOR MACRO ENTRY
                                                             @Z67SP00*/
       2 ICTMDSTL CHAR(8),          /* 'DISTLIB' NAME        @Z67SP00*/
       2 ICTMSYSL CHAR(8),          /* 'SYSLIB' NAME         @Z67SP00*/
       2 ICTMDOBJ CHAR(8),          /* 'DISTOBJ' FOR MACRO OR SOURCE
                                       ENTRY                 @Z67SP00*/
       2 ICTMSSI CHAR(8),           /* 'SSI' DATA FOR MACRO/SRC ENTRY
                                                             @Z67SP00*/
       2 ICTMRMID CHAR(7),          /* RMID OF THIS MOD ENTRY
                                                             @Z67SP00*/
       2 * CHAR(1),                 /* UNUSED                @Z67SP00*/
       2 ICTMFMID CHAR(7),          /* FMID OF THIS MOD ENTRY
                                                             @Z67SP00*/
       2 * CHAR(1),                 /* UNUSED                @Z67SP00*/
       2 ICTPPTR PTR(31) BDY(WORD), /* PTR TO PTF ENTRY      @Z40SP00*/
       2 ICTMCHN PTR(31) BDY(BYTE), /* CHAIN PTR TO INDEX EXTENSION
                                       FOR MOD TO LMOD       @Z40SP00*/
       2 ICTMICHN PTR(31) BDY(BYTE),/* APPLY -- PTR CDS MODID LIST..
                                       ACCEPT - PTR ACDS MODID LIST.
                                       RESTORE- PTR CDS MODID LIST..
                                                             @Z67SP00*/
       2 ICTMICHA PTR(31) BDY(BYTE),/* RESTORE - PTR ACDS MODID LIST
                                                             @Z67SP00*/
       2 ICTMACHN PTR(31) BDY(BYTE),/* PTR TO LIST OF ASSEMBLY ENTRY
                                       ADDRESSES. THIS FIELD VAID FOR
                                       SOURCE AND MACRO ONLY. THIS
                                       FIELD WILL POINT TO NULL LIST
                                       FOR ALL OTHERS        @ZD00006*/
       2 ICTMTCHN PTR(31),          /* PTR TO ALIAS LIST     @Z67SP00*/
       2 ICTMVCHN PTR(31),          /* PTR TO VERSION LIST   @Z67SP00*/
       2 ICTMUCHN PTR(31),          /* PTR TO UMID    LIST   @Z67SP00*/
       2 *  CHAR(16);               /* RESERVED              @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* VARIABLE LISTS POINTED TO BY ADDRESSES WITHIN THE MOD ENTRY   */
    /*                                                               */
    /*****************************************************************/

  @SPACE;
    /*****************************************************************/
    /*                                                               */
    /* LOAD MODULE LIST                                              */
    /*                                                               */
    /*****************************************************************/

    DECLARE
      1 ICTIXMF(*) PTR(31) BASED(ICTMCHN(1)),/* CHAIN PTRS INTO LOAD
                                       MODULE SECTION OF ICT @Z40SP00*/
       2 ICTIXM PTR(31);            /* CHAIN PTRS FROM MODULE SECTION
                                       TO LMOD SECTION. END OF LIST
                                       INDICATED BY ENTRY EQUAL TO
                                       ICTENDIX              @Z40SP00*/

    /*****************************************************************/
    /*                                                               */
    /* MODID LIST                                                    */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @ZD00006*/
      1 ICTMIDLS(*) CHAR(8) BDY(WORD) BASED(ICTMICHN(1)),/* LIST OF
                                       MODIDS                @ZD00006*/
       2 ICTMID CHAR(8) BDY(WORD),  /* MODID NAME            @ZD00006*/
         4 ICTMODID CHAR(7) BDY(WORD),/* MODID PTF NUMBER    @ZD00006*/
          5 ICTMIDND PTR(31),       /* END OF LIST WHEN EQUAL TO
                                       ICTENDIX              @ZD00006*/
         4 ICTMODST BIT(8),         /* FLAG BITS             @ZD00006*/
          5 *        BIT(1),        /* UNUSED                @Z67SP00*/

          5 ICTMIDPS BIT(1),        /* MID PRE'D/SUP'D BY SYSMOD ASSOC
                                       W/SELECTED ELEMENT    @Z67SP00*/
          5 ICTMIDPL BIT(1),        /* MID PRE'D/SUP'D BY LAST SYSMOD
                                       PROCESSED (HMASMTMS)  @Z67SP00*/
          5 ICTMIDF1 BIT(1),        /*                       @Z67SP00*/
          5 ICTMIDRG BIT(1),        /* REGRESSED IN PTF      @ZD00006*/
          5 ICTMIDAM BIT(1),        /* RMID RESULT OF ASSEM  @ZD00006*/
          5 ICTMIDTY BIT(2);        /* MODID TYPE            @Z67SP00*/
    DECLARE                         /*                       @Z67SP00*/
      ICTMIDRM BIT(2) CONSTANT('01'B); /* RMID TYPE MODID    @Z67SP00*/
    DECLARE                         /*                       @Z67SP00*/
      ICTMIDFM BIT(2) CONSTANT('10'B); /* FMID TYPE MODID    @Z67SP00*/
    DECLARE                         /*                       @Z67SP00*/
      ICTMIDUP BIT(2) CONSTANT('00'B); /* UMID TYPE MODID    @Z67SP00*/
    DECLARE                         /*                       @Z67SP00*/
      ICTMIDUN BIT(2) CONSTANT('11'B); /* UNUSED MODID TYPE  @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* ASM LIST                                                      */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @ZD00006*/
      1 ICTASMLS(*) PTR(31) BDY(WORD) BASED(ICTMACHN(1)),/* LIST OF
                                       ASSEMBLY ADDRESSES    @ZD00006*/
       2 ICTASMAD PTR(31),          /* PTR TO ICT ASM ENTRY  @ZD00006*/
         4 ICTASMND PTR(31);        /* END OFF LIST          @ZD00006*/

    /*****************************************************************/
    /*                                                               */
    /* ALIAS NAME LIST                                               */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @Z67SP00*/
      1 ICTTALLS(*) CHAR(8) BASED(ICTMTCHN(1)) BDY(WORD),/* LIST OF
                                       ALIAS NAMES           @Z67SP00*/
       2 ICTTALNM CHAR(8) BDY(WORD),/* ALIAS NAME FOR MOD    @Z67SP00*/
         4 ICTTALND PTR(31);        /* END OFF LIST          @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* VERSION LIST                                                  */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @Z67SP00*/
      1 ICTMVRLS(*) CHAR(8) BASED(ICTMVCHN(1)) BDY(WORD),/* LIST OF
                                       VERSIONED FMIDS       @Z67SP00*/
       2 ICTMVRNT CHAR(8) BDY(WORD),/* VERSION ENTRY         @Z67SP00*/
         4 ICTMVRNM CHAR(7) BDY(WORD),/* VERSION FMID        @Z67SP00*/
          5 ICTMVRND PTR(31),       /* END OFF LIST          @Z67SP00*/
         4 * BIT(8);                /* UNUSED                @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* UMID    LIST                                                  */
    /*                                                               */
    /*****************************************************************/

    DECLARE                         /*                       @Z67SP00*/
      1 ICTMUMLS(*) CHAR(8) BASED(ICTMUCHN(1)) BDY(WORD),/* LIST OF
                                       UMID SYSMOD-IDS       @Z67SP00*/
       2 ICTMUMNT CHAR(8) BDY(WORD),/* UMID    ENTRY         @Z67SP00*/
         4 ICTMUMNM CHAR(7) BDY(WORD),/* UMID SYSMOD-ID      @Z67SP00*/
          5 ICTMUMND PTR(31),       /* END OFF LIST          @Z67SP00*/
         4 * BIT(8);                /* UNUSED                @Z67SP00*/
 %ICTNOMOD:
    ;                               /*                       @Z67SP00*/
    %IF ICTALL='NO'                 /*                       @Z67SP00*/
        %THEN                       /*                       @Z67SP00*/
      %IF ICT_LMOD^='YES'           /*                       @Z67SP00*/
          %THEN                     /*                       @Z67SP00*/
        %GOTO ICTNOLMD;
    %;                              /*                       @Z67SP00*/
*@EJECT;

*/********************************************************************/
*/*                                                                  */
*/*    LOAD MODULE SECTION OF ICT.                                   */
*/*                                                                  */
*/********************************************************************/

    %IF ICTLMOD_BASE='' %THEN
      %ICTLMOD_BASE='BASED(CCAICLMD)';
    %IF ICT_BASE='NO' %THEN
      %ICTLMOD_BASE='BASED';
    DECLARE
      1 ICTLMOD(*) ICTLMOD_BASE,    /* LOAD MODULE SECTION OF ICT    */
       2 ICTLMNAM CHAR(8),          /* LOAD MODULE NAME              */
        3 ICTLNAME CHAR(8),         /* LOAD MODULE NAME              */
         4 ICTLEND BIN(32) BDY(BYTE),/* INDICATOR FOR END OF LMODS   */
       2 ICTLFLG4 BIT(8),           /* LMOD INTERNAL FLAGS   @Z40SP00*/
         4 ICTLPROC BIT(1),         /* LMOD IN PROCESS               */
         4 ICTLNOGO BIT(1),         /* LMOD NOGO FLAG                */
         4 ICTLCPL BIT(1),          /* LMOD COMPLETE                 */
         4 ICTLMSG BIT(1),          /* LMOD MSG PUT OUT      @Z40SP00*/
         4 ICTLDDCK BIT(1),         /* LMOD DD CARDS CHECKED AND WERE
                                       AVAILABLE             @Z40SP00*/
         4 ICTLPASS BIT(1),         /* TABLE INTERNAL PROCESSING PASS
                                       FLAG                  @Z40SP00*/
         4 * BIT(2),                /* UNUSED                @Z40SP00*/
       2 ICTLFLG1 BIT(8),           /* LINK-EDIT PARMS. KEEP IN SAME
                                       ORDER AS IOPFLGS2             */
         4 ICTLAPF BIT(1),          /* APF AC=1              @VS08700*/
         4 ICTLRENT BIT(1),         /* RE-ENTRANT                    */
         4 ICTLREUS BIT(1),         /* REUSABLE                      */
         4 ICTLSCTR BIT(1),         /* SCATTER LOADABLE              */
         4 ICTLOVLY BIT(1),         /* OVERLAY STRUCTURE             */
         4 ICTLREFR BIT(1),         /* REFRESHABLE                   */
         4 ICTLDC BIT(1),           /* DOWNWARD COMPATIBLE           */
         4 * BIT(1),                /* UNUSED                @ZD00009*/
       2 ICTLFLG5 BIT(8),           /* SAME AS IOPLMDF2      @ZD00009*/
         4 ICTLNE BIT(1),           /* NOT EDITABLE                  */
         4 ICTLPAGA BIT(1),         /* ALIGN2 OPTION SPEC.   @ZD00009*/
         4 * BIT(6),                /* UNUSED                @ZD00009*/
       2 ICTLFLG6 BIT(8),           /* SAME AS IOPLMDF3      @ZD00009*/
         4 * BIT(8),                /* UNUSED                @ZD00009*/
       2 ICTLFLG7 BIT(8),           /* SAME AS IOPLMDF4      @ZD00009*/
         4 * BIT(8),                /* UNUSED                @ZD00009*/
       2 ICTLFLG2 BIT(8),           /* ADDITIONAL LE FLAGS AND
                                       INTERNAL FLAGS.KEEP IN SAME
                                       ORDER AS A IOPLMDF5   @ZD00004*/
         4 ICTCOPY BIT(1),          /* '1'B INDICATES COPY AT SYSGEN */
*/*                                    SO COMPRESS DEL MAY BE DONE   */
*/*                                    '0'B INDICATES LINK AT SYSGEN */
*/*                                    SO NO COMPRESS DELETE         */

         4 ICTLINK BIT(1),          /* LINK-EDIT PARM OBTAINED       */
         4 ICTLTDEL BIT(1),         /* DELETE THIS LMOD      @Z67SP00*/
         4 * BIT(1),                /* UNUSED                @ZD00009*/
         4 ICTLDEL BIT(1),          /* LMOD PROCESSED BY COMPRESS
                                                             @COMPRES*/
         4 * BIT(3),                /* UNUSED                @XA05949*/
       2 ICTLFLG3 BIT(8),           /* LMOD INTERNAL FLAGS           */
         4 ICTTIND1 BIT(1),         /* TARGET LIB 1 PRESENT          */
         4 ICTTIND2 BIT(1),         /* TARGET LIB 2 PRESENT          */
         4 ICTLXPND BIT(1),         /* LMOD TO BE EXPANDED   @OY04018*/
         4 ICTLCPY BIT(1),          /* LOAD MODULE IS TO BE COPIED   */
*/*                                                          @Z67SP00*/
         4 ICTLLKD BIT(1),          /* LOAD MODULE IS TO BE LINKED   */
*/*                                                          @Z67SP00*/
         4 ICTLZAP BIT(1),          /* LOAD MODULE IS TO BE ZAPED    */
*/*                                                          @Z67SP00*/
         4 * BIT(2),                /* UNUSED                @Z67SP00*/
       2 ICTTG1 CHAR(8),            /* TARGET LIB 1 DDNAME           */
       2 ICTTG2 CHAR(8),            /* TARGET LIB 2 DDNAME           */
       2 ICTLTTR BIN(24) BDY(BYTE), /* TTR OF LMOD DATA AREA         */
       2 ICTLCHN PTR(31) BDY(BYTE), /* CHAIN POINTER TO INDEX BACK TO
                                       MODULE SECTIONS               */
       2 * CHAR(16);                /* RESERVED              @Z67SP00*/

    /*****************************************************************/
    /*                                                               */
    /* VARIABLE LISTS POINTED TO BY ADDRESSES WITHIN THE LMOD ENTRY  */
    /*                                                               */
    /*****************************************************************/

    DECLARE
      1 ICTIXLF(*) PTR(31) BASED(ICTLCHN(1)),/* MOD CHAIN PTR@Z40SP00*/
       2 ICTIXL PTR(31);            /* CHAIN PTR BACK TO ICT MODULE
                                       ENTRIES               @Z40SP00*/
 %ICTNOLMD:
    ;                               /*                       @Z67SP00*/
    %IF ICTALL='NO'                 /*                       @Z67SP00*/
        %THEN                       /*                       @Z67SP00*/
      %IF ICTCONSTANT^='YES'        /*                       @Z67SP00*/
          %THEN                     /*                       @Z67SP00*/
        %GOTO ICTNOCST;
    %;                              /*                       @Z67SP00*/
 @EJECT;                           /*                       @Z40SP00*/

    /*****************************************************************/
    /*                                                               */
    /* CONSTANTS USED TO COMPARE FOR END OF ENTRIES AND END OF INDEX */
    /* CHAIN AND LENGTH OF EACH INDEX CHAIN ENTRY            @Z40SP00*/
    /*                                                               */
    /*****************************************************************/

    DECLARE
      ICTENDCH CHAR(4) INIT('FFFFFFFF'X) STATIC LOCAL /* END OF SECTION
                                       MARKER                @Z40SP00*/
                BDY(WORD);
    DECLARE
      ICTENDNT BIT(32) DEF(ICTENDCH);/* END OF SECTION
                                       MARKER                @Z40SP00*/
    DECLARE
      ICTENDIX BIT(32) DEF(ICTENDCH);/*
                                       END OF INDICIES MARKER@Z40SP00*/
 %ICTNOCST:
    ;                               /*                       @Z67SP00*/
