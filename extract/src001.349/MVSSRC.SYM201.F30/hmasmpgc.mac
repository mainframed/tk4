         TITLE 'HMASMPGC - PURGE CRQ/ACRQ PROCEDURE'
HMASMPGC CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'HMASMPGC  78.334'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                      PASSED                        */
*   HIGHPGC=ZERO;                   /* CLEAR RETURN CODE COLLECTOR   */
         SLR   HIGHPGC,HIGHPGC                                     0178
*   IOPPTR=CCAIOPTR;                /* SET POINTER TO CCA IOP        */
*                                                                  0179
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0179
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE WHAT FUNCTION IS BEING EXECUTED SO THAT THE IOPDSID */
*   /* IS SET TO THE PROPER DATASET. (APPLY/RESTORE=CRQ,ACCEPT=ACRQ) */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0180
*   IF CCAACCPT=ON THEN             /* FOR ACCEPT MODE SET           */
         TM    CCAACCPT(CCAPTR),B'00100000'                        0180
         BNO   @RF00180                                            0180
*     IOPDSID=IOPACRQ;              /* IOPDSID = ACRQ                */
         MVI   IOPDSID(IOPPTR),X'1E'                               0181
*   ELSE                            /* ELSE DEFAULT TO APPLY/RESTORE */
*     IOPDSID=IOPCRQ;               /* AND SET IOPDSID = CRQ         */
*                                                                  0182
         B     @RC00180                                            0182
@RF00180 MVI   IOPDSID(IOPPTR),X'1C'                               0182
*   /*****************************************************************/
*   /*                                                               */
*   /* FOR APPLY/ACCEPT PROCESSING CALL INTERNAL PROCEDURE, PGCAPP,  */
*   /* FOR EXPLICITLY DELETED SYSMODS AND RETURN TO CALLER           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0183
*   IF CCAAPPLY=ON                  /* APPLY                         */
*       ×CCAACCPT=ON                /* ACCEPT                        */
*     THEN                                                         0183
@RC00180 TM    CCAAPPLY(CCAPTR),B'01100000'                        0183
         BZ    @RF00183                                            0183
*     DO;                                                          0184
*       IF ICTPDEXP(1)=ON           /* EXPLICITLY DELETED SYSMOD     */
*         THEN                                                     0185
         L     @10,@PC00001                                        0185
         TM    ICTPDEXP(@10),B'00100000'                           0185
         BNO   @RF00185                                            0185
*         DO;                                                      0186
*           CALL PGCAPP;            /* APPLY/ACCEPT PROCESSING       */
         BAL   @14,PGCAPP                                          0187
*           RESPECIFY                                              0188
*             RTNCODE RSTD;                                        0188
*           HIGHPGC=MAX(HIGHPGC,RTNCODE);/* MAINTAIN RETURN CODE     */
         CR    HIGHPGC,RTNCODE                                     0189
         BNL   *+6
         LR    HIGHPGC,RTNCODE                                     0189
*           RESPECIFY                                              0190
*             RTNCODE UNRSTD;                                      0190
*         END;                                                     0191
*       RETURN CODE(HIGHPGC);       /* RETURN TO CALLER              */
@RF00185 LR    @15,HIGHPGC                                         0192
         L     @13,4(,@13)                                         0192
         L     @14,12(,@13)                                        0192
         LM    @00,@12,20(@13)                                     0192
         BR    @14                                                 0192
*     END;                                                         0193
*                                                                  0194
*   /*****************************************************************/
*   /*                                                               */
*   /* RESTORE (A)CRQ PROCESSING                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0194
*   MATCHSW=OFF;                    /* INITIALIZE SWITCH             */
@RF00183 DS    0H                                                  0195
*   GTAFILP=OFF;                    /* INITIALIZE SWITCH             */
*                                                                  0195
         NI    MATCHSW,B'00111111'                                 0195
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP PARAMETER FOR HMASMGTA MODULE CALL (IF NEEDED).        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0196
*   HMASMGTP(1)=''B;                /* ZERO OUT THE PARM AREA        */
         XC    HMASMGTP(28),HMASMGTP                               0196
*   GTPFUNCT(1)=GTPADD;             /* INDICATE ADD OPERATION        */
         MVI   GTPFUNCT,X'04'                                      0197
*   GTPRCDLN(1)=LENGTH(IOPNAM17);   /* LENGTH EQUAL SYSMOD LENGTH    */
         LA    @10,7                                               0198
         STH   @10,GTPRCDLN                                        0198
*   GTPKEYLN(1)=LENGTH(IOPNAM17);   /* LENGTH EQUAL SYSMOD LENGTH    */
         STH   @10,GTPKEYLN                                        0199
*   GTPBUFAD(1)=ADDR(IOPNAM17);     /* LENGTH EQUAL SYSMOD LENGTH    */
         LA    @10,IOPNAM17(,IOPPTR)                               0200
         ST    @10,GTPBUFAD                                        0200
*   GTPPSIZE(1)=GTP512B;            /* DEFINE PAGE SIZE=512 BYTES    */
         NI    GTPPSIZE,B'11111001'                                0201
         OI    GTPPSIZE,B'00000001'                                0201
*   GTPWKAD(1)=ZERO;                /* INITIALIZE FIELD TO ZERO      */
*                                                                  0202
         SLR   @10,@10                                             0202
         ST    @10,GTPWKAD                                         0202
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THE SYSMOD ENTRY PASSED HAS A CAUSER ENTRY ON THE*/
*   /* (A)CRQ DATASET.                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0203
*   IOPFUNCT=IOPBLDL;               /* ATTEMPT TO LOCATE SYSMOD ENTRY
*                                      PASSED ON THE (A)CRQ          */
         MVI   IOPFUNCT(IOPPTR),X'04'                              0203
*   IOPNAM17=ICTPTFS(1);            /* FILL IN SYSMOD ID             */
         L     @10,@PC00001                                        0204
         MVC   IOPNAM17(7,IOPPTR),ICTPTFS(@10)                     0204
*   IOPTYPE=IOPCSR;                 /* INDICATE CRQ/ACRQ CAUSER (SMD)*/
         MVI   IOPTYPE(IOPPTR),X'0F'                               0205
*   CALL HMASMIO(HMASMIOP);         /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0206
         L     @15,@CV01640                                        0206
         LA    @01,@AL00001                                        0206
         BALR  @14,@15                                             0206
*   IF IOPRETRN>IOPNTFND THEN       /* CHECK FOR SUCCESSFULL BLDL.   */
         CLI   IOPRETRN(IOPPTR),4                                  0207
         BNH   @RF00207                                            0207
*     RETURN CODE(IOPRETRN);        /* IF GREATER THAN EOF RETURN  0208
*                                      WITH NOT OPEN OR IO ERROR RC  */
         SLR   @15,@15                                             0208
         IC    @15,IOPRETRN(,IOPPTR)                               0208
         L     @13,4(,@13)                                         0208
         L     @14,12(,@13)                                        0208
         LM    @00,@12,20(@13)                                     0208
         BR    @14                                                 0208
*   IF IOPRETRN=IOPNTFND THEN       /* CHECK FOR NOT FOUND ON BLDL   */
@RF00207 CLI   IOPRETRN(IOPPTR),4                                  0209
         BNE   @RF00209                                            0209
*     RETURN CODE(IOPGOOD);         /* IF NOT FOUND RETURN WITH RC=0
*                                      (NO CAUSER SAME AS DELETED)   */
         SLR   @15,@15                                             0210
         L     @13,4(,@13)                                         0210
         L     @14,12(,@13)                                        0210
         LM    @00,@12,20(@13)                                     0210
         BR    @14                                                 0210
*                                                                  0211
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP HMASMIOP PARAMETER LIST FOR CALL TO HMASMIO SO THAT THE*/
*   /* CAUSER ENTRY FOR THE SYSMOD PASSED CAN BE DELETED.            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0211
*   IOPFUNCT=IOPSTOWD;              /* INDICATE STOW DELETE FUNCTION */
@RF00209 MVI   IOPFUNCT(IOPPTR),X'53'                              0211
*   CALL HMASMIO(HMASMIOP);         /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0212
         L     @15,@CV01640                                        0212
         LA    @01,@AL00001                                        0212
         BALR  @14,@15                                             0212
*   IF IOPRETRN^=IOPGOOD THEN       /* CHECK FOR SUCCESSFULL DELETE  */
         CLI   IOPRETRN(IOPPTR),0                                  0213
         BE    @RF00213                                            0213
*     RETURN CODE(IOPRETRN);        /* RETURN WITH ^=0 RC            */
*                                                                  0214
         SLR   @15,@15                                             0214
         IC    @15,IOPRETRN(,IOPPTR)                               0214
         L     @13,4(,@13)                                         0214
         L     @14,12(,@13)                                        0214
         LM    @00,@12,20(@13)                                     0214
         BR    @14                                                 0214
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP HMASMIOP PARAMETER LIST FOR CALL TO HMASMIO TO CLOSE   */
*   /* AND SET UP HMASMIO TO READ THE DIRECTORY OF THE (A)CRQ.       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0215
*   IOPFUNCT=IOPCLOSN;              /* INDICATE CLOSE GETN FILE      */
@RF00213 MVI   IOPFUNCT(IOPPTR),X'0C'                              0215
*   CALL HMASMIO(HMASMIOP);         /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0216
         L     @15,@CV01640                                        0216
         LA    @01,@AL00001                                        0216
         BALR  @14,@15                                             0216
*   IF IOPRETRN^=IOPGOOD THEN       /* CHECK FOR SUCCESSFULL CLOSN   */
         CLI   IOPRETRN(IOPPTR),0                                  0217
         BE    @RF00217                                            0217
*     RETURN CODE(IOPRETRN);        /* RETURN WITH ^=0 RC            */
         SLR   @15,@15                                             0218
         IC    @15,IOPRETRN(,IOPPTR)                               0218
         L     @13,4(,@13)                                         0218
         L     @14,12(,@13)                                        0218
         LM    @00,@12,20(@13)                                     0218
         BR    @14                                                 0218
*                                                                  0219
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP HMASMIOP PARAMETER LIST FOR CALL TO HMASMIO TO READ THE*/
*   /* DIRECTORY OF THE (A)CRQ. EXIT THE LOOP ON AN I/O ERROR OR AN  */
*   /* END-OF-FILE.                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0219
*   DO I=1 BY 1;                    /* DO LOOP FOR DIRECTORY READ    */
@RF00217 LA    I,1                                                 0219
@DL00219 DS    0H                                                  0220
*     IOPFUNCT=IOPGETN;             /* INDICATE GET NEXT DIR ENTRY   */
         MVI   IOPFUNCT(IOPPTR),X'0A'                              0220
*     CALL HMASMIO(HMASMIOP);       /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0221
         L     @15,@CV01640                                        0221
         LA    @01,@AL00001                                        0221
         BALR  @14,@15                                             0221
*     IF IOPRETRN>IOPEOF THEN       /* CHECK FOR IO ERROR. IF FOUND  */
         CLI   IOPRETRN(IOPPTR),4                                  0222
         BNH   @RF00222                                            0222
*       RETURN CODE(IOPRETRN);      /* RETURN WITH IO ERROR RC       */
         SLR   @15,@15                                             0223
         IC    @15,IOPRETRN(,IOPPTR)                               0223
         L     @13,4(,@13)                                         0223
         L     @14,12(,@13)                                        0223
         LM    @00,@12,20(@13)                                     0223
         BR    @14                                                 0223
*     IF IOPRETRN=IOPEOF THEN       /* CHECK FOR END OF FILE. IF     */
@RF00222 CLI   IOPRETRN(IOPPTR),4                                  0224
         BE    @RT00224                                            0224
*       GOTO DELFMID;               /* FOUND CONTINUE AT END OF FILE */
*                                                                  0225
*     /***************************************************************/
*     /*                                                             */
*     /* AT THIS POINT IF ALL OF THE DIRECTORY ENTRIES HAVE BEEN READ*/
*     /* THEN CONTINUE AT DELFMID SO THAT ANY FMID ENTRIES THAT WERE */
*     /* SAVED FOR DELETION PROCESSING CAN BE DELETED NOW THAT THE   */
*     /* SEQUENTIAL READ OF THE DIRECTORY IS COMPLETE. THESE FMID    */
*     /* ENTRIES (IF ANY) WERE SAVED ON THE GTA FILE. THIS IS THE    */
*     /* ONLY ENTRY FOR THE LABEL DELFMID.                           */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0226
*                                                                  0226
*     /***************************************************************/
*     /*                                                             */
*     /* DETERMINE IF THE DIRECTORY ENTRY READ IS AN FMID TYPE (I.E.-*/
*     /* IOPITYP=IOPIQFMD). IF NOT READ NEXT DIRECTORY ENTRY.        */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0226
*     IF IOPITYP=IOPIQFMD THEN      /* IS THIS A FMID ENTRY?         */
         CLI   IOPITYP(IOPPTR),C'F'                                0226
         BNE   @RF00226                                            0226
*       DO;                         /* DO FOR FMID ENTRIES ONLY      */
*                                                                  0227
*         /***********************************************************/
*         /*                                                         */
*         /* CALL HMASMIO WITH EXTEND FUNCTION TO EXTEND THE         */
*         /* DIRECTORY WITH THE ADDITIONAL INFORMATION STORED IN THE */
*         /* SPECIFIED DATASET.                                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0228
*         IOPFUNCT=IOPXTND;         /* INDICATE EXTEND ENTRY OPER    */
         MVI   IOPFUNCT(IOPPTR),X'07'                              0228
*         CALL HMASMIO(HMASMIOP);   /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0229
         L     @15,@CV01640                                        0229
         LA    @01,@AL00001                                        0229
         BALR  @14,@15                                             0229
*         IF IOPRETRN^=IOPGOOD THEN /* CHECK FOR SUCCESSFULL EXTEND  */
         CLI   IOPRETRN(IOPPTR),0                                  0230
         BE    @RF00230                                            0230
*           RETURN CODE(IOPRETRN);  /* FOR INPUT. IF RC^=0 RETURN.   */
         SLR   @15,@15                                             0231
         IC    @15,IOPRETRN(,IOPPTR)                               0231
         L     @13,4(,@13)                                         0231
         L     @14,12(,@13)                                        0231
         LM    @00,@12,20(@13)                                     0231
         BR    @14                                                 0231
*                                                                  0232
*         /***********************************************************/
*         /*                                                         */
*         /* SEARCH THROUGH EXTENDED FMID DIRECTORY LOOKING FOR A    */
*         /* MATCHING CAUSER SUBENTRY EQUAL TO THE SYSMOD ENTRY      */
*         /* PASSED. IF FOUND THEN REMOVE FROM THE SUBENTRY LIST. IF */
*         /* NO OTHER SUB- ENTRIES EXIST THEN SAVE THE DIRECTORY     */
*         /* ENTRY NAME FOR SUBSE- QUENT DELETE PROCESSING AT END OF */
*         /* FILE OF DIRECTORY READ LOOP. IF ENTRY IS STILL VALID AND*/
*         /* HAS CHANGED THEN CALL HMASMIO TO DO A STOW REPLACE OF   */
*         /* THE DIRECTORY ENTRY. IF NO CHANGE THEN CONTINUE WITH THE*/
*         /* NEXT DIRECTORY ENTRY.                                   */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0232
*         J=1;                      /* INIT VARIABLE ENTRY COUNTER   */
@RF00230 LA    @10,1                                               0232
         LR    J,@10                                               0232
*         MATCHSW=OFF;              /* INIT MATCH FOUND INDICATOR    */
         NI    MATCHSW,B'10111111'                                 0233
*         DO K=1 BY 1 WHILE         /* PROCESS VARIABLE SUBENTRIES   */
*               IOPQFMND(K)^=IOPEOLST;/* TILL END OF LIST            */
         LR    K,@10                                               0234
         B     @DE00234                                            0234
@DL00234 DS    0H                                                  0235
*           IF IOPQFMNM(K)=ICTPTFS(1)/* DOES SYSMOD ENTRY INPUT    0235
*                                      APPEAR IN SUBENTRY LIST?      */
*               &IOPQFMTP(K)=IOPQFMSM THEN/* IS THE ENTRY TYPE A   0235
*                                      SYSMOD NUMBER?                */
*                                                                  0235
         LR    @10,K                                               0235
         MH    @10,@CH00820                                        0235
         L     @15,@PC00001                                        0235
         ST    @10,@TF00001                                        0235
         ALR   @10,IOPPTR                                          0235
         CLC   IOPQFMNM-9(7,@10),ICTPTFS(@15)                      0235
         BNE   @RF00235                                            0235
         L     @10,@TF00001                                        0235
         SLR   @15,@15                                             0235
         IC    @15,IOPQFMTP-9(@10,IOPPTR)                          0235
         CH    @15,@CH00085                                        0235
         BNE   @RF00235                                            0235
*             /*******************************************************/
*             /*                                                     */
*             /* DON'T PROCESS MATCHING ENTRY (I.E.- ELIMINATE FROM  */
*             /* LIST) TURN ON BIT INDICATING A STOWR IS NEEDED IF   */
*             /* OTHER CAUSER SUBENTRIES EXIST IN THE FMID ENTRY.    */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0236
*             DO;                                                  0236
*               MATCHSW=ON;         /* INDICATE A MATCH FOUND        */
         OI    MATCHSW,B'01000000'                                 0237
*               IF IOPQFMND(K+1)=IOPEOLST THEN/* NEXT ENTRY LIST END?*/
         LA    @10,255                                             0238
         L     @01,@TF00001                                        0238
         SLR   @00,@00                                             0238
         IC    @00,IOPQFMND(@01,IOPPTR)                            0238
         CR    @10,@00                                             0238
         BNE   @RF00238                                            0238
*                 IOPQFMND(K)=IOPEOLST;/* YES- SET THIS END OF LIST  */
         L     @01,@TF00001                                        0239
         STC   @10,IOPQFMND-9(@01,IOPPTR)                          0239
*             END;                                                 0240
*           ELSE                                                   0241
*             DO;                   /*                               */
*                                                                  0241
         B     @RC00235                                            0241
@RF00235 DS    0H                                                  0242
*               /*****************************************************/
*               /*                                                   */
*               /* SAVE NON-MATCHING ENTRIES (I.E.- PUT IN LIST FOR  */
*               /* STOWR IF REQUIRED DUE TO A CHANGE WHICH IS THE    */
*               /* ELIMINATION OF A CAUSER SUBENTRY THAT MATCHES THE */
*               /* SYSMOD PASSED).                                   */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0242
*               IOPQFMNM(J)=IOPQFMNM(K);/* SAVE NON-MATCH ENT        */
         LA    @10,9                                               0242
         LR    @01,J                                               0242
         MR    @00,@10                                             0242
         ALR   @01,IOPPTR                                          0242
         LR    @07,@10                                             0242
         MR    @06,K                                               0242
         ST    @07,@TF00001                                        0242
         ALR   @07,IOPPTR                                          0242
         MVC   @TS00001(7),IOPQFMNM-9(@07)                         0242
         MVC   IOPQFMNM-9(7,@01),@TS00001                          0242
*               IF IOPQFMND(K+1)=IOPEOLST/* IS NEXT ENTRY LIST END,  */
*                   &J^=K THEN      /* AND ANY ENTRIES DROPPED?      */
         LA    @10,255                                             0243
         L     @01,@TF00001                                        0243
         SLR   @00,@00                                             0243
         IC    @00,IOPQFMND(@01,IOPPTR)                            0243
         CR    @10,@00                                             0243
         BNE   @RF00243                                            0243
         CR    J,K                                                 0243
         BE    @RF00243                                            0243
*                 IOPQFMND(K)=IOPEOLST;/* YES- SET THIS END OF LIST  */
         L     @01,@TF00001                                        0244
         STC   @10,IOPQFMND-9(@01,IOPPTR)                          0244
*               J=J+1;              /* BUMP VARIABLE SUBENTRY COUNTER*/
@RF00243 AH    J,@CH00085                                          0245
*             END;                  /*                               */
*         END;                      /*                               */
@RC00235 AH    K,@CH00085                                          0247
@DE00234 LR    @10,K                                               0247
         MH    @10,@CH00820                                        0247
         SLR   @15,@15                                             0247
         IC    @15,IOPQFMND-9(@10,IOPPTR)                          0247
         CH    @15,@CH01006                                        0247
         BNE   @DL00234                                            0247
*                                                                  0248
*         /***********************************************************/
*         /*                                                         */
*         /* AT THIS POINT ALL CAUSER SUBENTRIES HAVE BEEN SEARCHED. */
*         /* DETERMINE IF A CAUSER SUBENTRY WAS DROPPED AND IF THERE */
*         /* ARE ANY CAUSER SUBENTRIES LEFT. IF SO THEN SET UP AND DO*/
*         /* A STOWR OF THE FMID ENTRY. IF A CAUSER SUBENTRY WAS     */
*         /* DROPPED FROM LIST AND THERE ARE NO MORE CAUSER          */
*         /* SUBENTRIES LEFT, THEN SAVE THE FMID ENTRY NAME FOR      */
*         /* SUBSEQUENT DELETION PROCESSING.                         */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0248
*         IF MATCHSW=ON             /* WAS A SUBENTRY DROPPED AND    */
*             &IOPQFMND(1)^=IOPEOLST THEN/* ANY SUBENTRIES LEFT?     */
         TM    MATCHSW,B'01000000'                                 0248
         BNO   @RF00248                                            0248
         CLI   IOPQFMND(IOPPTR),255                                0248
         BE    @RF00248                                            0248
*           DO;                     /* DO FOR DROPPED SUBENTRY       */
*             IOPFUNCT=IOPSTOWR;    /* INDICATE STOW REPLACE OPER    */
         MVI   IOPFUNCT(IOPPTR),X'54'                              0250
*             CALL HMASMIO(HMASMIOP);/* CALL SMP IO INTERFACE MODULE */
         ST    IOPPTR,@AL00001                                     0251
         L     @15,@CV01640                                        0251
         LA    @01,@AL00001                                        0251
         BALR  @14,@15                                             0251
*             IF IOPRETRN^=IOPGOOD THEN/* CHECK FOR SUCCESSFUL STOWR */
         CLI   IOPRETRN(IOPPTR),0                                  0252
         BE    @RF00252                                            0252
*               RETURN CODE(IOPRETRN);/* RETURN WITH RC^=0           */
         SLR   @15,@15                                             0253
         IC    @15,IOPRETRN(,IOPPTR)                               0253
         L     @13,4(,@13)                                         0253
         L     @14,12(,@13)                                        0253
         LM    @00,@12,20(@13)                                     0253
         BR    @14                                                 0253
*           END;                    /*                               */
*                                                                  0254
@RF00252 DS    0H                                                  0255
*         /***********************************************************/
*         /*                                                         */
*         /* IF THERE ARE NO CAUSER SUBENTRIES LEFT IN THE ENTRY,    */
*         /* THEN SAVE THE FMID ENTRY NAME FOR DELETE PROCESSING.    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0255
*         IF IOPQFMND(1)=IOPEOLST THEN/* ANY SUBENTRIES LEFT?        */
@RF00248 CLI   IOPQFMND(IOPPTR),255                                0255
         BNE   @RF00255                                            0255
*           DO;                     /* NO- THEN DO                   */
*             GTAFILP=ON;           /* INDICATE GTA FILE PRESENT     */
         OI    GTAFILP,B'10000000'                                 0257
*             CALL HMASMGTA(HMASMGTP(1));/* CALL SMP GENERAL TABLE 0258
*                                      MODULE FOR ADD OPERATION AS 0258
*                                      SET UP AT THE START OF MAIN 0258
*                                      LINE CODE                     */
         L     @15,@CV01641                                        0258
         LA    @01,@AL00258                                        0258
         BALR  @14,@15                                             0258
*             IF GTPRETRN(1)^=GTPGOOD THEN/* ERROR ENCOUNTERED       */
         CLI   GTPRETRN,0                                          0259
         BE    @RF00259                                            0259
*               RETURN CODE(GTPRETRN(1));/* RETURN WITH RC^=0        */
         SLR   @15,@15                                             0260
         IC    @15,GTPRETRN                                        0260
         L     @13,4(,@13)                                         0260
         L     @14,12(,@13)                                        0260
         LM    @00,@12,20(@13)                                     0260
         BR    @14                                                 0260
*           END;                    /*                               */
@RF00259 DS    0H                                                  0262
*       END;                        /*                               */
@RF00255 DS    0H                                                  0263
*   END;                            /*                               */
@RF00226 AH    I,@CH00085                                          0263
         B     @DL00219                                            0263
*                                                                  0264
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF ANY FMID ENTRY NAMES WERE SAVED IN THE GTA FILE  */
*   /* (VIA HMASMGTA) FOR DELETION.                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0264
*DELFMID:                           /* ONLY REACHED ON IOPEOF ON   0264
*                                      DIRECTORY READ                */
*   IF GTAFILP=ON THEN              /* ANY ENTRIES PUT TO GTA FILE?  */
DELFMID  TM    GTAFILP,B'10000000'                                 0264
         BNO   @RF00264                                            0264
*     DO;                           /*                               */
*       IOPTYPE=IOPFMD;             /* INDICATE ENVIRONMENT ENTRY    */
         MVI   IOPTYPE(IOPPTR),X'0E'                               0266
*       IOPFUNCT=IOPSTOWD;          /* INDICATE STOW DELETE OPER     */
         MVI   IOPFUNCT(IOPPTR),X'53'                              0267
*       GTPFUNCT(1)=GTPOPENN;       /* INDICATE GTPOPENN OPERATION   */
         MVI   GTPFUNCT,X'01'                                      0268
*       CALL HMASMGTA(HMASMGTP(1)); /* CALL SMP GENERAL TABLE MODULE
*                                      FOR OPENN OPERATION TO SET UP
*                                      TO GETN THE GTA FILE RECORDS  */
         L     @15,@CV01641                                        0269
         LA    @01,@AL00269                                        0269
         BALR  @14,@15                                             0269
*       IF GTPRETRN(1)^=GTPGOOD THEN/* CHECK FOR GOOD GTPOPENN OPER  */
         CLI   GTPRETRN,0                                          0270
         BE    @RF00270                                            0270
*         RETURN CODE(GTPRETRN(1)); /* RETURN WITH RC^=0             */
         SLR   @15,@15                                             0271
         IC    @15,GTPRETRN                                        0271
         L     @13,4(,@13)                                         0271
         L     @14,12(,@13)                                        0271
         LM    @00,@12,20(@13)                                     0271
         BR    @14                                                 0271
*       GTPFUNCT(1)=GTPGETN;        /* INDICATE GTPGETN OPERATION    */
@RF00270 MVI   GTPFUNCT,X'08'                                      0272
*       GTPBUFAD(1)=ADDR(GTAENTRY); /* READ ENTRY NAME INTO GTAENTRY */
*                                                                  0273
         LA    @10,GTAENTRY                                        0273
         ST    @10,GTPBUFAD                                        0273
*       /*************************************************************/
*       /*                                                           */
*       /* IF THERE ARE NO CAUSER SUBENTRIES LEFT IN THE ENTRY, THEN */
*       /* READ THE ENTRIES FROM THE GTA FILE AND SET EACH UP SO THAT*/
*       /* A STOWD OPERATION CAN BE DONE FOR THAT FMID ENTRY.        */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0274
*       DO D=1 BY 1;                /* EXIT ON RC CHECK INSIDE LOOP  */
         LA    D,1                                                 0274
@DL00274 DS    0H                                                  0275
*         CALL HMASMGTA(HMASMGTP(1));/* CALL SMP GENERAL TABLE MODULE
*                                      FOR OPENN OPERATION TO SET UP
*                                      TO GETN THE GTA FILE RECORDS  */
         L     @15,@CV01641                                        0275
         LA    @01,@AL00275                                        0275
         BALR  @14,@15                                             0275
*         IF GTPRETRN(1)>GTPEOF THEN/* CHECK FOR GTPGETN OPER RC<IO  */
         CLI   GTPRETRN,4                                          0276
         BNH   @RF00276                                            0276
*           RETURN CODE(GTPRETRN(1));/* RETURN WITH RC^=0            */
         SLR   @15,@15                                             0277
         IC    @15,GTPRETRN                                        0277
         L     @13,4(,@13)                                         0277
         L     @14,12(,@13)                                        0277
         LM    @00,@12,20(@13)                                     0277
         BR    @14                                                 0277
*         IF GTPRETRN(1)=GTPEOF THEN/* CHECK FOR GTPGETN EQUAL TO    */
@RF00276 CLI   GTPRETRN,4                                          0278
         BE    @RT00278                                            0278
*           GOTO FREEGTP;           /* EOF. IF SO FREE AND END PGC   */
*                                                                  0279
*         /***********************************************************/
*         /*                                                         */
*         /* AT THIS POINT IF ALL OF THE FMID ENTRIES SAVED IN THE   */
*         /* GTA FILE FOR DELETION HAVE BEEN READ, THEN CONTINUE AT  */
*         /* FREEGTP SO THAT THE CORE GETMAINED FOR THE FILE CAN BE  */
*         /* FREED. THIS IS THE ONLY ENTRY FOR THE LABEL FREEGTP.    */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0280
*                                                                  0280
*         /***********************************************************/
*         /*                                                         */
*         /* SET UP FMID ENTRY READ FROM GTA AS OBJECT OF STOWD      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0280
*         IOPNAME=GTAENTRY;         /* FILL IN ENTRY NAME FOR STOWD  */
         MVI   IOPNAME+7(IOPPTR),C' '                              0280
         MVC   IOPNAME(7,IOPPTR),GTAENTRY                          0280
*         CALL HMASMIO(HMASMIOP);   /* CALL SMP IO INTERFACE MODULE  */
         ST    IOPPTR,@AL00001                                     0281
         L     @15,@CV01640                                        0281
         LA    @01,@AL00001                                        0281
         BALR  @14,@15                                             0281
*         IF IOPRETRN^=IOPGOOD THEN /* CHECK FOR SUCCESSFULL STOWD   */
         CLI   IOPRETRN(IOPPTR),0                                  0282
         BE    @RF00282                                            0282
*           RETURN CODE(IOPRETRN);  /* RETURN IF RC^=0               */
         SLR   @15,@15                                             0283
         IC    @15,IOPRETRN(,IOPPTR)                               0283
         L     @13,4(,@13)                                         0283
         L     @14,12(,@13)                                        0283
         LM    @00,@12,20(@13)                                     0283
         BR    @14                                                 0283
*       END;                        /*                               */
@RF00282 AH    D,@CH00085                                          0284
         B     @DL00274                                            0284
*     END;                          /*                               */
*FREEGTP:                           /*                               */
*                                                                  0286
*   /*****************************************************************/
*   /*                                                               */
*   /* IF GTA FILES WERE USED THEN FREE THE GETMAINED AREA           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0286
*   IF GTAFILP=ON THEN              /*                               */
@RF00264 DS    0H                                                  0286
FREEGTP  TM    GTAFILP,B'10000000'                                 0286
         BNO   @RF00286                                            0286
*     DO;                           /*                               */
*       GTPFUNCT(1)=GTPFREE;        /* INDICATE FREE OPERATION       */
         MVI   GTPFUNCT,X'0A'                                      0288
*       CALL HMASMGTA(HMASMGTP(1)); /* CALL SMP GENERAL TABLE MODULE */
         L     @15,@CV01641                                        0289
         LA    @01,@AL00289                                        0289
         BALR  @14,@15                                             0289
*       IF GTPRETRN(1)^=GTPGOOD THEN/* ERROR ENCOUNTERED             */
         CLI   GTPRETRN,0                                          0290
         BE    @RF00290                                            0290
*         RETURN CODE(GTPRETRN(1)); /* RETURN WITH RC^=0             */
         SLR   @15,@15                                             0291
         IC    @15,GTPRETRN                                        0291
         L     @13,4(,@13)                                         0291
         L     @14,12(,@13)                                        0291
         LM    @00,@12,20(@13)                                     0291
         BR    @14                                                 0291
*     END;                          /*                               */
@RF00290 DS    0H                                                  0293
*   RETURN CODE(ZERO);              /*                               */
@RF00286 SLR   @15,@15                                             0293
         L     @13,4(,@13)                                         0293
         L     @14,12(,@13)                                        0293
         LM    @00,@12,20(@13)                                     0293
         BR    @14                                                 0293
*                                                                  0294
*/********************************************************************/
*/*                                                                  */
*/* PGCAPP - PURGE CRQ PROCESSING AT APPLY AND ACCEPT FOR            */
*/*          EXPLICITLY DELETED SYSMODS                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0294
*PGCAPP:                                                           0294
*   PROC;                                                          0294
PGCAPP   STM   @14,@12,@SA00002                                    0294
*   DCL                                                            0295
*     PGCAPPRC FIXED(31);           /* LOCAL RETURN CODE             */
*   DCL                                                            0296
*     1 PGCAPPF BIT(8),             /* LOCAL FLAGS                   */
*      2 FMIDFND BIT(1),            /* (A)CRQ FMID ENTRY FOUND       */
*      2 * BIT(7);                  /* UN-USED                       */
*   DCL                                                            0297
*     CHKPARM CHAR(1);              /* PARAMETER                     */
*   DCL                                                            0298
*     II FIXED(15);                 /* INDEX                         */
*   RESPECIFY                                                      0299
*     ICTPTF BASED(ADDR(SYSICT));   /* ADDRESS ICT PTF SECTION ENTRY
*                                      PASSED                        */
*   PGCAPPRC=0;                     /* CLEAR LOCAL RETURN CODE       */
         SLR   @10,@10                                             0300
         ST    @10,PGCAPPRC                                        0300
*   PGCAPPF=''B;                    /* CLEAR LOCAL FLAGS             */
*                                                                  0301
         MVI   PGCAPPF,X'00'                                       0301
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TO READ THRU THE (A)CRQ                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0302
*   HMASMGTP(1)=''B;                /* CLEAR THE GTP                 */
         XC    HMASMGTP(28),HMASMGTP                               0302
*   GTPFUNCT(1)=GTPADD;             /* ... ADD RECORDS TO GTA        */
         MVI   GTPFUNCT,X'04'                                      0303
*   GTPRCDLN(1)=LENGTH(CRQFMID);    /* ... SET RECORD LENGTH         */
         LA    @10,7                                               0304
         STH   @10,GTPRCDLN                                        0304
*   GTPKEYLN(1)=LENGTH(CRQFMID);    /* ... SET KEY LENGTH            */
         STH   @10,GTPKEYLN                                        0305
*   GTPBUFAD(1)=ADDR(CRQFMID);      /* ... SET BUFFER ADDRESS        */
         LA    @10,CRQFMID                                         0306
         ST    @10,GTPBUFAD                                        0306
*   GTPPSIZE(1)=GTP512B;            /* ... SET GTA PAGE SIZE         */
         NI    GTPPSIZE,B'11111001'                                0307
         OI    GTPPSIZE,B'00000001'                                0307
*   IOPPTR=CCAIOPTR;                /* USE CCA IOP                   */
         L     IOPPTR,CCAIOPTR(,CCAPTR)                            0308
*   IF CCAAPPLY=ON                  /* APPLY FUNCTION                */
*     THEN                                                         0309
         TM    CCAAPPLY(CCAPTR),B'01000000'                        0309
         BNO   @RF00309                                            0309
*     IOPDSID=IOPCRQ;               /* ... USE CRQ DATASET           */
         MVI   IOPDSID(IOPPTR),X'1C'                               0310
*   ELSE                                                           0311
*     IOPDSID=IOPACRQ;              /* ... USE ACRQ DATASET          */
         B     @RC00309                                            0311
@RF00309 MVI   IOPDSID(IOPPTR),X'1E'                               0311
*   IOPFUNCT=IOPCLOSN;              /* CLOSE (A)CRQ                  */
@RC00309 MVI   IOPFUNCT(IOPPTR),X'0C'                              0312
*   CALL HMASMIO(HMASMIOP);         /*                               */
         ST    IOPPTR,@AL00001                                     0313
         L     @15,@CV01640                                        0313
         LA    @01,@AL00001                                        0313
         BALR  @14,@15                                             0313
*                                                                  0314
*   /*****************************************************************/
*   /*                                                               */
*   /* READ THRU THE (A)CRQ: GET SAVE ALL FMID ENTRIES IN GTA FILE(1)*/
*   /* FOR LATER USE                                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0314
*   IOPFUNCT=IOPGETN;               /* GET-NEXT FUNCTION             */
         MVI   IOPFUNCT(IOPPTR),X'0A'                              0314
*   CALL HMASMIO(HMASMIOP);         /* GET 1ST DIRECTORY ENTRY       */
         ST    IOPPTR,@AL00001                                     0315
         L     @15,@CV01640                                        0315
         LA    @01,@AL00001                                        0315
         BALR  @14,@15                                             0315
*   DO WHILE IOPRETRN=IOPGOOD       /* GO THRU (A)CRQ DIRECTORY      */
*         &PGCAPPRC<STOPPTF;        /* ... NO TERMINATING ERRORS     */
         B     @DE00316                                            0316
@DL00316 DS    0H                                                  0317
*     IF IOPTYPE=IOPFMD             /* FMID ENTRY                    */
*       THEN                                                       0317
         CLI   IOPTYPE(IOPPTR),14                                  0317
         BNE   @RF00317                                            0317
*       DO;                                                        0318
*                                                                  0318
*         /***********************************************************/
*         /*                                                         */
*         /* PUT FMID IN GTA FILE(1)                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0319
*         CRQFMID=IOPNAM17;         /* GET SYSMOD-ID                 */
         MVC   CRQFMID(7),IOPNAM17(IOPPTR)                         0319
*         CALL HMASMGTA(HMASMGTP(1));/* ... PUT IT IN GTA FILE       */
         L     @15,@CV01641                                        0320
         LA    @01,@AL00320                                        0320
         BALR  @14,@15                                             0320
*         PGCAPPRC=MAX(PGCAPPRC,GTPRETRN(1));/* MAINTAIN RTN.CODE    */
         L     @10,PGCAPPRC                                        0321
         SLR   @03,@03                                             0321
         IC    @03,GTPRETRN                                        0321
         CR    @10,@03                                             0321
         BNL   *+6
         LR    @10,@03                                             0321
         ST    @10,PGCAPPRC                                        0321
*       END;                                                       0322
*     CALL HMASMIO(HMASMIOP);       /* GET NEXT DIRECTORY ENTRY      */
@RF00317 ST    IOPPTR,@AL00001                                     0323
         L     @15,@CV01640                                        0323
         LA    @01,@AL00001                                        0323
         BALR  @14,@15                                             0323
*   END;                            /*                               */
*                                                                  0324
@DE00316 CLI   IOPRETRN(IOPPTR),0                                  0324
         BNE   @DC00316                                            0324
         L     @10,PGCAPPRC                                        0324
         CH    @10,@CH00110                                        0324
         BL    @DL00316                                            0324
@DC00316 DS    0H                                                  0325
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCATE THE (A)CRQ FMID ENTRY FOR THE SYSMOD PASSED            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0325
*   IOPFUNCT=IOPCLOSN;              /* CLOSE (A)CRQ                  */
         MVI   IOPFUNCT(IOPPTR),X'0C'                              0325
*   CALL HMASMIO(HMASMIOP);         /*                               */
         ST    IOPPTR,@AL00001                                     0326
         L     @15,@CV01640                                        0326
         LA    @01,@AL00001                                        0326
         BALR  @14,@15                                             0326
*   IOPFUNCT=IOPLOC;                /* LOCATE                        */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0327
*   IOPNAM17=ICTPTFS(1);            /* ... SYSMOD PASSED             */
         L     @10,@PC00001                                        0328
         MVC   IOPNAM17(7,IOPPTR),ICTPTFS(@10)                     0328
*   IOPTYPE=IOPFMD;                 /* ... AS AN FMID ENTRY          */
         MVI   IOPTYPE(IOPPTR),X'0E'                               0329
*   CALL HMASMIO(HMASMIOP);                                        0330
         ST    IOPPTR,@AL00001                                     0330
         L     @15,@CV01640                                        0330
         LA    @01,@AL00001                                        0330
         BALR  @14,@15                                             0330
*   IF IOPRETRN>IOPNOTFD            /* TERMINATING ERROR             */
*     THEN                                                         0331
         CLI   IOPRETRN(IOPPTR),4                                  0331
         BNH   @RF00331                                            0331
*     PGCAPPRC=MAX(PGCAPPRC,IOPRETRN);                             0332
         L     @10,PGCAPPRC                                        0332
         SLR   @03,@03                                             0332
         IC    @03,IOPRETRN(,IOPPTR)                               0332
         CR    @10,@03                                             0332
         BNL   *+6
         LR    @10,@03                                             0332
         ST    @10,PGCAPPRC                                        0332
*   ELSE                                                           0333
*     IF IOPRETRN=IOPGOOD           /* SUCCESSFULLY LOCATED          */
*       THEN                                                       0333
         B     @RC00331                                            0333
@RF00331 CLI   IOPRETRN(IOPPTR),0                                  0333
         BNE   @RF00333                                            0333
*       FMIDFND=ON;                 /* SET LOCAL FLAG                */
         OI    FMIDFND,B'10000000'                                 0334
*                                                                  0335
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD GTA FILE(2) CONTAINING ALL "CAUSERS" FOUND IN THE (A)CRQ*/
*   /* FMID ENTRY FOR THE SYSMOD PASSED                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0335
*   HMASMGTP(2)=''B;                /* CLEAR THE GTP                 */
@RF00333 DS    0H                                                  0335
@RC00331 XC    HMASMGTP+28(28),HMASMGTP+28                         0335
*   GTPFUNCT(2)=GTPADD;             /* ... ADD RECORDS TO GTA        */
         MVI   GTPFUNCT+28,X'04'                                   0336
*   GTPRCDLN(2)=LENGTH(CRQCSR);     /* ... SET RECORD LENGTH         */
         LA    @10,7                                               0337
         STH   @10,GTPRCDLN+28                                     0337
*   GTPKEYLN(2)=LENGTH(CRQCSR);     /* ... SET KEY LENGTH            */
         STH   @10,GTPKEYLN+28                                     0338
*   GTPBUFAD(2)=ADDR(CRQCSR);       /* ... SET BUFFER ADDRESS        */
         LA    @10,CRQCSR                                          0339
         ST    @10,GTPBUFAD+28                                     0339
*   GTPPSIZE(2)=GTP512B;            /* ... SET GTA PAGE SIZE         */
*                                                                  0340
         NI    GTPPSIZE+28,B'11111001'                             0340
         OI    GTPPSIZE+28,B'00000001'                             0340
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU ALL "CAUSERS" IN (A)CRQ FMID ENTRY                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0341
*   DO II=1 BY 1 WHILE IOPQFMND(II)^=IOPEOLST/* NOT AT END           */
*         &FMIDFND=ON               /* FMID ENTRY FOUND              */
*         &PGCAPPRC<STOPPTF;        /* NO TERMINATING ERRORS         */
         LA    II,1                                                0341
         B     @DE00341                                            0341
@DL00341 DS    0H                                                  0342
*     IF IOPQFMTP(II)=IOPQFMSM      /* CAUSER SUB-ENTRY              */
*       THEN                                                       0342
         LR    @10,II                                              0342
         MH    @10,@CH00820                                        0342
         SLR   @15,@15                                             0342
         IC    @15,IOPQFMTP-9(@10,IOPPTR)                          0342
         CH    @15,@CH00085                                        0342
         BNE   @RF00342                                            0342
*       DO;                                                        0343
*                                                                  0343
*         /***********************************************************/
*         /*                                                         */
*         /* PUT CAUSER SYSMOD-ID INTO GTA FILE(2)                   */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0344
*         CRQCSR=IOPQFMNM(II);      /* PUT CAUSER NAME INTO BUFFER   */
         ALR   @10,IOPPTR                                          0344
         MVC   CRQCSR(7),IOPQFMNM-9(@10)                           0344
*         CALL HMASMGTA(HMASMGTP(2));/* PUT BUFFER TO GTA FILE       */
         L     @15,@CV01641                                        0345
         LA    @01,@AL00345                                        0345
         BALR  @14,@15                                             0345
*       END;                                                       0346
*   END;                                                           0347
*                                                                  0347
@RF00342 AH    II,@CH00085                                         0347
@DE00341 LR    @10,II                                              0347
         MH    @10,@CH00820                                        0347
         SLR   @15,@15                                             0347
         IC    @15,IOPQFMND-9(@10,IOPPTR)                          0347
         CH    @15,@CH01006                                        0347
         BE    @DC00341                                            0347
         TM    FMIDFND,B'10000000'                                 0347
         BNO   @DC00341                                            0347
         L     @10,PGCAPPRC                                        0347
         CH    @10,@CH00110                                        0347
         BL    @DL00341                                            0347
@DC00341 DS    0H                                                  0348
*   /*****************************************************************/
*   /*                                                               */
*   /* SCRATCH THE FMID ENTRY FOR THE SYSMOD PASSED FROM THE (A)CRQ  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0348
*   IF FMIDFND=ON                   /* FMID ENTRY WAS FOUND          */
*     THEN                                                         0348
         TM    FMIDFND,B'10000000'                                 0348
         BNO   @RF00348                                            0348
*     DO;                                                          0349
*       IOPFUNCT=IOPSTOWD;          /* STOW DELETE                   */
         MVI   IOPFUNCT(IOPPTR),X'53'                              0350
*       CALL HMASMIO(HMASMIOP);     /* SCRATCH ENTRY FROM (A)CRQ     */
         ST    IOPPTR,@AL00001                                     0351
         L     @15,@CV01640                                        0351
         LA    @01,@AL00001                                        0351
         BALR  @14,@15                                             0351
*     END;                                                         0352
*                                                                  0353
*   /*****************************************************************/
*   /*                                                               */
*   /* GO THRU ALL CAUSERS IN GTA FILE(2) AND SEE IF ANY OF THE      */
*   /* (A)CRQ CAUSER ENTRIES MAY BE DELETED                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0353
*   GTPFUNCT(2)=GTPOPENN;           /* RE-START GTA FILE(2) FROM TOP */
@RF00348 MVI   GTPFUNCT+28,X'01'                                   0353
*   CALL HMASMGTA(HMASMGTP(2));     /*                               */
         L     @15,@CV01641                                        0354
         LA    @01,@AL00354                                        0354
         BALR  @14,@15                                             0354
*   GTPFUNCT(2)=GTPGETN;            /* SET UP FOR "GET NEXT"         */
         MVI   GTPFUNCT+28,X'08'                                   0355
*   CALL HMASMGTA(HMASMGTP(2));     /* READ FIRST CAUSER RECORD      */
         L     @15,@CV01641                                        0356
         LA    @01,@AL00356                                        0356
         BALR  @14,@15                                             0356
*   DO WHILE GTPRETRN(2)=GTPGOOD    /* GO THRU ALL CAUSERS IN GTA    */
*         &PGCAPPRC<STOPPTF;        /* NO TERMINATING ERRORS         */
*                                                                  0357
         B     @DE00357                                            0357
@DL00357 DS    0H                                                  0358
*     /***************************************************************/
*     /*                                                             */
*     /* CHECK THE CSR ENTRY ON THE (A)CRQ FOR "APPLICABLE" ++IFS    */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0358
*     CALL CHKCSR(CRQCSR,           /* CHECK ++IFS FOR THIS CAUSER   */
*         CHKPARM,                  /* PARAMETER RETURNED            */
*         PGCAPPRC);                /* RETURN CODE PARAMETER         */
         LA    @01,@AL00358                                        0358
         BAL   @14,CHKCSR                                          0358
*     IF CHKPARM=SCRATCH            /* NO APPLICABLE ++IFS IN CAUSER */
*       THEN                                                       0359
         CLI   CHKPARM,C'S'                                        0359
         BNE   @RF00359                                            0359
*       DO;                                                        0360
*                                                                  0360
*         /***********************************************************/
*         /*                                                         */
*         /* CAUSER HAS NO MORE APPLICABLE ++IFS ... DELETE IT       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0361
*         IOPFUNCT=IOPSTOWD;        /* DELETE                        */
         MVI   IOPFUNCT(IOPPTR),X'53'                              0361
*         IOPNAM17=CRQCSR;          /* ... CAUSER SYSMOD-ID          */
         MVC   IOPNAM17(7,IOPPTR),CRQCSR                           0362
*         IOPTYPE=IOPCSR;           /* ... CAUSER-TYPE ENTRY         */
         MVI   IOPTYPE(IOPPTR),X'0F'                               0363
*         CALL HMASMIO(HMASMIOP);                                  0364
         ST    IOPPTR,@AL00001                                     0364
         L     @15,@CV01640                                        0364
         LA    @01,@AL00001                                        0364
         BALR  @14,@15                                             0364
*         PGCAPPRC=MAX(PGCAPPRC,IOPRETRN);/* MAINTAIN RETURN CODE    */
         L     @10,PGCAPPRC                                        0365
         SLR   @03,@03                                             0365
         IC    @03,IOPRETRN(,IOPPTR)                               0365
         CR    @10,@03                                             0365
         BNL   *+6
         LR    @10,@03                                             0365
         ST    @10,PGCAPPRC                                        0365
*       END;                                                       0366
*     CALL HMASMGTA(HMASMGTP(2));   /* GET NEXT CAUSER RECORD        */
@RF00359 L     @15,@CV01641                                        0367
         LA    @01,@AL00367                                        0367
         BALR  @14,@15                                             0367
*   END;                                                           0368
@DE00357 CLI   GTPRETRN+28,0                                       0368
         BNE   @DC00357                                            0368
         L     @10,PGCAPPRC                                        0368
         CH    @10,@CH00110                                        0368
         BL    @DL00357                                            0368
@DC00357 DS    0H                                                  0369
*                                                                  0369
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE GTA FILES                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0369
*   GTPFUNCT(1)=GTPFREE;            /* INDICATE FREE OPERATION       */
         MVI   GTPFUNCT,X'0A'                                      0369
*   CALL HMASMGTA(HMASMGTP(1));     /* CALL SMP GENERAL TABLE MODULE */
         L     @15,@CV01641                                        0370
         LA    @01,@AL00370                                        0370
         BALR  @14,@15                                             0370
*   GTPFUNCT(2)=GTPFREE;            /* INDICATE FREE OPERATION       */
         MVI   GTPFUNCT+28,X'0A'                                   0371
*   CALL HMASMGTA(HMASMGTP(1));     /* CALL SMP GENERAL TABLE MODULE */
         L     @15,@CV01641                                        0372
         LA    @01,@AL00372                                        0372
         BALR  @14,@15                                             0372
*   RETURN CODE(PGCAPPRC);          /* RETURN ... RETURN CODE REG 15 */
         L     @15,PGCAPPRC                                        0373
         L     @14,@SA00002                                        0373
         LM    @00,@12,@SA00002+8                                  0373
         BR    @14                                                 0373
*   END PGCAPP;                                                    0374
*                                                                  0375
*/********************************************************************/
*/*                                                                  */
*/* CHKCSR - CHECK THE (A)CRQ CAUSER ENTRY FOR THE SYSMOD PASSED     */
*/*                                                                  */
*/*          IF ANY OF THE FMIDS WHICH THE CAUSER REFERENCES STILL   */
*/*          EXIST AS FMID ENTRIES ON THE (A)CRQ (I.E., HAVE NOT     */
*/*          BEEN EXPLICITLY DELETED), RETURN 'K' TO THE CALLER      */
*/*          TO INDICATE THAT THERE IS STILL APPLICABLE CONDITIONAL  */
*/*          REQUISITE DATA CONTAINED IN THE (A)CRQ CAUSER ENTRY.    */
*/*                                                                  */
*/*          IF ALL FMIDS WHICH THE CAUSER REFERENCES HAVE BEEN      */
*/*          SCRATCHED FROM THE (A)CRQ, RETURN 'S' TO THE CALLER     */
*/*          TO INDICATE THAT THERE IS NO APPLICABLE CONDITIONAL     */
*/*          REQUISITE DATA CONTAINED IN THE (A)CRQ CAUSER ENTRY.    */
*/*                                                                  */
*/*                                                                  */
*/*          -  GTA FILE(1) IS EXPECTED TO CONTAIN THE SYSMOD-ID'S   */
*/*             OF ALL FMID ENTRIES IN THE (A)CRQ DATASET.           */
*/*                                                                  */
*/********************************************************************/
*                                                                  0375
*CHKCSR:                                                           0375
*   PROC(CHKCSRNM,CHKRPARM,CHKCSRRC);                              0375
CHKCSR   STM   @14,@12,@SA00003                                    0375
         MVC   @PC00003(12),0(@01)                                 0375
*   DCL                                                            0376
*     CHKCSRNM CHAR(7);             /* NAME OF CSR ENTRY TO CHECK    */
*   DCL                                                            0377
*     CHKRPARM CHAR(1);             /* PARAMETER RETURNED ...........
*                                      'K' - KEEP CAUSER ENTRY ......
*                                      'S' - SCRATCH CAUSER ENTRY .. */
*   DCL                                                            0378
*     CHKCSRRC FIXED(31);           /* RETURN CODE                   */
*   DCL                                                            0379
*     1 CHKCFLGS BIT(8),            /* LOCAL FLAGS                   */
*      2 FMIDCRQ BIT(1),            /* CAUSER-REFERENCED FMID NOT  0379
*                                      FOUND AS AN FMID ENTRY        */
*      2 * BIT(7);                  /* UN-USED                       */
*   CHKRPARM=KEEP;                  /* INITIALIZE RETURNED PARM      */
*                                                                  0380
         L     @10,@PC00003+4                                      0380
         MVI   CHKRPARM(@10),C'K'                                  0380
*   /*****************************************************************/
*   /*                                                               */
*   /* LOCATE CAUSER PASSED ON (A)CRQ                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0381
*   IOPFUNCT=IOPLOC;                /* LOCATE                        */
         MVI   IOPFUNCT(IOPPTR),X'03'                              0381
*   IOPNAM17=CHKCSRNM;              /* ... SYSMOD PASSED             */
         L     @10,@PC00003                                        0382
         MVC   IOPNAM17(7,IOPPTR),CHKCSRNM(@10)                    0382
*   IOPTYPE=IOPCSR;                 /* ... AS (A)CRQ CAUSER ENTRY    */
         MVI   IOPTYPE(IOPPTR),X'0F'                               0383
*   CALL HMASMIO(HMASMIOP);                                        0384
         ST    IOPPTR,@AL00001                                     0384
         L     @15,@CV01640                                        0384
         LA    @01,@AL00001                                        0384
         BALR  @14,@15                                             0384
*   IF IOPRETRN>IOPNOTFD            /* TERMINATING ERROR             */
*     THEN                                                         0385
         CLI   IOPRETRN(IOPPTR),4                                  0385
         BNH   @RF00385                                            0385
*     CHKCSRRC=MAX(CHKCSRRC,IOPRETRN);/* MAINTAIN RETURN CODE        */
         L     @10,@PC00003+8                                      0386
         L     @03,CHKCSRRC(,@10)                                  0386
         SLR   @15,@15                                             0386
         IC    @15,IOPRETRN(,IOPPTR)                               0386
         CR    @03,@15                                             0386
         BNL   *+6
         LR    @03,@15                                             0386
         ST    @03,CHKCSRRC(,@10)                                  0386
*   IF IOPRETRN=IOPGOOD             /* SUCCESSFULLY LOCATED          */
*     THEN                                                         0387
@RF00385 CLI   IOPRETRN(IOPPTR),0                                  0387
         BNE   @RF00387                                            0387
*     DO;                                                          0388
*                                                                  0388
*       /*************************************************************/
*       /*                                                           */
*       /* POSITION TO 1ST CAUSER ENTRY RECORD                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0389
*       IOPFUNCT=IOPPOSI;                                          0389
         MVI   IOPFUNCT(IOPPTR),X'02'                              0389
*       CALL HMASMIO(HMASMIOP);                                    0390
         ST    IOPPTR,@AL00001                                     0390
         L     @15,@CV01640                                        0390
         LA    @01,@AL00001                                        0390
         BALR  @14,@15                                             0390
*       CHKCSRRC=MAX(CHKCSRRC,IOPRETRN);/* MAINTAIN RETURN CODE      */
         L     @10,@PC00003+8                                      0391
         L     @03,CHKCSRRC(,@10)                                  0391
         SLR   @15,@15                                             0391
         IC    @15,IOPRETRN(,IOPPTR)                               0391
         CR    @03,@15                                             0391
         BNL   *+6
         LR    @03,@15                                             0391
         ST    @03,CHKCSRRC(,@10)                                  0391
*       IOPFUNCT=IOPREAD;           /* SET UP FOR SEQUENTIAL READ    */
         MVI   IOPFUNCT(IOPPTR),X'01'                              0392
*       CALL HMASMIO(HMASMIOP);     /* READ FIRST RECORD             */
         ST    IOPPTR,@AL00001                                     0393
         L     @15,@CV01640                                        0393
         LA    @01,@AL00001                                        0393
         BALR  @14,@15                                             0393
*       IF IOPRETRN>=STOPPTF        /* TERMINATING ERROR             */
*         THEN                                                     0394
         CLI   IOPRETRN(IOPPTR),8                                  0394
         BL    @RF00394                                            0394
*         CHKCSRRC=MAX(CHKCSRRC,IOPRETRN);/* MAINTAIN RETURN CODE    */
*                                                                  0395
         L     @10,@PC00003+8                                      0395
         L     @03,CHKCSRRC(,@10)                                  0395
         SLR   @15,@15                                             0395
         IC    @15,IOPRETRN(,IOPPTR)                               0395
         CR    @03,@15                                             0395
         BNL   *+6
         LR    @03,@15                                             0395
         ST    @03,CHKCSRRC(,@10)                                  0395
*       /*************************************************************/
*       /*                                                           */
*       /* GO THRU ALL RECORDS AND CHECK THEIR FMIDS                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0396
*       FMIDCRQ=OFF;                /* CSR-REFERENCED FMID NOT FOUND
*                                      AS CRQ FMID ENTRY             */
@RF00394 NI    FMIDCRQ,B'01111111'                                 0396
*       DO WHILE IOPRETRN=IOPGOOD   /* NOT AT END-OF-FILE (OR ERROR) */
*             &CHKCSRRC<STOPPTF     /* NO TERMINATING ERRORS         */
*             &FMIDCRQ=OFF;         /* CSR-REFERENCED FMID NOT FOUND */
         B     @DE00397                                            0397
@DL00397 DS    0H                                                  0398
*         IF IOPQSMFM^=ICTPTFS(1)   /* FMID IS NOT THE SYSMOD BEING
*                                      DELETED                       */
*           THEN                                                   0398
         L     @10,IOPBUFAD(,IOPPTR)                               0398
         L     @03,@PC00001                                        0398
         CLC   IOPQSMFM(7,@10),ICTPTFS(@03)                        0398
         BE    @RF00398                                            0398
*           DO;                                                    0399
*                                                                  0399
*             /*******************************************************/
*             /*                                                     */
*             /* CHECK GTA FILE TO SEE IF FMID IS ON (A)CRQ          */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0400
*             GTPFUNCT(1)=GTPLOC;   /* LOCATE                        */
         MVI   GTPFUNCT,X'03'                                      0400
*             CRQFMID=IOPQSMFM;     /* ... FMID SYSMOD-ID REF'D      */
         MVC   CRQFMID(7),IOPQSMFM(@10)                            0401
*             CALL HMASMGTA(HMASMGTP(1));/* LOCATE IT                */
         L     @15,@CV01641                                        0402
         LA    @01,@AL00402                                        0402
         BALR  @14,@15                                             0402
*             IF GTPRETRN(1)=GTPGOOD/* FOUND                         */
*               THEN                                               0403
         CLI   GTPRETRN,0                                          0403
         BNE   @RF00403                                            0403
*               FMIDCRQ=ON;         /* SET FLAG                      */
         OI    FMIDCRQ,B'10000000'                                 0404
*           END;                                                   0405
@RF00403 DS    0H                                                  0406
*         CALL HMASMIO(HMASMIOP);   /* READ NEXT CAUSER RECORD       */
@RF00398 ST    IOPPTR,@AL00001                                     0406
         L     @15,@CV01640                                        0406
         LA    @01,@AL00001                                        0406
         BALR  @14,@15                                             0406
*         IF IOPRETRN>=STOPPTF      /* ERROR ENCOUNTERED             */
*           THEN                                                   0407
         CLI   IOPRETRN(IOPPTR),8                                  0407
         BL    @RF00407                                            0407
*           CHKCSRRC=MAX(CHKCSRRC,IOPRETRN);                       0408
         L     @10,@PC00003+8                                      0408
         L     @03,CHKCSRRC(,@10)                                  0408
         SLR   @15,@15                                             0408
         IC    @15,IOPRETRN(,IOPPTR)                               0408
         CR    @03,@15                                             0408
         BNL   *+6
         LR    @03,@15                                             0408
         ST    @03,CHKCSRRC(,@10)                                  0408
*       END;                                                       0409
@RF00407 DS    0H                                                  0409
@DE00397 CLI   IOPRETRN(IOPPTR),0                                  0409
         BNE   @DC00397                                            0409
         L     @10,@PC00003+8                                      0409
         L     @10,CHKCSRRC(,@10)                                  0409
         CH    @10,@CH00110                                        0409
         BNL   @DC00397                                            0409
         TM    FMIDCRQ,B'10000000'                                 0409
         BZ    @DL00397                                            0409
@DC00397 DS    0H                                                  0410
*       IF FMIDCRQ=OFF              /* NO REFERENCES TO AN FMID WHICH
*                                      IN STILL IN (A)CRQ            */
*           &CHKCSRRC<STOPPTF       /* NO PROCESSING ERRORS          */
*         THEN                                                     0410
         TM    FMIDCRQ,B'10000000'                                 0410
         BNZ   @RF00410                                            0410
         L     @10,@PC00003+8                                      0410
         L     @10,CHKCSRRC(,@10)                                  0410
         CH    @10,@CH00110                                        0410
         BNL   @RF00410                                            0410
*         CHKRPARM=SCRATCH;         /* SET PARM RETURNED TO CALLER   */
         L     @10,@PC00003+4                                      0411
         MVI   CHKRPARM(@10),C'S'                                  0411
*     END;                                                         0412
*   RETURN;                                                        0413
@EL00003 DS    0H                                                  0413
@EF00003 DS    0H                                                  0413
@ER00003 LM    @14,@12,@SA00003                                    0413
         BR    @14                                                 0413
*   END CHKCSR;                                                    0414
         B     @EL00003                                            0414
*   END HMASMPGC                    /*                               */
*                                                                  0415
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (HMASMCCA)                                       */
*/*%INCLUDE SYSLIB  (HMASMICT)                                       */
*/*%INCLUDE SYSLIB  (HMASMIOP)                                       */
*/*%INCLUDE SYSLIB  (HMASMGTP)                                       */
*                                                                  0415
*       ;                                                          0415
@DATA    DS    0H
@CH00085 DC    H'1'
@CH00110 DC    H'8'
@CH00820 DC    H'9'
@CH01006 DC    H'255'
         DS    0F
@AL00258 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00269 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00275 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00289 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00320 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00370 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00372 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00402 DC    A(HMASMGTP)             LIST WITH   1 ARGUMENT(S)
@AL00345 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00354 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00356 EQU   *                       LIST WITH   1 ARGUMENT(S)
@AL00367 DC    A(HMASMGTP+28)          LIST WITH   1 ARGUMENT(S)
@AL00358 DC    A(CRQCSR)               LIST WITH   3 ARGUMENT(S)
         DC    A(CHKPARM)
         DC    A(PGCAPPRC)
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@SA00002 DS    15F
@SA00003 DS    0F
@PC00003 EQU   @SA00003+60
         DS    18F
@AL00001 DS    1A
@TF00001 DS    F
         DS    0F
@CV01640 DC    V(HMASMIO)
@CV01641 DC    V(HMASMGTA)
         DS    0D
PGCAPPRC DS    F
@TS00001 DS    CL7
         DS    CL1
ICTENDCH DC    X'FFFFFFFF'
PATCHPGC DS    CL80
         ORG   PATCHPGC
@NM00228 DC    80X'FF'
         ORG   PATCHPGC+80
GTAENTRY DS    CL7
CRQFMID  DS    CL7
CRQCSR   DS    CL7
PGCBITS  DS    BL1
         ORG   PGCBITS
GTAFILP  DS    BL1
MATCHSW  EQU   PGCBITS+0
@NM00229 EQU   PGCBITS+0
         ORG   PGCBITS+1
PGCAPPF  DS    BL1
         ORG   PGCAPPF
FMIDFND  DS    BL1
@NM00230 EQU   PGCAPPF+0
         ORG   PGCAPPF+1
CHKPARM  DS    CL1
CHKCFLGS DS    BL1
         ORG   CHKCFLGS
FMIDCRQ  DS    BL1
@NM00231 EQU   CHKCFLGS+0
         ORG   CHKCFLGS+1
         DS    CL3
HMASMGTP DS    CL28
         ORG   HMASMGTP+0
GTPFUNCT DS    FL1
GTPRETRN DS    FL1
@NM00225 DS    CL2
GTPRCDLN DS    FL2
GTPKEYLN DS    FL2
GTPWKAD  DS    AL4
GTPBUFAD DS    AL4
GTPRESTR DS    CL10
         ORG   GTPRESTR+0
GTPPAG   DS    AL4
GTPRCD   DS    AL4
GTPPOS   DS    FL2
         ORG   HMASMGTP+26
GTPFLGS1 DS    BL1
         ORG   GTPFLGS1+0
GTPNOSPM DS    BL1
GTPRCDNF EQU   GTPFLGS1+0
@NM00226 EQU   GTPFLGS1+0
GTPPSIZE EQU   GTPFLGS1+0
         ORG   HMASMGTP+27
@NM00227 DS    FL1
         ORG   HMASMGTP+56
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
II       EQU   @03
I        EQU   @05
K        EQU   @03
J        EQU   @04
D        EQU   @03
HIGHPGC  EQU   @03
IOPPTR   EQU   @02
CCAPTR   EQU   @11
RTNCODE  EQU   @15
RTNREG   EQU   @14
HMASMCCA EQU   0
CCAFBUFR EQU   HMASMCCA+4
CCADSAD  EQU   CCAFBUFR+124
CCATPAD  EQU   CCAFBUFR+128
CCAFLAG7 EQU   CCAFBUFR+132
CCAFIOP  EQU   HMASMCCA+140
CCAIOPTR EQU   CCAFIOP
CCAFSYS  EQU   HMASMCCA+148
CCASREL  EQU   CCAFSYS+12
CCAFLAGA EQU   CCAFSYS+21
CCAFSTA  EQU   HMASMCCA+188
CCAFICT  EQU   HMASMCCA+192
CCAICT   EQU   CCAFICT
CCAICPTF EQU   CCAFICT+4
CCAICMOD EQU   CCAFICT+8
CCAICLMD EQU   CCAFICT+12
CCAFPGM  EQU   HMASMCCA+208
CCABLDLP EQU   CCAFPGM
CCADBLDL EQU   CCAFPGM+4
CCAFGTP  EQU   HMASMCCA+224
CCASEGTP EQU   CCAFGTP
@NM00009 EQU   HMASMCCA+244
CCAFFUNC EQU   HMASMCCA+264
CCAFLAG1 EQU   CCAFFUNC+8
CCAAPPLY EQU   CCAFLAG1
CCAACCPT EQU   CCAFLAG1
CCAFLAG2 EQU   CCAFFUNC+11
CCAFPROC EQU   HMASMCCA+276
CCAFLAG3 EQU   CCAFPROC
CCAFDIS  EQU   HMASMCCA+278
CCAFLAG4 EQU   CCAFDIS
CCAFLAG5 EQU   CCAFDIS+1
CCAFLAG6 EQU   CCAFDIS+2
CCAFCNV  EQU   HMASMCCA+281
CCAFLAG8 EQU   CCAFCNV
CCAFCTL  EQU   HMASMCCA+282
CCAFLAG9 EQU   CCAFCTL
CCAFDSNG EQU   HMASMCCA+298
CCAFLAGB EQU   CCAFDSNG
CCABLDLA EQU   0
@NM00025 EQU   CCABLDLA
CCABLDLL EQU   0
@NM00027 EQU   CCABLDLL
CCALKDRC EQU   @NM00027+20
@NM00029 EQU   CCABLDLL+124
CCAASMRC EQU   @NM00029+20
@NM00031 EQU   CCABLDLL+248
CCACPYRC EQU   @NM00031+20
@NM00033 EQU   CCABLDLL+372
CCACOMRC EQU   @NM00033+20
@NM00035 EQU   CCABLDLL+496
CCAZAPRC EQU   @NM00035+20
@NM00037 EQU   CCABLDLL+620
CCASUPRC EQU   @NM00037+20
@NM00039 EQU   CCABLDLL+744
CCAUPDRC EQU   @NM00039+20
CCABLDLM EQU   0
CCABELMT EQU   CCABLDLM+4
CCABMPOS EQU   CCABELMT
HMASMICT EQU   0
ICTCORE  EQU   HMASMICT
ICTPSPLN EQU   ICTCORE
ICTMSPLN EQU   ICTCORE+4
ICTLSPLN EQU   ICTCORE+8
ICTGMSPL EQU   0
ICTPTF   EQU   0
ICTPTFS  EQU   ICTPTF
ICTPFLG1 EQU   ICTPTF+7
ICTPFLG3 EQU   ICTPTF+8
ICTPPROC EQU   ICTPFLG3
ICTPFLG5 EQU   ICTPTF+9
ICTPFLG6 EQU   ICTPTF+11
ICTPFLF  EQU   ICTPFLG6
ICTPFLG2 EQU   ICTPTF+12
ICTPFLG4 EQU   ICTPTF+13
ICTPDEXP EQU   ICTPFLG4
ICTPFLG8 EQU   ICTPTF+14
ICTPFLG9 EQU   ICTPTF+15
@NM00053 EQU   ICTPFLG9
ICTPFLGA EQU   ICTPTF+16
ICTPUSR1 EQU   ICTPFLGA
ICTPCHN  EQU   ICTPTF+64
ICTPRCHN EQU   ICTPTF+68
ICTPSCHN EQU   ICTPTF+72
ICTPPCHN EQU   ICTPTF+76
ICTPICHN EQU   ICTPTF+80
ICTPNCHN EQU   ICTPTF+84
ICTPVCHN EQU   ICTPTF+88
ICTPDCHN EQU   ICTPTF+92
ICTPBCHN EQU   ICTPTF+96
ICTIXPF  EQU   0
ICTENTLS EQU   0
ICTENTNT EQU   ICTENTLS
ICTENTNM EQU   ICTENTNT
ICTENTST EQU   ICTENTNT+7
ICTREQLS EQU   0
ICTREQNT EQU   ICTREQLS
ICTREQNM EQU   ICTREQNT
ICTREQST EQU   ICTREQNT+7
ICTSUPLS EQU   0
ICTSUPNT EQU   ICTSUPLS
ICTSUPNM EQU   ICTSUPNT
ICTPRELS EQU   0
ICTPRENT EQU   ICTPRELS
ICTPRENM EQU   ICTPRENT
ICTPREST EQU   ICTPRENT+7
ICTIRQLS EQU   0
ICTIRQNT EQU   ICTIRQLS
ICTIRQNM EQU   ICTIRQNT
ICTIRQST EQU   ICTIRQNT+7
ICTCSRST EQU   ICTIRQNT+15
ICTNPRLS EQU   0
ICTNPRNT EQU   ICTNPRLS
ICTNPRNM EQU   ICTNPRNT
ICTVRSLS EQU   0
ICTVRSNT EQU   ICTVRSLS
ICTVRSNM EQU   ICTVRSNT
ICTDELLS EQU   0
ICTDELNT EQU   ICTDELLS
ICTDELNM EQU   ICTDELNT
ICTDELST EQU   ICTDELNT+7
ICTSBYLS EQU   0
ICTSBYNT EQU   ICTSBYLS
ICTSBYNM EQU   ICTSBYNT
ICTMOD   EQU   0
ICTMNAME EQU   ICTMOD
ICTMFLG2 EQU   ICTMOD+8
ICTMFLG1 EQU   ICTMOD+9
ICTMMODR EQU   ICTMFLG1
ICTMFLG3 EQU   ICTMOD+10
ICTMFLG4 EQU   ICTMOD+11
ICTMFLG5 EQU   ICTMOD+12
ICTMODF4 EQU   ICTMOD+13
ICTMLEP1 EQU   ICTMODF4
ICTMODF5 EQU   ICTMOD+14
ICTMLEP2 EQU   ICTMODF5
ICTMODF6 EQU   ICTMOD+15
ICTMLEP3 EQU   ICTMODF6
ICTMODF7 EQU   ICTMOD+16
ICTMLEP4 EQU   ICTMODF7
ICTMACF4 EQU   ICTMOD+17
ICTMCHN  EQU   ICTMOD+100
ICTMICHN EQU   ICTMOD+104
ICTMACHN EQU   ICTMOD+112
ICTMTCHN EQU   ICTMOD+116
ICTMVCHN EQU   ICTMOD+120
ICTMUCHN EQU   ICTMOD+124
ICTIXMF  EQU   0
ICTMIDLS EQU   0
ICTMID   EQU   ICTMIDLS
ICTMODID EQU   ICTMID
ICTMODST EQU   ICTMID+7
ICTASMLS EQU   0
ICTASMAD EQU   ICTASMLS
ICTTALLS EQU   0
ICTTALNM EQU   ICTTALLS
ICTMVRLS EQU   0
ICTMVRNT EQU   ICTMVRLS
ICTMVRNM EQU   ICTMVRNT
ICTMUMLS EQU   0
ICTMUMNT EQU   ICTMUMLS
ICTMUMNM EQU   ICTMUMNT
ICTLMOD  EQU   0
ICTLMNAM EQU   ICTLMOD
ICTLNAME EQU   ICTLMNAM
ICTLFLG4 EQU   ICTLMOD+8
ICTLFLG1 EQU   ICTLMOD+9
ICTLFLG5 EQU   ICTLMOD+10
ICTLFLG6 EQU   ICTLMOD+11
ICTLFLG7 EQU   ICTLMOD+12
ICTLFLG2 EQU   ICTLMOD+13
ICTLFLG3 EQU   ICTLMOD+14
ICTLCHN  EQU   ICTLMOD+34
ICTIXLF  EQU   0
HMASMIOP EQU   0
IOPDSID  EQU   HMASMIOP
IOPFUNCT EQU   HMASMIOP+1
IOPRETRN EQU   HMASMIOP+2
IOPTYPE  EQU   HMASMIOP+3
IOPNAME  EQU   HMASMIOP+4
IOPNAM17 EQU   IOPNAME
@NM00097 EQU   HMASMIOP+12
@NM00098 EQU   @NM00097
IOPDDNAM EQU   HMASMIOP+24
IOPBUFAD EQU   HMASMIOP+52
IOPDRMAP EQU   HMASMIOP+56
IOPINAME EQU   IOPDRMAP
IOPINAM  EQU   IOPINAME
IOPITYP  EQU   IOPINAM
IOPUSERL EQU   IOPDRMAP+11
IOPEND   EQU   IOPDRMAP+12
IOPLMCTL EQU   0
IOPQSMIF EQU   0
@NM00208 EQU   IOPQSMIF
IOPQSMFM EQU   @NM00208
IOPQSMLS EQU   IOPQSMIF+8
IOPQSMNM EQU   IOPQSMLS
IOPBS02  EQU   0
IOPBS04  EQU   0
IOPBAPF  EQU   IOPBS04
CCADSIDA EQU   0
CCATYPEA EQU   0
IOPBS01  EQU   0
IOPBS03  EQU   0
SYSICT   EQU   0
CHKCSRNM EQU   0
CHKRPARM EQU   0
CHKCSRRC EQU   0
IOPUDATA EQU   IOPEND
IOPINAM3 EQU   IOPINAME
@NM00104 EQU   IOPINAM3
IOPSTCMP EQU   IOPUDATA
IOPDYNDT EQU   IOPUDATA
IOPSPACE EQU   IOPDYNDT+44
IOPDTYPE EQU   IOPDYNDT+50
IOPNTMAX EQU   IOPDRMAP
IOPNTMAP EQU   IOPDRMAP
IOPCDMAP EQU   IOPNTMAP
IOPPTMAP EQU   IOPCDMAP
IOPSCMAP EQU   IOPPTMAP
IOPDIRCT EQU   IOPSCMAP+12
IOPCDMAX EQU   IOPDIRCT
IOPCQMAP EQU   IOPDRMAP
@NM00115 EQU   IOPUDATA
@NM00116 EQU   IOPUDATA
IOPASMNT EQU   IOPUDATA
IOPASMDR EQU   IOPASMNT
IOPABUNT EQU   IOPASMDR+1
IOPLMDNT EQU   IOPUDATA
IOPLMDDR EQU   IOPLMDNT
IOPLMLEP EQU   IOPLMDDR+1
IOPLMDF1 EQU   IOPLMLEP
IOPFLGS2 EQU   IOPLMDF1
IOPLMDF2 EQU   IOPLMLEP+1
IOPLMDF3 EQU   IOPLMLEP+2
IOPLMDF4 EQU   IOPLMLEP+3
IOPLMDF5 EQU   IOPLMDDR+5
IOPFLGS3 EQU   IOPLMDF5
IOPLMDFX EQU   IOPLMDNT+24
@NM00125 EQU   IOPLMDFX
IOPLNTRY EQU   IOPLMDFX+8
IOPLSYS  EQU   IOPLNTRY
IOPSYSLB EQU   IOPLSYS
IOPMACNT EQU   IOPUDATA
IOPMACDR EQU   IOPMACNT
IOPRMIDE EQU   IOPMACDR+1
IOPRMST  EQU   IOPRMIDE+7
IOPFMIDE EQU   IOPMACDR+9
IOPMACFX EQU   IOPMACNT+24
IOPBUNT  EQU   IOPMACFX
IOPMCEND EQU   IOPMACNT+104
IOPMACVR EQU   IOPMCEND
IOPMCENT EQU   IOPMACVR
IOPMCDTA EQU   IOPMCENT
IOPMCASM EQU   IOPMCDTA
IOPMACID EQU   IOPMCASM
IOPMACST EQU   IOPMCASM+7
IOPMCIND EQU   IOPMCENT+8
IOPEOFNT EQU   IOPUDATA
IOPSRCNT EQU   IOPUDATA
IOPSRCDR EQU   IOPSRCNT
@NM00136 EQU   IOPSRCDR+1
@NM00138 EQU   @NM00136+7
@NM00142 EQU   IOPSRCDR+9
IOPSRCFX EQU   IOPSRCNT+24
@NM00146 EQU   IOPSRCFX
IOPSREND EQU   IOPSRCNT+104
IOPSRCVR EQU   IOPSREND
IOPSNTRY EQU   IOPSRCVR
IOPSRDTA EQU   IOPSNTRY
IOPSRCID EQU   IOPSRDTA
IOPSRCST EQU   IOPSRDTA+7
IOPMODNT EQU   IOPUDATA
IOPMODDR EQU   IOPMODNT
@NM00152 EQU   IOPMODDR+1
@NM00154 EQU   @NM00152+7
@NM00158 EQU   IOPMODDR+9
IOPMODFX EQU   IOPMODNT+24
@NM00162 EQU   IOPMODFX
IOPMDLEP EQU   IOPMODFX+8
IOPMODF1 EQU   IOPMDLEP
IOPMODF2 EQU   IOPMDLEP+1
IOPMODF3 EQU   IOPMDLEP+2
IOPMODF4 EQU   IOPMDLEP+3
IOPMDEND EQU   IOPMODNT+104
IOPMODVR EQU   IOPMDEND
IOPMNTRY EQU   IOPMODVR
IOPMDDTA EQU   IOPMNTRY
IOPLMODS EQU   IOPMDDTA
IOPMODID EQU   IOPLMODS
IOPMODST EQU   IOPLMODS+7
IOPDLBNT EQU   IOPUDATA
IOPDLBDR EQU   IOPDLBNT
IOPDLBFX EQU   IOPDLBNT+24
@NM00173 EQU   IOPDLBFX
IOPDLEND EQU   IOPDLBNT+104
IOPDLBVR EQU   IOPDLEND
IOPDNTRY EQU   IOPDLBVR
IOPDSYS  EQU   IOPDNTRY
IOPSYSNT EQU   IOPUDATA
IOPSYSDR EQU   IOPSYSNT
IOPSYSF1 EQU   IOPSYSDR+4
IOPFLGS7 EQU   IOPSYSF1
IOPSYSFX EQU   IOPSYSNT+24
@NM00180 EQU   IOPSYSFX
IOPSYEND EQU   IOPSYSNT+184
IOPSYSVR EQU   IOPSYEND
IOPSYSTR EQU   IOPSYSVR
IOPSYNTR EQU   IOPSYSTR
IOPPTFNT EQU   IOPUDATA
IOPPTFDR EQU   IOPPTFNT
IOPPSTAT EQU   IOPPTFDR+2
IOPPTFF1 EQU   IOPPSTAT
IOPFLGS5 EQU   IOPPTFF1
IOPPTFF2 EQU   IOPPSTAT+1
IOPPTFF3 EQU   IOPPSTAT+3
IOPPTFFX EQU   IOPPTFNT+24
@NM00189 EQU   IOPPTFFX
@NM00190 EQU   @NM00189
IOPPDTES EQU   IOPPTFFX+41
@NM00193 EQU   IOPPDTES
IOPPTPFX EQU   IOPPDTES+6
IOPDATES EQU   IOPPTPFX
IOPPTEND EQU   IOPPTFNT+104
IOPPTFVR EQU   IOPPTEND
IOPPNTRY EQU   IOPPTFVR
IOPPMODS EQU   IOPPNTRY
IOPENTNT EQU   IOPUDATA+104
IOPSRLNT EQU   IOPUDATA+104
IOPPRENT EQU   IOPUDATA+104
IOPNPRNT EQU   IOPUDATA+104
IOPSUPNT EQU   IOPUDATA+104
IOPREQNT EQU   IOPUDATA+104
IOPIRQNT EQU   IOPUDATA+104
IOPFIDNT EQU   IOPUDATA+104
IOPDELNT EQU   IOPUDATA+104
IOPVERNT EQU   IOPUDATA+104
IOPSBYNT EQU   IOPUDATA+104
IOPQSMNT EQU   IOPUDATA
IOPQSMDR EQU   IOPQSMNT
IOPQFMNT EQU   IOPUDATA
IOPQFMDR EQU   IOPQFMNT
IOPQFEND EQU   IOPQFMNT+2
IOPQFMVR EQU   IOPQFEND
IOPQFMLS EQU   IOPQFMVR
IOPQFMNM EQU   IOPQFMLS
IOPQFMND EQU   IOPQFMNM
IOPQFMTP EQU   IOPQFMLS+8
IOPPTSYS EQU   IOPUDATA
IOPPTSDR EQU   IOPPTSYS
IOPPTSFX EQU   IOPPTSYS+24
IOPDSSPC EQU   IOPPTSFX
IOPPTFG1 EQU   IOPPTSFX+34
IOPPSEND EQU   IOPPTSYS+1064
IOPPTSVR EQU   IOPPSEND
IOPPTNTR EQU   IOPPTSVR
@NM00218 EQU   IOPPTNTR
IOPPTFMD EQU   @NM00218
IOPPTREL EQU   IOPPTFMD
IOPBPDS  EQU   IOPUDATA
IOPBLEP1 EQU   IOPBPDS+8
IOPBLEP2 EQU   IOPBPDS+9
@NM00222 EQU   IOPBPDS+18
IOPBFTB0 EQU   @NM00222
IOPBFTB1 EQU   IOPBFTB0
ICTENDIX EQU   ICTENDCH
ICTENDNT EQU   ICTENDCH
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
IOPBCEND EQU   IOPBPDS+21
IOPBFTB3 EQU   IOPBFTB0+2
IOPBFTB2 EQU   IOPBFTB0+1
@NM00224 EQU   IOPBFTB1
IOPBAPFP EQU   IOPBFTB1
IOPBSSI  EQU   IOPBFTB1
IOPBPAGA EQU   IOPBFTB1
@NM00223 EQU   IOPBFTB1
IOPBAOSL EQU   IOPBFTB1
IOPBSEPA EQU   IOPBPDS+15
IOPBFTBL EQU   IOPBPDS+13
IOPBSTOR EQU   IOPBPDS+10
IOPBREFR EQU   IOPBLEP2
IOPBLEF  EQU   IOPBLEP2
IOPBTEST EQU   IOPBLEP2
IOPBNE   EQU   IOPBLEP2
@NM00221 EQU   IOPBLEP2
IOPBDC   EQU   IOPBLEP2
@NM00220 EQU   IOPBLEP1
IOPBSCTR EQU   IOPBLEP1
IOPBOL   EQU   IOPBLEP1
@NM00219 EQU   IOPBLEP1
IOPBOVLY EQU   IOPBLEP1
IOPBREUS EQU   IOPBLEP1
IOPBRENT EQU   IOPBLEP1
IOPBNL   EQU   IOPBPDS+7
IOPBTTRN EQU   IOPBPDS+4
IOPBZERO EQU   IOPBPDS+3
IOPBTTRT EQU   IOPBPDS
IOPPTIND EQU   IOPPTNTR+8
IOPPTSND EQU   IOPPTREL
@NM00217 EQU   IOPPTSFX+872
IOPSYZPP EQU   IOPPTSFX+772
IOPSYZPR EQU   IOPPTSFX+771
IOPSYZPS EQU   IOPPTSFX+763
IOPSYZAP EQU   IOPPTSFX+755
IOPSYUPP EQU   IOPPTSFX+655
IOPSYUPR EQU   IOPPTSFX+654
IOPSYUPS EQU   IOPPTSFX+646
IOPSYUPD EQU   IOPPTSFX+638
IOPSYSPP EQU   IOPPTSFX+538
IOPSYSPR EQU   IOPPTSFX+537
IOPSYSPS EQU   IOPPTSFX+529
IOPSYSUP EQU   IOPPTSFX+521
IOPSYLKP EQU   IOPPTSFX+421
IOPSYLKR EQU   IOPPTSFX+420
IOPSYLKS EQU   IOPPTSFX+412
IOPSYLKD EQU   IOPPTSFX+404
IOPSYCPP EQU   IOPPTSFX+304
IOPSYCPR EQU   IOPPTSFX+303
IOPSYCPS EQU   IOPPTSFX+295
IOPSYCPY EQU   IOPPTSFX+287
IOPSYCOP EQU   IOPPTSFX+187
IOPSYCOR EQU   IOPPTSFX+186
IOPSYCOS EQU   IOPPTSFX+178
IOPSYCOM EQU   IOPPTSFX+170
IOPSYASP EQU   IOPPTSFX+70
IOPSYASR EQU   IOPPTSFX+69
IOPSYASS EQU   IOPPTSFX+61
IOPSYASM EQU   IOPPTSFX+53
@NM00216 EQU   IOPPTSFX+35
@NM00215 EQU   IOPPTFG1
IOPPTSNJ EQU   IOPPTFG1
IOPPTSNP EQU   IOPPTFG1
IOPSYPLN EQU   IOPPTSFX+32
IOPDSPFX EQU   IOPPTSFX+6
IOPDSDIR EQU   IOPDSSPC+4
IOPDSSEC EQU   IOPDSSPC+2
IOPDSPRM EQU   IOPDSSPC
@NM00214 EQU   IOPPTSDR+4
IOPPTPEM EQU   IOPPTSDR+2
IOPPCNVL EQU   IOPPTSDR+1
@NM00213 EQU   IOPPTSDR
@NM00212 EQU   IOPQFMLS+7
@NM00211 EQU   IOPQFMDR
@NM00207 EQU   IOPQSMDR
@NM00206 EQU   IOPSBYNT+8
IOPSBYST EQU   IOPSBYNT+7
IOPSBYNM EQU   IOPSBYNT
@NM00205 EQU   IOPVERNT+8
IOPVERST EQU   IOPVERNT+7
IOPVERNM EQU   IOPVERNT
@NM00204 EQU   IOPDELNT+8
IOPDELST EQU   IOPDELNT+7
IOPDELNM EQU   IOPDELNT
@NM00203 EQU   IOPFIDNT+8
IOPFIDST EQU   IOPFIDNT+7
IOPFIDNM EQU   IOPFIDNT
@NM00202 EQU   IOPIRQNT+8
IOPIRQST EQU   IOPIRQNT+7
IOPIRQNM EQU   IOPIRQNT
@NM00201 EQU   IOPREQNT+8
IOPREQST EQU   IOPREQNT+7
IOPREQNM EQU   IOPREQNT
@NM00200 EQU   IOPSUPNT+8
IOPSUPST EQU   IOPSUPNT+7
IOPSUPNM EQU   IOPSUPNT
@NM00199 EQU   IOPNPRNT+8
IOPNPRST EQU   IOPNPRNT+7
IOPNPRNM EQU   IOPNPRNT
@NM00198 EQU   IOPPRENT+8
IOPPREST EQU   IOPPRENT+7
IOPPRENM EQU   IOPPRENT
@NM00197 EQU   IOPSRLNT+8
IOPSRLST EQU   IOPSRLNT+7
@NM00196 EQU   IOPSRLNT+4
IOPSRLNM EQU   IOPSRLNT
@NM00195 EQU   IOPENTNT+8
IOPENTST EQU   IOPENTNT+7
IOPENTNM EQU   IOPENTNT
IOPPIND  EQU   IOPPNTRY+8
IOPPTFND EQU   IOPPMODS
IOPPFMID EQU   IOPPTFFX+73
@NM00194 EQU   IOPPTPFX+24
IOPUCLT  EQU   IOPDATES+21
IOPUCLD  EQU   IOPDATES+18
IOPACCT  EQU   IOPDATES+15
IOPACCD  EQU   IOPDATES+12
IOPRSTT  EQU   IOPDATES+9
IOPRSTD  EQU   IOPDATES+6
IOPAPPT  EQU   IOPDATES+3
IOPAPPD  EQU   IOPDATES
IOPRECT  EQU   @NM00193+3
IOPRECD  EQU   @NM00193
@NM00192 EQU   IOPPTFFX+8
@NM00191 EQU   @NM00189+7
IOPPRELN EQU   @NM00190
@NM00188 EQU   IOPPTFDR+20
IOPSBYNO EQU   IOPPTFDR+13
IOPDBYNO EQU   IOPPTFDR+6
@NM00187 EQU   IOPPTFF3
IOPFLF   EQU   IOPPTFF3
IOPDBYP  EQU   IOPPTFF3
IOPSBYP  EQU   IOPPTFF3
IOPPMDLP EQU   IOPPTFF2+1
IOPPADDP EQU   IOPPTFF2+1
@NM00186 EQU   IOPPTFF2+1
IOPLRFP  EQU   IOPPTFF2
IOPJCLP  EQU   IOPPTFF2
IOPSUPP  EQU   IOPPTFF2
IOPREQP  EQU   IOPPTFF2
IOPPREP  EQU   IOPPTFF2
IOPNPRP  EQU   IOPPTFF2
IOPIRQP  EQU   IOPPTFF2
IOPDELP  EQU   IOPPTFF2
IOPREGEN EQU   IOPFLGS5
IOPBYP   EQU   IOPFLGS5
IOPDUMMP EQU   IOPFLGS5
@NM00185 EQU   IOPFLGS5
IOPERROR EQU   IOPFLGS5
IOPACC   EQU   IOPFLGS5
IOPRES   EQU   IOPFLGS5
IOPAPP   EQU   IOPFLGS5
IOPPTYPE EQU   IOPPTFDR+1
@NM00184 EQU   IOPPTFDR
IOPSYSTP EQU   IOPSYSTR+8
IOPSYSND EQU   IOPSYNTR
@NM00183 EQU   IOPSYSFX+21
IOPSYSID EQU   IOPSYSFX+13
IOPNUCID EQU   IOPSYSFX+12
IOPSREL  EQU   IOPSYSFX+8
@NM00182 EQU   @NM00180+7
@NM00181 EQU   @NM00180
@NM00179 EQU   IOPSYSDR+5
@NM00178 EQU   IOPFLGS7
IOPSYNG  EQU   IOPFLGS7
IOPSYDL  EQU   IOPFLGS7
IOPSTSNP EQU   IOPFLGS7
IOPMTSNP EQU   IOPFLGS7
IOPPEMAX EQU   IOPSYSDR+2
IOPSCNVL EQU   IOPSYSDR+1
@NM00177 EQU   IOPSYSDR
IOPDLIND EQU   IOPDNTRY+8
IOPDLBND EQU   IOPDSYS
@NM00176 EQU   IOPDLBFX+8
@NM00175 EQU   @NM00173+7
@NM00174 EQU   @NM00173
@NM00172 EQU   IOPDLBDR+1
@NM00171 EQU   IOPDLBDR
IOPMDIND EQU   IOPMNTRY+8
@NM00170 EQU   IOPMODST
IOPMODND EQU   IOPMODID
IOPDLIB  EQU   IOPMODFX+72
@NM00169 EQU   IOPMODFX+12
@NM00168 EQU   IOPMODF4
@NM00167 EQU   IOPMODF3
@NM00166 EQU   IOPMODF2
IOPMPAGA EQU   IOPMODF2
IOPMNE   EQU   IOPMODF2
@NM00165 EQU   IOPMODF1
IOPMDC   EQU   IOPMODF1
IOPMREFR EQU   IOPMODF1
IOPMOVLY EQU   IOPMODF1
IOPMSCTR EQU   IOPMODF1
IOPMREUS EQU   IOPMODF1
IOPMRENT EQU   IOPMODF1
IOPMAPF  EQU   IOPMODF1
@NM00164 EQU   @NM00162+7
@NM00163 EQU   @NM00162
@NM00161 EQU   IOPMODDR+17
@NM00160 EQU   @NM00158+7
@NM00159 EQU   @NM00158
@NM00157 EQU   @NM00154
@NM00156 EQU   @NM00154
@NM00155 EQU   @NM00154
@NM00153 EQU   @NM00152
@NM00151 EQU   IOPMODDR
IOPSRIND EQU   IOPSNTRY+8
@NM00150 EQU   IOPSRCST
IOPSRCND EQU   IOPSRCID
IOPSRDLB EQU   IOPSRCFX+72
IOPSRSYS EQU   IOPSRCFX+64
@NM00149 EQU   IOPSRCFX+8
@NM00148 EQU   @NM00146+7
@NM00147 EQU   @NM00146
@NM00145 EQU   IOPSRCDR+18
IOPSRLNG EQU   IOPSRCDR+17
@NM00144 EQU   @NM00142+7
@NM00143 EQU   @NM00142
@NM00141 EQU   @NM00138
@NM00140 EQU   @NM00138
@NM00139 EQU   @NM00138
@NM00137 EQU   @NM00136
@NM00135 EQU   IOPSRCDR
IOPEOFND EQU   IOPEOFNT
IOPMCTYP EQU   IOPMCIND
@NM00134 EQU   IOPMACST
IOPMACND EQU   IOPMACID
IOPMCDLB EQU   IOPMACFX+72
IOPMCSYS EQU   IOPMACFX+64
@NM00133 EQU   IOPMACFX+8
IOPBUTYP EQU   IOPBUNT+7
IOPBUSMD EQU   IOPBUNT
@NM00132 EQU   IOPMACDR+18
IOPMCLNG EQU   IOPMACDR+17
IOPFMST  EQU   IOPFMIDE+7
IOPFMID  EQU   IOPFMIDE
@NM00131 EQU   IOPRMST
IOPRMASM EQU   IOPRMST
@NM00130 EQU   IOPRMST
IOPRMID  EQU   IOPRMIDE
@NM00129 EQU   IOPMACDR
IOPLMIND EQU   IOPLNTRY+8
IOPLMDND EQU   IOPSYSLB
@NM00127 EQU   @NM00125+7
@NM00126 EQU   @NM00125
@NM00124 EQU   IOPLMDDR+6
@NM00123 EQU   IOPFLGS3
IOPCHREP EQU   IOPFLGS3
IOPLINK  EQU   IOPFLGS3
IOPCOPY  EQU   IOPFLGS3
@NM00122 EQU   IOPLMDF4
@NM00121 EQU   IOPLMDF3
@NM00120 EQU   IOPLMDF2
IOPPAGA  EQU   IOPLMDF2
IOPNE    EQU   IOPLMDF2
@NM00119 EQU   IOPFLGS2
IOPDC    EQU   IOPFLGS2
IOPREFR  EQU   IOPFLGS2
IOPOVLY  EQU   IOPFLGS2
IOPSCTR  EQU   IOPFLGS2
IOPREUS  EQU   IOPFLGS2
IOPRENT  EQU   IOPFLGS2
IOPAPF   EQU   IOPFLGS2
@NM00118 EQU   IOPLMDDR
@NM00117 EQU   IOPASMDR+9
IOPABUTP EQU   IOPABUNT+7
IOPABUPT EQU   IOPABUNT
IOPNTLVL EQU   IOPASMDR
IOPALLOC EQU   @NM00116+4
IOPUSED  EQU   @NM00116
IOPTPSEQ EQU   @NM00115+8
IOPVLSER EQU   @NM00115+2
IOPBLKSI EQU   @NM00115
IOPCQMAX EQU   IOPCQMAP+12
@NM00114 EQU   IOPCQMAP+11
@NM00113 EQU   IOPCQMAP+8
@NM00112 EQU   IOPCQMAP
IOPPTMAX EQU   IOPCDMAX
@NM00111 EQU   IOPSCMAP+11
@NM00110 EQU   IOPSCMAP+8
@NM00109 EQU   IOPSCMAP
IOPDIRMX EQU   IOPNTMAX+12
@NM00108 EQU   IOPNTMAX+11
@NM00107 EQU   IOPNTMAX+8
@NM00106 EQU   IOPNTMAX
@NM00105 EQU   IOPDTYPE
IOPDMOD  EQU   IOPDTYPE
IOPDJCL  EQU   IOPDTYPE
IOPDSRC  EQU   IOPDTYPE
IOPDMAC  EQU   IOPDTYPE
IOPSDIR  EQU   IOPSPACE+4
IOPSSCND EQU   IOPSPACE+2
IOPSPRIM EQU   IOPSPACE
IOPDSN   EQU   IOPDYNDT
IOPNTYPE EQU   IOPSTCMP+17
IOPNNAME EQU   IOPSTCMP+9
IOPOTYPE EQU   IOPSTCMP+8
IOPONAME EQU   IOPSTCMP
IOPISEQ3 EQU   IOPINAM3+6
IOPITYP3 EQU   @NM00104+5
IOPIPTF3 EQU   @NM00104
IOPBS04E EQU   IOPBS04+2
IOPBAPFC EQU   IOPBAPF+1
IOPBAPFL EQU   IOPBAPF
IOPBS2NM EQU   IOPBS02+3
IOPBS2EP EQU   IOPBS02
IOPQSMTP EQU   IOPQSMLS+8
@NM00210 EQU   IOPQSMLS+7
IOPQSMND EQU   IOPQSMNM
@NM00209 EQU   @NM00208+7
@NM00128 EQU   IOPLMCTL+17
IOPLMCRD EQU   IOPLMCTL+9
IOPLMCRN EQU   IOPLMCTL+1
IOPLMCC  EQU   IOPLMCTL
@NM00103 EQU   IOPUSERL
@NM00102 EQU   IOPUSERL
IOPALIS  EQU   IOPUSERL
IOPTTR   EQU   IOPDRMAP+8
IOPINAM2 EQU   IOPINAM+1
IOPITYP2 EQU   IOPITYP
@NM00101 EQU   HMASMIOP+32
IOPDELDD EQU   IOPDDNAM
@NM00100 EQU   @NM00097+10
IOPSEQNO EQU   @NM00097+8
@NM00099 EQU   @NM00098+7
IOPPTFNM EQU   @NM00098
ICTIXL   EQU   ICTIXLF
@NM00096 EQU   ICTLMOD+38
ICTLTTR  EQU   ICTLMOD+31
ICTTG2   EQU   ICTLMOD+23
ICTTG1   EQU   ICTLMOD+15
@NM00095 EQU   ICTLFLG3
ICTLZAP  EQU   ICTLFLG3
ICTLLKD  EQU   ICTLFLG3
ICTLCPY  EQU   ICTLFLG3
ICTLXPND EQU   ICTLFLG3
ICTTIND2 EQU   ICTLFLG3
ICTTIND1 EQU   ICTLFLG3
@NM00094 EQU   ICTLFLG2
ICTLDEL  EQU   ICTLFLG2
@NM00093 EQU   ICTLFLG2
ICTLTDEL EQU   ICTLFLG2
ICTLINK  EQU   ICTLFLG2
ICTCOPY  EQU   ICTLFLG2
@NM00092 EQU   ICTLFLG7
@NM00091 EQU   ICTLFLG6
@NM00090 EQU   ICTLFLG5
ICTLPAGA EQU   ICTLFLG5
ICTLNE   EQU   ICTLFLG5
@NM00089 EQU   ICTLFLG1
ICTLDC   EQU   ICTLFLG1
ICTLREFR EQU   ICTLFLG1
ICTLOVLY EQU   ICTLFLG1
ICTLSCTR EQU   ICTLFLG1
ICTLREUS EQU   ICTLFLG1
ICTLRENT EQU   ICTLFLG1
ICTLAPF  EQU   ICTLFLG1
@NM00088 EQU   ICTLFLG4
ICTLPASS EQU   ICTLFLG4
ICTLDDCK EQU   ICTLFLG4
ICTLMSG  EQU   ICTLFLG4
ICTLCPL  EQU   ICTLFLG4
ICTLNOGO EQU   ICTLFLG4
ICTLPROC EQU   ICTLFLG4
ICTLEND  EQU   ICTLNAME
@NM00087 EQU   ICTMUMNT+7
ICTMUMND EQU   ICTMUMNM
@NM00086 EQU   ICTMVRNT+7
ICTMVRND EQU   ICTMVRNM
ICTTALND EQU   ICTTALNM
ICTASMND EQU   ICTASMAD
ICTMIDTY EQU   ICTMODST
ICTMIDAM EQU   ICTMODST
ICTMIDRG EQU   ICTMODST
ICTMIDF1 EQU   ICTMODST
ICTMIDPL EQU   ICTMODST
ICTMIDPS EQU   ICTMODST
@NM00085 EQU   ICTMODST
ICTMIDND EQU   ICTMODID
ICTIXM   EQU   ICTIXMF
@NM00084 EQU   ICTMOD+128
ICTMICHA EQU   ICTMOD+108
ICTPPTR  EQU   ICTMOD+96
@NM00083 EQU   ICTMOD+95
ICTMFMID EQU   ICTMOD+88
@NM00082 EQU   ICTMOD+87
ICTMRMID EQU   ICTMOD+80
ICTMSSI  EQU   ICTMOD+72
ICTMDOBJ EQU   ICTMOD+64
ICTMSYSL EQU   ICTMOD+56
ICTMDSTL EQU   ICTMOD+48
ICTMASLB EQU   ICTMOD+40
ICTTOLIB EQU   ICTMOD+32
ICTFMLIB EQU   ICTMOD+24
ICTMRELN EQU   ICTMOD+22
@NM00081 EQU   ICTMOD+21
ICTMLANG EQU   ICTMOD+20
@NM00080 EQU   ICTMOD+19
ICTMACF5 EQU   ICTMOD+18
ICTMZMPR EQU   ICTMACF4
ICTMZOMZ EQU   ICTMACF4
ICTMDOAS EQU   ICTMACF4
ICTMXUPD EQU   ICTMACF4
ICTMFXC  EQU   ICTMACF4
ICTMFXBS EQU   ICTMACF4
ICTMHASM EQU   ICTMACF4
ICTMACDL EQU   ICTMACF4
@NM00079 EQU   ICTMLEP4
@NM00078 EQU   ICTMLEP3
@NM00077 EQU   ICTMLEP2
ICTMPAGA EQU   ICTMLEP2
ICTMNE   EQU   ICTMLEP2
@NM00076 EQU   ICTMLEP1
ICTMDC   EQU   ICTMLEP1
ICTMREFR EQU   ICTMLEP1
ICTMOVLY EQU   ICTMLEP1
ICTMSCTR EQU   ICTMLEP1
ICTMREUS EQU   ICTMLEP1
ICTMRENT EQU   ICTMLEP1
ICTMAPF  EQU   ICTMLEP1
@NM00075 EQU   ICTMFLG5
ICTMNORL EQU   ICTMFLG5
ICTMELCK EQU   ICTMFLG5
ICTMCOPY EQU   ICTMFLG5
ICTMPASS EQU   ICTMFLG5
@NM00074 EQU   ICTMFLG4
ICTMTSEL EQU   ICTMFLG4
ICTMDSTE EQU   ICTMFLG4
ICTMMIDE EQU   ICTMFLG4
ICTMASOC EQU   ICTMFLG4
ICTMSELM EQU   ICTMFLG4
ICTMIDEL EQU   ICTMFLG4
ICTMISEL EQU   ICTMFLG4
@NM00073 EQU   ICTMFLG3
ICTMPRMS EQU   ICTMFLG3
ICTMALIS EQU   ICTMFLG3
ICTMWRK  EQU   ICTMFLG3
ICTMTRX  EQU   ICTMFLG3
ICTMRELF EQU   ICTMFLG3
ICTLIBTX EQU   ICTMFLG3
ICTLIBLK EQU   ICTMFLG3
ICTMSRCU EQU   ICTMFLG1
ICTMSRCR EQU   ICTMFLG1
ICTMMACU EQU   ICTMFLG1
ICTMMACR EQU   ICTMFLG1
ICTMXPND EQU   ICTMFLG1
ICTMZAP  EQU   ICTMFLG1
ICTMASM  EQU   ICTMMODR
ICTMMOD  EQU   ICTMMODR
@NM00072 EQU   ICTMFLG2
@NM00071 EQU   ICTMFLG2
ICTMMIDU EQU   ICTMFLG2
ICTMDEL  EQU   ICTMFLG2
ICTMMSG  EQU   ICTMFLG2
ICTMCPL  EQU   ICTMFLG2
ICTMNOGO EQU   ICTMFLG2
ICTMPROC EQU   ICTMFLG2
ICTMEND  EQU   ICTMNAME
@NM00070 EQU   ICTSBYNT+7
ICTSBYND EQU   ICTSBYNM
ICTDELEX EQU   ICTDELST
ICTDELND EQU   ICTDELNM
@NM00069 EQU   ICTVRSNT+7
ICTVRSND EQU   ICTVRSNM
@NM00068 EQU   ICTNPRNT+7
ICTNPRND EQU   ICTNPRNM
@NM00067 EQU   ICTCSRST
@NM00066 EQU   ICTCSRST
ICTCSRF  EQU   ICTCSRST
@NM00065 EQU   ICTCSRST
ICTCSRNM EQU   ICTIRQNT+8
@NM00064 EQU   ICTIRQST
ICTIREQT EQU   ICTIRQST
ICTIREQI EQU   ICTIRQST
ICTIREQB EQU   ICTIRQST
ICTIREQS EQU   ICTIRQST
@NM00063 EQU   ICTIRQST
ICTIRQND EQU   ICTIRQNM
@NM00062 EQU   ICTPREST
ICTPREQT EQU   ICTPREST
ICTPREQI EQU   ICTPREST
ICTPREQB EQU   ICTPREST
ICTPREQS EQU   ICTPREST
@NM00061 EQU   ICTPREST
ICTPREND EQU   ICTPRENM
@NM00060 EQU   ICTSUPNT+7
ICTSUPND EQU   ICTSUPNM
@NM00059 EQU   ICTREQST
ICTRREQT EQU   ICTREQST
ICTRREQI EQU   ICTREQST
ICTRREQB EQU   ICTREQST
ICTRREQS EQU   ICTREQST
@NM00058 EQU   ICTREQST
ICTREQND EQU   ICTREQNM
@NM00057 EQU   ICTENTST
ICTEREQT EQU   ICTENTST
ICTEREQI EQU   ICTENTST
ICTEREQB EQU   ICTENTST
ICTEREQS EQU   ICTENTST
@NM00056 EQU   ICTENTST
ICTENTND EQU   ICTENTNM
ICTIXP   EQU   ICTIXPF
@NM00055 EQU   ICTPTF+100
ICTPTPFX EQU   ICTPTF+38
ICTPRELN EQU   ICTPTF+36
ICTPRECT EQU   ICTPTF+33
ICTPRECD EQU   ICTPTF+30
ICTPVERN EQU   ICTPTF+29
ICTPFMID EQU   ICTPTF+22
ICTPSUPN EQU   ICTPTF+20
ICTPONUM EQU   ICTPTF+18
ICTPTYPE EQU   ICTPTF+17
ICTPUSR8 EQU   ICTPFLGA
ICTPUSR7 EQU   ICTPFLGA
ICTPUSR6 EQU   ICTPFLGA
ICTPUSR5 EQU   ICTPFLGA
ICTPUSR4 EQU   ICTPFLGA
ICTPUSR3 EQU   ICTPFLGA
ICTPUSR2 EQU   ICTPFLGA
ICTPPASS EQU   ICTPUSR1
@NM00054 EQU   @NM00053
ICTPRQBY EQU   @NM00053
ICTPRQOK EQU   @NM00053
ICTPRQCK EQU   @NM00053
@NM00052 EQU   ICTPFLG9
ICTPPDEL EQU   ICTPFLG9
ICTPWRKO EQU   ICTPFLG9
ICTPMSL  EQU   ICTPFLG9
@NM00051 EQU   ICTPFLG8
ICTPDCPL EQU   ICTPFLG8
ICTPECPL EQU   ICTPFLG8
ICTPGCPL EQU   ICTPFLG8
@NM00050 EQU   ICTPFLG4
@NM00049 EQU   ICTPFLG4
@NM00048 EQU   ICTPFLG4
ICTPGELM EQU   ICTPFLG4
ICTPDIMP EQU   ICTPFLG4
ICTPREDO EQU   ICTPFLG4
ICTPCDSE EQU   ICTPFLG4
@NM00047 EQU   ICTPFLG2
ICTPRCND EQU   ICTPFLG2
ICTPTPS  EQU   ICTPFLG2
ICTPTR1  EQU   ICTPFLG2
ICTPVRSP EQU   ICTPFLG2
@NM00046 EQU   ICTPFLG6
ICTFLF   EQU   ICTPFLF
ICTPDBYP EQU   ICTPFLG6
ICTPSBYP EQU   ICTPFLG6
ICTPMDLP EQU   ICTPFLG5+1
ICTPADDP EQU   ICTPFLG5+1
@NM00045 EQU   ICTPFLG5+1
ICTPLRFP EQU   ICTPFLG5
ICTPJCLP EQU   ICTPFLG5
ICTPSUPP EQU   ICTPFLG5
ICTPREQP EQU   ICTPFLG5
ICTPPREP EQU   ICTPFLG5
ICTPNPRP EQU   ICTPFLG5
ICTPIRQP EQU   ICTPFLG5
ICTPDELP EQU   ICTPFLG5
@NM00044 EQU   ICTPFLG3
ICTPSLST EQU   ICTPFLG3
ICTPNOLB EQU   ICTPFLG3
ICTPVERJ EQU   ICTPFLG3
ICTPMSG  EQU   ICTPFLG3
ICTPCPL  EQU   ICTPFLG3
ICTPNOGO EQU   ICTPFLG3
ICTPROCS EQU   ICTPPROC
ICTREGEN EQU   ICTPFLG1
ICTBYP   EQU   ICTPFLG1
ICTDUMMP EQU   ICTPFLG1
@NM00043 EQU   ICTPFLG1
ICTERROR EQU   ICTPFLG1
ICTACC   EQU   ICTPFLG1
ICTRES   EQU   ICTPFLG1
ICTAPP   EQU   ICTPFLG1
ICTPEND  EQU   ICTPTFS
ICTLEN   EQU   ICTGMSPL+1
ICTSP    EQU   ICTGMSPL
ICTLLEN  EQU   ICTLSPLN+1
ICTLSP   EQU   ICTLSPLN
ICTMLEN  EQU   ICTMSPLN+1
ICTMSP   EQU   ICTMSPLN
ICTPLEN  EQU   ICTPSPLN+1
ICTPSP   EQU   ICTPSPLN
CCABMREC EQU   CCABELMT+10
CCABPOS  EQU   CCABMPOS+8
CCABNAME EQU   CCABMPOS
@NM00042 EQU   CCABLDLM+2
@NM00041 EQU   CCABLDLM
CCAUPDPM EQU   @NM00039+24
@NM00040 EQU   @NM00039+21
CCARUPDT EQU   CCAUPDRC
CCAUPDSP EQU   @NM00039+12
CCAUPDTE EQU   @NM00039+8
CCAUPDNM EQU   @NM00039
CCASUPPM EQU   @NM00037+24
@NM00038 EQU   @NM00037+21
CCARSUP  EQU   CCASUPRC
CCASUPSP EQU   @NM00037+12
CCAIOSUP EQU   @NM00037+8
CCASUPNM EQU   @NM00037
CCAZAPPM EQU   @NM00035+24
@NM00036 EQU   @NM00035+21
CCARZAP  EQU   CCAZAPRC
CCAZAPSP EQU   @NM00035+12
CCASPZAP EQU   @NM00035+8
CCAZAPNM EQU   @NM00035
CCACOMPM EQU   @NM00033+24
@NM00034 EQU   @NM00033+21
CCARCOMP EQU   CCACOMRC
CCACOMSP EQU   @NM00033+12
CCACOMRS EQU   @NM00033+8
CCACOMNM EQU   @NM00033
CCACPYPM EQU   @NM00031+24
@NM00032 EQU   @NM00031+21
CCARCOPY EQU   CCACPYRC
CCACPYSP EQU   @NM00031+12
CCACOPY  EQU   @NM00031+8
CCACPYNM EQU   @NM00031
CCAASMPM EQU   @NM00029+24
@NM00030 EQU   @NM00029+21
CCARASM  EQU   CCAASMRC
CCAASMSP EQU   @NM00029+12
CCAASM   EQU   @NM00029+8
CCAASMNM EQU   @NM00029
CCALKDPM EQU   @NM00027+24
@NM00028 EQU   @NM00027+21
CCARLINK EQU   CCALKDRC
CCALKDSP EQU   @NM00027+12
CCALKED  EQU   @NM00027+8
CCALKDNM EQU   @NM00027
CCAPGMPM EQU   @NM00025+24
@NM00026 EQU   @NM00025+21
CCABPGRC EQU   @NM00025+20
CCABPGSP EQU   @NM00025+12
CCABPGAD EQU   @NM00025+8
CCABPGNM EQU   @NM00025
CCAEND   EQU   HMASMCCA+371
@NM00024 EQU   HMASMCCA+309
CCACURDD EQU   CCAFDSNG+3
CCACURDS EQU   CCAFDSNG+2
@NM00023 EQU   CCAFLAGB
CCAOUTNG EQU   CCAFLAGB
CCALOGNG EQU   CCAFLAGB
CCAFMID  EQU   HMASMCCA+291
CCALSTDS EQU   CCAFCTL+8
CCARPTDS EQU   CCAFCTL+7
CCATIME  EQU   CCAFCTL+4
CCADATE  EQU   CCAFCTL+1
@NM00022 EQU   CCAFLAG9
CCARVCAN EQU   CCAFLAG9
CCARVEST EQU   CCAFLAG9
CCAPTSNJ EQU   CCAFLAG9
CCASTSNP EQU   CCAFLAG9
CCAMTSNP EQU   CCAFLAG9
CCAPTSNP EQU   CCAFLAG9
@NM00021 EQU   CCAFLAG8
CCAACDSC EQU   CCAFLAG8
CCACDSC  EQU   CCAFLAG8
@NM00020 EQU   CCAFLAG6
CCAACRUP EQU   CCAFLAG6
CCACRQUP EQU   CCAFLAG6
CCAACDUP EQU   CCAFLAG6
CCACDSUP EQU   CCAFLAG6
@NM00019 EQU   CCAFLAG5
CCAACROS EQU   CCAFLAG5
CCACRQOS EQU   CCAFLAG5
CCAACDOS EQU   CCAFLAG5
CCACDSOS EQU   CCAFLAG5
@NM00018 EQU   CCAFLAG4
CCAACRIS EQU   CCAFLAG4
CCACRQIS EQU   CCAFLAG4
CCAACDIS EQU   CCAFLAG4
CCACDSIS EQU   CCAFLAG4
@NM00017 EQU   CCAFLAG3+1
CCARGNP  EQU   CCAFLAG3+1
CCADISRQ EQU   CCAFLAG3+1
CCAICTOK EQU   CCAFLAG3
CCADELP  EQU   CCAFLAG3
CCACMPRS EQU   CCAFLAG3
CCAZAPP  EQU   CCAFLAG3
CCALINKP EQU   CCAFLAG3
CCACOPYP EQU   CCAFLAG3
CCAASIP  EQU   CCAFLAG3
CCAUPDP  EQU   CCAFLAG3
CCAEOSMP EQU   CCAFLAG2
CCAEOFNC EQU   CCAFLAG2
@NM00016 EQU   CCAFLAG2
CCACHECK EQU   CCAFLAG2
CCATERM  EQU   CCAFLAG2
CCASVCLB EQU   CCAFLAG2
CCANCPTF EQU   CCAFLAG2
@NM00015 EQU   CCAFLAG1+1
CCAUNL   EQU   CCAFLAG1+1
CCARESET EQU   CCAFLAG1+1
CCALOG   EQU   CCAFLAG1+1
CCACNV   EQU   CCAFLAG1+1
CCALIST  EQU   CCAFLAG1
CCAUPDU  EQU   CCAFLAG1
CCAUPDJ  EQU   CCAFLAG1
CCARES   EQU   CCAFLAG1
CCAREJ   EQU   CCAFLAG1
CCAREC   EQU   CCAFLAG1
CCAFUNCT EQU   CCAFFUNC
@NM00014 EQU   @NM00009+18
@NM00013 EQU   @NM00009+16
CCATBLPA EQU   @NM00009+12
@NM00012 EQU   @NM00009+8
@NM00011 EQU   @NM00009+4
@NM00010 EQU   @NM00009
CCAIFGTP EQU   CCAFGTP+16
CCAGTP3  EQU   CCAFGTP+12
CCAGTP2  EQU   CCAFGTP+8
CCAGTP1  EQU   CCAFGTP+4
CCASETAD EQU   CCASEGTP
CCACLST  EQU   CCAFPGM+12
CCASPDCB EQU   CCAFPGM+8
CCARVAD  EQU   CCAFSTA
CCAACDID EQU   CCAFSYS+32
CCACDSID EQU   CCAFSYS+24
CCALNLEN EQU   CCAFSYS+22
@NM00008 EQU   CCAFLAGA
CCAPSYSF EQU   CCAFLAGA
CCAASYSF EQU   CCAFLAGA
CCACSYSF EQU   CCAFLAGA
CCANUCID EQU   CCAFSYS+20
CCAASREL EQU   CCAFSYS+16
CCACSREL EQU   CCASREL
CCAPEMAX EQU   CCAFSYS+10
CCAPGLEN EQU   CCAFSYS+8
CCAIOPAS EQU   CCAFSYS+4
CCAIOPCS EQU   CCAFSYS
CCAPESIZ EQU   CCAFIOP+4
@NM00007 EQU   CCAFLAG7+3
CCALOGP  EQU   CCAFLAG7+2
CCAOUTP  EQU   CCAFLAG7+2
CCASLBP  EQU   CCAFLAG7+2
CCARPTP  EQU   CCAFLAG7+2
CCALISTP EQU   CCAFLAG7+2
CCAJCLP  EQU   CCAFLAG7+2
CCAPTFP  EQU   CCAFLAG7+2
CCATLBP  EQU   CCAFLAG7+2
CCAUT3P  EQU   CCAFLAG7+1
CCAUT2P  EQU   CCAFLAG7+1
CCAUT1P  EQU   CCAFLAG7+1
CCAWK5P  EQU   CCAFLAG7+1
CCAWK4P  EQU   CCAFLAG7+1
CCAWK3P  EQU   CCAFLAG7+1
CCAWK2P  EQU   CCAFLAG7+1
CCAWK1P  EQU   CCAFLAG7+1
CCAACRQP EQU   CCAFLAG7
CCACRQP  EQU   CCAFLAG7
CCASTSP  EQU   CCAFLAG7
CCAMTSP  EQU   CCAFLAG7
CCAPTSP  EQU   CCAFLAG7
CCASCDSP EQU   CCAFLAG7
CCAACDSP EQU   CCAFLAG7
CCACDSP  EQU   CCAFLAG7
@NM00006 EQU   CCAFBUFR+122
@NM00005 EQU   CCAFBUFR+120
@NM00004 EQU   CCAFBUFR+118
CCATBFMX EQU   CCAFBUFR+116
CCA4BFMX EQU   CCAFBUFR+114
CCA3BFMX EQU   CCAFBUFR+112
CCA2BFMX EQU   CCAFBUFR+110
CCA1BFMX EQU   CCAFBUFR+108
CCAXBFMX EQU   CCAFBUFR+106
CCAQBFMX EQU   CCAFBUFR+104
CCASBFMX EQU   CCAFBUFR+102
CCAMBFMX EQU   CCAFBUFR+100
CCAPBFMX EQU   CCAFBUFR+98
CCAVBFMX EQU   CCAFBUFR+96
CCAABFMX EQU   CCAFBUFR+94
CCACBFMX EQU   CCAFBUFR+92
@NM00003 EQU   CCAFBUFR+88
@NM00002 EQU   CCAFBUFR+84
CCA4BFSZ EQU   CCAFBUFR+80
CCATBFSZ EQU   CCAFBUFR+76
CCAWBFSZ EQU   CCAFBUFR+72
CCAQBFSZ EQU   CCAFBUFR+68
CCAPBFSZ EQU   CCAFBUFR+64
CCAVBFSZ EQU   CCAFBUFR+60
CCACBFSZ EQU   CCAFBUFR+56
@NM00001 EQU   CCAFBUFR+52
CCA4BFOA EQU   CCAFBUFR+48
CCA4BFIA EQU   CCAFBUFR+44
CCATBFIA EQU   CCAFBUFR+40
CCAWBFOA EQU   CCAFBUFR+36
CCAWBFIA EQU   CCAFBUFR+32
CCAQBFOA EQU   CCAFBUFR+28
CCAQBFIA EQU   CCAFBUFR+24
CCAPBFOA EQU   CCAFBUFR+20
CCAPBFIA EQU   CCAFBUFR+16
CCAVBFOA EQU   CCAFBUFR+12
CCAVBFIA EQU   CCAFBUFR+8
CCACBFOA EQU   CCAFBUFR+4
CCACBFIA EQU   CCAFBUFR
CCAID    EQU   HMASMCCA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00224 EQU   DELFMID
@RF00238 EQU   @RC00235
@RT00278 EQU   FREEGTP
@RF00387 EQU   @EL00003
@RF00410 EQU   @EL00003
@ENDDATA EQU   *
         END   HMASMPGC,(C'PLS2101',0802,78334)
